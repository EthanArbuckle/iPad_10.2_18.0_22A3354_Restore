void sub_21CE432C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CE432D0(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BDDF7E0]);
}

void sub_21CE432D0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t inited;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_8_10();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_69();
  v12 = v11 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25532F748);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v13);
  v14 = OUTLINED_FUNCTION_7_14();
  a4(v14);
  OUTLINED_FUNCTION_10_9();
  v15(v12, v5);
  swift_storeEnumTagMultiPayload();
  LOBYTE(v20) = 4;
  sub_21CE42D90(v12, a2, a3, (char *)&v20, v4);
  sub_21CDBDA1C(v12, (uint64_t (*)(_QWORD))type metadata accessor for ShareableMusicItem);
  sub_21CDC61CC(v4);
  v17 = v16;
  sub_21CDBDA44(v4, &qword_25532F748);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25532F750);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21D7C8560;
  *(_QWORD *)(inited + 32) = v17;
  v19 = OUTLINED_FUNCTION_16_8(MEMORY[0x24BEE4AF8]);
  sub_21D41DBD8(v19);
  swift_setDeallocating();
  sub_21D1D1034();
  OUTLINED_FUNCTION_9();
}

void sub_21CE43410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CE432D0(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BDDFB58]);
}

void sub_21CE43420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t inited;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_8_10();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_28_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25532F748);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_69();
  v12 = v11 - v10;
  type metadata accessor for MenuContext(0);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v13);
  v14 = OUTLINED_FUNCTION_7_14();
  v15 = a3 + *(int *)(type metadata accessor for MenuConfiguration(v14) + 20);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67330);
  __swift_storeEnumTagSinglePayload(v3, 6, 8, v16);
  sub_21D3C5D80(v15, v3);
  LOBYTE(v15) = v17;
  sub_21CDBDA1C(v3, type metadata accessor for MenuContext);
  if ((v15 & 1) != 0)
    v18 = 4;
  else
    v18 = 6;
  sub_21D7C3564();
  OUTLINED_FUNCTION_10_9();
  v19(v4, v5);
  swift_storeEnumTagMultiPayload();
  LOBYTE(v24) = v18;
  sub_21CE42D90(v4, a2, a3, (char *)&v24, v12);
  sub_21CDBDA1C(v4, (uint64_t (*)(_QWORD))type metadata accessor for ShareableMusicItem);
  sub_21CDC61CC(v12);
  v21 = v20;
  sub_21CDBDA44(v12, &qword_25532F748);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25532F750);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21D7C8560;
  *(_QWORD *)(inited + 32) = v21;
  v23 = OUTLINED_FUNCTION_16_8(MEMORY[0x24BEE4AF8]);
  sub_21D41DBD8(v23);
  swift_setDeallocating();
  sub_21D1D1034();
  OUTLINED_FUNCTION_9();
}

void sub_21CE435DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CE432D0(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BDDEE48]);
}

void sub_21CE435EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CE432D0(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BDDF938]);
}

void sub_21CE435FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CE432D0(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BDDEFB0]);
}

void sub_21CE4360C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;

  OUTLINED_FUNCTION_8_10();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_28_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25532F748);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_69();
  v11 = v10 - v9;
  v12 = type metadata accessor for MenuAction();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_69();
  v16 = v15 - v14;
  if (*(_BYTE *)(v4 + *(int *)(OUTLINED_FUNCTION_15_9() + 36)) == 1)
  {
    sub_21CE44090(v4, v3, type metadata accessor for SocialProfileDescriptor);
    swift_storeEnumTagMultiPayload();
    v19 = 4;
    sub_21CE42D90(v3, a2, a3, &v19, v11);
    sub_21CDBDA1C(v3, (uint64_t (*)(_QWORD))type metadata accessor for ShareableMusicItem);
    if (__swift_getEnumTagSinglePayload(v11, 1, v12) == 1)
    {
      sub_21CDBDA44(v11, &qword_25532F748);
    }
    else
    {
      sub_21CDD3198(v11, v16, (uint64_t (*)(_QWORD))type metadata accessor for MenuAction);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25532F788);
      v17 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_21D7C8560;
      sub_21CDD3198(v16, v18 + v17, (uint64_t (*)(_QWORD))type metadata accessor for MenuAction);
    }
  }
  OUTLINED_FUNCTION_9();
}

void sub_21CE437B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CE432D0(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BDDF9A8]);
}

void sub_21CE437C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CE432D0(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BDDFBC0]);
}

void sub_21CE437D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CE432D0(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BE69DF8]);
}

void sub_21CE437E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CE432D0(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BE6A698]);
}

void sub_21CE437F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CE432D0(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BE6A540]);
}

void sub_21CE43804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CE432D0(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BE6A348]);
}

void sub_21CE43814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CE432D0(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BE6A2D0]);
}

void sub_21CE43824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CE432D0(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BDDF680]);
}

void sub_21CE43834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CE432D0(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BE6A1F8]);
}

uint64_t sub_21CE43844(uint64_t a1, uint64_t a2)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v5[5];

  v5[3] = type metadata accessor for ShareMusicItemAction();
  v5[4] = sub_21CE44050();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v5);
  sub_21CE44090(a2, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for ShareMusicItemAction);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F67510);
  sub_21D7C44F4();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
}

void sub_21CE438F0()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F67510);
  OUTLINED_FUNCTION_46(v1);

  OUTLINED_FUNCTION_0();
}

uint64_t sub_21CE4393C()
{
  sub_21CE438F0();
  return swift_deallocClassInstance();
}

uint64_t sub_21CE43960()
{
  return type metadata accessor for ShareMenuActionProvider();
}

uint64_t type metadata accessor for ShareMenuActionProvider()
{
  uint64_t result;

  result = qword_253F62470;
  if (!qword_253F62470)
    return swift_getSingletonMetadata();
  return result;
}

void sub_21CE439A0()
{
  unint64_t v0;

  sub_21CDD2DD8();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_21CE43A24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CE432D0(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BDDF618]);
}

void sub_21CE43A50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CE432D0(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BDDF7E0]);
}

void sub_21CE43A7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CE432D0(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BDDF938]);
}

void sub_21CE43AA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CE432D0(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BE69DF8]);
}

void sub_21CE43AD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CE432D0(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BDDEE48]);
}

void sub_21CE43B00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CE432D0(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BDDFB58]);
}

void sub_21CE43B2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CE432D0(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BDDFBC0]);
}

void sub_21CE43B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CE432D0(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BDDEFB0]);
}

void sub_21CE43B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CE43420(a1, a2, a3);
}

void sub_21CE43BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CE4360C(a1, a2, a3);
}

void sub_21CE43BC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CE432D0(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BDDF9A8]);
}

void sub_21CE43BF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CE432D0(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BE6A698]);
}

void sub_21CE43C1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CE432D0(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BE6A540]);
}

void sub_21CE43C48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CE432D0(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BE6A348]);
}

void sub_21CE43C74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CE432D0(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BE6A2D0]);
}

void sub_21CE43CA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CE432D0(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BDDF680]);
}

void sub_21CE43CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CE432D0(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BE6A1F8]);
}

uint64_t sub_21CE43CF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t);
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(unint64_t);
  uint64_t v14;
  uint64_t v15;
  void (*v16)(unint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v1 = type metadata accessor for ShareMusicItemAction();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v20 = *(_QWORD *)(v2 + 64);
  v4 = sub_21D7C08AC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  swift_release();
  sub_21D7C4314();
  OUTLINED_FUNCTION_45_0();
  v7(v0 + v3);
  v8 = v0 + v3 + *(int *)(v1 + 20);
  v9 = type metadata accessor for ShareableMusicItem();
  if (!OUTLINED_FUNCTION_37_0(v9))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        sub_21D7C3660();
        goto LABEL_28;
      case 1u:
        sub_21D7C37A4();
        goto LABEL_28;
      case 2u:
        sub_21D7C06C0();
        goto LABEL_28;
      case 3u:
        sub_21D7C38B8();
        goto LABEL_28;
      case 4u:
        sub_21D7C045C();
        goto LABEL_28;
      case 5u:
        v10 = sub_21D7C3840();
        if (!OUTLINED_FUNCTION_37_0(v10))
          OUTLINED_FUNCTION_3_12();
        v11 = OUTLINED_FUNCTION_15_9();
        OUTLINED_FUNCTION_1_22();
        OUTLINED_FUNCTION_1_22();
        OUTLINED_FUNCTION_1_22();
        v12 = v8 + *(int *)(v11 + 32);
        OUTLINED_FUNCTION_0_7();
        OUTLINED_FUNCTION_45_0();
        v13(v12);
        type metadata accessor for MusicFriendsInviteDescriptor(0);
        OUTLINED_FUNCTION_1_22();
        OUTLINED_FUNCTION_1_22();
        break;
      case 6u:
        sub_21D7C36C0();
        goto LABEL_28;
      case 7u:
        sub_21D7C0180();
        goto LABEL_28;
      case 8u:
        sub_21D7C30FC();
        goto LABEL_28;
      case 9u:
        sub_21D7C3B58();
        goto LABEL_28;
      case 0xAu:
        sub_21D7C3BAC();
        goto LABEL_28;
      case 0xBu:
        sub_21D7C33F0();
        goto LABEL_28;
      case 0xCu:
        v14 = sub_21D7C3840();
        if (!OUTLINED_FUNCTION_37_0(v14))
          OUTLINED_FUNCTION_3_12();
        v15 = OUTLINED_FUNCTION_15_9();
        OUTLINED_FUNCTION_1_22();
        OUTLINED_FUNCTION_1_22();
        OUTLINED_FUNCTION_1_22();
        v8 += *(int *)(v15 + 32);
        OUTLINED_FUNCTION_0_7();
        goto LABEL_28;
      case 0xDu:
        sub_21D7C3564();
        goto LABEL_28;
      case 0xEu:
        sub_21D7C396C();
        goto LABEL_28;
      case 0xFu:
        sub_21D7C3738();
        goto LABEL_28;
      case 0x10u:
        sub_21D7C07A4();
        goto LABEL_28;
      case 0x11u:
        sub_21D7C0720();
        goto LABEL_28;
      case 0x12u:
        sub_21D7C0690();
        goto LABEL_28;
      case 0x13u:
        sub_21D7C0528();
        goto LABEL_28;
      case 0x14u:
        sub_21D7C0594();
LABEL_28:
        OUTLINED_FUNCTION_45_0();
        v16(v8);
        break;
      default:
        break;
    }
  }
  v17 = v0 + v3 + *(int *)(v1 + 24);
  v18 = OUTLINED_FUNCTION_0_7();
  if (!__swift_getEnumTagSinglePayload(v17, 1, v18))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v3 + v20 + v6) & ~v6), v4);
  return swift_deallocObject();
}

uint64_t sub_21CE43FEC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = type metadata accessor for ShareMusicItemAction();
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  sub_21D7C08AC();
  return sub_21CE43844(*(_QWORD *)(v0 + 16), v0 + v2);
}

unint64_t sub_21CE44050()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255330D30;
  if (!qword_255330D30)
  {
    v1 = type metadata accessor for ShareMusicItemAction();
    result = MEMORY[0x2207938C0](&unk_21D7E4E58, v1);
    atomic_store(result, (unint64_t *)&qword_255330D30);
  }
  return result;
}

void sub_21CE44090(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t (*v3)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_41_0(a1, a2, a3);
  OUTLINED_FUNCTION_10_9();
  OUTLINED_FUNCTION_12_1(v3);
  OUTLINED_FUNCTION_0();
}

uint64_t OUTLINED_FUNCTION_7_14()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_8_10()
{
  return type metadata accessor for ShareableMusicItem();
}

uint64_t OUTLINED_FUNCTION_15_9()
{
  return type metadata accessor for SocialProfileDescriptor(0);
}

uint64_t OUTLINED_FUNCTION_16_8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 128) = a1;
  return sub_21D7C4C20();
}

uint64_t sub_21CE44100()
{
  return swift_initClassMetadata2();
}

uint64_t sub_21CE44168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;

  v10 = OUTLINED_FUNCTION_121_0();
  sub_21CE441D0(a1, a2, a3, a4, a5);
  return v10;
}

_QWORD *sub_21CE441D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = v5;
  v11 = *(_QWORD *)(*v5 + 88);
  v12 = OUTLINED_FUNCTION_5_19(a1, a2, a3, a4);
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v13 + 16))(v5 + 7, a1, v12);
  sub_21CDB66AC(a2, (uint64_t)(v5 + 2));
  v14 = sub_21CE442A0(a1, v11);
  v16 = v15;
  __swift_destroy_boxed_opaque_existential_1(a2);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
  v6[12] = v14;
  v6[13] = v16;
  v6[14] = a3;
  v6[15] = a4;
  v6[16] = a5;
  return v6;
}

uint64_t sub_21CE442A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  v3 = sub_21D7BF9A0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AnyMusicIntentModel(0, a2, v7, v8);
  v11[0] = AnyMusicIntentModel.kind.getter();
  v11[1] = v9;
  sub_21D7C51E4();
  sub_21D7BF994();
  sub_21D7BF97C();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_21D7C51E4();
  swift_bridgeObjectRelease();
  return v11[0];
}

uint64_t sub_21CE44378(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  v4 = *v2;
  v3[18] = *v2;
  v5 = *(_QWORD *)(v4 + 88);
  v3[19] = v5;
  v3[20] = *(_QWORD *)(v5 - 8);
  v3[21] = OUTLINED_FUNCTION_1_8();
  v6 = sub_21D7C0AC8();
  v3[22] = v6;
  v3[23] = *(_QWORD *)(v6 - 8);
  v3[24] = OUTLINED_FUNCTION_1_8();
  v3[25] = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5F390);
  v3[26] = OUTLINED_FUNCTION_1_8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5F2F0);
  v3[27] = OUTLINED_FUNCTION_1_8();
  sub_21D7C546C();
  v3[28] = sub_21D7C5460();
  v3[29] = sub_21D7C5424();
  v3[30] = v7;
  return OUTLINED_FUNCTION_7_0();
}

uint64_t sub_21CE44450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  v6 = (_QWORD *)v4[18];
  v5 = v4[19];
  v7 = v4[17];
  v8 = OUTLINED_FUNCTION_5_19(a1, a2, a3, a4);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v4 + 9, v7 + 56, v8);
  v9 = *(_QWORD *)(v7 + 96);
  v10 = *(_QWORD *)(v7 + 104);
  v11 = v6[14];
  sub_21D617564((uint64_t)(v4 + 9), v9, v10, (uint64_t)(v4 + 2));
  type metadata accessor for IntentNetworkResponseReceiver();
  sub_21D7C4494();
  sub_21D7C4C20();
  sub_21D7C4D64();
  v4[31] = v4[14];
  v12 = OUTLINED_FUNCTION_121_0();
  swift_weakInit();
  v13 = (_QWORD *)OUTLINED_FUNCTION_121_0();
  v13[2] = v6[10];
  v13[3] = v5;
  v13[4] = v6[12];
  v13[5] = v6[13];
  v13[6] = v11;
  v13[7] = v6[15];
  v13[8] = v12;
  swift_retain();
  v4[32] = sub_21D61757C(v9, v10, (uint64_t)sub_21CE44D50, (uint64_t)v13);
  swift_release();
  swift_release();
  if (qword_253F5DF48 != -1)
    swift_once();
  v14 = v4[26];
  v15 = v4[24];
  v16 = v4[22];
  v17 = v4[23];
  v18 = v4[19];
  v19 = v4[17];
  v20 = __swift_project_value_buffer(v4[25], (uint64_t)qword_253F81C78);
  sub_21CE44D80(v20, v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v15, v14, v16);
  sub_21D54AA5C();
  sub_21CE44DC8(v14, &qword_253F5F390);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v19 + 16), *(_QWORD *)(v19 + 40));
  v21 = (_QWORD *)swift_task_alloc();
  v4[33] = v21;
  v23 = type metadata accessor for NetworkRequestingIntent(0, v18, v11, v22);
  v4[34] = v23;
  MEMORY[0x2207938C0](&unk_21D80B944, v23);
  *v21 = v4;
  v21[1] = sub_21CE446D0;
  return sub_21D7C4554();
}

uint64_t sub_21CE446D0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 280) = v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_7_0();
}

uint64_t sub_21CE44728()
{
  uint64_t v0;
  _QWORD *v1;

  sub_21D5205E8();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 288) = v1;
  *v1 = v0;
  v1[1] = sub_21CE44778;
  return sub_21D6175FC();
}

uint64_t sub_21CE44778()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 296) = v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_7_0();
}

uint64_t sub_21CE447D0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 304) = v1;
  *v1 = v0;
  v1[1] = sub_21CE4481C;
  return sub_21D02DEBC();
}

uint64_t sub_21CE4481C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21CE44868()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 120);
  swift_release();
  sub_21CE44DC8(v2, &qword_253F5F2F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v6, v4, v5);
  sub_21D618898();
  OUTLINED_FUNCTION_104();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0 + 16, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16_1();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21CE44944()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  OUTLINED_FUNCTION_6_17();
  sub_21CE44DC8(v1, &qword_253F5F2F0);
  sub_21D618898();
  OUTLINED_FUNCTION_104();
  swift_release();
  OUTLINED_FUNCTION_3_16();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16_1();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_1_29(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_21CE449CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 152);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  OUTLINED_FUNCTION_6_17();
  sub_21CE44DC8(v1, &qword_253F5F2F0);
  sub_21D618898();
  OUTLINED_FUNCTION_104();
  swift_release();
  OUTLINED_FUNCTION_3_16();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16_1();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_1_29(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_21CE44A70(void *a1)
{
  uint64_t result;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    v3 = objc_msgSend(a1, sel_data);
    v4 = sub_21D7BF7D8();
    v6 = v5;

    sub_21D02D728(v4, v6);
    sub_21CDDB4E0(v4, v6);
    return swift_release();
  }
  return result;
}

uint64_t sub_21CE44B30(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 120))(a1, *(_QWORD *)(v1 + 112));
}

unint64_t sub_21CE44B58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_21D7C5A60();
  v0 = swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_10_10(v0, v1, v2, v3);
  AnyMusicIntentModel.kind.getter();
  sub_21D7C51E4();
  swift_bridgeObjectRelease();
  sub_21D7C51E4();
  return 0xD000000000000015;
}

uint64_t sub_21CE44BF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  v5 = OUTLINED_FUNCTION_10_10(v1, v2, v3, v4);
  OUTLINED_FUNCTION_46(v5);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_21CE44C48()
{
  sub_21CE44BF4();
  return swift_deallocClassInstance();
}

void type metadata accessor for IntentUpdate()
{
  JUMPOUT(0x22079380CLL);
}

uint64_t sub_21CE44C74()
{
  return swift_retain();
}

unint64_t sub_21CE44C80()
{
  return sub_21CE44B58();
}

uint64_t sub_21CE44CA0(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 104);
}

uint64_t sub_21CE44CA8(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2207938C0](&unk_21D7CD5E8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_21CE44CD4(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 120);
}

uint64_t sub_21CE44CDC(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2207938C0](&unk_21D7CD610);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_21CE44D08()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_21CE44D2C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21CE44D50(void *a1)
{
  return sub_21CE44A70(a1);
}

uint64_t sub_21CE44D80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5F390);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21CE44DC8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_46(v3);
  return a1;
}

uint64_t OUTLINED_FUNCTION_3_16()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_5_19(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for AnyMusicIntentModel(0, v4, a3, a4);
}

uint64_t OUTLINED_FUNCTION_10_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for AnyMusicIntentModel(0, *(_QWORD *)(v4 + 88), a3, a4);
}

void sub_21CE44E34()
{
  unint64_t v0;

  sub_21CE458D8();
  if (v0 <= 0x3F)
    swift_initClassMetadata2();
}

uint64_t sub_21CE44EB8()
{
  uint64_t result;

  result = sub_21D7C50C4();
  qword_253F81EB0 = result;
  return result;
}

uint64_t sub_21CE44EEC()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_21D7C5C10();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

void *sub_21CE44F3C()
{
  return &unk_24E0E7B58;
}

uint64_t sub_21CE44F48(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6C61626F6C67;
  else
    return 1701273968;
}

void sub_21CE44F74(char *a1, char *a2)
{
  sub_21D735938(*a1, *a2);
}

void sub_21CE44F80()
{
  sub_21D442738();
}

uint64_t sub_21CE44F88()
{
  return sub_21CF83174();
}

void sub_21CE44F90()
{
  sub_21D4435BC();
}

uint64_t sub_21CE44F98@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_21CE44EEC();
  *a1 = result;
  return result;
}

uint64_t sub_21CE44FC4@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_21CE44F48(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_21CE44FEC(_QWORD *a1@<X8>)
{
  *a1 = &unk_24E0E7B58;
}

void sub_21CE44FFC(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6)
{
  char v10;
  char v11;

  v10 = a3 & 1;
  v11 = a4 & 1;
  swift_allocObject();
  sub_21CE4507C(a1, a2, v10, v11, a5, a6);
}

void sub_21CE4507C(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  _QWORD *v17;
  uint64_t v18;

  v13 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 272);
  v14 = sub_21D7C45FC();
  __swift_storeEnumTagSinglePayload(v13, 1, 1, v14);
  if ((a4 & 1) != 0)
  {
    v15 = (void *)objc_opt_self();
    swift_retain();
    v16 = objc_msgSend(v15, sel_defaultCenter);
    swift_release();
    *(_QWORD *)(v6 + *(_QWORD *)(*(_QWORD *)v6 + 288)) = v16;
  }
  else
  {
    sub_21CE45974();
    type metadata accessor for ObjectGraph();
    swift_retain();
    sub_21D7C4D64();
    swift_release();
    *(_QWORD *)(v6 + *(_QWORD *)(*(_QWORD *)v6 + 288)) = v18;
  }
  v17 = (_QWORD *)(v6 + *(_QWORD *)(*(_QWORD *)v6 + 280));
  *v17 = a5;
  v17[1] = a6;
  swift_release();
  sub_21D304BDC(a1, a2, a3 & 1);
}

id sub_21CE451CC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  void *v4;

  v3 = v2[2];
  v2[2] = a1;
  v2[3] = a2;
  swift_retain();
  sub_21CDBD660(v3);
  v4 = *(void **)((char *)v2 + *(_QWORD *)(*v2 + 288));
  if (qword_253F63F90 != -1)
    swift_once();
  return objc_msgSend(v4, sel_addObserver_selector_name_object_, v2, sel_onEventFired_, qword_253F81EB0, 0);
}

id sub_21CE45264()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 288));
  if (qword_253F63F90 != -1)
    swift_once();
  return objc_msgSend(v1, sel_removeObserver_name_object_, v0, qword_253F81EB0, 0);
}

uint64_t sub_21CE452CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[24];
  _BYTE v24[40];

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67558);
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for InvalidationActionIntent(0, a2, a3, v12);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = &v23[-v15];
  v19 = type metadata accessor for AnyMusicIntentModel(0, a2, v17, v18);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v24, a1, v19);
  v20 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 272);
  swift_beginAccess();
  sub_21CE4592C(v20, (uint64_t)v11);
  sub_21D4E6E10((uint64_t)v24, (uint64_t)v11, a2, a3, (uint64_t)v16);
  MEMORY[0x2207938C0](&unk_21D8036B4, v13);
  v21 = MEMORY[0x2207938C0](&unk_21D803698, v13);
  sub_21D6B389C(v13, v21, a4);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v14 + 8))(v16, v13);
}

void sub_21CE45444()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v14;
  int v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD v22[5];
  __int128 v23;
  __int128 v24;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67558);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v19 - v6;
  v8 = sub_21D7C45FC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!sub_21D7BF394())
  {
    v23 = 0u;
    v24 = 0u;
    goto LABEL_11;
  }
  v20 = 1684957547;
  v21 = 0xE400000000000000;
  sub_21D7C5A30();
  sub_21D036554();
  swift_bridgeObjectRelease();
  sub_21CDD5804((uint64_t)v22);
  if (!*((_QWORD *)&v24 + 1))
  {
LABEL_11:
    sub_21CDD5880((uint64_t)&v23, &qword_253F67EB0);
    return;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    v12 = (_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 280));
    if (v22[0] == *v12 && v22[1] == v12[1])
    {
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    v14 = sub_21D7C5D84();
    swift_bridgeObjectRelease();
    if ((v14 & 1) != 0)
    {
LABEL_14:
      if (sub_21D7BF394())
      {
        v20 = 0x617461646174656DLL;
        v21 = 0xE800000000000000;
        sub_21D7C5A30();
        sub_21D036554();
        swift_bridgeObjectRelease();
        sub_21CDD5804((uint64_t)v22);
        if (*((_QWORD *)&v24 + 1))
        {
          v15 = swift_dynamicCast();
          __swift_storeEnumTagSinglePayload((uint64_t)v7, v15 ^ 1u, 1, v8);
          if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8) != 1)
          {
            v16 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
            v16(v11, v7, v8);
            v16(v5, v11, v8);
            __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v8);
            v17 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 272);
            swift_beginAccess();
            sub_21CE459B0((uint64_t)v5, v17);
            v18 = swift_endAccess();
LABEL_21:
            sub_21D304CA8(v18);
            return;
          }
LABEL_20:
          v18 = sub_21CDD5880((uint64_t)v7, &qword_253F67558);
          goto LABEL_21;
        }
      }
      else
      {
        v23 = 0u;
        v24 = 0u;
      }
      sub_21CDD5880((uint64_t)&v23, &qword_253F67EB0);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v8);
      goto LABEL_20;
    }
  }
}

uint64_t sub_21CE45764()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_21D7BF3A0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21D7BF37C();
  swift_retain();
  sub_21CE45444();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_21CE45804()
{
  uint64_t v0;

  sub_21CDD5880(v0 + *(_QWORD *)(*(_QWORD *)v0 + 272), &qword_253F67558);
  swift_bridgeObjectRelease();

}

uint64_t *sub_21CE4584C()
{
  uint64_t *v0;

  v0 = sub_21D304C54();
  sub_21CDD5880((uint64_t)v0 + *(_QWORD *)(*v0 + 272), &qword_253F67558);
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_21CE458AC()
{
  sub_21CE4584C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for InvalidationActionObserver(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for InvalidationActionObserver);
}

void sub_21CE458D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_253F67560)
  {
    sub_21D7C45FC();
    v0 = sub_21D7C5934();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_253F67560);
  }
}

uint64_t sub_21CE4592C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67558);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_21CE45974()
{
  unint64_t result;

  result = qword_253F67B80;
  if (!qword_253F67B80)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_253F67B80);
  }
  return result;
}

uint64_t sub_21CE459B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67558);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for InvalidationActionObserverScope(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21CE45A44 + 4 * byte_21D7CD655[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21CE45A78 + 4 * byte_21D7CD650[v4]))();
}

uint64_t sub_21CE45A78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21CE45A80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21CE45A88);
  return result;
}

uint64_t sub_21CE45A94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21CE45A9CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21CE45AA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21CE45AA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InvalidationActionObserverScope()
{
  return &type metadata for InvalidationActionObserverScope;
}

unint64_t sub_21CE45AC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255330DA0;
  if (!qword_255330DA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255330DA8);
    result = MEMORY[0x2207938C0](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_255330DA0);
  }
  return result;
}

unint64_t sub_21CE45B10()
{
  unint64_t result;

  result = qword_255330DB0[0];
  if (!qword_255330DB0[0])
  {
    result = MEMORY[0x2207938C0](&unk_21D7CD768, &type metadata for InvalidationActionObserverScope);
    atomic_store(result, qword_255330DB0);
  }
  return result;
}

uint64_t MusicPresentationAuthority.presentSheet(appDestination:onDismiss:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21CE45BB8(a1, a2, a3, a4, (uint64_t)&associated type descriptor for MusicAppDestinationPageProvider.SheetDestination, 3, (void (*)(char *, char *, uint64_t, uint64_t))sub_21D2CE56C);
}

uint64_t sub_21CE45B64(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MusicAppDestinationContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t MusicPresentationAuthority.presentFullScreenCover(appDestination:onDismiss:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21CE45BB8(a1, a2, a3, a4, (uint64_t)&associated type descriptor for MusicAppDestinationPageProvider.FullScreenCoverDestination, 2, (void (*)(char *, char *, uint64_t, uint64_t))sub_21D2CE8D8);
}

uint64_t sub_21CE45BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, void (*a7)(char *, char *, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t v19;
  _DWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t, uint64_t);

  v23 = a3;
  v24 = a7;
  v21[1] = a6;
  v22 = a2;
  v9 = type metadata accessor for MusicAppDestinationContext(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for PresentationItem.Destination(0, *(_QWORD *)(a4 + 16), *(_QWORD *)(a4 + 24), v12);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v21 - v15;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(v16, a1, AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  *((_QWORD *)v11 + 4) = 0;
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  v18 = (uint64_t)&v11[*(int *)(v9 + 20)];
  v19 = sub_21D7BF754();
  __swift_storeEnumTagSinglePayload(v18, 1, 1, v19);
  v24(v16, v11, v22, v23);
  sub_21CE45B64((uint64_t)v11);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

Swift::Bool __swiftcall MusicPresentationAuthority.dismiss()()
{
  char v0;

  sub_21D2CEBB0();
  return v0 & 1;
}

uint64_t type metadata accessor for MusicPresentationAuthority(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MusicPresentationAuthority);
}

uint64_t sub_21CE45D5C@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for OpenSocialProfilePageAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_21D7C4314();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    sub_21D7C4C20();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for OpenSocialProfilePageAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_21D7C4314();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for OpenSocialProfilePageAction(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_21D7C4314();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  sub_21D7C4C20();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for OpenSocialProfilePageAction(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21D7C4314();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for OpenSocialProfilePageAction(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_21D7C4314();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for OpenSocialProfilePageAction(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_21D7C4314();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_21CE45FFC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21CE46008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21D7C4314();
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_21CE4607C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21CE46088(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_21D7C4314();
    return __swift_storeEnumTagSinglePayload(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for RemoveFollowerAction()
{
  uint64_t result;

  result = qword_253F61A28;
  if (!qword_253F61A28)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21CE4612C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21D7C4314();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21CE461A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t *v17;
  uint64_t v18;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;

  v28 = a2;
  v30 = a3;
  v31 = sub_21D7C4098();
  v4 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_21D7C4314();
  v25 = *(_QWORD *)(v7 - 8);
  v26 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_21D7C3F6C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v12);
  v29 = a1;
  sub_21D7C3F78();
  v13 = sub_21D7C3F3C();
  v15 = v14;
  v16 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
  OUTLINED_FUNCTION_0_27();
  if (v15)
  {
    v17 = v30;
    *v30 = v13;
    v17[1] = v15;
    sub_21D7C3F78();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v28, v31);
    v18 = v27;
    sub_21D7C42CC();
    OUTLINED_FUNCTION_1_31();
    OUTLINED_FUNCTION_0_27();
    if (v18)
    {
      return swift_bridgeObjectRelease();
    }
    else
    {
      v24 = type metadata accessor for RemoveFollowerAction();
      return (*(uint64_t (**)(char *, char *, uint64_t))(v25 + 32))((char *)v30 + *(int *)(v24 + 20), v9, v26);
    }
  }
  else
  {
    v20 = sub_21D7C4F74();
    sub_21CDED524();
    swift_allocError();
    v22 = v21;
    v23 = type metadata accessor for RemoveFollowerAction();
    *v22 = 0x72506C6169636F73;
    v22[1] = 0xEF4449656C69666FLL;
    v22[2] = v23;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x24BE5E3B8], v20);
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v28, v31);
    return v16(v29, v10);
  }
}

uint64_t sub_21CE4644C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_21CE461A0(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_0_27()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_1_31()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8))(v1, *(_QWORD *)(v2 - 72));
}

uint64_t sub_21CE4647C()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_21CE464B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];
  uint64_t v12;
  _BYTE v13[56];
  uint64_t v14;
  _BYTE v15[88];

  sub_21CE1D8A0(v1, (uint64_t)v13);
  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(v1 + 56);
  v5 = (void *)objc_opt_self();
  swift_retain();
  v12 = MEMORY[0x22078FB7C](objc_msgSend(v5, sel_systemGroupedBackgroundColor));
  v7 = type metadata accessor for SongDetailContentView(0, v4, v3, v6);
  v8 = MEMORY[0x2207938C0](&unk_21D7CD990, v7);
  sub_21D7C1EFC();
  sub_21D7C2298();
  swift_release();
  OUTLINED_FUNCTION_25_5((uint64_t)v13, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8));
  v12 = sub_21D7C28E0();
  OUTLINED_FUNCTION_29_5();
  v9 = OUTLINED_FUNCTION_21_7();
  OUTLINED_FUNCTION_34_5((uint64_t)&qword_253F66B90);
  v11[0] = v8;
  v11[1] = v10;
  MEMORY[0x2207938C0](MEMORY[0x24BDED308], v9, v11);
  sub_21D7C2478();
  swift_release();
  OUTLINED_FUNCTION_25_5((uint64_t)v15, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8));
  OUTLINED_FUNCTION_29_5();
  OUTLINED_FUNCTION_21_7();
  OUTLINED_FUNCTION_34_5((uint64_t)&unk_253F66BB8);
  OUTLINED_FUNCTION_73();
}

uint64_t sub_21CE46668()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(_BYTE *, uint64_t);
  _BYTE v4[88];
  _BYTE v5[184];

  sub_21CDBDBB4((uint64_t)v4, v1, (uint64_t)v5);
  v2 = *(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v1 - 8) + 8);
  v2(v4, v1);
  sub_21CDB6D80((uint64_t)v5, v1, v0);
  return ((uint64_t (*)(_BYTE *, uint64_t))v2)(v5, v1);
}

uint64_t type metadata accessor for SongDetailContentView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SongDetailContentView);
}

uint64_t sub_21CE466E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t OpaqueTypeConformance2;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v48 = a2;
  v3 = sub_21D7C1B9C();
  v47 = *(_QWORD *)(v3 - 8);
  v4 = v3;
  v35 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v46 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v43 = *(_QWORD *)(a1 + 24);
  v44 = v6;
  type metadata accessor for SongDetailHeaderView(255, v6, v43, v7);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66AB8);
  sub_21D7C1344();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66A98);
  sub_21D7C1344();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255330F70);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255330F78);
  swift_getTupleTypeMetadata3();
  v8 = sub_21D7C2E08();
  v41 = v8;
  v40 = MEMORY[0x2207938C0](MEMORY[0x24BDF5428], v8);
  v52 = MEMORY[0x24BEE4078];
  v53 = v8;
  v54 = MEMORY[0x24BEE4088];
  v55 = v40;
  v9 = sub_21D7C2070();
  v42 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v33 - v10;
  v12 = MEMORY[0x2207938C0](MEMORY[0x24BDF1A30], v9);
  v52 = v9;
  v53 = v12;
  v13 = v12;
  v36 = v12;
  v14 = MEMORY[0x220793860](0, &v52, MEMORY[0x24BDF23A8], 0);
  v39 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v33 - v15;
  v52 = v9;
  v53 = v13;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v52 = v14;
  v53 = OpaqueTypeConformance2;
  v18 = MEMORY[0x220793860](0, &v52, MEMORY[0x24BDF31A0], 0);
  v38 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v33 - v19;
  v52 = v14;
  v53 = OpaqueTypeConformance2;
  v34 = swift_getOpaqueTypeConformance2();
  v52 = v18;
  v53 = v4;
  v54 = v34;
  v55 = MEMORY[0x24BDEF958];
  v21 = MEMORY[0x220793860](0, &v52, MEMORY[0x24BDF3A80], 0);
  v37 = *(_QWORD *)(v21 - 8);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v33 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v33 - v25;
  v49 = v44;
  v50 = v43;
  v51 = v45;
  sub_21D7C2064();
  sub_21D7C2358();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v11, v9);
  sub_21D7C261C();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v16, v14);
  v27 = v46;
  sub_21D7C1B90();
  v28 = v35;
  v29 = v34;
  v30 = MEMORY[0x24BDEF958];
  sub_21D7C27F0();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v27, v28);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v20, v18);
  v52 = v18;
  v53 = v28;
  v54 = v29;
  v55 = v30;
  swift_getOpaqueTypeConformance2();
  sub_21CDBDBB4((uint64_t)v24, v21, (uint64_t)v26);
  v31 = *(void (**)(char *, uint64_t))(v37 + 8);
  v31(v24, v21);
  sub_21CDB6D80((uint64_t)v26, v21, v48);
  return ((uint64_t (*)(char *, uint64_t))v31)(v26, v21);
}

uint64_t sub_21CE46B50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  _QWORD v92[3];
  _QWORD v93[3];
  _QWORD v94[10];
  _QWORD __dst[10];
  _QWORD v96[2];
  _QWORD v97[2];
  __int128 v98;
  __int128 v99;
  char v100;

  v68 = a2;
  v69 = a3;
  v88 = a1;
  v85 = a4;
  v6 = type metadata accessor for SongDetailLyricsButton(0);
  MEMORY[0x24BDAC7A8](v6);
  v78 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330F80);
  MEMORY[0x24BDAC7A8](v79);
  v77 = (uint64_t)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330F88);
  MEMORY[0x24BDAC7A8](v84);
  v80 = (uint64_t)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330F70);
  v10 = MEMORY[0x24BDAC7A8](v83);
  v81 = (uint64_t)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v82 = (uint64_t)&v66 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330F90);
  MEMORY[0x24BDAC7A8](v13);
  v76 = (uint64_t *)((char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
  MEMORY[0x24BDAC7A8](v15);
  v72 = (uint64_t)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330F98);
  MEMORY[0x24BDAC7A8](v17);
  v70 = (uint64_t)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for SongDetailList();
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v66 - v23;
  v25 = sub_21D7C3564();
  MEMORY[0x24BDAC7A8](v25);
  v66 = (uint64_t)&v66 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for SongDetailHeaderView(0, a2, a3, v27);
  v71 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v66 - v29;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66AB8);
  v31 = sub_21D7C1344();
  v74 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v67 = (char *)&v66 - v32;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66A98);
  v73 = sub_21D7C1344();
  v75 = *(_QWORD *)(v73 - 8);
  v33 = MEMORY[0x24BDAC7A8](v73);
  v86 = (char *)&v66 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v87 = (uint64_t)&v66 - v35;
  sub_21D1EEE94();
  sub_21D55A580();
  v36 = v70;
  sub_21CDC314C((uint64_t)&v24[*(int *)(v19 + 24)], v70, &qword_255330F98);
  sub_21CDBDA1C((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for SongDetailList);
  sub_21D55A580();
  v37 = v72;
  sub_21CDC314C((uint64_t)&v22[*(int *)(v19 + 32)], v72, &qword_253F60800);
  sub_21CDBDA1C((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for SongDetailList);
  v38 = v76;
  v40 = v68;
  v39 = v69;
  sub_21CE47338(v76);
  sub_21CE4737C((uint64_t)v38, v66, v36, v37, v40, v39, (uint64_t)v30);
  __dst[0] = sub_21D7C28B0();
  v41 = MEMORY[0x2207938C0](&unk_21D7CDB20, v28);
  v42 = v67;
  sub_21D7C24FC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v30, v28);
  sub_21CE553B0((uint64_t)&unk_253F66AB0);
  v98 = 0u;
  v99 = 0u;
  v100 = 0;
  v97[0] = v41;
  v97[1] = v43;
  v44 = MEMORY[0x24BDED308];
  v45 = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v31, v97);
  v46 = (uint64_t)v86;
  sub_21D7C2400();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v42, v31);
  sub_21CE553B0((uint64_t)&unk_253F66A90);
  v96[0] = v45;
  v96[1] = v47;
  v48 = v73;
  v74 = MEMORY[0x2207938C0](v44, v73, v96);
  sub_21CDBDBB4(v46, v48, v87);
  v49 = v75;
  v76 = *(uint64_t **)(v75 + 8);
  ((void (*)(uint64_t, uint64_t))v76)(v46, v48);
  v50 = v88;
  v51 = (uint64_t)v78;
  sub_21D1EEE94();
  v52 = v77;
  sub_21CDD337C(v51, v77, type metadata accessor for SongDetailLyricsButton);
  v53 = v52 + *(int *)(v79 + 36);
  *(_BYTE *)(v53 + 32) = 0;
  *(_OWORD *)v53 = 0u;
  *(_OWORD *)(v53 + 16) = 0u;
  sub_21CDBDA1C(v51, type metadata accessor for SongDetailLyricsButton);
  __dst[0] = sub_21D7C28B0();
  swift_retain();
  v54 = sub_21D7C2B44();
  v55 = v80;
  sub_21CDC314C(v52, v80, &qword_255330F80);
  swift_release();
  *(_QWORD *)(v55 + *(int *)(v84 + 36)) = v54;
  sub_21CDBDA44(v52, &qword_255330F80);
  v56 = v81;
  sub_21CDC314C(v55, v81, &qword_255330F88);
  v57 = v83;
  *(_BYTE *)(v56 + *(int *)(v83 + 36)) = 0;
  sub_21CDBDA44(v55, &qword_255330F88);
  v58 = v82;
  sub_21CDC2FB4(v56, v82, &qword_255330F70);
  sub_21CE1D8A0(v50, (uint64_t)__dst);
  __dst[7] = *(_QWORD *)(v50 + 56);
  swift_retain();
  v59 = sub_21D7C28B0();
  LOBYTE(v54) = sub_21D7C1EFC();
  sub_21CE4D2BC((uint64_t)__dst, (uint64_t)v94);
  v94[8] = v59;
  LOBYTE(v94[9]) = v54;
  sub_21CE4D2F0((uint64_t)__dst);
  memcpy(__dst, v94, 0x49uLL);
  v60 = *(void (**)(char *, uint64_t, uint64_t))(v49 + 16);
  v62 = v86;
  v61 = v87;
  v60(v86, v87, v48);
  v93[0] = v62;
  sub_21CDC314C(v58, v56, &qword_255330F70);
  v93[1] = v56;
  sub_21CDC314C((uint64_t)__dst, (uint64_t)v94, &qword_255330F78);
  v93[2] = v94;
  v92[0] = v48;
  v92[1] = v57;
  v92[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_255330F78);
  v89 = v74;
  v90 = sub_21CE4D31C();
  v91 = sub_21CE4D4C0();
  sub_21D68CC7C((uint64_t)v93, 3, (uint64_t)v92);
  sub_21CDBDA44((uint64_t)__dst, &qword_255330F78);
  sub_21CDBDA44(v58, &qword_255330F70);
  v63 = v61;
  v64 = v76;
  ((void (*)(uint64_t, uint64_t))v76)(v63, v48);
  sub_21CDBDA44((uint64_t)v94, &qword_255330F78);
  sub_21CDBDA44(v56, &qword_255330F70);
  return ((uint64_t (*)(char *, uint64_t))v64)(v62, v48);
}

uint64_t sub_21CE47338@<X0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B80);
  return swift_storeEnumTagMultiPayload();
}

void sub_21CE4737C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v13;
  int *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_21CDC2FB4(a1, a7, &qword_255330F90);
  v14 = (int *)type metadata accessor for SongDetailHeaderView(0, a5, a6, v13);
  v15 = (uint64_t *)(a7 + v14[9]);
  v17 = type metadata accessor for CatalogPagePresenter(0, a5, a6, v16);
  MEMORY[0x2207938C0](&unk_21D7E6F98, v17);
  *v15 = sub_21D7C1500();
  v15[1] = v18;
  v19 = a7 + v14[10];
  v20 = sub_21D7C3564();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19, a2, v20);
  sub_21CDC2FB4(a3, a7 + v14[11], &qword_255330F98);
  sub_21CDC2FB4(a4, a7 + v14[12], &qword_253F60800);
}

uint64_t sub_21CE47480()
{
  uint64_t v0;
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  _OWORD v5[4];
  uint64_t v6;

  v6 = *(_QWORD *)(v0 + 48);
  sub_21CE4D2BC(v0, (uint64_t)v5);
  v1 = (_OWORD *)swift_allocObject();
  v2 = v5[1];
  v1[1] = v5[0];
  v1[2] = v2;
  v3 = v5[3];
  v1[3] = v5[2];
  v1[4] = v3;
  sub_21D7C4C20();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255331378);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255331380);
  sub_21CE553B0((uint64_t)&unk_255331388);
  sub_21CE51EB8();
  sub_21CE5219C();
  return sub_21D7C2BBC();
}

uint64_t sub_21CE47580()
{
  sub_21D7C4C20();
  sub_21D7C2034();
  swift_getKeyPath();
  sub_21D7C1C50();
  sub_21D7C1F20();
  sub_21D7C0CE4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553313A0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553313F0);
  sub_21CE513E4((uint64_t)&unk_255331398);
  sub_21CE520DC();
  return sub_21D7C2BE0();
}

uint64_t sub_21CE476C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  _BYTE __src[88];
  uint64_t KeyPath;
  char v9;
  _BYTE v10[88];
  uint64_t v11;

  sub_21CE521E0(a1, (uint64_t)__src);
  v5 = *(_QWORD *)(a2 + 56);
  KeyPath = swift_getKeyPath();
  v9 = 0;
  memcpy(v10, __src, sizeof(v10));
  v11 = v5;
  sub_21CE52224((uint64_t)&KeyPath, a3);
  *(_OWORD *)(a3 + 112) = 0u;
  *(_OWORD *)(a3 + 128) = 0u;
  *(_BYTE *)(a3 + 144) = 0;
  swift_retain();
  return sub_21CE52260((uint64_t)&KeyPath);
}

void sub_21CE47750(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v21 = a2;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v6 = sub_21D7C3564();
  v7 = *(_QWORD *)(v6 - 8);
  v18 = v6;
  v19 = v7;
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553310E0);
  MEMORY[0x24BDAC7A8](v20);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  sub_21CE47938(v12, v13, (uint64_t)v11);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v15 = v18;
  v14(v9, v2 + *(int *)(a1 + 40), v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1);
  v16 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v12;
  *(_QWORD *)(v17 + 24) = v13;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v17 + v16, (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  sub_21CE5103C();
  sub_21CDF81B4((uint64_t)&unk_255331210);
  sub_21D7C279C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v15);
  sub_21CDBDA44((uint64_t)v11, &qword_2553310E0);
}

void sub_21CE47938(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, char *, uint64_t);
  char *v51;
  uint64_t v52;
  uint64_t KeyPath;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;

  v138 = a3;
  v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331208);
  v5 = MEMORY[0x24BDAC7A8](v132);
  v114 = (char *)&v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v117 = (uint64_t)&v104 - v7;
  v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331218);
  MEMORY[0x24BDAC7A8](v130);
  v131 = (uint64_t)&v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553311D8);
  MEMORY[0x24BDAC7A8](v111);
  v113 = (char *)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553311E8);
  v126 = *(_QWORD *)(v10 - 8);
  v127 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v139 = (char *)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553311C8);
  MEMORY[0x24BDAC7A8](v112);
  v116 = (char *)&v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553311B8);
  v13 = MEMORY[0x24BDAC7A8](v128);
  v115 = (uint64_t)&v104 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v118 = (uint64_t)&v104 - v15;
  v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553311A8);
  MEMORY[0x24BDAC7A8](v136);
  v129 = (char *)&v104 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331220);
  MEMORY[0x24BDAC7A8](v134);
  v135 = (uint64_t)&v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331228);
  MEMORY[0x24BDAC7A8](v125);
  v121 = (char *)&v104 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331230);
  MEMORY[0x24BDAC7A8](v19);
  v124 = (char *)&v104 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331128);
  MEMORY[0x24BDAC7A8](v109);
  v110 = (char *)&v104 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = sub_21D7C1890();
  v137 = *(_QWORD *)(v123 - 8);
  MEMORY[0x24BDAC7A8](v123);
  v122 = (char *)&v104 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331138);
  v119 = *(_QWORD *)(v120 - 8);
  MEMORY[0x24BDAC7A8](v120);
  v24 = (char *)&v104 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331118);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v104 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v104 - v29;
  v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331108);
  MEMORY[0x24BDAC7A8](v133);
  v32 = (char *)&v104 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66B78);
  v34 = MEMORY[0x24BDAC7A8](v33);
  v36 = (char *)&v104 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34);
  v38 = (char *)&v104 - v37;
  type metadata accessor for SongDetailHeaderView(0, a1, a2, v39);
  sub_21D4B6CF4();
  v40 = sub_21D7C1CA4();
  v140 = v38;
  if (__swift_getEnumTagSinglePayload((uint64_t)v38, 1, v40) != 1)
  {
    v105 = v28;
    v106 = v30;
    v108 = v25;
    v107 = v32;
    v41 = v120;
    v42 = (uint64_t)v121;
    sub_21CDC314C((uint64_t)v140, (uint64_t)v36, &qword_253F66B78);
    v43 = *(_QWORD *)(v40 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v43 + 88))(v36, v40) == *MEMORY[0x24BDEFEE8])
    {
      v44 = sub_21D7C3558();
      sub_21CE48594();
      v45 = v41;
      v46 = v108;
      if ((v44 & 1) != 0)
      {
        v47 = v122;
        sub_21D7C1884();
        v48 = (uint64_t)v110;
        v49 = (uint64_t)&v110[*(int *)(v109 + 36)];
        v50 = *(void (**)(uint64_t, char *, uint64_t))(v137 + 16);
        v51 = v24;
        v104 = v24;
        v52 = v123;
        v50(v49, v47, v123);
        __swift_storeEnumTagSinglePayload(v49, 0, 1, v52);
        (*(void (**)(uint64_t, char *, uint64_t))(v119 + 16))(v48, v51, v45);
        KeyPath = swift_getKeyPath();
        v54 = (uint64_t)v124;
        v50((uint64_t)v124, v47, v52);
        __swift_storeEnumTagSinglePayload(v54, 0, 1, v52);
        v55 = (uint64_t)v105;
        v56 = (uint64_t *)&v105[*(int *)(v46 + 36)];
        v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331198);
        sub_21CDC314C(v54, (uint64_t)v56 + *(int *)(v57 + 28), &qword_255331230);
        *v56 = KeyPath;
        sub_21CDC314C(v48, v55, &qword_255331128);
        sub_21CDBDA44(v54, &qword_255331230);
        sub_21CDBDA44(v48, &qword_255331128);
        (*(void (**)(char *, uint64_t))(v137 + 8))(v47, v52);
        (*(void (**)(char *, uint64_t))(v119 + 8))(v104, v45);
        v58 = v55;
        v59 = (uint64_t)v106;
        sub_21CDC2FB4(v58, (uint64_t)v106, &qword_255331118);
        sub_21CDC314C(v59, v42, &qword_255331118);
        swift_storeEnumTagMultiPayload();
        sub_21CE51138();
        sub_21CE51240();
        v60 = (uint64_t)v107;
        sub_21D7C1AAC();
        sub_21CDBDA44(v59, &qword_255331118);
      }
      else
      {
        v103 = v119;
        (*(void (**)(uint64_t, char *, uint64_t))(v119 + 16))(v42, v24, v41);
        swift_storeEnumTagMultiPayload();
        sub_21CE51138();
        sub_21CE51240();
        v60 = (uint64_t)v107;
        sub_21D7C1AAC();
        (*(void (**)(char *, uint64_t))(v103 + 8))(v24, v41);
      }
      v101 = &qword_255331108;
      sub_21CDC314C(v60, v135, &qword_255331108);
      swift_storeEnumTagMultiPayload();
      sub_21CE51114();
      sub_21CE5139C();
      sub_21D7C1AAC();
      v102 = v60;
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v43 + 8))(v36, v40);
  }
  v61 = sub_21D7C3558();
  v62 = v139;
  sub_21CE485F4();
  if ((v61 & 1) != 0)
  {
    v63 = v122;
    sub_21D7C1884();
    v64 = (uint64_t)v113;
    v65 = (uint64_t)&v113[*(int *)(v111 + 36)];
    v66 = v123;
    v67 = *(void (**)(uint64_t, char *, uint64_t))(v137 + 16);
    v67(v65, v63, v123);
    __swift_storeEnumTagSinglePayload(v65, 0, 1, v66);
    v69 = v126;
    v68 = v127;
    (*(void (**)(uint64_t, char *, uint64_t))(v126 + 16))(v64, v62, v127);
    v70 = swift_getKeyPath();
    v71 = (uint64_t)v124;
    v67((uint64_t)v124, v63, v66);
    __swift_storeEnumTagSinglePayload(v71, 0, 1, v66);
    v72 = (uint64_t)v116;
    v73 = (uint64_t *)&v116[*(int *)(v112 + 36)];
    v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331198);
    sub_21CDC314C(v71, (uint64_t)v73 + *(int *)(v74 + 28), &qword_255331230);
    *v73 = v70;
    sub_21CDC314C(v64, v72, &qword_2553311D8);
    sub_21CDBDA44(v71, &qword_255331230);
    sub_21CDBDA44(v64, &qword_2553311D8);
    (*(void (**)(char *, uint64_t))(v137 + 8))(v63, v66);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v139, v68);
    LOBYTE(v70) = sub_21D7C1F08();
    sub_21D7C0CE4();
    v76 = v75;
    v78 = v77;
    v80 = v79;
    v82 = v81;
    v83 = v115;
    sub_21CDC314C(v72, v115, &qword_2553311C8);
    v84 = v83 + *(int *)(v128 + 36);
    *(_BYTE *)v84 = v70;
    *(_QWORD *)(v84 + 8) = v76;
    *(_QWORD *)(v84 + 16) = v78;
    *(_QWORD *)(v84 + 24) = v80;
    *(_QWORD *)(v84 + 32) = v82;
    *(_BYTE *)(v84 + 40) = 0;
    sub_21CDBDA44(v72, &qword_2553311C8);
    v85 = &qword_2553311B8;
    v86 = v118;
    sub_21CDC2FB4(v83, v118, &qword_2553311B8);
    sub_21CDC314C(v86, v131, &qword_2553311B8);
  }
  else
  {
    v88 = sub_21D7C1F08();
    sub_21D7C0CE4();
    v90 = v89;
    v92 = v91;
    v94 = v93;
    v96 = v95;
    v98 = v126;
    v97 = v127;
    v99 = (uint64_t)v114;
    (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v114, v62, v127);
    v100 = v99 + *(int *)(v132 + 36);
    *(_BYTE *)v100 = v88;
    *(_QWORD *)(v100 + 8) = v90;
    *(_QWORD *)(v100 + 16) = v92;
    *(_QWORD *)(v100 + 24) = v94;
    *(_QWORD *)(v100 + 32) = v96;
    *(_BYTE *)(v100 + 40) = 0;
    (*(void (**)(char *, uint64_t))(v98 + 8))(v62, v97);
    v85 = &qword_255331208;
    v86 = v117;
    sub_21CDC2FB4(v99, v117, &qword_255331208);
    sub_21CDC314C(v86, v131, &qword_255331208);
  }
  swift_storeEnumTagMultiPayload();
  sub_21CE513C0();
  sub_21CE515C0();
  v87 = (uint64_t)v129;
  sub_21D7C1AAC();
  sub_21CDBDA44(v86, v85);
  v101 = &qword_2553311A8;
  sub_21CDC314C(v87, v135, &qword_2553311A8);
  swift_storeEnumTagMultiPayload();
  sub_21CE51114();
  sub_21CE5139C();
  sub_21D7C1AAC();
  v102 = v87;
LABEL_12:
  sub_21CDBDA44(v102, v101);
  sub_21CDBDA44((uint64_t)v140, &qword_253F66B78);
}

uint64_t sub_21CE48594()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255331148);
  sub_21CE5125C();
  return sub_21D7C2BF8();
}

uint64_t sub_21CE485F4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553311F8);
  sub_21CE553B0((uint64_t)&unk_2553311F0);
  return sub_21D7C2BF8();
}

uint64_t sub_21CE48674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int EnumTagSinglePayload;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F61B70);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v32 - v12;
  v33 = a4;
  v14 = a4;
  v15 = a5;
  v17 = type metadata accessor for SongDetailHeaderView(0, v14, a5, v16);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v32 - v19;
  sub_21D7C3564();
  sub_21CDF81B4((uint64_t)&unk_255331210);
  v21 = sub_21D7C5094();
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v32 = a3;
  v22(v20, a3, v17);
  if ((v21 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    v29 = v33;
    goto LABEL_5;
  }
  v24 = type metadata accessor for CatalogPagePresenter(0, v33, v15, v23);
  MEMORY[0x2207938C0](&unk_21D7E6F98, v24);
  sub_21D7C14D0();
  sub_21D21FB7C();
  swift_release();
  v25 = type metadata accessor for ToolbarConfiguration(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v25);
  sub_21CDBDA44((uint64_t)v13, &qword_253F61B70);
  result = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  v29 = v33;
  if (EnumTagSinglePayload == 1)
  {
LABEL_5:
    v30 = type metadata accessor for CatalogPagePresenter(0, v29, v15, v28);
    MEMORY[0x2207938C0](&unk_21D7E6F98, v30);
    sub_21D7C14D0();
    sub_21CE48910(v17, (uint64_t)v11);
    v31 = type metadata accessor for ToolbarConfiguration(0);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v31);
    sub_21D21FB90((uint64_t)v11);
    return swift_release();
  }
  return result;
}

void sub_21CE48910(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  char *v30;

  v5 = type metadata accessor for MenuContext(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_21D7BFF04();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v29 - v16;
  v18 = v2 + *(int *)(a1 + 40);
  v19 = sub_21D7C3564();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v17, *MEMORY[0x24BE69558], v11);
  sub_21CDC314C(v2 + *(int *)(a1 + 48), (uint64_t)v10, &qword_253F60800);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67330);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 6, 8, v20);
  v21 = sub_21CE4B1B4(a1);
  v23 = v22;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  v24 = (uint64_t *)(a2 + *(int *)(type metadata accessor for GenericMusicItemToolbarContentProvider(0) + 20));
  v25 = (char *)v24 + *(int *)(type metadata accessor for ToolbarProperties(0) + 20);
  v26 = *MEMORY[0x24BDEE5F0];
  v27 = sub_21D7C17F4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v25, v26, v27);
  *v24 = v21;
  v24[1] = v23;
  sub_21CDC2FB4((uint64_t)v10, a2, &qword_253F60800);
  v28 = (int *)type metadata accessor for GenericMusicItemToolbarContent(0);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a2 + v28[5], v15, v11);
  sub_21CDD3198((uint64_t)v30, a2 + v28[6], type metadata accessor for MenuContext);
  *(_BYTE *)(a2 + v28[7]) = 0;
}

void sub_21CE48B74(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;

  *(_QWORD *)a4 = sub_21D7C1848();
  *(_QWORD *)(a4 + 8) = 0;
  *(_BYTE *)(a4 + 16) = 0;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553312F0);
  sub_21CE48BD4(a1, a2, a3, a4 + *(int *)(v8 + 44));
}

void sub_21CE48BD4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t KeyPath;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v56 = a1;
  v57 = a3;
  v68 = a4;
  v69 = a2;
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553312F8);
  MEMORY[0x24BDAC7A8](v66);
  v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331300);
  v65 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v58 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331308);
  MEMORY[0x24BDAC7A8](v62);
  v59 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331310);
  MEMORY[0x24BDAC7A8](v63);
  v60 = (uint64_t)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331318);
  v10 = MEMORY[0x24BDAC7A8](v64);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v61 = (uint64_t)&v55 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330F90);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (uint64_t *)((char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330F98);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (int *)type metadata accessor for HeaderArtworkView(0);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331260);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v55 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v55 = (uint64_t)&v55 - v27;
  v29 = type metadata accessor for SongDetailHeaderView(0, v69, a3, v28);
  v30 = v56;
  sub_21CDC314C(v56 + *(int *)(v29 + 44), (uint64_t)v19, &qword_255330F98);
  *v16 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B80);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)&v22[v20[5]] = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  sub_21CDC2FB4((uint64_t)v16, (uint64_t)v22, &qword_255330F90);
  sub_21CDC2FB4((uint64_t)v19, (uint64_t)&v22[v20[6]], &qword_255330F98);
  v31 = &v22[v20[7]];
  *(_QWORD *)v31 = swift_getKeyPath();
  v31[8] = 0;
  LOBYTE(v31) = sub_21D7C1F38();
  sub_21D7C0CE4();
  v33 = v32;
  v35 = v34;
  v37 = v36;
  v39 = v38;
  sub_21CDD337C((uint64_t)v22, (uint64_t)v26, type metadata accessor for HeaderArtworkView);
  v40 = &v26[*(int *)(v23 + 36)];
  *v40 = (char)v31;
  *((_QWORD *)v40 + 1) = v33;
  *((_QWORD *)v40 + 2) = v35;
  *((_QWORD *)v40 + 3) = v37;
  *((_QWORD *)v40 + 4) = v39;
  v40[40] = 0;
  sub_21CDBDA1C((uint64_t)v22, type metadata accessor for HeaderArtworkView);
  v41 = v55;
  sub_21CDC2FB4((uint64_t)v26, v55, &qword_255331260);
  *(_QWORD *)v6 = sub_21D7C198C();
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 0;
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331320);
  sub_21CE491D0(v30, v69, v57, (uint64_t)&v6[*(int *)(v42 + 44)]);
  sub_21D7C1F8C();
  sub_21CE553B0((uint64_t)&unk_255331328);
  v43 = v58;
  sub_21D7C22B0();
  sub_21CDBDA44((uint64_t)v6, &qword_2553312F8);
  KeyPath = swift_getKeyPath();
  v45 = v65;
  v46 = (uint64_t)v59;
  v47 = v67;
  (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v59, v43, v67);
  v48 = v46 + *(int *)(v62 + 36);
  *(_QWORD *)v48 = KeyPath;
  *(_QWORD *)(v48 + 8) = 0;
  *(_BYTE *)(v48 + 16) = 1;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v43, v47);
  v49 = v60;
  sub_21CDC314C(v46, v60, &qword_255331308);
  *(_WORD *)(v49 + *(int *)(v63 + 36)) = 256;
  sub_21CDBDA44(v46, &qword_255331308);
  v50 = swift_getKeyPath();
  sub_21CDC314C(v49, (uint64_t)v12, &qword_255331310);
  v51 = &v12[*(int *)(v64 + 36)];
  *(_QWORD *)v51 = v50;
  v51[8] = 0;
  sub_21CDBDA44(v49, &qword_255331310);
  v52 = v61;
  sub_21CDC2FB4((uint64_t)v12, v61, &qword_255331318);
  sub_21CDC314C(v41, (uint64_t)v26, &qword_255331260);
  sub_21CDC314C(v52, (uint64_t)v12, &qword_255331318);
  v53 = v68;
  sub_21CDC314C((uint64_t)v26, v68, &qword_255331260);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331330);
  sub_21CDC314C((uint64_t)v12, v53 + *(int *)(v54 + 48), &qword_255331318);
  sub_21CDBDA44(v52, &qword_255331318);
  sub_21CDBDA44(v41, &qword_255331260);
  sub_21CDBDA44((uint64_t)v12, &qword_255331318);
  sub_21CDBDA44((uint64_t)v26, &qword_255331260);
}

uint64_t sub_21CE491D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int EnumTagSinglePayload;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  int v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331250);
  v76 = *(_QWORD *)(v68 - 8);
  v8 = MEMORY[0x24BDAC7A8](v68);
  v10 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v68 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330F98);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v68 - v17;
  v69 = type metadata accessor for SongDetailHeaderView(0, a2, a3, v19);
  v70 = a1;
  v20 = a1 + *(int *)(v69 + 44);
  sub_21CDC314C(v20, (uint64_t)v18, &qword_255330F98);
  v21 = type metadata accessor for SongDetailListHeaderLockup();
  if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v21) == 1)
  {
    sub_21CDBDA44((uint64_t)v18, &qword_255330F98);
  }
  else
  {
    v22 = (uint64_t *)&v18[*(int *)(v21 + 24)];
    v23 = *v22;
    v24 = v22[1];
    sub_21D7C4C20();
    sub_21CDBDA1C((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for SongDetailListHeaderLockup);
    if (v24)
      goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  v23 = 0;
  v24 = 0xE000000000000000;
LABEL_5:
  v25 = sub_21D7C1F74();
  KeyPath = swift_getKeyPath();
  v74 = sub_21D7C1C38();
  v73 = sub_21D7C1F14();
  sub_21D7C0CE4();
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v34 = v33;
  sub_21CDC314C(v20, (uint64_t)v16, &qword_255330F98);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v21);
  v78 = KeyPath;
  v79 = v25;
  v77 = v24;
  v36 = v23;
  v37 = (uint64_t)v12;
  if (EnumTagSinglePayload == 1)
  {
    v38 = v76;
    v39 = v68;
    sub_21CDBDA44((uint64_t)v16, &qword_255330F98);
    v40 = v69;
LABEL_8:
    swift_bridgeObjectRelease();
    v43 = 0;
    v44 = 0xE000000000000000;
    goto LABEL_9;
  }
  v38 = v76;
  v39 = v68;
  v41 = (uint64_t *)&v16[*(int *)(v21 + 28)];
  v43 = *v41;
  v42 = v41[1];
  sub_21D7C4C20();
  sub_21CDBDA1C((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for SongDetailListHeaderLockup);
  v44 = v42;
  v40 = v69;
  if (!v44)
    goto LABEL_8;
LABEL_9:
  v75 = v44;
  v45 = sub_21D7C2034();
  v70 = swift_getKeyPath();
  LODWORD(v69) = sub_21D7C1C50();
  LODWORD(v68) = sub_21D7C1F14();
  sub_21D7C0CE4();
  v47 = v46;
  v49 = v48;
  v51 = v50;
  v53 = v52;
  v72 = v37;
  sub_21CE49634(v40, v37);
  v54 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 16);
  v54(v10, v37, v39);
  v71 = v36;
  v55 = v77;
  v56 = v78;
  *(_QWORD *)a4 = v36;
  *(_QWORD *)(a4 + 8) = v55;
  v57 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)(a4 + 24) = v57;
  v58 = v57;
  v59 = v79;
  *(_QWORD *)(a4 + 32) = v56;
  *(_QWORD *)(a4 + 40) = v59;
  *(_DWORD *)(a4 + 48) = v74;
  *(_BYTE *)(a4 + 56) = v73;
  *(_QWORD *)(a4 + 64) = v28;
  *(_QWORD *)(a4 + 72) = v30;
  *(_QWORD *)(a4 + 80) = v32;
  *(_QWORD *)(a4 + 88) = v34;
  *(_BYTE *)(a4 + 96) = 0;
  v60 = v75;
  *(_QWORD *)(a4 + 104) = v43;
  *(_QWORD *)(a4 + 112) = v60;
  *(_QWORD *)(a4 + 120) = 0;
  *(_QWORD *)(a4 + 128) = v58;
  *(_QWORD *)(a4 + 136) = v70;
  *(_QWORD *)(a4 + 144) = v45;
  *(_DWORD *)(a4 + 152) = v69;
  *(_BYTE *)(a4 + 160) = v68;
  *(_QWORD *)(a4 + 168) = v47;
  *(_QWORD *)(a4 + 176) = v49;
  *(_QWORD *)(a4 + 184) = v51;
  *(_QWORD *)(a4 + 192) = v53;
  *(_BYTE *)(a4 + 200) = 0;
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331338);
  v54((char *)(a4 + *(int *)(v61 + 64)), (uint64_t)v10, v39);
  v62 = v36;
  v63 = v77;
  v64 = MEMORY[0x24BEE4AF8];
  sub_21CDFDC1C(v62, v77, 0, MEMORY[0x24BEE4AF8]);
  swift_retain();
  swift_retain();
  sub_21CDFDC1C(v43, v60, 0, v64);
  v65 = *(void (**)(uint64_t, uint64_t))(v76 + 8);
  swift_retain();
  swift_retain();
  v65(v72, v39);
  v65((uint64_t)v10, v39);
  v66 = MEMORY[0x24BEE4AF8];
  sub_21CDFDBEC(v43, v60, 0, MEMORY[0x24BEE4AF8]);
  swift_release();
  swift_release();
  sub_21CDFDBEC(v71, v63, 0, v66);
  swift_release();
  return swift_release();
}

void sub_21CE49634(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  char *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD v39[2];
  uint64_t v40;

  v38 = a2;
  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v35 = v5;
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65AD0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330F98);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255331278);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (uint64_t *)((char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331280);
  MEMORY[0x24BDAC7A8](v37);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(int *)(a1 + 44);
  v36 = v2;
  sub_21CDC314C(v2 + v18, (uint64_t)v12, &qword_255330F98);
  v19 = type metadata accessor for SongDetailListHeaderLockup();
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v19) == 1)
  {
    sub_21CDBDA44((uint64_t)v12, &qword_255330F98);
    memset(v39, 0, sizeof(v39));
    v40 = 0;
  }
  else
  {
    sub_21CDC314C((uint64_t)&v12[*(int *)(v19 + 36)], (uint64_t)v39, &qword_253F67430);
    sub_21CDBDA1C((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for SongDetailListHeaderLockup);
  }
  v20 = sub_21D7C0CD8();
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v36, a1);
  v21 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = *(_OWORD *)(a1 + 16);
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v22 + v21, v6, a1);
  v23 = (_QWORD *)((char *)v15 + v13[12]);
  *v23 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B18);
  swift_storeEnumTagMultiPayload();
  v24 = (char *)v15 + v13[13];
  *(_QWORD *)v24 = swift_getKeyPath();
  v24[40] = 0;
  sub_21CDC2FB4((uint64_t)v39, (uint64_t)v15, &qword_253F67430);
  sub_21CDC2FB4((uint64_t)v9, (uint64_t)v15 + v13[11], &qword_253F65AD0);
  v15[5] = sub_21CE519F8;
  v15[6] = v22;
  v15[7] = 0;
  v15[8] = 0;
  v25 = sub_21D7C1EF0();
  if ((sub_21CE4AED4() & 1) != 0 && qword_25532E108 != -1)
    swift_once();
  sub_21D7C0CE4();
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  sub_21CDC314C((uint64_t)v15, (uint64_t)v17, &qword_255331278);
  v34 = &v17[*(int *)(v37 + 36)];
  *v34 = v25;
  *((_QWORD *)v34 + 1) = v27;
  *((_QWORD *)v34 + 2) = v29;
  *((_QWORD *)v34 + 3) = v31;
  *((_QWORD *)v34 + 4) = v33;
  v34[40] = 0;
  sub_21CDBDA44((uint64_t)v15, &qword_255331278);
  sub_21CE51A4C();
  sub_21CE51AD0();
  sub_21D7C22F8();
  sub_21CDBDA44((uint64_t)v17, &qword_255331280);
}

void sub_21CE49A10(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t KeyPath;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v22 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331178);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331168);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331158);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255331238);
  sub_21CE553B0((uint64_t)&unk_255331240);
  *(_QWORD *)v9 = sub_21D68CC78();
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 0;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331248);
  sub_21CE49C3C(a1, a2, v22, &v9[*(int *)(v16 + 44)]);
  KeyPath = swift_getKeyPath();
  sub_21CDC314C((uint64_t)v9, (uint64_t)v12, &qword_255331178);
  v18 = &v12[*(int *)(v10 + 36)];
  *(_QWORD *)v18 = KeyPath;
  *((_QWORD *)v18 + 1) = 0;
  v18[16] = 1;
  sub_21CDBDA44((uint64_t)v9, &qword_255331178);
  sub_21CDC314C((uint64_t)v12, (uint64_t)v15, &qword_255331168);
  *(_WORD *)&v15[*(int *)(v13 + 36)] = 256;
  sub_21CDBDA44((uint64_t)v12, &qword_255331168);
  v19 = swift_getKeyPath();
  sub_21CDC314C((uint64_t)v15, a4, &qword_255331158);
  v20 = a4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255331148) + 36);
  *(_QWORD *)v20 = v19;
  *(_BYTE *)(v20 + 8) = 1;
  sub_21CDBDA44((uint64_t)v15, &qword_255331158);
}

void sub_21CE49C3C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  int *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  int EnumTagSinglePayload;
  uint64_t *v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t KeyPath;
  char *v81;
  int v82;
  uint64_t v83;
  void (*v84)(char *, char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  void (*v144)(char *, uint64_t, uint64_t);
  uint64_t v145;
  char *v146;
  _QWORD *v147;
  int *v148;
  uint64_t v149;
  void (*v150)(uint64_t, uint64_t);
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  _QWORD *v170;
  char *v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;

  v167 = a2;
  v170 = a4;
  v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331250);
  v169 = *(_QWORD *)(v172 - 8);
  v6 = MEMORY[0x24BDAC7A8](v172);
  v171 = (char *)&v151 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v168 = (uint64_t)&v151 - v8;
  v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330170);
  v158 = *(_QWORD *)(v178 - 8);
  v9 = MEMORY[0x24BDAC7A8](v178);
  v163 = (char *)&v151 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v155 = (char *)&v151 - v11;
  v175 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330178);
  v12 = MEMORY[0x24BDAC7A8](v175);
  v164 = (char *)&v151 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v156 = (char *)&v151 - v14;
  v176 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330180);
  v15 = MEMORY[0x24BDAC7A8](v176);
  v165 = (uint64_t)&v151 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v160 = (uint64_t)&v151 - v17;
  v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331258);
  v18 = MEMORY[0x24BDAC7A8](v177);
  v166 = (uint64_t)&v151 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v180 = (uint64_t)&v151 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v162 = (uint64_t)&v151 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v179 = (uint64_t)&v151 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v159 = (uint64_t)&v151 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v181 = (uint64_t)&v151 - v28;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330F90);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (uint64_t *)((char *)&v151 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330F98);
  v33 = MEMORY[0x24BDAC7A8](v32);
  v157 = (uint64_t)&v151 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v33);
  v153 = (uint64_t)&v151 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v38 = (char *)&v151 - v37;
  v39 = (int *)type metadata accessor for HeaderArtworkView(0);
  MEMORY[0x24BDAC7A8](v39);
  v41 = (char *)&v151 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331260);
  MEMORY[0x24BDAC7A8](v151);
  v43 = (char *)&v151 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331268);
  v44 = MEMORY[0x24BDAC7A8](v152);
  v46 = (char *)&v151 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v44);
  v48 = (char *)&v151 - v47;
  v161 = type metadata accessor for SongDetailHeaderView(0, v167, a3, v49);
  v50 = *(int *)(v161 + 44);
  v167 = a1;
  v51 = a1 + v50;
  sub_21CDC314C(a1 + v50, (uint64_t)v38, &qword_255330F98);
  *v31 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B80);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)&v41[v39[5]] = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  sub_21CDC2FB4((uint64_t)v31, (uint64_t)v41, &qword_255330F90);
  sub_21CDC2FB4((uint64_t)v38, (uint64_t)&v41[v39[6]], &qword_255330F98);
  v52 = &v41[v39[7]];
  *(_QWORD *)v52 = swift_getKeyPath();
  v52[8] = 0;
  v53 = sub_21D7C1EF0();
  if (qword_25532E120 != -1)
    swift_once();
  sub_21D7C0CE4();
  v55 = v54;
  v57 = v56;
  v59 = v58;
  v61 = v60;
  sub_21CDD337C((uint64_t)v41, (uint64_t)v43, type metadata accessor for HeaderArtworkView);
  v62 = &v43[*(int *)(v151 + 36)];
  *v62 = v53;
  *((_QWORD *)v62 + 1) = v55;
  *((_QWORD *)v62 + 2) = v57;
  *((_QWORD *)v62 + 3) = v59;
  *((_QWORD *)v62 + 4) = v61;
  v62[40] = 0;
  sub_21CDBDA1C((uint64_t)v41, type metadata accessor for HeaderArtworkView);
  v63 = sub_21D7C1F14();
  sub_21D7C0CE4();
  v65 = v64;
  v67 = v66;
  v69 = v68;
  v71 = v70;
  sub_21CDC314C((uint64_t)v43, (uint64_t)v46, &qword_255331260);
  v72 = &v46[*(int *)(v152 + 36)];
  *v72 = v63;
  *((_QWORD *)v72 + 1) = v65;
  *((_QWORD *)v72 + 2) = v67;
  *((_QWORD *)v72 + 3) = v69;
  *((_QWORD *)v72 + 4) = v71;
  v72[40] = 0;
  sub_21CDBDA44((uint64_t)v43, &qword_255331260);
  sub_21CDC2FB4((uint64_t)v46, (uint64_t)v48, &qword_255331268);
  v73 = v153;
  sub_21CDC314C(v51, v153, &qword_255330F98);
  v74 = type metadata accessor for SongDetailListHeaderLockup();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v73, 1, v74);
  v173 = v48;
  v174 = v46;
  v154 = v51;
  if (EnumTagSinglePayload == 1)
  {
    sub_21CDBDA44(v73, &qword_255330F98);
  }
  else
  {
    v76 = (uint64_t *)(v73 + *(int *)(v74 + 24));
    v78 = *v76;
    v77 = v76[1];
    sub_21D7C4C20();
    sub_21CDBDA1C(v73, (uint64_t (*)(_QWORD))type metadata accessor for SongDetailListHeaderLockup);
    if (v77)
      goto LABEL_7;
  }
  swift_bridgeObjectRelease();
  v78 = 0;
  v77 = 0xE000000000000000;
LABEL_7:
  v79 = sub_21D7C1FF8();
  KeyPath = swift_getKeyPath();
  v182 = v78;
  v183 = v77;
  v184 = 0;
  v185 = MEMORY[0x24BEE4AF8];
  v186 = KeyPath;
  v187 = v79;
  sub_21D7C1F8C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65F38);
  sub_21CDFDB0C();
  v81 = v155;
  sub_21D7C22B0();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v82 = sub_21D7C1C38();
  v83 = v158;
  v84 = *(void (**)(char *, char *, uint64_t))(v158 + 16);
  v85 = (uint64_t)v156;
  v86 = v178;
  v84(v156, v81, v178);
  *(_DWORD *)(v85 + *(int *)(v175 + 36)) = v82;
  v87 = *(void (**)(char *, uint64_t))(v83 + 8);
  v87(v81, v86);
  LOBYTE(v82) = sub_21D7C1F14();
  sub_21D7C0CE4();
  v89 = v88;
  v91 = v90;
  v93 = v92;
  v95 = v94;
  v96 = v160;
  sub_21CDC314C(v85, v160, &qword_255330178);
  v97 = v96 + *(int *)(v176 + 36);
  *(_BYTE *)v97 = v82;
  *(_QWORD *)(v97 + 8) = v89;
  *(_QWORD *)(v97 + 16) = v91;
  *(_QWORD *)(v97 + 24) = v93;
  *(_QWORD *)(v97 + 32) = v95;
  *(_BYTE *)(v97 + 40) = 0;
  sub_21CDBDA44(v85, &qword_255330178);
  v98 = sub_21D7C1EF0();
  if (qword_25532E128 != -1)
    swift_once();
  sub_21D7C0CE4();
  v100 = v99;
  v102 = v101;
  v104 = v103;
  v106 = v105;
  v107 = v159;
  sub_21CDC314C(v96, v159, &qword_255330180);
  v108 = v107 + *(int *)(v177 + 36);
  *(_BYTE *)v108 = v98;
  *(_QWORD *)(v108 + 8) = v100;
  *(_QWORD *)(v108 + 16) = v102;
  *(_QWORD *)(v108 + 24) = v104;
  *(_QWORD *)(v108 + 32) = v106;
  *(_BYTE *)(v108 + 40) = 0;
  sub_21CDBDA44(v96, &qword_255330180);
  sub_21CDC2FB4(v107, v181, &qword_255331258);
  v109 = v157;
  sub_21CDC314C(v154, v157, &qword_255330F98);
  if (__swift_getEnumTagSinglePayload(v109, 1, v74) == 1)
  {
    sub_21CDBDA44(v109, &qword_255330F98);
LABEL_12:
    swift_bridgeObjectRelease();
    v112 = 0;
    v111 = 0xE000000000000000;
    goto LABEL_13;
  }
  v110 = (uint64_t *)(v109 + *(int *)(v74 + 28));
  v112 = *v110;
  v111 = v110[1];
  sub_21D7C4C20();
  sub_21CDBDA1C(v109, (uint64_t (*)(_QWORD))type metadata accessor for SongDetailListHeaderLockup);
  if (!v111)
    goto LABEL_12;
LABEL_13:
  v113 = sub_21D7C2034();
  v114 = swift_getKeyPath();
  v182 = v112;
  v183 = v111;
  v184 = 0;
  v185 = MEMORY[0x24BEE4AF8];
  v186 = v114;
  v187 = v113;
  sub_21D7C1FBC();
  v115 = v163;
  sub_21D7C22B0();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v116 = sub_21D7C1C50();
  v117 = (uint64_t)v164;
  v118 = v178;
  v84(v164, v115, v178);
  *(_DWORD *)(v117 + *(int *)(v175 + 36)) = v116;
  v87(v115, v118);
  LOBYTE(v116) = sub_21D7C1F14();
  sub_21D7C0CE4();
  v120 = v119;
  v122 = v121;
  v124 = v123;
  v126 = v125;
  v127 = v165;
  sub_21CDC314C(v117, v165, &qword_255330178);
  v128 = v127 + *(int *)(v176 + 36);
  *(_BYTE *)v128 = v116;
  *(_QWORD *)(v128 + 8) = v120;
  *(_QWORD *)(v128 + 16) = v122;
  *(_QWORD *)(v128 + 24) = v124;
  *(_QWORD *)(v128 + 32) = v126;
  *(_BYTE *)(v128 + 40) = 0;
  sub_21CDBDA44(v117, &qword_255330178);
  LOBYTE(v116) = sub_21D7C1EF0();
  sub_21D7C0CE4();
  v130 = v129;
  v132 = v131;
  v134 = v133;
  v136 = v135;
  v137 = v162;
  sub_21CDC314C(v127, v162, &qword_255330180);
  v138 = v137 + *(int *)(v177 + 36);
  *(_BYTE *)v138 = v116;
  *(_QWORD *)(v138 + 8) = v130;
  *(_QWORD *)(v138 + 16) = v132;
  *(_QWORD *)(v138 + 24) = v134;
  *(_QWORD *)(v138 + 32) = v136;
  *(_BYTE *)(v138 + 40) = 0;
  sub_21CDBDA44(v127, &qword_255330180);
  v139 = v179;
  sub_21CDC2FB4(v137, v179, &qword_255331258);
  v140 = v168;
  sub_21CE49634(v161, v168);
  v141 = (uint64_t)v174;
  sub_21CDC314C((uint64_t)v173, (uint64_t)v174, &qword_255331268);
  sub_21CDC314C(v181, v180, &qword_255331258);
  v142 = v166;
  sub_21CDC314C(v139, v166, &qword_255331258);
  v143 = v169;
  v144 = *(void (**)(char *, uint64_t, uint64_t))(v169 + 16);
  v146 = v171;
  v145 = v172;
  v144(v171, v140, v172);
  v147 = v170;
  *v170 = 0x4020000000000000;
  *((_BYTE *)v147 + 8) = 0;
  v148 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255331270);
  sub_21CDC314C(v141, (uint64_t)v147 + v148[12], &qword_255331268);
  v149 = v180;
  sub_21CDC314C(v180, (uint64_t)v147 + v148[16], &qword_255331258);
  sub_21CDC314C(v142, (uint64_t)v147 + v148[20], &qword_255331258);
  v144((char *)v147 + v148[24], (uint64_t)v146, v145);
  v150 = *(void (**)(uint64_t, uint64_t))(v143 + 8);
  v150(v140, v145);
  sub_21CDBDA44(v179, &qword_255331258);
  sub_21CDBDA44(v181, &qword_255331258);
  sub_21CDBDA44((uint64_t)v173, &qword_255331268);
  v150((uint64_t)v146, v145);
  sub_21CDBDA44(v142, &qword_255331258);
  sub_21CDBDA44(v149, &qword_255331258);
  sub_21CDBDA44((uint64_t)v174, &qword_255331268);
}

void sub_21CE4A8A8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t *v37;
  uint64_t KeyPath;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t __src[14];

  v53 = a2;
  v54 = a3;
  v55 = a1;
  v56 = a4;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66DA8);
  MEMORY[0x24BDAC7A8](v47);
  v5 = (uint64_t *)((char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_21D7C297C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553312A0);
  MEMORY[0x24BDAC7A8](v57);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553312A8);
  v51 = *(_QWORD *)(v12 - 8);
  v52 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v48 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553312B0);
  MEMORY[0x24BDAC7A8](v50);
  v49 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_21D7C1854();
  sub_21CE4AD84(__src);
  v15 = __src[0];
  v45 = __src[1];
  v43 = __src[2];
  v16 = __src[4];
  v44 = __src[3];
  v39 = sub_21D7C285C();
  KeyPath = swift_getKeyPath();
  v17 = sub_21D7C1FF8();
  v18 = swift_getKeyPath();
  v19 = *MEMORY[0x24BDF40B8];
  v42 = v7;
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  v40 = v9;
  v41 = v6;
  v20(v9, v19, v6);
  v21 = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v5 + *(int *)(v47 + 28), v9, v6);
  v37 = v5;
  *v5 = v21;
  sub_21CDC314C((uint64_t)v5, (uint64_t)&v11[*(int *)(v57 + 36)], &qword_253F66DA8);
  *(_QWORD *)v11 = v46;
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 1;
  v22 = v45;
  *((_QWORD *)v11 + 3) = v15;
  *((_QWORD *)v11 + 4) = v22;
  v23 = v43;
  v24 = v44;
  *((_QWORD *)v11 + 5) = v43;
  *((_QWORD *)v11 + 6) = v24;
  v25 = KeyPath;
  *((_QWORD *)v11 + 7) = v16;
  *((_QWORD *)v11 + 8) = v25;
  *((_QWORD *)v11 + 9) = v39;
  *((_QWORD *)v11 + 10) = v18;
  *((_QWORD *)v11 + 11) = v17;
  swift_retain();
  sub_21CDFDC1C(v22, v23, v24, v16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_21CDBDA44((uint64_t)v37, &qword_253F66DA8);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v40, v41);
  swift_release();
  sub_21CDFDBEC(v22, v23, v24, v16);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_21D7C1FD4();
  sub_21CE51B1C();
  v26 = v48;
  sub_21D7C22B0();
  sub_21CDBDA44((uint64_t)v11, &qword_2553312A0);
  sub_21D7C2D30();
  sub_21D7C1440();
  v28 = v51;
  v27 = v52;
  v29 = v49;
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v49, v26, v52);
  v30 = (uint64_t)v29;
  memcpy(&v29[*(int *)(v50 + 36)], __src, 0x70uLL);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v26, v27);
  type metadata accessor for SongDetailHeaderView(0, v53, v54, v31);
  if ((sub_21CE4AED4() & 1) != 0)
    v32 = 0x7FF0000000000000;
  else
    v32 = 0x406C000000000000;
  v33 = sub_21D7C2D30();
  v36 = 1;
  v35 = 1;
  sub_21D45B3B0(0, 1, 0, 1, v32, 0, 0, 1, 0, v35, 0, v36, v33, v34);
  sub_21CDBDA44(v30, &qword_2553312B0);
}

uint64_t sub_21CE4AD84@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = sub_21D7BF9DC();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_21D7C50B8();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_21D7C2958();
  sub_21D7C50AC();
  sub_21D7BF9D0();
  v5 = sub_21D7C5148();
  v7 = v6;
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = 0;
  v8 = MEMORY[0x24BEE4AF8];
  a1[4] = MEMORY[0x24BEE4AF8];
  swift_retain();
  sub_21CDFDC1C(v5, v7, 0, v8);
  sub_21CDFDBEC(v5, v7, 0, v8);
  return swift_release();
}

uint64_t sub_21CE4AED4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int EnumTagSinglePayload;
  uint64_t *v18;
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v0 = sub_21D7C1CA4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66B88);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66B78);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v22 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v22 - v14;
  sub_21D4B6CF4();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v13, *MEMORY[0x24BDEFEE8], v0);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v0);
  v16 = (uint64_t)&v6[*(int *)(v4 + 48)];
  sub_21CDC314C((uint64_t)v15, (uint64_t)v6, &qword_253F66B78);
  sub_21CDC314C((uint64_t)v13, v16, &qword_253F66B78);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v0) == 1)
  {
    sub_21CDBDA44((uint64_t)v13, &qword_253F66B78);
    sub_21CDBDA44((uint64_t)v15, &qword_253F66B78);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v16, 1, v0);
    if (EnumTagSinglePayload == 1)
      v18 = &qword_253F66B78;
    else
      v18 = &qword_253F66B88;
    if (EnumTagSinglePayload == 1)
      v19 = -1;
    else
      v19 = 0;
  }
  else
  {
    sub_21CDC314C((uint64_t)v6, (uint64_t)v10, &qword_253F66B78);
    if (__swift_getEnumTagSinglePayload(v16, 1, v0) == 1)
    {
      sub_21CDBDA44((uint64_t)v13, &qword_253F66B78);
      sub_21CDBDA44((uint64_t)v15, &qword_253F66B78);
      (*(void (**)(char *, uint64_t))(v1 + 8))(v10, v0);
      v19 = 0;
      v18 = &qword_253F66B88;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v3, v16, v0);
      sub_21CDF81B4((uint64_t)&unk_253F66B70);
      v19 = sub_21D7C5094();
      v20 = *(void (**)(char *, uint64_t))(v1 + 8);
      v20(v3, v0);
      v18 = &qword_253F66B78;
      sub_21CDBDA44((uint64_t)v13, &qword_253F66B78);
      sub_21CDBDA44((uint64_t)v15, &qword_253F66B78);
      v20(v10, v0);
    }
  }
  sub_21CDBDA44((uint64_t)v6, v18);
  return v19 & 1;
}

uint64_t sub_21CE4B1B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v14;

  v3 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330F98);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CDC314C(v1 + *(int *)(a1 + 44), (uint64_t)v8, &qword_255330F98);
  v9 = type metadata accessor for SongDetailListHeaderLockup();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1)
  {
    sub_21CDBDA44((uint64_t)v8, &qword_255330F98);
    v10 = 0;
    v11 = 0;
  }
  else
  {
    v12 = (uint64_t *)&v8[*(int *)(v9 + 24)];
    v10 = *v12;
    v11 = v12[1];
    sub_21D7C4C20();
    sub_21CDBDA1C((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for SongDetailListHeaderLockup);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, a1);
  if (!v11)
    v10 = sub_21D7C3510();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, a1);
  return v10;
}

void sub_21CE4B314(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(void);
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  _BYTE v36[4];
  int v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;

  v2 = v1;
  v44 = a1;
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_25532FE50);
  MEMORY[0x24BDAC7A8](v42);
  v4 = &v36[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_21D7C18FC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v39 = &v36[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_21D7C13F8();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v41 = (uint64_t *)&v36[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v12 = (uint64_t *)&v36[-v11];
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553314E0);
  MEMORY[0x24BDAC7A8](v40);
  v43 = &v36[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553314E8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = &v36[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)v16 = sub_21D7C1980();
  *((_QWORD *)v16 + 1) = 0;
  v16[16] = 1;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553314F0);
  sub_21CE4B6E0(v2, (uint64_t)&v16[*(int *)(v17 + 44)]);
  if (qword_253F654A8 != -1)
    swift_once();
  v18 = qword_253F81F20;
  v19 = *MEMORY[0x24BDEEB68];
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  v20((char *)v12 + *(int *)(v8 + 20), v19, v5);
  *v12 = v18;
  v12[1] = v18;
  if (qword_253F65488 != -1)
    swift_once();
  v38 = qword_253F81EF0;
  v37 = byte_253F81EF8;
  v21 = qword_253F81F00;
  v22 = qword_253F81F20;
  v23 = v39;
  v20(v39, v19, v5);
  v24 = v41;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))((_BYTE *)v41 + *(int *)(v8 + 20), v23, v5);
  *v24 = v22;
  v24[1] = v22;
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v23, v5);
  v25 = v42;
  v26 = MEMORY[0x24BDED998];
  sub_21CDD337C((uint64_t)v24, (uint64_t)&v4[*(int *)(v42 + 36)], (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  *(_QWORD *)v4 = v38;
  v4[8] = v37;
  *((_QWORD *)v4 + 2) = v21;
  v27 = &v4[*(int *)(v25 + 40)];
  *(_QWORD *)v27 = swift_getKeyPath();
  v27[8] = 0;
  v28 = v43;
  sub_21CDD337C((uint64_t)v12, (uint64_t)v43, (uint64_t (*)(_QWORD))v26);
  sub_21CDC2FB4((uint64_t)v4, (uint64_t)&v28[*(int *)(v40 + 36)], &qword_25532FE50);
  swift_retain();
  sub_21CDBDA1C((uint64_t)v24, (uint64_t (*)(_QWORD))v26);
  sub_21CDBDA1C((uint64_t)v12, (uint64_t (*)(_QWORD))v26);
  v29 = sub_21D7C2D30();
  v31 = v30;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553314F8);
  v33 = v44;
  v34 = v44 + *(int *)(v32 + 36);
  sub_21CDC314C((uint64_t)v28, v34, &qword_2553314E0);
  v35 = (uint64_t *)(v34 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255331500) + 36));
  *v35 = v29;
  v35[1] = v31;
  sub_21CDC314C((uint64_t)v16, v33, &qword_2553314E8);
  sub_21CDBDA44((uint64_t)v28, &qword_2553314E0);
  sub_21CDBDA44((uint64_t)v16, &qword_2553314E8);
}

uint64_t sub_21CE4B6E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, _QWORD, uint64_t);
  char v52;
  void (*v53)(char *, uint64_t);
  char *v54;
  uint64_t v55;
  int EnumTagSinglePayload;
  int v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  char *v84;
  char *v85;
  void (*v86)(char *, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t (*v95)(void);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v103;
  void (*v104)(char *, char *, uint64_t);
  void (*v105)(char *, uint64_t);
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;

  v132 = a2;
  v128 = sub_21D7C13F8();
  MEMORY[0x24BDAC7A8](v128);
  v129 = (uint64_t *)((char *)&v103 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_21D7C3804();
  v124 = *(_QWORD *)(v4 - 8);
  v125 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v107 = (char *)&v103 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v119 = (char *)&v103 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330F98);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v112 = (uint64_t)&v103 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v111 = (char *)&v103 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v113 = (char *)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v109 = (uint64_t)&v103 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67300);
  MEMORY[0x24BDAC7A8](v16);
  v130 = (uint64_t)&v103 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_21D7C081C();
  v115 = *(_QWORD *)(v118 - 8);
  v18 = MEMORY[0x24BDAC7A8](v118);
  v114 = (char *)&v103 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v116 = (char *)&v103 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5DED0);
  v126 = *(_QWORD *)(v21 - 8);
  v127 = v21;
  MEMORY[0x24BDAC7A8](v21);
  v123 = (char *)&v103 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65C90);
  MEMORY[0x24BDAC7A8](v117);
  v122 = (char *)&v103 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331508);
  v24 = MEMORY[0x24BDAC7A8](v131);
  v121 = (uint64_t)&v103 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v120 = (uint64_t)&v103 - v26;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66B88);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v103 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66B78);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v108 = (uint64_t)&v103 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v35 = (char *)&v103 - v34;
  v36 = MEMORY[0x24BDAC7A8](v33);
  v38 = (char *)&v103 - v37;
  MEMORY[0x24BDAC7A8](v36);
  v40 = (char *)&v103 - v39;
  v41 = sub_21D7C1CA4();
  v42 = *(_QWORD **)(v41 - 8);
  v43 = MEMORY[0x24BDAC7A8](v41);
  v45 = (char *)&v103 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v43);
  v47 = (char *)&v103 - v46;
  v110 = type metadata accessor for HeaderArtworkView(0);
  v133 = a1;
  sub_21D4B6CF4();
  if (__swift_getEnumTagSinglePayload((uint64_t)v40, 1, v41) == 1)
  {
    sub_21CDBDA44((uint64_t)v40, &qword_253F66B78);
    v48 = 1;
    v50 = v131;
    v49 = v132;
    return __swift_storeEnumTagSinglePayload(v49, v48, 1, v50);
  }
  v104 = (void (*)(char *, char *, uint64_t))v42[4];
  v104(v47, v40, v41);
  v51 = (void (*)(char *, _QWORD, uint64_t))v42[13];
  v51(v45, *MEMORY[0x24BDEFEF0], v41);
  v106 = v47;
  v52 = sub_21D7C1C98();
  v53 = (void (*)(char *, uint64_t))v42[1];
  v53(v45, v41);
  if ((v52 & 1) == 0)
  {
    v54 = v123;
    if (qword_25532E118 == -1)
      goto LABEL_7;
    goto LABEL_32;
  }
  v54 = v123;
  if (qword_25532E110 != -1)
LABEL_32:
    swift_once();
LABEL_7:
  sub_21D4B6CF4();
  v51(v35, *MEMORY[0x24BDEFEE8], v41);
  __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v41);
  v55 = (uint64_t)&v29[*(int *)(v27 + 48)];
  sub_21CDC314C((uint64_t)v38, (uint64_t)v29, &qword_253F66B78);
  sub_21CDC314C((uint64_t)v35, v55, &qword_253F66B78);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v29, 1, v41);
  v105 = v53;
  if (EnumTagSinglePayload != 1)
  {
    v64 = v108;
    sub_21CDC314C((uint64_t)v29, v108, &qword_253F66B78);
    v65 = __swift_getEnumTagSinglePayload(v55, 1, v41);
    v58 = v119;
    if (v65 != 1)
    {
      v104(v45, (char *)v55, v41);
      sub_21CDF81B4((uint64_t)&unk_253F66B70);
      v66 = sub_21D7C5094();
      v53(v45, v41);
      sub_21CDBDA44((uint64_t)v35, &qword_253F66B78);
      sub_21CDBDA44((uint64_t)v38, &qword_253F66B78);
      v53((char *)v64, v41);
      sub_21CDBDA44((uint64_t)v29, &qword_253F66B78);
      v60 = v114;
      v61 = (uint64_t)v113;
      v59 = v130;
      v62 = (uint64_t)v111;
      v63 = v110;
      if ((v66 & 1) == 0)
        goto LABEL_16;
      goto LABEL_14;
    }
    sub_21CDBDA44((uint64_t)v35, &qword_253F66B78);
    sub_21CDBDA44((uint64_t)v38, &qword_253F66B78);
    v53((char *)v64, v41);
    v59 = v130;
LABEL_12:
    sub_21CDBDA44((uint64_t)v29, &qword_253F66B88);
    v60 = v114;
    v61 = (uint64_t)v113;
    v62 = (uint64_t)v111;
    v63 = v110;
    goto LABEL_16;
  }
  sub_21CDBDA44((uint64_t)v35, &qword_253F66B78);
  sub_21CDBDA44((uint64_t)v38, &qword_253F66B78);
  v57 = __swift_getEnumTagSinglePayload(v55, 1, v41);
  v58 = v119;
  v59 = v130;
  if (v57 != 1)
    goto LABEL_12;
  sub_21CDBDA44((uint64_t)v29, &qword_253F66B78);
  v60 = v114;
  v61 = (uint64_t)v113;
  v62 = (uint64_t)v111;
  v63 = v110;
LABEL_14:
  v67 = v133 + *(int *)(v63 + 28);
  v68 = *(_QWORD *)v67;
  v69 = *(_BYTE *)(v67 + 8);
  sub_21CE5289C(*(_QWORD *)v67, v69);
  sub_21D4B6D1C();
  sub_21CE52B54(v68, v69);
  if (qword_25532E100 != -1)
    swift_once();
LABEL_16:
  v70 = v133 + *(int *)(v63 + 24);
  sub_21CDC314C(v70, v62, &qword_255330F98);
  v71 = type metadata accessor for SongDetailListHeaderLockup();
  if (__swift_getEnumTagSinglePayload(v62, 1, v71) == 1)
  {
    sub_21CDBDA44(v62, &qword_255330F98);
LABEL_20:
    v75 = sub_21D7C3840();
    __swift_storeEnumTagSinglePayload(v59, 1, 1, v75);
    goto LABEL_22;
  }
  v72 = v54;
  v73 = v109;
  sub_21CDC314C(v62 + *(int *)(v71 + 44), v109, &qword_253F655E8);
  sub_21CDBDA1C(v62, (uint64_t (*)(_QWORD))type metadata accessor for SongDetailListHeaderLockup);
  v74 = type metadata accessor for Artwork();
  if (__swift_getEnumTagSinglePayload(v73, 1, v74) == 1)
  {
    sub_21CDBDA44(v73, &qword_253F655E8);
    v54 = v72;
    goto LABEL_20;
  }
  v76 = sub_21D7C3840();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v130, v73, v76);
  sub_21CDBDA1C(v73, (uint64_t (*)(_QWORD))type metadata accessor for Artwork);
  __swift_storeEnumTagSinglePayload(v130, 0, 1, v76);
  v54 = v72;
LABEL_22:
  sub_21D7C07EC();
  v77 = v70;
  v78 = v112;
  sub_21CDC314C(v77, v112, &qword_255330F98);
  if (__swift_getEnumTagSinglePayload(v78, 1, v71) == 1)
  {
    sub_21CDBDA44(v78, &qword_255330F98);
    v80 = v124;
    v79 = v125;
  }
  else
  {
    sub_21CDC314C(v78 + *(int *)(v71 + 44), v61, &qword_253F655E8);
    sub_21CDBDA1C(v78, (uint64_t (*)(_QWORD))type metadata accessor for SongDetailListHeaderLockup);
    v81 = type metadata accessor for Artwork();
    v82 = __swift_getEnumTagSinglePayload(v61, 1, v81);
    v80 = v124;
    v79 = v125;
    if (v82 != 1)
    {
      v83 = v61 + *(int *)(v81 + 20);
      v84 = v107;
      (*(void (**)(char *, uint64_t, uint64_t))(v124 + 16))(v107, v83, v125);
      sub_21CDBDA1C(v61, (uint64_t (*)(_QWORD))type metadata accessor for Artwork);
      (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v58, v84, v79);
      goto LABEL_28;
    }
    sub_21CDBDA44(v61, &qword_253F655E8);
  }
  sub_21D7C37E0();
LABEL_28:
  v85 = v116;
  sub_21D7C07B0();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v58, v79);
  v86 = *(void (**)(char *, uint64_t))(v115 + 8);
  v87 = v118;
  v86(v60, v118);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_21D7CB0A0;
  sub_21CDF8160();
  sub_21D7C07BC();
  swift_release();
  v86(v85, v87);
  if (qword_253F654A8 != -1)
    swift_once();
  v88 = qword_253F81F20;
  v89 = v129;
  v90 = (char *)v129 + *(int *)(v128 + 20);
  v91 = *MEMORY[0x24BDEEB68];
  v92 = sub_21D7C18FC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 104))(v90, v91, v92);
  *v89 = v88;
  v89[1] = v88;
  v93 = (uint64_t)v122;
  v94 = (uint64_t)&v122[*(int *)(v117 + 36)];
  v95 = MEMORY[0x24BDED998];
  sub_21CDD337C((uint64_t)v89, v94, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  *(_WORD *)(v94 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253F65B98) + 36)) = 256;
  v97 = v126;
  v96 = v127;
  (*(void (**)(uint64_t, char *, uint64_t))(v126 + 16))(v93, v54, v127);
  sub_21CDBDA1C((uint64_t)v89, (uint64_t (*)(_QWORD))v95);
  (*(void (**)(char *, uint64_t))(v97 + 8))(v54, v96);
  v98 = v121;
  sub_21CDC314C(v93, v121, &qword_253F65C90);
  v50 = v131;
  v99 = v98 + *(int *)(v131 + 36);
  *(_QWORD *)v99 = 0;
  *(_WORD *)(v99 + 8) = 257;
  sub_21CDBDA44(v93, &qword_253F65C90);
  v105(v106, v41);
  v100 = v120;
  sub_21CDC2FB4(v98, v120, &qword_255331508);
  v101 = v100;
  v49 = v132;
  sub_21CDC2FB4(v101, v132, &qword_255331508);
  v48 = 0;
  return __swift_storeEnumTagSinglePayload(v49, v48, 1, v50);
}

uint64_t sub_21CE4C380(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v2 = sub_21D7C1EB4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553314C8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  sub_21D7C2A60();
  sub_21CE553B0((uint64_t)&unk_2553314D0);
  sub_21CE550E8();
  sub_21D7C2304();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_21CE4C4B0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(void);
  uint64_t v29;
  uint64_t v30;

  v30 = a1;
  v1 = sub_21D7C13F8();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (_OWORD *)((char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_21D7C1D04();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331528);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21D7C1D10();
  v11 = sub_21D7C2D30();
  v13 = v12;
  v14 = objc_msgSend((id)objc_opt_self(), sel_tertiarySystemFillColor);
  v15 = MEMORY[0x22078FB7C](v14);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v10, v7, v4);
  v16 = &v10[*(int *)(v8 + 36)];
  *(_QWORD *)v16 = v15;
  *((_WORD *)v16 + 4) = 256;
  *((_QWORD *)v16 + 2) = v11;
  *((_QWORD *)v16 + 3) = v13;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v17 = (char *)v3 + *(int *)(v1 + 20);
  v18 = *MEMORY[0x24BDEEB68];
  v19 = sub_21D7C18FC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v17, v18, v19);
  __asm { FMOV            V0.2D, #10.0 }
  *v3 = _Q0;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331530);
  v26 = v30;
  v27 = v30 + *(int *)(v25 + 36);
  v28 = MEMORY[0x24BDED998];
  sub_21CDD337C((uint64_t)v3, v27, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  *(_WORD *)(v27 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253F65B98) + 36)) = 256;
  sub_21CDC314C((uint64_t)v10, v26, &qword_255331528);
  sub_21CDBDA1C((uint64_t)v3, (uint64_t (*)(_QWORD))v28);
  sub_21CDBDA44((uint64_t)v10, &qword_255331528);
}

void sub_21CE4C6D0()
{
  qword_255330E38 = 0x4046000000000000;
}

uint64_t sub_21CE4C6E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = sub_21D7C3558();
  if ((v2 & 1) != 0)
  {
    MEMORY[0x24BDAC7A8](v2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255331348);
    sub_21CE51CD4();
    sub_21D7C2BF8();
    v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331340);
    return __swift_storeEnumTagSinglePayload(a1, 0, 1, v3);
  }
  else
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331340);
    return __swift_storeEnumTagSinglePayload(a1, 1, 1, v5);
  }
}

uint64_t sub_21CE4C7B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  char *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[5];

  v34 = a2;
  v30 = sub_21D7C13C8();
  v33 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SongDetailLyricsButton(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65AD0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255331358);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (uint64_t *)((char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331368);
  v31 = *(_QWORD *)(v15 - 8);
  v32 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CE4CB3C(v35);
  v18 = sub_21D7C0CD8();
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 1, 1, v18);
  sub_21CDD337C(a1, (uint64_t)v8, type metadata accessor for SongDetailLyricsButton);
  v19 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v20 = swift_allocObject();
  sub_21CDD3198((uint64_t)v8, v20 + v19, type metadata accessor for SongDetailLyricsButton);
  v21 = (_QWORD *)((char *)v14 + v12[12]);
  *v21 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B18);
  swift_storeEnumTagMultiPayload();
  v22 = (char *)v14 + v12[13];
  *(_QWORD *)v22 = swift_getKeyPath();
  v22[40] = 0;
  sub_21CDC2FB4((uint64_t)v35, (uint64_t)v14, &qword_253F67430);
  sub_21CDC2FB4((uint64_t)v11, (uint64_t)v14 + v12[11], &qword_253F65AD0);
  v14[5] = sub_21CE51E38;
  v14[6] = v20;
  v14[7] = 0;
  v14[8] = 0;
  sub_21D7C13BC();
  sub_21CE553B0((uint64_t)&unk_255331360);
  sub_21CDF81B4((uint64_t)&qword_253F66580);
  v23 = v30;
  sub_21D7C22F8();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v4, v23);
  sub_21CDBDA44((uint64_t)v14, &qword_255331358);
  v24 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemGroupedBackgroundColor);
  v35[0] = MEMORY[0x22078FB7C](v24);
  swift_retain();
  v25 = sub_21D7C2B44();
  v27 = v31;
  v26 = v32;
  v28 = v34;
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 16))(v34, v17, v32);
  swift_release();
  *(_QWORD *)(v28 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255331348) + 36)) = v25;
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v17, v26);
}

uint64_t sub_21CE4CB3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *boxed_opaque_existential_1;
  char *v17;
  uint64_t v18;
  uint64_t v20[11];
  uint64_t v21;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_21D7C4314();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  HIWORD(v21) = 525;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F67E50);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21D7C8560;
  v11 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 32) = 0x657461676976616ELL;
  *(_QWORD *)(inited + 40) = 0xEA00000000006F54;
  *(_QWORD *)(inited + 72) = v11;
  *(_QWORD *)(inited + 48) = 0x73636972796CLL;
  *(_QWORD *)(inited + 56) = 0xE600000000000000;
  v12 = sub_21D7C4FE0();
  HIBYTE(v20[0]) = 7;
  v13 = sub_21D7BF754();
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v13);
  BYTE6(v20[0]) = 49;
  sub_21D7AB81C(0x73636972796CLL, 0xE600000000000000, (uint64_t)&v21 + 7, (uint64_t)&v21 + 6, v12, (uint64_t)v20 + 7, (uint64_t)v5, (uint64_t)v20 + 6, 0, 0, v20[0], v20[1], v20[2], v20[3], v20[4], v20[5], v20[6], v20[7], v20[8],
    v20[9],
    v20[10],
    v21);
  swift_bridgeObjectRelease();
  sub_21CDBDA44((uint64_t)v5, (uint64_t *)&unk_253F5DD10);
  v14 = type metadata accessor for ViewLyricsAction();
  a1[3] = v14;
  sub_21CDF81B4((uint64_t)&unk_255331370);
  a1[4] = v15;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  v17 = (char *)boxed_opaque_existential_1 + *(int *)(v14 + 20);
  v18 = sub_21D7C3564();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v17, v1, v18);
  return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v7 + 32))(boxed_opaque_existential_1, v9, v6);
}

double sub_21CE4CD64@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  double result;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  __int128 v18;
  _BYTE __src[128];
  _BYTE v20[144];
  char v21;
  char v22;
  char v23;

  v2 = sub_21D7C1854();
  sub_21CE4CEBC((uint64_t)__src);
  v20[136] = 0;
  memcpy(&v20[7], __src, 0x7AuLL);
  v3 = sub_21D7C1F20();
  sub_21D7C0CE4();
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v21 = 0;
  if (qword_25532E0F8 != -1)
    swift_once();
  sub_21D7C2D30();
  sub_21D7C0F84();
  v12 = v21;
  v23 = v15;
  v22 = v17;
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  memcpy((void *)(a1 + 17), v20, 0x81uLL);
  *(_BYTE *)(a1 + 152) = v3;
  *(_QWORD *)(a1 + 160) = v5;
  *(_QWORD *)(a1 + 168) = v7;
  *(_QWORD *)(a1 + 176) = v9;
  *(_QWORD *)(a1 + 184) = v11;
  *(_BYTE *)(a1 + 192) = v12;
  *(_QWORD *)(a1 + 200) = v14;
  *(_BYTE *)(a1 + 208) = v23;
  *(_QWORD *)(a1 + 216) = v16;
  *(_BYTE *)(a1 + 224) = v22;
  result = *(double *)&v18;
  *(_OWORD *)(a1 + 232) = v18;
  *(_BYTE *)(a1 + 248) = 0;
  return result;
}

uint64_t sub_21CE4CEBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  _QWORD v35[5];

  v2 = sub_21D7BF9DC();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_21D7C50B8();
  MEMORY[0x24BDAC7A8](v3);
  if (qword_253F67C30 != -1)
    swift_once();
  v4 = (id)qword_253F81FE0;
  v5 = sub_21D7C2994();
  sub_21D7C50AC();
  sub_21D7BF9D0();
  v6 = sub_21D7C5148();
  v8 = v7;
  v9 = sub_21D7C1F68();
  KeyPath = swift_getKeyPath();
  v11 = sub_21D7C1C38();
  v12 = sub_21D7C1F20();
  sub_21D7C0CE4();
  v34 = v5;
  v21 = v6;
  v22 = v8;
  v23 = 0;
  v24 = MEMORY[0x24BEE4AF8];
  v25 = KeyPath;
  v26 = v9;
  v27 = v11;
  v28 = v12;
  v29 = v13;
  v30 = v14;
  v31 = v15;
  v32 = v16;
  v33 = 0;
  v35[0] = &v34;
  v35[1] = &v21;
  v19 = 0;
  v20 = 1;
  v18 = 1;
  v35[2] = &v19;
  v35[3] = &v18;
  sub_21CF97198((uint64_t)v35, a1);
  sub_21CDFDBEC(v21, v22, v23, v24);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_21CE4D0D8()
{
  qword_255330E40 = 0x406A400000000000;
}

void sub_21CE4D0EC()
{
  qword_255330E48 = 0x405A400000000000;
}

void sub_21CE4D100()
{
  qword_255330E50 = 0x4068000000000000;
}

void sub_21CE4D110()
{
  qword_255330E58 = 0x4064000000000000;
}

void sub_21CE4D120()
{
  qword_255330E60 = 0x405A400000000000;
}

void sub_21CE4D134()
{
  qword_255330E68 = 0x4044000000000000;
}

uint64_t sub_21CE4D144@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21CE1D8A0(v1, a1);
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t type metadata accessor for SongDetailListView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SongDetailListView);
}

void sub_21CE4D188(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for SongDetailContentView(255, *a1, a1[1], a4);
  OUTLINED_FUNCTION_29_5();
  OUTLINED_FUNCTION_5_20();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66BC0);
  sub_21D7C1344();
  OUTLINED_FUNCTION_52();
}

void sub_21CE4D1F4()
{
  OUTLINED_FUNCTION_34_5((uint64_t)&qword_253F66B90);
  OUTLINED_FUNCTION_73();
}

void sub_21CE4D224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  sub_21CE553B0((uint64_t)&unk_253F66BB8);
  a9 = a1;
  a10 = v13;
  MEMORY[0x2207938C0](v10, v11, &a9);
  OUTLINED_FUNCTION_85_1();
}

uint64_t sub_21CE4D25C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for SongDetailHeaderView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SongDetailHeaderView);
}

uint64_t sub_21CE4D29C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_21CE46B50(v1[4], v1[2], v1[3], a1);
}

uint64_t type metadata accessor for SongDetailLyricsButton(uint64_t a1)
{
  return sub_21CDFBED8(a1, qword_255331028);
}

uint64_t sub_21CE4D2BC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for CreditsListView(a2, a1, &type metadata for CreditsListView);
  return a2;
}

uint64_t sub_21CE4D2F0(uint64_t a1)
{
  destroy for CreditsListView(a1, &type metadata for CreditsListView);
  return a1;
}

unint64_t sub_21CE4D31C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_255330FA0;
  if (!qword_255330FA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255330F70);
    v2 = sub_21CE4D3A0();
    sub_21CE553B0((uint64_t)&unk_253F66A70);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_255330FA0);
  }
  return result;
}

unint64_t sub_21CE4D3A0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_255330FA8;
  if (!qword_255330FA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255330F88);
    v2 = sub_21CE4D424();
    sub_21CE553B0((uint64_t)&unk_253F66AB0);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_255330FA8);
  }
  return result;
}

unint64_t sub_21CE4D424()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_255330FB0;
  if (!qword_255330FB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255330F80);
    sub_21CDF81B4((uint64_t)&unk_255330FB8);
    v3 = v2;
    sub_21CE553B0((uint64_t)&unk_253F66A90);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_255330FB0);
  }
  return result;
}

unint64_t sub_21CE4D4C0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_255330FC0;
  if (!qword_255330FC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255330F78);
    v2 = sub_21CE4D544();
    sub_21CE553B0((uint64_t)&qword_253F66B90);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_255330FC0);
  }
  return result;
}

unint64_t sub_21CE4D544()
{
  unint64_t result;

  result = qword_255330FC8;
  if (!qword_255330FC8)
  {
    result = MEMORY[0x2207938C0](&unk_21D7CDA80, &type metadata for CreditsListView);
    atomic_store(result, (unint64_t *)&qword_255330FC8);
  }
  return result;
}

uint64_t _s7MusicUI15CreditsListViewVwxx_0(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

void _s7MusicUI15CreditsListViewVwcp_0(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  sub_21D7C4C20();
  swift_retain();
  OUTLINED_FUNCTION_98();
}

void _s7MusicUI15CreditsListViewVwca_0(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  OUTLINED_FUNCTION_98();
}

void _s7MusicUI15CreditsListViewVwta_0(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release();
  OUTLINED_FUNCTION_0();
}

uint64_t getEnumTagSinglePayload for MusicTrailingBadgesView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MusicTrailingBadgesView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CreditsListView()
{
  return &type metadata for CreditsListView;
}

uint64_t sub_21CE4D788(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21D7C3564();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_21CE4D7C4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_21D7C3564();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_21CE4D7F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21D7C3564();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_21CE4D83C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21D7C3564();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_21CE4D880(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21D7C3564();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_21CE4D8C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21D7C3564();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_21CE4D908()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21CE4D914(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_8_11();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t sub_21CE4D944()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21CE4D950(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_8_11();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_21CE4D984()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21D7C3564();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_21CE4D9EC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_21CE50DB4();
  if (v0 <= 0x3F)
  {
    sub_21D7C3564();
    if (v1 <= 0x3F)
    {
      sub_21CDB3900(319, qword_253F63050, (void (*)(uint64_t))type metadata accessor for SongDetailListHeaderLockup);
      if (v2 <= 0x3F)
      {
        sub_21CDB3900(319, (unint64_t *)&qword_253F60810, (void (*)(uint64_t))type metadata accessor for ContentDescriptor);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t *sub_21CE4DAD0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  _BYTE *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *__dst;
  uint64_t v90;
  uint64_t v91;
  _BYTE *v92;
  _BYTE *v93;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B80);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_21D7C1CA4();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
      {
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66B78);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
      }
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v10 = a3[9];
    v11 = a3[10];
    v12 = (uint64_t *)((char *)a1 + v10);
    v13 = (uint64_t *)((char *)a2 + v10);
    v15 = *v13;
    v14 = v13[1];
    *v12 = v15;
    v12[1] = v14;
    v16 = (char *)a1 + v11;
    v17 = (char *)a2 + v11;
    v18 = sub_21D7C3564();
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    swift_retain();
    v19(v16, v17, v18);
    v20 = a3[11];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = (int *)type metadata accessor for SongDetailListHeaderLockup();
    if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, (uint64_t)v23))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330F98);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v25 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v25))
      {
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v21, v22, v25);
        __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v25);
      }
      v27 = v23[5];
      v28 = *(_OWORD *)&v22[v27 + 24];
      *(_OWORD *)&v21[v27 + 24] = v28;
      (**(void (***)(void))(v28 - 8))();
      v29 = v23[6];
      v30 = &v21[v29];
      v31 = &v22[v29];
      v32 = *((_QWORD *)v31 + 1);
      *(_QWORD *)v30 = *(_QWORD *)v31;
      *((_QWORD *)v30 + 1) = v32;
      v33 = v23[7];
      v34 = &v21[v33];
      v35 = &v22[v33];
      v36 = *((_QWORD *)v35 + 1);
      *(_QWORD *)v34 = *(_QWORD *)v35;
      *((_QWORD *)v34 + 1) = v36;
      v37 = v23[8];
      v38 = &v21[v37];
      v39 = &v22[v37];
      v40 = *(_QWORD *)&v22[v37 + 24];
      sub_21D7C4C20();
      sub_21D7C4C20();
      if (v40)
      {
        v41 = *((_QWORD *)v39 + 4);
        *((_QWORD *)v38 + 3) = v40;
        *((_QWORD *)v38 + 4) = v41;
        (**(void (***)(char *, char *, uint64_t))(v40 - 8))(v38, v39, v40);
      }
      else
      {
        v42 = *((_OWORD *)v39 + 1);
        *(_OWORD *)v38 = *(_OWORD *)v39;
        *((_OWORD *)v38 + 1) = v42;
        *((_QWORD *)v38 + 4) = *((_QWORD *)v39 + 4);
      }
      v43 = v23[9];
      v44 = &v21[v43];
      v45 = &v22[v43];
      v46 = *(_QWORD *)&v22[v43 + 24];
      if (v46)
      {
        v47 = *((_QWORD *)v45 + 4);
        *((_QWORD *)v44 + 3) = v46;
        *((_QWORD *)v44 + 4) = v47;
        (**(void (***)(void))(v46 - 8))();
      }
      else
      {
        v48 = *((_OWORD *)v45 + 1);
        *(_OWORD *)v44 = *(_OWORD *)v45;
        *((_OWORD *)v44 + 1) = v48;
        *((_QWORD *)v44 + 4) = *((_QWORD *)v45 + 4);
      }
      v49 = v23[10];
      v50 = &v21[v49];
      v51 = &v22[v49];
      v52 = type metadata accessor for ContentDescriptor();
      if (__swift_getEnumTagSinglePayload((uint64_t)v51, 1, v52))
      {
        v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        *v50 = *v51;
        v54 = *((_QWORD *)v51 + 2);
        *((_QWORD *)v50 + 1) = *((_QWORD *)v51 + 1);
        *((_QWORD *)v50 + 2) = v54;
        v55 = v52;
        v56 = *((_QWORD *)v51 + 4);
        *((_QWORD *)v50 + 3) = *((_QWORD *)v51 + 3);
        *((_QWORD *)v50 + 4) = v56;
        v57 = *((_QWORD *)v51 + 6);
        *((_QWORD *)v50 + 5) = *((_QWORD *)v51 + 5);
        *((_QWORD *)v50 + 6) = v57;
        v58 = *((_QWORD *)v51 + 8);
        *((_QWORD *)v50 + 7) = *((_QWORD *)v51 + 7);
        *((_QWORD *)v50 + 8) = v58;
        v59 = *((_QWORD *)v51 + 10);
        *((_QWORD *)v50 + 9) = *((_QWORD *)v51 + 9);
        *((_QWORD *)v50 + 10) = v59;
        v90 = v55;
        v91 = *((_QWORD *)v51 + 12);
        *((_QWORD *)v50 + 11) = *((_QWORD *)v51 + 11);
        *((_QWORD *)v50 + 12) = v91;
        *((_QWORD *)v50 + 13) = *((_QWORD *)v51 + 13);
        v50[112] = v51[112];
        v60 = *(int *)(v55 + 24);
        __dst = &v50[v60];
        v61 = &v51[v60];
        v62 = sub_21D7BF754();
        sub_21D7C4C20();
        sub_21D7C4C20();
        sub_21D7C4C20();
        sub_21D7C4C20();
        sub_21D7C4C20();
        sub_21D7C4C20();
        if (__swift_getEnumTagSinglePayload((uint64_t)v61, 1, v62))
        {
          v63 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
          memcpy(__dst, v61, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(__dst, v61, v62);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v62);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v50, 0, 1, v90);
      }
      v64 = v23[11];
      v65 = &v21[v64];
      v66 = &v22[v64];
      v67 = type metadata accessor for Artwork();
      if (__swift_getEnumTagSinglePayload((uint64_t)v66, 1, v67))
      {
        v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
        memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        v69 = sub_21D7C3840();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v65, v66, v69);
        v70 = *(int *)(v67 + 20);
        v71 = &v65[v70];
        v72 = &v66[v70];
        v73 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v71, v72, v73);
        __swift_storeEnumTagSinglePayload((uint64_t)v65, 0, 1, v67);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, (uint64_t)v23);
    }
    v74 = a3[12];
    v75 = (char *)a1 + v74;
    v76 = (char *)a2 + v74;
    v77 = type metadata accessor for ContentDescriptor();
    if (__swift_getEnumTagSinglePayload((uint64_t)v76, 1, v77))
    {
      v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
      memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    }
    else
    {
      *v75 = *v76;
      v79 = *((_QWORD *)v76 + 2);
      *((_QWORD *)v75 + 1) = *((_QWORD *)v76 + 1);
      *((_QWORD *)v75 + 2) = v79;
      v80 = *((_QWORD *)v76 + 4);
      *((_QWORD *)v75 + 3) = *((_QWORD *)v76 + 3);
      *((_QWORD *)v75 + 4) = v80;
      v81 = *((_QWORD *)v76 + 6);
      *((_QWORD *)v75 + 5) = *((_QWORD *)v76 + 5);
      *((_QWORD *)v75 + 6) = v81;
      v82 = *((_QWORD *)v76 + 8);
      *((_QWORD *)v75 + 7) = *((_QWORD *)v76 + 7);
      *((_QWORD *)v75 + 8) = v82;
      v83 = *((_QWORD *)v76 + 10);
      *((_QWORD *)v75 + 9) = *((_QWORD *)v76 + 9);
      *((_QWORD *)v75 + 10) = v83;
      v84 = *((_QWORD *)v76 + 12);
      *((_QWORD *)v75 + 11) = *((_QWORD *)v76 + 11);
      *((_QWORD *)v75 + 12) = v84;
      *((_QWORD *)v75 + 13) = *((_QWORD *)v76 + 13);
      v75[112] = v76[112];
      v85 = *(int *)(v77 + 24);
      v92 = &v75[v85];
      v93 = &v76[v85];
      v86 = sub_21D7BF754();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      if (__swift_getEnumTagSinglePayload((uint64_t)v93, 1, v86))
      {
        v87 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
        memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v92, v93, v86);
        __swift_storeEnumTagSinglePayload((uint64_t)v92, 0, 1, v86);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v75, 0, 1, v77);
    }
  }
  return a1;
}

uint64_t sub_21CE4E190(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;

  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_21D7C1CA4();
    if (!__swift_getEnumTagSinglePayload(a1, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  swift_release();
  v5 = a1 + a2[10];
  v6 = sub_21D7C3564();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[11];
  v8 = (int *)type metadata accessor for SongDetailListHeaderLockup();
  if (!__swift_getEnumTagSinglePayload(v7, 1, (uint64_t)v8))
  {
    v9 = sub_21D7C4668();
    if (!__swift_getEnumTagSinglePayload(v7, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
    __swift_destroy_boxed_opaque_existential_1(v7 + v8[5]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = v7 + v8[8];
    if (*(_QWORD *)(v10 + 24))
      __swift_destroy_boxed_opaque_existential_1(v10);
    v11 = v7 + v8[9];
    if (*(_QWORD *)(v11 + 24))
      __swift_destroy_boxed_opaque_existential_1(v11);
    v12 = v7 + v8[10];
    v13 = type metadata accessor for ContentDescriptor();
    if (!__swift_getEnumTagSinglePayload(v12, 1, v13))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = v12 + *(int *)(v13 + 24);
      v15 = sub_21D7BF754();
      if (!__swift_getEnumTagSinglePayload(v14, 1, v15))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
    }
    v16 = v7 + v8[11];
    v17 = type metadata accessor for Artwork();
    if (!__swift_getEnumTagSinglePayload(v16, 1, v17))
    {
      v18 = sub_21D7C3840();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v16, v18);
      v19 = v16 + *(int *)(v17 + 20);
      v20 = sub_21D7C3804();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
    }
  }
  v21 = a1 + a2[12];
  v22 = type metadata accessor for ContentDescriptor();
  result = __swift_getEnumTagSinglePayload(v21, 1, v22);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v24 = v21 + *(int *)(v22 + 24);
    v25 = sub_21D7BF754();
    result = __swift_getEnumTagSinglePayload(v24, 1, v25);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
  }
  return result;
}

_QWORD *sub_21CE4E4A0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  _BYTE *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _BYTE *v85;
  uint64_t v86;
  uint64_t v87;
  char *__dst;
  int *v90;
  _BYTE *v91;
  _QWORD *v92;
  _QWORD *v93;

  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_21D7C1CA4();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
    {
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66B78);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
    }
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v8 = a3[9];
  v9 = a3[10];
  v10 = (_QWORD *)((char *)a1 + v8);
  v11 = (_QWORD *)((char *)a2 + v8);
  v13 = *v11;
  v12 = v11[1];
  *v10 = v13;
  v10[1] = v12;
  v14 = (char *)a1 + v9;
  v15 = (char *)a2 + v9;
  v16 = sub_21D7C3564();
  v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  swift_retain();
  v17(v14, v15, v16);
  v18 = a3[11];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = (int *)type metadata accessor for SongDetailListHeaderLockup();
  if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, (uint64_t)v21))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330F98);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = sub_21D7C4668();
    v92 = a1;
    if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v23))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v19, v20, v23);
      __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v23);
    }
    v25 = v21[5];
    v26 = *(_OWORD *)&v20[v25 + 24];
    *(_OWORD *)&v19[v25 + 24] = v26;
    (**(void (***)(void))(v26 - 8))();
    v27 = v21[6];
    v28 = &v19[v27];
    v29 = &v20[v27];
    v30 = *((_QWORD *)v29 + 1);
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *((_QWORD *)v28 + 1) = v30;
    v31 = v21[7];
    v32 = &v19[v31];
    v33 = &v20[v31];
    v34 = *((_QWORD *)v33 + 1);
    *(_QWORD *)v32 = *(_QWORD *)v33;
    *((_QWORD *)v32 + 1) = v34;
    v35 = v21[8];
    v36 = &v19[v35];
    v37 = &v20[v35];
    v38 = *(_QWORD *)&v20[v35 + 24];
    sub_21D7C4C20();
    sub_21D7C4C20();
    if (v38)
    {
      v39 = *((_QWORD *)v37 + 4);
      *((_QWORD *)v36 + 3) = v38;
      *((_QWORD *)v36 + 4) = v39;
      (**(void (***)(char *, char *, uint64_t))(v38 - 8))(v36, v37, v38);
    }
    else
    {
      v40 = *((_OWORD *)v37 + 1);
      *(_OWORD *)v36 = *(_OWORD *)v37;
      *((_OWORD *)v36 + 1) = v40;
      *((_QWORD *)v36 + 4) = *((_QWORD *)v37 + 4);
    }
    v41 = v21[9];
    v42 = &v19[v41];
    v43 = &v20[v41];
    v44 = *(_QWORD *)&v20[v41 + 24];
    if (v44)
    {
      v45 = *((_QWORD *)v43 + 4);
      *((_QWORD *)v42 + 3) = v44;
      *((_QWORD *)v42 + 4) = v45;
      (**(void (***)(void))(v44 - 8))();
    }
    else
    {
      v46 = *((_OWORD *)v43 + 1);
      *(_OWORD *)v42 = *(_OWORD *)v43;
      *((_OWORD *)v42 + 1) = v46;
      *((_QWORD *)v42 + 4) = *((_QWORD *)v43 + 4);
    }
    v47 = v21[10];
    v48 = &v19[v47];
    v49 = &v20[v47];
    v50 = type metadata accessor for ContentDescriptor();
    if (__swift_getEnumTagSinglePayload((uint64_t)v49, 1, v50))
    {
      v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      *v48 = *v49;
      v52 = *((_QWORD *)v49 + 2);
      *((_QWORD *)v48 + 1) = *((_QWORD *)v49 + 1);
      *((_QWORD *)v48 + 2) = v52;
      v53 = (int *)v50;
      v54 = *((_QWORD *)v49 + 4);
      *((_QWORD *)v48 + 3) = *((_QWORD *)v49 + 3);
      *((_QWORD *)v48 + 4) = v54;
      v55 = *((_QWORD *)v49 + 6);
      *((_QWORD *)v48 + 5) = *((_QWORD *)v49 + 5);
      *((_QWORD *)v48 + 6) = v55;
      v56 = *((_QWORD *)v49 + 8);
      *((_QWORD *)v48 + 7) = *((_QWORD *)v49 + 7);
      *((_QWORD *)v48 + 8) = v56;
      v57 = *((_QWORD *)v49 + 10);
      *((_QWORD *)v48 + 9) = *((_QWORD *)v49 + 9);
      *((_QWORD *)v48 + 10) = v57;
      v58 = *((_QWORD *)v49 + 12);
      *((_QWORD *)v48 + 11) = *((_QWORD *)v49 + 11);
      *((_QWORD *)v48 + 12) = v58;
      *((_QWORD *)v48 + 13) = *((_QWORD *)v49 + 13);
      v48[112] = v49[112];
      v90 = v53;
      v59 = v53[6];
      __dst = &v48[v59];
      v60 = &v49[v59];
      v61 = sub_21D7BF754();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      if (__swift_getEnumTagSinglePayload((uint64_t)v60, 1, v61))
      {
        v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
        memcpy(__dst, v60, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(__dst, v60, v61);
        __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v61);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v48, 0, 1, (uint64_t)v90);
    }
    v63 = v21[11];
    v64 = &v19[v63];
    v65 = &v20[v63];
    v66 = type metadata accessor for Artwork();
    if (__swift_getEnumTagSinglePayload((uint64_t)v65, 1, v66))
    {
      v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
      memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    }
    else
    {
      v68 = sub_21D7C3840();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v64, v65, v68);
      v69 = *(int *)(v66 + 20);
      v70 = &v64[v69];
      v71 = &v65[v69];
      v72 = sub_21D7C3804();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(v70, v71, v72);
      __swift_storeEnumTagSinglePayload((uint64_t)v64, 0, 1, v66);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, (uint64_t)v21);
    a1 = v92;
  }
  v73 = a3[12];
  v74 = (char *)a1 + v73;
  v75 = (char *)a2 + v73;
  v76 = type metadata accessor for ContentDescriptor();
  if (__swift_getEnumTagSinglePayload((uint64_t)v75, 1, v76))
  {
    v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
    memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
  }
  else
  {
    v93 = a1;
    *v74 = *v75;
    v78 = *((_QWORD *)v75 + 2);
    *((_QWORD *)v74 + 1) = *((_QWORD *)v75 + 1);
    *((_QWORD *)v74 + 2) = v78;
    v79 = *((_QWORD *)v75 + 4);
    *((_QWORD *)v74 + 3) = *((_QWORD *)v75 + 3);
    *((_QWORD *)v74 + 4) = v79;
    v80 = *((_QWORD *)v75 + 6);
    *((_QWORD *)v74 + 5) = *((_QWORD *)v75 + 5);
    *((_QWORD *)v74 + 6) = v80;
    v81 = *((_QWORD *)v75 + 8);
    *((_QWORD *)v74 + 7) = *((_QWORD *)v75 + 7);
    *((_QWORD *)v74 + 8) = v81;
    v82 = *((_QWORD *)v75 + 10);
    *((_QWORD *)v74 + 9) = *((_QWORD *)v75 + 9);
    *((_QWORD *)v74 + 10) = v82;
    v83 = *((_QWORD *)v75 + 12);
    *((_QWORD *)v74 + 11) = *((_QWORD *)v75 + 11);
    *((_QWORD *)v74 + 12) = v83;
    *((_QWORD *)v74 + 13) = *((_QWORD *)v75 + 13);
    v74[112] = v75[112];
    v84 = *(int *)(v76 + 24);
    v91 = &v74[v84];
    v85 = &v75[v84];
    v86 = sub_21D7BF754();
    sub_21D7C4C20();
    sub_21D7C4C20();
    sub_21D7C4C20();
    sub_21D7C4C20();
    sub_21D7C4C20();
    sub_21D7C4C20();
    if (__swift_getEnumTagSinglePayload((uint64_t)v85, 1, v86))
    {
      v87 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
      memcpy(v91, v85, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v91, v85, v86);
      __swift_storeEnumTagSinglePayload((uint64_t)v91, 0, 1, v86);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v74, 0, 1, v76);
    return v93;
  }
  return a1;
}

_QWORD *sub_21CE4EB40(uint64_t a1, _QWORD *a2, int *a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  int EnumTagSinglePayload;
  int v20;
  uint64_t v21;
  uint64_t v22;
  size_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  const void *v92;
  uint64_t v93;
  uint64_t v94;
  size_t v95;
  void *v96;
  const void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v108;
  __int128 v109;
  __int128 v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  __int128 v115;
  __int128 v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  const void *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  const void *v132;
  uint64_t v133;
  int v134;
  int v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  int v144;
  int v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *__dst;
  void *__dsta;
  int *v158;
  int *v159;
  void *v160;
  _QWORD *v161;
  _QWORD *v162;

  v5 = (_QWORD *)a1;
  if ((_QWORD *)a1 != a2)
  {
    sub_21CDBDA44(a1, &qword_253F65B80);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B80);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_21D7C1CA4();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
      {
        v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66B78);
        memcpy(v5, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v5, a2, v6);
        __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v6);
      }
    }
    else
    {
      *v5 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v8 = a3[9];
  v9 = (char *)v5 + v8;
  v10 = (char *)a2 + v8;
  *(_QWORD *)((char *)v5 + v8) = *(_QWORD *)((char *)a2 + v8);
  swift_retain();
  swift_release();
  *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
  v11 = a3[10];
  v12 = (char *)v5 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_21D7C3564();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[11];
  v16 = (char *)v5 + v15;
  v17 = (char *)a2 + v15;
  v18 = (int *)type metadata accessor for SongDetailListHeaderLockup();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, (uint64_t)v18);
  v20 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, (uint64_t)v18);
  if (EnumTagSinglePayload)
  {
    if (!v20)
    {
      v21 = sub_21D7C4668();
      v158 = a3;
      v161 = v5;
      if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v21))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v16, v17, v21);
        __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v21);
      }
      v29 = v18[5];
      v30 = &v16[v29];
      v31 = *(_QWORD *)&v17[v29 + 24];
      *((_QWORD *)v30 + 3) = v31;
      *((_QWORD *)v30 + 4) = *(_QWORD *)&v17[v29 + 32];
      (**(void (***)(void))(v31 - 8))();
      v32 = v18[6];
      v33 = &v16[v32];
      v34 = &v17[v32];
      *(_QWORD *)v33 = *(_QWORD *)v34;
      *((_QWORD *)v33 + 1) = *((_QWORD *)v34 + 1);
      v35 = v18[7];
      v36 = &v16[v35];
      v37 = &v17[v35];
      *(_QWORD *)v36 = *(_QWORD *)v37;
      *((_QWORD *)v36 + 1) = *((_QWORD *)v37 + 1);
      v38 = v18[8];
      v39 = &v16[v38];
      v40 = &v17[v38];
      v41 = *(_QWORD *)&v17[v38 + 24];
      sub_21D7C4C20();
      sub_21D7C4C20();
      if (v41)
      {
        *((_QWORD *)v39 + 3) = v41;
        *((_QWORD *)v39 + 4) = *((_QWORD *)v40 + 4);
        (**(void (***)(char *, char *, uint64_t))(v41 - 8))(v39, v40, v41);
      }
      else
      {
        v42 = *(_OWORD *)v40;
        v43 = *((_OWORD *)v40 + 1);
        *((_QWORD *)v39 + 4) = *((_QWORD *)v40 + 4);
        *(_OWORD *)v39 = v42;
        *((_OWORD *)v39 + 1) = v43;
      }
      v44 = v18[9];
      v45 = &v16[v44];
      v46 = &v17[v44];
      v47 = *(_QWORD *)&v17[v44 + 24];
      if (v47)
      {
        *((_QWORD *)v45 + 3) = v47;
        *((_QWORD *)v45 + 4) = *((_QWORD *)v46 + 4);
        (**(void (***)(void))(v47 - 8))();
      }
      else
      {
        v48 = *(_OWORD *)v46;
        v49 = *((_OWORD *)v46 + 1);
        *((_QWORD *)v45 + 4) = *((_QWORD *)v46 + 4);
        *(_OWORD *)v45 = v48;
        *((_OWORD *)v45 + 1) = v49;
      }
      v50 = v18[10];
      v51 = &v16[v50];
      v52 = &v17[v50];
      v53 = type metadata accessor for ContentDescriptor();
      if (__swift_getEnumTagSinglePayload((uint64_t)v52, 1, v53))
      {
        v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
        v5 = v161;
      }
      else
      {
        *v51 = *v52;
        *((_QWORD *)v51 + 1) = *((_QWORD *)v52 + 1);
        *((_QWORD *)v51 + 2) = *((_QWORD *)v52 + 2);
        *((_QWORD *)v51 + 3) = *((_QWORD *)v52 + 3);
        *((_QWORD *)v51 + 4) = *((_QWORD *)v52 + 4);
        *((_QWORD *)v51 + 5) = *((_QWORD *)v52 + 5);
        *((_QWORD *)v51 + 6) = *((_QWORD *)v52 + 6);
        *((_QWORD *)v51 + 7) = *((_QWORD *)v52 + 7);
        *((_QWORD *)v51 + 8) = *((_QWORD *)v52 + 8);
        *((_QWORD *)v51 + 9) = *((_QWORD *)v52 + 9);
        *((_QWORD *)v51 + 10) = *((_QWORD *)v52 + 10);
        *((_QWORD *)v51 + 11) = *((_QWORD *)v52 + 11);
        *((_QWORD *)v51 + 12) = *((_QWORD *)v52 + 12);
        v55 = *((_QWORD *)v52 + 13);
        v51[112] = v52[112];
        *((_QWORD *)v51 + 13) = v55;
        v56 = *(int *)(v53 + 24);
        __dst = &v51[v56];
        v57 = &v52[v56];
        v58 = sub_21D7BF754();
        sub_21D7C4C20();
        sub_21D7C4C20();
        sub_21D7C4C20();
        sub_21D7C4C20();
        sub_21D7C4C20();
        sub_21D7C4C20();
        if (__swift_getEnumTagSinglePayload((uint64_t)v57, 1, v58))
        {
          v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
          memcpy(__dst, v57, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(__dst, v57, v58);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v58);
        }
        v5 = v161;
        __swift_storeEnumTagSinglePayload((uint64_t)v51, 0, 1, v53);
      }
      v72 = v18[11];
      v73 = &v16[v72];
      v74 = &v17[v72];
      v75 = type metadata accessor for Artwork();
      if (__swift_getEnumTagSinglePayload((uint64_t)v74, 1, v75))
      {
        v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
        memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
      }
      else
      {
        v77 = sub_21D7C3840();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 16))(v73, v74, v77);
        v78 = *(int *)(v75 + 20);
        v79 = &v73[v78];
        v80 = &v74[v78];
        v81 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(v79, v80, v81);
        __swift_storeEnumTagSinglePayload((uint64_t)v73, 0, 1, v75);
      }
      a3 = v158;
      v82 = (uint64_t)v16;
      v83 = (uint64_t)v18;
      goto LABEL_44;
    }
    goto LABEL_14;
  }
  if (v20)
  {
    sub_21CDBDA1C((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for SongDetailListHeaderLockup);
LABEL_14:
    v23 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255330F98) - 8) + 64);
    v24 = v16;
    v25 = v17;
LABEL_15:
    memcpy(v24, v25, v23);
    goto LABEL_45;
  }
  v159 = a3;
  v26 = sub_21D7C4668();
  v27 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v26);
  v28 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v26);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v16, v17, v26);
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v26);
      goto LABEL_33;
    }
    goto LABEL_32;
  }
  v60 = *(_QWORD *)(v26 - 8);
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v60 + 8))(v16, v26);
LABEL_32:
    v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    goto LABEL_33;
  }
  (*(void (**)(char *, char *, uint64_t))(v60 + 24))(v16, v17, v26);
LABEL_33:
  __swift_assign_boxed_opaque_existential_1((uint64_t *)&v16[v18[5]], (uint64_t *)&v17[v18[5]]);
  v62 = v18[6];
  v63 = &v16[v62];
  v64 = &v17[v62];
  *(_QWORD *)v63 = *(_QWORD *)v64;
  *((_QWORD *)v63 + 1) = *((_QWORD *)v64 + 1);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  v65 = v18[7];
  v66 = &v16[v65];
  v67 = &v17[v65];
  *(_QWORD *)v66 = *(_QWORD *)v67;
  *((_QWORD *)v66 + 1) = *((_QWORD *)v67 + 1);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  v68 = v18[8];
  v69 = (uint64_t)&v16[v68];
  v70 = (uint64_t *)&v17[v68];
  v71 = *(_QWORD *)&v17[v68 + 24];
  if (*(_QWORD *)&v16[v68 + 24])
  {
    if (v71)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)v69, v70);
      goto LABEL_65;
    }
    __swift_destroy_boxed_opaque_existential_1(v69);
  }
  else if (v71)
  {
    *(_QWORD *)(v69 + 24) = v71;
    *(_QWORD *)(v69 + 32) = v70[4];
    (**(void (***)(uint64_t, char *))(v71 - 8))(v69, (char *)v70);
    goto LABEL_65;
  }
  v109 = *(_OWORD *)v70;
  v110 = *((_OWORD *)v70 + 1);
  *(_QWORD *)(v69 + 32) = v70[4];
  *(_OWORD *)v69 = v109;
  *(_OWORD *)(v69 + 16) = v110;
LABEL_65:
  v111 = v18[9];
  v112 = (uint64_t)&v16[v111];
  v113 = (uint64_t *)&v17[v111];
  v114 = *(_QWORD *)&v17[v111 + 24];
  v162 = v5;
  if (*(_QWORD *)&v16[v111 + 24])
  {
    if (v114)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)v112, v113);
      goto LABEL_72;
    }
    __swift_destroy_boxed_opaque_existential_1(v112);
  }
  else if (v114)
  {
    *(_QWORD *)(v112 + 24) = v114;
    *(_QWORD *)(v112 + 32) = v113[4];
    (**(void (***)(uint64_t, char *))(v114 - 8))(v112, (char *)v113);
    goto LABEL_72;
  }
  v115 = *(_OWORD *)v113;
  v116 = *((_OWORD *)v113 + 1);
  *(_QWORD *)(v112 + 32) = v113[4];
  *(_OWORD *)v112 = v115;
  *(_OWORD *)(v112 + 16) = v116;
LABEL_72:
  v117 = v18[10];
  v118 = (uint64_t)&v16[v117];
  v119 = (uint64_t)&v17[v117];
  v120 = type metadata accessor for ContentDescriptor();
  v121 = __swift_getEnumTagSinglePayload(v118, 1, v120);
  v122 = __swift_getEnumTagSinglePayload(v119, 1, v120);
  if (v121)
  {
    if (!v122)
    {
      *(_BYTE *)v118 = *(_BYTE *)v119;
      *(_QWORD *)(v118 + 8) = *(_QWORD *)(v119 + 8);
      *(_QWORD *)(v118 + 16) = *(_QWORD *)(v119 + 16);
      *(_QWORD *)(v118 + 24) = *(_QWORD *)(v119 + 24);
      *(_QWORD *)(v118 + 32) = *(_QWORD *)(v119 + 32);
      *(_QWORD *)(v118 + 40) = *(_QWORD *)(v119 + 40);
      *(_QWORD *)(v118 + 48) = *(_QWORD *)(v119 + 48);
      *(_QWORD *)(v118 + 56) = *(_QWORD *)(v119 + 56);
      *(_QWORD *)(v118 + 64) = *(_QWORD *)(v119 + 64);
      *(_QWORD *)(v118 + 72) = *(_QWORD *)(v119 + 72);
      *(_QWORD *)(v118 + 80) = *(_QWORD *)(v119 + 80);
      *(_QWORD *)(v118 + 88) = *(_QWORD *)(v119 + 88);
      *(_QWORD *)(v118 + 96) = *(_QWORD *)(v119 + 96);
      v123 = *(_QWORD *)(v119 + 104);
      *(_BYTE *)(v118 + 112) = *(_BYTE *)(v119 + 112);
      *(_QWORD *)(v118 + 104) = v123;
      v124 = *(int *)(v120 + 24);
      __dsta = (void *)(v118 + v124);
      v125 = (const void *)(v119 + v124);
      v126 = sub_21D7BF754();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      if (__swift_getEnumTagSinglePayload((uint64_t)v125, 1, v126))
      {
        v127 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
        memcpy(__dsta, v125, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v126 - 8) + 16))(__dsta, v125, v126);
        __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v126);
      }
      v5 = v162;
      v136 = v118;
      v137 = v120;
      goto LABEL_86;
    }
LABEL_78:
    v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
    memcpy((void *)v118, (const void *)v119, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
    v5 = v162;
    goto LABEL_90;
  }
  if (v122)
  {
    sub_21CDBDA1C(v118, (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
    goto LABEL_78;
  }
  *(_BYTE *)v118 = *(_BYTE *)v119;
  *(_QWORD *)(v118 + 8) = *(_QWORD *)(v119 + 8);
  *(_QWORD *)(v118 + 16) = *(_QWORD *)(v119 + 16);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v118 + 24) = *(_QWORD *)(v119 + 24);
  *(_QWORD *)(v118 + 32) = *(_QWORD *)(v119 + 32);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v118 + 40) = *(_QWORD *)(v119 + 40);
  *(_QWORD *)(v118 + 48) = *(_QWORD *)(v119 + 48);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v118 + 56) = *(_QWORD *)(v119 + 56);
  *(_QWORD *)(v118 + 64) = *(_QWORD *)(v119 + 64);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v118 + 72) = *(_QWORD *)(v119 + 72);
  *(_QWORD *)(v118 + 80) = *(_QWORD *)(v119 + 80);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v118 + 88) = *(_QWORD *)(v119 + 88);
  *(_QWORD *)(v118 + 96) = *(_QWORD *)(v119 + 96);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  v129 = *(_QWORD *)(v119 + 104);
  *(_BYTE *)(v118 + 112) = *(_BYTE *)(v119 + 112);
  *(_QWORD *)(v118 + 104) = v129;
  v130 = *(int *)(v120 + 24);
  v131 = (void *)(v118 + v130);
  v132 = (const void *)(v119 + v130);
  v133 = sub_21D7BF754();
  v134 = __swift_getEnumTagSinglePayload((uint64_t)v131, 1, v133);
  v135 = __swift_getEnumTagSinglePayload((uint64_t)v132, 1, v133);
  if (v134)
  {
    v5 = v162;
    if (!v135)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v133 - 8) + 16))(v131, v132, v133);
      v136 = (uint64_t)v131;
      v137 = v133;
LABEL_86:
      __swift_storeEnumTagSinglePayload(v136, 0, 1, v137);
      goto LABEL_90;
    }
    goto LABEL_89;
  }
  v138 = *(_QWORD *)(v133 - 8);
  v5 = v162;
  if (v135)
  {
    (*(void (**)(void *, uint64_t))(v138 + 8))(v131, v133);
LABEL_89:
    v139 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
    memcpy(v131, v132, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
    goto LABEL_90;
  }
  (*(void (**)(void *, const void *, uint64_t))(v138 + 24))(v131, v132, v133);
LABEL_90:
  a3 = v159;
  v140 = v18[11];
  v141 = (uint64_t)&v16[v140];
  v142 = (uint64_t)&v17[v140];
  v143 = type metadata accessor for Artwork();
  v144 = __swift_getEnumTagSinglePayload(v141, 1, v143);
  v145 = __swift_getEnumTagSinglePayload(v142, 1, v143);
  if (v144)
  {
    if (!v145)
    {
      v146 = sub_21D7C3840();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v146 - 8) + 16))(v141, v142, v146);
      v147 = *(int *)(v143 + 20);
      v148 = v141 + v147;
      v149 = v142 + v147;
      v150 = sub_21D7C3804();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v150 - 8) + 16))(v148, v149, v150);
      v82 = v141;
      v83 = v143;
LABEL_44:
      __swift_storeEnumTagSinglePayload(v82, 0, 1, v83);
      goto LABEL_45;
    }
    goto LABEL_95;
  }
  if (v145)
  {
    sub_21CDBDA1C(v141, (uint64_t (*)(_QWORD))type metadata accessor for Artwork);
LABEL_95:
    v23 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8) - 8) + 64);
    v24 = (void *)v141;
    v25 = (const void *)v142;
    goto LABEL_15;
  }
  v151 = sub_21D7C3840();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v151 - 8) + 24))(v141, v142, v151);
  v152 = *(int *)(v143 + 20);
  v153 = v141 + v152;
  v154 = v142 + v152;
  v155 = sub_21D7C3804();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v155 - 8) + 24))(v153, v154, v155);
LABEL_45:
  v84 = a3[12];
  v85 = (uint64_t)v5 + v84;
  v86 = (uint64_t)a2 + v84;
  v87 = type metadata accessor for ContentDescriptor();
  v88 = __swift_getEnumTagSinglePayload(v85, 1, v87);
  v89 = __swift_getEnumTagSinglePayload(v86, 1, v87);
  if (v88)
  {
    if (!v89)
    {
      *(_BYTE *)v85 = *(_BYTE *)v86;
      *(_QWORD *)(v85 + 8) = *(_QWORD *)(v86 + 8);
      *(_QWORD *)(v85 + 16) = *(_QWORD *)(v86 + 16);
      *(_QWORD *)(v85 + 24) = *(_QWORD *)(v86 + 24);
      *(_QWORD *)(v85 + 32) = *(_QWORD *)(v86 + 32);
      *(_QWORD *)(v85 + 40) = *(_QWORD *)(v86 + 40);
      *(_QWORD *)(v85 + 48) = *(_QWORD *)(v86 + 48);
      *(_QWORD *)(v85 + 56) = *(_QWORD *)(v86 + 56);
      *(_QWORD *)(v85 + 64) = *(_QWORD *)(v86 + 64);
      *(_QWORD *)(v85 + 72) = *(_QWORD *)(v86 + 72);
      *(_QWORD *)(v85 + 80) = *(_QWORD *)(v86 + 80);
      *(_QWORD *)(v85 + 88) = *(_QWORD *)(v86 + 88);
      *(_QWORD *)(v85 + 96) = *(_QWORD *)(v86 + 96);
      v90 = *(_QWORD *)(v86 + 104);
      *(_BYTE *)(v85 + 112) = *(_BYTE *)(v86 + 112);
      *(_QWORD *)(v85 + 104) = v90;
      v91 = *(int *)(v87 + 24);
      v160 = (void *)(v85 + v91);
      v92 = (const void *)(v86 + v91);
      v93 = sub_21D7BF754();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      if (__swift_getEnumTagSinglePayload((uint64_t)v92, 1, v93))
      {
        v94 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
        memcpy(v160, v92, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(v160, v92, v93);
        __swift_storeEnumTagSinglePayload((uint64_t)v160, 0, 1, v93);
      }
      v105 = v85;
      v106 = v87;
      goto LABEL_58;
    }
    goto LABEL_51;
  }
  if (v89)
  {
    sub_21CDBDA1C(v85, (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
LABEL_51:
    v95 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253F60800) - 8) + 64);
    v96 = (void *)v85;
    v97 = (const void *)v86;
    goto LABEL_52;
  }
  *(_BYTE *)v85 = *(_BYTE *)v86;
  *(_QWORD *)(v85 + 8) = *(_QWORD *)(v86 + 8);
  *(_QWORD *)(v85 + 16) = *(_QWORD *)(v86 + 16);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v85 + 24) = *(_QWORD *)(v86 + 24);
  *(_QWORD *)(v85 + 32) = *(_QWORD *)(v86 + 32);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v85 + 40) = *(_QWORD *)(v86 + 40);
  *(_QWORD *)(v85 + 48) = *(_QWORD *)(v86 + 48);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v85 + 56) = *(_QWORD *)(v86 + 56);
  *(_QWORD *)(v85 + 64) = *(_QWORD *)(v86 + 64);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v85 + 72) = *(_QWORD *)(v86 + 72);
  *(_QWORD *)(v85 + 80) = *(_QWORD *)(v86 + 80);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v85 + 88) = *(_QWORD *)(v86 + 88);
  *(_QWORD *)(v85 + 96) = *(_QWORD *)(v86 + 96);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  v98 = *(_QWORD *)(v86 + 104);
  *(_BYTE *)(v85 + 112) = *(_BYTE *)(v86 + 112);
  *(_QWORD *)(v85 + 104) = v98;
  v99 = *(int *)(v87 + 24);
  v100 = v85 + v99;
  v101 = v86 + v99;
  v102 = sub_21D7BF754();
  v103 = __swift_getEnumTagSinglePayload(v100, 1, v102);
  v104 = __swift_getEnumTagSinglePayload(v101, 1, v102);
  if (v103)
  {
    if (!v104)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(v100, v101, v102);
      v105 = v100;
      v106 = v102;
LABEL_58:
      __swift_storeEnumTagSinglePayload(v105, 0, 1, v106);
      return v5;
    }
  }
  else
  {
    v108 = *(_QWORD *)(v102 - 8);
    if (!v104)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v108 + 24))(v100, v101, v102);
      return v5;
    }
    (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v100, v102);
  }
  v95 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10) - 8) + 64);
  v96 = (void *)v100;
  v97 = (const void *)v101;
LABEL_52:
  memcpy(v96, v97, v95);
  return v5;
}

char *sub_21CE4FB18(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  __int128 v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *__dst;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_21D7C1CA4();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66B78);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v9 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_21D7C3564();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  v13 = a3[11];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = (int *)type metadata accessor for SongDetailListHeaderLockup();
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, (uint64_t)v16))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330F98);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v18 = sub_21D7C4668();
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v18))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v14, v15, v18);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v18);
    }
    v20 = v16[5];
    v21 = &v14[v20];
    v22 = &v15[v20];
    v23 = *((_OWORD *)v22 + 1);
    *(_OWORD *)v21 = *(_OWORD *)v22;
    *((_OWORD *)v21 + 1) = v23;
    *((_QWORD *)v21 + 4) = *((_QWORD *)v22 + 4);
    *(_OWORD *)&v14[v16[6]] = *(_OWORD *)&v15[v16[6]];
    *(_OWORD *)&v14[v16[7]] = *(_OWORD *)&v15[v16[7]];
    v24 = v16[8];
    v25 = &v14[v24];
    v26 = &v15[v24];
    *((_QWORD *)v25 + 4) = *((_QWORD *)v26 + 4);
    v27 = *((_OWORD *)v26 + 1);
    *(_OWORD *)v25 = *(_OWORD *)v26;
    *((_OWORD *)v25 + 1) = v27;
    v28 = v16[9];
    v29 = &v14[v28];
    v30 = &v15[v28];
    *((_QWORD *)v29 + 4) = *((_QWORD *)v30 + 4);
    v31 = *((_OWORD *)v30 + 1);
    *(_OWORD *)v29 = *(_OWORD *)v30;
    *((_OWORD *)v29 + 1) = v31;
    v32 = v16[10];
    v33 = &v14[v32];
    v34 = &v15[v32];
    v35 = type metadata accessor for ContentDescriptor();
    if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v35))
    {
      v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      *v33 = *v34;
      memcpy(v33 + 8, v34 + 8, 0x69uLL);
      v37 = *(int *)(v35 + 24);
      __dst = &v33[v37];
      v38 = &v34[v37];
      v39 = sub_21D7BF754();
      if (__swift_getEnumTagSinglePayload((uint64_t)v38, 1, v39))
      {
        v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
        memcpy(__dst, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(__dst, v38, v39);
        __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v39);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v35);
    }
    v41 = v16[11];
    v42 = &v14[v41];
    v43 = &v15[v41];
    v44 = type metadata accessor for Artwork();
    if (__swift_getEnumTagSinglePayload((uint64_t)v43, 1, v44))
    {
      v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      v46 = sub_21D7C3840();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v42, v43, v46);
      v47 = *(int *)(v44 + 20);
      v48 = &v42[v47];
      v49 = &v43[v47];
      v50 = sub_21D7C3804();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
      __swift_storeEnumTagSinglePayload((uint64_t)v42, 0, 1, v44);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, (uint64_t)v16);
  }
  v51 = a3[12];
  v52 = &a1[v51];
  v53 = &a2[v51];
  v54 = type metadata accessor for ContentDescriptor();
  if (__swift_getEnumTagSinglePayload((uint64_t)v53, 1, v54))
  {
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    *v52 = *v53;
    memcpy(v52 + 8, v53 + 8, 0x69uLL);
    v56 = *(int *)(v54 + 24);
    v57 = &v52[v56];
    v58 = &v53[v56];
    v59 = sub_21D7BF754();
    if (__swift_getEnumTagSinglePayload((uint64_t)v58, 1, v59))
    {
      v60 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v57, v58, v59);
      __swift_storeEnumTagSinglePayload((uint64_t)v57, 0, 1, v59);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v52, 0, 1, v54);
  }
  return a1;
}

char *sub_21CE5003C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int *v19;
  int EnumTagSinglePayload;
  int v21;
  uint64_t v22;
  uint64_t v23;
  size_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  char *v31;
  char *v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char *v36;
  __int128 v37;
  uint64_t v38;
  char *v39;
  char *v40;
  __int128 v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  __int128 v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  int v80;
  uint64_t v81;
  const void *v82;
  uint64_t v83;
  uint64_t v84;
  size_t v85;
  void *v86;
  const void *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  int v105;
  uint64_t v106;
  void *v107;
  const void *v108;
  uint64_t v109;
  uint64_t v110;
  size_t v111;
  void *v112;
  const void *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  int v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  int v140;
  int v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  int v148;
  int v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *__dst;
  void *__dsta;

  if (a1 != a2)
  {
    sub_21CDBDA44((uint64_t)a1, &qword_253F65B80);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B80);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_21D7C1CA4();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
      {
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66B78);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v9 = a3[9];
  v10 = &a1[v9];
  v11 = &a2[v9];
  *(_QWORD *)&a1[v9] = *(_QWORD *)&a2[v9];
  swift_release();
  *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
  v12 = a3[10];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_21D7C3564();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = a3[11];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = (int *)type metadata accessor for SongDetailListHeaderLockup();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, (uint64_t)v19);
  v21 = __swift_getEnumTagSinglePayload((uint64_t)v18, 1, (uint64_t)v19);
  if (EnumTagSinglePayload)
  {
    if (!v21)
    {
      v22 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v22))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v17, v18, v22);
        __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v22);
      }
      v30 = v19[5];
      v31 = &v17[v30];
      v32 = &v18[v30];
      v33 = *((_OWORD *)v32 + 1);
      *(_OWORD *)v31 = *(_OWORD *)v32;
      *((_OWORD *)v31 + 1) = v33;
      *((_QWORD *)v31 + 4) = *((_QWORD *)v32 + 4);
      *(_OWORD *)&v17[v19[6]] = *(_OWORD *)&v18[v19[6]];
      *(_OWORD *)&v17[v19[7]] = *(_OWORD *)&v18[v19[7]];
      v34 = v19[8];
      v35 = &v17[v34];
      v36 = &v18[v34];
      *((_QWORD *)v35 + 4) = *((_QWORD *)v36 + 4);
      v37 = *((_OWORD *)v36 + 1);
      *(_OWORD *)v35 = *(_OWORD *)v36;
      *((_OWORD *)v35 + 1) = v37;
      v38 = v19[9];
      v39 = &v17[v38];
      v40 = &v18[v38];
      *((_QWORD *)v39 + 4) = *((_QWORD *)v40 + 4);
      v41 = *((_OWORD *)v40 + 1);
      *(_OWORD *)v39 = *(_OWORD *)v40;
      *((_OWORD *)v39 + 1) = v41;
      v42 = v19[10];
      v43 = &v17[v42];
      v44 = &v18[v42];
      v45 = type metadata accessor for ContentDescriptor();
      if (__swift_getEnumTagSinglePayload((uint64_t)v44, 1, v45))
      {
        v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        *v43 = *v44;
        memcpy(v43 + 8, v44 + 8, 0x69uLL);
        v47 = *(int *)(v45 + 24);
        __dst = &v43[v47];
        v48 = &v44[v47];
        v49 = sub_21D7BF754();
        if (__swift_getEnumTagSinglePayload((uint64_t)v48, 1, v49))
        {
          v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
          memcpy(__dst, v48, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(__dst, v48, v49);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v49);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v43, 0, 1, v45);
      }
      v88 = v19[11];
      v89 = &v17[v88];
      v90 = &v18[v88];
      v91 = type metadata accessor for Artwork();
      if (__swift_getEnumTagSinglePayload((uint64_t)v90, 1, v91))
      {
        v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
        memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
      }
      else
      {
        v93 = sub_21D7C3840();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v89, v90, v93);
        v94 = *(int *)(v91 + 20);
        v95 = &v89[v94];
        v96 = &v90[v94];
        v97 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v95, v96, v97);
        __swift_storeEnumTagSinglePayload((uint64_t)v89, 0, 1, v91);
      }
      v98 = (uint64_t)v17;
      v99 = (uint64_t)v19;
      goto LABEL_45;
    }
    goto LABEL_14;
  }
  if (v21)
  {
    sub_21CDBDA1C((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for SongDetailListHeaderLockup);
LABEL_14:
    v24 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255330F98) - 8) + 64);
    v25 = v17;
    v26 = v18;
LABEL_15:
    memcpy(v25, v26, v24);
    goto LABEL_46;
  }
  v27 = sub_21D7C4668();
  v28 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v27);
  v29 = __swift_getEnumTagSinglePayload((uint64_t)v18, 1, v27);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v17, v18, v27);
      __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v27);
      goto LABEL_27;
    }
    goto LABEL_26;
  }
  v51 = *(_QWORD *)(v27 - 8);
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v51 + 8))(v17, v27);
LABEL_26:
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    goto LABEL_27;
  }
  (*(void (**)(char *, char *, uint64_t))(v51 + 40))(v17, v18, v27);
LABEL_27:
  v53 = v19[5];
  v54 = &v17[v53];
  v55 = &v18[v53];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17[v53]);
  v56 = *((_OWORD *)v55 + 1);
  *(_OWORD *)v54 = *(_OWORD *)v55;
  *((_OWORD *)v54 + 1) = v56;
  *((_QWORD *)v54 + 4) = *((_QWORD *)v55 + 4);
  v57 = v19[6];
  v58 = &v17[v57];
  v59 = &v18[v57];
  v61 = *(_QWORD *)v59;
  v60 = *((_QWORD *)v59 + 1);
  *(_QWORD *)v58 = v61;
  *((_QWORD *)v58 + 1) = v60;
  swift_bridgeObjectRelease();
  v62 = v19[7];
  v63 = &v17[v62];
  v64 = &v18[v62];
  v66 = *(_QWORD *)v64;
  v65 = *((_QWORD *)v64 + 1);
  *(_QWORD *)v63 = v66;
  *((_QWORD *)v63 + 1) = v65;
  swift_bridgeObjectRelease();
  v67 = v19[8];
  v68 = (uint64_t)&v17[v67];
  v69 = &v18[v67];
  if (*(_QWORD *)&v17[v67 + 24])
    __swift_destroy_boxed_opaque_existential_1(v68);
  v70 = *((_OWORD *)v69 + 1);
  *(_OWORD *)v68 = *(_OWORD *)v69;
  *(_OWORD *)(v68 + 16) = v70;
  *(_QWORD *)(v68 + 32) = *((_QWORD *)v69 + 4);
  v71 = v19[9];
  v72 = (uint64_t)&v17[v71];
  v73 = &v18[v71];
  if (*(_QWORD *)&v17[v71 + 24])
    __swift_destroy_boxed_opaque_existential_1(v72);
  v74 = *((_OWORD *)v73 + 1);
  *(_OWORD *)v72 = *(_OWORD *)v73;
  *(_OWORD *)(v72 + 16) = v74;
  *(_QWORD *)(v72 + 32) = *((_QWORD *)v73 + 4);
  v75 = v19[10];
  v76 = (uint64_t)&v17[v75];
  v77 = (uint64_t)&v18[v75];
  v78 = type metadata accessor for ContentDescriptor();
  v79 = __swift_getEnumTagSinglePayload(v76, 1, v78);
  v80 = __swift_getEnumTagSinglePayload(v77, 1, v78);
  if (v79)
  {
    if (!v80)
    {
      *(_BYTE *)v76 = *(_BYTE *)v77;
      memcpy((void *)(v76 + 8), (const void *)(v77 + 8), 0x69uLL);
      v81 = *(int *)(v78 + 24);
      __dsta = (void *)(v76 + v81);
      v82 = (const void *)(v77 + v81);
      v83 = sub_21D7BF754();
      if (__swift_getEnumTagSinglePayload((uint64_t)v82, 1, v83))
      {
        v84 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
        memcpy(__dsta, v82, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(__dsta, v82, v83);
        __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v83);
      }
      v142 = v76;
      v143 = v78;
      goto LABEL_71;
    }
    goto LABEL_37;
  }
  if (v80)
  {
    sub_21CDBDA1C(v76, (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
LABEL_37:
    v85 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253F60800) - 8) + 64);
    v86 = (void *)v76;
    v87 = (const void *)v77;
LABEL_38:
    memcpy(v86, v87, v85);
    goto LABEL_72;
  }
  *(_BYTE *)v76 = *(_BYTE *)v77;
  v130 = *(_QWORD *)(v77 + 16);
  *(_QWORD *)(v76 + 8) = *(_QWORD *)(v77 + 8);
  *(_QWORD *)(v76 + 16) = v130;
  swift_bridgeObjectRelease();
  v131 = *(_QWORD *)(v77 + 32);
  *(_QWORD *)(v76 + 24) = *(_QWORD *)(v77 + 24);
  *(_QWORD *)(v76 + 32) = v131;
  swift_bridgeObjectRelease();
  v132 = *(_QWORD *)(v77 + 48);
  *(_QWORD *)(v76 + 40) = *(_QWORD *)(v77 + 40);
  *(_QWORD *)(v76 + 48) = v132;
  swift_bridgeObjectRelease();
  v133 = *(_QWORD *)(v77 + 64);
  *(_QWORD *)(v76 + 56) = *(_QWORD *)(v77 + 56);
  *(_QWORD *)(v76 + 64) = v133;
  swift_bridgeObjectRelease();
  v134 = *(_QWORD *)(v77 + 80);
  *(_QWORD *)(v76 + 72) = *(_QWORD *)(v77 + 72);
  *(_QWORD *)(v76 + 80) = v134;
  swift_bridgeObjectRelease();
  v135 = *(_QWORD *)(v77 + 96);
  *(_QWORD *)(v76 + 88) = *(_QWORD *)(v77 + 88);
  *(_QWORD *)(v76 + 96) = v135;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v76 + 104) = *(_QWORD *)(v77 + 104);
  *(_BYTE *)(v76 + 112) = *(_BYTE *)(v77 + 112);
  v136 = *(int *)(v78 + 24);
  v137 = v76 + v136;
  v138 = v77 + v136;
  v139 = sub_21D7BF754();
  v140 = __swift_getEnumTagSinglePayload(v137, 1, v139);
  v141 = __swift_getEnumTagSinglePayload(v138, 1, v139);
  if (v140)
  {
    if (!v141)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v139 - 8) + 32))(v137, v138, v139);
      v142 = v137;
      v143 = v139;
LABEL_71:
      __swift_storeEnumTagSinglePayload(v142, 0, 1, v143);
      goto LABEL_72;
    }
    goto LABEL_81;
  }
  v160 = *(_QWORD *)(v139 - 8);
  if (v141)
  {
    (*(void (**)(uint64_t, uint64_t))(v160 + 8))(v137, v139);
LABEL_81:
    v85 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10) - 8) + 64);
    v86 = (void *)v137;
    v87 = (const void *)v138;
    goto LABEL_38;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v160 + 40))(v137, v138, v139);
LABEL_72:
  v144 = v19[11];
  v145 = (uint64_t)&v17[v144];
  v146 = (uint64_t)&v18[v144];
  v147 = type metadata accessor for Artwork();
  v148 = __swift_getEnumTagSinglePayload(v145, 1, v147);
  v149 = __swift_getEnumTagSinglePayload(v146, 1, v147);
  if (v148)
  {
    if (!v149)
    {
      v150 = sub_21D7C3840();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v150 - 8) + 32))(v145, v146, v150);
      v151 = *(int *)(v147 + 20);
      v152 = v145 + v151;
      v153 = v146 + v151;
      v154 = sub_21D7C3804();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v154 - 8) + 32))(v152, v153, v154);
      v98 = v145;
      v99 = v147;
LABEL_45:
      __swift_storeEnumTagSinglePayload(v98, 0, 1, v99);
      goto LABEL_46;
    }
    goto LABEL_77;
  }
  if (v149)
  {
    sub_21CDBDA1C(v145, (uint64_t (*)(_QWORD))type metadata accessor for Artwork);
LABEL_77:
    v24 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8) - 8) + 64);
    v25 = (void *)v145;
    v26 = (const void *)v146;
    goto LABEL_15;
  }
  v155 = sub_21D7C3840();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v155 - 8) + 40))(v145, v146, v155);
  v156 = *(int *)(v147 + 20);
  v157 = v145 + v156;
  v158 = v146 + v156;
  v159 = sub_21D7C3804();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v159 - 8) + 40))(v157, v158, v159);
LABEL_46:
  v100 = a3[12];
  v101 = (uint64_t)&a1[v100];
  v102 = (uint64_t)&a2[v100];
  v103 = type metadata accessor for ContentDescriptor();
  v104 = __swift_getEnumTagSinglePayload(v101, 1, v103);
  v105 = __swift_getEnumTagSinglePayload(v102, 1, v103);
  if (v104)
  {
    if (!v105)
    {
      *(_BYTE *)v101 = *(_BYTE *)v102;
      memcpy((void *)(v101 + 8), (const void *)(v102 + 8), 0x69uLL);
      v106 = *(int *)(v103 + 24);
      v107 = (void *)(v101 + v106);
      v108 = (const void *)(v102 + v106);
      v109 = sub_21D7BF754();
      if (__swift_getEnumTagSinglePayload((uint64_t)v108, 1, v109))
      {
        v110 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
        memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v109 - 8) + 32))(v107, v108, v109);
        __swift_storeEnumTagSinglePayload((uint64_t)v107, 0, 1, v109);
      }
      v126 = v101;
      v127 = v103;
      goto LABEL_59;
    }
    goto LABEL_52;
  }
  if (v105)
  {
    sub_21CDBDA1C(v101, (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
LABEL_52:
    v111 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253F60800) - 8) + 64);
    v112 = (void *)v101;
    v113 = (const void *)v102;
    goto LABEL_53;
  }
  *(_BYTE *)v101 = *(_BYTE *)v102;
  v114 = *(_QWORD *)(v102 + 16);
  *(_QWORD *)(v101 + 8) = *(_QWORD *)(v102 + 8);
  *(_QWORD *)(v101 + 16) = v114;
  swift_bridgeObjectRelease();
  v115 = *(_QWORD *)(v102 + 32);
  *(_QWORD *)(v101 + 24) = *(_QWORD *)(v102 + 24);
  *(_QWORD *)(v101 + 32) = v115;
  swift_bridgeObjectRelease();
  v116 = *(_QWORD *)(v102 + 48);
  *(_QWORD *)(v101 + 40) = *(_QWORD *)(v102 + 40);
  *(_QWORD *)(v101 + 48) = v116;
  swift_bridgeObjectRelease();
  v117 = *(_QWORD *)(v102 + 64);
  *(_QWORD *)(v101 + 56) = *(_QWORD *)(v102 + 56);
  *(_QWORD *)(v101 + 64) = v117;
  swift_bridgeObjectRelease();
  v118 = *(_QWORD *)(v102 + 80);
  *(_QWORD *)(v101 + 72) = *(_QWORD *)(v102 + 72);
  *(_QWORD *)(v101 + 80) = v118;
  swift_bridgeObjectRelease();
  v119 = *(_QWORD *)(v102 + 96);
  *(_QWORD *)(v101 + 88) = *(_QWORD *)(v102 + 88);
  *(_QWORD *)(v101 + 96) = v119;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v101 + 104) = *(_QWORD *)(v102 + 104);
  *(_BYTE *)(v101 + 112) = *(_BYTE *)(v102 + 112);
  v120 = *(int *)(v103 + 24);
  v121 = v101 + v120;
  v122 = v102 + v120;
  v123 = sub_21D7BF754();
  v124 = __swift_getEnumTagSinglePayload(v121, 1, v123);
  v125 = __swift_getEnumTagSinglePayload(v122, 1, v123);
  if (v124)
  {
    if (!v125)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v123 - 8) + 32))(v121, v122, v123);
      v126 = v121;
      v127 = v123;
LABEL_59:
      __swift_storeEnumTagSinglePayload(v126, 0, 1, v127);
      return a1;
    }
  }
  else
  {
    v129 = *(_QWORD *)(v123 - 8);
    if (!v125)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v129 + 40))(v121, v122, v123);
      return a1;
    }
    (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v121, v123);
  }
  v111 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10) - 8) + 64);
  v112 = (void *)v121;
  v113 = (const void *)v122;
LABEL_53:
  memcpy(v112, v113, v111);
  return a1;
}

uint64_t sub_21CE50C18()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_21CE50C24(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255330F90);
  OUTLINED_FUNCTION_113();
  if (v11)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    if ((_DWORD)a2 == 2147483646)
    {
      OUTLINED_FUNCTION_98();
      return;
    }
    OUTLINED_FUNCTION_8_11();
    OUTLINED_FUNCTION_113();
    if (v11)
    {
      v7 = v9;
      v10 = a3[10];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255330F98);
      OUTLINED_FUNCTION_113();
      if (v11)
      {
        v7 = v12;
        v10 = a3[11];
      }
      else
      {
        v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
        v10 = a3[12];
      }
    }
    v8 = a1 + v10;
  }
  OUTLINED_FUNCTION_16_3(v8, a2, v7);
}

uint64_t sub_21CE50CF4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_21CE50D00()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  OUTLINED_FUNCTION_79_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255330F90);
  OUTLINED_FUNCTION_53_2();
  if (v9)
  {
    v5 = v4;
    v6 = v1;
  }
  else
  {
    if (v3 == 2147483646)
    {
      *(_QWORD *)(v1 + v2[9]) = v0;
      OUTLINED_FUNCTION_98();
      return;
    }
    OUTLINED_FUNCTION_8_11();
    OUTLINED_FUNCTION_53_2();
    if (v9)
    {
      v5 = v7;
      v8 = v2[10];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255330F98);
      OUTLINED_FUNCTION_53_2();
      if (v9)
      {
        v5 = v10;
        v8 = v2[11];
      }
      else
      {
        v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
        v8 = v2[12];
      }
    }
    v6 = v1 + v8;
  }
  OUTLINED_FUNCTION_17_2(v6, v0, v0, v5);
}

void sub_21CE50DB4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_253F65B88)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66B78);
    v0 = sub_21D7C0DE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_253F65B88);
  }
}

void sub_21CE50E0C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for SongDetailHeaderView(255, *a1, a1[1], a4);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66AB8);
  OUTLINED_FUNCTION_5_20();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66A98);
  OUTLINED_FUNCTION_5_20();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255330F70);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255330F78);
  swift_getTupleTypeMetadata3();
  sub_21D7C2E08();
  OUTLINED_FUNCTION_52();
}

void sub_21CE50EB0()
{
  sub_21D7C2070();
  OUTLINED_FUNCTION_52();
}

void sub_21CE50EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  a9 = v12;
  a10 = a1;
  v14 = MEMORY[0x220793860](255, &a9, MEMORY[0x24BDF23A8], 0);
  a9 = v12;
  a10 = a1;
  v15 = OUTLINED_FUNCTION_4_0();
  a9 = v14;
  a10 = v15;
  v16 = MEMORY[0x220793860](255, &a9, MEMORY[0x24BDF31A0], 0);
  v17 = sub_21D7C1B9C();
  a9 = v14;
  a10 = v15;
  v18 = OUTLINED_FUNCTION_4_0();
  a9 = v16;
  a10 = v17;
  a11 = v18;
  a12 = MEMORY[0x24BDEF958];
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_85_1();
}

uint64_t sub_21CE50F88()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21CE50F98()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21CE50FA8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21CE50FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *(_QWORD *)(v4 + 16);
  v8 = *(_QWORD *)(v4 + 24);
  type metadata accessor for SongDetailHeaderView(0, v7, v8, a4);
  OUTLINED_FUNCTION_32_6();
  return sub_21CE48674(a1, a2, v4 + v9, v7, v8);
}

unint64_t sub_21CE5103C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_2553310E8;
  if (!qword_2553310E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553310E0);
    sub_21CE510C0((uint64_t)&unk_2553310F0);
    v3 = v2;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDF3F50], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_2553310E8);
  }
  return result;
}

void sub_21CE510C0(uint64_t a1)
{
  uint64_t *v1;
  void (*v2)(void);
  void (*v3)(void);
  void (*v4)(void);
  void (*v5)(void);

  if (!OUTLINED_FUNCTION_115(a1))
  {
    v4 = v3;
    v5 = v2;
    OUTLINED_FUNCTION_16_9(0, v1);
    v5();
    v4();
    OUTLINED_FUNCTION_84_1();
  }
  OUTLINED_FUNCTION_54_1();
}

void sub_21CE51114()
{
  sub_21CE510C0((uint64_t)&unk_255331100);
}

unint64_t sub_21CE51138()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_255331110;
  if (!qword_255331110)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255331118);
    v2 = sub_21CE511BC();
    sub_21CE553B0((uint64_t)&unk_255331190);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_255331110);
  }
  return result;
}

unint64_t sub_21CE511BC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_255331120;
  if (!qword_255331120)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255331128);
    sub_21CE51240();
    v3 = v2;
    sub_21CE553B0((uint64_t)&unk_255331180);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_255331120);
  }
  return result;
}

void sub_21CE51240()
{
  sub_21CE55008((uint64_t)&unk_255331130);
}

unint64_t sub_21CE5125C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_255331140;
  if (!qword_255331140)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255331148);
    sub_21CE513E4((uint64_t)&unk_255331150);
    v3 = v2;
    sub_21CE553B0((uint64_t)&qword_253F66D60);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_255331140);
  }
  return result;
}

unint64_t sub_21CE51300()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_255331160;
  if (!qword_255331160)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255331168);
    sub_21CE553B0((uint64_t)&unk_255331170);
    v3 = v2;
    sub_21CE553B0((uint64_t)&unk_253F66DD0);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_255331160);
  }
  return result;
}

void sub_21CE5139C()
{
  sub_21CE510C0((uint64_t)&unk_2553311A0);
}

void sub_21CE513C0()
{
  sub_21CE513E4((uint64_t)&unk_2553311B0);
}

void sub_21CE513E4(uint64_t a1)
{
  uint64_t *v1;
  void (*v2)(void);
  void (*v3)(void);

  if (!OUTLINED_FUNCTION_115(a1))
  {
    v3 = v2;
    OUTLINED_FUNCTION_16_9(0, v1);
    v3();
    OUTLINED_FUNCTION_84_1();
  }
  OUTLINED_FUNCTION_54_1();
}

unint64_t sub_21CE51430()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_2553311C0;
  if (!qword_2553311C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553311C8);
    v2 = sub_21CE514B4();
    sub_21CE553B0((uint64_t)&unk_255331190);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_2553311C0);
  }
  return result;
}

unint64_t sub_21CE514B4()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_2553311D0;
  if (!qword_2553311D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553311D8);
    v2 = sub_21CE51538();
    sub_21CE553B0((uint64_t)&unk_255331180);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_2553311D0);
  }
  return result;
}

unint64_t sub_21CE51538()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[3];

  result = qword_2553311E0;
  if (!qword_2553311E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553311E8);
    sub_21CE553B0((uint64_t)&unk_2553311F0);
    v3[0] = MEMORY[0x24BDF5138];
    v3[1] = v2;
    v3[2] = MEMORY[0x24BDF5138];
    result = MEMORY[0x2207938C0](MEMORY[0x24BDF4AF8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_2553311E0);
  }
  return result;
}

void sub_21CE515C0()
{
  sub_21CE513E4((uint64_t)&unk_255331200);
}

void sub_21CE515E4()
{
  sub_21D7C168C();
  OUTLINED_FUNCTION_0();
}

void sub_21CE51600()
{
  sub_21D7C168C();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_21CE5161C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21CE51630(a1, a2, a3, a4, &qword_255331230, MEMORY[0x24BDEE180]);
}

uint64_t sub_21CE51630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(char *))
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v9 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CDC314C(a1, (uint64_t)v11, a5);
  return a6(v11);
}

uint64_t sub_21CE516BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21CE51630(a1, a2, a3, a4, &qword_255331230, MEMORY[0x24BDEE180]);
}

void sub_21CE516E0(uint64_t a1@<X8>)
{
  uint64_t *v1;

  sub_21CE49A10(v1[4], v1[2], v1[3], a1);
}

uint64_t type metadata accessor for HeaderArtworkView(uint64_t a1)
{
  return sub_21CDFBED8(a1, qword_255331460);
}

void sub_21CE51710()
{
  sub_21D7C1668();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_21CE5172C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21CE51630(a1, a2, a3, a4, &qword_253F66B78, MEMORY[0x24BDEE130]);
}

uint64_t objectdestroyTm_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v7 = type metadata accessor for SongDetailHeaderView(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = v4 + v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_21D7C1CA4();
    if (!__swift_getEnumTagSinglePayload(v4 + v9, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v4 + v9, v11);
  }
  else
  {
    swift_release();
  }
  swift_release();
  v12 = OUTLINED_FUNCTION_8_11();
  OUTLINED_FUNCTION_24_2(v12);
  v13 = v10 + *(int *)(v7 + 44);
  v14 = type metadata accessor for SongDetailListHeaderLockup();
  if (!OUTLINED_FUNCTION_10_11(v14))
  {
    v15 = sub_21D7C4668();
    if (!__swift_getEnumTagSinglePayload(v13, 1, v15))
      OUTLINED_FUNCTION_25_5(v13, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8));
    __swift_destroy_boxed_opaque_existential_1(v13 + v5[5]);
    OUTLINED_FUNCTION_47_0();
    OUTLINED_FUNCTION_47_0();
    v16 = v13 + v5[8];
    if (*(_QWORD *)(v16 + 24))
      __swift_destroy_boxed_opaque_existential_1(v16);
    v17 = v13 + v5[9];
    if (*(_QWORD *)(v17 + 24))
      __swift_destroy_boxed_opaque_existential_1(v17);
    v18 = v13 + v5[10];
    v19 = type metadata accessor for ContentDescriptor();
    if (!OUTLINED_FUNCTION_64_3(v19))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v20 = v18 + *(int *)(v6 + 24);
      v21 = sub_21D7BF754();
      if (!OUTLINED_FUNCTION_64_3(v21))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v20, v6);
    }
    v22 = type metadata accessor for Artwork();
    if (!OUTLINED_FUNCTION_10_11(v22))
    {
      v23 = sub_21D7C3840();
      OUTLINED_FUNCTION_24_2(v23);
      v24 = sub_21D7C3804();
      OUTLINED_FUNCTION_24_2(v24);
    }
  }
  v25 = v10 + *(int *)(v7 + 48);
  v26 = type metadata accessor for ContentDescriptor();
  if (!OUTLINED_FUNCTION_14_4(v26))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v27 = v25 + *(int *)(v10 + 24);
    v28 = sub_21D7BF754();
    if (!OUTLINED_FUNCTION_14_4(v28))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v27, v4 + v9);
  }
  return swift_deallocObject();
}

void sub_21CE519F8(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  type metadata accessor for SongDetailHeaderView(0, v4, v5, a1);
  OUTLINED_FUNCTION_32_6();
  sub_21CE4A8A8(v2 + v6, v4, v5, a2);
}

unint64_t sub_21CE51A4C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255331288;
  if (!qword_255331288)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255331280);
    sub_21CE553B0((uint64_t)&unk_255331290);
    v3[0] = v2;
    v3[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255331288);
  }
  return result;
}

unint64_t sub_21CE51AD0()
{
  unint64_t result;

  result = qword_255331298;
  if (!qword_255331298)
  {
    result = MEMORY[0x2207938C0](&unk_21D7CDE30, &type metadata for RectangularSongContainerDetailPrimitiveButtonStyle);
    atomic_store(result, (unint64_t *)&qword_255331298);
  }
  return result;
}

unint64_t sub_21CE51B1C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_2553312B8;
  if (!qword_2553312B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553312A0);
    v2 = sub_21CE51BA0();
    sub_21CE553B0((uint64_t)&unk_253F66DA0);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_2553312B8);
  }
  return result;
}

unint64_t sub_21CE51BA0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_2553312C0;
  if (!qword_2553312C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553312C8);
    v2 = sub_21CE51C24();
    sub_21CE553B0((uint64_t)&qword_253F66D80);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_2553312C0);
  }
  return result;
}

unint64_t sub_21CE51C24()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_2553312D0;
  if (!qword_2553312D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553312D8);
    sub_21CE553B0((uint64_t)&unk_2553312E0);
    v3 = v2;
    sub_21CE553B0((uint64_t)&qword_253F66D90);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_2553312D0);
  }
  return result;
}

void sub_21CE51CC0(uint64_t a1@<X8>)
{
  uint64_t *v1;

  sub_21CE48B74(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_21CE51CCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21CE4C7B8(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_21CE51CD4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t OpaqueTypeConformance2;
  uint64_t v8;
  _QWORD v9[6];

  result = qword_255331350;
  if (!qword_255331350)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255331348);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255331358);
    v3 = sub_21D7C13C8();
    sub_21CE553B0((uint64_t)&unk_255331360);
    v5 = v4;
    sub_21CDF81B4((uint64_t)&qword_253F66580);
    v9[2] = v2;
    v9[3] = v3;
    v9[4] = v5;
    v9[5] = v6;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_21CE553B0((uint64_t)&unk_253F66AB0);
    v9[0] = OpaqueTypeConformance2;
    v9[1] = v8;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v9);
    atomic_store(result, (unint64_t *)&qword_255331350);
  }
  return result;
}

uint64_t sub_21CE51DDC()
{
  uint64_t v0;

  type metadata accessor for SongDetailLyricsButton(0);
  v0 = OUTLINED_FUNCTION_8_11();
  OUTLINED_FUNCTION_24_2(v0);
  return swift_deallocObject();
}

double sub_21CE51E38@<D0>(uint64_t a1@<X8>)
{
  type metadata accessor for SongDetailLyricsButton(0);
  return sub_21CE4CD64(a1);
}

uint64_t sub_21CE51E74()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21CE51EB0()
{
  return sub_21CE47580();
}

unint64_t sub_21CE51EB8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[3];

  result = qword_255331390;
  if (!qword_255331390)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255331380);
    sub_21CE513E4((uint64_t)&unk_255331398);
    v3[0] = v2;
    v3[1] = sub_21CE520DC();
    v3[2] = MEMORY[0x24BDF5138];
    result = MEMORY[0x2207938C0](MEMORY[0x24BDF4AF8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255331390);
  }
  return result;
}

unint64_t sub_21CE51F50()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_2553313A8;
  if (!qword_2553313A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553313B0);
    v2 = sub_21CE51FD4();
    sub_21CE553B0((uint64_t)&unk_2553313D8);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_2553313A8);
  }
  return result;
}

unint64_t sub_21CE51FD4()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_2553313B8;
  if (!qword_2553313B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553313C0);
    v2 = sub_21CE52058();
    sub_21CE553B0((uint64_t)&qword_253F66D80);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_2553313B8);
  }
  return result;
}

unint64_t sub_21CE52058()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_2553313C8;
  if (!qword_2553313C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553313D0);
    v2 = sub_21CDFDB90();
    sub_21CE553B0((uint64_t)&unk_253F66A90);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_2553313C8);
  }
  return result;
}

unint64_t sub_21CE520DC()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_2553313E8;
  if (!qword_2553313E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553313F0);
    v2 = sub_21CE52160();
    sub_21CE553B0((uint64_t)&unk_253F66A90);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_2553313E8);
  }
  return result;
}

unint64_t sub_21CE52160()
{
  unint64_t result;

  result = qword_2553313F8;
  if (!qword_2553313F8)
  {
    result = MEMORY[0x2207938C0](&unk_21D80F004, &type metadata for ListSectionView);
    atomic_store(result, (unint64_t *)&qword_2553313F8);
  }
  return result;
}

unint64_t sub_21CE5219C()
{
  unint64_t result;

  result = qword_255331400;
  if (!qword_255331400)
  {
    result = MEMORY[0x2207938C0](&unk_21D810748, &type metadata for MappedListSection);
    atomic_store(result, (unint64_t *)&qword_255331400);
  }
  return result;
}

uint64_t sub_21CE521D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21CE476C4(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_21CE521E0(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for MappedListSection(a2, a1);
  return a2;
}

uint64_t sub_21CE52224(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ListSectionView(a2, a1);
  return a2;
}

uint64_t sub_21CE52260(uint64_t a1)
{
  destroy for ListSectionView(a1);
  return a1;
}

ValueMetadata *type metadata accessor for RectangularSongContainerDetailPrimitiveButtonStyle()
{
  return &type metadata for RectangularSongContainerDetailPrimitiveButtonStyle;
}

uint64_t *sub_21CE522A4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char v73;
  char *__dst;
  uint64_t v76;
  uint64_t v77;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B80);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_21D7C1CA4();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
      {
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66B78);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
      }
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v10 = a3[5];
    v11 = (uint64_t *)((char *)a1 + v10);
    v12 = (uint64_t *)((char *)a2 + v10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_21D7C1CA4();
      if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66B78);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
        __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
      }
    }
    else
    {
      *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v15 = a3[6];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = (int *)type metadata accessor for SongDetailListHeaderLockup();
    if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, (uint64_t)v18))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330F98);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v20 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v20))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v16, v17, v20);
        __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v20);
      }
      v22 = v18[5];
      v23 = *(_OWORD *)&v17[v22 + 24];
      *(_OWORD *)&v16[v22 + 24] = v23;
      (**(void (***)(void))(v23 - 8))();
      v24 = v18[6];
      v25 = &v16[v24];
      v26 = &v17[v24];
      v27 = *((_QWORD *)v26 + 1);
      *(_QWORD *)v25 = *(_QWORD *)v26;
      *((_QWORD *)v25 + 1) = v27;
      v28 = v18[7];
      v29 = &v16[v28];
      v30 = &v17[v28];
      v31 = *((_QWORD *)v30 + 1);
      *(_QWORD *)v29 = *(_QWORD *)v30;
      *((_QWORD *)v29 + 1) = v31;
      v32 = v18[8];
      v33 = &v16[v32];
      v34 = &v17[v32];
      v35 = *(_QWORD *)&v17[v32 + 24];
      sub_21D7C4C20();
      sub_21D7C4C20();
      if (v35)
      {
        v36 = *((_QWORD *)v34 + 4);
        *((_QWORD *)v33 + 3) = v35;
        *((_QWORD *)v33 + 4) = v36;
        (**(void (***)(char *, char *, uint64_t))(v35 - 8))(v33, v34, v35);
      }
      else
      {
        v37 = *((_OWORD *)v34 + 1);
        *(_OWORD *)v33 = *(_OWORD *)v34;
        *((_OWORD *)v33 + 1) = v37;
        *((_QWORD *)v33 + 4) = *((_QWORD *)v34 + 4);
      }
      v38 = v18[9];
      v39 = &v16[v38];
      v40 = &v17[v38];
      v41 = *(_QWORD *)&v17[v38 + 24];
      if (v41)
      {
        v42 = *((_QWORD *)v40 + 4);
        *((_QWORD *)v39 + 3) = v41;
        *((_QWORD *)v39 + 4) = v42;
        (**(void (***)(void))(v41 - 8))();
      }
      else
      {
        v43 = *((_OWORD *)v40 + 1);
        *(_OWORD *)v39 = *(_OWORD *)v40;
        *((_OWORD *)v39 + 1) = v43;
        *((_QWORD *)v39 + 4) = *((_QWORD *)v40 + 4);
      }
      v44 = v18[10];
      v45 = &v16[v44];
      v46 = &v17[v44];
      v47 = type metadata accessor for ContentDescriptor();
      if (__swift_getEnumTagSinglePayload((uint64_t)v46, 1, v47))
      {
        v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        *v45 = *v46;
        v49 = *((_QWORD *)v46 + 2);
        *((_QWORD *)v45 + 1) = *((_QWORD *)v46 + 1);
        *((_QWORD *)v45 + 2) = v49;
        v50 = v47;
        v51 = *((_QWORD *)v46 + 4);
        *((_QWORD *)v45 + 3) = *((_QWORD *)v46 + 3);
        *((_QWORD *)v45 + 4) = v51;
        v52 = *((_QWORD *)v46 + 6);
        *((_QWORD *)v45 + 5) = *((_QWORD *)v46 + 5);
        *((_QWORD *)v45 + 6) = v52;
        v53 = *((_QWORD *)v46 + 8);
        *((_QWORD *)v45 + 7) = *((_QWORD *)v46 + 7);
        *((_QWORD *)v45 + 8) = v53;
        v54 = *((_QWORD *)v46 + 10);
        *((_QWORD *)v45 + 9) = *((_QWORD *)v46 + 9);
        *((_QWORD *)v45 + 10) = v54;
        v76 = v50;
        v77 = *((_QWORD *)v46 + 12);
        *((_QWORD *)v45 + 11) = *((_QWORD *)v46 + 11);
        *((_QWORD *)v45 + 12) = v77;
        *((_QWORD *)v45 + 13) = *((_QWORD *)v46 + 13);
        v45[112] = v46[112];
        v55 = *(int *)(v50 + 24);
        __dst = &v45[v55];
        v56 = &v46[v55];
        v57 = sub_21D7BF754();
        sub_21D7C4C20();
        sub_21D7C4C20();
        sub_21D7C4C20();
        sub_21D7C4C20();
        sub_21D7C4C20();
        sub_21D7C4C20();
        if (__swift_getEnumTagSinglePayload((uint64_t)v56, 1, v57))
        {
          v58 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
          memcpy(__dst, v56, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(__dst, v56, v57);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v57);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v45, 0, 1, v76);
      }
      v59 = v18[11];
      v60 = &v16[v59];
      v61 = &v17[v59];
      v62 = type metadata accessor for Artwork();
      if (__swift_getEnumTagSinglePayload((uint64_t)v61, 1, v62))
      {
        v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
        memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        v64 = sub_21D7C3840();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v60, v61, v64);
        v65 = *(int *)(v62 + 20);
        v66 = &v60[v65];
        v67 = &v61[v65];
        v68 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v66, v67, v68);
        __swift_storeEnumTagSinglePayload((uint64_t)v60, 0, 1, v62);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, (uint64_t)v18);
    }
    v69 = a3[7];
    v70 = (char *)a1 + v69;
    v71 = (char *)a2 + v69;
    v72 = *(_QWORD *)v71;
    v73 = v71[8];
    sub_21CE5289C(*(_QWORD *)v71, v73);
    *(_QWORD *)v70 = v72;
    v70[8] = v73;
  }
  return a1;
}

uint64_t sub_21CE5289C(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t sub_21CE528A8(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_21D7C1CA4();
    if (!__swift_getEnumTagSinglePayload(a1, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  v5 = a1 + a2[5];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_21D7C1CA4();
    if (!__swift_getEnumTagSinglePayload(v5, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  v7 = a1 + a2[6];
  v8 = (int *)type metadata accessor for SongDetailListHeaderLockup();
  if (!__swift_getEnumTagSinglePayload(v7, 1, (uint64_t)v8))
  {
    v9 = sub_21D7C4668();
    if (!__swift_getEnumTagSinglePayload(v7, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
    __swift_destroy_boxed_opaque_existential_1(v7 + v8[5]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = v7 + v8[8];
    if (*(_QWORD *)(v10 + 24))
      __swift_destroy_boxed_opaque_existential_1(v10);
    v11 = v7 + v8[9];
    if (*(_QWORD *)(v11 + 24))
      __swift_destroy_boxed_opaque_existential_1(v11);
    v12 = v7 + v8[10];
    v13 = type metadata accessor for ContentDescriptor();
    if (!__swift_getEnumTagSinglePayload(v12, 1, v13))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = v12 + *(int *)(v13 + 24);
      v15 = sub_21D7BF754();
      if (!__swift_getEnumTagSinglePayload(v14, 1, v15))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
    }
    v16 = v7 + v8[11];
    v17 = type metadata accessor for Artwork();
    if (!__swift_getEnumTagSinglePayload(v16, 1, v17))
    {
      v18 = sub_21D7C3840();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v16, v18);
      v19 = v16 + *(int *)(v17 + 20);
      v20 = sub_21D7C3804();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
    }
  }
  return sub_21CE52B54(*(_QWORD *)(a1 + a2[7]), *(_BYTE *)(a1 + a2[7] + 8));
}

uint64_t sub_21CE52B54(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_release();
  return result;
}

_QWORD *sub_21CE52B60(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char v74;
  char *__dst;
  uint64_t v77;
  int *v78;

  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_21D7C1CA4();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
    {
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66B78);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
    }
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v8 = a3[5];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_21D7C1CA4();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66B78);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
    }
  }
  else
  {
    *v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v13 = a3[6];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = (int *)type metadata accessor for SongDetailListHeaderLockup();
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, (uint64_t)v16))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330F98);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v18 = sub_21D7C4668();
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v18))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v14, v15, v18);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v18);
    }
    v20 = v16[5];
    v21 = *(_OWORD *)&v15[v20 + 24];
    *(_OWORD *)&v14[v20 + 24] = v21;
    (**(void (***)(void))(v21 - 8))();
    v22 = v16[6];
    v23 = &v14[v22];
    v24 = &v15[v22];
    v25 = *((_QWORD *)v24 + 1);
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *((_QWORD *)v23 + 1) = v25;
    v26 = v16[7];
    v27 = &v14[v26];
    v28 = &v15[v26];
    v29 = *((_QWORD *)v28 + 1);
    *(_QWORD *)v27 = *(_QWORD *)v28;
    *((_QWORD *)v27 + 1) = v29;
    v30 = v16[8];
    v31 = &v14[v30];
    v32 = &v15[v30];
    v33 = *(_QWORD *)&v15[v30 + 24];
    sub_21D7C4C20();
    sub_21D7C4C20();
    if (v33)
    {
      v34 = *((_QWORD *)v32 + 4);
      *((_QWORD *)v31 + 3) = v33;
      *((_QWORD *)v31 + 4) = v34;
      (**(void (***)(char *, char *, uint64_t))(v33 - 8))(v31, v32, v33);
    }
    else
    {
      v35 = *((_OWORD *)v32 + 1);
      *(_OWORD *)v31 = *(_OWORD *)v32;
      *((_OWORD *)v31 + 1) = v35;
      *((_QWORD *)v31 + 4) = *((_QWORD *)v32 + 4);
    }
    v36 = v16[9];
    v37 = &v14[v36];
    v38 = &v15[v36];
    v39 = *(_QWORD *)&v15[v36 + 24];
    if (v39)
    {
      v40 = *((_QWORD *)v38 + 4);
      *((_QWORD *)v37 + 3) = v39;
      *((_QWORD *)v37 + 4) = v40;
      (**(void (***)(void))(v39 - 8))();
    }
    else
    {
      v41 = *((_OWORD *)v38 + 1);
      *(_OWORD *)v37 = *(_OWORD *)v38;
      *((_OWORD *)v37 + 1) = v41;
      *((_QWORD *)v37 + 4) = *((_QWORD *)v38 + 4);
    }
    v42 = v16[10];
    v43 = &v14[v42];
    v44 = &v15[v42];
    v45 = type metadata accessor for ContentDescriptor();
    if (__swift_getEnumTagSinglePayload((uint64_t)v44, 1, v45))
    {
      v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      v78 = a3;
      *v43 = *v44;
      v47 = *((_QWORD *)v44 + 2);
      *((_QWORD *)v43 + 1) = *((_QWORD *)v44 + 1);
      *((_QWORD *)v43 + 2) = v47;
      v48 = *((_QWORD *)v44 + 4);
      *((_QWORD *)v43 + 3) = *((_QWORD *)v44 + 3);
      *((_QWORD *)v43 + 4) = v48;
      v49 = v45;
      v50 = *((_QWORD *)v44 + 6);
      *((_QWORD *)v43 + 5) = *((_QWORD *)v44 + 5);
      *((_QWORD *)v43 + 6) = v50;
      v51 = *((_QWORD *)v44 + 8);
      *((_QWORD *)v43 + 7) = *((_QWORD *)v44 + 7);
      *((_QWORD *)v43 + 8) = v51;
      v52 = *((_QWORD *)v44 + 10);
      *((_QWORD *)v43 + 9) = *((_QWORD *)v44 + 9);
      *((_QWORD *)v43 + 10) = v52;
      v53 = *((_QWORD *)v44 + 12);
      *((_QWORD *)v43 + 11) = *((_QWORD *)v44 + 11);
      *((_QWORD *)v43 + 12) = v53;
      *((_QWORD *)v43 + 13) = *((_QWORD *)v44 + 13);
      v43[112] = v44[112];
      v77 = v49;
      v54 = *(int *)(v49 + 24);
      __dst = &v43[v54];
      v55 = &v44[v54];
      v56 = sub_21D7BF754();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      if (__swift_getEnumTagSinglePayload((uint64_t)v55, 1, v56))
      {
        v57 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
        memcpy(__dst, v55, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(__dst, v55, v56);
        __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v56);
      }
      a3 = v78;
      __swift_storeEnumTagSinglePayload((uint64_t)v43, 0, 1, v77);
    }
    v58 = v16[11];
    v59 = &v14[v58];
    v60 = &v15[v58];
    v61 = type metadata accessor for Artwork();
    if (__swift_getEnumTagSinglePayload((uint64_t)v60, 1, v61))
    {
      v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
      memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      v63 = sub_21D7C3840();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v59, v60, v63);
      v64 = *(int *)(v61 + 20);
      v65 = a3;
      v66 = &v59[v64];
      v67 = &v60[v64];
      v68 = sub_21D7C3804();
      v69 = v66;
      a3 = v65;
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v69, v67, v68);
      __swift_storeEnumTagSinglePayload((uint64_t)v59, 0, 1, v61);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, (uint64_t)v16);
  }
  v70 = a3[7];
  v71 = (char *)a1 + v70;
  v72 = (char *)a2 + v70;
  v73 = *(_QWORD *)v72;
  v74 = v72[8];
  sub_21CE5289C(*(_QWORD *)v72, v74);
  *(_QWORD *)v71 = v73;
  v71[8] = v74;
  return a1;
}

_QWORD *sub_21CE53138(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  int *v16;
  int EnumTagSinglePayload;
  int v18;
  uint64_t v19;
  uint64_t v20;
  size_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  char *v78;
  int *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  char v92;
  __int128 v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  __int128 v100;
  __int128 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  const void *v110;
  uint64_t v111;
  uint64_t v112;
  size_t v113;
  void *v114;
  const void *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  int v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *__dst;
  int *v143;
  void *v144;

  v4 = a2;
  if (a1 != a2)
  {
    sub_21CDBDA44((uint64_t)a1, &qword_253F65B80);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B80);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_21D7C1CA4();
      if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v6))
      {
        v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66B78);
        memcpy(a1, v4, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, v4, v6);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      }
    }
    else
    {
      *a1 = *v4;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v8 = a3[5];
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)v4 + v8);
    sub_21CDBDA44((uint64_t)a1 + v8, &qword_253F65B80);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B80);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_21D7C1CA4();
      if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66B78);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
        __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
      }
    }
    else
    {
      *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v13 = a3[6];
  v14 = (char *)a1 + v13;
  v15 = (char *)v4 + v13;
  v16 = (int *)type metadata accessor for SongDetailListHeaderLockup();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, (uint64_t)v16);
  v18 = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, (uint64_t)v16);
  if (EnumTagSinglePayload)
  {
    if (!v18)
    {
      v19 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v19))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v14, v15, v19);
        __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v19);
      }
      v27 = v16[5];
      v28 = &v14[v27];
      v29 = *(_QWORD *)&v15[v27 + 24];
      *((_QWORD *)v28 + 3) = v29;
      *((_QWORD *)v28 + 4) = *(_QWORD *)&v15[v27 + 32];
      (**(void (***)(void))(v29 - 8))();
      v30 = v16[6];
      v31 = &v14[v30];
      v32 = &v15[v30];
      *(_QWORD *)v31 = *(_QWORD *)v32;
      *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
      v33 = v16[7];
      v34 = &v14[v33];
      v35 = &v15[v33];
      *(_QWORD *)v34 = *(_QWORD *)v35;
      *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
      v36 = v16[8];
      v37 = &v14[v36];
      v38 = &v15[v36];
      v39 = *(_QWORD *)&v15[v36 + 24];
      sub_21D7C4C20();
      sub_21D7C4C20();
      if (v39)
      {
        *((_QWORD *)v37 + 3) = v39;
        *((_QWORD *)v37 + 4) = *((_QWORD *)v38 + 4);
        (**(void (***)(char *, char *, uint64_t))(v39 - 8))(v37, v38, v39);
      }
      else
      {
        v40 = *(_OWORD *)v38;
        v41 = *((_OWORD *)v38 + 1);
        *((_QWORD *)v37 + 4) = *((_QWORD *)v38 + 4);
        *(_OWORD *)v37 = v40;
        *((_OWORD *)v37 + 1) = v41;
      }
      v42 = v16[9];
      v43 = &v14[v42];
      v44 = &v15[v42];
      v45 = *(_QWORD *)&v15[v42 + 24];
      if (v45)
      {
        *((_QWORD *)v43 + 3) = v45;
        *((_QWORD *)v43 + 4) = *((_QWORD *)v44 + 4);
        (**(void (***)(void))(v45 - 8))();
      }
      else
      {
        v46 = *(_OWORD *)v44;
        v47 = *((_OWORD *)v44 + 1);
        *((_QWORD *)v43 + 4) = *((_QWORD *)v44 + 4);
        *(_OWORD *)v43 = v46;
        *((_OWORD *)v43 + 1) = v47;
      }
      v48 = v16[10];
      v49 = &v14[v48];
      v50 = &v15[v48];
      v51 = type metadata accessor for ContentDescriptor();
      if (__swift_getEnumTagSinglePayload((uint64_t)v50, 1, v51))
      {
        v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        v143 = a3;
        *v49 = *v50;
        *((_QWORD *)v49 + 1) = *((_QWORD *)v50 + 1);
        *((_QWORD *)v49 + 2) = *((_QWORD *)v50 + 2);
        *((_QWORD *)v49 + 3) = *((_QWORD *)v50 + 3);
        *((_QWORD *)v49 + 4) = *((_QWORD *)v50 + 4);
        *((_QWORD *)v49 + 5) = *((_QWORD *)v50 + 5);
        *((_QWORD *)v49 + 6) = *((_QWORD *)v50 + 6);
        *((_QWORD *)v49 + 7) = *((_QWORD *)v50 + 7);
        *((_QWORD *)v49 + 8) = *((_QWORD *)v50 + 8);
        *((_QWORD *)v49 + 9) = *((_QWORD *)v50 + 9);
        *((_QWORD *)v49 + 10) = *((_QWORD *)v50 + 10);
        *((_QWORD *)v49 + 11) = *((_QWORD *)v50 + 11);
        *((_QWORD *)v49 + 12) = *((_QWORD *)v50 + 12);
        v53 = *((_QWORD *)v50 + 13);
        v49[112] = v50[112];
        *((_QWORD *)v49 + 13) = v53;
        v54 = *(int *)(v51 + 24);
        __dst = &v49[v54];
        v55 = &v50[v54];
        v56 = sub_21D7BF754();
        sub_21D7C4C20();
        sub_21D7C4C20();
        sub_21D7C4C20();
        sub_21D7C4C20();
        sub_21D7C4C20();
        sub_21D7C4C20();
        if (__swift_getEnumTagSinglePayload((uint64_t)v55, 1, v56))
        {
          v57 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
          memcpy(__dst, v55, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(__dst, v55, v56);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v56);
        }
        a3 = v143;
        __swift_storeEnumTagSinglePayload((uint64_t)v49, 0, 1, v51);
      }
      v70 = v16[11];
      v71 = &v14[v70];
      v72 = &v15[v70];
      v73 = type metadata accessor for Artwork();
      if (__swift_getEnumTagSinglePayload((uint64_t)v72, 1, v73))
      {
        v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
        memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
      }
      else
      {
        v75 = sub_21D7C3840();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v71, v72, v75);
        v76 = *(int *)(v73 + 20);
        v77 = v4;
        v78 = &v71[v76];
        v79 = a3;
        v80 = &v72[v76];
        v81 = sub_21D7C3804();
        v82 = v78;
        v4 = v77;
        v83 = v80;
        a3 = v79;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(v82, v83, v81);
        __swift_storeEnumTagSinglePayload((uint64_t)v71, 0, 1, v73);
      }
      v84 = (uint64_t)v14;
      v85 = (uint64_t)v16;
      goto LABEL_49;
    }
    goto LABEL_19;
  }
  if (v18)
  {
    sub_21CDBDA1C((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for SongDetailListHeaderLockup);
LABEL_19:
    v21 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255330F98) - 8) + 64);
    v22 = v14;
    v23 = v15;
    goto LABEL_20;
  }
  v24 = sub_21D7C4668();
  v25 = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v24);
  v26 = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v24);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v14, v15, v24);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v24);
      goto LABEL_38;
    }
    goto LABEL_37;
  }
  v58 = *(_QWORD *)(v24 - 8);
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v58 + 8))(v14, v24);
LABEL_37:
    v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    goto LABEL_38;
  }
  (*(void (**)(char *, char *, uint64_t))(v58 + 24))(v14, v15, v24);
LABEL_38:
  __swift_assign_boxed_opaque_existential_1((uint64_t *)&v14[v16[5]], (uint64_t *)&v15[v16[5]]);
  v60 = v16[6];
  v61 = &v14[v60];
  v62 = &v15[v60];
  *(_QWORD *)v61 = *(_QWORD *)v62;
  *((_QWORD *)v61 + 1) = *((_QWORD *)v62 + 1);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  v63 = v16[7];
  v64 = &v14[v63];
  v65 = &v15[v63];
  *(_QWORD *)v64 = *(_QWORD *)v65;
  *((_QWORD *)v64 + 1) = *((_QWORD *)v65 + 1);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  v66 = v16[8];
  v67 = (uint64_t)&v14[v66];
  v68 = (uint64_t *)&v15[v66];
  v69 = *(_QWORD *)&v15[v66 + 24];
  if (*(_QWORD *)&v14[v66 + 24])
  {
    if (v69)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)v67, v68);
      goto LABEL_53;
    }
    __swift_destroy_boxed_opaque_existential_1(v67);
  }
  else if (v69)
  {
    *(_QWORD *)(v67 + 24) = v69;
    *(_QWORD *)(v67 + 32) = v68[4];
    (**(void (***)(uint64_t, char *))(v69 - 8))(v67, (char *)v68);
    goto LABEL_53;
  }
  v94 = *(_OWORD *)v68;
  v95 = *((_OWORD *)v68 + 1);
  *(_QWORD *)(v67 + 32) = v68[4];
  *(_OWORD *)v67 = v94;
  *(_OWORD *)(v67 + 16) = v95;
LABEL_53:
  v96 = v16[9];
  v97 = (uint64_t)&v14[v96];
  v98 = (uint64_t *)&v15[v96];
  v99 = *(_QWORD *)&v15[v96 + 24];
  if (*(_QWORD *)&v14[v96 + 24])
  {
    if (v99)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)v97, v98);
      goto LABEL_60;
    }
    __swift_destroy_boxed_opaque_existential_1(v97);
  }
  else if (v99)
  {
    *(_QWORD *)(v97 + 24) = v99;
    *(_QWORD *)(v97 + 32) = v98[4];
    (**(void (***)(uint64_t, char *))(v99 - 8))(v97, (char *)v98);
    goto LABEL_60;
  }
  v100 = *(_OWORD *)v98;
  v101 = *((_OWORD *)v98 + 1);
  *(_QWORD *)(v97 + 32) = v98[4];
  *(_OWORD *)v97 = v100;
  *(_OWORD *)(v97 + 16) = v101;
LABEL_60:
  v102 = v16[10];
  v103 = (uint64_t)&v14[v102];
  v104 = (uint64_t)&v15[v102];
  v105 = type metadata accessor for ContentDescriptor();
  v106 = __swift_getEnumTagSinglePayload(v103, 1, v105);
  v107 = __swift_getEnumTagSinglePayload(v104, 1, v105);
  if (v106)
  {
    if (!v107)
    {
      *(_BYTE *)v103 = *(_BYTE *)v104;
      *(_QWORD *)(v103 + 8) = *(_QWORD *)(v104 + 8);
      *(_QWORD *)(v103 + 16) = *(_QWORD *)(v104 + 16);
      *(_QWORD *)(v103 + 24) = *(_QWORD *)(v104 + 24);
      *(_QWORD *)(v103 + 32) = *(_QWORD *)(v104 + 32);
      *(_QWORD *)(v103 + 40) = *(_QWORD *)(v104 + 40);
      *(_QWORD *)(v103 + 48) = *(_QWORD *)(v104 + 48);
      *(_QWORD *)(v103 + 56) = *(_QWORD *)(v104 + 56);
      *(_QWORD *)(v103 + 64) = *(_QWORD *)(v104 + 64);
      *(_QWORD *)(v103 + 72) = *(_QWORD *)(v104 + 72);
      *(_QWORD *)(v103 + 80) = *(_QWORD *)(v104 + 80);
      *(_QWORD *)(v103 + 88) = *(_QWORD *)(v104 + 88);
      *(_QWORD *)(v103 + 96) = *(_QWORD *)(v104 + 96);
      v108 = *(_QWORD *)(v104 + 104);
      *(_BYTE *)(v103 + 112) = *(_BYTE *)(v104 + 112);
      *(_QWORD *)(v103 + 104) = v108;
      v109 = *(int *)(v105 + 24);
      v144 = (void *)(v103 + v109);
      v110 = (const void *)(v104 + v109);
      v111 = sub_21D7BF754();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      if (__swift_getEnumTagSinglePayload((uint64_t)v110, 1, v111))
      {
        v112 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
        memcpy(v144, v110, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v111 - 8) + 16))(v144, v110, v111);
        __swift_storeEnumTagSinglePayload((uint64_t)v144, 0, 1, v111);
      }
      v123 = v103;
      v124 = v105;
      goto LABEL_74;
    }
    goto LABEL_66;
  }
  if (v107)
  {
    sub_21CDBDA1C(v103, (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
LABEL_66:
    v113 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253F60800) - 8) + 64);
    v114 = (void *)v103;
    v115 = (const void *)v104;
    goto LABEL_67;
  }
  *(_BYTE *)v103 = *(_BYTE *)v104;
  *(_QWORD *)(v103 + 8) = *(_QWORD *)(v104 + 8);
  *(_QWORD *)(v103 + 16) = *(_QWORD *)(v104 + 16);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v103 + 24) = *(_QWORD *)(v104 + 24);
  *(_QWORD *)(v103 + 32) = *(_QWORD *)(v104 + 32);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v103 + 40) = *(_QWORD *)(v104 + 40);
  *(_QWORD *)(v103 + 48) = *(_QWORD *)(v104 + 48);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v103 + 56) = *(_QWORD *)(v104 + 56);
  *(_QWORD *)(v103 + 64) = *(_QWORD *)(v104 + 64);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v103 + 72) = *(_QWORD *)(v104 + 72);
  *(_QWORD *)(v103 + 80) = *(_QWORD *)(v104 + 80);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v103 + 88) = *(_QWORD *)(v104 + 88);
  *(_QWORD *)(v103 + 96) = *(_QWORD *)(v104 + 96);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  v116 = *(_QWORD *)(v104 + 104);
  *(_BYTE *)(v103 + 112) = *(_BYTE *)(v104 + 112);
  *(_QWORD *)(v103 + 104) = v116;
  v117 = *(int *)(v105 + 24);
  v118 = v103 + v117;
  v119 = v104 + v117;
  v120 = sub_21D7BF754();
  v121 = __swift_getEnumTagSinglePayload(v118, 1, v120);
  v122 = __swift_getEnumTagSinglePayload(v119, 1, v120);
  if (v121)
  {
    if (!v122)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v120 - 8) + 16))(v118, v119, v120);
      v123 = v118;
      v124 = v120;
LABEL_74:
      __swift_storeEnumTagSinglePayload(v123, 0, 1, v124);
      goto LABEL_75;
    }
  }
  else
  {
    v141 = *(_QWORD *)(v120 - 8);
    if (!v122)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v141 + 24))(v118, v119, v120);
      goto LABEL_75;
    }
    (*(void (**)(uint64_t, uint64_t))(v141 + 8))(v118, v120);
  }
  v113 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10) - 8) + 64);
  v114 = (void *)v118;
  v115 = (const void *)v119;
LABEL_67:
  memcpy(v114, v115, v113);
LABEL_75:
  v125 = v16[11];
  v126 = (uint64_t)&v14[v125];
  v127 = (uint64_t)&v15[v125];
  v128 = type metadata accessor for Artwork();
  v129 = __swift_getEnumTagSinglePayload(v126, 1, v128);
  v130 = __swift_getEnumTagSinglePayload(v127, 1, v128);
  if (v129)
  {
    if (!v130)
    {
      v131 = sub_21D7C3840();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v131 - 8) + 16))(v126, v127, v131);
      v132 = *(int *)(v128 + 20);
      v133 = v126 + v132;
      v134 = v127 + v132;
      v135 = sub_21D7C3804();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v135 - 8) + 16))(v133, v134, v135);
      v84 = v126;
      v85 = v128;
LABEL_49:
      __swift_storeEnumTagSinglePayload(v84, 0, 1, v85);
      goto LABEL_50;
    }
  }
  else
  {
    if (!v130)
    {
      v136 = sub_21D7C3840();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v136 - 8) + 24))(v126, v127, v136);
      v137 = *(int *)(v128 + 20);
      v138 = v126 + v137;
      v139 = v127 + v137;
      v140 = sub_21D7C3804();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v140 - 8) + 24))(v138, v139, v140);
      goto LABEL_50;
    }
    sub_21CDBDA1C(v126, (uint64_t (*)(_QWORD))type metadata accessor for Artwork);
  }
  v21 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8) - 8) + 64);
  v22 = (void *)v126;
  v23 = (const void *)v127;
LABEL_20:
  memcpy(v22, v23, v21);
LABEL_50:
  v86 = a3[7];
  v87 = (char *)a1 + v86;
  v88 = (char *)v4 + v86;
  v89 = *(_QWORD *)v88;
  v90 = v88[8];
  sub_21CE5289C(*(_QWORD *)v88, v90);
  v91 = *(_QWORD *)v87;
  v92 = v87[8];
  *(_QWORD *)v87 = v89;
  v87[8] = v90;
  sub_21CE52B54(v91, v92);
  return a1;
}

char *sub_21CE53E5C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *__dst;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_21D7C1CA4();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66B78);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_21D7C1CA4();
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66B78);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = (int *)type metadata accessor for SongDetailListHeaderLockup();
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, (uint64_t)v17))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330F98);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v19 = sub_21D7C4668();
    if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v19))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v15, v16, v19);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v19);
    }
    v21 = v17[5];
    v22 = &v15[v21];
    v23 = &v16[v21];
    v24 = *((_OWORD *)v23 + 1);
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *((_OWORD *)v22 + 1) = v24;
    *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
    *(_OWORD *)&v15[v17[6]] = *(_OWORD *)&v16[v17[6]];
    *(_OWORD *)&v15[v17[7]] = *(_OWORD *)&v16[v17[7]];
    v25 = v17[8];
    v26 = &v15[v25];
    v27 = &v16[v25];
    *((_QWORD *)v26 + 4) = *((_QWORD *)v27 + 4);
    v28 = *((_OWORD *)v27 + 1);
    *(_OWORD *)v26 = *(_OWORD *)v27;
    *((_OWORD *)v26 + 1) = v28;
    v29 = v17[9];
    v30 = &v15[v29];
    v31 = &v16[v29];
    *((_QWORD *)v30 + 4) = *((_QWORD *)v31 + 4);
    v32 = *((_OWORD *)v31 + 1);
    *(_OWORD *)v30 = *(_OWORD *)v31;
    *((_OWORD *)v30 + 1) = v32;
    v33 = v17[10];
    v34 = &v15[v33];
    v35 = &v16[v33];
    v36 = type metadata accessor for ContentDescriptor();
    if (__swift_getEnumTagSinglePayload((uint64_t)v35, 1, v36))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      *v34 = *v35;
      memcpy(v34 + 8, v35 + 8, 0x69uLL);
      v38 = *(int *)(v36 + 24);
      __dst = &v34[v38];
      v39 = &v35[v38];
      v40 = sub_21D7BF754();
      if (__swift_getEnumTagSinglePayload((uint64_t)v39, 1, v40))
      {
        v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
        memcpy(__dst, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(__dst, v39, v40);
        __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v40);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v36);
    }
    v42 = v17[11];
    v43 = &v15[v42];
    v44 = &v16[v42];
    v45 = type metadata accessor for Artwork();
    if (__swift_getEnumTagSinglePayload((uint64_t)v44, 1, v45))
    {
      v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      v47 = sub_21D7C3840();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v43, v44, v47);
      v48 = *(int *)(v45 + 20);
      v49 = &v43[v48];
      v50 = &v44[v48];
      v51 = sub_21D7C3804();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
      __swift_storeEnumTagSinglePayload((uint64_t)v43, 0, 1, v45);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, (uint64_t)v17);
  }
  v52 = a3[7];
  v53 = &a1[v52];
  v54 = &a2[v52];
  *(_QWORD *)v53 = *(_QWORD *)v54;
  v53[8] = v54[8];
  return a1;
}

char *sub_21CE54328(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  int EnumTagSinglePayload;
  int v20;
  uint64_t v21;
  uint64_t v22;
  size_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  __int128 v36;
  uint64_t v37;
  char *v38;
  char *v39;
  __int128 v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  __int128 v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  int v80;
  uint64_t v81;
  void *v82;
  const void *v83;
  uint64_t v84;
  uint64_t v85;
  size_t v86;
  void *v87;
  const void *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  int v118;
  int v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  int *v139;
  int *v140;

  if (a1 != a2)
  {
    sub_21CDBDA44((uint64_t)a1, &qword_253F65B80);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B80);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_21D7C1CA4();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
      {
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66B78);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    v9 = a3[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    sub_21CDBDA44((uint64_t)&a1[v9], &qword_253F65B80);
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B80);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_21D7C1CA4();
      if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v13))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66B78);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v10, v11, v13);
        __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v13);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
  }
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = (int *)type metadata accessor for SongDetailListHeaderLockup();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, (uint64_t)v18);
  v20 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, (uint64_t)v18);
  if (EnumTagSinglePayload)
  {
    if (!v20)
    {
      v21 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v21))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v16, v17, v21);
        __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v21);
      }
      v29 = v18[5];
      v30 = &v16[v29];
      v31 = &v17[v29];
      v32 = *((_OWORD *)v31 + 1);
      *(_OWORD *)v30 = *(_OWORD *)v31;
      *((_OWORD *)v30 + 1) = v32;
      *((_QWORD *)v30 + 4) = *((_QWORD *)v31 + 4);
      *(_OWORD *)&v16[v18[6]] = *(_OWORD *)&v17[v18[6]];
      *(_OWORD *)&v16[v18[7]] = *(_OWORD *)&v17[v18[7]];
      v33 = v18[8];
      v34 = &v16[v33];
      v35 = &v17[v33];
      *((_QWORD *)v34 + 4) = *((_QWORD *)v35 + 4);
      v36 = *((_OWORD *)v35 + 1);
      *(_OWORD *)v34 = *(_OWORD *)v35;
      *((_OWORD *)v34 + 1) = v36;
      v37 = v18[9];
      v38 = &v16[v37];
      v39 = &v17[v37];
      *((_QWORD *)v38 + 4) = *((_QWORD *)v39 + 4);
      v40 = *((_OWORD *)v39 + 1);
      *(_OWORD *)v38 = *(_OWORD *)v39;
      *((_OWORD *)v38 + 1) = v40;
      v41 = v18[10];
      v42 = &v16[v41];
      v43 = &v17[v41];
      v44 = type metadata accessor for ContentDescriptor();
      if (__swift_getEnumTagSinglePayload((uint64_t)v43, 1, v44))
      {
        v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        v139 = a3;
        *v42 = *v43;
        memcpy(v42 + 8, v43 + 8, 0x69uLL);
        v46 = *(int *)(v44 + 24);
        v47 = &v42[v46];
        v48 = &v43[v46];
        v49 = sub_21D7BF754();
        if (__swift_getEnumTagSinglePayload((uint64_t)v48, 1, v49))
        {
          v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
          memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
          __swift_storeEnumTagSinglePayload((uint64_t)v47, 0, 1, v49);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v42, 0, 1, v44);
        a3 = v139;
      }
      v89 = v18[11];
      v90 = &v16[v89];
      v91 = &v17[v89];
      v92 = type metadata accessor for Artwork();
      if (__swift_getEnumTagSinglePayload((uint64_t)v91, 1, v92))
      {
        v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
        memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
      }
      else
      {
        v94 = sub_21D7C3840();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(v90, v91, v94);
        v95 = *(int *)(v92 + 20);
        v96 = &v90[v95];
        v97 = &v91[v95];
        v98 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v96, v97, v98);
        __swift_storeEnumTagSinglePayload((uint64_t)v90, 0, 1, v92);
      }
      v99 = (uint64_t)v16;
      v100 = (uint64_t)v18;
      goto LABEL_51;
    }
    goto LABEL_20;
  }
  if (v20)
  {
    sub_21CDBDA1C((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for SongDetailListHeaderLockup);
LABEL_20:
    v23 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255330F98) - 8) + 64);
    v24 = v16;
    v25 = v17;
    goto LABEL_21;
  }
  v26 = sub_21D7C4668();
  v27 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v26);
  v28 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v26);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v16, v17, v26);
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v26);
      goto LABEL_33;
    }
    goto LABEL_32;
  }
  v51 = *(_QWORD *)(v26 - 8);
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v51 + 8))(v16, v26);
LABEL_32:
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    goto LABEL_33;
  }
  (*(void (**)(char *, char *, uint64_t))(v51 + 40))(v16, v17, v26);
LABEL_33:
  v53 = v18[5];
  v54 = &v16[v53];
  v55 = &v17[v53];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16[v53]);
  v56 = *((_OWORD *)v55 + 1);
  *(_OWORD *)v54 = *(_OWORD *)v55;
  *((_OWORD *)v54 + 1) = v56;
  *((_QWORD *)v54 + 4) = *((_QWORD *)v55 + 4);
  v57 = v18[6];
  v58 = &v16[v57];
  v59 = &v17[v57];
  v61 = *(_QWORD *)v59;
  v60 = *((_QWORD *)v59 + 1);
  *(_QWORD *)v58 = v61;
  *((_QWORD *)v58 + 1) = v60;
  swift_bridgeObjectRelease();
  v62 = v18[7];
  v63 = &v16[v62];
  v64 = &v17[v62];
  v66 = *(_QWORD *)v64;
  v65 = *((_QWORD *)v64 + 1);
  *(_QWORD *)v63 = v66;
  *((_QWORD *)v63 + 1) = v65;
  swift_bridgeObjectRelease();
  v67 = v18[8];
  v68 = (uint64_t)&v16[v67];
  v69 = &v17[v67];
  if (*(_QWORD *)&v16[v67 + 24])
    __swift_destroy_boxed_opaque_existential_1(v68);
  v70 = *((_OWORD *)v69 + 1);
  *(_OWORD *)v68 = *(_OWORD *)v69;
  *(_OWORD *)(v68 + 16) = v70;
  *(_QWORD *)(v68 + 32) = *((_QWORD *)v69 + 4);
  v71 = v18[9];
  v72 = (uint64_t)&v16[v71];
  v73 = &v17[v71];
  if (*(_QWORD *)&v16[v71 + 24])
    __swift_destroy_boxed_opaque_existential_1(v72);
  v74 = *((_OWORD *)v73 + 1);
  *(_OWORD *)v72 = *(_OWORD *)v73;
  *(_OWORD *)(v72 + 16) = v74;
  *(_QWORD *)(v72 + 32) = *((_QWORD *)v73 + 4);
  v75 = v18[10];
  v76 = (uint64_t)&v16[v75];
  v77 = (uint64_t)&v17[v75];
  v78 = type metadata accessor for ContentDescriptor();
  v79 = __swift_getEnumTagSinglePayload(v76, 1, v78);
  v80 = __swift_getEnumTagSinglePayload(v77, 1, v78);
  if (v79)
  {
    if (!v80)
    {
      v140 = a3;
      *(_BYTE *)v76 = *(_BYTE *)v77;
      memcpy((void *)(v76 + 8), (const void *)(v77 + 8), 0x69uLL);
      v81 = *(int *)(v78 + 24);
      v82 = (void *)(v76 + v81);
      v83 = (const void *)(v77 + v81);
      v84 = sub_21D7BF754();
      if (__swift_getEnumTagSinglePayload((uint64_t)v83, 1, v84))
      {
        v85 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
        memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(v82, v83, v84);
        __swift_storeEnumTagSinglePayload((uint64_t)v82, 0, 1, v84);
      }
      a3 = v140;
      v120 = v76;
      v121 = v78;
      goto LABEL_59;
    }
    goto LABEL_43;
  }
  if (v80)
  {
    sub_21CDBDA1C(v76, (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
LABEL_43:
    v86 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253F60800) - 8) + 64);
    v87 = (void *)v76;
    v88 = (const void *)v77;
    goto LABEL_44;
  }
  *(_BYTE *)v76 = *(_BYTE *)v77;
  v108 = *(_QWORD *)(v77 + 16);
  *(_QWORD *)(v76 + 8) = *(_QWORD *)(v77 + 8);
  *(_QWORD *)(v76 + 16) = v108;
  swift_bridgeObjectRelease();
  v109 = *(_QWORD *)(v77 + 32);
  *(_QWORD *)(v76 + 24) = *(_QWORD *)(v77 + 24);
  *(_QWORD *)(v76 + 32) = v109;
  swift_bridgeObjectRelease();
  v110 = *(_QWORD *)(v77 + 48);
  *(_QWORD *)(v76 + 40) = *(_QWORD *)(v77 + 40);
  *(_QWORD *)(v76 + 48) = v110;
  swift_bridgeObjectRelease();
  v111 = *(_QWORD *)(v77 + 64);
  *(_QWORD *)(v76 + 56) = *(_QWORD *)(v77 + 56);
  *(_QWORD *)(v76 + 64) = v111;
  swift_bridgeObjectRelease();
  v112 = *(_QWORD *)(v77 + 80);
  *(_QWORD *)(v76 + 72) = *(_QWORD *)(v77 + 72);
  *(_QWORD *)(v76 + 80) = v112;
  swift_bridgeObjectRelease();
  v113 = *(_QWORD *)(v77 + 96);
  *(_QWORD *)(v76 + 88) = *(_QWORD *)(v77 + 88);
  *(_QWORD *)(v76 + 96) = v113;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v76 + 104) = *(_QWORD *)(v77 + 104);
  *(_BYTE *)(v76 + 112) = *(_BYTE *)(v77 + 112);
  v114 = *(int *)(v78 + 24);
  v115 = v76 + v114;
  v116 = v77 + v114;
  v117 = sub_21D7BF754();
  v118 = __swift_getEnumTagSinglePayload(v115, 1, v117);
  v119 = __swift_getEnumTagSinglePayload(v116, 1, v117);
  if (v118)
  {
    if (!v119)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 32))(v115, v116, v117);
      v120 = v115;
      v121 = v117;
LABEL_59:
      __swift_storeEnumTagSinglePayload(v120, 0, 1, v121);
      goto LABEL_60;
    }
  }
  else
  {
    v138 = *(_QWORD *)(v117 - 8);
    if (!v119)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v138 + 40))(v115, v116, v117);
      goto LABEL_60;
    }
    (*(void (**)(uint64_t, uint64_t))(v138 + 8))(v115, v117);
  }
  v86 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10) - 8) + 64);
  v87 = (void *)v115;
  v88 = (const void *)v116;
LABEL_44:
  memcpy(v87, v88, v86);
LABEL_60:
  v122 = v18[11];
  v123 = (uint64_t)&v16[v122];
  v124 = (uint64_t)&v17[v122];
  v125 = type metadata accessor for Artwork();
  v126 = __swift_getEnumTagSinglePayload(v123, 1, v125);
  v127 = __swift_getEnumTagSinglePayload(v124, 1, v125);
  if (v126)
  {
    if (!v127)
    {
      v128 = sub_21D7C3840();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 32))(v123, v124, v128);
      v129 = *(int *)(v125 + 20);
      v130 = v123 + v129;
      v131 = v124 + v129;
      v132 = sub_21D7C3804();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v132 - 8) + 32))(v130, v131, v132);
      v99 = v123;
      v100 = v125;
LABEL_51:
      __swift_storeEnumTagSinglePayload(v99, 0, 1, v100);
      goto LABEL_52;
    }
  }
  else
  {
    if (!v127)
    {
      v133 = sub_21D7C3840();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v133 - 8) + 40))(v123, v124, v133);
      v134 = *(int *)(v125 + 20);
      v135 = v123 + v134;
      v136 = v124 + v134;
      v137 = sub_21D7C3804();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 40))(v135, v136, v137);
      goto LABEL_52;
    }
    sub_21CDBDA1C(v123, (uint64_t (*)(_QWORD))type metadata accessor for Artwork);
  }
  v23 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8) - 8) + 64);
  v24 = (void *)v123;
  v25 = (const void *)v124;
LABEL_21:
  memcpy(v24, v25, v23);
LABEL_52:
  v101 = a3[7];
  v102 = &a1[v101];
  v103 = &a2[v101];
  v104 = *(_QWORD *)v103;
  LOBYTE(v103) = v103[8];
  v105 = *(_QWORD *)v102;
  v106 = v102[8];
  *(_QWORD *)v102 = v104;
  v102[8] = (char)v103;
  sub_21CE52B54(v105, v106);
  return a1;
}

uint64_t sub_21CE54D58()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_21CE54D64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255330F90);
  OUTLINED_FUNCTION_113();
  if (v9)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255330F98);
    OUTLINED_FUNCTION_113();
    if (!v9)
    {
      OUTLINED_FUNCTION_98();
      return;
    }
    v7 = v10;
    v8 = a1 + *(int *)(a3 + 24);
  }
  OUTLINED_FUNCTION_16_3(v8, a2, v7);
}

uint64_t sub_21CE54DEC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_21CE54DF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  OUTLINED_FUNCTION_79_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255330F90);
  OUTLINED_FUNCTION_53_2();
  if (v6)
  {
    v4 = v3;
    v5 = v1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255330F98);
    OUTLINED_FUNCTION_53_2();
    if (!v6)
    {
      *(_BYTE *)(v1 + *(int *)(v2 + 28) + 8) = -(char)v0;
      OUTLINED_FUNCTION_98();
      return;
    }
    v4 = v7;
    v5 = v1 + *(int *)(v2 + 24);
  }
  OUTLINED_FUNCTION_17_2(v5, v0, v0, v4);
}

void sub_21CE54E74()
{
  unint64_t v0;
  unint64_t v1;

  sub_21CE50DB4();
  if (v0 <= 0x3F)
  {
    sub_21CDB3900(319, qword_253F63050, (void (*)(uint64_t))type metadata accessor for SongDetailListHeaderLockup);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_21CE54F10()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553310E0);
  sub_21D7C3564();
  sub_21CE5103C();
  sub_21CDF81B4((uint64_t)&unk_255331210);
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_54();
}

unint64_t sub_21CE54F8C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_2553314A0;
  if (!qword_2553314A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553314A8);
    sub_21CE55008((uint64_t)&unk_2553314B0);
    v3 = v2;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDF5578], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_2553314A0);
  }
  return result;
}

void sub_21CE55008(uint64_t a1)
{
  uint64_t *v1;
  void (*v2)(void);
  void (*v3)(void);

  if (!OUTLINED_FUNCTION_115(a1))
  {
    v3 = v2;
    OUTLINED_FUNCTION_16_9(0, v1);
    v3();
    OUTLINED_FUNCTION_73();
  }
  OUTLINED_FUNCTION_54();
}

unint64_t sub_21CE55064()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_2553314B8;
  if (!qword_2553314B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553314C0);
    v2 = sub_21CE51EB8();
    result = MEMORY[0x2207938C0](MEMORY[0x24BDF4A08], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2553314B8);
  }
  return result;
}

uint64_t sub_21CE550C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21CE550D8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_21CE550E8()
{
  unint64_t result;

  result = qword_2553314D8;
  if (!qword_2553314D8)
  {
    result = MEMORY[0x2207938C0](&unk_21D7CDECC, &type metadata for RectangularSongContainerDetailButtonStyle);
    atomic_store(result, (unint64_t *)&qword_2553314D8);
  }
  return result;
}

uint64_t sub_21CE55128()
{
  uint64_t v0;

  if ((unint64_t)(*(_QWORD *)(v0 + 24) - 1) >= 8)
    swift_bridgeObjectRelease();
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for RectangularSongContainerDetailButtonStyle()
{
  return &type metadata for RectangularSongContainerDetailButtonStyle;
}

uint64_t sub_21CE55168()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553314C8);
  sub_21CE553B0((uint64_t)&unk_2553314D0);
  sub_21CE550E8();
  return OUTLINED_FUNCTION_4_0();
}

unint64_t sub_21CE551E0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_255331510;
  if (!qword_255331510)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553314F8);
    sub_21CE553B0((uint64_t)&unk_255331518);
    v3 = v2;
    sub_21CE553B0((uint64_t)&unk_255331520);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_255331510);
  }
  return result;
}

uint64_t sub_21CE5527C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_21CE55290()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_255331538;
  if (!qword_255331538)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255331530);
    v2 = sub_21CE55314();
    sub_21CE553B0((uint64_t)&unk_253F65B90);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_255331538);
  }
  return result;
}

unint64_t sub_21CE55314()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_255331540;
  if (!qword_255331540)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255331528);
    sub_21CDF81B4((uint64_t)&unk_255331548);
    v3 = v2;
    sub_21CE553B0((uint64_t)&unk_255331550);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_255331540);
  }
  return result;
}

void sub_21CE553B0(uint64_t a1)
{
  uint64_t *v1;

  if (!OUTLINED_FUNCTION_115(a1))
  {
    OUTLINED_FUNCTION_16_9(0, v1);
    OUTLINED_FUNCTION_99();
  }
  OUTLINED_FUNCTION_0();
}

uint64_t OUTLINED_FUNCTION_5_20()
{
  return sub_21D7C1344();
}

uint64_t OUTLINED_FUNCTION_8_11()
{
  return sub_21D7C3564();
}

uint64_t OUTLINED_FUNCTION_10_11(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_16_9(uint64_t a1, uint64_t *a2)
{
  return __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
}

uint64_t OUTLINED_FUNCTION_21_7()
{
  return sub_21D7C1344();
}

uint64_t OUTLINED_FUNCTION_25_5@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_29_5()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledNameAbstract(v0);
}

void OUTLINED_FUNCTION_34_5(uint64_t a1)
{
  sub_21CE553B0(a1);
}

uint64_t *sub_21CE5544C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _BYTE *__dst;
  _BYTE *v37;
  uint64_t v38;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_21D7C4668();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    v10 = a3[5];
    v11 = *(_OWORD *)((char *)a2 + v10 + 24);
    *(_OWORD *)((char *)a1 + v10 + 24) = v11;
    (**(void (***)(void))(v11 - 8))();
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = type metadata accessor for ContentDescriptor();
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      *v13 = *v14;
      v17 = *((_QWORD *)v14 + 2);
      *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
      *((_QWORD *)v13 + 2) = v17;
      v18 = *((_QWORD *)v14 + 4);
      *((_QWORD *)v13 + 3) = *((_QWORD *)v14 + 3);
      *((_QWORD *)v13 + 4) = v18;
      v19 = *((_QWORD *)v14 + 6);
      *((_QWORD *)v13 + 5) = *((_QWORD *)v14 + 5);
      *((_QWORD *)v13 + 6) = v19;
      v20 = *((_QWORD *)v14 + 8);
      *((_QWORD *)v13 + 7) = *((_QWORD *)v14 + 7);
      *((_QWORD *)v13 + 8) = v20;
      v21 = v15;
      v22 = *((_QWORD *)v14 + 10);
      *((_QWORD *)v13 + 9) = *((_QWORD *)v14 + 9);
      *((_QWORD *)v13 + 10) = v22;
      v23 = *((_QWORD *)v14 + 12);
      v38 = v21;
      *((_QWORD *)v13 + 11) = *((_QWORD *)v14 + 11);
      *((_QWORD *)v13 + 12) = v23;
      *((_QWORD *)v13 + 13) = *((_QWORD *)v14 + 13);
      v13[112] = v14[112];
      v24 = *(int *)(v21 + 24);
      __dst = &v13[v24];
      v37 = &v14[v24];
      v25 = sub_21D7BF754();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      if (__swift_getEnumTagSinglePayload((uint64_t)v37, 1, v25))
      {
        v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
        memcpy(__dst, v37, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(__dst, v37, v25);
        __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v25);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v38);
    }
    v27 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    v28 = (uint64_t *)((char *)a1 + v27);
    v29 = (uint64_t *)((char *)a2 + v27);
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    v31 = a3[9];
    v32 = (uint64_t *)((char *)a1 + v31);
    v33 = (uint64_t *)((char *)a2 + v31);
    v34 = *(uint64_t *)((char *)a2 + v31 + 8);
    sub_21D7C4C20();
    if (v34)
    {
      *v32 = *v33;
      v32[1] = v34;
      v32[2] = v33[2];
      sub_21D7C4C20();
      sub_21D7C4C20();
    }
    else
    {
      *(_OWORD *)v32 = *(_OWORD *)v33;
      v32[2] = v33[2];
    }
    *(uint64_t *)((char *)a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    sub_21D7C4C20();
  }
  return a1;
}

uint64_t sub_21CE55740(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_21D7C4668();
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[5]);
  v5 = a1 + a2[6];
  v6 = type metadata accessor for ContentDescriptor();
  if (!__swift_getEnumTagSinglePayload(v5, 1, v6))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v5 + *(int *)(v6 + 24);
    v8 = sub_21D7BF754();
    if (!__swift_getEnumTagSinglePayload(v7, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[9] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

char *sub_21CE55870(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v34;
  char *__dst;
  uint64_t v36;

  v6 = sub_21D7C4668();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v8 = a3[5];
  v9 = *(_OWORD *)&a2[v8 + 24];
  *(_OWORD *)&a1[v8 + 24] = v9;
  (**(void (***)(void))(v9 - 8))();
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = type metadata accessor for ContentDescriptor();
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    *v11 = *v12;
    v15 = *((_QWORD *)v12 + 2);
    *((_QWORD *)v11 + 1) = *((_QWORD *)v12 + 1);
    *((_QWORD *)v11 + 2) = v15;
    v16 = *((_QWORD *)v12 + 4);
    *((_QWORD *)v11 + 3) = *((_QWORD *)v12 + 3);
    *((_QWORD *)v11 + 4) = v16;
    v17 = *((_QWORD *)v12 + 6);
    *((_QWORD *)v11 + 5) = *((_QWORD *)v12 + 5);
    *((_QWORD *)v11 + 6) = v17;
    v18 = *((_QWORD *)v12 + 8);
    *((_QWORD *)v11 + 7) = *((_QWORD *)v12 + 7);
    *((_QWORD *)v11 + 8) = v18;
    v19 = v13;
    v20 = *((_QWORD *)v12 + 10);
    *((_QWORD *)v11 + 9) = *((_QWORD *)v12 + 9);
    *((_QWORD *)v11 + 10) = v20;
    v21 = *((_QWORD *)v12 + 12);
    *((_QWORD *)v11 + 11) = *((_QWORD *)v12 + 11);
    *((_QWORD *)v11 + 12) = v21;
    *((_QWORD *)v11 + 13) = *((_QWORD *)v12 + 13);
    v11[112] = v12[112];
    v36 = v19;
    v22 = *(int *)(v19 + 24);
    __dst = &v11[v22];
    v34 = &v12[v22];
    v23 = sub_21D7BF754();
    sub_21D7C4C20();
    sub_21D7C4C20();
    sub_21D7C4C20();
    sub_21D7C4C20();
    sub_21D7C4C20();
    sub_21D7C4C20();
    if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v23))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
      memcpy(__dst, v34, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(__dst, v34, v23);
      __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v23);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v36);
  }
  v25 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = *((_QWORD *)v27 + 1);
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *((_QWORD *)v26 + 1) = v28;
  v29 = a3[9];
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = *(_QWORD *)&a2[v29 + 8];
  sub_21D7C4C20();
  if (v32)
  {
    *(_QWORD *)v30 = *(_QWORD *)v31;
    *((_QWORD *)v30 + 1) = v32;
    *((_QWORD *)v30 + 2) = *((_QWORD *)v31 + 2);
    sub_21D7C4C20();
    sub_21D7C4C20();
  }
  else
  {
    *(_OWORD *)v30 = *(_OWORD *)v31;
    *((_QWORD *)v30 + 2) = *((_QWORD *)v31 + 2);
  }
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  sub_21D7C4C20();
  return a1;
}

char *sub_21CE55B3C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  size_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v44;
  const void *v45;
  void *__dst;

  v6 = sub_21D7C4668();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  __swift_assign_boxed_opaque_existential_1((uint64_t *)&a1[a3[5]], (uint64_t *)&a2[a3[5]]);
  v11 = a3[6];
  v12 = (uint64_t)&a1[v11];
  v13 = (uint64_t)&a2[v11];
  v14 = type metadata accessor for ContentDescriptor();
  v15 = __swift_getEnumTagSinglePayload(v12, 1, v14);
  v16 = __swift_getEnumTagSinglePayload(v13, 1, v14);
  if (v15)
  {
    if (!v16)
    {
      *(_BYTE *)v12 = *(_BYTE *)v13;
      *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
      *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
      *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
      *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
      *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
      *(_QWORD *)(v12 + 48) = *(_QWORD *)(v13 + 48);
      *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
      *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
      *(_QWORD *)(v12 + 72) = *(_QWORD *)(v13 + 72);
      *(_QWORD *)(v12 + 80) = *(_QWORD *)(v13 + 80);
      *(_QWORD *)(v12 + 88) = *(_QWORD *)(v13 + 88);
      *(_QWORD *)(v12 + 96) = *(_QWORD *)(v13 + 96);
      v17 = *(_QWORD *)(v13 + 104);
      *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
      *(_QWORD *)(v12 + 104) = v17;
      v18 = *(int *)(v14 + 24);
      __dst = (void *)(v12 + v18);
      v45 = (const void *)(v13 + v18);
      v19 = sub_21D7BF754();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      if (__swift_getEnumTagSinglePayload((uint64_t)v45, 1, v19))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
        memcpy(__dst, v45, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(__dst, v45, v19);
        __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v19);
      }
      v31 = v12;
      v32 = v14;
      goto LABEL_21;
    }
    goto LABEL_13;
  }
  if (v16)
  {
    sub_21CDB579C(v12);
LABEL_13:
    v21 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253F60800) - 8) + 64);
    v22 = (void *)v12;
    v23 = (const void *)v13;
LABEL_14:
    memcpy(v22, v23, v21);
    goto LABEL_22;
  }
  *(_BYTE *)v12 = *(_BYTE *)v13;
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 48) = *(_QWORD *)(v13 + 48);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
  *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 72) = *(_QWORD *)(v13 + 72);
  *(_QWORD *)(v12 + 80) = *(_QWORD *)(v13 + 80);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 88) = *(_QWORD *)(v13 + 88);
  *(_QWORD *)(v12 + 96) = *(_QWORD *)(v13 + 96);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  v24 = *(_QWORD *)(v13 + 104);
  *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
  *(_QWORD *)(v12 + 104) = v24;
  v25 = *(int *)(v14 + 24);
  v26 = v12 + v25;
  v27 = v13 + v25;
  v28 = sub_21D7BF754();
  v29 = __swift_getEnumTagSinglePayload(v26, 1, v28);
  v30 = __swift_getEnumTagSinglePayload(v27, 1, v28);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
      v31 = v26;
      v32 = v28;
LABEL_21:
      __swift_storeEnumTagSinglePayload(v31, 0, 1, v32);
      goto LABEL_22;
    }
    goto LABEL_32;
  }
  v44 = *(_QWORD *)(v28 - 8);
  if (v30)
  {
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v26, v28);
LABEL_32:
    v21 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10) - 8) + 64);
    v22 = (void *)v26;
    v23 = (const void *)v27;
    goto LABEL_14;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 24))(v26, v27, v28);
LABEL_22:
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  v33 = a3[8];
  v34 = &a1[v33];
  v35 = &a2[v33];
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  v36 = a3[9];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = *(_QWORD *)&a1[v36 + 8];
  v40 = *(_QWORD *)&a2[v36 + 8];
  if (v39)
  {
    if (v40)
    {
      *(_QWORD *)v37 = *(_QWORD *)v38;
      *((_QWORD *)v37 + 1) = *((_QWORD *)v38 + 1);
      sub_21D7C4C20();
      swift_bridgeObjectRelease();
      *((_QWORD *)v37 + 2) = *((_QWORD *)v38 + 2);
      sub_21D7C4C20();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_21CE560B0((uint64_t)v37);
      v41 = *((_QWORD *)v38 + 2);
      *(_OWORD *)v37 = *(_OWORD *)v38;
      *((_QWORD *)v37 + 2) = v41;
    }
  }
  else if (v40)
  {
    *(_QWORD *)v37 = *(_QWORD *)v38;
    *((_QWORD *)v37 + 1) = *((_QWORD *)v38 + 1);
    *((_QWORD *)v37 + 2) = *((_QWORD *)v38 + 2);
    sub_21D7C4C20();
    sub_21D7C4C20();
  }
  else
  {
    v42 = *(_OWORD *)v38;
    *((_QWORD *)v37 + 2) = *((_QWORD *)v38 + 2);
    *(_OWORD *)v37 = v42;
  }
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21CE560B0(uint64_t a1)
{
  destroy for ContainerDetailTracklistFooterLockup.GroupedTextLinkSection();
  return a1;
}

char *sub_21CE560DC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;

  v6 = sub_21D7C4668();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v8 = a3[5];
  v9 = a3[6];
  v10 = &a1[v8];
  v11 = &a2[v8];
  v12 = *((_OWORD *)v11 + 1);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v12;
  *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
  v13 = &a1[v9];
  v14 = &a2[v9];
  v15 = type metadata accessor for ContentDescriptor();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v13 = *v14;
    memcpy(v13 + 8, v14 + 8, 0x69uLL);
    v17 = *(int *)(v15 + 24);
    v18 = &v13[v17];
    v19 = &v14[v17];
    v20 = sub_21D7BF754();
    if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v20);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  }
  v22 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  *(_OWORD *)&a1[v22] = *(_OWORD *)&a2[v22];
  v23 = a3[9];
  v24 = a3[10];
  v25 = &a1[v23];
  v26 = &a2[v23];
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *((_QWORD *)v25 + 2) = *((_QWORD *)v26 + 2);
  *(_QWORD *)&a1[v24] = *(_QWORD *)&a2[v24];
  return a1;
}

char *sub_21CE562D4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  size_t v26;
  void *v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v53;

  v6 = sub_21D7C4668();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  v11 = a3[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[v11]);
  v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
  v15 = a3[6];
  v16 = (uint64_t)&a1[v15];
  v17 = (uint64_t)&a2[v15];
  v18 = type metadata accessor for ContentDescriptor();
  v19 = __swift_getEnumTagSinglePayload(v16, 1, v18);
  v20 = __swift_getEnumTagSinglePayload(v17, 1, v18);
  if (v19)
  {
    if (!v20)
    {
      *(_BYTE *)v16 = *(_BYTE *)v17;
      memcpy((void *)(v16 + 8), (const void *)(v17 + 8), 0x69uLL);
      v21 = *(int *)(v18 + 24);
      v22 = (void *)(v16 + v21);
      v23 = (const void *)(v17 + v21);
      v24 = sub_21D7BF754();
      if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
        __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
      }
      v41 = v16;
      v42 = v18;
      goto LABEL_21;
    }
    goto LABEL_13;
  }
  if (v20)
  {
    sub_21CDB579C(v16);
LABEL_13:
    v26 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253F60800) - 8) + 64);
    v27 = (void *)v16;
    v28 = (const void *)v17;
LABEL_14:
    memcpy(v27, v28, v26);
    goto LABEL_22;
  }
  *(_BYTE *)v16 = *(_BYTE *)v17;
  v29 = *(_QWORD *)(v17 + 16);
  *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
  *(_QWORD *)(v16 + 16) = v29;
  swift_bridgeObjectRelease();
  v30 = *(_QWORD *)(v17 + 32);
  *(_QWORD *)(v16 + 24) = *(_QWORD *)(v17 + 24);
  *(_QWORD *)(v16 + 32) = v30;
  swift_bridgeObjectRelease();
  v31 = *(_QWORD *)(v17 + 48);
  *(_QWORD *)(v16 + 40) = *(_QWORD *)(v17 + 40);
  *(_QWORD *)(v16 + 48) = v31;
  swift_bridgeObjectRelease();
  v32 = *(_QWORD *)(v17 + 64);
  *(_QWORD *)(v16 + 56) = *(_QWORD *)(v17 + 56);
  *(_QWORD *)(v16 + 64) = v32;
  swift_bridgeObjectRelease();
  v33 = *(_QWORD *)(v17 + 80);
  *(_QWORD *)(v16 + 72) = *(_QWORD *)(v17 + 72);
  *(_QWORD *)(v16 + 80) = v33;
  swift_bridgeObjectRelease();
  v34 = *(_QWORD *)(v17 + 96);
  *(_QWORD *)(v16 + 88) = *(_QWORD *)(v17 + 88);
  *(_QWORD *)(v16 + 96) = v34;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v16 + 104) = *(_QWORD *)(v17 + 104);
  *(_BYTE *)(v16 + 112) = *(_BYTE *)(v17 + 112);
  v35 = *(int *)(v18 + 24);
  v36 = v16 + v35;
  v37 = v17 + v35;
  v38 = sub_21D7BF754();
  v39 = __swift_getEnumTagSinglePayload(v36, 1, v38);
  v40 = __swift_getEnumTagSinglePayload(v37, 1, v38);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
      v41 = v36;
      v42 = v38;
LABEL_21:
      __swift_storeEnumTagSinglePayload(v41, 0, 1, v42);
      goto LABEL_22;
    }
    goto LABEL_30;
  }
  v53 = *(_QWORD *)(v38 - 8);
  if (v40)
  {
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v36, v38);
LABEL_30:
    v26 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10) - 8) + 64);
    v27 = (void *)v36;
    v28 = (const void *)v37;
    goto LABEL_14;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 40))(v36, v37, v38);
LABEL_22:
  v43 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  v44 = &a1[v43];
  v45 = &a2[v43];
  v47 = *(_QWORD *)v45;
  v46 = *((_QWORD *)v45 + 1);
  *(_QWORD *)v44 = v47;
  *((_QWORD *)v44 + 1) = v46;
  swift_bridgeObjectRelease();
  v48 = a3[9];
  v49 = (uint64_t)&a1[v48];
  v50 = &a2[v48];
  if (!*(_QWORD *)&a1[v48 + 8])
  {
LABEL_26:
    *(_OWORD *)v49 = *(_OWORD *)v50;
    *(_QWORD *)(v49 + 16) = *((_QWORD *)v50 + 2);
    goto LABEL_27;
  }
  v51 = *((_QWORD *)v50 + 1);
  if (!v51)
  {
    sub_21CE560B0(v49);
    goto LABEL_26;
  }
  *(_QWORD *)v49 = *(_QWORD *)v50;
  *(_QWORD *)(v49 + 8) = v51;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v49 + 16) = *((_QWORD *)v50 + 2);
  swift_bridgeObjectRelease();
LABEL_27:
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21CE566D0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21CE566DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
    v8 = a1 + *(int *)(a3 + 24);
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_21CE56784()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21CE56790(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
      return result;
    }
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
    v10 = a1 + *(int *)(a4 + 24);
  }
  return __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
}

uint64_t type metadata accessor for ContainerDetailTracklistFooterLockup()
{
  uint64_t result;

  result = qword_253F648E0;
  if (!qword_253F648E0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_21CE5686C()
{
  unint64_t v0;
  unint64_t v1;

  sub_21CDB3900(319, (unint64_t *)&qword_253F67610, (void (*)(uint64_t))MEMORY[0x24BE5D330]);
  if (v0 <= 0x3F)
  {
    sub_21CDB3900(319, (unint64_t *)&qword_253F60810, (void (*)(uint64_t))type metadata accessor for ContentDescriptor);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t destroy for ContainerDetailTracklistFooterLockup.GroupedTextLinkSection()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void _s7MusicUI36ContainerDetailTracklistFooterLockupV22GroupedTextLinkSectionVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_21D7C4C20();
  sub_21D7C4C20();
  OUTLINED_FUNCTION_0();
}

_QWORD *assignWithCopy for ContainerDetailTracklistFooterLockup.GroupedTextLinkSection(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ContainerDetailTracklistFooterLockup.GroupedTextLinkSection(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContainerDetailTracklistFooterLockup.GroupedTextLinkSection(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContainerDetailTracklistFooterLockup.GroupedTextLinkSection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContainerDetailTracklistFooterLockup.GroupedTextLinkSection()
{
  return &type metadata for ContainerDetailTracklistFooterLockup.GroupedTextLinkSection;
}

uint64_t sub_21CE56AF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17[2];
  uint64_t v18;
  uint64_t v19;
  _QWORD __src[9];
  _QWORD __dst[10];
  uint64_t v22;

  v19 = a2;
  v4 = sub_21D7C4098();
  v22 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v5 = OUTLINED_FUNCTION_0_28();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v17 - v8;
  sub_21D7C3F78();
  v18 = sub_21D7C3F3C();
  v11 = v10;
  v12 = *(void (**)(char *, uint64_t))(v6 + 8);
  v12(v9, v5);
  if (v11)
  {
    v17[1] = (uint64_t)v12;
    OUTLINED_FUNCTION_3_17();
    OUTLINED_FUNCTION_9_15(v2);
    sub_21CDD57C8();
    sub_21D7C4620();
    if (__src[1])
    {
      memcpy(__dst, __src, 0x48uLL);
      __swift_instantiateConcreteTypeFromMangledName(qword_255331580);
      v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_21D7C8560;
      sub_21CE26554(__dst, v13 + 32);
      OUTLINED_FUNCTION_2_28();
      OUTLINED_FUNCTION_5_21(a1);
      sub_21CE26600((uint64_t)__dst);
    }
    else
    {
      sub_21CE3C2B4((uint64_t)__src, &qword_253F64FD0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255331570);
      v17[0] = a1;
      sub_21D7C3F78();
      OUTLINED_FUNCTION_9_15(v2);
      sub_21CE57590();
      sub_21D7C4620();
      OUTLINED_FUNCTION_2_28();
      OUTLINED_FUNCTION_5_21(v17[0]);
    }
    return v18;
  }
  else
  {
    v14 = OUTLINED_FUNCTION_7_15();
    sub_21CDB47E8((unint64_t *)&qword_253F677E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5E3D0], MEMORY[0x24BE5E3D8]);
    OUTLINED_FUNCTION_5_18();
    *v15 = 0x656C746974;
    v15[1] = 0xE500000000000000;
    v15[2] = &type metadata for ContainerDetailTracklistFooterLockup.GroupedTextLinkSection;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v15, *MEMORY[0x24BE5E3B8], v14);
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v19, v4);
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(a1, v5);
  }
}

uint64_t sub_21CE56DE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = sub_21CE56AF4(a1, a2);
  if (!v3)
  {
    *a3 = result;
    a3[1] = v6;
    a3[2] = v7;
  }
  return result;
}

void sub_21CE56E0C(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void (*v19)(_QWORD, _QWORD, _QWORD);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  char v28;
  char v29;
  int *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  void (*v65)(_QWORD, _QWORD, _QWORD);
  char *v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  char *v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;

  v74 = a2;
  v71 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F677E0);
  MEMORY[0x24BDAC7A8](v5);
  v64 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_21D7C4098();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = OUTLINED_FUNCTION_0_28();
  v68 = *(void (**)(char *, uint64_t))(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v63 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v66 = (char *)&v61 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v61 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v61 - v17;
  sub_21D7C4668();
  OUTLINED_FUNCTION_3_17();
  v67 = v8;
  v19 = *(void (**)(_QWORD, _QWORD, _QWORD))(v8 + 16);
  v69 = v7;
  v20 = v7;
  v21 = v9;
  v65 = v19;
  v19(v3, v74, v20);
  v61 = v18;
  v62 = v3;
  sub_21D7C4620();
  v70 = a1;
  OUTLINED_FUNCTION_3_17();
  v22 = sub_21D7C3F3C();
  v24 = v23;
  v25 = (void (*)(char *, uint64_t))*((_QWORD *)v68 + 1);
  v25(v16, v9);
  if (!v24)
  {
    v46 = v9;
    v47 = OUTLINED_FUNCTION_7_15();
    sub_21CDB47E8((unint64_t *)&qword_253F677E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5E3D0], MEMORY[0x24BE5E3D8]);
    OUTLINED_FUNCTION_5_18();
    v49 = v48;
    v50 = OUTLINED_FUNCTION_8_12();
    *v49 = 25705;
    v49[1] = 0xE200000000000000;
    v49[2] = v50;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v47 - 8) + 104))(v49, *MEMORY[0x24BE5E3B8], v47);
LABEL_7:
    v56 = v70;
    v55 = v71;
    v57 = v74;
    v58 = v69;
    v59 = v67;
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v57, v58);
    v25(v56, v46);
    sub_21CE3C2B4(v55, &qword_253F67608);
    return;
  }
  v26 = v66;
  sub_21D7C3F78();
  v27 = sub_21D7C3ED0();
  v29 = v28;
  v25(v26, v21);
  if ((v29 & 1) != 0)
  {
    v46 = v21;
    swift_bridgeObjectRelease();
    v51 = OUTLINED_FUNCTION_7_15();
    sub_21CDB47E8((unint64_t *)&qword_253F677E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5E3D0], MEMORY[0x24BE5E3D8]);
    OUTLINED_FUNCTION_5_18();
    v53 = v52;
    v54 = OUTLINED_FUNCTION_8_12();
    *v53 = 0xD000000000000014;
    v53[1] = 0x800000021D818640;
    v53[2] = v54;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v51 - 8) + 104))(v53, *MEMORY[0x24BE5E3B8], v51);
    goto LABEL_7;
  }
  v30 = (int *)OUTLINED_FUNCTION_8_12();
  v31 = v71;
  *(_QWORD *)(v71 + v30[7]) = v27;
  *(_QWORD *)&v72 = v22;
  *((_QWORD *)&v72 + 1) = v24;
  sub_21D7C5A30();
  type metadata accessor for ContentDescriptor();
  v68 = v25;
  v32 = v61;
  OUTLINED_FUNCTION_3_17();
  v33 = v62;
  OUTLINED_FUNCTION_11_15(v62, v74);
  sub_21CDB47E8((unint64_t *)&qword_253F607E8, (uint64_t (*)(uint64_t))type metadata accessor for ContentDescriptor, (uint64_t)&protocol conformance descriptor for ContentDescriptor);
  sub_21D7C4620();
  OUTLINED_FUNCTION_3_17();
  v34 = sub_21D7C3F3C();
  v36 = v35;
  v37 = v68;
  v68(v32, v21);
  v38 = (uint64_t *)(v31 + v30[8]);
  *v38 = v34;
  v38[1] = v36;
  sub_21D7C3F78();
  OUTLINED_FUNCTION_11_15(v33, v74);
  sub_21CE574D8();
  sub_21D7C4620();
  v39 = v73;
  v40 = v31 + v30[9];
  *(_OWORD *)v40 = v72;
  *(_QWORD *)(v40 + 16) = v39;
  v41 = v63;
  sub_21D7C3F78();
  v42 = v64;
  sub_21D7C3F0C();
  v43 = (uint64_t)v42;
  v37(v41, v21);
  v44 = sub_21D7C4F5C();
  if (__swift_getEnumTagSinglePayload(v43, 1, v44) == 1)
  {
    OUTLINED_FUNCTION_4_18();
    OUTLINED_FUNCTION_10_12();
    sub_21CE3C2B4(v43, &qword_253F677E0);
    v45 = 0;
  }
  else
  {
    v60 = v43;
    v45 = sub_21D7C4F44();
    OUTLINED_FUNCTION_4_18();
    OUTLINED_FUNCTION_10_12();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v60, v44);
  }
  *(_QWORD *)(v31 + v30[10]) = v45;
}

uint64_t sub_21CE573F8()
{
  sub_21CE57514();
  return sub_21D7C3EC4();
}

void sub_21CE57440(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_21CE56E0C(a1, a2, a3);
}

void sub_21CE57454(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_21CE57550(v2 + *(int *)(a1 + 24), a2, &qword_253F60800);
}

uint64_t sub_21CE5747C(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 28));
}

void sub_21CE57488(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_21CE57550(v1, a1, &qword_253F67608);
}

void sub_21CE574AC()
{
  sub_21CDB47E8(&qword_253F648D8, (uint64_t (*)(uint64_t))type metadata accessor for ContainerDetailTracklistFooterLockup, (uint64_t)&unk_21D7CDFF8);
}

unint64_t sub_21CE574D8()
{
  unint64_t result;

  result = qword_255331560;
  if (!qword_255331560)
  {
    result = MEMORY[0x2207938C0](&unk_21D7CDFC8, &type metadata for ContainerDetailTracklistFooterLockup.GroupedTextLinkSection);
    atomic_store(result, (unint64_t *)&qword_255331560);
  }
  return result;
}

unint64_t sub_21CE57514()
{
  unint64_t result;

  result = qword_255331568;
  if (!qword_255331568)
  {
    result = MEMORY[0x2207938C0](&unk_21D7F5A5C, &type metadata for AudioBadge);
    atomic_store(result, (unint64_t *)&qword_255331568);
  }
  return result;
}

void sub_21CE57550(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  OUTLINED_FUNCTION_0();
}

unint64_t sub_21CE57590()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_255331578;
  if (!qword_255331578)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255331570);
    v2 = sub_21CDD57C8();
    result = MEMORY[0x2207938C0](MEMORY[0x24BE5E4E0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255331578);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_28()
{
  return sub_21D7C3F6C();
}

uint64_t OUTLINED_FUNCTION_2_28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 72) + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_3_17()
{
  return sub_21D7C3F78();
}

uint64_t OUTLINED_FUNCTION_4_18()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 152) + 8))(*(_QWORD *)(v0 - 72), *(_QWORD *)(v0 - 136));
}

uint64_t OUTLINED_FUNCTION_5_21(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 264))(a1, v1);
}

uint64_t OUTLINED_FUNCTION_7_15()
{
  return sub_21D7C4F74();
}

uint64_t OUTLINED_FUNCTION_8_12()
{
  return type metadata accessor for ContainerDetailTracklistFooterLockup();
}

uint64_t OUTLINED_FUNCTION_9_15(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_10_12()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0, v2);
}

uint64_t OUTLINED_FUNCTION_11_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 168))(a1, a2, v2);
}

_QWORD *sub_21CE57684(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = a3[5];
    v9 = (char *)v4 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_21D7C4668();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
    }
    v14 = a3[6];
    v15 = a3[7];
    v16 = (_QWORD *)((char *)v4 + v14);
    v17 = (uint64_t *)((char *)a2 + v14);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = (char *)v4 + v15;
    v20 = (uint64_t)a2 + v15;
    v21 = *(_QWORD *)(v20 + 24);
    sub_21D7C4C20();
    if (v21)
    {
      v22 = *(_QWORD *)(v20 + 32);
      *((_QWORD *)v19 + 3) = v21;
      *((_QWORD *)v19 + 4) = v22;
      (**(void (***)(char *, uint64_t, uint64_t))(v21 - 8))(v19, v20, v21);
    }
    else
    {
      v23 = *(_OWORD *)(v20 + 16);
      *(_OWORD *)v19 = *(_OWORD *)v20;
      *((_OWORD *)v19 + 1) = v23;
      *((_QWORD *)v19 + 4) = *(_QWORD *)(v20 + 32);
    }
  }
  return v4;
}

uint64_t sub_21CE577E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_21D7C4668();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  result = a1 + *(int *)(a2 + 28);
  if (*(_QWORD *)(result + 24))
    return __swift_destroy_boxed_opaque_existential_1(result);
  return result;
}

uint64_t sub_21CE57878(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_21D7C4668();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v12);
  v15 = (_QWORD *)(a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = a1 + v13;
  v18 = a2 + v13;
  v19 = *(_QWORD *)(v18 + 24);
  sub_21D7C4C20();
  if (v19)
  {
    v20 = *(_QWORD *)(v18 + 32);
    *(_QWORD *)(v17 + 24) = v19;
    *(_QWORD *)(v17 + 32) = v20;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v19 - 8))(v17, v18, v19);
  }
  else
  {
    v21 = *(_OWORD *)(v18 + 16);
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *(_OWORD *)(v17 + 16) = v21;
    *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  }
  return a1;
}

uint64_t *sub_21CE579A0(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21D7C4668();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  v14 = a3[6];
  v15 = (uint64_t *)((char *)a1 + v14);
  v16 = (uint64_t *)((char *)a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = (uint64_t)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = *((_QWORD *)v19 + 3);
  if (!*(uint64_t *)((char *)a1 + v17 + 24))
  {
    if (v20)
    {
      *(_QWORD *)(v18 + 24) = v20;
      *(_QWORD *)(v18 + 32) = *((_QWORD *)v19 + 4);
      (**(void (***)(uint64_t, char *))(v20 - 8))(v18, v19);
      return a1;
    }
LABEL_13:
    v21 = *(_OWORD *)v19;
    v22 = *((_OWORD *)v19 + 1);
    *(_QWORD *)(v18 + 32) = *((_QWORD *)v19 + 4);
    *(_OWORD *)v18 = v21;
    *(_OWORD *)(v18 + 16) = v22;
    return a1;
  }
  if (!v20)
  {
    __swift_destroy_boxed_opaque_existential_1(v18);
    goto LABEL_13;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v18, (uint64_t *)v19);
  return a1;
}

uint64_t sub_21CE57B40(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_21D7C4668();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  v12 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  return a1;
}

uint64_t sub_21CE57C28(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_21D7C4668();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v13 = *(_QWORD *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_7:
  v15 = a3[6];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  v20 = a3[7];
  v21 = a1 + v20;
  if (*(_QWORD *)(a1 + v20 + 24))
    __swift_destroy_boxed_opaque_existential_1(a1 + v20);
  v22 = *(_OWORD *)(a2 + v20 + 16);
  *(_OWORD *)v21 = *(_OWORD *)(a2 + v20);
  *(_OWORD *)(v21 + 16) = v22;
  *(_QWORD *)(v21 + 32) = *(_QWORD *)(a2 + v20 + 32);
  return a1;
}

uint64_t sub_21CE57D88()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21CE57D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_21CE57E0C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21CE57E18(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    return __swift_storeEnumTagSinglePayload(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for DefaultAccessoryButton()
{
  uint64_t result;

  result = qword_2553315E0;
  if (!qword_2553315E0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_21CE57EC0()
{
  unint64_t v0;

  sub_21CDD503C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_21CE57F48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t);
  uint64_t result;
  uint64_t *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(char *, uint64_t);
  char *v38;
  uint64_t v39;
  _QWORD v40[5];
  uint64_t v41;

  v41 = a2;
  v5 = sub_21D7C4098();
  v39 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v38 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_21D7C3F6C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v36 - v12;
  sub_21D7C3F78();
  v14 = sub_21D7C3F3C();
  v16 = v15;
  v17 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  OUTLINED_FUNCTION_1_18((uint64_t)v13);
  if (v16)
  {
    v40[0] = v14;
    v40[1] = v16;
    v18 = a3;
    sub_21D7C5A30();
    sub_21D7C3F78();
    v36 = v5;
    v19 = v41;
    sub_21D7C435C();
    OUTLINED_FUNCTION_1_18((uint64_t)v11);
    v20 = type metadata accessor for DefaultAccessoryButton();
    v21 = v18;
    sub_21CDECAB0((uint64_t)v40, v18 + *(int *)(v20 + 28));
    sub_21D7C4668();
    sub_21D7C3F78();
    v37 = v17;
    v22 = a1;
    v23 = v39;
    v24 = v19;
    v25 = v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v38, v24, v36);
    sub_21D7C4620();
    sub_21D7C3F78();
    v26 = sub_21D7C3F3C();
    v28 = v27;
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v41, v25);
    v29 = v37;
    v37((char *)v22, v7);
    result = v29(v11, v7);
    v31 = (uint64_t *)(v21 + *(int *)(v20 + 24));
    *v31 = v26;
    v31[1] = v28;
  }
  else
  {
    v32 = sub_21D7C4F74();
    sub_21CDBFDBC((unint64_t *)&qword_253F677E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5E3D0], MEMORY[0x24BE5E3D8]);
    swift_allocError();
    v34 = v33;
    v35 = type metadata accessor for DefaultAccessoryButton();
    *v34 = 25705;
    v34[1] = 0xE200000000000000;
    v34[2] = v35;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v34, *MEMORY[0x24BE5E3B8], v32);
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v41, v5);
    return OUTLINED_FUNCTION_1_18(a1);
  }
  return result;
}

uint64_t sub_21CE58264@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_21CDECA6C(v2 + *(int *)(a1 + 28), a2, &qword_253F67430);
}

uint64_t sub_21CE5828C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_21CE57F48(a1, a2, a3);
}

uint64_t sub_21CE582A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_21CDECA6C(v2 + *(int *)(a1 + 20), a2, &qword_253F67608);
}

uint64_t sub_21CE582C8()
{
  return sub_21CDBFDBC(&qword_255331620, (uint64_t (*)(uint64_t))type metadata accessor for DefaultAccessoryButton, (uint64_t)&unk_21D7CE140);
}

uint64_t destroy for MarketingSheetView()
{
  return sub_21CE09DA4();
}

uint64_t _s7MusicUI18MarketingSheetViewVwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  OUTLINED_FUNCTION_83_2();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for MarketingSheetView(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  OUTLINED_FUNCTION_83_2();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_21CE09DA4();
  return a1;
}

uint64_t assignWithTake for MarketingSheetView(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_21CE09DA4();
  return a1;
}

uint64_t getEnumTagSinglePayload for StringOrDateRange(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StringOrDateRange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MarketingSheetView()
{
  return &type metadata for MarketingSheetView;
}

uint64_t sub_21CE5847C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21CE5848C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_21D7BF754();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MarketingSheetModel();
  sub_21CDBFDBC(&qword_255331628, (uint64_t (*)(uint64_t))type metadata accessor for MarketingSheetModel, (uint64_t)&unk_21D7DEA10);
  v4 = OUTLINED_FUNCTION_0_29();
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4 + OBJC_IVAR____TtC7MusicUI19MarketingSheetModel_url, v0);
  swift_release();
  OUTLINED_FUNCTION_0_29();
  swift_unknownObjectRetain();
  swift_release();
  OUTLINED_FUNCTION_0_29();
  sub_21D151F28();
  swift_release();
  return sub_21D7C08D0();
}

uint64_t sub_21CE585B4()
{
  return sub_21CE5848C();
}

uint64_t sub_21CE585C0()
{
  return sub_21CDBFDBC(&qword_255331630, (uint64_t (*)(uint64_t))MEMORY[0x24BE08460], MEMORY[0x24BE08450]);
}

uint64_t OUTLINED_FUNCTION_0_29()
{
  return sub_21D7C0E7C();
}

uint64_t sub_21CE58604()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_21CE58614()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_22();
  v25[2] = v3;
  v25[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67D10);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_2_13();
  v28 = v5;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66DA8);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (_QWORD *)((char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_21D7C297C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_9_6();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F660A0);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (_QWORD *)((char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F66300);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_62_2();
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66430);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_61_2();
  v17 = sub_21D7C2958();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 104))(v0, *MEMORY[0x24BDF40B0], v9);
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)v8 + *(int *)(v26 + 28), v0, v9);
  *v8 = KeyPath;
  sub_21CDC314C((uint64_t)v8, (uint64_t)v14 + *(int *)(v11 + 36), &qword_253F66DA8);
  *v14 = v17;
  swift_retain();
  sub_21CDBDA44((uint64_t)v8, &qword_253F66DA8);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0, v9);
  swift_release();
  sub_21CE61968();
  sub_21D7C23E8();
  sub_21CDBDA44((uint64_t)v14, &qword_253F660A0);
  if (qword_253F4F280 != -1)
    swift_once();
  v19 = qword_253F65308;
  v20 = swift_getKeyPath();
  sub_21CDC314C(v2, v1, &qword_253F66300);
  v21 = (uint64_t *)(v1 + *(int *)(v27 + 36));
  *v21 = v20;
  v21[1] = v19;
  swift_retain();
  sub_21CDBDA44(v2, &qword_253F66300);
  v22 = *MEMORY[0x24BDECEA0];
  v23 = sub_21D7C12B4();
  v24 = v28;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v28, v22, v23);
  sub_21CDF81B4((uint64_t)&unk_253F65C88);
  if ((sub_21D7C5094() & 1) != 0)
  {
    sub_21CE65C10();
    sub_21CE553B0((uint64_t)&unk_253F67D08);
    sub_21D7C246C();
    sub_21CDBDA44(v24, &qword_253F67D10);
    sub_21CDBDA44(v1, &qword_253F66430);
    OUTLINED_FUNCTION_9();
  }
  else
  {
    __break(1u);
  }
}

void sub_21CE58974()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  char *v16;

  OUTLINED_FUNCTION_100_3();
  v3 = v2;
  v5 = v4;
  v6 = sub_21D7C204C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_61_2();
  v8 = (int *)type metadata accessor for TopSearchLockupView(0);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_63_2();
  if (qword_253F653D0 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v6, (uint64_t)qword_253F653B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v1, v10, v6);
  sub_21CE1FFF4();
  sub_21D7C0EF4();
  if (qword_253F65300 != -1)
    swift_once();
  sub_21D7C0F00();
  v11 = (_QWORD *)((char *)v0 + v8[7]);
  *v11 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B60);
  OUTLINED_FUNCTION_84_3();
  v12 = (_QWORD *)((char *)v0 + v8[8]);
  *v12 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B18);
  OUTLINED_FUNCTION_84_3();
  v13 = (char *)v0 + v8[9];
  *(_QWORD *)v13 = swift_getKeyPath();
  v13[40] = 0;
  v14 = (_QWORD *)((char *)v0 + v8[10]);
  type metadata accessor for PlaybackPresenter();
  sub_21CDF81B4((uint64_t)&qword_253F609E0);
  *v14 = sub_21D7C1500();
  v14[1] = v15;
  *v0 = v3;
  v16 = (char *)v0 + v8[11];
  *(_QWORD *)v16 = sub_21CE5FF14;
  *((_QWORD *)v16 + 1) = v3;
  v16[16] = 0;
  sub_21CDD3198((uint64_t)v0, v5, type metadata accessor for TopSearchLockupView);
  swift_retain();
  OUTLINED_FUNCTION_38();
}

uint64_t sub_21CE58B9C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v4;

  v0 = sub_21D7BFF04();
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21D1EEF40();
  type metadata accessor for GenericItemStateObserver(0);
  swift_allocObject();
  return sub_21D70D06C((uint64_t)v2);
}

void sub_21CE58C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t KeyPath;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  __int128 v154;
  __int128 v155;
  _QWORD v156[15];

  OUTLINED_FUNCTION_22();
  a19 = v23;
  a20 = v24;
  v153 = v25;
  v152 = OUTLINED_FUNCTION_40_0();
  v151 = *(_QWORD *)(v152 - 8);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_2_13();
  OUTLINED_FUNCTION_22_3(v27);
  v28 = sub_21D7C147C();
  OUTLINED_FUNCTION_45_3(v28, (uint64_t)&a16);
  v148 = v29;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v30);
  OUTLINED_FUNCTION_2_13();
  OUTLINED_FUNCTION_22_3(v31);
  v123 = type metadata accessor for TopSearchLockup();
  OUTLINED_FUNCTION_21();
  v33 = MEMORY[0x24BDAC7A8](v32);
  v122 = (char *)&v122 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v36 = (char *)&v122 - v35;
  v37 = sub_21D7C4764();
  OUTLINED_FUNCTION_45_3(v37, (uint64_t)&v156[1]);
  v127 = v38;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v39);
  OUTLINED_FUNCTION_2_13();
  v41 = OUTLINED_FUNCTION_22_3(v40);
  v42 = type metadata accessor for TopSearchLockupView(v41);
  v43 = *(_QWORD *)(v42 - 8);
  v44 = *(_QWORD *)(v43 + 64);
  MEMORY[0x24BDAC7A8](v42);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65AD0);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v45);
  OUTLINED_FUNCTION_28_2();
  v46 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255331680);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v47);
  OUTLINED_FUNCTION_62_2();
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331688);
  OUTLINED_FUNCTION_45_3(v48, (uint64_t)&v156[3]);
  v125 = v49;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v50);
  OUTLINED_FUNCTION_2_13();
  OUTLINED_FUNCTION_97(v51);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331690);
  OUTLINED_FUNCTION_45_3(v52, (uint64_t)&v156[6]);
  v132 = v53;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v54);
  OUTLINED_FUNCTION_2_13();
  OUTLINED_FUNCTION_97(v55);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331698);
  OUTLINED_FUNCTION_45_3(v56, (uint64_t)&v156[10]);
  v135 = v57;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v58);
  OUTLINED_FUNCTION_2_13();
  OUTLINED_FUNCTION_97(v59);
  v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553316A0);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v60);
  OUTLINED_FUNCTION_2_13();
  OUTLINED_FUNCTION_97(v61);
  v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553316A8);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v62);
  OUTLINED_FUNCTION_2_13();
  OUTLINED_FUNCTION_97(v63);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553316B0);
  OUTLINED_FUNCTION_45_3(v64, (uint64_t)&a13);
  v145 = v65;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v66);
  OUTLINED_FUNCTION_2_13();
  OUTLINED_FUNCTION_97(v67);
  v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553316B8);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v68);
  OUTLINED_FUNCTION_2_13();
  OUTLINED_FUNCTION_97(v69);
  v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553316C0);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v70);
  OUTLINED_FUNCTION_2_13();
  OUTLINED_FUNCTION_97(v71);
  sub_21CE5DF30(1, 1, (uint64_t)v156);
  v72 = sub_21D7C0CD8();
  __swift_storeEnumTagSinglePayload(v21, 1, 1, v72);
  sub_21CDD337C(v20, (uint64_t)&v122 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TopSearchLockupView);
  v73 = (*(unsigned __int8 *)(v43 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  v74 = swift_allocObject();
  sub_21CDD3198((uint64_t)&v122 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0), v74 + v73, type metadata accessor for TopSearchLockupView);
  v75 = (_QWORD *)((char *)v22 + v46[12]);
  *v75 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B18);
  swift_storeEnumTagMultiPayload();
  v76 = (char *)v22 + v46[13];
  *(_QWORD *)v76 = swift_getKeyPath();
  v76[40] = 0;
  sub_21CDC2FB4((uint64_t)v156, (uint64_t)v22, &qword_253F67430);
  sub_21CDC2FB4(v21, (uint64_t)v22 + v46[11], &qword_253F65AD0);
  v22[5] = sub_21CE61240;
  v22[6] = v74;
  v22[7] = 0;
  v22[8] = 0;
  sub_21D55A6C8();
  v77 = (uint64_t)&v36[*(int *)(v123 + 20)];
  v156[3] = MEMORY[0x24BEE23D0];
  v156[0] = swift_allocObject();
  sub_21CDC2FE0(v77, v156[0] + 16);
  sub_21CDBDA1C((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for TopSearchLockup);
  v78 = (uint64_t)v122;
  sub_21D55A6C8();
  sub_21CE609D0();
  v80 = v79;
  v82 = v81;
  sub_21CDBDA1C(v78, (uint64_t (*)(_QWORD))type metadata accessor for TopSearchLockup);
  if (v82)
  {
    *((_QWORD *)&v155 + 1) = MEMORY[0x24BEE0D00];
    *(_QWORD *)&v154 = v80;
    *((_QWORD *)&v154 + 1) = v82;
  }
  else
  {
    v154 = 0u;
    v155 = 0u;
  }
  v83 = v126;
  sub_21D7C4758();
  OUTLINED_FUNCTION_79_3((uint64_t)&v154);
  OUTLINED_FUNCTION_79_3((uint64_t)v156);
  sub_21CE553B0((uint64_t)&unk_2553316C8);
  v85 = v84;
  v86 = v124;
  sub_21D7C21FC();
  (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v83, v128);
  OUTLINED_FUNCTION_79_3((uint64_t)v22);
  MEMORY[0x24BDAC7A8](v87);
  OUTLINED_FUNCTION_91_3();
  v88 = OUTLINED_FUNCTION_35_0();
  v156[0] = v46;
  v156[1] = v85;
  v89 = OUTLINED_FUNCTION_4_0();
  sub_21CE612D4((uint64_t)&unk_253F61130);
  v91 = v90;
  v92 = v131;
  v93 = v130;
  sub_21D7C23C4();
  v94 = (*(uint64_t (**)(uint64_t, uint64_t))(v125 + 8))(v86, v93);
  MEMORY[0x24BDAC7A8](v94);
  OUTLINED_FUNCTION_91_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F61BB0);
  v156[0] = v93;
  v156[1] = v88;
  v156[2] = v89;
  v156[3] = v91;
  OUTLINED_FUNCTION_4_0();
  sub_21CE612D4((uint64_t)&unk_253F61BB8);
  v95 = v134;
  v96 = v133;
  sub_21D7C23C4();
  (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v92, v96);
  v97 = v147;
  sub_21D7C1470();
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_95_3();
  v99 = v141;
  v101 = (uint64_t *)(v141 + v100);
  v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66D78);
  v103 = v148;
  v104 = v149;
  (*(void (**)(char *, uint64_t, uint64_t))(v148 + 16))((char *)v101 + *(int *)(v102 + 28), v97, v149);
  *v101 = KeyPath;
  v105 = v135;
  v106 = v137;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v135 + 16))(v99, v95, v137);
  (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v97, v104);
  (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v95, v106);
  sub_21D7C2D30();
  sub_21D7C1440();
  v107 = v142;
  sub_21CDC314C(v99, v142, &qword_2553316A0);
  OUTLINED_FUNCTION_95_3();
  memcpy((void *)(v107 + v108), v156, 0x70uLL);
  OUTLINED_FUNCTION_79_3(v99);
  v109 = v150;
  sub_21D1EEF40();
  v110 = v143;
  sub_21D599D7C();
  v111 = (*(uint64_t (**)(uint64_t, uint64_t))(v151 + 8))(v109, v152);
  OUTLINED_FUNCTION_104_0(v111, &qword_2553316A8);
  v112 = swift_getKeyPath();
  v113 = v145;
  v114 = v144;
  v115 = v146;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v145 + 16))(v144, v110, v146);
  OUTLINED_FUNCTION_95_3();
  v117 = v114 + v116;
  *(_QWORD *)v117 = v112;
  *(_BYTE *)(v117 + 8) = 0;
  (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v110, v115);
  v118 = swift_getKeyPath();
  v119 = v140;
  sub_21CDC314C(v114, v140, &qword_2553316B8);
  OUTLINED_FUNCTION_95_3();
  v121 = v119 + v120;
  *(_QWORD *)v121 = v118;
  *(_BYTE *)(v121 + 8) = 0;
  OUTLINED_FUNCTION_8_8(v114);
  sub_21CDC2FB4(v119, v153, &qword_2553316C0);
  OUTLINED_FUNCTION_9();
}

void sub_21CE59578(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v39 = a2;
  v3 = type metadata accessor for TopSearchLockupView(0);
  v35 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v36 = v4;
  v38 = (uint64_t)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_21D7C14B8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553316D0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553316D8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553316E0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553316E8);
  MEMORY[0x24BDAC7A8](v34);
  v19 = (char *)v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v11 = sub_21D7C1980();
  *((_QWORD *)v11 + 1) = 0x4000000000000000;
  v11[16] = 0;
  v20 = (uint64_t)&v11[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2553316F0) + 44)];
  v37 = a1;
  sub_21CE59A28(a1, v20);
  sub_21D7C14AC();
  if (qword_253F65260 != -1)
    swift_once();
  v21 = sub_21D7C13EC();
  v22 = MEMORY[0x24BDED970];
  v23 = __swift_project_value_buffer(v21, (uint64_t)qword_253F65248);
  v24 = (uint64_t)&v14[*(int *)(v12 + 36)];
  sub_21CDD337C(v23, v24, (uint64_t (*)(_QWORD))v22);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66BF8);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v24 + *(int *)(v25 + 40), v8, v5);
  *(_BYTE *)(v24 + *(int *)(v25 + 36)) = 0;
  sub_21CDC314C((uint64_t)v11, (uint64_t)v14, &qword_2553316D0);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_21CDBDA44((uint64_t)v11, &qword_2553316D0);
  sub_21CDC314C((uint64_t)v14, (uint64_t)v17, &qword_2553316D8);
  *(_OWORD *)&v17[*(int *)(v15 + 36)] = xmmword_21D7CE260;
  sub_21CDBDA44((uint64_t)v14, &qword_2553316D8);
  v26 = sub_21D7C1EFC();
  sub_21CDC314C((uint64_t)v17, (uint64_t)v19, &qword_2553316E0);
  v27 = &v19[*(int *)(v34 + 36)];
  *v27 = v26;
  *(_OWORD *)(v27 + 8) = xmmword_21D7CE270;
  *(_OWORD *)(v27 + 24) = xmmword_21D7CE270;
  v27[40] = 0;
  sub_21CDBDA44((uint64_t)v17, &qword_2553316E0);
  v33[1] = v33;
  MEMORY[0x24BDAC7A8](v28);
  v29 = MEMORY[0x24BDAC7A8](v37);
  v30 = v38;
  sub_21CDD337C(v29, v38, type metadata accessor for TopSearchLockupView);
  v31 = (*(unsigned __int8 *)(v35 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  v32 = swift_allocObject();
  sub_21CDD3198(v30, v32 + v31, type metadata accessor for TopSearchLockupView);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553316F8);
  type metadata accessor for ContextMenuPreview(0);
  sub_21CE61848((uint64_t)&unk_255331700);
  sub_21CE553B0((uint64_t)&unk_255331720);
  sub_21CDF81B4((uint64_t)&unk_253F60D18);
  sub_21D7C231C();
  swift_release();
  sub_21CDBDA44((uint64_t)v19, &qword_2553316E8);
}

void sub_21CE59A28(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _BYTE v105[24];
  uint64_t v106;

  v97 = a1;
  v104 = a2;
  v96 = type metadata accessor for TopSearchLockupView(0);
  MEMORY[0x24BDAC7A8](v96);
  v91 = (uint64_t)&v81 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_21D7BFF04();
  v83 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v100 = (char *)&v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for TopSearchLockup();
  v4 = MEMORY[0x24BDAC7A8](v88);
  v89 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v99 = (uint64_t)&v81 - v6;
  v90 = type metadata accessor for TopSearchLockupView.TitleView(0);
  MEMORY[0x24BDAC7A8](v90);
  v82 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65DA8);
  MEMORY[0x24BDAC7A8](v8);
  v87 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66188);
  v10 = MEMORY[0x24BDAC7A8](v103);
  v85 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v84 = (char *)&v81 - v12;
  v13 = sub_21D7C12B4();
  v94 = *(_QWORD *)(v13 - 8);
  v95 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v93 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66190);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v102 = (uint64_t)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v101 = (char *)&v81 - v18;
  v19 = sub_21D7C14B8();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v81 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67010);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v81 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331728);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v81 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331730);
  v29 = MEMORY[0x24BDAC7A8](v92);
  v98 = (uint64_t)&v81 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)&v81 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v35 = (char *)&v81 - v34;
  if (qword_253F652E8 != -1)
    swift_once();
  v36 = qword_253F652D8;
  *(_QWORD *)v25 = sub_21D7C1854();
  *((_QWORD *)v25 + 1) = v36;
  v25[16] = 0;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65BE8);
  v38 = v97;
  sub_21CE5A274(v97, (uint64_t)&v25[*(int *)(v37 + 44)]);
  sub_21D7C14A0();
  sub_21CE5C1BC();
  v40 = v39;
  v41 = &v28[*(int *)(v26 + 36)];
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66BE8);
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(&v41[*(int *)(v42 + 40)], v22, v19);
  *(_QWORD *)v41 = v40;
  v41[8] = 0;
  sub_21CDC314C((uint64_t)v25, (uint64_t)v28, &qword_253F67010);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  sub_21CDBDA44((uint64_t)v25, &qword_253F67010);
  v43 = sub_21D7C2D30();
  v45 = v44;
  v46 = (uint64_t)&v33[*(int *)(v92 + 36)];
  sub_21CE5C254(v38, v46);
  v47 = (uint64_t *)(v46 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255331738) + 36));
  *v47 = v43;
  v47[1] = v45;
  sub_21CDC2FB4((uint64_t)v28, (uint64_t)v33, &qword_255331728);
  sub_21CDC2FB4((uint64_t)v33, (uint64_t)v35, &qword_255331730);
  v48 = v93;
  sub_21D4B6A40();
  LOBYTE(v43) = sub_21D7C12A8();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v48, v95);
  v49 = v38;
  v50 = (uint64_t)v35;
  if ((v43 & 1) != 0)
  {
    v96 = (uint64_t)v35;
    sub_21D55A6C8();
    sub_21D1EEF40();
    v51 = (uint64_t)v89;
    sub_21D55A6C8();
    sub_21CDC314C(v51 + *(int *)(v88 + 24), (uint64_t)v105, &qword_253F67430);
    sub_21CDBDA1C(v51, (uint64_t (*)(_QWORD))type metadata accessor for TopSearchLockup);
    v52 = v106;
    sub_21CDBDA44((uint64_t)v105, &qword_253F67430);
    v53 = v91;
    sub_21CDD337C(v49, v91, type metadata accessor for TopSearchLockupView);
    v54 = v103;
    v55 = (uint64_t)v101;
    if (v52)
      v56 = 0;
    else
      v56 = sub_21CE5BDB8();
    v58 = (uint64_t)v87;
    v59 = v86;
    v60 = (uint64_t)v85;
    v61 = (uint64_t)v84;
    v62 = v83;
    v63 = (uint64_t)v82;
    sub_21CDBDA1C(v53, type metadata accessor for TopSearchLockupView);
    sub_21CDD3198(v99, v63, (uint64_t (*)(_QWORD))type metadata accessor for TopSearchLockup);
    v64 = v90;
    (*(void (**)(uint64_t, char *, uint64_t))(v62 + 32))(v63 + *(int *)(v90 + 20), v100, v59);
    *(_BYTE *)(v63 + *(int *)(v64 + 24)) = v56 & 1;
    *(_QWORD *)(v63 + *(int *)(v64 + 28)) = 2;
    v65 = sub_21D7C2D3C();
    sub_21D45B3EC(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, 1, 0, 1, v65, v66);
    sub_21CDBDA1C(v63, type metadata accessor for TopSearchLockupView.TitleView);
    v67 = sub_21D7C1F14();
    sub_21D7C0CE4();
    v69 = v68;
    v71 = v70;
    v73 = v72;
    v75 = v74;
    sub_21CDC314C(v58, v60, &qword_253F65DA8);
    v76 = v60 + *(int *)(v54 + 36);
    *(_BYTE *)v76 = v67;
    *(_QWORD *)(v76 + 8) = v69;
    *(_QWORD *)(v76 + 16) = v71;
    *(_QWORD *)(v76 + 24) = v73;
    *(_QWORD *)(v76 + 32) = v75;
    *(_BYTE *)(v76 + 40) = 0;
    sub_21CDBDA44(v58, &qword_253F65DA8);
    sub_21CDC2FB4(v60, v61, &qword_253F66188);
    sub_21CDC2FB4(v61, v55, &qword_253F66188);
    v57 = 0;
    v50 = v96;
  }
  else
  {
    v57 = 1;
    v54 = v103;
    v55 = (uint64_t)v101;
  }
  __swift_storeEnumTagSinglePayload(v55, v57, 1, v54);
  v77 = v98;
  sub_21CDC314C(v50, v98, &qword_255331730);
  v78 = v102;
  sub_21CDC314C(v55, v102, &qword_253F66190);
  v79 = v104;
  sub_21CDC314C(v77, v104, &qword_255331730);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331740);
  sub_21CDC314C(v78, v79 + *(int *)(v80 + 48), &qword_253F66190);
  sub_21CDBDA44(v55, &qword_253F66190);
  sub_21CDBDA44(v50, &qword_255331730);
  sub_21CDBDA44(v78, &qword_253F66190);
  sub_21CDBDA44(v77, &qword_255331730);
}

void sub_21CE5A274(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  int v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char v106;
  double v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  int *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(char *, uint64_t);
  char *v125;
  char *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  char v163;
  _QWORD v164[3];
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unsigned __int8 v170;
  uint64_t v171;
  unsigned __int8 v172;
  uint64_t v173;
  unsigned __int8 v174;
  __int128 v175;

  v153 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67280);
  MEMORY[0x24BDAC7A8](v3);
  v148 = (uint64_t)&v123 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DownloadStatusIndicator();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v152 = (uint64_t)&v123 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v151 = (char *)&v123 - v8;
  v147 = sub_21D7C12B4();
  v146 = *(_QWORD *)(v147 - 8);
  MEMORY[0x24BDAC7A8](v147);
  v145 = (char *)&v123 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = type metadata accessor for TopSearchLockupView(0);
  MEMORY[0x24BDAC7A8](v157);
  v139 = (uint64_t)&v123 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = type metadata accessor for TopSearchLockupView.TitleView(0);
  MEMORY[0x24BDAC7A8](v140);
  v141 = (uint64_t)&v123 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65DA8);
  MEMORY[0x24BDAC7A8](v12);
  v144 = (char *)&v123 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66198);
  v14 = MEMORY[0x24BDAC7A8](v143);
  v150 = (uint64_t)&v123 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v142 = (uint64_t)&v123 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v158 = (uint64_t)&v123 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
  MEMORY[0x24BDAC7A8](v19);
  v130 = (uint64_t)&v123 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = type metadata accessor for TopSearchLockup();
  v21 = MEMORY[0x24BDAC7A8](v156);
  v137 = (char *)&v123 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v138 = (char *)&v123 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v128 = (char *)&v123 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v123 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v123 - v30;
  v127 = type metadata accessor for TopSearchLockupView.ArtworkContentView(0);
  MEMORY[0x24BDAC7A8](v127);
  v135 = (uint64_t)&v123 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65DB0);
  MEMORY[0x24BDAC7A8](v131);
  v133 = (uint64_t)&v123 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F661A0);
  MEMORY[0x24BDAC7A8](v132);
  v134 = (uint64_t)&v123 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_21D7BFF04();
  v36 = *(_QWORD *)(v35 - 8);
  v37 = *(_QWORD *)(v36 + 64);
  v38 = MEMORY[0x24BDAC7A8](v35);
  v136 = (char *)&v123 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = MEMORY[0x24BDAC7A8](v38);
  v126 = (char *)&v123 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v129 = (char *)&v123 - v42;
  MEMORY[0x24BDAC7A8](v41);
  v44 = (char *)&v123 - v43;
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66358);
  v46 = MEMORY[0x24BDAC7A8](v45);
  v149 = (uint64_t)&v123 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v46);
  v49 = (char *)&v123 - v48;
  v50 = a1;
  sub_21D1EEF40();
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t))(v36 + 88))(v44, v35);
  v51 = *MEMORY[0x24BE695A0];
  v154 = v36;
  v52 = *(void (**)(char *, uint64_t))(v36 + 8);
  v155 = v35;
  v52(v44, v35);
  if ((_DWORD)a1 == v51)
  {
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66350);
    v54 = (uint64_t)v49;
    v55 = 1;
    goto LABEL_5;
  }
  v124 = v52;
  v125 = v49;
  v56 = v50;
  sub_21D55A6C8();
  v57 = v130;
  sub_21D28842C(v130);
  sub_21CDBDA1C((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for TopSearchLockup);
  v58 = sub_21CE5B1A0();
  v60 = v59;
  sub_21D55A6C8();
  v61 = v156;
  v62 = v29[*(int *)(v156 + 56)];
  sub_21CDBDA1C((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for TopSearchLockup);
  v63 = (uint64_t)v128;
  sub_21D55A6C8();
  v64 = *(_BYTE *)(v63 + *(int *)(v61 + 60));
  sub_21CDBDA1C(v63, (uint64_t (*)(_QWORD))type metadata accessor for TopSearchLockup);
  v65 = v57;
  v66 = v135;
  sub_21CDC2FB4(v65, v135, &qword_253F655E8);
  v67 = v127;
  v68 = (uint64_t *)(v66 + *(int *)(v127 + 20));
  *v68 = v58;
  v68[1] = v60;
  *(_BYTE *)(v66 + *(int *)(v67 + 24)) = v62;
  *(_BYTE *)(v66 + *(int *)(v67 + 28)) = v64;
  v130 = sub_21D7C2D30();
  v70 = *(_QWORD *)(v56 + *(int *)(v157 + 40));
  if (v70)
  {
    v71 = v69;
    v50 = v56;
    swift_retain();
    v72 = v129;
    sub_21D1EEF40();
    v73 = v154;
    v74 = v126;
    v75 = v155;
    (*(void (**)(char *, char *, uint64_t))(v154 + 16))(v126, v72, v155);
    v76 = (*(unsigned __int8 *)(v73 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
    v77 = swift_allocObject();
    *(_QWORD *)(v77 + 16) = v70;
    (*(void (**)(unint64_t, char *, uint64_t))(v73 + 32))(v77 + v76, v74, v75);
    type metadata accessor for PlaybackPresenter();
    sub_21CDF81B4((uint64_t)&qword_253F609E0);
    swift_retain();
    v78 = sub_21D7C1188();
    v80 = v79;
    v124(v72, v75);
    v81 = v135;
    v82 = v133;
    sub_21CDD337C(v135, v133, type metadata accessor for TopSearchLockupView.ArtworkContentView);
    v83 = v82 + *(int *)(v131 + 36);
    *(_QWORD *)v83 = sub_21CE61C6C;
    *(_QWORD *)(v83 + 8) = v77;
    *(_BYTE *)(v83 + 16) = 0;
    *(_QWORD *)(v83 + 24) = v78;
    *(_QWORD *)(v83 + 32) = v80;
    *(_QWORD *)(v83 + 40) = v130;
    *(_QWORD *)(v83 + 48) = v71;
    sub_21CDBDA1C(v81, type metadata accessor for TopSearchLockupView.ArtworkContentView);
    v84 = sub_21CE5B3D4();
    v85 = v134;
    sub_21CDC314C(v82, v134, &qword_253F65DB0);
    v86 = v85 + *(int *)(v132 + 36);
    *(_QWORD *)v86 = v84;
    *(_WORD *)(v86 + 8) = 256;
    sub_21CDBDA44(v82, &qword_253F65DB0);
    v87 = sub_21D7C2D30();
    v89 = v88;
    v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66350);
    v49 = v125;
    v91 = (uint64_t)&v125[*(int *)(v90 + 36)];
    sub_21CE5B5A8(v91);
    v92 = (uint64_t *)(v91 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253F66648) + 36));
    *v92 = v87;
    v92[1] = v89;
    sub_21CDC2FB4(v85, (uint64_t)v49, &qword_253F661A0);
    v54 = (uint64_t)v49;
    v55 = 0;
    v53 = v90;
LABEL_5:
    __swift_storeEnumTagSinglePayload(v54, v55, 1, v53);
    v93 = (uint64_t)v151;
    v94 = (uint64_t)v138;
    sub_21D55A6C8();
    v95 = v136;
    sub_21D1EEF40();
    v96 = (uint64_t)v137;
    sub_21D55A6C8();
    sub_21CDC314C(v96 + *(int *)(v156 + 24), (uint64_t)v164, &qword_253F67430);
    sub_21CDBDA1C(v96, (uint64_t (*)(_QWORD))type metadata accessor for TopSearchLockup);
    v97 = v165;
    sub_21CDBDA44((uint64_t)v164, &qword_253F67430);
    v98 = v139;
    sub_21CDD337C(v50, v139, type metadata accessor for TopSearchLockupView);
    if (v97)
      v99 = 0;
    else
      v99 = sub_21CE5BDB8();
    sub_21CDBDA1C(v98, type metadata accessor for TopSearchLockupView);
    v100 = v141;
    sub_21CDD3198(v94, v141, (uint64_t (*)(_QWORD))type metadata accessor for TopSearchLockup);
    v101 = v140;
    (*(void (**)(uint64_t, char *, uint64_t))(v154 + 32))(v100 + *(int *)(v140 + 20), v95, v155);
    *(_BYTE *)(v100 + *(int *)(v101 + 24)) = v99 & 1;
    *(_QWORD *)(v100 + *(int *)(v101 + 28)) = 1;
    v102 = sub_21D7C2D3C();
    v103 = (uint64_t)v144;
    sub_21D45B3EC(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, 1, 0, 1, v102, v104);
    sub_21CDBDA1C(v100, type metadata accessor for TopSearchLockupView.TitleView);
    v105 = v145;
    sub_21D4B6A40();
    v106 = sub_21D7C12A8();
    (*(void (**)(char *, uint64_t))(v146 + 8))(v105, v147);
    if ((v106 & 1) != 0)
      v107 = 0.0;
    else
      v107 = 1.0;
    v108 = v142;
    sub_21CDC314C(v103, v142, &qword_253F65DA8);
    *(double *)(v108 + *(int *)(v143 + 36)) = v107;
    sub_21CDBDA44(v103, &qword_253F65DA8);
    sub_21CDC2FB4(v108, v158, &qword_253F66198);
    type metadata accessor for GenericItemStateObserver(0);
    sub_21CDF81B4((uint64_t)&unk_253F62608);
    sub_21D7C0E7C();
    v109 = v148;
    sub_21D70C5D4(v148);
    swift_release();
    sub_21CE3B430(v109, v93);
    if (sub_21CE5C104())
    {
      v163 = 0;
      v162 = 0u;
      v161 = 0u;
      v160 = 0u;
      v159 = 0u;
    }
    else
    {
      if (sub_21CE5C104())
      {
        v157 = 0;
        v156 = 0;
        v155 = 0;
        v154 = 0;
        v151 = 0;
        v148 = 0;
        v147 = 0;
        v146 = 0;
        v110 = 255;
LABEL_17:
        LODWORD(v145) = v110;
        v111 = v149;
        sub_21CDC314C((uint64_t)v49, v149, &qword_253F66358);
        v112 = v158;
        v113 = (uint64_t)v49;
        v114 = v150;
        sub_21CDC314C(v158, v150, &qword_253F66198);
        v115 = v152;
        sub_21CDD337C(v93, v152, (uint64_t (*)(_QWORD))type metadata accessor for DownloadStatusIndicator);
        v116 = v153;
        sub_21CDC314C(v111, v153, &qword_253F66358);
        v117 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_253F66360);
        sub_21CDC314C(v114, v116 + v117[12], &qword_253F66198);
        sub_21CDD337C(v115, v116 + v117[16], (uint64_t (*)(_QWORD))type metadata accessor for DownloadStatusIndicator);
        v118 = v116 + v117[20];
        v119 = v156;
        *(_QWORD *)v118 = v157;
        *(_QWORD *)(v118 + 8) = v119;
        v120 = v154;
        *(_QWORD *)(v118 + 16) = v155;
        *(_QWORD *)(v118 + 24) = v120;
        v121 = v148;
        *(_QWORD *)(v118 + 32) = v151;
        *(_QWORD *)(v118 + 40) = v121;
        v122 = v146;
        *(_QWORD *)(v118 + 48) = v147;
        *(_QWORD *)(v118 + 56) = v122;
        *(_BYTE *)(v118 + 64) = (_BYTE)v145;
        sub_21CDBDA1C(v93, (uint64_t (*)(_QWORD))type metadata accessor for DownloadStatusIndicator);
        sub_21CDBDA44(v112, &qword_253F66198);
        sub_21CDBDA44(v113, &qword_253F66358);
        sub_21CDBDA1C(v115, (uint64_t (*)(_QWORD))type metadata accessor for DownloadStatusIndicator);
        sub_21CDBDA44(v114, &qword_253F66198);
        sub_21CDBDA44(v111, &qword_253F66358);
        return;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F65BB8);
      sub_21D7C0F0C();
      sub_21D7C2D30();
      sub_21D7C0F84();
      v159 = xmmword_21D7CB0A0;
      *(_QWORD *)&v160 = v171;
      *((_QWORD *)&v160 + 1) = v172;
      *(_QWORD *)&v161 = v173;
      *((_QWORD *)&v161 + 1) = v174;
      v162 = v175;
      v163 = 1;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F660F8);
    sub_21CE61C98();
    sub_21CE61CD4();
    sub_21D7C1AAC();
    v157 = v164[0];
    v156 = v164[1];
    v155 = v164[2];
    v154 = v165;
    v151 = v166;
    v148 = v167;
    v147 = v168;
    v146 = v169;
    v110 = v170;
    goto LABEL_17;
  }
  type metadata accessor for PlaybackPresenter();
  sub_21CDF81B4((uint64_t)&qword_253F609E0);
  sub_21D7C14E8();
  __break(1u);
}

uint64_t sub_21CE5B1A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  BOOL v10;
  uint64_t v11;
  uint64_t v13;

  v0 = sub_21D7C04C8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_21D7BFF04();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21D1EEF40();
  v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  v10 = v8 == *MEMORY[0x24BE69578] || v8 == *MEMORY[0x24BE69528] || v8 == *MEMORY[0x24BE69590];
  if (v10
    || v8 == *MEMORY[0x24BE69510]
    || v8 == *MEMORY[0x24BE695A8]
    || v8 == *MEMORY[0x24BE69520]
    || v8 != *MEMORY[0x24BE69530])
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return 0;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v3, v7, v0);
    v11 = sub_21D7C0498();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return v11;
}

uint64_t sub_21CE5B3D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v0 = sub_21D7C18FC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_21D7C13F8();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for TopSearchLockup();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21D55A6C8();
  v10 = v9[*(int *)(v7 + 56)];
  sub_21CDBDA1C((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for TopSearchLockup);
  if (v10 == 1)
  {
    sub_21CE61D40();
  }
  else
  {
    if (qword_253F654B8 != -1)
      swift_once();
    v11 = qword_253F654B0;
    (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BDEEB68], v0);
    (*(void (**)(char *, char *, uint64_t))(v1 + 16))((char *)v6 + *(int *)(v4 + 20), v3, v0);
    *v6 = v11;
    v6[1] = v11;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    sub_21CDF81B4((uint64_t)&unk_253F66588);
  }
  return sub_21D7C2C1C();
}

uint64_t sub_21CE5B5A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v36 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67018);
  MEMORY[0x24BDAC7A8](v1);
  v33 = (uint64_t *)((char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F660E8);
  MEMORY[0x24BDAC7A8](v35);
  v32 = (uint64_t)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_21D7BFF94();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v31 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5DE38);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5DE28);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v34 = (uint64_t)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v31 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v31 - v16;
  type metadata accessor for TopSearchLockupView(0);
  type metadata accessor for GenericItemStateObserver(0);
  sub_21CDF81B4((uint64_t)&unk_253F62608);
  sub_21D7C0E7C();
  sub_21D70C5B8((uint64_t)v17);
  swift_release();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v15, *MEMORY[0x24BE696D0], v4);
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v4);
  v18 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_21CDC314C((uint64_t)v17, (uint64_t)v9, &qword_253F5DE28);
  sub_21CDC314C((uint64_t)v15, v18, &qword_253F5DE28);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v4) != 1)
  {
    v19 = v34;
    sub_21CDC314C((uint64_t)v9, v34, &qword_253F5DE28);
    if (__swift_getEnumTagSinglePayload(v18, 1, v4) != 1)
    {
      v20 = v31;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v31, v18, v4);
      sub_21CDF81B4((uint64_t)&unk_253F5DE20);
      v21 = sub_21D7C5094();
      v22 = *(void (**)(char *, uint64_t))(v5 + 8);
      v22(v20, v4);
      sub_21CDBDA44((uint64_t)v15, &qword_253F5DE28);
      sub_21CDBDA44((uint64_t)v17, &qword_253F5DE28);
      v22((char *)v19, v4);
      sub_21CDBDA44((uint64_t)v9, &qword_253F5DE28);
      if ((v21 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v29 = 1;
      v27 = v35;
      v28 = v36;
      return __swift_storeEnumTagSinglePayload(v28, v29, 1, v27);
    }
    sub_21CDBDA44((uint64_t)v15, &qword_253F5DE28);
    sub_21CDBDA44((uint64_t)v17, &qword_253F5DE28);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v19, v4);
LABEL_6:
    sub_21CDBDA44((uint64_t)v9, &qword_253F5DE38);
    goto LABEL_9;
  }
  sub_21CDBDA44((uint64_t)v15, &qword_253F5DE28);
  sub_21CDBDA44((uint64_t)v17, &qword_253F5DE28);
  if (__swift_getEnumTagSinglePayload(v18, 1, v4) != 1)
    goto LABEL_6;
  sub_21CDBDA44((uint64_t)v9, &qword_253F5DE28);
LABEL_8:
  v23 = sub_21D7C1854();
  v24 = (uint64_t)v33;
  *v33 = v23;
  *(_QWORD *)(v24 + 8) = 0;
  *(_BYTE *)(v24 + 16) = 1;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331778);
  sub_21CE5BA30(v24 + *(int *)(v25 + 44));
  v26 = v32;
  sub_21CDC314C(v24, v32, &qword_253F67018);
  v27 = v35;
  *(_OWORD *)(v26 + *(int *)(v35 + 36)) = xmmword_21D7CE280;
  sub_21CDBDA44(v24, &qword_253F67018);
  v28 = v36;
  sub_21CDC2FB4(v26, v36, &qword_253F660E8);
  v29 = 0;
  return __swift_storeEnumTagSinglePayload(v28, v29, 1, v27);
}

void sub_21CE5BA30(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v32 = a1;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66DA8);
  MEMORY[0x24BDAC7A8](v30);
  v2 = (uint64_t *)((char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = sub_21D7C297C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66E10);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331780);
  MEMORY[0x24BDAC7A8](v28);
  v11 = (uint64_t *)((char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331788);
  v12 = MEMORY[0x24BDAC7A8](v31);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v29 = (uint64_t)&v27 - v15;
  v16 = sub_21D7C2958();
  sub_21D7C1FD4();
  v17 = sub_21D7C1F80();
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v17);
  v18 = sub_21D7C1FE0();
  sub_21CDBDA44((uint64_t)v9, &qword_253F66E10);
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BDF40B8], v3);
  v20 = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))((char *)v2 + *(int *)(v30 + 28), v6, v3);
  *v2 = v20;
  sub_21CDC314C((uint64_t)v2, (uint64_t)v11 + *(int *)(v28 + 36), &qword_253F66DA8);
  *v11 = v16;
  v11[1] = KeyPath;
  v11[2] = v18;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_21CDBDA44((uint64_t)v2, &qword_253F66DA8);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_release();
  swift_release();
  swift_release();
  v21 = sub_21D7C285C();
  v22 = swift_getKeyPath();
  sub_21CDC314C((uint64_t)v11, (uint64_t)v14, &qword_255331780);
  v23 = (uint64_t *)&v14[*(int *)(v31 + 36)];
  *v23 = v22;
  v23[1] = v21;
  sub_21CDBDA44((uint64_t)v11, &qword_255331780);
  v24 = v29;
  sub_21CDC2FB4((uint64_t)v14, v29, &qword_255331788);
  sub_21CDC314C(v24, (uint64_t)v14, &qword_255331788);
  v25 = v32;
  sub_21CDC314C((uint64_t)v14, v32, &qword_255331788);
  v26 = v25 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255331790) + 48);
  *(_QWORD *)v26 = 0;
  *(_BYTE *)(v26 + 8) = 1;
  sub_21CDBDA44(v24, &qword_255331788);
  sub_21CDBDA44((uint64_t)v14, &qword_255331788);
}

uint64_t sub_21CE5BDB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  void (*v20)(char *, char *, uint64_t);
  int v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  int v25;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[5];

  v1 = sub_21D7C312C();
  v28 = *(_QWORD *)(v1 - 8);
  v29 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v27 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_21D7BFF04();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67268);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_21D7C3144();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v27 - v15;
  sub_21D1EEF40();
  v17 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TopSearchLockupView(0) + 40));
  if (!v17)
  {
    type metadata accessor for PlaybackPresenter();
    sub_21CDF81B4((uint64_t)&qword_253F609E0);
    result = sub_21D7C14E8();
    __break(1u);
    return result;
  }
  v18 = v17 + 16;
  swift_beginAccess();
  sub_21CDB66AC(v18, (uint64_t)v30);
  sub_21D5530AC(v30, (uint64_t)v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10) != 1)
  {
    v20 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v20(v16, v9, v10);
    v20(v14, v16, v10);
    v21 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v14, v10);
    if (v21 == *MEMORY[0x24BE6A810])
    {
      (*(void (**)(char *, uint64_t))(v11 + 96))(v14, v10);
      v23 = v27;
      v22 = v28;
      v24 = v29;
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v27, v14, v29);
      v25 = (*(uint64_t (**)(char *, uint64_t))(v22 + 88))(v23, v24);
      if (v25 != *MEMORY[0x24BE6A818] && v25 != *MEMORY[0x24BE6A850])
      {
        (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v24);
        return 1;
      }
    }
    else if (v21 != *MEMORY[0x24BE6A878])
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
      return 1;
    }
    return 0;
  }
  sub_21CDBDA44((uint64_t)v9, &qword_253F67268);
  return 1;
}

BOOL sub_21CE5C104()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  _BOOL8 v3;
  _BYTE v6[24];
  uint64_t v7;

  v0 = type metadata accessor for TopSearchLockup();
  MEMORY[0x24BDAC7A8](v0);
  v2 = &v6[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_21D55A6C8();
  sub_21CDC314C((uint64_t)&v2[*(int *)(v0 + 24)], (uint64_t)v6, &qword_253F67430);
  sub_21CDBDA1C((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for TopSearchLockup);
  v3 = v7 != 0;
  sub_21CDBDA44((uint64_t)v6, &qword_253F67430);
  return v3;
}

uint64_t sub_21CE5C1BC()
{
  uint64_t result;

  result = sub_21CE5C104();
  if ((result & 1) == 0)
  {
    type metadata accessor for TopSearchLockupView(0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F65BB8);
    result = sub_21D7C0F0C();
    if (qword_253F65318 != -1)
      return swift_once();
  }
  return result;
}

uint64_t sub_21CE5C254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331748);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331750);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_21CE5C104())
    return __swift_storeEnumTagSinglePayload(a2, 1, 1, v7);
  *(_QWORD *)v6 = sub_21D7C1854();
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 1;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331758);
  sub_21CE5C3F0(a1, &v6[*(int *)(v11 + 44)]);
  if (qword_253F65318 != -1)
    swift_once();
  v12 = qword_253F65310;
  sub_21CDC314C((uint64_t)v6, (uint64_t)v9, &qword_255331748);
  v13 = (uint64_t *)&v9[*(int *)(v7 + 36)];
  *v13 = v12;
  v13[1] = 0;
  sub_21CDBDA44((uint64_t)v6, &qword_255331748);
  sub_21CDC2FB4((uint64_t)v9, a2, &qword_255331750);
  return __swift_storeEnumTagSinglePayload(a2, 0, 1, v7);
}

void sub_21CE5C3F0(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t KeyPath;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v28 = a2;
  v3 = sub_21D7C147C();
  v27 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331760);
  v25 = *(_QWORD *)(v6 - 8);
  v26 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331768);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v25 - v13;
  v30 = a1;
  v29 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65FD8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553316F8);
  sub_21CE61738();
  sub_21CE553B0((uint64_t)&unk_255331720);
  sub_21D7C207C();
  if (qword_253F65350 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v3, (uint64_t)qword_253F65330);
  v16 = v27;
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  v17(v5, v15, v3);
  KeyPath = swift_getKeyPath();
  v19 = (uint64_t *)&v12[*(int *)(v9 + 36)];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66D78);
  v17((char *)v19 + *(int *)(v20 + 28), (uint64_t)v5, v3);
  *v19 = KeyPath;
  v22 = v25;
  v21 = v26;
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v12, v8, v26);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v21);
  sub_21CDC2FB4((uint64_t)v12, (uint64_t)v14, &qword_255331768);
  sub_21CDC314C((uint64_t)v14, (uint64_t)v12, &qword_255331768);
  v23 = v28;
  *v28 = 0;
  *((_BYTE *)v23 + 8) = 1;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331770);
  sub_21CDC314C((uint64_t)v12, (uint64_t)v23 + *(int *)(v24 + 48), &qword_255331768);
  sub_21CDBDA44((uint64_t)v14, &qword_255331768);
  sub_21CDBDA44((uint64_t)v12, &qword_255331768);
}

uint64_t sub_21CE5C6B8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t result;
  _QWORD *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD v61[3];
  uint64_t v62;
  _OWORD v63[2];
  uint64_t v64;

  v60 = a1;
  v50 = sub_21D7C45FC();
  v49 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v48 = (char *)&v44 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_21D7C4314();
  v46 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v45 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for MenuContext(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TopSearchLockup();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v44 - v13;
  v15 = (int *)type metadata accessor for MenuConfiguration(0);
  v52 = *((_QWORD *)v15 - 1);
  v16 = *(_QWORD *)(v52 + 64);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v53 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v44 - v18;
  v59 = sub_21D7BFF04();
  v56 = *(_QWORD *)(v59 - 8);
  v20 = MEMORY[0x24BDAC7A8](v59);
  v54 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = v21;
  MEMORY[0x24BDAC7A8](v20);
  v57 = (char *)&v44 - v22;
  sub_21D1EEF40();
  sub_21D55A6C8();
  sub_21CDC314C((uint64_t)&v14[*(int *)(v9 + 68)], (uint64_t)v8, &qword_253F60800);
  sub_21CDBDA1C((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for TopSearchLockup);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67330);
  v51 = v5;
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 5, 8, v23);
  v64 = 0;
  memset(v63, 0, sizeof(v63));
  sub_21D55A6C8();
  sub_21CDC314C((uint64_t)&v12[*(int *)(v9 + 24)], (uint64_t)v61, &qword_253F67430);
  sub_21CDBDA1C((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for TopSearchLockup);
  v58 = v16;
  if (v62)
  {
    __swift_project_boxed_opaque_existential_1(v61, v62);
    v24 = v45;
    sub_21D7C3FFC();
    v25 = v48;
    sub_21D7C4308();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v24, v47);
    v26 = sub_21D7C45CC();
    v28 = v27;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v25, v50);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
    sub_21CDC314C((uint64_t)v8, (uint64_t)v19, &qword_253F60800);
    v29 = (uint64_t)v51;
    sub_21CDD337C((uint64_t)v51, (uint64_t)&v19[v15[5]], type metadata accessor for MenuContext);
    v30 = &v19[v15[6]];
    *(_QWORD *)v30 = 0;
    *((_QWORD *)v30 + 1) = 0;
    *(_QWORD *)&v19[v15[7]] = 0;
    sub_21CDC314C((uint64_t)v63, (uint64_t)&v19[v15[8]], &qword_253F67430);
    if (!v28)
    {
      v26 = 0;
      v28 = 0xE000000000000000;
    }
    v31 = (uint64_t)v53;
  }
  else
  {
    sub_21CDBDA44((uint64_t)v61, &qword_253F67430);
    sub_21CDC314C((uint64_t)v8, (uint64_t)v19, &qword_253F60800);
    v29 = (uint64_t)v51;
    sub_21CDD337C((uint64_t)v51, (uint64_t)&v19[v15[5]], type metadata accessor for MenuContext);
    v32 = &v19[v15[6]];
    *(_QWORD *)v32 = 0;
    *((_QWORD *)v32 + 1) = 0;
    *(_QWORD *)&v19[v15[7]] = 0;
    sub_21CDC314C((uint64_t)v63, (uint64_t)&v19[v15[8]], &qword_253F67430);
    v26 = 0;
    v28 = 0xE000000000000000;
    v31 = (uint64_t)v53;
  }
  v33 = v52;
  sub_21CDBDA44((uint64_t)v63, &qword_253F67430);
  sub_21CDBDA1C(v29, type metadata accessor for MenuContext);
  sub_21CDBDA44((uint64_t)v8, &qword_253F60800);
  v34 = (uint64_t *)&v19[v15[9]];
  *v34 = v26;
  v34[1] = v28;
  v35 = v56;
  v36 = v57;
  v37 = v54;
  v38 = v59;
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v54, v57, v59);
  sub_21CDD337C((uint64_t)v19, v31, type metadata accessor for MenuConfiguration);
  v39 = (*(unsigned __int8 *)(v35 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  v40 = (v55 + *(unsigned __int8 *)(v33 + 80) + v39) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v41 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v35 + 32))(v41 + v39, v37, v38);
  sub_21CDD3198(v31, v41 + v40, type metadata accessor for MenuConfiguration);
  sub_21CDBDA1C((uint64_t)v19, type metadata accessor for MenuConfiguration);
  result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v36, v38);
  v43 = v60;
  *v60 = sub_21CE61710;
  v43[1] = v41;
  return result;
}

uint64_t sub_21CE5CC54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  char *v25;
  __int128 v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t result;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;

  v75 = a1;
  v68 = a2;
  v69 = sub_21D7C14B8();
  v67 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v66 = (char *)&v62 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67D10);
  MEMORY[0x24BDAC7A8](v65);
  v78 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66DA8);
  MEMORY[0x24BDAC7A8](v71);
  v5 = (uint64_t *)((char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_21D7C297C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F660A0);
  MEMORY[0x24BDAC7A8](v70);
  v11 = (uint64_t *)((char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66310);
  MEMORY[0x24BDAC7A8](v72);
  v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66440);
  MEMORY[0x24BDAC7A8](v73);
  v15 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F664C8);
  MEMORY[0x24BDAC7A8](v74);
  v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66530);
  MEMORY[0x24BDAC7A8](v76);
  v77 = (uint64_t)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66F20);
  v63 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v62 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_21D7C2958();
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BDF40B0], v6);
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v5 + *(int *)(v71 + 28), v9, v6);
  *v5 = KeyPath;
  sub_21CDC314C((uint64_t)v5, (uint64_t)v11 + *(int *)(v70 + 36), &qword_253F66DA8);
  *v11 = v20;
  swift_retain();
  sub_21CDBDA44((uint64_t)v5, &qword_253F66DA8);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_release();
  if (qword_253F65328 != -1)
    swift_once();
  v22 = qword_253F65320;
  v23 = swift_getKeyPath();
  sub_21CDC314C((uint64_t)v11, (uint64_t)v13, &qword_253F660A0);
  v24 = (uint64_t *)&v13[*(int *)(v72 + 36)];
  *v24 = v23;
  v24[1] = v22;
  swift_retain();
  sub_21CDBDA44((uint64_t)v11, &qword_253F660A0);
  sub_21CE5E7C4();
  sub_21D7C2D30();
  sub_21D7C0F84();
  sub_21CDC314C((uint64_t)v13, (uint64_t)v15, &qword_253F66310);
  v25 = &v15[*(int *)(v73 + 36)];
  v26 = v80;
  *(_OWORD *)v25 = v79;
  *((_OWORD *)v25 + 1) = v26;
  *((_OWORD *)v25 + 2) = v81;
  sub_21CDBDA44((uint64_t)v13, &qword_253F66310);
  v27 = sub_21D7C1F20();
  if (qword_253F65318 != -1)
    swift_once();
  sub_21D7C0CE4();
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v35 = v34;
  sub_21CDC314C((uint64_t)v15, (uint64_t)v17, &qword_253F66440);
  v36 = &v17[*(int *)(v74 + 36)];
  *v36 = v27;
  *((_QWORD *)v36 + 1) = v29;
  *((_QWORD *)v36 + 2) = v31;
  *((_QWORD *)v36 + 3) = v33;
  *((_QWORD *)v36 + 4) = v35;
  v36[40] = 0;
  sub_21CDBDA44((uint64_t)v15, &qword_253F66440);
  v37 = sub_21D7C1F38();
  sub_21D7C0CE4();
  v39 = v38;
  v41 = v40;
  v43 = v42;
  v45 = v44;
  v46 = v77;
  sub_21CDC314C((uint64_t)v17, v77, &qword_253F664C8);
  v47 = v46 + *(int *)(v76 + 36);
  *(_BYTE *)v47 = v37;
  *(_QWORD *)(v47 + 8) = v39;
  *(_QWORD *)(v47 + 16) = v41;
  *(_QWORD *)(v47 + 24) = v43;
  *(_QWORD *)(v47 + 32) = v45;
  *(_BYTE *)(v47 + 40) = 0;
  sub_21CDBDA44((uint64_t)v17, &qword_253F664C8);
  v48 = *MEMORY[0x24BDECEA0];
  v49 = sub_21D7C12B4();
  v50 = (uint64_t)v78;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 104))(v78, v48, v49);
  sub_21CDF81B4((uint64_t)&unk_253F65C88);
  result = sub_21D7C5094();
  if ((result & 1) != 0)
  {
    sub_21CE61848((uint64_t)&unk_253F66528);
    sub_21CE553B0((uint64_t)&unk_253F67D08);
    v52 = v62;
    sub_21D7C246C();
    sub_21CDBDA44(v50, &qword_253F67D10);
    sub_21CDBDA44(v46, &qword_253F66530);
    v53 = v66;
    sub_21D7C14A0();
    v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65FD8);
    v55 = v68;
    v56 = (_BYTE *)(v68 + *(int *)(v54 + 36));
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66BD8);
    v58 = v67;
    v59 = v69;
    (*(void (**)(_BYTE *, char *, uint64_t))(v67 + 16))(&v56[*(int *)(v57 + 40)], v53, v69);
    *v56 = 0;
    v60 = v63;
    v61 = v64;
    (*(void (**)(uint64_t, char *, uint64_t))(v63 + 16))(v55, v52, v64);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v53, v59);
    return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v52, v61);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_21CE5D370@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _OWORD v30[2];
  uint64_t v31;

  v29 = a1;
  v1 = type metadata accessor for MenuContext(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TopSearchLockup();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MenuConfiguration(0);
  v28 = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(v28 + 64);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v27 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v26 - v10;
  v12 = sub_21D7BFF04();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v26 - v17;
  sub_21D1EEF40();
  sub_21D55A6C8();
  v31 = 0;
  memset(v30, 0, sizeof(v30));
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67330);
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 8, 8, v19);
  sub_21CF97D14();
  sub_21CDBDA1C((uint64_t)v3, type metadata accessor for MenuContext);
  sub_21CDBDA44((uint64_t)v30, &qword_253F67430);
  sub_21CDBDA1C((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for TopSearchLockup);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v18, v12);
  v20 = v27;
  sub_21CDD337C((uint64_t)v11, v27, type metadata accessor for MenuConfiguration);
  v21 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v22 = (v14 + *(unsigned __int8 *)(v28 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v23 + v21, v16, v12);
  sub_21CDD3198(v20, v23 + v22, type metadata accessor for MenuConfiguration);
  sub_21CDBDA1C((uint64_t)v11, type metadata accessor for MenuConfiguration);
  result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  v25 = v29;
  *v29 = sub_21CE61710;
  v25[1] = v23;
  return result;
}

void sub_21CE5D614(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  int *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[24];
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;

  v28 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (unsigned __int8 *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TopSearchLockupView(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TopSearchLockup();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v27 - v13;
  v15 = (int *)type metadata accessor for ContextMenuPreview(0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_21D7BFF04();
  sub_21CDF81B4((uint64_t)&unk_253F5DE00);
  v33 = v18;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v31);
  sub_21D1EEF40();
  sub_21D55A6C8();
  sub_21CDC314C((uint64_t)&v14[*(int *)(v9 + 24)], (uint64_t)v29, &qword_253F67430);
  sub_21CDBDA1C((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for TopSearchLockup);
  v19 = v30;
  sub_21CDBDA44((uint64_t)v29, &qword_253F67430);
  sub_21CDD337C(a1, (uint64_t)v8, type metadata accessor for TopSearchLockupView);
  if (!v19)
  {
    sub_21D55A6C8();
    sub_21CDC314C((uint64_t)&v12[*(int *)(v9 + 68)], (uint64_t)v5, &qword_253F60800);
    sub_21CDBDA1C((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for TopSearchLockup);
    v22 = type metadata accessor for ContentDescriptor();
    if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v22) == 1)
    {
      sub_21CDBDA44((uint64_t)v5, &qword_253F60800);
      sub_21CDBDA1C((uint64_t)v8, type metadata accessor for TopSearchLockupView);
      v21 = v28;
    }
    else
    {
      v23 = *v5;
      sub_21CDBDA1C((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
      sub_21CDBDA1C((uint64_t)v8, type metadata accessor for TopSearchLockupView);
      v21 = v28;
      if (v23 == 18)
      {
        v20 = 1;
        goto LABEL_8;
      }
    }
    v20 = 0;
    goto LABEL_8;
  }
  sub_21CDBDA1C((uint64_t)v8, type metadata accessor for TopSearchLockupView);
  v20 = 1;
  v21 = v28;
LABEL_8:
  v24 = (uint64_t)&v17[v15[7]];
  v25 = sub_21D7C3840();
  __swift_storeEnumTagSinglePayload(v24, 1, 1, v25);
  sub_21CDD3670(&v31, (uint64_t)&v17[v15[6]]);
  v17[v15[5]] = v20;
  v26 = type metadata accessor for ContextMenuPreview.ViewModel(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v17, 1, 1, v26);
  sub_21CDD3198((uint64_t)v17, v21, type metadata accessor for ContextMenuPreview);
}

void sub_21CE5D934()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[40];
  _BYTE v13[40];

  v11 = sub_21D7C08AC();
  v0 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_21D7BFF04();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TopSearchLockup();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v10 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21D55A6C8();
  sub_21CDC314C((uint64_t)&v9[*(int *)(v7 + 24)], (uint64_t)v13, &qword_253F67430);
  sub_21CDBDA1C((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for TopSearchLockup);
  sub_21D1EEF40();
  type metadata accessor for TopSearchLockupView(0);
  sub_21D4B6E24();
  sub_21D4B6BA8();
  sub_21CDF0DC4();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v11);
  sub_21CDBDA44((uint64_t)v12, &qword_253F5DEE8);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_21CDBDA44((uint64_t)v13, &qword_253F67430);
}

void *sub_21CE5DAE0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  void *result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD __src[15];

  v4 = sub_21D7BFF04();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&__src[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&__src[-1] - v9;
  v22 = a1;
  sub_21D1EEF40();
  v11 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v10, v4);
  v12 = *MEMORY[0x24BE69518];
  v13 = *MEMORY[0x24BE69558];
  v14 = *MEMORY[0x24BE69538];
  v15 = *MEMORY[0x24BE69540];
  result = (void *)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  if (v11 == v12 || v11 == v13 || v11 == v14 || v11 == v15)
  {
    v20 = v22;
    sub_21D1EEF40();
    v21 = *(_QWORD *)(v20 + *(int *)(type metadata accessor for TopSearchLockupView(0) + 40));
    if (v21)
    {
      swift_retain();
      sub_21D2B78F8(__src, v8, v21);
      return memcpy(a2, __src, 0x78uLL);
    }
    else
    {
      type metadata accessor for PlaybackPresenter();
      sub_21CDF81B4((uint64_t)&qword_253F609E0);
      result = (void *)sub_21D7C14E8();
      __break(1u);
    }
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
    a2[3] = 1;
    *((_OWORD *)a2 + 2) = 0u;
    *((_OWORD *)a2 + 3) = 0u;
    *((_OWORD *)a2 + 4) = 0u;
    *((_OWORD *)a2 + 5) = 0u;
    *((_OWORD *)a2 + 6) = 0u;
    a2[14] = 0;
  }
  return result;
}

uint64_t sub_21CE5DCAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v34 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67280);
  MEMORY[0x24BDAC7A8](v1);
  v33 = (uint64_t)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F672A0);
  MEMORY[0x24BDAC7A8](v3);
  v32 = (uint64_t)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_21D7BFF04();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v31 - v10;
  sub_21D1EEF40();
  v12 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v11, v5);
  v13 = *MEMORY[0x24BE69518];
  v14 = *MEMORY[0x24BE69558];
  v15 = *MEMORY[0x24BE69538];
  v16 = *MEMORY[0x24BE69540];
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  if (v12 == v13 || v12 == v14 || v12 == v15 || v12 == v16)
  {
    type metadata accessor for TopSearchLockupView(0);
    type metadata accessor for GenericItemStateObserver(0);
    sub_21CDF81B4((uint64_t)&unk_253F62608);
    sub_21D7C0E7C();
    v20 = v32;
    sub_21D70C5F0(v32);
    swift_release();
    sub_21D7C0E7C();
    v21 = v33;
    sub_21D70C5D4(v33);
    swift_release();
    sub_21D1EEF40();
    v28 = v34;
    sub_21D2B7C2C(v20, v21, (uint64_t)v9, v22, v23, v24, v25, v26, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41,
      v42);
    v27 = 0;
  }
  else
  {
    v27 = 1;
    v28 = v34;
  }
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F61BA8);
  return __swift_storeEnumTagSinglePayload(v28, v27, 1, v29);
}

uint64_t sub_21CE5DF30@<X0>(char a1@<W0>, char a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[24];
  uint64_t v24;
  uint64_t v25[3];
  uint64_t v26;
  uint64_t v27;

  v6 = type metadata accessor for TopSearchLockup();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v20[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v20[-1] - v10;
  sub_21D55A6C8();
  v26 = v6;
  sub_21CDF81B4((uint64_t)&unk_253F60068);
  v27 = v12;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v25);
  sub_21CDD3198((uint64_t)v11, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for TopSearchLockup);
  if ((a1 & 1) != 0
    && (sub_21D55A6C8(),
        sub_21CDC314C((uint64_t)&v9[*(int *)(v6 + 24)], (uint64_t)v23, &qword_253F67430),
        sub_21CDBDA1C((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for TopSearchLockup),
        v14 = v24,
        sub_21CDBDA44((uint64_t)v23, &qword_253F67430),
        v14))
  {
    sub_21D55A6C8();
    sub_21CDC314C((uint64_t)&v11[*(int *)(v6 + 24)], (uint64_t)v23, &qword_253F67430);
    sub_21CDBDA1C((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for TopSearchLockup);
  }
  else
  {
    v15 = __swift_project_boxed_opaque_existential_1(v25, v26);
    sub_21CDC314C((uint64_t)v15 + *(int *)(v6 + 64), (uint64_t)v23, &qword_253F67430);
  }
  sub_21CDC314C((uint64_t)v23, (uint64_t)v20, &qword_253F67430);
  v16 = v21;
  if (v21)
  {
    v17 = v22;
    __swift_project_boxed_opaque_existential_1(v20, v21);
    sub_21CF5DEE8(a2 & 1, v16, v17, (uint64_t *)a3);
    sub_21CDBDA44((uint64_t)v23, &qword_253F67430);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  }
  else
  {
    sub_21CDBDA44((uint64_t)v23, &qword_253F67430);
    sub_21CDBDA44((uint64_t)v20, &qword_253F67430);
    *(_QWORD *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

void sub_21CE5E14C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[5];
  uint64_t v17;
  _QWORD v18[5];

  OUTLINED_FUNCTION_100_3();
  OUTLINED_FUNCTION_29_6();
  v3 = type metadata accessor for FlowcaseLockup();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_28_5();
  sub_21D55AD30();
  v18[3] = v3;
  OUTLINED_FUNCTION_70_3((uint64_t)&unk_2553317B0);
  v7 = OUTLINED_FUNCTION_91(v6);
  OUTLINED_FUNCTION_27_7((uint64_t)v7);
  if ((v2 & 1) != 0
    && (sub_21D55AD30(),
        OUTLINED_FUNCTION_40_4(v1 + *(int *)(v3 + 24)),
        OUTLINED_FUNCTION_71_2(v8, (uint64_t (*)(_QWORD))type metadata accessor for FlowcaseLockup),
        OUTLINED_FUNCTION_26_7(),
        v1))
  {
    sub_21D55AD30();
    OUTLINED_FUNCTION_35_6(v0 + *(int *)(v3 + 24), v9, &qword_253F67430);
    OUTLINED_FUNCTION_77_3(v10, (uint64_t (*)(_QWORD))type metadata accessor for FlowcaseLockup);
  }
  else
  {
    v13 = OUTLINED_FUNCTION_66_4();
    OUTLINED_FUNCTION_35_6((uint64_t)v13 + *(int *)(v3 + 60), v14, &qword_253F67430);
  }
  OUTLINED_FUNCTION_39_5(v11, v12, &qword_253F67430);
  if (v16[3])
  {
    v15 = OUTLINED_FUNCTION_6_18();
    OUTLINED_FUNCTION_67_2(v15, &qword_253F67430);
    OUTLINED_FUNCTION_63_4();
  }
  else
  {
    OUTLINED_FUNCTION_8_8((uint64_t)&v17);
    OUTLINED_FUNCTION_8_8((uint64_t)v16);
    OUTLINED_FUNCTION_46_5();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  OUTLINED_FUNCTION_38();
}

void sub_21CE5E294()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[5];
  uint64_t v17;
  _QWORD v18[5];

  OUTLINED_FUNCTION_100_3();
  OUTLINED_FUNCTION_29_6();
  v3 = type metadata accessor for VerticalVideoLockup();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_28_5();
  sub_21D55A76C();
  v18[3] = v3;
  OUTLINED_FUNCTION_70_3((uint64_t)&unk_255331798);
  v7 = OUTLINED_FUNCTION_91(v6);
  OUTLINED_FUNCTION_27_7((uint64_t)v7);
  if ((v2 & 1) != 0
    && (sub_21D55A76C(),
        OUTLINED_FUNCTION_40_4(v1 + *(int *)(v3 + 24)),
        OUTLINED_FUNCTION_71_2(v8, (uint64_t (*)(_QWORD))type metadata accessor for VerticalVideoLockup),
        OUTLINED_FUNCTION_26_7(),
        v1))
  {
    sub_21D55A76C();
    OUTLINED_FUNCTION_35_6(v0 + *(int *)(v3 + 24), v9, &qword_253F67430);
    OUTLINED_FUNCTION_77_3(v10, (uint64_t (*)(_QWORD))type metadata accessor for VerticalVideoLockup);
  }
  else
  {
    v13 = OUTLINED_FUNCTION_66_4();
    OUTLINED_FUNCTION_35_6((uint64_t)v13 + *(int *)(v3 + 56), v14, &qword_253F67430);
  }
  OUTLINED_FUNCTION_39_5(v11, v12, &qword_253F67430);
  if (v16[3])
  {
    v15 = OUTLINED_FUNCTION_6_18();
    OUTLINED_FUNCTION_67_2(v15, &qword_253F67430);
    OUTLINED_FUNCTION_63_4();
  }
  else
  {
    OUTLINED_FUNCTION_8_8((uint64_t)&v17);
    OUTLINED_FUNCTION_8_8((uint64_t)v16);
    OUTLINED_FUNCTION_46_5();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  OUTLINED_FUNCTION_38();
}

void sub_21CE5E3DC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[5];
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;

  OUTLINED_FUNCTION_100_3();
  OUTLINED_FUNCTION_29_6();
  v3 = type metadata accessor for SquareLockup();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_28_5();
  sub_21D55A9FC();
  v19 = v3;
  OUTLINED_FUNCTION_70_3((uint64_t)&unk_253F5F6C8);
  v7 = OUTLINED_FUNCTION_91(v6);
  OUTLINED_FUNCTION_27_7((uint64_t)v7);
  if ((v2 & 1) != 0
    && (sub_21D55A9FC(),
        OUTLINED_FUNCTION_40_4(v1 + *(int *)(v3 + 64)),
        OUTLINED_FUNCTION_71_2(v8, (uint64_t (*)(_QWORD))type metadata accessor for SquareLockup),
        OUTLINED_FUNCTION_26_7(),
        v1))
  {
    sub_21D55A9FC();
    OUTLINED_FUNCTION_35_6(v0 + *(int *)(v3 + 64), v9, &qword_253F67430);
    OUTLINED_FUNCTION_77_3(v10, (uint64_t (*)(_QWORD))type metadata accessor for SquareLockup);
  }
  else
  {
    v13 = __swift_project_boxed_opaque_existential_1(v18, v19);
    OUTLINED_FUNCTION_35_6((uint64_t)v13 + *(int *)(v3 + 68), v14, &qword_253F67430);
  }
  OUTLINED_FUNCTION_39_5(v11, v12, &qword_253F67430);
  if (v16[3])
  {
    v15 = OUTLINED_FUNCTION_6_18();
    OUTLINED_FUNCTION_67_2(v15, &qword_253F67430);
    OUTLINED_FUNCTION_63_4();
  }
  else
  {
    OUTLINED_FUNCTION_8_8((uint64_t)&v17);
    OUTLINED_FUNCTION_8_8((uint64_t)v16);
    OUTLINED_FUNCTION_46_5();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  OUTLINED_FUNCTION_38();
}

void sub_21CE5E52C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[5];
  uint64_t v17;
  _QWORD v18[5];

  OUTLINED_FUNCTION_100_3();
  OUTLINED_FUNCTION_29_6();
  v3 = type metadata accessor for TrackLockup();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_28_5();
  sub_21D55A810();
  v18[3] = v3;
  OUTLINED_FUNCTION_70_3((uint64_t)&unk_2553317A0);
  v7 = OUTLINED_FUNCTION_91(v6);
  OUTLINED_FUNCTION_27_7((uint64_t)v7);
  if ((v2 & 1) != 0
    && (sub_21D55A810(),
        OUTLINED_FUNCTION_40_4(v1 + *(int *)(v3 + 24)),
        OUTLINED_FUNCTION_71_2(v8, (uint64_t (*)(_QWORD))type metadata accessor for TrackLockup),
        OUTLINED_FUNCTION_26_7(),
        v1))
  {
    sub_21D55A810();
    OUTLINED_FUNCTION_35_6(v0 + *(int *)(v3 + 24), v9, &qword_253F67430);
    OUTLINED_FUNCTION_77_3(v10, (uint64_t (*)(_QWORD))type metadata accessor for TrackLockup);
  }
  else
  {
    v13 = OUTLINED_FUNCTION_66_4();
    OUTLINED_FUNCTION_35_6((uint64_t)v13 + *(int *)(v3 + 104), v14, &qword_253F67430);
  }
  OUTLINED_FUNCTION_39_5(v11, v12, &qword_253F67430);
  if (v16[3])
  {
    v15 = OUTLINED_FUNCTION_6_18();
    OUTLINED_FUNCTION_67_2(v15, &qword_253F67430);
    OUTLINED_FUNCTION_63_4();
  }
  else
  {
    OUTLINED_FUNCTION_8_8((uint64_t)&v17);
    OUTLINED_FUNCTION_8_8((uint64_t)v16);
    OUTLINED_FUNCTION_46_5();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  OUTLINED_FUNCTION_38();
}

void sub_21CE5E674()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[5];
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;

  OUTLINED_FUNCTION_100_3();
  OUTLINED_FUNCTION_29_6();
  v3 = type metadata accessor for HorizontalLockup();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_28_5();
  sub_21D55ABE8();
  v19 = v3;
  OUTLINED_FUNCTION_70_3((uint64_t)&unk_2553317A8);
  v7 = OUTLINED_FUNCTION_91(v6);
  OUTLINED_FUNCTION_27_7((uint64_t)v7);
  if ((v2 & 1) != 0
    && (sub_21D55ABE8(),
        OUTLINED_FUNCTION_40_4(v1 + *(int *)(v3 + 40)),
        OUTLINED_FUNCTION_71_2(v8, (uint64_t (*)(_QWORD))type metadata accessor for HorizontalLockup),
        OUTLINED_FUNCTION_26_7(),
        v1))
  {
    sub_21D55ABE8();
    OUTLINED_FUNCTION_35_6(v0 + *(int *)(v3 + 40), v9, &qword_253F67430);
    OUTLINED_FUNCTION_77_3(v10, (uint64_t (*)(_QWORD))type metadata accessor for HorizontalLockup);
  }
  else
  {
    v13 = __swift_project_boxed_opaque_existential_1(v18, v19);
    OUTLINED_FUNCTION_35_6((uint64_t)v13 + *(int *)(v3 + 68), v14, &qword_253F67430);
  }
  OUTLINED_FUNCTION_39_5(v11, v12, &qword_253F67430);
  if (v16[3])
  {
    v15 = OUTLINED_FUNCTION_6_18();
    OUTLINED_FUNCTION_67_2(v15, &qword_253F67430);
    OUTLINED_FUNCTION_63_4();
  }
  else
  {
    OUTLINED_FUNCTION_8_8((uint64_t)&v17);
    OUTLINED_FUNCTION_8_8((uint64_t)v16);
    OUTLINED_FUNCTION_46_5();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  OUTLINED_FUNCTION_38();
}

double sub_21CE5E7C4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v4;

  v0 = type metadata accessor for TopSearchLockup();
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21D55A6C8();
  LODWORD(v0) = v2[*(int *)(v0 + 56)];
  sub_21CDBDA1C((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for TopSearchLockup);
  if (v0 < 2)
    return 56.0;
  if (qword_25532E150 != -1)
    swift_once();
  return *(double *)&qword_255331648 * 56.0;
}

uint64_t sub_21CE5E89C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  void (*v39)(char *, uint64_t);
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;

  v2 = v1;
  v53 = a1;
  v3 = sub_21D7C3804();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v46 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v46 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67300);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_21D7C081C();
  v48 = *(_QWORD *)(v19 - 8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v47 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v52 = (char *)&v46 - v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5DED0);
  v50 = *(_QWORD *)(v23 - 8);
  v51 = v23;
  MEMORY[0x24BDAC7A8](v23);
  v49 = (char *)&v46 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CDC314C(v2, (uint64_t)v15, &qword_253F655E8);
  v46 = type metadata accessor for Artwork();
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v46) == 1)
  {
    sub_21CDBDA44((uint64_t)v15, &qword_253F655E8);
    v25 = sub_21D7C3840();
    v26 = (uint64_t)v18;
    v27 = 1;
  }
  else
  {
    v28 = v7;
    v29 = v9;
    v30 = v19;
    v31 = v2;
    v32 = v4;
    v33 = v3;
    v34 = sub_21D7C3840();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v18, v15, v34);
    sub_21CDBDA1C((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for Artwork);
    v26 = (uint64_t)v18;
    v27 = 0;
    v25 = v34;
    v3 = v33;
    v4 = v32;
    v2 = v31;
    v19 = v30;
    v9 = v29;
    v7 = v28;
  }
  __swift_storeEnumTagSinglePayload(v26, v27, 1, v25);
  v35 = type metadata accessor for TopSearchLockupView.ArtworkContentView(0);
  v36 = v47;
  if (*(unsigned __int8 *)(v2 + *(int *)(v35 + 24)) >= 2u && qword_25532E150 != -1)
    swift_once();
  sub_21D7C07EC();
  sub_21CDC314C(v2, (uint64_t)v13, &qword_253F655E8);
  v37 = v46;
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v46) == 1)
  {
    sub_21CDBDA44((uint64_t)v13, &qword_253F655E8);
    sub_21D7C37E0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, &v13[*(int *)(v37 + 20)], v3);
    sub_21CDBDA1C((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Artwork);
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v7, v3);
  }
  v38 = v52;
  sub_21D7C07B0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  v39 = *(void (**)(char *, uint64_t))(v48 + 8);
  v39(v36, v19);
  v40 = (uint64_t *)(v2 + *(int *)(v35 + 20));
  v41 = *v40;
  v42 = v40[1];
  v43 = swift_allocObject();
  *(_QWORD *)(v43 + 16) = v41;
  *(_QWORD *)(v43 + 24) = v42;
  sub_21CDF8148(v41, v42);
  sub_21CDF8160();
  v44 = v49;
  sub_21D7C07BC();
  swift_release();
  v39(v38, v19);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v50 + 32))(v53, v44, v51);
}

void sub_21CE5ED04(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = sub_21D7C198C();
  *(_QWORD *)(a1 + 8) = 0x4000000000000000;
  *(_BYTE *)(a1 + 16) = 0;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65C30);
  sub_21CE5ED4C(v1, a1 + *(int *)(v3 + 44));
}

void sub_21CE5ED4C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  char **v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  id v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD v122[2];
  char v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  uint64_t v132[8];

  v97 = a2;
  v3 = type metadata accessor for TopSearchLockupView.TitleView(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66ED0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65F88);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v116 = (uint64_t)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v92 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v120 = (uint64_t)&v92 - v16;
  v17 = type metadata accessor for TopSearchLockup();
  v18 = (int *)v17;
  v19 = *(int *)(v17 + 28);
  v101 = a1;
  v20 = (uint64_t *)(a1 + v19);
  v21 = v20[1];
  v22 = &selRef_identifier;
  if (v21)
  {
    v115 = v7;
    v117 = v6;
    v118 = v5;
    v119 = v3;
    v121 = v17;
    v23 = *v20;
    KeyPath = swift_getKeyPath();
    sub_21D7C4C20();
    v25 = sub_21D7C201C();
    v26 = swift_getKeyPath();
    v122[0] = v23;
    v122[1] = v21;
    v123 = 0;
    v124 = MEMORY[0x24BEE4AF8];
    v125 = KeyPath;
    v126 = 1;
    v127 = 0;
    v128 = v26;
    v129 = v25;
    sub_21D7C1FD4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2553317E8);
    sub_21CE65D98();
    v114 = v9;
    sub_21D7C22B0();
    sub_21CDC0768(v23, v21, 0);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    if (qword_25532E138 != -1)
      swift_once();
    v3 = v119;
    v22 = &selRef_identifier;
    if (*(_BYTE *)(v101 + *(int *)(v119 + 24)) == 1)
    {
      v27 = objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor);
      v28 = MEMORY[0x22078FB7C](v27);
    }
    else
    {
      v28 = qword_255331638;
      swift_retain();
    }
    v18 = (int *)v121;
    v30 = v115;
    v31 = v114;
    v32 = v117;
    (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v15, v114, v117);
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65F80);
    *(_QWORD *)&v15[*(int *)(v33 + 36)] = v28;
    (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v32);
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v33);
    v5 = v118;
  }
  else
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65F80);
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 1, 1, v29);
  }
  sub_21CDC2FB4((uint64_t)v15, v120, &qword_253F65F88);
  v34 = v101;
  v35 = (uint64_t *)(v101 + v18[8]);
  v36 = *v35;
  v37 = v35[1];
  sub_21CDD337C(v101, (uint64_t)v5, type metadata accessor for TopSearchLockupView.TitleView);
  if (v37)
  {
    v38 = v37;
  }
  else
  {
    sub_21D4D89F8();
    v36 = v39;
    v38 = v40;
  }
  sub_21D7C4C20();
  sub_21CDBDA1C((uint64_t)v5, type metadata accessor for TopSearchLockupView.TitleView);
  v41 = *(_BYTE *)(v34 + v18[11]);
  v42 = sub_21D7C1848();
  sub_21D5A96B4(v36, v38, v41, 0, 0, 0, v42, 0, v132);
  v115 = v132[0];
  v107 = v132[1];
  v105 = v132[2];
  v113 = v132[3];
  v112 = v132[4];
  v111 = v132[5];
  v110 = v132[6];
  v109 = v132[7];
  v43 = *(int *)(v3 + 28);
  v44 = *(_QWORD *)(v34 + v43);
  v45 = swift_getKeyPath();
  sub_21CDC2FB4((uint64_t)v132, (uint64_t)v122, &qword_253F5ECB8);
  v114 = (char *)v45;
  v129 = v45;
  v130 = v44;
  v96 = v44;
  v131 = 0;
  if (qword_253F653E0 != -1)
    swift_once();
  v46 = qword_253F653D8;
  v119 = swift_getKeyPath();
  v47 = qword_253F65460;
  v108 = v46;
  swift_retain();
  if (v47 != -1)
    swift_once();
  v48 = *(int *)(v3 + 24);
  if (*(_BYTE *)(v34 + v48) == 1)
  {
    v49 = objc_msgSend((id)objc_opt_self(), v22[24]);
    v121 = MEMORY[0x22078FB7C](v49);
  }
  else
  {
    v121 = qword_253F65458;
    swift_retain();
  }
  v50 = (uint64_t *)(v34 + v18[9]);
  v51 = v50[1];
  if (v51)
  {
    v117 = *v50;
    v118 = (char *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    v117 = 0;
    v118 = 0;
  }
  v95 = *(_QWORD *)(v34 + v43);
  v106 = swift_getKeyPath();
  v52 = qword_253F653F8;
  sub_21D7C4C20();
  if (v52 != -1)
    swift_once();
  v53 = qword_253F653E8;
  v103 = swift_getKeyPath();
  v54 = qword_253F65478;
  v104 = v53;
  swift_retain();
  if (v54 != -1)
    swift_once();
  v55 = *(unsigned __int8 *)(v34 + v48);
  v102 = v51;
  if (v55 == 1)
  {
    v56 = objc_msgSend((id)objc_opt_self(), (SEL)v22 + 2135);
    v99 = MEMORY[0x22078FB7C](v56);
  }
  else
  {
    v99 = qword_253F65468;
    swift_retain();
  }
  v57 = (uint64_t *)(v34 + v18[10]);
  v58 = *v57;
  v59 = v57[1];
  sub_21D7C4C20();
  v98 = sub_21CE5F7FC(v58, v59, v55);
  v61 = v60;
  v94 = v62;
  v101 = v63;
  v93 = swift_getKeyPath();
  v100 = qword_253F653E8;
  v64 = swift_getKeyPath();
  v92 = v64;
  v65 = v116;
  sub_21CDC314C(v120, v116, &qword_253F65F88);
  v66 = v97;
  sub_21CDC314C(v65, v97, &qword_253F65F88);
  v67 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_253F65F90);
  v68 = v66 + v67[12];
  v69 = v115;
  v70 = v107;
  *(_QWORD *)v68 = v115;
  *(_QWORD *)(v68 + 8) = v70;
  v71 = v70;
  v72 = v105;
  *(_QWORD *)(v68 + 16) = v105;
  v73 = v72;
  v74 = v113;
  *(_QWORD *)(v68 + 24) = v113;
  v75 = v74;
  *(_QWORD *)(v68 + 32) = v112;
  *(_QWORD *)(v68 + 40) = v111;
  *(_QWORD *)(v68 + 48) = v110;
  *(_QWORD *)(v68 + 56) = v109;
  v76 = v96;
  *(_QWORD *)(v68 + 64) = v114;
  *(_QWORD *)(v68 + 72) = v76;
  *(_BYTE *)(v68 + 80) = 0;
  v77 = v108;
  *(_QWORD *)(v68 + 88) = v119;
  *(_QWORD *)(v68 + 96) = v77;
  *(_QWORD *)(v68 + 104) = v121;
  v78 = v66 + v67[16];
  v79 = v117;
  v80 = v102;
  *(_QWORD *)v78 = v117;
  *(_QWORD *)(v78 + 8) = v80;
  v81 = (uint64_t)v118;
  *(_QWORD *)(v78 + 16) = 0;
  *(_QWORD *)(v78 + 24) = v81;
  v118 = (char *)v81;
  v82 = v95;
  *(_QWORD *)(v78 + 32) = v106;
  *(_QWORD *)(v78 + 40) = v82;
  *(_BYTE *)(v78 + 48) = 0;
  v83 = v104;
  *(_QWORD *)(v78 + 56) = v103;
  *(_QWORD *)(v78 + 64) = v83;
  *(_QWORD *)(v78 + 72) = v99;
  v84 = v66 + v67[20];
  *(_QWORD *)v84 = v98;
  *(_QWORD *)(v84 + 8) = v61;
  v85 = v61;
  LOBYTE(v61) = v94;
  v86 = v101;
  *(_QWORD *)(v84 + 16) = v94;
  *(_QWORD *)(v84 + 24) = v86;
  *(_QWORD *)(v84 + 32) = v93;
  *(_QWORD *)(v84 + 40) = 1;
  *(_BYTE *)(v84 + 48) = 0;
  v87 = v100;
  *(_QWORD *)(v84 + 56) = v64;
  *(_QWORD *)(v84 + 64) = v87;
  sub_21CE65D20(v69, v71, v73, v75);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v88 = v79;
  v89 = v102;
  sub_21CDFDC1C(v88, v102, 0, v81);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v90 = v98;
  v91 = v101;
  sub_21CDFDC1C(v98, v85, v61, v101);
  swift_retain();
  swift_retain();
  swift_retain_n();
  sub_21CDBDA44(v120, &qword_253F65F88);
  sub_21CDFDBEC(v90, v85, v61, v91);
  swift_release();
  swift_release();
  swift_release();
  sub_21CDFDBEC(v117, v89, 0, (uint64_t)v118);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_21CE65D5C(v115, v107, v105, v113);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_21CDBDA44(v116, &qword_253F65F88);
}

uint64_t sub_21CE5F7FC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;

  if (!a2)
    return 0;
  v3 = sub_21CE601E8();
  swift_bridgeObjectRelease();
  sub_21D7C18D8();
  LOWORD(v35) = 256;
  v34 = 0;
  v5 = sub_21D7C2178();
  v7 = v6;
  v45 = v4 & 1;
  v8 = *(_QWORD *)(v3 + 16);
  if (!v8)
    goto LABEL_15;
  v36 = v4;
  sub_21D7C4C20();
  sub_21CDC0550(v5, v7, v45);
  sub_21D7C4C20();
  sub_21CDEE3E0();
  v38 = v5;
  v9 = (unsigned __int8 *)(v3 + 48);
  v10 = v5;
  v37 = v7;
  v11 = v7;
  do
  {
    v42 = v11;
    v43 = v10;
    v12 = *v9;
    swift_bridgeObjectRetain_n();
    v13 = sub_21D7C2190();
    v15 = v14;
    v17 = v16;
    if (v12 == 1)
    {
      if (qword_25532E148 == -1)
        goto LABEL_8;
LABEL_6:
      swift_once();
      goto LABEL_8;
    }
    if (qword_253F65450 != -1)
      goto LABEL_6;
LABEL_8:
    swift_retain();
    v44 = v8;
    if ((a3 & 1) != 0)
    {
      v18 = objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor, v34, v35);
      MEMORY[0x22078FB7C](v18);
    }
    else
    {
      swift_retain();
    }
    v40 = v9 + 24;
    v19 = sub_21D7C210C();
    v21 = v20;
    v23 = v22;
    swift_release();
    swift_release();
    sub_21CDC0768(v13, v15, v17 & 1);
    swift_bridgeObjectRelease();
    v24 = sub_21D7C2130();
    v26 = v25;
    v28 = v27 & 1;
    v29 = v19;
    v9 = v40;
    sub_21CDC0768(v29, v21, v23 & 1);
    swift_bridgeObjectRelease();
    LOBYTE(v21) = v45 & 1;
    v41 = sub_21D7C2118();
    v31 = v30;
    v45 = v32 & 1;
    sub_21CDC0768(v24, v26, v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21CDC0768(v43, v42, v21);
    v5 = v41;
    swift_bridgeObjectRelease();
    v10 = v41;
    v11 = v31;
    v8 = v44 - 1;
  }
  while (v44 != 1);
  swift_bridgeObjectRelease();
  sub_21CDC0768(v38, v37, v36 & 1);
  swift_bridgeObjectRelease();
LABEL_15:
  swift_bridgeObjectRelease();
  return v5;
}

void sub_21CE5FBB4()
{
  sub_21CE58974();
}

void sub_21CE5FBC0()
{
  sub_21CE553B0((uint64_t)&unk_253F5F1A0);
}

void sub_21CE5FBEC(uint64_t a1)
{
  uint64_t v2;

  sub_21CDF81B4((uint64_t)&unk_253F61490);
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t type metadata accessor for TopSearchLockupView(uint64_t a1)
{
  return sub_21CDFBED8(a1, (uint64_t *)&unk_253F61498);
}

void sub_21CE5FC3C()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v14;

  v0 = sub_21D7C13F8();
  v1 = MEMORY[0x24BDED998];
  MEMORY[0x24BDAC7A8](v0);
  v3 = (_OWORD *)((char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_21D7C13EC();
  __swift_allocate_value_buffer(v4, qword_253F65248);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_253F65248);
  v6 = (char *)v3 + *(int *)(v0 + 20);
  v7 = *MEMORY[0x24BDEEB68];
  v8 = sub_21D7C18FC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v6, v7, v8);
  __asm { FMOV            V0.2D, #5.0 }
  *v3 = _Q0;
  sub_21CDD337C((uint64_t)v3, v5, (uint64_t (*)(_QWORD))v1);
  *(_QWORD *)(v5 + *(int *)(v4 + 20)) = 0xC000000000000000;
  sub_21CDBDA1C((uint64_t)v3, (uint64_t (*)(_QWORD))v1);
}

void sub_21CE5FD38()
{
  qword_253F652D8 = 0x4028000000000000;
}

uint64_t sub_21CE5FD48()
{
  uint64_t result;

  result = sub_21D7C1F5C();
  qword_253F653D8 = result;
  return result;
}

uint64_t sub_21CE5FD64()
{
  uint64_t result;

  result = sub_21D7C2034();
  qword_253F653E8 = result;
  return result;
}

uint64_t sub_21CE5FD80()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_21D7C204C();
  __swift_allocate_value_buffer(v0, qword_253F653B0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_253F653B0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x24BDF1878], v0);
}

uint64_t sub_21CE5FDD8()
{
  uint64_t result;

  result = sub_21D7C28F8();
  qword_255331638 = result;
  return result;
}

uint64_t sub_21CE5FDF4()
{
  uint64_t result;

  result = sub_21D7C28E0();
  qword_253F65458 = result;
  return result;
}

uint64_t sub_21CE5FE10()
{
  uint64_t result;

  result = sub_21D7C28F8();
  qword_253F65468 = result;
  return result;
}

uint64_t sub_21CE5FE2C()
{
  uint64_t result;

  result = sub_21D7C28F8();
  qword_253F65448 = result;
  return result;
}

uint64_t sub_21CE5FE48()
{
  uint64_t result;

  result = sub_21D7C28E0();
  qword_255331640 = result;
  return result;
}

uint64_t sub_21CE5FE64()
{
  uint64_t result;

  result = sub_21D7C28F8();
  qword_253F65308 = result;
  return result;
}

uint64_t sub_21CE5FE80()
{
  uint64_t result;

  result = sub_21D7C28E0();
  qword_253F65320 = result;
  return result;
}

uint64_t sub_21CE5FE9C()
{
  uint64_t v0;

  v0 = sub_21D7C147C();
  __swift_allocate_value_buffer(v0, qword_253F65330);
  __swift_project_value_buffer(v0, (uint64_t)qword_253F65330);
  return sub_21D7C1470();
}

void sub_21CE5FEE4()
{
  qword_253F65310 = 0x403E000000000000;
}

void sub_21CE5FEF4()
{
  qword_253F652F0 = 0x4024000000000000;
}

uint64_t sub_21CE5FF14()
{
  return sub_21CE58B9C();
}

void sub_21CE5FF1C()
{
  qword_253F654B0 = 0x4010000000000000;
}

void sub_21CE5FF2C()
{
  qword_255331648 = 0x3FFC71C71C71C71CLL;
}

void sub_21CE5FF48(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD v30[2];
  char v31;
  _BYTE v32[40];

  v3 = v2;
  v29 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65EE8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66F30);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65FE8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_21D7C1968();
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66B28);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v7, a1, v16);
  v17 = (uint64_t *)&v7[*(int *)(v5 + 36)];
  *v17 = v15;
  v17[1] = (uint64_t)sub_21CE6018C;
  v17[2] = 0;
  if ((*(_BYTE *)v3 & 1) != 0)
    sub_21D7C0F30();
  else
    sub_21D7C0F24();
  sub_21CE6621C();
  sub_21D7C24CC();
  sub_21CDBDA44((uint64_t)v7, &qword_253F65EE8);
  v18 = *(_OWORD *)(v3 + 24);
  v30[0] = *(_OWORD *)(v3 + 8);
  v30[1] = v18;
  v31 = *(_BYTE *)(v3 + 40);
  sub_21CDC2FB4((uint64_t)v30, (uint64_t)v32, &qword_253F65B48);
  sub_21CE662DC((uint64_t)v32);
  sub_21D4B6E4C();
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;
  sub_21CE66310(v3);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v14, v11, v8);
  v27 = &v14[*(int *)(v12 + 36)];
  *(_QWORD *)v27 = v20;
  *((_QWORD *)v27 + 1) = v22;
  *((_QWORD *)v27 + 2) = v24;
  *((_QWORD *)v27 + 3) = v26;
  v27[32] = 0;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_21CDC2FB4((uint64_t)v14, v29, &qword_253F65FE8);
}

uint64_t sub_21CE6018C()
{
  uint64_t v0;

  v0 = sub_21D7C198C();
  return MEMORY[0x22078E490](v0);
}

void sub_21CE601B0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_21CE5FF48(a1, a2);
}

uint64_t sub_21CE601E8()
{
  unint64_t v0;
  char v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  OUTLINED_FUNCTION_22();
  v3 = v2;
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5DD78);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_28_2();
  sub_21D7BF9DC();
  OUTLINED_FUNCTION_64_4();
  v31 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_58_4(0xE600000000000000);
  sub_21CDEE3E0();
  OUTLINED_FUNCTION_64_4();
  OUTLINED_FUNCTION_32_7();
  OUTLINED_FUNCTION_50_6();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v1 & 1) == 0)
  {
    OUTLINED_FUNCTION_64_4();
    v7 = OUTLINED_FUNCTION_48_4();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    OUTLINED_FUNCTION_65_4();
    v14 = MEMORY[0x2207923E4](v7, v9, v11, v13);
    v16 = v15;
    swift_bridgeObjectRelease();
    v17 = HIBYTE(v16) & 0xF;
    if ((v16 & 0x2000000000000000) == 0)
      v17 = v14 & 0xFFFFFFFFFFFFLL;
    if (v17)
    {
      if ((OUTLINED_FUNCTION_94_3() & 1) == 0)
      {
        OUTLINED_FUNCTION_61_3();
        v9 = v22;
      }
      v18 = *(_QWORD *)(v9 + 16);
      v19 = v9;
      if (v18 >= *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_21D03888C();
        v19 = v23;
      }
      *(_QWORD *)(v19 + 16) = v18 + 1;
      v20 = v19 + 24 * v18;
      *(_QWORD *)(v20 + 32) = v14;
      *(_QWORD *)(v20 + 40) = v16;
      *(_BYTE *)(v20 + 48) = 0;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v21 = v5 & 0xFFFFFFFFFFFFLL;
    if ((v3 & 0x2000000000000000) != 0)
      v21 = HIBYTE(v3) & 0xF;
    if (4 * v21 >= v0 >> 14)
    {
      OUTLINED_FUNCTION_48_4();
      OUTLINED_FUNCTION_57_4();
      OUTLINED_FUNCTION_68_3();
    }
    __break(1u);
    JUMPOUT(0x21CE60590);
  }
  v24 = v5 & 0xFFFFFFFFFFFFLL;
  if ((v3 & 0x2000000000000000) != 0)
    v24 = HIBYTE(v3) & 0xF;
  if (v24)
  {
    v25 = v31;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_99_2();
      v25 = v29;
    }
    v26 = *(_QWORD *)(v25 + 16);
    if (v26 >= *(_QWORD *)(v25 + 24) >> 1)
    {
      OUTLINED_FUNCTION_99_2();
      v25 = v30;
    }
    *(_QWORD *)(v25 + 16) = v26 + 1;
    v27 = v25 + 24 * v26;
    *(_QWORD *)(v27 + 32) = v5;
    *(_QWORD *)(v27 + 40) = v3;
    *(_BYTE *)(v27 + 48) = 0;
  }
  else
  {
    OUTLINED_FUNCTION_65_4();
    return v31;
  }
  return v25;
}

void sub_21CE605C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_9_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5DE60);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v1);
  v2 = OUTLINED_FUNCTION_53_3();
  OUTLINED_FUNCTION_13_9(*(int *)(v2 + 116));
  v3 = OUTLINED_FUNCTION_22_4();
  v4 = OUTLINED_FUNCTION_10_13(v3);
  if (v8)
  {
    OUTLINED_FUNCTION_104_0(v4, &qword_253F60800);
    v5 = OUTLINED_FUNCTION_8_13();
    v9 = OUTLINED_FUNCTION_3_18(v5);
LABEL_6:
    OUTLINED_FUNCTION_20_5(v9, &qword_253F5DE60);
    OUTLINED_FUNCTION_25_6();
    goto LABEL_7;
  }
  v6 = OUTLINED_FUNCTION_19_7();
  OUTLINED_FUNCTION_42_5(v6, (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
  v7 = OUTLINED_FUNCTION_8_13();
  v9 = OUTLINED_FUNCTION_2_29(v7);
  if (v8)
    goto LABEL_6;
  OUTLINED_FUNCTION_23_4();
  OUTLINED_FUNCTION_1_32();
LABEL_7:
  OUTLINED_FUNCTION_18_6();
  OUTLINED_FUNCTION_98();
}

uint64_t sub_21CE60684@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_retain();
}

void sub_21CE60690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_9_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5DE60);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_11_16();
  v2 = type metadata accessor for ListLockup();
  OUTLINED_FUNCTION_13_9(*(int *)(v2 + 44));
  v3 = OUTLINED_FUNCTION_22_4();
  v4 = OUTLINED_FUNCTION_10_13(v3);
  if (v8)
  {
    OUTLINED_FUNCTION_104_0(v4, &qword_253F60800);
    v5 = OUTLINED_FUNCTION_8_13();
    v9 = OUTLINED_FUNCTION_3_18(v5);
LABEL_6:
    OUTLINED_FUNCTION_20_5(v9, &qword_253F5DE60);
    OUTLINED_FUNCTION_25_6();
    goto LABEL_7;
  }
  v6 = OUTLINED_FUNCTION_19_7();
  OUTLINED_FUNCTION_42_5(v6, (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
  v7 = OUTLINED_FUNCTION_8_13();
  v9 = OUTLINED_FUNCTION_2_29(v7);
  if (v8)
    goto LABEL_6;
  OUTLINED_FUNCTION_23_4();
  OUTLINED_FUNCTION_1_32();
LABEL_7:
  OUTLINED_FUNCTION_18_6();
  OUTLINED_FUNCTION_98();
}

void sub_21CE60754()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_9_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5DE60);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_11_16();
  v2 = type metadata accessor for BubbleLockup();
  OUTLINED_FUNCTION_13_9(*(int *)(v2 + 40));
  v3 = OUTLINED_FUNCTION_22_4();
  v4 = OUTLINED_FUNCTION_10_13(v3);
  if (v8)
  {
    OUTLINED_FUNCTION_104_0(v4, &qword_253F60800);
    v5 = OUTLINED_FUNCTION_8_13();
    v9 = OUTLINED_FUNCTION_3_18(v5);
LABEL_6:
    OUTLINED_FUNCTION_20_5(v9, &qword_253F5DE60);
    OUTLINED_FUNCTION_25_6();
    goto LABEL_7;
  }
  v6 = OUTLINED_FUNCTION_19_7();
  OUTLINED_FUNCTION_42_5(v6, (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
  v7 = OUTLINED_FUNCTION_8_13();
  v9 = OUTLINED_FUNCTION_2_29(v7);
  if (v8)
    goto LABEL_6;
  OUTLINED_FUNCTION_23_4();
  OUTLINED_FUNCTION_1_32();
LABEL_7:
  OUTLINED_FUNCTION_18_6();
  OUTLINED_FUNCTION_98();
}

void sub_21CE60818()
{
  sub_21CE60FFC();
}

void sub_21CE60824()
{
  sub_21CE60E3C();
}

void sub_21CE60830()
{
  sub_21CE610DC();
}

void sub_21CE6083C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_9_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5DE60);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_11_16();
  v2 = type metadata accessor for FlowcaseLockup();
  OUTLINED_FUNCTION_13_9(*(int *)(v2 + 64));
  v3 = OUTLINED_FUNCTION_22_4();
  v4 = OUTLINED_FUNCTION_10_13(v3);
  if (v8)
  {
    OUTLINED_FUNCTION_104_0(v4, &qword_253F60800);
    v5 = OUTLINED_FUNCTION_8_13();
    v9 = OUTLINED_FUNCTION_3_18(v5);
LABEL_6:
    OUTLINED_FUNCTION_20_5(v9, &qword_253F5DE60);
    OUTLINED_FUNCTION_25_6();
    goto LABEL_7;
  }
  v6 = OUTLINED_FUNCTION_19_7();
  OUTLINED_FUNCTION_42_5(v6, (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
  v7 = OUTLINED_FUNCTION_8_13();
  v9 = OUTLINED_FUNCTION_2_29(v7);
  if (v8)
    goto LABEL_6;
  OUTLINED_FUNCTION_23_4();
  OUTLINED_FUNCTION_1_32();
LABEL_7:
  OUTLINED_FUNCTION_18_6();
  OUTLINED_FUNCTION_98();
}

void sub_21CE60900()
{
  sub_21CE60C58();
}

void sub_21CE6090C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_9_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5DE60);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_11_16();
  v2 = type metadata accessor for SuperHeroLockup();
  OUTLINED_FUNCTION_13_9(*(int *)(v2 + 92));
  v3 = OUTLINED_FUNCTION_22_4();
  v4 = OUTLINED_FUNCTION_10_13(v3);
  if (v8)
  {
    OUTLINED_FUNCTION_104_0(v4, &qword_253F60800);
    v5 = OUTLINED_FUNCTION_8_13();
    v9 = OUTLINED_FUNCTION_3_18(v5);
LABEL_6:
    OUTLINED_FUNCTION_20_5(v9, &qword_253F5DE60);
    OUTLINED_FUNCTION_25_6();
    goto LABEL_7;
  }
  v6 = OUTLINED_FUNCTION_19_7();
  OUTLINED_FUNCTION_42_5(v6, (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
  v7 = OUTLINED_FUNCTION_8_13();
  v9 = OUTLINED_FUNCTION_2_29(v7);
  if (v8)
    goto LABEL_6;
  OUTLINED_FUNCTION_23_4();
  OUTLINED_FUNCTION_1_32();
LABEL_7:
  OUTLINED_FUNCTION_18_6();
  OUTLINED_FUNCTION_98();
}

void sub_21CE609D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_9_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5DE60);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_11_16();
  v2 = type metadata accessor for TopSearchLockup();
  OUTLINED_FUNCTION_13_9(*(int *)(v2 + 68));
  v3 = OUTLINED_FUNCTION_22_4();
  v4 = OUTLINED_FUNCTION_10_13(v3);
  if (v8)
  {
    OUTLINED_FUNCTION_104_0(v4, &qword_253F60800);
    v5 = OUTLINED_FUNCTION_8_13();
    v9 = OUTLINED_FUNCTION_3_18(v5);
LABEL_6:
    OUTLINED_FUNCTION_20_5(v9, &qword_253F5DE60);
    OUTLINED_FUNCTION_25_6();
    goto LABEL_7;
  }
  v6 = OUTLINED_FUNCTION_19_7();
  OUTLINED_FUNCTION_42_5(v6, (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
  v7 = OUTLINED_FUNCTION_8_13();
  v9 = OUTLINED_FUNCTION_2_29(v7);
  if (v8)
    goto LABEL_6;
  OUTLINED_FUNCTION_23_4();
  OUTLINED_FUNCTION_1_32();
LABEL_7:
  OUTLINED_FUNCTION_18_6();
  OUTLINED_FUNCTION_98();
}

void sub_21CE60A94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_9_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5DE60);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_11_16();
  v2 = type metadata accessor for AlbumTrackLockup();
  OUTLINED_FUNCTION_13_9(*(int *)(v2 + 104));
  v3 = OUTLINED_FUNCTION_22_4();
  v4 = OUTLINED_FUNCTION_10_13(v3);
  if (v8)
  {
    OUTLINED_FUNCTION_104_0(v4, &qword_253F60800);
    v5 = OUTLINED_FUNCTION_8_13();
    v9 = OUTLINED_FUNCTION_3_18(v5);
LABEL_6:
    OUTLINED_FUNCTION_20_5(v9, &qword_253F5DE60);
    OUTLINED_FUNCTION_25_6();
    goto LABEL_7;
  }
  v6 = OUTLINED_FUNCTION_19_7();
  OUTLINED_FUNCTION_42_5(v6, (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
  v7 = OUTLINED_FUNCTION_8_13();
  v9 = OUTLINED_FUNCTION_2_29(v7);
  if (v8)
    goto LABEL_6;
  OUTLINED_FUNCTION_23_4();
  OUTLINED_FUNCTION_1_32();
LABEL_7:
  OUTLINED_FUNCTION_18_6();
  OUTLINED_FUNCTION_98();
}

void sub_21CE60B58()
{
  sub_21CE60E3C();
}

void sub_21CE60B64()
{
  sub_21CE60F1C();
}

void sub_21CE60B70()
{
  sub_21CE610DC();
}

void sub_21CE60B7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_9_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5DE60);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_11_16();
  v2 = type metadata accessor for PlaylistTrackLockup();
  OUTLINED_FUNCTION_13_9(*(int *)(v2 + 100));
  v3 = OUTLINED_FUNCTION_22_4();
  v4 = OUTLINED_FUNCTION_10_13(v3);
  if (v8)
  {
    OUTLINED_FUNCTION_104_0(v4, &qword_253F60800);
    v5 = OUTLINED_FUNCTION_8_13();
    v9 = OUTLINED_FUNCTION_3_18(v5);
LABEL_6:
    OUTLINED_FUNCTION_20_5(v9, &qword_253F5DE60);
    OUTLINED_FUNCTION_25_6();
    goto LABEL_7;
  }
  v6 = OUTLINED_FUNCTION_19_7();
  OUTLINED_FUNCTION_42_5(v6, (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
  v7 = OUTLINED_FUNCTION_8_13();
  v9 = OUTLINED_FUNCTION_2_29(v7);
  if (v8)
    goto LABEL_6;
  OUTLINED_FUNCTION_23_4();
  OUTLINED_FUNCTION_1_32();
LABEL_7:
  OUTLINED_FUNCTION_18_6();
  OUTLINED_FUNCTION_98();
}

void sub_21CE60C40()
{
  sub_21CE60D44();
}

void sub_21CE60C4C()
{
  sub_21CE60C58();
}

void sub_21CE60C58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_63_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5DE60);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v2);
  v3 = OUTLINED_FUNCTION_9_16();
  OUTLINED_FUNCTION_24_5(*(int *)(v3 + 32));
  v4 = OUTLINED_FUNCTION_22_4();
  v5 = OUTLINED_FUNCTION_27_3(v0, 1, v4);
  if (v9)
  {
    OUTLINED_FUNCTION_124(v5, &qword_253F60800);
    v6 = OUTLINED_FUNCTION_8_13();
    v10 = OUTLINED_FUNCTION_3_18(v6);
LABEL_6:
    OUTLINED_FUNCTION_20_5(v10, &qword_253F5DE60);
    OUTLINED_FUNCTION_25_6();
    goto LABEL_7;
  }
  v7 = OUTLINED_FUNCTION_31_6();
  OUTLINED_FUNCTION_56_3(v7, (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
  v8 = OUTLINED_FUNCTION_8_13();
  v10 = OUTLINED_FUNCTION_2_29(v8);
  if (v9)
    goto LABEL_6;
  OUTLINED_FUNCTION_23_4();
  OUTLINED_FUNCTION_1_32();
LABEL_7:
  OUTLINED_FUNCTION_36_4();
  OUTLINED_FUNCTION_43_0();
}

void sub_21CE60D2C()
{
  sub_21CE60D44();
}

void sub_21CE60D38()
{
  sub_21CE60D44();
}

void sub_21CE60D44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_63_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5DE60);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v2);
  v3 = OUTLINED_FUNCTION_9_16();
  OUTLINED_FUNCTION_24_5(*(int *)(v3 + 60));
  v4 = OUTLINED_FUNCTION_22_4();
  v5 = OUTLINED_FUNCTION_27_3(v0, 1, v4);
  if (v9)
  {
    OUTLINED_FUNCTION_124(v5, &qword_253F60800);
    v6 = OUTLINED_FUNCTION_8_13();
    v10 = OUTLINED_FUNCTION_3_18(v6);
LABEL_6:
    OUTLINED_FUNCTION_20_5(v10, &qword_253F5DE60);
    OUTLINED_FUNCTION_25_6();
    goto LABEL_7;
  }
  v7 = OUTLINED_FUNCTION_31_6();
  OUTLINED_FUNCTION_56_3(v7, (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
  v8 = OUTLINED_FUNCTION_8_13();
  v10 = OUTLINED_FUNCTION_2_29(v8);
  if (v9)
    goto LABEL_6;
  OUTLINED_FUNCTION_23_4();
  OUTLINED_FUNCTION_1_32();
LABEL_7:
  OUTLINED_FUNCTION_36_4();
  OUTLINED_FUNCTION_43_0();
}

void sub_21CE60E18()
{
  sub_21CE611BC((void (*)(uint64_t))sub_21D1F034C);
}

void sub_21CE60E24()
{
  sub_21CE610DC();
}

void sub_21CE60E30()
{
  sub_21CE60E3C();
}

void sub_21CE60E3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_63_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5DE60);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v2);
  v3 = OUTLINED_FUNCTION_9_16();
  OUTLINED_FUNCTION_24_5(*(int *)(v3 + 72));
  v4 = OUTLINED_FUNCTION_22_4();
  v5 = OUTLINED_FUNCTION_27_3(v0, 1, v4);
  if (v9)
  {
    OUTLINED_FUNCTION_124(v5, &qword_253F60800);
    v6 = OUTLINED_FUNCTION_8_13();
    v10 = OUTLINED_FUNCTION_3_18(v6);
LABEL_6:
    OUTLINED_FUNCTION_20_5(v10, &qword_253F5DE60);
    OUTLINED_FUNCTION_25_6();
    goto LABEL_7;
  }
  v7 = OUTLINED_FUNCTION_31_6();
  OUTLINED_FUNCTION_56_3(v7, (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
  v8 = OUTLINED_FUNCTION_8_13();
  v10 = OUTLINED_FUNCTION_2_29(v8);
  if (v9)
    goto LABEL_6;
  OUTLINED_FUNCTION_23_4();
  OUTLINED_FUNCTION_1_32();
LABEL_7:
  OUTLINED_FUNCTION_36_4();
  OUTLINED_FUNCTION_43_0();
}

void sub_21CE60F10()
{
  sub_21CE60F1C();
}

void sub_21CE60F1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_63_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5DE60);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v2);
  v3 = OUTLINED_FUNCTION_9_16();
  OUTLINED_FUNCTION_24_5(*(int *)(v3 + 56));
  v4 = OUTLINED_FUNCTION_22_4();
  v5 = OUTLINED_FUNCTION_27_3(v0, 1, v4);
  if (v9)
  {
    OUTLINED_FUNCTION_124(v5, &qword_253F60800);
    v6 = OUTLINED_FUNCTION_8_13();
    v10 = OUTLINED_FUNCTION_3_18(v6);
LABEL_6:
    OUTLINED_FUNCTION_20_5(v10, &qword_253F5DE60);
    OUTLINED_FUNCTION_25_6();
    goto LABEL_7;
  }
  v7 = OUTLINED_FUNCTION_31_6();
  OUTLINED_FUNCTION_56_3(v7, (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
  v8 = OUTLINED_FUNCTION_8_13();
  v10 = OUTLINED_FUNCTION_2_29(v8);
  if (v9)
    goto LABEL_6;
  OUTLINED_FUNCTION_23_4();
  OUTLINED_FUNCTION_1_32();
LABEL_7:
  OUTLINED_FUNCTION_36_4();
  OUTLINED_FUNCTION_43_0();
}

void sub_21CE60FF0()
{
  sub_21CE60FFC();
}

void sub_21CE60FFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_63_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5DE60);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v2);
  v3 = OUTLINED_FUNCTION_9_16();
  OUTLINED_FUNCTION_24_5(*(int *)(v3 + 52));
  v4 = OUTLINED_FUNCTION_22_4();
  v5 = OUTLINED_FUNCTION_27_3(v0, 1, v4);
  if (v9)
  {
    OUTLINED_FUNCTION_124(v5, &qword_253F60800);
    v6 = OUTLINED_FUNCTION_8_13();
    v10 = OUTLINED_FUNCTION_3_18(v6);
LABEL_6:
    OUTLINED_FUNCTION_20_5(v10, &qword_253F5DE60);
    OUTLINED_FUNCTION_25_6();
    goto LABEL_7;
  }
  v7 = OUTLINED_FUNCTION_31_6();
  OUTLINED_FUNCTION_56_3(v7, (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
  v8 = OUTLINED_FUNCTION_8_13();
  v10 = OUTLINED_FUNCTION_2_29(v8);
  if (v9)
    goto LABEL_6;
  OUTLINED_FUNCTION_23_4();
  OUTLINED_FUNCTION_1_32();
LABEL_7:
  OUTLINED_FUNCTION_36_4();
  OUTLINED_FUNCTION_43_0();
}

void sub_21CE610D0()
{
  sub_21CE610DC();
}

void sub_21CE610DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_63_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5DE60);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v2);
  v3 = OUTLINED_FUNCTION_9_16();
  OUTLINED_FUNCTION_24_5(*(int *)(v3 + 48));
  v4 = OUTLINED_FUNCTION_22_4();
  v5 = OUTLINED_FUNCTION_27_3(v0, 1, v4);
  if (v9)
  {
    OUTLINED_FUNCTION_124(v5, &qword_253F60800);
    v6 = OUTLINED_FUNCTION_8_13();
    v10 = OUTLINED_FUNCTION_3_18(v6);
LABEL_6:
    OUTLINED_FUNCTION_20_5(v10, &qword_253F5DE60);
    OUTLINED_FUNCTION_25_6();
    goto LABEL_7;
  }
  v7 = OUTLINED_FUNCTION_31_6();
  OUTLINED_FUNCTION_56_3(v7, (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
  v8 = OUTLINED_FUNCTION_8_13();
  v10 = OUTLINED_FUNCTION_2_29(v8);
  if (v9)
    goto LABEL_6;
  OUTLINED_FUNCTION_23_4();
  OUTLINED_FUNCTION_1_32();
LABEL_7:
  OUTLINED_FUNCTION_36_4();
  OUTLINED_FUNCTION_43_0();
}

void sub_21CE611B0()
{
  sub_21CE611BC((void (*)(uint64_t))sub_21D1F0520);
}

void sub_21CE611BC(void (*a1)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5DE60);
  OUTLINED_FUNCTION_21();
  v3 = MEMORY[0x24BDAC7A8](v2);
  a1(v3);
  v4 = OUTLINED_FUNCTION_8_13();
  v5 = OUTLINED_FUNCTION_2_29(v4);
  if (v6)
  {
    OUTLINED_FUNCTION_20_5(v5, &qword_253F5DE60);
    OUTLINED_FUNCTION_25_6();
  }
  else
  {
    OUTLINED_FUNCTION_23_4();
    OUTLINED_FUNCTION_1_32();
  }
  OUTLINED_FUNCTION_18_6();
  OUTLINED_FUNCTION_98();
}

void sub_21CE61240(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_85_2();
  sub_21CE59578(v2, a1);
}

uint64_t sub_21CE61264()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

void *sub_21CE61288@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_21CE5DAE0(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_21CE61290()
{
  unint64_t result;

  result = qword_253F61120;
  if (!qword_253F61120)
  {
    result = MEMORY[0x2207938C0](&unk_21D7EDDB4, &type metadata for LeadingSwipeActions);
    atomic_store(result, (unint64_t *)&qword_253F61120);
  }
  return result;
}

uint64_t sub_21CE612CC@<X0>(uint64_t a1@<X8>)
{
  return sub_21CE5DCAC(a1);
}

void sub_21CE612D4(uint64_t a1)
{
  unint64_t *v1;
  uint64_t *v2;
  uint64_t (*v3)(void);
  uint64_t (*v4)(void);
  uint64_t v5;
  uint64_t v6;

  if (!OUTLINED_FUNCTION_115(a1))
  {
    v4 = v3;
    v5 = OUTLINED_FUNCTION_16_9(0, v2);
    v6 = v4();
    atomic_store(MEMORY[0x2207938C0](MEMORY[0x24BDF5578], v5, &v6), v1);
  }
  OUTLINED_FUNCTION_54_1();
}

unint64_t sub_21CE61324()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_253F61BC0;
  if (!qword_253F61BC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F61BA8);
    sub_21CDF81B4((uint64_t)&unk_253F61B90);
    v3 = v2;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDF5578], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_253F61BC0);
  }
  return result;
}

uint64_t sub_21CE613A0()
{
  return sub_21D7C1674();
}

uint64_t sub_21CE613C0()
{
  return sub_21D7C1674();
}

void sub_21CE613E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_21D7C147C();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_9_6();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v1, a1);
  sub_21D7C1680();
  OUTLINED_FUNCTION_98();
}

uint64_t sub_21CE61450@<X0>(_QWORD *a1@<X8>)
{
  return sub_21CE5D370(a1);
}

void sub_21CE61458(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_21CE5D614(*(_QWORD *)(v1 + 16), a1);
}

uint64_t objectdestroyTm_6()
{
  uint64_t v0;
  int *v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void (*v5)(unint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_22();
  v1 = (int *)type metadata accessor for TopSearchLockupView(0);
  v2 = (*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_release();
  v3 = v0 + v2 + v1[5];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65BB8);
  v5 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v5(v0 + v2 + v1[6], v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B60);
  if (OUTLINED_FUNCTION_98_2() == 1)
  {
    v6 = sub_21D7C12B4();
    OUTLINED_FUNCTION_35_4(v6);
  }
  else
  {
    swift_release();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B18);
  if (OUTLINED_FUNCTION_98_2() == 1)
  {
    v7 = sub_21D7C08AC();
    OUTLINED_FUNCTION_35_4(v7);
  }
  else
  {
    swift_release();
  }
  v8 = v0 + v2 + v1[9];
  if ((*(_BYTE *)(v8 + 40) & 1) != 0)
  {
    if (*(_QWORD *)(v8 + 24))
      __swift_destroy_boxed_opaque_existential_1(v8);
  }
  else
  {
    swift_release();
  }
  swift_release();
  sub_21CE09DA4();
  return OUTLINED_FUNCTION_44_6();
}

void sub_21CE615B4()
{
  OUTLINED_FUNCTION_85_2();
  sub_21CE5D934();
}

unint64_t sub_21CE615C8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255331708;
  if (!qword_255331708)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553316E0);
    v2[0] = sub_21CE61634();
    v2[1] = sub_21CE616D0();
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255331708);
  }
  return result;
}

unint64_t sub_21CE61634()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_255331710;
  if (!qword_255331710)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553316D8);
    sub_21CE553B0((uint64_t)&unk_255331718);
    v3 = v2;
    sub_21CE553B0((uint64_t)&unk_253F66BF0);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_255331710);
  }
  return result;
}

unint64_t sub_21CE616D0()
{
  unint64_t result;

  result = qword_253F647E0;
  if (!qword_253F647E0)
  {
    result = MEMORY[0x2207938C0](&unk_21D810E74, &type metadata for DragPreviewContentShapeViewModifier);
    atomic_store(result, (unint64_t *)&qword_253F647E0);
  }
  return result;
}

uint64_t type metadata accessor for TopSearchLockupView.TitleView(uint64_t a1)
{
  return sub_21CDFBED8(a1, (uint64_t *)&unk_253F61478);
}

uint64_t sub_21CE61728@<X0>(_QWORD *a1@<X8>)
{
  return sub_21CE5C6B8(a1);
}

uint64_t sub_21CE61730@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21CE5CC54(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_21CE61738()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t OpaqueTypeConformance2;
  uint64_t v8;
  _QWORD v9[6];

  result = qword_253F65FD0;
  if (!qword_253F65FD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F65FD8);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66530);
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F67D10);
    sub_21CE61848((uint64_t)&unk_253F66528);
    v5 = v4;
    sub_21CE553B0((uint64_t)&unk_253F67D08);
    v9[2] = v2;
    v9[3] = v3;
    v9[4] = v5;
    v9[5] = v6;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_21CE553B0((uint64_t)&unk_253F66BD0);
    v9[0] = OpaqueTypeConformance2;
    v9[1] = v8;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v9);
    atomic_store(result, (unint64_t *)&qword_253F65FD0);
  }
  return result;
}

void sub_21CE61848(uint64_t a1)
{
  unint64_t *v1;
  uint64_t *v2;
  uint64_t (*v3)(void);
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v7;
  _QWORD v8[2];

  if (!OUTLINED_FUNCTION_115(a1))
  {
    v5 = v4;
    v6 = v3;
    v7 = OUTLINED_FUNCTION_16_9(0, v2);
    v8[0] = v6();
    v8[1] = v5;
    atomic_store(MEMORY[0x2207938C0](MEMORY[0x24BDED308], v7, v8), v1);
  }
  OUTLINED_FUNCTION_54_1();
}

void sub_21CE6189C()
{
  sub_21CE61848((uint64_t)&unk_253F664C0);
}

void sub_21CE618C0()
{
  sub_21CE61848((uint64_t)&unk_253F66438);
}

unint64_t sub_21CE618E4()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_253F66308;
  if (!qword_253F66308)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66310);
    v2 = sub_21CE61968();
    sub_21CE553B0((uint64_t)&qword_253F66D90);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_253F66308);
  }
  return result;
}

unint64_t sub_21CE61968()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_253F66098;
  if (!qword_253F66098)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F660A0);
    sub_21CE553B0((uint64_t)&unk_253F66DA0);
    v3[0] = MEMORY[0x24BDF40E8];
    v3[1] = v2;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_253F66098);
  }
  return result;
}

uint64_t objectdestroy_22Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_22();
  v1 = OUTLINED_FUNCTION_40_0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for MenuConfiguration(0);
  v6 = (v3 + v4 + *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v7 = v0 + v6;
  v8 = OUTLINED_FUNCTION_22_4();
  if (!__swift_getEnumTagSinglePayload(v0 + v6, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = sub_21D7BF754();
    if (!OUTLINED_FUNCTION_10_11(v9))
      OUTLINED_FUNCTION_73_3();
  }
  v10 = v7 + *(int *)(v5 + 20);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67330);
  if (!__swift_getEnumTagSinglePayload(v10, 8, v11))
  {
    v12 = sub_21D7C3B28();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
    v13 = sub_21D7C3B58();
    if (!OUTLINED_FUNCTION_10_11(v13))
      OUTLINED_FUNCTION_73_3();
  }
  OUTLINED_FUNCTION_95_1();
  swift_bridgeObjectRelease();
  v14 = v7 + *(int *)(v5 + 32);
  if (*(_QWORD *)(v14 + 24))
    __swift_destroy_boxed_opaque_existential_1(v14);
  OUTLINED_FUNCTION_95_1();
  return OUTLINED_FUNCTION_44_6();
}

void sub_21CE61B84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v21 = *(_QWORD *)(OUTLINED_FUNCTION_40_0() - 8);
  v22 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v23 = *(_QWORD *)(v21 + 64);
  v24 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MenuConfiguration(0) - 8) + 80);
  sub_21D1AA4B0(v20 + v22, v20 + ((v22 + v23 + v24) & ~v24), v25, v26, v27, v28, v29, v30, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

uint64_t type metadata accessor for TopSearchLockupView.ArtworkContentView(uint64_t a1)
{
  return sub_21CDFBED8(a1, (uint64_t *)&unk_253F61468);
}

uint64_t sub_21CE61BFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = OUTLINED_FUNCTION_40_0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_21CE61C6C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_40_0() - 8) + 80);
  sub_21D076F80(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

unint64_t sub_21CE61C98()
{
  unint64_t result;

  result = qword_253F61488;
  if (!qword_253F61488)
  {
    result = MEMORY[0x2207938C0](&unk_21D7CE600, &type metadata for TopSearchLockupView.ChevronView);
    atomic_store(result, (unint64_t *)&qword_253F61488);
  }
  return result;
}

unint64_t sub_21CE61CD4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_253F660F0;
  if (!qword_253F660F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F660F8);
    v2[0] = MEMORY[0x24BDF4610];
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_253F660F0);
  }
  return result;
}

unint64_t sub_21CE61D40()
{
  unint64_t result;

  result = qword_253F66FE8;
  if (!qword_253F66FE8)
  {
    result = MEMORY[0x2207938C0](MEMORY[0x24BDF4440], MEMORY[0x24BDF4458]);
    atomic_store(result, (unint64_t *)&qword_253F66FE8);
  }
  return result;
}

ValueMetadata *type metadata accessor for TopSearchLockupView.ChevronView()
{
  return &type metadata for TopSearchLockupView.ChevronView;
}

uint64_t *sub_21CE61D8C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  _BYTE *v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  _BYTE *__dst;
  int *v87;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_21D7C4668();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    v10 = (int *)type metadata accessor for TopSearchLockup();
    v11 = v10[5];
    v12 = *(_OWORD *)((char *)a2 + v11 + 24);
    *(_OWORD *)((char *)a1 + v11 + 24) = v12;
    (**(void (***)(void))(v12 - 8))();
    v13 = v10[6];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = *(uint64_t *)((char *)a2 + v13 + 24);
    v87 = a3;
    if (v16)
    {
      v17 = *((_QWORD *)v15 + 4);
      *((_QWORD *)v14 + 3) = v16;
      *((_QWORD *)v14 + 4) = v17;
      (**(void (***)(void))(v16 - 8))();
    }
    else
    {
      v18 = *((_OWORD *)v15 + 1);
      *(_OWORD *)v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v18;
      *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
    }
    v19 = v10[7];
    v20 = (uint64_t *)((char *)a1 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = v10[8];
    v24 = (uint64_t *)((char *)a1 + v23);
    v25 = (uint64_t *)((char *)a2 + v23);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = v10[9];
    v28 = (uint64_t *)((char *)a1 + v27);
    v29 = (uint64_t *)((char *)a2 + v27);
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    v31 = v10[10];
    v32 = (uint64_t *)((char *)a1 + v31);
    v33 = (uint64_t *)((char *)a2 + v31);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    *((_BYTE *)a1 + v10[11]) = *((_BYTE *)a2 + v10[11]);
    v35 = v10[12];
    v36 = (char *)a1 + v35;
    v37 = (char *)a2 + v35;
    v38 = *(uint64_t *)((char *)a2 + v35 + 24);
    sub_21D7C4C20();
    sub_21D7C4C20();
    sub_21D7C4C20();
    sub_21D7C4C20();
    if (v38)
    {
      v39 = *((_QWORD *)v37 + 4);
      *((_QWORD *)v36 + 3) = v38;
      *((_QWORD *)v36 + 4) = v39;
      (**(void (***)(char *, char *, uint64_t))(v38 - 8))(v36, v37, v38);
    }
    else
    {
      v40 = *((_OWORD *)v37 + 1);
      *(_OWORD *)v36 = *(_OWORD *)v37;
      *((_OWORD *)v36 + 1) = v40;
      *((_QWORD *)v36 + 4) = *((_QWORD *)v37 + 4);
    }
    v41 = v10[13];
    v42 = (char *)a1 + v41;
    v43 = (char *)a2 + v41;
    v44 = *(uint64_t *)((char *)a2 + v41 + 24);
    if (v44)
    {
      v45 = *((_QWORD *)v43 + 4);
      *((_QWORD *)v42 + 3) = v44;
      *((_QWORD *)v42 + 4) = v45;
      (**(void (***)(void))(v44 - 8))();
    }
    else
    {
      v46 = *((_OWORD *)v43 + 1);
      *(_OWORD *)v42 = *(_OWORD *)v43;
      *((_OWORD *)v42 + 1) = v46;
      *((_QWORD *)v42 + 4) = *((_QWORD *)v43 + 4);
    }
    *((_BYTE *)a1 + v10[14]) = *((_BYTE *)a2 + v10[14]);
    *((_BYTE *)a1 + v10[15]) = *((_BYTE *)a2 + v10[15]);
    v47 = v10[16];
    v48 = (char *)a1 + v47;
    v49 = (char *)a2 + v47;
    v50 = *(uint64_t *)((char *)a2 + v47 + 24);
    if (v50)
    {
      v51 = *((_QWORD *)v49 + 4);
      *((_QWORD *)v48 + 3) = v50;
      *((_QWORD *)v48 + 4) = v51;
      (**(void (***)(void))(v50 - 8))();
    }
    else
    {
      v52 = *((_OWORD *)v49 + 1);
      *(_OWORD *)v48 = *(_OWORD *)v49;
      *((_OWORD *)v48 + 1) = v52;
      *((_QWORD *)v48 + 4) = *((_QWORD *)v49 + 4);
    }
    v53 = v10[17];
    v54 = (char *)a1 + v53;
    v55 = (char *)a2 + v53;
    v56 = type metadata accessor for ContentDescriptor();
    if (__swift_getEnumTagSinglePayload((uint64_t)v55, 1, v56))
    {
      v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    }
    else
    {
      *v54 = *v55;
      v58 = *((_QWORD *)v55 + 2);
      *((_QWORD *)v54 + 1) = *((_QWORD *)v55 + 1);
      *((_QWORD *)v54 + 2) = v58;
      v59 = *((_QWORD *)v55 + 4);
      *((_QWORD *)v54 + 3) = *((_QWORD *)v55 + 3);
      *((_QWORD *)v54 + 4) = v59;
      v60 = *((_QWORD *)v55 + 6);
      *((_QWORD *)v54 + 5) = *((_QWORD *)v55 + 5);
      *((_QWORD *)v54 + 6) = v60;
      v61 = *((_QWORD *)v55 + 8);
      *((_QWORD *)v54 + 7) = *((_QWORD *)v55 + 7);
      *((_QWORD *)v54 + 8) = v61;
      v62 = *((_QWORD *)v55 + 10);
      *((_QWORD *)v54 + 9) = *((_QWORD *)v55 + 9);
      *((_QWORD *)v54 + 10) = v62;
      v63 = *((_QWORD *)v55 + 12);
      *((_QWORD *)v54 + 11) = *((_QWORD *)v55 + 11);
      *((_QWORD *)v54 + 12) = v63;
      *((_QWORD *)v54 + 13) = *((_QWORD *)v55 + 13);
      v54[112] = v55[112];
      v64 = *(int *)(v56 + 24);
      __dst = &v54[v64];
      v65 = &v55[v64];
      v66 = sub_21D7BF754();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      if (__swift_getEnumTagSinglePayload((uint64_t)v65, 1, v66))
      {
        v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
        memcpy(__dst, v65, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(__dst, v65, v66);
        __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v66);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v54, 0, 1, v56);
    }
    v68 = v10[18];
    v69 = (uint64_t *)((char *)a1 + v68);
    v70 = (uint64_t *)((char *)a2 + v68);
    v71 = type metadata accessor for LockupArtwork();
    if (__swift_getEnumTagSinglePayload((uint64_t)v70, 1, v71))
    {
      v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5F890);
      memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
      v73 = v87;
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v74 = v70[1];
        if (v74 >= 2)
        {
          *v69 = *v70;
          v69[1] = v74;
          sub_21D7C4C20();
        }
        else
        {
          *(_OWORD *)v69 = *(_OWORD *)v70;
        }
        v73 = v87;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        v75 = sub_21D7C3840();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v69, v70, v75);
        v76 = *(int *)(type metadata accessor for Artwork() + 20);
        v77 = (char *)v69 + v76;
        v78 = (char *)v70 + v76;
        v79 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v77, v78, v79);
        swift_storeEnumTagMultiPayload();
        v73 = v87;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v69, 0, 1, v71);
    }
    v80 = v73[5];
    v81 = (char *)a1 + v80;
    v82 = (char *)a2 + v80;
    v83 = sub_21D7BFF04();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 16))(v81, v82, v83);
    v84 = v73[7];
    *((_BYTE *)a1 + v73[6]) = *((_BYTE *)a2 + v73[6]);
    *(uint64_t *)((char *)a1 + v84) = *(uint64_t *)((char *)a2 + v84);
  }
  return a1;
}

uint64_t sub_21CE62304(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = sub_21D7C4668();
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = (int *)type metadata accessor for TopSearchLockup();
  __swift_destroy_boxed_opaque_existential_1(a1 + v5[5]);
  v6 = a1 + v5[6];
  if (*(_QWORD *)(v6 + 24))
    __swift_destroy_boxed_opaque_existential_1(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = a1 + v5[12];
  if (*(_QWORD *)(v7 + 24))
    __swift_destroy_boxed_opaque_existential_1(v7);
  v8 = a1 + v5[13];
  if (*(_QWORD *)(v8 + 24))
    __swift_destroy_boxed_opaque_existential_1(v8);
  v9 = a1 + v5[16];
  if (*(_QWORD *)(v9 + 24))
    __swift_destroy_boxed_opaque_existential_1(v9);
  v10 = a1 + v5[17];
  v11 = type metadata accessor for ContentDescriptor();
  if (!__swift_getEnumTagSinglePayload(v10, 1, v11))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v12 = v10 + *(int *)(v11 + 24);
    v13 = sub_21D7BF754();
    if (!__swift_getEnumTagSinglePayload(v12, 1, v13))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  }
  v14 = a1 + v5[18];
  v15 = type metadata accessor for LockupArtwork();
  if (!__swift_getEnumTagSinglePayload(v14, 1, v15))
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (*(_QWORD *)(v14 + 8) >= 2uLL)
        swift_bridgeObjectRelease();
    }
    else
    {
      v16 = sub_21D7C3840();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
      v17 = v14 + *(int *)(type metadata accessor for Artwork() + 20);
      v18 = sub_21D7C3804();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
    }
  }
  v19 = a1 + *(int *)(a2 + 20);
  v20 = sub_21D7BFF04();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
}

char *sub_21CE6255C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  int *v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *__dst;
  char *v84;
  int *v85;

  v6 = sub_21D7C4668();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v8 = (int *)type metadata accessor for TopSearchLockup();
  v9 = v8[5];
  v10 = *(_OWORD *)&a2[v9 + 24];
  *(_OWORD *)&a1[v9 + 24] = v10;
  (**(void (***)(void))(v10 - 8))();
  v11 = v8[6];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = *(_QWORD *)&a2[v11 + 24];
  v85 = a3;
  if (v14)
  {
    v15 = *((_QWORD *)v13 + 4);
    *((_QWORD *)v12 + 3) = v14;
    *((_QWORD *)v12 + 4) = v15;
    (**(void (***)(void))(v14 - 8))();
  }
  else
  {
    v16 = *((_OWORD *)v13 + 1);
    *(_OWORD *)v12 = *(_OWORD *)v13;
    *((_OWORD *)v12 + 1) = v16;
    *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
  }
  v17 = v8[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = v20;
  v21 = v8[8];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = *((_QWORD *)v23 + 1);
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_QWORD *)v22 + 1) = v24;
  v25 = v8[9];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = *((_QWORD *)v27 + 1);
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *((_QWORD *)v26 + 1) = v28;
  v29 = v8[10];
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = *((_QWORD *)v31 + 1);
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *((_QWORD *)v30 + 1) = v32;
  a1[v8[11]] = a2[v8[11]];
  v33 = v8[12];
  v34 = &a1[v33];
  v35 = &a2[v33];
  v36 = *(_QWORD *)&a2[v33 + 24];
  sub_21D7C4C20();
  sub_21D7C4C20();
  sub_21D7C4C20();
  sub_21D7C4C20();
  if (v36)
  {
    v37 = *((_QWORD *)v35 + 4);
    *((_QWORD *)v34 + 3) = v36;
    *((_QWORD *)v34 + 4) = v37;
    (**(void (***)(char *, char *, uint64_t))(v36 - 8))(v34, v35, v36);
  }
  else
  {
    v38 = *((_OWORD *)v35 + 1);
    *(_OWORD *)v34 = *(_OWORD *)v35;
    *((_OWORD *)v34 + 1) = v38;
    *((_QWORD *)v34 + 4) = *((_QWORD *)v35 + 4);
  }
  v39 = v8[13];
  v40 = &a1[v39];
  v41 = &a2[v39];
  v42 = *(_QWORD *)&a2[v39 + 24];
  if (v42)
  {
    v43 = *((_QWORD *)v41 + 4);
    *((_QWORD *)v40 + 3) = v42;
    *((_QWORD *)v40 + 4) = v43;
    (**(void (***)(void))(v42 - 8))();
  }
  else
  {
    v44 = *((_OWORD *)v41 + 1);
    *(_OWORD *)v40 = *(_OWORD *)v41;
    *((_OWORD *)v40 + 1) = v44;
    *((_QWORD *)v40 + 4) = *((_QWORD *)v41 + 4);
  }
  a1[v8[14]] = a2[v8[14]];
  a1[v8[15]] = a2[v8[15]];
  v45 = v8[16];
  v46 = &a1[v45];
  v47 = &a2[v45];
  v48 = *(_QWORD *)&a2[v45 + 24];
  if (v48)
  {
    v49 = *((_QWORD *)v47 + 4);
    *((_QWORD *)v46 + 3) = v48;
    *((_QWORD *)v46 + 4) = v49;
    (**(void (***)(void))(v48 - 8))();
  }
  else
  {
    v50 = *((_OWORD *)v47 + 1);
    *(_OWORD *)v46 = *(_OWORD *)v47;
    *((_OWORD *)v46 + 1) = v50;
    *((_QWORD *)v46 + 4) = *((_QWORD *)v47 + 4);
  }
  v51 = v8[17];
  v52 = &a1[v51];
  v53 = &a2[v51];
  v54 = type metadata accessor for ContentDescriptor();
  if (__swift_getEnumTagSinglePayload((uint64_t)v53, 1, v54))
  {
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    *v52 = *v53;
    v56 = *((_QWORD *)v53 + 2);
    *((_QWORD *)v52 + 1) = *((_QWORD *)v53 + 1);
    *((_QWORD *)v52 + 2) = v56;
    v57 = *((_QWORD *)v53 + 4);
    *((_QWORD *)v52 + 3) = *((_QWORD *)v53 + 3);
    *((_QWORD *)v52 + 4) = v57;
    v58 = *((_QWORD *)v53 + 6);
    *((_QWORD *)v52 + 5) = *((_QWORD *)v53 + 5);
    *((_QWORD *)v52 + 6) = v58;
    v59 = *((_QWORD *)v53 + 8);
    *((_QWORD *)v52 + 7) = *((_QWORD *)v53 + 7);
    *((_QWORD *)v52 + 8) = v59;
    v60 = *((_QWORD *)v53 + 10);
    *((_QWORD *)v52 + 9) = *((_QWORD *)v53 + 9);
    *((_QWORD *)v52 + 10) = v60;
    v61 = *((_QWORD *)v53 + 12);
    *((_QWORD *)v52 + 11) = *((_QWORD *)v53 + 11);
    *((_QWORD *)v52 + 12) = v61;
    *((_QWORD *)v52 + 13) = *((_QWORD *)v53 + 13);
    v52[112] = v53[112];
    v62 = *(int *)(v54 + 24);
    __dst = &v52[v62];
    v84 = &v53[v62];
    v63 = sub_21D7BF754();
    sub_21D7C4C20();
    sub_21D7C4C20();
    sub_21D7C4C20();
    sub_21D7C4C20();
    sub_21D7C4C20();
    sub_21D7C4C20();
    if (__swift_getEnumTagSinglePayload((uint64_t)v84, 1, v63))
    {
      v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
      memcpy(__dst, v84, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(__dst, v84, v63);
      __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v63);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v52, 0, 1, v54);
  }
  v65 = v8[18];
  v66 = &a1[v65];
  v67 = &a2[v65];
  v68 = type metadata accessor for LockupArtwork();
  if (__swift_getEnumTagSinglePayload((uint64_t)v67, 1, v68))
  {
    v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5F890);
    memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    v70 = v85;
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v71 = *((_QWORD *)v67 + 1);
      if (v71 >= 2)
      {
        *(_QWORD *)v66 = *(_QWORD *)v67;
        *((_QWORD *)v66 + 1) = v71;
        sub_21D7C4C20();
      }
      else
      {
        *(_OWORD *)v66 = *(_OWORD *)v67;
      }
    }
    else
    {
      v72 = sub_21D7C3840();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(v66, v67, v72);
      v73 = *(int *)(type metadata accessor for Artwork() + 20);
      v74 = &v66[v73];
      v75 = &v67[v73];
      v76 = sub_21D7C3804();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v74, v75, v76);
    }
    swift_storeEnumTagMultiPayload();
    v70 = v85;
    __swift_storeEnumTagSinglePayload((uint64_t)v66, 0, 1, v68);
  }
  v77 = v70[5];
  v78 = &a1[v77];
  v79 = &a2[v77];
  v80 = sub_21D7BFF04();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 16))(v78, v79, v80);
  v81 = v70[7];
  a1[v70[6]] = a2[v70[6]];
  *(_QWORD *)&a1[v81] = *(_QWORD *)&a2[v81];
  return a1;
}

char *sub_21CE62AA0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  size_t v58;
  void *v59;
  const void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  const void *v93;
  void *__dst;

  v6 = sub_21D7C4668();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  v11 = (int *)type metadata accessor for TopSearchLockup();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)&a1[v11[5]], (uint64_t *)&a2[v11[5]]);
  v12 = v11[6];
  v13 = (uint64_t)&a1[v12];
  v14 = (uint64_t *)&a2[v12];
  v15 = *(_QWORD *)&a2[v12 + 24];
  if (*(_QWORD *)&a1[v12 + 24])
  {
    if (v15)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)v13, v14);
      goto LABEL_14;
    }
    __swift_destroy_boxed_opaque_existential_1(v13);
  }
  else if (v15)
  {
    *(_QWORD *)(v13 + 24) = v15;
    *(_QWORD *)(v13 + 32) = v14[4];
    (**(void (***)(uint64_t, char *))(v15 - 8))(v13, (char *)v14);
    goto LABEL_14;
  }
  v16 = *(_OWORD *)v14;
  v17 = *((_OWORD *)v14 + 1);
  *(_QWORD *)(v13 + 32) = v14[4];
  *(_OWORD *)v13 = v16;
  *(_OWORD *)(v13 + 16) = v17;
LABEL_14:
  v18 = v11[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  v21 = v11[8];
  v22 = &a1[v21];
  v23 = &a2[v21];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  v24 = v11[9];
  v25 = &a1[v24];
  v26 = &a2[v24];
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  v27 = v11[10];
  v28 = &a1[v27];
  v29 = &a2[v27];
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  a1[v11[11]] = a2[v11[11]];
  v30 = v11[12];
  v31 = (uint64_t)&a1[v30];
  v32 = (uint64_t *)&a2[v30];
  v33 = *(_QWORD *)&a2[v30 + 24];
  if (*(_QWORD *)&a1[v30 + 24])
  {
    if (v33)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)v31, v32);
      goto LABEL_21;
    }
    __swift_destroy_boxed_opaque_existential_1(v31);
  }
  else if (v33)
  {
    *(_QWORD *)(v31 + 24) = v33;
    *(_QWORD *)(v31 + 32) = v32[4];
    (**(void (***)(uint64_t, char *))(v33 - 8))(v31, (char *)v32);
    goto LABEL_21;
  }
  v34 = *(_OWORD *)v32;
  v35 = *((_OWORD *)v32 + 1);
  *(_QWORD *)(v31 + 32) = v32[4];
  *(_OWORD *)v31 = v34;
  *(_OWORD *)(v31 + 16) = v35;
LABEL_21:
  v36 = v11[13];
  v37 = (uint64_t)&a1[v36];
  v38 = (uint64_t *)&a2[v36];
  v39 = *(_QWORD *)&a2[v36 + 24];
  if (*(_QWORD *)&a1[v36 + 24])
  {
    if (v39)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)v37, v38);
      goto LABEL_28;
    }
    __swift_destroy_boxed_opaque_existential_1(v37);
  }
  else if (v39)
  {
    *(_QWORD *)(v37 + 24) = v39;
    *(_QWORD *)(v37 + 32) = v38[4];
    (**(void (***)(uint64_t, char *))(v39 - 8))(v37, (char *)v38);
    goto LABEL_28;
  }
  v40 = *(_OWORD *)v38;
  v41 = *((_OWORD *)v38 + 1);
  *(_QWORD *)(v37 + 32) = v38[4];
  *(_OWORD *)v37 = v40;
  *(_OWORD *)(v37 + 16) = v41;
LABEL_28:
  a1[v11[14]] = a2[v11[14]];
  a1[v11[15]] = a2[v11[15]];
  v42 = v11[16];
  v43 = (uint64_t)&a1[v42];
  v44 = (uint64_t *)&a2[v42];
  v45 = *(_QWORD *)&a2[v42 + 24];
  if (*(_QWORD *)&a1[v42 + 24])
  {
    if (v45)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)v43, v44);
      goto LABEL_35;
    }
    __swift_destroy_boxed_opaque_existential_1(v43);
  }
  else if (v45)
  {
    *(_QWORD *)(v43 + 24) = v45;
    *(_QWORD *)(v43 + 32) = v44[4];
    (**(void (***)(uint64_t, char *))(v45 - 8))(v43, (char *)v44);
    goto LABEL_35;
  }
  v46 = *(_OWORD *)v44;
  v47 = *((_OWORD *)v44 + 1);
  *(_QWORD *)(v43 + 32) = v44[4];
  *(_OWORD *)v43 = v46;
  *(_OWORD *)(v43 + 16) = v47;
LABEL_35:
  v48 = v11[17];
  v49 = (uint64_t)&a1[v48];
  v50 = (uint64_t)&a2[v48];
  v51 = type metadata accessor for ContentDescriptor();
  v52 = __swift_getEnumTagSinglePayload(v49, 1, v51);
  v53 = __swift_getEnumTagSinglePayload(v50, 1, v51);
  if (v52)
  {
    if (!v53)
    {
      *(_BYTE *)v49 = *(_BYTE *)v50;
      *(_QWORD *)(v49 + 8) = *(_QWORD *)(v50 + 8);
      *(_QWORD *)(v49 + 16) = *(_QWORD *)(v50 + 16);
      *(_QWORD *)(v49 + 24) = *(_QWORD *)(v50 + 24);
      *(_QWORD *)(v49 + 32) = *(_QWORD *)(v50 + 32);
      *(_QWORD *)(v49 + 40) = *(_QWORD *)(v50 + 40);
      *(_QWORD *)(v49 + 48) = *(_QWORD *)(v50 + 48);
      *(_QWORD *)(v49 + 56) = *(_QWORD *)(v50 + 56);
      *(_QWORD *)(v49 + 64) = *(_QWORD *)(v50 + 64);
      *(_QWORD *)(v49 + 72) = *(_QWORD *)(v50 + 72);
      *(_QWORD *)(v49 + 80) = *(_QWORD *)(v50 + 80);
      *(_QWORD *)(v49 + 88) = *(_QWORD *)(v50 + 88);
      *(_QWORD *)(v49 + 96) = *(_QWORD *)(v50 + 96);
      v54 = *(_QWORD *)(v50 + 104);
      *(_BYTE *)(v49 + 112) = *(_BYTE *)(v50 + 112);
      *(_QWORD *)(v49 + 104) = v54;
      v55 = *(int *)(v51 + 24);
      __dst = (void *)(v49 + v55);
      v93 = (const void *)(v50 + v55);
      v56 = sub_21D7BF754();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      if (__swift_getEnumTagSinglePayload((uint64_t)v93, 1, v56))
      {
        v57 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
        memcpy(__dst, v93, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(__dst, v93, v56);
        __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v56);
      }
      v68 = v49;
      v69 = v51;
      goto LABEL_49;
    }
    goto LABEL_41;
  }
  if (v53)
  {
    sub_21CDBDA1C(v49, (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
LABEL_41:
    v58 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253F60800) - 8) + 64);
    v59 = (void *)v49;
    v60 = (const void *)v50;
LABEL_42:
    memcpy(v59, v60, v58);
    goto LABEL_50;
  }
  *(_BYTE *)v49 = *(_BYTE *)v50;
  *(_QWORD *)(v49 + 8) = *(_QWORD *)(v50 + 8);
  *(_QWORD *)(v49 + 16) = *(_QWORD *)(v50 + 16);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v49 + 24) = *(_QWORD *)(v50 + 24);
  *(_QWORD *)(v49 + 32) = *(_QWORD *)(v50 + 32);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v49 + 40) = *(_QWORD *)(v50 + 40);
  *(_QWORD *)(v49 + 48) = *(_QWORD *)(v50 + 48);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v49 + 56) = *(_QWORD *)(v50 + 56);
  *(_QWORD *)(v49 + 64) = *(_QWORD *)(v50 + 64);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v49 + 72) = *(_QWORD *)(v50 + 72);
  *(_QWORD *)(v49 + 80) = *(_QWORD *)(v50 + 80);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v49 + 88) = *(_QWORD *)(v50 + 88);
  *(_QWORD *)(v49 + 96) = *(_QWORD *)(v50 + 96);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  v61 = *(_QWORD *)(v50 + 104);
  *(_BYTE *)(v49 + 112) = *(_BYTE *)(v50 + 112);
  *(_QWORD *)(v49 + 104) = v61;
  v62 = *(int *)(v51 + 24);
  v63 = v49 + v62;
  v64 = v50 + v62;
  v65 = sub_21D7BF754();
  v66 = __swift_getEnumTagSinglePayload(v63, 1, v65);
  v67 = __swift_getEnumTagSinglePayload(v64, 1, v65);
  if (v66)
  {
    if (!v67)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v63, v64, v65);
      v68 = v63;
      v69 = v65;
LABEL_49:
      __swift_storeEnumTagSinglePayload(v68, 0, 1, v69);
      goto LABEL_50;
    }
    goto LABEL_67;
  }
  v82 = *(_QWORD *)(v65 - 8);
  if (v67)
  {
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v63, v65);
LABEL_67:
    v58 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10) - 8) + 64);
    v59 = (void *)v63;
    v60 = (const void *)v64;
    goto LABEL_42;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 24))(v63, v64, v65);
LABEL_50:
  v70 = v11[18];
  v71 = &a1[v70];
  v72 = &a2[v70];
  v73 = type metadata accessor for LockupArtwork();
  v74 = __swift_getEnumTagSinglePayload((uint64_t)v71, 1, v73);
  v75 = __swift_getEnumTagSinglePayload((uint64_t)v72, 1, v73);
  if (v74)
  {
    if (!v75)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        if (*((_QWORD *)v72 + 1) >= 2uLL)
        {
          *(_QWORD *)v71 = *(_QWORD *)v72;
          *((_QWORD *)v71 + 1) = *((_QWORD *)v72 + 1);
          sub_21D7C4C20();
        }
        else
        {
          *(_OWORD *)v71 = *(_OWORD *)v72;
        }
      }
      else
      {
        v77 = sub_21D7C3840();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 16))(v71, v72, v77);
        v78 = *(int *)(type metadata accessor for Artwork() + 20);
        v79 = &v71[v78];
        v80 = &v72[v78];
        v81 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(v79, v80, v81);
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v71, 0, 1, v73);
      goto LABEL_71;
    }
LABEL_57:
    v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5F890);
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    goto LABEL_71;
  }
  if (v75)
  {
    sub_21CDBDA1C((uint64_t)v71, (uint64_t (*)(_QWORD))type metadata accessor for LockupArtwork);
    goto LABEL_57;
  }
  if (a1 != a2)
  {
    sub_21CDBDA1C((uint64_t)v71, (uint64_t (*)(_QWORD))type metadata accessor for LockupArtwork);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (*((_QWORD *)v72 + 1) >= 2uLL)
      {
        *(_QWORD *)v71 = *(_QWORD *)v72;
        *((_QWORD *)v71 + 1) = *((_QWORD *)v72 + 1);
        sub_21D7C4C20();
      }
      else
      {
        *(_OWORD *)v71 = *(_OWORD *)v72;
      }
    }
    else
    {
      v83 = sub_21D7C3840();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 16))(v71, v72, v83);
      v84 = *(int *)(type metadata accessor for Artwork() + 20);
      v85 = &v71[v84];
      v86 = &v72[v84];
      v87 = sub_21D7C3804();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 16))(v85, v86, v87);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_71:
  v88 = a3[5];
  v89 = &a1[v88];
  v90 = &a2[v88];
  v91 = sub_21D7BFF04();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 24))(v89, v90, v91);
  a1[a3[6]] = a2[a3[6]];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  return a1;
}

char *sub_21CE6340C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;

  v6 = sub_21D7C4668();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v8 = (int *)type metadata accessor for TopSearchLockup();
  v9 = v8[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *((_OWORD *)v11 + 1);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v12;
  *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
  v13 = v8[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *((_OWORD *)v15 + 1);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v16;
  *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
  *(_OWORD *)&a1[v8[7]] = *(_OWORD *)&a2[v8[7]];
  *(_OWORD *)&a1[v8[8]] = *(_OWORD *)&a2[v8[8]];
  *(_OWORD *)&a1[v8[9]] = *(_OWORD *)&a2[v8[9]];
  *(_OWORD *)&a1[v8[10]] = *(_OWORD *)&a2[v8[10]];
  a1[v8[11]] = a2[v8[11]];
  v17 = v8[12];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = *((_OWORD *)v19 + 1);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v20;
  *((_QWORD *)v18 + 4) = *((_QWORD *)v19 + 4);
  v21 = v8[13];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = *((_OWORD *)v23 + 1);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v24;
  *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
  a1[v8[14]] = a2[v8[14]];
  a1[v8[15]] = a2[v8[15]];
  v25 = v8[16];
  v26 = &a1[v25];
  v27 = &a2[v25];
  *((_QWORD *)v26 + 4) = *((_QWORD *)v27 + 4);
  v28 = *((_OWORD *)v27 + 1);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *((_OWORD *)v26 + 1) = v28;
  v29 = v8[17];
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = type metadata accessor for ContentDescriptor();
  if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v32))
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    *v30 = *v31;
    memcpy(v30 + 8, v31 + 8, 0x69uLL);
    v34 = *(int *)(v32 + 24);
    v35 = &v30[v34];
    v36 = &v31[v34];
    v37 = sub_21D7BF754();
    if (__swift_getEnumTagSinglePayload((uint64_t)v36, 1, v37))
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
      __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v37);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v32);
  }
  v39 = v8[18];
  v40 = &a1[v39];
  v41 = &a2[v39];
  v42 = type metadata accessor for LockupArtwork();
  if (__swift_getEnumTagSinglePayload((uint64_t)v41, 1, v42))
  {
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5F890);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      v44 = sub_21D7C3840();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v40, v41, v44);
      v45 = *(int *)(type metadata accessor for Artwork() + 20);
      v46 = &v40[v45];
      v47 = &v41[v45];
      v48 = sub_21D7C3804();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v46, v47, v48);
      swift_storeEnumTagMultiPayload();
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v40, 0, 1, v42);
  }
  v49 = a3[5];
  v50 = &a1[v49];
  v51 = &a2[v49];
  v52 = sub_21D7BFF04();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v51, v52);
  v53 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  *(_QWORD *)&a1[v53] = *(_QWORD *)&a2[v53];
  return a1;
}

char *sub_21CE637D8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  int v57;
  uint64_t v58;
  void *v59;
  const void *v60;
  uint64_t v61;
  uint64_t v62;
  size_t v63;
  void *v64;
  const void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  int v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;

  v6 = sub_21D7C4668();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  v11 = (int *)type metadata accessor for TopSearchLockup();
  v12 = v11[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[v12]);
  *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
  v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  v16 = v11[6];
  v17 = (uint64_t)&a1[v16];
  v18 = &a2[v16];
  if (*(_QWORD *)&a1[v16 + 24])
    __swift_destroy_boxed_opaque_existential_1(v17);
  v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(_QWORD *)(v17 + 32) = *((_QWORD *)v18 + 4);
  v20 = v11[7];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v24 = *(_QWORD *)v22;
  v23 = *((_QWORD *)v22 + 1);
  *(_QWORD *)v21 = v24;
  *((_QWORD *)v21 + 1) = v23;
  swift_bridgeObjectRelease();
  v25 = v11[8];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v29 = *(_QWORD *)v27;
  v28 = *((_QWORD *)v27 + 1);
  *(_QWORD *)v26 = v29;
  *((_QWORD *)v26 + 1) = v28;
  swift_bridgeObjectRelease();
  v30 = v11[9];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v34 = *(_QWORD *)v32;
  v33 = *((_QWORD *)v32 + 1);
  *(_QWORD *)v31 = v34;
  *((_QWORD *)v31 + 1) = v33;
  swift_bridgeObjectRelease();
  v35 = v11[10];
  v36 = &a1[v35];
  v37 = &a2[v35];
  v39 = *(_QWORD *)v37;
  v38 = *((_QWORD *)v37 + 1);
  *(_QWORD *)v36 = v39;
  *((_QWORD *)v36 + 1) = v38;
  swift_bridgeObjectRelease();
  a1[v11[11]] = a2[v11[11]];
  v40 = v11[12];
  v41 = (uint64_t)&a1[v40];
  v42 = &a2[v40];
  if (*(_QWORD *)&a1[v40 + 24])
    __swift_destroy_boxed_opaque_existential_1(v41);
  v43 = *((_OWORD *)v42 + 1);
  *(_OWORD *)v41 = *(_OWORD *)v42;
  *(_OWORD *)(v41 + 16) = v43;
  *(_QWORD *)(v41 + 32) = *((_QWORD *)v42 + 4);
  v44 = v11[13];
  v45 = (uint64_t)&a1[v44];
  v46 = &a2[v44];
  if (*(_QWORD *)&a1[v44 + 24])
    __swift_destroy_boxed_opaque_existential_1(v45);
  v47 = *((_OWORD *)v46 + 1);
  *(_OWORD *)v45 = *(_OWORD *)v46;
  *(_OWORD *)(v45 + 16) = v47;
  *(_QWORD *)(v45 + 32) = *((_QWORD *)v46 + 4);
  a1[v11[14]] = a2[v11[14]];
  a1[v11[15]] = a2[v11[15]];
  v48 = v11[16];
  v49 = (uint64_t)&a1[v48];
  v50 = &a2[v48];
  if (*(_QWORD *)&a1[v48 + 24])
    __swift_destroy_boxed_opaque_existential_1(v49);
  v51 = *((_OWORD *)v50 + 1);
  *(_OWORD *)v49 = *(_OWORD *)v50;
  *(_OWORD *)(v49 + 16) = v51;
  *(_QWORD *)(v49 + 32) = *((_QWORD *)v50 + 4);
  v52 = v11[17];
  v53 = (uint64_t)&a1[v52];
  v54 = (uint64_t)&a2[v52];
  v55 = type metadata accessor for ContentDescriptor();
  v56 = __swift_getEnumTagSinglePayload(v53, 1, v55);
  v57 = __swift_getEnumTagSinglePayload(v54, 1, v55);
  if (v56)
  {
    if (!v57)
    {
      *(_BYTE *)v53 = *(_BYTE *)v54;
      memcpy((void *)(v53 + 8), (const void *)(v54 + 8), 0x69uLL);
      v58 = *(int *)(v55 + 24);
      v59 = (void *)(v53 + v58);
      v60 = (const void *)(v54 + v58);
      v61 = sub_21D7BF754();
      if (__swift_getEnumTagSinglePayload((uint64_t)v60, 1, v61))
      {
        v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
        __swift_storeEnumTagSinglePayload((uint64_t)v59, 0, 1, v61);
      }
      v78 = v53;
      v79 = v55;
      goto LABEL_29;
    }
    goto LABEL_21;
  }
  if (v57)
  {
    sub_21CDBDA1C(v53, (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
LABEL_21:
    v63 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253F60800) - 8) + 64);
    v64 = (void *)v53;
    v65 = (const void *)v54;
LABEL_22:
    memcpy(v64, v65, v63);
    goto LABEL_30;
  }
  *(_BYTE *)v53 = *(_BYTE *)v54;
  v66 = *(_QWORD *)(v54 + 16);
  *(_QWORD *)(v53 + 8) = *(_QWORD *)(v54 + 8);
  *(_QWORD *)(v53 + 16) = v66;
  swift_bridgeObjectRelease();
  v67 = *(_QWORD *)(v54 + 32);
  *(_QWORD *)(v53 + 24) = *(_QWORD *)(v54 + 24);
  *(_QWORD *)(v53 + 32) = v67;
  swift_bridgeObjectRelease();
  v68 = *(_QWORD *)(v54 + 48);
  *(_QWORD *)(v53 + 40) = *(_QWORD *)(v54 + 40);
  *(_QWORD *)(v53 + 48) = v68;
  swift_bridgeObjectRelease();
  v69 = *(_QWORD *)(v54 + 64);
  *(_QWORD *)(v53 + 56) = *(_QWORD *)(v54 + 56);
  *(_QWORD *)(v53 + 64) = v69;
  swift_bridgeObjectRelease();
  v70 = *(_QWORD *)(v54 + 80);
  *(_QWORD *)(v53 + 72) = *(_QWORD *)(v54 + 72);
  *(_QWORD *)(v53 + 80) = v70;
  swift_bridgeObjectRelease();
  v71 = *(_QWORD *)(v54 + 96);
  *(_QWORD *)(v53 + 88) = *(_QWORD *)(v54 + 88);
  *(_QWORD *)(v53 + 96) = v71;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v53 + 104) = *(_QWORD *)(v54 + 104);
  *(_BYTE *)(v53 + 112) = *(_BYTE *)(v54 + 112);
  v72 = *(int *)(v55 + 24);
  v73 = v53 + v72;
  v74 = v54 + v72;
  v75 = sub_21D7BF754();
  v76 = __swift_getEnumTagSinglePayload(v73, 1, v75);
  v77 = __swift_getEnumTagSinglePayload(v74, 1, v75);
  if (v76)
  {
    if (!v77)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v73, v74, v75);
      v78 = v73;
      v79 = v75;
LABEL_29:
      __swift_storeEnumTagSinglePayload(v78, 0, 1, v79);
      goto LABEL_30;
    }
    goto LABEL_46;
  }
  v98 = *(_QWORD *)(v75 - 8);
  if (v77)
  {
    (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v73, v75);
LABEL_46:
    v63 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10) - 8) + 64);
    v64 = (void *)v73;
    v65 = (const void *)v74;
    goto LABEL_22;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v98 + 40))(v73, v74, v75);
LABEL_30:
  v80 = v11[18];
  v81 = &a1[v80];
  v82 = &a2[v80];
  v83 = type metadata accessor for LockupArtwork();
  v84 = __swift_getEnumTagSinglePayload((uint64_t)v81, 1, v83);
  v85 = __swift_getEnumTagSinglePayload((uint64_t)v82, 1, v83);
  if (!v84)
  {
    if (!v85)
    {
      if (a1 == a2)
        goto LABEL_43;
      sub_21CDBDA1C((uint64_t)v81, (uint64_t (*)(_QWORD))type metadata accessor for LockupArtwork);
      if (!swift_getEnumCaseMultiPayload())
      {
        v99 = sub_21D7C3840();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v81, v82, v99);
        v100 = *(int *)(type metadata accessor for Artwork() + 20);
        v101 = &v81[v100];
        v102 = &v82[v100];
        v103 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v101, v102, v103);
        swift_storeEnumTagMultiPayload();
        goto LABEL_43;
      }
      v86 = *(_QWORD *)(v83 - 8);
      goto LABEL_37;
    }
    sub_21CDBDA1C((uint64_t)v81, (uint64_t (*)(_QWORD))type metadata accessor for LockupArtwork);
LABEL_36:
    v86 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253F5F890) - 8);
LABEL_37:
    memcpy(v81, v82, *(_QWORD *)(v86 + 64));
    goto LABEL_43;
  }
  if (v85)
    goto LABEL_36;
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
  }
  else
  {
    v87 = sub_21D7C3840();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(v81, v82, v87);
    v88 = *(int *)(type metadata accessor for Artwork() + 20);
    v89 = &v81[v88];
    v90 = &v82[v88];
    v91 = sub_21D7C3804();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v89, v90, v91);
    swift_storeEnumTagMultiPayload();
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v81, 0, 1, v83);
LABEL_43:
  v92 = a3[5];
  v93 = &a1[v92];
  v94 = &a2[v92];
  v95 = sub_21D7BFF04();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 40))(v93, v94, v95);
  v96 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  *(_QWORD *)&a1[v96] = *(_QWORD *)&a2[v96];
  return a1;
}

uint64_t sub_21CE63E9C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_21CE63EA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_113();
  if (v9)
  {
    v7 = v6;
    v8 = v4;
  }
  else
  {
    OUTLINED_FUNCTION_40_0();
    OUTLINED_FUNCTION_113();
    if (!v9)
    {
      OUTLINED_FUNCTION_98();
      return;
    }
    v7 = v10;
    v8 = v4 + *(int *)(a3 + 20);
  }
  OUTLINED_FUNCTION_16_3(v8, v3, v7);
}

uint64_t sub_21CE63F28()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_21CE63F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_53_2();
  if (v10)
  {
    v8 = v7;
    v9 = v5;
  }
  else
  {
    OUTLINED_FUNCTION_40_0();
    OUTLINED_FUNCTION_53_2();
    if (!v10)
    {
      *(_BYTE *)(v5 + *(int *)(a4 + 24)) = v4 + 1;
      OUTLINED_FUNCTION_98();
      return;
    }
    v8 = v11;
    v9 = v5 + *(int *)(a4 + 20);
  }
  OUTLINED_FUNCTION_17_2(v9, v4, v4, v8);
}

uint64_t sub_21CE63FA0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for TopSearchLockup();
  if (v1 <= 0x3F)
  {
    result = sub_21D7BFF04();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_21CE6403C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Artwork();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v10 = sub_21D7C3840();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      v11 = *(int *)(v7 + 20);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_21D7C3804();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    v15 = a3[5];
    v16 = (uint64_t *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = v17[1];
    if ((unint64_t)(v18 - 1) >= 8)
    {
      *v16 = *v17;
      v16[1] = v18;
      sub_21D7C4C20();
    }
    else
    {
      *(_OWORD *)v16 = *(_OWORD *)v17;
    }
    v19 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *((_BYTE *)a1 + v19) = *((_BYTE *)a2 + v19);
  }
  return a1;
}

uint64_t sub_21CE6418C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v4 = type metadata accessor for Artwork();
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4))
  {
    v5 = sub_21D7C3840();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    v6 = a1 + *(int *)(v4 + 20);
    v7 = sub_21D7C3804();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  result = *(_QWORD *)(a1 + *(int *)(a2 + 20) + 8);
  if ((unint64_t)(result - 1) >= 8)
    return swift_bridgeObjectRelease();
  return result;
}

char *sub_21CE6423C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for Artwork();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = sub_21D7C3840();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    v9 = *(int *)(v6 + 20);
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = sub_21D7C3804();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v13 = a3[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *((_QWORD *)v15 + 1);
  if ((unint64_t)(v16 - 1) >= 8)
  {
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    sub_21D7C4C20();
  }
  else
  {
    *(_OWORD *)v14 = *(_OWORD *)v15;
  }
  v17 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  a1[v17] = a2[v17];
  return a1;
}

char *sub_21CE64360(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v6 = type metadata accessor for Artwork();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      v9 = sub_21D7C3840();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v10 = *(int *)(v6 + 20);
      v11 = &a1[v10];
      v12 = &a2[v10];
      v13 = sub_21D7C3804();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_21CDBDA1C((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for Artwork);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v21 = sub_21D7C3840();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(a1, a2, v21);
  v22 = *(int *)(v6 + 20);
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = sub_21D7C3804();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
LABEL_7:
  v15 = a3[5];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = *(_QWORD *)&a1[v15 + 8];
  v19 = *(_QWORD *)&a2[v15 + 8] - 1;
  if ((unint64_t)(v18 - 1) >= 8)
  {
    if (v19 >= 8)
    {
      *(_QWORD *)v16 = *(_QWORD *)v17;
      *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
      sub_21D7C4C20();
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    sub_21CDBDA44((uint64_t)v16, &qword_25532FEA0);
    goto LABEL_12;
  }
  if (v19 < 8)
  {
LABEL_12:
    *(_OWORD *)v16 = *(_OWORD *)v17;
    goto LABEL_14;
  }
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
  sub_21D7C4C20();
LABEL_14:
  a1[a3[6]] = a2[a3[6]];
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

char *sub_21CE64554(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for Artwork();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = sub_21D7C3840();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    v9 = *(int *)(v6 + 20);
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = sub_21D7C3804();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v13 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  a1[v13] = a2[v13];
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

char *sub_21CE64650(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v6 = type metadata accessor for Artwork();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      v9 = sub_21D7C3840();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      v10 = *(int *)(v6 + 20);
      v11 = &a1[v10];
      v12 = &a2[v10];
      v13 = sub_21D7C3804();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_21CDBDA1C((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for Artwork);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v21 = sub_21D7C3840();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(a1, a2, v21);
  v22 = *(int *)(v6 + 20);
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = sub_21D7C3804();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v23, v24, v25);
LABEL_7:
  v15 = a3[5];
  v16 = &a1[v15];
  v17 = &a2[v15];
  if ((unint64_t)(*(_QWORD *)&a1[v15 + 8] - 1) >= 8)
  {
    v18 = *((_QWORD *)v17 + 1);
    if ((unint64_t)(v18 - 1) >= 8)
    {
      *(_QWORD *)v16 = *(_QWORD *)v17;
      *((_QWORD *)v16 + 1) = v18;
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_21CDBDA44((uint64_t)v16, &qword_25532FEA0);
  }
  *(_OWORD *)v16 = *(_OWORD *)v17;
LABEL_12:
  v19 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  a1[v19] = a2[v19];
  return a1;
}

uint64_t sub_21CE64810()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_21CE6481C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)a2)
    OUTLINED_FUNCTION_16_3(a1, a2, v4);
  else
    OUTLINED_FUNCTION_98();
}

uint64_t sub_21CE648A0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_21CE648AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  char v8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
  OUTLINED_FUNCTION_53_2();
  if (v8)
  {
    OUTLINED_FUNCTION_17_2(a1, a2, a2, v7);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 + 8);
    OUTLINED_FUNCTION_98();
  }
}

void sub_21CE64910()
{
  unint64_t v0;

  sub_21CE65840(319, qword_253F4F2C8, (uint64_t (*)(uint64_t))type metadata accessor for Artwork, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

char *sub_21CE649AC(char *a1, char *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *(_QWORD *)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (char *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    swift_retain();
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65BB8);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v12(&a1[a3[6]], &a2[a3[6]], v11);
    v13 = a3[7];
    v14 = &a1[v13];
    v15 = &a2[v13];
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B60);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v16 = sub_21D7C12B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *(_QWORD *)v14 = *(_QWORD *)v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v17 = a3[8];
    v18 = &a1[v17];
    v19 = &a2[v17];
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B18);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v20 = sub_21D7C08AC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      *(_QWORD *)v18 = *(_QWORD *)v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v21 = a3[9];
    v22 = &a1[v21];
    v23 = &a2[v21];
    if ((a2[v21 + 40] & 1) != 0)
    {
      v24 = *((_QWORD *)v23 + 3);
      if (v24)
      {
        v25 = *((_QWORD *)v23 + 4);
        *((_QWORD *)v22 + 3) = v24;
        *((_QWORD *)v22 + 4) = v25;
        (**(void (***)(char *))(v24 - 8))(v22);
      }
      else
      {
        v26 = *((_OWORD *)v23 + 1);
        *(_OWORD *)v22 = *(_OWORD *)v23;
        *((_OWORD *)v22 + 1) = v26;
        *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
      }
      v22[40] = 1;
    }
    else
    {
      *(_QWORD *)v22 = *(_QWORD *)v23;
      v22[40] = 0;
      swift_retain();
    }
    v27 = a3[10];
    v28 = a3[11];
    v29 = &a1[v27];
    v30 = (uint64_t *)&a2[v27];
    v31 = *v30;
    v32 = v30[1];
    *(_QWORD *)v29 = v31;
    *((_QWORD *)v29 + 1) = v32;
    v33 = &a1[v28];
    v34 = &a2[v28];
    v35 = *(_QWORD *)&a2[v28];
    v36 = *((_QWORD *)v34 + 1);
    v37 = v34[16];
    swift_retain();
    OUTLINED_FUNCTION_83_2();
    *(_QWORD *)v33 = v35;
    *((_QWORD *)v33 + 1) = v36;
    v33[16] = v37;
  }
  return a1;
}

uint64_t sub_21CE64BF0(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  swift_release();
  v4 = a1 + a2[5];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65BB8);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + a2[6], v5);
  v7 = a1 + a2[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_21D7C12B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  v9 = a1 + a2[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_21D7C08AC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  v11 = a1 + a2[9];
  if ((*(_BYTE *)(v11 + 40) & 1) != 0)
  {
    if (*(_QWORD *)(v11 + 24))
      __swift_destroy_boxed_opaque_existential_1(v11);
  }
  else
  {
    swift_release();
  }
  swift_release();
  return sub_21CE09DA4();
}

char *sub_21CE64D48(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  swift_retain();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65BB8);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v11 = a3[7];
  v12 = &a1[v11];
  v13 = &a2[v11];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = sub_21D7C12B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    *(_QWORD *)v12 = *(_QWORD *)v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v15 = a3[8];
  v16 = &a1[v15];
  v17 = &a2[v15];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = sub_21D7C08AC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  }
  else
  {
    *(_QWORD *)v16 = *(_QWORD *)v17;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v19 = a3[9];
  v20 = &a1[v19];
  v21 = &a2[v19];
  if ((a2[v19 + 40] & 1) != 0)
  {
    v22 = *((_QWORD *)v21 + 3);
    if (v22)
    {
      v23 = *((_QWORD *)v21 + 4);
      *((_QWORD *)v20 + 3) = v22;
      *((_QWORD *)v20 + 4) = v23;
      (**(void (***)(char *))(v22 - 8))(v20);
    }
    else
    {
      v24 = *((_OWORD *)v21 + 1);
      *(_OWORD *)v20 = *(_OWORD *)v21;
      *((_OWORD *)v20 + 1) = v24;
      *((_QWORD *)v20 + 4) = *((_QWORD *)v21 + 4);
    }
    v20[40] = 1;
  }
  else
  {
    *(_QWORD *)v20 = *(_QWORD *)v21;
    v20[40] = 0;
    swift_retain();
  }
  v25 = a3[10];
  v26 = a3[11];
  v27 = &a1[v25];
  v28 = (uint64_t *)&a2[v25];
  v29 = *v28;
  v30 = v28[1];
  *(_QWORD *)v27 = v29;
  *((_QWORD *)v27 + 1) = v30;
  v31 = &a1[v26];
  v32 = &a2[v26];
  v33 = *(_QWORD *)&a2[v26];
  v34 = *((_QWORD *)v32 + 1);
  v35 = v32[16];
  swift_retain();
  OUTLINED_FUNCTION_83_2();
  *(_QWORD *)v31 = v33;
  *((_QWORD *)v31 + 1) = v34;
  v31[16] = v35;
  return a1;
}

char *sub_21CE64F68(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65BB8);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  if (a1 != a2)
  {
    v11 = a3[7];
    v12 = &a1[v11];
    v13 = &a2[v11];
    sub_21CDBDA44((uint64_t)&a1[v11], &qword_253F65B60);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B60);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = sub_21D7C12B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *(_QWORD *)v12 = *(_QWORD *)v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v15 = a3[8];
    v16 = &a1[v15];
    v17 = &a2[v15];
    sub_21CDBDA44((uint64_t)&a1[v15], &qword_253F65B18);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B18);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v18 = sub_21D7C08AC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *(_QWORD *)v16 = *(_QWORD *)v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v19 = a3[9];
    v20 = &a1[v19];
    v21 = &a2[v19];
    sub_21CDBDA44((uint64_t)&a1[v19], &qword_253F65B00);
    if ((v21[40] & 1) != 0)
    {
      v22 = *((_QWORD *)v21 + 3);
      if (v22)
      {
        *((_QWORD *)v20 + 3) = v22;
        *((_QWORD *)v20 + 4) = *((_QWORD *)v21 + 4);
        (**(void (***)(char *, char *))(v22 - 8))(v20, v21);
      }
      else
      {
        v23 = *(_OWORD *)v21;
        v24 = *((_OWORD *)v21 + 1);
        *((_QWORD *)v20 + 4) = *((_QWORD *)v21 + 4);
        *(_OWORD *)v20 = v23;
        *((_OWORD *)v20 + 1) = v24;
      }
      v20[40] = 1;
    }
    else
    {
      *(_QWORD *)v20 = *(_QWORD *)v21;
      v20[40] = 0;
      swift_retain();
    }
  }
  v25 = a3[10];
  v26 = &a1[v25];
  v27 = &a2[v25];
  *(_QWORD *)&a1[v25] = *(_QWORD *)&a2[v25];
  swift_retain();
  swift_release();
  *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
  v28 = a3[11];
  v29 = &a1[v28];
  v30 = &a2[v28];
  v31 = *(_QWORD *)v30;
  v32 = *((_QWORD *)v30 + 1);
  v33 = v30[16];
  OUTLINED_FUNCTION_83_2();
  *(_QWORD *)v29 = v31;
  *((_QWORD *)v29 + 1) = v32;
  v29[16] = v33;
  sub_21CE09DA4();
  return a1;
}

char *sub_21CE651F8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  char *v28;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65BB8);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v11 = a3[7];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = sub_21D7C12B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  v16 = a3[8];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = sub_21D7C08AC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  v21 = a3[9];
  v22 = a3[10];
  v23 = &a1[v21];
  v24 = &a2[v21];
  v25 = *((_OWORD *)v24 + 1);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v25;
  *(_OWORD *)(v23 + 25) = *(_OWORD *)(v24 + 25);
  *(_OWORD *)&a1[v22] = *(_OWORD *)&a2[v22];
  v26 = a3[11];
  v27 = &a1[v26];
  v28 = &a2[v26];
  *(_OWORD *)v27 = *(_OWORD *)v28;
  v27[16] = v28[16];
  return a1;
}

char *sub_21CE653B8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char v31;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65BB8);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  if (a1 != a2)
  {
    v11 = a3[7];
    v12 = &a1[v11];
    v13 = &a2[v11];
    sub_21CDBDA44((uint64_t)&a1[v11], &qword_253F65B60);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B60);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = sub_21D7C12B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    v16 = a3[8];
    v17 = &a1[v16];
    v18 = &a2[v16];
    sub_21CDBDA44((uint64_t)&a1[v16], &qword_253F65B18);
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B18);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v20 = sub_21D7C08AC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    v21 = a3[9];
    v22 = &a2[v21];
    v23 = &a1[v21];
    sub_21CDBDA44((uint64_t)&a1[v21], &qword_253F65B00);
    v24 = *((_OWORD *)v22 + 1);
    *(_OWORD *)v23 = *(_OWORD *)v22;
    *((_OWORD *)v23 + 1) = v24;
    *(_OWORD *)(v23 + 25) = *(_OWORD *)(v22 + 25);
  }
  v25 = a3[10];
  v26 = &a1[v25];
  v27 = &a2[v25];
  *(_QWORD *)&a1[v25] = *(_QWORD *)&a2[v25];
  swift_release();
  *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
  v28 = a3[11];
  v29 = &a1[v28];
  v30 = &a2[v28];
  v31 = v30[16];
  *(_OWORD *)v29 = *(_OWORD *)v30;
  v29[16] = v31;
  sub_21CE09DA4();
  return a1;
}

uint64_t sub_21CE655E0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_21CE655EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_98();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F65BB8);
    OUTLINED_FUNCTION_113();
    if (v9)
    {
      v7 = v6;
      v8 = a3[5];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_25532FFC8);
      OUTLINED_FUNCTION_113();
      if (v9)
      {
        v7 = v10;
        v8 = a3[7];
      }
      else
      {
        v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330CF0);
        v8 = a3[8];
      }
    }
    OUTLINED_FUNCTION_16_3(a1 + v8, a2, v7);
  }
}

uint64_t sub_21CE65694()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_21CE656A0(_QWORD *a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  if (a3 == 0x7FFFFFFF)
  {
    *a1 = (a2 - 1);
    OUTLINED_FUNCTION_98();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F65BB8);
    OUTLINED_FUNCTION_53_2();
    if (v10)
    {
      v8 = v7;
      v9 = a4[5];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_25532FFC8);
      OUTLINED_FUNCTION_53_2();
      if (v10)
      {
        v8 = v11;
        v9 = a4[7];
      }
      else
      {
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330CF0);
        v9 = a4[8];
      }
    }
    OUTLINED_FUNCTION_17_2((uint64_t)a1 + v9, a2, a2, v8);
  }
}

void sub_21CE65744()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_21CE236D8();
  if (v0 <= 0x3F)
  {
    sub_21CE65840(319, (unint64_t *)&qword_253F65B68, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
    {
      sub_21CE65840(319, (unint64_t *)&qword_253F65B20, (uint64_t (*)(uint64_t))MEMORY[0x24BEC65F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_21CE65840(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
  OUTLINED_FUNCTION_98();
}

unint64_t sub_21CE65894()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_2553317B8;
  if (!qword_2553317B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553316C0);
    v2 = sub_21CE65918();
    sub_21CE553B0((uint64_t)&qword_253F66DC0);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_2553317B8);
  }
  return result;
}

unint64_t sub_21CE65918()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  _QWORD v5[4];

  result = qword_2553317C0;
  if (!qword_2553317C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553316B8);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553317C8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553317D0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553316A8);
    sub_21CE61848((uint64_t)&qword_2553317D8);
    swift_getOpaqueTypeConformance2();
    v5[2] = v2;
    v5[3] = swift_getOpaqueTypeConformance2();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_21CE553B0((uint64_t)&qword_253F66DC0);
    v5[0] = OpaqueTypeConformance2;
    v5[1] = v4;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_2553317C0);
  }
  return result;
}

unint64_t sub_21CE65A44()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[6];

  result = qword_2553317E0;
  if (!qword_2553317E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553316A0);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255331690);
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F61BB0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255331688);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F61128);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255331680);
    sub_21CE553B0((uint64_t)&unk_2553316C8);
    swift_getOpaqueTypeConformance2();
    sub_21CE612D4((uint64_t)&unk_253F61130);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_21CE612D4((uint64_t)&unk_253F61BB8);
    v8[2] = v2;
    v8[3] = v3;
    v8[4] = OpaqueTypeConformance2;
    v8[5] = v5;
    v6 = swift_getOpaqueTypeConformance2();
    sub_21CE553B0((uint64_t)&unk_253F66D70);
    v8[0] = v6;
    v8[1] = v7;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v8);
    atomic_store(result, (unint64_t *)&qword_2553317E0);
  }
  return result;
}

uint64_t sub_21CE65BE0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21CE65BF0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21CE65C00()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_21CE65C10()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_253F66428;
  if (!qword_253F66428)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66430);
    v2 = sub_21CE65C94();
    sub_21CE553B0((uint64_t)&qword_253F66D90);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_253F66428);
  }
  return result;
}

unint64_t sub_21CE65C94()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_253F662F8;
  if (!qword_253F662F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66300);
    v2 = sub_21CE61968();
    sub_21CDF81B4((uint64_t)&qword_253F66DE0);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_253F662F8);
  }
  return result;
}

uint64_t sub_21CE65D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a4)
  {
    swift_retain();
    swift_retain();
    return sub_21D7C4C20();
  }
  return result;
}

uint64_t sub_21CE65D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a4)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

unint64_t sub_21CE65D98()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_2553317F0;
  if (!qword_2553317F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553317E8);
    v2 = sub_21CE65E1C();
    sub_21CE553B0((uint64_t)&qword_253F66D80);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_2553317F0);
  }
  return result;
}

unint64_t sub_21CE65E1C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_253F65F10;
  if (!qword_253F65F10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F65F18);
    sub_21CE553B0((uint64_t)&unk_253F66DD0);
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_253F65F10);
  }
  return result;
}

uint64_t sub_21CE65EA0()
{
  uint64_t v0;

  if ((unint64_t)(*(_QWORD *)(v0 + 24) - 1) >= 8)
    swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_21CE65ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  sub_21D7C4C20();
  OUTLINED_FUNCTION_0();
}

ValueMetadata *type metadata accessor for MarkedStringFragment()
{
  return &type metadata for MarkedStringFragment;
}

uint64_t sub_21CE65F14()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66430);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F67D10);
  sub_21CE65C10();
  sub_21CE553B0((uint64_t)&unk_253F67D08);
  return OUTLINED_FUNCTION_4_0();
}

void sub_21CE65F98()
{
  sub_21CE553B0((uint64_t)&unk_253F67090);
}

uint64_t sub_21CE65FC4()
{
  sub_21CDF8160();
  return OUTLINED_FUNCTION_4_0();
}

uint64_t sub_21CE65FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if ((a5 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t destroy for ListViewStylingViewModifier(uint64_t a1)
{
  return sub_21CE6601C(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t sub_21CE6601C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if ((a5 & 1) == 0)
    return swift_release();
  return result;
}

uint64_t initializeWithCopy for ListViewStylingViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_BYTE *)(a2 + 40);
  sub_21CE65FFC(v3, v4, v5, v6, v7);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = v7;
  return a1;
}

uint64_t assignWithCopy for ListViewStylingViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_BYTE *)(a2 + 40);
  sub_21CE65FFC(v3, v4, v5, v6, v7);
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = v7;
  sub_21CE6601C(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for ListViewStylingViewModifier(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_BYTE *)(a2 + 40);
  v4 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_BYTE *)(a1 + 40);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = v3;
  sub_21CE6601C(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ListViewStylingViewModifier(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && a1[41])
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *a1;
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ListViewStylingViewModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ListViewStylingViewModifier()
{
  return &type metadata for ListViewStylingViewModifier;
}

uint64_t sub_21CE6620C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_21CE6621C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_253F65EE0;
  if (!qword_253F65EE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F65EE8);
    sub_21CE553B0((uint64_t)&unk_253F66B20);
    v3[0] = v2;
    v3[1] = sub_21CE662A0();
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_253F65EE0);
  }
  return result;
}

unint64_t sub_21CE662A0()
{
  unint64_t result;

  result = qword_253F66BC8;
  if (!qword_253F66BC8)
  {
    result = MEMORY[0x2207938C0](MEMORY[0x24BDF08D8], MEMORY[0x24BDF08E8]);
    atomic_store(result, (unint64_t *)&qword_253F66BC8);
  }
  return result;
}

uint64_t sub_21CE662DC(uint64_t a1)
{
  sub_21CE65FFC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return a1;
}

uint64_t sub_21CE66310(uint64_t a1)
{
  sub_21CE6601C(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  return a1;
}

unint64_t sub_21CE66348()
{
  unint64_t result;
  uint64_t v1;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  _QWORD v4[4];

  result = qword_253F65FE0;
  if (!qword_253F65FE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F65FE8);
    v4[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F65EE8);
    v4[3] = sub_21CE6621C();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_21CE553B0((uint64_t)&unk_253F66A90);
    v4[0] = OpaqueTypeConformance2;
    v4[1] = v3;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_253F65FE0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_32()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_2_29(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_3_18(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_6_18()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v3 - 152);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 - 184), v1);
  return sub_21CF5DEE8(v2 & 1, v1, v4, v0);
}

uint64_t OUTLINED_FUNCTION_8_13()
{
  return sub_21D7C0024();
}

uint64_t OUTLINED_FUNCTION_9_16()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t OUTLINED_FUNCTION_10_13(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_11_16()
{
  return 0;
}

void OUTLINED_FUNCTION_13_9(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;

  sub_21CDC314C(v1 + a1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_18_6()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_19_7()
{
  uint64_t v0;

  return sub_21D4D0980(v0);
}

void OUTLINED_FUNCTION_20_5(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_21CDBDA44(v2, a2);
}

uint64_t OUTLINED_FUNCTION_23_4()
{
  return sub_21D7C000C();
}

void OUTLINED_FUNCTION_24_5(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;

  sub_21CDC314C(v1 + a1, v2, v3);
}

void OUTLINED_FUNCTION_26_7()
{
  uint64_t *v0;
  uint64_t v1;

  sub_21CDBDA44(v1 - 144, v0);
}

void OUTLINED_FUNCTION_27_7(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  sub_21CDD3198(v1, a1, v2);
}

uint64_t OUTLINED_FUNCTION_29_6()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_31_6()
{
  uint64_t v0;

  return sub_21D4D0980(v0);
}

uint64_t OUTLINED_FUNCTION_32_7()
{
  return sub_21D7C5970();
}

void OUTLINED_FUNCTION_35_6(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_21CDC314C(a1, v3 - 144, a3);
}

uint64_t OUTLINED_FUNCTION_36_4()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_39_5(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_21CDC314C(v3 - 144, v3 - 184, a3);
}

void OUTLINED_FUNCTION_40_4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  sub_21CDC314C(a1, v2 - 144, v1);
}

void OUTLINED_FUNCTION_42_5(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_21CDBDA1C(v2, a2);
}

uint64_t OUTLINED_FUNCTION_44_6()
{
  return swift_deallocObject();
}

double OUTLINED_FUNCTION_46_5()
{
  uint64_t v0;
  double result;

  *(_QWORD *)(v0 + 32) = 0;
  result = 0.0;
  *(_OWORD *)v0 = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_48_4()
{
  return sub_21D7C5268();
}

void OUTLINED_FUNCTION_50_6()
{
  uint64_t *v0;
  uint64_t v1;

  sub_21CDBDA44(v1, v0);
}

uint64_t OUTLINED_FUNCTION_53_3()
{
  return type metadata accessor for TrackLockup();
}

void OUTLINED_FUNCTION_56_3(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_21CDBDA1C(v2, a2);
}

uint64_t OUTLINED_FUNCTION_57_4()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_58_4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 104) = a1;
  return __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
}

void OUTLINED_FUNCTION_61_3()
{
  sub_21D03888C();
}

uint64_t OUTLINED_FUNCTION_63_4()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 184);
}

uint64_t OUTLINED_FUNCTION_64_4()
{
  return sub_21D7C4C20();
}

uint64_t OUTLINED_FUNCTION_65_4()
{
  return swift_bridgeObjectRelease();
}

_QWORD *OUTLINED_FUNCTION_66_4()
{
  uint64_t v0;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 - 104), *(_QWORD *)(v0 - 80));
}

void OUTLINED_FUNCTION_67_2(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_21CDBDA44(v2 - 144, a2);
}

void OUTLINED_FUNCTION_68_3()
{
  JUMPOUT(0x2207923E4);
}

void OUTLINED_FUNCTION_70_3(uint64_t a1)
{
  sub_21CDF81B4(a1);
}

void OUTLINED_FUNCTION_71_2(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_21CDBDA1C(v2, a2);
}

uint64_t OUTLINED_FUNCTION_73_3()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

void OUTLINED_FUNCTION_77_3(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_21CDBDA1C(v2, a2);
}

void OUTLINED_FUNCTION_79_3(uint64_t a1)
{
  uint64_t *v1;

  sub_21CDBDA44(a1, v1);
}

uint64_t OUTLINED_FUNCTION_80_3()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_82_3()
{
  return type metadata accessor for TopSearchLockup();
}

uint64_t OUTLINED_FUNCTION_84_3()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_85_2()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TopSearchLockupView(0) - 8) + 80);
  return v0 + ((v1 + 16) & ~v1);
}

uint64_t OUTLINED_FUNCTION_94_3()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_98_2()
{
  return swift_getEnumCaseMultiPayload();
}

void OUTLINED_FUNCTION_99_2()
{
  sub_21D03888C();
}

uint64_t InlineBubbleTipProvider.InlineBubbleTip.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t InlineBubbleTipProvider.InlineBubbleTip.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_21CE66828@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_21CE66898();
  *a1 = v3;
  return result;
}

uint64_t sub_21CE66860(unint64_t *a1)
{
  sub_21CE67384(*a1);
  return sub_21CE66904();
}

uint64_t sub_21CE66898()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21D7C0C00();
  swift_release();
  return swift_release();
}

uint64_t sub_21CE66904()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_21D7C0C0C();
}

void sub_21CE66970(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553317F8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  sub_21CE66A4C((uint64_t)v4);
}

uint64_t sub_21CE669F4()
{
  OUTLINED_FUNCTION_0_30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5E238);
  sub_21D7C0BDC();
  return swift_endAccess();
}

void sub_21CE66A4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553317F8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_63_2();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, a1, v3);
  OUTLINED_FUNCTION_0_30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5E238);
  sub_21D7C0BE8();
  OUTLINED_FUNCTION_4_19();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  OUTLINED_FUNCTION_43_0();
}

uint64_t sub_21CE66AF8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD v16[2];

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5E238);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v12 = a1[1];
  v13 = v3 + OBJC_IVAR____TtC7MusicUI23InlineBubbleTipProvider__placement;
  v16[1] = 0x8000000000000000;
  sub_21D7C0BD0();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v13, v10, v7);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC7MusicUI23InlineBubbleTipProvider_requestManager) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC7MusicUI23InlineBubbleTipProvider_cancellables) = MEMORY[0x24BEE4B08];
  v14 = (_QWORD *)(v3 + OBJC_IVAR____TtC7MusicUI23InlineBubbleTipProvider_placementID);
  *v14 = v11;
  v14[1] = v12;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC7MusicUI23InlineBubbleTipProvider_context) = a2;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC7MusicUI23InlineBubbleTipProvider_bootstrapState) = a3;
  swift_retain();
  sub_21CE66C7C();
  swift_release();
  return v3;
}

uint64_t sub_21CE66C20()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC7MusicUI23InlineBubbleTipProvider_requestManager))
  {
    swift_retain();
    sub_21CE671C8();
    return swift_release();
  }
  return result;
}

uint64_t sub_21CE66C64(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC7MusicUI23InlineBubbleTipProvider_requestManager) = a1;
  return swift_release();
}

void sub_21CE66C7C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5E0E8);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_63_2();
  OUTLINED_FUNCTION_0_30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5E1F0);
  sub_21D7C0BDC();
  OUTLINED_FUNCTION_4_19();
  sub_21CE028D8(&qword_253F5E0E0, &qword_253F5E0E8, MEMORY[0x24BDB9EE8]);
  swift_retain();
  sub_21D7C0C84();
  swift_release();
  OUTLINED_FUNCTION_3_19(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_0_30();
  sub_21D7C0B64();
  OUTLINED_FUNCTION_4_19();
  swift_release();
  OUTLINED_FUNCTION_43_0();
}

void sub_21CE66D90(unint64_t *a1)
{
  unint64_t v1;
  id v2;
  id v3;

  v1 = *a1;
  if ((~*a1 & 0xF000000000000007) != 0)
  {
    if (v1 >> 62)
    {
      if (v1 >> 62 == 1)
      {
        v2 = (id)(v1 & 0x3FFFFFFFFFFFFFFFLL);
        v3 = (id)(v1 & 0x3FFFFFFFFFFFFFFFLL);
        sub_21CE66904();

      }
    }
    else
    {
      sub_21CE67574(*a1);
      sub_21CE66E48();
      sub_21CE675C0(v1);
    }
  }
}

uint64_t sub_21CE66E48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5E0C8);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5DF70);
  v8 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_63_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F601D8);
  swift_allocObject();
  sub_21D7C4C20();
  swift_retain();
  sub_21CF5FC34();
  OUTLINED_FUNCTION_0_30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5E1C8);
  sub_21D7C0BDC();
  swift_endAccess();
  sub_21CE028D8(&qword_253F5E0C0, &qword_253F5E0C8, MEMORY[0x24BDB9EE8]);
  sub_21D7C0C48();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  swift_getKeyPath();
  v9 = v0;
  sub_21CE028D8(&qword_253F5DF68, &qword_253F5DF70, MEMORY[0x24BDB96C0]);
  sub_21D7C0C90();
  swift_release();
  OUTLINED_FUNCTION_3_19(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  OUTLINED_FUNCTION_0_30();
  sub_21D7C0B64();
  swift_endAccess();
  swift_release();
  v6 = swift_retain();
  sub_21CE66C64(v6);
  return swift_release();
}

uint64_t sub_21CE67080@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  if (*a1)
  {
    type metadata accessor for InlineBubbleTipProvider.InlineBubbleTip();
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = v3;
  }
  else
  {
    v4 = 0x8000000000000008;
  }
  *a2 = v4;
  return swift_retain();
}

uint64_t InlineBubbleTipProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC7MusicUI23InlineBubbleTipProvider__placement;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5E238);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t InlineBubbleTipProvider.__deallocating_deinit()
{
  InlineBubbleTipProvider.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_21CE6718C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for InlineBubbleTipProvider();
  result = sub_21D7C0B94();
  *a1 = result;
  return result;
}

void sub_21CE671C8()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 16) != 2)
    sub_21CF600D0();
}

uint64_t sub_21CE671DC()
{
  return sub_21CE669F4();
}

uint64_t sub_21CE67200()
{
  return type metadata accessor for InlineBubbleTipProvider();
}

uint64_t type metadata accessor for InlineBubbleTipProvider()
{
  uint64_t result;

  result = qword_253F62108;
  if (!qword_253F62108)
    return swift_getSingletonMetadata();
  return result;
}

void sub_21CE67240()
{
  unint64_t v0;

  sub_21CE6730C();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for InlineBubbleTipProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InlineBubbleTipProvider.placement.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of InlineBubbleTipProvider.$placement.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of InlineBubbleTipProvider.onAppear()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

void sub_21CE6730C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_253F5E240)
  {
    v0 = sub_21D7C0C24();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_253F5E240);
  }
}

unint64_t *initializeBufferWithCopyOfBuffer for InlineBubbleTipProvider.Placement(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  sub_21CE67384(*a2);
  *a1 = v3;
  return a1;
}

unint64_t sub_21CE67384(unint64_t result)
{
  if (result >> 62 == 1)
    return (unint64_t)(id)(result & 0x3FFFFFFFFFFFFFFFLL);
  if (!(result >> 62))
    return swift_retain();
  return result;
}

void destroy for InlineBubbleTipProvider.Placement(unint64_t *a1)
{
  sub_21CE673AC(*a1);
}

void sub_21CE673AC(unint64_t a1)
{
  if (a1 >> 62 == 1)
  {

  }
  else if (!(a1 >> 62))
  {
    swift_release();
  }
}

unint64_t *assignWithCopy for InlineBubbleTipProvider.Placement(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a2;
  sub_21CE67384(*a2);
  v4 = *a1;
  *a1 = v3;
  sub_21CE673AC(v4);
  return a1;
}

unint64_t *assignWithTake for InlineBubbleTipProvider.Placement(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  sub_21CE673AC(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for InlineBubbleTipProvider.Placement(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7E && *(_BYTE *)(a1 + 8))
    {
      v2 = *(_DWORD *)a1 + 125;
    }
    else
    {
      v2 = (((*(_QWORD *)a1 >> 57) >> 5) | (4 * ((*(_QWORD *)a1 >> 57) & 0x18 | *(_QWORD *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x7D)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for InlineBubbleTipProvider.Placement(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7D)
  {
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_21CE674D8(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 62;
  if (v1 <= 1)
    return v1;
  else
    return (*a1 >> 3) + 2;
}

_QWORD *sub_21CE674F4(_QWORD *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_21CE67504(unint64_t *result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  if (a2 < 2)
  {
    v2 = *result & 0xFFFFFFFFFFFFFF8;
    v3 = a2 << 62;
  }
  else
  {
    v2 = 8 * (a2 - 2);
    v3 = 0x8000000000000000;
  }
  *result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for InlineBubbleTipProvider.Placement()
{
  return &type metadata for InlineBubbleTipProvider.Placement;
}

uint64_t type metadata accessor for InlineBubbleTipProvider.InlineBubbleTip()
{
  return objc_opt_self();
}

uint64_t method lookup function for InlineBubbleTipProvider.InlineBubbleTip()
{
  return swift_lookUpClassMethod();
}

void sub_21CE6756C(unint64_t *a1)
{
  sub_21CE66D90(a1);
}

unint64_t sub_21CE67574(unint64_t result)
{
  id v1;

  if (result >> 62)
  {
    if (result >> 62 != 1)
      return result;
    v1 = (id)(result & 0x3FFFFFFFFFFFFFFFLL);
  }
  return swift_retain();
}

unint64_t sub_21CE675C0(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return sub_21CE675D4(result);
  return result;
}

unint64_t sub_21CE675D4(unint64_t result)
{
  if (result >> 62)
  {
    if (result >> 62 != 1)
      return result;

  }
  return swift_release();
}

void sub_21CE67620()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 16) != 2)
    sub_21CF600E4();
}

uint64_t OUTLINED_FUNCTION_0_30()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_3_19@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_4_19()
{
  return swift_endAccess();
}

uint64_t type metadata accessor for LibraryActionImplementation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LibraryActionImplementation);
}

void sub_21CE67664()
{
  JUMPOUT(0x2207938C0);
}

uint64_t sub_21CE67674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;

  v26 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F679A0);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v10);
  v11 = OUTLINED_FUNCTION_11_16();
  v12 = type metadata accessor for LibraryAction(v11, a3, a4, a5);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v25 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v25 - v15, a1, v12);
  v17 = (*(unsigned __int8 *)(v13 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v18 = (char *)swift_allocObject();
  *((_QWORD *)v18 + 2) = a3;
  *((_QWORD *)v18 + 3) = a4;
  *((_QWORD *)v18 + 4) = a5;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v18[v17], v16, v12);
  *(_QWORD *)&v18[(v14 + v17 + 7) & 0xFFFFFFFFFFFFFFF8] = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F67768);
  swift_retain();
  v19 = sub_21D7C4EB4();
  v20 = sub_21D7C5490();
  OUTLINED_FUNCTION_58_2(v5, v21, v22, v20);
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = 0;
  v23[3] = 0;
  v23[4] = &unk_255331808;
  v23[5] = v18;
  v23[6] = v19;
  swift_retain();
  sub_21D251F5C(v5, (uint64_t)&unk_255330468, (uint64_t)v23);
  swift_release();
  return v19;
}

uint64_t sub_21CE6781C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6[12] = a5;
  v6[13] = a6;
  v6[10] = a3;
  v6[11] = a4;
  v6[8] = a1;
  v6[9] = a2;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F67500);
  v6[14] = v10;
  v6[15] = *(_QWORD *)(v10 - 8);
  v6[16] = swift_task_alloc();
  v11 = sub_21D7C432C();
  v6[17] = v11;
  v6[18] = *(_QWORD *)(v11 - 8);
  v6[19] = swift_task_alloc();
  v6[20] = type metadata accessor for NoticeAction(0);
  v6[21] = swift_task_alloc();
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F67510);
  v6[22] = v12;
  v6[23] = *(_QWORD *)(v12 - 8);
  v6[24] = swift_task_alloc();
  v6[25] = *(_QWORD *)(a4 - 8);
  v6[26] = swift_task_alloc();
  v6[27] = swift_task_alloc();
  v6[28] = swift_task_alloc();
  v6[29] = swift_task_alloc();
  v6[30] = swift_task_alloc();
  v13 = type metadata accessor for LibraryActionType(0, a4, a5, a6);
  v6[31] = v13;
  v6[32] = *(_QWORD *)(v13 - 8);
  v6[33] = swift_task_alloc();
  return swift_task_switch();
}

void sub_21CE67998()
{
  uint64_t *v0;
  char *v1;

  OUTLINED_FUNCTION_15_3(v0[33], v0[9], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0[32] + 16));
  v1 = (char *)sub_21CE679F4 + 4 * byte_21D7CE840[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_21CE679F4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v1 = v0[30];
  v2 = v0[25];
  v3 = v0[11];
  OUTLINED_FUNCTION_15_3(v1, v0[33], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
  OUTLINED_FUNCTION_55_4();
  v0[34] = OUTLINED_FUNCTION_47_5();
  sub_21D202EE0(v3, v3);
  swift_allocObject();
  v4 = sub_21D7C5340();
  OUTLINED_FUNCTION_15_3(v5, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  v6 = sub_21D201518(v4);
  v0[35] = v6;
  v0[7] = v6;
  v7 = (_QWORD *)swift_task_alloc();
  v0[36] = v7;
  v8 = sub_21D7C540C();
  MEMORY[0x2207938C0](MEMORY[0x24BEE12C8], v8);
  *v7 = v0;
  v7[1] = sub_21CE67C54;
  return sub_21D7C32B8();
}

uint64_t sub_21CE67AF4()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_38_7(v0[29], v0[33], v0[25]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[40] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_21CE67F40;
  v2 = OUTLINED_FUNCTION_54_3(v0[29]);
  return sub_21CE68468(v2, 0, v3, v4, v5, v6);
}

uint64_t sub_21CE67B90()
{
  uint64_t *v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_38_7(v0[27], v0[33], v0[25]);
  OUTLINED_FUNCTION_55_4();
  v0[44] = OUTLINED_FUNCTION_47_5();
  v1 = (_QWORD *)swift_task_alloc();
  v0[45] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_21CE680A8;
  OUTLINED_FUNCTION_54_3(v0[27]);
  return sub_21D7C3300();
}

uint64_t sub_21CE67BF4()
{
  uint64_t *v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_38_7(v0[26], v0[33], v0[25]);
  OUTLINED_FUNCTION_55_4();
  v0[47] = OUTLINED_FUNCTION_47_5();
  v1 = (_QWORD *)swift_task_alloc();
  v0[48] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_21CE68164;
  OUTLINED_FUNCTION_54_3(v0[26]);
  return sub_21D7C3204();
}

uint64_t sub_21CE67C54()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 296) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  if (!v0)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_23_5();
  return swift_task_switch();
}

uint64_t sub_21CE67CEC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v9;

  OUTLINED_FUNCTION_3_20();
  v1 = v0[21];
  v2 = v0[20];
  v4 = v0[15];
  v3 = v0[16];
  v5 = v0[14];
  type metadata accessor for ObjectGraph();
  sub_21D7C4D64();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25532F8A0);
  __swift_storeEnumTagSinglePayload(v1, 3, 11, v6);
  sub_21D7C42D8();
  v0[5] = v2;
  sub_21CDB47E8((unint64_t *)&qword_25532F8A8, type metadata accessor for NoticeAction, (uint64_t)&unk_21D7EAAF0);
  v0[6] = v7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 2);
  sub_21CE265C8(v1, (uint64_t)boxed_opaque_existential_1, type metadata accessor for NoticeAction);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v3, *MEMORY[0x24BE5D0A0], v5);
  v9 = (_QWORD *)swift_task_alloc();
  v0[38] = (uint64_t)v9;
  *v9 = v0;
  v9[1] = sub_21CE67E28;
  return sub_21D7C4524();
}

uint64_t sub_21CE67E28()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 120);
  *(_QWORD *)(*v1 + 312) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_71_0(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  if (!v0)
  {
    OUTLINED_FUNCTION_21_8(*(_QWORD *)(v2 + 144));
    OUTLINED_FUNCTION_66_5();
  }
  OUTLINED_FUNCTION_23_5();
  return OUTLINED_FUNCTION_34_6();
}

uint64_t sub_21CE67EAC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_3_20();
  v1 = v0[30];
  v2 = v0[25];
  v3 = v0[23];
  sub_21CDBDA1C(v0[21], type metadata accessor for NoticeAction);
  OUTLINED_FUNCTION_71_0(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_119(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_2_30();
  OUTLINED_FUNCTION_87_0(v4);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_22_1();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_21_1();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_42_6();
  v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_44();
  return OUTLINED_FUNCTION_1_29(v5);
}

uint64_t sub_21CE67F40()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_41_7();
  OUTLINED_FUNCTION_65_5();
  *(_QWORD *)(v1 + 328) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_23_5();
  return OUTLINED_FUNCTION_6_8();
}

uint64_t sub_21CE67F8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_3_20();
  OUTLINED_FUNCTION_9_17(*(_QWORD *)(v0 + 232));
  OUTLINED_FUNCTION_2_30();
  OUTLINED_FUNCTION_87_0(v1);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_22_1();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_21_1();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_42_6();
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_44();
  return OUTLINED_FUNCTION_1_29(v2);
}

uint64_t sub_21CE67FF4()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_41_7();
  OUTLINED_FUNCTION_65_5();
  *(_QWORD *)(v1 + 344) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_23_5();
  return OUTLINED_FUNCTION_6_8();
}

uint64_t sub_21CE68040()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_3_20();
  OUTLINED_FUNCTION_9_17(*(_QWORD *)(v0 + 224));
  OUTLINED_FUNCTION_2_30();
  OUTLINED_FUNCTION_87_0(v1);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_22_1();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_21_1();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_42_6();
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_44();
  return OUTLINED_FUNCTION_1_29(v2);
}

uint64_t sub_21CE680A8()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_41_7();
  OUTLINED_FUNCTION_65_5();
  *(_QWORD *)(v1 + 368) = v0;
  swift_task_dealloc();
  swift_release();
  OUTLINED_FUNCTION_23_5();
  return OUTLINED_FUNCTION_7_0();
}

uint64_t sub_21CE680FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_3_20();
  OUTLINED_FUNCTION_9_17(*(_QWORD *)(v0 + 216));
  OUTLINED_FUNCTION_2_30();
  OUTLINED_FUNCTION_87_0(v1);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_22_1();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_21_1();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_42_6();
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_44();
  return OUTLINED_FUNCTION_1_29(v2);
}

uint64_t sub_21CE68164()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_41_7();
  OUTLINED_FUNCTION_65_5();
  *(_QWORD *)(v1 + 392) = v0;
  swift_task_dealloc();
  swift_release();
  OUTLINED_FUNCTION_23_5();
  return OUTLINED_FUNCTION_7_0();
}

uint64_t sub_21CE681B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_3_20();
  OUTLINED_FUNCTION_10_14(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 200));
  OUTLINED_FUNCTION_2_30();
  OUTLINED_FUNCTION_87_0(v1);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_22_1();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_21_1();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_42_6();
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_44();
  return OUTLINED_FUNCTION_1_29(v2);
}

uint64_t sub_21CE68220()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_3_20();
  OUTLINED_FUNCTION_9_17(*(_QWORD *)(v0 + 240));
  OUTLINED_FUNCTION_1_33();
  OUTLINED_FUNCTION_22_1();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_21_1();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_18_1();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_50_7();
  return OUTLINED_FUNCTION_1_29(v1);
}

uint64_t sub_21CE68278()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_3_20();
  v1 = v0[30];
  v2 = v0[24];
  v3 = v0[25];
  v4 = v0[23];
  sub_21CDBDA1C(v0[21], type metadata accessor for NoticeAction);
  OUTLINED_FUNCTION_119(v2, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_25_5(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_66_5();
  OUTLINED_FUNCTION_1_33();
  OUTLINED_FUNCTION_22_1();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_21_1();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_18_1();
  v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_50_7();
  return OUTLINED_FUNCTION_1_29(v5);
}

uint64_t sub_21CE68308()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_3_20();
  OUTLINED_FUNCTION_9_17(*(_QWORD *)(v0 + 232));
  OUTLINED_FUNCTION_1_33();
  OUTLINED_FUNCTION_22_1();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_21_1();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_18_1();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_50_7();
  return OUTLINED_FUNCTION_1_29(v1);
}

uint64_t sub_21CE68360()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_3_20();
  OUTLINED_FUNCTION_9_17(*(_QWORD *)(v0 + 224));
  OUTLINED_FUNCTION_1_33();
  OUTLINED_FUNCTION_22_1();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_21_1();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_18_1();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_50_7();
  return OUTLINED_FUNCTION_1_29(v1);
}

uint64_t sub_21CE683B8()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_3_20();
  OUTLINED_FUNCTION_9_17(*(_QWORD *)(v0 + 216));
  OUTLINED_FUNCTION_1_33();
  OUTLINED_FUNCTION_22_1();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_21_1();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_18_1();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_50_7();
  return OUTLINED_FUNCTION_1_29(v1);
}

uint64_t sub_21CE68410()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_3_20();
  OUTLINED_FUNCTION_10_14(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 200));
  OUTLINED_FUNCTION_1_33();
  OUTLINED_FUNCTION_22_1();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_21_1();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_18_1();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_50_7();
  return OUTLINED_FUNCTION_1_29(v1);
}

uint64_t sub_21CE68468(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v6 + 640) = a6;
  *(_QWORD *)(v6 + 632) = a5;
  *(_QWORD *)(v6 + 624) = a4;
  *(_QWORD *)(v6 + 616) = a3;
  *(_BYTE *)(v6 + 968) = a2;
  *(_QWORD *)(v6 + 608) = a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F67500);
  *(_QWORD *)(v6 + 648) = v8;
  *(_QWORD *)(v6 + 656) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v6 + 664) = OUTLINED_FUNCTION_1_8();
  v9 = sub_21D7C432C();
  *(_QWORD *)(v6 + 672) = v9;
  *(_QWORD *)(v6 + 680) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v6 + 688) = OUTLINED_FUNCTION_1_8();
  *(_QWORD *)(v6 + 696) = type metadata accessor for PresentConfirmationDialogAction();
  *(_QWORD *)(v6 + 704) = OUTLINED_FUNCTION_1_8();
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F67510);
  *(_QWORD *)(v6 + 712) = v10;
  *(_QWORD *)(v6 + 720) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v6 + 728) = OUTLINED_FUNCTION_1_8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65AD0);
  *(_QWORD *)(v6 + 736) = swift_task_alloc();
  *(_QWORD *)(v6 + 744) = swift_task_alloc();
  v11 = sub_21D7BF9A0();
  *(_QWORD *)(v6 + 752) = v11;
  *(_QWORD *)(v6 + 760) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v6 + 768) = OUTLINED_FUNCTION_1_8();
  v12 = *(_QWORD *)(a4 - 8);
  *(_QWORD *)(v6 + 776) = v12;
  *(_QWORD *)(v6 + 784) = *(_QWORD *)(v12 + 64);
  *(_QWORD *)(v6 + 792) = swift_task_alloc();
  v13 = _s6ActionVMa();
  *(_QWORD *)(v6 + 800) = v13;
  *(_QWORD *)(v6 + 808) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v6 + 816) = OUTLINED_FUNCTION_28_6();
  *(_QWORD *)(v6 + 824) = OUTLINED_FUNCTION_31_7();
  *(_QWORD *)(v6 + 832) = OUTLINED_FUNCTION_31_7();
  v14 = sub_21D7C4BE4();
  *(_QWORD *)(v6 + 840) = v14;
  *(_QWORD *)(v6 + 848) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v6 + 856) = OUTLINED_FUNCTION_1_8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255331818);
  *(_QWORD *)(v6 + 864) = OUTLINED_FUNCTION_1_8();
  v15 = sub_21D7C40F8();
  *(_QWORD *)(v6 + 872) = v15;
  *(_QWORD *)(v6 + 880) = *(_QWORD *)(v15 - 8);
  *(_QWORD *)(v6 + 888) = OUTLINED_FUNCTION_28_6();
  *(_QWORD *)(v6 + 896) = OUTLINED_FUNCTION_31_7();
  *(_QWORD *)(v6 + 904) = OUTLINED_FUNCTION_31_7();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
  *(_QWORD *)(v6 + 912) = OUTLINED_FUNCTION_1_8();
  v16 = sub_21D7C4314();
  *(_QWORD *)(v6 + 920) = v16;
  *(_QWORD *)(v6 + 928) = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v6 + 936) = OUTLINED_FUNCTION_28_6();
  *(_QWORD *)(v6 + 944) = OUTLINED_FUNCTION_31_7();
  OUTLINED_FUNCTION_23_5();
  return OUTLINED_FUNCTION_7_0();
}

uint64_t sub_21CE68658()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, _QWORD);
  void (*v19)(uint64_t, uint64_t, uint64_t);
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(unint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  _OWORD *v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  void *v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v105;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t *v124;
  const void *v125;
  _QWORD *v126;
  uint64_t v127;
  void (*v128)(uint64_t, unint64_t, uint64_t);
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  const void *v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  const void *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  __int128 v155;
  void (*v156)(uint64_t, uint64_t);
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  __int128 v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char v166;
  char v167;
  char v168;
  char v169;
  uint64_t v170;

  v2 = *(_QWORD *)(v0 + 912);
  v3 = sub_21D7C3048();
  v5 = v4;
  v166 = 2;
  v167 = 7;
  v168 = 7;
  v6 = sub_21D7BF754();
  OUTLINED_FUNCTION_58_2(v2, v7, v8, v6);
  v169 = 49;
  sub_21D7AB81C(v3, v5, (uint64_t)&v166, (uint64_t)&v167, 0, (uint64_t)&v168, v2, (uint64_t)&v169, 0, 0, v113, v114, v116, v118, v121, v0 + 376, v0 + 304, v0 + 160, v127,
    v130,
    v135,
    v140);
  swift_bridgeObjectRelease();
  sub_21CDBDA44(v2, (uint64_t *)&unk_253F5DD10);
  v9 = sub_21D7C42F0();
  v10 = *(_QWORD *)(v9 + 16);
  v165 = v0;
  if (v10)
  {
    v149 = v0 + 576;
    v11 = *(_QWORD *)(v0 + 880);
    v141 = *(_QWORD *)(v0 + 848);
    v170 = MEMORY[0x24BEE4AF8];
    sub_21D281330();
    v136 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v12 = v9 + v136;
    v145 = v11;
    v128 = *(void (**)(uint64_t, unint64_t, uint64_t))(v11 + 16);
    v131 = *(_QWORD *)(v11 + 72);
    v13 = v170;
    do
    {
      v158 = *(_QWORD *)(v0 + 904);
      v161 = v10;
      v14 = *(_QWORD *)(v0 + 896);
      v15 = *(_QWORD *)(v0 + 888);
      v16 = *(_QWORD *)(v0 + 872);
      v1 = *(_QWORD *)(v0 + 864);
      v17 = *(_QWORD *)(v0 + 856);
      v153 = *(_QWORD *)(v0 + 840);
      v128(v14, v12, v16);
      v128(v15, v14, v16);
      sub_21D7C4BC0();
      v18 = (void (*)(uint64_t, _QWORD))sub_21D7C40E0();
      sub_21D282588();
      v18(v149, 0);
      (*(void (**)(uint64_t, uint64_t))(v141 + 8))(v17, v153);
      sub_21CDBDA44(v1, &qword_255331818);
      v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v145 + 32);
      v19(v158, v15, v16);
      OUTLINED_FUNCTION_119(v14, *(uint64_t (**)(uint64_t, uint64_t))(v145 + 8));
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21D281330();
        v13 = v170;
      }
      v21 = *(_QWORD *)(v13 + 16);
      v20 = *(_QWORD *)(v13 + 24);
      v0 = v165;
      if (v21 >= v20 >> 1)
      {
        OUTLINED_FUNCTION_70_4(v20);
        sub_21D281330();
        v13 = v170;
      }
      v22 = *(_QWORD *)(v165 + 904);
      v23 = *(_QWORD *)(v165 + 872);
      *(_QWORD *)(v13 + 16) = v21 + 1;
      v19(v13 + v136 + v21 * v131, v22, v23);
      v170 = v13;
      v12 += v131;
      v10 = v161 - 1;
    }
    while (v161 != 1);
  }
  swift_bridgeObjectRelease();
  v24 = *(_QWORD *)(v0 + 944);
  v25 = *(_BYTE *)(v0 + 968);
  sub_21D7C42FC();
  if ((v25 & 1) != 0)
  {
    v26 = *(_QWORD *)(v0 + 944);
    v146 = (const void *)(v0 + 232);
    v150 = (_QWORD *)(v0 + 88);
    v117 = (uint64_t *)(v0 + 496);
    v27 = *(_QWORD *)(v0 + 936);
    v28 = *(_QWORD *)(v0 + 928);
    v29 = *(_QWORD *)(v0 + 920);
    v159 = *(char **)(v0 + 832);
    v154 = *(_QWORD *)(v0 + 800);
    v30 = *(_QWORD *)(v0 + 792);
    OUTLINED_FUNCTION_51_4();
    v137 = *(_QWORD *)(v165 + 744);
    v142 = *(_QWORD *)(v165 + 736);
    v115 = *(_QWORD *)(v165 + 640);
    v31 = *(_QWORD *)(v165 + 608);
    v162 = *(_OWORD *)(v165 + 624);
    v32 = sub_21D16287C(0x3Fu);
    v119 = v33;
    v122 = v32;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v27, v26, v29);
    (*(void (**)(uint64_t, uint64_t, _QWORD))(v1 + 16))(v30, v31, v162);
    v34 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
    v0 = v165;
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = v162;
    *(_QWORD *)(v35 + 32) = v115;
    (*(void (**)(unint64_t, uint64_t, _QWORD))(v1 + 32))(v35 + v34, v30, v162);
    *(_QWORD *)(v165 + 520) = sub_21D7C4344();
    *(_QWORD *)(v165 + 528) = MEMORY[0x24BE5CC10];
    __swift_allocate_boxed_opaque_existential_1(v117);
    sub_21D7C4338();
    OUTLINED_FUNCTION_9_10();
    v36 = sub_21D7BF97C();
    v38 = v37;
    v39 = OUTLINED_FUNCTION_67_3();
    *(_QWORD *)(v165 + 88) = v36;
    *(_QWORD *)(v165 + 96) = v38;
    *(_QWORD *)(v165 + 104) = v122;
    *(_QWORD *)(v165 + 112) = v119;
    OUTLINED_FUNCTION_68_4(v39, v165 + 120, &qword_253F67430);
    v40 = sub_21D7C0CD8();
    OUTLINED_FUNCTION_58_2(v137, v41, v42, v40);
    v1 = (uint64_t)v146;
    sub_21CE26554(v150, (uint64_t)v146);
    sub_21CE6A214(v137, v142);
    OUTLINED_FUNCTION_9_10();
    v43 = sub_21D7BF97C();
    v45 = v44;
    OUTLINED_FUNCTION_67_3();
    v46 = (uint64_t *)&v159[*(int *)(v154 + 24)];
    *v46 = v43;
    v46[1] = v45;
    OUTLINED_FUNCTION_74_3(v159, v146);
    sub_21CE26590(v142, (uint64_t)&v159[*(int *)(v154 + 20)], &qword_253F65AD0);
    sub_21CDBDA44(v137, &qword_253F65AD0);
    sub_21CE26600((uint64_t)v150);
    sub_21D0385D8();
    v48 = v47;
    v50 = *(_QWORD *)(v47 + 16);
    v49 = *(_QWORD *)(v47 + 24);
    v24 = v50 + 1;
    if (v50 >= v49 >> 1)
    {
      OUTLINED_FUNCTION_70_4(v49);
      sub_21D0385D8();
      v48 = v112;
    }
    v147 = v48;
    v51 = *(_QWORD *)(v165 + 832);
    v52 = *(_QWORD *)(v165 + 808);
    *(_QWORD *)(v48 + 16) = v24;
    sub_21CE6A25C(v51, v48+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(_QWORD *)(v52 + 72) * v50);
  }
  else
  {
    v147 = MEMORY[0x24BEE4AF8];
  }
  v151 = (const void *)(v0 + 16);
  v53 = *(_QWORD *)(v0 + 944);
  v54 = *(_QWORD *)(v165 + 936);
  v55 = *(_QWORD *)(v165 + 928);
  v56 = *(_QWORD *)(v165 + 920);
  v138 = *(char **)(v165 + 824);
  v163 = *(_QWORD *)(v165 + 800);
  v57 = *(_QWORD *)(v165 + 792);
  OUTLINED_FUNCTION_51_4();
  v143 = v58;
  v129 = *(_QWORD *)(v165 + 752);
  v160 = *(_QWORD *)(v165 + 744);
  v132 = *(_QWORD *)(v165 + 736);
  v59 = *(_QWORD *)(v165 + 640);
  v60 = *(_QWORD *)(v165 + 608);
  v155 = *(_OWORD *)(v165 + 624);
  v61 = sub_21D16287C(0x40u);
  v120 = v62;
  v123 = v61;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v54, v53, v56);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v1 + 16))(v57, v60, v155);
  v63 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = v155;
  *(_QWORD *)(v64 + 32) = v59;
  (*(void (**)(unint64_t, uint64_t, _QWORD))(v1 + 32))(v64 + v63, v57, v155);
  *(_QWORD *)(v165 + 400) = sub_21D7C4344();
  *(_QWORD *)(v165 + 408) = MEMORY[0x24BE5CC10];
  __swift_allocate_boxed_opaque_existential_1(v124);
  sub_21D7C4338();
  OUTLINED_FUNCTION_9_10();
  sub_21D7BF97C();
  OUTLINED_FUNCTION_53_4();
  v65 = *(uint64_t (**)(unint64_t, uint64_t))(v143 + 8);
  v66 = v65(v24, v129);
  *(_QWORD *)(v165 + 160) = v155;
  *(_QWORD *)(v165 + 168) = v57;
  *(_QWORD *)(v165 + 176) = v123;
  *(_QWORD *)(v165 + 184) = v120;
  OUTLINED_FUNCTION_68_4(v66, v165 + 192, &qword_253F67430);
  v67 = sub_21D7C0CD8();
  __swift_storeEnumTagSinglePayload(v160, 1, 1, v67);
  sub_21CE26554(v126, (uint64_t)v125);
  sub_21CE6A214(v160, v132);
  OUTLINED_FUNCTION_9_10();
  sub_21D7BF97C();
  OUTLINED_FUNCTION_53_4();
  v156 = (void (*)(uint64_t, uint64_t))v65;
  v65(v24, v129);
  v68 = (uint64_t *)&v138[*(int *)(v163 + 24)];
  *v68 = v160;
  v68[1] = v57;
  OUTLINED_FUNCTION_74_3(v138, v125);
  sub_21CE26590(v132, (uint64_t)&v138[*(int *)(v163 + 20)], &qword_253F65AD0);
  sub_21CDBDA44(v160, &qword_253F65AD0);
  sub_21CE26600((uint64_t)v126);
  v69 = v147;
  v144 = v67;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    OUTLINED_FUNCTION_63_5();
    v69 = v107;
  }
  v70 = (_OWORD *)(v165 + 416);
  v72 = *(_QWORD *)(v69 + 16);
  v71 = *(_QWORD *)(v69 + 24);
  if (v72 >= v71 >> 1)
  {
    OUTLINED_FUNCTION_70_4(v71);
    OUTLINED_FUNCTION_63_5();
    v69 = v108;
  }
  v73 = *(_QWORD *)(v165 + 824);
  v74 = *(char **)(v165 + 816);
  v75 = *(_QWORD *)(v165 + 808);
  v76 = *(_QWORD *)(v165 + 768);
  v77 = *(_QWORD *)(v165 + 752);
  v133 = *(_QWORD *)(v165 + 744);
  *(_QWORD *)(v69 + 16) = v72 + 1;
  v148 = (*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
  v139 = *(_QWORD *)(v75 + 72);
  sub_21CE6A25C(v73, v69 + v148 + v139 * v72);
  v78 = sub_21D16287C(0x28u);
  v80 = v79;
  *v70 = 0u;
  *(_OWORD *)(v165 + 432) = 0u;
  *(_QWORD *)(v165 + 448) = 0;
  OUTLINED_FUNCTION_9_10();
  v81 = sub_21D7BF97C();
  v83 = v82;
  v156(v76, v77);
  *(_QWORD *)(v165 + 16) = v81;
  *(_QWORD *)(v165 + 24) = v83;
  *(_QWORD *)(v165 + 32) = v78;
  *(_QWORD *)(v165 + 40) = v80;
  sub_21CE26590((uint64_t)v70, v165 + 48, &qword_253F67430);
  __swift_storeEnumTagSinglePayload(v133, 1, 1, v144);
  OUTLINED_FUNCTION_9_10();
  v84 = sub_21D7BF97C();
  v86 = v85;
  v156(v76, v77);
  v87 = (uint64_t *)&v74[*(int *)(v163 + 24)];
  *v87 = v84;
  v87[1] = v86;
  v88 = OUTLINED_FUNCTION_74_3(v74, v151);
  OUTLINED_FUNCTION_68_4((uint64_t)v88, (uint64_t)&v74[*(int *)(v163 + 20)], &qword_253F65AD0);
  v90 = *(_QWORD *)(v69 + 16);
  v89 = *(_QWORD *)(v69 + 24);
  v91 = v90 + 1;
  if (v90 >= v89 >> 1)
  {
    OUTLINED_FUNCTION_70_4(v89);
    v110 = v109;
    sub_21D0385D8();
    v91 = v110;
    v69 = v111;
  }
  v92 = *(_QWORD *)(v165 + 816);
  v93 = *(_QWORD *)(v165 + 704);
  v134 = *(_QWORD *)(v165 + 696);
  v164 = *(_QWORD *)(v165 + 664);
  v152 = *(_QWORD *)(v165 + 656);
  v157 = *(_QWORD *)(v165 + 648);
  v94 = v69 + v148;
  v95 = v69;
  v96 = *(unsigned __int8 *)(v165 + 968);
  v97 = *(_QWORD *)(v165 + 608);
  *(_QWORD *)(v95 + 16) = v91;
  sub_21CE6A25C(v92, v94 + v90 * v139);
  type metadata accessor for ObjectGraph();
  sub_21D7C4D64();
  v98 = sub_21CE6976C(v97, v96);
  sub_21D0345D0(v98, v99, v95, 0, 0, (_QWORD *)(v165 + 536));
  sub_21D7C42D8();
  v100 = v93 + *(int *)(v134 + 20);
  v101 = *(_OWORD *)(v165 + 536);
  v102 = *(_OWORD *)(v165 + 552);
  *(_QWORD *)(v100 + 32) = *(_QWORD *)(v165 + 568);
  *(_OWORD *)v100 = v101;
  *(_OWORD *)(v100 + 16) = v102;
  *(_QWORD *)(v165 + 480) = v134;
  sub_21CDB47E8((unint64_t *)&qword_253F63FE8, (uint64_t (*)(uint64_t))type metadata accessor for PresentConfirmationDialogAction, (uint64_t)&unk_21D7E5148);
  *(_QWORD *)(v165 + 488) = v103;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v165 + 456));
  sub_21CE265C8(v93, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for PresentConfirmationDialogAction);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v152 + 104))(v164, *MEMORY[0x24BE5D0A0], v157);
  v105 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v165 + 952) = v105;
  *v105 = v165;
  v105[1] = sub_21CE69144;
  return sub_21D7C4524();
}

uint64_t sub_21CE69144()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 656);
  *(_QWORD *)(*v1 + 960) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_71_0(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  if (!v0)
  {
    OUTLINED_FUNCTION_21_8(*(_QWORD *)(v2 + 680));
    OUTLINED_FUNCTION_66_5();
  }
  OUTLINED_FUNCTION_23_5();
  return OUTLINED_FUNCTION_34_6();
}

uint64_t sub_21CE691D0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  v1 = v0[118];
  v2 = v0[116];
  v3 = v0[115];
  v4 = v0[91];
  v5 = v0[90];
  sub_21CDBDA1C(v0[88], (uint64_t (*)(_QWORD))type metadata accessor for PresentConfirmationDialogAction);
  OUTLINED_FUNCTION_25_5(v4, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  OUTLINED_FUNCTION_21_1();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_15_1();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_28_0();
  swift_task_dealloc();
  swift_task_dealloc();
  v6 = (uint64_t (*)(void))OUTLINED_FUNCTION_44();
  return OUTLINED_FUNCTION_27_8(v6);
}

uint64_t sub_21CE69328()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 944);
  v2 = *(_QWORD *)(v0 + 928);
  v3 = *(_QWORD *)(v0 + 728);
  v4 = *(_QWORD *)(v0 + 720);
  v5 = *(_QWORD *)(v0 + 712);
  sub_21CDBDA1C(*(_QWORD *)(v0 + 704), (uint64_t (*)(_QWORD))type metadata accessor for PresentConfirmationDialogAction);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  OUTLINED_FUNCTION_83(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  __swift_destroy_boxed_opaque_existential_1(v0 + 456);
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_42_6();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13_2();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_27_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_21CE69490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return swift_task_switch();
}

uint64_t sub_21CE694AC()
{
  uint64_t *v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_55_4();
  v0[5] = OUTLINED_FUNCTION_47_5();
  v1 = (_QWORD *)swift_task_alloc();
  v0[6] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_21CE6950C;
  OUTLINED_FUNCTION_54_3(v0[2]);
  return sub_21D7C3210();
}

uint64_t sub_21CE6950C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_35_7();
  if (v0)
  {
    OUTLINED_FUNCTION_23_5();
    return OUTLINED_FUNCTION_7_0();
  }
  else
  {
    swift_release();
    return OUTLINED_FUNCTION_40_5(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_21CE69550()
{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_6_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_21CE6957C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;

  v19 = a6;
  v11 = *(_QWORD *)(a2 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F679A0);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_11_16();
  v14 = sub_21D7C5490();
  __swift_storeEnumTagSinglePayload(v6, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2);
  v15 = (*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v16 = (char *)swift_allocObject();
  *((_QWORD *)v16 + 2) = 0;
  *((_QWORD *)v16 + 3) = 0;
  *((_QWORD *)v16 + 4) = a2;
  *((_QWORD *)v16 + 5) = a3;
  *((_QWORD *)v16 + 6) = a4;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v16[v15], (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  sub_21CDB87E4(v6, v19, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_21CE696AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return swift_task_switch();
}

uint64_t sub_21CE696C8()
{
  uint64_t *v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_55_4();
  v0[5] = OUTLINED_FUNCTION_47_5();
  v1 = (_QWORD *)swift_task_alloc();
  v0[6] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_21CE69728;
  OUTLINED_FUNCTION_54_3(v0[2]);
  return sub_21D7C32F4();
}

uint64_t sub_21CE69728()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_35_7();
  if (v0)
  {
    OUTLINED_FUNCTION_23_5();
    return OUTLINED_FUNCTION_7_0();
  }
  else
  {
    swift_release();
    return OUTLINED_FUNCTION_40_5(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_21CE6976C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t);
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(uint64_t, uint64_t);
  unsigned __int16 v86;
  uint64_t v87;
  uint64_t (*v88)(uint64_t, uint64_t);
  _QWORD v89[6];
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD v114[2];
  uint64_t v115;
  char v116[4];
  int v117;
  uint64_t v118;
  uint64_t v119;
  char v120[8];
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;

  v117 = a2;
  v118 = a1;
  v90 = sub_21D7C36C0();
  v89[2] = *(_QWORD *)(v90 - 8);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_11();
  v89[1] = v3;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_38_5();
  OUTLINED_FUNCTION_22_3(v5);
  v93 = sub_21D7C06C0();
  v89[5] = *(_QWORD *)(v93 - 8);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_11();
  v89[4] = v7;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_38_5();
  OUTLINED_FUNCTION_22_3(v9);
  v96 = sub_21D7C37A4();
  v92 = *(_QWORD *)(v96 - 8);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_11();
  v91 = v11;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_38_5();
  OUTLINED_FUNCTION_22_3(v13);
  v99 = sub_21D7C07A4();
  v95 = *(_QWORD *)(v99 - 8);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_11();
  v94 = v15;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_38_5();
  OUTLINED_FUNCTION_22_3(v17);
  v103 = sub_21D7C0720();
  v98 = *(_QWORD *)(v103 - 8);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_11();
  v97 = v19;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_38_5();
  OUTLINED_FUNCTION_22_3(v21);
  v107 = sub_21D7C0690();
  v102 = *(_QWORD *)(v107 - 8);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_11();
  v101 = v23;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_38_5();
  v100 = v25;
  v111 = sub_21D7C0180();
  v106 = *(_QWORD *)(v111 - 8);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_11();
  v105 = v27;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_38_5();
  v104 = v29;
  v114[0] = sub_21D7C3564();
  v110 = *(_QWORD *)(v114[0] - 8);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v30);
  OUTLINED_FUNCTION_11();
  v109 = v31;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_38_5();
  v108 = v33;
  v115 = sub_21D7C3B58();
  v113 = *(_QWORD *)(v115 - 8);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_11();
  v112 = v35;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v36);
  v38 = (char *)v89 - v37;
  v39 = sub_21D7C30FC();
  v114[1] = *(_QWORD *)(v39 - 8);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v40);
  OUTLINED_FUNCTION_61_4();
  v43 = v41 - v42;
  MEMORY[0x24BDAC7A8](v44);
  v46 = (char *)v89 - v45;
  v47 = sub_21D7C3660();
  v48 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  OUTLINED_FUNCTION_61_4();
  v51 = v49 - v50;
  v53 = MEMORY[0x24BDAC7A8](v52);
  v55 = (char *)v89 - v54;
  MEMORY[0x24BDAC7A8](v53);
  OUTLINED_FUNCTION_61_4();
  v58 = v56 - v57;
  MEMORY[0x24BDAC7A8](v59);
  v119 = v62;
  v63 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 16);
  if ((v117 & 1) != 0)
  {
    v64 = v61;
    v63((char *)v89 - v60, v118, v61);
    OUTLINED_FUNCTION_26_8();
    if (OUTLINED_FUNCTION_6_19())
    {
      v58 = sub_21D16287C(0x44u);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v55, v47);
LABEL_23:
      v66 = OUTLINED_FUNCTION_73_4();
LABEL_29:
      v68 = v64;
      goto LABEL_30;
    }
    OUTLINED_FUNCTION_26_8();
    if (OUTLINED_FUNCTION_6_19())
    {
      sub_21D16287C(0x49u);
      OUTLINED_FUNCTION_69_3();
      v70 = (uint64_t)v46;
      v71 = v39;
LABEL_22:
      v69(v70, v71);
      goto LABEL_23;
    }
    OUTLINED_FUNCTION_26_8();
    v75 = v115;
    if (OUTLINED_FUNCTION_6_19())
    {
      v58 = sub_21D16287C(0x4Au);
      v69 = *(void (**)(uint64_t, uint64_t))(v113 + 8);
      v70 = (uint64_t)v38;
LABEL_21:
      v71 = v75;
      goto LABEL_22;
    }
    v77 = v108;
    OUTLINED_FUNCTION_26_8();
    v75 = v114[0];
    if (OUTLINED_FUNCTION_6_19())
    {
      v58 = sub_21D16287C(0x4Bu);
      v78 = v110;
LABEL_20:
      v69 = *(void (**)(uint64_t, uint64_t))(v78 + 8);
      v70 = v77;
      goto LABEL_21;
    }
    v77 = v104;
    OUTLINED_FUNCTION_26_8();
    v75 = v111;
    if (OUTLINED_FUNCTION_6_19())
    {
      v58 = sub_21D16287C(0x48u);
      v78 = v106;
      goto LABEL_20;
    }
    v80 = v100;
    OUTLINED_FUNCTION_26_8();
    if (OUTLINED_FUNCTION_5_22())
    {
      v81 = v102;
    }
    else
    {
      OUTLINED_FUNCTION_15_10((uint64_t)&v124);
      if (!OUTLINED_FUNCTION_5_22())
      {
        OUTLINED_FUNCTION_15_10((uint64_t)&v122);
        if (OUTLINED_FUNCTION_5_22())
        {
          v58 = sub_21D16287C(0x4Cu);
        }
        else
        {
          OUTLINED_FUNCTION_15_10((uint64_t)v120);
          if (OUTLINED_FUNCTION_5_22())
          {
            v58 = sub_21D16287C(0x45u);
          }
          else
          {
            OUTLINED_FUNCTION_15_10((uint64_t)&v115);
            if (OUTLINED_FUNCTION_5_22())
            {
              v58 = sub_21D16287C(0x46u);
            }
            else
            {
              OUTLINED_FUNCTION_15_10((uint64_t)&v113);
              if (!OUTLINED_FUNCTION_5_22())
              {
                sub_21D16287C(0x4Bu);
                OUTLINED_FUNCTION_53_4();
                goto LABEL_23;
              }
              v58 = sub_21D16287C(0x47u);
            }
          }
        }
        v70 = OUTLINED_FUNCTION_58_5();
        goto LABEL_22;
      }
      v81 = v98;
    }
    OUTLINED_FUNCTION_83(v80, *(uint64_t (**)(uint64_t, uint64_t))(v81 + 8));
    v84 = OUTLINED_FUNCTION_73_4();
    OUTLINED_FUNCTION_25_5(v84, v85);
    v86 = 77;
LABEL_42:
    sub_21D16287C(v86);
    OUTLINED_FUNCTION_53_4();
    return v58;
  }
  v65 = v61;
  v63((char *)v58, v118, v61);
  if (!OUTLINED_FUNCTION_6_19())
  {
    v64 = v65;
    if (OUTLINED_FUNCTION_6_19())
    {
      sub_21D16287C(0xE0u);
      OUTLINED_FUNCTION_69_3();
      v73 = v43;
      v74 = v39;
      goto LABEL_27;
    }
    OUTLINED_FUNCTION_32_8();
    v76 = v115;
    if (OUTLINED_FUNCTION_6_19())
    {
      sub_21D16287C(0xDCu);
      OUTLINED_FUNCTION_53_4();
    }
    else
    {
      OUTLINED_FUNCTION_32_8();
      v76 = v114[0];
      if (OUTLINED_FUNCTION_6_19())
      {
        v58 = sub_21D16287C(0xDDu);
      }
      else
      {
        OUTLINED_FUNCTION_32_8();
        v76 = v111;
        if (!OUTLINED_FUNCTION_6_19())
        {
          v82 = v101;
          OUTLINED_FUNCTION_32_8();
          if (OUTLINED_FUNCTION_5_22())
          {
            v83 = v102;
          }
          else
          {
            OUTLINED_FUNCTION_14_8((uint64_t)&v125);
            if (!OUTLINED_FUNCTION_5_22())
            {
              OUTLINED_FUNCTION_14_8((uint64_t)&v123);
              if (OUTLINED_FUNCTION_5_22())
              {
                v58 = sub_21D16287C(0xDEu);
              }
              else
              {
                OUTLINED_FUNCTION_14_8((uint64_t)&v121);
                if (OUTLINED_FUNCTION_5_22())
                {
                  v58 = sub_21D16287C(0xD8u);
                }
                else
                {
                  OUTLINED_FUNCTION_14_8((uint64_t)v116);
                  if (OUTLINED_FUNCTION_5_22())
                  {
                    v58 = sub_21D16287C(0xD9u);
                  }
                  else
                  {
                    OUTLINED_FUNCTION_14_8((uint64_t)v114);
                    if (!OUTLINED_FUNCTION_5_22())
                    {
                      sub_21D16287C(0xDDu);
                      OUTLINED_FUNCTION_53_4();
                      goto LABEL_28;
                    }
                    v58 = sub_21D16287C(0xDAu);
                  }
                }
              }
              v73 = OUTLINED_FUNCTION_58_5();
LABEL_27:
              v72(v73, v74);
LABEL_28:
              v66 = OUTLINED_FUNCTION_59_4();
              goto LABEL_29;
            }
            v83 = v98;
          }
          OUTLINED_FUNCTION_83(v82, *(uint64_t (**)(uint64_t, uint64_t))(v83 + 8));
          v87 = OUTLINED_FUNCTION_59_4();
          OUTLINED_FUNCTION_25_5(v87, v88);
          v86 = 223;
          goto LABEL_42;
        }
        v58 = sub_21D16287C(0xDBu);
      }
    }
    v73 = OUTLINED_FUNCTION_73_4();
    v74 = v76;
    goto LABEL_27;
  }
  v58 = sub_21D16287C(0xD7u);
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v51, v47);
  v66 = OUTLINED_FUNCTION_59_4();
  v68 = v65;
LABEL_30:
  v67(v66, v68);
  return v58;
}

uint64_t sub_21CE6A018(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_21CE67674(a1, a2, a3[2], a3[3], a3[4]);
}

uint64_t sub_21CE6A028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t);

  v1 = *(_QWORD *)(v0 + 16);
  v2 = OUTLINED_FUNCTION_72_3();
  v6 = *(_QWORD *)(type metadata accessor for LibraryAction(v2, v3, v4, v5) - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = OUTLINED_FUNCTION_72_3();
  type metadata accessor for LibraryActionType(v8, v9, v10, v11);
  if (swift_getEnumCaseMultiPayload() <= 4)
    OUTLINED_FUNCTION_83(v0 + v7, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8));
  sub_21D7C4314();
  v12 = OUTLINED_FUNCTION_73_4();
  v13(v12);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21CE6A100(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = *(_QWORD *)(type metadata accessor for LibraryAction(0, v4, v5, v6) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (uint64_t)v1 + v8;
  v10 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_21CDBDBB8;
  return sub_21CE6781C(a1, v9, v10, v4, v5, v6);
}

uint64_t sub_21CE6A1B8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21CE6A1F0()
{
  return sub_21CE6A31C((uint64_t)&unk_24E0F0178, (uint64_t)&unk_255331838);
}

uint64_t sub_21CE6A214(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65AD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21CE6A25C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s6ActionVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroy_14Tm()
{
  uint64_t v0;

  OUTLINED_FUNCTION_21_8(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8));
  return swift_deallocObject();
}

uint64_t sub_21CE6A2F8()
{
  return sub_21CE6A31C((uint64_t)&unk_24E0F0150, (uint64_t)&unk_255331828);
}

uint64_t sub_21CE6A31C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2[2];
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  return sub_21CE6957C((uint64_t)v2 + ((v5 + 40) & ~v5), v4, v2[3], v2[4], a1, a2);
}

uint64_t sub_21CE6A358()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  v1 = swift_task_alloc();
  v2 = OUTLINED_FUNCTION_36_5(v1);
  *(_QWORD *)v3 = v0;
  *(_QWORD *)(v3 + 8) = sub_21CDBB85C;
  *(__n128 *)(v3 + 24) = v2;
  *(_QWORD *)(v3 + 16) = v4;
  OUTLINED_FUNCTION_23_5();
  return OUTLINED_FUNCTION_6_8();
}

uint64_t objectdestroy_22Tm_0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 32) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_83(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  return swift_deallocObject();
}

uint64_t sub_21CE6A418()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  v1 = swift_task_alloc();
  v2 = OUTLINED_FUNCTION_36_5(v1);
  *(_QWORD *)v3 = v0;
  *(_QWORD *)(v3 + 8) = sub_21CDBDBB8;
  *(__n128 *)(v3 + 24) = v2;
  *(_QWORD *)(v3 + 16) = v4;
  OUTLINED_FUNCTION_23_5();
  return OUTLINED_FUNCTION_6_8();
}

uint64_t OUTLINED_FUNCTION_1_33()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_2_30()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t OUTLINED_FUNCTION_5_22()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_6_19()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_9_17(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 200) + 8))(a1, *(_QWORD *)(v1 + 88));
}

uint64_t OUTLINED_FUNCTION_10_14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(a2 + 8))(a1, *(_QWORD *)(v2 + 88));
}

uint64_t OUTLINED_FUNCTION_14_8@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(a1 - 256);
}

uint64_t OUTLINED_FUNCTION_15_10@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(a1 - 256);
}

uint64_t OUTLINED_FUNCTION_21_8@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8))();
}

uint64_t OUTLINED_FUNCTION_27_8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_28_6()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_31_7()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_34_6()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_35_7()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 56) = v0;
  return swift_task_dealloc();
}

__n128 OUTLINED_FUNCTION_36_5(uint64_t a1)
{
  __n128 *v1;
  uint64_t v2;
  __n128 result;

  result = v1[2];
  *(_QWORD *)(v2 + 16) = a1;
  return result;
}

uint64_t OUTLINED_FUNCTION_38_7@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(a3 + 32))(a1, a2, *(_QWORD *)(v3 + 88));
}

uint64_t OUTLINED_FUNCTION_40_5(uint64_t (*a1)(void))
{
  return a1();
}

void OUTLINED_FUNCTION_41_7()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_42_6()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_47_5()
{
  return sub_21D7C339C();
}

uint64_t OUTLINED_FUNCTION_50_7()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_54_3@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_55_4()
{
  return sub_21D7C33A8();
}

uint64_t OUTLINED_FUNCTION_58_5()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_59_4()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_63_5()
{
  sub_21D0385D8();
}

void OUTLINED_FUNCTION_65_5()
{
  _QWORD *v0;
  _QWORD *v1;

  *v0 = *v1;
}

uint64_t OUTLINED_FUNCTION_66_5()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t OUTLINED_FUNCTION_67_3()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0, v2);
}

void OUTLINED_FUNCTION_68_4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_21CE26590(v3, a2, a3);
}

BOOL OUTLINED_FUNCTION_70_4@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_72_3()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_73_4()
{
  uint64_t v0;

  return v0;
}

void *OUTLINED_FUNCTION_74_3(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x48uLL);
}

uint64_t *sub_21CE6A728(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *__dst;
  _BYTE *v25;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_21D7C4314();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for ContentDescriptor();
    sub_21D7C4C20();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      *v9 = *v10;
      v14 = *((_QWORD *)v10 + 2);
      *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
      *((_QWORD *)v9 + 2) = v14;
      v15 = *((_QWORD *)v10 + 4);
      *((_QWORD *)v9 + 3) = *((_QWORD *)v10 + 3);
      *((_QWORD *)v9 + 4) = v15;
      v16 = *((_QWORD *)v10 + 6);
      *((_QWORD *)v9 + 5) = *((_QWORD *)v10 + 5);
      *((_QWORD *)v9 + 6) = v16;
      v17 = *((_QWORD *)v10 + 8);
      *((_QWORD *)v9 + 7) = *((_QWORD *)v10 + 7);
      *((_QWORD *)v9 + 8) = v17;
      v18 = *((_QWORD *)v10 + 10);
      *((_QWORD *)v9 + 9) = *((_QWORD *)v10 + 9);
      *((_QWORD *)v9 + 10) = v18;
      v19 = *((_QWORD *)v10 + 12);
      *((_QWORD *)v9 + 11) = *((_QWORD *)v10 + 11);
      *((_QWORD *)v9 + 12) = v19;
      *((_QWORD *)v9 + 13) = *((_QWORD *)v10 + 13);
      v9[112] = v10[112];
      v20 = *(int *)(v11 + 24);
      __dst = &v9[v20];
      v25 = &v10[v20];
      v21 = sub_21D7BF754();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v21))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
        memcpy(__dst, v25, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(__dst, v25, v21);
        __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v21);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t sub_21CE6A938(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_21D7C4314();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 24);
  v6 = type metadata accessor for ContentDescriptor();
  result = __swift_getEnumTagSinglePayload(v5, 1, v6);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = v5 + *(int *)(v6 + 24);
    v9 = sub_21D7BF754();
    result = __swift_getEnumTagSinglePayload(v8, 1, v9);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  return result;
}

uint64_t sub_21CE6AA1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v22;
  _BYTE *__dst;

  v6 = sub_21D7C4314();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v8 = (_BYTE *)(a1 + v7);
  v9 = (_BYTE *)(a2 + v7);
  v10 = type metadata accessor for ContentDescriptor();
  sub_21D7C4C20();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v8 = *v9;
    v12 = *((_QWORD *)v9 + 2);
    *((_QWORD *)v8 + 1) = *((_QWORD *)v9 + 1);
    *((_QWORD *)v8 + 2) = v12;
    v13 = *((_QWORD *)v9 + 4);
    *((_QWORD *)v8 + 3) = *((_QWORD *)v9 + 3);
    *((_QWORD *)v8 + 4) = v13;
    v14 = *((_QWORD *)v9 + 6);
    *((_QWORD *)v8 + 5) = *((_QWORD *)v9 + 5);
    *((_QWORD *)v8 + 6) = v14;
    v15 = *((_QWORD *)v9 + 8);
    *((_QWORD *)v8 + 7) = *((_QWORD *)v9 + 7);
    *((_QWORD *)v8 + 8) = v15;
    v16 = *((_QWORD *)v9 + 10);
    *((_QWORD *)v8 + 9) = *((_QWORD *)v9 + 9);
    *((_QWORD *)v8 + 10) = v16;
    v17 = *((_QWORD *)v9 + 12);
    *((_QWORD *)v8 + 11) = *((_QWORD *)v9 + 11);
    *((_QWORD *)v8 + 12) = v17;
    *((_QWORD *)v8 + 13) = *((_QWORD *)v9 + 13);
    v8[112] = v9[112];
    v18 = *(int *)(v10 + 24);
    v22 = &v9[v18];
    __dst = &v8[v18];
    v19 = sub_21D7BF754();
    sub_21D7C4C20();
    sub_21D7C4C20();
    sub_21D7C4C20();
    sub_21D7C4C20();
    sub_21D7C4C20();
    sub_21D7C4C20();
    if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v19))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
      memcpy(__dst, v22, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(__dst, v22, v19);
      __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v19);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_21CE6AC00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  const void *v31;
  void *__dst;

  v6 = sub_21D7C4314();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for ContentDescriptor();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload(v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      *(_BYTE *)v8 = *(_BYTE *)v9;
      *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
      *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
      *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
      *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
      *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
      *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
      *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
      *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
      *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
      *(_QWORD *)(v8 + 80) = *(_QWORD *)(v9 + 80);
      *(_QWORD *)(v8 + 88) = *(_QWORD *)(v9 + 88);
      *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
      v13 = *(_QWORD *)(v9 + 104);
      *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
      *(_QWORD *)(v8 + 104) = v13;
      v14 = *(int *)(v10 + 24);
      v31 = (const void *)(v9 + v14);
      __dst = (void *)(v8 + v14);
      v15 = sub_21D7BF754();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v15))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
        memcpy(__dst, v31, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(__dst, v31, v15);
        __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v15);
      }
      v27 = v8;
      v28 = v10;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v12)
  {
    sub_21CDB579C(v8);
LABEL_7:
    v17 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253F60800) - 8) + 64);
    v18 = (void *)v8;
    v19 = (const void *)v9;
    goto LABEL_8;
  }
  *(_BYTE *)v8 = *(_BYTE *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
  *(_QWORD *)(v8 + 80) = *(_QWORD *)(v9 + 80);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 88) = *(_QWORD *)(v9 + 88);
  *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(v9 + 104);
  *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
  *(_QWORD *)(v8 + 104) = v20;
  v21 = *(int *)(v10 + 24);
  v22 = v8 + v21;
  v23 = v9 + v21;
  v24 = sub_21D7BF754();
  v25 = __swift_getEnumTagSinglePayload(v22, 1, v24);
  v26 = __swift_getEnumTagSinglePayload(v23, 1, v24);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
      v27 = v22;
      v28 = v24;
LABEL_14:
      __swift_storeEnumTagSinglePayload(v27, 0, 1, v28);
      return a1;
    }
  }
  else
  {
    v30 = *(_QWORD *)(v24 - 8);
    if (!v26)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 24))(v22, v23, v24);
      return a1;
    }
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v22, v24);
  }
  v17 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10) - 8) + 64);
  v18 = (void *)v22;
  v19 = (const void *)v23;
LABEL_8:
  memcpy(v18, v19, v17);
  return a1;
}

uint64_t sub_21CE6AFDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_21D7C4314();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v8 = (_BYTE *)(a1 + v7);
  v9 = (_BYTE *)(a2 + v7);
  v10 = type metadata accessor for ContentDescriptor();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v8 = *v9;
    memcpy(v8 + 8, v9 + 8, 0x69uLL);
    v12 = *(int *)(v10 + 24);
    v13 = &v8[v12];
    v14 = &v9[v12];
    v15 = sub_21D7BF754();
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_21CE6B134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;

  v6 = sub_21D7C4314();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for ContentDescriptor();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload(v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      *(_BYTE *)v8 = *(_BYTE *)v9;
      memcpy((void *)(v8 + 8), (const void *)(v9 + 8), 0x69uLL);
      v13 = *(int *)(v10 + 24);
      v14 = (void *)(v8 + v13);
      v15 = (const void *)(v9 + v13);
      v16 = sub_21D7BF754();
      if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
        __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
      }
      v33 = v8;
      v34 = v10;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v12)
  {
    sub_21CDB579C(v8);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253F60800) - 8) + 64);
    v19 = (void *)v8;
    v20 = (const void *)v9;
    goto LABEL_8;
  }
  *(_BYTE *)v8 = *(_BYTE *)v9;
  v21 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = v21;
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 32) = v22;
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(v9 + 48);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 48) = v23;
  swift_bridgeObjectRelease();
  v24 = *(_QWORD *)(v9 + 64);
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
  *(_QWORD *)(v8 + 64) = v24;
  swift_bridgeObjectRelease();
  v25 = *(_QWORD *)(v9 + 80);
  *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
  *(_QWORD *)(v8 + 80) = v25;
  swift_bridgeObjectRelease();
  v26 = *(_QWORD *)(v9 + 96);
  *(_QWORD *)(v8 + 88) = *(_QWORD *)(v9 + 88);
  *(_QWORD *)(v8 + 96) = v26;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
  *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
  v27 = *(int *)(v10 + 24);
  v28 = v8 + v27;
  v29 = v9 + v27;
  v30 = sub_21D7BF754();
  v31 = __swift_getEnumTagSinglePayload(v28, 1, v30);
  v32 = __swift_getEnumTagSinglePayload(v29, 1, v30);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
      v33 = v28;
      v34 = v30;
LABEL_14:
      __swift_storeEnumTagSinglePayload(v33, 0, 1, v34);
      return a1;
    }
  }
  else
  {
    v36 = *(_QWORD *)(v30 - 8);
    if (!v32)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 40))(v28, v29, v30);
      return a1;
    }
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v28, v30);
  }
  v18 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10) - 8) + 64);
  v19 = (void *)v28;
  v20 = (const void *)v29;
LABEL_8:
  memcpy(v19, v20, v18);
  return a1;
}

uint64_t sub_21CE6B3F4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21CE6B400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int v10;

  v6 = OUTLINED_FUNCTION_8();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
    return __swift_getEnumTagSinglePayload(v8, v3, v7);
  }
  if ((_DWORD)v3 != 2147483646)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
    v8 = v4 + *(int *)(a3 + 24);
    return __swift_getEnumTagSinglePayload(v8, v3, v7);
  }
  v9 = *(_QWORD *)(v4 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_21CE6B4A0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21CE6B4AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = OUTLINED_FUNCTION_8();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = v5;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(v5 + *(int *)(a4 + 20)) = v4;
      return result;
    }
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
    v10 = v5 + *(int *)(a4 + 24);
  }
  return __swift_storeEnumTagSinglePayload(v10, v4, v4, v9);
}

uint64_t type metadata accessor for DownloadAction()
{
  uint64_t result;

  result = qword_253F5FA50;
  if (!qword_253F5FA50)
    return swift_getSingletonMetadata();
  return result;
}

void sub_21CE6B574()
{
  unint64_t v0;
  unint64_t v1;

  sub_21D7C4314();
  if (v0 <= 0x3F)
  {
    sub_21CDB5D70();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_21CE6B600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v26)(uint64_t, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v50 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
  MEMORY[0x24BDAC7A8](v5);
  v43 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_21D7C4098();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_11();
  v42 = v9;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v10);
  v41 = (uint64_t)&v36 - v11;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v36 - v13;
  v48 = sub_21D7C3F6C();
  v46 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  OUTLINED_FUNCTION_11();
  v40 = v15;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v16);
  v39 = (char *)&v36 - v17;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v18);
  v38 = sub_21D7C4314();
  v19 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for DownloadAction();
  v23 = *(int *)(v22 + 20);
  v49 = a3;
  v44 = v23;
  *(_QWORD *)(a3 + v23) = 0;
  sub_21D7C3F78();
  v47 = v7;
  OUTLINED_FUNCTION_3_21((uint64_t)v14, v50);
  v24 = v45;
  sub_21D7C42CC();
  if (v24)
  {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v50, v47);
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(a1, v48);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v45 = v22;
    v37 = v8;
    v26 = *(void (**)(uint64_t, char *, uint64_t))(v19 + 32);
    v27 = v49;
    v26(v49, v21, v38);
    sub_21D7C3F78();
    v28 = v50;
    v29 = v47;
    OUTLINED_FUNCTION_3_21(v41, v50);
    sub_21D2963BC();
    *(_QWORD *)(v27 + v44) = v30;
    sub_21D7C3F78();
    OUTLINED_FUNCTION_3_21(v42, v28);
    v31 = (uint64_t)v43;
    ContentDescriptor.init(deserializing:using:)();
    v32 = v27;
    v33 = v28;
    v34 = v48;
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v33, v29);
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(a1, v34);
    v35 = type metadata accessor for ContentDescriptor();
    __swift_storeEnumTagSinglePayload(v31, 0, 1, v35);
    return sub_21CDB6108(v31, v32 + *(int *)(v45 + 24));
  }
}

uint64_t sub_21CE6B978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_21CE6B600(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_3_21(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

void sub_21CE6B994(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void (*v45)(uint64_t);
  _BOOL8 v46;
  uint64_t v47;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t, uint64_t, uint64_t);
  unint64_t *v57;
  uint64_t (*v58)(uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(uint64_t, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(uint64_t, uint64_t, uint64_t);
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(uint64_t, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(uint64_t, uint64_t, uint64_t);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(uint64_t, uint64_t, uint64_t);
  void (*v93)(char *, uint64_t);
  _QWORD v94[10];
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _BYTE *v109;
  uint64_t v110[3];
  uint64_t v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;

  v109 = a2;
  v4 = sub_21D7C0594();
  OUTLINED_FUNCTION_45_3(v4, (uint64_t)&v114);
  OUTLINED_FUNCTION_3_22(v5);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_13();
  v8 = OUTLINED_FUNCTION_35_8(v7);
  OUTLINED_FUNCTION_45_3(v8, (uint64_t)&v115);
  OUTLINED_FUNCTION_3_22(v9);
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_2_13();
  v12 = OUTLINED_FUNCTION_34_7(v11);
  OUTLINED_FUNCTION_45_3(v12, (uint64_t)&v116);
  OUTLINED_FUNCTION_3_22(v13);
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_2_13();
  v16 = OUTLINED_FUNCTION_36_6(v15);
  v95 = *(_QWORD *)(v16 - 8);
  v96 = v16;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_2_13();
  OUTLINED_FUNCTION_22_3(v18);
  v19 = sub_21D7C3564();
  v98 = *(_QWORD *)(v19 - 8);
  v99 = v19;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_2_13();
  v97 = v21;
  v22 = sub_21D7C3B58();
  v101 = *(_QWORD *)(v22 - 8);
  v102 = v22;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_2_13();
  v100 = v24;
  v25 = sub_21D7C30FC();
  v104 = *(_QWORD *)(v25 - 8);
  v105 = v25;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_2_13();
  v103 = v27;
  v28 = sub_21D7C0180();
  v107 = *(_QWORD *)(v28 - 8);
  v108 = v28;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_2_13();
  v106 = v30;
  v31 = sub_21D7C3660();
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_62_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5DE10);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v33);
  OUTLINED_FUNCTION_69();
  v36 = v35 - v34;
  v37 = sub_21D7BFF04();
  v38 = *(_QWORD *)(v37 - 8);
  v39 = MEMORY[0x24BDAC7A8](v37);
  v41 = (char *)v94 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v39);
  v43 = (char *)v94 - v42;
  sub_21CE57550(a1, v36, &qword_253F5DE10);
  if (__swift_getEnumTagSinglePayload(v36, 1, v37) != 1)
  {
    v44 = OUTLINED_FUNCTION_38_8();
    v45(v44);
    v46 = sub_21D5537F0();
    if (!v46)
    {
      OUTLINED_FUNCTION_29_7(v46, &qword_253F5DE10);
      OUTLINED_FUNCTION_30_5();
      goto LABEL_7;
    }
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v41, v43, v37);
    v47 = (*(uint64_t (**)(char *, uint64_t))(v38 + 88))(v41, v37);
    if ((_DWORD)v47 == *MEMORY[0x24BE69560])
    {
      OUTLINED_FUNCTION_1_34();
      (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v2, v41, v31);
      v111 = v31;
      v112 = MEMORY[0x24BDDF5D8];
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v110);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v32 + 16))(boxed_opaque_existential_1, v2, v31);
      OUTLINED_FUNCTION_39_6();
      OUTLINED_FUNCTION_29_7(v49, &qword_253F5DE10);
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v2, v31);
LABEL_21:
      OUTLINED_FUNCTION_30_5();
      v50 = v113;
      goto LABEL_22;
    }
    if ((_DWORD)v47 == *MEMORY[0x24BE69510])
    {
      OUTLINED_FUNCTION_1_34();
      v52 = v106;
      v51 = v107;
      v53 = OUTLINED_FUNCTION_19_8();
      v54 = v108;
      OUTLINED_FUNCTION_15_3(v53, v55, v56);
      v111 = v54;
      v57 = &qword_25532F828;
      v58 = (uint64_t (*)(uint64_t))MEMORY[0x24BE69DF8];
      v59 = MEMORY[0x24BE69D78];
    }
    else
    {
      if ((_DWORD)v47 != *MEMORY[0x24BE69518])
      {
        if ((_DWORD)v47 == *MEMORY[0x24BE695A8])
        {
          OUTLINED_FUNCTION_1_34();
          v52 = v100;
          v51 = v101;
          v65 = OUTLINED_FUNCTION_19_8();
          v66 = v102;
          OUTLINED_FUNCTION_15_3(v65, v67, v68);
          v69 = MEMORY[0x24BDDFB18];
        }
        else if ((_DWORD)v47 == *MEMORY[0x24BE69558])
        {
          OUTLINED_FUNCTION_1_34();
          v52 = v97;
          v51 = v98;
          v70 = OUTLINED_FUNCTION_19_8();
          v66 = v99;
          OUTLINED_FUNCTION_15_3(v70, v71, v72);
          v69 = MEMORY[0x24BDDF4B0];
        }
        else
        {
          if ((_DWORD)v47 != *MEMORY[0x24BE69598])
          {
            if ((_DWORD)v47 == *MEMORY[0x24BE695C0])
            {
              OUTLINED_FUNCTION_1_34();
              v51 = v94[7];
              v52 = v94[6];
              v81 = OUTLINED_FUNCTION_19_8();
              v82 = v94[8];
              OUTLINED_FUNCTION_15_3(v81, v83, v84);
              v111 = v82;
              v57 = (unint64_t *)&unk_255331848;
              v58 = (uint64_t (*)(uint64_t))MEMORY[0x24BE6A698];
              v59 = MEMORY[0x24BE6A620];
            }
            else if ((_DWORD)v47 == *MEMORY[0x24BE69538])
            {
              OUTLINED_FUNCTION_1_34();
              v51 = v94[4];
              v52 = v94[3];
              v85 = OUTLINED_FUNCTION_19_8();
              v86 = v94[5];
              OUTLINED_FUNCTION_15_3(v85, v87, v88);
              v111 = v86;
              v57 = (unint64_t *)&unk_255331840;
              v58 = (uint64_t (*)(uint64_t))MEMORY[0x24BE6A2D0];
              v59 = MEMORY[0x24BE6A280];
            }
            else
            {
              if ((_DWORD)v47 != *MEMORY[0x24BE69540])
              {
                OUTLINED_FUNCTION_29_7(v47, &qword_253F5DE10);
                v93 = *(void (**)(char *, uint64_t))(v38 + 8);
                v93(v43, v37);
                v93(v41, v37);
                goto LABEL_7;
              }
              OUTLINED_FUNCTION_1_34();
              v51 = v94[1];
              v52 = v94[0];
              v89 = OUTLINED_FUNCTION_19_8();
              v90 = v94[2];
              OUTLINED_FUNCTION_15_3(v89, v91, v92);
              v111 = v90;
              v57 = &qword_25532F768;
              v58 = (uint64_t (*)(uint64_t))MEMORY[0x24BE6A348];
              v59 = MEMORY[0x24BE6A2E8];
            }
            goto LABEL_12;
          }
          OUTLINED_FUNCTION_1_34();
          v51 = v95;
          v52 = v94[9];
          v73 = OUTLINED_FUNCTION_19_8();
          v66 = v96;
          OUTLINED_FUNCTION_15_3(v73, v74, v75);
          v69 = MEMORY[0x24BDDF990];
        }
        v111 = v66;
        v112 = v69;
        goto LABEL_20;
      }
      OUTLINED_FUNCTION_1_34();
      v52 = v103;
      v51 = v104;
      v60 = OUTLINED_FUNCTION_19_8();
      v61 = v105;
      OUTLINED_FUNCTION_15_3(v60, v62, v63);
      v111 = v61;
      v57 = &qword_25532F7F8;
      v58 = (uint64_t (*)(uint64_t))MEMORY[0x24BDDEE48];
      v59 = MEMORY[0x24BE6A808];
    }
LABEL_12:
    sub_21CDB47E8(v57, v58, v59);
    v112 = v64;
LABEL_20:
    v76 = __swift_allocate_boxed_opaque_existential_1(v110);
    OUTLINED_FUNCTION_15_3((uint64_t)v76, v52, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 16));
    OUTLINED_FUNCTION_39_6();
    OUTLINED_FUNCTION_29_7(v77, &qword_253F5DE10);
    v78 = OUTLINED_FUNCTION_19_8();
    v80(v78, v79);
    goto LABEL_21;
  }
  OUTLINED_FUNCTION_10_8(a1);
  OUTLINED_FUNCTION_10_8(v36);
LABEL_7:
  v50 = 0;
LABEL_22:
  *v109 = v50;
  OUTLINED_FUNCTION_9();
}

void sub_21CE6BFA4(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  char *v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(uint64_t, uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t (*v106)(uint64_t, uint64_t, _QWORD);
  unint64_t *v107;
  uint64_t (*v108)(uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t (*v121)(uint64_t);
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t (*v129)(uint64_t, uint64_t, _QWORD);
  void (*v130)(uint64_t, uint64_t);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  void (*v142)(uint64_t, uint64_t);
  uint64_t v143;
  uint64_t v144;
  uint64_t (*v145)(uint64_t, uint64_t, _QWORD);
  __int128 *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t (*v149)(uint64_t, uint64_t, _QWORD);
  uint64_t v150;
  uint64_t v151;
  uint64_t (*v152)(uint64_t, uint64_t, _QWORD);
  uint64_t v153;
  uint64_t *v154;
  uint64_t v155;
  void (*v156)(uint64_t);
  uint64_t v157;
  _QWORD v158[16];
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  _QWORD v176[2];
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  char v184[8];
  char v185[8];
  uint64_t v186;
  uint64_t v187;
  char v188;
  __int128 v189;
  uint64_t v190;
  char v191[8];
  char v192[8];
  char v193[8];
  uint64_t v194;

  v183 = a2;
  v4 = sub_21D7C3738();
  OUTLINED_FUNCTION_45_3(v4, (uint64_t)v191);
  OUTLINED_FUNCTION_3_22(v5);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_17_5();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_17_5();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_38_5();
  OUTLINED_FUNCTION_22_3(v9);
  v10 = sub_21D7C0594();
  OUTLINED_FUNCTION_45_3(v10, (uint64_t)&v181);
  OUTLINED_FUNCTION_3_22(v11);
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_17_5();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_38_5();
  v15 = OUTLINED_FUNCTION_34_7(v14);
  OUTLINED_FUNCTION_45_3(v15, (uint64_t)&v180);
  OUTLINED_FUNCTION_3_22(v16);
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_17_5();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_38_5();
  OUTLINED_FUNCTION_22_3(v19);
  v20 = sub_21D7C0180();
  OUTLINED_FUNCTION_45_3(v20, (uint64_t)&v189 + 8);
  OUTLINED_FUNCTION_3_22(v21);
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_17_5();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_38_5();
  v25 = OUTLINED_FUNCTION_35_8(v24);
  OUTLINED_FUNCTION_45_3(v25, (uint64_t)v184);
  OUTLINED_FUNCTION_3_22(v26);
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_17_5();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_38_5();
  OUTLINED_FUNCTION_22_3(v29);
  v30 = sub_21D7C3A98();
  OUTLINED_FUNCTION_3_22(*(_QWORD *)(v30 - 8));
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_17_5();
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_17_5();
  MEMORY[0x24BDAC7A8](v33);
  OUTLINED_FUNCTION_38_5();
  OUTLINED_FUNCTION_22_3(v34);
  v35 = sub_21D7C30FC();
  OUTLINED_FUNCTION_45_3(v35, (uint64_t)v193);
  OUTLINED_FUNCTION_3_22(v36);
  MEMORY[0x24BDAC7A8](v37);
  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_17_5();
  MEMORY[0x24BDAC7A8](v38);
  OUTLINED_FUNCTION_38_5();
  OUTLINED_FUNCTION_22_3(v39);
  v40 = sub_21D7C3AEC();
  OUTLINED_FUNCTION_45_3(v40, (uint64_t)&v194);
  OUTLINED_FUNCTION_3_22(v41);
  MEMORY[0x24BDAC7A8](v42);
  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_17_5();
  MEMORY[0x24BDAC7A8](v43);
  OUTLINED_FUNCTION_17_5();
  MEMORY[0x24BDAC7A8](v44);
  OUTLINED_FUNCTION_38_5();
  OUTLINED_FUNCTION_22_3(v45);
  v179 = sub_21D7C3B28();
  OUTLINED_FUNCTION_3_22(*(_QWORD *)(v179 - 8));
  MEMORY[0x24BDAC7A8](v46);
  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_17_5();
  MEMORY[0x24BDAC7A8](v47);
  OUTLINED_FUNCTION_38_5();
  v180 = OUTLINED_FUNCTION_36_6(v48);
  OUTLINED_FUNCTION_3_22(*(_QWORD *)(v180 - 8));
  MEMORY[0x24BDAC7A8](v49);
  OUTLINED_FUNCTION_62_2();
  v50 = sub_21D7C3564();
  v181 = *(_QWORD *)(v50 - 8);
  v182 = v50;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v51);
  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_17_5();
  MEMORY[0x24BDAC7A8](v52);
  v54 = (char *)v158 - v53;
  v55 = sub_21D7C3B58();
  v56 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  OUTLINED_FUNCTION_69();
  v59 = v58 - v57;
  v60 = sub_21D7C3660();
  v61 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  OUTLINED_FUNCTION_69();
  v64 = (char *)(v63 - v62);
  sub_21CE57550(a1, (uint64_t)&v189, &qword_255331850);
  if (v190)
  {
    v158[0] = v30;
    sub_21CDD3670(&v189, (uint64_t)v191);
    sub_21CDB66AC((uint64_t)v191, (uint64_t)&v189);
    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331858);
    v66 = OUTLINED_FUNCTION_6_19();
    if ((_DWORD)v66)
    {
      OUTLINED_FUNCTION_40_6(v66, &qword_255331850);
      OUTLINED_FUNCTION_21_9();
      v67 = *(void (**)(char *, uint64_t))(v61 + 8);
      v68 = v64;
LABEL_4:
      v69 = v60;
LABEL_10:
      v67(v68, v69);
      goto LABEL_11;
    }
    v71 = OUTLINED_FUNCTION_6_19();
    if ((_DWORD)v71)
    {
      OUTLINED_FUNCTION_40_6(v71, &qword_255331850);
      OUTLINED_FUNCTION_21_9();
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v59, v55);
LABEL_11:
      v70 = 1;
LABEL_12:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v189);
      goto LABEL_13;
    }
    v72 = v182;
    v73 = OUTLINED_FUNCTION_6_19();
    if ((_DWORD)v73)
    {
      OUTLINED_FUNCTION_40_6(v73, &qword_255331850);
      OUTLINED_FUNCTION_21_9();
      v67 = *(void (**)(char *, uint64_t))(v181 + 8);
      v68 = v54;
      v69 = v72;
      goto LABEL_10;
    }
    v60 = v180;
    v74 = OUTLINED_FUNCTION_6_19();
    v75 = a1;
    if ((_DWORD)v74)
    {
      OUTLINED_FUNCTION_10_15(v74, &qword_255331850);
      OUTLINED_FUNCTION_21_9();
      v67 = *(void (**)(char *, uint64_t))(v177 + 8);
      v68 = (char *)v2;
      goto LABEL_4;
    }
    v76 = v178;
    v77 = v179;
    if (OUTLINED_FUNCTION_6_19())
    {
      v78 = v176[0];
      v79 = v175;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v176[0] + 32))(v175, v76, v77);
      v186 = v158[0];
      sub_21CDB47E8(qword_255331860, (uint64_t (*)(uint64_t))MEMORY[0x24BE6B018], MEMORY[0x24BE6B010]);
      v187 = v80;
      OUTLINED_FUNCTION_20_6();
      sub_21D7C3AA4();
      v81 = OUTLINED_FUNCTION_8_14();
      OUTLINED_FUNCTION_10_15(v81, &qword_255331850);
      (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v79, v77);
LABEL_56:
      OUTLINED_FUNCTION_21_9();
      v70 = v188;
      goto LABEL_12;
    }
    v82 = v174;
    v83 = v176[1];
    v84 = OUTLINED_FUNCTION_6_19();
    v85 = v158[0];
    if (v84)
    {
      OUTLINED_FUNCTION_28_7();
      v86 = v173;
      OUTLINED_FUNCTION_64_0(v173, v82, v87);
      v88 = v172;
      OUTLINED_FUNCTION_64_0(v172, v86, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v65 + 16));
      v89 = (*(uint64_t (**)(uint64_t, uint64_t))(v65 + 88))(v88, v83);
      if ((_DWORD)v89 == *MEMORY[0x24BDDFA60])
      {
        OUTLINED_FUNCTION_26_9();
        v90 = v169;
        v91 = v168;
        v92 = v170;
        OUTLINED_FUNCTION_24_6(v168, v88, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v169 + 32));
        v186 = v92;
        sub_21CDB47E8(&qword_25532F7F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDDEE48], MEMORY[0x24BE6A808]);
        v187 = v93;
        v94 = OUTLINED_FUNCTION_20_6();
        OUTLINED_FUNCTION_24_6((uint64_t)v94, v91, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v90 + 16));
        v95 = OUTLINED_FUNCTION_8_14();
        OUTLINED_FUNCTION_10_15(v95, &qword_255331850);
        v96 = OUTLINED_FUNCTION_38_8();
LABEL_26:
        v98(v96, v97);
        (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v86, v83);
        goto LABEL_56;
      }
      if ((_DWORD)v89 == *MEMORY[0x24BDDFA68])
      {
        OUTLINED_FUNCTION_26_9();
        v110 = v181;
        v111 = v162;
        OUTLINED_FUNCTION_22_7(v162, v88, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v181 + 32));
        v186 = v72;
        v187 = MEMORY[0x24BDDF4B0];
        v112 = OUTLINED_FUNCTION_20_6();
        OUTLINED_FUNCTION_22_7((uint64_t)v112, v111, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v110 + 16));
        v113 = OUTLINED_FUNCTION_8_14();
        OUTLINED_FUNCTION_10_15(v113, &qword_255331850);
        v98 = *(void (**)(uint64_t, uint64_t))(v110 + 8);
        v96 = v111;
        v97 = v72;
        goto LABEL_26;
      }
      OUTLINED_FUNCTION_10_15(v89, &qword_255331850);
      v130 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
      v130(v86, v83);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v191);
      v130(v88, v83);
LABEL_43:
      v70 = 0;
      goto LABEL_12;
    }
    v99 = v171;
    if (!OUTLINED_FUNCTION_6_19())
    {
      v114 = v163;
      v115 = v165;
      v116 = OUTLINED_FUNCTION_6_19();
      if (!(_DWORD)v116)
      {
        OUTLINED_FUNCTION_10_15(v116, &qword_255331850);
        OUTLINED_FUNCTION_21_9();
        OUTLINED_FUNCTION_18_7((uint64_t)v185);
        if (OUTLINED_FUNCTION_7_16())
        {
          OUTLINED_FUNCTION_25_7((uint64_t)v192);
          v70 = 3;
          goto LABEL_12;
        }
        OUTLINED_FUNCTION_18_7((uint64_t)&v183);
        if (OUTLINED_FUNCTION_7_16())
        {
          (*(void (**)(uint64_t, uint64_t))(v158[11] + 8))(v115, v75);
          goto LABEL_11;
        }
        OUTLINED_FUNCTION_18_7((uint64_t)&v179);
        if (OUTLINED_FUNCTION_7_16())
        {
          v146 = (__int128 *)&v177;
        }
        else
        {
          OUTLINED_FUNCTION_18_7((uint64_t)v176);
          if (OUTLINED_FUNCTION_7_16())
          {
            v146 = (__int128 *)&v178;
          }
          else
          {
            OUTLINED_FUNCTION_18_7((uint64_t)&v175);
            if (!OUTLINED_FUNCTION_7_16())
              goto LABEL_43;
            v146 = &v189;
          }
        }
        OUTLINED_FUNCTION_25_7((uint64_t)v146);
        v70 = 2;
        goto LABEL_12;
      }
      v117 = v161;
      v118 = v160;
      OUTLINED_FUNCTION_24_6(v160, v114, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v161 + 32));
      v119 = v159;
      OUTLINED_FUNCTION_24_6(v159, v118, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v117 + 16));
      v120 = OUTLINED_FUNCTION_38_8();
      v122 = v121(v120);
      if ((_DWORD)v122 == *MEMORY[0x24BDDF6C8])
      {
        OUTLINED_FUNCTION_27_9();
        v123 = v181;
        v124 = v162;
        OUTLINED_FUNCTION_22_7(v162, v119, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v181 + 32));
        v186 = v72;
        v187 = MEMORY[0x24BDDF4B0];
        v125 = OUTLINED_FUNCTION_20_6();
        OUTLINED_FUNCTION_22_7((uint64_t)v125, v124, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v123 + 16));
        v126 = OUTLINED_FUNCTION_8_14();
        OUTLINED_FUNCTION_10_15(v126, &qword_255331850);
        (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v124, v72);
      }
      else
      {
        if ((_DWORD)v122 != *MEMORY[0x24BDDF6A0])
        {
          OUTLINED_FUNCTION_10_15(v122, &qword_255331850);
          v142 = *(void (**)(uint64_t, uint64_t))(v117 + 8);
          v142(v118, v115);
          OUTLINED_FUNCTION_21_9();
          v142(v119, v115);
          goto LABEL_43;
        }
        OUTLINED_FUNCTION_27_9();
        v131 = v169;
        v132 = v168;
        v133 = v119;
        v134 = v170;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v169 + 32))(v168, v133, v170);
        v186 = v134;
        sub_21CDB47E8(&qword_25532F7F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDDEE48], MEMORY[0x24BE6A808]);
        v187 = v135;
        v136 = OUTLINED_FUNCTION_20_6();
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v131 + 16))(v136, v132, v134);
        v137 = OUTLINED_FUNCTION_8_14();
        OUTLINED_FUNCTION_10_15(v137, &qword_255331850);
        (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v132, v134);
      }
      (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v118, v115);
      goto LABEL_56;
    }
    v100 = v167;
    v101 = v166;
    OUTLINED_FUNCTION_24_6(v166, v99, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v167 + 32));
    v102 = v164;
    OUTLINED_FUNCTION_24_6(v164, v101, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v100 + 16));
    v103 = (*(uint64_t (**)(uint64_t, uint64_t))(v100 + 88))(v102, v85);
    if ((_DWORD)v103 == *MEMORY[0x24BE6AFE0])
    {
      OUTLINED_FUNCTION_6_20();
      OUTLINED_FUNCTION_28_7();
      v104 = OUTLINED_FUNCTION_17_7();
      OUTLINED_FUNCTION_14_9(v104, v105, v106);
      v186 = v99;
      v107 = &qword_25532F828;
      v108 = (uint64_t (*)(uint64_t))MEMORY[0x24BE69DF8];
      v109 = MEMORY[0x24BE69D78];
    }
    else if ((_DWORD)v103 == *MEMORY[0x24BE6AFE8])
    {
      OUTLINED_FUNCTION_6_20();
      v65 = v169;
      v127 = OUTLINED_FUNCTION_17_7();
      OUTLINED_FUNCTION_14_9(v127, v128, v129);
      v186 = v99;
      v107 = &qword_25532F7F8;
      v108 = (uint64_t (*)(uint64_t))MEMORY[0x24BDDEE48];
      v109 = MEMORY[0x24BE6A808];
    }
    else
    {
      if ((_DWORD)v103 == *MEMORY[0x24BE6B000])
      {
        OUTLINED_FUNCTION_6_20();
        v138 = v181;
        v139 = v162;
        OUTLINED_FUNCTION_22_7(v162, v102, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v181 + 32));
        v186 = v72;
        v187 = MEMORY[0x24BDDF4B0];
        v140 = OUTLINED_FUNCTION_20_6();
        OUTLINED_FUNCTION_22_7((uint64_t)v140, v139, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v138 + 16));
        v141 = OUTLINED_FUNCTION_8_14();
        OUTLINED_FUNCTION_10_15(v141, &qword_255331850);
        (*(void (**)(uint64_t, uint64_t))(v138 + 8))(v139, v72);
LABEL_55:
        (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v101, v85);
        goto LABEL_56;
      }
      if ((_DWORD)v103 == *MEMORY[0x24BE6B008])
      {
        OUTLINED_FUNCTION_6_20();
        OUTLINED_FUNCTION_28_7();
        v143 = OUTLINED_FUNCTION_17_7();
        OUTLINED_FUNCTION_14_9(v143, v144, v145);
        v186 = v99;
        v107 = (unint64_t *)&unk_255331848;
        v108 = (uint64_t (*)(uint64_t))MEMORY[0x24BE6A698];
        v109 = MEMORY[0x24BE6A620];
      }
      else if ((_DWORD)v103 == *MEMORY[0x24BE6AFF0])
      {
        OUTLINED_FUNCTION_6_20();
        OUTLINED_FUNCTION_28_7();
        v147 = OUTLINED_FUNCTION_17_7();
        OUTLINED_FUNCTION_14_9(v147, v148, v149);
        v186 = v99;
        v107 = (unint64_t *)&unk_255331840;
        v108 = (uint64_t (*)(uint64_t))MEMORY[0x24BE6A2D0];
        v109 = MEMORY[0x24BE6A280];
      }
      else
      {
        if ((_DWORD)v103 != *MEMORY[0x24BE6AFF8])
        {
          OUTLINED_FUNCTION_10_15(v103, &qword_255331850);
          v156 = *(void (**)(uint64_t))(v100 + 8);
          v157 = OUTLINED_FUNCTION_38_8();
          v156(v157);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v191);
          ((void (*)(uint64_t, uint64_t))v156)(v102, v85);
          goto LABEL_43;
        }
        OUTLINED_FUNCTION_6_20();
        OUTLINED_FUNCTION_28_7();
        v150 = OUTLINED_FUNCTION_17_7();
        OUTLINED_FUNCTION_14_9(v150, v151, v152);
        v186 = v99;
        v107 = &qword_25532F768;
        v108 = (uint64_t (*)(uint64_t))MEMORY[0x24BE6A348];
        v109 = MEMORY[0x24BE6A2E8];
      }
    }
    sub_21CDB47E8(v107, v108, v109);
    v187 = v153;
    v154 = OUTLINED_FUNCTION_20_6();
    OUTLINED_FUNCTION_64_0((uint64_t)v154, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v65 + 16));
    v155 = OUTLINED_FUNCTION_8_14();
    OUTLINED_FUNCTION_10_15(v155, &qword_255331850);
    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v2, v99);
    goto LABEL_55;
  }
  OUTLINED_FUNCTION_10_8(a1);
  OUTLINED_FUNCTION_10_8((uint64_t)&v189);
  v70 = 0;
LABEL_13:
  *v183 = v70;
  OUTLINED_FUNCTION_9();
}

uint64_t OUTLINED_FUNCTION_1_34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 96))(v0, v2);
}

void OUTLINED_FUNCTION_3_22(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

uint64_t OUTLINED_FUNCTION_6_20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 96))(v2, v0);
}

uint64_t OUTLINED_FUNCTION_7_16()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_8_14()
{
  uint64_t v0;

  return sub_21CE6BFA4(v0 - 216);
}

void OUTLINED_FUNCTION_10_15(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_21CE3C2B4(v2, a2);
}

uint64_t OUTLINED_FUNCTION_14_9@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 - 256));
}

uint64_t OUTLINED_FUNCTION_17_7()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 256);
}

uint64_t OUTLINED_FUNCTION_18_7@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(a1 - 256);
}

uint64_t OUTLINED_FUNCTION_19_8()
{
  uint64_t v0;

  return v0;
}

uint64_t *OUTLINED_FUNCTION_20_6()
{
  uint64_t v0;

  return __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 - 216));
}

uint64_t OUTLINED_FUNCTION_21_9()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 128);
}

uint64_t OUTLINED_FUNCTION_22_7@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_24_6@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_25_7@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 256) + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_26_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 96))(v2, v0);
}

uint64_t OUTLINED_FUNCTION_27_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 96))(v2, v0);
}

void OUTLINED_FUNCTION_29_7(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_21CE3C2B4(v2, a2);
}

uint64_t OUTLINED_FUNCTION_30_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_34_7@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return sub_21D7C07A4();
}

uint64_t OUTLINED_FUNCTION_35_8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return sub_21D7C0528();
}

uint64_t OUTLINED_FUNCTION_36_6@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return sub_21D7C396C();
}

uint64_t OUTLINED_FUNCTION_38_8()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_39_6()
{
  uint64_t v0;

  sub_21CE6BFA4(v0 - 136, (char *)(v0 - 89));
}

void OUTLINED_FUNCTION_40_6(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_21CE3C2B4(v2, a2);
}

void sub_21CE6CDD8()
{
  unint64_t v0;

  sub_21CE6D3A4();
  if (v0 <= 0x3F)
    swift_initClassMetadata2();
}

void sub_21CE6CE50()
{
  OUTLINED_FUNCTION_1_35();
  swift_allocObject();
  sub_21CE6CEA4();
}

void sub_21CE6CEA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_1_35();
  v4 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 280);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F675F0);
  __swift_storeEnumTagSinglePayload(v4, 1, 1, v5);
  type metadata accessor for CloudLibraryStatusController();
  type metadata accessor for ObjectGraph();
  OUTLINED_FUNCTION_50();
  sub_21D7C4D64();
  swift_release();
  *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 272)) = v6;
  swift_release();
  sub_21D304BDC(v2, v1, v3);
}

void sub_21CE6CF70(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[40];

  v3 = v2;
  v6 = *v3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F675F8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = v3[2];
  v3[2] = a1;
  v3[3] = a2;
  OUTLINED_FUNCTION_50();
  sub_21CDBD660(v10);
  if (*(_QWORD *)((char *)v3 + *(_QWORD *)(*v3 + 272)))
  {
    v11 = swift_allocObject();
    swift_weakInit();
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = *(_QWORD *)(v6 + 264);
    *(_QWORD *)(v12 + 24) = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F67408);
    sub_21CE6D51C();
    swift_retain();
    sub_21D7C4290();
    sub_21D7C42A8();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F675F0);
    v14 = (uint64_t)v9;
    v15 = 0;
  }
  else
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F675F0);
    v14 = (uint64_t)v9;
    v15 = 1;
  }
  __swift_storeEnumTagSinglePayload(v14, v15, 1, v13);
  v16 = (uint64_t)v3 + *(_QWORD *)(*v3 + 280);
  OUTLINED_FUNCTION_67();
  sub_21CE6D484((uint64_t)v9, v16);
  swift_endAccess();
  OUTLINED_FUNCTION_38();
}

uint64_t sub_21CE6D12C()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_21D304CA8(result);
    return swift_release();
  }
  return result;
}

void sub_21CE6D180()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE v12[24];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F675F8);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v2);
  v6 = &v12[-v5];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F675F0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v12[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 280);
  OUTLINED_FUNCTION_67();
  sub_21CE6D3FC(v11, (uint64_t)v6);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
  {
    sub_21CE6D444((uint64_t)v6);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v10, v6, v7);
    if (*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 272)))
    {
      OUTLINED_FUNCTION_50();
      sub_21D7C3E1C();
      swift_release();
    }
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v7);
    OUTLINED_FUNCTION_67();
    sub_21CE6D484((uint64_t)v4, v11);
    swift_endAccess();
  }
  OUTLINED_FUNCTION_38();
}

uint64_t sub_21CE6D308()
{
  uint64_t v0;

  swift_release();
  return sub_21CE6D444(v0 + *(_QWORD *)(*(_QWORD *)v0 + 280));
}

uint64_t *sub_21CE6D334()
{
  uint64_t *v0;

  v0 = sub_21D304C54();
  swift_release();
  sub_21CE6D444((uint64_t)v0 + *(_QWORD *)(*v0 + 280));
  return v0;
}

uint64_t sub_21CE6D378()
{
  sub_21CE6D334();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CloudLibraryStatusObserver(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CloudLibraryStatusObserver);
}

void sub_21CE6D3A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_253F67600)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F675F0);
    v0 = sub_21D7C5934();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_253F67600);
  }
}

uint64_t sub_21CE6D3FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F675F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21CE6D444(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F675F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21CE6D484(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F675F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_21CE6D4CC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_21CE6D4F0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21CE6D514()
{
  return sub_21CE6D12C();
}

unint64_t sub_21CE6D51C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_253F67400;
  if (!qword_253F67400)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F67408);
    result = MEMORY[0x2207938C0](MEMORY[0x24BE5C5C8], v1);
    atomic_store(result, (unint64_t *)&qword_253F67400);
  }
  return result;
}

double sub_21CE6D574@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double result;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  int EnumTagSinglePayload;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD *v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  _OWORD v44[2];
  _OWORD v45[2];
  uint64_t v46;

  v46 = a2;
  v38 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F674C8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_69();
  v39 = v6 - v5;
  v7 = sub_21D7C4098();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_69();
  v11 = v10 - v9;
  v12 = sub_21D7C3F6C();
  v40 = *(_QWORD *)(v12 - 8);
  v41 = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = sub_21D7C4314();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_69();
  v20 = v19 - v18;
  v42 = a1;
  sub_21D7C3F78();
  v21 = v7;
  v22 = v46;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v11, v46, v21);
  v23 = v43;
  sub_21D7C42CC();
  if (v23)
  {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v22, v21);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v41);
    return result;
  }
  v43 = v21;
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32);
  v26 = v38;
  v25(v38, v20, v16);
  v27 = v42;
  sub_21D7C3F78();
  v28 = v39;
  sub_21D7C3E88();
  v29 = v41;
  v30 = *(void (**)(char *, uint64_t))(v40 + 8);
  v30(v15, v41);
  v31 = sub_21D7C4410();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v28, 1, v31);
  v33 = v29;
  if (EnumTagSinglePayload == 1)
  {
    sub_21CDD5880(v39, &qword_253F674C8);
LABEL_6:
    sub_21D7C4FE0();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v34 = v39;
  v35 = sub_21D7C4404();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v34, v31);
  if (!v35)
    goto LABEL_6;
LABEL_7:
  sub_21CE6D8A4((uint64_t)v44);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v46, v43);
  v30(v27, v33);
  v36 = (_OWORD *)(v26 + *(int *)(type metadata accessor for SocialOnboardingUpdateUserAttributesAction() + 20));
  v37 = v44[1];
  *v36 = v44[0];
  v36[1] = v37;
  v36[2] = v45[0];
  result = *(double *)((char *)v45 + 9);
  *(_OWORD *)((char *)v36 + 41) = *(_OWORD *)((char *)v45 + 9);
  return result;
}

uint64_t sub_21CE6D8A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t result;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;

  OUTLINED_FUNCTION_2_31();
  OUTLINED_FUNCTION_1_36();
  v5 = OUTLINED_FUNCTION_3_23(v2, v3, v4);
  if (v86)
  {
    v12 = OUTLINED_FUNCTION_0_31();
    v13 = v84;
    if (!v12)
      v13 = 0;
    v83 = v13;
    if (v12)
      v14 = v85;
    else
      v14 = 0;
  }
  else
  {
    OUTLINED_FUNCTION_4_20(v5, &qword_253F67EB0, v6, v7, v8, v9, v10, v11, v82, v84);
    v83 = 0;
    v14 = 0;
  }
  sub_21D7C4C20();
  OUTLINED_FUNCTION_2_31();
  OUTLINED_FUNCTION_1_36();
  v18 = OUTLINED_FUNCTION_3_23(v15, v16, v17);
  if (v86)
  {
    v25 = OUTLINED_FUNCTION_0_31();
    if (v25)
      v26 = v84;
    else
      v26 = 0;
    if (v25)
      v27 = v85;
    else
      v27 = 0;
  }
  else
  {
    OUTLINED_FUNCTION_4_20(v18, &qword_253F67EB0, v19, v20, v21, v22, v23, v24, v83, v84);
    v26 = 0;
    v27 = 0;
  }
  sub_21D7C4C20();
  OUTLINED_FUNCTION_2_31();
  OUTLINED_FUNCTION_1_36();
  v31 = OUTLINED_FUNCTION_3_23(v28, v29, v30);
  if (v86)
  {
    OUTLINED_FUNCTION_0_31();
    OUTLINED_FUNCTION_6_21();
    if (v40)
      v41 = v39;
    else
      v41 = v38;
  }
  else
  {
    OUTLINED_FUNCTION_4_20(v31, &qword_253F67EB0, v32, v33, v34, v35, v36, v37, v83, v84);
    v41 = 2;
  }
  OUTLINED_FUNCTION_2_31();
  OUTLINED_FUNCTION_1_36();
  v45 = OUTLINED_FUNCTION_3_23(v42, v43, v44);
  if (v86)
  {
    OUTLINED_FUNCTION_0_31();
    OUTLINED_FUNCTION_6_21();
    if (v40)
      v54 = v53;
    else
      v54 = v52;
  }
  else
  {
    OUTLINED_FUNCTION_4_20(v45, &qword_253F67EB0, v46, v47, v48, v49, v50, v51, v83, v84);
    v54 = 2;
  }
  OUTLINED_FUNCTION_2_31();
  OUTLINED_FUNCTION_1_36();
  v58 = OUTLINED_FUNCTION_3_23(v55, v56, v57);
  if (v86)
  {
    OUTLINED_FUNCTION_0_31();
    OUTLINED_FUNCTION_6_21();
    if (v40)
      v67 = v66;
    else
      v67 = v65;
  }
  else
  {
    OUTLINED_FUNCTION_4_20(v58, &qword_253F67EB0, v59, v60, v61, v62, v63, v64, v83, v84);
    v67 = 2;
  }
  OUTLINED_FUNCTION_2_31();
  OUTLINED_FUNCTION_1_36();
  v68 = swift_bridgeObjectRelease();
  v71 = OUTLINED_FUNCTION_3_23(v68, v69, v70);
  if (v86)
  {
    v78 = OUTLINED_FUNCTION_0_31();
    if (v78)
      v79 = v84;
    else
      v79 = 0;
    if (v78)
      v80 = v85;
    else
      v80 = 0xF000000000000000;
  }
  else
  {
    OUTLINED_FUNCTION_4_20(v71, &qword_253F67EB0, v72, v73, v74, v75, v76, v77, v83, v84);
    v79 = 0;
    v80 = 0xF000000000000000;
  }
  OUTLINED_FUNCTION_8_15();
  sub_21CDDB4CC(0, 0xF000000000000000);
  sub_21D7C4C20();
  sub_21D7C4C20();
  OUTLINED_FUNCTION_8_15();
  OUTLINED_FUNCTION_7_17();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  result = OUTLINED_FUNCTION_7_17();
  *(_QWORD *)a1 = v83;
  *(_QWORD *)(a1 + 8) = v14;
  *(_QWORD *)(a1 + 16) = v26;
  *(_QWORD *)(a1 + 24) = v27;
  *(_BYTE *)(a1 + 32) = v41;
  *(_BYTE *)(a1 + 33) = v54;
  *(_BYTE *)(a1 + 34) = v67;
  *(_QWORD *)(a1 + 40) = v79;
  *(_QWORD *)(a1 + 48) = v80;
  *(_BYTE *)(a1 + 56) = 0;
  return result;
}

_QWORD *sub_21CE6DBEC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_21D7C4314();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *(_QWORD *)((char *)a2 + v8 + 8);
    *(_QWORD *)v9 = *(_QWORD *)((char *)a2 + v8);
    *((_QWORD *)v9 + 1) = v11;
    v12 = *(_QWORD *)((char *)a2 + v8 + 24);
    *((_QWORD *)v9 + 2) = *(_QWORD *)((char *)a2 + v8 + 16);
    *((_QWORD *)v9 + 3) = v12;
    v9[32] = *((_BYTE *)a2 + v8 + 32);
    *(_WORD *)(v9 + 33) = *(_WORD *)((char *)a2 + v8 + 33);
    v13 = (_QWORD *)((char *)a2 + v8 + 40);
    v14 = *(_QWORD *)((char *)a2 + v8 + 48);
    sub_21D7C4C20();
    sub_21D7C4C20();
    if (v14 >> 60 == 15)
    {
      *(_OWORD *)(v9 + 40) = *(_OWORD *)v13;
    }
    else
    {
      v16 = *v13;
      sub_21CDDB488(*v13, v14);
      *((_QWORD *)v9 + 5) = v16;
      *((_QWORD *)v9 + 6) = v14;
    }
    v9[56] = v10[56];
  }
  return a1;
}

uint64_t sub_21CE6DCE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v7;

  v4 = sub_21D7C4314();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(v5 + 48);
  if (v7 >> 60 != 15)
    return sub_21CDDB4E0(*(_QWORD *)(v5 + 40), v7);
  return result;
}

uint64_t sub_21CE6DD5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;

  v6 = sub_21D7C4314();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  v11 = *(_QWORD *)(a2 + v7 + 16);
  v12 = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 16) = v11;
  *(_QWORD *)(v8 + 24) = v12;
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  *(_WORD *)(v8 + 33) = *(_WORD *)(v9 + 33);
  v13 = (uint64_t *)(v9 + 40);
  v14 = *(_QWORD *)(v9 + 48);
  sub_21D7C4C20();
  sub_21D7C4C20();
  if (v14 >> 60 == 15)
  {
    *(_OWORD *)(v8 + 40) = *(_OWORD *)v13;
  }
  else
  {
    v15 = *v13;
    sub_21CDDB488(*v13, v14);
    *(_QWORD *)(v8 + 40) = v15;
    *(_QWORD *)(v8 + 48) = v14;
  }
  *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
  return a1;
}

uint64_t sub_21CE6DE2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v6 = sub_21D7C4314();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  *(_BYTE *)(v8 + 33) = *(_BYTE *)(v9 + 33);
  *(_BYTE *)(v8 + 34) = *(_BYTE *)(v9 + 34);
  v10 = (uint64_t *)(v9 + 40);
  v11 = *(_QWORD *)(v9 + 48);
  if (*(_QWORD *)(v8 + 48) >> 60 != 15)
  {
    if (v11 >> 60 != 15)
    {
      v13 = *v10;
      sub_21CDDB488(*v10, *(_QWORD *)(v9 + 48));
      v14 = *(_QWORD *)(v8 + 40);
      v15 = *(_QWORD *)(v8 + 48);
      *(_QWORD *)(v8 + 40) = v13;
      *(_QWORD *)(v8 + 48) = v11;
      sub_21CDDB4E0(v14, v15);
      goto LABEL_8;
    }
    sub_21CDE9E7C(v8 + 40);
    goto LABEL_6;
  }
  if (v11 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(v8 + 40) = *(_OWORD *)v10;
    goto LABEL_8;
  }
  v12 = *v10;
  sub_21CDDB488(*v10, *(_QWORD *)(v9 + 48));
  *(_QWORD *)(v8 + 40) = v12;
  *(_QWORD *)(v8 + 48) = v11;
LABEL_8:
  *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
  return a1;
}

uint64_t sub_21CE6DF6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;

  v6 = sub_21D7C4314();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v8[2] = v9[2];
  *(_OWORD *)((char *)v8 + 41) = *(_OWORD *)((char *)v9 + 41);
  return a1;
}

uint64_t sub_21CE6DFE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v6 = sub_21D7C4314();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  *(_WORD *)(v8 + 33) = *(_WORD *)(v9 + 33);
  v12 = (_QWORD *)(v9 + 40);
  v13 = *(_QWORD *)(v8 + 48);
  if (v13 >> 60 != 15)
  {
    v14 = *(_QWORD *)(v9 + 48);
    if (v14 >> 60 != 15)
    {
      v15 = *(_QWORD *)(v8 + 40);
      *(_QWORD *)(v8 + 40) = *v12;
      *(_QWORD *)(v8 + 48) = v14;
      sub_21CDDB4E0(v15, v13);
      goto LABEL_6;
    }
    sub_21CDE9E7C(v8 + 40);
  }
  *(_OWORD *)(v8 + 40) = *(_OWORD *)v12;
LABEL_6:
  *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
  return a1;
}

uint64_t sub_21CE6E0C8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21CE6E0D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;
  int v9;

  v6 = sub_21D7C4314();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  v9 = v8 - 1;
  if (v9 < 0)
    v9 = -1;
  return (v9 + 1);
}

uint64_t sub_21CE6E15C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21CE6E168(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_21D7C4314();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

uint64_t type metadata accessor for SocialOnboardingUpdateUserAttributesAction()
{
  uint64_t result;

  result = qword_253F64D50;
  if (!qword_253F64D50)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21CE6E218()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21D7C4314();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

double sub_21CE6E288@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_21CE6D574(a1, a2, a3);
}

uint64_t destroy for UserSocialProfileAttributes(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(a1 + 48);
  if (v3 >> 60 != 15)
    return sub_21CDDB4E0(*(_QWORD *)(a1 + 40), v3);
  return result;
}

uint64_t initializeWithCopy for UserSocialProfileAttributes(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  v6 = (uint64_t *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  sub_21D7C4C20();
  sub_21D7C4C20();
  if (v7 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v6;
  }
  else
  {
    v8 = *v6;
    sub_21CDDB488(*v6, v7);
    *(_QWORD *)(a1 + 40) = v8;
    *(_QWORD *)(a1 + 48) = v7;
  }
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t assignWithCopy for UserSocialProfileAttributes(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  v4 = (uint64_t *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 48) >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      v7 = *v4;
      sub_21CDDB488(*v4, *(_QWORD *)(a2 + 48));
      v8 = *(_QWORD *)(a1 + 40);
      v9 = *(_QWORD *)(a1 + 48);
      *(_QWORD *)(a1 + 40) = v7;
      *(_QWORD *)(a1 + 48) = v5;
      sub_21CDDB4E0(v8, v9);
      goto LABEL_8;
    }
    sub_21CDE9E7C(a1 + 40);
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v4;
    goto LABEL_8;
  }
  v6 = *v4;
  sub_21CDDB488(*v4, *(_QWORD *)(a2 + 48));
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v5;
LABEL_8:
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for UserSocialProfileAttributes(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  v6 = (_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  if (v7 >> 60 != 15)
  {
    v8 = *(_QWORD *)(a2 + 48);
    if (v8 >> 60 != 15)
    {
      v9 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = *v6;
      *(_QWORD *)(a1 + 48) = v8;
      sub_21CDDB4E0(v9, v7);
      goto LABEL_6;
    }
    sub_21CDE9E7C(a1 + 40);
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)v6;
LABEL_6:
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for UserSocialProfileAttributes(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 57))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UserSocialProfileAttributes(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 57) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for UserSocialProfileAttributes()
{
  return &type metadata for UserSocialProfileAttributes;
}

uint64_t OUTLINED_FUNCTION_0_31()
{
  return swift_dynamicCast();
}

void OUTLINED_FUNCTION_1_36()
{
  sub_21D036554();
}

uint64_t OUTLINED_FUNCTION_2_31()
{
  return sub_21D7C5A30();
}

uint64_t OUTLINED_FUNCTION_3_23(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  return sub_21CDD5804((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_4_20(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  return sub_21CDD5880((uint64_t)va, a2);
}

uint64_t OUTLINED_FUNCTION_7_17()
{
  uint64_t v0;
  unint64_t v1;

  return sub_21CDDB4CC(v0, v1);
}

uint64_t OUTLINED_FUNCTION_8_15()
{
  uint64_t v0;
  unint64_t v1;

  return sub_21CDDB474(v0, v1);
}

_QWORD *sub_21CE6E694(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = a3[5];
    v9 = (char *)v4 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_21D7C4668();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
    }
    v14 = a3[6];
    v15 = a3[7];
    v16 = (_QWORD *)((char *)v4 + v14);
    v17 = (uint64_t *)((char *)a2 + v14);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    *(_QWORD *)((char *)v4 + v15) = *(uint64_t *)((char *)a2 + v15);
    *((_BYTE *)v4 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    sub_21D7C4C20();
    sub_21D7C4C20();
  }
  return v4;
}

uint64_t sub_21CE6E7C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_21D7C4668();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21CE6E848(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_21D7C4668();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v12);
  v15 = (_QWORD *)(a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  sub_21D7C4C20();
  sub_21D7C4C20();
  return a1;
}

uint64_t *sub_21CE6E948(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21D7C4668();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
LABEL_7:
  v14 = a3[6];
  v15 = (uint64_t *)((char *)a1 + v14);
  v16 = (uint64_t *)((char *)a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

uint64_t sub_21CE6EAA4(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_21D7C4668();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  v12 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_21CE6EB88(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_21D7C4668();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (!EnumTagSinglePayload)
  {
    v13 = *(_QWORD *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
LABEL_7:
  v15 = a3[6];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_21CE6ECDC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21CE6ECE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_21CE6ED60()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21CE6ED6C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    return __swift_storeEnumTagSinglePayload(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for TextListComponentModel()
{
  uint64_t result;

  result = qword_253F61FF0;
  if (!qword_253F61FF0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_21CE6EE14()
{
  unint64_t v0;

  sub_21CDD503C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_21CE6EEA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v60 = a2;
  v57 = a3;
  v4 = sub_21D7C4098();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_11();
  v49 = v6;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v44 - v8;
  v10 = sub_21D7C3F6C();
  v55 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_11();
  v45 = v11;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v12);
  v48 = (char *)&v44 - v13;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v14);
  v51 = (char *)&v44 - v15;
  OUTLINED_FUNCTION_88_1();
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v44 - v18;
  MEMORY[0x24BDAC7A8](v17);
  sub_21D7C4668();
  sub_21D7C3F78();
  v53 = v4;
  v54 = v5;
  v47 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v47(v9, v60, v4);
  v20 = type metadata accessor for TextListComponentModel();
  v52 = v57 + *(int *)(v20 + 20);
  sub_21D7C4620();
  v56 = a1;
  sub_21D7C3F78();
  v21 = sub_21D7C3F3C();
  v23 = v22;
  v24 = *(void (**)(char *, uint64_t))(v55 + 8);
  OUTLINED_FUNCTION_5_23((uint64_t)v19);
  if (v23)
  {
    v44 = v20;
    v25 = v60;
    v58 = v21;
    v59 = v23;
    sub_21D7C5A30();
    v26 = v51;
    sub_21D7C3F78();
    v27 = sub_21D7C3F3C();
    v29 = v28;
    v24(v26, v10);
    v46 = v10;
    if (v29)
    {
      v30 = v56;
      sub_21D7C3F78();
      v47(v49, v25, v53);
      sub_21CE6F380();
      v31 = v50;
      v32 = sub_21D7C53C4();
      v33 = v30;
      if (!v31)
      {
        v39 = v44;
        v40 = v57;
        *(_QWORD *)(v57 + *(int *)(v44 + 28)) = v32;
        v41 = (uint64_t *)(v40 + *(int *)(v39 + 24));
        *v41 = v27;
        v41[1] = v29;
        v42 = v45;
        sub_21D7C3F78();
        v43 = sub_21D7C3EE8();
        OUTLINED_FUNCTION_1_37(v54);
        OUTLINED_FUNCTION_5_23(v33);
        result = OUTLINED_FUNCTION_5_23(v42);
        *(_BYTE *)(v40 + *(int *)(v44 + 32)) = v43 & 1;
        return result;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_21D7C4F74();
      sub_21CDBFDBC((unint64_t *)&qword_253F677E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5E3D0], MEMORY[0x24BE5E3D8]);
      OUTLINED_FUNCTION_1_10();
      *v36 = 0x656C746974;
      v36[1] = 0xE500000000000000;
      v36[2] = v44;
      OUTLINED_FUNCTION_2_32((uint64_t)v36, *MEMORY[0x24BE5E3B8]);
      swift_willThrow();
      v33 = v56;
    }
    v37 = v57;
    v35 = v52;
    OUTLINED_FUNCTION_1_37(v54);
    v24((char *)v33, v46);
    sub_21CDD5804(v37);
  }
  else
  {
    sub_21D7C4F74();
    sub_21CDBFDBC((unint64_t *)&qword_253F677E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5E3D0], MEMORY[0x24BE5E3D8]);
    OUTLINED_FUNCTION_1_10();
    *v34 = 25705;
    v34[1] = 0xE200000000000000;
    v34[2] = v20;
    OUTLINED_FUNCTION_2_32((uint64_t)v34, *MEMORY[0x24BE5E3B8]);
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v60, v53);
    v24((char *)v56, v10);
    v35 = v52;
  }
  return sub_21CDC301C(v35);
}

uint64_t sub_21CE6F340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_21CE6EEA8(a1, a2, a3);
}

uint64_t sub_21CE6F354()
{
  return sub_21CDBFDBC(&qword_253F61FE0, (uint64_t (*)(uint64_t))type metadata accessor for TextListComponentModel, (uint64_t)&unk_21D7CEB00);
}

unint64_t sub_21CE6F380()
{
  unint64_t result;

  result = qword_2553318E8;
  if (!qword_2553318E8)
  {
    result = MEMORY[0x2207938C0](&unk_21D7EDB5C, &type metadata for GroupTextListItem);
    atomic_store(result, (unint64_t *)&qword_2553318E8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_37@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_2_32(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_5_23(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

ValueMetadata *type metadata accessor for RemovePersistenceItemActionImplementation()
{
  return &type metadata for RemovePersistenceItemActionImplementation;
}

unint64_t sub_21CE6F3F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_253F63470;
  if (!qword_253F63470)
  {
    v1 = type metadata accessor for RemovePersistenceItemAction();
    result = MEMORY[0x2207938C0](&unk_21D7E7770, v1);
    atomic_store(result, (unint64_t *)&qword_253F63470);
  }
  return result;
}

uint64_t sub_21CE6F438(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = sub_21D7C432C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Persistence();
  type metadata accessor for ObjectGraph();
  sub_21D7C4D64();
  v6 = type metadata accessor for RemovePersistenceItemAction();
  sub_21D2BCA5C(*(_QWORD *)(a1 + *(int *)(v6 + 20)), *(_QWORD *)(a1 + *(int *)(v6 + 20) + 8), *(_BYTE *)(a1 + *(int *)(v6 + 24)));
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F67768);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BE5CBF0], v2);
  v7 = sub_21D7C4E6C();
  swift_release();
  return v7;
}

ValueMetadata *type metadata accessor for UpdateNotificationSettingsActionImplementation()
{
  return &type metadata for UpdateNotificationSettingsActionImplementation;
}

unint64_t sub_21CE6F558()
{
  unint64_t result;
  uint64_t updated;

  result = qword_253F643D8;
  if (!qword_253F643D8)
  {
    updated = type metadata accessor for UpdateNotificationSettingsAction();
    result = MEMORY[0x2207938C0](&unk_21D812DF0, updated);
    atomic_store(result, (unint64_t *)&qword_253F643D8);
  }
  return result;
}

uint64_t sub_21CE6F598(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  uint64_t updated;
  char v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13[5];
  id v14[3];
  uint64_t v15;
  uint64_t v16;

  type metadata accessor for UserSocialProfileCoordinator(0);
  type metadata accessor for ObjectGraph();
  sub_21D7C4D64();
  v4 = *((_BYTE *)v14[0] + OBJC_IVAR____TtC7MusicUI28UserSocialProfileCoordinator_userNotificationSettings);
  v5 = *((_BYTE *)v14[0] + OBJC_IVAR____TtC7MusicUI28UserSocialProfileCoordinator_userNotificationSettings + 1);

  updated = type metadata accessor for UpdateNotificationSettingsAction();
  if (*(_BYTE *)(a1 + *(int *)(updated + 20)) == 2)
    v7 = v4;
  else
    v7 = *(_BYTE *)(a1 + *(int *)(updated + 20));
  if (*(_BYTE *)(a1 + *(int *)(updated + 24)) != 2)
    v5 = *(_BYTE *)(a1 + *(int *)(updated + 24));
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F67530);
  sub_21D7C4D64();
  v8 = v15;
  v9 = v16;
  __swift_project_boxed_opaque_existential_1(v14, v15);
  LOBYTE(v13[0]) = v7 & 1;
  BYTE1(v13[0]) = v5 & 1;
  v10 = sub_21CE6F71C();
  sub_21D00FE1C((uint64_t)v13, a2, v8, (uint64_t)&type metadata for UpdateNotificationSettingsIntent, v9, v10);
  v13[3] = sub_21D7C4680();
  v13[4] = MEMORY[0x24BE5D370];
  __swift_allocate_boxed_opaque_existential_1(v13);
  sub_21D7C4674();
  sub_21D7C432C();
  v11 = sub_21D7C4E30();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  return v11;
}

unint64_t sub_21CE6F71C()
{
  unint64_t result;

  result = qword_2553318F0;
  if (!qword_2553318F0)
  {
    result = MEMORY[0x2207938C0](&unk_21D7F1AD4, &type metadata for UpdateNotificationSettingsIntent);
    atomic_store(result, (unint64_t *)&qword_2553318F0);
  }
  return result;
}

uint64_t destroy for AccessoryButton(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1 + 8);
}

uint64_t initializeWithCopy for AccessoryButton(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 48);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 48) = v3;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
  return a1;
}

uint64_t assignWithCopy for AccessoryButton(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  __swift_assign_boxed_opaque_existential_2((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AccessoryButton(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccessoryButton(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 32);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AccessoryButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessoryButton()
{
  return &type metadata for AccessoryButton;
}

uint64_t sub_21CE6F8DC()
{
  unint64_t v0;

  v0 = sub_21D7C5C10();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_21CE6F924(char a1)
{
  return *(_QWORD *)&aDefault_6[8 * a1];
}

void sub_21CE6F93C(char *a1, char *a2)
{
  sub_21D736994(*a1, *a2);
}

uint64_t sub_21CE6F948@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_21CE6F8DC();
  *a1 = result;
  return result;
}

uint64_t sub_21CE6F974@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;

  result = sub_21CE6F924(*v1);
  *a1 = result;
  a1[1] = 0xE700000000000000;
  return result;
}

void sub_21CE6F9A0()
{
  sub_21D442744();
}

uint64_t sub_21CE6F9A8()
{
  return sub_21CF83A04();
}

void sub_21CE6F9B0()
{
  sub_21D44303C();
}

_OWORD *sub_21CE6F9B8@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  void (*v18)(char *, uint64_t);
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  _OWORD *result;
  uint64_t *boxed_opaque_existential_1;
  void (*v41)(char *, uint64_t);
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  char *v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59[3];
  uint64_t v60;

  v60 = a2;
  v51 = a3;
  v4 = sub_21D7C4098();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v53 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_21D7C3F6C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v43 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v43 - v15;
  OUTLINED_FUNCTION_3_24();
  sub_21CE6FEC0();
  sub_21D7C3EC4();
  v17 = v16;
  v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v17, v7);
  if (LOBYTE(v59[0]) == 3)
  {
    sub_21D7C4F74();
    sub_21CDBFDBC((unint64_t *)&qword_253F677E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5E3D0], MEMORY[0x24BE5E3D8]);
    OUTLINED_FUNCTION_1_10();
    *v19 = 1684957547;
    v19[1] = 0xE400000000000000;
    v20 = MEMORY[0x24BEE4AF8];
    v19[2] = &type metadata for AccessoryButton;
    v19[3] = v20;
    OUTLINED_FUNCTION_2_32((uint64_t)v19, *MEMORY[0x24BE5E3C8]);
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v60, v4);
    v21 = a1;
  }
  else
  {
    v50 = LOBYTE(v59[0]);
    v54 = v5;
    v52 = v4;
    OUTLINED_FUNCTION_3_24();
    if ((sub_21D7C3F30() & 1) == 0)
    {
      v22 = v54;
      v48 = v18;
      v49 = a1;
      if (v50)
      {
        if (v50 == 1)
        {
          v23 = type metadata accessor for PopoverAccessoryButton();
          v44 = OUTLINED_FUNCTION_2_33(&qword_255331910, v24, (uint64_t)&unk_21D7C96E8);
          v26 = (unint64_t *)&unk_255331918;
          v27 = &unk_21D7C96B8;
        }
        else
        {
          v23 = type metadata accessor for ContextAccessoryButton();
          v44 = OUTLINED_FUNCTION_2_33(&qword_255331900, v29, (uint64_t)&unk_21D7FF1F8);
          v26 = (unint64_t *)&unk_255331908;
          v27 = &unk_21D7FF1C8;
        }
      }
      else
      {
        v23 = type metadata accessor for DefaultAccessoryButton();
        v44 = OUTLINED_FUNCTION_2_33(&qword_255331920, v28, (uint64_t)&unk_21D7CE198);
        v26 = (unint64_t *)&unk_255331928;
        v27 = &unk_21D7CE168;
      }
      v46 = OUTLINED_FUNCTION_2_33(v26, v25, (uint64_t)v27);
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v14, v7);
      v30 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
      v31 = v60;
      v47 = v14;
      v32 = v52;
      v30(v53, v60, v52);
      v33 = sub_21D7C5934();
      v45 = &v43;
      v34 = *(_QWORD *)(v33 - 8);
      MEMORY[0x24BDAC7A8](v33);
      v36 = (char *)&v43 - v35;
      v37 = v46;
      sub_21D7C4614();
      if (__swift_getEnumTagSinglePayload((uint64_t)v36, 1, v23) != 1)
      {
        v56 = v23;
        v57 = v44;
        v58 = v37;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v55);
        (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(boxed_opaque_existential_1, v36, v23);
        (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v31, v32);
        v41 = v48;
        v48(v49, v7);
        v41(v47, v7);
        sub_21CE6FEFC(&v55, v59);
        v42 = (_BYTE *)v51;
        result = sub_21CE6FEFC(v59, (_OWORD *)(v51 + 8));
        *v42 = v50;
        return result;
      }
      (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v33);
      v18 = v48;
      a1 = v49;
      v14 = v47;
    }
    sub_21D7C4F74();
    sub_21CDBFDBC((unint64_t *)&qword_253F677E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5E3D0], MEMORY[0x24BE5E3D8]);
    OUTLINED_FUNCTION_1_10();
    *v38 = 1835365481;
    v38[1] = 0xE400000000000000;
    v38[2] = &type metadata for AccessoryButton;
    OUTLINED_FUNCTION_2_32((uint64_t)v38, *MEMORY[0x24BE5E3B8]);
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v60, v52);
    v18(a1, v7);
    v21 = v14;
  }
  return (_OWORD *)((uint64_t (*)(char *, uint64_t))v18)(v21, v7);
}

_OWORD *sub_21CE6FEAC@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_21CE6F9B8(a1, a2, a3);
}

unint64_t sub_21CE6FEC0()
{
  unint64_t result;

  result = qword_2553318F8;
  if (!qword_2553318F8)
  {
    result = MEMORY[0x2207938C0](&unk_21D7CED64, &type metadata for AccessoryButton.Kind);
    atomic_store(result, (unint64_t *)&qword_2553318F8);
  }
  return result;
}

_OWORD *sub_21CE6FEFC(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t storeEnumTagSinglePayload for AccessoryButton.Kind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21CE6FF60 + 4 * byte_21D7CECA5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21CE6FF94 + 4 * byte_21D7CECA0[v4]))();
}

uint64_t sub_21CE6FF94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21CE6FF9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21CE6FFA4);
  return result;
}

uint64_t sub_21CE6FFB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21CE6FFB8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21CE6FFBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21CE6FFC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccessoryButton.Kind()
{
  return &type metadata for AccessoryButton.Kind;
}

unint64_t sub_21CE6FFE4()
{
  unint64_t result;

  result = qword_255331930;
  if (!qword_255331930)
  {
    result = MEMORY[0x2207938C0](&unk_21D7CED3C, &type metadata for AccessoryButton.Kind);
    atomic_store(result, (unint64_t *)&qword_255331930);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_33(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(uint64_t);

  return sub_21CDBFDBC(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_3_24()
{
  return sub_21D7C3F78();
}

uint64_t sub_21CE70034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t AssociatedTypeWitness;
  uint64_t result;

  v6 = sub_21CE7015C();
  *(_BYTE *)a3 = v6 & 1;
  *(_QWORD *)(a3 + 8) = v7;
  v10 = (int *)OUTLINED_FUNCTION_3_25(v6, v7, v8, v9);
  v11 = a3 + v10[11];
  *(_QWORD *)v11 = sub_21CE032D0;
  *(_QWORD *)(v11 + 8) = 0;
  *(_BYTE *)(v11 + 16) = 0;
  v12 = a3 + v10[12];
  *(_QWORD *)v12 = swift_getKeyPath();
  *(_BYTE *)(v12 + 8) = 0;
  v13 = a3 + v10[13];
  type metadata accessor for FacetBarState(0);
  sub_21CDB6D4C(&qword_253F5F768, (void (*)(uint64_t))type metadata accessor for FacetBarState);
  *(_QWORD *)v13 = sub_21D7C0DF8();
  *(_BYTE *)(v13 + 8) = v14 & 1;
  v15 = a3 + v10[9];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v15, a1, AssociatedTypeWitness);
  *(_QWORD *)(a3 + v10[10]) = a2;
  return result;
}

uint64_t sub_21CE7015C()
{
  unsigned __int8 v1;

  sub_21D7C2A00();
  return v1;
}

uint64_t sub_21CE70194@<X0>(uint64_t a1@<X0>, void (**a2)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = *(_OWORD *)(a1 + 16);
  result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8 + v7, v6, a1);
  *a2 = sub_21CE72E48;
  a2[1] = (void (*)(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X2>, uint64_t@<X3>, uint64_t@<X8>))v8;
  return result;
}

void sub_21CE70254(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void (**v56)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  double v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t KeyPath;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  void (*v94)(char *, uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(uint64_t, char *, uint64_t);
  uint64_t v99;
  uint64_t (**v100)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(uint64_t, char *, uint64_t);
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char v156;
  uint64_t v157;
  uint64_t v158;

  v147 = a1;
  v145 = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331230);
  MEMORY[0x24BDAC7A8](v8);
  v144 = (char *)&v105 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331940);
  MEMORY[0x24BDAC7A8](v139);
  v143 = (char *)&v105 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = sub_21D7C1890();
  v149 = *(_QWORD *)(v142 - 8);
  MEMORY[0x24BDAC7A8](v142);
  v141 = (char *)&v105 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = sub_21D7C11B8();
  v130 = *(_QWORD *)(v132 - 8);
  MEMORY[0x24BDAC7A8](v132);
  v129 = (char *)&v105 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = sub_21D7C138C();
  v119 = *(_QWORD *)(v120 - 8);
  MEMORY[0x24BDAC7A8](v120);
  v114 = v13;
  v117 = (char *)&v105 - (((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for SearchPageListContentView(0, a3, a4, v14);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x24BDAC7A8](v15);
  v150 = (char *)&v105 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5E098);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v109 = (char *)&v105 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331948);
  v112 = *(_QWORD *)(v113 - 8);
  MEMORY[0x24BDAC7A8](v113);
  v23 = (char *)&v105 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331950);
  MEMORY[0x24BDAC7A8](v110);
  v106 = (char *)&v105 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331958);
  v116 = *(_QWORD *)(v118 - 8);
  MEMORY[0x24BDAC7A8](v118);
  v115 = (char *)&v105 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331960);
  v122 = *(_QWORD *)(v124 - 8);
  MEMORY[0x24BDAC7A8](v124);
  v148 = (char *)&v105 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331968);
  MEMORY[0x24BDAC7A8](v121);
  v127 = (char *)&v105 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331970);
  MEMORY[0x24BDAC7A8](v125);
  v126 = (uint64_t)&v105 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331978);
  MEMORY[0x24BDAC7A8](v123);
  v131 = (char *)&v105 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331980);
  MEMORY[0x24BDAC7A8](v128);
  v134 = (uint64_t)&v105 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331988);
  MEMORY[0x24BDAC7A8](v133);
  v136 = (uint64_t)&v105 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331990);
  MEMORY[0x24BDAC7A8](v135);
  v140 = (uint64_t)&v105 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331998);
  MEMORY[0x24BDAC7A8](v137);
  v138 = (uint64_t)&v105 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = a3;
  v152 = a4;
  v153 = a3;
  v154 = a4;
  v155 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553319A0);
  sub_21CE72EB0();
  v111 = v23;
  sub_21D7C2064();
  v34 = v15;
  v35 = a2;
  swift_retain();
  sub_21D4B6FCC();
  swift_release();
  sub_21D453B2C();
  v37 = v36;
  swift_release();
  if (v37)
  {
    v38 = *(_QWORD *)(v37 + OBJC_IVAR____TtCC7MusicUI13FacetBarState4Data_onSelectionOfExistingItem);
    swift_retain();
    swift_release();
    v157 = v38;
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F5E080);
    sub_21CDBD918(&qword_253F5E078, &qword_253F5E080);
    v39 = sub_21D7C0C30();
    swift_release();
  }
  else
  {
    v40 = v109;
    sub_21D7C0BC4();
    sub_21CDBD918(&qword_2553319D0, &qword_253F5E098);
    v39 = sub_21D7C0C30();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v40, v19);
  }
  v109 = *(char **)(v16 + 16);
  v41 = v150;
  v146 = v35;
  v105 = v34;
  ((void (*)(char *, uint64_t, uint64_t))v109)(v150, v35, v34);
  v42 = v119;
  v43 = v117;
  v44 = v120;
  (*(void (**)(char *, uint64_t, uint64_t))(v119 + 16))(v117, v147, v120);
  v45 = *(unsigned __int8 *)(v16 + 80);
  v108 = ((v45 + 32) & ~v45) + v17;
  v46 = v16;
  v47 = (v45 + 32) & ~v45;
  v147 = v47;
  v107 = v45 | 7;
  v48 = (v108 + *(unsigned __int8 *)(v42 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  v49 = swift_allocObject();
  v50 = v152;
  *(_QWORD *)(v49 + 16) = v151;
  *(_QWORD *)(v49 + 24) = v50;
  v114 = *(void (**)(uint64_t, char *, uint64_t))(v46 + 32);
  v114(v49 + v47, v41, v34);
  (*(void (**)(unint64_t, char *, uint64_t))(v42 + 32))(v49 + v48, v43, v44);
  v51 = v112;
  v52 = (uint64_t)v106;
  v53 = v111;
  v54 = v113;
  (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v106, v111, v113);
  v55 = v110;
  *(_QWORD *)(v52 + *(int *)(v110 + 52)) = v39;
  v56 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + *(int *)(v55 + 56));
  *v56 = sub_21CE73118;
  v56[1] = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v49;
  (*(void (**)(char *, uint64_t))(v51 + 8))(v53, v54);
  sub_21D7C1F20();
  sub_21CDBD918(&qword_2553319C8, &qword_255331950);
  v58 = v57;
  v59 = 0.0;
  v60 = v115;
  sub_21D7C2364();
  sub_21CDBDA44(v52, &qword_255331950);
  v61 = v129;
  sub_21D7C11AC();
  v157 = v55;
  v158 = v58;
  swift_getOpaqueTypeConformance2();
  v62 = v148;
  v63 = v118;
  v64 = v132;
  sub_21D7C27F0();
  (*(void (**)(char *, uint64_t))(v130 + 8))(v61, v64);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v60, v63);
  v65 = v141;
  sub_21D7C1884();
  v66 = (uint64_t)v143;
  v67 = (uint64_t)&v143[*(int *)(v139 + 36)];
  v68 = *(void (**)(uint64_t, char *, uint64_t))(v149 + 16);
  v69 = v142;
  v68(v67, v65, v142);
  __swift_storeEnumTagSinglePayload(v67, 0, 1, v69);
  v70 = v122;
  v71 = v62;
  v72 = v124;
  (*(void (**)(uint64_t, char *, uint64_t))(v122 + 16))(v66, v71, v124);
  KeyPath = swift_getKeyPath();
  v74 = (uint64_t)v144;
  v68((uint64_t)v144, v65, v69);
  __swift_storeEnumTagSinglePayload(v74, 0, 1, v69);
  v75 = (uint64_t)v127;
  v76 = (uint64_t *)&v127[*(int *)(v121 + 36)];
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331198);
  sub_21CDBD98C(v74, (uint64_t)v76 + *(int *)(v77 + 28), &qword_255331230);
  *v76 = KeyPath;
  sub_21CDBD98C(v66, v75, &qword_255331940);
  sub_21CDBDA44(v74, &qword_255331230);
  sub_21CDBDA44(v66, &qword_255331940);
  (*(void (**)(char *, uint64_t))(v149 + 8))(v65, v69);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v148, v72);
  v78 = swift_getKeyPath();
  v79 = v105;
  v80 = v146;
  type metadata accessor for PersistentPageSectionManager();
  sub_21CDB6D4C(&qword_253F63898, (void (*)(uint64_t))type metadata accessor for PersistentPageSectionManager);
  v81 = sub_21D7C0E7C();
  v82 = v126;
  sub_21CDBD98C(v75, v126, &qword_255331968);
  v83 = (uint64_t *)(v82 + *(int *)(v125 + 36));
  *v83 = v78;
  v83[1] = v81;
  sub_21CDBDA44(v75, &qword_255331968);
  v84 = (uint64_t)v131;
  sub_21CE71424((uint64_t)&v131[*(int *)(v123 + 52)]);
  sub_21CDBD894(v82, v84, &qword_255331970);
  v85 = v80;
  v86 = *(_QWORD *)(v80 + 8);
  LOBYTE(v157) = *(_BYTE *)v80;
  v158 = v86;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F66FE0);
  sub_21D7C2A0C();
  if (v156)
    v59 = 1.0;
  v87 = v134;
  sub_21CDBD98C(v84, v134, &qword_255331978);
  *(double *)(v87 + *(int *)(v128 + 36)) = v59;
  sub_21CDBDA44(v84, &qword_255331978);
  v88 = sub_21D7C2D78();
  v89 = *(_QWORD *)(v85 + 8);
  LOBYTE(v157) = *(_BYTE *)v85;
  v158 = v89;
  sub_21D7C2A0C();
  v90 = v156;
  v91 = v136;
  sub_21CDBD98C(v87, v136, &qword_255331980);
  v92 = v91 + *(int *)(v133 + 36);
  *(_QWORD *)v92 = v88;
  *(_BYTE *)(v92 + 8) = v90;
  sub_21CDBDA44(v87, &qword_255331980);
  v93 = v150;
  v94 = (void (*)(char *, uint64_t, uint64_t))v109;
  ((void (*)(char *, uint64_t, uint64_t))v109)(v150, v85, v79);
  v95 = swift_allocObject();
  v97 = v151;
  v96 = v152;
  *(_QWORD *)(v95 + 16) = v151;
  *(_QWORD *)(v95 + 24) = v96;
  v98 = v114;
  v114(v95 + v147, v93, v79);
  v99 = v140;
  sub_21CDBD98C(v91, v140, &qword_255331988);
  v100 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v99 + *(int *)(v135 + 36));
  *v100 = sub_21CE7319C;
  v100[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v95;
  v100[2] = 0;
  v100[3] = 0;
  sub_21CDBDA44(v91, &qword_255331988);
  v94(v93, v146, v79);
  v101 = swift_allocObject();
  v102 = v152;
  *(_QWORD *)(v101 + 16) = v97;
  *(_QWORD *)(v101 + 24) = v102;
  v98(v101 + v147, v93, v79);
  v103 = v138;
  sub_21CDBD98C(v99, v138, &qword_255331990);
  v104 = (_QWORD *)(v103 + *(int *)(v137 + 36));
  *v104 = 0;
  v104[1] = 0;
  v104[2] = sub_21CE732A0;
  v104[3] = v101;
  sub_21CDBDA44(v99, &qword_255331990);
  sub_21CDBD894(v103, v145, &qword_255331998);
}

uint64_t sub_21CE71000()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553319B8);
  sub_21CE72F20();
  return sub_21D7C2BE0();
}

uint64_t sub_21CE7106C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedConformanceWitness;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  type metadata accessor for SearchPageListContentView(0, a2, a3, a4);
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v5 = *(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 56);
  v6 = swift_checkMetadataState();
  v5(v6, AssociatedConformanceWitness);
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F678B0);
  type metadata accessor for PageListSectionView();
  sub_21CDBD918(qword_253F678B8, &qword_253F678B0);
  sub_21CDB6D4C(&qword_2553319C0, (void (*)(uint64_t))type metadata accessor for PageListSectionView);
  return sub_21D7C2BB0();
}

void sub_21CE711C4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = type metadata accessor for MappedSection(0);
  sub_21CDBD9F0(a1 + *(int *)(v4 + 28), a2, type metadata accessor for MappedSection.Content);
}

void sub_21CE71204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t AssociatedConformanceWitness;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[16];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5F8E8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)&v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for SearchPageListContentView(0, a4, a5, v11);
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v13 = *(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 56);
  v14 = swift_checkMetadataState();
  v13(v14, AssociatedConformanceWitness);
  sub_21D521358();
  swift_bridgeObjectRelease();
  v15 = type metadata accessor for MappedSection(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v15) == 1)
  {
    sub_21CDBDA44((uint64_t)v10, &qword_253F5F8E8);
  }
  else
  {
    v17 = *v10;
    v16 = v10[1];
    sub_21D7C4C20();
    sub_21CDBDA1C((uint64_t)v10, type metadata accessor for MappedSection);
    v18 = sub_21D7C2D6C();
    MEMORY[0x24BDAC7A8](v18);
    *(_QWORD *)&v19[-32] = a3;
    *(_QWORD *)&v19[-24] = v17;
    *(_QWORD *)&v19[-16] = v16;
    sub_21D7C10A4();
    swift_release();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_21CE713CC()
{
  sub_21D7C2E2C();
  return sub_21D7C1380();
}

uint64_t sub_21CE71424@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t result;
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;

  v2 = type metadata accessor for MappedSection(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (_QWORD *)((char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = sub_21CE716F8();
  if ((result & 1) != 0)
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  else
  {
    swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v8 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 56);
    v9 = swift_checkMetadataState();
    v10 = v8(v9, AssociatedConformanceWitness);
    v11 = *(_QWORD *)(v10 + 16);
    if (v11)
    {
      v20[2] = a1;
      v21 = MEMORY[0x24BEE4AF8];
      sub_21D2812C8();
      v12 = *(unsigned __int8 *)(v3 + 80);
      v20[1] = v10;
      v13 = v10 + ((v12 + 32) & ~v12);
      v14 = *(_QWORD *)(v3 + 72);
      v15 = v21;
      do
      {
        sub_21CDBD9F0(v13, (uint64_t)v5, type metadata accessor for MappedSection);
        v16 = *v5;
        v17 = v5[1];
        sub_21D7C4C20();
        sub_21CDBDA1C((uint64_t)v5, type metadata accessor for MappedSection);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_21D2812C8();
          v15 = v21;
        }
        v18 = *(_QWORD *)(v15 + 16);
        if (v18 >= *(_QWORD *)(v15 + 24) >> 1)
        {
          sub_21D2812C8();
          v15 = v21;
        }
        *(_QWORD *)(v15 + 16) = v18 + 1;
        v19 = v15 + 16 * v18;
        *(_QWORD *)(v19 + 32) = v16;
        *(_QWORD *)(v19 + 40) = v17;
        v13 += v14;
        --v11;
      }
      while (v11);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v15 = MEMORY[0x24BEE4AF8];
    }
    v21 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F67920);
    sub_21CE732F0();
    return sub_21D7C5A30();
  }
  return result;
}

uint64_t sub_21CE71668()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F66FE0);
  return sub_21D7C2A18();
}

void sub_21CE716B8()
{
  uint64_t *v0;

  *v0 = OUTLINED_FUNCTION_9_18();
  OUTLINED_FUNCTION_0();
}

void sub_21CE716D4()
{
  swift_retain();
  sub_21D7A5FD4();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_21CE716F8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;

  j__swift_retain();
  sub_21D4B6FAC();
  v1 = v0;
  j__swift_release();
  if (v1)
  {
    v2 = *(_BYTE *)(v1 + 24);
    swift_release();
    v3 = v2 ^ 1;
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

void sub_21CE71774(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t (*v24)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t KeyPath;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v57 = a1;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331A80);
  MEMORY[0x24BDAC7A8](v43);
  v42 = (char *)&v42 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331A88);
  v45 = *(_QWORD *)(v2 - 8);
  v46 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v44 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331A90);
  v4 = MEMORY[0x24BDAC7A8](v52);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v47 = (uint64_t)&v42 - v7;
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331A98);
  MEMORY[0x24BDAC7A8](v54);
  v56 = (uint64_t)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331AA0);
  MEMORY[0x24BDAC7A8](v49);
  v50 = (uint64_t)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331AA8);
  MEMORY[0x24BDAC7A8](v55);
  v51 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331AB0);
  MEMORY[0x24BDAC7A8](v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331AB8);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331AC0);
  v16 = MEMORY[0x24BDAC7A8](v48);
  v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v42 - v19;
  v21 = type metadata accessor for MappedSection.Content(0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (uint64_t *)((char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_21CDBD9F0(v53, (uint64_t)v23, v24);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 46)
  {
    v58 = *v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255331AF0);
    sub_21CDBD918(&qword_255331AF8, &qword_255331AF0);
    sub_21D7C08C4();
    swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255331B00);
    sub_21CDBD918(&qword_255331B08, &qword_255331A80);
    v33 = type metadata accessor for SuggestionItemView(255);
    sub_21CDB6D4C(&qword_253F61050, (void (*)(uint64_t))type metadata accessor for SuggestionItemView);
    v58 = v33;
    v59 = v34;
    swift_getOpaqueTypeConformance2();
    v35 = v44;
    sub_21D7C2BB0();
    KeyPath = swift_getKeyPath();
    v38 = v45;
    v37 = v46;
    (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v6, v35, v46);
    v39 = &v6[*(int *)(v52 + 36)];
    *v39 = 0;
    *((_QWORD *)v39 + 1) = KeyPath;
    *((_QWORD *)v39 + 2) = 0;
    *((_QWORD *)v39 + 3) = 0;
    *((_QWORD *)v39 + 4) = 0;
    v39[40] = 0;
    (*(void (**)(char *, uint64_t))(v38 + 8))(v35, v37);
    v30 = &qword_255331A90;
    v40 = v47;
    sub_21CDBD894((uint64_t)v6, v47, &qword_255331A90);
    sub_21CDBD98C(v40, v50, &qword_255331A90);
    swift_storeEnumTagMultiPayload();
    sub_21CE8393C(&qword_255331AD0, &qword_255331AC0);
    sub_21CE8393C(&qword_255331AE0, &qword_255331A90);
    v41 = (uint64_t)v51;
    sub_21D7C1AAC();
    sub_21CDBD98C(v41, v56, &qword_255331AA8);
    swift_storeEnumTagMultiPayload();
    sub_21CE838A0();
    sub_21D7C1AAC();
    sub_21CDBDA44(v41, &qword_255331AA8);
    v32 = v40;
    goto LABEL_5;
  }
  if (EnumCaseMultiPayload == 48)
  {
    v58 = *v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255331B10);
    sub_21CDBD918(&qword_255331B18, &qword_255331B10);
    sub_21D7C08C4();
    v53 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F66E50);
    sub_21CDBD918(&qword_255331B20, &qword_255331AB0);
    v26 = type metadata accessor for TopSearchLockupView(255);
    sub_21CDB6D4C(&qword_253F61490, (void (*)(uint64_t))type metadata accessor for TopSearchLockupView);
    v58 = v26;
    v59 = v27;
    swift_getOpaqueTypeConformance2();
    sub_21D7C2BB0();
    v28 = swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v18, v15, v12);
    v29 = &v18[*(int *)(v48 + 36)];
    *v29 = 0;
    *((_QWORD *)v29 + 1) = v28;
    *((_QWORD *)v29 + 2) = 0;
    *((_QWORD *)v29 + 3) = 0;
    *((_QWORD *)v29 + 4) = 0;
    v29[40] = 0;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v30 = &qword_255331AC0;
    sub_21CDBD894((uint64_t)v18, (uint64_t)v20, &qword_255331AC0);
    sub_21CDBD98C((uint64_t)v20, v50, &qword_255331AC0);
    swift_storeEnumTagMultiPayload();
    sub_21CE8393C(&qword_255331AD0, &qword_255331AC0);
    sub_21CE8393C(&qword_255331AE0, &qword_255331A90);
    v31 = (uint64_t)v51;
    sub_21D7C1AAC();
    sub_21CDBD98C(v31, v56, &qword_255331AA8);
    swift_storeEnumTagMultiPayload();
    sub_21CE838A0();
    sub_21D7C1AAC();
    sub_21CDBDA44(v31, &qword_255331AA8);
    v32 = (uint64_t)v20;
LABEL_5:
    sub_21CDBDA44(v32, v30);
    return;
  }
  swift_storeEnumTagMultiPayload();
  sub_21CE838A0();
  sub_21D7C1AAC();
  sub_21CDBDA1C((uint64_t)v23, type metadata accessor for MappedSection.Content);
}

void sub_21CE71F84()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;

  v0 = type metadata accessor for TopSearchLockupView(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_21CE58974();
  sub_21CF52464();
  sub_21CDBDA1C((uint64_t)v2, type metadata accessor for TopSearchLockupView);
}

void sub_21CE7202C()
{
  sub_21CE71F84();
}

void sub_21CE72038(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v3 = type metadata accessor for SuggestionItemView(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CDBD9F0(a2, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for SuggestionItem);
  sub_21CF52640();
  sub_21CDBDA1C((uint64_t)v5, type metadata accessor for SuggestionItemView);
}

void sub_21CE720E4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = (uint64_t)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255331B28) + 48);
  sub_21CE72038(v1, v2);
}

uint64_t Optional<A>.title.getter()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  if (!*(_QWORD *)v0)
    return 0;
  v1 = *(uint64_t (**)(uint64_t))(**(_QWORD **)v0 + 96);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  return v3;
}

unint64_t sub_21CE72198()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_255331938;
  if (!qword_255331938)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F5FD18);
    v2 = sub_21CE721FC();
    result = MEMORY[0x2207938C0](MEMORY[0x24BEE4AB0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255331938);
  }
  return result;
}

unint64_t sub_21CE721FC()
{
  unint64_t result;

  result = qword_253F5FD08;
  if (!qword_253F5FD08)
  {
    result = MEMORY[0x2207938C0](&protocol conformance descriptor for AnyFacetBarItem, &type metadata for AnyFacetBarItem);
    atomic_store(result, (unint64_t *)&qword_253F5FD08);
  }
  return result;
}

uint64_t type metadata accessor for SearchPageListContentView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SearchPageListContentView);
}

void sub_21CE72248()
{
  uint64_t *v0;

  *v0 = OUTLINED_FUNCTION_9_18();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_21CE72268()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_21CE72318(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64) + 7;
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((((v7 + ((v6 + 16) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
  }
  else
  {
    v11 = AssociatedTypeWitness;
    v12 = ~v6;
    *(_BYTE *)a1 = *(_BYTE *)a2;
    a1[1] = a2[1];
    v13 = (char *)a1 + v6;
    v14 = (char *)a2 + v6;
    v15 = (unint64_t)(v13 + 16) & v12;
    v16 = (unint64_t)(v14 + 16) & v12;
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v17(v15, v16, v11);
    v18 = (_QWORD *)((v7 + v15) & 0xFFFFFFFFFFFFFFF8);
    v19 = (_QWORD *)((v7 + v16) & 0xFFFFFFFFFFFFFFF8);
    *v18 = *v19;
    v20 = ((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8;
    v21 = ((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    LOBYTE(v16) = *(_BYTE *)(v21 + 16);
    swift_retain();
    OUTLINED_FUNCTION_83_2();
    *(_QWORD *)v20 = v22;
    *(_QWORD *)(v20 + 8) = v23;
    *(_BYTE *)(v20 + 16) = v16;
    v24 = ((unint64_t)v18 + 39) & 0xFFFFFFFFFFFFFFF8;
    v25 = ((unint64_t)v19 + 39) & 0xFFFFFFFFFFFFFFF8;
    v26 = *(_QWORD *)v25;
    LOBYTE(v23) = *(_BYTE *)(v25 + 8);
    j__swift_retain();
    *(_QWORD *)v24 = v26;
    *(_BYTE *)(v24 + 8) = v23;
    v27 = ((unint64_t)v18 + 55) & 0xFFFFFFFFFFFFFFF8;
    v28 = *(_BYTE *)((((unint64_t)v19 + 55) & 0xFFFFFFFFFFFFFFF8) + 8);
    *(_QWORD *)v27 = *(_QWORD *)(((unint64_t)v19 + 55) & 0xFFFFFFFFFFFFFFF8);
    *(_BYTE *)(v27 + 8) = v28;
  }
  swift_retain();
  return a1;
}

uint64_t sub_21CE724C4(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;

  swift_release();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80), AssociatedTypeWitness);
  swift_release();
  sub_21CE09DA4();
  j__swift_release();
  return swift_release();
}

uint64_t sub_21CE72588(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 + 16 + a1) & ~v6;
  v8 = (v6 + 16 + a2) & ~v6;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  swift_retain();
  v9(v7, v8, AssociatedTypeWitness);
  v10 = *(_QWORD *)(v5 + 64) + 7;
  v11 = (_QWORD *)((v10 + v7) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)((v10 + v8) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v13 = ((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  v14 = ((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(_QWORD *)v14;
  v16 = *(_QWORD *)(v14 + 8);
  LOBYTE(AssociatedTypeWitness) = *(_BYTE *)(v14 + 16);
  swift_retain();
  OUTLINED_FUNCTION_83_2();
  *(_QWORD *)v13 = v15;
  *(_QWORD *)(v13 + 8) = v16;
  *(_BYTE *)(v13 + 16) = AssociatedTypeWitness;
  v17 = ((unint64_t)v11 + 39) & 0xFFFFFFFFFFFFFFF8;
  v18 = ((unint64_t)v12 + 39) & 0xFFFFFFFFFFFFFFF8;
  v19 = *(_QWORD *)v18;
  LOBYTE(v16) = *(_BYTE *)(v18 + 8);
  j__swift_retain();
  *(_QWORD *)v17 = v19;
  *(_BYTE *)(v17 + 8) = v16;
  v20 = ((unint64_t)v11 + 55) & 0xFFFFFFFFFFFFFFF8;
  v21 = *(_BYTE *)((((unint64_t)v12 + 55) & 0xFFFFFFFFFFFFFFF8) + 8);
  *(_QWORD *)v20 = *(_QWORD *)(((unint64_t)v12 + 55) & 0xFFFFFFFFFFFFFFF8);
  *(_BYTE *)(v20 + 8) = v21;
  swift_retain();
  return a1;
}

uint64_t sub_21CE726DC(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 + 16 + a1) & ~v6;
  v8 = (v6 + 16 + a2) & ~v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(v7, v8, AssociatedTypeWitness);
  v9 = *(_QWORD *)(v5 + 64) + 7;
  v10 = (_QWORD *)((v9 + v7) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)((v9 + v8) & 0xFFFFFFFFFFFFFFF8);
  v12 = (unint64_t)v10 + 39;
  *v10 = *v11;
  v13 = (unint64_t)v10 + 55;
  swift_retain();
  swift_release();
  v14 = ((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  v15 = ((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_QWORD *)v15;
  v17 = *(_QWORD *)(v15 + 8);
  LOBYTE(v10) = *(_BYTE *)(v15 + 16);
  OUTLINED_FUNCTION_83_2();
  *(_QWORD *)v14 = v16;
  *(_QWORD *)(v14 + 8) = v17;
  *(_BYTE *)(v14 + 16) = (_BYTE)v10;
  sub_21CE09DA4();
  v18 = v12 & 0xFFFFFFFFFFFFFFF8;
  v19 = ((unint64_t)v11 + 39) & 0xFFFFFFFFFFFFFFF8;
  v20 = *(_QWORD *)v19;
  LOBYTE(v17) = *(_BYTE *)(v19 + 8);
  j__swift_retain();
  *(_QWORD *)v18 = v20;
  *(_BYTE *)(v18 + 8) = v17;
  j__swift_release();
  v21 = v13 & 0xFFFFFFFFFFFFFFF8;
  v22 = *(_BYTE *)((((unint64_t)v11 + 55) & 0xFFFFFFFFFFFFFFF8) + 8);
  *(_QWORD *)v21 = *(_QWORD *)(((unint64_t)v11 + 55) & 0xFFFFFFFFFFFFFFF8);
  *(_BYTE *)(v21 + 8) = v22;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_21CE72868(_OWORD *a1, _OWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;

  *a1 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 16) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 16) & ~v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v7, v8, AssociatedTypeWitness);
  v9 = *(_QWORD *)(v5 + 64) + 7;
  v10 = (_QWORD *)((v9 + v7) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)((v9 + v8) & 0xFFFFFFFFFFFFFFF8);
  *v10 = *v11;
  v12 = ((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  v13 = ((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  v14 = *(_BYTE *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_BYTE *)(v12 + 16) = v14;
  v15 = ((unint64_t)v10 + 39) & 0xFFFFFFFFFFFFFFF8;
  v16 = ((unint64_t)v11 + 39) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v12) = *(_BYTE *)(v16 + 8);
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = v12;
  v17 = ((unint64_t)v10 + 55) & 0xFFFFFFFFFFFFFFF8;
  v18 = ((unint64_t)v11 + 55) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v15) = *(_BYTE *)(v18 + 8);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = v15;
  return a1;
}

uint64_t sub_21CE72964(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 + 16 + a1) & ~v6;
  v8 = (v6 + 16 + a2) & ~v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(v7, v8, AssociatedTypeWitness);
  v9 = *(_QWORD *)(v5 + 64) + 7;
  v10 = (_QWORD *)((v9 + v7) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)((v9 + v8) & 0xFFFFFFFFFFFFFFF8);
  *v10 = *v11;
  swift_release();
  v12 = ((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  v13 = ((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  v14 = *(_BYTE *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_BYTE *)(v12 + 16) = v14;
  sub_21CE09DA4();
  v15 = ((unint64_t)v10 + 39) & 0xFFFFFFFFFFFFFFF8;
  v16 = ((unint64_t)v11 + 39) & 0xFFFFFFFFFFFFFFF8;
  v17 = *(_QWORD *)v16;
  LOBYTE(v16) = *(_BYTE *)(v16 + 8);
  *(_QWORD *)v15 = v17;
  *(_BYTE *)(v15 + 8) = v16;
  j__swift_release();
  v18 = ((unint64_t)v10 + 55) & 0xFFFFFFFFFFFFFFF8;
  v19 = *(_BYTE *)((((unint64_t)v11 + 55) & 0xFFFFFFFFFFFFFFF8) + 8);
  *(_QWORD *)v18 = *(_QWORD *)(((unint64_t)v11 + 55) & 0xFFFFFFFFFFFFFFF8);
  *(_BYTE *)(v18 + 8) = v19;
  swift_release();
  return a1;
}

uint64_t sub_21CE72AAC(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v16;
  unint64_t v17;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = AssociatedTypeWitness;
  v9 = *(unsigned __int8 *)(v5 + 80);
  v10 = *(_QWORD *)(v5 + 64) + 7;
  if (v7 < a2)
  {
    v11 = ((((v10 + ((v9 + 16) & ~(_DWORD)v9)) & 0xFFFFFFF8) + 55) & 0xFFFFFFF8) + 9;
    if (v11 < 4)
      v12 = ((a2 - v7 + 255) >> (8 * v11)) + 1;
    else
      v12 = 2;
    if (v12 >= 0x10000)
      v13 = 4;
    else
      v13 = 2;
    if (v12 < 0x100)
      v13 = 1;
    if (v12 >= 2)
      v14 = v13;
    else
      v14 = 0;
    __asm { BR              X15 }
  }
  v16 = (a1 + v9 + 16) & ~v9;
  if (v6 >= 0x7FFFFFFF)
    return __swift_getEnumTagSinglePayload(v16, v6, v8);
  v17 = *(_QWORD *)((v10 + v16) & 0xFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF)
    LODWORD(v17) = -1;
  return (v17 + 1);
}

void sub_21CE72C28(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v6 + 84) <= 0x7FFFFFFFu)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((((*(_QWORD *)(v6 + 64)
         + 7
         + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & 0xFFFFFFFFFFFFFFF8)
       + 55) & 0xFFFFFFFFFFFFFFF8)
     + 9;
  if (v7 >= a3)
  {
    v11 = 0;
  }
  else
  {
    if (v8 <= 3)
      v9 = ((a3 - v7 + 255) >> (8 * v8)) + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    v13 = (~(_BYTE)v7 + a2);
    if (v8 >= 4)
      v14 = v12;
    else
      v14 = v13;
    bzero(a1, v8);
    if ((_DWORD)v8 == 1)
      *a1 = v14;
    else
      *(_DWORD *)a1 = v14;
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

void sub_21CE72D80()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
  JUMPOUT(0x21CE72DF8);
}

void sub_21CE72D88()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (v1)
    JUMPOUT(0x21CE72D90);
  JUMPOUT(0x21CE72DF8);
}

void sub_21CE72DD4()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
  JUMPOUT(0x21CE72DF8);
}

void sub_21CE72DDC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = v1;
  JUMPOUT(0x21CE72DF8);
}

uint64_t sub_21CE72DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_WORD *)(v7 + v9) = 0;
  if (!(_DWORD)v8)
    JUMPOUT(0x21CE72DF8);
  if (a3 < 0x7FFFFFFF)
  {
    if ((v8 & 0x80000000) == 0)
      JUMPOUT(0x21CE72DF4);
    JUMPOUT(0x21CE72DF0);
  }
  return __swift_storeEnumTagSinglePayload((v7 + v5 + 16) & v6, v8, a3, a4);
}

uint64_t sub_21CE72E10()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_21CE72E48(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = *(_QWORD *)(v5 + 16);
  v9 = *(_QWORD *)(v5 + 24);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_3_25(a1, a2, a3, a4) - 8) + 80);
  sub_21CE70254(a1, v5 + ((v10 + 32) & ~v10), v8, v9, a5);
}

uint64_t sub_21CE72EA4()
{
  return sub_21CE71000();
}

unint64_t sub_21CE72EB0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[3];

  result = qword_2553319A8;
  if (!qword_2553319A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553319A0);
    v2 = sub_21CE72F20();
    v3[0] = MEMORY[0x24BDF5138];
    v3[1] = v2;
    v3[2] = MEMORY[0x24BDF5138];
    result = MEMORY[0x2207938C0](MEMORY[0x24BDF4AF8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_2553319A8);
  }
  return result;
}

unint64_t sub_21CE72F20()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_2553319B0;
  if (!qword_2553319B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553319B8);
    sub_21CDB6D4C(&qword_2553319C0, (void (*)(uint64_t))type metadata accessor for PageListSectionView);
    v3 = v2;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDF4A08], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_2553319B0);
  }
  return result;
}

uint64_t type metadata accessor for PageListSectionView()
{
  uint64_t result;

  result = qword_255331A38;
  if (!qword_255331A38)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21CE72FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t AssociatedTypeWitness;

  v5 = type metadata accessor for SearchPageListContentView(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = sub_21D7C138C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (v7 + v8 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  swift_release();
  v12 = v4 + v7 + *(int *)(v5 + 36);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v12, AssociatedTypeWitness);
  swift_release();
  sub_21CE09DA4();
  j__swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v4 + v11, v9);
  return swift_deallocObject();
}

void sub_21CE73118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_6_22(a1, a2, a3, a4);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(sub_21D7C138C() - 8) + 80);
  sub_21CE71204(a1, v4 + v9, v4 + ((v9 + v10 + v11) & ~v11), v5, v6);
}

uint64_t sub_21CE7319C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21CE732A8(1, a2, a3, a4);
}

uint64_t objectdestroyTm_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;

  v5 = type metadata accessor for SearchPageListContentView(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v7 = v4 + ((v6 + 32) & ~v6);
  swift_release();
  v8 = v7 + *(int *)(v5 + 36);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v8, AssociatedTypeWitness);
  swift_release();
  sub_21CE09DA4();
  j__swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21CE732A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21CE732A8(0, a2, a3, a4);
}

uint64_t sub_21CE732A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_6_22(a1, a2, a3, a4);
  return sub_21CE71668();
}

unint64_t sub_21CE732F0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2553319D8;
  if (!qword_2553319D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F67920);
    v2 = MEMORY[0x24BEE0D10];
    result = MEMORY[0x2207938C0](MEMORY[0x24BEE12A8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2553319D8);
  }
  return result;
}

uint64_t sub_21CE7334C()
{
  return sub_21CE713CC();
}

uint64_t sub_21CE73368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_21CE7106C(v4[4], v4[2], v4[3], a4);
}

uint64_t sub_21CE73374(uint64_t *a1, uint64_t *a2)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(type metadata accessor for MappedSection.Content(0) - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_21CE733DC + 4 * word_21D7CEDD0[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t sub_21CE7680C(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t *v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t (*v95)(uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  int *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t FriendsButtonComponentModel;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int EnumCaseMultiPayload;
  int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  int *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;

  type metadata accessor for MappedSection.Content(0);
  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 3:
    case 4:
    case 13:
    case 21:
    case 45:
    case 50:
    case 51:
      return swift_release();
    case 1:
      v3 = sub_21D7C3660();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      v4 = &qword_253F63AC0;
      goto LABEL_64;
    case 2:
    case 6:
    case 7:
    case 11:
    case 14:
    case 15:
    case 18:
    case 24:
    case 25:
    case 26:
    case 27:
    case 30:
    case 39:
    case 44:
    case 46:
    case 47:
    case 48:
    case 49:
    case 52:
      goto LABEL_114;
    case 5:
      __swift_destroy_boxed_opaque_existential_1(a1);
      v5 = (int *)type metadata accessor for MappedArtistLatestReleaseAndTopSongs(0);
      v6 = a1 + v5[5];
      v7 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(v6, 1, v7))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
      v8 = a1 + v5[6];
      v9 = _s7SectionV6HeaderVMa(0);
      if (!__swift_getEnumTagSinglePayload(v8, 1, v9))
      {
        v10 = (_QWORD *)(v8 + *(int *)(v9 + 20));
        v11 = _s7SectionV6HeaderV12HeaderLockupOMa(0);
        if (!__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
        {
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          switch(EnumCaseMultiPayload)
          {
            case 2:
              if (v10[1])
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v10[7])
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v10 + 4));
              }
              if (v10[10])
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v10[16])
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v10 + 13));
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v122 = (uint64_t)v10 + *(int *)(type metadata accessor for DefaultSectionHeader() + 32);
              v123 = type metadata accessor for Artwork();
              if (!__swift_getEnumTagSinglePayload(v122, 1, v123))
              {
                v124 = sub_21D7C3840();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v124 - 8) + 8))(v122, v124);
                v125 = v122 + *(int *)(v123 + 20);
                v126 = sub_21D7C3804();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v126 - 8) + 8))(v125, v126);
              }
              break;
            case 1:
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
              v127 = (int *)type metadata accessor for ComposerSectionHeader();
              v128 = (uint64_t)v10 + v127[5];
              if (!__swift_getEnumTagSinglePayload(v128, 1, v7))
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v128, v7);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v129 = (uint64_t)v10 + v127[11];
              if (*(_QWORD *)(v129 + 24))
                __swift_destroy_boxed_opaque_existential_1(v129);
              v130 = (uint64_t)v10 + v127[12];
              v131 = type metadata accessor for ContentDescriptor();
              if (!__swift_getEnumTagSinglePayload(v130, 1, v131))
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v132 = v130 + *(int *)(v131 + 24);
                v133 = sub_21D7BF754();
                if (!__swift_getEnumTagSinglePayload(v132, 1, v133))
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v133 - 8) + 8))(v132, v133);
              }
              break;
            case 0:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              break;
          }
        }
      }
      swift_bridgeObjectRelease();
      v12 = a1 + v5[8];
      if (!__swift_getEnumTagSinglePayload(v12, 1, v9))
      {
        v13 = (_QWORD *)(v12 + *(int *)(v9 + 20));
        v14 = _s7SectionV6HeaderV12HeaderLockupOMa(0);
        if (!__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
        {
          v121 = swift_getEnumCaseMultiPayload();
          switch(v121)
          {
            case 2:
              if (v13[1])
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v13[7])
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v13 + 4));
              }
              if (v13[10])
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v13[16])
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v13 + 13));
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v134 = (uint64_t)v13 + *(int *)(type metadata accessor for DefaultSectionHeader() + 32);
              v135 = type metadata accessor for Artwork();
              if (!__swift_getEnumTagSinglePayload(v134, 1, v135))
              {
                v136 = sub_21D7C3840();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v136 - 8) + 8))(v134, v136);
                v137 = v134 + *(int *)(v135 + 20);
                v138 = sub_21D7C3804();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 8))(v137, v138);
              }
              break;
            case 1:
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
              v139 = (int *)type metadata accessor for ComposerSectionHeader();
              v140 = (uint64_t)v13 + v139[5];
              if (!__swift_getEnumTagSinglePayload(v140, 1, v7))
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v140, v7);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v141 = (uint64_t)v13 + v139[11];
              if (*(_QWORD *)(v141 + 24))
                __swift_destroy_boxed_opaque_existential_1(v141);
              v142 = (uint64_t)v13 + v139[12];
              v143 = type metadata accessor for ContentDescriptor();
              if (!__swift_getEnumTagSinglePayload(v142, 1, v143))
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v144 = v142 + *(int *)(v143 + 24);
                v145 = sub_21D7BF754();
                if (!__swift_getEnumTagSinglePayload(v144, 1, v145))
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v145 - 8) + 8))(v144, v145);
              }
              break;
            case 0:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              break;
          }
        }
      }
      return swift_release();
    case 8:
      v15 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(a1, 1, v15))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a1, v15);
      v16 = (int *)type metadata accessor for ContainerDetailTracklistFooterLockup();
      __swift_destroy_boxed_opaque_existential_1(a1 + v16[5]);
      v17 = a1 + v16[6];
      v18 = type metadata accessor for ContentDescriptor();
      if (!__swift_getEnumTagSinglePayload(v17, 1, v18))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v19 = v17 + *(int *)(v18 + 24);
        v20 = sub_21D7BF754();
        if (!__swift_getEnumTagSinglePayload(v19, 1, v20))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
      }
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + v16[9] + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      goto LABEL_114;
    case 9:
      v21 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(a1, 1, v21))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(a1, v21);
      v22 = (int *)type metadata accessor for CuratorDetailHeaderComponentModel();
      __swift_destroy_boxed_opaque_existential_1(a1 + v22[5]);
      swift_bridgeObjectRelease();
      v23 = a1 + v22[7];
      v24 = sub_21D7BF754();
      if (!__swift_getEnumTagSinglePayload(v23, 1, v24))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
      v25 = a1 + v22[8];
      v26 = type metadata accessor for Artwork();
      if (!__swift_getEnumTagSinglePayload(v25, 1, v26))
      {
        v27 = sub_21D7C3840();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v25, v27);
        v28 = v25 + *(int *)(v26 + 20);
        v29 = sub_21D7C3804();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
      }
      v30 = a1 + v22[10];
      if (!__swift_getEnumTagSinglePayload(v30, 1, v26))
      {
        v31 = sub_21D7C3840();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v30, v31);
        v32 = v30 + *(int *)(v26 + 20);
        v33 = sub_21D7C3804();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v32, v33);
      }
      v34 = a1 + v22[11];
      v35 = type metadata accessor for VideoArtwork();
      if (!__swift_getEnumTagSinglePayload(v34, 1, v35))
      {
        swift_bridgeObjectRelease();
        v36 = v34 + *(int *)(v35 + 20);
        v37 = sub_21D7C3804();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v36, v37);
      }
      v38 = a1 + v22[12];
      v39 = type metadata accessor for ContentDescriptor();
      result = __swift_getEnumTagSinglePayload(v38, 1, v39);
      if ((_DWORD)result)
        return result;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v40 = v38 + *(int *)(v39 + 24);
      goto LABEL_118;
    case 10:
      __swift_destroy_boxed_opaque_existential_1(a1);
      v41 = a1 + *(int *)(type metadata accessor for EmptyStateLockup() + 20);
      v42 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(v41, 1, v42))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v41, v42);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_114;
    case 12:
      v43 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(a1, 1, v43))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(a1, v43);
      v44 = type metadata accessor for GroupedTextListLockup();
      __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(v44 + 20));
      v45 = a1 + *(int *)(v44 + 24);
      v46 = type metadata accessor for ModalPresentationDescriptor();
      if (!__swift_getEnumTagSinglePayload(v45, 1, v46))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        v47 = v45 + *(int *)(v46 + 40);
        v48 = sub_21D7C4314();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v47, v48);
      }
      goto LABEL_114;
    case 16:
      __swift_destroy_boxed_opaque_existential_1(a1);
      v49 = (int *)type metadata accessor for InlineUpsell();
      v50 = a1 + v49[5];
      v51 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(v50, 1, v51))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(v50, v51);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v52 = a1 + v49[9];
      if (*(_QWORD *)(v52 + 24))
        __swift_destroy_boxed_opaque_existential_1(v52);
      v53 = a1 + v49[10];
      if (*(_QWORD *)(v53 + 24))
        __swift_destroy_boxed_opaque_existential_1(v53);
      v54 = v49[11];
      goto LABEL_103;
    case 17:
      __swift_destroy_boxed_opaque_existential_1(a1);
      v55 = (int *)type metadata accessor for LandingUpsell();
      v56 = a1 + v55[5];
      v57 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(v56, 1, v57))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v56, v57);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v58 = a1 + v55[10];
      if (*(_QWORD *)(v58 + 24))
        __swift_destroy_boxed_opaque_existential_1(v58);
      v59 = a1 + v55[11];
      if (*(_QWORD *)(v59 + 24))
        __swift_destroy_boxed_opaque_existential_1(v59);
      v60 = a1 + v55[12];
      if (*(_QWORD *)(v60 + 24))
        __swift_destroy_boxed_opaque_existential_1(v60);
      v61 = a1 + v55[13];
      v62 = type metadata accessor for Artwork();
      if (!__swift_getEnumTagSinglePayload(v61, 1, v62))
      {
        v63 = sub_21D7C3840();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 8))(v61, v63);
        v64 = v61 + *(int *)(v62 + 20);
        v65 = sub_21D7C3804();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 8))(v64, v65);
      }
      v66 = a1 + v55[14];
      result = __swift_getEnumTagSinglePayload(v66, 1, v62);
      if ((_DWORD)result)
        return result;
      v67 = sub_21D7C3840();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 8))(v66, v67);
      v68 = *(int *)(v62 + 20);
      goto LABEL_84;
    case 19:
      v69 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(a1, 1, v69))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 8))(a1, v69);
      v70 = type metadata accessor for ListSection();
      __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(v70 + 20));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_114;
    case 20:
      v71 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(a1, 1, v71))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 8))(a1, v71);
      v72 = type metadata accessor for ParagraphComponentModel();
      __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(v72 + 20));
      goto LABEL_114;
    case 22:
      v73 = sub_21D7C3B58();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 8))(a1, v73);
      v4 = &qword_253F63AD8;
LABEL_64:
      __swift_instantiateConcreteTypeFromMangledName(v4);
      goto LABEL_114;
    case 23:
      v74 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(a1, 1, v74))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 8))(a1, v74);
      v75 = type metadata accessor for PopoverSelector();
      __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(v75 + 20));
      swift_bridgeObjectRelease();
      goto LABEL_114;
    case 28:
      __swift_destroy_boxed_opaque_existential_1(a1);
      v76 = a1 + *(int *)(type metadata accessor for SocialOnboardingNotificationSettingsPageLockup() + 20);
      v77 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(v76, 1, v77))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 8))(v76, v77);
      goto LABEL_114;
    case 29:
      __swift_destroy_boxed_opaque_existential_1(a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v78 = *(int *)(type metadata accessor for SocialOnboardingPrivacySettingsPageLockup() + 44);
      goto LABEL_117;
    case 31:
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(a1 + 16);
      v78 = *(int *)(type metadata accessor for SocialOnboardingUserNameHandlePageLockup() + 24);
      goto LABEL_117;
    case 32:
      v79 = type metadata accessor for Artwork();
      if (!__swift_getEnumTagSinglePayload(a1, 1, v79))
      {
        v80 = sub_21D7C3840();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 8))(a1, v80);
        v81 = a1 + *(int *)(v79 + 20);
        v82 = sub_21D7C3804();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 8))(v81, v82);
      }
      v83 = type metadata accessor for SocialOnboardingWelcomePageLockup();
      __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(v83 + 20));
      v84 = a1 + *(int *)(v83 + 24);
      v85 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(v84, 1, v85))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 8))(v84, v85);
      swift_bridgeObjectRelease();
      goto LABEL_114;
    case 33:
      v86 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(a1, 1, v86))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 8))(a1, v86);
      v87 = (int *)type metadata accessor for SocialProfileDetailHeaderLockup();
      __swift_destroy_boxed_opaque_existential_1(a1 + v87[5]);
      v88 = a1 + v87[6];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v89 = v88 + *(int *)(type metadata accessor for ContentDescriptor() + 24);
      v90 = sub_21D7BF754();
      if (!__swift_getEnumTagSinglePayload(v89, 1, v90))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 8))(v89, v90);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v66 = a1 + v87[11];
      v91 = type metadata accessor for Artwork();
      result = __swift_getEnumTagSinglePayload(v66, 1, v91);
      if ((_DWORD)result)
        return result;
      v92 = sub_21D7C3840();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 8))(v66, v92);
      v68 = *(int *)(v91 + 20);
LABEL_84:
      v93 = v66 + v68;
      v94 = sub_21D7C3804();
      v95 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 8);
      v96 = v93;
      goto LABEL_121;
    case 34:
      v97 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(a1, 1, v97))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 8))(a1, v97);
      v98 = (int *)type metadata accessor for SocialProfileEditorHeaderLockup(0);
      __swift_destroy_boxed_opaque_existential_1(a1 + v98[5]);
      v99 = a1 + v98[6];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v100 = v99 + *(int *)(type metadata accessor for ContentDescriptor() + 24);
      v101 = sub_21D7BF754();
      if (!__swift_getEnumTagSinglePayload(v100, 1, v101))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 8))(v100, v101);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v102 = a1 + v98[16];
      v103 = type metadata accessor for Artwork();
      if (!__swift_getEnumTagSinglePayload(v102, 1, v103))
      {
        v104 = sub_21D7C3840();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 8))(v102, v104);
        v105 = v102 + *(int *)(v103 + 20);
        v106 = sub_21D7C3804();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 8))(v105, v106);
      }
      goto LABEL_114;
    case 35:
      v107 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(a1, 1, v107))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 8))(a1, v107);
      FriendsButtonComponentModel = type metadata accessor for SocialProfileFindFriendsButtonComponentModel();
      __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(FriendsButtonComponentModel + 20));
      swift_bridgeObjectRelease();
      v54 = *(int *)(FriendsButtonComponentModel + 28);
      goto LABEL_103;
    case 36:
      v109 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(a1, 1, v109))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 8))(a1, v109);
      v110 = type metadata accessor for SocialProfileDetailViewFollowRequestsHeader();
      __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(v110 + 20));
      goto LABEL_114;
    case 37:
      v111 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(a1, 1, v111))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 8))(a1, v111);
      v112 = (int *)type metadata accessor for SocialProfileFollowRequestResponseHeader();
      __swift_destroy_boxed_opaque_existential_1(a1 + v112[5]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v113 = a1 + v112[8];
      if (*(_QWORD *)(v113 + 24))
        __swift_destroy_boxed_opaque_existential_1(v113);
      v54 = v112[9];
LABEL_103:
      result = a1 + v54;
      if (*(_QWORD *)(a1 + v54 + 24))
        return __swift_destroy_boxed_opaque_existential_1(result);
      return result;
    case 38:
      v114 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(a1, 1, v114))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 8))(a1, v114);
      v115 = type metadata accessor for SocialProfileFollowRequestsPageComponentModel();
      __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(v115 + 20));
      goto LABEL_114;
    case 40:
      __swift_destroy_boxed_opaque_existential_1(a1);
      v116 = a1 + *(int *)(type metadata accessor for SocialOnboardingSharedPlaylistPageLockup() + 20);
      v117 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(v116, 1, v117))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 8))(v116, v117);
      goto LABEL_114;
    case 41:
      __swift_destroy_boxed_opaque_existential_1(a1);
      v118 = a1 + *(int *)(type metadata accessor for SocialOnboardingFindFriendsPageSectionLockup() + 20);
      v119 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(v118, 1, v119))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 8))(v118, v119);
      swift_bridgeObjectRelease();
      goto LABEL_114;
    case 42:
      __swift_destroy_boxed_opaque_existential_1(a1);
      swift_release();
LABEL_114:
      result = swift_bridgeObjectRelease();
      break;
    case 43:
      __swift_destroy_boxed_opaque_existential_1(a1);
      v78 = *(int *)(type metadata accessor for Spacer() + 20);
LABEL_117:
      v40 = a1 + v78;
      v24 = sub_21D7C4668();
LABEL_118:
      result = __swift_getEnumTagSinglePayload(v40, 1, v24);
      if (!(_DWORD)result)
      {
        v95 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8);
        v96 = v40;
        v94 = v24;
LABEL_121:
        result = v95(v96, v94);
      }
      break;
    default:
      return result;
  }
  return result;
}

void sub_21CE77D4C()
{
  char *v0;

  type metadata accessor for MappedSection.Content(0);
  v0 = (char *)sub_21CE77DA8 + 4 * word_21D7CEEA4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_21CE77DA8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void *__dst, void *a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  _QWORD *v32;
  _QWORD *v33;

  *v32 = *v33;
  swift_retain();
  swift_storeEnumTagMultiPayload();
  return v32;
}

uint64_t sub_21CE7B1F8(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_21CDBDA1C(result, type metadata accessor for MappedSection.Content);
    type metadata accessor for MappedSection.Content(0);
    v2 = (char *)&loc_21CE7B26C + 4 * word_21D7CEF0E[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_21CE7EB14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  int *v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  int *v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  int *v28;
  uint64_t v29;
  void *v30;
  const void *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  int *v35;
  uint64_t v36;
  void *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  int *v50;
  uint64_t v51;
  void *v52;
  const void *v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  void *v59;
  const void *v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  const void *v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  int *FriendsPageSectionLockup;
  uint64_t v87;
  void *v88;
  const void *v89;
  uint64_t v90;
  uint64_t v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _BYTE *v96;
  _BYTE *v97;
  uint64_t v98;
  uint64_t v99;
  int *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __int128 v104;
  uint64_t v105;
  _BYTE *v106;
  _BYTE *v107;
  uint64_t v108;
  uint64_t v109;
  int *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  __int128 v114;
  uint64_t v115;
  void *v116;
  const void *v117;
  uint64_t v118;
  uint64_t v119;
  int *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  __int128 v124;
  uint64_t v125;
  _OWORD *v126;
  _OWORD *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  __int128 v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  __int128 v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  __int128 v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  __int128 v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  __int128 v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  __int128 v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  int *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  __int128 v163;
  int *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  __int128 v168;
  int *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  __int128 v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  int *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  __int128 v183;
  uint64_t v184;
  void *v185;
  const void *v186;
  uint64_t v187;
  uint64_t v188;
  int *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  __int128 v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  void *v198;
  const void *v199;
  uint64_t v200;
  uint64_t v201;
  int *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  __int128 v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  void *v211;
  const void *v212;
  uint64_t v213;
  uint64_t v214;
  int *FriendsButtonComponentModel;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  __int128 v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  __int128 v223;
  int *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  __int128 v228;
  int *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  __int128 v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  __int128 v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  __int128 v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  __int128 v246;
  uint64_t v247;
  _OWORD *v248;
  _OWORD *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  _BYTE *v253;
  _BYTE *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  char *v259;
  uint64_t v260;
  uint64_t v261;
  __int128 v262;
  uint64_t v263;
  char *v264;
  char *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  char *v269;
  char *v270;
  uint64_t v271;
  uint64_t v272;
  char *v273;
  char *v274;
  uint64_t v275;
  uint64_t v276;
  char *v277;
  char *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  char *v282;
  char *v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  char *v288;
  char *v289;
  uint64_t v290;
  uint64_t v291;
  char *v292;
  char *v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  char *v297;
  char *v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  char *v302;
  char *v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  char *v307;
  char *v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  char *v312;
  char *v313;
  uint64_t v314;
  uint64_t v315;
  _QWORD *v316;
  _QWORD *v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  char *v321;
  char *v322;
  uint64_t v323;
  uint64_t v324;
  _BYTE *v325;
  _BYTE *v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  _BYTE *v330;
  _BYTE *v331;
  uint64_t v332;
  int EnumCaseMultiPayload;
  __int128 v334;
  int *v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  char *v343;
  uint64_t v344;
  uint64_t v345;
  char *v346;
  char *v347;
  uint64_t v348;
  char *v349;
  char *v350;
  uint64_t v351;
  char *v352;
  char *v353;
  uint64_t v354;
  char *v355;
  char *v356;
  __int128 v357;
  uint64_t v358;
  _BYTE *v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  char *v364;
  uint64_t v365;
  uint64_t v366;
  _BYTE *v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  _BYTE *v371;
  _BYTE *v372;
  uint64_t v373;
  uint64_t v374;
  _OWORD *v375;
  _OWORD *v376;
  uint64_t v377;
  uint64_t v378;
  int v379;
  __int128 v380;
  int *v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  char *v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  char *v390;
  char *v391;
  uint64_t v392;
  char *v393;
  char *v394;
  uint64_t v395;
  char *v396;
  char *v397;
  uint64_t v398;
  char *v399;
  char *v400;
  __int128 v401;
  uint64_t v402;
  _BYTE *v403;
  _BYTE *v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  char *v409;
  uint64_t v410;
  uint64_t v411;
  _BYTE *v412;
  uint64_t v413;
  uint64_t v414;
  char *v416;
  _BYTE *v417;
  uint64_t v418;
  char *v419;
  uint64_t v420;
  char *v421;
  uint64_t v422;
  uint64_t v423;
  char *v424;
  uint64_t v425;
  char *__dst;
  char *__dsta;
  _BYTE *__dstb;
  char *__dstc;
  char *__dstd;
  _BYTE *__dste;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;

  v4 = type metadata accessor for MappedSection.Content(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      v5 = sub_21D7C3660();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
      v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F63AC0);
      *(_QWORD *)(a1 + *(int *)(v6 + 52)) = *(_QWORD *)(a2 + *(int *)(v6 + 52));
      *(_QWORD *)(a1 + *(int *)(v6 + 56)) = *(_QWORD *)(a2 + *(int *)(v6 + 56));
      goto LABEL_187;
    case 5u:
      v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      v8 = (int *)type metadata accessor for MappedArtistLatestReleaseAndTopSongs(0);
      v9 = v8[5];
      v10 = (void *)(a1 + v9);
      v11 = (const void *)(a2 + v9);
      v12 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
        __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
      }
      v95 = v8[6];
      v96 = (_BYTE *)(a1 + v95);
      v97 = (_BYTE *)(a2 + v95);
      v98 = _s7SectionV6HeaderVMa(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v97, 1, v98))
      {
        v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65088);
        memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
        goto LABEL_162;
      }
      *v96 = *v97;
      v247 = *(int *)(v98 + 20);
      v248 = &v96[v247];
      v249 = &v97[v247];
      v250 = _s7SectionV6HeaderV12HeaderLockupOMa(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v249, 1, v250))
      {
        v251 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65058);
        memcpy(v248, v249, *(_QWORD *)(*(_QWORD *)(v251 - 8) + 64));
        goto LABEL_161;
      }
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v433 = v250;
        memcpy(v248, v249, 0x48uLL);
        memcpy((char *)v248 + 72, (char *)v249 + 72, 0x58uLL);
        v341 = type metadata accessor for DefaultSectionHeader();
        v342 = *(int *)(v341 + 32);
        v422 = v341;
        __dsta = (char *)v248 + v342;
        v343 = (char *)v249 + v342;
        v418 = type metadata accessor for Artwork();
        if (__swift_getEnumTagSinglePayload((uint64_t)v343, 1, v418))
        {
          v344 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
          memcpy(__dsta, v343, *(_QWORD *)(*(_QWORD *)(v344 - 8) + 64));
        }
        else
        {
          v362 = sub_21D7C3840();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v362 - 8) + 32))(__dsta, v343, v362);
          v363 = *(int *)(v418 + 20);
          v416 = &__dsta[v363];
          v364 = &v343[v363];
          v365 = sub_21D7C3804();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v365 - 8) + 32))(v416, v364, v365);
          __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v418);
        }
        *((_BYTE *)v248 + *(int *)(v422 + 36)) = *((_BYTE *)v249 + *(int *)(v422 + 36));
        v250 = v433;
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          memcpy(v248, v249, *(_QWORD *)(*(_QWORD *)(v250 - 8) + 64));
          goto LABEL_160;
        }
        v432 = v250;
        v334 = v249[1];
        *v248 = *v249;
        v248[1] = v334;
        *((_QWORD *)v248 + 4) = *((_QWORD *)v249 + 4);
        v335 = (int *)type metadata accessor for ComposerSectionHeader();
        v336 = v335[5];
        v421 = (char *)v249 + v336;
        __dst = (char *)v248 + v336;
        if (__swift_getEnumTagSinglePayload((uint64_t)v249 + v336, 1, v12))
        {
          v337 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(__dst, v421, *(_QWORD *)(*(_QWORD *)(v337 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(__dst, v421, v12);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v12);
        }
        *(_OWORD *)((char *)v248 + v335[6]) = *(_OWORD *)((char *)v249 + v335[6]);
        v345 = v335[7];
        v346 = (char *)v248 + v345;
        v347 = (char *)v249 + v345;
        v346[8] = v347[8];
        *(_QWORD *)v346 = *(_QWORD *)v347;
        v348 = v335[8];
        v349 = (char *)v248 + v348;
        v350 = (char *)v249 + v348;
        *(_QWORD *)v349 = *(_QWORD *)v350;
        v349[8] = v350[8];
        v351 = v335[9];
        v352 = (char *)v248 + v351;
        v353 = (char *)v249 + v351;
        *(_QWORD *)v352 = *(_QWORD *)v353;
        v352[8] = v353[8];
        *(_OWORD *)((char *)v248 + v335[10]) = *(_OWORD *)((char *)v249 + v335[10]);
        v354 = v335[11];
        v355 = (char *)v248 + v354;
        v356 = (char *)v249 + v354;
        v357 = *((_OWORD *)v356 + 1);
        *(_OWORD *)v355 = *(_OWORD *)v356;
        *((_OWORD *)v355 + 1) = v357;
        *((_QWORD *)v355 + 4) = *((_QWORD *)v356 + 4);
        v358 = v335[12];
        __dstb = (char *)v248 + v358;
        v359 = (char *)v249 + v358;
        v360 = type metadata accessor for ContentDescriptor();
        if (__swift_getEnumTagSinglePayload((uint64_t)v359, 1, v360))
        {
          v361 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
          memcpy(__dstb, v359, *(_QWORD *)(*(_QWORD *)(v361 - 8) + 64));
        }
        else
        {
          *__dstb = *v359;
          memcpy(__dstb + 8, v359 + 8, 0x69uLL);
          v423 = v360;
          v366 = *(int *)(v360 + 24);
          v417 = &__dstb[v366];
          v367 = &v359[v366];
          v368 = sub_21D7BF754();
          if (__swift_getEnumTagSinglePayload((uint64_t)v367, 1, v368))
          {
            v369 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
            memcpy(v417, v367, *(_QWORD *)(*(_QWORD *)(v369 - 8) + 64));
          }
          else
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v368 - 8) + 32))(v417, v367, v368);
            __swift_storeEnumTagSinglePayload((uint64_t)v417, 0, 1, v368);
          }
          __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v423);
        }
        v250 = v432;
      }
      swift_storeEnumTagMultiPayload();
LABEL_160:
      __swift_storeEnumTagSinglePayload((uint64_t)v248, 0, 1, v250);
LABEL_161:
      __swift_storeEnumTagSinglePayload((uint64_t)v96, 0, 1, v98);
LABEL_162:
      *(_OWORD *)(a1 + v8[7]) = *(_OWORD *)(a2 + v8[7]);
      v370 = v8[8];
      v371 = (_BYTE *)(a1 + v370);
      v372 = (_BYTE *)(a2 + v370);
      if (__swift_getEnumTagSinglePayload(a2 + v370, 1, v98))
      {
        v373 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65088);
        memcpy(v371, v372, *(_QWORD *)(*(_QWORD *)(v373 - 8) + 64));
        goto LABEL_186;
      }
      *v371 = *v372;
      v374 = *(int *)(v98 + 20);
      v375 = &v371[v374];
      v376 = &v372[v374];
      v377 = _s7SectionV6HeaderV12HeaderLockupOMa(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v376, 1, v377))
      {
        v378 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65058);
        memcpy(v375, v376, *(_QWORD *)(*(_QWORD *)(v378 - 8) + 64));
        goto LABEL_185;
      }
      v379 = swift_getEnumCaseMultiPayload();
      if (v379 == 2)
      {
        v435 = v377;
        memcpy(v375, v376, 0x48uLL);
        memcpy((char *)v375 + 72, (char *)v376 + 72, 0x58uLL);
        v384 = type metadata accessor for DefaultSectionHeader();
        v385 = *(int *)(v384 + 32);
        v425 = v384;
        __dstd = (char *)v375 + v385;
        v386 = (char *)v376 + v385;
        v387 = type metadata accessor for Artwork();
        if (__swift_getEnumTagSinglePayload((uint64_t)v386, 1, v387))
        {
          v388 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
          memcpy(__dstd, v386, *(_QWORD *)(*(_QWORD *)(v388 - 8) + 64));
        }
        else
        {
          v407 = sub_21D7C3840();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v407 - 8) + 32))(__dstd, v386, v407);
          v408 = *(int *)(v387 + 20);
          v419 = &__dstd[v408];
          v409 = &v386[v408];
          v410 = sub_21D7C3804();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v410 - 8) + 32))(v419, v409, v410);
          __swift_storeEnumTagSinglePayload((uint64_t)__dstd, 0, 1, v387);
        }
        *((_BYTE *)v375 + *(int *)(v425 + 36)) = *((_BYTE *)v376 + *(int *)(v425 + 36));
        v377 = v435;
      }
      else
      {
        if (v379 != 1)
        {
          memcpy(v375, v376, *(_QWORD *)(*(_QWORD *)(v377 - 8) + 64));
          goto LABEL_184;
        }
        v434 = v377;
        v380 = v376[1];
        *v375 = *v376;
        v375[1] = v380;
        *((_QWORD *)v375 + 4) = *((_QWORD *)v376 + 4);
        v381 = (int *)type metadata accessor for ComposerSectionHeader();
        v382 = v381[5];
        v424 = (char *)v376 + v382;
        __dstc = (char *)v375 + v382;
        if (__swift_getEnumTagSinglePayload((uint64_t)v376 + v382, 1, v12))
        {
          v383 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(__dstc, v424, *(_QWORD *)(*(_QWORD *)(v383 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(__dstc, v424, v12);
          __swift_storeEnumTagSinglePayload((uint64_t)__dstc, 0, 1, v12);
        }
        *(_OWORD *)((char *)v375 + v381[6]) = *(_OWORD *)((char *)v376 + v381[6]);
        v389 = v381[7];
        v390 = (char *)v375 + v389;
        v391 = (char *)v376 + v389;
        v390[8] = v391[8];
        *(_QWORD *)v390 = *(_QWORD *)v391;
        v392 = v381[8];
        v393 = (char *)v375 + v392;
        v394 = (char *)v376 + v392;
        *(_QWORD *)v393 = *(_QWORD *)v394;
        v393[8] = v394[8];
        v395 = v381[9];
        v396 = (char *)v375 + v395;
        v397 = (char *)v376 + v395;
        *(_QWORD *)v396 = *(_QWORD *)v397;
        v396[8] = v397[8];
        *(_OWORD *)((char *)v375 + v381[10]) = *(_OWORD *)((char *)v376 + v381[10]);
        v398 = v381[11];
        v399 = (char *)v375 + v398;
        v400 = (char *)v376 + v398;
        v401 = *((_OWORD *)v400 + 1);
        *(_OWORD *)v399 = *(_OWORD *)v400;
        *((_OWORD *)v399 + 1) = v401;
        *((_QWORD *)v399 + 4) = *((_QWORD *)v400 + 4);
        v402 = v381[12];
        v403 = (char *)v375 + v402;
        v404 = (char *)v376 + v402;
        v405 = type metadata accessor for ContentDescriptor();
        if (__swift_getEnumTagSinglePayload((uint64_t)v404, 1, v405))
        {
          v406 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
          memcpy(v403, v404, *(_QWORD *)(*(_QWORD *)(v406 - 8) + 64));
        }
        else
        {
          *v403 = *v404;
          memcpy(v403 + 8, v404 + 8, 0x69uLL);
          v411 = *(int *)(v405 + 24);
          v420 = (uint64_t)v403;
          __dste = &v403[v411];
          v412 = &v404[v411];
          v413 = sub_21D7BF754();
          if (__swift_getEnumTagSinglePayload((uint64_t)v412, 1, v413))
          {
            v414 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
            memcpy(__dste, v412, *(_QWORD *)(*(_QWORD *)(v414 - 8) + 64));
          }
          else
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v413 - 8) + 32))(__dste, v412, v413);
            __swift_storeEnumTagSinglePayload((uint64_t)__dste, 0, 1, v413);
          }
          __swift_storeEnumTagSinglePayload(v420, 0, 1, v405);
        }
        v377 = v434;
      }
      swift_storeEnumTagMultiPayload();
LABEL_184:
      __swift_storeEnumTagSinglePayload((uint64_t)v375, 0, 1, v377);
LABEL_185:
      __swift_storeEnumTagSinglePayload((uint64_t)v371, 0, 1, v98);
LABEL_186:
      *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
LABEL_187:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 8u:
      v14 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload(a2, 1, v14))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
        __swift_storeEnumTagSinglePayload(a1, 0, 1, v14);
      }
      v100 = (int *)type metadata accessor for ContainerDetailTracklistFooterLockup();
      v101 = v100[5];
      v102 = a1 + v101;
      v103 = a2 + v101;
      v104 = *(_OWORD *)(v103 + 16);
      *(_OWORD *)v102 = *(_OWORD *)v103;
      *(_OWORD *)(v102 + 16) = v104;
      *(_QWORD *)(v102 + 32) = *(_QWORD *)(v103 + 32);
      v105 = v100[6];
      v106 = (_BYTE *)(a1 + v105);
      v107 = (_BYTE *)(a2 + v105);
      v108 = type metadata accessor for ContentDescriptor();
      if (__swift_getEnumTagSinglePayload((uint64_t)v107, 1, v108))
      {
        v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
        memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
      }
      else
      {
        *v106 = *v107;
        memcpy(v106 + 8, v107 + 8, 0x69uLL);
        v252 = *(int *)(v108 + 24);
        v253 = &v106[v252];
        v254 = &v107[v252];
        v255 = sub_21D7BF754();
        if (__swift_getEnumTagSinglePayload((uint64_t)v254, 1, v255))
        {
          v256 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
          memcpy(v253, v254, *(_QWORD *)(*(_QWORD *)(v256 - 8) + 64));
        }
        else
        {
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v255 - 8) + 32))(v253, v254, v255);
          __swift_storeEnumTagSinglePayload((uint64_t)v253, 0, 1, v255);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v106, 0, 1, v108);
      }
      *(_QWORD *)(a1 + v100[7]) = *(_QWORD *)(a2 + v100[7]);
      *(_OWORD *)(a1 + v100[8]) = *(_OWORD *)(a2 + v100[8]);
      v338 = v100[9];
      v339 = a1 + v338;
      v340 = a2 + v338;
      *(_OWORD *)v339 = *(_OWORD *)v340;
      *(_QWORD *)(v339 + 16) = *(_QWORD *)(v340 + 16);
      *(_QWORD *)(a1 + v100[10]) = *(_QWORD *)(a2 + v100[10]);
      goto LABEL_187;
    case 9u:
      v16 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload(a2, 1, v16))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a1, a2, v16);
        __swift_storeEnumTagSinglePayload(a1, 0, 1, v16);
      }
      v110 = (int *)type metadata accessor for CuratorDetailHeaderComponentModel();
      v111 = v110[5];
      v112 = a1 + v111;
      v113 = a2 + v111;
      v114 = *(_OWORD *)(v113 + 16);
      *(_OWORD *)v112 = *(_OWORD *)v113;
      *(_OWORD *)(v112 + 16) = v114;
      *(_QWORD *)(v112 + 32) = *(_QWORD *)(v113 + 32);
      *(_OWORD *)(a1 + v110[6]) = *(_OWORD *)(a2 + v110[6]);
      v115 = v110[7];
      v116 = (void *)(a1 + v115);
      v117 = (const void *)(a2 + v115);
      v118 = sub_21D7BF754();
      if (__swift_getEnumTagSinglePayload((uint64_t)v117, 1, v118))
      {
        v119 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
        memcpy(v116, v117, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v118 - 8) + 32))(v116, v117, v118);
        __swift_storeEnumTagSinglePayload((uint64_t)v116, 0, 1, v118);
      }
      v257 = v110[8];
      v258 = (char *)(a1 + v257);
      v259 = (char *)(a2 + v257);
      v260 = type metadata accessor for Artwork();
      if (__swift_getEnumTagSinglePayload((uint64_t)v259, 1, v260))
      {
        v261 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
        memcpy(v258, v259, *(_QWORD *)(*(_QWORD *)(v261 - 8) + 64));
      }
      else
      {
        v286 = sub_21D7C3840();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v286 - 8) + 32))(v258, v259, v286);
        v287 = *(int *)(v260 + 20);
        v288 = &v258[v287];
        v289 = &v259[v287];
        v290 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v290 - 8) + 32))(v288, v289, v290);
        __swift_storeEnumTagSinglePayload((uint64_t)v258, 0, 1, v260);
      }
      *(_BYTE *)(a1 + v110[9]) = *(_BYTE *)(a2 + v110[9]);
      v291 = v110[10];
      v292 = (char *)(a1 + v291);
      v293 = (char *)(a2 + v291);
      if (__swift_getEnumTagSinglePayload(a2 + v291, 1, v260))
      {
        v294 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
        memcpy(v292, v293, *(_QWORD *)(*(_QWORD *)(v294 - 8) + 64));
      }
      else
      {
        v310 = sub_21D7C3840();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v310 - 8) + 32))(v292, v293, v310);
        v311 = *(int *)(v260 + 20);
        v312 = &v292[v311];
        v313 = &v293[v311];
        v314 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v314 - 8) + 32))(v312, v313, v314);
        __swift_storeEnumTagSinglePayload((uint64_t)v292, 0, 1, v260);
      }
      v315 = v110[11];
      v316 = (_QWORD *)(a1 + v315);
      v317 = (_QWORD *)(a2 + v315);
      v318 = type metadata accessor for VideoArtwork();
      if (__swift_getEnumTagSinglePayload((uint64_t)v317, 1, v318))
      {
        v319 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5F718);
        memcpy(v316, v317, *(_QWORD *)(*(_QWORD *)(v319 - 8) + 64));
      }
      else
      {
        *v316 = *v317;
        v320 = *(int *)(v318 + 20);
        v321 = (char *)v316 + v320;
        v322 = (char *)v317 + v320;
        v323 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v323 - 8) + 32))(v321, v322, v323);
        __swift_storeEnumTagSinglePayload((uint64_t)v316, 0, 1, v318);
      }
      v324 = v110[12];
      v325 = (_BYTE *)(a1 + v324);
      v326 = (_BYTE *)(a2 + v324);
      v327 = type metadata accessor for ContentDescriptor();
      if (__swift_getEnumTagSinglePayload((uint64_t)v326, 1, v327))
      {
        v328 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
        memcpy(v325, v326, *(_QWORD *)(*(_QWORD *)(v328 - 8) + 64));
      }
      else
      {
        *v325 = *v326;
        memcpy(v325 + 8, v326 + 8, 0x69uLL);
        v329 = *(int *)(v327 + 24);
        v330 = &v325[v329];
        v331 = &v326[v329];
        if (__swift_getEnumTagSinglePayload((uint64_t)v331, 1, v118))
        {
          v332 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
          memcpy(v330, v331, *(_QWORD *)(*(_QWORD *)(v332 - 8) + 64));
        }
        else
        {
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v118 - 8) + 32))(v330, v331, v118);
          __swift_storeEnumTagSinglePayload((uint64_t)v330, 0, 1, v118);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v325, 0, 1, v327);
      }
      goto LABEL_187;
    case 0xAu:
      v18 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v18;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      v19 = (int *)type metadata accessor for EmptyStateLockup();
      v20 = v19[5];
      v21 = (void *)(a1 + v20);
      v22 = (const void *)(a2 + v20);
      v23 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
        __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v23);
      }
      *(_BYTE *)(a1 + v19[6]) = *(_BYTE *)(a2 + v19[6]);
      *(_OWORD *)(a1 + v19[7]) = *(_OWORD *)(a2 + v19[7]);
      *(_OWORD *)(a1 + v19[8]) = *(_OWORD *)(a2 + v19[8]);
      *(_OWORD *)(a1 + v19[9]) = *(_OWORD *)(a2 + v19[9]);
      goto LABEL_187;
    case 0xCu:
      v25 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload(a2, 1, v25))
      {
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(a1, a2, v25);
        __swift_storeEnumTagSinglePayload(a1, 0, 1, v25);
      }
      v120 = (int *)type metadata accessor for GroupedTextListLockup();
      v121 = v120[5];
      v122 = a1 + v121;
      v123 = a2 + v121;
      v124 = *(_OWORD *)(v123 + 16);
      *(_OWORD *)v122 = *(_OWORD *)v123;
      *(_OWORD *)(v122 + 16) = v124;
      *(_QWORD *)(v122 + 32) = *(_QWORD *)(v123 + 32);
      v125 = v120[6];
      v126 = (_OWORD *)(a1 + v125);
      v127 = (_OWORD *)(a2 + v125);
      v128 = type metadata accessor for ModalPresentationDescriptor();
      if (__swift_getEnumTagSinglePayload((uint64_t)v127, 1, v128))
      {
        v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553303E8);
        memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
      }
      else
      {
        v262 = v127[1];
        *v126 = *v127;
        v126[1] = v262;
        v126[2] = v127[2];
        *((_BYTE *)v126 + 48) = *((_BYTE *)v127 + 48);
        *((_QWORD *)v126 + 7) = *((_QWORD *)v127 + 7);
        *((_BYTE *)v126 + 64) = *((_BYTE *)v127 + 64);
        v263 = *(int *)(v128 + 40);
        v264 = (char *)v126 + v263;
        v265 = (char *)v127 + v263;
        v266 = sub_21D7C4314();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v266 - 8) + 32))(v264, v265, v266);
        __swift_storeEnumTagSinglePayload((uint64_t)v126, 0, 1, v128);
      }
      *(_QWORD *)(a1 + v120[7]) = *(_QWORD *)(a2 + v120[7]);
      goto LABEL_187;
    case 0x10u:
      v27 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v27;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      v28 = (int *)type metadata accessor for InlineUpsell();
      v29 = v28[5];
      v30 = (void *)(a1 + v29);
      v31 = (const void *)(a2 + v29);
      v32 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v32))
      {
        v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
        __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v32);
      }
      *(_OWORD *)(a1 + v28[6]) = *(_OWORD *)(a2 + v28[6]);
      *(_OWORD *)(a1 + v28[7]) = *(_OWORD *)(a2 + v28[7]);
      *(_OWORD *)(a1 + v28[8]) = *(_OWORD *)(a2 + v28[8]);
      v130 = v28[9];
      v131 = a1 + v130;
      v132 = a2 + v130;
      *(_QWORD *)(v131 + 32) = *(_QWORD *)(v132 + 32);
      v133 = *(_OWORD *)(v132 + 16);
      *(_OWORD *)v131 = *(_OWORD *)v132;
      *(_OWORD *)(v131 + 16) = v133;
      v134 = v28[10];
      v135 = a1 + v134;
      v136 = a2 + v134;
      *(_QWORD *)(v135 + 32) = *(_QWORD *)(v136 + 32);
      v137 = *(_OWORD *)(v136 + 16);
      *(_OWORD *)v135 = *(_OWORD *)v136;
      *(_OWORD *)(v135 + 16) = v137;
      v138 = v28[11];
      v139 = a1 + v138;
      v140 = a2 + v138;
      *(_QWORD *)(v139 + 32) = *(_QWORD *)(v140 + 32);
      v141 = *(_OWORD *)(v140 + 16);
      *(_OWORD *)v139 = *(_OWORD *)v140;
      *(_OWORD *)(v139 + 16) = v141;
      *(_BYTE *)(a1 + v28[12]) = *(_BYTE *)(a2 + v28[12]);
      goto LABEL_187;
    case 0x11u:
      v34 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v34;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      v35 = (int *)type metadata accessor for LandingUpsell();
      v36 = v35[5];
      v37 = (void *)(a1 + v36);
      v38 = (const void *)(a2 + v36);
      v39 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)v38, 1, v39))
      {
        v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
        __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v39);
      }
      *(_OWORD *)(a1 + v35[6]) = *(_OWORD *)(a2 + v35[6]);
      *(_OWORD *)(a1 + v35[7]) = *(_OWORD *)(a2 + v35[7]);
      *(_OWORD *)(a1 + v35[8]) = *(_OWORD *)(a2 + v35[8]);
      *(_OWORD *)(a1 + v35[9]) = *(_OWORD *)(a2 + v35[9]);
      v142 = v35[10];
      v143 = a1 + v142;
      v144 = a2 + v142;
      v145 = *(_OWORD *)(v144 + 16);
      *(_OWORD *)v143 = *(_OWORD *)v144;
      *(_OWORD *)(v143 + 16) = v145;
      *(_QWORD *)(v143 + 32) = *(_QWORD *)(v144 + 32);
      v146 = v35[11];
      v147 = a1 + v146;
      v148 = a2 + v146;
      v149 = *(_OWORD *)(v148 + 16);
      *(_OWORD *)v147 = *(_OWORD *)v148;
      *(_OWORD *)(v147 + 16) = v149;
      *(_QWORD *)(v147 + 32) = *(_QWORD *)(v148 + 32);
      v150 = v35[12];
      v151 = a1 + v150;
      v152 = a2 + v150;
      v153 = *(_OWORD *)(v152 + 16);
      *(_OWORD *)v151 = *(_OWORD *)v152;
      *(_OWORD *)(v151 + 16) = v153;
      *(_QWORD *)(v151 + 32) = *(_QWORD *)(v152 + 32);
      v154 = v35[13];
      v155 = (char *)(a1 + v154);
      v156 = (char *)(a2 + v154);
      v157 = type metadata accessor for Artwork();
      if (__swift_getEnumTagSinglePayload((uint64_t)v156, 1, v157))
      {
        v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
        memcpy(v155, v156, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
      }
      else
      {
        v267 = sub_21D7C3840();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v267 - 8) + 32))(v155, v156, v267);
        v268 = *(int *)(v157 + 20);
        v269 = &v155[v268];
        v270 = &v156[v268];
        v271 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v271 - 8) + 32))(v269, v270, v271);
        __swift_storeEnumTagSinglePayload((uint64_t)v155, 0, 1, v157);
      }
      v272 = v35[14];
      v273 = (char *)(a1 + v272);
      v274 = (char *)(a2 + v272);
      if (__swift_getEnumTagSinglePayload((uint64_t)v274, 1, v157))
      {
        v275 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
        memcpy(v273, v274, *(_QWORD *)(*(_QWORD *)(v275 - 8) + 64));
      }
      else
      {
        v295 = sub_21D7C3840();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v295 - 8) + 32))(v273, v274, v295);
        v296 = *(int *)(v157 + 20);
        v297 = &v273[v296];
        v298 = &v274[v296];
        v299 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v299 - 8) + 32))(v297, v298, v299);
        __swift_storeEnumTagSinglePayload((uint64_t)v273, 0, 1, v157);
      }
      goto LABEL_187;
    case 0x13u:
      v41 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload(a2, 1, v41))
      {
        v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(a1, a2, v41);
        __swift_storeEnumTagSinglePayload(a1, 0, 1, v41);
      }
      v159 = (int *)type metadata accessor for ListSection();
      v160 = v159[5];
      v161 = a1 + v160;
      v162 = a2 + v160;
      v163 = *(_OWORD *)(v162 + 16);
      *(_OWORD *)v161 = *(_OWORD *)v162;
      *(_OWORD *)(v161 + 16) = v163;
      *(_QWORD *)(v161 + 32) = *(_QWORD *)(v162 + 32);
      *(_OWORD *)(a1 + v159[6]) = *(_OWORD *)(a2 + v159[6]);
      *(_OWORD *)(a1 + v159[7]) = *(_OWORD *)(a2 + v159[7]);
      *(_QWORD *)(a1 + v159[8]) = *(_QWORD *)(a2 + v159[8]);
      goto LABEL_187;
    case 0x14u:
      v43 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload(a2, 1, v43))
      {
        v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(a1, a2, v43);
        __swift_storeEnumTagSinglePayload(a1, 0, 1, v43);
      }
      v164 = (int *)type metadata accessor for ParagraphComponentModel();
      v165 = v164[5];
      v166 = a1 + v165;
      v167 = a2 + v165;
      v168 = *(_OWORD *)(v167 + 16);
      *(_OWORD *)v166 = *(_OWORD *)v167;
      *(_OWORD *)(v166 + 16) = v168;
      *(_QWORD *)(v166 + 32) = *(_QWORD *)(v167 + 32);
      *(_OWORD *)(a1 + v164[6]) = *(_OWORD *)(a2 + v164[6]);
      *(_BYTE *)(a1 + v164[7]) = *(_BYTE *)(a2 + v164[7]);
      goto LABEL_187;
    case 0x16u:
      v45 = sub_21D7C3B58();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(a1, a2, v45);
      v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F63AD8);
      *(_QWORD *)(a1 + *(int *)(v46 + 52)) = *(_QWORD *)(a2 + *(int *)(v46 + 52));
      *(_QWORD *)(a1 + *(int *)(v46 + 56)) = *(_QWORD *)(a2 + *(int *)(v46 + 56));
      goto LABEL_187;
    case 0x17u:
      v47 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload(a2, 1, v47))
      {
        v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(a1, a2, v47);
        __swift_storeEnumTagSinglePayload(a1, 0, 1, v47);
      }
      v169 = (int *)type metadata accessor for PopoverSelector();
      v170 = v169[5];
      v171 = a1 + v170;
      v172 = a2 + v170;
      v173 = *(_OWORD *)(v172 + 16);
      *(_OWORD *)v171 = *(_OWORD *)v172;
      *(_OWORD *)(v171 + 16) = v173;
      *(_QWORD *)(v171 + 32) = *(_QWORD *)(v172 + 32);
      *(_QWORD *)(a1 + v169[6]) = *(_QWORD *)(a2 + v169[6]);
      *(_OWORD *)(a1 + v169[7]) = *(_OWORD *)(a2 + v169[7]);
      goto LABEL_187;
    case 0x1Cu:
      v49 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v49;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      v50 = (int *)type metadata accessor for SocialOnboardingNotificationSettingsPageLockup();
      v51 = v50[5];
      v52 = (void *)(a1 + v51);
      v53 = (const void *)(a2 + v51);
      v54 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)v53, 1, v54))
      {
        v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
        __swift_storeEnumTagSinglePayload((uint64_t)v52, 0, 1, v54);
      }
      *(_BYTE *)(a1 + v50[6]) = *(_BYTE *)(a2 + v50[6]);
      *(_BYTE *)(a1 + v50[7]) = *(_BYTE *)(a2 + v50[7]);
      *(_OWORD *)(a1 + v50[8]) = *(_OWORD *)(a2 + v50[8]);
      *(_BYTE *)(a1 + v50[9]) = *(_BYTE *)(a2 + v50[9]);
      goto LABEL_187;
    case 0x1Du:
      v56 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v56;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
      v57 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v57;
      v58 = *(int *)(type metadata accessor for SocialOnboardingPrivacySettingsPageLockup() + 44);
      v59 = (void *)(a1 + v58);
      v60 = (const void *)(a2 + v58);
      v61 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)v60, 1, v61))
        goto LABEL_50;
      goto LABEL_101;
    case 0x1Fu:
      v62 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v62;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      v63 = *(int *)(type metadata accessor for SocialOnboardingUserNameHandlePageLockup() + 24);
      v59 = (void *)(a1 + v63);
      v60 = (const void *)(a2 + v63);
      v61 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)v60, 1, v61))
        goto LABEL_50;
      goto LABEL_101;
    case 0x20u:
      v64 = type metadata accessor for Artwork();
      if (__swift_getEnumTagSinglePayload(a2, 1, v64))
      {
        v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        v174 = sub_21D7C3840();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v174 - 8) + 32))(a1, a2, v174);
        v175 = *(int *)(v64 + 20);
        v176 = a1 + v175;
        v177 = a2 + v175;
        v178 = sub_21D7C3804();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v178 - 8) + 32))(v176, v177, v178);
        __swift_storeEnumTagSinglePayload(a1, 0, 1, v64);
      }
      v179 = (int *)type metadata accessor for SocialOnboardingWelcomePageLockup();
      v180 = v179[5];
      v181 = a1 + v180;
      v182 = a2 + v180;
      v183 = *(_OWORD *)(v182 + 16);
      *(_OWORD *)v181 = *(_OWORD *)v182;
      *(_OWORD *)(v181 + 16) = v183;
      *(_QWORD *)(v181 + 32) = *(_QWORD *)(v182 + 32);
      v184 = v179[6];
      v185 = (void *)(a1 + v184);
      v186 = (const void *)(a2 + v184);
      v187 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)v186, 1, v187))
      {
        v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(v185, v186, *(_QWORD *)(*(_QWORD *)(v188 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v187 - 8) + 32))(v185, v186, v187);
        __swift_storeEnumTagSinglePayload((uint64_t)v185, 0, 1, v187);
      }
      *(_OWORD *)(a1 + v179[7]) = *(_OWORD *)(a2 + v179[7]);
      *(_OWORD *)(a1 + v179[8]) = *(_OWORD *)(a2 + v179[8]);
      goto LABEL_187;
    case 0x21u:
      v66 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload(a2, 1, v66))
      {
        v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(a1, a2, v66);
        __swift_storeEnumTagSinglePayload(a1, 0, 1, v66);
      }
      v189 = (int *)type metadata accessor for SocialProfileDetailHeaderLockup();
      v190 = v189[5];
      v191 = a1 + v190;
      v192 = a2 + v190;
      v193 = *(_OWORD *)(v192 + 16);
      *(_OWORD *)v191 = *(_OWORD *)v192;
      *(_OWORD *)(v191 + 16) = v193;
      *(_QWORD *)(v191 + 32) = *(_QWORD *)(v192 + 32);
      v194 = v189[6];
      v195 = a1 + v194;
      v196 = a2 + v194;
      *(_BYTE *)(a1 + v194) = *(_BYTE *)(a2 + v194);
      memcpy((void *)(a1 + v194 + 8), (const void *)(a2 + v194 + 8), 0x69uLL);
      v197 = *(int *)(type metadata accessor for ContentDescriptor() + 24);
      v198 = (void *)(v195 + v197);
      v199 = (const void *)(v196 + v197);
      v200 = sub_21D7BF754();
      if (__swift_getEnumTagSinglePayload((uint64_t)v199, 1, v200))
      {
        v201 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
        memcpy(v198, v199, *(_QWORD *)(*(_QWORD *)(v201 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v200 - 8) + 32))(v198, v199, v200);
        __swift_storeEnumTagSinglePayload((uint64_t)v198, 0, 1, v200);
      }
      *(_OWORD *)(a1 + v189[7]) = *(_OWORD *)(a2 + v189[7]);
      *(_OWORD *)(a1 + v189[8]) = *(_OWORD *)(a2 + v189[8]);
      *(_BYTE *)(a1 + v189[9]) = *(_BYTE *)(a2 + v189[9]);
      *(_BYTE *)(a1 + v189[10]) = *(_BYTE *)(a2 + v189[10]);
      v276 = v189[11];
      v277 = (char *)(a1 + v276);
      v278 = (char *)(a2 + v276);
      v279 = type metadata accessor for Artwork();
      if (__swift_getEnumTagSinglePayload((uint64_t)v278, 1, v279))
      {
        v280 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
        memcpy(v277, v278, *(_QWORD *)(*(_QWORD *)(v280 - 8) + 64));
      }
      else
      {
        v300 = sub_21D7C3840();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v300 - 8) + 32))(v277, v278, v300);
        v301 = *(int *)(v279 + 20);
        v302 = &v277[v301];
        v303 = &v278[v301];
        v304 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v304 - 8) + 32))(v302, v303, v304);
        __swift_storeEnumTagSinglePayload((uint64_t)v277, 0, 1, v279);
      }
      goto LABEL_187;
    case 0x22u:
      v68 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload(a2, 1, v68))
      {
        v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(a1, a2, v68);
        __swift_storeEnumTagSinglePayload(a1, 0, 1, v68);
      }
      v202 = (int *)type metadata accessor for SocialProfileEditorHeaderLockup(0);
      v203 = v202[5];
      v204 = a1 + v203;
      v205 = a2 + v203;
      v206 = *(_OWORD *)(v205 + 16);
      *(_OWORD *)v204 = *(_OWORD *)v205;
      *(_OWORD *)(v204 + 16) = v206;
      *(_QWORD *)(v204 + 32) = *(_QWORD *)(v205 + 32);
      v207 = v202[6];
      v208 = a1 + v207;
      v209 = a2 + v207;
      *(_BYTE *)(a1 + v207) = *(_BYTE *)(a2 + v207);
      memcpy((void *)(a1 + v207 + 8), (const void *)(a2 + v207 + 8), 0x69uLL);
      v210 = *(int *)(type metadata accessor for ContentDescriptor() + 24);
      v211 = (void *)(v208 + v210);
      v212 = (const void *)(v209 + v210);
      v213 = sub_21D7BF754();
      if (__swift_getEnumTagSinglePayload((uint64_t)v212, 1, v213))
      {
        v214 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
        memcpy(v211, v212, *(_QWORD *)(*(_QWORD *)(v214 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v213 - 8) + 32))(v211, v212, v213);
        __swift_storeEnumTagSinglePayload((uint64_t)v211, 0, 1, v213);
      }
      *(_OWORD *)(a1 + v202[7]) = *(_OWORD *)(a2 + v202[7]);
      *(_OWORD *)(a1 + v202[8]) = *(_OWORD *)(a2 + v202[8]);
      *(_BYTE *)(a1 + v202[9]) = *(_BYTE *)(a2 + v202[9]);
      *(_BYTE *)(a1 + v202[10]) = *(_BYTE *)(a2 + v202[10]);
      *(_OWORD *)(a1 + v202[11]) = *(_OWORD *)(a2 + v202[11]);
      *(_OWORD *)(a1 + v202[12]) = *(_OWORD *)(a2 + v202[12]);
      *(_OWORD *)(a1 + v202[13]) = *(_OWORD *)(a2 + v202[13]);
      *(_OWORD *)(a1 + v202[14]) = *(_OWORD *)(a2 + v202[14]);
      *(_QWORD *)(a1 + v202[15]) = *(_QWORD *)(a2 + v202[15]);
      v281 = v202[16];
      v282 = (char *)(a1 + v281);
      v283 = (char *)(a2 + v281);
      v284 = type metadata accessor for Artwork();
      if (__swift_getEnumTagSinglePayload((uint64_t)v283, 1, v284))
      {
        v285 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
        memcpy(v282, v283, *(_QWORD *)(*(_QWORD *)(v285 - 8) + 64));
      }
      else
      {
        v305 = sub_21D7C3840();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v305 - 8) + 32))(v282, v283, v305);
        v306 = *(int *)(v284 + 20);
        v307 = &v282[v306];
        v308 = &v283[v306];
        v309 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v309 - 8) + 32))(v307, v308, v309);
        __swift_storeEnumTagSinglePayload((uint64_t)v282, 0, 1, v284);
      }
      *(_OWORD *)(a1 + v202[17]) = *(_OWORD *)(a2 + v202[17]);
      goto LABEL_187;
    case 0x23u:
      v70 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload(a2, 1, v70))
      {
        v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(a1, a2, v70);
        __swift_storeEnumTagSinglePayload(a1, 0, 1, v70);
      }
      FriendsButtonComponentModel = (int *)type metadata accessor for SocialProfileFindFriendsButtonComponentModel();
      v216 = FriendsButtonComponentModel[5];
      v217 = a1 + v216;
      v218 = a2 + v216;
      v219 = *(_OWORD *)(v218 + 16);
      *(_OWORD *)v217 = *(_OWORD *)v218;
      *(_OWORD *)(v217 + 16) = v219;
      *(_QWORD *)(v217 + 32) = *(_QWORD *)(v218 + 32);
      *(_OWORD *)(a1 + FriendsButtonComponentModel[6]) = *(_OWORD *)(a2 + FriendsButtonComponentModel[6]);
      v220 = FriendsButtonComponentModel[7];
      v221 = a1 + v220;
      v222 = a2 + v220;
      v223 = *(_OWORD *)(v222 + 16);
      *(_OWORD *)v221 = *(_OWORD *)v222;
      *(_OWORD *)(v221 + 16) = v223;
      *(_QWORD *)(v221 + 32) = *(_QWORD *)(v222 + 32);
      goto LABEL_187;
    case 0x24u:
      v72 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload(a2, 1, v72))
      {
        v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(a1, a2, v72);
        __swift_storeEnumTagSinglePayload(a1, 0, 1, v72);
      }
      v224 = (int *)type metadata accessor for SocialProfileDetailViewFollowRequestsHeader();
      v225 = v224[5];
      v226 = a1 + v225;
      v227 = a2 + v225;
      v228 = *(_OWORD *)(v227 + 16);
      *(_OWORD *)v226 = *(_OWORD *)v227;
      *(_OWORD *)(v226 + 16) = v228;
      *(_QWORD *)(v226 + 32) = *(_QWORD *)(v227 + 32);
      *(_QWORD *)(a1 + v224[6]) = *(_QWORD *)(a2 + v224[6]);
      *(_QWORD *)(a1 + v224[7]) = *(_QWORD *)(a2 + v224[7]);
      goto LABEL_187;
    case 0x25u:
      v74 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload(a2, 1, v74))
      {
        v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(a1, a2, v74);
        __swift_storeEnumTagSinglePayload(a1, 0, 1, v74);
      }
      v229 = (int *)type metadata accessor for SocialProfileFollowRequestResponseHeader();
      v230 = v229[5];
      v231 = a1 + v230;
      v232 = a2 + v230;
      v233 = *(_OWORD *)(v232 + 16);
      *(_OWORD *)v231 = *(_OWORD *)v232;
      *(_OWORD *)(v231 + 16) = v233;
      *(_QWORD *)(v231 + 32) = *(_QWORD *)(v232 + 32);
      *(_OWORD *)(a1 + v229[6]) = *(_OWORD *)(a2 + v229[6]);
      *(_OWORD *)(a1 + v229[7]) = *(_OWORD *)(a2 + v229[7]);
      v234 = v229[8];
      v235 = a1 + v234;
      v236 = a2 + v234;
      v237 = *(_OWORD *)(v236 + 16);
      *(_OWORD *)v235 = *(_OWORD *)v236;
      *(_OWORD *)(v235 + 16) = v237;
      *(_QWORD *)(v235 + 32) = *(_QWORD *)(v236 + 32);
      v238 = v229[9];
      v239 = a1 + v238;
      v240 = a2 + v238;
      *(_QWORD *)(v239 + 32) = *(_QWORD *)(v240 + 32);
      v241 = *(_OWORD *)(v240 + 16);
      *(_OWORD *)v239 = *(_OWORD *)v240;
      *(_OWORD *)(v239 + 16) = v241;
      goto LABEL_187;
    case 0x26u:
      v76 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload(a2, 1, v76))
      {
        v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 32))(a1, a2, v76);
        __swift_storeEnumTagSinglePayload(a1, 0, 1, v76);
      }
      v242 = type metadata accessor for SocialProfileFollowRequestsPageComponentModel();
      v243 = *(int *)(v242 + 20);
      v244 = a1 + v243;
      v245 = a2 + v243;
      v246 = *(_OWORD *)(v245 + 16);
      *(_OWORD *)v244 = *(_OWORD *)v245;
      *(_OWORD *)(v244 + 16) = v246;
      *(_QWORD *)(v244 + 32) = *(_QWORD *)(v245 + 32);
      *(_QWORD *)(a1 + *(int *)(v242 + 24)) = *(_QWORD *)(a2 + *(int *)(v242 + 24));
      goto LABEL_187;
    case 0x28u:
      v78 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v78;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      v79 = type metadata accessor for SocialOnboardingSharedPlaylistPageLockup();
      v80 = *(int *)(v79 + 20);
      v81 = (void *)(a1 + v80);
      v82 = (const void *)(a2 + v80);
      v83 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)v82, 1, v83))
      {
        v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v81, v82, v83);
        __swift_storeEnumTagSinglePayload((uint64_t)v81, 0, 1, v83);
      }
      *(_QWORD *)(a1 + *(int *)(v79 + 24)) = *(_QWORD *)(a2 + *(int *)(v79 + 24));
      goto LABEL_187;
    case 0x29u:
      v85 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v85;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      FriendsPageSectionLockup = (int *)type metadata accessor for SocialOnboardingFindFriendsPageSectionLockup();
      v87 = FriendsPageSectionLockup[5];
      v88 = (void *)(a1 + v87);
      v89 = (const void *)(a2 + v87);
      v90 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)v89, 1, v90))
      {
        v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v90 - 8) + 32))(v88, v89, v90);
        __swift_storeEnumTagSinglePayload((uint64_t)v88, 0, 1, v90);
      }
      *(_QWORD *)(a1 + FriendsPageSectionLockup[6]) = *(_QWORD *)(a2 + FriendsPageSectionLockup[6]);
      *(_QWORD *)(a1 + FriendsPageSectionLockup[7]) = *(_QWORD *)(a2 + FriendsPageSectionLockup[7]);
      goto LABEL_187;
    case 0x2Bu:
      v92 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v92;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      v93 = *(int *)(type metadata accessor for Spacer() + 20);
      v59 = (void *)(a1 + v93);
      v60 = (const void *)(a2 + v93);
      v61 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)v60, 1, v61))
      {
LABEL_50:
        v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
      }
      else
      {
LABEL_101:
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
        __swift_storeEnumTagSinglePayload((uint64_t)v59, 0, 1, v61);
      }
      goto LABEL_187;
    default:
      memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
      return a1;
  }
}

uint64_t sub_21CE81148(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  int *v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  int *v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  int *v28;
  uint64_t v29;
  void *v30;
  const void *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  int *v35;
  uint64_t v36;
  void *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  int *v50;
  uint64_t v51;
  void *v52;
  const void *v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  void *v59;
  const void *v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  const void *v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  int *FriendsPageSectionLockup;
  uint64_t v87;
  void *v88;
  const void *v89;
  uint64_t v90;
  uint64_t v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _BYTE *v96;
  _BYTE *v97;
  uint64_t v98;
  uint64_t v99;
  int *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __int128 v104;
  uint64_t v105;
  _BYTE *v106;
  _BYTE *v107;
  uint64_t v108;
  uint64_t v109;
  int *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  __int128 v114;
  uint64_t v115;
  void *v116;
  const void *v117;
  uint64_t v118;
  uint64_t v119;
  int *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  __int128 v124;
  uint64_t v125;
  _OWORD *v126;
  _OWORD *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  __int128 v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  __int128 v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  __int128 v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  __int128 v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  __int128 v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  __int128 v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  int *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  __int128 v163;
  int *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  __int128 v168;
  int *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  __int128 v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  int *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  __int128 v183;
  uint64_t v184;
  void *v185;
  const void *v186;
  uint64_t v187;
  uint64_t v188;
  int *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  __int128 v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  void *v198;
  const void *v199;
  uint64_t v200;
  uint64_t v201;
  int *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  __int128 v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  void *v211;
  const void *v212;
  uint64_t v213;
  uint64_t v214;
  int *FriendsButtonComponentModel;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  __int128 v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  __int128 v223;
  int *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  __int128 v228;
  int *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  __int128 v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  __int128 v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  __int128 v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  __int128 v246;
  uint64_t v247;
  _OWORD *v248;
  _OWORD *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  _BYTE *v253;
  _BYTE *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  char *v259;
  uint64_t v260;
  uint64_t v261;
  __int128 v262;
  uint64_t v263;
  char *v264;
  char *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  char *v269;
  char *v270;
  uint64_t v271;
  uint64_t v272;
  char *v273;
  char *v274;
  uint64_t v275;
  uint64_t v276;
  char *v277;
  char *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  char *v282;
  char *v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  char *v288;
  char *v289;
  uint64_t v290;
  uint64_t v291;
  char *v292;
  char *v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  char *v297;
  char *v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  char *v302;
  char *v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  char *v307;
  char *v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  char *v312;
  char *v313;
  uint64_t v314;
  uint64_t v315;
  _QWORD *v316;
  _QWORD *v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  char *v321;
  char *v322;
  uint64_t v323;
  uint64_t v324;
  _BYTE *v325;
  _BYTE *v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  _BYTE *v330;
  _BYTE *v331;
  uint64_t v332;
  int EnumCaseMultiPayload;
  __int128 v334;
  int *v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  char *v343;
  uint64_t v344;
  uint64_t v345;
  char *v346;
  char *v347;
  uint64_t v348;
  char *v349;
  char *v350;
  uint64_t v351;
  char *v352;
  char *v353;
  uint64_t v354;
  char *v355;
  char *v356;
  __int128 v357;
  uint64_t v358;
  _BYTE *v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  char *v364;
  uint64_t v365;
  uint64_t v366;
  _BYTE *v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  _BYTE *v371;
  _BYTE *v372;
  uint64_t v373;
  uint64_t v374;
  _OWORD *v375;
  _OWORD *v376;
  uint64_t v377;
  uint64_t v378;
  int v379;
  __int128 v380;
  int *v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  char *v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  char *v390;
  char *v391;
  uint64_t v392;
  char *v393;
  char *v394;
  uint64_t v395;
  char *v396;
  char *v397;
  uint64_t v398;
  char *v399;
  char *v400;
  __int128 v401;
  uint64_t v402;
  _BYTE *v403;
  _BYTE *v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  char *v409;
  uint64_t v410;
  uint64_t v411;
  _BYTE *v412;
  uint64_t v413;
  uint64_t v414;
  char *v416;
  _BYTE *v417;
  uint64_t v418;
  char *v419;
  char *v420;
  uint64_t v421;
  uint64_t v422;
  char *v423;
  uint64_t v424;
  _BYTE *v425;
  char *__dst;
  char *__dsta;
  _BYTE *__dstb;
  char *__dstc;
  char *__dstd;
  void *__dste;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;

  if (a1 != a2)
  {
    sub_21CDBDA1C(a1, type metadata accessor for MappedSection.Content);
    v4 = type metadata accessor for MappedSection.Content(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v5 = sub_21D7C3660();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
        v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F63AC0);
        *(_QWORD *)(a1 + *(int *)(v6 + 52)) = *(_QWORD *)(a2 + *(int *)(v6 + 52));
        *(_QWORD *)(a1 + *(int *)(v6 + 56)) = *(_QWORD *)(a2 + *(int *)(v6 + 56));
        goto LABEL_188;
      case 5u:
        v7 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v7;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        v8 = (int *)type metadata accessor for MappedArtistLatestReleaseAndTopSongs(0);
        v9 = v8[5];
        v10 = (void *)(a1 + v9);
        v11 = (const void *)(a2 + v9);
        v12 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
        {
          v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
          __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
        }
        v95 = v8[6];
        v96 = (_BYTE *)(a1 + v95);
        v97 = (_BYTE *)(a2 + v95);
        v98 = _s7SectionV6HeaderVMa(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v97, 1, v98))
        {
          v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65088);
          memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
          goto LABEL_163;
        }
        *v96 = *v97;
        v247 = *(int *)(v98 + 20);
        v248 = &v96[v247];
        v249 = &v97[v247];
        v250 = _s7SectionV6HeaderV12HeaderLockupOMa(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v249, 1, v250))
        {
          v251 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65058);
          memcpy(v248, v249, *(_QWORD *)(*(_QWORD *)(v251 - 8) + 64));
          goto LABEL_162;
        }
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          v433 = v250;
          memcpy(v248, v249, 0x48uLL);
          memcpy((char *)v248 + 72, (char *)v249 + 72, 0x58uLL);
          v341 = type metadata accessor for DefaultSectionHeader();
          v342 = *(int *)(v341 + 32);
          v421 = v341;
          __dsta = (char *)v248 + v342;
          v343 = (char *)v249 + v342;
          v418 = type metadata accessor for Artwork();
          if (__swift_getEnumTagSinglePayload((uint64_t)v343, 1, v418))
          {
            v344 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
            memcpy(__dsta, v343, *(_QWORD *)(*(_QWORD *)(v344 - 8) + 64));
          }
          else
          {
            v362 = sub_21D7C3840();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v362 - 8) + 32))(__dsta, v343, v362);
            v363 = *(int *)(v418 + 20);
            v416 = &__dsta[v363];
            v364 = &v343[v363];
            v365 = sub_21D7C3804();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v365 - 8) + 32))(v416, v364, v365);
            __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v418);
          }
          *((_BYTE *)v248 + *(int *)(v421 + 36)) = *((_BYTE *)v249 + *(int *)(v421 + 36));
          v250 = v433;
        }
        else
        {
          if (EnumCaseMultiPayload != 1)
          {
            memcpy(v248, v249, *(_QWORD *)(*(_QWORD *)(v250 - 8) + 64));
            goto LABEL_161;
          }
          v432 = v250;
          v334 = v249[1];
          *v248 = *v249;
          v248[1] = v334;
          *((_QWORD *)v248 + 4) = *((_QWORD *)v249 + 4);
          v335 = (int *)type metadata accessor for ComposerSectionHeader();
          v336 = v335[5];
          v420 = (char *)v249 + v336;
          __dst = (char *)v248 + v336;
          if (__swift_getEnumTagSinglePayload((uint64_t)v249 + v336, 1, v12))
          {
            v337 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
            memcpy(__dst, v420, *(_QWORD *)(*(_QWORD *)(v337 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(__dst, v420, v12);
            __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v12);
          }
          *(_OWORD *)((char *)v248 + v335[6]) = *(_OWORD *)((char *)v249 + v335[6]);
          v345 = v335[7];
          v346 = (char *)v248 + v345;
          v347 = (char *)v249 + v345;
          v346[8] = v347[8];
          *(_QWORD *)v346 = *(_QWORD *)v347;
          v348 = v335[8];
          v349 = (char *)v248 + v348;
          v350 = (char *)v249 + v348;
          *(_QWORD *)v349 = *(_QWORD *)v350;
          v349[8] = v350[8];
          v351 = v335[9];
          v352 = (char *)v248 + v351;
          v353 = (char *)v249 + v351;
          *(_QWORD *)v352 = *(_QWORD *)v353;
          v352[8] = v353[8];
          *(_OWORD *)((char *)v248 + v335[10]) = *(_OWORD *)((char *)v249 + v335[10]);
          v354 = v335[11];
          v355 = (char *)v248 + v354;
          v356 = (char *)v249 + v354;
          v357 = *((_OWORD *)v356 + 1);
          *(_OWORD *)v355 = *(_OWORD *)v356;
          *((_OWORD *)v355 + 1) = v357;
          *((_QWORD *)v355 + 4) = *((_QWORD *)v356 + 4);
          v358 = v335[12];
          __dstb = (char *)v248 + v358;
          v359 = (char *)v249 + v358;
          v360 = type metadata accessor for ContentDescriptor();
          if (__swift_getEnumTagSinglePayload((uint64_t)v359, 1, v360))
          {
            v361 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
            memcpy(__dstb, v359, *(_QWORD *)(*(_QWORD *)(v361 - 8) + 64));
          }
          else
          {
            *__dstb = *v359;
            memcpy(__dstb + 8, v359 + 8, 0x69uLL);
            v422 = v360;
            v366 = *(int *)(v360 + 24);
            v417 = &__dstb[v366];
            v367 = &v359[v366];
            v368 = sub_21D7BF754();
            if (__swift_getEnumTagSinglePayload((uint64_t)v367, 1, v368))
            {
              v369 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
              memcpy(v417, v367, *(_QWORD *)(*(_QWORD *)(v369 - 8) + 64));
            }
            else
            {
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v368 - 8) + 32))(v417, v367, v368);
              __swift_storeEnumTagSinglePayload((uint64_t)v417, 0, 1, v368);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v422);
          }
          v250 = v432;
        }
        swift_storeEnumTagMultiPayload();
LABEL_161:
        __swift_storeEnumTagSinglePayload((uint64_t)v248, 0, 1, v250);
LABEL_162:
        __swift_storeEnumTagSinglePayload((uint64_t)v96, 0, 1, v98);
LABEL_163:
        *(_OWORD *)(a1 + v8[7]) = *(_OWORD *)(a2 + v8[7]);
        v370 = v8[8];
        v371 = (_BYTE *)(a1 + v370);
        v372 = (_BYTE *)(a2 + v370);
        if (__swift_getEnumTagSinglePayload(a2 + v370, 1, v98))
        {
          v373 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65088);
          memcpy(v371, v372, *(_QWORD *)(*(_QWORD *)(v373 - 8) + 64));
          goto LABEL_187;
        }
        *v371 = *v372;
        v374 = *(int *)(v98 + 20);
        v375 = &v371[v374];
        v376 = &v372[v374];
        v377 = _s7SectionV6HeaderV12HeaderLockupOMa(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v376, 1, v377))
        {
          v378 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65058);
          memcpy(v375, v376, *(_QWORD *)(*(_QWORD *)(v378 - 8) + 64));
          goto LABEL_186;
        }
        v379 = swift_getEnumCaseMultiPayload();
        if (v379 == 2)
        {
          v435 = v377;
          memcpy(v375, v376, 0x48uLL);
          memcpy((char *)v375 + 72, (char *)v376 + 72, 0x58uLL);
          v384 = type metadata accessor for DefaultSectionHeader();
          v385 = *(int *)(v384 + 32);
          v424 = v384;
          __dstd = (char *)v375 + v385;
          v386 = (char *)v376 + v385;
          v387 = type metadata accessor for Artwork();
          if (__swift_getEnumTagSinglePayload((uint64_t)v386, 1, v387))
          {
            v388 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
            memcpy(__dstd, v386, *(_QWORD *)(*(_QWORD *)(v388 - 8) + 64));
          }
          else
          {
            v407 = sub_21D7C3840();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v407 - 8) + 32))(__dstd, v386, v407);
            v408 = *(int *)(v387 + 20);
            v419 = &__dstd[v408];
            v409 = &v386[v408];
            v410 = sub_21D7C3804();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v410 - 8) + 32))(v419, v409, v410);
            __swift_storeEnumTagSinglePayload((uint64_t)__dstd, 0, 1, v387);
          }
          *((_BYTE *)v375 + *(int *)(v424 + 36)) = *((_BYTE *)v376 + *(int *)(v424 + 36));
          v377 = v435;
        }
        else
        {
          if (v379 != 1)
          {
            memcpy(v375, v376, *(_QWORD *)(*(_QWORD *)(v377 - 8) + 64));
            goto LABEL_185;
          }
          v434 = v377;
          v380 = v376[1];
          *v375 = *v376;
          v375[1] = v380;
          *((_QWORD *)v375 + 4) = *((_QWORD *)v376 + 4);
          v381 = (int *)type metadata accessor for ComposerSectionHeader();
          v382 = v381[5];
          v423 = (char *)v376 + v382;
          __dstc = (char *)v375 + v382;
          if (__swift_getEnumTagSinglePayload((uint64_t)v376 + v382, 1, v12))
          {
            v383 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
            memcpy(__dstc, v423, *(_QWORD *)(*(_QWORD *)(v383 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(__dstc, v423, v12);
            __swift_storeEnumTagSinglePayload((uint64_t)__dstc, 0, 1, v12);
          }
          *(_OWORD *)((char *)v375 + v381[6]) = *(_OWORD *)((char *)v376 + v381[6]);
          v389 = v381[7];
          v390 = (char *)v375 + v389;
          v391 = (char *)v376 + v389;
          v390[8] = v391[8];
          *(_QWORD *)v390 = *(_QWORD *)v391;
          v392 = v381[8];
          v393 = (char *)v375 + v392;
          v394 = (char *)v376 + v392;
          *(_QWORD *)v393 = *(_QWORD *)v394;
          v393[8] = v394[8];
          v395 = v381[9];
          v396 = (char *)v375 + v395;
          v397 = (char *)v376 + v395;
          *(_QWORD *)v396 = *(_QWORD *)v397;
          v396[8] = v397[8];
          *(_OWORD *)((char *)v375 + v381[10]) = *(_OWORD *)((char *)v376 + v381[10]);
          v398 = v381[11];
          v399 = (char *)v375 + v398;
          v400 = (char *)v376 + v398;
          v401 = *((_OWORD *)v400 + 1);
          *(_OWORD *)v399 = *(_OWORD *)v400;
          *((_OWORD *)v399 + 1) = v401;
          *((_QWORD *)v399 + 4) = *((_QWORD *)v400 + 4);
          v402 = v381[12];
          v403 = (char *)v375 + v402;
          v404 = (char *)v376 + v402;
          v405 = type metadata accessor for ContentDescriptor();
          if (__swift_getEnumTagSinglePayload((uint64_t)v404, 1, v405))
          {
            v406 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
            memcpy(v403, v404, *(_QWORD *)(*(_QWORD *)(v406 - 8) + 64));
          }
          else
          {
            *v403 = *v404;
            memcpy(v403 + 8, v404 + 8, 0x69uLL);
            v411 = *(int *)(v405 + 24);
            v425 = &v403[v411];
            __dste = v403;
            v412 = &v404[v411];
            v413 = sub_21D7BF754();
            if (__swift_getEnumTagSinglePayload((uint64_t)v412, 1, v413))
            {
              v414 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
              memcpy(v425, v412, *(_QWORD *)(*(_QWORD *)(v414 - 8) + 64));
            }
            else
            {
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v413 - 8) + 32))(v425, v412, v413);
              __swift_storeEnumTagSinglePayload((uint64_t)v425, 0, 1, v413);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)__dste, 0, 1, v405);
          }
          v377 = v434;
        }
        swift_storeEnumTagMultiPayload();
LABEL_185:
        __swift_storeEnumTagSinglePayload((uint64_t)v375, 0, 1, v377);
LABEL_186:
        __swift_storeEnumTagSinglePayload((uint64_t)v371, 0, 1, v98);
LABEL_187:
        *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
LABEL_188:
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
        v14 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload(a2, 1, v14))
        {
          v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
          __swift_storeEnumTagSinglePayload(a1, 0, 1, v14);
        }
        v100 = (int *)type metadata accessor for ContainerDetailTracklistFooterLockup();
        v101 = v100[5];
        v102 = a1 + v101;
        v103 = a2 + v101;
        v104 = *(_OWORD *)(v103 + 16);
        *(_OWORD *)v102 = *(_OWORD *)v103;
        *(_OWORD *)(v102 + 16) = v104;
        *(_QWORD *)(v102 + 32) = *(_QWORD *)(v103 + 32);
        v105 = v100[6];
        v106 = (_BYTE *)(a1 + v105);
        v107 = (_BYTE *)(a2 + v105);
        v108 = type metadata accessor for ContentDescriptor();
        if (__swift_getEnumTagSinglePayload((uint64_t)v107, 1, v108))
        {
          v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
          memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
        }
        else
        {
          *v106 = *v107;
          memcpy(v106 + 8, v107 + 8, 0x69uLL);
          v252 = *(int *)(v108 + 24);
          v253 = &v106[v252];
          v254 = &v107[v252];
          v255 = sub_21D7BF754();
          if (__swift_getEnumTagSinglePayload((uint64_t)v254, 1, v255))
          {
            v256 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
            memcpy(v253, v254, *(_QWORD *)(*(_QWORD *)(v256 - 8) + 64));
          }
          else
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v255 - 8) + 32))(v253, v254, v255);
            __swift_storeEnumTagSinglePayload((uint64_t)v253, 0, 1, v255);
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v106, 0, 1, v108);
        }
        *(_QWORD *)(a1 + v100[7]) = *(_QWORD *)(a2 + v100[7]);
        *(_OWORD *)(a1 + v100[8]) = *(_OWORD *)(a2 + v100[8]);
        v338 = v100[9];
        v339 = a1 + v338;
        v340 = a2 + v338;
        *(_OWORD *)v339 = *(_OWORD *)v340;
        *(_QWORD *)(v339 + 16) = *(_QWORD *)(v340 + 16);
        *(_QWORD *)(a1 + v100[10]) = *(_QWORD *)(a2 + v100[10]);
        goto LABEL_188;
      case 9u:
        v16 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload(a2, 1, v16))
        {
          v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a1, a2, v16);
          __swift_storeEnumTagSinglePayload(a1, 0, 1, v16);
        }
        v110 = (int *)type metadata accessor for CuratorDetailHeaderComponentModel();
        v111 = v110[5];
        v112 = a1 + v111;
        v113 = a2 + v111;
        v114 = *(_OWORD *)(v113 + 16);
        *(_OWORD *)v112 = *(_OWORD *)v113;
        *(_OWORD *)(v112 + 16) = v114;
        *(_QWORD *)(v112 + 32) = *(_QWORD *)(v113 + 32);
        *(_OWORD *)(a1 + v110[6]) = *(_OWORD *)(a2 + v110[6]);
        v115 = v110[7];
        v116 = (void *)(a1 + v115);
        v117 = (const void *)(a2 + v115);
        v118 = sub_21D7BF754();
        if (__swift_getEnumTagSinglePayload((uint64_t)v117, 1, v118))
        {
          v119 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
          memcpy(v116, v117, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v118 - 8) + 32))(v116, v117, v118);
          __swift_storeEnumTagSinglePayload((uint64_t)v116, 0, 1, v118);
        }
        v257 = v110[8];
        v258 = (char *)(a1 + v257);
        v259 = (char *)(a2 + v257);
        v260 = type metadata accessor for Artwork();
        if (__swift_getEnumTagSinglePayload((uint64_t)v259, 1, v260))
        {
          v261 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
          memcpy(v258, v259, *(_QWORD *)(*(_QWORD *)(v261 - 8) + 64));
        }
        else
        {
          v286 = sub_21D7C3840();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v286 - 8) + 32))(v258, v259, v286);
          v287 = *(int *)(v260 + 20);
          v288 = &v258[v287];
          v289 = &v259[v287];
          v290 = sub_21D7C3804();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v290 - 8) + 32))(v288, v289, v290);
          __swift_storeEnumTagSinglePayload((uint64_t)v258, 0, 1, v260);
        }
        *(_BYTE *)(a1 + v110[9]) = *(_BYTE *)(a2 + v110[9]);
        v291 = v110[10];
        v292 = (char *)(a1 + v291);
        v293 = (char *)(a2 + v291);
        if (__swift_getEnumTagSinglePayload(a2 + v291, 1, v260))
        {
          v294 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
          memcpy(v292, v293, *(_QWORD *)(*(_QWORD *)(v294 - 8) + 64));
        }
        else
        {
          v310 = sub_21D7C3840();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v310 - 8) + 32))(v292, v293, v310);
          v311 = *(int *)(v260 + 20);
          v312 = &v292[v311];
          v313 = &v293[v311];
          v314 = sub_21D7C3804();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v314 - 8) + 32))(v312, v313, v314);
          __swift_storeEnumTagSinglePayload((uint64_t)v292, 0, 1, v260);
        }
        v315 = v110[11];
        v316 = (_QWORD *)(a1 + v315);
        v317 = (_QWORD *)(a2 + v315);
        v318 = type metadata accessor for VideoArtwork();
        if (__swift_getEnumTagSinglePayload((uint64_t)v317, 1, v318))
        {
          v319 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5F718);
          memcpy(v316, v317, *(_QWORD *)(*(_QWORD *)(v319 - 8) + 64));
        }
        else
        {
          *v316 = *v317;
          v320 = *(int *)(v318 + 20);
          v321 = (char *)v316 + v320;
          v322 = (char *)v317 + v320;
          v323 = sub_21D7C3804();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v323 - 8) + 32))(v321, v322, v323);
          __swift_storeEnumTagSinglePayload((uint64_t)v316, 0, 1, v318);
        }
        v324 = v110[12];
        v325 = (_BYTE *)(a1 + v324);
        v326 = (_BYTE *)(a2 + v324);
        v327 = type metadata accessor for ContentDescriptor();
        if (__swift_getEnumTagSinglePayload((uint64_t)v326, 1, v327))
        {
          v328 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
          memcpy(v325, v326, *(_QWORD *)(*(_QWORD *)(v328 - 8) + 64));
        }
        else
        {
          *v325 = *v326;
          memcpy(v325 + 8, v326 + 8, 0x69uLL);
          v329 = *(int *)(v327 + 24);
          v330 = &v325[v329];
          v331 = &v326[v329];
          if (__swift_getEnumTagSinglePayload((uint64_t)v331, 1, v118))
          {
            v332 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
            memcpy(v330, v331, *(_QWORD *)(*(_QWORD *)(v332 - 8) + 64));
          }
          else
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v118 - 8) + 32))(v330, v331, v118);
            __swift_storeEnumTagSinglePayload((uint64_t)v330, 0, 1, v118);
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v325, 0, 1, v327);
        }
        goto LABEL_188;
      case 0xAu:
        v18 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v18;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        v19 = (int *)type metadata accessor for EmptyStateLockup();
        v20 = v19[5];
        v21 = (void *)(a1 + v20);
        v22 = (const void *)(a2 + v20);
        v23 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23))
        {
          v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
          __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v23);
        }
        *(_BYTE *)(a1 + v19[6]) = *(_BYTE *)(a2 + v19[6]);
        *(_OWORD *)(a1 + v19[7]) = *(_OWORD *)(a2 + v19[7]);
        *(_OWORD *)(a1 + v19[8]) = *(_OWORD *)(a2 + v19[8]);
        *(_OWORD *)(a1 + v19[9]) = *(_OWORD *)(a2 + v19[9]);
        goto LABEL_188;
      case 0xCu:
        v25 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload(a2, 1, v25))
        {
          v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(a1, a2, v25);
          __swift_storeEnumTagSinglePayload(a1, 0, 1, v25);
        }
        v120 = (int *)type metadata accessor for GroupedTextListLockup();
        v121 = v120[5];
        v122 = a1 + v121;
        v123 = a2 + v121;
        v124 = *(_OWORD *)(v123 + 16);
        *(_OWORD *)v122 = *(_OWORD *)v123;
        *(_OWORD *)(v122 + 16) = v124;
        *(_QWORD *)(v122 + 32) = *(_QWORD *)(v123 + 32);
        v125 = v120[6];
        v126 = (_OWORD *)(a1 + v125);
        v127 = (_OWORD *)(a2 + v125);
        v128 = type metadata accessor for ModalPresentationDescriptor();
        if (__swift_getEnumTagSinglePayload((uint64_t)v127, 1, v128))
        {
          v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553303E8);
          memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
        }
        else
        {
          v262 = v127[1];
          *v126 = *v127;
          v126[1] = v262;
          v126[2] = v127[2];
          *((_BYTE *)v126 + 48) = *((_BYTE *)v127 + 48);
          *((_QWORD *)v126 + 7) = *((_QWORD *)v127 + 7);
          *((_BYTE *)v126 + 64) = *((_BYTE *)v127 + 64);
          v263 = *(int *)(v128 + 40);
          v264 = (char *)v126 + v263;
          v265 = (char *)v127 + v263;
          v266 = sub_21D7C4314();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v266 - 8) + 32))(v264, v265, v266);
          __swift_storeEnumTagSinglePayload((uint64_t)v126, 0, 1, v128);
        }
        *(_QWORD *)(a1 + v120[7]) = *(_QWORD *)(a2 + v120[7]);
        goto LABEL_188;
      case 0x10u:
        v27 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v27;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        v28 = (int *)type metadata accessor for InlineUpsell();
        v29 = v28[5];
        v30 = (void *)(a1 + v29);
        v31 = (const void *)(a2 + v29);
        v32 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v32))
        {
          v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
          __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v32);
        }
        *(_OWORD *)(a1 + v28[6]) = *(_OWORD *)(a2 + v28[6]);
        *(_OWORD *)(a1 + v28[7]) = *(_OWORD *)(a2 + v28[7]);
        *(_OWORD *)(a1 + v28[8]) = *(_OWORD *)(a2 + v28[8]);
        v130 = v28[9];
        v131 = a1 + v130;
        v132 = a2 + v130;
        *(_QWORD *)(v131 + 32) = *(_QWORD *)(v132 + 32);
        v133 = *(_OWORD *)(v132 + 16);
        *(_OWORD *)v131 = *(_OWORD *)v132;
        *(_OWORD *)(v131 + 16) = v133;
        v134 = v28[10];
        v135 = a1 + v134;
        v136 = a2 + v134;
        *(_QWORD *)(v135 + 32) = *(_QWORD *)(v136 + 32);
        v137 = *(_OWORD *)(v136 + 16);
        *(_OWORD *)v135 = *(_OWORD *)v136;
        *(_OWORD *)(v135 + 16) = v137;
        v138 = v28[11];
        v139 = a1 + v138;
        v140 = a2 + v138;
        *(_QWORD *)(v139 + 32) = *(_QWORD *)(v140 + 32);
        v141 = *(_OWORD *)(v140 + 16);
        *(_OWORD *)v139 = *(_OWORD *)v140;
        *(_OWORD *)(v139 + 16) = v141;
        *(_BYTE *)(a1 + v28[12]) = *(_BYTE *)(a2 + v28[12]);
        goto LABEL_188;
      case 0x11u:
        v34 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v34;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        v35 = (int *)type metadata accessor for LandingUpsell();
        v36 = v35[5];
        v37 = (void *)(a1 + v36);
        v38 = (const void *)(a2 + v36);
        v39 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)v38, 1, v39))
        {
          v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
          __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v39);
        }
        *(_OWORD *)(a1 + v35[6]) = *(_OWORD *)(a2 + v35[6]);
        *(_OWORD *)(a1 + v35[7]) = *(_OWORD *)(a2 + v35[7]);
        *(_OWORD *)(a1 + v35[8]) = *(_OWORD *)(a2 + v35[8]);
        *(_OWORD *)(a1 + v35[9]) = *(_OWORD *)(a2 + v35[9]);
        v142 = v35[10];
        v143 = a1 + v142;
        v144 = a2 + v142;
        v145 = *(_OWORD *)(v144 + 16);
        *(_OWORD *)v143 = *(_OWORD *)v144;
        *(_OWORD *)(v143 + 16) = v145;
        *(_QWORD *)(v143 + 32) = *(_QWORD *)(v144 + 32);
        v146 = v35[11];
        v147 = a1 + v146;
        v148 = a2 + v146;
        v149 = *(_OWORD *)(v148 + 16);
        *(_OWORD *)v147 = *(_OWORD *)v148;
        *(_OWORD *)(v147 + 16) = v149;
        *(_QWORD *)(v147 + 32) = *(_QWORD *)(v148 + 32);
        v150 = v35[12];
        v151 = a1 + v150;
        v152 = a2 + v150;
        v153 = *(_OWORD *)(v152 + 16);
        *(_OWORD *)v151 = *(_OWORD *)v152;
        *(_OWORD *)(v151 + 16) = v153;
        *(_QWORD *)(v151 + 32) = *(_QWORD *)(v152 + 32);
        v154 = v35[13];
        v155 = (char *)(a1 + v154);
        v156 = (char *)(a2 + v154);
        v157 = type metadata accessor for Artwork();
        if (__swift_getEnumTagSinglePayload((uint64_t)v156, 1, v157))
        {
          v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
          memcpy(v155, v156, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
        }
        else
        {
          v267 = sub_21D7C3840();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v267 - 8) + 32))(v155, v156, v267);
          v268 = *(int *)(v157 + 20);
          v269 = &v155[v268];
          v270 = &v156[v268];
          v271 = sub_21D7C3804();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v271 - 8) + 32))(v269, v270, v271);
          __swift_storeEnumTagSinglePayload((uint64_t)v155, 0, 1, v157);
        }
        v272 = v35[14];
        v273 = (char *)(a1 + v272);
        v274 = (char *)(a2 + v272);
        if (__swift_getEnumTagSinglePayload((uint64_t)v274, 1, v157))
        {
          v275 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
          memcpy(v273, v274, *(_QWORD *)(*(_QWORD *)(v275 - 8) + 64));
        }
        else
        {
          v295 = sub_21D7C3840();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v295 - 8) + 32))(v273, v274, v295);
          v296 = *(int *)(v157 + 20);
          v297 = &v273[v296];
          v298 = &v274[v296];
          v299 = sub_21D7C3804();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v299 - 8) + 32))(v297, v298, v299);
          __swift_storeEnumTagSinglePayload((uint64_t)v273, 0, 1, v157);
        }
        goto LABEL_188;
      case 0x13u:
        v41 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload(a2, 1, v41))
        {
          v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(a1, a2, v41);
          __swift_storeEnumTagSinglePayload(a1, 0, 1, v41);
        }
        v159 = (int *)type metadata accessor for ListSection();
        v160 = v159[5];
        v161 = a1 + v160;
        v162 = a2 + v160;
        v163 = *(_OWORD *)(v162 + 16);
        *(_OWORD *)v161 = *(_OWORD *)v162;
        *(_OWORD *)(v161 + 16) = v163;
        *(_QWORD *)(v161 + 32) = *(_QWORD *)(v162 + 32);
        *(_OWORD *)(a1 + v159[6]) = *(_OWORD *)(a2 + v159[6]);
        *(_OWORD *)(a1 + v159[7]) = *(_OWORD *)(a2 + v159[7]);
        *(_QWORD *)(a1 + v159[8]) = *(_QWORD *)(a2 + v159[8]);
        goto LABEL_188;
      case 0x14u:
        v43 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload(a2, 1, v43))
        {
          v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(a1, a2, v43);
          __swift_storeEnumTagSinglePayload(a1, 0, 1, v43);
        }
        v164 = (int *)type metadata accessor for ParagraphComponentModel();
        v165 = v164[5];
        v166 = a1 + v165;
        v167 = a2 + v165;
        v168 = *(_OWORD *)(v167 + 16);
        *(_OWORD *)v166 = *(_OWORD *)v167;
        *(_OWORD *)(v166 + 16) = v168;
        *(_QWORD *)(v166 + 32) = *(_QWORD *)(v167 + 32);
        *(_OWORD *)(a1 + v164[6]) = *(_OWORD *)(a2 + v164[6]);
        *(_BYTE *)(a1 + v164[7]) = *(_BYTE *)(a2 + v164[7]);
        goto LABEL_188;
      case 0x16u:
        v45 = sub_21D7C3B58();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(a1, a2, v45);
        v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F63AD8);
        *(_QWORD *)(a1 + *(int *)(v46 + 52)) = *(_QWORD *)(a2 + *(int *)(v46 + 52));
        *(_QWORD *)(a1 + *(int *)(v46 + 56)) = *(_QWORD *)(a2 + *(int *)(v46 + 56));
        goto LABEL_188;
      case 0x17u:
        v47 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload(a2, 1, v47))
        {
          v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(a1, a2, v47);
          __swift_storeEnumTagSinglePayload(a1, 0, 1, v47);
        }
        v169 = (int *)type metadata accessor for PopoverSelector();
        v170 = v169[5];
        v171 = a1 + v170;
        v172 = a2 + v170;
        v173 = *(_OWORD *)(v172 + 16);
        *(_OWORD *)v171 = *(_OWORD *)v172;
        *(_OWORD *)(v171 + 16) = v173;
        *(_QWORD *)(v171 + 32) = *(_QWORD *)(v172 + 32);
        *(_QWORD *)(a1 + v169[6]) = *(_QWORD *)(a2 + v169[6]);
        *(_OWORD *)(a1 + v169[7]) = *(_OWORD *)(a2 + v169[7]);
        goto LABEL_188;
      case 0x1Cu:
        v49 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v49;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        v50 = (int *)type metadata accessor for SocialOnboardingNotificationSettingsPageLockup();
        v51 = v50[5];
        v52 = (void *)(a1 + v51);
        v53 = (const void *)(a2 + v51);
        v54 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)v53, 1, v54))
        {
          v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
          __swift_storeEnumTagSinglePayload((uint64_t)v52, 0, 1, v54);
        }
        *(_BYTE *)(a1 + v50[6]) = *(_BYTE *)(a2 + v50[6]);
        *(_BYTE *)(a1 + v50[7]) = *(_BYTE *)(a2 + v50[7]);
        *(_OWORD *)(a1 + v50[8]) = *(_OWORD *)(a2 + v50[8]);
        *(_BYTE *)(a1 + v50[9]) = *(_BYTE *)(a2 + v50[9]);
        goto LABEL_188;
      case 0x1Du:
        v56 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v56;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
        v57 = *(_OWORD *)(a2 + 64);
        *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 64) = v57;
        v58 = *(int *)(type metadata accessor for SocialOnboardingPrivacySettingsPageLockup() + 44);
        v59 = (void *)(a1 + v58);
        v60 = (const void *)(a2 + v58);
        v61 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)v60, 1, v61))
          goto LABEL_51;
        goto LABEL_102;
      case 0x1Fu:
        v62 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v62;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        v63 = *(int *)(type metadata accessor for SocialOnboardingUserNameHandlePageLockup() + 24);
        v59 = (void *)(a1 + v63);
        v60 = (const void *)(a2 + v63);
        v61 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)v60, 1, v61))
          goto LABEL_51;
        goto LABEL_102;
      case 0x20u:
        v64 = type metadata accessor for Artwork();
        if (__swift_getEnumTagSinglePayload(a2, 1, v64))
        {
          v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
        }
        else
        {
          v174 = sub_21D7C3840();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v174 - 8) + 32))(a1, a2, v174);
          v175 = *(int *)(v64 + 20);
          v176 = a1 + v175;
          v177 = a2 + v175;
          v178 = sub_21D7C3804();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v178 - 8) + 32))(v176, v177, v178);
          __swift_storeEnumTagSinglePayload(a1, 0, 1, v64);
        }
        v179 = (int *)type metadata accessor for SocialOnboardingWelcomePageLockup();
        v180 = v179[5];
        v181 = a1 + v180;
        v182 = a2 + v180;
        v183 = *(_OWORD *)(v182 + 16);
        *(_OWORD *)v181 = *(_OWORD *)v182;
        *(_OWORD *)(v181 + 16) = v183;
        *(_QWORD *)(v181 + 32) = *(_QWORD *)(v182 + 32);
        v184 = v179[6];
        v185 = (void *)(a1 + v184);
        v186 = (const void *)(a2 + v184);
        v187 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)v186, 1, v187))
        {
          v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(v185, v186, *(_QWORD *)(*(_QWORD *)(v188 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v187 - 8) + 32))(v185, v186, v187);
          __swift_storeEnumTagSinglePayload((uint64_t)v185, 0, 1, v187);
        }
        *(_OWORD *)(a1 + v179[7]) = *(_OWORD *)(a2 + v179[7]);
        *(_OWORD *)(a1 + v179[8]) = *(_OWORD *)(a2 + v179[8]);
        goto LABEL_188;
      case 0x21u:
        v66 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload(a2, 1, v66))
        {
          v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(a1, a2, v66);
          __swift_storeEnumTagSinglePayload(a1, 0, 1, v66);
        }
        v189 = (int *)type metadata accessor for SocialProfileDetailHeaderLockup();
        v190 = v189[5];
        v191 = a1 + v190;
        v192 = a2 + v190;
        v193 = *(_OWORD *)(v192 + 16);
        *(_OWORD *)v191 = *(_OWORD *)v192;
        *(_OWORD *)(v191 + 16) = v193;
        *(_QWORD *)(v191 + 32) = *(_QWORD *)(v192 + 32);
        v194 = v189[6];
        v195 = a1 + v194;
        v196 = a2 + v194;
        *(_BYTE *)(a1 + v194) = *(_BYTE *)(a2 + v194);
        memcpy((void *)(a1 + v194 + 8), (const void *)(a2 + v194 + 8), 0x69uLL);
        v197 = *(int *)(type metadata accessor for ContentDescriptor() + 24);
        v198 = (void *)(v195 + v197);
        v199 = (const void *)(v196 + v197);
        v200 = sub_21D7BF754();
        if (__swift_getEnumTagSinglePayload((uint64_t)v199, 1, v200))
        {
          v201 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
          memcpy(v198, v199, *(_QWORD *)(*(_QWORD *)(v201 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v200 - 8) + 32))(v198, v199, v200);
          __swift_storeEnumTagSinglePayload((uint64_t)v198, 0, 1, v200);
        }
        *(_OWORD *)(a1 + v189[7]) = *(_OWORD *)(a2 + v189[7]);
        *(_OWORD *)(a1 + v189[8]) = *(_OWORD *)(a2 + v189[8]);
        *(_BYTE *)(a1 + v189[9]) = *(_BYTE *)(a2 + v189[9]);
        *(_BYTE *)(a1 + v189[10]) = *(_BYTE *)(a2 + v189[10]);
        v276 = v189[11];
        v277 = (char *)(a1 + v276);
        v278 = (char *)(a2 + v276);
        v279 = type metadata accessor for Artwork();
        if (__swift_getEnumTagSinglePayload((uint64_t)v278, 1, v279))
        {
          v280 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
          memcpy(v277, v278, *(_QWORD *)(*(_QWORD *)(v280 - 8) + 64));
        }
        else
        {
          v300 = sub_21D7C3840();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v300 - 8) + 32))(v277, v278, v300);
          v301 = *(int *)(v279 + 20);
          v302 = &v277[v301];
          v303 = &v278[v301];
          v304 = sub_21D7C3804();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v304 - 8) + 32))(v302, v303, v304);
          __swift_storeEnumTagSinglePayload((uint64_t)v277, 0, 1, v279);
        }
        goto LABEL_188;
      case 0x22u:
        v68 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload(a2, 1, v68))
        {
          v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(a1, a2, v68);
          __swift_storeEnumTagSinglePayload(a1, 0, 1, v68);
        }
        v202 = (int *)type metadata accessor for SocialProfileEditorHeaderLockup(0);
        v203 = v202[5];
        v204 = a1 + v203;
        v205 = a2 + v203;
        v206 = *(_OWORD *)(v205 + 16);
        *(_OWORD *)v204 = *(_OWORD *)v205;
        *(_OWORD *)(v204 + 16) = v206;
        *(_QWORD *)(v204 + 32) = *(_QWORD *)(v205 + 32);
        v207 = v202[6];
        v208 = a1 + v207;
        v209 = a2 + v207;
        *(_BYTE *)(a1 + v207) = *(_BYTE *)(a2 + v207);
        memcpy((void *)(a1 + v207 + 8), (const void *)(a2 + v207 + 8), 0x69uLL);
        v210 = *(int *)(type metadata accessor for ContentDescriptor() + 24);
        v211 = (void *)(v208 + v210);
        v212 = (const void *)(v209 + v210);
        v213 = sub_21D7BF754();
        if (__swift_getEnumTagSinglePayload((uint64_t)v212, 1, v213))
        {
          v214 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
          memcpy(v211, v212, *(_QWORD *)(*(_QWORD *)(v214 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v213 - 8) + 32))(v211, v212, v213);
          __swift_storeEnumTagSinglePayload((uint64_t)v211, 0, 1, v213);
        }
        *(_OWORD *)(a1 + v202[7]) = *(_OWORD *)(a2 + v202[7]);
        *(_OWORD *)(a1 + v202[8]) = *(_OWORD *)(a2 + v202[8]);
        *(_BYTE *)(a1 + v202[9]) = *(_BYTE *)(a2 + v202[9]);
        *(_BYTE *)(a1 + v202[10]) = *(_BYTE *)(a2 + v202[10]);
        *(_OWORD *)(a1 + v202[11]) = *(_OWORD *)(a2 + v202[11]);
        *(_OWORD *)(a1 + v202[12]) = *(_OWORD *)(a2 + v202[12]);
        *(_OWORD *)(a1 + v202[13]) = *(_OWORD *)(a2 + v202[13]);
        *(_OWORD *)(a1 + v202[14]) = *(_OWORD *)(a2 + v202[14]);
        *(_QWORD *)(a1 + v202[15]) = *(_QWORD *)(a2 + v202[15]);
        v281 = v202[16];
        v282 = (char *)(a1 + v281);
        v283 = (char *)(a2 + v281);
        v284 = type metadata accessor for Artwork();
        if (__swift_getEnumTagSinglePayload((uint64_t)v283, 1, v284))
        {
          v285 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
          memcpy(v282, v283, *(_QWORD *)(*(_QWORD *)(v285 - 8) + 64));
        }
        else
        {
          v305 = sub_21D7C3840();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v305 - 8) + 32))(v282, v283, v305);
          v306 = *(int *)(v284 + 20);
          v307 = &v282[v306];
          v308 = &v283[v306];
          v309 = sub_21D7C3804();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v309 - 8) + 32))(v307, v308, v309);
          __swift_storeEnumTagSinglePayload((uint64_t)v282, 0, 1, v284);
        }
        *(_OWORD *)(a1 + v202[17]) = *(_OWORD *)(a2 + v202[17]);
        goto LABEL_188;
      case 0x23u:
        v70 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload(a2, 1, v70))
        {
          v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(a1, a2, v70);
          __swift_storeEnumTagSinglePayload(a1, 0, 1, v70);
        }
        FriendsButtonComponentModel = (int *)type metadata accessor for SocialProfileFindFriendsButtonComponentModel();
        v216 = FriendsButtonComponentModel[5];
        v217 = a1 + v216;
        v218 = a2 + v216;
        v219 = *(_OWORD *)(v218 + 16);
        *(_OWORD *)v217 = *(_OWORD *)v218;
        *(_OWORD *)(v217 + 16) = v219;
        *(_QWORD *)(v217 + 32) = *(_QWORD *)(v218 + 32);
        *(_OWORD *)(a1 + FriendsButtonComponentModel[6]) = *(_OWORD *)(a2 + FriendsButtonComponentModel[6]);
        v220 = FriendsButtonComponentModel[7];
        v221 = a1 + v220;
        v222 = a2 + v220;
        v223 = *(_OWORD *)(v222 + 16);
        *(_OWORD *)v221 = *(_OWORD *)v222;
        *(_OWORD *)(v221 + 16) = v223;
        *(_QWORD *)(v221 + 32) = *(_QWORD *)(v222 + 32);
        goto LABEL_188;
      case 0x24u:
        v72 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload(a2, 1, v72))
        {
          v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(a1, a2, v72);
          __swift_storeEnumTagSinglePayload(a1, 0, 1, v72);
        }
        v224 = (int *)type metadata accessor for SocialProfileDetailViewFollowRequestsHeader();
        v225 = v224[5];
        v226 = a1 + v225;
        v227 = a2 + v225;
        v228 = *(_OWORD *)(v227 + 16);
        *(_OWORD *)v226 = *(_OWORD *)v227;
        *(_OWORD *)(v226 + 16) = v228;
        *(_QWORD *)(v226 + 32) = *(_QWORD *)(v227 + 32);
        *(_QWORD *)(a1 + v224[6]) = *(_QWORD *)(a2 + v224[6]);
        *(_QWORD *)(a1 + v224[7]) = *(_QWORD *)(a2 + v224[7]);
        goto LABEL_188;
      case 0x25u:
        v74 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload(a2, 1, v74))
        {
          v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(a1, a2, v74);
          __swift_storeEnumTagSinglePayload(a1, 0, 1, v74);
        }
        v229 = (int *)type metadata accessor for SocialProfileFollowRequestResponseHeader();
        v230 = v229[5];
        v231 = a1 + v230;
        v232 = a2 + v230;
        v233 = *(_OWORD *)(v232 + 16);
        *(_OWORD *)v231 = *(_OWORD *)v232;
        *(_OWORD *)(v231 + 16) = v233;
        *(_QWORD *)(v231 + 32) = *(_QWORD *)(v232 + 32);
        *(_OWORD *)(a1 + v229[6]) = *(_OWORD *)(a2 + v229[6]);
        *(_OWORD *)(a1 + v229[7]) = *(_OWORD *)(a2 + v229[7]);
        v234 = v229[8];
        v235 = a1 + v234;
        v236 = a2 + v234;
        v237 = *(_OWORD *)(v236 + 16);
        *(_OWORD *)v235 = *(_OWORD *)v236;
        *(_OWORD *)(v235 + 16) = v237;
        *(_QWORD *)(v235 + 32) = *(_QWORD *)(v236 + 32);
        v238 = v229[9];
        v239 = a1 + v238;
        v240 = a2 + v238;
        *(_QWORD *)(v239 + 32) = *(_QWORD *)(v240 + 32);
        v241 = *(_OWORD *)(v240 + 16);
        *(_OWORD *)v239 = *(_OWORD *)v240;
        *(_OWORD *)(v239 + 16) = v241;
        goto LABEL_188;
      case 0x26u:
        v76 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload(a2, 1, v76))
        {
          v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 32))(a1, a2, v76);
          __swift_storeEnumTagSinglePayload(a1, 0, 1, v76);
        }
        v242 = type metadata accessor for SocialProfileFollowRequestsPageComponentModel();
        v243 = *(int *)(v242 + 20);
        v244 = a1 + v243;
        v245 = a2 + v243;
        v246 = *(_OWORD *)(v245 + 16);
        *(_OWORD *)v244 = *(_OWORD *)v245;
        *(_OWORD *)(v244 + 16) = v246;
        *(_QWORD *)(v244 + 32) = *(_QWORD *)(v245 + 32);
        *(_QWORD *)(a1 + *(int *)(v242 + 24)) = *(_QWORD *)(a2 + *(int *)(v242 + 24));
        goto LABEL_188;
      case 0x28u:
        v78 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v78;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        v79 = type metadata accessor for SocialOnboardingSharedPlaylistPageLockup();
        v80 = *(int *)(v79 + 20);
        v81 = (void *)(a1 + v80);
        v82 = (const void *)(a2 + v80);
        v83 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)v82, 1, v83))
        {
          v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v81, v82, v83);
          __swift_storeEnumTagSinglePayload((uint64_t)v81, 0, 1, v83);
        }
        *(_QWORD *)(a1 + *(int *)(v79 + 24)) = *(_QWORD *)(a2 + *(int *)(v79 + 24));
        goto LABEL_188;
      case 0x29u:
        v85 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v85;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        FriendsPageSectionLockup = (int *)type metadata accessor for SocialOnboardingFindFriendsPageSectionLockup();
        v87 = FriendsPageSectionLockup[5];
        v88 = (void *)(a1 + v87);
        v89 = (const void *)(a2 + v87);
        v90 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)v89, 1, v90))
        {
          v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v90 - 8) + 32))(v88, v89, v90);
          __swift_storeEnumTagSinglePayload((uint64_t)v88, 0, 1, v90);
        }
        *(_QWORD *)(a1 + FriendsPageSectionLockup[6]) = *(_QWORD *)(a2 + FriendsPageSectionLockup[6]);
        *(_QWORD *)(a1 + FriendsPageSectionLockup[7]) = *(_QWORD *)(a2 + FriendsPageSectionLockup[7]);
        goto LABEL_188;
      case 0x2Bu:
        v92 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v92;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        v93 = *(int *)(type metadata accessor for Spacer() + 20);
        v59 = (void *)(a1 + v93);
        v60 = (const void *)(a2 + v93);
        v61 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)v60, 1, v61))
        {
LABEL_51:
          v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
        }
        else
        {
LABEL_102:
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
          __swift_storeEnumTagSinglePayload((uint64_t)v59, 0, 1, v61);
        }
        goto LABEL_188;
      default:
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t sub_21CE83790()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21CE8379C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_5_24();
  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t sub_21CE837C4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21CE837D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_5_24();
  return __swift_storeEnumTagSinglePayload(v1, v0, v0, v2);
}

uint64_t sub_21CE837FC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MappedSection.Content(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_21CE83864()
{
  sub_21CDBD918(&qword_255331A70, &qword_255331A78);
}

uint64_t sub_21CE83890()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_21CE838A0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255331AC8;
  if (!qword_255331AC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255331AA8);
    v2[0] = sub_21CE8393C(&qword_255331AD0, &qword_255331AC0);
    v2[1] = sub_21CE8393C(&qword_255331AE0, &qword_255331A90);
    result = MEMORY[0x2207938C0](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255331AC8);
  }
  return result;
}

uint64_t sub_21CE8393C(unint64_t *a1, uint64_t *a2)
{
  uint64_t (*v2)(void);
  uint64_t result;
  uint64_t v5;
  _QWORD v6[2];

  result = *a1;
  if (!result)
  {
    v5 = OUTLINED_FUNCTION_106(0, a2);
    v6[0] = v2();
    v6[1] = sub_21CE83A40();
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v5, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21CE839A0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[3];

  result = qword_255331AD8;
  if (!qword_255331AD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255331AB8);
    v2 = type metadata accessor for TopSearchLockupView(255);
    sub_21CDB6D4C(&qword_253F61490, (void (*)(uint64_t))type metadata accessor for TopSearchLockupView);
    v4[1] = v2;
    v4[2] = v3;
    v4[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x2207938C0](MEMORY[0x24BDF4A08], v1, v4);
    atomic_store(result, (unint64_t *)&qword_255331AD8);
  }
  return result;
}

unint64_t sub_21CE83A40()
{
  unint64_t result;

  result = qword_253F5E400;
  if (!qword_253F5E400)
  {
    result = MEMORY[0x2207938C0](&unk_21D7CE6BC, &type metadata for ListViewStylingViewModifier);
    atomic_store(result, (unint64_t *)&qword_253F5E400);
  }
  return result;
}

unint64_t sub_21CE83A7C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[3];

  result = qword_255331AE8;
  if (!qword_255331AE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255331A88);
    v2 = type metadata accessor for SuggestionItemView(255);
    sub_21CDB6D4C(&qword_253F61050, (void (*)(uint64_t))type metadata accessor for SuggestionItemView);
    v4[1] = v2;
    v4[2] = v3;
    v4[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x2207938C0](MEMORY[0x24BDF4A08], v1, v4);
    atomic_store(result, (unint64_t *)&qword_255331AE8);
  }
  return result;
}

unint64_t sub_21CE83B28()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255331B30;
  if (!qword_255331B30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255331B38);
    v2[0] = sub_21CE838A0();
    v2[1] = MEMORY[0x24BDF5138];
    result = MEMORY[0x2207938C0](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255331B30);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_3_25(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  return type metadata accessor for SearchPageListContentView(0, v4, v5, a4);
}

uint64_t OUTLINED_FUNCTION_5_24()
{
  return type metadata accessor for MappedSection.Content(0);
}

uint64_t OUTLINED_FUNCTION_6_22(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for SearchPageListContentView(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
}

uint64_t OUTLINED_FUNCTION_9_18()
{
  return sub_21D7A5F9C();
}

_QWORD *sub_21CE83BE4(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  _BYTE *__dst;
  _BYTE *v74;
  uint64_t v75;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = a3[5];
    v9 = (char *)v4 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_21D7C4668();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
    }
    v14 = a3[6];
    v15 = a3[7];
    v16 = (_QWORD *)((char *)v4 + v14);
    v17 = (uint64_t *)((char *)a2 + v14);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = (_QWORD *)((char *)v4 + v15);
    v20 = (uint64_t *)((char *)a2 + v15);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = a3[8];
    v23 = (char *)v4 + v22;
    v24 = (uint64_t)a2 + v22;
    v25 = *(uint64_t *)((char *)a2 + v22 + 24);
    sub_21D7C4C20();
    sub_21D7C4C20();
    if (v25)
    {
      v26 = *(_QWORD *)(v24 + 32);
      *((_QWORD *)v23 + 3) = v25;
      *((_QWORD *)v23 + 4) = v26;
      (**(void (***)(char *, uint64_t, uint64_t))(v25 - 8))(v23, v24, v25);
    }
    else
    {
      v27 = *(_OWORD *)(v24 + 16);
      *(_OWORD *)v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v27;
      *((_QWORD *)v23 + 4) = *(_QWORD *)(v24 + 32);
    }
    v28 = a3[9];
    v29 = a3[10];
    v30 = (_QWORD *)((char *)v4 + v28);
    v31 = (uint64_t *)((char *)a2 + v28);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    *((_BYTE *)v4 + v29) = *((_BYTE *)a2 + v29);
    v33 = a3[11];
    v34 = (char *)v4 + v33;
    v35 = (uint64_t)a2 + v33;
    v36 = *(uint64_t *)((char *)a2 + v33 + 24);
    sub_21D7C4C20();
    if (v36)
    {
      v37 = *(_QWORD *)(v35 + 32);
      *((_QWORD *)v34 + 3) = v36;
      *((_QWORD *)v34 + 4) = v37;
      (**(void (***)(char *, uint64_t, uint64_t))(v36 - 8))(v34, v35, v36);
    }
    else
    {
      v38 = *(_OWORD *)(v35 + 16);
      *(_OWORD *)v34 = *(_OWORD *)v35;
      *((_OWORD *)v34 + 1) = v38;
      *((_QWORD *)v34 + 4) = *(_QWORD *)(v35 + 32);
    }
    v39 = a3[12];
    v40 = (char *)v4 + v39;
    v41 = (char *)a2 + v39;
    v42 = type metadata accessor for ContentDescriptor();
    if (__swift_getEnumTagSinglePayload((uint64_t)v41, 1, v42))
    {
      v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      *v40 = *v41;
      v44 = *((_QWORD *)v41 + 2);
      *((_QWORD *)v40 + 1) = *((_QWORD *)v41 + 1);
      *((_QWORD *)v40 + 2) = v44;
      v45 = *((_QWORD *)v41 + 4);
      *((_QWORD *)v40 + 3) = *((_QWORD *)v41 + 3);
      *((_QWORD *)v40 + 4) = v45;
      v46 = *((_QWORD *)v41 + 6);
      *((_QWORD *)v40 + 5) = *((_QWORD *)v41 + 5);
      *((_QWORD *)v40 + 6) = v46;
      v47 = *((_QWORD *)v41 + 8);
      *((_QWORD *)v40 + 7) = *((_QWORD *)v41 + 7);
      *((_QWORD *)v40 + 8) = v47;
      v48 = v42;
      v49 = *((_QWORD *)v41 + 10);
      *((_QWORD *)v40 + 9) = *((_QWORD *)v41 + 9);
      *((_QWORD *)v40 + 10) = v49;
      v50 = *((_QWORD *)v41 + 12);
      v75 = v48;
      *((_QWORD *)v40 + 11) = *((_QWORD *)v41 + 11);
      *((_QWORD *)v40 + 12) = v50;
      *((_QWORD *)v40 + 13) = *((_QWORD *)v41 + 13);
      v40[112] = v41[112];
      v51 = *(int *)(v48 + 24);
      __dst = &v40[v51];
      v74 = &v41[v51];
      v52 = sub_21D7BF754();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      if (__swift_getEnumTagSinglePayload((uint64_t)v74, 1, v52))
      {
        v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
        memcpy(__dst, v74, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(__dst, v74, v52);
        __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v52);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v40, 0, 1, v75);
    }
    v54 = a3[13];
    v55 = a3[14];
    v56 = (_QWORD *)((char *)v4 + v54);
    v57 = (uint64_t *)((char *)a2 + v54);
    v58 = v57[1];
    *v56 = *v57;
    v56[1] = v58;
    v59 = (char *)v4 + v55;
    v60 = (char *)a2 + v55;
    v61 = type metadata accessor for Artwork();
    sub_21D7C4C20();
    if (__swift_getEnumTagSinglePayload((uint64_t)v60, 1, v61))
    {
      v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
      memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      v63 = sub_21D7C3840();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v59, v60, v63);
      v64 = *(int *)(v61 + 20);
      v65 = &v59[v64];
      v66 = &v60[v64];
      v67 = sub_21D7C3804();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v65, v66, v67);
      __swift_storeEnumTagSinglePayload((uint64_t)v59, 0, 1, v61);
    }
    v68 = a3[15];
    v69 = (_QWORD *)((char *)v4 + v68);
    v70 = (uint64_t *)((char *)a2 + v68);
    v71 = v70[1];
    *v69 = *v70;
    v69[1] = v71;
    sub_21D7C4C20();
  }
  return v4;
}

uint64_t sub_21CE84028(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = a1 + a2[5];
  v5 = sub_21D7C4668();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + a2[8];
  if (*(_QWORD *)(v6 + 24))
    __swift_destroy_boxed_opaque_existential_1(v6);
  swift_bridgeObjectRelease();
  v7 = a1 + a2[11];
  if (*(_QWORD *)(v7 + 24))
    __swift_destroy_boxed_opaque_existential_1(v7);
  v8 = a1 + a2[12];
  v9 = type metadata accessor for ContentDescriptor();
  if (!__swift_getEnumTagSinglePayload(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = v8 + *(int *)(v9 + 24);
    v11 = sub_21D7BF754();
    if (!__swift_getEnumTagSinglePayload(v10, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  swift_bridgeObjectRelease();
  v12 = a1 + a2[14];
  v13 = type metadata accessor for Artwork();
  if (!__swift_getEnumTagSinglePayload(v12, 1, v13))
  {
    v14 = sub_21D7C3840();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
    v15 = v12 + *(int *)(v13 + 20);
    v16 = sub_21D7C3804();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_21CE84200(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  _BYTE *v71;
  _BYTE *__dst;
  uint64_t v73;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_21D7C4668();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v12);
  v15 = (_QWORD *)(a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (_QWORD *)(a1 + v13);
  v18 = (_QWORD *)(a2 + v13);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = a3[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = *(_QWORD *)(a2 + v20 + 24);
  sub_21D7C4C20();
  sub_21D7C4C20();
  if (v23)
  {
    v24 = *(_QWORD *)(v22 + 32);
    *(_QWORD *)(v21 + 24) = v23;
    *(_QWORD *)(v21 + 32) = v24;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v23 - 8))(v21, v22, v23);
  }
  else
  {
    v25 = *(_OWORD *)(v22 + 16);
    *(_OWORD *)v21 = *(_OWORD *)v22;
    *(_OWORD *)(v21 + 16) = v25;
    *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
  }
  v26 = a3[9];
  v27 = a3[10];
  v28 = (_QWORD *)(a1 + v26);
  v29 = (_QWORD *)(a2 + v26);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  *(_BYTE *)(a1 + v27) = *(_BYTE *)(a2 + v27);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = *(_QWORD *)(a2 + v31 + 24);
  sub_21D7C4C20();
  if (v34)
  {
    v35 = *(_QWORD *)(v33 + 32);
    *(_QWORD *)(v32 + 24) = v34;
    *(_QWORD *)(v32 + 32) = v35;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v34 - 8))(v32, v33, v34);
  }
  else
  {
    v36 = *(_OWORD *)(v33 + 16);
    *(_OWORD *)v32 = *(_OWORD *)v33;
    *(_OWORD *)(v32 + 16) = v36;
    *(_QWORD *)(v32 + 32) = *(_QWORD *)(v33 + 32);
  }
  v37 = a3[12];
  v38 = (_BYTE *)(a1 + v37);
  v39 = (_BYTE *)(a2 + v37);
  v40 = type metadata accessor for ContentDescriptor();
  if (__swift_getEnumTagSinglePayload((uint64_t)v39, 1, v40))
  {
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    *v38 = *v39;
    v42 = *((_QWORD *)v39 + 2);
    *((_QWORD *)v38 + 1) = *((_QWORD *)v39 + 1);
    *((_QWORD *)v38 + 2) = v42;
    v43 = *((_QWORD *)v39 + 4);
    *((_QWORD *)v38 + 3) = *((_QWORD *)v39 + 3);
    *((_QWORD *)v38 + 4) = v43;
    v44 = *((_QWORD *)v39 + 6);
    *((_QWORD *)v38 + 5) = *((_QWORD *)v39 + 5);
    *((_QWORD *)v38 + 6) = v44;
    v45 = *((_QWORD *)v39 + 8);
    *((_QWORD *)v38 + 7) = *((_QWORD *)v39 + 7);
    *((_QWORD *)v38 + 8) = v45;
    v46 = v40;
    v47 = *((_QWORD *)v39 + 10);
    *((_QWORD *)v38 + 9) = *((_QWORD *)v39 + 9);
    *((_QWORD *)v38 + 10) = v47;
    v48 = *((_QWORD *)v39 + 12);
    *((_QWORD *)v38 + 11) = *((_QWORD *)v39 + 11);
    *((_QWORD *)v38 + 12) = v48;
    *((_QWORD *)v38 + 13) = *((_QWORD *)v39 + 13);
    v38[112] = v39[112];
    v73 = v46;
    v49 = *(int *)(v46 + 24);
    __dst = &v38[v49];
    v71 = &v39[v49];
    v50 = sub_21D7BF754();
    sub_21D7C4C20();
    sub_21D7C4C20();
    sub_21D7C4C20();
    sub_21D7C4C20();
    sub_21D7C4C20();
    sub_21D7C4C20();
    if (__swift_getEnumTagSinglePayload((uint64_t)v71, 1, v50))
    {
      v51 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
      memcpy(__dst, v71, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(__dst, v71, v50);
      __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v50);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v73);
  }
  v52 = a3[13];
  v53 = a3[14];
  v54 = (_QWORD *)(a1 + v52);
  v55 = (_QWORD *)(a2 + v52);
  v56 = v55[1];
  *v54 = *v55;
  v54[1] = v56;
  v57 = (char *)(a1 + v53);
  v58 = (char *)(a2 + v53);
  v59 = type metadata accessor for Artwork();
  sub_21D7C4C20();
  if (__swift_getEnumTagSinglePayload((uint64_t)v58, 1, v59))
  {
    v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  else
  {
    v61 = sub_21D7C3840();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v57, v58, v61);
    v62 = *(int *)(v59 + 20);
    v63 = &v57[v62];
    v64 = &v58[v62];
    v65 = sub_21D7C3804();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v63, v64, v65);
    __swift_storeEnumTagSinglePayload((uint64_t)v57, 0, 1, v59);
  }
  v66 = a3[15];
  v67 = (_QWORD *)(a1 + v66);
  v68 = (_QWORD *)(a2 + v66);
  v69 = v68[1];
  *v67 = *v68;
  v67[1] = v69;
  sub_21D7C4C20();
  return a1;
}

uint64_t *sub_21CE84614(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  size_t v45;
  void *v46;
  const void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  const void *v82;
  void *__dst;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21D7C4668();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  v14 = a3[6];
  v15 = (uint64_t *)((char *)a1 + v14);
  v16 = (uint64_t *)((char *)a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = (uint64_t *)((char *)a1 + v17);
  v19 = (uint64_t *)((char *)a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  v20 = a3[8];
  v21 = (uint64_t)a1 + v20;
  v22 = (uint64_t *)((char *)a2 + v20);
  v23 = *(uint64_t *)((char *)a2 + v20 + 24);
  if (*(uint64_t *)((char *)a1 + v20 + 24))
  {
    if (v23)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)v21, v22);
      goto LABEL_14;
    }
    __swift_destroy_boxed_opaque_existential_1(v21);
  }
  else if (v23)
  {
    *(_QWORD *)(v21 + 24) = v23;
    *(_QWORD *)(v21 + 32) = v22[4];
    (**(void (***)(uint64_t, char *))(v23 - 8))(v21, (char *)v22);
    goto LABEL_14;
  }
  v24 = *(_OWORD *)v22;
  v25 = *((_OWORD *)v22 + 1);
  *(_QWORD *)(v21 + 32) = v22[4];
  *(_OWORD *)v21 = v24;
  *(_OWORD *)(v21 + 16) = v25;
LABEL_14:
  v26 = a3[9];
  v27 = (uint64_t *)((char *)a1 + v26);
  v28 = (uint64_t *)((char *)a2 + v26);
  *v27 = *v28;
  v27[1] = v28[1];
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  v29 = a3[11];
  v30 = (uint64_t)a1 + v29;
  v31 = (uint64_t *)((char *)a2 + v29);
  v32 = *(uint64_t *)((char *)a2 + v29 + 24);
  if (*(uint64_t *)((char *)a1 + v29 + 24))
  {
    if (v32)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)v30, v31);
      goto LABEL_21;
    }
    __swift_destroy_boxed_opaque_existential_1(v30);
  }
  else if (v32)
  {
    *(_QWORD *)(v30 + 24) = v32;
    *(_QWORD *)(v30 + 32) = v31[4];
    (**(void (***)(uint64_t, char *))(v32 - 8))(v30, (char *)v31);
    goto LABEL_21;
  }
  v33 = *(_OWORD *)v31;
  v34 = *((_OWORD *)v31 + 1);
  *(_QWORD *)(v30 + 32) = v31[4];
  *(_OWORD *)v30 = v33;
  *(_OWORD *)(v30 + 16) = v34;
LABEL_21:
  v35 = a3[12];
  v36 = (uint64_t)a1 + v35;
  v37 = (uint64_t)a2 + v35;
  v38 = type metadata accessor for ContentDescriptor();
  v39 = __swift_getEnumTagSinglePayload(v36, 1, v38);
  v40 = __swift_getEnumTagSinglePayload(v37, 1, v38);
  if (v39)
  {
    if (!v40)
    {
      *(_BYTE *)v36 = *(_BYTE *)v37;
      *(_QWORD *)(v36 + 8) = *(_QWORD *)(v37 + 8);
      *(_QWORD *)(v36 + 16) = *(_QWORD *)(v37 + 16);
      *(_QWORD *)(v36 + 24) = *(_QWORD *)(v37 + 24);
      *(_QWORD *)(v36 + 32) = *(_QWORD *)(v37 + 32);
      *(_QWORD *)(v36 + 40) = *(_QWORD *)(v37 + 40);
      *(_QWORD *)(v36 + 48) = *(_QWORD *)(v37 + 48);
      *(_QWORD *)(v36 + 56) = *(_QWORD *)(v37 + 56);
      *(_QWORD *)(v36 + 64) = *(_QWORD *)(v37 + 64);
      *(_QWORD *)(v36 + 72) = *(_QWORD *)(v37 + 72);
      *(_QWORD *)(v36 + 80) = *(_QWORD *)(v37 + 80);
      *(_QWORD *)(v36 + 88) = *(_QWORD *)(v37 + 88);
      *(_QWORD *)(v36 + 96) = *(_QWORD *)(v37 + 96);
      v41 = *(_QWORD *)(v37 + 104);
      *(_BYTE *)(v36 + 112) = *(_BYTE *)(v37 + 112);
      *(_QWORD *)(v36 + 104) = v41;
      v42 = *(int *)(v38 + 24);
      __dst = (void *)(v36 + v42);
      v82 = (const void *)(v37 + v42);
      v43 = sub_21D7BF754();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      if (__swift_getEnumTagSinglePayload((uint64_t)v82, 1, v43))
      {
        v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
        memcpy(__dst, v82, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(__dst, v82, v43);
        __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v43);
      }
      v55 = v36;
      v56 = v38;
      goto LABEL_35;
    }
    goto LABEL_27;
  }
  if (v40)
  {
    sub_21CDBDA1C(v36, (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
LABEL_27:
    v45 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253F60800) - 8) + 64);
    v46 = (void *)v36;
    v47 = (const void *)v37;
LABEL_28:
    memcpy(v46, v47, v45);
    goto LABEL_36;
  }
  *(_BYTE *)v36 = *(_BYTE *)v37;
  *(_QWORD *)(v36 + 8) = *(_QWORD *)(v37 + 8);
  *(_QWORD *)(v36 + 16) = *(_QWORD *)(v37 + 16);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v36 + 24) = *(_QWORD *)(v37 + 24);
  *(_QWORD *)(v36 + 32) = *(_QWORD *)(v37 + 32);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v36 + 40) = *(_QWORD *)(v37 + 40);
  *(_QWORD *)(v36 + 48) = *(_QWORD *)(v37 + 48);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v36 + 56) = *(_QWORD *)(v37 + 56);
  *(_QWORD *)(v36 + 64) = *(_QWORD *)(v37 + 64);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v36 + 72) = *(_QWORD *)(v37 + 72);
  *(_QWORD *)(v36 + 80) = *(_QWORD *)(v37 + 80);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v36 + 88) = *(_QWORD *)(v37 + 88);
  *(_QWORD *)(v36 + 96) = *(_QWORD *)(v37 + 96);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  v48 = *(_QWORD *)(v37 + 104);
  *(_BYTE *)(v36 + 112) = *(_BYTE *)(v37 + 112);
  *(_QWORD *)(v36 + 104) = v48;
  v49 = *(int *)(v38 + 24);
  v50 = v36 + v49;
  v51 = v37 + v49;
  v52 = sub_21D7BF754();
  v53 = __swift_getEnumTagSinglePayload(v50, 1, v52);
  v54 = __swift_getEnumTagSinglePayload(v51, 1, v52);
  if (v53)
  {
    if (!v54)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v50, v51, v52);
      v55 = v50;
      v56 = v52;
LABEL_35:
      __swift_storeEnumTagSinglePayload(v55, 0, 1, v56);
      goto LABEL_36;
    }
    goto LABEL_46;
  }
  v81 = *(_QWORD *)(v52 - 8);
  if (v54)
  {
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v50, v52);
LABEL_46:
    v45 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10) - 8) + 64);
    v46 = (void *)v50;
    v47 = (const void *)v51;
    goto LABEL_28;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 24))(v50, v51, v52);
LABEL_36:
  v57 = a3[13];
  v58 = (uint64_t *)((char *)a1 + v57);
  v59 = (uint64_t *)((char *)a2 + v57);
  *v58 = *v59;
  v58[1] = v59[1];
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  v60 = a3[14];
  v61 = (char *)a1 + v60;
  v62 = (char *)a2 + v60;
  v63 = type metadata accessor for Artwork();
  v64 = __swift_getEnumTagSinglePayload((uint64_t)v61, 1, v63);
  v65 = __swift_getEnumTagSinglePayload((uint64_t)v62, 1, v63);
  if (!v64)
  {
    if (!v65)
    {
      v76 = sub_21D7C3840();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 24))(v61, v62, v76);
      v77 = *(int *)(v63 + 20);
      v78 = &v61[v77];
      v79 = &v62[v77];
      v80 = sub_21D7C3804();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 24))(v78, v79, v80);
      goto LABEL_42;
    }
    sub_21CDBDA1C((uint64_t)v61, (uint64_t (*)(_QWORD))type metadata accessor for Artwork);
    goto LABEL_41;
  }
  if (v65)
  {
LABEL_41:
    v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    goto LABEL_42;
  }
  v66 = sub_21D7C3840();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v61, v62, v66);
  v67 = *(int *)(v63 + 20);
  v68 = &v61[v67];
  v69 = &v62[v67];
  v70 = sub_21D7C3804();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v68, v69, v70);
  __swift_storeEnumTagSinglePayload((uint64_t)v61, 0, 1, v63);
LABEL_42:
  v72 = a3[15];
  v73 = (uint64_t *)((char *)a1 + v72);
  v74 = (uint64_t *)((char *)a2 + v72);
  *v73 = *v74;
  v73[1] = v74[1];
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21CE84D7C(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_21D7C4668();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  v12 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  v13 = a3[8];
  v14 = a3[9];
  v15 = a1 + v13;
  v16 = a2 + v13;
  v17 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v17;
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  v18 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v21;
  *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
  v22 = a3[12];
  v23 = (_BYTE *)(a1 + v22);
  v24 = (_BYTE *)(a2 + v22);
  v25 = type metadata accessor for ContentDescriptor();
  if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    *v23 = *v24;
    memcpy(v23 + 8, v24 + 8, 0x69uLL);
    v27 = *(int *)(v25 + 24);
    v28 = &v23[v27];
    v29 = &v24[v27];
    v30 = sub_21D7BF754();
    if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v30))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
      __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v30);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v25);
  }
  v32 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  v33 = (char *)(a1 + v32);
  v34 = (char *)(a2 + v32);
  v35 = type metadata accessor for Artwork();
  if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v35))
  {
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    v37 = sub_21D7C3840();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v33, v34, v37);
    v38 = *(int *)(v35 + 20);
    v39 = &v33[v38];
    v40 = &v34[v38];
    v41 = sub_21D7C3804();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
    __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v35);
  }
  *(_OWORD *)(a1 + a3[15]) = *(_OWORD *)(a2 + a3[15]);
  return a1;
}

uint64_t sub_21CE85060(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  int v43;
  uint64_t v44;
  void *v45;
  const void *v46;
  uint64_t v47;
  uint64_t v48;
  size_t v49;
  void *v50;
  const void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  int v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_21D7C4668();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v13 = *(_QWORD *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_7:
  v15 = a3[6];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  v20 = a3[7];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  v25 = a3[8];
  v26 = a1 + v25;
  v27 = a2 + v25;
  if (*(_QWORD *)(a1 + v25 + 24))
    __swift_destroy_boxed_opaque_existential_1(v26);
  v28 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v28;
  *(_QWORD *)(v26 + 32) = *(_QWORD *)(v27 + 32);
  v29 = a3[9];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (uint64_t *)(a2 + v29);
  v33 = *v31;
  v32 = v31[1];
  *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  v34 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v35 = a1 + v34;
  v36 = a2 + v34;
  if (*(_QWORD *)(a1 + v34 + 24))
    __swift_destroy_boxed_opaque_existential_1(a1 + v34);
  v37 = *(_OWORD *)(v36 + 16);
  *(_OWORD *)v35 = *(_OWORD *)v36;
  *(_OWORD *)(v35 + 16) = v37;
  *(_QWORD *)(v35 + 32) = *(_QWORD *)(v36 + 32);
  v38 = a3[12];
  v39 = a1 + v38;
  v40 = a2 + v38;
  v41 = type metadata accessor for ContentDescriptor();
  v42 = __swift_getEnumTagSinglePayload(v39, 1, v41);
  v43 = __swift_getEnumTagSinglePayload(v40, 1, v41);
  if (v42)
  {
    if (!v43)
    {
      *(_BYTE *)v39 = *(_BYTE *)v40;
      memcpy((void *)(v39 + 8), (const void *)(v40 + 8), 0x69uLL);
      v44 = *(int *)(v41 + 24);
      v45 = (void *)(v39 + v44);
      v46 = (const void *)(v40 + v44);
      v47 = sub_21D7BF754();
      if (__swift_getEnumTagSinglePayload((uint64_t)v46, 1, v47))
      {
        v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
        __swift_storeEnumTagSinglePayload((uint64_t)v45, 0, 1, v47);
      }
      v64 = v39;
      v65 = v41;
      goto LABEL_25;
    }
    goto LABEL_17;
  }
  if (v43)
  {
    sub_21CDBDA1C(v39, (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
LABEL_17:
    v49 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253F60800) - 8) + 64);
    v50 = (void *)v39;
    v51 = (const void *)v40;
LABEL_18:
    memcpy(v50, v51, v49);
    goto LABEL_26;
  }
  *(_BYTE *)v39 = *(_BYTE *)v40;
  v52 = *(_QWORD *)(v40 + 16);
  *(_QWORD *)(v39 + 8) = *(_QWORD *)(v40 + 8);
  *(_QWORD *)(v39 + 16) = v52;
  swift_bridgeObjectRelease();
  v53 = *(_QWORD *)(v40 + 32);
  *(_QWORD *)(v39 + 24) = *(_QWORD *)(v40 + 24);
  *(_QWORD *)(v39 + 32) = v53;
  swift_bridgeObjectRelease();
  v54 = *(_QWORD *)(v40 + 48);
  *(_QWORD *)(v39 + 40) = *(_QWORD *)(v40 + 40);
  *(_QWORD *)(v39 + 48) = v54;
  swift_bridgeObjectRelease();
  v55 = *(_QWORD *)(v40 + 64);
  *(_QWORD *)(v39 + 56) = *(_QWORD *)(v40 + 56);
  *(_QWORD *)(v39 + 64) = v55;
  swift_bridgeObjectRelease();
  v56 = *(_QWORD *)(v40 + 80);
  *(_QWORD *)(v39 + 72) = *(_QWORD *)(v40 + 72);
  *(_QWORD *)(v39 + 80) = v56;
  swift_bridgeObjectRelease();
  v57 = *(_QWORD *)(v40 + 96);
  *(_QWORD *)(v39 + 88) = *(_QWORD *)(v40 + 88);
  *(_QWORD *)(v39 + 96) = v57;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v39 + 104) = *(_QWORD *)(v40 + 104);
  *(_BYTE *)(v39 + 112) = *(_BYTE *)(v40 + 112);
  v58 = *(int *)(v41 + 24);
  v59 = v39 + v58;
  v60 = v40 + v58;
  v61 = sub_21D7BF754();
  v62 = __swift_getEnumTagSinglePayload(v59, 1, v61);
  v63 = __swift_getEnumTagSinglePayload(v60, 1, v61);
  if (v62)
  {
    if (!v63)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
      v64 = v59;
      v65 = v61;
LABEL_25:
      __swift_storeEnumTagSinglePayload(v64, 0, 1, v65);
      goto LABEL_26;
    }
    goto LABEL_36;
  }
  v94 = *(_QWORD *)(v61 - 8);
  if (v63)
  {
    (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v59, v61);
LABEL_36:
    v49 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10) - 8) + 64);
    v50 = (void *)v59;
    v51 = (const void *)v60;
    goto LABEL_18;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v94 + 40))(v59, v60, v61);
LABEL_26:
  v66 = a3[13];
  v67 = (_QWORD *)(a1 + v66);
  v68 = (uint64_t *)(a2 + v66);
  v70 = *v68;
  v69 = v68[1];
  *v67 = v70;
  v67[1] = v69;
  swift_bridgeObjectRelease();
  v71 = a3[14];
  v72 = (char *)(a1 + v71);
  v73 = (char *)(a2 + v71);
  v74 = type metadata accessor for Artwork();
  v75 = __swift_getEnumTagSinglePayload((uint64_t)v72, 1, v74);
  v76 = __swift_getEnumTagSinglePayload((uint64_t)v73, 1, v74);
  if (!v75)
  {
    if (!v76)
    {
      v89 = sub_21D7C3840();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 40))(v72, v73, v89);
      v90 = *(int *)(v74 + 20);
      v91 = &v72[v90];
      v92 = &v73[v90];
      v93 = sub_21D7C3804();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 40))(v91, v92, v93);
      goto LABEL_32;
    }
    sub_21CDBDA1C((uint64_t)v72, (uint64_t (*)(_QWORD))type metadata accessor for Artwork);
    goto LABEL_31;
  }
  if (v76)
  {
LABEL_31:
    v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
    goto LABEL_32;
  }
  v77 = sub_21D7C3840();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 32))(v72, v73, v77);
  v78 = *(int *)(v74 + 20);
  v79 = &v72[v78];
  v80 = &v73[v78];
  v81 = sub_21D7C3804();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(v79, v80, v81);
  __swift_storeEnumTagSinglePayload((uint64_t)v72, 0, 1, v74);
LABEL_32:
  v83 = a3[15];
  v84 = (_QWORD *)(a1 + v83);
  v85 = (uint64_t *)(a2 + v83);
  v87 = *v85;
  v86 = v85[1];
  *v84 = v87;
  v84[1] = v86;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21CE855EC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21CE855F8(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = a3[5];
    }
    else
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
      if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == (_DWORD)a2)
      {
        v9 = v11;
        v10 = a3[12];
      }
      else
      {
        v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
        v10 = a3[14];
      }
    }
    return __swift_getEnumTagSinglePayload(a1 + v10, a2, v9);
  }
}

uint64_t sub_21CE856C0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21CE856CC(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = a4[5];
    }
    else
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
      if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
      {
        v9 = v11;
        v10 = a4[12];
      }
      else
      {
        v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
        v10 = a4[14];
      }
    }
    return __swift_storeEnumTagSinglePayload(v5 + v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s14descr24E0F07F1V6LockupVMa()
{
  uint64_t result;

  result = qword_253F5F9B0;
  if (!qword_253F5F9B0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_21CE857C8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_21CDB3900(319, (unint64_t *)&qword_253F67610, (void (*)(uint64_t))MEMORY[0x24BE5D330]);
  if (v0 <= 0x3F)
  {
    sub_21CDB3900(319, (unint64_t *)&qword_253F60810, (void (*)(uint64_t))type metadata accessor for ContentDescriptor);
    if (v1 <= 0x3F)
    {
      sub_21CDB3900(319, qword_253F4F2C8, (void (*)(uint64_t))type metadata accessor for Artwork);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_21CE858D0(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char *v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t *v49;
  _QWORD *v50;
  int *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t);
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v66 = a2;
  v61 = a3;
  v4 = sub_21D7C4098();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_21D7C3F6C();
  v58 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v55 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v53 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v53 - v14;
  sub_21D7C4668();
  OUTLINED_FUNCTION_1_38();
  sub_21D7C3F78();
  v57 = v5;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v62 = v4;
  v59 = v16;
  v16(v7, v66, v4);
  v56 = _s14descr24E0F07F1V6LockupVMa();
  v17 = v61 + *(int *)(v56 + 20);
  v60 = v7;
  OUTLINED_FUNCTION_5_25();
  v18 = a1;
  sub_21D7C3F78();
  v19 = sub_21D7C3F3C();
  v21 = v20;
  v22 = *(void (**)(char *, uint64_t))(v58 + 8);
  v63 = v8;
  v22(v13, v8);
  v54 = v21;
  if (v21)
  {
    v58 = v17;
    v64 = v19;
    v65 = v21;
    v23 = v61;
    sub_21D7C5A30();
    v24 = v18;
    sub_21D7C3F78();
    v25 = v66;
    sub_21D7C435C();
    v22(v15, v63);
    v26 = (int *)v56;
    OUTLINED_FUNCTION_12_12(*(int *)(v56 + 32));
    v27 = type metadata accessor for Artwork();
    OUTLINED_FUNCTION_2_34();
    v59(v60, v25, v62);
    v28 = v23 + v26[14];
    sub_21CDB47E8((unint64_t *)&qword_253F655E0, (uint64_t (*)(uint64_t))type metadata accessor for Artwork, (uint64_t)&unk_21D802DC4);
    OUTLINED_FUNCTION_5_25();
    OUTLINED_FUNCTION_2_34();
    OUTLINED_FUNCTION_5_3();
    OUTLINED_FUNCTION_3_26();
    v29 = (uint64_t *)(v23 + v26[6]);
    *v29 = v28;
    v29[1] = v27;
    OUTLINED_FUNCTION_2_34();
    v30 = OUTLINED_FUNCTION_5_3();
    v32 = v31;
    OUTLINED_FUNCTION_6_23((uint64_t)v15);
    v33 = (uint64_t *)(v23 + v26[7]);
    *v33 = v30;
    v33[1] = v32;
    OUTLINED_FUNCTION_2_34();
    v34 = v66;
    sub_21D7C435C();
    OUTLINED_FUNCTION_6_23((uint64_t)v15);
    OUTLINED_FUNCTION_12_12(v26[11]);
    v35 = type metadata accessor for ContentDescriptor();
    OUTLINED_FUNCTION_1_38();
    sub_21D7C3F78();
    v36 = v60;
    v59(v60, v34, v62);
    v37 = v23 + v26[12];
    sub_21CDB47E8((unint64_t *)&qword_253F607E8, (uint64_t (*)(uint64_t))type metadata accessor for ContentDescriptor, (uint64_t)&protocol conformance descriptor for ContentDescriptor);
    OUTLINED_FUNCTION_5_25();
    OUTLINED_FUNCTION_2_34();
    OUTLINED_FUNCTION_5_3();
    OUTLINED_FUNCTION_3_26();
    v38 = (uint64_t *)(v23 + v26[9]);
    *v38 = v37;
    v38[1] = v35;
    OUTLINED_FUNCTION_1_38();
    OUTLINED_FUNCTION_2_34();
    LOBYTE(v37) = sub_21D7C3EE8();
    OUTLINED_FUNCTION_6_23((uint64_t)v15);
    *(_BYTE *)(v23 + v26[10]) = v37;
    v39 = v55;
    OUTLINED_FUNCTION_2_34();
    v40 = sub_21D7C3F3C();
    v42 = v41;
    v22(v39, (uint64_t)v36);
    if (v42)
    {
      v43 = (uint64_t *)(v23 + v26[15]);
      *v43 = v40;
      v43[1] = v42;
      OUTLINED_FUNCTION_2_34();
      v44 = OUTLINED_FUNCTION_5_3();
      v46 = v45;
      OUTLINED_FUNCTION_0_32();
      v47 = v24;
      v48 = v63;
      v22(v47, v63);
      v22(v15, v48);
      v49 = (uint64_t *)(v23 + v26[13]);
      *v49 = v44;
      v49[1] = v46;
      return;
    }
    sub_21D7C4F74();
    sub_21CDB47E8((unint64_t *)&qword_253F677E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5E3D0], MEMORY[0x24BE5E3D8]);
    OUTLINED_FUNCTION_1_10();
    *v52 = 0x6867696C68676968;
    v52[1] = 0xEB00000000444974;
    v52[2] = v26;
    v51 = v26;
    OUTLINED_FUNCTION_2_32((uint64_t)v52, *MEMORY[0x24BE5E3B8]);
    swift_willThrow();
    OUTLINED_FUNCTION_0_32();
    v22(v24, v63);
    sub_21CDD5804(v23);
    v17 = v58;
  }
  else
  {
    sub_21D7C4F74();
    sub_21CDB47E8((unint64_t *)&qword_253F677E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5E3D0], MEMORY[0x24BE5E3D8]);
    OUTLINED_FUNCTION_1_10();
    *v50 = 25705;
    v50[1] = 0xE200000000000000;
    v51 = (int *)v56;
    v50[2] = v56;
    OUTLINED_FUNCTION_2_32((uint64_t)v50, *MEMORY[0x24BE5E3B8]);
    swift_willThrow();
    OUTLINED_FUNCTION_0_32();
    v22(v18, v63);
    v23 = v61;
  }
  sub_21CDBDA44(v17, &qword_253F67608);
  if (v54)
  {
    OUTLINED_FUNCTION_4_21();
    OUTLINED_FUNCTION_4_21();
    sub_21CDBDA44(v23 + v51[8], &qword_253F67430);
    OUTLINED_FUNCTION_4_21();
    sub_21CDBDA44(v23 + v51[11], &qword_253F67430);
    sub_21CDBDA44(v23 + v51[12], &qword_253F60800);
    sub_21CDBDA44(v23 + v51[14], &qword_253F655E8);
  }
}

void sub_21CE85F2C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_21CE57550(v2 + *(int *)(a1 + 32), a2, &qword_253F67430);
}

void sub_21CE85F54(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_21CE57550(v2 + *(int *)(a1 + 56), a2, &qword_253F655E8);
}

void sub_21CE85F7C(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_21CE858D0(a1, a2, a3);
}

void sub_21CE85F90(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_21CE57550(v2 + *(int *)(a1 + 44), a2, &qword_253F67430);
}

void sub_21CE85FB8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_21CE57550(v2 + *(int *)(a1 + 20), a2, &qword_253F67608);
}

void sub_21CE85FE0(uint64_t a1)
{
  uint64_t v2;

  sub_21CDB47E8(qword_255331B40, (uint64_t (*)(uint64_t))_s14descr24E0F07F1V6LockupVMa, (uint64_t)&unk_21D7CF3EC);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_21CE8601C()
{
  sub_21CDB47E8(&qword_253F5F9A8, (uint64_t (*)(uint64_t))_s14descr24E0F07F1V6LockupVMa, (uint64_t)&unk_21D7CF348);
}

uint64_t OUTLINED_FUNCTION_0_32()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 176) + 8))(*(_QWORD *)(v0 - 72), *(_QWORD *)(v0 - 136));
}

unint64_t OUTLINED_FUNCTION_1_38()
{
  return 0xD000000000000011;
}

uint64_t OUTLINED_FUNCTION_2_34()
{
  return sub_21D7C3F78();
}

uint64_t OUTLINED_FUNCTION_3_26()
{
  uint64_t (*v0)(uint64_t, _QWORD);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, *(_QWORD *)(v2 - 128));
}

uint64_t OUTLINED_FUNCTION_4_21()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_5_25()
{
  return sub_21D7C4620();
}

uint64_t OUTLINED_FUNCTION_6_23(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_12_12@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return sub_21CDECAB0(v2 - 120, v1 + a1);
}

uint64_t sub_21CE860C0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21CE860CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_8();
  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t sub_21CE860F4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21CE86100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_8();
  return __swift_storeEnumTagSinglePayload(v1, v0, v0, v2);
}

uint64_t type metadata accessor for RemoveRecentLibrarySearchesAction()
{
  uint64_t result;

  result = qword_253F644A0;
  if (!qword_253F644A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21CE86164@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v5 = sub_21D7C4098();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_69();
  v9 = v8 - v7;
  v10 = sub_21D7C3F6C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_69();
  v14 = v13 - v12;
  v15 = sub_21D7C4314();
  v20 = *(_QWORD *)(v15 - 8);
  v21 = v15;
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_69();
  v18 = v17 - v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v14, a1, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v9, a2, v5);
  sub_21D7C42CC();
  OUTLINED_FUNCTION_2_35();
  if (v23)
    return OUTLINED_FUNCTION_0_33();
  OUTLINED_FUNCTION_0_33();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(a3, v18, v21);
}

uint64_t sub_21CE862B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_21CE86164(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_0_33()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(*(_QWORD *)(v2 - 72), v1);
}

uint64_t OUTLINED_FUNCTION_2_35()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

void sub_21CE862E8()
{
  OUTLINED_FUNCTION_16_10();
  sub_21D7C5E68();
  sub_21D7C5E98();
  OUTLINED_FUNCTION_14_10();
}

void sub_21CE8631C()
{
  OUTLINED_FUNCTION_4_22();
  __break(1u);
}

void sub_21CE8634C()
{
  sub_21D7C5BC8();
  __break(1u);
}

void sub_21CE86394()
{
  OUTLINED_FUNCTION_4_22();
  __break(1u);
}

uint64_t type metadata accessor for AppDestinationPageProviderBox()
{
  return objc_opt_self();
}

uint64_t sub_21CE863E4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_21CE86454(uint64_t a1)
{
  swift_allocObject();
  sub_21CE8648C(a1);
  OUTLINED_FUNCTION_0();
}

uint64_t sub_21CE8648C(uint64_t a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 120) - 8) + 32))(v1 + *(_QWORD *)(*(_QWORD *)v1 + 136), a1);
  return v1;
}

BOOL sub_21CE864C0(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int EnumTagSinglePayload;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t AssociatedConformanceWitness;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;

  v34 = a2;
  v35 = a1;
  v3 = OUTLINED_FUNCTION_2_36();
  v4 = sub_21D7C5934();
  v32 = *(_QWORD *)(v4 - 8);
  v33 = v4;
  OUTLINED_FUNCTION_9_19();
  MEMORY[0x24BDAC7A8](v5);
  v31 = (char *)&v28 - v6;
  v7 = OUTLINED_FUNCTION_2_36();
  v8 = sub_21D7C5934();
  v29 = *(_QWORD *)(v8 - 8);
  v30 = v8;
  OUTLINED_FUNCTION_9_19();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v28 - v10;
  type metadata accessor for MusicAppDestination(0);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_62_2();
  v13 = OUTLINED_FUNCTION_2_36();
  v14 = sub_21D7C5934();
  v15 = *(_QWORD *)(v14 - 8);
  OUTLINED_FUNCTION_9_19();
  v17 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v28 - v19;
  if ((_BYTE)v34)
  {
    if (v34 != 1)
    {
      OUTLINED_FUNCTION_8_16(v17, v18, type metadata accessor for MusicAppDestination);
      OUTLINED_FUNCTION_17_8();
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 16))(v2, v13, AssociatedConformanceWitness);
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v20, 1, v13);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
      return EnumTagSinglePayload != 1;
    }
    OUTLINED_FUNCTION_8_16(v17, v18, type metadata accessor for MusicAppDestination);
    OUTLINED_FUNCTION_17_8();
    v21 = swift_getAssociatedConformanceWitness();
    v11 = v31;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v2, v3, v21);
    EnumTagSinglePayload = OUTLINED_FUNCTION_23_2((uint64_t)v11);
    v24 = v32;
    v23 = v33;
  }
  else
  {
    OUTLINED_FUNCTION_8_16(v17, v18, type metadata accessor for MusicAppDestination);
    OUTLINED_FUNCTION_17_8();
    v25 = swift_getAssociatedConformanceWitness();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v2, v7, v25);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v7);
    v24 = v29;
    v23 = v30;
  }
  (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v23);
  return EnumTagSinglePayload != 1;
}

uint64_t sub_21CE86738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int16 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;

  v83 = a3;
  v87 = a2;
  v91 = a1;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 120);
  v5 = *(_QWORD *)(*(_QWORD *)v3 + 128);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v78 = v6;
  v79 = v5;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v76 = type metadata accessor for WrappedAppPageDestination(0, AssociatedTypeWitness, AssociatedConformanceWitness, v9);
  v74 = *(_QWORD *)(v76 - 8);
  OUTLINED_FUNCTION_9_19();
  MEMORY[0x24BDAC7A8](v10);
  v71 = (uint64_t)&v67 - v11;
  sub_21D7C3FC0();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_2_13();
  v72 = v13;
  v77 = sub_21D7C4EFC();
  v75 = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77);
  OUTLINED_FUNCTION_2_13();
  v73 = v14;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_6_24(v16, v67);
  v81 = type metadata accessor for FlowAction(0);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_62_2();
  v80 = type metadata accessor for MusicAppDestinationContext(0);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_11();
  v84 = v19;
  MEMORY[0x24BDAC7A8](v20);
  v85 = (uint64_t)&v67 - v21;
  type metadata accessor for MusicAppDestination(0);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_21D7C5934();
  v26 = *(_QWORD *)(v25 - 8);
  OUTLINED_FUNCTION_9_19();
  v28 = MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v67 - v29;
  v31 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_11();
  v69 = v32;
  MEMORY[0x24BDAC7A8](v33);
  v35 = (char *)&v67 - v34;
  sub_21CE39C70(v91, (uint64_t)v24, type metadata accessor for MusicAppDestination);
  v36 = *(void (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 16);
  v70 = v24;
  v86 = AssociatedConformanceWitness;
  v36(v24, AssociatedTypeWitness, AssociatedConformanceWitness);
  if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v30, v25);
    sub_21CE87440();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    OUTLINED_FUNCTION_11_17((uint64_t)v35, (uint64_t)v30, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 32));
    sub_21CE39C70(v87, v4, type metadata accessor for FlowAction);
    v38 = v81;
    v39 = v84;
    sub_21CE39C44(v4 + *(int *)(v81 + 36), v84, (uint64_t *)&unk_253F67C50);
    v40 = v4 + *(int *)(v38 + 32);
    v41 = v82;
    sub_21CE39C44(v40, v82, (uint64_t *)&unk_253F5DD10);
    sub_21CDC15E0(v4, type metadata accessor for FlowAction);
    sub_21CE8747C(v41, v39 + *(int *)(v80 + 20));
    v42 = v85;
    sub_21CE39D08(v39, v85, type metadata accessor for MusicAppDestinationContext);
    v43 = (uint64_t)v35;
    if (((*(uint64_t (**)(uint64_t))(v86 + 24))(AssociatedTypeWitness) & 1) != 0)
    {
      v44 = v31;
      if (qword_25532E158 != -1)
        swift_once();
      v45 = v77;
      v46 = __swift_project_value_buffer(v77, (uint64_t)qword_255331B70);
      v47 = v75;
      v48 = v73;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 16))(v73, v46, v45);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F67DC0);
      sub_21D7C3FE4();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_21D7C8560;
      sub_21D7C3FB4();
      sub_21D7C3FA8();
      v90 = AssociatedTypeWitness;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v88);
      OUTLINED_FUNCTION_11_17((uint64_t)boxed_opaque_existential_1, v43, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 16));
      sub_21D7C3F90();
      sub_21CDBF490((uint64_t)&v88);
      sub_21D7C3FA8();
      sub_21D7C3FCC();
      sub_21D7C4D28();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v48, v45);
      v42 = v85;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v79 + 128))(v43, v83, v85, v78);
    }
    else
    {
      v50 = FlowAction.featureName.getter();
      v68 = v31;
      v51 = v50;
      v53 = v52;
      v54 = sub_21D737AA8();
      v82 = v43;
      v56 = v55;
      v57 = v69;
      OUTLINED_FUNCTION_11_17(v69, v82, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 16));
      *(_QWORD *)&v88 = v51;
      *((_QWORD *)&v88 + 1) = v53;
      v81 = v53;
      v89 = v54;
      v90 = v56;
      v58 = v84;
      sub_21CE39C70(v42, v84, type metadata accessor for MusicAppDestinationContext);
      v59 = (uint64_t)v70;
      sub_21CE39C70(v91, (uint64_t)v70, type metadata accessor for MusicAppDestination);
      sub_21D7C4C20();
      sub_21CDDB474(v54, v56);
      v60 = sub_21D7047DC();
      v62 = v71;
      sub_21CE86DCC(v57, &v88, v58, v59, v60, v63, v61 & 0x101, AssociatedTypeWitness, v71, v86);
      v64 = v76;
      MEMORY[0x2207938C0](&unk_21D7CFB00, v76);
      OUTLINED_FUNCTION_17_8();
      MusicStackAuthority.push<A>(_:)();
      swift_bridgeObjectRelease();
      v65 = v56;
      v43 = v82;
      sub_21CDDB4CC(v54, v65);
      v66 = v62;
      v44 = v68;
      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v66, v64);
    }
    sub_21CDC15E0(v42, type metadata accessor for MusicAppDestinationContext);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8))(v43, AssociatedTypeWitness);
  }
}

void sub_21CE86DCC(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, __int16 a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;

  v23 = *a2;
  v17 = *((_QWORD *)a2 + 2);
  v18 = *((_QWORD *)a2 + 3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 32))(a9, a1, a8);
  v20 = (int *)type metadata accessor for WrappedAppPageDestination(0, a8, a10, v19);
  v21 = a9 + v20[9];
  *(_OWORD *)v21 = v23;
  *(_QWORD *)(v21 + 16) = v17;
  *(_QWORD *)(v21 + 24) = v18;
  sub_21CE39D08(a3, a9 + v20[10], type metadata accessor for MusicAppDestinationContext);
  sub_21CE39D08(a4, a9 + v20[11], type metadata accessor for MusicAppDestination);
  v22 = a9 + v20[12];
  *(_QWORD *)v22 = a5;
  *(_QWORD *)(v22 + 8) = a6;
  *(_BYTE *)(v22 + 16) = a7 & 1;
  *(_BYTE *)(v22 + 17) = HIBYTE(a7) & 1;
}

uint64_t sub_21CE86EC8()
{
  uint64_t v0;

  return sub_21D3B58C4(v0 + *(_QWORD *)(*(_QWORD *)v0 + 136), *(_QWORD *)(*(_QWORD *)v0 + 120), *(_QWORD *)(*(_QWORD *)v0 + 128));
}

uint64_t sub_21CE86EFC()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 120) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 136));
}

uint64_t sub_21CE86F18()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 120) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 136));
  return v0;
}

uint64_t sub_21CE86F48()
{
  sub_21CE86F18();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ConcreteAppDestinationPageProvider(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ConcreteAppDestinationPageProvider);
}

uint64_t sub_21CE86F78(uint64_t a1, int *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD v17[2];
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v5 = sub_21D7BF754();
  v16 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_6_24(v6, v14);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_62_2();
  sub_21D7C504C();
  v8 = (_QWORD *)(v2 + a2[9]);
  v9 = v8[2];
  v10 = v8[3];
  if (v8[1])
  {
    OUTLINED_FUNCTION_1_39();
    sub_21D7C4C20();
    sub_21D7C5064();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_1_39();
  }
  OUTLINED_FUNCTION_1_39();
  if (v10 >> 60 != 15)
  {
    sub_21CDDB488(v9, v10);
    sub_21D7BF7E4();
    sub_21CDDB4CC(v9, v10);
  }
  v11 = v2 + a2[10];
  sub_21CE39C44(v11, (uint64_t)&v19, (uint64_t *)&unk_253F67C50);
  if (*((_QWORD *)&v20 + 1))
  {
    v17[0] = v19;
    v17[1] = v20;
    v18 = v21;
    OUTLINED_FUNCTION_1_39();
    sub_21D7C5A24();
    sub_21CDD5804((uint64_t)v17);
  }
  else
  {
    OUTLINED_FUNCTION_1_39();
  }
  v12 = type metadata accessor for MusicAppDestinationContext(0);
  sub_21CE39C44(v11 + *(int *)(v12 + 20), v3, (uint64_t *)&unk_253F5DD10);
  if (OUTLINED_FUNCTION_23_2(v3) == 1)
  {
    OUTLINED_FUNCTION_1_39();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v15, v3, v5);
    OUTLINED_FUNCTION_1_39();
    sub_21CE92640();
    sub_21D7C504C();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v5);
  }
  MusicAppDestination.hash(into:)();
  if (*(_QWORD *)(v2 + a2[12] + 8))
  {
    OUTLINED_FUNCTION_1_39();
    sub_21D7C4C20();
    sub_21D7C5064();
  }
  else
  {
    OUTLINED_FUNCTION_1_39();
  }
  OUTLINED_FUNCTION_1_39();
  sub_21D7C5E74();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21CE87208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  _OWORD *v12;
  __int128 v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  int v25;
  int v26;
  int v27;
  _OWORD v29[2];
  _OWORD v30[2];

  if ((sub_21D7C5094() & 1) == 0)
    return 0;
  v9 = type metadata accessor for WrappedAppPageDestination(0, a3, a4, v8);
  v10 = *(int *)(v9 + 36);
  v11 = *(_OWORD *)(a1 + v10 + 16);
  v30[0] = *(_OWORD *)(a1 + v10);
  v30[1] = v11;
  v12 = (_OWORD *)(a2 + v10);
  v13 = v12[1];
  v29[0] = *v12;
  v29[1] = v13;
  if (!static MusicPlayActivityFields.== infix(_:_:)(v30, v29))
    return 0;
  static MusicAppDestinationContext.== infix(_:_:)();
  if ((v14 & 1) == 0)
    return 0;
  static MusicAppDestination.== infix(_:_:)();
  if ((v15 & 1) == 0)
    return 0;
  v16 = *(int *)(v9 + 48);
  v17 = *(_QWORD *)(a1 + v16);
  v18 = *(_QWORD *)(a1 + v16 + 8);
  v19 = *(unsigned __int8 *)(a1 + v16 + 16);
  v20 = *(unsigned __int8 *)(a1 + v16 + 17);
  v21 = a2 + v16;
  v22 = *(_QWORD *)v21;
  v23 = *(_QWORD *)(v21 + 8);
  v24 = *(unsigned __int8 *)(v21 + 16);
  v25 = *(unsigned __int8 *)(v21 + 17);
  if (v20)
    v26 = 256;
  else
    v26 = 0;
  if (v25)
    v27 = 256;
  else
    v27 = 0;
  return sub_21D70566C(v17, v18, v26 | v19, v22, v23, v27 | v24);
}

void sub_21CE87310(int *a1)
{
  _BYTE v2[72];

  OUTLINED_FUNCTION_16_10();
  sub_21CE86F78((uint64_t)v2, a1);
  sub_21D7C5E98();
  OUTLINED_FUNCTION_14_10();
}

uint64_t sub_21CE87348(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 36));
  sub_21D7C4C20();
  return v2;
}

uint64_t sub_21CE87384(uint64_t a1, int *a2)
{
  _BYTE v4[72];

  sub_21D7C5E5C();
  sub_21CE86F78((uint64_t)v4, a2);
  return sub_21D7C5E98();
}

uint64_t sub_21CE873C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21CE87208(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_21CE873D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + *(int *)(a1 + 36);
  v3 = *(_QWORD *)(v2 + 16);
  sub_21CDDB474(v3, *(_QWORD *)(v2 + 24));
  return v3;
}

void sub_21CE8740C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_21CE39C70(v2 + *(int *)(a1 + 44), a2, type metadata accessor for MusicAppDestination);
}

uint64_t type metadata accessor for WrappedAppPageDestination(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WrappedAppPageDestination);
}

unint64_t sub_21CE87440()
{
  unint64_t result;

  result = qword_255331B88;
  if (!qword_255331B88)
  {
    result = MEMORY[0x2207938C0](&unk_21D7CFAC0, &type metadata for AppDestinationPageProviderBox.Error);
    atomic_store(result, (unint64_t *)&qword_255331B88);
  }
  return result;
}

uint64_t sub_21CE8747C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21CE874C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_21D7C4EE4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_21D7C4EFC();
  __swift_allocate_value_buffer(v4, qword_255331B70);
  __swift_project_value_buffer(v4, (uint64_t)qword_255331B70);
  if (qword_253F677D0 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v0, (uint64_t)qword_253F81C60);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  return sub_21D7C4EF0();
}

uint64_t storeEnumTagSinglePayload for AppDestinationPageProviderBox.Error(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_21CE87604 + 4 * byte_21D7CF4C0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_21CE87624 + 4 * byte_21D7CF4C5[v4]))();
}

_BYTE *sub_21CE87604(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_21CE87624(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21CE8762C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21CE87634(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21CE8763C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21CE87644(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AppDestinationPageProviderBox.Error()
{
  return &type metadata for AppDestinationPageProviderBox.Error;
}

uint64_t sub_21CE87660()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for MusicAppDestinationContext(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for MusicAppDestination(319);
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_21CE87714(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  int v18;
  unsigned __int8 v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  int v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  _OWORD *v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  unint64_t v60;
  _OWORD *v61;
  uint64_t v62;
  unint64_t v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  void *v67;
  unint64_t v68;
  const void *v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  char v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  void (*v86)(unint64_t, unint64_t, uint64_t);
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unsigned int v92;
  uint64_t v93;
  unsigned int v94;
  uint64_t v95;
  __int128 v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  _QWORD *v109;
  _QWORD *v110;
  char v111;
  _QWORD *v112;
  _QWORD *v113;
  char v114;
  char v115;
  _QWORD *v116;
  _QWORD *v117;
  _QWORD *v118;
  _QWORD *v119;
  _QWORD *v120;
  _QWORD *v121;
  unint64_t v122;
  unint64_t v123;
  void (*v124)(unint64_t, unint64_t, uint64_t);
  _BYTE *v125;
  char v126;
  unint64_t v127;
  unint64_t v128;
  uint64_t *result;
  _QWORD *v130;
  _QWORD *v131;
  _QWORD *v132;
  _QWORD *v133;
  _QWORD *v134;
  _QWORD *v135;
  unint64_t v136;
  unint64_t v137;
  void (*v138)(unint64_t, unint64_t, uint64_t);
  _BYTE *v139;
  _QWORD *v140;
  _QWORD *v141;
  _QWORD *v142;
  _QWORD *v143;
  _QWORD *v144;
  _QWORD *v145;
  _QWORD *v146;
  _QWORD *v147;
  _QWORD *v148;
  _QWORD *v149;
  unint64_t v150;
  unint64_t v151;
  void (*v152)(unint64_t, unint64_t, uint64_t);
  _BYTE *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  int v181;
  int v182;
  size_t __n;
  int v184;
  int v185;
  int v186;
  uint64_t v187;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  unint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  int v211;
  unint64_t v212;
  int v213;
  size_t v214;
  int v215;
  uint64_t v216;
  int v217;
  uint64_t v218;
  int v219;
  uint64_t v220;
  int v221;
  unint64_t v222;
  int v223;
  unint64_t v224;
  int v225;
  uint64_t v226;
  int v227;
  uint64_t v228;

  v179 = *(_QWORD *)(a3 + 16);
  v187 = *(_QWORD *)(v179 - 8);
  v208 = *(_QWORD *)(v187 + 64);
  v180 = sub_21D7BF754();
  v3 = *(_QWORD *)(v180 - 8);
  v4 = *(_DWORD *)(v3 + 84);
  v186 = *(_DWORD *)(v3 + 80);
  v178 = v3;
  v5 = *(_QWORD *)(v3 + 64);
  v202 = v5;
  if (v4)
    v6 = v5;
  else
    v6 = v5 + 1;
  __n = v6;
  v171 = sub_21D7C37A4();
  v204 = *(_QWORD *)(v171 - 8);
  v227 = *(_DWORD *)(v204 + 80);
  v172 = sub_21D7C06C0();
  v205 = *(_QWORD *)(v172 - 8);
  v225 = *(_DWORD *)(v205 + 80);
  v173 = sub_21D7C3660();
  v206 = *(_QWORD *)(v173 - 8);
  v223 = *(_DWORD *)(v206 + 80);
  v177 = sub_21D7C3B58();
  v209 = *(_QWORD *)(v177 - 8);
  v221 = *(_DWORD *)(v209 + 80);
  v174 = sub_21D7C3564();
  v207 = *(_QWORD *)(v174 - 8);
  v219 = *(_DWORD *)(v207 + 80);
  v169 = sub_21D7C30FC();
  v203 = *(_QWORD *)(v169 - 8);
  v217 = *(_DWORD *)(v203 + 80);
  v168 = sub_21D7C03CC();
  v201 = *(_QWORD *)(v168 - 8);
  v215 = *(_DWORD *)(v201 + 80);
  v175 = sub_21D7C3840();
  v7 = *(_QWORD *)(v175 - 8);
  v213 = *(_DWORD *)(v7 + 80);
  v166 = sub_21D7C38B8();
  v200 = *(_QWORD *)(v166 - 8);
  v211 = *(_DWORD *)(v200 + 80);
  v165 = sub_21D7C045C();
  v199 = *(_QWORD *)(v165 - 8);
  v8 = *(_DWORD *)(v199 + 80);
  v164 = sub_21D7C36C0();
  v198 = *(_QWORD *)(v164 - 8);
  v9 = *(_DWORD *)(v198 + 80);
  v163 = sub_21D7C0180();
  v197 = *(_QWORD *)(v163 - 8);
  v185 = *(_DWORD *)(v197 + 80);
  v162 = sub_21D7C3BAC();
  v196 = *(_QWORD *)(v162 - 8);
  v10 = *(_DWORD *)(v196 + 80);
  v161 = sub_21D7C33F0();
  v195 = *(_QWORD *)(v161 - 8);
  v11 = *(_DWORD *)(v195 + 80);
  v160 = sub_21D7C396C();
  v194 = *(_QWORD *)(v160 - 8);
  v12 = *(_DWORD *)(v194 + 80);
  v159 = sub_21D7C3738();
  v193 = *(_QWORD *)(v159 - 8);
  v184 = *(_DWORD *)(v193 + 80);
  v158 = sub_21D7C07A4();
  v192 = *(_QWORD *)(v158 - 8);
  v13 = *(_DWORD *)(v192 + 80);
  v157 = sub_21D7C0720();
  v191 = *(_QWORD *)(v157 - 8);
  v14 = *(_DWORD *)(v191 + 80);
  v156 = sub_21D7C0690();
  v190 = *(_QWORD *)(v156 - 8);
  v15 = *(_DWORD *)(v190 + 80);
  v155 = sub_21D7C0528();
  v189 = *(_QWORD *)(v155 - 8);
  v16 = *(_DWORD *)(v189 + 80);
  v154 = sub_21D7C0594();
  v17 = *(_QWORD *)(v154 - 8);
  v18 = *(_DWORD *)(v17 + 80);
  v182 = v8;
  v181 = v10;
  v19 = v225 | v227 | v223 | v221 | v219 | v217 | v215 | v213 | v211 | v8 | v9 | v185 | v10 | v11 | v12 | v184 | v13 | v14 | v15 | v16 | v18;
  v20 = *(_QWORD *)(v204 + 64);
  v21 = *(_QWORD *)(v205 + 64);
  v22 = *(_QWORD *)(v206 + 64);
  v23 = *(_QWORD *)(v209 + 64);
  v24 = *(_QWORD *)(v207 + 64);
  if (v22 <= v24)
    v25 = *(_QWORD *)(v207 + 64);
  else
    v25 = *(_QWORD *)(v206 + 64);
  if (v25 <= 0x10)
    v26 = 16;
  else
    v26 = v25;
  v176 = v26;
  v27 = (v26 & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v23 <= 0x10)
    v28 = 16;
  else
    v28 = *(_QWORD *)(v209 + 64);
  if (v24 <= v23)
    v29 = *(_QWORD *)(v209 + 64);
  else
    v29 = *(_QWORD *)(v207 + 64);
  v30 = *(_QWORD *)(v203 + 64);
  if (v30 > v29)
    v29 = *(_QWORD *)(v203 + 64);
  if (v22 <= v29)
    v31 = v29;
  else
    v31 = *(_QWORD *)(v206 + 64);
  v32 = *(_QWORD *)(v201 + 64);
  if (v32 <= v23)
    v32 = *(_QWORD *)(v209 + 64);
  if (v24 > v32)
    v32 = *(_QWORD *)(v207 + 64);
  v167 = v7;
  if (*(_DWORD *)(v7 + 84))
    v33 = *(_QWORD *)(v7 + 64);
  else
    v33 = *(_QWORD *)(v7 + 64) + 1;
  v34 = ((v186
        + 16
        + ((((((v33 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v186)
      + v202;
  v35 = v34 + 2;
  if (v34 + 2 <= v32)
    v36 = v32;
  else
    v36 = v34 + 2;
  if (v20 > v22)
    v22 = *(_QWORD *)(v204 + 64);
  if (v21 > v22)
    v22 = *(_QWORD *)(v205 + 64);
  if (*(_QWORD *)(v200 + 64) > v22)
    v22 = *(_QWORD *)(v200 + 64);
  if (*(_QWORD *)(v199 + 64) > v22)
    v22 = *(_QWORD *)(v199 + 64);
  v37 = ((((v34 + 9) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v37 > v22)
    v22 = v37;
  if (*(_QWORD *)(v198 + 64) > v22)
    v22 = *(_QWORD *)(v198 + 64);
  if (*(_QWORD *)(v197 + 64) > v22)
    v22 = *(_QWORD *)(v197 + 64);
  v38 = v28 + v186 + 1;
  if (v30 > v22)
    v22 = *(_QWORD *)(v203 + 64);
  if (v23 > v22)
    v22 = *(_QWORD *)(v209 + 64);
  if (*(_QWORD *)(v196 + 64) > v22)
    v22 = *(_QWORD *)(v196 + 64);
  if (*(_QWORD *)(v195 + 64) > v22)
    v22 = *(_QWORD *)(v195 + 64);
  if (v35 > v22)
    v22 = v35;
  if (v24 <= v22)
    v24 = v22;
  if (*(_QWORD *)(v194 + 64) > v24)
    v24 = *(_QWORD *)(v194 + 64);
  if (*(_QWORD *)(v193 + 64) > v24)
    v24 = *(_QWORD *)(v193 + 64);
  if (*(_QWORD *)(v192 + 64) > v24)
    v24 = *(_QWORD *)(v192 + 64);
  if (*(_QWORD *)(v191 + 64) > v24)
    v24 = *(_QWORD *)(v191 + 64);
  if (*(_QWORD *)(v190 + 64) > v24)
    v24 = *(_QWORD *)(v190 + 64);
  if (*(_QWORD *)(v189 + 64) > v24)
    v24 = *(_QWORD *)(v189 + 64);
  if (*(_QWORD *)(v17 + 64) <= v24)
    v39 = v24;
  else
    v39 = *(_QWORD *)(v17 + 64);
  v170 = v31;
  v40 = v31 + 1;
  if (v23 <= v27)
    v23 = v27;
  if ((v28 & 0xFFFFFFFFFFFFFFF8) + 24 <= (v38 & ~(unint64_t)v186) + v202)
    v41 = (v38 & ~(unint64_t)v186) + v202;
  else
    v41 = (v28 & 0xFFFFFFFFFFFFFFF8) + 24;
  v42 = ((v186 + 16) & ~(unint64_t)v186) + v202;
  if (v40 <= v36 + 1)
    v40 = v36 + 1;
  if (v39 + 1 > v42)
    v42 = v39 + 1;
  if (v20 <= v21)
    v20 = *(_QWORD *)(v205 + 64);
  if (v23 <= v41)
    v43 = v41;
  else
    v43 = v23;
  if (v40 <= v42)
    v44 = v42;
  else
    v44 = v40;
  if (v202 > v25)
    v25 = v202;
  if (v43 <= v44)
    v43 = v44;
  if (v25 > v20)
    v20 = v25;
  if (v20 <= v43)
    v20 = v43;
  if (v20 <= 0x11)
    v45 = 17;
  else
    v45 = v20;
  v46 = *(_DWORD *)(v187 + 80);
  v47 = (v19 | v46) & 0xF8 | v186;
  if (v47 > 7
    || ((v227 | v186 | v225 | v223 | v221 | v219 | v217 | v215 | v213 | v211 | v182 | v9 | v185 | v181 | v11 | v12 | v184 | v13 | v14 | v15 | v16 | v18 | v46) & 0x100000) != 0
    || (v48 = v186 | 7,
        v49 = v186 + 40,
        v50 = (v49 & ~(unint64_t)v186) + __n,
        v51 = v186 | v19 & 0xF8 | 7u,
        ((v45 + ((v50 + ((((v208 + 7) & 0xFFFFFFFFFFFFFFF8) + v186 + 32) & ~v48) + v51) & ~v51) + 8) & 0xFFFFFFFFFFFFFFF8)
      + 18 > 0x18))
  {
    v57 = *a2;
    *a1 = *a2;
    v58 = (uint64_t *)(v57 + (((v47 | 7) + 16) & ~(unint64_t)(v47 | 7)));
    swift_retain();
  }
  else
  {
    v216 = v33 + 7;
    v218 = v28 + v186 + 1;
    v212 = v35;
    v214 = v33;
    v224 = v36;
    v226 = v28;
    v220 = v186 + 16;
    v222 = v39;
    v228 = v45;
    v52 = ~v48;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v187 + 16))(a1, a2, v179);
    v53 = ((unint64_t)a1 + v208 + 7) & 0xFFFFFFFFFFFFFFF8;
    v54 = (_QWORD *)(((unint64_t)a2 + v208 + 7) & 0xFFFFFFFFFFFFFFF8);
    *(_QWORD *)v53 = *v54;
    *(_QWORD *)(v53 + 8) = v54[1];
    v55 = v54 + 2;
    v56 = v54[3];
    sub_21D7C4C20();
    if (v56 >> 60 == 15)
    {
      *(_OWORD *)(v53 + 16) = *v55;
    }
    else
    {
      v59 = *(_QWORD *)v55;
      sub_21CDDB488(v59, v56);
      *(_QWORD *)(v53 + 16) = v59;
      *(_QWORD *)(v53 + 24) = v56;
    }
    v60 = ~(unint64_t)v186;
    v61 = (_OWORD *)((v53 + v48 + 32) & v52);
    v62 = ((unint64_t)v54 + v48 + 32) & v52;
    v63 = *(_QWORD *)(v62 + 24);
    if (v63 < 0xFFFFFFFF)
    {
      v64 = *(_OWORD *)v62;
      v65 = *(_OWORD *)(v62 + 16);
      *(_QWORD *)(((v53 + v48 + 32) & v52) + 0x20) = *(_QWORD *)(v62 + 32);
      *v61 = v64;
      *(_OWORD *)(((v53 + v48 + 32) & v52) + 0x10) = v65;
    }
    else
    {
      *(_QWORD *)(((v53 + v48 + 32) & v52) + 0x18) = v63;
      *(_QWORD *)(((v53 + v48 + 32) & v52) + 0x20) = *(_QWORD *)(v62 + 32);
      (**(void (***)(uint64_t, uint64_t))(v63 - 8))((v53 + v48 + 32) & v52, v62);
    }
    v66 = ~v51;
    v67 = (void *)(((unint64_t)v61 + v49) & v60);
    v68 = ~(unint64_t)v186;
    v69 = (const void *)((v49 + v62) & v60);
    if (__swift_getEnumTagSinglePayload((uint64_t)v69, 1, v180))
    {
      memcpy(v67, v69, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v178 + 16))(v67, v69, v180);
      __swift_storeEnumTagSinglePayload((uint64_t)v67, 0, 1, v180);
    }
    v70 = v62 + v50;
    v71 = ((unint64_t)v61 + v50 + v51) & v66;
    v72 = (v70 + v51) & v66;
    v74 = v228 + 1;
    switch(*(_BYTE *)(v72 + v228))
    {
      case 0:
        *(_QWORD *)v71 = *(_QWORD *)v72;
        *(_QWORD *)((((unint64_t)v61 + v50 + v51) & v66) + 8) = *(_QWORD *)(((v70 + v51) & v66) + 8);
        *(_BYTE *)(v71 + v228) = 0;
        sub_21D7C4C20();
        break;
      case 1:
        v87 = ((unint64_t)v61 + v50 + v51) & v66;
        v88 = (v70 + v51) & v66;
        v77 = v228;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v204 + 16))(v87, v88, v171);
        v78 = 1;
        goto LABEL_156;
      case 2:
        v75 = ((unint64_t)v61 + v50 + v51) & v66;
        v76 = (v70 + v51) & v66;
        v77 = v228;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v205 + 16))(v75, v76, v172);
        v78 = 2;
        goto LABEL_156;
      case 3:
        v89 = ((unint64_t)v61 + v50 + v51) & v66;
        v90 = (v70 + v51) & v66;
        v77 = v228;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v206 + 16))(v89, v90, v173);
        v78 = 3;
        goto LABEL_156;
      case 4:
        v79 = ((unint64_t)v61 + v50 + v51) & v66;
        v80 = (v70 + v51) & v66;
        v77 = v228;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v209 + 16))(v79, v80, v177);
        v78 = 4;
        goto LABEL_156;
      case 5:
        v58 = a1;
        switch(*(_BYTE *)(v72 + v176))
        {
          case 0:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v206 + 16))(v71, v72, v173);
            v106 = v228;
            v107 = v176;
            *(_BYTE *)(v71 + v176) = 0;
            goto LABEL_180;
          case 1:
            *(_QWORD *)v71 = *(_QWORD *)v72;
            *(_QWORD *)(v71 + 8) = *(_QWORD *)(v72 + 8);
            v108 = 1;
            goto LABEL_179;
          case 2:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v207 + 16))(v71, v72, v174);
            v106 = v228;
            v107 = v176;
            *(_BYTE *)(v71 + v176) = 2;
            goto LABEL_180;
          case 3:
            *(_QWORD *)v71 = *(_QWORD *)v72;
            *(_QWORD *)(v71 + 8) = *(_QWORD *)(v72 + 8);
            v108 = 3;
LABEL_179:
            v107 = v176;
            *(_BYTE *)(v71 + v176) = v108;
            sub_21D7C4C20();
            v106 = v228;
LABEL_180:
            v109 = (_QWORD *)((v107 + 8 + v71) & 0xFFFFFFFFFFFFFFF8);
            v110 = (_QWORD *)((v107 + 8 + v72) & 0xFFFFFFFFFFFFFFF8);
            *v109 = *v110;
            v109[1] = v110[1];
            *(_BYTE *)(v71 + v106) = 5;
            break;
          default:
            if (v176 <= 3)
              v91 = v176;
            else
              v91 = 4;
            __asm { BR              X12 }
            return result;
        }
        goto LABEL_185;
      case 6:
        v92 = *(unsigned __int8 *)(v72 + v226);
        if (v92 >= 2)
        {
          if (v226 <= 3)
            v93 = v226;
          else
            v93 = 4;
          __asm { BR              X12 }
        }
        v58 = a1;
        if (v92 == 1)
        {
          *(_QWORD *)v71 = *(_QWORD *)v72;
          *(_QWORD *)(v71 + 8) = *(_QWORD *)(v72 + 8);
          sub_21D7C4C20();
          v111 = 1;
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v209 + 16))(v71, v72, v177);
          v111 = 0;
        }
        *(_BYTE *)(v71 + v226) = v111;
        v112 = (_QWORD *)((v226 + 8 + v71) & 0xFFFFFFFFFFFFFFF8);
        v113 = (_QWORD *)((v226 + 8 + v72) & 0xFFFFFFFFFFFFFFF8);
        *v112 = *v113;
        v112[1] = v113[1];
        *(_BYTE *)(v71 + v228) = 6;
LABEL_185:
        sub_21D7C4C20();
        goto LABEL_218;
      case 7:
        v94 = *(unsigned __int8 *)(v72 + v226);
        if (v94 >= 2)
        {
          if (v226 <= 3)
            v95 = v226;
          else
            v95 = 4;
          __asm { BR              X12 }
        }
        v58 = a1;
        if (v94 == 1)
        {
          *(_QWORD *)v71 = *(_QWORD *)v72;
          *(_QWORD *)(v71 + 8) = *(_QWORD *)(v72 + 8);
          sub_21D7C4C20();
          v114 = 1;
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v209 + 16))(v71, v72, v177);
          v114 = 0;
        }
        *(_BYTE *)(v71 + v226) = v114;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v178 + 16))((v218 + v71) & v68, (v218 + v72) & v68, v180);
        v115 = 7;
        v104 = v228;
        goto LABEL_217;
      case 8:
        v96 = *(_OWORD *)v72;
        *(_BYTE *)((((unint64_t)v61 + v50 + v51) & v66) + 0x10) = *(_BYTE *)(((v70 + v51) & v66) + 0x10);
        *(_OWORD *)v71 = v96;
        *(_BYTE *)(v71 + v228) = 8;
        break;
      case 9:
        v101 = 0;
        v102 = v177;
        v103 = v209;
        switch(*(_BYTE *)(v72 + v170))
        {
          case 0:
            break;
          case 1:
            v101 = 1;
            v103 = v207;
            v102 = v174;
            break;
          case 2:
            v101 = 2;
            v103 = v203;
            v102 = v169;
            break;
          case 3:
            v101 = 3;
            v103 = v206;
            v102 = v173;
            break;
          default:
            if (v170 <= 3)
              v81 = v170;
            else
              v81 = 4;
            __asm { BR              X12 }
            return result;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v103 + 16))(v71, v72, v102);
        *(_BYTE *)(v71 + v170) = v101;
        *(_BYTE *)(v71 + v228) = 9;
        break;
      case 0xA:
        v97 = ((unint64_t)v61 + v50 + v51) & v66;
        v98 = (v70 + v51) & v66;
        v77 = v228;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v207 + 16))(v97, v98, v174);
        v78 = 10;
        goto LABEL_156;
      case 0xB:
        switch(*(_BYTE *)(v72 + v224))
        {
          case 0:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v209 + 16))(v71, v72, v177);
            v104 = v228;
            v105 = 0;
            break;
          case 1:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v201 + 16))(v71, v72, v168);
            v104 = v228;
            v105 = 1;
            break;
          case 2:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v207 + 16))(v71, v72, v174);
            v104 = v228;
            v105 = 2;
            break;
          case 3:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v207 + 16))(v71, v72, v174);
            v104 = v228;
            v105 = 3;
            break;
          case 4:
            if (__swift_getEnumTagSinglePayload(v72, 1, v175))
            {
              memcpy((void *)v71, (const void *)v72, v214);
            }
            else
            {
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v167 + 16))(v71, v72, v175);
              __swift_storeEnumTagSinglePayload(v71, 0, 1, v175);
            }
            v116 = (_QWORD *)((v216 + v71) & 0xFFFFFFFFFFFFFFF8);
            v117 = (_QWORD *)((v216 + v72) & 0xFFFFFFFFFFFFFFF8);
            *v116 = *v117;
            v116[1] = v117[1];
            v118 = (_QWORD *)(((unint64_t)v116 + 23) & 0xFFFFFFFFFFFFFFF8);
            v119 = (_QWORD *)(((unint64_t)v117 + 23) & 0xFFFFFFFFFFFFFFF8);
            *v118 = *v119;
            v118[1] = v119[1];
            v120 = (_QWORD *)(((unint64_t)v118 + 23) & 0xFFFFFFFFFFFFFFF8);
            v121 = (_QWORD *)(((unint64_t)v119 + 23) & 0xFFFFFFFFFFFFFFF8);
            *v120 = *v121;
            v120[1] = v121[1];
            v122 = ((unint64_t)v120 + v220) & v68;
            v123 = ((unint64_t)v121 + v220) & v68;
            v124 = *(void (**)(unint64_t, unint64_t, uint64_t))(v178 + 16);
            sub_21D7C4C20();
            sub_21D7C4C20();
            sub_21D7C4C20();
            v124(v122, v123, v180);
            v125 = (_BYTE *)(v122 + v202);
            *v125 = *(_BYTE *)(v123 + v202);
            v125[1] = *(_BYTE *)(v123 + v202 + 1);
            v105 = 4;
            v104 = v228;
            break;
          default:
            if (v224 <= 3)
              v82 = v224;
            else
              v82 = 4;
            __asm { BR              X12 }
            return result;
        }
        v58 = a1;
        *(_BYTE *)(v71 + v224) = v105;
        v115 = 11;
        goto LABEL_217;
      case 0xC:
        switch(*(_BYTE *)(v72 + v222))
        {
          case 0:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v206 + 16))(v71, v72, v173);
            v104 = v228;
            *(_BYTE *)(v71 + v222) = 0;
            goto LABEL_216;
          case 1:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v204 + 16))(v71, v72, v171);
            v104 = v228;
            v126 = 1;
            goto LABEL_215;
          case 2:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v205 + 16))(v71, v72, v172);
            v104 = v228;
            v126 = 2;
            goto LABEL_215;
          case 3:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v200 + 16))(v71, v72, v166);
            v104 = v228;
            v126 = 3;
            goto LABEL_215;
          case 4:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v199 + 16))(v71, v72, v165);
            v104 = v228;
            v126 = 4;
            goto LABEL_215;
          case 5:
            if (__swift_getEnumTagSinglePayload(v72, 1, v175))
            {
              memcpy((void *)v71, (const void *)v72, v214);
            }
            else
            {
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v167 + 16))(v71, v72, v175);
              __swift_storeEnumTagSinglePayload(v71, 0, 1, v175);
            }
            v130 = (_QWORD *)((v216 + v71) & 0xFFFFFFFFFFFFFFF8);
            v131 = (_QWORD *)((v216 + v72) & 0xFFFFFFFFFFFFFFF8);
            *v130 = *v131;
            v130[1] = v131[1];
            v132 = (_QWORD *)(((unint64_t)v130 + 23) & 0xFFFFFFFFFFFFFFF8);
            v133 = (_QWORD *)(((unint64_t)v131 + 23) & 0xFFFFFFFFFFFFFFF8);
            *v132 = *v133;
            v132[1] = v133[1];
            v134 = (_QWORD *)(((unint64_t)v132 + 23) & 0xFFFFFFFFFFFFFFF8);
            v135 = (_QWORD *)(((unint64_t)v133 + 23) & 0xFFFFFFFFFFFFFFF8);
            *v134 = *v135;
            v134[1] = v135[1];
            v136 = ((unint64_t)v134 + v220) & v68;
            v137 = ((unint64_t)v135 + v220) & v68;
            v138 = *(void (**)(unint64_t, unint64_t, uint64_t))(v178 + 16);
            sub_21D7C4C20();
            sub_21D7C4C20();
            sub_21D7C4C20();
            v138(v136, v137, v180);
            v139 = (_BYTE *)(v136 + v202);
            *v139 = *(_BYTE *)(v137 + v202);
            v139[1] = *(_BYTE *)(v137 + v202 + 1);
            v140 = (_QWORD *)(((v71 | 7) + v212) & 0xFFFFFFFFFFFFFFF8);
            v141 = (_QWORD *)(((v72 | 7) + v212) & 0xFFFFFFFFFFFFFFF8);
            *v140 = *v141;
            v140[1] = v141[1];
            v142 = (_QWORD *)(((unint64_t)v140 + 23) & 0xFFFFFFFFFFFFFFF8);
            v143 = (_QWORD *)(((unint64_t)v141 + 23) & 0xFFFFFFFFFFFFFFF8);
            *v142 = *v143;
            v142[1] = v143[1];
            *(_BYTE *)(v71 + v222) = 5;
            sub_21D7C4C20();
            sub_21D7C4C20();
            goto LABEL_224;
          case 6:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v198 + 16))(v71, v72, v164);
            v104 = v228;
            v126 = 6;
            goto LABEL_215;
          case 7:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v197 + 16))(v71, v72, v163);
            v104 = v228;
            v126 = 7;
            goto LABEL_215;
          case 8:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v203 + 16))(v71, v72, v169);
            v104 = v228;
            v126 = 8;
            goto LABEL_215;
          case 9:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v209 + 16))(v71, v72, v177);
            v104 = v228;
            v126 = 9;
            goto LABEL_215;
          case 0xA:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v196 + 16))(v71, v72, v162);
            v104 = v228;
            v126 = 10;
            goto LABEL_215;
          case 0xB:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v195 + 16))(v71, v72, v161);
            v104 = v228;
            v126 = 11;
            goto LABEL_215;
          case 0xC:
            if (__swift_getEnumTagSinglePayload(v72, 1, v175))
            {
              memcpy((void *)v71, (const void *)v72, v214);
            }
            else
            {
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v167 + 16))(v71, v72, v175);
              __swift_storeEnumTagSinglePayload(v71, 0, 1, v175);
            }
            v144 = (_QWORD *)((v216 + v71) & 0xFFFFFFFFFFFFFFF8);
            v145 = (_QWORD *)((v216 + v72) & 0xFFFFFFFFFFFFFFF8);
            *v144 = *v145;
            v144[1] = v145[1];
            v146 = (_QWORD *)(((unint64_t)v144 + 23) & 0xFFFFFFFFFFFFFFF8);
            v147 = (_QWORD *)(((unint64_t)v145 + 23) & 0xFFFFFFFFFFFFFFF8);
            *v146 = *v147;
            v146[1] = v147[1];
            v148 = (_QWORD *)(((unint64_t)v146 + 23) & 0xFFFFFFFFFFFFFFF8);
            v149 = (_QWORD *)(((unint64_t)v147 + 23) & 0xFFFFFFFFFFFFFFF8);
            *v148 = *v149;
            v148[1] = v149[1];
            v150 = ((unint64_t)v148 + v220) & v68;
            v151 = ((unint64_t)v149 + v220) & v68;
            v152 = *(void (**)(unint64_t, unint64_t, uint64_t))(v178 + 16);
            sub_21D7C4C20();
            sub_21D7C4C20();
            sub_21D7C4C20();
            v152(v150, v151, v180);
            v153 = (_BYTE *)(v150 + v202);
            *v153 = *(_BYTE *)(v151 + v202);
            v153[1] = *(_BYTE *)(v151 + v202 + 1);
            *(_BYTE *)(v71 + v222) = 12;
LABEL_224:
            v104 = v228;
            goto LABEL_216;
          case 0xD:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v207 + 16))(v71, v72, v174);
            v104 = v228;
            v126 = 13;
            goto LABEL_215;
          case 0xE:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v194 + 16))(v71, v72, v160);
            v104 = v228;
            v126 = 14;
            goto LABEL_215;
          case 0xF:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v193 + 16))(v71, v72, v159);
            v104 = v228;
            v126 = 15;
            goto LABEL_215;
          case 0x10:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v192 + 16))(v71, v72, v158);
            v104 = v228;
            v126 = 16;
            goto LABEL_215;
          case 0x11:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v191 + 16))(v71, v72, v157);
            v104 = v228;
            v126 = 17;
            goto LABEL_215;
          case 0x12:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v190 + 16))(v71, v72, v156);
            v104 = v228;
            v126 = 18;
            goto LABEL_215;
          case 0x13:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v189 + 16))(v71, v72, v155);
            v104 = v228;
            v126 = 19;
            goto LABEL_215;
          case 0x14:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v71, v72, v154);
            v104 = v228;
            v126 = 20;
LABEL_215:
            *(_BYTE *)(v71 + v222) = v126;
LABEL_216:
            v58 = a1;
            v115 = 12;
            break;
          default:
            if (v222 <= 3)
              v83 = v222;
            else
              v83 = 4;
            __asm { BR              X12 }
            return result;
        }
LABEL_217:
        *(_BYTE *)(v71 + v104) = v115;
        goto LABEL_218;
      case 0xD:
        v99 = ((unint64_t)v61 + v50 + v51) & v66;
        v100 = (v70 + v51) & v66;
        v77 = v228;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v209 + 16))(v99, v100, v177);
        v78 = 13;
        goto LABEL_156;
      case 0xE:
        v84 = ((unint64_t)v61 + v50 + v51) & v66;
        v85 = (v70 + v51) & v66;
        v77 = v228;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v178 + 16))(v84, v85, v180);
        v78 = 14;
LABEL_156:
        *(_BYTE *)(v71 + v77) = v78;
        break;
      case 0xF:
        *(_QWORD *)v71 = *(_QWORD *)v72;
        *(_QWORD *)((((unint64_t)v61 + v50 + v51) & v66) + 8) = *(_QWORD *)(((v70 + v51) & v66) + 8);
        v86 = *(void (**)(unint64_t, unint64_t, uint64_t))(v178 + 16);
        sub_21D7C4C20();
        v86((v220 + v71) & v68, (v220 + v72) & v68, v180);
        *(_BYTE *)(v71 + v228) = 15;
        break;
      default:
        if (v228 <= 3)
          v73 = v228;
        else
          v73 = 4;
        __asm { BR              X12 }
        return result;
    }
    v58 = a1;
LABEL_218:
    v127 = ((v71 | 7) + v74) & 0xFFFFFFFFFFFFFFF8;
    v128 = ((v72 | 7) + v74) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v127 = *(_QWORD *)v128;
    *(_QWORD *)(v127 + 8) = *(_QWORD *)(v128 + 8);
    *(_BYTE *)(v127 + 16) = *(_BYTE *)(v128 + 16);
    *(_BYTE *)(v127 + 17) = *(_BYTE *)(v128 + 17);
    sub_21D7C4C20();
  }
  return v58;
}

uint64_t sub_21CE88ECC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t result;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  uint64_t v97;
  int v98;
  int v99;
  uint64_t v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v4 + 24);
  if (v5 >> 60 != 15)
    sub_21CDDB4E0(*(_QWORD *)(v4 + 16), v5);
  v6 = sub_21D7BF754();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + (v8 | 7) + 32) & ~(v8 | 7);
  if (*(_QWORD *)(v9 + 24) >= 0xFFFFFFFFuLL)
    __swift_destroy_boxed_opaque_existential_1(v9);
  v112 = v9;
  v10 = (v8 + 40 + v9) & ~v8;
  if (!__swift_getEnumTagSinglePayload(v10, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
  v87 = v6;
  v105 = *(_DWORD *)(v7 + 84);
  v86 = v7;
  v111 = *(_QWORD *)(v7 + 64);
  v82 = sub_21D7C37A4();
  v109 = *(_QWORD *)(v82 - 8);
  v104 = *(_DWORD *)(v109 + 80);
  v81 = sub_21D7C06C0();
  v108 = *(_QWORD *)(v81 - 8);
  v103 = *(_DWORD *)(v108 + 80);
  v84 = sub_21D7C3660();
  v123 = *(_QWORD *)(v84 - 8);
  v102 = *(_DWORD *)(v123 + 80);
  v88 = sub_21D7C3B58();
  v125 = *(_QWORD *)(v88 - 8);
  v101 = *(_DWORD *)(v125 + 80);
  v85 = sub_21D7C3564();
  v124 = *(_QWORD *)(v85 - 8);
  v99 = *(_DWORD *)(v124 + 80);
  v80 = sub_21D7C30FC();
  v100 = *(_QWORD *)(v80 - 8);
  v98 = *(_DWORD *)(v100 + 80);
  v79 = sub_21D7C03CC();
  v11 = *(_QWORD *)(v79 - 8);
  v96 = *(_DWORD *)(v11 + 80);
  v83 = sub_21D7C3840();
  v97 = *(_QWORD *)(v83 - 8);
  v95 = *(_DWORD *)(v97 + 80);
  v78 = sub_21D7C38B8();
  v122 = *(_QWORD *)(v78 - 8);
  v94 = *(_DWORD *)(v122 + 80);
  v77 = sub_21D7C045C();
  v121 = *(_QWORD *)(v77 - 8);
  v93 = *(_DWORD *)(v121 + 80);
  v76 = sub_21D7C36C0();
  v110 = *(_QWORD *)(v76 - 8);
  v92 = *(_DWORD *)(v110 + 80);
  v75 = sub_21D7C0180();
  v120 = *(_QWORD *)(v75 - 8);
  v91 = *(_DWORD *)(v120 + 80);
  v74 = sub_21D7C3BAC();
  v119 = *(_QWORD *)(v74 - 8);
  v90 = *(_DWORD *)(v119 + 80);
  v73 = sub_21D7C33F0();
  v118 = *(_QWORD *)(v73 - 8);
  v89 = *(_DWORD *)(v118 + 80);
  v72 = sub_21D7C396C();
  v117 = *(_QWORD *)(v72 - 8);
  v12 = *(_DWORD *)(v117 + 80);
  v71 = sub_21D7C3738();
  v116 = *(_QWORD *)(v71 - 8);
  v13 = *(_DWORD *)(v116 + 80);
  v70 = sub_21D7C07A4();
  v115 = *(_QWORD *)(v70 - 8);
  v14 = *(_DWORD *)(v115 + 80);
  v69 = sub_21D7C0720();
  v114 = *(_QWORD *)(v69 - 8);
  v15 = *(_DWORD *)(v114 + 80);
  v68 = sub_21D7C0690();
  v107 = *(_QWORD *)(v68 - 8);
  v16 = *(_DWORD *)(v107 + 80);
  v67 = sub_21D7C0528();
  v17 = *(_QWORD *)(v67 - 8);
  v18 = *(_DWORD *)(v17 + 80);
  v19 = v11;
  v20 = sub_21D7C0594();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = v14 | v15 | v16;
  v23 = ~v8;
  v24 = v8 | ((v103 | v104 | v102 | v101 | v99 | v98 | v96 | v95 | v94 | v93 | v92 | v91 | v90 | v89 | v12 | v13) | (v22 | v18 | *(_DWORD *)(v21 + 80))) & 0xF8 | 7;
  v25 = v112 + ((v8 + 40) & ~v8) + v111;
  if (!v105)
    ++v25;
  v26 = (v25 + v24) & ~v24;
  v27 = *(_QWORD *)(v109 + 64);
  v28 = *(_QWORD *)(v108 + 64);
  v29 = *(_QWORD *)(v123 + 64);
  v30 = *(_QWORD *)(v125 + 64);
  v31 = *(_QWORD *)(v124 + 64);
  if (v29 <= v31)
    v32 = *(_QWORD *)(v124 + 64);
  else
    v32 = *(_QWORD *)(v123 + 64);
  v33 = 16;
  if (v32 <= 0x10)
    v34 = 16;
  else
    v34 = v32;
  v113 = v34;
  v35 = (v34 & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v30 > 0x10)
    v33 = *(_QWORD *)(v125 + 64);
  if (v31 <= v30)
    v36 = *(_QWORD *)(v125 + 64);
  else
    v36 = *(_QWORD *)(v124 + 64);
  v37 = *(_QWORD *)(v100 + 64);
  if (v37 > v36)
    v36 = *(_QWORD *)(v100 + 64);
  if (v29 > v36)
    v36 = *(_QWORD *)(v123 + 64);
  v38 = *(_QWORD *)(v11 + 64);
  if (v38 <= v30)
    v38 = *(_QWORD *)(v125 + 64);
  if (v31 > v38)
    v38 = *(_QWORD *)(v124 + 64);
  if (*(_DWORD *)(v97 + 84))
    v39 = *(_QWORD *)(v97 + 64);
  else
    v39 = *(_QWORD *)(v97 + 64) + 1;
  v106 = v39;
  v40 = v8 + 16;
  v41 = ((v8 + 16 + ((((((v39 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v23)
      + v111;
  v42 = v41 + 2;
  if (v41 + 2 > v38)
    v38 = v41 + 2;
  if (v27 > v29)
    v29 = *(_QWORD *)(v109 + 64);
  if (v28 > v29)
    v29 = *(_QWORD *)(v108 + 64);
  if (*(_QWORD *)(v122 + 64) > v29)
    v29 = *(_QWORD *)(v122 + 64);
  if (*(_QWORD *)(v121 + 64) > v29)
    v29 = *(_QWORD *)(v121 + 64);
  v43 = ((((v41 + 9) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v43 > v29)
    v29 = v43;
  if (*(_QWORD *)(v110 + 64) > v29)
    v29 = *(_QWORD *)(v110 + 64);
  if (*(_QWORD *)(v120 + 64) > v29)
    v29 = *(_QWORD *)(v120 + 64);
  v44 = v33 + 1 + v8;
  if (v37 > v29)
    v29 = *(_QWORD *)(v100 + 64);
  if (v30 > v29)
    v29 = *(_QWORD *)(v125 + 64);
  if (*(_QWORD *)(v119 + 64) > v29)
    v29 = *(_QWORD *)(v119 + 64);
  if (*(_QWORD *)(v118 + 64) > v29)
    v29 = *(_QWORD *)(v118 + 64);
  v45 = (v44 & v23) + v111;
  if (v42 > v29)
    v29 = v42;
  if (v31 <= v29)
    v31 = v29;
  if (*(_QWORD *)(v117 + 64) > v31)
    v31 = *(_QWORD *)(v117 + 64);
  if (*(_QWORD *)(v116 + 64) > v31)
    v31 = *(_QWORD *)(v116 + 64);
  if (*(_QWORD *)(v115 + 64) > v31)
    v31 = *(_QWORD *)(v115 + 64);
  if (*(_QWORD *)(v114 + 64) > v31)
    v31 = *(_QWORD *)(v114 + 64);
  if (*(_QWORD *)(v107 + 64) > v31)
    v31 = *(_QWORD *)(v107 + 64);
  if (*(_QWORD *)(v17 + 64) > v31)
    v31 = *(_QWORD *)(v17 + 64);
  if (*(_QWORD *)(v21 + 64) > v31)
    v31 = *(_QWORD *)(v21 + 64);
  v46 = v36 + 1;
  if (v30 <= v35)
    v30 = v35;
  if ((v33 & 0xFFFFFFFFFFFFFFF8) + 24 > v45)
    v45 = (v33 & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v46 <= v38 + 1)
    v46 = v38 + 1;
  if (v31 + 1 > v111 + (v40 & v23))
    v47 = v31 + 1;
  else
    v47 = v111 + (v40 & v23);
  if (v27 <= v28)
    v27 = *(_QWORD *)(v108 + 64);
  if (v30 <= v45)
    v48 = v45;
  else
    v48 = v30;
  if (v46 <= v47)
    v49 = v47;
  else
    v49 = v46;
  if (v111 > v32)
    v32 = v111;
  if (v48 <= v49)
    v48 = v49;
  if (v32 > v27)
    v27 = v32;
  if (v27 <= v48)
    v27 = v48;
  if (v27 <= 0x11)
    v50 = 17;
  else
    v50 = v27;
  switch(*(_BYTE *)(v26 + v50))
  {
    case 0:
      goto LABEL_144;
    case 1:
LABEL_162:
      (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v26, v82);
      return swift_bridgeObjectRelease();
    case 2:
LABEL_163:
      v60 = *(void (**)(uint64_t, uint64_t))(v108 + 8);
      v61 = v26;
      v64 = v81;
      goto LABEL_164;
    case 3:
LABEL_161:
      (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v26, v84);
      return swift_bridgeObjectRelease();
    case 4:
    case 0xD:
LABEL_106:
      (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v26, v88);
      return swift_bridgeObjectRelease();
    case 5:
      switch(*(_BYTE *)(v26 + v113))
      {
        case 0:
          (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v26, v84);
          break;
        case 1:
        case 3:
          swift_bridgeObjectRelease();
          break;
        case 2:
          (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v26, v85);
          break;
        default:
          if (v113 <= 3)
            v52 = v113;
          else
            v52 = 4;
          __asm { BR              X12 }
          return result;
      }
      goto LABEL_144;
    case 6:
      v53 = *(unsigned __int8 *)(v26 + v33);
      if (v53 >= 2)
      {
        if (v33 <= 3)
          v54 = v33;
        else
          v54 = 4;
        __asm { BR              X13 }
      }
      if (v53 == 1)
        swift_bridgeObjectRelease();
      else
        (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v26, v88);
LABEL_144:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 7:
      v55 = *(unsigned __int8 *)(v26 + v33);
      if (v55 >= 2)
      {
        if (v33 <= 3)
          v56 = v33;
        else
          v56 = 4;
        __asm { BR              X13 }
      }
      if (v55 == 1)
        swift_bridgeObjectRelease();
      else
        (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v26, v88);
      v62 = v44 + v26;
      goto LABEL_149;
    case 8:
      return swift_bridgeObjectRelease();
    case 9:
      switch(*(_BYTE *)(v26 + v36))
      {
        case 0:
          goto LABEL_106;
        case 1:
          goto LABEL_154;
        case 2:
          goto LABEL_152;
        case 3:
          goto LABEL_161;
        default:
          if (v36 <= 3)
            v57 = v36;
          else
            v57 = 4;
          __asm { BR              X13 }
          return result;
      }
    case 0xA:
LABEL_154:
      (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v26, v85);
      return swift_bridgeObjectRelease();
    case 0xB:
      v63 = v83;
      switch(*(_BYTE *)(v26 + v38))
      {
        case 0:
          goto LABEL_106;
        case 1:
          (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v26, v79);
          return swift_bridgeObjectRelease();
        case 2:
        case 3:
          goto LABEL_154;
        case 4:
          v65 = v26;
          goto LABEL_157;
        default:
          if (v38 <= 3)
            v58 = v38;
          else
            v58 = 4;
          __asm { BR              X13 }
          return result;
      }
    case 0xC:
      switch(*(_BYTE *)(v26 + v31))
      {
        case 0:
          goto LABEL_161;
        case 1:
          goto LABEL_162;
        case 2:
          goto LABEL_163;
        case 3:
          (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v26, v78);
          return swift_bridgeObjectRelease();
        case 4:
          (*(void (**)(uint64_t, uint64_t))(v121 + 8))(v26, v77);
          return swift_bridgeObjectRelease();
        case 5:
          if (!__swift_getEnumTagSinglePayload(v26, 1, v83))
            (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v26, v83);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v86 + 8))((v40+ (((((((v26 | 7) + v106) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v23, v87);
          swift_bridgeObjectRelease();
          goto LABEL_144;
        case 6:
          (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v26, v76);
          return swift_bridgeObjectRelease();
        case 7:
          (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v26, v75);
          return swift_bridgeObjectRelease();
        case 8:
LABEL_152:
          (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v26, v80);
          return swift_bridgeObjectRelease();
        case 9:
          goto LABEL_106;
        case 0xA:
          (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v26, v74);
          return swift_bridgeObjectRelease();
        case 0xB:
          (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v26, v73);
          return swift_bridgeObjectRelease();
        case 0xC:
          v65 = v26;
          v63 = v83;
LABEL_157:
          if (!__swift_getEnumTagSinglePayload(v65, 1, v63))
            (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v26, v63);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v62 = v40
              + (((((((v26 | 7) + v106) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
          goto LABEL_149;
        case 0xD:
          goto LABEL_154;
        case 0xE:
          (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v26, v72);
          return swift_bridgeObjectRelease();
        case 0xF:
          (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v26, v71);
          return swift_bridgeObjectRelease();
        case 0x10:
          (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v26, v70);
          return swift_bridgeObjectRelease();
        case 0x11:
          (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v26, v69);
          return swift_bridgeObjectRelease();
        case 0x12:
          (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v26, v68);
          return swift_bridgeObjectRelease();
        case 0x13:
          (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v26, v67);
          return swift_bridgeObjectRelease();
        case 0x14:
          (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v26, v20);
          return swift_bridgeObjectRelease();
        default:
          if (v31 <= 3)
            v59 = v31;
          else
            v59 = 4;
          __asm { BR              X14 }
          return result;
      }
    case 0xE:
      v60 = *(void (**)(uint64_t, uint64_t))(v86 + 8);
      v61 = v26;
      goto LABEL_150;
    case 0xF:
      swift_bridgeObjectRelease();
      v62 = v40 + v26;
LABEL_149:
      v61 = v62 & v23;
      v60 = *(void (**)(uint64_t, uint64_t))(v86 + 8);
LABEL_150:
      v64 = v87;
LABEL_164:
      v60(v61, v64);
      return swift_bridgeObjectRelease();
    default:
      if (v50 <= 3)
        v51 = v50;
      else
        v51 = 4;
      __asm { BR              X17 }
      return result;
  }
}

uint64_t sub_21CE89C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  _OWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  uint64_t v16;
  unint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  int v23;
  unint64_t v24;
  size_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t, uint64_t);
  uint64_t v81;
  unsigned int v82;
  uint64_t v83;
  unsigned int v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  size_t v90;
  char v91;
  uint64_t v92;
  size_t v93;
  size_t v94;
  unint64_t v95;
  uint64_t v96;
  char v97;
  _QWORD *v98;
  _QWORD *v99;
  char v100;
  _QWORD *v101;
  _QWORD *v102;
  char v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t result;
  _QWORD *v107;
  _QWORD *v108;
  _QWORD *v109;
  _QWORD *v110;
  _QWORD *v111;
  _QWORD *v112;
  unint64_t v113;
  unint64_t v114;
  void (*v115)(unint64_t, unint64_t, uint64_t);
  _BYTE *v116;
  uint64_t v117;
  char v118;
  unint64_t v119;
  uint64_t v120;
  char v121;
  uint64_t v122;
  size_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  size_t v127;
  _QWORD *v128;
  _QWORD *v129;
  _QWORD *v130;
  _QWORD *v131;
  _QWORD *v132;
  _QWORD *v133;
  unint64_t v134;
  unint64_t v135;
  void (*v136)(unint64_t, unint64_t, uint64_t);
  _BYTE *v137;
  _QWORD *v138;
  uint64_t v139;
  _QWORD *v140;
  _QWORD *v141;
  _QWORD *v142;
  _QWORD *v143;
  _QWORD *v144;
  unint64_t v145;
  unint64_t v146;
  void (*v147)(unint64_t, unint64_t, uint64_t);
  _BYTE *v148;
  _QWORD *v149;
  _QWORD *v150;
  _QWORD *v151;
  _QWORD *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  int v176;
  int v177;
  int v178;
  int v179;
  int v180;
  int v181;
  int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  int v187;
  int v188;
  uint64_t v189;
  uint64_t v190;
  int v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  unint64_t v215;
  unint64_t v216;
  uint64_t v217;
  _OWORD *v218;
  uint64_t v219;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)v7 = *v8;
  *(_QWORD *)(v7 + 8) = v8[1];
  v9 = v8 + 2;
  v10 = v8[3];
  sub_21D7C4C20();
  v175 = a1;
  if (v10 >> 60 == 15)
  {
    *(_OWORD *)(v7 + 16) = *v9;
  }
  else
  {
    v11 = *(_QWORD *)v9;
    sub_21CDDB488(v11, v10);
    *(_QWORD *)(v7 + 16) = v11;
    *(_QWORD *)(v7 + 24) = v10;
  }
  v12 = sub_21D7BF754();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = (_OWORD *)((v7 + (v14 | 7) + 32) & ~(v14 | 7));
  v16 = ((unint64_t)v8 + (v14 | 7) + 32) & ~(v14 | 7);
  v17 = *(_QWORD *)(v16 + 0x18);
  if (v17 < 0xFFFFFFFF)
  {
    v18 = *(_OWORD *)v16;
    v19 = *(_OWORD *)(v16 + 16);
    *(_QWORD *)(((v7 + (v14 | 7) + 32) & ~(v14 | 7)) + 0x20) = *(_QWORD *)(v16 + 32);
    *v15 = v18;
    *(_OWORD *)(((v7 + (v14 | 7) + 32) & ~(v14 | 7)) + 0x10) = v19;
  }
  else
  {
    *(_QWORD *)(((v7 + (v14 | 7) + 32) & ~(v14 | 7)) + 0x18) = v17;
    *(_QWORD *)(((v7 + (v14 | 7) + 32) & ~(v14 | 7)) + 0x20) = *(_QWORD *)(v16 + 32);
    (**(void (***)(uint64_t, uint64_t))(v17 - 8))((v7 + (v14 | 7) + 32) & ~(v14 | 7), v16);
  }
  v20 = v14 + 40;
  v217 = ~v14;
  v218 = v15;
  v21 = (void *)(((unint64_t)v15 + v14 + 40) & ~v14);
  v197 = v16;
  v199 = v14;
  v22 = (const void *)((v14 + 40 + v16) & ~v14);
  v172 = v13;
  v173 = v12;
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v12))
  {
    v23 = *(_DWORD *)(v13 + 84);
    v24 = *(_QWORD *)(v13 + 64);
    if (v23)
      v25 = *(_QWORD *)(v13 + 64);
    else
      v25 = v24 + 1;
    memcpy(v21, v22, v25);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v21, v22, v12);
    __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v12);
    v23 = *(_DWORD *)(v13 + 84);
    v24 = *(_QWORD *)(v13 + 64);
  }
  v26 = v24 + (v20 & v217);
  if (!v23)
    ++v26;
  v195 = v26;
  v167 = sub_21D7C37A4();
  v190 = *(_QWORD *)(v167 - 8);
  v191 = *(_DWORD *)(v190 + 80);
  v168 = sub_21D7C06C0();
  v211 = *(_QWORD *)(v168 - 8);
  v188 = *(_DWORD *)(v211 + 80);
  v170 = sub_21D7C3660();
  v212 = *(_QWORD *)(v170 - 8);
  v187 = *(_DWORD *)(v212 + 80);
  v174 = sub_21D7C3B58();
  v214 = *(_QWORD *)(v174 - 8);
  v186 = *(_DWORD *)(v214 + 80);
  v171 = sub_21D7C3564();
  v213 = *(_QWORD *)(v171 - 8);
  v185 = *(_DWORD *)(v213 + 80);
  v166 = sub_21D7C30FC();
  v27 = *(_QWORD *)(v166 - 8);
  v184 = *(_DWORD *)(v27 + 80);
  v165 = sub_21D7C03CC();
  v210 = *(_QWORD *)(v165 - 8);
  v183 = *(_DWORD *)(v210 + 80);
  v169 = sub_21D7C3840();
  v28 = *(_QWORD *)(v169 - 8);
  v182 = *(_DWORD *)(v28 + 80);
  v164 = sub_21D7C38B8();
  v209 = *(_QWORD *)(v164 - 8);
  v181 = *(_DWORD *)(v209 + 80);
  v163 = sub_21D7C045C();
  v208 = *(_QWORD *)(v163 - 8);
  v180 = *(_DWORD *)(v208 + 80);
  v162 = sub_21D7C36C0();
  v207 = *(_QWORD *)(v162 - 8);
  v179 = *(_DWORD *)(v207 + 80);
  v161 = sub_21D7C0180();
  v206 = *(_QWORD *)(v161 - 8);
  v178 = *(_DWORD *)(v206 + 80);
  v160 = sub_21D7C3BAC();
  v205 = *(_QWORD *)(v160 - 8);
  v177 = *(_DWORD *)(v205 + 80);
  v159 = sub_21D7C33F0();
  v204 = *(_QWORD *)(v159 - 8);
  v176 = *(_DWORD *)(v204 + 80);
  v158 = sub_21D7C396C();
  v203 = *(_QWORD *)(v158 - 8);
  v29 = *(_DWORD *)(v203 + 80);
  v157 = sub_21D7C3738();
  v202 = *(_QWORD *)(v157 - 8);
  v30 = *(_DWORD *)(v202 + 80);
  v156 = sub_21D7C07A4();
  v201 = *(_QWORD *)(v156 - 8);
  v31 = *(_DWORD *)(v201 + 80);
  v155 = sub_21D7C0720();
  v194 = *(_QWORD *)(v155 - 8);
  v32 = *(_DWORD *)(v194 + 80);
  v154 = sub_21D7C0690();
  v193 = *(_QWORD *)(v154 - 8);
  v33 = *(_DWORD *)(v193 + 80);
  v153 = sub_21D7C0528();
  v34 = *(_QWORD *)(v153 - 8);
  v35 = *(_DWORD *)(v34 + 80);
  v36 = sub_21D7C0594();
  v37 = v27;
  v38 = v36;
  v39 = *(_QWORD *)(v36 - 8);
  v40 = v199 | ((v188 | v191 | v187 | v186 | v185 | v184 | v183 | v182 | v181 | v180 | v179 | v178 | v177 | v176 | v29 | v30) | (v31 | v32 | v33 | v35 | *(_DWORD *)(v39 + 80))) & 0xF8 | 7;
  v219 = ((unint64_t)v218 + v195 + v40) & ~v40;
  v41 = (v195 + v40 + v197) & ~v40;
  v42 = *(_QWORD *)(v190 + 64);
  v43 = *(_QWORD *)(v211 + 64);
  v44 = *(_QWORD *)(v212 + 64);
  v45 = *(_QWORD *)(v214 + 64);
  v46 = *(_QWORD *)(v213 + 64);
  if (v44 <= v46)
    v47 = *(_QWORD *)(v213 + 64);
  else
    v47 = *(_QWORD *)(v212 + 64);
  if (v47 <= 0x10)
    v48 = 16;
  else
    v48 = v47;
  if (v45 <= 0x10)
    v49 = 16;
  else
    v49 = *(_QWORD *)(v214 + 64);
  if (v46 <= v45)
    v50 = *(_QWORD *)(v214 + 64);
  else
    v50 = *(_QWORD *)(v213 + 64);
  v51 = *(_QWORD *)(v27 + 64);
  if (v51 > v50)
    v50 = *(_QWORD *)(v27 + 64);
  if (v44 <= v50)
    v52 = v50;
  else
    v52 = *(_QWORD *)(v212 + 64);
  v53 = *(_QWORD *)(v210 + 64);
  if (v53 <= v45)
    v53 = *(_QWORD *)(v214 + 64);
  if (v46 > v53)
    v53 = *(_QWORD *)(v213 + 64);
  v196 = v28;
  if (*(_DWORD *)(v28 + 84))
    v54 = *(_QWORD *)(v28 + 64);
  else
    v54 = *(_QWORD *)(v28 + 64) + 1;
  v55 = v199 + 16;
  v56 = ((v199 + 16 + ((((((v54 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v217)
      + v24;
  v57 = v56 + 2;
  if (v56 + 2 <= v53)
    v58 = v53;
  else
    v58 = v56 + 2;
  if (v42 > v44)
    v44 = *(_QWORD *)(v190 + 64);
  if (v43 > v44)
    v44 = *(_QWORD *)(v211 + 64);
  if (*(_QWORD *)(v209 + 64) > v44)
    v44 = *(_QWORD *)(v209 + 64);
  if (*(_QWORD *)(v208 + 64) > v44)
    v44 = *(_QWORD *)(v208 + 64);
  if (((((v56 + 9) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > v44)
    v44 = ((((v56 + 9) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (*(_QWORD *)(v207 + 64) > v44)
    v44 = *(_QWORD *)(v207 + 64);
  if (*(_QWORD *)(v206 + 64) > v44)
    v44 = *(_QWORD *)(v206 + 64);
  v198 = v49 + 1;
  v59 = v49 + 1 + v199;
  if (v51 > v44)
    v44 = v51;
  if (v45 > v44)
    v44 = *(_QWORD *)(v214 + 64);
  if (*(_QWORD *)(v205 + 64) > v44)
    v44 = *(_QWORD *)(v205 + 64);
  if (*(_QWORD *)(v204 + 64) > v44)
    v44 = *(_QWORD *)(v204 + 64);
  if (v57 > v44)
    v44 = v56 + 2;
  if (v46 <= v44)
    v46 = v44;
  if (*(_QWORD *)(v203 + 64) > v46)
    v46 = *(_QWORD *)(v203 + 64);
  if (*(_QWORD *)(v202 + 64) > v46)
    v46 = *(_QWORD *)(v202 + 64);
  if (*(_QWORD *)(v201 + 64) > v46)
    v46 = *(_QWORD *)(v201 + 64);
  if (*(_QWORD *)(v194 + 64) > v46)
    v46 = *(_QWORD *)(v194 + 64);
  if (*(_QWORD *)(v193 + 64) > v46)
    v46 = *(_QWORD *)(v193 + 64);
  v60 = v34;
  v61 = *(_QWORD *)(v34 + 64);
  v62 = v52;
  if (v61 > v46)
    v46 = v61;
  if (*(_QWORD *)(v39 + 64) <= v46)
    v63 = v46;
  else
    v63 = *(_QWORD *)(v39 + 64);
  v64 = v52 + 1;
  if (v45 <= (v48 & 0xFFFFFFFFFFFFFFF8) + 24)
    v45 = (v48 & 0xFFFFFFFFFFFFFFF8) + 24;
  if ((v49 & 0xFFFFFFFFFFFFFFF8) + 24 <= (v59 & v217) + v24)
    v65 = (v59 & v217) + v24;
  else
    v65 = (v49 & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v64 <= v58 + 1)
    v64 = v58 + 1;
  if (v63 + 1 > v24 + (v55 & v217))
    v66 = v63 + 1;
  else
    v66 = v24 + (v55 & v217);
  if (v42 <= v43)
    v42 = *(_QWORD *)(v211 + 64);
  if (v45 <= v65)
    v67 = v65;
  else
    v67 = v45;
  if (v64 <= v66)
    v68 = v66;
  else
    v68 = v64;
  v200 = v24;
  if (v24 > v47)
    v47 = v24;
  v69 = v41;
  if (v67 <= v68)
    v67 = v68;
  if (v47 > v42)
    v42 = v47;
  if (v42 <= v67)
    v42 = v67;
  if (v42 <= 0x11)
    v70 = 17;
  else
    v70 = v42;
  v72 = v48 + 1;
  switch(*(_BYTE *)(v41 + v70))
  {
    case 0:
      *(_QWORD *)v219 = *(_QWORD *)v41;
      *(_QWORD *)(v219 + 8) = *(_QWORD *)(v41 + 8);
      *(_BYTE *)(v219 + v70) = 0;
      goto LABEL_179;
    case 1:
      v73 = v219;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v190 + 16))(v219, v41, v167);
      v74 = 1;
      goto LABEL_184;
    case 2:
      v73 = v219;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v211 + 16))(v219, v41, v168);
      v74 = 2;
      goto LABEL_184;
    case 3:
      v73 = v219;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v212 + 16))(v219, v41, v170);
      v74 = 3;
      goto LABEL_184;
    case 4:
      v73 = v219;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v214 + 16))(v219, v41, v174);
      v74 = 4;
      goto LABEL_184;
    case 5:
      v87 = v175;
      switch(*(_BYTE *)(v41 + v48))
      {
        case 0:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v212 + 16))(v219, v41, v170);
          *(_BYTE *)(v219 + v48) = 0;
          goto LABEL_174;
        case 1:
          v96 = v219;
          *(_QWORD *)v219 = *(_QWORD *)v41;
          *(_QWORD *)(v219 + 8) = *(_QWORD *)(v41 + 8);
          v97 = 1;
          goto LABEL_173;
        case 2:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v213 + 16))(v219, v41, v171);
          *(_BYTE *)(v219 + v48) = 2;
          goto LABEL_174;
        case 3:
          v96 = v219;
          *(_QWORD *)v219 = *(_QWORD *)v41;
          *(_QWORD *)(v219 + 8) = *(_QWORD *)(v41 + 8);
          v97 = 3;
LABEL_173:
          *(_BYTE *)(v96 + v48) = v97;
          sub_21D7C4C20();
LABEL_174:
          v98 = (_QWORD *)(((v219 | 7) + v72) & 0xFFFFFFFFFFFFFFF8);
          v99 = (_QWORD *)(((v69 | 7) + v72) & 0xFFFFFFFFFFFFFFF8);
          *v98 = *v99;
          v98[1] = v99[1];
          *(_BYTE *)(v219 + v70) = 5;
          sub_21D7C4C20();
          break;
        default:
          if (v48 <= 3)
            v81 = v48;
          else
            v81 = 4;
          __asm { BR              X12 }
          return result;
      }
      goto LABEL_186;
    case 6:
      v82 = *(unsigned __int8 *)(v41 + v49);
      if (v82 >= 2)
      {
        if (v49 <= 3)
          v83 = v49;
        else
          v83 = 4;
        __asm { BR              X12 }
      }
      if (v82 == 1)
      {
        *(_QWORD *)v219 = *(_QWORD *)v41;
        *(_QWORD *)(v219 + 8) = *(_QWORD *)(v41 + 8);
        sub_21D7C4C20();
        v100 = 1;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v214 + 16))(v219, v41, v174);
        v100 = 0;
      }
      *(_BYTE *)(v219 + v49) = v100;
      v101 = (_QWORD *)(((v219 | 7) + v198) & 0xFFFFFFFFFFFFFFF8);
      v102 = (_QWORD *)(((v69 | 7) + v198) & 0xFFFFFFFFFFFFFFF8);
      *v101 = *v102;
      v101[1] = v102[1];
      *(_BYTE *)(v219 + v70) = 6;
LABEL_179:
      sub_21D7C4C20();
      break;
    case 7:
      v84 = *(unsigned __int8 *)(v41 + v49);
      if (v84 >= 2)
      {
        if (v49 <= 3)
          v85 = v49;
        else
          v85 = 4;
        __asm { BR              X12 }
      }
      if (v84 == 1)
      {
        *(_QWORD *)v219 = *(_QWORD *)v41;
        *(_QWORD *)(v219 + 8) = *(_QWORD *)(v41 + 8);
        sub_21D7C4C20();
        v103 = 1;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v214 + 16))(v219, v41, v174);
        v103 = 0;
      }
      v73 = v219;
      *(_BYTE *)(v219 + v49) = v103;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v172 + 16))((v59 + v219) & v217, (v59 + v69) & v217, v173);
      v74 = 7;
      goto LABEL_184;
    case 8:
      v86 = *(_OWORD *)v41;
      *(_BYTE *)(v219 + 16) = *(_BYTE *)(v41 + 16);
      *(_OWORD *)v219 = v86;
      *(_BYTE *)(v219 + v70) = 8;
      break;
    case 9:
      v87 = v175;
      v88 = 0;
      v89 = v174;
      switch(*(_BYTE *)(v41 + v62))
      {
        case 0:
          break;
        case 1:
          v88 = 1;
          v214 = v213;
          v89 = v171;
          break;
        case 2:
          v88 = 2;
          v214 = v37;
          v89 = v166;
          break;
        case 3:
          v88 = 3;
          v214 = v212;
          v89 = v170;
          break;
        default:
          if (v62 <= 3)
            v75 = v62;
          else
            v75 = 4;
          __asm { BR              X12 }
          return result;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v214 + 16))(v219, v41, v89);
      *(_BYTE *)(v219 + v62) = v88;
      *(_BYTE *)(v219 + v70) = 9;
      goto LABEL_186;
    case 0xA:
      v73 = v219;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v213 + 16))(v219, v41, v171);
      v74 = 10;
      goto LABEL_184;
    case 0xB:
      v90 = v54;
      v87 = v175;
      switch(*(_BYTE *)(v41 + v58))
      {
        case 0:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v214 + 16))(v219, v41, v174);
          v91 = 0;
          break;
        case 1:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v210 + 16))(v219, v41, v165);
          v91 = 1;
          break;
        case 2:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v213 + 16))(v219, v41, v171);
          v91 = 2;
          break;
        case 3:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v213 + 16))(v219, v41, v171);
          v91 = 3;
          break;
        case 4:
          v92 = v55;
          v192 = v70;
          if (__swift_getEnumTagSinglePayload(v41, 1, v169))
          {
            v93 = v90;
            memcpy((void *)v219, (const void *)v69, v90);
          }
          else
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v196 + 16))(v219, v69, v169);
            __swift_storeEnumTagSinglePayload(v219, 0, 1, v169);
            v93 = v90;
          }
          v107 = (_QWORD *)(((v219 | 7) + v93) & 0xFFFFFFFFFFFFFFF8);
          v108 = (_QWORD *)(((v69 | 7) + v93) & 0xFFFFFFFFFFFFFFF8);
          *v107 = *v108;
          v107[1] = v108[1];
          v109 = (_QWORD *)(((unint64_t)v107 + 23) & 0xFFFFFFFFFFFFFFF8);
          v110 = (_QWORD *)(((unint64_t)v108 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v109 = *v110;
          v109[1] = v110[1];
          v111 = (_QWORD *)(((unint64_t)v109 + 23) & 0xFFFFFFFFFFFFFFF8);
          v112 = (_QWORD *)(((unint64_t)v110 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v111 = *v112;
          v111[1] = v112[1];
          v113 = ((unint64_t)v111 + v92) & v217;
          v114 = ((unint64_t)v112 + v92) & v217;
          v115 = *(void (**)(unint64_t, unint64_t, uint64_t))(v172 + 16);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          v115(v113, v114, v173);
          v116 = (_BYTE *)(v113 + v200);
          *v116 = *(_BYTE *)(v114 + v200);
          v116[1] = *(_BYTE *)(v114 + v200 + 1);
          v91 = 4;
          v70 = v192;
          break;
        default:
          if (v58 <= 3)
            v76 = v58;
          else
            v76 = 4;
          __asm { BR              X12 }
          return result;
      }
      v117 = v219;
      *(_BYTE *)(v219 + v58) = v91;
      v118 = 11;
      goto LABEL_214;
    case 0xC:
      v94 = v54;
      v87 = v175;
      switch(*(_BYTE *)(v41 + v63))
      {
        case 0:
          v95 = v63;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v212 + 16))(v219, v41, v170);
          *(_BYTE *)(v219 + v95) = 0;
          goto LABEL_213;
        case 1:
          v119 = v63;
          v120 = v219;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v190 + 16))(v219, v41, v167);
          v121 = 1;
          goto LABEL_212;
        case 2:
          v119 = v63;
          v120 = v219;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v211 + 16))(v219, v41, v168);
          v121 = 2;
          goto LABEL_212;
        case 3:
          v119 = v63;
          v120 = v219;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v209 + 16))(v219, v41, v164);
          v121 = 3;
          goto LABEL_212;
        case 4:
          v119 = v63;
          v120 = v219;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v208 + 16))(v219, v41, v163);
          v121 = 4;
          goto LABEL_212;
        case 5:
          v122 = v55;
          v215 = v63;
          if (__swift_getEnumTagSinglePayload(v41, 1, v169))
          {
            v123 = v94;
            memcpy((void *)v219, (const void *)v69, v94);
            v124 = v69;
          }
          else
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v196 + 16))(v219, v69, v169);
            __swift_storeEnumTagSinglePayload(v219, 0, 1, v169);
            v124 = v69;
            v123 = v94;
          }
          v189 = v124;
          v138 = (_QWORD *)(((v219 | 7) + v123) & 0xFFFFFFFFFFFFFFF8);
          v139 = v124 | 7;
          v140 = (_QWORD *)(((v124 | 7) + v123) & 0xFFFFFFFFFFFFFFF8);
          *v138 = *v140;
          v138[1] = v140[1];
          v141 = (_QWORD *)(((unint64_t)v138 + 23) & 0xFFFFFFFFFFFFFFF8);
          v142 = (_QWORD *)(((unint64_t)v140 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v141 = *v142;
          v141[1] = v142[1];
          v143 = (_QWORD *)(((unint64_t)v141 + 23) & 0xFFFFFFFFFFFFFFF8);
          v144 = (_QWORD *)(((unint64_t)v142 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v143 = *v144;
          v143[1] = v144[1];
          v145 = ((unint64_t)v143 + v122) & v217;
          v146 = ((unint64_t)v144 + v122) & v217;
          v147 = *(void (**)(unint64_t, unint64_t, uint64_t))(v172 + 16);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          v147(v145, v146, v173);
          v148 = (_BYTE *)(v145 + v200);
          *v148 = *(_BYTE *)(v146 + v200);
          v148[1] = *(_BYTE *)(v146 + v200 + 1);
          v149 = (_QWORD *)(((v219 | 7) + v57) & 0xFFFFFFFFFFFFFFF8);
          v150 = (_QWORD *)((v139 + v57) & 0xFFFFFFFFFFFFFFF8);
          *v149 = *v150;
          v149[1] = v150[1];
          v151 = (_QWORD *)(((unint64_t)v149 + 23) & 0xFFFFFFFFFFFFFFF8);
          v152 = (_QWORD *)(((unint64_t)v150 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v151 = *v152;
          v151[1] = v152[1];
          *(_BYTE *)(v219 + v215) = 5;
          sub_21D7C4C20();
          sub_21D7C4C20();
          v69 = v189;
          goto LABEL_213;
        case 6:
          v119 = v63;
          v120 = v219;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v207 + 16))(v219, v41, v162);
          v121 = 6;
          goto LABEL_212;
        case 7:
          v119 = v63;
          v120 = v219;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v206 + 16))(v219, v41, v161);
          v121 = 7;
          goto LABEL_212;
        case 8:
          v119 = v63;
          v120 = v219;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v219, v41, v166);
          v121 = 8;
          goto LABEL_212;
        case 9:
          v119 = v63;
          v120 = v219;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v214 + 16))(v219, v41, v174);
          v121 = 9;
          goto LABEL_212;
        case 0xA:
          v119 = v63;
          v120 = v219;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v205 + 16))(v219, v41, v160);
          v121 = 10;
          goto LABEL_212;
        case 0xB:
          v119 = v63;
          v120 = v219;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v204 + 16))(v219, v41, v159);
          v121 = 11;
          goto LABEL_212;
        case 0xC:
          v125 = v55;
          v216 = v63;
          v126 = v70;
          if (__swift_getEnumTagSinglePayload(v41, 1, v169))
          {
            v127 = v94;
            memcpy((void *)v219, (const void *)v69, v94);
          }
          else
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v196 + 16))(v219, v69, v169);
            __swift_storeEnumTagSinglePayload(v219, 0, 1, v169);
            v127 = v94;
          }
          v128 = (_QWORD *)(((v219 | 7) + v127) & 0xFFFFFFFFFFFFFFF8);
          v129 = (_QWORD *)(((v69 | 7) + v127) & 0xFFFFFFFFFFFFFFF8);
          *v128 = *v129;
          v128[1] = v129[1];
          v130 = (_QWORD *)(((unint64_t)v128 + 23) & 0xFFFFFFFFFFFFFFF8);
          v131 = (_QWORD *)(((unint64_t)v129 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v130 = *v131;
          v130[1] = v131[1];
          v132 = (_QWORD *)(((unint64_t)v130 + 23) & 0xFFFFFFFFFFFFFFF8);
          v133 = (_QWORD *)(((unint64_t)v131 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v132 = *v133;
          v132[1] = v133[1];
          v134 = ((unint64_t)v132 + v125) & v217;
          v135 = ((unint64_t)v133 + v125) & v217;
          v136 = *(void (**)(unint64_t, unint64_t, uint64_t))(v172 + 16);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          v136(v134, v135, v173);
          v137 = (_BYTE *)(v134 + v200);
          *v137 = *(_BYTE *)(v135 + v200);
          v137[1] = *(_BYTE *)(v135 + v200 + 1);
          *(_BYTE *)(v219 + v216) = 12;
          v70 = v126;
          goto LABEL_213;
        case 0xD:
          v119 = v63;
          v120 = v219;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v213 + 16))(v219, v41, v171);
          v121 = 13;
          goto LABEL_212;
        case 0xE:
          v119 = v63;
          v120 = v219;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v203 + 16))(v219, v41, v158);
          v121 = 14;
          goto LABEL_212;
        case 0xF:
          v119 = v63;
          v120 = v219;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v202 + 16))(v219, v41, v157);
          v121 = 15;
          goto LABEL_212;
        case 0x10:
          v119 = v63;
          v120 = v219;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v201 + 16))(v219, v41, v156);
          v121 = 16;
          goto LABEL_212;
        case 0x11:
          v119 = v63;
          v120 = v219;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v194 + 16))(v219, v41, v155);
          v121 = 17;
          goto LABEL_212;
        case 0x12:
          v119 = v63;
          v120 = v219;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v193 + 16))(v219, v41, v154);
          v121 = 18;
          goto LABEL_212;
        case 0x13:
          v119 = v63;
          v120 = v219;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 16))(v219, v41, v153);
          v121 = 19;
          goto LABEL_212;
        case 0x14:
          v119 = v63;
          v120 = v219;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v219, v41, v38);
          v121 = 20;
LABEL_212:
          *(_BYTE *)(v120 + v119) = v121;
LABEL_213:
          v118 = 12;
          v117 = v219;
          break;
        default:
          if (v63 <= 3)
            v77 = v63;
          else
            v77 = 4;
          __asm { BR              X13 }
          return result;
      }
LABEL_214:
      *(_BYTE *)(v117 + v70) = v118;
      goto LABEL_186;
    case 0xD:
      v73 = v219;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v214 + 16))(v219, v41, v174);
      v74 = 13;
      goto LABEL_184;
    case 0xE:
      v73 = v219;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v172 + 16))(v219, v41, v173);
      v74 = 14;
LABEL_184:
      *(_BYTE *)(v73 + v70) = v74;
      break;
    case 0xF:
      *(_QWORD *)v219 = *(_QWORD *)v41;
      *(_QWORD *)(v219 + 8) = *(_QWORD *)(v41 + 8);
      v78 = (v55 + v219) & v217;
      v79 = (v55 + v41) & v217;
      v80 = *(void (**)(uint64_t, uint64_t, uint64_t))(v172 + 16);
      sub_21D7C4C20();
      v80(v78, v79, v173);
      *(_BYTE *)(v219 + v70) = 15;
      break;
    default:
      if (v70 <= 3)
        v71 = v70;
      else
        v71 = 4;
      __asm { BR              X13 }
      return result;
  }
  v87 = v175;
LABEL_186:
  v104 = ((v219 | 7) + v70 + 1) & 0xFFFFFFFFFFFFFFF8;
  v105 = ((v69 | 7) + v70 + 1) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v104 = *(_QWORD *)v105;
  *(_QWORD *)(v104 + 8) = *(_QWORD *)(v105 + 8);
  *(_BYTE *)(v104 + 16) = *(_BYTE *)(v105 + 16);
  *(_BYTE *)(v104 + 17) = *(_BYTE *)(v105 + 17);
  sub_21D7C4C20();
  return v87;
}

uint64_t sub_21CE8B308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t *v21;
  __int128 v22;
  __int128 v23;
  const void *v24;
  int EnumTagSinglePayload;
  int v26;
  size_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  int v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unsigned int v98;
  uint64_t v99;
  unsigned int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  unsigned int v117;
  uint64_t v118;
  unsigned int v119;
  uint64_t v120;
  __int128 v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char v134;
  uint64_t v135;
  _QWORD *v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  _QWORD *v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  uint64_t v146;
  char v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  char v152;
  size_t v153;
  uint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  _QWORD *v157;
  _QWORD *v158;
  _QWORD *v159;
  _QWORD *v160;
  _QWORD *v161;
  unint64_t v162;
  unint64_t v163;
  void (*v164)(unint64_t, unint64_t, uint64_t);
  _BYTE *v165;
  unint64_t v166;
  char v167;
  size_t v168;
  size_t v169;
  uint64_t v170;
  unint64_t v171;
  unint64_t v172;
  unint64_t v173;
  unint64_t v174;
  unint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  unint64_t v179;
  unint64_t v180;
  unint64_t v181;
  unint64_t v182;
  uint64_t v183;
  unint64_t v184;
  unint64_t v185;
  unint64_t v186;
  unint64_t v187;
  unint64_t v188;
  unint64_t v189;
  unint64_t v190;
  unint64_t v191;
  unint64_t v192;
  uint64_t result;
  _QWORD *v194;
  _QWORD *v195;
  _QWORD *v196;
  _QWORD *v197;
  _QWORD *v198;
  _QWORD *v199;
  unint64_t v200;
  unint64_t v201;
  void (*v202)(unint64_t, unint64_t, uint64_t);
  _BYTE *v203;
  _QWORD *v204;
  _QWORD *v205;
  _QWORD *v206;
  _QWORD *v207;
  _QWORD *v208;
  _QWORD *v209;
  _QWORD *v210;
  _QWORD *v211;
  _QWORD *v212;
  _QWORD *v213;
  unint64_t v214;
  unint64_t v215;
  void (*v216)(unint64_t, unint64_t, uint64_t);
  _BYTE *v217;
  uint64_t v218;
  uint64_t v219;
  unint64_t v220;
  uint64_t v221;
  size_t __n;
  uint64_t v223;
  unint64_t v224;
  unint64_t v225;
  unint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  unint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  int v253;
  int v254;
  int v255;
  unint64_t v256;
  int v257;
  unint64_t v258;
  int v259;
  unint64_t v260;
  int v261;
  unint64_t v262;
  int v263;
  uint64_t v264;
  int v265;
  uint64_t v266;
  int v267;
  unint64_t v268;
  int v269;
  unint64_t v270;
  int v271;
  unint64_t v272;
  int v273;
  uint64_t v274;
  unint64_t v275;
  uint64_t v276;
  unint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  void (*v292)(uint64_t, uint64_t, uint64_t);
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  unint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v278 = a1;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  v9 = v8 + 2;
  v10 = v8[3];
  if (v7[3] >> 60 == 15)
  {
    if (v10 >> 60 != 15)
    {
      v11 = *v9;
      sub_21CDDB488(*v9, v8[3]);
      v7[2] = v11;
      v7[3] = v10;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v10 >> 60 == 15)
  {
    sub_21CDE9E7C((uint64_t)(v7 + 2));
LABEL_6:
    *((_OWORD *)v7 + 1) = *(_OWORD *)v9;
    goto LABEL_8;
  }
  v12 = *v9;
  sub_21CDDB488(*v9, v8[3]);
  v13 = v7[2];
  v14 = v7[3];
  v7[2] = v12;
  v7[3] = v10;
  sub_21CDDB4E0(v13, v14);
LABEL_8:
  v15 = sub_21D7BF754();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = ((unint64_t)v7 + (v17 | 7) + 32) & ~(v17 | 7);
  v19 = ((unint64_t)v8 + (v17 | 7) + 32) & ~(v17 | 7);
  v20 = *(_QWORD *)(v19 + 0x18);
  if (*(_QWORD *)(v18 + 0x18) < 0xFFFFFFFFuLL)
  {
    if (v20 >= 0xFFFFFFFF)
    {
      *(_QWORD *)((((unint64_t)v7 + (v17 | 7) + 32) & ~(v17 | 7)) + 0x18) = v20;
      *(_QWORD *)((((unint64_t)v7 + (v17 | 7) + 32) & ~(v17 | 7)) + 0x20) = *(_QWORD *)((((unint64_t)v8
                                                                                               + (v17 | 7)
                                                                                               + 32) & ~(v17 | 7))
                                                                                             + 0x20);
      (**(void (***)(uint64_t, uint64_t))(v20 - 8))(((unint64_t)v7 + (v17 | 7) + 32) & ~(v17 | 7), ((unint64_t)v8 + (v17 | 7) + 32) & ~(v17 | 7));
      goto LABEL_15;
    }
  }
  else
  {
    v21 = (uint64_t *)(((unint64_t)v7 + (v17 | 7) + 32) & ~(v17 | 7));
    if (v20 >= 0xFFFFFFFF)
    {
      __swift_assign_boxed_opaque_existential_1(v21, (uint64_t *)(((unint64_t)v8 + (v17 | 7) + 32) & ~(v17 | 7)));
      goto LABEL_15;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  }
  v22 = *(_OWORD *)v19;
  v23 = *(_OWORD *)((((unint64_t)v8 + (v17 | 7) + 32) & ~(v17 | 7)) + 0x10);
  *(_QWORD *)((((unint64_t)v7 + (v17 | 7) + 32) & ~(v17 | 7)) + 0x20) = *(_QWORD *)((((unint64_t)v8
                                                                                           + (v17 | 7)
                                                                                           + 32) & ~(v17 | 7))
                                                                                         + 0x20);
  *(_OWORD *)v18 = v22;
  *(_OWORD *)((((unint64_t)v7 + (v17 | 7) + 32) & ~(v17 | 7)) + 0x10) = v23;
LABEL_15:
  v276 = ((unint64_t)v8 + (v17 | 7) + 32) & ~(v17 | 7);
  v24 = (const void *)((v17 + 40 + v19) & ~v17);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((v17 + 40 + v18) & ~v17, 1, v15);
  v26 = __swift_getEnumTagSinglePayload((uint64_t)v24, 1, v15);
  v301 = v17;
  v251 = v15;
  v279 = ((unint64_t)v7 + (v17 | 7) + 32) & ~(v17 | 7);
  if (EnumTagSinglePayload)
  {
    if (!v26)
    {
      (*(void (**)(uint64_t, const void *, uint64_t))(v16 + 16))((v17 + 40 + v18) & ~v17, v24, v15);
      __swift_storeEnumTagSinglePayload((v17 + 40 + v18) & ~v17, 0, 1, v15);
      goto LABEL_24;
    }
  }
  else
  {
    if (!v26)
    {
      (*(void (**)(uint64_t, const void *, uint64_t))(v16 + 24))((v17 + 40 + v18) & ~v17, v24, v15);
      goto LABEL_24;
    }
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))((v17 + 40 + v18) & ~v17, v15);
  }
  if (*(_DWORD *)(v16 + 84))
    v27 = *(_QWORD *)(v16 + 64);
  else
    v27 = *(_QWORD *)(v16 + 64) + 1;
  memcpy((void *)((v17 + 40 + v18) & ~v17), v24, v27);
LABEL_24:
  v250 = v16;
  v298 = *(_QWORD *)(v16 + 64);
  v28 = v298 + ((v17 + 40) & ~v17);
  if (!*(_DWORD *)(v16 + 84))
    ++v28;
  v274 = v28;
  v245 = sub_21D7C37A4();
  v299 = *(_QWORD *)(v245 - 8);
  v273 = *(_DWORD *)(v299 + 80);
  v244 = sub_21D7C06C0();
  v300 = *(_QWORD *)(v244 - 8);
  v271 = *(_DWORD *)(v300 + 80);
  v246 = sub_21D7C3660();
  v293 = *(_QWORD *)(v246 - 8);
  v269 = *(_DWORD *)(v293 + 80);
  v252 = sub_21D7C3B58();
  v304 = *(_QWORD *)(v252 - 8);
  v267 = *(_DWORD *)(v304 + 80);
  v247 = sub_21D7C3564();
  v303 = *(_QWORD *)(v247 - 8);
  v265 = *(_DWORD *)(v303 + 80);
  v242 = sub_21D7C30FC();
  v29 = *(_QWORD *)(v242 - 8);
  v263 = *(_DWORD *)(v29 + 80);
  v241 = sub_21D7C03CC();
  v282 = *(_QWORD *)(v241 - 8);
  v261 = *(_DWORD *)(v282 + 80);
  v243 = sub_21D7C3840();
  v281 = *(_QWORD *)(v243 - 8);
  v259 = *(_DWORD *)(v281 + 80);
  v240 = sub_21D7C38B8();
  v286 = *(_QWORD *)(v240 - 8);
  v257 = *(_DWORD *)(v286 + 80);
  v239 = sub_21D7C045C();
  v285 = *(_QWORD *)(v239 - 8);
  v255 = *(_DWORD *)(v285 + 80);
  v238 = sub_21D7C36C0();
  v284 = *(_QWORD *)(v238 - 8);
  v253 = *(_DWORD *)(v284 + 80);
  v237 = sub_21D7C0180();
  v283 = *(_QWORD *)(v237 - 8);
  v30 = *(_DWORD *)(v283 + 80);
  v236 = sub_21D7C3BAC();
  v287 = *(_QWORD *)(v236 - 8);
  v31 = *(_DWORD *)(v287 + 80);
  v235 = sub_21D7C33F0();
  v288 = *(_QWORD *)(v235 - 8);
  v32 = *(_DWORD *)(v288 + 80);
  v234 = sub_21D7C396C();
  v302 = ~v17;
  v291 = *(_QWORD *)(v234 - 8);
  v33 = *(_DWORD *)(v291 + 80);
  v233 = sub_21D7C3738();
  v290 = *(_QWORD *)(v233 - 8);
  v34 = *(_DWORD *)(v290 + 80);
  v232 = sub_21D7C07A4();
  v289 = *(_QWORD *)(v232 - 8);
  v35 = *(_DWORD *)(v289 + 80);
  v231 = sub_21D7C0720();
  v297 = *(_QWORD *)(v231 - 8);
  v36 = *(_DWORD *)(v297 + 80);
  v230 = sub_21D7C0690();
  v296 = *(_QWORD *)(v230 - 8);
  v37 = *(_DWORD *)(v296 + 80);
  v229 = sub_21D7C0528();
  v295 = *(_QWORD *)(v229 - 8);
  v38 = *(_DWORD *)(v295 + 80);
  v39 = sub_21D7C0594();
  v40 = *(_QWORD *)(v39 - 8);
  v41 = v301;
  v42 = v301 | ((v271 | v273 | v269 | v267 | v265 | v263 | v261 | v259 | v257 | v255 | v253 | v30 | v31 | v32 | v33 | v34) | (v35 | v36 | v37 | v38 | *(_DWORD *)(v40 + 80))) & 0xF8 | 7;
  v43 = (v274 + v42 + v279) & ~v42;
  v44 = (v274 + v42 + v276) & ~v42;
  v280 = v44;
  v294 = v40;
  if (v43 != v44)
  {
    v221 = v39;
    v45 = *(_QWORD *)(v299 + 64);
    v46 = *(_QWORD *)(v300 + 64);
    v47 = v293;
    v48 = *(_QWORD *)(v293 + 64);
    v49 = *(_QWORD *)(v304 + 64);
    v50 = *(_QWORD *)(v303 + 64);
    if (v48 <= v50)
      v51 = *(_QWORD *)(v303 + 64);
    else
      v51 = *(_QWORD *)(v293 + 64);
    v52 = 16;
    if (v51 <= 0x10)
      v53 = 16;
    else
      v53 = v51;
    if (v49 > 0x10)
      v52 = *(_QWORD *)(v304 + 64);
    v227 = v52 + 1;
    v228 = v52;
    v54 = (v52 & 0xFFFFFFFFFFFFFFF8) + 24;
    if (v50 <= v49)
      v55 = *(_QWORD *)(v304 + 64);
    else
      v55 = *(_QWORD *)(v303 + 64);
    v56 = *(_QWORD *)(v29 + 64);
    if (v56 > v55)
      v55 = *(_QWORD *)(v29 + 64);
    if (v48 <= v55)
      v57 = v55;
    else
      v57 = *(_QWORD *)(v293 + 64);
    v58 = *(_QWORD *)(v282 + 64);
    v256 = v58;
    if (v58 <= v49)
      v58 = *(_QWORD *)(v304 + 64);
    if (v50 > v58)
      v58 = *(_QWORD *)(v303 + 64);
    v254 = *(_DWORD *)(v281 + 84);
    v249 = *(_QWORD *)(v281 + 64);
    if (v254)
      v59 = *(_QWORD *)(v281 + 64);
    else
      v59 = *(_QWORD *)(v281 + 64) + 1;
    __n = v59;
    v60 = ((v301
          + 16
          + ((((((v59 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v302)
        + v298;
    v61 = v60 + 2;
    if (v60 + 2 <= v58)
      v62 = v58;
    else
      v62 = v60 + 2;
    if (v45 <= v48)
      v45 = *(_QWORD *)(v293 + 64);
    if (v46 <= v45)
      v63 = v45;
    else
      v63 = *(_QWORD *)(v300 + 64);
    v248 = *(_QWORD *)(v286 + 64);
    if (v248 > v63)
      v63 = *(_QWORD *)(v286 + 64);
    v64 = *(_QWORD *)(v285 + 64);
    if (v64 > v63)
      v63 = *(_QWORD *)(v285 + 64);
    if (((((v60 + 9) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > v63)
      v63 = ((((v60 + 9) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    v65 = *(_QWORD *)(v284 + 64);
    if (v65 > v63)
      v63 = *(_QWORD *)(v284 + 64);
    v66 = *(_QWORD *)(v283 + 64);
    if (v66 > v63)
      v63 = *(_QWORD *)(v283 + 64);
    if (v56 > v63)
      v63 = *(_QWORD *)(v29 + 64);
    if (v49 > v63)
      v63 = *(_QWORD *)(v304 + 64);
    v67 = *(_QWORD *)(v287 + 64);
    if (v67 > v63)
      v63 = *(_QWORD *)(v287 + 64);
    v260 = *(_QWORD *)(v288 + 64);
    if (v260 > v63)
      v63 = *(_QWORD *)(v288 + 64);
    if (v61 > v63)
      v63 = v60 + 2;
    if (v50 > v63)
      v63 = *(_QWORD *)(v303 + 64);
    v262 = *(_QWORD *)(v291 + 64);
    if (v262 > v63)
      v63 = *(_QWORD *)(v291 + 64);
    if (*(_QWORD *)(v290 + 64) > v63)
      v63 = *(_QWORD *)(v290 + 64);
    v258 = *(_QWORD *)(v289 + 64);
    if (v258 > v63)
      v63 = *(_QWORD *)(v289 + 64);
    if (*(_QWORD *)(v297 + 64) > v63)
      v63 = *(_QWORD *)(v297 + 64);
    if (*(_QWORD *)(v296 + 64) > v63)
      v63 = *(_QWORD *)(v296 + 64);
    if (*(_QWORD *)(v295 + 64) > v63)
      v63 = *(_QWORD *)(v295 + 64);
    v68 = *(_QWORD *)(v40 + 64);
    if (v68 <= v63)
      v68 = v63;
    v225 = v57;
    v226 = v62;
    if (v49 <= (v53 & 0xFFFFFFFFFFFFFFF8) + 24)
      v49 = (v53 & 0xFFFFFFFFFFFFFFF8) + 24;
    if (v54 <= ((v227 + v301) & v302) + v298)
      v54 = ((v227 + v301) & v302) + v298;
    v264 = v301 + 16;
    v69 = v298 + ((v301 + 16) & v302);
    if (v57 + 1 <= v62 + 1)
      v70 = v62 + 1;
    else
      v70 = v57 + 1;
    v224 = v68;
    if (v68 + 1 > v69)
      v71 = v68 + 1;
    else
      v71 = v298 + ((v301 + 16) & v302);
    if (v46 <= v298)
      v46 = v298;
    if (v49 <= v54)
      v49 = v54;
    if (v70 > v71)
      v71 = v70;
    if (v50 <= v45)
      v50 = v45;
    if (v49 <= v71)
      v49 = v71;
    if (v50 <= v46)
      v50 = v46;
    if (v50 <= v49)
      v50 = v49;
    if (v50 <= 0x11)
      v72 = 17;
    else
      v72 = v50;
    v223 = v53 + 1;
    v275 = *(_QWORD *)(v285 + 64);
    v270 = *(_QWORD *)(v283 + 64);
    v272 = *(_QWORD *)(v284 + 64);
    v266 = v72;
    v268 = *(_QWORD *)(v287 + 64);
    v277 = *(_QWORD *)(v290 + 64);
    switch(*(_BYTE *)(v43 + v72))
    {
      case 0:
        v96 = v53;
        swift_bridgeObjectRelease();
        break;
      case 1:
LABEL_186:
        v93 = *(void (**)(uint64_t, uint64_t))(v299 + 8);
        v94 = v43;
        v95 = v245;
        goto LABEL_188;
      case 2:
LABEL_187:
        v93 = *(void (**)(uint64_t, uint64_t))(v300 + 8);
        v94 = v43;
        v95 = v244;
        goto LABEL_188;
      case 3:
LABEL_185:
        v93 = *(void (**)(uint64_t, uint64_t))(v293 + 8);
        v94 = v43;
        v95 = v246;
        goto LABEL_188;
      case 4:
      case 0xD:
LABEL_128:
        v93 = *(void (**)(uint64_t, uint64_t))(v304 + 8);
        v94 = v43;
        v95 = v252;
        goto LABEL_188;
      case 5:
        switch(*(_BYTE *)(v43 + v53))
        {
          case 0:
            v105 = v53;
            (*(void (**)(uint64_t, uint64_t))(v293 + 8))(v43, v246);
            break;
          case 1:
          case 3:
            v105 = v53;
            swift_bridgeObjectRelease();
            break;
          case 2:
            v105 = v53;
            (*(void (**)(uint64_t, uint64_t))(v303 + 8))(v43, v247);
            break;
          default:
            if (v53 <= 3)
              v97 = v53;
            else
              v97 = 4;
            __asm { BR              X12 }
            return result;
        }
        goto LABEL_166;
      case 6:
        v98 = *(unsigned __int8 *)(v43 + v228);
        if (v98 >= 2)
        {
          if (v228 <= 3)
            v99 = v228;
          else
            v99 = 4;
          __asm { BR              X12 }
        }
        v105 = v53;
        if (v98 == 1)
          swift_bridgeObjectRelease();
        else
          (*(void (**)(uint64_t, uint64_t))(v304 + 8))(v43, v252);
LABEL_166:
        swift_bridgeObjectRelease();
        goto LABEL_176;
      case 7:
        v100 = *(unsigned __int8 *)(v43 + v228);
        if (v100 >= 2)
        {
          if (v228 <= 3)
            v101 = v228;
          else
            v101 = 4;
          __asm { BR              X12 }
        }
        v105 = v53;
        if (v100 == 1)
          swift_bridgeObjectRelease();
        else
          (*(void (**)(uint64_t, uint64_t))(v304 + 8))(v43, v252);
        (*(void (**)(uint64_t, uint64_t))(v250 + 8))((v43 + v301 + v227) & v302, v251);
        goto LABEL_176;
      case 8:
        goto LABEL_194;
      case 9:
        v105 = v53;
        switch(*(_BYTE *)(v43 + v57))
        {
          case 0:
            (*(void (**)(uint64_t, uint64_t))(v304 + 8))(v43, v252);
            break;
          case 1:
            (*(void (**)(uint64_t, uint64_t))(v303 + 8))(v43, v247);
            break;
          case 2:
            (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v43, v242);
            break;
          case 3:
            (*(void (**)(uint64_t, uint64_t))(v293 + 8))(v43, v246);
            break;
          default:
            if (v57 <= 3)
              v102 = v57;
            else
              v102 = 4;
            __asm { BR              X12 }
            return result;
        }
LABEL_176:
        v40 = v294;
        v69 = v298 + ((v301 + 16) & v302);
        v64 = v275;
        v66 = v270;
        v65 = v272;
        v72 = v266;
        v67 = v268;
        v53 = v105;
        goto LABEL_194;
      case 0xA:
LABEL_178:
        v93 = *(void (**)(uint64_t, uint64_t))(v303 + 8);
        v94 = v43;
        v95 = v247;
        goto LABEL_188;
      case 0xB:
        switch(*(_BYTE *)(v43 + v62))
        {
          case 0:
            goto LABEL_128;
          case 1:
            v93 = *(void (**)(uint64_t, uint64_t))(v282 + 8);
            v94 = v43;
            v95 = v241;
            goto LABEL_188;
          case 2:
          case 3:
            goto LABEL_178;
          case 4:
            v218 = v53;
            if (!__swift_getEnumTagSinglePayload(v43, 1, v243))
              (*(void (**)(uint64_t, uint64_t))(v281 + 8))(v43, v243);
            goto LABEL_182;
          default:
            if (v62 <= 3)
              v103 = v62;
            else
              v103 = 4;
            __asm { BR              X12 }
            return result;
        }
      case 0xC:
        switch(*(_BYTE *)(v43 + v68))
        {
          case 0:
            goto LABEL_185;
          case 1:
            goto LABEL_186;
          case 2:
            goto LABEL_187;
          case 3:
            v93 = *(void (**)(uint64_t, uint64_t))(v286 + 8);
            v94 = v43;
            v95 = v240;
            goto LABEL_188;
          case 4:
            v93 = *(void (**)(uint64_t, uint64_t))(v285 + 8);
            v94 = v43;
            v95 = v239;
            goto LABEL_188;
          case 5:
            v218 = v53;
            if (!__swift_getEnumTagSinglePayload(v43, 1, v243))
              (*(void (**)(uint64_t, uint64_t))(v281 + 8))(v43, v243);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            (*(void (**)(size_t, uint64_t))(v250 + 8))((v264+ (((((((v43 | 7) + __n) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v302, v251);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v47 = v293;
            v40 = v294;
            v69 = v298 + ((v301 + 16) & v302);
            v64 = v275;
            v66 = v270;
            v65 = v272;
            v72 = v266;
            v67 = v268;
            goto LABEL_183;
          case 6:
            v93 = *(void (**)(uint64_t, uint64_t))(v284 + 8);
            v94 = v43;
            v95 = v238;
            goto LABEL_188;
          case 7:
            v93 = *(void (**)(uint64_t, uint64_t))(v283 + 8);
            v94 = v43;
            v95 = v237;
            goto LABEL_188;
          case 8:
            v93 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
            v94 = v43;
            v95 = v242;
            goto LABEL_188;
          case 9:
            goto LABEL_128;
          case 0xA:
            v93 = *(void (**)(uint64_t, uint64_t))(v287 + 8);
            v94 = v43;
            v95 = v236;
            goto LABEL_188;
          case 0xB:
            v93 = *(void (**)(uint64_t, uint64_t))(v288 + 8);
            v94 = v43;
            v95 = v235;
            goto LABEL_188;
          case 0xC:
            v218 = v53;
            if (!__swift_getEnumTagSinglePayload(v43, 1, v243))
              (*(void (**)(uint64_t, uint64_t))(v281 + 8))(v43, v243);
LABEL_182:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            (*(void (**)(size_t, uint64_t))(v250 + 8))((v264+ (((((((v43 | 7) + __n) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v302, v251);
            v47 = v293;
            v40 = v294;
            v69 = v298 + ((v301 + 16) & v302);
            v64 = v275;
            v66 = v270;
            v65 = v272;
            v72 = v266;
            v67 = v268;
LABEL_183:
            v53 = v218;
            goto LABEL_194;
          case 0xD:
            goto LABEL_178;
          case 0xE:
            v93 = *(void (**)(uint64_t, uint64_t))(v291 + 8);
            v94 = v43;
            v95 = v234;
            goto LABEL_188;
          case 0xF:
            v93 = *(void (**)(uint64_t, uint64_t))(v290 + 8);
            v94 = v43;
            v95 = v233;
            goto LABEL_188;
          case 0x10:
            v93 = *(void (**)(uint64_t, uint64_t))(v289 + 8);
            v94 = v43;
            v95 = v232;
            goto LABEL_188;
          case 0x11:
            v93 = *(void (**)(uint64_t, uint64_t))(v297 + 8);
            v94 = v43;
            v95 = v231;
            goto LABEL_188;
          case 0x12:
            v93 = *(void (**)(uint64_t, uint64_t))(v296 + 8);
            v94 = v43;
            v95 = v230;
            goto LABEL_188;
          case 0x13:
            v93 = *(void (**)(uint64_t, uint64_t))(v295 + 8);
            v94 = v43;
            v95 = v229;
            goto LABEL_188;
          case 0x14:
            v93 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
            v94 = v43;
            v95 = v221;
            goto LABEL_188;
          default:
            if (v68 <= 3)
              v104 = v68;
            else
              v104 = 4;
            __asm { BR              X12 }
            return result;
        }
      case 0xE:
        v95 = v251;
        v93 = *(void (**)(uint64_t, uint64_t))(v250 + 8);
        v94 = v43;
LABEL_188:
        v96 = v53;
        v93(v94, v95);
        break;
      case 0xF:
        v96 = v53;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v250 + 8))((v264 + v43) & v302, v251);
        break;
      default:
        if (v72 <= 3)
          v73 = v72;
        else
          v73 = 4;
        __asm { BR              X12 }
        return result;
    }
    v53 = v96;
    v72 = v266;
    v67 = v268;
    v66 = v270;
    v65 = v272;
    v69 = v298 + ((v301 + 16) & v302);
    v64 = v275;
    v40 = v294;
LABEL_194:
    v89 = v47;
    switch(*(_BYTE *)(v44 + v72))
    {
      case 0:
        *(_QWORD *)v43 = *(_QWORD *)v44;
        *(_QWORD *)(v43 + 8) = *(_QWORD *)(v44 + 8);
        *(_BYTE *)(v43 + v72) = 0;
        sub_21D7C4C20();
        v67 = v268;
        v66 = v270;
        v65 = v272;
        v69 = v298 + ((v301 + 16) & v302);
        v64 = v275;
        goto LABEL_232;
      case 1:
        v107 = v43;
        v108 = v72;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v299 + 16))(v43, v44, v245, v40);
        v86 = v299;
        v67 = v268;
        v66 = v270;
        v65 = v272;
        v69 = v298 + ((v301 + 16) & v302);
        v64 = v275;
        *(_BYTE *)(v43 + v108) = 1;
        v75 = v256;
        v87 = v258;
        v84 = v302;
        v83 = v303;
        v41 = v301;
        v76 = v254;
        v78 = v248;
        v77 = v249;
        v74 = v56;
        v79 = v260;
        v80 = v262;
        v81 = v107;
        v82 = v301 + 16;
        v92 = v296;
        v91 = v297;
        v85 = v298;
        v90 = v304;
        goto LABEL_323;
      case 2:
        v109 = v43;
        v110 = v72;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v300 + 16))(v43, v44, v244, v40);
        v67 = v268;
        v66 = v270;
        v65 = v272;
        v69 = v298 + ((v301 + 16) & v302);
        v64 = v275;
        *(_BYTE *)(v43 + v110) = 2;
        v88 = v300;
        v75 = v256;
        v87 = v258;
        v84 = v302;
        v83 = v303;
        v41 = v301;
        v76 = v254;
        v78 = v248;
        v77 = v249;
        v74 = v56;
        v79 = v260;
        v80 = v262;
        v81 = v109;
        v82 = v301 + 16;
        v92 = v296;
        v91 = v297;
        v85 = v298;
        v86 = v299;
        v90 = v304;
        goto LABEL_324;
      case 3:
        v111 = v72;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 16))(v43, v44, v246, v40);
        v67 = v268;
        v66 = v270;
        v65 = v272;
        v69 = v298 + ((v301 + 16) & v302);
        v64 = v275;
        v112 = 3;
        goto LABEL_231;
      case 4:
        v113 = v43;
        v114 = v72;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v304 + 16))(v43, v44, v252, v40);
        v90 = v304;
        v67 = v268;
        v66 = v270;
        v65 = v272;
        v69 = v298 + ((v301 + 16) & v302);
        v64 = v275;
        v115 = 4;
        goto LABEL_229;
      case 5:
        v84 = v302;
        switch(*(_BYTE *)(v44 + v53))
        {
          case 0:
            v74 = v56;
            v131 = v258;
            v79 = v260;
            v80 = v262;
            v132 = v53;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 16))(v43, v44, v246, v40);
            v133 = v266;
            *(_BYTE *)(v43 + v132) = 0;
            goto LABEL_242;
          case 1:
            v74 = v56;
            v131 = v258;
            v79 = v260;
            v80 = v262;
            *(_QWORD *)v43 = *(_QWORD *)v44;
            *(_QWORD *)(v43 + 8) = *(_QWORD *)(v44 + 8);
            v134 = 1;
            goto LABEL_241;
          case 2:
            v74 = v56;
            v131 = v258;
            v79 = v260;
            v80 = v262;
            v135 = v53;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v303 + 16))(v43, v44, v247, v40);
            v133 = v266;
            *(_BYTE *)(v43 + v135) = 2;
            goto LABEL_242;
          case 3:
            v74 = v56;
            v131 = v258;
            v79 = v260;
            v80 = v262;
            *(_QWORD *)v43 = *(_QWORD *)v44;
            *(_QWORD *)(v43 + 8) = *(_QWORD *)(v44 + 8);
            v134 = 3;
LABEL_241:
            *(_BYTE *)(v43 + v53) = v134;
            sub_21D7C4C20();
            v133 = v266;
LABEL_242:
            v136 = (_QWORD *)(((v43 | 7) + v223) & 0xFFFFFFFFFFFFFFF8);
            v137 = (_QWORD *)(((v44 | 7) + v223) & 0xFFFFFFFFFFFFFFF8);
            *v136 = *v137;
            v136[1] = v137[1];
            *(_BYTE *)(v43 + v133) = 5;
            sub_21D7C4C20();
            v75 = v256;
            v76 = v254;
            v87 = v131;
            v78 = v248;
            v77 = v249;
            v69 = v298 + ((v301 + 16) & v302);
            v64 = v275;
            v66 = v270;
            v65 = v272;
            v67 = v268;
            v81 = v43;
            v82 = v301 + 16;
            v92 = v296;
            v85 = v298;
            v90 = v304;
            v83 = v303;
            break;
          default:
            if (v53 <= 3)
              v116 = v53;
            else
              v116 = 4;
            __asm { BR              X12 }
            return result;
        }
        goto LABEL_247;
      case 6:
        v117 = *(unsigned __int8 *)(v44 + v228);
        if (v117 >= 2)
        {
          if (v228 <= 3)
            v118 = v228;
          else
            v118 = 4;
          __asm { BR              X12 }
        }
        v84 = v302;
        v74 = v56;
        v87 = v258;
        v79 = v260;
        v80 = v262;
        if (v117 == 1)
        {
          *(_QWORD *)v43 = *(_QWORD *)v44;
          *(_QWORD *)(v43 + 8) = *(_QWORD *)(v44 + 8);
          sub_21D7C4C20();
          v138 = v228;
          v139 = v266;
          v140 = 1;
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v304 + 16))(v43, v44, v252, v40);
          v138 = v228;
          v139 = v266;
          v140 = 0;
        }
        *(_BYTE *)(v43 + v138) = v140;
        v141 = (_QWORD *)(((v43 | 7) + v227) & 0xFFFFFFFFFFFFFFF8);
        v142 = (_QWORD *)(((v44 | 7) + v227) & 0xFFFFFFFFFFFFFFF8);
        *v141 = *v142;
        v141[1] = v142[1];
        *(_BYTE *)(v43 + v139) = 6;
        sub_21D7C4C20();
        v75 = v256;
        v76 = v254;
        v78 = v248;
        v77 = v249;
        v69 = v298 + ((v301 + 16) & v302);
        v64 = v275;
        v66 = v270;
        v65 = v272;
        v67 = v268;
        v81 = v43;
        v82 = v301 + 16;
        v92 = v296;
        v85 = v298;
        v83 = v303;
        v90 = v304;
LABEL_247:
        v91 = v297;
        v86 = v299;
        v88 = v300;
        v89 = v293;
        v130 = v295;
        v41 = v301;
        goto LABEL_325;
      case 7:
        v119 = *(unsigned __int8 *)(v44 + v228);
        if (v119 >= 2)
        {
          if (v228 <= 3)
            v120 = v228;
          else
            v120 = 4;
          __asm { BR              X12 }
        }
        v84 = v302;
        v74 = v56;
        v87 = v258;
        v79 = v260;
        v80 = v262;
        if (v119 == 1)
        {
          *(_QWORD *)v43 = *(_QWORD *)v44;
          *(_QWORD *)(v43 + 8) = *(_QWORD *)(v44 + 8);
          sub_21D7C4C20();
          v143 = v301;
          v144 = v228;
          v145 = 1;
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v304 + 16))(v43, v44, v252, v40);
          v143 = v301;
          v144 = v228;
          v145 = 0;
        }
        *(_BYTE *)(v43 + v144) = v145;
        v146 = v143;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v250 + 16))((v43 + v143 + v227) & v302, (v44 + v143 + v227) & v302, v251);
        v41 = v146;
        v67 = v268;
        *(_BYTE *)(v43 + v266) = 7;
        v75 = v256;
        v76 = v254;
        v78 = v248;
        v77 = v249;
        v69 = v298 + ((v301 + 16) & v302);
        v64 = v275;
        v66 = v270;
        v65 = v272;
        v81 = v43;
        v82 = v301 + 16;
        v92 = v296;
        v91 = v297;
        v85 = v298;
        v86 = v299;
        v83 = v303;
        v90 = v304;
        goto LABEL_322;
      case 8:
        v121 = *(_OWORD *)v44;
        *(_BYTE *)(v43 + 16) = *(_BYTE *)(v44 + 16);
        *(_OWORD *)v43 = v121;
        *(_BYTE *)(v43 + v72) = 8;
        v75 = v256;
        v87 = v258;
        v122 = v43;
        v84 = v302;
        v83 = v303;
        v41 = v301;
        v76 = v254;
        v78 = v248;
        v77 = v249;
        v74 = v56;
        v79 = v260;
        v80 = v262;
        v81 = v122;
        goto LABEL_258;
      case 9:
        v147 = 0;
        v84 = v302;
        v74 = v56;
        v79 = v260;
        v80 = v262;
        v148 = v304;
        switch(*(_BYTE *)(v44 + v225))
        {
          case 0:
            goto LABEL_257;
          case 1:
            v147 = 1;
            v148 = v303;
            v149 = v247;
            goto LABEL_256;
          case 2:
            v147 = 2;
            v148 = v29;
            v149 = v242;
            goto LABEL_256;
          case 3:
            v147 = 3;
            v148 = v47;
            v149 = v246;
LABEL_256:
            v252 = v149;
LABEL_257:
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v148 + 16))(v43, v44, v252, v40);
            *(_BYTE *)(v43 + v225) = v147;
            v67 = v268;
            *(_BYTE *)(v43 + v266) = 9;
            v81 = v43;
            v83 = v303;
            v41 = v301;
            v75 = v256;
            v76 = v254;
            v87 = v258;
            v78 = v248;
            v77 = v249;
            v69 = v298 + ((v301 + 16) & v302);
            v64 = v275;
            v66 = v270;
            v65 = v272;
            break;
          default:
            if (v225 <= 3)
              v123 = v225;
            else
              v123 = 4;
            __asm { BR              X12 }
            return result;
        }
        goto LABEL_258;
      case 0xA:
        v124 = v43;
        v83 = v303;
        v125 = v72;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v303 + 16))(v124, v44, v247, v40);
        v67 = v268;
        v66 = v270;
        v65 = v272;
        v69 = v298 + ((v301 + 16) & v302);
        v64 = v275;
        *(_BYTE *)(v124 + v125) = 10;
        v75 = v256;
        v87 = v258;
        v41 = v301;
        v84 = v302;
        v76 = v254;
        v78 = v248;
        v77 = v249;
        v74 = v56;
        v79 = v260;
        v80 = v262;
        v81 = v124;
        goto LABEL_258;
      case 0xB:
        v220 = v56;
        switch(*(_BYTE *)(v44 + v226))
        {
          case 0:
            v150 = v258;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v304 + 16))(v43, v44, v252, v40);
            v41 = v301;
            v151 = v266;
            v67 = v268;
            v90 = v304;
            v66 = v270;
            v65 = v272;
            v69 = v298 + ((v301 + 16) & v302);
            v64 = v275;
            v152 = 0;
            v75 = v256;
            v76 = v254;
            v78 = v248;
            v77 = v249;
            goto LABEL_273;
          case 1:
            v150 = v258;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v282 + 16))(v43, v44, v241, v40);
            v41 = v301;
            v151 = v266;
            v67 = v268;
            v66 = v270;
            v65 = v272;
            v69 = v298 + ((v301 + 16) & v302);
            v64 = v275;
            v152 = 1;
            goto LABEL_265;
          case 2:
            v150 = v258;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v303 + 16))(v43, v44, v247, v40);
            v41 = v301;
            v151 = v266;
            v67 = v268;
            v66 = v270;
            v65 = v272;
            v69 = v298 + ((v301 + 16) & v302);
            v64 = v275;
            v152 = 2;
            goto LABEL_265;
          case 3:
            v150 = v258;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v303 + 16))(v43, v44, v247, v40);
            v41 = v301;
            v151 = v266;
            v67 = v268;
            v66 = v270;
            v65 = v272;
            v69 = v298 + ((v301 + 16) & v302);
            v64 = v275;
            v152 = 3;
LABEL_265:
            v75 = v256;
            v76 = v254;
            v78 = v248;
            v77 = v249;
            break;
          case 4:
            v150 = v258;
            if (__swift_getEnumTagSinglePayload(v44, 1, v243))
            {
              v153 = __n;
              memcpy((void *)v43, (const void *)v44, __n);
              v154 = v302;
            }
            else
            {
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v281 + 16))(v43, v44, v243);
              __swift_storeEnumTagSinglePayload(v43, 0, 1, v243);
              v154 = v302;
              v153 = __n;
            }
            v156 = (_QWORD *)(((v43 | 7) + v153) & 0xFFFFFFFFFFFFFFF8);
            v157 = (_QWORD *)(((v44 | 7) + v153) & 0xFFFFFFFFFFFFFFF8);
            *v156 = *v157;
            v156[1] = v157[1];
            v158 = (_QWORD *)(((unint64_t)v156 + 23) & 0xFFFFFFFFFFFFFFF8);
            v159 = (_QWORD *)(((unint64_t)v157 + 23) & 0xFFFFFFFFFFFFFFF8);
            *v158 = *v159;
            v158[1] = v159[1];
            v160 = (_QWORD *)(((unint64_t)v158 + 23) & 0xFFFFFFFFFFFFFFF8);
            v161 = (_QWORD *)(((unint64_t)v159 + 23) & 0xFFFFFFFFFFFFFFF8);
            *v160 = *v161;
            v160[1] = v161[1];
            v162 = ((unint64_t)v160 + v264) & v154;
            v163 = ((unint64_t)v161 + v264) & v154;
            v164 = *(void (**)(unint64_t, unint64_t, uint64_t))(v250 + 16);
            sub_21D7C4C20();
            sub_21D7C4C20();
            sub_21D7C4C20();
            v164(v162, v163, v251);
            v165 = (_BYTE *)(v162 + v298);
            *v165 = *(_BYTE *)(v163 + v298);
            v165[1] = *(_BYTE *)(v163 + v298 + 1);
            v152 = 4;
            v41 = v301;
            v75 = v256;
            v76 = v254;
            v78 = v248;
            v77 = v249;
            v69 = v298 + ((v301 + 16) & v302);
            v64 = v275;
            v66 = v270;
            v65 = v272;
            v151 = v266;
            v67 = v268;
            break;
          default:
            if (v226 <= 3)
              v126 = v226;
            else
              v126 = 4;
            __asm { BR              X12 }
            return result;
        }
        v90 = v304;
LABEL_273:
        v86 = v299;
        *(_BYTE *)(v43 + v226) = v152;
        *(_BYTE *)(v43 + v151) = 11;
        v80 = v262;
        v87 = v150;
        goto LABEL_321;
      case 0xC:
        v220 = v56;
        switch(*(_BYTE *)(v44 + v224))
        {
          case 0:
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 16))(v43, v44, v246, v40);
            v155 = v266;
            v67 = v268;
            v66 = v270;
            v65 = v272;
            v69 = v298 + ((v301 + 16) & v302);
            v64 = v275;
            *(_BYTE *)(v43 + v224) = 0;
            goto LABEL_317;
          case 1:
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v299 + 16))(v43, v44, v245, v40);
            v155 = v266;
            v67 = v268;
            v86 = v299;
            v66 = v270;
            v65 = v272;
            v69 = v298 + ((v301 + 16) & v302);
            v64 = v275;
            *(_BYTE *)(v43 + v224) = 1;
            v41 = v301;
            v75 = v256;
            v76 = v254;
            v78 = v248;
            v77 = v249;
            goto LABEL_418;
          case 2:
            v166 = v224;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v300 + 16))(v43, v44, v244, v40);
            v155 = v266;
            v67 = v268;
            v66 = v270;
            v65 = v272;
            v69 = v298 + ((v301 + 16) & v302);
            v64 = v275;
            v167 = 2;
            goto LABEL_316;
          case 3:
            v166 = v224;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v286 + 16))(v43, v44, v240, v40);
            v155 = v266;
            v67 = v268;
            v66 = v270;
            v65 = v272;
            v69 = v298 + ((v301 + 16) & v302);
            v64 = v275;
            v167 = 3;
            goto LABEL_316;
          case 4:
            v166 = v224;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v285 + 16))(v43, v44, v239, v40);
            v155 = v266;
            v67 = v268;
            v66 = v270;
            v65 = v272;
            v69 = v298 + ((v301 + 16) & v302);
            v64 = v275;
            v167 = 4;
            goto LABEL_316;
          case 5:
            if (__swift_getEnumTagSinglePayload(v44, 1, v243))
            {
              v168 = __n;
              memcpy((void *)v43, (const void *)v44, __n);
            }
            else
            {
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v281 + 16))(v43, v44, v243);
              __swift_storeEnumTagSinglePayload(v43, 0, 1, v243);
              v168 = __n;
            }
            v194 = (_QWORD *)(((v43 | 7) + v168) & 0xFFFFFFFFFFFFFFF8);
            v195 = (_QWORD *)(((v44 | 7) + v168) & 0xFFFFFFFFFFFFFFF8);
            *v194 = *v195;
            v194[1] = v195[1];
            v196 = (_QWORD *)(((unint64_t)v194 + 23) & 0xFFFFFFFFFFFFFFF8);
            v197 = (_QWORD *)(((unint64_t)v195 + 23) & 0xFFFFFFFFFFFFFFF8);
            *v196 = *v197;
            v196[1] = v197[1];
            v198 = (_QWORD *)(((unint64_t)v196 + 23) & 0xFFFFFFFFFFFFFFF8);
            v199 = (_QWORD *)(((unint64_t)v197 + 23) & 0xFFFFFFFFFFFFFFF8);
            *v198 = *v199;
            v198[1] = v199[1];
            v200 = ((unint64_t)v198 + v264) & v302;
            v201 = ((unint64_t)v199 + v264) & v302;
            v202 = *(void (**)(unint64_t, unint64_t, uint64_t))(v250 + 16);
            sub_21D7C4C20();
            sub_21D7C4C20();
            sub_21D7C4C20();
            v202(v200, v201, v251);
            v203 = (_BYTE *)(v200 + v298);
            *v203 = *(_BYTE *)(v201 + v298);
            v203[1] = *(_BYTE *)(v201 + v298 + 1);
            v204 = (_QWORD *)(((v43 | 7) + v61) & 0xFFFFFFFFFFFFFFF8);
            v205 = (_QWORD *)(((v44 | 7) + v61) & 0xFFFFFFFFFFFFFFF8);
            *v204 = *v205;
            v204[1] = v205[1];
            v206 = (_QWORD *)(((unint64_t)v204 + 23) & 0xFFFFFFFFFFFFFFF8);
            v207 = (_QWORD *)(((unint64_t)v205 + 23) & 0xFFFFFFFFFFFFFFF8);
            *v206 = *v207;
            v206[1] = v207[1];
            *(_BYTE *)(v43 + v224) = 5;
            sub_21D7C4C20();
            sub_21D7C4C20();
            v86 = v299;
            v41 = v301;
            v75 = v256;
            v76 = v254;
            v78 = v248;
            v77 = v249;
            v69 = v298 + ((v301 + 16) & v302);
            v64 = v275;
            v66 = v270;
            v65 = v272;
            v155 = v266;
            v67 = v268;
LABEL_418:
            v90 = v304;
            goto LABEL_320;
          case 6:
            v166 = v224;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v284 + 16))(v43, v44, v238, v40);
            v155 = v266;
            v67 = v268;
            v66 = v270;
            v65 = v272;
            v69 = v298 + ((v301 + 16) & v302);
            v64 = v275;
            v167 = 6;
            goto LABEL_316;
          case 7:
            v166 = v224;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v283 + 16))(v43, v44, v237, v40);
            v155 = v266;
            v67 = v268;
            v66 = v270;
            v65 = v272;
            v69 = v298 + ((v301 + 16) & v302);
            v64 = v275;
            v167 = 7;
            goto LABEL_316;
          case 8:
            v166 = v224;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 16))(v43, v44, v242, v40);
            v155 = v266;
            v67 = v268;
            v66 = v270;
            v65 = v272;
            v69 = v298 + ((v301 + 16) & v302);
            v64 = v275;
            v167 = 8;
            goto LABEL_316;
          case 9:
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v304 + 16))(v43, v44, v252, v40);
            v155 = v266;
            v67 = v268;
            v90 = v304;
            v66 = v270;
            v65 = v272;
            v69 = v298 + ((v301 + 16) & v302);
            v64 = v275;
            *(_BYTE *)(v43 + v224) = 9;
            v41 = v301;
            v75 = v256;
            v76 = v254;
            v78 = v248;
            v77 = v249;
            goto LABEL_319;
          case 0xA:
            v166 = v224;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v287 + 16))(v43, v44, v236, v40);
            v155 = v266;
            v67 = v268;
            v66 = v270;
            v65 = v272;
            v69 = v298 + ((v301 + 16) & v302);
            v64 = v275;
            v167 = 10;
            goto LABEL_316;
          case 0xB:
            v166 = v224;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v288 + 16))(v43, v44, v235, v40);
            v155 = v266;
            v67 = v268;
            v66 = v270;
            v65 = v272;
            v69 = v298 + ((v301 + 16) & v302);
            v64 = v275;
            v167 = 11;
            goto LABEL_316;
          case 0xC:
            if (__swift_getEnumTagSinglePayload(v44, 1, v243))
            {
              v169 = __n;
              memcpy((void *)v43, (const void *)v44, __n);
              v170 = v301 + 16;
            }
            else
            {
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v281 + 16))(v43, v44, v243);
              __swift_storeEnumTagSinglePayload(v43, 0, 1, v243);
              v170 = v301 + 16;
              v169 = __n;
            }
            v208 = (_QWORD *)(((v43 | 7) + v169) & 0xFFFFFFFFFFFFFFF8);
            v209 = (_QWORD *)(((v44 | 7) + v169) & 0xFFFFFFFFFFFFFFF8);
            *v208 = *v209;
            v208[1] = v209[1];
            v210 = (_QWORD *)(((unint64_t)v208 + 23) & 0xFFFFFFFFFFFFFFF8);
            v211 = (_QWORD *)(((unint64_t)v209 + 23) & 0xFFFFFFFFFFFFFFF8);
            *v210 = *v211;
            v210[1] = v211[1];
            v212 = (_QWORD *)(((unint64_t)v210 + 23) & 0xFFFFFFFFFFFFFFF8);
            v213 = (_QWORD *)(((unint64_t)v211 + 23) & 0xFFFFFFFFFFFFFFF8);
            *v212 = *v213;
            v212[1] = v213[1];
            v214 = ((unint64_t)v212 + v170) & v302;
            v215 = ((unint64_t)v213 + v170) & v302;
            v216 = *(void (**)(unint64_t, unint64_t, uint64_t))(v250 + 16);
            sub_21D7C4C20();
            sub_21D7C4C20();
            sub_21D7C4C20();
            v216(v214, v215, v251);
            v217 = (_BYTE *)(v214 + v298);
            *v217 = *(_BYTE *)(v215 + v298);
            v217[1] = *(_BYTE *)(v215 + v298 + 1);
            *(_BYTE *)(v43 + v224) = 12;
            v41 = v301;
            v75 = v256;
            v76 = v254;
            v78 = v248;
            v77 = v249;
            v69 = v298 + ((v301 + 16) & v302);
            v64 = v275;
            v66 = v270;
            v65 = v272;
            v155 = v266;
            v67 = v268;
            goto LABEL_318;
          case 0xD:
            v166 = v224;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v303 + 16))(v43, v44, v247, v40);
            v155 = v266;
            v67 = v268;
            v66 = v270;
            v65 = v272;
            v69 = v298 + ((v301 + 16) & v302);
            v64 = v275;
            v167 = 13;
            goto LABEL_316;
          case 0xE:
            v166 = v224;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v291 + 16))(v43, v44, v234, v40);
            v155 = v266;
            v67 = v268;
            v66 = v270;
            v65 = v272;
            v69 = v298 + ((v301 + 16) & v302);
            v64 = v275;
            v167 = 14;
            goto LABEL_316;
          case 0xF:
            v166 = v224;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v290 + 16))(v43, v44, v233, v40);
            v155 = v266;
            v67 = v268;
            v66 = v270;
            v65 = v272;
            v69 = v298 + ((v301 + 16) & v302);
            v64 = v275;
            v167 = 15;
            goto LABEL_316;
          case 0x10:
            v166 = v224;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v289 + 16))(v43, v44, v232, v40);
            v155 = v266;
            v67 = v268;
            v66 = v270;
            v65 = v272;
            v69 = v298 + ((v301 + 16) & v302);
            v64 = v275;
            v167 = 16;
            goto LABEL_316;
          case 0x11:
            v166 = v224;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v297 + 16))(v43, v44, v231, v40);
            v155 = v266;
            v67 = v268;
            v66 = v270;
            v65 = v272;
            v69 = v298 + ((v301 + 16) & v302);
            v64 = v275;
            v167 = 17;
            goto LABEL_316;
          case 0x12:
            v166 = v224;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v296 + 16))(v43, v44, v230, v40);
            v155 = v266;
            v67 = v268;
            v66 = v270;
            v65 = v272;
            v69 = v298 + ((v301 + 16) & v302);
            v64 = v275;
            v167 = 18;
            goto LABEL_316;
          case 0x13:
            v166 = v224;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v295 + 16))(v43, v44, v229, v40);
            v155 = v266;
            v67 = v268;
            v66 = v270;
            v65 = v272;
            v69 = v298 + ((v301 + 16) & v302);
            v64 = v275;
            v167 = 19;
            goto LABEL_316;
          case 0x14:
            v166 = v224;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v43, v44, v221);
            v155 = v266;
            v67 = v268;
            v66 = v270;
            v65 = v272;
            v69 = v298 + ((v301 + 16) & v302);
            v64 = v275;
            v167 = 20;
LABEL_316:
            *(_BYTE *)(v43 + v166) = v167;
LABEL_317:
            v41 = v301;
            v75 = v256;
            v76 = v254;
            v78 = v248;
            v77 = v249;
LABEL_318:
            v90 = v304;
LABEL_319:
            v86 = v299;
LABEL_320:
            *(_BYTE *)(v43 + v155) = 12;
            v80 = v262;
            v87 = v258;
            break;
          default:
            if (v224 <= 3)
              v127 = v224;
            else
              v127 = 4;
            __asm { BR              X12 }
            return result;
        }
LABEL_321:
        v81 = v43;
        v82 = v301 + 16;
        v79 = v260;
        v92 = v296;
        v91 = v297;
        v74 = v220;
        v84 = v302;
        v83 = v303;
        v85 = v298;
LABEL_322:
        v89 = v293;
        goto LABEL_323;
      case 0xD:
        v113 = v43;
        v114 = v72;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v304 + 16))(v43, v44, v252, v40);
        v90 = v304;
        v67 = v268;
        v66 = v270;
        v65 = v272;
        v69 = v298 + ((v301 + 16) & v302);
        v64 = v275;
        v115 = 13;
LABEL_229:
        *(_BYTE *)(v43 + v114) = v115;
        v75 = v256;
        v87 = v258;
        v84 = v302;
        v83 = v303;
        v41 = v301;
        v76 = v254;
        v78 = v248;
        v77 = v249;
        v74 = v56;
        v79 = v260;
        v80 = v262;
        v81 = v113;
        v82 = v301 + 16;
        v92 = v296;
        v85 = v298;
        goto LABEL_259;
      case 0xE:
        v111 = v72;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v250 + 16))(v43, v44, v251, v40);
        v67 = v268;
        v66 = v270;
        v65 = v272;
        v69 = v298 + ((v301 + 16) & v302);
        v64 = v275;
        v112 = 14;
LABEL_231:
        *(_BYTE *)(v43 + v111) = v112;
LABEL_232:
        v75 = v256;
        v87 = v258;
        v81 = v43;
        v84 = v302;
        v83 = v303;
        v41 = v301;
        v76 = v254;
        v78 = v248;
        v77 = v249;
        v74 = v56;
        v79 = v260;
        v80 = v262;
LABEL_258:
        v82 = v301 + 16;
        v92 = v296;
        v85 = v298;
        v90 = v304;
LABEL_259:
        v91 = v297;
        v86 = v299;
LABEL_323:
        v88 = v300;
        goto LABEL_324;
      case 0xF:
        *(_QWORD *)v43 = *(_QWORD *)v44;
        *(_QWORD *)(v43 + 8) = *(_QWORD *)(v44 + 8);
        v74 = v56;
        v79 = v260;
        v80 = v262;
        v219 = v43;
        v82 = v301 + 16;
        v84 = v302;
        v87 = v258;
        v292 = *(void (**)(uint64_t, uint64_t, uint64_t))(v250 + 16);
        sub_21D7C4C20();
        v128 = (v264 + v43) & v302;
        v129 = (v264 + v44) & v302;
        v89 = v293;
        v83 = v303;
        v92 = v296;
        v91 = v297;
        v292(v128, v129, v251);
        v90 = v304;
        v67 = v268;
        v66 = v270;
        v65 = v272;
        v69 = v298 + ((v301 + 16) & v302);
        v64 = v275;
        v130 = v295;
        v81 = v219;
        *(_BYTE *)(v219 + v266) = 15;
        v88 = v300;
        v41 = v301;
        v75 = v256;
        v76 = v254;
        v78 = v248;
        v77 = v249;
        v85 = v298;
        v86 = v299;
        goto LABEL_325;
      default:
        if (v72 <= 3)
          v106 = v72;
        else
          v106 = 4;
        __asm { BR              X12 }
        return result;
    }
  }
  v74 = *(_QWORD *)(v29 + 64);
  v75 = *(_QWORD *)(v282 + 64);
  v76 = *(_DWORD *)(v281 + 84);
  v77 = *(_QWORD *)(v281 + 64);
  v78 = *(_QWORD *)(v286 + 64);
  v64 = *(_QWORD *)(v285 + 64);
  v65 = *(_QWORD *)(v284 + 64);
  v66 = *(_QWORD *)(v283 + 64);
  v67 = *(_QWORD *)(v287 + 64);
  v79 = *(_QWORD *)(v288 + 64);
  v80 = *(_QWORD *)(v291 + 64);
  v277 = *(_QWORD *)(v290 + 64);
  v81 = v43;
  v82 = v301 + 16;
  v84 = v302;
  v83 = v303;
  v85 = v298;
  v86 = v299;
  v69 = v298 + ((v301 + 16) & v302);
  v87 = *(_QWORD *)(v289 + 64);
  v88 = v300;
  v89 = v293;
  v90 = v304;
  v92 = v296;
  v91 = v297;
LABEL_324:
  v130 = v295;
LABEL_325:
  v171 = *(_QWORD *)(v86 + 64);
  v172 = *(_QWORD *)(v88 + 64);
  v173 = *(_QWORD *)(v89 + 64);
  v174 = *(_QWORD *)(v90 + 64);
  v175 = *(_QWORD *)(v83 + 64);
  if (v76)
    v176 = v77;
  else
    v176 = v77 + 1;
  v177 = ((v82 + ((((((v176 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v84)
       + v85;
  v178 = ((((v177 + 9) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v171 <= v173)
    v171 = *(_QWORD *)(v89 + 64);
  if (v172 <= v171)
    v179 = v171;
  else
    v179 = v172;
  if (v78 > v179)
    v179 = v78;
  if (v64 > v179)
    v179 = v64;
  if (v178 <= v179)
    v178 = v179;
  if (v65 > v178)
    v178 = v65;
  if (v66 > v178)
    v178 = v66;
  if (v74 > v178)
    v178 = v74;
  if (v174 > v178)
    v178 = v174;
  if (v67 > v178)
    v178 = v67;
  if (v79 > v178)
    v178 = v79;
  v180 = v177 + 2;
  if (v75 <= v174)
    v181 = v174;
  else
    v181 = v75;
  if (v175 > v181)
    v181 = *(_QWORD *)(v83 + 64);
  if (v180 > v181)
    v181 = v180;
  if (v173 <= v175)
    v182 = *(_QWORD *)(v83 + 64);
  else
    v182 = *(_QWORD *)(v89 + 64);
  v183 = 16;
  if (v182 <= 0x10)
    v182 = 16;
  v184 = (v182 & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v174 > 0x10)
    v183 = v174;
  v185 = (v183 & 0xFFFFFFFFFFFFFFF8) + 24;
  v186 = ((v41 + v183 + 1) & v84) + v85;
  if (v175 <= v174)
    v187 = v174;
  else
    v187 = *(_QWORD *)(v83 + 64);
  if (v74 > v187)
    v187 = v74;
  if (v173 <= v187)
    v173 = v187;
  v188 = v173 + 1;
  if (v180 <= v178)
    v180 = v178;
  if (v175 > v180)
    v180 = *(_QWORD *)(v83 + 64);
  if (v80 > v180)
    v180 = v80;
  if (v277 > v180)
    v180 = v277;
  if (v87 > v180)
    v180 = v87;
  if (*(_QWORD *)(v91 + 64) > v180)
    v180 = *(_QWORD *)(v91 + 64);
  if (*(_QWORD *)(v92 + 64) > v180)
    v180 = *(_QWORD *)(v92 + 64);
  if (*(_QWORD *)(v130 + 64) > v180)
    v180 = *(_QWORD *)(v130 + 64);
  if (*(_QWORD *)(v294 + 64) > v180)
    v180 = *(_QWORD *)(v294 + 64);
  if (v174 <= v184)
    v174 = v184;
  if (v185 <= v186)
    v189 = v186;
  else
    v189 = v185;
  if (v188 <= v181 + 1)
    v188 = v181 + 1;
  if (v69 > v175)
    v175 = v69;
  if (v172 <= v85)
    v172 = v85;
  if (v174 <= v189)
    v174 = v189;
  if (v180 + 1 > v188)
    v188 = v180 + 1;
  if (v175 <= v171)
    v175 = v171;
  if (v188 > v174)
    v174 = v188;
  if (v175 > v172)
    v172 = v175;
  if (v174 > v172)
    v172 = v174;
  if (v172 <= 0x11)
    v172 = 17;
  v190 = v172 + 1;
  v191 = ((v81 | 7) + v190) & 0xFFFFFFFFFFFFFFF8;
  v192 = ((v280 | 7) + v190) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v191 = *(_QWORD *)v192;
  *(_QWORD *)(v191 + 8) = *(_QWORD *)(v192 + 8);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v191 + 16) = *(_BYTE *)(v192 + 16);
  *(_BYTE *)(v191 + 17) = *(_BYTE *)(v192 + 17);
  return v278;
}

__n128 sub_21CE8DB8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  void *v18;
  const void *v19;
  int v20;
  size_t v21;
  size_t v22;
  size_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  int v28;
  int v29;
  unint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int v81;
  uint64_t v82;
  unsigned int v83;
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  size_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  __n128 *v111;
  __n128 result;
  __n128 *v113;
  _OWORD *v114;
  _OWORD *v115;
  _OWORD *v116;
  _OWORD *v117;
  _OWORD *v118;
  _OWORD *v119;
  unint64_t v120;
  unint64_t v121;
  _BYTE *v122;
  unint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  size_t v135;
  unint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  size_t v151;
  unint64_t v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  _OWORD *v168;
  _OWORD *v169;
  _OWORD *v170;
  _OWORD *v171;
  _OWORD *v172;
  _OWORD *v173;
  unint64_t v174;
  unint64_t v175;
  _BYTE *v176;
  uint64_t v177;
  _OWORD *v178;
  _OWORD *v179;
  _OWORD *v180;
  _OWORD *v181;
  _OWORD *v182;
  _OWORD *v183;
  unint64_t v184;
  unint64_t v185;
  _BYTE *v186;
  _OWORD *v187;
  _OWORD *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  int v211;
  int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  int v217;
  int v218;
  int v219;
  int v220;
  int v221;
  int v222;
  int v223;
  uint64_t v224;
  int v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  size_t v230;
  size_t v231;
  uint64_t v232;
  unint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  v10 = sub_21D7BF754();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = *(_DWORD *)(v11 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v14 = ((unint64_t)v7 + v12 + 32) & v13;
  v15 = ((unint64_t)v8 + v12 + 32) & v13;
  v16 = *(_QWORD *)(v15 + 0x20);
  v17 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v17;
  *(_QWORD *)(v14 + 32) = v16;
  v232 = v15;
  v234 = v14;
  v249 = ~v12;
  v18 = (void *)((v12 + 40 + v14) & ~v12);
  v19 = (const void *)((v12 + 40 + v15) & ~v12);
  v208 = v11;
  v209 = v10;
  if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v10))
  {
    v20 = *(_DWORD *)(v11 + 84);
    v21 = *(_QWORD *)(v11 + 64);
    if (v20)
      v22 = v21;
    else
      v22 = v21 + 1;
    memcpy(v18, v19, v22);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v18, v19, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v10);
    v20 = *(_DWORD *)(v11 + 84);
    v21 = *(_QWORD *)(v11 + 64);
  }
  v23 = v21 + ((v12 + 40) & v249);
  if (!v20)
    ++v23;
  v230 = v23;
  v203 = sub_21D7C37A4();
  v224 = *(_QWORD *)(v203 - 8);
  v225 = *(_DWORD *)(v224 + 80);
  v204 = sub_21D7C06C0();
  v245 = *(_QWORD *)(v204 - 8);
  v223 = *(_DWORD *)(v245 + 80);
  v206 = sub_21D7C3660();
  v246 = *(_QWORD *)(v206 - 8);
  v222 = *(_DWORD *)(v246 + 80);
  v210 = sub_21D7C3B58();
  v248 = *(_QWORD *)(v210 - 8);
  v221 = *(_DWORD *)(v248 + 80);
  v207 = sub_21D7C3564();
  v247 = *(_QWORD *)(v207 - 8);
  v220 = *(_DWORD *)(v247 + 80);
  v202 = sub_21D7C30FC();
  v24 = *(_QWORD *)(v202 - 8);
  v219 = *(_DWORD *)(v24 + 80);
  v201 = sub_21D7C03CC();
  v244 = *(_QWORD *)(v201 - 8);
  v218 = *(_DWORD *)(v244 + 80);
  v205 = sub_21D7C3840();
  v25 = *(_QWORD *)(v205 - 8);
  v217 = *(_DWORD *)(v25 + 80);
  v200 = sub_21D7C38B8();
  v243 = *(_QWORD *)(v200 - 8);
  v216 = *(_DWORD *)(v243 + 80);
  v199 = sub_21D7C045C();
  v242 = *(_QWORD *)(v199 - 8);
  v215 = *(_DWORD *)(v242 + 80);
  v198 = sub_21D7C36C0();
  v229 = *(_QWORD *)(v198 - 8);
  v214 = *(_DWORD *)(v229 + 80);
  v197 = sub_21D7C0180();
  v241 = *(_QWORD *)(v197 - 8);
  v213 = *(_DWORD *)(v241 + 80);
  v196 = sub_21D7C3BAC();
  v240 = *(_QWORD *)(v196 - 8);
  v212 = *(_DWORD *)(v240 + 80);
  v195 = sub_21D7C33F0();
  v239 = *(_QWORD *)(v195 - 8);
  v211 = *(_DWORD *)(v239 + 80);
  v194 = sub_21D7C396C();
  v238 = *(_QWORD *)(v194 - 8);
  v26 = *(_DWORD *)(v238 + 80);
  v193 = sub_21D7C3738();
  v237 = *(_QWORD *)(v193 - 8);
  v27 = *(_DWORD *)(v237 + 80);
  v192 = sub_21D7C07A4();
  v236 = *(_QWORD *)(v192 - 8);
  v28 = *(_DWORD *)(v236 + 80);
  v191 = sub_21D7C0720();
  v235 = *(_QWORD *)(v191 - 8);
  v29 = *(_DWORD *)(v235 + 80);
  v190 = sub_21D7C0690();
  v228 = *(_QWORD *)(v190 - 8);
  v30 = v21;
  v31 = *(_DWORD *)(v228 + 80);
  v189 = sub_21D7C0528();
  v227 = *(_QWORD *)(v189 - 8);
  v32 = *(_DWORD *)(v227 + 80);
  v33 = sub_21D7C0594();
  v34 = v24;
  v35 = v33;
  v36 = *(_QWORD *)(v33 - 8);
  v37 = v12 | ((v223 | v225 | v222 | v221 | v220 | v219 | v218 | v217 | v216 | v215 | v214 | v213 | v212 | v211 | v26 | v27) | (v28 | v29 | v31 | v32 | *(_DWORD *)(v36 + 80))) & 0xF8 | 7;
  v38 = (v230 + v37 + v234) & ~v37;
  v39 = (v230 + v37 + v232) & ~v37;
  v40 = *(_QWORD *)(v224 + 64);
  v41 = *(_QWORD *)(v245 + 64);
  v42 = *(_QWORD *)(v246 + 64);
  v43 = *(_QWORD *)(v248 + 64);
  v44 = *(_QWORD *)(v247 + 64);
  if (v42 <= v44)
    v45 = *(_QWORD *)(v247 + 64);
  else
    v45 = *(_QWORD *)(v246 + 64);
  if (v45 <= 0x10)
    v46 = 16;
  else
    v46 = v45;
  if (v43 <= 0x10)
    v47 = 16;
  else
    v47 = *(_QWORD *)(v248 + 64);
  if (v44 <= v43)
    v48 = *(_QWORD *)(v248 + 64);
  else
    v48 = *(_QWORD *)(v247 + 64);
  v49 = *(_QWORD *)(v24 + 64);
  if (v49 > v48)
    v48 = *(_QWORD *)(v24 + 64);
  if (v42 <= v48)
    v50 = v48;
  else
    v50 = *(_QWORD *)(v246 + 64);
  v51 = *(_QWORD *)(v244 + 64);
  if (v51 <= v43)
    v51 = *(_QWORD *)(v248 + 64);
  if (v44 > v51)
    v51 = *(_QWORD *)(v247 + 64);
  v226 = v25;
  if (*(_DWORD *)(v25 + 84))
    v52 = *(_QWORD *)(v25 + 64);
  else
    v52 = *(_QWORD *)(v25 + 64) + 1;
  v231 = v52;
  v53 = v12 + 16;
  v54 = ((v12 + 16 + ((((((v52 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v249)
      + v30;
  v55 = v54 + 2;
  if (v54 + 2 <= v51)
    v56 = v51;
  else
    v56 = v54 + 2;
  if (v40 > v42)
    v42 = *(_QWORD *)(v224 + 64);
  if (v41 > v42)
    v42 = *(_QWORD *)(v245 + 64);
  if (*(_QWORD *)(v243 + 64) > v42)
    v42 = *(_QWORD *)(v243 + 64);
  if (*(_QWORD *)(v242 + 64) > v42)
    v42 = *(_QWORD *)(v242 + 64);
  if (((((v54 + 9) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > v42)
    v42 = ((((v54 + 9) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (*(_QWORD *)(v229 + 64) > v42)
    v42 = *(_QWORD *)(v229 + 64);
  if (*(_QWORD *)(v241 + 64) > v42)
    v42 = *(_QWORD *)(v241 + 64);
  v57 = v47 + 1 + v12;
  if (v49 > v42)
    v42 = v49;
  if (v43 > v42)
    v42 = *(_QWORD *)(v248 + 64);
  if (*(_QWORD *)(v240 + 64) > v42)
    v42 = *(_QWORD *)(v240 + 64);
  if (*(_QWORD *)(v239 + 64) > v42)
    v42 = *(_QWORD *)(v239 + 64);
  if (v55 > v42)
    v42 = v54 + 2;
  if (v44 <= v42)
    v44 = v42;
  if (*(_QWORD *)(v238 + 64) > v44)
    v44 = *(_QWORD *)(v238 + 64);
  if (*(_QWORD *)(v237 + 64) > v44)
    v44 = *(_QWORD *)(v237 + 64);
  if (*(_QWORD *)(v236 + 64) > v44)
    v44 = *(_QWORD *)(v236 + 64);
  if (*(_QWORD *)(v235 + 64) > v44)
    v44 = *(_QWORD *)(v235 + 64);
  v58 = v228;
  if (*(_QWORD *)(v228 + 64) > v44)
    v44 = *(_QWORD *)(v228 + 64);
  v59 = v227;
  if (*(_QWORD *)(v227 + 64) > v44)
    v44 = *(_QWORD *)(v227 + 64);
  if (*(_QWORD *)(v36 + 64) <= v44)
    v60 = v44;
  else
    v60 = *(_QWORD *)(v36 + 64);
  v61 = v50;
  v62 = v50 + 1;
  if (v43 <= (v46 & 0xFFFFFFFFFFFFFFF8) + 24)
    v43 = (v46 & 0xFFFFFFFFFFFFFFF8) + 24;
  if ((v47 & 0xFFFFFFFFFFFFFFF8) + 24 <= (v57 & v249) + v30)
    v63 = (v57 & v249) + v30;
  else
    v63 = (v47 & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v62 <= v56 + 1)
    v62 = v56 + 1;
  if (v60 + 1 > v30 + (v53 & v249))
    v64 = v60 + 1;
  else
    v64 = v30 + (v53 & v249);
  if (v40 <= v41)
    v40 = *(_QWORD *)(v245 + 64);
  if (v43 <= v63)
    v65 = v63;
  else
    v65 = v43;
  if (v62 <= v64)
    v66 = v64;
  else
    v66 = v62;
  v233 = v30;
  if (v30 > v45)
    v45 = v30;
  v67 = v39;
  if (v65 <= v66)
    v65 = v66;
  if (v45 > v40)
    v40 = v45;
  if (v40 <= v65)
    v40 = v65;
  if (v40 <= 0x11)
    v68 = 17;
  else
    v68 = v40;
  switch(*(_BYTE *)(v39 + v68))
  {
    case 0:
      v70 = 0;
      *(_OWORD *)v38 = *(_OWORD *)v39;
      break;
    case 1:
      v78 = v38;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v224 + 32))(v38, v39, v203, v228, v227);
      v38 = v78;
      v70 = 1;
      break;
    case 2:
      v71 = v38;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v245 + 32))(v38, v39, v204, v228, v227);
      v38 = v71;
      v70 = 2;
      break;
    case 3:
      v79 = v38;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v246 + 32))(v38, v39, v206, v228, v227);
      v38 = v79;
      v70 = 3;
      break;
    case 4:
      v72 = v38;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v248 + 32))(v38, v39, v210, v228, v227);
      v38 = v72;
      v70 = 4;
      break;
    case 5:
      switch(*(_BYTE *)(v39 + v46))
      {
        case 0:
          v103 = v38;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v246 + 32))(v38, v39, v206, v228, v227);
          v38 = v103;
          v104 = 0;
          break;
        case 1:
          *(_OWORD *)v38 = *(_OWORD *)v39;
          v104 = 1;
          break;
        case 2:
          v105 = v38;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v247 + 32))(v38, v39, v207, v228, v227);
          v38 = v105;
          v104 = 2;
          break;
        case 3:
          *(_OWORD *)v38 = *(_OWORD *)v39;
          v104 = 3;
          break;
        default:
          if (v46 <= 3)
            v80 = v46;
          else
            v80 = 4;
          __asm { BR              X12 }
          return result;
      }
      *(_BYTE *)(v38 + v46) = v104;
      *(_OWORD *)(((v38 | 7) + v46 + 1) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((v39 | 7) + v46 + 1) & 0xFFFFFFFFFFFFF8);
      v70 = 5;
      break;
    case 6:
      v81 = *(unsigned __int8 *)(v39 + v47);
      if (v81 >= 2)
      {
        if (v47 <= 3)
          v82 = v47;
        else
          v82 = 4;
        __asm { BR              X12 }
      }
      if (v81 == 1)
      {
        *(_OWORD *)v38 = *(_OWORD *)v39;
        v106 = 1;
      }
      else
      {
        v107 = v38;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v248 + 32))(v38, v39, v210, v228, v227);
        v38 = v107;
        v106 = 0;
      }
      *(_BYTE *)(v38 + v47) = v106;
      *(_OWORD *)(((v38 | 7) + v47 + 1) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((v39 | 7) + v47 + 1) & 0xFFFFFFFFFFFFF8);
      v70 = 6;
      break;
    case 7:
      v83 = *(unsigned __int8 *)(v39 + v47);
      if (v83 >= 2)
      {
        if (v47 <= 3)
          v84 = v47;
        else
          v84 = 4;
        __asm { BR              X12 }
      }
      if (v83 == 1)
      {
        *(_OWORD *)v38 = *(_OWORD *)v39;
        v108 = 1;
      }
      else
      {
        v109 = v38;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v248 + 32))(v38, v39, v210, v228, v227);
        v38 = v109;
        v108 = 0;
      }
      *(_BYTE *)(v38 + v47) = v108;
      v110 = v38;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v208 + 32))((v57 + v38) & v249, (v57 + v39) & v249, v209, v58, v59);
      v38 = v110;
      v70 = 7;
      break;
    case 8:
      v85 = *(_OWORD *)v39;
      *(_BYTE *)(v38 + 16) = *(_BYTE *)(v39 + 16);
      *(_OWORD *)v38 = v85;
      v70 = 8;
      break;
    case 9:
      v88 = 0;
      v89 = v210;
      switch(*(_BYTE *)(v39 + v61))
      {
        case 0:
          break;
        case 1:
          v88 = 1;
          v248 = v247;
          v89 = v207;
          break;
        case 2:
          v88 = 2;
          v248 = v34;
          v89 = v202;
          break;
        case 3:
          v88 = 3;
          v248 = v246;
          v89 = v206;
          break;
        default:
          if (v61 <= 3)
            v73 = v61;
          else
            v73 = 4;
          __asm { BR              X12 }
          return result;
      }
      v90 = v38;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v248 + 32))(v38, v39, v89, v228, v227);
      v38 = v90;
      v67 = v39;
      *(_BYTE *)(v38 + v61) = v88;
      v70 = 9;
      break;
    case 0xA:
      v86 = v38;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v247 + 32))(v38, v39, v207, v228, v227);
      v38 = v86;
      v70 = 10;
      break;
    case 0xB:
      switch(*(_BYTE *)(v39 + v56))
      {
        case 0:
          v91 = v38;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v248 + 32))(v38, v39, v210, v228, v227);
          v38 = v91;
          v92 = 0;
          break;
        case 1:
          v93 = v38;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v244 + 32))(v38, v39, v201, v228, v227);
          v38 = v93;
          v92 = 1;
          break;
        case 2:
          v94 = v38;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v247 + 32))(v38, v39, v207, v228, v227);
          v38 = v94;
          v92 = 2;
          break;
        case 3:
          v95 = v38;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v247 + 32))(v38, v39, v207, v228, v227);
          v38 = v95;
          v92 = 3;
          break;
        case 4:
          v96 = v39;
          v97 = v38;
          if (__swift_getEnumTagSinglePayload(v39, 1, v205))
          {
            v98 = v231;
            memcpy((void *)v97, (const void *)v39, v231);
          }
          else
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v226 + 32))(v97, v39, v205);
            __swift_storeEnumTagSinglePayload(v97, 0, 1, v205);
            v98 = v231;
          }
          v114 = (_OWORD *)(((v97 | 7) + v98) & 0xFFFFFFFFFFFFFFF8);
          v115 = (_OWORD *)(((v39 | 7) + v98) & 0xFFFFFFFFFFFFFFF8);
          *v114 = *v115;
          v116 = (_OWORD *)(((unint64_t)v114 + 23) & 0xFFFFFFFFFFFFFFF8);
          v117 = (_OWORD *)(((unint64_t)v115 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v116 = *v117;
          v118 = (_OWORD *)(((unint64_t)v116 + 23) & 0xFFFFFFFFFFFFFFF8);
          v119 = (_OWORD *)(((unint64_t)v117 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v118 = *v119;
          v120 = ((unint64_t)v118 + v53) & v249;
          v121 = ((unint64_t)v119 + v53) & v249;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v208 + 32))(v120, v121, v209);
          v122 = (_BYTE *)(v120 + v233);
          *v122 = *(_BYTE *)(v121 + v233);
          v122[1] = *(_BYTE *)(v121 + v233 + 1);
          v92 = 4;
          v38 = v97;
          v67 = v96;
          break;
        default:
          if (v56 <= 3)
            v74 = v56;
          else
            v74 = 4;
          __asm { BR              X12 }
          return result;
      }
      *(_BYTE *)(v38 + v56) = v92;
      v70 = 11;
      break;
    case 0xC:
      switch(*(_BYTE *)(v39 + v60))
      {
        case 0:
          v99 = v60;
          v100 = v38;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v246 + 32))(v38, v39, v206, v228, v227);
          v38 = v100;
          v67 = v39;
          v101 = v99;
          v102 = 0;
          break;
        case 1:
          v123 = v60;
          v124 = v38;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v224 + 32))(v38, v39, v203, v228, v227);
          v38 = v124;
          v67 = v39;
          v101 = v123;
          v102 = 1;
          break;
        case 2:
          v125 = v60;
          v126 = v38;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v245 + 32))(v38, v39, v204, v228, v227);
          v38 = v126;
          v67 = v39;
          v101 = v125;
          v102 = 2;
          break;
        case 3:
          v127 = v60;
          v128 = v38;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v243 + 32))(v38, v39, v200, v228, v227);
          v38 = v128;
          v67 = v39;
          v101 = v127;
          v102 = 3;
          break;
        case 4:
          v129 = v60;
          v130 = v38;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v242 + 32))(v38, v39, v199, v228, v227);
          v38 = v130;
          v67 = v39;
          v101 = v129;
          v102 = 4;
          break;
        case 5:
          v131 = (void *)v38;
          v132 = v39;
          v133 = v60;
          if (__swift_getEnumTagSinglePayload(v39, 1, v205))
          {
            v134 = (unint64_t)v131;
            v135 = v231;
            memcpy(v131, (const void *)v39, v231);
          }
          else
          {
            (*(void (**)(void *, uint64_t, uint64_t))(v226 + 32))(v131, v39, v205);
            __swift_storeEnumTagSinglePayload((uint64_t)v131, 0, 1, v205);
            v134 = (unint64_t)v131;
            v135 = v231;
          }
          v177 = v134 | 7;
          v178 = (_OWORD *)(((v134 | 7) + v135) & 0xFFFFFFFFFFFFFFF8);
          v179 = (_OWORD *)(((v132 | 7) + v135) & 0xFFFFFFFFFFFFFFF8);
          *v178 = *v179;
          v180 = (_OWORD *)(((unint64_t)v178 + 23) & 0xFFFFFFFFFFFFFFF8);
          v181 = (_OWORD *)(((unint64_t)v179 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v180 = *v181;
          v182 = (_OWORD *)(((unint64_t)v180 + 23) & 0xFFFFFFFFFFFFFFF8);
          v183 = (_OWORD *)(((unint64_t)v181 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v182 = *v183;
          v184 = ((unint64_t)v182 + v53) & v249;
          v185 = ((unint64_t)v183 + v53) & v249;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v208 + 32))(v184, v185, v209);
          v38 = (uint64_t)v131;
          v186 = (_BYTE *)(v184 + v233);
          *v186 = *(_BYTE *)(v185 + v233);
          v186[1] = *(_BYTE *)(v185 + v233 + 1);
          v187 = (_OWORD *)((v177 + v55) & 0xFFFFFFFFFFFFFFF8);
          v188 = (_OWORD *)(((v132 | 7) + v55) & 0xFFFFFFFFFFFFFFF8);
          *v187 = *v188;
          *(_OWORD *)(((unint64_t)v187 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v188 + 23) & 0xFFFFFFFFFFFFF8);
          v102 = 5;
          v101 = v133;
          v67 = v132;
          break;
        case 6:
          v136 = v60;
          v137 = v38;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v229 + 32))(v38, v39, v198, v228, v227);
          v38 = v137;
          v67 = v39;
          v101 = v136;
          v102 = 6;
          break;
        case 7:
          v138 = v60;
          v139 = v38;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v241 + 32))(v38, v39, v197, v228, v227);
          v38 = v139;
          v67 = v39;
          v101 = v138;
          v102 = 7;
          break;
        case 8:
          v140 = v60;
          v141 = v38;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 32))(v38, v39, v202, v228, v227);
          v38 = v141;
          v67 = v39;
          v101 = v140;
          v102 = 8;
          break;
        case 9:
          v142 = v60;
          v143 = v38;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v248 + 32))(v38, v39, v210, v228, v227);
          v38 = v143;
          v67 = v39;
          v101 = v142;
          v102 = 9;
          break;
        case 0xA:
          v144 = v60;
          v145 = v38;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v240 + 32))(v38, v39, v196, v228, v227);
          v38 = v145;
          v67 = v39;
          v101 = v144;
          v102 = 10;
          break;
        case 0xB:
          v146 = v60;
          v147 = v38;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v239 + 32))(v38, v39, v195, v228, v227);
          v38 = v147;
          v67 = v39;
          v101 = v146;
          v102 = 11;
          break;
        case 0xC:
          v148 = v38;
          v149 = v67;
          v150 = v60;
          if (__swift_getEnumTagSinglePayload(v149, 1, v205))
          {
            v151 = v231;
            memcpy((void *)v148, (const void *)v149, v231);
          }
          else
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v226 + 32))(v148, v149, v205);
            __swift_storeEnumTagSinglePayload(v148, 0, 1, v205);
            v151 = v231;
          }
          v168 = (_OWORD *)(((v148 | 7) + v151) & 0xFFFFFFFFFFFFFFF8);
          v169 = (_OWORD *)(((v149 | 7) + v151) & 0xFFFFFFFFFFFFFFF8);
          *v168 = *v169;
          v170 = (_OWORD *)(((unint64_t)v168 + 23) & 0xFFFFFFFFFFFFFFF8);
          v171 = (_OWORD *)(((unint64_t)v169 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v170 = *v171;
          v172 = (_OWORD *)(((unint64_t)v170 + 23) & 0xFFFFFFFFFFFFFFF8);
          v173 = (_OWORD *)(((unint64_t)v171 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v172 = *v173;
          v174 = ((unint64_t)v172 + v53) & v249;
          v175 = ((unint64_t)v173 + v53) & v249;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v208 + 32))(v174, v175, v209);
          v176 = (_BYTE *)(v174 + v233);
          *v176 = *(_BYTE *)(v175 + v233);
          v176[1] = *(_BYTE *)(v175 + v233 + 1);
          v102 = 12;
          v101 = v150;
          v38 = v148;
          v67 = v149;
          break;
        case 0xD:
          v152 = v60;
          v153 = v38;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v247 + 32))(v38, v39, v207, v228, v227);
          v38 = v153;
          v67 = v39;
          v101 = v152;
          v102 = 13;
          break;
        case 0xE:
          v154 = v60;
          v155 = v38;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v238 + 32))(v38, v39, v194, v228, v227);
          v38 = v155;
          v67 = v39;
          v101 = v154;
          v102 = 14;
          break;
        case 0xF:
          v156 = v60;
          v157 = v38;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v237 + 32))(v38, v39, v193, v228, v227);
          v38 = v157;
          v67 = v39;
          v101 = v156;
          v102 = 15;
          break;
        case 0x10:
          v158 = v60;
          v159 = v38;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v236 + 32))(v38, v39, v192, v228, v227);
          v38 = v159;
          v67 = v39;
          v101 = v158;
          v102 = 16;
          break;
        case 0x11:
          v160 = v60;
          v161 = v38;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v235 + 32))(v38, v39, v191, v228, v227);
          v38 = v161;
          v67 = v39;
          v101 = v160;
          v102 = 17;
          break;
        case 0x12:
          v162 = v60;
          v163 = v38;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v228 + 32))(v38, v39, v190);
          v38 = v163;
          v67 = v39;
          v101 = v162;
          v102 = 18;
          break;
        case 0x13:
          v164 = v60;
          v165 = v38;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v227 + 32))(v38, v39, v189, v228);
          v38 = v165;
          v67 = v39;
          v101 = v164;
          v102 = 19;
          break;
        case 0x14:
          v166 = v60;
          v167 = v38;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 32))(v38, v39, v35, v228, v227);
          v38 = v167;
          v67 = v39;
          v101 = v166;
          v102 = 20;
          break;
        default:
          if (v60 <= 3)
            v75 = v60;
          else
            v75 = 4;
          __asm { BR              X13 }
          return result;
      }
      *(_BYTE *)(v38 + v101) = v102;
      v70 = 12;
      break;
    case 0xD:
      v87 = v38;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v248 + 32))(v38, v39, v210, v228, v227);
      v38 = v87;
      v70 = 13;
      break;
    case 0xE:
      v76 = v38;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v208 + 32))(v38, v39, v209, v228, v227);
      v38 = v76;
      v70 = 14;
      break;
    case 0xF:
      *(_OWORD *)v38 = *(_OWORD *)v39;
      v77 = v38;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v208 + 32))((v53 + v38) & v249, (v53 + v39) & v249, v209, v228, v227);
      v38 = v77;
      v70 = 15;
      break;
    default:
      if (v68 <= 3)
        v69 = v68;
      else
        v69 = 4;
      __asm { BR              X13 }
      return result;
  }
  *(_BYTE *)(v38 + v68) = v70;
  v111 = (__n128 *)(((v67 | 7) + v68 + 1) & 0xFFFFFFFFFFFFFFF8);
  result = *v111;
  v113 = (__n128 *)(((v38 | 7) + v68 + 1) & 0xFFFFFFFFFFFFFFF8);
  v113[1].n128_u16[0] = v111[1].n128_u16[0];
  *v113 = result;
  return result;
}

uint64_t sub_21CE8F19C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  _OWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  const void *v20;
  int EnumTagSinglePayload;
  int v22;
  size_t v23;
  uint64_t v24;
  int v25;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  int v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unsigned int v96;
  uint64_t v97;
  unsigned int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  unsigned int v112;
  uint64_t v113;
  uint64_t v114;
  unsigned int v115;
  uint64_t v116;
  __int128 v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  unint64_t v130;
  unint64_t v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  uint64_t result;
  uint64_t v145;
  uint64_t v146;
  char v147;
  char v148;
  char v149;
  char v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  char v155;
  unint64_t v156;
  size_t v157;
  uint64_t v158;
  char v159;
  _OWORD *v160;
  _OWORD *v161;
  _OWORD *v162;
  _OWORD *v163;
  _OWORD *v164;
  _OWORD *v165;
  unint64_t v166;
  unint64_t v167;
  _BYTE *v168;
  uint64_t v169;
  unint64_t v170;
  unint64_t v171;
  size_t v172;
  uint64_t v173;
  unint64_t v174;
  size_t v175;
  uint64_t v176;
  uint64_t v177;
  _OWORD *v178;
  _OWORD *v179;
  _OWORD *v180;
  _OWORD *v181;
  _OWORD *v182;
  _OWORD *v183;
  unint64_t v184;
  unint64_t v185;
  _BYTE *v186;
  _OWORD *v187;
  _OWORD *v188;
  _OWORD *v189;
  _OWORD *v190;
  _OWORD *v191;
  _OWORD *v192;
  _OWORD *v193;
  _OWORD *v194;
  unint64_t v195;
  unint64_t v196;
  _BYTE *v197;
  uint64_t v198;
  size_t __n;
  unint64_t v200;
  unint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  unint64_t v223;
  unint64_t v224;
  unint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  int v229;
  unint64_t v230;
  int v231;
  unint64_t v232;
  int v233;
  unint64_t v234;
  int v235;
  uint64_t v236;
  int v237;
  unint64_t v238;
  int v239;
  int v240;
  int v241;
  unint64_t v242;
  int v243;
  unint64_t v244;
  int v245;
  unint64_t v246;
  int v247;
  unint64_t v248;
  int v249;
  unint64_t v250;
  int v251;
  uint64_t v252;
  int v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  unint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v259 = a1;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)v7 = *v8;
  *(_QWORD *)(v7 + 8) = v8[1];
  swift_bridgeObjectRelease();
  v9 = v8 + 2;
  v10 = *(_QWORD *)(v7 + 24);
  if (v10 >> 60 == 15)
    goto LABEL_4;
  v11 = v8[3];
  if (v11 >> 60 == 15)
  {
    sub_21CDE9E7C(v7 + 16);
LABEL_4:
    *(_OWORD *)(v7 + 16) = *v9;
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v7 + 16);
  *(_QWORD *)(v7 + 16) = *(_QWORD *)v9;
  *(_QWORD *)(v7 + 24) = v11;
  sub_21CDDB4E0(v12, v10);
LABEL_6:
  v13 = sub_21D7BF754();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = (v7 + (v15 | 7) + 32) & ~(v15 | 7);
  v17 = ((unint64_t)v8 + (v15 | 7) + 32) & ~(v15 | 7);
  if (*(_QWORD *)(v16 + 24) >= 0xFFFFFFFFuLL)
    __swift_destroy_boxed_opaque_existential_1(v16);
  v18 = *(_OWORD *)v17;
  v19 = *(_OWORD *)(v17 + 16);
  *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
  *(_OWORD *)v16 = v18;
  *(_OWORD *)(v16 + 16) = v19;
  v257 = v17;
  v20 = (const void *)((v15 + 40 + v17) & ~v15);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((v15 + 40 + v16) & ~v15, 1, v13);
  v22 = __swift_getEnumTagSinglePayload((uint64_t)v20, 1, v13);
  v274 = v15;
  v227 = v13;
  if (EnumTagSinglePayload)
  {
    if (!v22)
    {
      (*(void (**)(uint64_t, const void *, uint64_t))(v14 + 32))((v15 + 40 + v16) & ~v15, v20, v13);
      __swift_storeEnumTagSinglePayload((v15 + 40 + v16) & ~v15, 0, 1, v13);
      goto LABEL_17;
    }
  }
  else
  {
    if (!v22)
    {
      (*(void (**)(uint64_t, const void *, uint64_t))(v14 + 40))((v15 + 40 + v16) & ~v15, v20, v13);
      goto LABEL_17;
    }
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))((v15 + 40 + v16) & ~v15, v13);
  }
  if (*(_DWORD *)(v14 + 84))
    v23 = *(_QWORD *)(v14 + 64);
  else
    v23 = *(_QWORD *)(v14 + 64) + 1;
  memcpy((void *)((v15 + 40 + v16) & ~v15), v20, v23);
LABEL_17:
  v226 = v14;
  v276 = *(_QWORD *)(v14 + 64);
  v24 = v276 + ((v15 + 40) & ~v15);
  if (!*(_DWORD *)(v14 + 84))
    ++v24;
  v255 = v24;
  v220 = sub_21D7C37A4();
  v279 = *(_QWORD *)(v220 - 8);
  v253 = *(_DWORD *)(v279 + 80);
  v219 = sub_21D7C06C0();
  v278 = *(_QWORD *)(v219 - 8);
  v251 = *(_DWORD *)(v278 + 80);
  v221 = sub_21D7C3660();
  v280 = *(_QWORD *)(v221 - 8);
  v249 = *(_DWORD *)(v280 + 80);
  v228 = sub_21D7C3B58();
  v275 = *(_QWORD *)(v228 - 8);
  v247 = *(_DWORD *)(v275 + 80);
  v222 = sub_21D7C3564();
  v282 = *(_QWORD *)(v222 - 8);
  v245 = *(_DWORD *)(v282 + 80);
  v217 = sub_21D7C30FC();
  v265 = *(_QWORD *)(v217 - 8);
  v243 = *(_DWORD *)(v265 + 80);
  v216 = sub_21D7C03CC();
  v266 = *(_QWORD *)(v216 - 8);
  v241 = *(_DWORD *)(v266 + 80);
  v218 = sub_21D7C3840();
  v264 = *(_QWORD *)(v218 - 8);
  v239 = *(_DWORD *)(v264 + 80);
  v215 = sub_21D7C38B8();
  v263 = *(_QWORD *)(v215 - 8);
  v237 = *(_DWORD *)(v263 + 80);
  v214 = sub_21D7C045C();
  v262 = *(_QWORD *)(v214 - 8);
  v235 = *(_DWORD *)(v262 + 80);
  v213 = sub_21D7C36C0();
  v261 = *(_QWORD *)(v213 - 8);
  v233 = *(_DWORD *)(v261 + 80);
  v212 = sub_21D7C0180();
  v260 = *(_QWORD *)(v212 - 8);
  v231 = *(_DWORD *)(v260 + 80);
  v211 = sub_21D7C3BAC();
  v270 = *(_QWORD *)(v211 - 8);
  v229 = *(_DWORD *)(v270 + 80);
  v210 = sub_21D7C33F0();
  v269 = *(_QWORD *)(v210 - 8);
  v25 = *(_DWORD *)(v269 + 80);
  v209 = sub_21D7C396C();
  v268 = *(_QWORD *)(v209 - 8);
  v26 = *(_DWORD *)(v268 + 80);
  v208 = sub_21D7C3738();
  v267 = *(_QWORD *)(v208 - 8);
  v27 = *(_DWORD *)(v267 + 80);
  v207 = sub_21D7C07A4();
  v271 = *(_QWORD *)(v207 - 8);
  v28 = *(_DWORD *)(v271 + 80);
  v206 = sub_21D7C0720();
  v29 = *(_QWORD *)(v206 - 8);
  v277 = ~v15;
  v30 = *(_DWORD *)(v29 + 80);
  v205 = sub_21D7C0690();
  v281 = *(_QWORD *)(v205 - 8);
  v31 = *(_DWORD *)(v281 + 80);
  v204 = sub_21D7C0528();
  v32 = *(_QWORD *)(v204 - 8);
  v33 = *(_DWORD *)(v32 + 80);
  v34 = sub_21D7C0594();
  v35 = *(_QWORD *)(v34 - 8);
  v36 = ((v251 | v253 | v249 | v247 | v245 | v243 | v241 | v239 | v237 | v235 | v233 | v231 | v229 | v25 | v26 | v27) | (v28 | v30 | v31 | v33 | *(_DWORD *)(v35 + 80))) & 0xF8;
  v37 = v274;
  v38 = v274 | v36 | 7;
  v39 = (v255 + v38 + v16) & ~v38;
  v40 = (v255 + v38 + v257) & ~v38;
  v272 = v32;
  v273 = v29;
  if (v39 == v40)
  {
    v68 = *(_QWORD *)(v265 + 64);
    v69 = *(_QWORD *)(v266 + 64);
    v70 = *(_DWORD *)(v264 + 84);
    v71 = *(_QWORD *)(v264 + 64);
    v72 = *(_QWORD *)(v263 + 64);
    v73 = *(_QWORD *)(v262 + 64);
    v74 = *(_QWORD *)(v261 + 64);
    v75 = *(_QWORD *)(v260 + 64);
    v76 = *(_QWORD *)(v270 + 64);
    v77 = *(_QWORD *)(v269 + 64);
    v78 = *(_QWORD *)(v268 + 64);
    v79 = *(_QWORD *)(v267 + 64);
    v80 = v274 + 16;
    v82 = v276;
    v81 = v277;
    v83 = v276 + ((v274 + 16) & v277);
    v84 = *(_QWORD *)(v271 + 64);
    v86 = v278;
    v85 = v279;
    v87 = v280;
    v88 = v275;
LABEL_121:
    v89 = v282;
  }
  else
  {
    v198 = v34;
    v41 = *(_QWORD *)(v279 + 64);
    v42 = *(_QWORD *)(v278 + 64);
    v43 = *(_QWORD *)(v280 + 64);
    v44 = *(_QWORD *)(v275 + 64);
    v45 = *(_QWORD *)(v282 + 64);
    if (v43 <= v45)
      v46 = *(_QWORD *)(v282 + 64);
    else
      v46 = *(_QWORD *)(v280 + 64);
    v47 = 16;
    if (v46 <= 0x10)
      v48 = 16;
    else
      v48 = v46;
    if (v44 > 0x10)
      v47 = *(_QWORD *)(v275 + 64);
    v202 = v47 + 1;
    v203 = v47;
    v49 = (v47 & 0xFFFFFFFFFFFFFFF8) + 24;
    if (v45 <= v44)
      v50 = *(_QWORD *)(v275 + 64);
    else
      v50 = *(_QWORD *)(v282 + 64);
    v51 = *(_QWORD *)(v265 + 64);
    if (v51 > v50)
      v50 = *(_QWORD *)(v265 + 64);
    if (v43 <= v50)
      v52 = v50;
    else
      v52 = *(_QWORD *)(v280 + 64);
    v53 = *(_QWORD *)(v266 + 64);
    v246 = v53;
    if (v53 <= v44)
      v53 = *(_QWORD *)(v275 + 64);
    if (v45 > v53)
      v53 = *(_QWORD *)(v282 + 64);
    v240 = *(_DWORD *)(v264 + 84);
    v236 = *(_QWORD *)(v264 + 64);
    if (v240)
      v54 = *(_QWORD *)(v264 + 64);
    else
      v54 = *(_QWORD *)(v264 + 64) + 1;
    __n = v54;
    v55 = v274 + 16;
    v56 = ((v274
          + 16
          + ((((((v54 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v277)
        + v276;
    v57 = v56 + 2;
    if (v56 + 2 <= v53)
      v58 = v53;
    else
      v58 = v56 + 2;
    if (v41 <= v43)
      v41 = *(_QWORD *)(v280 + 64);
    if (v42 <= v41)
      v59 = v41;
    else
      v59 = *(_QWORD *)(v278 + 64);
    v234 = *(_QWORD *)(v263 + 64);
    if (v234 > v59)
      v59 = *(_QWORD *)(v263 + 64);
    v232 = *(_QWORD *)(v262 + 64);
    if (v232 > v59)
      v59 = *(_QWORD *)(v262 + 64);
    if (((((v56 + 9) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > v59)
      v59 = ((((v56 + 9) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    v225 = *(_QWORD *)(v261 + 64);
    if (v225 > v59)
      v59 = *(_QWORD *)(v261 + 64);
    if (*(_QWORD *)(v260 + 64) > v59)
      v59 = *(_QWORD *)(v260 + 64);
    v248 = *(_QWORD *)(v265 + 64);
    if (v51 > v59)
      v59 = *(_QWORD *)(v265 + 64);
    if (v44 > v59)
      v59 = *(_QWORD *)(v275 + 64);
    v223 = *(_QWORD *)(v270 + 64);
    if (v223 > v59)
      v59 = *(_QWORD *)(v270 + 64);
    if (*(_QWORD *)(v269 + 64) > v59)
      v59 = *(_QWORD *)(v269 + 64);
    v60 = *(_QWORD *)(v29 + 64);
    v61 = v52;
    if (v57 > v59)
      v59 = v56 + 2;
    if (v45 > v59)
      v59 = *(_QWORD *)(v282 + 64);
    v242 = *(_QWORD *)(v267 + 64);
    v244 = *(_QWORD *)(v268 + 64);
    if (v244 > v59)
      v59 = *(_QWORD *)(v268 + 64);
    if (*(_QWORD *)(v267 + 64) > v59)
      v59 = *(_QWORD *)(v267 + 64);
    v238 = *(_QWORD *)(v271 + 64);
    if (v238 > v59)
      v59 = *(_QWORD *)(v271 + 64);
    if (v60 > v59)
      v59 = v60;
    if (*(_QWORD *)(v281 + 64) > v59)
      v59 = *(_QWORD *)(v281 + 64);
    if (*(_QWORD *)(v32 + 64) > v59)
      v59 = *(_QWORD *)(v32 + 64);
    if (*(_QWORD *)(v35 + 64) <= v59)
      v62 = v59;
    else
      v62 = *(_QWORD *)(v35 + 64);
    if (v44 <= (v48 & 0xFFFFFFFFFFFFFFF8) + 24)
      v44 = (v48 & 0xFFFFFFFFFFFFFFF8) + 24;
    if (v49 <= ((v202 + v274) & v277) + v276)
      v49 = ((v202 + v274) & v277) + v276;
    v252 = v274 + 16;
    v200 = v62;
    v201 = v58;
    if (v52 + 1 <= v58 + 1)
      v63 = v58 + 1;
    else
      v63 = v52 + 1;
    if (v62 + 1 > v276 + (v55 & v277))
      v64 = v62 + 1;
    else
      v64 = v276 + (v55 & v277);
    if (v42 <= v276)
      v42 = v276;
    if (v44 <= v49)
      v44 = v49;
    if (v63 > v64)
      v64 = v63;
    if (v45 <= v41)
      v45 = v41;
    if (v44 <= v64)
      v44 = v64;
    if (v45 <= v42)
      v45 = v42;
    if (v45 <= v44)
      v45 = v44;
    if (v45 <= 0x11)
      v65 = 17;
    else
      v65 = v45;
    v66 = v275;
    v250 = *(_QWORD *)(v269 + 64);
    v224 = *(_QWORD *)(v260 + 64);
    v230 = v276 + (v55 & v277);
    v90 = v48 + 1;
    v256 = *(_QWORD *)(v34 - 8);
    v258 = v40;
    v254 = v65;
    switch(*(_BYTE *)(v39 + v65))
    {
      case 0:
        v94 = v48;
        swift_bridgeObjectRelease();
        goto LABEL_181;
      case 1:
LABEL_178:
        v91 = *(void (**)(uint64_t, uint64_t))(v279 + 8);
        v92 = v39;
        v93 = v220;
        goto LABEL_180;
      case 2:
LABEL_179:
        v91 = *(void (**)(uint64_t, uint64_t))(v278 + 8);
        v92 = v39;
        v93 = v219;
        goto LABEL_180;
      case 3:
LABEL_177:
        v91 = *(void (**)(uint64_t, uint64_t))(v280 + 8);
        v92 = v39;
        v93 = v221;
        goto LABEL_180;
      case 4:
      case 0xD:
LABEL_124:
        v91 = *(void (**)(uint64_t, uint64_t))(v275 + 8);
        v92 = v39;
        v93 = v228;
        goto LABEL_180;
      case 5:
        switch(*(_BYTE *)(v39 + v48))
        {
          case 0:
            v103 = v48;
            (*(void (**)(uint64_t, uint64_t))(v280 + 8))(v39, v221);
            break;
          case 1:
          case 3:
            v103 = v48;
            swift_bridgeObjectRelease();
            break;
          case 2:
            v103 = v48;
            (*(void (**)(uint64_t, uint64_t))(v282 + 8))(v39, v222);
            break;
          default:
            if (v48 <= 3)
              v95 = v48;
            else
              v95 = 4;
            __asm { BR              X12 }
            return result;
        }
        goto LABEL_162;
      case 6:
        v96 = *(unsigned __int8 *)(v39 + v203);
        if (v96 >= 2)
        {
          if (v203 <= 3)
            v97 = v203;
          else
            v97 = 4;
          __asm { BR              X12 }
        }
        v103 = v48;
        if (v96 == 1)
          swift_bridgeObjectRelease();
        else
          (*(void (**)(uint64_t, uint64_t))(v275 + 8))(v39, v228);
LABEL_162:
        swift_bridgeObjectRelease();
        goto LABEL_172;
      case 7:
        v98 = *(unsigned __int8 *)(v39 + v203);
        if (v98 >= 2)
        {
          if (v203 <= 3)
            v99 = v203;
          else
            v99 = 4;
          __asm { BR              X12 }
        }
        if (v98 == 1)
          swift_bridgeObjectRelease();
        else
          (*(void (**)(uint64_t, uint64_t))(v275 + 8))(v39, v228);
        (*(void (**)(uint64_t, uint64_t))(v226 + 8))((v39 + v274 + v202) & v277, v227);
        v35 = v256;
        v40 = v258;
        v65 = v254;
        v61 = v52;
        goto LABEL_187;
      case 8:
        goto LABEL_187;
      case 9:
        v103 = v48;
        switch(*(_BYTE *)(v39 + v52))
        {
          case 0:
            (*(void (**)(uint64_t, uint64_t))(v275 + 8))(v39, v228);
            break;
          case 1:
            (*(void (**)(uint64_t, uint64_t))(v282 + 8))(v39, v222);
            break;
          case 2:
            (*(void (**)(uint64_t, uint64_t))(v265 + 8))(v39, v217);
            break;
          case 3:
            (*(void (**)(uint64_t, uint64_t))(v280 + 8))(v39, v221);
            break;
          default:
            if (v52 <= 3)
              v100 = v52;
            else
              v100 = 4;
            __asm { BR              X12 }
            return result;
        }
LABEL_172:
        v35 = v256;
        v40 = v258;
        v65 = v254;
        v48 = v103;
        goto LABEL_187;
      case 0xA:
LABEL_174:
        v91 = *(void (**)(uint64_t, uint64_t))(v282 + 8);
        v92 = v39;
        v93 = v222;
        goto LABEL_180;
      case 0xB:
        switch(*(_BYTE *)(v39 + v58))
        {
          case 0:
            goto LABEL_124;
          case 1:
            v91 = *(void (**)(uint64_t, uint64_t))(v266 + 8);
            v92 = v39;
            v93 = v216;
            goto LABEL_180;
          case 2:
          case 3:
            goto LABEL_174;
          case 4:
            goto LABEL_324;
          default:
            if (v58 <= 3)
              v101 = v58;
            else
              v101 = 4;
            __asm { BR              X12 }
            return result;
        }
      case 0xC:
        switch(*(_BYTE *)(v39 + v62))
        {
          case 0:
            goto LABEL_177;
          case 1:
            goto LABEL_178;
          case 2:
            goto LABEL_179;
          case 3:
            v91 = *(void (**)(uint64_t, uint64_t))(v263 + 8);
            v92 = v39;
            v93 = v215;
            goto LABEL_180;
          case 4:
            v91 = *(void (**)(uint64_t, uint64_t))(v262 + 8);
            v92 = v39;
            v93 = v214;
            goto LABEL_180;
          case 5:
            if (!__swift_getEnumTagSinglePayload(v39, 1, v218))
              (*(void (**)(uint64_t, uint64_t))(v264 + 8))(v39, v218);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            (*(void (**)(size_t, uint64_t))(v226 + 8))((v252+ (((((((v39 | 7) + __n) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v277, v227);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v66 = v275;
            v35 = v256;
            v40 = v258;
            v65 = v254;
            v61 = v52;
            goto LABEL_187;
          case 6:
            v91 = *(void (**)(uint64_t, uint64_t))(v261 + 8);
            v92 = v39;
            v93 = v213;
            goto LABEL_180;
          case 7:
            v91 = *(void (**)(uint64_t, uint64_t))(v260 + 8);
            v92 = v39;
            v93 = v212;
            goto LABEL_180;
          case 8:
            v91 = *(void (**)(uint64_t, uint64_t))(v265 + 8);
            v92 = v39;
            v93 = v217;
            goto LABEL_180;
          case 9:
            goto LABEL_124;
          case 0xA:
            v91 = *(void (**)(uint64_t, uint64_t))(v270 + 8);
            v92 = v39;
            v93 = v211;
            goto LABEL_180;
          case 0xB:
            v91 = *(void (**)(uint64_t, uint64_t))(v269 + 8);
            v92 = v39;
            v93 = v210;
            goto LABEL_180;
          case 0xC:
LABEL_324:
            if (!__swift_getEnumTagSinglePayload(v39, 1, v218))
              (*(void (**)(uint64_t, uint64_t))(v264 + 8))(v39, v218);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            (*(void (**)(size_t, uint64_t))(v226 + 8))((v252+ (((((((v39 | 7) + __n) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v277, v227);
            v66 = v275;
            v35 = v256;
            v40 = v258;
            v65 = v254;
            goto LABEL_187;
          case 0xD:
            goto LABEL_174;
          case 0xE:
            v91 = *(void (**)(uint64_t, uint64_t))(v268 + 8);
            v92 = v39;
            v93 = v209;
            goto LABEL_180;
          case 0xF:
            v91 = *(void (**)(uint64_t, uint64_t))(v267 + 8);
            v92 = v39;
            v93 = v208;
            goto LABEL_180;
          case 0x10:
            v91 = *(void (**)(uint64_t, uint64_t))(v271 + 8);
            v92 = v39;
            v93 = v207;
            goto LABEL_180;
          case 0x11:
            v91 = *(void (**)(uint64_t, uint64_t))(v273 + 8);
            v92 = v39;
            v93 = v206;
            goto LABEL_180;
          case 0x12:
            v91 = *(void (**)(uint64_t, uint64_t))(v281 + 8);
            v92 = v39;
            v93 = v205;
            goto LABEL_180;
          case 0x13:
            v91 = *(void (**)(uint64_t, uint64_t))(v272 + 8);
            v92 = v39;
            v93 = v204;
            goto LABEL_180;
          case 0x14:
            v91 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
            v92 = v39;
            v93 = v198;
            goto LABEL_180;
          default:
            if (v62 <= 3)
              v102 = v62;
            else
              v102 = 4;
            __asm { BR              X12 }
            return result;
        }
      case 0xE:
        v93 = v227;
        v91 = *(void (**)(uint64_t, uint64_t))(v226 + 8);
        v92 = v39;
LABEL_180:
        v94 = v48;
        v91(v92, v93);
LABEL_181:
        v48 = v94;
        break;
      case 0xF:
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v226 + 8))((v252 + v39) & v277, v227);
        v61 = v52;
        v90 = v48 + 1;
        break;
      default:
        if (v65 <= 3)
          v67 = v65;
        else
          v67 = 4;
        __asm { BR              X12 }
        return result;
    }
    v65 = v254;
    v35 = v256;
    v40 = v258;
LABEL_187:
    v105 = v66;
    switch(*(_BYTE *)(v40 + v65))
    {
      case 0:
        *(_OWORD *)v39 = *(_OWORD *)v40;
        *(_BYTE *)(v39 + v65) = 0;
        goto LABEL_226;
      case 1:
        v106 = v65;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v279 + 32))(v39, v40, v220);
        v35 = v256;
        v40 = v258;
        *(_BYTE *)(v39 + v106) = 1;
        v85 = v279;
        v82 = v276;
        v81 = v277;
        v69 = v246;
        v68 = v248;
        v89 = v282;
        v79 = v242;
        v78 = v244;
        v70 = v240;
        v71 = v236;
        v84 = v238;
        v73 = v232;
        v72 = v234;
        v83 = v230;
        v75 = v224;
        v74 = v225;
        v76 = v223;
        v88 = v105;
        v87 = v280;
        v77 = v250;
        v80 = v274 + 16;
        v86 = v278;
        goto LABEL_232;
      case 2:
        v107 = v65;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v278 + 32))(v39, v40, v219);
        v86 = v278;
        v35 = v256;
        v40 = v258;
        *(_BYTE *)(v39 + v107) = 2;
        v82 = v276;
        v81 = v277;
        v69 = v246;
        v68 = v248;
        v89 = v282;
        v79 = v242;
        v78 = v244;
        v70 = v240;
        v71 = v236;
        v84 = v238;
        v73 = v232;
        v72 = v234;
        v83 = v230;
        v75 = v224;
        v74 = v225;
        v76 = v223;
        v88 = v105;
        v87 = v280;
        v77 = v250;
        v80 = v274 + 16;
        goto LABEL_231;
      case 3:
        v108 = v65;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v280 + 32))(v39, v40, v221);
        v35 = v256;
        v40 = v258;
        *(_BYTE *)(v39 + v108) = 3;
        v82 = v276;
        v81 = v277;
        v69 = v246;
        v68 = v248;
        v89 = v282;
        v79 = v242;
        v78 = v244;
        v70 = v240;
        v71 = v236;
        v84 = v238;
        v73 = v232;
        v72 = v234;
        v83 = v230;
        v75 = v224;
        v74 = v225;
        v76 = v223;
        v88 = v105;
        v87 = v280;
        goto LABEL_229;
      case 4:
        v109 = v65;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 32))(v39, v40, v228);
        v35 = v256;
        v40 = v258;
        v110 = 4;
        goto LABEL_225;
      case 5:
        v81 = v277;
        switch(*(_BYTE *)(v40 + v48))
        {
          case 0:
            v88 = v66;
            v87 = v280;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v280 + 32))(v39, v40, v221);
            v146 = v39;
            v65 = v254;
            v35 = v256;
            v40 = v258;
            v147 = 0;
            break;
          case 1:
            v88 = v66;
            v87 = v280;
            v146 = v39;
            *(_OWORD *)v39 = *(_OWORD *)v40;
            v147 = 1;
            break;
          case 2:
            v88 = v66;
            v87 = v280;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v282 + 32))(v39, v40, v222);
            v146 = v39;
            v65 = v254;
            v35 = v256;
            v40 = v258;
            v147 = 2;
            break;
          case 3:
            v88 = v66;
            v87 = v280;
            v146 = v39;
            *(_OWORD *)v39 = *(_OWORD *)v40;
            v147 = 3;
            break;
          default:
            if (v48 <= 3)
              v111 = v48;
            else
              v111 = 4;
            __asm { BR              X12 }
            return result;
        }
        v78 = v244;
        v69 = v246;
        v79 = v242;
        v70 = v240;
        v71 = v236;
        v84 = v238;
        v73 = v232;
        v72 = v234;
        v83 = v230;
        v75 = v224;
        v74 = v225;
        v76 = v223;
        *(_BYTE *)(v146 + v48) = v147;
        *(_OWORD *)(((v146 | 7) + v90) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((v40 | 7) + v90) & 0xFFFFFFFFFFFFF8);
        v39 = v146;
        *(_BYTE *)(v146 + v65) = 5;
        v77 = v250;
        v80 = v274 + 16;
        v86 = v278;
        v85 = v279;
        v82 = v276;
        v68 = v248;
        goto LABEL_121;
      case 6:
        v112 = *(unsigned __int8 *)(v40 + v203);
        if (v112 >= 2)
        {
          if (v203 <= 3)
            v113 = v203;
          else
            v113 = 4;
          __asm { BR              X12 }
        }
        v68 = v248;
        v82 = v276;
        v81 = v277;
        if (v112 == 1)
        {
          v88 = v66;
          v87 = v280;
          *(_OWORD *)v39 = *(_OWORD *)v40;
          v148 = 1;
        }
        else
        {
          v87 = v280;
          v88 = v66;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 32))(v39, v40, v228);
          v65 = v254;
          v35 = v256;
          v40 = v258;
          v148 = 0;
        }
        v78 = v244;
        v69 = v246;
        v79 = v242;
        v70 = v240;
        v71 = v236;
        v84 = v238;
        v73 = v232;
        v72 = v234;
        v83 = v230;
        v75 = v224;
        v74 = v225;
        v76 = v223;
        *(_BYTE *)(v39 + v203) = v148;
        *(_OWORD *)(((v39 | 7) + v202) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((v40 | 7) + v202) & 0xFFFFFFFFFFFFF8);
        *(_BYTE *)(v39 + v65) = 6;
        v77 = v250;
        v80 = v274 + 16;
        v86 = v278;
        v85 = v279;
        v89 = v282;
        goto LABEL_232;
      case 7:
        v114 = v203;
        v115 = *(unsigned __int8 *)(v40 + v203);
        if (v115 >= 2)
        {
          if (v203 <= 3)
            v116 = v203;
          else
            v116 = 4;
          __asm { BR              X12 }
        }
        v68 = v248;
        v82 = v276;
        v81 = v277;
        if (v115 == 1)
        {
          v88 = v66;
          v87 = v280;
          *(_OWORD *)v39 = *(_OWORD *)v40;
          v149 = 1;
        }
        else
        {
          v87 = v280;
          v88 = v66;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 32))(v39, v40, v228);
          v114 = v203;
          v40 = v258;
          v149 = 0;
        }
        *(_BYTE *)(v39 + v114) = v149;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v226 + 32))((v39 + v274 + v202) & v277, (v40 + v274 + v202) & v277, v227);
        v35 = v256;
        v40 = v258;
        v80 = v274 + 16;
        *(_BYTE *)(v39 + v254) = 7;
        v78 = v244;
        v69 = v246;
        v79 = v242;
        v70 = v240;
        v71 = v236;
        v84 = v238;
        v73 = v232;
        v72 = v234;
        v83 = v230;
        v75 = v224;
        v74 = v225;
        v76 = v223;
        v77 = v250;
        v86 = v278;
        v85 = v279;
        goto LABEL_121;
      case 8:
        v117 = *(_OWORD *)v40;
        *(_BYTE *)(v39 + 16) = *(_BYTE *)(v40 + 16);
        *(_OWORD *)v39 = v117;
        *(_BYTE *)(v39 + v65) = 8;
        goto LABEL_226;
      case 9:
        v68 = v248;
        v88 = v66;
        v150 = 0;
        v82 = v276;
        v81 = v277;
        v151 = v66;
        switch(*(_BYTE *)(v40 + v61))
        {
          case 0:
            goto LABEL_346;
          case 1:
            v150 = 1;
            v151 = v282;
            v152 = v222;
            goto LABEL_345;
          case 2:
            v150 = 2;
            v151 = v265;
            v152 = v217;
            goto LABEL_345;
          case 3:
            v150 = 3;
            v151 = v280;
            v152 = v221;
LABEL_345:
            v228 = v152;
LABEL_346:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v151 + 32))(v39, v40, v228);
            v35 = v256;
            v40 = v258;
            *(_BYTE *)(v39 + v61) = v150;
            *(_BYTE *)(v39 + v254) = 9;
            v89 = v282;
            v78 = v244;
            v69 = v246;
            v79 = v242;
            v70 = v240;
            v71 = v236;
            v84 = v238;
            v73 = v232;
            v72 = v234;
            v83 = v230;
            v75 = v224;
            v74 = v225;
            v76 = v223;
            break;
          default:
            if (v61 <= 3)
              v118 = v61;
            else
              v118 = 4;
            __asm { BR              X12 }
            return result;
        }
        goto LABEL_228;
      case 0xA:
        v82 = v276;
        v81 = v277;
        v68 = v248;
        v119 = v65;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v282 + 32))(v39, v40, v222);
        v89 = v282;
        v35 = v256;
        v40 = v258;
        *(_BYTE *)(v39 + v119) = 10;
        goto LABEL_227;
      case 0xB:
        switch(*(_BYTE *)(v40 + v201))
        {
          case 0:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 32))(v39, v40, v228);
            v89 = v282;
            v153 = v201;
            v154 = v254;
            v35 = v256;
            v40 = v258;
            v155 = 0;
            goto LABEL_352;
          case 1:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v266 + 32))(v39, v40, v216);
            v89 = v282;
            v153 = v201;
            v154 = v254;
            v35 = v256;
            v40 = v258;
            v155 = 1;
            goto LABEL_352;
          case 2:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v282 + 32))(v39, v40, v222);
            v89 = v282;
            v153 = v201;
            v154 = v254;
            v35 = v256;
            v40 = v258;
            v155 = 2;
            goto LABEL_352;
          case 3:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v282 + 32))(v39, v40, v222);
            v89 = v282;
            v153 = v201;
            v154 = v254;
            v35 = v256;
            v40 = v258;
            v155 = 3;
LABEL_352:
            v78 = v244;
            v69 = v246;
            v79 = v242;
            v70 = v240;
            v71 = v236;
            v84 = v238;
            v73 = v232;
            v72 = v234;
            v83 = v230;
            v75 = v224;
            v74 = v225;
            v76 = v223;
            v86 = v278;
            break;
          case 4:
            v156 = v40;
            if (__swift_getEnumTagSinglePayload(v40, 1, v218))
            {
              v157 = __n;
              memcpy((void *)v39, (const void *)v156, __n);
              v75 = v224;
            }
            else
            {
              (*(void (**)(uint64_t, unint64_t, uint64_t))(v264 + 32))(v39, v156, v218);
              __swift_storeEnumTagSinglePayload(v39, 0, 1, v218);
              v75 = v224;
              v157 = __n;
            }
            v160 = (_OWORD *)(((v39 | 7) + v157) & 0xFFFFFFFFFFFFFFF8);
            v161 = (_OWORD *)(((v156 | 7) + v157) & 0xFFFFFFFFFFFFFFF8);
            *v160 = *v161;
            v162 = (_OWORD *)(((unint64_t)v160 + 23) & 0xFFFFFFFFFFFFFFF8);
            v163 = (_OWORD *)(((unint64_t)v161 + 23) & 0xFFFFFFFFFFFFFFF8);
            *v162 = *v163;
            v164 = (_OWORD *)(((unint64_t)v162 + 23) & 0xFFFFFFFFFFFFFFF8);
            v165 = (_OWORD *)(((unint64_t)v163 + 23) & 0xFFFFFFFFFFFFFFF8);
            *v164 = *v165;
            v166 = ((unint64_t)v164 + v252) & v277;
            v167 = ((unint64_t)v165 + v252) & v277;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v226 + 32))(v166, v167, v227);
            v168 = (_BYTE *)(v166 + v276);
            *v168 = *(_BYTE *)(v167 + v276);
            v168[1] = *(_BYTE *)(v167 + v276 + 1);
            v155 = 4;
            v40 = v156;
            v154 = v254;
            v35 = v256;
            v78 = v244;
            v69 = v246;
            v79 = v242;
            v70 = v240;
            v71 = v236;
            v84 = v238;
            v73 = v232;
            v72 = v234;
            v83 = v230;
            v74 = v225;
            v76 = v223;
            v86 = v278;
            v153 = v201;
            v89 = v282;
            break;
          default:
            if (v201 <= 3)
              v120 = v201;
            else
              v120 = 4;
            __asm { BR              X12 }
            return result;
        }
        *(_BYTE *)(v39 + v153) = v155;
        *(_BYTE *)(v39 + v154) = 11;
        goto LABEL_403;
      case 0xC:
        switch(*(_BYTE *)(v40 + v200))
        {
          case 0:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v280 + 32))(v39, v40, v221);
            v158 = v254;
            v35 = v256;
            v40 = v258;
            v159 = 0;
            goto LABEL_399;
          case 1:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v279 + 32))(v39, v40, v220);
            v158 = v254;
            v35 = v256;
            v40 = v258;
            v159 = 1;
            goto LABEL_399;
          case 2:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v278 + 32))(v39, v40, v219);
            v158 = v254;
            v35 = v256;
            v86 = v278;
            v40 = v258;
            v159 = 2;
            v169 = v39;
            v89 = v282;
            v78 = v244;
            v69 = v246;
            v79 = v242;
            v70 = v240;
            v71 = v236;
            v84 = v238;
            v73 = v232;
            v72 = v234;
            v83 = v230;
            v75 = v224;
            v74 = v225;
            v76 = v223;
            goto LABEL_402;
          case 3:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v263 + 32))(v39, v40, v215);
            v158 = v254;
            v35 = v256;
            v40 = v258;
            v159 = 3;
            goto LABEL_399;
          case 4:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v262 + 32))(v39, v40, v214);
            v158 = v254;
            v35 = v256;
            v40 = v258;
            v159 = 4;
            goto LABEL_399;
          case 5:
            v170 = v57;
            v171 = v40;
            if (__swift_getEnumTagSinglePayload(v40, 1, v218))
            {
              v172 = __n;
              memcpy((void *)v39, (const void *)v171, __n);
              v75 = v224;
              v173 = v277;
            }
            else
            {
              (*(void (**)(uint64_t, unint64_t, uint64_t))(v264 + 32))(v39, v171, v218);
              __swift_storeEnumTagSinglePayload(v39, 0, 1, v218);
              v75 = v224;
              v173 = v277;
              v172 = __n;
            }
            v178 = (_OWORD *)(((v39 | 7) + v172) & 0xFFFFFFFFFFFFFFF8);
            v179 = (_OWORD *)(((v171 | 7) + v172) & 0xFFFFFFFFFFFFFFF8);
            *v178 = *v179;
            v180 = (_OWORD *)(((unint64_t)v178 + 23) & 0xFFFFFFFFFFFFFFF8);
            v181 = (_OWORD *)(((unint64_t)v179 + 23) & 0xFFFFFFFFFFFFFFF8);
            *v180 = *v181;
            v182 = (_OWORD *)(((unint64_t)v180 + 23) & 0xFFFFFFFFFFFFFFF8);
            v183 = (_OWORD *)(((unint64_t)v181 + 23) & 0xFFFFFFFFFFFFFFF8);
            *v182 = *v183;
            v184 = ((unint64_t)v182 + v252) & v173;
            v185 = ((unint64_t)v183 + v252) & v173;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v226 + 32))(v184, v185, v227);
            v186 = (_BYTE *)(v184 + v276);
            *v186 = *(_BYTE *)(v185 + v276);
            v186[1] = *(_BYTE *)(v185 + v276 + 1);
            v187 = (_OWORD *)(((v39 | 7) + v170) & 0xFFFFFFFFFFFFFFF8);
            v188 = (_OWORD *)(((v171 | 7) + v170) & 0xFFFFFFFFFFFFFFF8);
            *v187 = *v188;
            *(_OWORD *)(((unint64_t)v187 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v188 + 23) & 0xFFFFFFFFFFFFF8);
            v159 = 5;
            v169 = v39;
            v89 = v282;
            v40 = v171;
            goto LABEL_408;
          case 6:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v261 + 32))(v39, v40, v213);
            v158 = v254;
            v35 = v256;
            v40 = v258;
            v159 = 6;
            goto LABEL_399;
          case 7:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v260 + 32))(v39, v40, v212);
            v158 = v254;
            v35 = v256;
            v40 = v258;
            v159 = 7;
            goto LABEL_399;
          case 8:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v265 + 32))(v39, v40, v217);
            v158 = v254;
            v35 = v256;
            v40 = v258;
            v159 = 8;
            goto LABEL_399;
          case 9:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 32))(v39, v40, v228);
            v158 = v254;
            v35 = v256;
            v40 = v258;
            v159 = 9;
            goto LABEL_399;
          case 0xA:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v270 + 32))(v39, v40, v211);
            v158 = v254;
            v35 = v256;
            v40 = v258;
            v159 = 10;
            goto LABEL_399;
          case 0xB:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v269 + 32))(v39, v40, v210);
            v158 = v254;
            v35 = v256;
            v40 = v258;
            v159 = 11;
            goto LABEL_399;
          case 0xC:
            v174 = v40;
            if (__swift_getEnumTagSinglePayload(v40, 1, v218))
            {
              v175 = __n;
              memcpy((void *)v39, (const void *)v174, __n);
              v75 = v224;
              v176 = v274 + 16;
              v177 = v277;
            }
            else
            {
              (*(void (**)(uint64_t, unint64_t, uint64_t))(v264 + 32))(v39, v174, v218);
              __swift_storeEnumTagSinglePayload(v39, 0, 1, v218);
              v75 = v224;
              v176 = v274 + 16;
              v177 = v277;
              v175 = __n;
            }
            v189 = (_OWORD *)(((v39 | 7) + v175) & 0xFFFFFFFFFFFFFFF8);
            v190 = (_OWORD *)(((v174 | 7) + v175) & 0xFFFFFFFFFFFFFFF8);
            *v189 = *v190;
            v191 = (_OWORD *)(((unint64_t)v189 + 23) & 0xFFFFFFFFFFFFFFF8);
            v192 = (_OWORD *)(((unint64_t)v190 + 23) & 0xFFFFFFFFFFFFFFF8);
            *v191 = *v192;
            v193 = (_OWORD *)(((unint64_t)v191 + 23) & 0xFFFFFFFFFFFFFFF8);
            v194 = (_OWORD *)(((unint64_t)v192 + 23) & 0xFFFFFFFFFFFFFFF8);
            *v193 = *v194;
            v195 = ((unint64_t)v193 + v176) & v177;
            v196 = ((unint64_t)v194 + v176) & v177;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v226 + 32))(v195, v196, v227);
            v197 = (_BYTE *)(v195 + v276);
            *v197 = *(_BYTE *)(v196 + v276);
            v197[1] = *(_BYTE *)(v196 + v276 + 1);
            v159 = 12;
            v169 = v39;
            v89 = v282;
            v40 = v174;
LABEL_408:
            v158 = v254;
            v35 = v256;
            v78 = v244;
            v69 = v246;
            v79 = v242;
            v70 = v240;
            v71 = v236;
            v84 = v238;
            v73 = v232;
            v72 = v234;
            v83 = v230;
            v74 = v225;
            goto LABEL_401;
          case 0xD:
            v169 = v39;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v282 + 32))(v39, v40, v222);
            v89 = v282;
            v158 = v254;
            v35 = v256;
            v40 = v258;
            v159 = 13;
            goto LABEL_400;
          case 0xE:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v268 + 32))(v39, v40, v209);
            v158 = v254;
            v35 = v256;
            v40 = v258;
            v159 = 14;
            goto LABEL_399;
          case 0xF:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v267 + 32))(v39, v40, v208);
            v158 = v254;
            v35 = v256;
            v40 = v258;
            v159 = 15;
            goto LABEL_399;
          case 0x10:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v271 + 32))(v39, v40, v207);
            v158 = v254;
            v35 = v256;
            v40 = v258;
            v159 = 16;
            goto LABEL_399;
          case 0x11:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v273 + 32))(v39, v40, v206);
            v158 = v254;
            v35 = v256;
            v40 = v258;
            v159 = 17;
            goto LABEL_399;
          case 0x12:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v281 + 32))(v39, v40, v205);
            v158 = v254;
            v35 = v256;
            v40 = v258;
            v159 = 18;
            goto LABEL_399;
          case 0x13:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v272 + 32))(v39, v40, v204);
            v158 = v254;
            v35 = v256;
            v40 = v258;
            v159 = 19;
            goto LABEL_399;
          case 0x14:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32))(v39, v40, v198);
            v158 = v254;
            v35 = v256;
            v40 = v258;
            v159 = 20;
LABEL_399:
            v169 = v39;
            v89 = v282;
LABEL_400:
            v78 = v244;
            v69 = v246;
            v79 = v242;
            v70 = v240;
            v71 = v236;
            v84 = v238;
            v73 = v232;
            v72 = v234;
            v83 = v230;
            v75 = v224;
            v74 = v225;
LABEL_401:
            v76 = v223;
            v86 = v278;
LABEL_402:
            *(_BYTE *)(v169 + v200) = v159;
            v39 = v169;
            *(_BYTE *)(v169 + v158) = 12;
            break;
          default:
            if (v200 <= 3)
              v121 = v200;
            else
              v121 = 4;
            __asm { BR              X12 }
            return result;
        }
LABEL_403:
        v77 = v250;
        v80 = v274 + 16;
        v85 = v279;
        v87 = v280;
        v37 = v274;
        v88 = v275;
        v82 = v276;
        v81 = v277;
        v68 = v248;
        goto LABEL_232;
      case 0xD:
        v109 = v65;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 32))(v39, v40, v228);
        v35 = v256;
        v40 = v258;
        v110 = 13;
        goto LABEL_225;
      case 0xE:
        v109 = v65;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v226 + 32))(v39, v40, v227);
        v35 = v256;
        v40 = v258;
        v110 = 14;
LABEL_225:
        *(_BYTE *)(v39 + v109) = v110;
LABEL_226:
        v82 = v276;
        v81 = v277;
        v68 = v248;
        v89 = v282;
LABEL_227:
        v78 = v244;
        v69 = v246;
        v79 = v242;
        v70 = v240;
        v71 = v236;
        v84 = v238;
        v73 = v232;
        v72 = v234;
        v83 = v230;
        v75 = v224;
        v74 = v225;
        v76 = v223;
        v88 = v105;
LABEL_228:
        v87 = v280;
LABEL_229:
        v80 = v274 + 16;
        break;
      case 0xF:
        *(_OWORD *)v39 = *(_OWORD *)v40;
        v88 = v66;
        v87 = v280;
        v80 = v274 + 16;
        v81 = v277;
        v145 = v65;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v226 + 32))((v252 + v39) & v277, (v252 + v40) & v277, v227);
        v35 = v256;
        v40 = v258;
        *(_BYTE *)(v39 + v145) = 15;
        v82 = v276;
        v69 = v246;
        v68 = v248;
        v89 = v282;
        v79 = v242;
        v78 = v244;
        v70 = v240;
        v71 = v236;
        v84 = v238;
        v73 = v232;
        v72 = v234;
        v83 = v230;
        v75 = v224;
        v74 = v225;
        v76 = v223;
        break;
      default:
        if (v65 <= 3)
          v104 = v65;
        else
          v104 = 4;
        __asm { BR              X12 }
        return result;
    }
    v77 = v250;
    v86 = v278;
LABEL_231:
    v85 = v279;
  }
LABEL_232:
  v122 = *(_QWORD *)(v85 + 64);
  v123 = *(_QWORD *)(v86 + 64);
  v124 = *(_QWORD *)(v87 + 64);
  v125 = *(_QWORD *)(v88 + 64);
  v126 = *(_QWORD *)(v89 + 64);
  if (v70)
    v127 = v71;
  else
    v127 = v71 + 1;
  v128 = ((v80 + ((((((v127 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v81)
       + v82;
  v129 = ((((v128 + 9) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v122 <= v124)
    v122 = *(_QWORD *)(v87 + 64);
  if (v123 <= v122)
    v130 = v122;
  else
    v130 = v123;
  if (v72 > v130)
    v130 = v72;
  if (v73 > v130)
    v130 = v73;
  if (v129 <= v130)
    v129 = v130;
  if (v74 > v129)
    v129 = v74;
  if (v75 > v129)
    v129 = v75;
  if (v68 > v129)
    v129 = v68;
  if (v125 > v129)
    v129 = *(_QWORD *)(v88 + 64);
  if (v76 > v129)
    v129 = v76;
  if (v77 > v129)
    v129 = v77;
  v131 = v128 + 2;
  if (v69 <= v125)
    v132 = *(_QWORD *)(v88 + 64);
  else
    v132 = v69;
  if (v126 > v132)
    v132 = v126;
  if (v131 > v132)
    v132 = v131;
  if (v124 <= v126)
    v133 = v126;
  else
    v133 = *(_QWORD *)(v87 + 64);
  v134 = 16;
  if (v133 <= 0x10)
    v133 = 16;
  v135 = (v133 & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v125 > 0x10)
    v134 = *(_QWORD *)(v88 + 64);
  v136 = (v134 & 0xFFFFFFFFFFFFFFF8) + 24;
  v137 = ((v37 + v134 + 1) & v81) + v82;
  if (v126 <= v125)
    v138 = *(_QWORD *)(v88 + 64);
  else
    v138 = v126;
  if (v68 > v138)
    v138 = v68;
  if (v124 <= v138)
    v124 = v138;
  v139 = v124 + 1;
  if (v131 <= v129)
    v131 = v129;
  if (v126 > v131)
    v131 = v126;
  if (v78 > v131)
    v131 = v78;
  if (v79 > v131)
    v131 = v79;
  if (v84 > v131)
    v131 = v84;
  if (*(_QWORD *)(v273 + 64) > v131)
    v131 = *(_QWORD *)(v273 + 64);
  if (*(_QWORD *)(v281 + 64) > v131)
    v131 = *(_QWORD *)(v281 + 64);
  if (*(_QWORD *)(v272 + 64) > v131)
    v131 = *(_QWORD *)(v272 + 64);
  if (*(_QWORD *)(v35 + 64) > v131)
    v131 = *(_QWORD *)(v35 + 64);
  if (v125 <= v135)
    v125 = v135;
  if (v136 <= v137)
    v140 = v137;
  else
    v140 = v136;
  if (v139 <= v132 + 1)
    v139 = v132 + 1;
  if (v83 > v126)
    v126 = v83;
  if (v123 <= v82)
    v123 = v82;
  if (v125 <= v140)
    v125 = v140;
  if (v131 + 1 > v139)
    v139 = v131 + 1;
  if (v126 <= v122)
    v126 = v122;
  if (v139 > v125)
    v125 = v139;
  if (v126 > v123)
    v123 = v126;
  if (v125 > v123)
    v123 = v125;
  if (v123 <= 0x11)
    v123 = 17;
  v141 = v123 + 1;
  v142 = ((v39 | 7) + v141) & 0xFFFFFFFFFFFFFFF8;
  v143 = ((v40 | 7) + v141) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v142 = *(_QWORD *)v143;
  *(_QWORD *)(v142 + 8) = *(_QWORD *)(v143 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v142 + 16) = *(_BYTE *)(v143 + 16);
  *(_BYTE *)(v142 + 17) = *(_BYTE *)(v143 + 17);
  return v259;
}

uint64_t sub_21CE91668(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unsigned int v3;
  uint64_t v4;
  unsigned int v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  int v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  uint64_t v62;
  unint64_t v64;
  unint64_t v65;
  int v66;
  unsigned int EnumTagSinglePayload;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unsigned int v90;
  unsigned int v91;
  int v92;
  unsigned int v93;
  uint64_t v94;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  int v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unsigned int v105;

  v69 = *(_QWORD *)(a3 + 16);
  v94 = *(_QWORD *)(v69 - 8);
  v3 = *(_DWORD *)(v94 + 84);
  v68 = sub_21D7BF754();
  v4 = *(_QWORD *)(v68 - 8);
  v105 = *(_DWORD *)(v4 + 84);
  v5 = v105 - 1;
  if (!v105)
    v5 = 0;
  if (v5 <= 0x7FFFFFFE)
    v5 = 2147483646;
  v90 = v5;
  v91 = v3;
  if (v3 > v5)
    v5 = v3;
  v93 = v5;
  v88 = *(_QWORD *)(sub_21D7C37A4() - 8);
  v6 = *(_QWORD *)(v88 + 64);
  v7 = *(_QWORD *)(sub_21D7C06C0() - 8);
  v86 = v7;
  v8 = *(_QWORD *)(v7 + 64);
  if (v6 <= v8)
    v9 = *(_QWORD *)(v7 + 64);
  else
    v9 = v6;
  v10 = *(_QWORD *)(sub_21D7C3660() - 8);
  v89 = v10;
  v11 = *(_QWORD *)(v10 + 64);
  if (v9 <= v11)
    v12 = *(_QWORD *)(v10 + 64);
  else
    v12 = v9;
  v13 = *(_QWORD *)(sub_21D7C3B58() - 8);
  v87 = v13;
  v14 = *(_QWORD *)(v13 + 64);
  if (v12 <= v14)
    v15 = *(_QWORD *)(v13 + 64);
  else
    v15 = v12;
  v16 = *(_QWORD *)(sub_21D7C3564() - 8);
  v85 = v16;
  v17 = *(_QWORD *)(v16 + 64);
  if (v11 <= v17)
    v18 = *(_QWORD *)(v16 + 64);
  else
    v18 = v11;
  v19 = 16;
  if (v18 <= 0x10)
    v18 = 16;
  v20 = (v18 & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v15 > v20)
    v20 = v15;
  if (v14 > 0x10)
    v19 = v14;
  v21 = v19 + *(_DWORD *)(v4 + 80);
  v22 = (v19 & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v20 <= v22)
    v20 = v22;
  v92 = *(_DWORD *)(v4 + 80);
  v23 = *(_QWORD *)(v4 + 64);
  if (v20 <= ((v21 + 1) & ~(unint64_t)v92) + v23)
    v24 = ((v21 + 1) & ~(unint64_t)v92) + v23;
  else
    v24 = v20;
  if (v17 <= v14)
    v25 = v14;
  else
    v25 = v17;
  v26 = *(_QWORD *)(sub_21D7C30FC() - 8);
  v84 = v26;
  v27 = *(_QWORD *)(v26 + 64);
  if (v27 <= v25)
    v28 = v25;
  else
    v28 = *(_QWORD *)(v26 + 64);
  if (v11 > v28)
    v28 = v11;
  if (v24 <= v28 + 1)
    v29 = v28 + 1;
  else
    v29 = v24;
  if (v29 <= v17)
    v29 = v17;
  v104 = v29;
  v83 = *(_QWORD *)(sub_21D7C03CC() - 8);
  v30 = *(_QWORD *)(v83 + 64);
  if (v30 <= v14)
    v30 = v14;
  if (v17 > v30)
    v30 = v17;
  v103 = v30;
  v31 = *(_QWORD *)(sub_21D7C3840() - 8);
  v100 = *(_DWORD *)(v31 + 84);
  v82 = v31;
  v102 = *(_QWORD *)(v31 + 64);
  if (v6 <= v11)
    v32 = v11;
  else
    v32 = v6;
  if (v8 <= v32)
    v33 = v32;
  else
    v33 = v8;
  v81 = *(_QWORD *)(sub_21D7C38B8() - 8);
  if (*(_QWORD *)(v81 + 64) > v33)
    v33 = *(_QWORD *)(v81 + 64);
  v80 = *(_QWORD *)(sub_21D7C045C() - 8);
  v34 = *(_QWORD *)(v80 + 64);
  if (v34 <= v33)
    v34 = v33;
  v101 = v34;
  v79 = *(_QWORD *)(sub_21D7C36C0() - 8);
  v99 = *(_QWORD *)(v79 + 64);
  v78 = *(_QWORD *)(sub_21D7C0180() - 8);
  v98 = *(_QWORD *)(v78 + 64);
  v77 = *(_QWORD *)(sub_21D7C3BAC() - 8);
  v97 = *(_QWORD *)(v77 + 64);
  v76 = *(_QWORD *)(sub_21D7C33F0() - 8);
  v96 = *(_QWORD *)(v76 + 64);
  v75 = *(_QWORD *)(sub_21D7C396C() - 8);
  v35 = *(_QWORD *)(v75 + 64);
  v74 = *(_QWORD *)(sub_21D7C3738() - 8);
  v36 = *(_QWORD *)(v74 + 64);
  v73 = *(_QWORD *)(sub_21D7C07A4() - 8);
  v37 = *(_QWORD *)(v73 + 64);
  v72 = *(_QWORD *)(sub_21D7C0720() - 8);
  v38 = *(_QWORD *)(v72 + 64);
  v71 = *(_QWORD *)(sub_21D7C0690() - 8);
  v39 = *(_QWORD *)(v71 + 64);
  v70 = *(_QWORD *)(sub_21D7C0528() - 8);
  v40 = *(_QWORD *)(v70 + 64);
  v41 = sub_21D7C0594();
  if (v105)
    v42 = v23;
  else
    v42 = v23 + 1;
  v43 = *(_QWORD *)(v41 - 8);
  v44 = *(_QWORD *)(v43 + 64);
  v45 = ((v92 + 16) & ~(unint64_t)v92) + v23;
  v46 = v102;
  v47 = v103;
  if (!v100)
    v46 = v102 + 1;
  v48 = ((v92
        + 16
        + ((((((v46 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v92)
      + v23;
  v49 = v48 + 2;
  if (v48 + 2 > v103)
    v47 = v48 + 2;
  if (v104 <= v47 + 1)
    v50 = v47 + 1;
  else
    v50 = v104;
  v51 = ((((v48 + 9) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v51 <= v101)
    v51 = v101;
  if (v99 > v51)
    v51 = v99;
  if (v98 > v51)
    v51 = v98;
  if (v27 > v51)
    v51 = v27;
  if (v14 > v51)
    v51 = v14;
  if (v97 > v51)
    v51 = v97;
  if (v96 > v51)
    v51 = v96;
  if (v49 > v51)
    v51 = v49;
  if (v17 > v51)
    v51 = v17;
  if (v35 > v51)
    v51 = v35;
  if (v36 > v51)
    v51 = v36;
  if (v37 > v51)
    v51 = v37;
  if (v38 > v51)
    v51 = v38;
  if (v39 > v51)
    v51 = v39;
  if (v40 > v51)
    v51 = v40;
  if (v44 <= v51)
    v44 = v51;
  if (v50 <= v44 + 1)
    v52 = v44 + 1;
  else
    v52 = v50;
  if (v52 <= v14)
    v52 = v14;
  if (v52 <= v23)
    v52 = v23;
  if (v52 > v45)
    v45 = v52;
  if (v45 <= 0x11)
    v53 = 17;
  else
    v53 = v45;
  if (!a2)
    return 0;
  v54 = *(_QWORD *)(v94 + 64);
  v55 = v92 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v56 = v92 + 32;
  v57 = v92 + 40;
  if (v93 < a2)
  {
    v58 = v92 | ((*(_DWORD *)(v86 + 80) | *(_DWORD *)(v88 + 80) | *(_DWORD *)(v89 + 80) | *(_DWORD *)(v87 + 80) | *(_DWORD *)(v85 + 80) | *(_DWORD *)(v84 + 80) | *(_DWORD *)(v83 + 80) | *(_DWORD *)(v82 + 80) | *(_DWORD *)(v81 + 80) | *(_DWORD *)(v80 + 80) | *(_DWORD *)(v79 + 80) | *(_DWORD *)(v78 + 80) | *(_DWORD *)(v77 + 80) | *(_DWORD *)(v76 + 80) | *(_DWORD *)(v75 + 80) | *(_DWORD *)(v74 + 80)) | (*(_BYTE *)(v73 + 80) | *(_BYTE *)(v72 + 80) | *(_BYTE *)(v71 + 80) | *(_DWORD *)(v70 + 80) | *(_DWORD *)(v43 + 80))) & 0xF8 | 7;
    v59 = ((v53 + ((v42 + (v57 & ~v92) + ((v56 + ((v54 + 7) & 0xFFFFFFF8)) & v55) + v58) & ~v58) + 8) & 0xFFFFFFF8)
        + 18;
    if (v59 <= 3)
      v60 = ((a2 - v93 + 0xFFFF) >> (8 * v59)) + 1;
    else
      v60 = 2;
    if (v60 >= 0x10000)
      v61 = 4;
    else
      v61 = 2;
    if (v60 < 0x100)
      v61 = 1;
    if (v60 >= 2)
      v62 = v61;
    else
      v62 = 0;
    __asm { BR              X16 }
  }
  if (v91 >= v90)
    return __swift_getEnumTagSinglePayload(a1, v91, v69);
  v64 = (a1 + v54 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (v93 > 0x7FFFFFFE)
  {
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((v57 + ((v56 + v64) & v55)) & ~(unint64_t)v92, v105, v68);
    if (EnumTagSinglePayload >= 2)
      return EnumTagSinglePayload - 1;
    else
      return 0;
  }
  else
  {
    v65 = *(_QWORD *)(v64 + 8);
    if (v65 >= 0xFFFFFFFF)
      LODWORD(v65) = -1;
    v66 = v65 - 1;
    if (v66 < 0)
      v66 = -1;
    return (v66 + 1);
  }
}

void sub_21CE91D74(_DWORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  size_t v54;
  unsigned int v55;
  int v56;
  int v57;
  int v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unsigned int v83;
  unsigned __int8 v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;

  v92 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v4 = *(_DWORD *)(v92 + 84);
  v5 = *(_QWORD *)(sub_21D7BF754() - 8);
  v86 = *(_DWORD *)(v5 + 84);
  if (v86)
    v6 = v86 - 1;
  else
    v6 = 0;
  if (v6 <= 0x7FFFFFFE)
    v7 = 2147483646;
  else
    v7 = v6;
  if (v4 > v7)
    v7 = v4;
  v83 = v7;
  v89 = *(_QWORD *)(sub_21D7C37A4() - 8);
  v8 = *(_QWORD *)(v89 + 64);
  v9 = *(_QWORD *)(sub_21D7C06C0() - 8);
  v87 = v9;
  v10 = *(_QWORD *)(v9 + 64);
  if (v8 <= v10)
    v11 = *(_QWORD *)(v9 + 64);
  else
    v11 = v8;
  v12 = *(_QWORD *)(sub_21D7C3660() - 8);
  v91 = v12;
  v13 = *(_QWORD *)(v12 + 64);
  if (v11 <= v13)
    v11 = *(_QWORD *)(v12 + 64);
  v14 = *(_QWORD *)(sub_21D7C3B58() - 8);
  v88 = v14;
  v15 = *(_QWORD *)(v14 + 64);
  if (v11 <= v15)
    v16 = *(_QWORD *)(v14 + 64);
  else
    v16 = v11;
  v17 = *(_QWORD *)(sub_21D7C3564() - 8);
  v85 = v17;
  v18 = *(_QWORD *)(v17 + 64);
  if (v13 <= v18)
    v19 = *(_QWORD *)(v17 + 64);
  else
    v19 = v13;
  v20 = 16;
  if (v19 <= 0x10)
    v19 = 16;
  v21 = (v19 & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v16 > v21)
    v21 = v16;
  if (v15 > 0x10)
    v20 = v15;
  v84 = *(_DWORD *)(v5 + 80);
  v22 = v20 + v84;
  v23 = (v20 & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v21 <= v23)
    v21 = v23;
  v24 = *(_DWORD *)(v5 + 80);
  v25 = *(_QWORD *)(v5 + 64);
  if (v21 <= ((v22 + 1) & ~v24) + v25)
    v26 = ((v22 + 1) & ~(unint64_t)*(_DWORD *)(v5 + 80)) + v25;
  else
    v26 = v21;
  if (v18 <= v15)
    v27 = v15;
  else
    v27 = v18;
  v80 = *(_QWORD *)(sub_21D7C30FC() - 8);
  v28 = *(_QWORD *)(v80 + 64);
  v90 = v28;
  if (v28 <= v27)
    v28 = v27;
  if (v13 > v28)
    v28 = v13;
  if (v26 <= v28 + 1)
    v29 = v28 + 1;
  else
    v29 = v26;
  if (v29 <= v18)
    v29 = v18;
  v82 = v29;
  v76 = *(_QWORD *)(sub_21D7C03CC() - 8);
  v30 = *(_QWORD *)(v76 + 64);
  if (v30 <= v15)
    v30 = v15;
  if (v18 > v30)
    v30 = v18;
  v81 = v30;
  v71 = *(_QWORD *)(sub_21D7C3840() - 8);
  v60 = *(_DWORD *)(v71 + 84);
  v79 = *(_QWORD *)(v71 + 64);
  if (v8 <= v13)
    v31 = v13;
  else
    v31 = v8;
  if (v10 <= v31)
    v10 = v31;
  v68 = *(_QWORD *)(sub_21D7C38B8() - 8);
  if (*(_QWORD *)(v68 + 64) > v10)
    v10 = *(_QWORD *)(v68 + 64);
  v65 = *(_QWORD *)(sub_21D7C045C() - 8);
  v32 = *(_QWORD *)(v65 + 64);
  if (v32 <= v10)
    v32 = v10;
  v78 = v32;
  v63 = *(_QWORD *)(sub_21D7C36C0() - 8);
  v77 = *(_QWORD *)(v63 + 64);
  v62 = *(_QWORD *)(sub_21D7C0180() - 8);
  v75 = *(_QWORD *)(v62 + 64);
  v61 = *(_QWORD *)(sub_21D7C3BAC() - 8);
  v74 = *(_QWORD *)(v61 + 64);
  v59 = *(_QWORD *)(sub_21D7C33F0() - 8);
  v73 = *(_QWORD *)(v59 + 64);
  v33 = *(_QWORD *)(sub_21D7C396C() - 8);
  v72 = *(_QWORD *)(v33 + 64);
  v34 = *(_QWORD *)(sub_21D7C3738() - 8);
  v70 = *(_QWORD *)(v34 + 64);
  v35 = *(_QWORD *)(sub_21D7C07A4() - 8);
  v69 = *(_QWORD *)(v35 + 64);
  v36 = *(_QWORD *)(sub_21D7C0720() - 8);
  v67 = *(_QWORD *)(v36 + 64);
  v37 = *(_QWORD *)(sub_21D7C0690() - 8);
  v66 = *(_QWORD *)(v37 + 64);
  v38 = *(_QWORD *)(sub_21D7C0528() - 8);
  v64 = *(_QWORD *)(v38 + 64);
  v39 = sub_21D7C0594();
  v40 = 0;
  if (v86)
    v41 = v25;
  else
    v41 = v25 + 1;
  v42 = *(_QWORD *)(v39 - 8);
  v43 = *(_QWORD *)(v42 + 64);
  v44 = ((v24 + 16) & ~v24) + v25;
  v45 = v24 | ((*(_DWORD *)(v87 + 80) | *(_DWORD *)(v89 + 80) | *(_DWORD *)(v91 + 80) | *(_DWORD *)(v88 + 80) | *(_DWORD *)(v85 + 80) | *(_DWORD *)(v80 + 80) | *(_DWORD *)(v76 + 80) | *(_DWORD *)(v71 + 80) | *(_DWORD *)(v68 + 80) | *(_DWORD *)(v65 + 80) | *(_DWORD *)(v63 + 80) | *(_DWORD *)(v62 + 80) | *(_DWORD *)(v61 + 80) | *(_DWORD *)(v59 + 80) | *(_DWORD *)(v33 + 80) | *(_DWORD *)(v34 + 80)) | (*(_DWORD *)(v35 + 80) | *(_DWORD *)(v36 + 80) | *(_DWORD *)(v37 + 80) | *(_DWORD *)(v38 + 80) | *(_DWORD *)(v42 + 80))) & 0xF8 | 7;
  v46 = (((v24 + 32 + ((*(_QWORD *)(v92 + 64) + 7) & 0xFFFFFFFFFFFFFFF8)) & (v84 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8))
       + ((v24 + 40) & ~v24)
       + v41
       + v45) & ~v45;
  v47 = v79;
  if (!v60)
    v47 = v79 + 1;
  v48 = ((v24 + 16 + ((((((v47 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v24)
      + v25;
  v49 = v48 + 2;
  v50 = v81;
  if (v48 + 2 > v81)
    v50 = v48 + 2;
  if (v82 <= v50 + 1)
    v51 = v50 + 1;
  else
    v51 = v82;
  v52 = ((((v48 + 9) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v52 <= v78)
    v52 = v78;
  if (v77 > v52)
    v52 = v77;
  if (v75 > v52)
    v52 = v75;
  if (v90 > v52)
    v52 = v90;
  if (v15 > v52)
    v52 = v15;
  if (v74 > v52)
    v52 = v74;
  if (v73 > v52)
    v52 = v73;
  if (v49 > v52)
    v52 = v49;
  if (v18 > v52)
    v52 = v18;
  if (v72 > v52)
    v52 = v72;
  if (v70 > v52)
    v52 = v70;
  if (v69 > v52)
    v52 = v69;
  if (v67 > v52)
    v52 = v67;
  if (v66 > v52)
    v52 = v66;
  if (v64 > v52)
    v52 = v64;
  if (v43 <= v52)
    v43 = v52;
  if (v51 <= v43 + 1)
    v53 = v43 + 1;
  else
    v53 = v51;
  if (v53 <= v15)
    v53 = v15;
  if (v53 <= v25)
    v53 = v25;
  if (v53 > v44)
    v44 = v53;
  if (v44 <= 0x11)
    v44 = 17;
  v54 = ((v44 + v46 + 8) & 0xFFFFFFFFFFFFFFF8) + 18;
  if (v83 < a3)
  {
    if (v54 <= 3)
      v55 = ((a3 - v83 + 0xFFFF) >> (8 * v54)) + 1;
    else
      v55 = 2;
    if (v55 >= 0x10000)
      v56 = 4;
    else
      v56 = 2;
    if (v55 < 0x100)
      v56 = 1;
    if (v55 >= 2)
      v40 = v56;
    else
      v40 = 0;
  }
  if (v83 < a2)
  {
    v57 = v40;
    v58 = ~v83 + a2;
    bzero(a1, v54);
    if (v54 > 3)
      *a1 = v58;
    else
      *(_WORD *)a1 = v58;
    __asm { BR              X11 }
  }
  __asm { BR              X16 }
}

void sub_21CE9240C(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = a1;
}

uint64_t sub_21CE92414(uint64_t result, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;

  *(_DWORD *)(result + v4) = 0;
  if (a4)
    JUMPOUT(0x21CE9241CLL);
  return result;
}

void sub_21CE92478(__int16 a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = a1;
}

void sub_21CE92480(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = a1;
}

uint64_t sub_21CE92488(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;

  *(_WORD *)(result + v7) = 0;
  if ((_DWORD)a4)
  {
    if (v9 >= v10)
    {
      return __swift_storeEnumTagSinglePayload(result, a4, v9, v8);
    }
    else
    {
      v5 = (result + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
      if (a5 > 0x7FFFFFFE)
        JUMPOUT(0x21CE92494);
      *(_QWORD *)(v5 + 8) = a4;
    }
  }
  return result;
}

void sub_21CE9256C()
{
  char v0;
  _BYTE *v1;

  *v1 = v0;
}

void sub_21CE92584()
{
  __int16 v0;
  _WORD *v1;

  *v1 = v0;
}

void sub_21CE9258C()
{
  int v0;
  uint64_t v1;

  *(_WORD *)v1 = v0;
  *(_BYTE *)(v1 + 2) = BYTE2(v0);
}

unint64_t sub_21CE925C8()
{
  unint64_t result;

  result = qword_255331B90;
  if (!qword_255331B90)
  {
    result = MEMORY[0x2207938C0](&unk_21D7CFA98, &type metadata for AppDestinationPageProviderBox.Error);
    atomic_store(result, (unint64_t *)&qword_255331B90);
  }
  return result;
}

uint64_t sub_21CE92604(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2207938C0](&unk_21D7CFB1C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_21CE92630()
{
  JUMPOUT(0x2207938C0);
}

unint64_t sub_21CE92640()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255331B98;
  if (!qword_255331B98)
  {
    v1 = sub_21D7BF754();
    result = MEMORY[0x2207938C0](MEMORY[0x24BDCDAF0], v1);
    atomic_store(result, (unint64_t *)&qword_255331B98);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_39()
{
  return sub_21D7C5E74();
}

uint64_t OUTLINED_FUNCTION_2_36()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_4_22()
{
  return sub_21D7C5BC8();
}

void OUTLINED_FUNCTION_6_24(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 176) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_8_16(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_21CE39C70(*(_QWORD *)(v4 - 88), v3, a3);
}

uint64_t OUTLINED_FUNCTION_11_17@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_16_10()
{
  return sub_21D7C5E5C();
}

uint64_t OUTLINED_FUNCTION_17_8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_21CE92718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  result = type metadata accessor for PageChangeInstruction.Instruction(319, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_21CE9278C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  size_t v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  size_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unsigned int v20;
  int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  size_t v33;
  size_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  int v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  size_t v44;
  unsigned int v45;
  unsigned int v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  size_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  size_t v57;
  unint64_t v58;
  size_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  char *v93;
  size_t v94;
  char v95;
  uint64_t v96;
  char *v97;
  _BYTE *v98;
  unsigned __int8 *v99;
  unsigned int v100;
  unint64_t v101;
  unint64_t v102;
  unsigned int v103;
  uint64_t v104;
  void *v105;
  const void *v106;
  size_t v107;
  uint64_t v108;
  uint64_t v109;
  _BYTE *v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  _QWORD *v121;
  uint64_t v122;
  const void *v123;
  unsigned int v124;
  void *v125;
  uint64_t v126;
  size_t v127;
  uint64_t v128;
  _QWORD *v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  _QWORD *v137;
  _QWORD *v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  unint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  _QWORD *v147;
  unint64_t v148;
  unint64_t v149;
  unint64_t v150;
  __int128 v151;
  __int128 v152;
  _QWORD *v153;
  _QWORD *v154;
  unint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  void *v161;
  const void *v162;
  size_t v163;
  _QWORD *v164;
  uint64_t v165;
  _QWORD *v166;
  uint64_t v167;
  uint64_t v168;
  void *v169;
  const void *v170;
  _BYTE *v171;
  char v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void *v176;
  _QWORD *v177;
  const void *v178;
  size_t v179;
  uint64_t v180;
  void *v181;
  const void *v182;
  uint64_t v183;
  void *v184;
  const void *v185;
  uint64_t v186;
  void *v187;
  const void *v188;
  _QWORD *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  void *v193;
  const void *v194;
  uint64_t v195;
  char *v196;
  const void *v197;
  size_t v198;
  uint64_t v199;
  _QWORD *v200;
  _QWORD *v201;
  _QWORD *v202;
  _QWORD *v203;
  void *v204;
  const void *v205;
  unint64_t v206;
  unint64_t v207;
  uint64_t v208;
  void (*v209)(unint64_t, unint64_t, uint64_t);
  void *v210;
  const void *v211;
  uint64_t v212;
  uint64_t v213;
  const void *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  void *v218;
  const void *v219;
  uint64_t v220;
  void *v221;
  const void *v222;
  uint64_t v223;
  void *v224;
  const void *v225;
  uint64_t v226;
  uint64_t v227;
  void *v228;
  const void *v229;
  _QWORD *v230;
  __int128 v231;
  __int128 v232;
  unint64_t v233;
  __int128 *v234;
  uint64_t v235;
  __int128 v236;
  __int128 v237;
  _QWORD *v238;
  _QWORD *v239;
  _QWORD *v240;
  _QWORD *v241;
  _BYTE *v242;
  _BYTE *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  int v247;
  int v248;
  int EnumTagSinglePayload;
  unint64_t v250;
  unint64_t v251;
  uint64_t v252;
  _QWORD *v253;
  _QWORD *v254;
  _QWORD *v255;
  _QWORD *v256;
  _QWORD *v257;
  _QWORD *v258;
  _QWORD *v259;
  _QWORD *v260;
  unint64_t v261;
  uint64_t v262;
  _QWORD *v263;
  unint64_t v264;
  size_t v265;
  _QWORD *v266;
  unint64_t v267;
  unint64_t v268;
  unint64_t v269;
  void *v270;
  uint64_t v271;
  uint64_t v272;
  void (*v273)(uint64_t, uint64_t, uint64_t);
  id v274;
  unint64_t v275;
  unint64_t v276;
  _QWORD *v277;
  _QWORD *v278;
  void *v279;
  _BYTE *v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  char v285;
  unsigned int v286;
  uint64_t v287;
  unint64_t v288;
  unint64_t v289;
  uint64_t v290;
  _QWORD *v291;
  _QWORD *v292;
  void *v293;
  _BYTE *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  unint64_t v298;
  unint64_t v299;
  uint64_t v300;
  _QWORD *v301;
  _QWORD *v302;
  _QWORD *v303;
  _QWORD *v304;
  unint64_t v305;
  unint64_t v306;
  unint64_t v307;
  unint64_t v308;
  unint64_t v309;
  __int128 v310;
  __int128 v311;
  unsigned int v312;
  _QWORD *v313;
  _QWORD *v314;
  _QWORD *v315;
  unint64_t v316;
  uint64_t v317;
  char *v318;
  uint64_t v319;
  const void *v320;
  uint64_t v321;
  uint64_t v322;
  void *v323;
  size_t v324;
  uint64_t v325;
  unint64_t v326;
  _QWORD *v327;
  unint64_t v328;
  uint64_t v329;
  void *v330;
  uint64_t v331;
  unsigned int v332;
  uint64_t v333;
  uint64_t v334;
  const void *v335;
  unint64_t v336;
  unint64_t v337;
  unint64_t v338;
  uint64_t v339;
  unint64_t v340;
  unint64_t v341;
  unint64_t v342;
  char *v343;
  uint64_t v344;
  const void *v345;
  uint64_t v346;
  void *v347;
  size_t v348;
  unint64_t v349;
  unint64_t v350;
  uint64_t v351;
  _QWORD *v352;
  _QWORD *v353;
  void *v354;
  const void *v355;
  unint64_t v356;
  unint64_t v357;
  _QWORD *v358;
  _QWORD *v359;
  _QWORD *v360;
  _QWORD *v361;
  unint64_t v362;
  unint64_t v363;
  uint64_t v364;
  _QWORD *v365;
  _QWORD *v366;
  unint64_t v367;
  _QWORD *v368;
  unint64_t v369;
  unint64_t v370;
  unint64_t v371;
  _QWORD *v372;
  _QWORD *v373;
  unint64_t v374;
  char *v375;
  uint64_t v376;
  const void *v377;
  uint64_t v378;
  void *v379;
  size_t v380;
  _QWORD *v381;
  _QWORD *v382;
  _QWORD *v383;
  _QWORD *v384;
  _QWORD *v385;
  _QWORD *v386;
  unint64_t v387;
  unint64_t v388;
  unint64_t v389;
  __int128 v390;
  __int128 v391;
  unint64_t v392;
  unint64_t v393;
  unint64_t v394;
  __int128 v395;
  __int128 v396;
  unint64_t v397;
  unint64_t v398;
  unint64_t v399;
  __int128 v400;
  __int128 v401;
  uint64_t v402;
  uint64_t v403;
  char v404;
  _QWORD *v405;
  _QWORD *v406;
  _QWORD *v407;
  _QWORD *v408;
  _QWORD *v409;
  _QWORD *v410;
  _QWORD *v411;
  _QWORD *v412;
  unint64_t v413;
  unint64_t v414;
  unint64_t v415;
  __int128 v416;
  __int128 v417;
  unint64_t v418;
  unint64_t v419;
  unint64_t v420;
  __int128 v421;
  __int128 v422;
  unint64_t v423;
  unint64_t v424;
  unint64_t v425;
  __int128 v426;
  __int128 v427;
  void *v428;
  _BYTE *v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  unint64_t v433;
  unint64_t v434;
  uint64_t v435;
  _QWORD *v436;
  _QWORD *v437;
  _QWORD *v438;
  _QWORD *v439;
  uint64_t v440;
  unint64_t v441;
  unint64_t v442;
  uint64_t v443;
  uint64_t v444;
  unsigned int v445;
  uint64_t v446;
  _QWORD *v447;
  void *v448;
  const void *v449;
  uint64_t v450;
  unint64_t v451;
  unint64_t v452;
  unint64_t v453;
  uint64_t v454;
  unint64_t v455;
  unint64_t v456;
  char v457;
  unint64_t v458;
  unint64_t v459;
  uint64_t v460;
  _QWORD *v461;
  _QWORD *v462;
  _QWORD *v463;
  _QWORD *v464;
  _QWORD *v465;
  _QWORD *v466;
  _QWORD *v467;
  _QWORD *v468;
  unint64_t v469;
  uint64_t v470;
  _QWORD *v471;
  unint64_t v472;
  size_t v473;
  _QWORD *v474;
  unint64_t v475;
  unint64_t v476;
  unint64_t v477;
  void *v478;
  uint64_t v479;
  uint64_t v480;
  void (*v481)(uint64_t, uint64_t, uint64_t);
  id v482;
  unint64_t v483;
  unint64_t v484;
  void *v485;
  _BYTE *v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  unint64_t v491;
  unint64_t v492;
  uint64_t v493;
  _QWORD *v494;
  _QWORD *v495;
  _QWORD *v496;
  _QWORD *v497;
  char *v498;
  unint64_t v499;
  unint64_t v500;
  char v501;
  int v502;
  uint64_t v503;
  int v504;
  int v505;
  unint64_t v506;
  _QWORD *v507;
  unint64_t v508;
  uint64_t v509;
  unint64_t v510;
  unint64_t v511;
  uint64_t v512;
  void *v513;
  const void *v514;
  unint64_t v515;
  unint64_t v516;
  uint64_t v517;
  unint64_t v518;
  unint64_t v519;
  uint64_t v520;
  void *v521;
  const void *v522;
  unint64_t v523;
  unint64_t v524;
  uint64_t v525;
  _QWORD *v526;
  _QWORD *v527;
  unint64_t v528;
  unint64_t v529;
  unint64_t v530;
  __int128 v531;
  __int128 v532;
  unint64_t v533;
  unint64_t v534;
  uint64_t v535;
  _QWORD *v536;
  _QWORD *v537;
  unint64_t v538;
  unint64_t v539;
  uint64_t v540;
  _QWORD *v541;
  _QWORD *v542;
  _QWORD *v543;
  _QWORD *v544;
  unint64_t v545;
  unint64_t v546;
  unint64_t v547;
  __int128 v548;
  __int128 v549;
  unint64_t v550;
  unint64_t v551;
  unint64_t v552;
  __int128 v553;
  __int128 v554;
  uint64_t v555;
  char v556;
  unint64_t v557;
  unint64_t v558;
  uint64_t v559;
  _QWORD *v560;
  _QWORD *v561;
  char v562;
  unint64_t v563;
  unint64_t v564;
  uint64_t v565;
  unint64_t v566;
  unint64_t v567;
  unint64_t v568;
  _QWORD *v569;
  __int128 v570;
  __int128 v571;
  _QWORD *v572;
  _QWORD *v573;
  _QWORD *v574;
  _QWORD *v575;
  _QWORD *v576;
  _QWORD *v577;
  _QWORD *v578;
  _QWORD *v579;
  unint64_t v580;
  unint64_t v581;
  _QWORD *v582;
  _QWORD *v583;
  void *v584;
  _BYTE *v585;
  uint64_t v586;
  size_t v587;
  uint64_t v588;
  uint64_t v589;
  uint64_t v590;
  _QWORD *v591;
  _QWORD *v592;
  unint64_t v593;
  unint64_t v594;
  unint64_t v595;
  __int128 v596;
  __int128 v597;
  _QWORD *v598;
  _QWORD *v599;
  _QWORD *v600;
  _QWORD *v601;
  char *v602;
  char *v603;
  size_t v604;
  uint64_t v605;
  unint64_t v606;
  unint64_t v607;
  uint64_t v608;
  unint64_t v609;
  unint64_t v610;
  unint64_t v611;
  __int128 v612;
  __int128 v613;
  uint64_t v614;
  _QWORD *v615;
  _QWORD *v616;
  _QWORD *v617;
  _QWORD *v618;
  _QWORD *v619;
  _QWORD *v620;
  _QWORD *v621;
  _QWORD *v622;
  unint64_t v623;
  _QWORD *v624;
  unint64_t v625;
  int v626;
  int v627;
  int v628;
  int v629;
  void *v630;
  _BYTE *v631;
  uint64_t v632;
  uint64_t v633;
  uint64_t v634;
  int v635;
  int v636;
  int v637;
  int v638;
  _QWORD *v639;
  _QWORD *v640;
  unint64_t v641;
  unint64_t v642;
  void *v643;
  _BYTE *v644;
  uint64_t v645;
  uint64_t v646;
  uint64_t v647;
  _QWORD *v648;
  _QWORD *v649;
  unint64_t v650;
  unint64_t v651;
  _QWORD *v652;
  _QWORD *v653;
  _QWORD *v654;
  _QWORD *v655;
  _QWORD *v656;
  _QWORD *v657;
  _QWORD *v658;
  _QWORD *v659;
  _QWORD *v660;
  _QWORD *v661;
  void *v662;
  _BYTE *v663;
  uint64_t v664;
  uint64_t v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  uint64_t v669;
  int v670;
  int v671;
  int v672;
  int v673;
  _QWORD *v674;
  int v675;
  int v676;
  unsigned int v677;
  int v678;
  int v679;
  int v680;
  int v681;
  int v682;
  int v683;
  int v684;
  int v685;
  int v686;
  int v687;
  int v688;
  unint64_t v689;
  unint64_t v690;
  int v691;
  unsigned int v692;
  unint64_t v693;
  unint64_t v694;
  int v695;
  unsigned int v696;
  _QWORD *v697;
  unint64_t v698;
  unint64_t v699;
  unint64_t v700;
  void *v701;
  uint64_t v702;
  uint64_t v703;
  void (*v704)(uint64_t, uint64_t, uint64_t);
  id v705;
  unint64_t v706;
  unint64_t v707;
  uint64_t v708;
  unint64_t v709;
  unint64_t v710;
  char *v711;
  char *v712;
  _QWORD *v713;
  _QWORD *v714;
  unint64_t v715;
  uint64_t v716;
  _QWORD *v717;
  _BYTE *v718;
  char *v719;
  uint64_t v720;
  const void *v721;
  uint64_t v722;
  void *v723;
  _QWORD *v724;
  unint64_t v725;
  unint64_t v726;
  unint64_t v727;
  void *v728;
  uint64_t v729;
  uint64_t v730;
  void (*v731)(uint64_t, uint64_t, uint64_t);
  id v732;
  void *v733;
  _BYTE *v734;
  uint64_t v735;
  uint64_t v736;
  uint64_t v737;
  int v738;
  int v739;
  int v740;
  void *v741;
  unint64_t v742;
  _BYTE *v743;
  uint64_t v744;
  uint64_t v745;
  uint64_t v746;
  uint64_t v747;
  int v748;
  int v749;
  int v750;
  _QWORD *v751;
  _QWORD *v752;
  _QWORD *v753;
  _QWORD *v754;
  unint64_t v755;
  unint64_t v756;
  unint64_t v757;
  __int128 v758;
  uint64_t v759;
  uint64_t v760;
  uint64_t v761;
  uint64_t v762;
  uint64_t v763;
  uint64_t v764;
  unsigned int v765;
  unint64_t v766;
  unint64_t v767;
  uint64_t v768;
  _QWORD *v769;
  _QWORD *v770;
  _QWORD *v771;
  _QWORD *v772;
  unint64_t v773;
  unint64_t v774;
  unint64_t v775;
  unint64_t v776;
  unint64_t v777;
  __int128 v778;
  __int128 v779;
  _QWORD *v780;
  _QWORD *v781;
  unint64_t v782;
  char *v783;
  uint64_t v784;
  const void *v785;
  uint64_t v786;
  uint64_t v787;
  void *v788;
  size_t v789;
  unint64_t v790;
  void *v791;
  unint64_t v792;
  _BYTE *v793;
  uint64_t v794;
  uint64_t v795;
  uint64_t v796;
  uint64_t v797;
  uint64_t v798;
  int v799;
  int v800;
  int v801;
  unsigned int v802;
  unint64_t v803;
  unint64_t v804;
  uint64_t v805;
  _QWORD *v806;
  _QWORD *v807;
  _QWORD *v808;
  _QWORD *v809;
  unint64_t v810;
  unint64_t v811;
  unint64_t v812;
  __int128 v813;
  __int128 v814;
  unint64_t v815;
  unint64_t v816;
  unint64_t v817;
  __int128 v818;
  __int128 v819;
  _QWORD *v820;
  _QWORD *v821;
  unint64_t v822;
  char *v823;
  uint64_t v824;
  const void *v825;
  uint64_t v826;
  uint64_t v827;
  void *v828;
  size_t v829;
  uint64_t v830;
  void *v831;
  unint64_t v832;
  _BYTE *v833;
  uint64_t v834;
  uint64_t v835;
  uint64_t v836;
  uint64_t v837;
  int v838;
  int v839;
  int v840;
  unint64_t v841;
  unint64_t v842;
  uint64_t v843;
  void *v844;
  const void *v845;
  _QWORD *v846;
  _QWORD *v847;
  _QWORD *v848;
  _QWORD *v849;
  _QWORD *v850;
  uint64_t *v851;
  size_t v852;
  uint64_t v853;
  int v854;
  uint64_t v855;
  uint64_t v856;
  void (*v857)(unint64_t, unint64_t, uint64_t);
  _QWORD *v858;
  _QWORD *v859;
  unint64_t v860;
  size_t v861;
  char *v862;
  uint64_t v863;
  const void *v864;
  uint64_t v865;
  void *v866;
  unint64_t v867;
  unint64_t v868;
  unint64_t v869;
  unint64_t v870;
  uint64_t v871;
  unint64_t v872;
  unint64_t v873;
  uint64_t v874;
  unint64_t v875;
  unint64_t v876;
  unint64_t v877;
  __int128 v878;
  __int128 v879;
  _QWORD *v880;
  _QWORD *v881;
  unint64_t v882;
  unint64_t v883;
  unint64_t v884;
  _QWORD *v885;
  unint64_t v886;
  uint64_t v887;
  unint64_t v888;
  unint64_t v889;
  uint64_t v890;
  unint64_t v891;
  unint64_t v892;
  unint64_t v893;
  __int128 v894;
  __int128 v895;
  _QWORD *v896;
  _QWORD *v897;
  char *v898;
  char *v899;
  unint64_t v900;
  size_t v901;
  size_t v902;
  unint64_t v903;
  unint64_t v904;
  uint64_t v905;
  unint64_t v906;
  unint64_t v907;
  unint64_t v908;
  __int128 v909;
  __int128 v910;
  _QWORD *v911;
  _QWORD *v912;
  unint64_t v913;
  uint64_t v914;
  uint64_t v915;
  unint64_t v916;
  unint64_t v917;
  unint64_t v918;
  __int128 v919;
  __int128 v920;
  _QWORD *v921;
  _QWORD *v922;
  unint64_t v923;
  size_t v924;
  char *v925;
  uint64_t v926;
  const void *v927;
  uint64_t v928;
  void *v929;
  size_t v930;
  void *v931;
  unint64_t v932;
  _BYTE *v933;
  uint64_t v934;
  uint64_t v935;
  uint64_t v936;
  uint64_t v937;
  int v938;
  int v939;
  int v940;
  char *v941;
  void *v942;
  _BYTE *v943;
  uint64_t v944;
  uint64_t v945;
  uint64_t v946;
  uint64_t v947;
  int v948;
  int v949;
  int v950;
  _QWORD *v951;
  _QWORD *v952;
  unint64_t v953;
  unint64_t v954;
  unint64_t v955;
  __int128 v956;
  __int128 v957;
  _QWORD *v958;
  _QWORD *v959;
  _QWORD *v960;
  uint64_t *v961;
  size_t v962;
  uint64_t v963;
  int v964;
  void (*v965)(unint64_t, unint64_t, uint64_t);
  _QWORD *v966;
  uint64_t *v967;
  size_t v968;
  uint64_t v969;
  int v970;
  uint64_t v971;
  uint64_t v972;
  void (*v973)(unint64_t, unint64_t, uint64_t);
  _QWORD *v974;
  _QWORD *v975;
  unint64_t v976;
  uint64_t v977;
  _QWORD *v978;
  _QWORD *v979;
  _BYTE *v980;
  char *v981;
  uint64_t v982;
  const void *v983;
  uint64_t v984;
  void *v985;
  void *v986;
  _BYTE *v987;
  uint64_t v988;
  uint64_t v989;
  uint64_t v990;
  int v991;
  int v992;
  int v993;
  _QWORD *v994;
  uint64_t *v995;
  size_t v996;
  uint64_t v997;
  int v998;
  uint64_t v999;
  uint64_t v1000;
  void (*v1001)(unint64_t, unint64_t, uint64_t);
  _QWORD *v1002;
  _QWORD *v1003;
  unint64_t v1004;
  size_t v1005;
  char *v1006;
  uint64_t v1007;
  const void *v1008;
  uint64_t v1009;
  void *v1010;
  unint64_t v1011;
  unint64_t v1012;
  unint64_t v1013;
  unint64_t v1014;
  uint64_t v1015;
  unint64_t v1016;
  unint64_t v1017;
  uint64_t v1018;
  unint64_t v1019;
  unint64_t v1020;
  unint64_t v1021;
  __int128 v1022;
  __int128 v1023;
  _QWORD *v1024;
  _QWORD *v1025;
  unint64_t v1026;
  unint64_t v1027;
  unint64_t v1028;
  _QWORD *v1029;
  unint64_t v1030;
  uint64_t v1031;
  unint64_t v1032;
  unint64_t v1033;
  uint64_t v1034;
  unint64_t v1035;
  unint64_t v1036;
  unint64_t v1037;
  __int128 v1038;
  __int128 v1039;
  _QWORD *v1040;
  _QWORD *v1041;
  char *v1042;
  char *v1043;
  unint64_t v1044;
  size_t v1045;
  size_t v1046;
  unint64_t v1047;
  unint64_t v1048;
  uint64_t v1049;
  unint64_t v1050;
  unint64_t v1051;
  unint64_t v1052;
  __int128 v1053;
  __int128 v1054;
  _QWORD *v1055;
  _QWORD *v1056;
  unint64_t v1057;
  void *v1058;
  _BYTE *v1059;
  uint64_t v1060;
  uint64_t v1061;
  uint64_t v1062;
  int v1063;
  int v1064;
  int v1065;
  _QWORD *v1066;
  _QWORD *v1067;
  unint64_t v1068;
  unint64_t v1069;
  void *v1070;
  _BYTE *v1071;
  uint64_t v1072;
  uint64_t v1073;
  uint64_t v1074;
  int v1075;
  int v1076;
  int v1077;
  _QWORD *v1078;
  uint64_t *v1079;
  size_t v1080;
  uint64_t v1081;
  int v1082;
  void (*v1083)(unint64_t, unint64_t, uint64_t);
  _QWORD *v1084;
  uint64_t *v1085;
  uint64_t v1086;
  int v1087;
  _QWORD *v1088;
  size_t v1089;
  _QWORD *v1090;
  void (*v1091)(unint64_t, unint64_t, uint64_t);
  _BYTE *v1092;
  _QWORD *v1093;
  _QWORD *v1094;
  unint64_t v1095;
  unint64_t v1096;
  unint64_t v1097;
  unint64_t v1098;
  unint64_t v1099;
  __int128 v1100;
  __int128 v1101;
  unint64_t v1102;
  unint64_t v1103;
  unint64_t v1104;
  uint64_t v1105;
  _QWORD *v1106;
  char *v1107;
  uint64_t v1108;
  const void *v1109;
  uint64_t v1110;
  void *v1111;
  size_t v1112;
  _QWORD *v1113;
  _QWORD *v1114;
  _QWORD *v1115;
  _QWORD *v1116;
  void *v1117;
  _BYTE *v1118;
  uint64_t v1119;
  uint64_t v1120;
  uint64_t v1121;
  int v1122;
  int v1123;
  int v1124;
  _QWORD *v1125;
  _QWORD *v1126;
  unint64_t v1127;
  uint64_t v1128;
  _QWORD *v1129;
  _BYTE *v1130;
  char *v1131;
  uint64_t v1132;
  const void *v1133;
  uint64_t v1134;
  void *v1135;
  void *v1136;
  const void *v1137;
  size_t v1138;
  unint64_t v1139;
  unint64_t v1140;
  unint64_t v1141;
  __int128 v1142;
  __int128 v1143;
  _QWORD *v1144;
  _QWORD *v1145;
  uint64_t v1146;
  _BYTE *v1147;
  unsigned __int8 *v1148;
  unsigned int v1149;
  unint64_t v1150;
  unint64_t v1151;
  unsigned int v1152;
  uint64_t v1153;
  void *v1154;
  const void *v1155;
  uint64_t v1156;
  void *v1157;
  const void *v1158;
  size_t v1159;
  _QWORD *v1160;
  _QWORD *v1161;
  _BYTE *v1162;
  unsigned __int8 *v1163;
  unsigned int v1164;
  _QWORD *v1165;
  _QWORD *v1166;
  unsigned int v1167;
  uint64_t v1168;
  void *v1169;
  const void *v1170;
  _QWORD *v1171;
  _BYTE *v1172;
  void *v1173;
  const void *v1174;
  size_t v1175;
  _OWORD *v1176;
  uint64_t v1177;
  _QWORD *v1178;
  _BYTE *v1179;
  uint64_t v1180;
  _QWORD *v1181;
  _QWORD *v1182;
  unint64_t v1183;
  unint64_t v1184;
  unint64_t v1185;
  unint64_t v1186;
  unint64_t v1187;
  unint64_t v1188;
  uint64_t v1189;
  _QWORD *v1190;
  _QWORD *v1191;
  unint64_t v1192;
  unint64_t v1193;
  unint64_t v1194;
  __int128 v1195;
  __int128 v1196;
  _QWORD *v1197;
  _QWORD *v1198;
  unint64_t v1199;
  char *v1200;
  const void *v1201;
  uint64_t v1202;
  void *v1203;
  uint64_t v1204;
  _QWORD *v1205;
  _QWORD *v1206;
  unint64_t v1207;
  unint64_t v1208;
  unint64_t v1209;
  unint64_t v1210;
  unint64_t v1211;
  unint64_t v1212;
  uint64_t v1213;
  _QWORD *v1214;
  _QWORD *v1215;
  unint64_t v1216;
  unint64_t v1217;
  unint64_t v1218;
  __int128 v1219;
  __int128 v1220;
  _QWORD *v1221;
  _QWORD *v1222;
  unint64_t v1223;
  char *v1224;
  const void *v1225;
  uint64_t v1226;
  void *v1227;
  _QWORD *v1228;
  _QWORD *v1229;
  _QWORD *v1230;
  _QWORD *v1231;
  unint64_t v1232;
  uint64_t v1233;
  _QWORD *v1234;
  _BYTE *v1235;
  char *v1236;
  uint64_t v1237;
  const void *v1238;
  uint64_t v1239;
  void *v1240;
  _QWORD *v1241;
  unint64_t v1242;
  uint64_t v1243;
  unint64_t v1244;
  uint64_t v1245;
  _QWORD *result;
  __int128 v1247;
  __int128 v1248;
  unint64_t v1249;
  _QWORD *v1250;
  uint64_t v1251;
  __int128 v1252;
  __int128 v1253;
  unint64_t v1254;
  _QWORD *v1255;
  uint64_t v1256;
  __int128 v1257;
  __int128 v1258;
  _QWORD *v1259;
  _QWORD *v1260;
  _QWORD *v1261;
  _QWORD *v1262;
  void *v1263;
  _BYTE *v1264;
  unsigned int v1265;
  uint64_t v1266;
  uint64_t v1267;
  uint64_t v1268;
  uint64_t v1269;
  _QWORD *v1270;
  int v1271;
  int v1272;
  int v1273;
  __int128 v1274;
  __int128 v1275;
  _QWORD *v1276;
  _QWORD *v1277;
  _QWORD *v1278;
  _QWORD *v1279;
  void *v1280;
  _BYTE *v1281;
  uint64_t v1282;
  uint64_t v1283;
  uint64_t v1284;
  int v1285;
  int v1286;
  int v1287;
  char v1288;
  _OWORD *v1289;
  _OWORD *v1290;
  __int128 *v1291;
  __int128 *__src;
  unsigned __int8 *v1293;
  unsigned __int8 *v1294;
  uint64_t v1295;
  uint64_t v1296;
  uint64_t v1297;
  uint64_t v1298;
  uint64_t v1299;
  uint64_t v1300;
  uint64_t v1301;
  size_t v1302;
  unint64_t v1303;
  unint64_t v1304;
  unint64_t v1305;
  unint64_t v1306;
  unint64_t v1307;
  unint64_t v1308;
  unint64_t v1309;
  unint64_t v1310;
  size_t v1311;
  size_t v1312;
  int v1313;
  unint64_t v1314;
  size_t v1315;
  uint64_t v1316;
  uint64_t v1317;
  uint64_t v1318;
  uint64_t v1319;
  uint64_t v1320;
  uint64_t v1321;
  size_t v1322;
  size_t v1323;
  uint64_t v1324;
  uint64_t v1325;
  uint64_t v1326;
  uint64_t v1327;
  size_t v1328;
  uint64_t v1329;
  uint64_t v1330;
  size_t v1331;
  uint64_t v1332;
  uint64_t v1333;
  size_t v1334;
  unint64_t v1335;
  unsigned int v1336;
  unint64_t v1337;
  unint64_t v1338;
  unint64_t v1339;
  unint64_t v1340;
  unint64_t v1341;
  unint64_t v1342;
  unint64_t v1343;
  unint64_t v1344;
  unint64_t v1345;
  unint64_t v1346;
  unint64_t v1347;
  unint64_t v1348;
  unint64_t v1349;
  unint64_t v1350;
  unint64_t v1351;
  size_t v1352;
  uint64_t v1353;
  uint64_t v1354;
  uint64_t v1355;
  uint64_t v1356;
  uint64_t v1357;
  unint64_t v1358;
  unsigned int v1359;
  unsigned int v1360;
  uint64_t v1361;
  uint64_t v1362;
  uint64_t v1363;
  size_t __n;
  unsigned int v1365;
  size_t v1366;
  unsigned int v1367;
  uint64_t v1368;
  uint64_t v1369;
  unsigned int v1370;
  uint64_t v1371;
  uint64_t v1372;
  uint64_t v1373;
  uint64_t v1374;
  uint64_t v1375;
  unint64_t v1376;
  uint64_t v1377;
  size_t v1378;
  uint64_t v1379;
  unint64_t v1380;
  uint64_t v1381;
  uint64_t v1382;
  uint64_t v1383;
  unsigned int v1384;
  uint64_t v1385;
  uint64_t v1386;
  size_t v1387;
  uint64_t v1388;
  uint64_t v1389;
  uint64_t v1390;
  uint64_t v1391;
  unsigned int v1392;
  int v1393;
  char v1394;
  int v1395;
  unint64_t v1396;
  int v1397;
  uint64_t v1398;
  unint64_t v1399;
  unint64_t v1400;
  uint64_t v1401;
  uint64_t v1402;
  unint64_t v1403;
  unint64_t v1404;
  size_t v1405;
  unint64_t v1406;
  uint64_t v1407;
  unint64_t v1408;
  uint64_t v1409;
  uint64_t v1410;
  _QWORD *v1411;
  _BYTE *v1412;
  _QWORD *v1413;
  _BYTE *v1414;
  _QWORD *v1415;
  _QWORD *v1416;
  _BYTE *v1417;
  _BYTE *v1418;
  _BYTE *v1419;
  _BYTE *v1420;
  _BYTE *v1421;
  _BYTE *v1422;
  _BYTE *v1423;
  uint64_t v1424;
  uint64_t v1425;
  uint64_t v1426;
  uint64_t v1427;
  unint64_t v1428;
  uint64_t v1429;
  uint64_t v1430;
  size_t v1431;
  unint64_t v1432;
  unint64_t v1433;
  unint64_t v1434;
  uint64_t v1435;
  unint64_t v1436;
  size_t v1437;
  size_t v1438;
  size_t v1439;
  uint64_t v1440;
  size_t v1441;
  unint64_t v1442;
  int v1443;
  size_t v1444;
  size_t v1445;
  size_t v1446;
  unsigned int v1447;
  size_t v1448;
  uint64_t v1449;
  size_t v1450;
  unsigned int v1451;
  size_t v1453;
  size_t v1454;
  uint64_t v1455;
  uint64_t v1456;
  uint64_t v1458;
  uint64_t v1459;
  uint64_t v1460;
  int v1461;
  uint64_t v1462;
  int v1463;
  unint64_t v1464;
  unint64_t v1465;
  const void *v1466;
  uint64_t v1467;
  uint64_t v1468;
  uint64_t v1469;
  uint64_t v1470;
  uint64_t v1471;
  uint64_t v1472;
  void *v1473;
  size_t v1474;
  const void *v1475;
  uint64_t v1476;
  _QWORD *v1477;
  _QWORD *v1478;
  _QWORD *v1479;
  _QWORD *v1480;
  _QWORD *v1481;
  _QWORD *v1482;
  _QWORD *v1483;
  _QWORD *v1484;
  _QWORD *v1485;
  unint64_t v1486;
  uint64_t v1487;
  unint64_t v1488;

  v1381 = *(_QWORD *)(a3 + 16);
  v1426 = *(_QWORD *)(v1381 - 8);
  v1428 = *(_QWORD *)(v1426 + 64);
  v1390 = sub_21D7C4668();
  v3 = *(_QWORD *)(v1390 - 8);
  v1447 = *(_DWORD *)(v3 + 84);
  v1397 = *(_DWORD *)(v3 + 80);
  v1430 = v1397 + 16;
  v1375 = v3;
  v4 = *(_QWORD *)(v3 + 64);
  v1387 = v4;
  if (v1447)
    v5 = v4;
  else
    v5 = v4 + 1;
  v1474 = v5;
  v1456 = v1397 | 7;
  v1373 = sub_21D7BF754();
  v6 = *(_QWORD *)(v1373 - 8);
  v1463 = *(_DWORD *)(v6 + 80);
  v7 = v1463 | 7;
  v8 = v1456 | v1463;
  v1424 = v8;
  v1368 = sub_21D7C3840();
  v9 = *(_QWORD *)(v1368 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v1372 = sub_21D7C3804();
  v11 = *(_QWORD *)(v1372 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = v12;
  v1395 = v12 | v10;
  v14 = (v12 | v10);
  v15 = v5;
  v16 = ((v8 | v14) + v5 + ((v1397 + 16) & ~(unint64_t)v1397)) & ~(v8 | v14);
  v17 = v8 | v14;
  v1458 = v1397;
  v1449 = v1397 + 40;
  v18 = (v1458 + 40) & ~v1458;
  v19 = *(_DWORD *)(v6 + 84);
  if (v19)
    v20 = v19 - 1;
  else
    v20 = 0;
  v1367 = v20;
  if (v20 <= 0x7FFFFFFE)
    v21 = 2147483646;
  else
    v21 = v20;
  v1443 = v21;
  v1370 = *(_DWORD *)(v11 + 84);
  v1365 = *(_DWORD *)(v9 + 84);
  if (v1370 <= v1365)
    v22 = *(_DWORD *)(v9 + 84);
  else
    v22 = *(_DWORD *)(v11 + 84);
  v1451 = v22;
  v1359 = *(_DWORD *)(v6 + 84);
  v1371 = v1463 + 113;
  v1455 = v1463;
  v1355 = v6;
  v1362 = v9;
  v1369 = *(_QWORD *)(v9 + 64) + v12;
  v1363 = *(_QWORD *)(v1372 - 8);
  v23 = *(_QWORD *)(v11 + 64);
  if (v19)
    v24 = *(_QWORD *)(v6 + 64);
  else
    v24 = *(_QWORD *)(v6 + 64) + 1;
  v1445 = v24;
  v25 = v8 | v14;
  v1374 = v17 + 1;
  v1460 = v8 | v14;
  v1465 = v18 + v15;
  v1486 = (v18 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v1467 = v1463 + 40;
  v1448 = v24 + ((v1463 + 113) & ~(unint64_t)v1463);
  v26 = v1448 + ((v1467 + ((((v1486 + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v7);
  v1388 = (v1369 & ~(unint64_t)v12) + v23;
  if (v22)
    v27 = (v1369 & ~(unint64_t)v12) + v23;
  else
    v27 = (v1369 & ~(unint64_t)v12) + v23 + 1;
  v1450 = v27;
  v1438 = v27 + 1;
  v28 = v27 + 1 + ((v14 + 160) & ~v14);
  if (v26 <= v28)
    v26 = v28;
  if (v26 <= 0x30)
    v26 = 48;
  v1376 = v26;
  __n = v26 + 1;
  v1454 = v26 + 1 + ((v17 + 1) & ~v17);
  v29 = (v16 + v1454 + 11) & 0xFFFFFFFFFFFFFFF8;
  v1385 = sub_21D7C3F6C();
  v30 = *(_QWORD *)(v1385 - 8);
  v1393 = *(_DWORD *)(v30 + 80);
  v1410 = v1393;
  v31 = v1393 | 7;
  v1383 = v31 + 58;
  v1377 = v31;
  v32 = (v31 + 58 + v29) & ~v31;
  v1384 = *(_DWORD *)(v30 + 84);
  v1389 = v1393 + 16;
  v1361 = v30;
  v33 = *(_QWORD *)(v30 + 64);
  if (!v1384)
    ++v33;
  v1366 = v33;
  v34 = (v1389 & ~(unint64_t)v1393) + v33;
  v1353 = sub_21D7C4314();
  v35 = *(_QWORD *)(v1353 - 8);
  v36 = *(_DWORD *)(v35 + 80);
  v1461 = v36;
  v1468 = v13 | 7;
  v1330 = sub_21D7BF964();
  v37 = *(_QWORD *)(v1330 - 8);
  v38 = *(_DWORD *)(v37 + 80);
  v1476 = v25 | v13 | v36 | v38;
  v1378 = v34;
  v1435 = v32 + v34 + v1476;
  v1442 = v36 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v1459 = v36;
  v1391 = v35;
  v1453 = v1474 + 7;
  v39 = (((v1474 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v39 + 23) & 0xFFFFFFFFFFFFFFF8;
  v1399 = v40;
  v1354 = v36 + 16;
  v41 = *(_QWORD *)(v35 + 64) + ((v1459 + 65) & ~v1459);
  v1441 = v41;
  v1433 = (v41 + ((v1354 + ((v40 + 15) & 0xFFFFFFFFFFFFFFF8)) & v1442)) & 0xFFFFFFFFFFFFFFF8;
  v1440 = v14 + 16;
  v1379 = v13;
  v1357 = v13 + 8;
  v42 = v23 + ((v13 + 8) & ~v13);
  if (v1447)
    v43 = v1447 - 1;
  else
    v43 = 0;
  v44 = v1438 + ((v39 + 16 + v14) & ~v14);
  v1360 = v43;
  v1313 = v1443 - 1;
  if (v43 <= v1443 - 1)
    v43 = v1443 - 1;
  if (v43 <= 0x7FFFFFFF)
    v43 = 0x7FFFFFFF;
  v45 = v1451 - 1;
  if (!v1451)
    v45 = 0;
  if (v45 <= v43)
    v46 = v43;
  else
    v46 = v45;
  v1336 = v46;
  v47 = (v1486 + 23) & 0xFFFFFFFFFFFFFFF8;
  v1406 = (((v1474 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
  v1439 = v39 + 17;
  v1319 = v7 + 23;
  v1408 = v7 + 23 + v39 + 17 + ((v1430 + ((((v47 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v1456);
  v1446 = v23 + ((v13 + 8) & ~v13);
  v48 = v42 + v7;
  v1437 = v1448 + v1456;
  v1404 = (v1406 + 47) & 0xFFFFFFFFFFFFFFF8;
  v1358 = v1404 + 16;
  v49 = v1404 + 16 + v1456;
  v1386 = *(_DWORD *)(v37 + 80);
  v1329 = *(_QWORD *)(v1330 - 8);
  v1326 = *(_QWORD *)(v37 + 64) + 7;
  v1444 = v1450 + v1468;
  v50 = ((v1450
        + v1468
        + ((v1448
          + v14
          + ((v1467
            + ((v1326 + ((v44 + v38) & ~(unint64_t)v38)) & 0xFFFFFFFFFFFFFFF8)) & ~v7)) & ~v14)) & ~v1468)
      + v42;
  v1333 = v7 + 41;
  v51 = (v1448 + v14 + ((v7 + 41 + ((v40 + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v7)) & ~v14;
  v52 = v1450 + 7;
  v53 = ((((v1450 + 7 + v51) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 16;
  v54 = ((v1474 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
  v55 = (v1460 + v54) & ~v1460;
  v1314 = v53 + v1460;
  v1315 = v1454 + 7;
  v1316 = v1460 + 8;
  v1431 = v1448 + 7;
  v56 = (v1448 + 7 + ((v54 + v1463) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  v1322 = v1445 + v14;
  v57 = v1450 + v14;
  v1325 = v41 + 7;
  v58 = ((v41 + 7 + ((v54 + v36) & v1442)) & 0xFFFFFFFFFFFFFFF8) + 8;
  v1320 = v7 + 17;
  v59 = v1448 + ((v7 + 17 + v1486) & ~v7);
  v1351 = v1448 + ((v1463 + 8) & ~v7);
  v1352 = v53;
  if (v1351 <= v1404
              + 24
              + ((v49
                + ((v49
                  + ((v1448
                    + v1456
                    + ((v42
                      + v7
                      + ((v1450 + v1468 + ((v14 + 16 + ((v1433 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v14)) & ~v1468)) & ~v7)) & ~v1456)) & ~v1456)) & ~v1456))
    v60 = v1404
        + 24
        + ((v49
          + ((v49
            + ((v1448
              + v1456
              + ((v42 + v7 + ((v1450 + v1468 + ((v14 + 16 + ((v1433 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v14)) & ~v1468)) & ~v7)) & ~v1456)) & ~v1456)) & ~v1456);
  else
    v60 = v1448 + ((v1463 + 8) & ~v7);
  v1349 = v50;
  if (v60 <= v50)
    v60 = v50;
  if (v60 <= v53)
    v60 = v53;
  v1346 = ((((((v56 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
  v1347 = ((v1460 + 8 + ((v1454 + 7 + ((v53 + v1460 + v55) & ~v1460)) & 0xFFFFFFFFFFFFFFF8)) & ~v1460) + v1454;
  if (v60 <= v1347)
    v60 = ((v1460 + 8 + ((v1454 + 7 + ((v53 + v1460 + v55) & ~v1460)) & 0xFFFFFFFFFFFFFFF8)) & ~v1460) + v1454;
  if (v60 <= ((((((v56 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8)
    v60 = ((((((v56 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
  v1343 = ((v48
          + ((v1450
            + v1468
            + ((v1450
              + v14
              + ((v1445 + v14 + ((v39 + 16 + v1463) & ~(unint64_t)v1463)) & ~v14)
              + 1) & ~v14)) & ~v1468)) & ~v7)
        + v1448;
  v1344 = (((((v1465 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v60 <= v1343)
    v60 = ((v48
          + ((v1450
            + v1468
            + ((v1450
              + v14
              + ((v1445 + v14 + ((v39 + 16 + v1463) & ~(unint64_t)v1463)) & ~v14)
              + 1) & ~v14)) & ~v1468)) & ~v7)
        + v1448;
  if (v60 <= (((((v1465 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16)
    v60 = (((((v1465 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v1345 = v58;
  if (v60 <= v58)
    v60 = v58;
  v1341 = v59 + 1;
  if (v60 <= v59 + 1)
    v61 = v59 + 1;
  else
    v61 = v60;
  v1401 = v1435 & ~v1476;
  v62 = (((v47 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v63 = ((((v62 + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 41;
  v1318 = v14 + 40;
  v64 = ((v57
        + ((v14
          + 40
          + ((((((v62 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v14)) & ~v14)
      + v1450;
  v65 = (v1399 + 23) & 0xFFFFFFFFFFFFFFF8;
  v66 = v65 + 8;
  v67 = ((v65 + 47) & 0xFFFFFFFFFFFFFFF8) + 40;
  v1311 = v1448 + v14;
  v1312 = ((v1448 + v14 + ((v67 + v7) & ~v7)) & ~v14) + v1450;
  v1331 = v1312 + 7;
  v1332 = v1463 + 8;
  v68 = ((v1332 + ((v1312 + 7 + v55) & 0xFFFFFFFFFFFFFFF8)) & ~v7) + v1448;
  v1324 = v14 + 24;
  v1356 = v42 + v7;
  v1348 = v1404 + 16 + v1456;
  v1350 = v1404 + 24;
  v69 = v1404
      + 24
      + ((v49 + ((v49 + ((v1437 + ((v48 + ((v1444 + ((v14 + 24 + v1433) & ~v14)) & ~v1468)) & ~v7)) & ~v1456)) & ~v1456)) & ~v1456);
  v70 = (v1406 + 15) & 0xFFFFFFFFFFFFFFF8;
  v1432 = ((v1397 + 56) & ~(unint64_t)v1397) + v1474;
  v71 = (v56 + 23) & 0xFFFFFFFFFFFFFFF8;
  v1321 = v14 + 18;
  v1434 = ((v14 + 18 + v71) & ~v14) + v1450;
  v1436 = v70 + 8;
  v72 = v1406 + 8;
  v73 = v1486 + 8;
  v74 = ((v1486 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  v75 = (((v1404 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v1407 = v14 + 8;
  v1334 = v1450 + v14;
  v1328 = v1446 + v1468;
  v76 = ((v1431
        + ((v1467
          + ((((v1446
              + ((v1446
                + v1468
                + ((v1444
                  + ((v57 + ((v14 + 8 + ((((v75 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v14)) & ~v14)) & ~v1468)) & ~v1468)
              + 9) & 0xFFFFFFFFFFFFFFF8)
            + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v7)) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v77 = (v1408 & ~v7) + v1448;
  v1317 = v1459 + 8;
  v78 = v1399 + 40;
  v1323 = v1441 + v14;
  v1327 = v14 + 9;
  v1405 = v1450 + 7;
  v1487 = v14;
  v1409 = v1463 | 7;
  v79 = ((v1450
        + v7
        + ((v1440
          + ((v52
            + ((v14
              + 9
              + ((((v52 + ((v1441 + v14 + ((v1459 + 8 + v75) & v1442)) & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v14)) & 0xFFFFFFFFFFFFFFF8)) & ~v14)) & ~v7)
      + v1448;
  v80 = v61;
  v1340 = v63;
  if (v61 <= v63)
    v80 = v63;
  v1337 = v68;
  v1338 = v64;
  if (v80 <= v64)
    v80 = v64;
  if (v80 <= v66)
    v80 = v66;
  if (v80 <= v68)
    v80 = v68;
  if (v80 <= v1439)
    v80 = v39 + 17;
  v1339 = v69;
  if (v80 <= v69)
    v80 = v69;
  v1335 = v70 + 16;
  if (v80 <= v70 + 16)
    v80 = v70 + 16;
  v1342 = ((v1465 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
  if (v80 <= v1342)
    v80 = ((v1465 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
  if (v80 <= ((v1397 + 80) & ~(unint64_t)v1397) + v1474)
    v80 = ((v1397 + 80) & ~(unint64_t)v1397) + v1474;
  if (v80 <= v1432)
    v80 = ((v1397 + 56) & ~(unint64_t)v1397) + v1474;
  v81 = ((((v1453 + ((v1449 + (v52 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v1397)) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v80 <= v81)
    v80 = ((((v1453 + ((v1449 + (v52 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v1397)) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  if (v80 <= v1434)
    v80 = ((v14 + 18 + v71) & ~v14) + v1450;
  v1400 = ((v52
          + ((v14
            + 8
            + ((((((((((v71 + 25) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8)
              + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v14)) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  if (v80 <= v1400)
    v80 = ((v52
          + ((v14
            + 8
            + ((((((((((v71 + 25) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8)
              + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v14)) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  if (v80 <= v78)
    v80 = v78;
  if (v80 <= v1436)
    v80 = v70 + 8;
  if (v80 <= v67)
    v80 = v67;
  if (v80 <= v72)
    v80 = v72;
  v1403 = v73;
  if (v80 <= v73)
    v80 = v73;
  if (v80 <= v74)
    v80 = v74;
  if (v80 <= v1465)
    v80 = v1465;
  if (v80 <= v76)
    v80 = v76;
  if (v80 <= v77)
    v80 = v77;
  if (v80 <= v79)
    v80 = v79;
  if (v80 <= 8)
    v82 = 8;
  else
    v82 = v80;
  v83 = ((v82 + 8 + v1401) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v83 <= v1428)
    v83 = v1428;
  if (v83 <= 8)
    v84 = 8;
  else
    v84 = v83;
  v85 = v1476 | v1424 | v1393 | *(_DWORD *)(v1426 + 80) & 0xF8u;
  if (v85 != 7
    || ((v1463 | v1397 | v1395 | v1393 | v1461 | v38 | *(_DWORD *)(v1426 + 80)) & 0x100000) != 0
    || (v84 & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v88 = *a2;
    *a1 = *a2;
    v89 = (_QWORD *)(v88 + ((v85 + 16) & ~v85));
    swift_retain();
    return v89;
  }
  v1464 = ((v1397 + 80) & ~(unint64_t)v1397) + v1474;
  v86 = a2;
  if (*((unsigned __int8 *)a2 + v84) >= 4u)
  {
    if (v84 <= 3)
      v87 = v84;
    else
      v87 = 4;
    __asm { BR              X12 }
  }
  v89 = a1;
  switch(*((_BYTE *)a2 + v84))
  {
    case 0:
      (*(void (**)(_QWORD *, _QWORD *, uint64_t, _QWORD))(v1426 + 16))(a1, a2, v1381, *(unsigned int *)(v1391 + 84));
      *((_BYTE *)a1 + v84) = 0;
      goto LABEL_1365;
    case 1:
      v1392 = *(_DWORD *)(v1391 + 84);
      v1302 = v1450 + v7;
      v1304 = v78;
      v1305 = v79;
      v1306 = v72;
      v1307 = v76;
      v1308 = v77;
      v1309 = v74;
      v1310 = v67;
      v1462 = v82;
      v1427 = v82 + 8;
      v90 = ~v1460;
      v91 = a2[1];
      *a1 = *a2;
      a1[1] = v91;
      v92 = (void *)(((unint64_t)a1 + v1397 + 16) & ~(unint64_t)v1397);
      v1396 = ~(unint64_t)v1397;
      v93 = (char *)(((unint64_t)a2 + v1397 + 16) & v1396);
      sub_21D7C4C20();
      if (__swift_getEnumTagSinglePayload((uint64_t)v93, 1, v1390))
      {
        v94 = v1474;
        memcpy(v92, v93, v1474);
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v1375 + 16))(v92, v93, v1390);
        __swift_storeEnumTagSinglePayload((uint64_t)v92, 0, 1, v1390);
        v94 = v1474;
      }
      v96 = ~v7;
      v1425 = ~v1487;
      v1402 = ~v1379;
      v97 = &v93[v94];
      v98 = (_BYTE *)(((unint64_t)v92 + v94 + v1460) & v90);
      v99 = (unsigned __int8 *)((unint64_t)&v97[v1460] & v90);
      v100 = *v99;
      v1394 = 8 * v1388;
      v1429 = v84;
      v1382 = ~v1460;
      v1398 = ~v1455;
      if (v100 > 2)
      {
        v107 = v1454;
        memcpy(v98, v99, v1454);
LABEL_137:
        v108 = v1377;
        goto LABEL_138;
      }
      *v98 = v100;
      v101 = (unint64_t)&v98[v1374] & v90;
      v102 = (unint64_t)&v99[v1374] & v90;
      v103 = *(unsigned __int8 *)(v102 + v1376);
      if (v103 > 2)
      {
        memcpy((void *)((unint64_t)&v98[v1374] & v90), (const void *)((unint64_t)&v99[v1374] & v90), __n);
        v107 = v1454;
        goto LABEL_137;
      }
      if (v103 != 2)
      {
        if (v103 != 1)
        {
          v136 = (_QWORD *)((unint64_t)&v98[v1374] & v90);
          *v136 = *(_QWORD *)v102;
          v136[1] = *(_QWORD *)(((unint64_t)&v99[v1374] & v90) + 8);
          v136[2] = *(_QWORD *)(((unint64_t)&v99[v1374] & v90) + 0x10);
          v136[3] = *(_QWORD *)(((unint64_t)&v99[v1374] & v90) + 0x18);
          v136[4] = *(_QWORD *)(((unint64_t)&v99[v1374] & v90) + 0x20);
          v136[5] = *(_QWORD *)(((unint64_t)&v99[v1374] & v90) + 0x28);
          *((_BYTE *)v136 + v1376) = 0;
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          v107 = v1454;
          v108 = v1377;
          goto LABEL_138;
        }
        v1293 = (unsigned __int8 *)((unint64_t)&v97[v1460] & v90);
        v104 = *(_QWORD *)(((unint64_t)&v99[v1374] & v90) + 0x18);
        *(_QWORD *)(((unint64_t)&v98[v1374] & v90) + 0x18) = v104;
        *(_QWORD *)(((unint64_t)&v98[v1374] & v90) + 0x20) = *(_QWORD *)(((unint64_t)&v99[v1374] & v90)
                                                                              + 0x20);
        (**(void (***)(unint64_t, unint64_t))(v104 - 8))(v101, v102);
        v105 = (void *)((v1449 + v101) & v1396);
        v106 = (const void *)((v1449 + v102) & v1396);
        if (__swift_getEnumTagSinglePayload((uint64_t)v106, 1, v1390))
        {
          memcpy(v105, v106, v1474);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v1375 + 16))(v105, v106, v1390);
          __swift_storeEnumTagSinglePayload((uint64_t)v105, 0, 1, v1390);
        }
        v137 = (_QWORD *)(((unint64_t)v105 + v1453) & 0xFFFFFFFFFFFFFFF8);
        v138 = (_QWORD *)(((unint64_t)v106 + v1453) & 0xFFFFFFFFFFFFFFF8);
        *v137 = *v138;
        v137[1] = v138[1];
        v139 = ((unint64_t)v137 + 23) & 0xFFFFFFFFFFFFFFF8;
        v140 = ((unint64_t)v138 + 23) & 0xFFFFFFFFFFFFFFF8;
        *(_QWORD *)v139 = *(_QWORD *)v140;
        *(_BYTE *)(v139 + 8) = *(_BYTE *)(v140 + 8);
        v141 = ((unint64_t)v137 + 39) & 0xFFFFFFFFFFFFFFF8;
        v142 = ((unint64_t)v138 + 39) & 0xFFFFFFFFFFFFFFF8;
        *(_QWORD *)v141 = *(_QWORD *)v142;
        *(_BYTE *)(v141 + 8) = *(_BYTE *)(v142 + 8);
        v143 = ((unint64_t)v137 + 55) & 0xFFFFFFFFFFFFFFF8;
        v144 = ((unint64_t)v138 + 55) & 0xFFFFFFFFFFFFFFF8;
        v145 = *(_QWORD *)v144;
        *(_BYTE *)(v143 + 8) = *(_BYTE *)(v144 + 8);
        *(_QWORD *)v143 = v145;
        v146 = (_QWORD *)(((unint64_t)v137 + 71) & 0xFFFFFFFFFFFFFFF8);
        v147 = (_QWORD *)(((unint64_t)v138 + 71) & 0xFFFFFFFFFFFFFFF8);
        *v146 = *v147;
        v146[1] = v147[1];
        v148 = ((unint64_t)v146 + 23) & 0xFFFFFFFFFFFFFFF8;
        v149 = ((unint64_t)v147 + 23) & 0xFFFFFFFFFFFFFFF8;
        v150 = *(_QWORD *)(v149 + 24);
        sub_21D7C4C20();
        sub_21D7C4C20();
        sub_21D7C4C20();
        sub_21D7C4C20();
        if (v150 < 0xFFFFFFFF)
        {
          v151 = *(_OWORD *)v149;
          v152 = *(_OWORD *)(v149 + 16);
          *(_QWORD *)(v148 + 32) = *(_QWORD *)(v149 + 32);
          *(_OWORD *)v148 = v151;
          *(_OWORD *)(v148 + 16) = v152;
        }
        else
        {
          *(_QWORD *)(v148 + 24) = v150;
          *(_QWORD *)(v148 + 32) = *(_QWORD *)(v149 + 32);
          (**(void (***)(unint64_t, unint64_t, unint64_t))(v150 - 8))(v148, v149, v150);
        }
        v153 = (_QWORD *)((v1467 + v148) & v96);
        v154 = (_QWORD *)((v1467 + v149) & v96);
        if (v1367 >= 0x7FFFFFFF)
        {
          v158 = ((unint64_t)v154 + v1371) & v1398;
          if (__swift_getEnumTagSinglePayload(v158, v1359, v1373) <= 1)
          {
            v156 = (char *)(v154 + 1);
            v157 = v1371;
            goto LABEL_174;
          }
        }
        else
        {
          v155 = v154[2];
          if (v155 >= 0xFFFFFFFF)
            LODWORD(v155) = -1;
          if ((int)v155 - 1 < 0)
          {
            v156 = (char *)(v154 + 1);
            v157 = v1371;
            v158 = ((unint64_t)v154 + v1371) & v1398;
LABEL_174:
            *(_BYTE *)v153 = *(_BYTE *)v154;
            v153[1] = v154[1];
            v153[2] = *((_QWORD *)v156 + 1);
            v153[3] = *((_QWORD *)v156 + 2);
            v153[4] = *((_QWORD *)v156 + 3);
            v153[5] = *((_QWORD *)v156 + 4);
            v153[6] = *((_QWORD *)v156 + 5);
            v153[7] = *((_QWORD *)v156 + 6);
            v153[8] = *((_QWORD *)v156 + 7);
            v153[9] = *((_QWORD *)v156 + 8);
            v153[10] = *((_QWORD *)v156 + 9);
            v153[11] = *((_QWORD *)v156 + 10);
            v153[12] = *((_QWORD *)v156 + 11);
            v159 = *((_QWORD *)v156 + 12);
            *((_BYTE *)v153 + 112) = v156[104];
            v153[13] = v159;
            v160 = ((unint64_t)v153 + v157) & v1398;
            sub_21D7C4C20();
            sub_21D7C4C20();
            sub_21D7C4C20();
            sub_21D7C4C20();
            sub_21D7C4C20();
            sub_21D7C4C20();
            if (!__swift_getEnumTagSinglePayload(v158, 1, v1373))
            {
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v1355 + 16))(v160, v158, v1373);
              __swift_storeEnumTagSinglePayload(v160, 0, 1, v1373);
              goto LABEL_178;
            }
            v161 = (void *)v160;
            v162 = (const void *)v158;
            v163 = v1445;
LABEL_177:
            memcpy(v161, v162, v163);
LABEL_178:
            v107 = v1454;
            v108 = v1377;
            *(_BYTE *)(v101 + v1376) = 1;
            v99 = v1293;
            goto LABEL_138;
          }
        }
        v161 = v153;
        v162 = v154;
        v163 = v1448;
        goto LABEL_177;
      }
      v1294 = (unsigned __int8 *)((unint64_t)&v97[v1460] & v90);
      if (*(_QWORD *)(((unint64_t)&v99[v1374] & v90) + 8) < 0xFFFFFFFFuLL)
      {
        memcpy((void *)((unint64_t)&v98[v1374] & v90), (const void *)((unint64_t)&v99[v1374] & v90), 0x48uLL);
      }
      else
      {
        *(_QWORD *)v101 = *(_QWORD *)v102;
        *(_QWORD *)(((unint64_t)&v98[v1374] & v90) + 8) = *(_QWORD *)(((unint64_t)&v99[v1374] & v90) + 8);
        *(_QWORD *)(((unint64_t)&v98[v1374] & v90) + 0x10) = *(_QWORD *)(((unint64_t)&v99[v1374] & v90)
                                                                              + 0x10);
        *(_QWORD *)(((unint64_t)&v98[v1374] & v90) + 0x18) = *(_QWORD *)(((unint64_t)&v99[v1374] & v90)
                                                                              + 0x18);
        v1290 = (_OWORD *)(v101 + 32);
        __src = (__int128 *)(v102 + 32);
        v135 = *(_QWORD *)(((unint64_t)&v99[v1374] & v90) + 0x38);
        sub_21D7C4C20();
        sub_21D7C4C20();
        if (v135)
        {
          *(_QWORD *)(v101 + 56) = v135;
          *(_QWORD *)(v101 + 64) = *(_QWORD *)(v102 + 64);
          (**(void (***)(_OWORD *, __int128 *, uint64_t))(v135 - 8))(v1290, __src, v135);
        }
        else
        {
          v231 = *__src;
          v232 = *(_OWORD *)(v102 + 48);
          *(_QWORD *)(v101 + 64) = *(_QWORD *)(v102 + 64);
          *v1290 = v231;
          *(_OWORD *)(v101 + 48) = v232;
        }
      }
      v233 = (v101 + 79) & 0xFFFFFFFFFFFFFFF8;
      v234 = (__int128 *)((v102 + 79) & 0xFFFFFFFFFFFFFFF8);
      v1380 = v101;
      if (*((_QWORD *)v234 + 1) < 0xFFFFFFFFuLL)
      {
        memcpy((void *)((v101 + 79) & 0xFFFFFFFFFFFFFFF8), v234, 0x48uLL);
      }
      else
      {
        *(_QWORD *)v233 = *(_QWORD *)v234;
        *(_QWORD *)(v233 + 8) = *((_QWORD *)v234 + 1);
        *(_QWORD *)(v233 + 16) = *((_QWORD *)v234 + 2);
        *(_QWORD *)(v233 + 24) = *((_QWORD *)v234 + 3);
        v1289 = (_OWORD *)(v233 + 32);
        v1291 = v234 + 2;
        v235 = *((_QWORD *)v234 + 7);
        sub_21D7C4C20();
        sub_21D7C4C20();
        if (v235)
        {
          *(_QWORD *)(v233 + 56) = v235;
          *(_QWORD *)(v233 + 64) = *((_QWORD *)v234 + 8);
          (**(void (***)(_OWORD *, __int128 *, uint64_t))(v235 - 8))(v1289, v1291, v235);
        }
        else
        {
          v236 = *v1291;
          v237 = v234[3];
          *(_QWORD *)(v233 + 64) = *((_QWORD *)v234 + 8);
          *v1289 = v236;
          *(_OWORD *)(v233 + 48) = v237;
        }
      }
      v238 = (_QWORD *)((v233 + 79) & 0xFFFFFFFFFFFFF8);
      v239 = (_QWORD *)(((unint64_t)v234 + 79) & 0xFFFFFFFFFFFFFFF8);
      *v238 = *v239;
      v240 = (_QWORD *)(((unint64_t)v238 + 15) & 0xFFFFFFFFFFFFFFF8);
      v241 = (_QWORD *)(((unint64_t)v239 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v240 = *v241;
      v242 = (_BYTE *)(((unint64_t)v240 + v1407) & v1425);
      v243 = (_BYTE *)(((unint64_t)v241 + v1407) & v1425);
      sub_21D7C4C20();
      sub_21D7C4C20();
      if (v1451)
      {
        v244 = v1370;
        v107 = v1454;
        v108 = v1377;
        if (v1365 >= v1370)
        {
          v245 = (uint64_t)v243;
          v244 = v1365;
          v246 = v1368;
        }
        else
        {
          v245 = (unint64_t)&v243[v1369] & v1402;
          v246 = v1372;
        }
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v245, v244, v246);
        v99 = v1294;
      }
      else
      {
        v107 = v1454;
        v108 = v1377;
        v99 = v1294;
        if (!v243[v1388])
          goto LABEL_660;
        v247 = (v243[v1388] - 1) << v1394;
        if (v1388 > 3)
          v247 = 0;
        if ((_DWORD)v1388)
        {
          if (v1388 <= 3)
            v248 = v1388;
          else
            v248 = 4;
          __asm { BR              X11 }
        }
        EnumTagSinglePayload = v247 + 1;
      }
      if (!EnumTagSinglePayload)
      {
LABEL_660:
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v1362 + 16))(v242, v243, v1368);
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v1363 + 16))((unint64_t)&v242[v1369] & v1402, (unint64_t)&v243[v1369] & v1402, v1372);
        if (!v1451)
          v242[v1388] = 0;
        goto LABEL_662;
      }
      memcpy(v242, v243, v1450);
LABEL_662:
      v242[v1450] = v243[v1450];
      *(_BYTE *)(v1380 + v1376) = 2;
      v96 = ~v7;
LABEL_138:
      v109 = ~v108;
      v110 = &v98[v107];
      *(_WORD *)v110 = *(_WORD *)&v99[v107];
      v110[2] = v99[v107 + 2];
      v110[3] = v99[v107 + 3];
      v111 = (unint64_t)&v98[v107 + 11] & 0xFFFFFFFFFFFFFFF8;
      v112 = (unint64_t)&v99[v107 + 11] & 0xFFFFFFFFFFFFFFF8;
      v113 = *(_QWORD *)(v112 + 24);
      v1303 = v81;
      if (v113 < 0xFFFFFFFF)
      {
        v114 = *(_OWORD *)v112;
        v115 = *(_OWORD *)(v112 + 16);
        v116 = *(_OWORD *)(v112 + 32);
        *(_OWORD *)(v111 + 41) = *(_OWORD *)(v112 + 41);
        *(_OWORD *)(v111 + 16) = v115;
        *(_OWORD *)(v111 + 32) = v116;
        *(_OWORD *)v111 = v114;
      }
      else
      {
        *(_QWORD *)(v111 + 24) = v113;
        *(_QWORD *)(v111 + 32) = *(_QWORD *)(v112 + 32);
        (**(void (***)(unint64_t, unint64_t))(v113 - 8))((unint64_t)&v98[v107 + 11] & 0xFFFFFFFFFFFFFFF8, v112);
        *(_QWORD *)(v111 + 40) = *(_QWORD *)(v112 + 40);
        *(_QWORD *)(v111 + 48) = *(_QWORD *)(v112 + 48);
        *(_BYTE *)(v111 + 56) = *(_BYTE *)(v112 + 56);
        sub_21D7C4C20();
      }
      v117 = v1389;
      v118 = ~v1410;
      v119 = ~v1476;
      *(_BYTE *)(v111 + 57) = *(_BYTE *)(v112 + 57);
      v120 = (_QWORD *)((v1383 + v111) & v109);
      v121 = (_QWORD *)((v1383 + v112) & v109);
      if (v1384 >= 0x80000001)
      {
        v123 = (const void *)(((unint64_t)v121 + v1389) & v118);
        v122 = v1385;
        v124 = __swift_getEnumTagSinglePayload((uint64_t)v123, v1384, v1385);
        v117 = v1389;
        if (v124 < 2)
          goto LABEL_145;
      }
      else
      {
        v122 = v1385;
        if (v121[1] >= 0xFFFFFFFFuLL)
        {
          v123 = (const void *)(((unint64_t)v121 + v1389) & v118);
LABEL_145:
          *v120 = *v121;
          v120[1] = v121[1];
          v125 = (void *)(((unint64_t)v120 + v117) & v118);
          sub_21D7C4C20();
          v126 = v96;
          if (__swift_getEnumTagSinglePayload((uint64_t)v123, 1, v122))
          {
            memcpy(v125, v123, v1366);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1361 + 16))(v125, v123, v122);
            __swift_storeEnumTagSinglePayload((uint64_t)v125, 0, 1, v122);
          }
          v128 = v1468;
          v127 = v1378;
          goto LABEL_150;
        }
      }
      v126 = v96;
      v127 = v1378;
      memcpy(v120, v121, v1378);
      v128 = v1468;
LABEL_150:
      v129 = (_QWORD *)(((unint64_t)v120 + v1476 + v127) & v119);
      v130 = (_QWORD *)(((unint64_t)v121 + v1476 + v127) & v119);
      v132 = ~v1459;
      v133 = ~v1456;
      v134 = ~v1386;
      switch(*((_BYTE *)v130 + v1462))
      {
        case 0:
          v1469 = ~v128;
          v1295 = v126;
          if (__swift_getEnumTagSinglePayload((uint64_t)v130, 1, v1390))
          {
            memcpy(v129, v130, v1474);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1375 + 16))(v129, v130, v1390);
            __swift_storeEnumTagSinglePayload((uint64_t)v129, 0, 1, v1390);
          }
          v1411 = v129;
          v250 = ((unint64_t)v129 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v1477 = v130;
          v251 = ((unint64_t)v130 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v252 = *(_QWORD *)(v251 + 24);
          *(_QWORD *)(v250 + 24) = v252;
          *(_QWORD *)(v250 + 32) = *(_QWORD *)(v251 + 32);
          (**(void (***)(unint64_t, unint64_t))(v252 - 8))(v250, v251);
          v253 = (_QWORD *)((v250 + 47) & 0xFFFFFFFFFFFFFFF8);
          v254 = (_QWORD *)((v251 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v253 = *v254;
          v253[1] = v254[1];
          v255 = (_QWORD *)(((unint64_t)v253 + 23) & 0xFFFFFFFFFFFFF8);
          v256 = (_QWORD *)(((unint64_t)v254 + 23) & 0xFFFFFFFFFFFFF8);
          *v255 = *v256;
          v257 = (_QWORD *)(((unint64_t)v255 + 15) & 0xFFFFFFFFFFFFFFF8);
          v258 = (_QWORD *)(((unint64_t)v256 + 15) & 0xFFFFFFFFFFFFFFF8);
          *v257 = *v258;
          v257[1] = v258[1];
          v259 = (_QWORD *)(((unint64_t)v257 + v1354) & v1442);
          v260 = (_QWORD *)(((unint64_t)v258 + v1354) & v1442);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v1392 > 0x7FFFFFFE)
          {
            v263 = (_QWORD *)(((unint64_t)v260 + 23) & 0xFFFFFFFFFFFFFFF8);
            v264 = ((unint64_t)v263 + 23) & 0xFFFFFFFFFFFFFFF8;
            v262 = v1388;
            if (!__swift_getEnumTagSinglePayload((v1459 + v264 + 33) & v132, v1392, v1353))
              goto LABEL_295;
          }
          else
          {
            v261 = v260[1];
            if (v261 >= 0xFFFFFFFF)
              LODWORD(v261) = -1;
            v262 = v1388;
            if ((v261 + 1) <= 1)
            {
              v263 = (_QWORD *)(((unint64_t)v260 + 23) & 0xFFFFFFFFFFFFFFF8);
              v264 = ((unint64_t)v263 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_295:
              *v259 = *v260;
              v259[1] = v260[1];
              v266 = (_QWORD *)(((unint64_t)v259 + 23) & 0xFFFFFFFFFFFFFFF8);
              *v266 = *v263;
              v266[1] = v263[1];
              v267 = ((unint64_t)v266 + 23) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)v267 = *(_QWORD *)v264;
              *(_QWORD *)(v267 + 8) = *(_QWORD *)(v264 + 8);
              *(_BYTE *)(v267 + 16) = *(_BYTE *)(v264 + 16);
              v268 = ((unint64_t)v266 + 47) & 0xFFFFFFFFFFFFFFF8;
              v269 = ((unint64_t)v263 + 47) & 0xFFFFFFFFFFFFFFF8;
              v270 = *(void **)v269;
              *(_QWORD *)v268 = *(_QWORD *)v269;
              *(_BYTE *)(v268 + 8) = *(_BYTE *)(v269 + 8);
              v271 = (v1459 + 9 + v268) & v132;
              v272 = (v1459 + 9 + v269) & v132;
              v273 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1391 + 16);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              v274 = v270;
              v273(v271, v272, v1353);
              v262 = v1388;
              v265 = v1441;
LABEL_296:
              *((_BYTE *)v259 + v265) = *((_BYTE *)v260 + v265);
              v275 = ((unint64_t)v259 + v265) & 0xFFFFFFFFFFFFFFF8;
              v276 = ((unint64_t)v260 + v265) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)(v275 + 8) = *(_QWORD *)(v276 + 8);
              v277 = (_QWORD *)((v275 + 23) & 0xFFFFFFFFFFFFFFF8);
              v278 = (_QWORD *)((v276 + 23) & 0xFFFFFFFFFFFFFFF8);
              *v277 = *v278;
              v277[1] = v278[1];
              v279 = (void *)(((unint64_t)v277 + v1440) & v1425);
              v280 = (_BYTE *)(((unint64_t)v278 + v1440) & v1425);
              sub_21D7C4C20();
              sub_21D7C4C20();
              v281 = v1390;
              if (v1451)
              {
                v282 = v1365;
                if (v1365 >= v1370)
                {
                  v283 = (uint64_t)v280;
                  v284 = v1368;
                }
                else
                {
                  v283 = (unint64_t)&v280[v1369] & v1402;
                  v282 = v1370;
                  v284 = v1372;
                }
                v681 = __swift_getEnumTagSinglePayload(v283, v282, v284);
              }
              else
              {
                if (!v280[v262])
                  goto LABEL_765;
                v626 = (v280[v262] - 1) << v1394;
                if (v262 > 3)
                  v626 = 0;
                if ((_DWORD)v262)
                {
                  if (v262 <= 3)
                    v627 = v262;
                  else
                    v627 = 4;
                  __asm { BR              X11 }
                }
                v681 = v626 + 1;
              }
              if (v681)
              {
                memcpy(v279, v280, v1450);
                goto LABEL_767;
              }
LABEL_765:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1362 + 16))(v279, v280, v1368);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1363 + 16))(((unint64_t)v279 + v1369) & v1402, (unint64_t)&v280[v1369] & v1402, v1372);
              if (!v1451)
                *((_BYTE *)v279 + v262) = 0;
LABEL_767:
              v850 = (_QWORD *)(((unint64_t)v279 + v1444) & v1469);
              v851 = (uint64_t *)((unint64_t)&v280[v1444] & v1469);
              v852 = v1446;
              if ((v1370 & 0x80000000) != 0)
              {
                v856 = v1357;
                v854 = __swift_getEnumTagSinglePayload(((unint64_t)v851 + v1357) & v1402, v1370, v1372);
                v852 = v1446;
                v855 = v1295;
              }
              else
              {
                v853 = *v851;
                if ((unint64_t)*v851 >= 0xFFFFFFFF)
                  LODWORD(v853) = -1;
                v854 = v853 + 1;
                v855 = v1295;
                v856 = v1357;
              }
              if (v854)
              {
                memcpy(v850, v851, v852);
              }
              else
              {
                *v850 = *v851;
                v857 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1363 + 16);
                sub_21D7C4C20();
                v857(((unint64_t)v850 + v856) & v1402, ((unint64_t)v851 + v856) & v1402, v1372);
              }
              v858 = (_QWORD *)(((unint64_t)v850 + v1356) & v855);
              v859 = (_QWORD *)(((unint64_t)v851 + v1356) & v855);
              if (v1367 >= 0x7FFFFFFF)
              {
                v861 = v1448;
                if (__swift_getEnumTagSinglePayload(((unint64_t)v859 + v1371) & v1398, v1359, v1373) <= 1)
                {
                  v862 = (char *)(v859 + 1);
                  v863 = ~v1455;
                  v864 = (const void *)(((unint64_t)v859 + v1371) & v1398);
                  goto LABEL_782;
                }
              }
              else
              {
                v860 = v859[2];
                if (v860 >= 0xFFFFFFFF)
                  LODWORD(v860) = -1;
                v861 = v1448;
                if ((int)v860 - 1 < 0)
                {
                  v862 = (char *)(v859 + 1);
                  v863 = ~v1455;
                  v864 = (const void *)(((unint64_t)v859 + v1371) & v1398);
LABEL_782:
                  *(_BYTE *)v858 = *(_BYTE *)v859;
                  v858[1] = v859[1];
                  v858[2] = *((_QWORD *)v862 + 1);
                  v858[3] = *((_QWORD *)v862 + 2);
                  v858[4] = *((_QWORD *)v862 + 3);
                  v858[5] = *((_QWORD *)v862 + 4);
                  v858[6] = *((_QWORD *)v862 + 5);
                  v858[7] = *((_QWORD *)v862 + 6);
                  v858[8] = *((_QWORD *)v862 + 7);
                  v858[9] = *((_QWORD *)v862 + 8);
                  v858[10] = *((_QWORD *)v862 + 9);
                  v858[11] = *((_QWORD *)v862 + 10);
                  v858[12] = *((_QWORD *)v862 + 11);
                  v865 = *((_QWORD *)v862 + 12);
                  *((_BYTE *)v858 + 112) = v862[104];
                  v858[13] = v865;
                  v866 = (void *)(((unint64_t)v858 + v1371) & v863);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (__swift_getEnumTagSinglePayload((uint64_t)v864, 1, v1373))
                  {
                    memcpy(v866, v864, v1445);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1355 + 16))(v866, v864, v1373);
                    __swift_storeEnumTagSinglePayload((uint64_t)v866, 0, 1, v1373);
                  }
                  v861 = v1448;
                  v855 = v1295;
                  v281 = v1390;
LABEL_787:
                  v867 = (unint64_t)v858 + v1456 + v861;
                  v868 = (unint64_t)v859 + v1456 + v861;
                  v869 = v868 & v133;
                  if (v1360 < 0x7FFFFFFF)
                  {
                    if (*(_QWORD *)(((v1453 + v869) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                      goto LABEL_789;
                  }
                  else if (__swift_getEnumTagSinglePayload(v868 & v133, v1447, v281) >= 2)
                  {
LABEL_789:
                    memcpy((void *)(v867 & v133), (const void *)(v868 & v133), v1358);
                    v870 = v1358;
                    v871 = v1447;
                    goto LABEL_799;
                  }
                  if (__swift_getEnumTagSinglePayload(v868 & v133, 1, v281))
                  {
                    memcpy((void *)(v867 & v133), (const void *)(v868 & v133), v1474);
                  }
                  else
                  {
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v1375 + 16))(v867 & v133, v868 & v133, v281);
                    __swift_storeEnumTagSinglePayload(v867 & v133, 0, 1, v281);
                  }
                  v872 = (v1453 + (v867 & v133)) & 0xFFFFFFFFFFFFFFF8;
                  v873 = (v1453 + v869) & 0xFFFFFFFFFFFFFFF8;
                  v874 = *(_QWORD *)(v873 + 24);
                  *(_QWORD *)(v872 + 24) = v874;
                  *(_QWORD *)(v872 + 32) = *(_QWORD *)(v873 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v874 - 8))(v872, v873);
                  v875 = (v872 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v876 = (v873 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v877 = *(_QWORD *)(v876 + 24);
                  if (v877 < 0xFFFFFFFF)
                  {
                    v878 = *(_OWORD *)v876;
                    v879 = *(_OWORD *)(v876 + 16);
                    *(_QWORD *)(v875 + 32) = *(_QWORD *)(v876 + 32);
                    *(_OWORD *)v875 = v878;
                    *(_OWORD *)(v875 + 16) = v879;
                  }
                  else
                  {
                    *(_QWORD *)(v875 + 24) = v877;
                    *(_QWORD *)(v875 + 32) = *(_QWORD *)(v876 + 32);
                    (**(void (***)(unint64_t, unint64_t))(v877 - 8))(v875, (v873 + 47) & 0xFFFFFFFFFFFFFFF8);
                  }
                  v880 = (_QWORD *)((v875 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v881 = (_QWORD *)((v876 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v880 = *v881;
                  v880[1] = v881[1];
                  sub_21D7C4C20();
                  v870 = v1358;
                  v871 = v1447;
                  if (v1447)
                    v870 = ((((((v1387 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                         + 16;
LABEL_799:
                  v882 = (v867 | v1458) + v870;
                  v883 = (v868 | v1458) + v870;
                  v884 = v883 & v133;
                  if (v1360 < 0x7FFFFFFF)
                  {
                    v885 = v1477;
                    if (*(_QWORD *)(((v1453 + v884) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                      goto LABEL_801;
                  }
                  else
                  {
                    v885 = v1477;
                    if (__swift_getEnumTagSinglePayload(v883 & v133, v871, v281) >= 2)
                    {
LABEL_801:
                      memcpy((void *)(v882 & v133), (const void *)(v883 & v133), v1358);
                      v886 = v1358;
                      v887 = v1447;
                      goto LABEL_811;
                    }
                  }
                  if (__swift_getEnumTagSinglePayload(v883 & v133, 1, v281))
                  {
                    memcpy((void *)(v882 & v133), (const void *)(v883 & v133), v1474);
                  }
                  else
                  {
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v1375 + 16))(v882 & v133, v883 & v133, v281);
                    __swift_storeEnumTagSinglePayload(v882 & v133, 0, 1, v281);
                  }
                  v888 = (v1453 + (v882 & v133)) & 0xFFFFFFFFFFFFFFF8;
                  v889 = (v1453 + v884) & 0xFFFFFFFFFFFFFFF8;
                  v890 = *(_QWORD *)(v889 + 24);
                  *(_QWORD *)(v888 + 24) = v890;
                  *(_QWORD *)(v888 + 32) = *(_QWORD *)(v889 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v890 - 8))(v888, v889);
                  v891 = (v888 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v892 = (v889 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v893 = *(_QWORD *)(v892 + 24);
                  if (v893 < 0xFFFFFFFF)
                  {
                    v894 = *(_OWORD *)v892;
                    v895 = *(_OWORD *)(v892 + 16);
                    *(_QWORD *)(v891 + 32) = *(_QWORD *)(v892 + 32);
                    *(_OWORD *)v891 = v894;
                    *(_OWORD *)(v891 + 16) = v895;
                  }
                  else
                  {
                    *(_QWORD *)(v891 + 24) = v893;
                    *(_QWORD *)(v891 + 32) = *(_QWORD *)(v892 + 32);
                    (**(void (***)(unint64_t, unint64_t))(v893 - 8))(v891, v892);
                  }
                  v896 = (_QWORD *)((v891 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v897 = (_QWORD *)((v892 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v896 = *v897;
                  v896[1] = v897[1];
                  sub_21D7C4C20();
                  v886 = v1358;
                  v887 = v1447;
                  if (v1447)
                    v886 = ((((((v1387 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                         + 16;
LABEL_811:
                  v898 = (char *)(((v882 | v1458) + v886) & v133);
                  v899 = (char *)(((v883 | v1458) + v886) & v133);
                  if (v1360 < 0x7FFFFFFF)
                  {
                    v84 = v1429;
                    v130 = v885;
                    if (*(_QWORD *)(((unint64_t)&v899[v1453] & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                    {
LABEL_813:
                      memcpy(v898, v899, v1358);
                      v900 = v1465;
                      v901 = v1352;
                      v902 = v1387 + 1;
                      if (!v1447)
                        goto LABEL_825;
                      goto LABEL_824;
                    }
                  }
                  else
                  {
                    v84 = v1429;
                    v130 = v885;
                    if (__swift_getEnumTagSinglePayload((uint64_t)v899, v887, v281) >= 2)
                      goto LABEL_813;
                  }
                  if (__swift_getEnumTagSinglePayload((uint64_t)v899, 1, v281))
                  {
                    memcpy(v898, v899, v1474);
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(v1375 + 16))(v898, v899, v281);
                    __swift_storeEnumTagSinglePayload((uint64_t)v898, 0, 1, v281);
                  }
                  v903 = (unint64_t)&v898[v1453] & 0xFFFFFFFFFFFFFFF8;
                  v904 = (unint64_t)&v899[v1453] & 0xFFFFFFFFFFFFFFF8;
                  v905 = *(_QWORD *)(v904 + 24);
                  *(_QWORD *)(v903 + 24) = v905;
                  *(_QWORD *)(v903 + 32) = *(_QWORD *)(v904 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v905 - 8))(v903, v904);
                  v906 = (v903 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v907 = (v904 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v908 = *(_QWORD *)(v907 + 24);
                  v900 = v1465;
                  v901 = v1352;
                  if (v908 < 0xFFFFFFFF)
                  {
                    v909 = *(_OWORD *)v907;
                    v910 = *(_OWORD *)(v907 + 16);
                    *(_QWORD *)(v906 + 32) = *(_QWORD *)(v907 + 32);
                    *(_OWORD *)v906 = v909;
                    *(_OWORD *)(v906 + 16) = v910;
                  }
                  else
                  {
                    *(_QWORD *)(v906 + 24) = v908;
                    *(_QWORD *)(v906 + 32) = *(_QWORD *)(v907 + 32);
                    (**(void (***)(unint64_t, unint64_t))(v908 - 8))(v906, v907);
                  }
                  v911 = (_QWORD *)((v906 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v912 = (_QWORD *)((v907 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v911 = *v912;
                  v911[1] = v912[1];
                  sub_21D7C4C20();
                  v84 = v1429;
                  v130 = v885;
                  v902 = v1387 + 1;
                  if (!v1447)
                    goto LABEL_825;
                  v1358 = ((((((v1387 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                        + 16;
LABEL_824:
                  v902 = v1387;
LABEL_825:
                  *(_QWORD *)&v898[v1358] = *(_QWORD *)&v899[v1358];
                  v913 = v1350
                       + ((v1348
                         + ((v1348
                           + ((v1437
                             + ((v1356
                               + ((v1444
                                 + ((v1440
                                   + ((((((v1354
                                         + ((((((((v902 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                           + 15) & 0xFFFFFFFFFFFFFFF8)) & v1442)
                                       + v1441) & 0xFFFFFFFFFFFFFFF8)
                                     + 23) & 0xFFFFFFFFFFFFFFF8)) & v1425)) & v1469)) & v855)) & v133)) & v133)) & v133);
                  if (v1351 > v913)
                    v913 = v1351;
                  if (v913 <= v1349)
                    v913 = v1349;
                  if (v913 <= v901)
                    v913 = v901;
                  if (v913 <= v1347)
                    v913 = v1347;
                  if (v913 <= v1346)
                    v913 = v1346;
                  if (v913 <= v1343)
                    v913 = v1343;
                  if (v913 <= v1344)
                    v913 = (((((v1465 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                         + 16;
                  if (v913 <= v1345)
                    v913 = v1345;
                  if (v913 <= v1341)
                    v913 = v1341;
                  if (v913 <= v1340)
                    v913 = v1340;
                  if (v913 <= v1338)
                    v913 = v1338;
                  if (v913 <= v66)
                    v913 = v66;
                  if (v913 <= v1337)
                    v913 = v1337;
                  if (v913 <= v1439)
                    v913 = v1439;
                  if (v913 <= v1339)
                    v913 = v1339;
                  if (v913 <= v1351)
                    v913 = v1351;
                  if (v913 <= v1335)
                    v913 = v1335;
                  if (v913 <= v1342)
                    v913 = ((v1465 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
                  if (v913 <= v1464)
                    v913 = ((v1458 + 80) & ~v1458) + v1474;
                  if (v913 <= v1432)
                    v913 = ((v1458 + 56) & ~v1458) + v1474;
                  if (v913 <= v1303)
                    v913 = v1303;
                  if (v913 <= v1434)
                    v913 = v1434;
                  if (v913 <= v1400)
                    v913 = v1400;
                  if (v913 <= v1304)
                    v913 = v1304;
                  if (v913 <= v1436)
                    v913 = v1436;
                  if (v913 <= v1310)
                    v913 = v1310;
                  if (v913 <= v1306)
                    v913 = v1306;
                  if (v913 <= v1403)
                    v913 = v1403;
                  if (v913 <= v1309)
                    v913 = v1309;
                  if (v913 <= v900)
                    v913 = v900;
                  if (v913 <= v1307)
                    v913 = v1307;
                  if (v913 <= v1308)
                    v913 = v1308;
                  if (v913 <= v1305)
                    v913 = v1305;
                  if (v913 <= 8)
                    v913 = 8;
                  v171 = v1411;
                  *((_BYTE *)v1411 + v913) = 0;
LABEL_456:
                  v86 = a2;
LABEL_457:
                  v402 = v1427;
                  v89 = a1;
                  goto LABEL_1360;
                }
              }
              memcpy(v858, v859, v861);
              goto LABEL_787;
            }
          }
          v265 = v1441;
          memcpy(v259, v260, v1441);
          goto LABEL_296;
        case 1:
          *v129 = *v130;
          v164 = v129;
          v165 = ((unint64_t)v129 + v1409 + 8) & v126;
          v166 = v130;
          v167 = ((unint64_t)v130 + v1409 + 8) & v126;
          *(_BYTE *)v165 = *(_BYTE *)v167;
          *(_QWORD *)(v165 + 8) = *(_QWORD *)(v167 + 8);
          *(_QWORD *)(v165 + 16) = *(_QWORD *)(v167 + 0x10);
          *(_QWORD *)(v165 + 24) = *(_QWORD *)(v167 + 0x18);
          *(_QWORD *)(v165 + 32) = *(_QWORD *)(v167 + 0x20);
          *(_QWORD *)(v165 + 40) = *(_QWORD *)(v167 + 0x28);
          *(_QWORD *)(v165 + 48) = *(_QWORD *)(v167 + 0x30);
          *(_QWORD *)(v165 + 56) = *(_QWORD *)(v167 + 0x38);
          *(_QWORD *)(v165 + 64) = *(_QWORD *)(v167 + 0x40);
          *(_QWORD *)(v165 + 72) = *(_QWORD *)(v167 + 0x48);
          *(_QWORD *)(v165 + 80) = *(_QWORD *)(v167 + 0x50);
          *(_QWORD *)(v165 + 88) = *(_QWORD *)(v167 + 0x58);
          *(_QWORD *)(v165 + 96) = *(_QWORD *)(v167 + 0x60);
          v168 = *(_QWORD *)(v167 + 0x68);
          *(_BYTE *)(v165 + 112) = *(_BYTE *)(v167 + 0x70);
          *(_QWORD *)(v165 + 104) = v168;
          v169 = (void *)((v1371 + v165) & v1398);
          v170 = (const void *)((v1371 + v167) & v1398);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (__swift_getEnumTagSinglePayload((uint64_t)v170, 1, v1373))
          {
            memcpy(v169, v170, v1445);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1355 + 16))(v169, v170, v1373);
            __swift_storeEnumTagSinglePayload((uint64_t)v169, 0, 1, v1373);
          }
          v89 = a1;
          v84 = v1429;
          v285 = 1;
          goto LABEL_412;
        case 2:
          v171 = v129;
          *v129 = *v130;
          v172 = 2;
          goto LABEL_265;
        case 3:
          v1470 = ~v128;
          v171 = v129;
          if (__swift_getEnumTagSinglePayload((uint64_t)v130, 1, v1390))
          {
            memcpy(v129, v130, v1474);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1375 + 16))(v129, v130, v1390);
            __swift_storeEnumTagSinglePayload((uint64_t)v129, 0, 1, v1390);
          }
          v286 = v1451;
          v287 = v1370;
          v288 = ((unint64_t)v129 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v1478 = v130;
          v289 = ((unint64_t)v130 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v290 = *(_QWORD *)(v289 + 24);
          *(_QWORD *)(v288 + 24) = v290;
          *(_QWORD *)(v288 + 32) = *(_QWORD *)(v289 + 32);
          (**(void (***)(unint64_t, unint64_t))(v290 - 8))(v288, v289);
          v291 = (_QWORD *)((v288 + 47) & 0xFFFFFFFFFFFFFFF8);
          v292 = (_QWORD *)((v289 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v291 = *v292;
          v291[1] = v292[1];
          v293 = (void *)(((unint64_t)v291 + v1440) & v1425);
          v294 = (_BYTE *)(((unint64_t)v292 + v1440) & v1425);
          sub_21D7C4C20();
          if (v1451)
          {
            v295 = v1365;
            if (v1365 >= v1370)
            {
              v296 = (uint64_t)v294;
              v297 = v1368;
            }
            else
            {
              v296 = (unint64_t)&v294[v1369] & v1402;
              v295 = v1370;
              v297 = v1372;
            }
            v682 = __swift_getEnumTagSinglePayload(v296, v295, v297);
          }
          else
          {
            if (!v294[v1388])
              goto LABEL_896;
            v628 = (v294[v1388] - 1) << v1394;
            if (v1388 > 3)
              v628 = 0;
            if ((_DWORD)v1388)
            {
              if (v1388 <= 3)
                v629 = v1388;
              else
                v629 = 4;
              __asm { BR              X11 }
            }
            v682 = v628 + 1;
          }
          if (v682)
          {
            memcpy(v293, v294, v1450);
            goto LABEL_898;
          }
LABEL_896:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1362 + 16))(v293, v294, v1368);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1363 + 16))(((unint64_t)v293 + v1369) & v1402, (unint64_t)&v294[v1369] & v1402, v1372);
          if (!v1451)
            *((_BYTE *)v293 + v1388) = 0;
LABEL_898:
          *((_BYTE *)v293 + v1450) = v294[v1450];
          v914 = ((unint64_t)v293 + v1450 + v1386 + 1) & v134;
          v915 = (unint64_t)&v294[v1450 + 1 + v1386] & v134;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v1329 + 16))(v914, v915, v1330);
          v916 = (v1326 + v914) & 0xFFFFFFFFFFFFFFF8;
          v917 = (v1326 + v915) & 0xFFFFFFFFFFFFFFF8;
          v918 = *(_QWORD *)(v917 + 24);
          if (v918 < 0xFFFFFFFF)
          {
            v919 = *(_OWORD *)v917;
            v920 = *(_OWORD *)(v917 + 16);
            *(_QWORD *)(v916 + 32) = *(_QWORD *)(v917 + 32);
            *(_OWORD *)v916 = v919;
            *(_OWORD *)(v916 + 16) = v920;
          }
          else
          {
            *(_QWORD *)(v916 + 24) = v918;
            *(_QWORD *)(v916 + 32) = *(_QWORD *)(v917 + 32);
            (**(void (***)(unint64_t, unint64_t))(v918 - 8))(v916, v917);
          }
          v921 = (_QWORD *)((v1467 + v916) & v126);
          v922 = (_QWORD *)((v1467 + v917) & v126);
          if (v1367 >= 0x7FFFFFFF)
          {
            v927 = (const void *)(((unint64_t)v922 + v1371) & v1398);
            v924 = v1444;
            if (__swift_getEnumTagSinglePayload((uint64_t)v927, v1359, v1373) <= 1)
            {
              v1420 = v171;
              v925 = (char *)(v922 + 1);
              v926 = ~v1455;
              goto LABEL_908;
            }
          }
          else
          {
            v923 = *(_QWORD *)(((v1467 + v917) & v126) + 0x10);
            if (v923 >= 0xFFFFFFFF)
              LODWORD(v923) = -1;
            v924 = v1444;
            if ((int)v923 - 1 < 0)
            {
              v1420 = v171;
              v925 = (char *)(v922 + 1);
              v926 = ~v1455;
              v927 = (const void *)(((unint64_t)v922 + v1371) & v1398);
LABEL_908:
              *(_BYTE *)v921 = *(_BYTE *)v922;
              v921[1] = v922[1];
              v921[2] = *((_QWORD *)v925 + 1);
              v921[3] = *((_QWORD *)v925 + 2);
              v921[4] = *((_QWORD *)v925 + 3);
              v921[5] = *((_QWORD *)v925 + 4);
              v921[6] = *((_QWORD *)v925 + 5);
              v921[7] = *((_QWORD *)v925 + 6);
              v921[8] = *((_QWORD *)v925 + 7);
              v921[9] = *((_QWORD *)v925 + 8);
              v921[10] = *((_QWORD *)v925 + 9);
              v921[11] = *((_QWORD *)v925 + 10);
              v921[12] = *((_QWORD *)v925 + 11);
              v928 = *((_QWORD *)v925 + 12);
              *((_BYTE *)v921 + 112) = v925[104];
              v921[13] = v928;
              v929 = (void *)(((unint64_t)v921 + v1371) & v926);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              if (__swift_getEnumTagSinglePayload((uint64_t)v927, 1, v1373))
              {
                memcpy(v929, v927, v1445);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1355 + 16))(v929, v927, v1373);
                __swift_storeEnumTagSinglePayload((uint64_t)v929, 0, 1, v1373);
              }
              v171 = v1420;
              v930 = v1448;
              v286 = v1451;
              v287 = v1370;
LABEL_913:
              v931 = (void *)(((unint64_t)v921 + v1487 + v930) & v1425);
              v932 = (unint64_t)v922 + v1487 + v930;
              v933 = (_BYTE *)(v932 & v1425);
              v84 = v1429;
              if (v286)
              {
                v934 = v1365;
                v935 = v1388;
                if (v1365 >= v287)
                {
                  v936 = v932 & v1425;
                  v937 = v1368;
                }
                else
                {
                  v936 = (unint64_t)&v933[v1369] & v1402;
                  v934 = v287;
                  v937 = v1372;
                }
                v940 = __swift_getEnumTagSinglePayload(v936, v934, v937);
              }
              else
              {
                v935 = v1388;
                if (!v933[v1388])
                  goto LABEL_967;
                v938 = (v933[v1388] - 1) << v1394;
                if (v1388 > 3)
                  v938 = 0;
                if ((_DWORD)v1388)
                {
                  if (v1388 <= 3)
                    v939 = v1388;
                  else
                    v939 = 4;
                  __asm { BR              X11 }
                }
                v940 = v938 + 1;
              }
              if (v940)
              {
                memcpy(v931, v933, v1450);
LABEL_969:
                v960 = (_QWORD *)(((unint64_t)v931 + v924) & v1470);
                v961 = (uint64_t *)((unint64_t)&v933[v924] & v1470);
                v962 = v1446;
                if ((v287 & 0x80000000) != 0)
                {
                  v964 = __swift_getEnumTagSinglePayload(((unint64_t)v961 + v1357) & v1402, v287, v1372);
                  v962 = v1446;
                }
                else
                {
                  v963 = *v961;
                  if ((unint64_t)*v961 >= 0xFFFFFFFF)
                    LODWORD(v963) = -1;
                  v964 = v963 + 1;
                }
                v130 = v1478;
                v89 = a1;
                if (v964)
                {
                  memcpy(v960, v961, v962);
                }
                else
                {
                  *v960 = *v961;
                  v965 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1363 + 16);
                  sub_21D7C4C20();
                  v965(((unint64_t)v960 + v1357) & v1402, ((unint64_t)v961 + v1357) & v1402, v1372);
                  v84 = v1429;
                }
                v562 = 3;
                goto LABEL_1357;
              }
LABEL_967:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1362 + 16))(v931, v933, v1368);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1363 + 16))(((unint64_t)v931 + v1369) & v1402, (unint64_t)&v933[v1369] & v1402, v1372);
              if (!v286)
                *((_BYTE *)v931 + v935) = 0;
              goto LABEL_969;
            }
          }
          v930 = v1448;
          memcpy(v921, v922, v1448);
          goto LABEL_913;
        case 4:
          v171 = v129;
          if (__swift_getEnumTagSinglePayload((uint64_t)v130, 1, v1390))
          {
            memcpy(v129, v130, v1474);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1375 + 16))(v129, v130, v1390);
            __swift_storeEnumTagSinglePayload((uint64_t)v129, 0, 1, v1390);
          }
          v298 = ((unint64_t)v129 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v299 = ((unint64_t)v130 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v300 = *(_QWORD *)(v299 + 24);
          *(_QWORD *)(v298 + 24) = v300;
          *(_QWORD *)(v298 + 32) = *(_QWORD *)(v299 + 32);
          (**(void (***)(unint64_t, unint64_t))(v300 - 8))(v298, v299);
          v301 = (_QWORD *)((v298 + 47) & 0xFFFFFFFFFFFFFFF8);
          v302 = (_QWORD *)((v299 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v301 = *v302;
          v301[1] = v302[1];
          v303 = (_QWORD *)(((unint64_t)v301 + 23) & 0xFFFFFFFFFFFFFFF8);
          v304 = (_QWORD *)(((unint64_t)v302 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v303 = *v304;
          v303[1] = v304[1];
          v305 = ((unint64_t)v303 + 23) & 0xFFFFFFFFFFFFFFF8;
          v306 = ((unint64_t)v304 + 23) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v305 = *(_QWORD *)v306;
          *(_QWORD *)(v305 + 8) = *(_QWORD *)(v306 + 8);
          *(_BYTE *)(v305 + 16) = *(_BYTE *)(v306 + 16);
          v307 = ((unint64_t)v303 + 47) & 0xFFFFFFFFFFFFFFF8;
          v308 = ((unint64_t)v304 + 47) & 0xFFFFFFFFFFFFFFF8;
          v309 = *(_QWORD *)(v308 + 24);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v309 < 0xFFFFFFFF)
          {
            v310 = *(_OWORD *)v308;
            v311 = *(_OWORD *)(v308 + 16);
            *(_QWORD *)(v307 + 32) = *(_QWORD *)(v308 + 32);
            *(_OWORD *)v307 = v310;
            *(_OWORD *)(v307 + 16) = v311;
          }
          else
          {
            *(_QWORD *)(v307 + 24) = v309;
            *(_QWORD *)(v307 + 32) = *(_QWORD *)(v308 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v309 - 8))(v307, v308, v309);
          }
          v312 = v1451;
          *(_BYTE *)(v307 + 40) = *(_BYTE *)(v308 + 40);
          v313 = (_QWORD *)((v1333 + v307) & v126);
          v314 = (_QWORD *)((v1333 + v308) & v126);
          v315 = v130;
          if (v1367 >= 0x7FFFFFFF)
          {
            v320 = (const void *)(((unint64_t)v314 + v1371) & v1398);
            v317 = v1370;
            if (__swift_getEnumTagSinglePayload((uint64_t)v320, v1359, v1373) <= 1)
            {
              v1412 = v171;
              v318 = (char *)(v314 + 1);
              v321 = v1371;
              v319 = ~v1455;
              goto LABEL_316;
            }
          }
          else
          {
            v316 = v314[2];
            if (v316 >= 0xFFFFFFFF)
              LODWORD(v316) = -1;
            v317 = v1370;
            if ((int)v316 - 1 < 0)
            {
              v1412 = v171;
              v318 = (char *)(v314 + 1);
              v319 = ~v1455;
              v320 = (const void *)(((unint64_t)v314 + v1371) & v1398);
              v321 = v1371;
LABEL_316:
              *(_BYTE *)v313 = *(_BYTE *)v314;
              v313[1] = v314[1];
              v313[2] = *((_QWORD *)v318 + 1);
              v313[3] = *((_QWORD *)v318 + 2);
              v313[4] = *((_QWORD *)v318 + 3);
              v313[5] = *((_QWORD *)v318 + 4);
              v313[6] = *((_QWORD *)v318 + 5);
              v313[7] = *((_QWORD *)v318 + 6);
              v313[8] = *((_QWORD *)v318 + 7);
              v313[9] = *((_QWORD *)v318 + 8);
              v313[10] = *((_QWORD *)v318 + 9);
              v313[11] = *((_QWORD *)v318 + 10);
              v313[12] = *((_QWORD *)v318 + 11);
              v322 = *((_QWORD *)v318 + 12);
              *((_BYTE *)v313 + 112) = v318[104];
              v313[13] = v322;
              v323 = (void *)(((unint64_t)v313 + v321) & v319);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              if (__swift_getEnumTagSinglePayload((uint64_t)v320, 1, v1373))
              {
                memcpy(v323, v320, v1445);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1355 + 16))(v323, v320, v1373);
                __swift_storeEnumTagSinglePayload((uint64_t)v323, 0, 1, v1373);
              }
              v171 = v1412;
              v315 = v130;
              v324 = v1448;
              v312 = v1451;
              v317 = v1370;
LABEL_633:
              v741 = (void *)(((unint64_t)v313 + v1487 + v324) & v1425);
              v742 = (unint64_t)v314 + v1487 + v324;
              v743 = (_BYTE *)(v742 & v1425);
              v84 = v1429;
              if (v312)
              {
                v744 = v1365;
                v745 = v1388;
                if (v1365 >= v317)
                {
                  v746 = v742 & v1425;
                  v747 = v1368;
                }
                else
                {
                  v746 = (unint64_t)&v743[v1369] & v1402;
                  v744 = v317;
                  v747 = v1372;
                }
                v750 = __swift_getEnumTagSinglePayload(v746, v744, v747);
              }
              else
              {
                v745 = v1388;
                if (!v743[v1388])
                  goto LABEL_958;
                v748 = (v743[v1388] - 1) << v1394;
                if (v1388 > 3)
                  v748 = 0;
                if ((_DWORD)v1388)
                {
                  if (v1388 <= 3)
                    v749 = v1388;
                  else
                    v749 = 4;
                  __asm { BR              X11 }
                }
                v750 = v748 + 1;
              }
              if (v750)
              {
                memcpy(v741, v743, v1450);
                goto LABEL_960;
              }
LABEL_958:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1362 + 16))(v741, v743, v1368);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1363 + 16))(((unint64_t)v741 + v1369) & v1402, (unint64_t)&v743[v1369] & v1402, v1372);
              if (!v312)
                *((_BYTE *)v741 + v745) = 0;
LABEL_960:
              v953 = ((unint64_t)v741 + v1405) & 0xFFFFFFFFFFFFFFF8;
              v954 = (unint64_t)&v743[v1405] & 0xFFFFFFFFFFFFFFF8;
              v955 = *(_QWORD *)(v954 + 24);
              if (v955 < 0xFFFFFFFF)
              {
                v956 = *(_OWORD *)v954;
                v957 = *(_OWORD *)(v954 + 16);
                *(_QWORD *)(v953 + 32) = *(_QWORD *)(v954 + 32);
                *(_OWORD *)v953 = v956;
                *(_OWORD *)(v953 + 16) = v957;
              }
              else
              {
                *(_QWORD *)(v953 + 24) = v955;
                *(_QWORD *)(v953 + 32) = *(_QWORD *)(v954 + 32);
                (**(void (***)(unint64_t, unint64_t))(v955 - 8))(v953, v954);
              }
              v130 = v315;
              v89 = a1;
              v958 = (_QWORD *)((v953 + 47) & 0xFFFFFFFFFFFFFFF8);
              v959 = (_QWORD *)((v954 + 47) & 0xFFFFFFFFFFFFFFF8);
              *v958 = *v959;
              v958[1] = v959[1];
              v171[v1462] = 4;
LABEL_964:
              sub_21D7C4C20();
              goto LABEL_1358;
            }
          }
          v324 = v1448;
          memcpy(v313, v314, v1448);
          goto LABEL_633;
        case 5:
          v173 = ~v1460;
          v171 = v129;
          if (__swift_getEnumTagSinglePayload((uint64_t)v130, 1, v1390))
          {
            memcpy(v129, v130, v1474);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1375 + 16))(v129, v130, v1390);
            __swift_storeEnumTagSinglePayload((uint64_t)v129, 0, 1, v1390);
          }
          v325 = v1371;
          v326 = ((unint64_t)v129 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v327 = v130;
          v328 = ((unint64_t)v130 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v329 = *(_QWORD *)(v328 + 24);
          *(_QWORD *)(v326 + 24) = v329;
          *(_QWORD *)(v326 + 32) = *(_QWORD *)(v328 + 32);
          (**(void (***)(unint64_t, unint64_t))(v329 - 8))((unint64_t)&v171[v1453] & 0xFFFFFFFFFFFFFFF8, v328);
          v330 = (void *)((v1460 + 40 + v326) & v1382);
          v331 = (v1460 + 40 + v328) & v1382;
          v332 = v1451;
          v333 = v1370;
          v334 = v126;
          if (v1360 == v1336)
          {
            v335 = (const void *)v331;
            if (v1447 >= 2 && __swift_getEnumTagSinglePayload(v331, v1447, v1390) >= 2)
              goto LABEL_1269;
            goto LABEL_683;
          }
          v336 = (v1453 + v331) & 0xFFFFFFFFFFFFFFF8;
          v335 = (const void *)v331;
          if (v1336 == 0x7FFFFFFF)
          {
            if (*(_QWORD *)(v336 + 24) >= 0xFFFFFFFFuLL)
              goto LABEL_683;
          }
          else
          {
            v689 = (v1409
                  + ((((((v336 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                  + 65) & v334;
            if (v1313 != v1336)
            {
              if (v1451 >= 2)
              {
                v759 = (v1311 + v689) & v1425;
                if (v1365 >= v1370)
                {
                  v760 = v1365;
                  v761 = v1368;
                }
                else
                {
                  v759 = (v1369 + v759) & v1402;
                  v760 = v1370;
                  v761 = v1372;
                }
                v325 = v1371;
                v332 = v1451;
                v173 = ~v1460;
                if (__swift_getEnumTagSinglePayload(v759, v760, v761) >= 2)
                  goto LABEL_1269;
              }
              goto LABEL_683;
            }
            if (v1367 > 0x7FFFFFFE)
            {
              v765 = __swift_getEnumTagSinglePayload((v1371 + v689) & v1398, v1359, v1373);
              if (v765 < 2)
                goto LABEL_683;
              v692 = v765 - 1;
            }
            else
            {
              v690 = *(_QWORD *)(v689 + 16);
              if (v690 >= 0xFFFFFFFF)
                LODWORD(v690) = -1;
              v691 = v690 - 1;
              if (v691 < 0)
                v691 = -1;
              v692 = v691 + 1;
            }
            if (v692 < 2)
            {
LABEL_683:
              v1418 = v171;
              v1482 = v327;
              if (__swift_getEnumTagSinglePayload((uint64_t)v335, 1, v1390))
              {
                memcpy(v330, v335, v1474);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1375 + 16))(v330, v335, v1390);
                __swift_storeEnumTagSinglePayload((uint64_t)v330, 0, 1, v1390);
              }
              v1473 = v330;
              v766 = ((unint64_t)v330 + v1453) & 0xFFFFFFFFFFFFFFF8;
              v1466 = v335;
              v767 = ((unint64_t)v335 + v1453) & 0xFFFFFFFFFFFFFFF8;
              v768 = *(_QWORD *)(v767 + 24);
              *(_QWORD *)(v766 + 24) = v768;
              *(_QWORD *)(v766 + 32) = *(_QWORD *)(v767 + 32);
              (**(void (***)(unint64_t, unint64_t))(v768 - 8))(v766, v767);
              v769 = (_QWORD *)((v766 + 47) & 0xFFFFFFFFFFFFFFF8);
              v770 = (_QWORD *)((v767 + 47) & 0xFFFFFFFFFFFFFFF8);
              *v769 = *v770;
              v769[1] = v770[1];
              v771 = (_QWORD *)(((unint64_t)v769 + 23) & 0xFFFFFFFFFFFFFFF8);
              v772 = (_QWORD *)(((unint64_t)v770 + 23) & 0xFFFFFFFFFFFFFFF8);
              *v771 = *v772;
              v771[1] = v772[1];
              v773 = ((unint64_t)v771 + 23) & 0xFFFFFFFFFFFFFFF8;
              v774 = ((unint64_t)v772 + 23) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)v773 = *(_QWORD *)v774;
              *(_QWORD *)(v773 + 8) = *(_QWORD *)(v774 + 8);
              *(_BYTE *)(v773 + 16) = *(_BYTE *)(v774 + 16);
              v775 = ((unint64_t)v771 + 47) & 0xFFFFFFFFFFFFFFF8;
              v776 = ((unint64_t)v772 + 47) & 0xFFFFFFFFFFFFFFF8;
              v777 = *(_QWORD *)(v776 + 24);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              v89 = a1;
              if (v777 < 0xFFFFFFFF)
              {
                v778 = *(_OWORD *)v776;
                v779 = *(_OWORD *)(v776 + 16);
                *(_QWORD *)(v775 + 32) = *(_QWORD *)(v776 + 32);
                *(_OWORD *)v775 = v778;
                *(_OWORD *)(v775 + 16) = v779;
              }
              else
              {
                *(_QWORD *)(v775 + 24) = v777;
                *(_QWORD *)(v775 + 32) = *(_QWORD *)(v776 + 32);
                (**(void (***)(unint64_t, unint64_t, unint64_t))(v777 - 8))(v775, v776, v777);
              }
              *(_BYTE *)(v775 + 40) = *(_BYTE *)(v776 + 40);
              v780 = (_QWORD *)((v1333 + v775) & v334);
              v781 = (_QWORD *)((v1333 + v776) & v334);
              if (v1367 >= 0x7FFFFFFF)
              {
                v785 = (const void *)(((unint64_t)v781 + v325) & v1398);
                if (__swift_getEnumTagSinglePayload((uint64_t)v785, v1359, v1373) <= 1)
                {
                  v1299 = v334;
                  v783 = (char *)(v781 + 1);
                  v786 = v325;
                  v784 = ~v1455;
                  goto LABEL_696;
                }
              }
              else
              {
                v782 = *(_QWORD *)(((v1333 + v776) & v334) + 0x10);
                if (v782 >= 0xFFFFFFFF)
                  LODWORD(v782) = -1;
                if ((int)v782 - 1 < 0)
                {
                  v1299 = v334;
                  v783 = (char *)(v781 + 1);
                  v784 = ~v1455;
                  v785 = (const void *)(((unint64_t)v781 + v325) & v1398);
                  v786 = v325;
LABEL_696:
                  *(_BYTE *)v780 = *(_BYTE *)v781;
                  v780[1] = v781[1];
                  v780[2] = *((_QWORD *)v783 + 1);
                  v780[3] = *((_QWORD *)v783 + 2);
                  v780[4] = *((_QWORD *)v783 + 3);
                  v780[5] = *((_QWORD *)v783 + 4);
                  v780[6] = *((_QWORD *)v783 + 5);
                  v780[7] = *((_QWORD *)v783 + 6);
                  v780[8] = *((_QWORD *)v783 + 7);
                  v780[9] = *((_QWORD *)v783 + 8);
                  v780[10] = *((_QWORD *)v783 + 9);
                  v780[11] = *((_QWORD *)v783 + 10);
                  v780[12] = *((_QWORD *)v783 + 11);
                  v787 = *((_QWORD *)v783 + 12);
                  *((_BYTE *)v780 + 112) = v783[104];
                  v780[13] = v787;
                  v788 = (void *)(((unint64_t)v780 + v786) & v784);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (__swift_getEnumTagSinglePayload((uint64_t)v785, 1, v1373))
                  {
                    memcpy(v788, v785, v1445);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1355 + 16))(v788, v785, v1373);
                    __swift_storeEnumTagSinglePayload((uint64_t)v788, 0, 1, v1373);
                  }
                  v789 = v1448;
                  v332 = v1451;
                  v333 = v1370;
                  v790 = v1314;
                  v334 = v1299;
LABEL_701:
                  v791 = (void *)(((unint64_t)v780 + v1487 + v789) & v1425);
                  v792 = (unint64_t)v781 + v1487 + v789;
                  v793 = (_BYTE *)(v792 & v1425);
                  v171 = v1418;
                  if (v332)
                  {
                    v794 = v1365;
                    v795 = v1388;
                    if (v1365 >= v333)
                    {
                      v796 = v792 & v1425;
                      v797 = v1368;
                    }
                    else
                    {
                      v796 = (unint64_t)&v793[v1369] & v1402;
                      v794 = v333;
                      v797 = v1372;
                    }
                    v801 = __swift_getEnumTagSinglePayload(v796, v794, v797);
                    v798 = v1390;
                  }
                  else
                  {
                    v795 = v1388;
                    v798 = v1390;
                    if (!v793[v1388])
                      goto LABEL_1275;
                    v799 = (v793[v1388] - 1) << v1394;
                    if (v1388 > 3)
                      v799 = 0;
                    if ((_DWORD)v1388)
                    {
                      if (v1388 <= 3)
                        v800 = v1388;
                      else
                        v800 = 4;
                      __asm { BR              X11 }
                    }
                    v801 = v799 + 1;
                  }
                  if (v801)
                  {
                    memcpy(v791, v793, v1450);
LABEL_1277:
                    v1139 = ((unint64_t)v791 + v1405) & 0xFFFFFFFFFFFFFFF8;
                    v1140 = (unint64_t)&v793[v1405] & 0xFFFFFFFFFFFFFFF8;
                    v1141 = *(_QWORD *)(v1140 + 24);
                    if (v1141 < 0xFFFFFFFF)
                    {
                      v1142 = *(_OWORD *)v1140;
                      v1143 = *(_OWORD *)(v1140 + 16);
                      *(_QWORD *)(v1139 + 32) = *(_QWORD *)(v1140 + 32);
                      *(_OWORD *)v1139 = v1142;
                      *(_OWORD *)(v1139 + 16) = v1143;
                    }
                    else
                    {
                      *(_QWORD *)(v1139 + 24) = v1141;
                      *(_QWORD *)(v1139 + 32) = *(_QWORD *)(v1140 + 32);
                      (**(void (***)(unint64_t, unint64_t))(v1141 - 8))(v1139, v1140);
                    }
                    v173 = ~v1460;
                    v1144 = (_QWORD *)((v1139 + 47) & 0xFFFFFFFFFFFFFFF8);
                    v1145 = (_QWORD *)((v1140 + 47) & 0xFFFFFFFFFFFFFFF8);
                    *v1144 = *v1145;
                    v1144[1] = v1145[1];
                    sub_21D7C4C20();
                    v130 = v1482;
                    v330 = v1473;
                    v335 = v1466;
LABEL_1281:
                    v1146 = v173;
                    v1147 = (_BYTE *)(((unint64_t)v330 + v790) & v173);
                    v1148 = (unsigned __int8 *)(((unint64_t)v335 + v790) & v1146);
                    v1149 = *v1148;
                    if (v1149 > 2)
                    {
                      v1156 = v334;
                      v1157 = v1147;
                      v1158 = v1148;
                      v1159 = v1454;
                    }
                    else
                    {
                      *v1147 = v1149;
                      v1150 = (unint64_t)&v1147[v1374] & v1146;
                      v1151 = (unint64_t)&v1148[v1374] & v1146;
                      v1152 = *(unsigned __int8 *)(v1151 + v1376);
                      if (v1152 <= 2)
                      {
                        if (v1152 != 2)
                        {
                          if (v1152 != 1)
                          {
                            v1178 = (_QWORD *)((unint64_t)&v1147[v1374] & v1146);
                            v1156 = v334;
                            *v1178 = *(_QWORD *)v1151;
                            v1178[1] = *(_QWORD *)(((unint64_t)&v1148[v1374] & v1146) + 8);
                            v1178[2] = *(_QWORD *)(((unint64_t)&v1148[v1374] & v1146) + 0x10);
                            v1178[3] = *(_QWORD *)(((unint64_t)&v1148[v1374] & v1146) + 0x18);
                            v1178[4] = *(_QWORD *)(((unint64_t)&v1148[v1374] & v1146) + 0x20);
                            v1178[5] = *(_QWORD *)(((unint64_t)&v1148[v1374] & v1146) + 0x28);
                            *((_BYTE *)v1178 + v1376) = 0;
                            sub_21D7C4C20();
                            sub_21D7C4C20();
                            sub_21D7C4C20();
                            goto LABEL_1290;
                          }
                          v1422 = v171;
                          v1153 = *(_QWORD *)(((unint64_t)&v1148[v1374] & v1146) + 0x18);
                          *(_QWORD *)(((unint64_t)&v1147[v1374] & v1146) + 0x18) = v1153;
                          *(_QWORD *)(((unint64_t)&v1147[v1374] & v1146) + 0x20) = *(_QWORD *)(((unint64_t)&v1148[v1374] & v1146) + 0x20);
                          (**(void (***)(unint64_t, unint64_t))(v1153 - 8))(v1150, v1151);
                          v1154 = (void *)((v1449 + v1150) & v1396);
                          v1155 = (const void *)((v1449 + v1151) & v1396);
                          v1300 = v334;
                          if (__swift_getEnumTagSinglePayload((uint64_t)v1155, 1, v798))
                          {
                            memcpy(v1154, v1155, v1474);
                          }
                          else
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v1375 + 16))(v1154, v1155, v798);
                            __swift_storeEnumTagSinglePayload((uint64_t)v1154, 0, 1, v798);
                          }
                          v1181 = (_QWORD *)(((unint64_t)v1154 + v1453) & 0xFFFFFFFFFFFFFFF8);
                          v1182 = (_QWORD *)(((unint64_t)v1155 + v1453) & 0xFFFFFFFFFFFFFFF8);
                          *v1181 = *v1182;
                          v1181[1] = v1182[1];
                          v1183 = ((unint64_t)v1181 + 23) & 0xFFFFFFFFFFFFFFF8;
                          v1184 = ((unint64_t)v1182 + 23) & 0xFFFFFFFFFFFFFFF8;
                          *(_QWORD *)v1183 = *(_QWORD *)v1184;
                          *(_BYTE *)(v1183 + 8) = *(_BYTE *)(v1184 + 8);
                          v1185 = ((unint64_t)v1181 + 39) & 0xFFFFFFFFFFFFFFF8;
                          v1186 = ((unint64_t)v1182 + 39) & 0xFFFFFFFFFFFFFFF8;
                          *(_QWORD *)v1185 = *(_QWORD *)v1186;
                          *(_BYTE *)(v1185 + 8) = *(_BYTE *)(v1186 + 8);
                          v1187 = ((unint64_t)v1181 + 55) & 0xFFFFFFFFFFFFFFF8;
                          v1188 = ((unint64_t)v1182 + 55) & 0xFFFFFFFFFFFFFFF8;
                          v1189 = *(_QWORD *)v1188;
                          *(_BYTE *)(v1187 + 8) = *(_BYTE *)(v1188 + 8);
                          *(_QWORD *)v1187 = v1189;
                          v1190 = (_QWORD *)(((unint64_t)v1181 + 71) & 0xFFFFFFFFFFFFFFF8);
                          v1191 = (_QWORD *)(((unint64_t)v1182 + 71) & 0xFFFFFFFFFFFFFFF8);
                          *v1190 = *v1191;
                          v1190[1] = v1191[1];
                          v1192 = ((unint64_t)v1190 + 23) & 0xFFFFFFFFFFFFFFF8;
                          v1193 = ((unint64_t)v1191 + 23) & 0xFFFFFFFFFFFFFFF8;
                          v1194 = *(_QWORD *)(v1193 + 24);
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          if (v1194 < 0xFFFFFFFF)
                          {
                            v1195 = *(_OWORD *)v1193;
                            v1196 = *(_OWORD *)(v1193 + 16);
                            *(_QWORD *)(v1192 + 32) = *(_QWORD *)(v1193 + 32);
                            *(_OWORD *)v1192 = v1195;
                            *(_OWORD *)(v1192 + 16) = v1196;
                          }
                          else
                          {
                            *(_QWORD *)(v1192 + 24) = v1194;
                            *(_QWORD *)(v1192 + 32) = *(_QWORD *)(v1193 + 32);
                            (**(void (***)(unint64_t, unint64_t, unint64_t))(v1194 - 8))(v1192, v1193, v1194);
                          }
                          v1197 = (_QWORD *)((v1467 + v1192) & v334);
                          v1198 = (_QWORD *)((v1467 + v1193) & v334);
                          if (v1367 >= 0x7FFFFFFF)
                          {
                            v1201 = (const void *)(((unint64_t)v1198 + v1371) & v1398);
                            if (__swift_getEnumTagSinglePayload((uint64_t)v1201, v1359, v1373) <= 1)
                            {
                              v1200 = (char *)(v1198 + 1);
                              goto LABEL_1322;
                            }
                          }
                          else
                          {
                            v1199 = v1198[2];
                            if (v1199 >= 0xFFFFFFFF)
                              LODWORD(v1199) = -1;
                            if ((int)v1199 - 1 < 0)
                            {
                              v1200 = (char *)(v1198 + 1);
                              v1201 = (const void *)(((unint64_t)v1198 + v1371) & v1398);
LABEL_1322:
                              *(_BYTE *)v1197 = *(_BYTE *)v1198;
                              v1197[1] = v1198[1];
                              v1197[2] = *((_QWORD *)v1200 + 1);
                              v1197[3] = *((_QWORD *)v1200 + 2);
                              v1197[4] = *((_QWORD *)v1200 + 3);
                              v1197[5] = *((_QWORD *)v1200 + 4);
                              v1197[6] = *((_QWORD *)v1200 + 5);
                              v1197[7] = *((_QWORD *)v1200 + 6);
                              v1197[8] = *((_QWORD *)v1200 + 7);
                              v1197[9] = *((_QWORD *)v1200 + 8);
                              v1197[10] = *((_QWORD *)v1200 + 9);
                              v1197[11] = *((_QWORD *)v1200 + 10);
                              v1197[12] = *((_QWORD *)v1200 + 11);
                              v1202 = *((_QWORD *)v1200 + 12);
                              *((_BYTE *)v1197 + 112) = v1200[104];
                              v1197[13] = v1202;
                              v1203 = (void *)(((unint64_t)v1197 + v1371) & v1398);
                              sub_21D7C4C20();
                              sub_21D7C4C20();
                              sub_21D7C4C20();
                              sub_21D7C4C20();
                              sub_21D7C4C20();
                              sub_21D7C4C20();
                              if (__swift_getEnumTagSinglePayload((uint64_t)v1201, 1, v1373))
                              {
                                memcpy(v1203, v1201, v1445);
                              }
                              else
                              {
                                (*(void (**)(void *, const void *, uint64_t))(v1355 + 16))(v1203, v1201, v1373);
                                __swift_storeEnumTagSinglePayload((uint64_t)v1203, 0, 1, v1373);
                              }
                              v89 = a1;
                              v798 = v1390;
                              goto LABEL_1410;
                            }
                          }
                          memcpy(v1197, v1198, v1448);
                          v798 = v1390;
                          v89 = a1;
LABEL_1410:
                          *(_BYTE *)(v1150 + v1376) = 1;
                          v171 = v1422;
                          v1156 = v1300;
                          goto LABEL_1290;
                        }
                        v1301 = v334;
                        v1423 = v171;
                        if (*(_QWORD *)(((unint64_t)&v1148[v1374] & v1146) + 8) < 0xFFFFFFFFuLL)
                        {
                          memcpy((void *)((unint64_t)&v1147[v1374] & v1146), (const void *)((unint64_t)&v1148[v1374] & v1146), 0x48uLL);
                        }
                        else
                        {
                          *(_QWORD *)v1150 = *(_QWORD *)v1151;
                          *(_QWORD *)(((unint64_t)&v1147[v1374] & v1146) + 8) = *(_QWORD *)(((unint64_t)&v1148[v1374] & v1146)
                                                                                                 + 8);
                          *(_QWORD *)(((unint64_t)&v1147[v1374] & v1146) + 0x10) = *(_QWORD *)(((unint64_t)&v1148[v1374] & v1146) + 0x10);
                          *(_QWORD *)(((unint64_t)&v1147[v1374] & v1146) + 0x18) = *(_QWORD *)(((unint64_t)&v1148[v1374] & v1146) + 0x18);
                          v1176 = (_OWORD *)(v1150 + 32);
                          v1177 = *(_QWORD *)(((unint64_t)&v1148[v1374] & v1146) + 0x38);
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          if (v1177)
                          {
                            *(_QWORD *)(v1150 + 56) = v1177;
                            *(_QWORD *)(v1150 + 64) = *(_QWORD *)(v1151 + 64);
                            (**(void (***)(_OWORD *, uint64_t, uint64_t))(v1177 - 8))(v1176, v1151 + 32, v1177);
                          }
                          else
                          {
                            v1247 = *(_OWORD *)(v1151 + 32);
                            v1248 = *(_OWORD *)(v1151 + 48);
                            *(_QWORD *)(v1150 + 64) = *(_QWORD *)(v1151 + 64);
                            *v1176 = v1247;
                            *(_OWORD *)(v1150 + 48) = v1248;
                          }
                        }
                        v1488 = v1150;
                        v1249 = (v1150 + 79) & 0xFFFFFFFFFFFFFFF8;
                        v1250 = (_QWORD *)((v1151 + 79) & 0xFFFFFFFFFFFFFFF8);
                        if (v1250[1] < 0xFFFFFFFFuLL)
                        {
                          memcpy((void *)((v1150 + 79) & 0xFFFFFFFFFFFFFFF8), v1250, 0x48uLL);
                        }
                        else
                        {
                          *(_QWORD *)v1249 = *v1250;
                          *(_QWORD *)(v1249 + 8) = v1250[1];
                          *(_QWORD *)(v1249 + 16) = v1250[2];
                          *(_QWORD *)(v1249 + 24) = v1250[3];
                          v1251 = v1250[7];
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          if (v1251)
                          {
                            *(_QWORD *)(v1249 + 56) = v1251;
                            *(_QWORD *)(v1249 + 64) = v1250[8];
                            (**(void (***)(uint64_t, uint64_t, uint64_t))(v1251 - 8))(v1249 + 32, (uint64_t)(v1250 + 4), v1251);
                          }
                          else
                          {
                            v1257 = *((_OWORD *)v1250 + 2);
                            v1258 = *((_OWORD *)v1250 + 3);
                            *(_QWORD *)(v1249 + 64) = v1250[8];
                            *(_OWORD *)(v1249 + 32) = v1257;
                            *(_OWORD *)(v1249 + 48) = v1258;
                          }
                        }
                        v1259 = (_QWORD *)((v1249 + 79) & 0xFFFFFFFFFFFFF8);
                        v1260 = (_QWORD *)(((unint64_t)v1250 + 79) & 0xFFFFFFFFFFFFFFF8);
                        *v1259 = *v1260;
                        v1261 = (_QWORD *)(((unint64_t)v1259 + 15) & 0xFFFFFFFFFFFFFFF8);
                        v1262 = (_QWORD *)(((unint64_t)v1260 + 15) & 0xFFFFFFFFFFFFFFF8);
                        *v1261 = *v1262;
                        v1263 = (void *)(((unint64_t)v1261 + v1407) & v1425);
                        v1264 = (_BYTE *)(((unint64_t)v1262 + v1407) & v1425);
                        sub_21D7C4C20();
                        sub_21D7C4C20();
                        v1265 = v1451;
                        v1266 = v1370;
                        if (v1451)
                        {
                          if (v1365 >= v1370)
                          {
                            v1267 = (uint64_t)v1264;
                            v1266 = v1365;
                            v1268 = v1368;
                          }
                          else
                          {
                            v1267 = (unint64_t)&v1264[v1369] & v1402;
                            v1268 = v1372;
                          }
                          v1273 = __swift_getEnumTagSinglePayload(v1267, v1266, v1268);
                          v1270 = a1;
                          v1269 = v1388;
                        }
                        else
                        {
                          v1269 = v1388;
                          v1270 = a1;
                          v798 = v1390;
                          if (!v1264[v1388])
                            goto LABEL_1417;
                          v1271 = (v1264[v1388] - 1) << v1394;
                          if (v1388 > 3)
                            v1271 = 0;
                          if ((_DWORD)v1388)
                          {
                            if (v1388 <= 3)
                              v1272 = v1388;
                            else
                              v1272 = 4;
                            __asm { BR              X11 }
                          }
                          v1273 = v1271 + 1;
                          v1270 = a1;
                          v1269 = v1388;
                          v1265 = 0;
                        }
                        v798 = v1390;
                        if (v1273)
                        {
                          memcpy(v1263, v1264, v1450);
LABEL_1419:
                          *((_BYTE *)v1263 + v1450) = v1264[v1450];
                          *(_BYTE *)(v1488 + v1376) = 2;
                          v171 = v1423;
                          v1156 = v1301;
                          v89 = v1270;
LABEL_1290:
                          v1160 = (_QWORD *)((unint64_t)&v1147[v1315] & 0xFFFFFFFFFFFFFFF8);
                          v1161 = (_QWORD *)((unint64_t)&v1148[v1315] & 0xFFFFFFFFFFFFFFF8);
                          *v1160 = *v1161;
                          v1162 = (_BYTE *)(((unint64_t)v1160 + v1316) & v1382);
                          v1163 = (unsigned __int8 *)(((unint64_t)v1161 + v1316) & v1382);
                          v1164 = *v1163;
                          sub_21D7C4C20();
                          if (v1164 > 2)
                          {
                            v1173 = v1162;
                            v1174 = v1163;
                            v1175 = v1454;
                          }
                          else
                          {
                            *v1162 = v1164;
                            v1165 = (_QWORD *)((unint64_t)&v1162[v1374] & v1382);
                            v1166 = (_QWORD *)((unint64_t)&v1163[v1374] & v1382);
                            v1167 = *((unsigned __int8 *)v1166 + v1376);
                            if (v1167 <= 2)
                            {
                              if (v1167 != 2)
                              {
                                if (v1167 != 1)
                                {
                                  *v1165 = *v1166;
                                  v1165[1] = v1166[1];
                                  v1165[2] = v1166[2];
                                  v1165[3] = v1166[3];
                                  v1165[4] = v1166[4];
                                  v1165[5] = v1166[5];
                                  *((_BYTE *)v1165 + v1376) = 0;
                                  sub_21D7C4C20();
                                  sub_21D7C4C20();
                                  sub_21D7C4C20();
                                  goto LABEL_1299;
                                }
                                v1168 = v1166[3];
                                v1165[3] = v1168;
                                v1165[4] = v1166[4];
                                (**(void (***)(_QWORD *, _QWORD *))(v1168 - 8))(v1165, v1166);
                                v1169 = (void *)(((unint64_t)v1165 + v1449) & v1396);
                                v1170 = (const void *)(((unint64_t)v1166 + v1449) & v1396);
                                v1485 = v130;
                                if (__swift_getEnumTagSinglePayload((uint64_t)v1170, 1, v798))
                                {
                                  v1171 = v89;
                                  v1172 = v171;
                                  memcpy(v1169, v1170, v1474);
                                }
                                else
                                {
                                  v1204 = v798;
                                  v1171 = v89;
                                  v1172 = v171;
                                  (*(void (**)(void *, const void *, uint64_t))(v1375 + 16))(v1169, v1170, v1204);
                                  __swift_storeEnumTagSinglePayload((uint64_t)v1169, 0, 1, v1204);
                                }
                                v1205 = (_QWORD *)(((unint64_t)v1169 + v1453) & 0xFFFFFFFFFFFFFFF8);
                                v1206 = (_QWORD *)(((unint64_t)v1170 + v1453) & 0xFFFFFFFFFFFFFFF8);
                                *v1205 = *v1206;
                                v1205[1] = v1206[1];
                                v1207 = ((unint64_t)v1205 + 23) & 0xFFFFFFFFFFFFFFF8;
                                v1208 = ((unint64_t)v1206 + 23) & 0xFFFFFFFFFFFFFFF8;
                                *(_QWORD *)v1207 = *(_QWORD *)v1208;
                                *(_BYTE *)(v1207 + 8) = *(_BYTE *)(v1208 + 8);
                                v1209 = ((unint64_t)v1205 + 39) & 0xFFFFFFFFFFFFFFF8;
                                v1210 = ((unint64_t)v1206 + 39) & 0xFFFFFFFFFFFFFFF8;
                                *(_QWORD *)v1209 = *(_QWORD *)v1210;
                                *(_BYTE *)(v1209 + 8) = *(_BYTE *)(v1210 + 8);
                                v1211 = ((unint64_t)v1205 + 55) & 0xFFFFFFFFFFFFFFF8;
                                v1212 = ((unint64_t)v1206 + 55) & 0xFFFFFFFFFFFFFFF8;
                                v1213 = *(_QWORD *)v1212;
                                *(_BYTE *)(v1211 + 8) = *(_BYTE *)(v1212 + 8);
                                *(_QWORD *)v1211 = v1213;
                                v1214 = (_QWORD *)(((unint64_t)v1205 + 71) & 0xFFFFFFFFFFFFFFF8);
                                v1215 = (_QWORD *)(((unint64_t)v1206 + 71) & 0xFFFFFFFFFFFFFFF8);
                                *v1214 = *v1215;
                                v1214[1] = v1215[1];
                                v1216 = ((unint64_t)v1214 + 23) & 0xFFFFFFFFFFFFFFF8;
                                v1217 = ((unint64_t)v1215 + 23) & 0xFFFFFFFFFFFFFFF8;
                                v1218 = *(_QWORD *)(v1217 + 24);
                                sub_21D7C4C20();
                                sub_21D7C4C20();
                                sub_21D7C4C20();
                                sub_21D7C4C20();
                                if (v1218 < 0xFFFFFFFF)
                                {
                                  v1219 = *(_OWORD *)v1217;
                                  v1220 = *(_OWORD *)(v1217 + 16);
                                  *(_QWORD *)(v1216 + 32) = *(_QWORD *)(v1217 + 32);
                                  *(_OWORD *)v1216 = v1219;
                                  *(_OWORD *)(v1216 + 16) = v1220;
                                }
                                else
                                {
                                  *(_QWORD *)(v1216 + 24) = v1218;
                                  *(_QWORD *)(v1216 + 32) = *(_QWORD *)(v1217 + 32);
                                  (**(void (***)(unint64_t, unint64_t, unint64_t))(v1218 - 8))(v1216, v1217, v1218);
                                }
                                v1221 = (_QWORD *)((v1467 + v1216) & v1156);
                                v1222 = (_QWORD *)((v1467 + v1217) & v1156);
                                if (v1367 >= 0x7FFFFFFF)
                                {
                                  v1225 = (const void *)(((unint64_t)v1222 + v1371) & v1398);
                                  if (__swift_getEnumTagSinglePayload((uint64_t)v1225, v1359, v1373) <= 1)
                                  {
                                    v1224 = (char *)(v1222 + 1);
                                    goto LABEL_1336;
                                  }
                                }
                                else
                                {
                                  v1223 = v1222[2];
                                  if (v1223 >= 0xFFFFFFFF)
                                    LODWORD(v1223) = -1;
                                  if ((int)v1223 - 1 < 0)
                                  {
                                    v1224 = (char *)(v1222 + 1);
                                    v1225 = (const void *)(((unint64_t)v1222 + v1371) & v1398);
LABEL_1336:
                                    *(_BYTE *)v1221 = *(_BYTE *)v1222;
                                    v1221[1] = v1222[1];
                                    v1221[2] = *((_QWORD *)v1224 + 1);
                                    v1221[3] = *((_QWORD *)v1224 + 2);
                                    v1221[4] = *((_QWORD *)v1224 + 3);
                                    v1221[5] = *((_QWORD *)v1224 + 4);
                                    v1221[6] = *((_QWORD *)v1224 + 5);
                                    v1221[7] = *((_QWORD *)v1224 + 6);
                                    v1221[8] = *((_QWORD *)v1224 + 7);
                                    v1221[9] = *((_QWORD *)v1224 + 8);
                                    v1221[10] = *((_QWORD *)v1224 + 9);
                                    v1221[11] = *((_QWORD *)v1224 + 10);
                                    v1221[12] = *((_QWORD *)v1224 + 11);
                                    v1226 = *((_QWORD *)v1224 + 12);
                                    *((_BYTE *)v1221 + 112) = v1224[104];
                                    v1221[13] = v1226;
                                    v1227 = (void *)(((unint64_t)v1221 + v1371) & v1398);
                                    sub_21D7C4C20();
                                    sub_21D7C4C20();
                                    sub_21D7C4C20();
                                    sub_21D7C4C20();
                                    sub_21D7C4C20();
                                    sub_21D7C4C20();
                                    if (__swift_getEnumTagSinglePayload((uint64_t)v1225, 1, v1373))
                                    {
                                      memcpy(v1227, v1225, v1445);
                                    }
                                    else
                                    {
                                      (*(void (**)(void *, const void *, uint64_t))(v1355 + 16))(v1227, v1225, v1373);
                                      __swift_storeEnumTagSinglePayload((uint64_t)v1227, 0, 1, v1373);
                                    }
                                    v89 = a1;
                                    v171 = v1172;
                                    v130 = v1485;
                                    goto LABEL_1413;
                                  }
                                }
                                memcpy(v1221, v1222, v1448);
                                v171 = v1172;
                                v130 = v1485;
                                v89 = v1171;
LABEL_1413:
                                v1288 = 1;
LABEL_1426:
                                *((_BYTE *)v1165 + v1376) = v1288;
LABEL_1299:
                                v86 = a2;
                                v84 = v1429;
                                v402 = v1427;
                                v555 = v1462;
                                v556 = 5;
LABEL_1300:
                                v171[v555] = v556;
                                goto LABEL_1360;
                              }
                              v1179 = v171;
                              if (v1166[1] < 0xFFFFFFFFuLL)
                              {
                                memcpy(v1165, v1166, 0x48uLL);
                              }
                              else
                              {
                                *v1165 = *v1166;
                                v1165[1] = v1166[1];
                                v1165[2] = v1166[2];
                                v1165[3] = v1166[3];
                                v1180 = v1166[7];
                                sub_21D7C4C20();
                                sub_21D7C4C20();
                                if (v1180)
                                {
                                  v1165[7] = v1180;
                                  v1165[8] = v1166[8];
                                  (**(void (***)(uint64_t, uint64_t, uint64_t))(v1180 - 8))((uint64_t)(v1165 + 4), (uint64_t)(v1166 + 4), v1180);
                                }
                                else
                                {
                                  v1252 = *((_OWORD *)v1166 + 2);
                                  v1253 = *((_OWORD *)v1166 + 3);
                                  v1165[8] = v1166[8];
                                  *((_OWORD *)v1165 + 2) = v1252;
                                  *((_OWORD *)v1165 + 3) = v1253;
                                }
                              }
                              v1254 = ((unint64_t)v1165 + 79) & 0xFFFFFFFFFFFFFFF8;
                              v1255 = (_QWORD *)(((unint64_t)v1166 + 79) & 0xFFFFFFFFFFFFFFF8);
                              if (v1255[1] < 0xFFFFFFFFuLL)
                              {
                                memcpy((void *)(((unint64_t)v1165 + 79) & 0xFFFFFFFFFFFFFFF8), v1255, 0x48uLL);
                              }
                              else
                              {
                                *(_QWORD *)v1254 = *v1255;
                                *(_QWORD *)(v1254 + 8) = v1255[1];
                                *(_QWORD *)(v1254 + 16) = v1255[2];
                                *(_QWORD *)(v1254 + 24) = v1255[3];
                                v1256 = v1255[7];
                                sub_21D7C4C20();
                                sub_21D7C4C20();
                                if (v1256)
                                {
                                  *(_QWORD *)(v1254 + 56) = v1256;
                                  *(_QWORD *)(v1254 + 64) = v1255[8];
                                  (**(void (***)(uint64_t, uint64_t, uint64_t))(v1256 - 8))(v1254 + 32, (uint64_t)(v1255 + 4), v1256);
                                }
                                else
                                {
                                  v1274 = *((_OWORD *)v1255 + 2);
                                  v1275 = *((_OWORD *)v1255 + 3);
                                  *(_QWORD *)(v1254 + 64) = v1255[8];
                                  *(_OWORD *)(v1254 + 32) = v1274;
                                  *(_OWORD *)(v1254 + 48) = v1275;
                                }
                              }
                              v1276 = (_QWORD *)((v1254 + 79) & 0xFFFFFFFFFFFFF8);
                              v1277 = (_QWORD *)(((unint64_t)v1255 + 79) & 0xFFFFFFFFFFFFFFF8);
                              *v1276 = *v1277;
                              v1278 = (_QWORD *)(((unint64_t)v1276 + 15) & 0xFFFFFFFFFFFFFFF8);
                              v1279 = (_QWORD *)(((unint64_t)v1277 + 15) & 0xFFFFFFFFFFFFFFF8);
                              *v1278 = *v1279;
                              v1280 = (void *)(((unint64_t)v1278 + v1407) & v1425);
                              v1281 = (_BYTE *)(((unint64_t)v1279 + v1407) & v1425);
                              sub_21D7C4C20();
                              sub_21D7C4C20();
                              if (v1451)
                              {
                                v1282 = v1370;
                                if (v1365 >= v1370)
                                {
                                  v1283 = (uint64_t)v1281;
                                  v1282 = v1365;
                                  v1284 = v1368;
                                }
                                else
                                {
                                  v1283 = (unint64_t)&v1281[v1369] & v1402;
                                  v1284 = v1372;
                                }
                                v1287 = __swift_getEnumTagSinglePayload(v1283, v1282, v1284);
                              }
                              else
                              {
                                v89 = a1;
                                v171 = v1179;
                                if (!v1281[v1388])
                                  goto LABEL_1423;
                                v1285 = (v1281[v1388] - 1) << v1394;
                                if (v1388 > 3)
                                  v1285 = 0;
                                if ((_DWORD)v1388)
                                {
                                  if (v1388 <= 3)
                                    v1286 = v1388;
                                  else
                                    v1286 = 4;
                                  __asm { BR              X11 }
                                }
                                v1287 = v1285 + 1;
                              }
                              v89 = a1;
                              v171 = v1179;
                              if (v1287)
                              {
                                memcpy(v1280, v1281, v1450);
LABEL_1425:
                                *((_BYTE *)v1280 + v1450) = v1281[v1450];
                                v1288 = 2;
                                goto LABEL_1426;
                              }
LABEL_1423:
                              (*(void (**)(void *, _BYTE *, uint64_t))(v1362 + 16))(v1280, v1281, v1368);
                              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1363 + 16))(((unint64_t)v1280 + v1369) & v1402, (unint64_t)&v1281[v1369] & v1402, v1372);
                              if (!v1451)
                                *((_BYTE *)v1280 + v1388) = 0;
                              goto LABEL_1425;
                            }
                            v1173 = v1165;
                            v1174 = v1166;
                            v1175 = __n;
                          }
                          memcpy(v1173, v1174, v1175);
                          goto LABEL_1299;
                        }
LABEL_1417:
                        (*(void (**)(void *, _BYTE *, uint64_t))(v1362 + 16))(v1263, v1264, v1368);
                        (*(void (**)(unint64_t, unint64_t, uint64_t))(v1363 + 16))(((unint64_t)v1263 + v1369) & v1402, (unint64_t)&v1264[v1369] & v1402, v1372);
                        if (!v1265)
                          *((_BYTE *)v1263 + v1269) = 0;
                        goto LABEL_1419;
                      }
                      v1156 = v334;
                      v1157 = (void *)((unint64_t)&v1147[v1374] & v1146);
                      v1158 = (const void *)((unint64_t)&v1148[v1374] & v1146);
                      v1159 = __n;
                    }
                    memcpy(v1157, v1158, v1159);
                    goto LABEL_1290;
                  }
LABEL_1275:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1362 + 16))(v791, v793, v1368);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1363 + 16))(((unint64_t)v791 + v1369) & v1402, (unint64_t)&v793[v1369] & v1402, v1372);
                  if (!v332)
                    *((_BYTE *)v791 + v795) = 0;
                  goto LABEL_1277;
                }
              }
              v789 = v1448;
              memcpy(v780, v781, v1448);
              v790 = v1314;
              goto LABEL_701;
            }
          }
LABEL_1269:
          memcpy(v330, v335, v1352);
          v798 = v1390;
          v130 = v327;
          v89 = a1;
          v790 = v1314;
          goto LABEL_1281;
        case 6:
          v171 = v129;
          *v129 = *v130;
          v172 = 6;
          goto LABEL_265;
        case 7:
          v171 = v129;
          *v129 = *v130;
          v172 = 7;
          goto LABEL_265;
        case 8:
          v171 = v129;
          if (__swift_getEnumTagSinglePayload((uint64_t)v130, 1, v1390))
          {
            memcpy(v129, v130, v1474);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1375 + 16))(v129, v130, v1390);
            __swift_storeEnumTagSinglePayload((uint64_t)v129, 0, 1, v1390);
          }
          v337 = ((unint64_t)v129 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v338 = ((unint64_t)v130 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v339 = *(_QWORD *)(v338 + 24);
          *(_QWORD *)(v337 + 24) = v339;
          *(_QWORD *)(v337 + 32) = *(_QWORD *)(v338 + 32);
          (**(void (***)(unint64_t, unint64_t))(v339 - 8))(v337, v338);
          v340 = (v1467 + v337) & v126;
          v341 = (v1467 + v338) & v126;
          if (v1367 >= 0x7FFFFFFF)
          {
            v345 = (const void *)((v1371 + v341) & v1398);
            if (__swift_getEnumTagSinglePayload((uint64_t)v345, v1359, v1373) <= 1)
            {
              v1479 = v130;
              v1413 = v129;
              v343 = (char *)(v341 + 8);
              v344 = ~v1455;
LABEL_335:
              *(_BYTE *)v340 = *(_BYTE *)v341;
              *(_QWORD *)(v340 + 8) = *(_QWORD *)(v341 + 8);
              *(_QWORD *)(v340 + 16) = *((_QWORD *)v343 + 1);
              *(_QWORD *)(v340 + 24) = *((_QWORD *)v343 + 2);
              *(_QWORD *)(v340 + 32) = *((_QWORD *)v343 + 3);
              *(_QWORD *)(v340 + 40) = *((_QWORD *)v343 + 4);
              *(_QWORD *)(v340 + 48) = *((_QWORD *)v343 + 5);
              *(_QWORD *)(v340 + 56) = *((_QWORD *)v343 + 6);
              *(_QWORD *)(v340 + 64) = *((_QWORD *)v343 + 7);
              *(_QWORD *)(v340 + 72) = *((_QWORD *)v343 + 8);
              *(_QWORD *)(v340 + 80) = *((_QWORD *)v343 + 9);
              *(_QWORD *)(v340 + 88) = *((_QWORD *)v343 + 10);
              *(_QWORD *)(v340 + 96) = *((_QWORD *)v343 + 11);
              v346 = *((_QWORD *)v343 + 12);
              *(_BYTE *)(v340 + 112) = v343[104];
              *(_QWORD *)(v340 + 104) = v346;
              v347 = (void *)((v1371 + v340) & v344);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              if (__swift_getEnumTagSinglePayload((uint64_t)v345, 1, v1373))
              {
                memcpy(v347, v345, v1445);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1355 + 16))(v347, v345, v1373);
                __swift_storeEnumTagSinglePayload((uint64_t)v347, 0, 1, v1373);
              }
              v171 = v1413;
              v130 = v1479;
              v348 = v1448;
LABEL_648:
              v89 = a1;
              v751 = (_QWORD *)(((v340 | 7) + v348) & 0xFFFFFFFFFFFFF8);
              v752 = (_QWORD *)(((v341 | 7) + v348) & 0xFFFFFFFFFFFFFFF8);
              *v751 = *v752;
              v753 = (_QWORD *)(((unint64_t)v751 + 15) & 0xFFFFFFFFFFFFFFF8);
              v754 = (_QWORD *)(((unint64_t)v752 + 15) & 0xFFFFFFFFFFFFFFF8);
              *v753 = *v754;
              v753[1] = v754[1];
              v755 = ((unint64_t)v753 + 23) & 0xFFFFFFFFFFFFFFF8;
              v756 = ((unint64_t)v754 + 23) & 0xFFFFFFFFFFFFFFF8;
              v757 = *(_QWORD *)(v756 + 8);
              sub_21D7C4C20();
              if (v757 < 0xFFFFFFFF)
              {
                v758 = *(_OWORD *)v756;
                *(_QWORD *)(v755 + 16) = *(_QWORD *)(v756 + 16);
                *(_OWORD *)v755 = v758;
              }
              else
              {
                *(_QWORD *)v755 = *(_QWORD *)v756;
                *(_QWORD *)(v755 + 8) = *(_QWORD *)(v756 + 8);
                *(_QWORD *)(v755 + 16) = *(_QWORD *)(v756 + 16);
                sub_21D7C4C20();
                sub_21D7C4C20();
              }
              *(_QWORD *)((v755 + 31) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v756 + 31) & 0xFFFFFFFFFFFFF8);
              v171[v1462] = 8;
LABEL_1230:
              sub_21D7C4C20();
LABEL_1231:
              v86 = a2;
              v84 = v1429;
LABEL_1359:
              v402 = v1427;
              goto LABEL_1360;
            }
          }
          else
          {
            v342 = *(_QWORD *)(v341 + 16);
            if (v342 >= 0xFFFFFFFF)
              LODWORD(v342) = -1;
            if ((int)v342 - 1 < 0)
            {
              v1479 = v130;
              v1413 = v129;
              v343 = (char *)(v341 + 8);
              v344 = ~v1455;
              v345 = (const void *)((v1371 + v341) & v1398);
              goto LABEL_335;
            }
          }
          v348 = v1448;
          memcpy((void *)v340, (const void *)v341, v1448);
          goto LABEL_648;
        case 9:
          v174 = ~v128;
          v171 = v129;
          if (__swift_getEnumTagSinglePayload((uint64_t)v130, 1, v1390))
          {
            memcpy(v129, v130, v1474);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1375 + 16))(v129, v130, v1390);
            __swift_storeEnumTagSinglePayload((uint64_t)v129, 0, 1, v1390);
          }
          v349 = ((unint64_t)v129 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v350 = ((unint64_t)v130 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v351 = *(_QWORD *)(v350 + 24);
          *(_QWORD *)(v349 + 24) = v351;
          *(_QWORD *)(v349 + 32) = *(_QWORD *)(v350 + 32);
          (**(void (***)(unint64_t, unint64_t))(v351 - 8))(v349, v350);
          v352 = (_QWORD *)((v349 + 47) & 0xFFFFFFFFFFFFFFF8);
          v353 = (_QWORD *)((v350 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v352 = *v353;
          v352[1] = v353[1];
          v354 = (void *)(((unint64_t)v352 + v1455 + 16) & v1398);
          v355 = (const void *)(((unint64_t)v353 + v1455 + 16) & v1398);
          sub_21D7C4C20();
          if (__swift_getEnumTagSinglePayload((uint64_t)v355, 1, v1373))
          {
            memcpy(v354, v355, v1445);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1355 + 16))(v354, v355, v1373);
            __swift_storeEnumTagSinglePayload((uint64_t)v354, 0, 1, v1373);
          }
          v630 = (void *)(((unint64_t)v354 + v1322) & v1425);
          v631 = (_BYTE *)(((unint64_t)v355 + v1322) & v1425);
          if (v1451)
          {
            v632 = v1365;
            if (v1365 >= v1370)
            {
              v633 = (uint64_t)v631;
              v634 = v1368;
            }
            else
            {
              v633 = (unint64_t)&v631[v1369] & v1402;
              v632 = v1370;
              v634 = v1372;
            }
            v686 = __swift_getEnumTagSinglePayload(v633, v632, v634);
          }
          else
          {
            if (!v631[v1388])
              goto LABEL_929;
            v672 = (v631[v1388] - 1) << v1394;
            if (v1388 > 3)
              v672 = 0;
            if ((_DWORD)v1388)
            {
              if (v1388 <= 3)
                v673 = v1388;
              else
                v673 = 4;
              __asm { BR              X11 }
            }
            v686 = v672 + 1;
          }
          if (v686)
          {
            memcpy(v630, v631, v1450);
            goto LABEL_931;
          }
LABEL_929:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1362 + 16))(v630, v631, v1368);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1363 + 16))(((unint64_t)v630 + v1369) & v1402, (unint64_t)&v631[v1369] & v1402, v1372);
          if (!v1451)
            *((_BYTE *)v630 + v1388) = 0;
LABEL_931:
          v941 = &v631[v1450];
          *((_BYTE *)v630 + v1450) = v631[v1450];
          v942 = (void *)(((unint64_t)v630 + v1450 + v1487 + 1) & v1425);
          v943 = (_BYTE *)((unint64_t)&v631[v1450 + 1 + v1487] & v1425);
          if (v1451)
          {
            v944 = v1365;
            v945 = v1388;
            if (v1365 >= v1370)
            {
              v946 = (unint64_t)&v941[v1487 + 1] & v1425;
              v947 = v1368;
            }
            else
            {
              v946 = (unint64_t)&v943[v1369] & v1402;
              v944 = v1370;
              v947 = v1372;
            }
            v950 = __swift_getEnumTagSinglePayload(v946, v944, v947);
          }
          else
          {
            v945 = v1388;
            if (!v943[v1388])
              goto LABEL_980;
            v948 = (v943[v1388] - 1) << v1394;
            if (v1388 > 3)
              v948 = 0;
            if ((_DWORD)v1388)
            {
              if (v1388 <= 3)
                v949 = v1388;
              else
                v949 = 4;
              __asm { BR              X11 }
            }
            v950 = v948 + 1;
          }
          if (v950)
          {
            memcpy(v942, v943, v1450);
            goto LABEL_982;
          }
LABEL_980:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1362 + 16))(v942, v943, v1368);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1363 + 16))(((unint64_t)v942 + v1369) & v1402, (unint64_t)&v943[v1369] & v1402, v1372);
          if (!v1451)
            *((_BYTE *)v942 + v945) = 0;
LABEL_982:
          v966 = (_QWORD *)(((unint64_t)v942 + v1444) & v174);
          v967 = (uint64_t *)((unint64_t)&v943[v1444] & v174);
          v968 = v1446;
          if ((v1370 & 0x80000000) != 0)
          {
            v971 = v1357;
            v970 = __swift_getEnumTagSinglePayload(((unint64_t)v967 + v1357) & v1402, v1370, v1372);
            v968 = v1446;
          }
          else
          {
            v969 = *v967;
            if ((unint64_t)*v967 >= 0xFFFFFFFF)
              LODWORD(v969) = -1;
            v970 = v969 + 1;
            v971 = v1357;
          }
          v89 = a1;
          if (v970)
          {
            memcpy(v966, v967, v968);
          }
          else
          {
            *v966 = *v967;
            v972 = v126;
            v973 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1363 + 16);
            sub_21D7C4C20();
            v973(((unint64_t)v966 + v971) & v1402, ((unint64_t)v967 + v971) & v1402, v1372);
            v126 = v972;
          }
          v974 = (_QWORD *)(((unint64_t)v966 + v1356) & v126);
          v975 = (_QWORD *)(((unint64_t)v967 + v1356) & v126);
          if (v1367 >= 0x7FFFFFFF)
          {
            v983 = (const void *)(((unint64_t)v975 + v1371) & v1398);
            if (__swift_getEnumTagSinglePayload((uint64_t)v983, v1359, v1373) <= 1)
            {
              v977 = v1371;
              v978 = a1;
              v979 = v130;
              v980 = v171;
              v981 = (char *)(v975 + 1);
              v982 = ~v1455;
LABEL_997:
              *(_BYTE *)v974 = *(_BYTE *)v975;
              v974[1] = v975[1];
              v974[2] = *((_QWORD *)v981 + 1);
              v974[3] = *((_QWORD *)v981 + 2);
              v974[4] = *((_QWORD *)v981 + 3);
              v974[5] = *((_QWORD *)v981 + 4);
              v974[6] = *((_QWORD *)v981 + 5);
              v974[7] = *((_QWORD *)v981 + 6);
              v974[8] = *((_QWORD *)v981 + 7);
              v974[9] = *((_QWORD *)v981 + 8);
              v974[10] = *((_QWORD *)v981 + 9);
              v974[11] = *((_QWORD *)v981 + 10);
              v974[12] = *((_QWORD *)v981 + 11);
              v984 = *((_QWORD *)v981 + 12);
              *((_BYTE *)v974 + 112) = v981[104];
              v974[13] = v984;
              v985 = (void *)(((unint64_t)v974 + v977) & v982);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              if (__swift_getEnumTagSinglePayload((uint64_t)v983, 1, v1373))
              {
                memcpy(v985, v983, v1445);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1355 + 16))(v985, v983, v1373);
                __swift_storeEnumTagSinglePayload((uint64_t)v985, 0, 1, v1373);
              }
              v84 = v1429;
              v171 = v980;
              v130 = v979;
              v89 = v978;
LABEL_1002:
              v562 = 9;
              goto LABEL_1357;
            }
          }
          else
          {
            v976 = *(_QWORD *)((((unint64_t)v967 + v1356) & v126) + 0x10);
            if (v976 >= 0xFFFFFFFF)
              LODWORD(v976) = -1;
            if ((int)v976 - 1 < 0)
            {
              v977 = v1371;
              v978 = a1;
              v979 = v130;
              v980 = v171;
              v981 = (char *)(v975 + 1);
              v982 = ~v1455;
              v983 = (const void *)(((unint64_t)v975 + v1371) & v1398);
              goto LABEL_997;
            }
          }
          memcpy(v974, v975, v1448);
          v84 = v1429;
          goto LABEL_1002;
        case 0xA:
          v175 = v130[3];
          v171 = v129;
          v129[3] = v175;
          v129[4] = v130[4];
          (**(void (***)(_QWORD *, _QWORD *))(v175 - 8))(v129, v130);
          v176 = (void *)(((unint64_t)v129 + v1449) & v1396);
          v177 = v130;
          v178 = (const void *)(((unint64_t)v130 + v1449) & v1396);
          if (__swift_getEnumTagSinglePayload((uint64_t)v178, 1, v1390))
          {
            v179 = v1474;
            memcpy(v176, v178, v1474);
            v84 = v1429;
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1375 + 16))(v176, v178, v1390);
            __swift_storeEnumTagSinglePayload((uint64_t)v176, 0, 1, v1390);
            v84 = v1429;
            v179 = v1474;
          }
          v89 = a1;
          *((_BYTE *)v176 + v179) = *((_BYTE *)v178 + v179);
          v356 = ((unint64_t)v176 + v179) & 0xFFFFFFFFFFFFFFF8;
          v357 = ((unint64_t)v178 + v179) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)(v356 + 8) = *(_QWORD *)(v357 + 8);
          *(_QWORD *)(v356 + 16) = *(_QWORD *)(v357 + 16);
          v358 = (_QWORD *)((v356 + 31) & 0xFFFFFFFFFFFFFFF8);
          v359 = (_QWORD *)((v357 + 31) & 0xFFFFFFFFFFFFFFF8);
          *v358 = *v359;
          v358[1] = v359[1];
          v360 = (_QWORD *)(((unint64_t)v358 + 23) & 0xFFFFFFFFFFFFFFF8);
          v361 = (_QWORD *)(((unint64_t)v359 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v360 = *v361;
          v360[1] = v361[1];
          v171[v1462] = 10;
          sub_21D7C4C20();
          sub_21D7C4C20();
          goto LABEL_761;
        case 0xB:
          v171 = v129;
          *v129 = *v130;
          v172 = 11;
          goto LABEL_265;
        case 0xC:
          v171 = v129;
          if (__swift_getEnumTagSinglePayload((uint64_t)v130, 1, v1390))
          {
            memcpy(v129, v130, v1474);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1375 + 16))(v129, v130, v1390);
            __swift_storeEnumTagSinglePayload((uint64_t)v129, 0, 1, v1390);
          }
          v362 = ((unint64_t)v129 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v189 = v130;
          v363 = ((unint64_t)v130 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v364 = *(_QWORD *)(v363 + 24);
          *(_QWORD *)(v362 + 24) = v364;
          *(_QWORD *)(v362 + 32) = *(_QWORD *)(v363 + 32);
          (**(void (***)(unint64_t, unint64_t))(v364 - 8))(v362, v363);
          v365 = (_QWORD *)((v1459 + 40 + v362) & v1442);
          v366 = (_QWORD *)((v1459 + 40 + v363) & v1442);
          v89 = a1;
          if (v1392 > 0x7FFFFFFE)
          {
            v368 = (_QWORD *)(((unint64_t)v366 + 23) & 0xFFFFFFFFFFFFFFF8);
            v369 = ((unint64_t)v368 + 23) & 0xFFFFFFFFFFFFFFF8;
            if (!__swift_getEnumTagSinglePayload((v1459 + v369 + 33) & v132, v1392, v1353))
            {
              v1414 = v171;
              goto LABEL_601;
            }
LABEL_350:
            memcpy(v365, v366, v1441);
            goto LABEL_602;
          }
          v367 = v366[1];
          if (v367 >= 0xFFFFFFFF)
            LODWORD(v367) = -1;
          if ((v367 + 1) > 1)
            goto LABEL_350;
          v1414 = v171;
          v368 = (_QWORD *)(((unint64_t)v366 + 23) & 0xFFFFFFFFFFFFFFF8);
          v369 = ((unint64_t)v368 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_601:
          *v365 = *v366;
          v365[1] = v366[1];
          v697 = (_QWORD *)(((unint64_t)v365 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v697 = *v368;
          v697[1] = v368[1];
          v698 = ((unint64_t)v697 + 23) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v698 = *(_QWORD *)v369;
          *(_QWORD *)(v698 + 8) = *(_QWORD *)(v369 + 8);
          *(_BYTE *)(v698 + 16) = *(_BYTE *)(v369 + 16);
          v699 = ((unint64_t)v697 + 47) & 0xFFFFFFFFFFFFFFF8;
          v700 = ((unint64_t)v368 + 47) & 0xFFFFFFFFFFFFFFF8;
          v701 = *(void **)v700;
          *(_QWORD *)v699 = *(_QWORD *)v700;
          *(_BYTE *)(v699 + 8) = *(_BYTE *)(v700 + 8);
          v702 = (v1459 + 9 + v699) & v132;
          v703 = (v1459 + 9 + v700) & v132;
          v704 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1391 + 16);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          v705 = v701;
          v704(v702, v703, v1353);
          v89 = a1;
          v171 = v1414;
LABEL_602:
          *(_QWORD *)(((unint64_t)v365 + v1325) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v366
                                                                                          + v1325) & 0xFFFFFFFFFFFFF8);
          v171[v1462] = 12;
          sub_21D7C4C20();
          v86 = a2;
          v84 = v1429;
LABEL_1193:
          v402 = v1427;
          v130 = v189;
LABEL_1360:
          v1241 = (_QWORD *)((unint64_t)&v171[v402] & 0xFFFFFFFFFFFFFFF8);
          v1242 = *(_QWORD *)(((unint64_t)v130 + v402) & 0xFFFFFFFFFFFFF8);
          LODWORD(v1243) = -1;
          if (v1242 < 0xFFFFFFFF)
            v1243 = *(_QWORD *)(((unint64_t)v130 + v402) & 0xFFFFFFFFFFFFF8);
          if ((int)v1243 - 1 < 0)
            v1242 = sub_21D7C4C20();
          *v1241 = v1242;
          *((_BYTE *)v89 + v84) = 1;
LABEL_1365:
          v1244 = *(_QWORD *)(((unint64_t)v86 + v84 + 8) & 0xFFFFFFFFFFFFF8);
          LODWORD(v1245) = -1;
          if (v1244 < 0xFFFFFFFF)
            v1245 = *(_QWORD *)(((unint64_t)v86 + v84 + 8) & 0xFFFFFFFFFFFFF8);
          *(_QWORD *)(((unint64_t)v89 + v84 + 8) & 0xFFFFFFFFFFFFFFF8) = v1244;
          if ((int)v1245 - 1 < 0)
            sub_21D7C4C20();
          return v89;
        case 0xD:
          v180 = v130[3];
          v171 = v129;
          v129[3] = v180;
          v129[4] = v130[4];
          (**(void (***)(_QWORD *, _QWORD *))(v180 - 8))(v129, v130);
          v181 = (void *)(((unint64_t)v129 + v1449) & v1396);
          v182 = (const void *)(((unint64_t)v130 + v1449) & v1396);
          if (__swift_getEnumTagSinglePayload((uint64_t)v182, 1, v1390))
          {
            memcpy(v181, v182, v1474);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1375 + 16))(v181, v182, v1390);
            __swift_storeEnumTagSinglePayload((uint64_t)v181, 0, 1, v1390);
          }
          v370 = ((unint64_t)v181 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v371 = ((unint64_t)v182 + v1453) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v370 = *(_QWORD *)v371;
          *(_QWORD *)(v370 + 8) = *(_QWORD *)(v371 + 8);
          *(_BYTE *)(v370 + 16) = *(_BYTE *)(v371 + 16);
          v372 = (_QWORD *)((v1320 + v370) & v126);
          v373 = (_QWORD *)((v1320 + v371) & v126);
          sub_21D7C4C20();
          if (v1367 >= 0x7FFFFFFF)
          {
            v377 = (const void *)(((unint64_t)v373 + v1371) & v1398);
            if (__swift_getEnumTagSinglePayload((uint64_t)v377, v1359, v1373) <= 1)
            {
              v1480 = v130;
              v1415 = v129;
              v375 = (char *)(v373 + 1);
              v376 = ~v1455;
LABEL_359:
              *(_BYTE *)v372 = *(_BYTE *)v373;
              v372[1] = v373[1];
              v372[2] = *((_QWORD *)v375 + 1);
              v372[3] = *((_QWORD *)v375 + 2);
              v372[4] = *((_QWORD *)v375 + 3);
              v372[5] = *((_QWORD *)v375 + 4);
              v372[6] = *((_QWORD *)v375 + 5);
              v372[7] = *((_QWORD *)v375 + 6);
              v372[8] = *((_QWORD *)v375 + 7);
              v372[9] = *((_QWORD *)v375 + 8);
              v372[10] = *((_QWORD *)v375 + 9);
              v372[11] = *((_QWORD *)v375 + 10);
              v372[12] = *((_QWORD *)v375 + 11);
              v378 = *((_QWORD *)v375 + 12);
              *((_BYTE *)v372 + 112) = v375[104];
              v372[13] = v378;
              v379 = (void *)(((unint64_t)v372 + v1371) & v376);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              if (__swift_getEnumTagSinglePayload((uint64_t)v377, 1, v1373))
              {
                memcpy(v379, v377, v1445);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1355 + 16))(v379, v377, v1373);
                __swift_storeEnumTagSinglePayload((uint64_t)v379, 0, 1, v1373);
              }
              v171 = v1415;
              v130 = v1480;
              v380 = v1448;
LABEL_654:
              v89 = a1;
              *((_BYTE *)v372 + v380) = *((_BYTE *)v373 + v380);
              v171[v1462] = 13;
              goto LABEL_1231;
            }
          }
          else
          {
            v374 = v373[2];
            if (v374 >= 0xFFFFFFFF)
              LODWORD(v374) = -1;
            if ((int)v374 - 1 < 0)
            {
              v1480 = v130;
              v1415 = v129;
              v375 = (char *)(v373 + 1);
              v376 = ~v1455;
              v377 = (const void *)(((unint64_t)v373 + v1371) & v1398);
              goto LABEL_359;
            }
          }
          v380 = v1448;
          memcpy(v372, v373, v1448);
          goto LABEL_654;
        case 0xE:
          v171 = v129;
          *v129 = *v130;
          v172 = 14;
          goto LABEL_265;
        case 0xF:
          v171 = v129;
          *v129 = *v130;
          v172 = 15;
          goto LABEL_265;
        case 0x10:
          v183 = v130[3];
          v171 = v129;
          v129[3] = v183;
          v129[4] = v130[4];
          (**(void (***)(_QWORD *, _QWORD *))(v183 - 8))(v129, v130);
          v184 = (void *)(((unint64_t)v129 + v1449) & v1396);
          v185 = (const void *)(((unint64_t)v130 + v1449) & v1396);
          if (__swift_getEnumTagSinglePayload((uint64_t)v185, 1, v1390))
          {
            memcpy(v184, v185, v1474);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1375 + 16))(v184, v185, v1390);
            __swift_storeEnumTagSinglePayload((uint64_t)v184, 0, 1, v1390);
          }
          v381 = (_QWORD *)(((unint64_t)v184 + v1453) & 0xFFFFFFFFFFFFFFF8);
          v382 = (_QWORD *)(((unint64_t)v185 + v1453) & 0xFFFFFFFFFFFFFFF8);
          *v381 = *v382;
          v381[1] = v382[1];
          v383 = (_QWORD *)(((unint64_t)v381 + 23) & 0xFFFFFFFFFFFFFFF8);
          v384 = (_QWORD *)(((unint64_t)v382 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v383 = *v384;
          v383[1] = v384[1];
          v385 = (_QWORD *)(((unint64_t)v383 + 23) & 0xFFFFFFFFFFFFFFF8);
          v386 = (_QWORD *)(((unint64_t)v384 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v385 = *v386;
          v385[1] = v386[1];
          v387 = ((unint64_t)v385 + 23) & 0xFFFFFFFFFFFFFFF8;
          v388 = ((unint64_t)v386 + 23) & 0xFFFFFFFFFFFFFFF8;
          v389 = *(_QWORD *)(v388 + 24);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v389 < 0xFFFFFFFF)
          {
            v390 = *(_OWORD *)v388;
            v391 = *(_OWORD *)(v388 + 16);
            *(_QWORD *)(v387 + 32) = *(_QWORD *)(v388 + 32);
            *(_OWORD *)v387 = v390;
            *(_OWORD *)(v387 + 16) = v391;
          }
          else
          {
            *(_QWORD *)(v387 + 24) = v389;
            *(_QWORD *)(v387 + 32) = *(_QWORD *)(v388 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v389 - 8))(v387, v388, v389);
          }
          v84 = v1429;
          v392 = (v387 + 47) & 0xFFFFFFFFFFFFFFF8;
          v393 = (v388 + 47) & 0xFFFFFFFFFFFFFFF8;
          v394 = *(_QWORD *)(v393 + 24);
          if (v394 < 0xFFFFFFFF)
          {
            v395 = *(_OWORD *)v393;
            v396 = *(_OWORD *)(v393 + 16);
            *(_QWORD *)(v392 + 32) = *(_QWORD *)(v393 + 32);
            *(_OWORD *)v392 = v395;
            *(_OWORD *)(v392 + 16) = v396;
          }
          else
          {
            *(_QWORD *)(v392 + 24) = v394;
            *(_QWORD *)(v392 + 32) = *(_QWORD *)(v393 + 32);
            (**(void (***)(unint64_t, unint64_t))(v394 - 8))(v392, v393);
          }
          v89 = a1;
          v397 = (v392 + 47) & 0xFFFFFFFFFFFFFFF8;
          v398 = (v393 + 47) & 0xFFFFFFFFFFFFFFF8;
          v399 = *(_QWORD *)(v398 + 24);
          if (v399 < 0xFFFFFFFF)
          {
            v400 = *(_OWORD *)v398;
            v401 = *(_OWORD *)(v398 + 16);
            *(_QWORD *)(v397 + 32) = *(_QWORD *)(v398 + 32);
            *(_OWORD *)v397 = v400;
            *(_OWORD *)(v397 + 16) = v401;
          }
          else
          {
            *(_QWORD *)(v397 + 24) = v399;
            *(_QWORD *)(v397 + 32) = *(_QWORD *)(v398 + 32);
            (**(void (***)(unint64_t, unint64_t))(v399 - 8))(v397, v398);
          }
          v402 = v1427;
          v403 = v1462;
          *(_BYTE *)(v397 + 40) = *(_BYTE *)(v398 + 40);
          v404 = 16;
          goto LABEL_441;
        case 0x11:
          v186 = v130[3];
          v129[3] = v186;
          v129[4] = v130[4];
          (**(void (***)(_QWORD *, _QWORD *))(v186 - 8))(v129, v130);
          v187 = (void *)(((unint64_t)v129 + v1449) & v1396);
          v188 = (const void *)(((unint64_t)v130 + v1449) & v1396);
          v189 = v130;
          if (__swift_getEnumTagSinglePayload((uint64_t)v188, 1, v1390))
          {
            memcpy(v187, v188, v1474);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1375 + 16))(v187, v188, v1390);
            __swift_storeEnumTagSinglePayload((uint64_t)v187, 0, 1, v1390);
          }
          v405 = (_QWORD *)(((unint64_t)v187 + v1453) & 0xFFFFFFFFFFFFFFF8);
          v406 = (_QWORD *)(((unint64_t)v188 + v1453) & 0xFFFFFFFFFFFFFFF8);
          *v405 = *v406;
          v405[1] = v406[1];
          v407 = (_QWORD *)(((unint64_t)v405 + 23) & 0xFFFFFFFFFFFFFFF8);
          v408 = (_QWORD *)(((unint64_t)v406 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v407 = *v408;
          v407[1] = v408[1];
          v409 = (_QWORD *)(((unint64_t)v407 + 23) & 0xFFFFFFFFFFFFFFF8);
          v410 = (_QWORD *)(((unint64_t)v408 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v409 = *v410;
          v409[1] = v410[1];
          v411 = (_QWORD *)(((unint64_t)v409 + 23) & 0xFFFFFFFFFFFFFFF8);
          v412 = (_QWORD *)(((unint64_t)v410 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v411 = *v412;
          v411[1] = v412[1];
          v413 = ((unint64_t)v411 + 23) & 0xFFFFFFFFFFFFFFF8;
          v414 = ((unint64_t)v412 + 23) & 0xFFFFFFFFFFFFFFF8;
          v415 = *(_QWORD *)(v414 + 24);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v415 < 0xFFFFFFFF)
          {
            v416 = *(_OWORD *)v414;
            v417 = *(_OWORD *)(v414 + 16);
            *(_QWORD *)(v413 + 32) = *(_QWORD *)(v414 + 32);
            *(_OWORD *)v413 = v416;
            *(_OWORD *)(v413 + 16) = v417;
          }
          else
          {
            *(_QWORD *)(v413 + 24) = v415;
            *(_QWORD *)(v413 + 32) = *(_QWORD *)(v414 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v415 - 8))(v413, v414, v415);
          }
          v84 = v1429;
          v418 = (v413 + 47) & 0xFFFFFFFFFFFFFFF8;
          v419 = (v414 + 47) & 0xFFFFFFFFFFFFFFF8;
          v420 = *(_QWORD *)(v419 + 24);
          v171 = v129;
          if (v420 < 0xFFFFFFFF)
          {
            v421 = *(_OWORD *)v419;
            v422 = *(_OWORD *)(v419 + 16);
            *(_QWORD *)(v418 + 32) = *(_QWORD *)(v419 + 32);
            *(_OWORD *)v418 = v421;
            *(_OWORD *)(v418 + 16) = v422;
          }
          else
          {
            *(_QWORD *)(v418 + 24) = v420;
            *(_QWORD *)(v418 + 32) = *(_QWORD *)(v419 + 32);
            (**(void (***)(unint64_t, unint64_t))(v420 - 8))(v418, v419);
          }
          v89 = a1;
          v423 = (v418 + 47) & 0xFFFFFFFFFFFFFFF8;
          v424 = (v419 + 47) & 0xFFFFFFFFFFFFFFF8;
          v425 = *(_QWORD *)(v424 + 24);
          if (v425 < 0xFFFFFFFF)
          {
            v426 = *(_OWORD *)v424;
            v427 = *(_OWORD *)(v424 + 16);
            *(_QWORD *)(v423 + 32) = *(_QWORD *)(v424 + 32);
            *(_OWORD *)v423 = v426;
            *(_OWORD *)(v423 + 16) = v427;
          }
          else
          {
            *(_QWORD *)(v423 + 24) = v425;
            *(_QWORD *)(v423 + 32) = *(_QWORD *)(v424 + 32);
            (**(void (***)(unint64_t, unint64_t))(v425 - 8))(v423, v424);
          }
          v428 = (void *)((v1318 + v423) & v1425);
          v429 = (_BYTE *)((v1318 + v424) & v1425);
          if (v1451)
          {
            v430 = v1370;
            if (v1365 >= v1370)
            {
              v431 = (uint64_t)v429;
              v430 = v1365;
              v432 = v1368;
            }
            else
            {
              v431 = (unint64_t)&v429[v1369] & v1402;
              v432 = v1372;
            }
            v683 = __swift_getEnumTagSinglePayload(v431, v430, v432);
          }
          else
          {
            if (!v429[v1388])
              goto LABEL_1005;
            v635 = (v429[v1388] - 1) << v1394;
            if (v1388 > 3)
              v635 = 0;
            if ((_DWORD)v1388)
            {
              if (v1388 <= 3)
                v636 = v1388;
              else
                v636 = 4;
              __asm { BR              X11 }
            }
            v683 = v635 + 1;
          }
          if (v683)
          {
            memcpy(v428, v429, v1450);
            goto LABEL_1007;
          }
LABEL_1005:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1362 + 16))(v428, v429, v1368);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1363 + 16))(((unint64_t)v428 + v1369) & v1402, (unint64_t)&v429[v1369] & v1402, v1372);
          if (!v1451)
            *((_BYTE *)v428 + v1388) = 0;
LABEL_1007:
          v986 = (void *)(((unint64_t)v428 + v1334) & v1425);
          v987 = (_BYTE *)((unint64_t)&v429[v1334] & v1425);
          if (v1451)
          {
            v988 = v1370;
            if (v1365 >= v1370)
            {
              v989 = (uint64_t)v987;
              v988 = v1365;
              v990 = v1368;
            }
            else
            {
              v989 = (unint64_t)&v987[v1369] & v1402;
              v990 = v1372;
            }
            v993 = __swift_getEnumTagSinglePayload(v989, v988, v990);
          }
          else
          {
            if (!v987[v1388])
              goto LABEL_1190;
            v991 = (v987[v1388] - 1) << v1394;
            if (v1388 > 3)
              v991 = 0;
            if ((_DWORD)v1388)
            {
              if (v1388 <= 3)
                v992 = v1388;
              else
                v992 = 4;
              __asm { BR              X11 }
            }
            v993 = v991 + 1;
          }
          if (v993)
          {
            memcpy(v986, v987, v1450);
            goto LABEL_1192;
          }
LABEL_1190:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1362 + 16))(v986, v987, v1368);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1363 + 16))(((unint64_t)v986 + v1369) & v1402, (unint64_t)&v987[v1369] & v1402, v1372);
          if (!v1451)
            *((_BYTE *)v986 + v1388) = 0;
LABEL_1192:
          v171[v1462] = 17;
          v86 = a2;
          goto LABEL_1193;
        case 0x12:
          v171 = v129;
          *v129 = *v130;
          v172 = 18;
          goto LABEL_265;
        case 0x13:
          v171 = v129;
          if (__swift_getEnumTagSinglePayload((uint64_t)v130, 1, v1390))
          {
            memcpy(v129, v130, v1474);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1375 + 16))(v129, v130, v1390);
            __swift_storeEnumTagSinglePayload((uint64_t)v129, 0, 1, v1390);
          }
          v84 = v1429;
          v433 = ((unint64_t)v129 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v434 = ((unint64_t)v130 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v435 = *(_QWORD *)(v434 + 24);
          *(_QWORD *)(v433 + 24) = v435;
          *(_QWORD *)(v433 + 32) = *(_QWORD *)(v434 + 32);
          (**(void (***)(unint64_t, unint64_t))(v435 - 8))(v433, v434);
          v436 = (_QWORD *)((v433 + 47) & 0xFFFFFFFFFFFFFFF8);
          v437 = (_QWORD *)((v434 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v436 = *v437;
          v436[1] = v437[1];
          v438 = (_QWORD *)(((unint64_t)v436 + 23) & 0xFFFFFFFFFFFFFFF8);
          v439 = (_QWORD *)(((unint64_t)v437 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v438 = *v439;
          v438[1] = v439[1];
          *(_QWORD *)(((unint64_t)v438 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v439 + 23) & 0xFFFFFFFFFFFFF8);
          *((_BYTE *)v129 + v1462) = 19;
          sub_21D7C4C20();
          sub_21D7C4C20();
          goto LABEL_455;
        case 0x14:
          v171 = v129;
          if (__swift_getEnumTagSinglePayload((uint64_t)v130, 1, v1390))
          {
            memcpy(v129, v130, v1474);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1375 + 16))(v129, v130, v1390);
            __swift_storeEnumTagSinglePayload((uint64_t)v129, 0, 1, v1390);
          }
          v440 = v1371;
          v441 = ((unint64_t)v129 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v442 = ((unint64_t)v130 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v443 = *(_QWORD *)(v442 + 24);
          *(_QWORD *)(v441 + 24) = v443;
          *(_QWORD *)(v441 + 32) = *(_QWORD *)(v442 + 32);
          (**(void (***)(unint64_t, unint64_t))(v443 - 8))(v441, v442);
          v1472 = (v1460 + 40 + v441) & v1382;
          v444 = (v1460 + 40 + v442) & v1382;
          v445 = v1451;
          v446 = v126;
          if (v1360 == v1336)
          {
            v447 = v130;
            v448 = (void *)((v1460 + 40 + v441) & v1382);
            v449 = (const void *)((v1460 + 40 + v442) & v1382);
            if (v1447 >= 2
              && __swift_getEnumTagSinglePayload((v1460 + 40 + v442) & v1382, v1447, v1390) >= 2)
            {
              goto LABEL_1272;
            }
            goto LABEL_717;
          }
          v450 = (v1460 + 40 + v442) & v1382;
          v451 = (v1453 + v444) & 0xFFFFFFFFFFFFFFF8;
          if (v1336 == 0x7FFFFFFF)
          {
            v447 = v130;
            v448 = (void *)((v1460 + 40 + v441) & v1382);
            v449 = (const void *)v450;
            if (*(_QWORD *)(v451 + 24) >= 0xFFFFFFFFuLL)
              goto LABEL_717;
          }
          else
          {
            v693 = (v1467
                  + ((((((((v451 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                    + 47) & 0xFFFFFFFFFFFFFFF8)) & v126;
            v447 = v130;
            if (v1313 != v1336)
            {
              v448 = (void *)((v1460 + 40 + v441) & v1382);
              v449 = (const void *)v450;
              if (v1451 >= 2)
              {
                v762 = (v1311 + v693) & v1425;
                if (v1365 >= v1370)
                {
                  v763 = v1365;
                  v764 = v1368;
                }
                else
                {
                  v762 = (v1369 + v762) & v1402;
                  v763 = v1370;
                  v764 = v1372;
                }
                v440 = v1371;
                v445 = v1451;
                v448 = (void *)((v1460 + 40 + v441) & v1382);
                v449 = (const void *)v450;
                if (__swift_getEnumTagSinglePayload(v762, v763, v764) >= 2)
                  goto LABEL_1272;
              }
              goto LABEL_717;
            }
            v448 = (void *)((v1460 + 40 + v441) & v1382);
            v449 = (const void *)v450;
            if (v1367 > 0x7FFFFFFE)
            {
              v802 = __swift_getEnumTagSinglePayload((v1371 + v693) & v1398, v1359, v1373);
              if (v802 < 2)
                goto LABEL_717;
              v696 = v802 - 1;
            }
            else
            {
              v694 = *(_QWORD *)(v693 + 16);
              if (v694 >= 0xFFFFFFFF)
                LODWORD(v694) = -1;
              v695 = v694 - 1;
              if (v695 < 0)
                v695 = -1;
              v696 = v695 + 1;
            }
            if (v696 < 2)
            {
LABEL_717:
              v1483 = v447;
              if (__swift_getEnumTagSinglePayload((uint64_t)v449, 1, v1390))
              {
                memcpy(v448, v449, v1474);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1375 + 16))(v448, v449, v1390);
                __swift_storeEnumTagSinglePayload((uint64_t)v448, 0, 1, v1390);
              }
              v803 = ((unint64_t)v448 + v1453) & 0xFFFFFFFFFFFFFFF8;
              v804 = ((unint64_t)v449 + v1453) & 0xFFFFFFFFFFFFFFF8;
              v805 = *(_QWORD *)(v804 + 24);
              *(_QWORD *)(v803 + 24) = v805;
              *(_QWORD *)(v803 + 32) = *(_QWORD *)(v804 + 32);
              (**(void (***)(unint64_t, unint64_t))(v805 - 8))(v803, v804);
              v806 = (_QWORD *)((v803 + 47) & 0xFFFFFFFFFFFFFFF8);
              v807 = (_QWORD *)((v804 + 47) & 0xFFFFFFFFFFFFFFF8);
              *v806 = *v807;
              v806[1] = v807[1];
              v808 = (_QWORD *)(((unint64_t)v806 + 23) & 0xFFFFFFFFFFFFFFF8);
              v809 = (_QWORD *)(((unint64_t)v807 + 23) & 0xFFFFFFFFFFFFFFF8);
              *v808 = *v809;
              v808[1] = v809[1];
              v810 = ((unint64_t)v808 + 23) & 0xFFFFFFFFFFFFFFF8;
              v811 = ((unint64_t)v809 + 23) & 0xFFFFFFFFFFFFFFF8;
              v812 = *(_QWORD *)(v811 + 24);
              sub_21D7C4C20();
              sub_21D7C4C20();
              if (v812 < 0xFFFFFFFF)
              {
                v813 = *(_OWORD *)v811;
                v814 = *(_OWORD *)(v811 + 16);
                *(_QWORD *)(v810 + 32) = *(_QWORD *)(v811 + 32);
                *(_OWORD *)v810 = v813;
                *(_OWORD *)(v810 + 16) = v814;
              }
              else
              {
                *(_QWORD *)(v810 + 24) = v812;
                *(_QWORD *)(v810 + 32) = *(_QWORD *)(v811 + 32);
                (**(void (***)(unint64_t, unint64_t, unint64_t))(v812 - 8))(v810, v811, v812);
              }
              v815 = (v810 + 47) & 0xFFFFFFFFFFFFFFF8;
              v816 = (v811 + 47) & 0xFFFFFFFFFFFFFFF8;
              v817 = *(_QWORD *)(v816 + 24);
              if (v817 < 0xFFFFFFFF)
              {
                v818 = *(_OWORD *)v816;
                v819 = *(_OWORD *)(v816 + 16);
                *(_QWORD *)(v815 + 32) = *(_QWORD *)(v816 + 32);
                *(_OWORD *)v815 = v818;
                *(_OWORD *)(v815 + 16) = v819;
              }
              else
              {
                *(_QWORD *)(v815 + 24) = v817;
                *(_QWORD *)(v815 + 32) = *(_QWORD *)(v816 + 32);
                (**(void (***)(unint64_t, unint64_t))(v817 - 8))(v815, (v811 + 47) & 0xFFFFFFFFFFFFFFF8);
              }
              v820 = (_QWORD *)((v1467 + v815) & v446);
              v821 = (_QWORD *)((v1467 + v816) & v446);
              if (v1367 >= 0x7FFFFFFF)
              {
                v825 = (const void *)(((unint64_t)v821 + v440) & v1398);
                if (__swift_getEnumTagSinglePayload((uint64_t)v825, v1359, v1373) <= 1)
                {
                  v1475 = v449;
                  v1419 = v171;
                  v823 = (char *)(v821 + 1);
                  v826 = v440;
                  v824 = ~v1455;
                  goto LABEL_733;
                }
              }
              else
              {
                v822 = *(_QWORD *)(((v1467 + v816) & v446) + 0x10);
                if (v822 >= 0xFFFFFFFF)
                  LODWORD(v822) = -1;
                if ((int)v822 - 1 < 0)
                {
                  v1475 = v449;
                  v1419 = v171;
                  v823 = (char *)(v821 + 1);
                  v824 = ~v1455;
                  v825 = (const void *)(((unint64_t)v821 + v440) & v1398);
                  v826 = v440;
LABEL_733:
                  *(_BYTE *)v820 = *(_BYTE *)v821;
                  v820[1] = v821[1];
                  v820[2] = *((_QWORD *)v823 + 1);
                  v820[3] = *((_QWORD *)v823 + 2);
                  v820[4] = *((_QWORD *)v823 + 3);
                  v820[5] = *((_QWORD *)v823 + 4);
                  v820[6] = *((_QWORD *)v823 + 5);
                  v820[7] = *((_QWORD *)v823 + 6);
                  v820[8] = *((_QWORD *)v823 + 7);
                  v820[9] = *((_QWORD *)v823 + 8);
                  v820[10] = *((_QWORD *)v823 + 9);
                  v820[11] = *((_QWORD *)v823 + 10);
                  v820[12] = *((_QWORD *)v823 + 11);
                  v827 = *((_QWORD *)v823 + 12);
                  *((_BYTE *)v820 + 112) = v823[104];
                  v820[13] = v827;
                  v828 = (void *)(((unint64_t)v820 + v826) & v824);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (__swift_getEnumTagSinglePayload((uint64_t)v825, 1, v1373))
                  {
                    memcpy(v828, v825, v1445);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1355 + 16))(v828, v825, v1373);
                    __swift_storeEnumTagSinglePayload((uint64_t)v828, 0, 1, v1373);
                  }
                  v171 = v1419;
                  v829 = v1448;
                  v440 = v1371;
                  v445 = v1451;
                  v830 = v1370;
                  v448 = (void *)v1472;
                  v449 = v1475;
LABEL_738:
                  v447 = v1483;
                  v831 = (void *)(((unint64_t)v820 + v1487 + v829) & v1425);
                  v832 = (unint64_t)v821 + v1487 + v829;
                  v833 = (_BYTE *)(v832 & v1425);
                  if (v445)
                  {
                    v834 = v1365;
                    v835 = v1388;
                    if (v1365 >= v830)
                    {
                      v836 = v832 & v1425;
                      v837 = v1368;
                    }
                    else
                    {
                      v836 = (unint64_t)&v833[v1369] & v1402;
                      v834 = v830;
                      v837 = v1372;
                    }
                    v840 = __swift_getEnumTagSinglePayload(v836, v834, v837);
                  }
                  else
                  {
                    v835 = v1388;
                    if (!v833[v1388])
                      goto LABEL_1342;
                    v838 = (v833[v1388] - 1) << v1394;
                    if (v1388 > 3)
                      v838 = 0;
                    if ((_DWORD)v1388)
                    {
                      if (v1388 <= 3)
                        v839 = v1388;
                      else
                        v839 = 4;
                      __asm { BR              X11 }
                    }
                    v840 = v838 + 1;
                  }
                  if (v840)
                  {
                    v1136 = v831;
                    v1137 = v833;
                    v1138 = v1450;
                    goto LABEL_1341;
                  }
LABEL_1342:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1362 + 16))(v831, v833, v1368);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1363 + 16))(((unint64_t)v831 + v1369) & v1402, (unint64_t)&v833[v1369] & v1402, v1372);
                  if (!v445)
                    *((_BYTE *)v831 + v835) = 0;
LABEL_1344:
                  v1228 = (_QWORD *)(((unint64_t)v448 + v1331) & 0xFFFFFFFFFFFFFFF8);
                  v1229 = (_QWORD *)(((unint64_t)v449 + v1331) & 0xFFFFFFFFFFFFFFF8);
                  *v1228 = *v1229;
                  v1230 = (_QWORD *)(((unint64_t)v1228 + v1332) & v446);
                  v1231 = (_QWORD *)(((unint64_t)v1229 + v1332) & v446);
                  sub_21D7C4C20();
                  if (v1367 >= 0x7FFFFFFF)
                  {
                    v1238 = (const void *)(((unint64_t)v1231 + v440) & v1398);
                    v130 = v447;
                    v89 = a1;
                    if (__swift_getEnumTagSinglePayload((uint64_t)v1238, v1359, v1373) <= 1)
                    {
                      v1233 = v440;
                      v1234 = v447;
                      v1235 = v171;
                      v1236 = (char *)(v1231 + 1);
                      v1237 = ~v1455;
                      goto LABEL_1351;
                    }
                  }
                  else
                  {
                    v1232 = v1231[2];
                    if (v1232 >= 0xFFFFFFFF)
                      LODWORD(v1232) = -1;
                    v130 = v447;
                    v89 = a1;
                    if ((int)v1232 - 1 < 0)
                    {
                      v1233 = v440;
                      v1234 = v447;
                      v1235 = v171;
                      v1236 = (char *)(v1231 + 1);
                      v1237 = ~v1455;
                      v1238 = (const void *)(((unint64_t)v1231 + v1233) & v1398);
LABEL_1351:
                      *(_BYTE *)v1230 = *(_BYTE *)v1231;
                      v1230[1] = v1231[1];
                      v1230[2] = *((_QWORD *)v1236 + 1);
                      v1230[3] = *((_QWORD *)v1236 + 2);
                      v1230[4] = *((_QWORD *)v1236 + 3);
                      v1230[5] = *((_QWORD *)v1236 + 4);
                      v1230[6] = *((_QWORD *)v1236 + 5);
                      v1230[7] = *((_QWORD *)v1236 + 6);
                      v1230[8] = *((_QWORD *)v1236 + 7);
                      v1230[9] = *((_QWORD *)v1236 + 8);
                      v1230[10] = *((_QWORD *)v1236 + 9);
                      v1230[11] = *((_QWORD *)v1236 + 10);
                      v1230[12] = *((_QWORD *)v1236 + 11);
                      v1239 = *((_QWORD *)v1236 + 12);
                      *((_BYTE *)v1230 + 112) = v1236[104];
                      v1230[13] = v1239;
                      v1240 = (void *)(((unint64_t)v1230 + v1233) & v1237);
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      if (__swift_getEnumTagSinglePayload((uint64_t)v1238, 1, v1373))
                      {
                        memcpy(v1240, v1238, v1445);
                      }
                      else
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v1355 + 16))(v1240, v1238, v1373);
                        __swift_storeEnumTagSinglePayload((uint64_t)v1240, 0, 1, v1373);
                      }
                      v84 = v1429;
                      v171 = v1235;
                      v130 = v1234;
                      v89 = a1;
                      goto LABEL_1356;
                    }
                  }
                  memcpy(v1230, v1231, v1448);
                  v84 = v1429;
LABEL_1356:
                  v562 = 20;
                  goto LABEL_1357;
                }
              }
              v829 = v1448;
              memcpy(v820, v821, v1448);
              v830 = v1370;
              goto LABEL_738;
            }
          }
LABEL_1272:
          v1136 = v448;
          v1137 = v449;
          v1138 = v1312;
LABEL_1341:
          memcpy(v1136, v1137, v1138);
          goto LABEL_1344;
        case 0x15:
          v171 = v129;
          if (__swift_getEnumTagSinglePayload((uint64_t)v130, 1, v1390))
          {
            memcpy(v129, v130, v1474);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1375 + 16))(v129, v130, v1390);
            __swift_storeEnumTagSinglePayload((uint64_t)v129, 0, 1, v1390);
          }
          v84 = v1429;
          v452 = ((unint64_t)v129 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v453 = ((unint64_t)v130 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v454 = *(_QWORD *)(v453 + 24);
          *(_QWORD *)(v452 + 24) = v454;
          *(_QWORD *)(v452 + 32) = *(_QWORD *)(v453 + 32);
          (**(void (***)(unint64_t, unint64_t))(v454 - 8))(v452, v453);
          v455 = (v452 + 47) & 0xFFFFFFFFFFFFFFF8;
          v456 = (v453 + 47) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v455 = *(_QWORD *)v456;
          *(_QWORD *)(v455 + 8) = *(_QWORD *)(v456 + 8);
          *(_BYTE *)(v455 + 16) = *(_BYTE *)(v456 + 16);
          v457 = 21;
          goto LABEL_454;
        case 0x16:
          v1471 = ~v128;
          v1296 = v126;
          if (__swift_getEnumTagSinglePayload((uint64_t)v130, 1, v1390))
          {
            memcpy(v129, v130, v1474);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1375 + 16))(v129, v130, v1390);
            __swift_storeEnumTagSinglePayload((uint64_t)v129, 0, 1, v1390);
          }
          v1416 = v129;
          v458 = ((unint64_t)v129 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v1481 = v130;
          v459 = ((unint64_t)v130 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v460 = *(_QWORD *)(v459 + 24);
          *(_QWORD *)(v458 + 24) = v460;
          *(_QWORD *)(v458 + 32) = *(_QWORD *)(v459 + 32);
          (**(void (***)(unint64_t, unint64_t))(v460 - 8))(v458, v459);
          v461 = (_QWORD *)((v458 + 47) & 0xFFFFFFFFFFFFFFF8);
          v462 = (_QWORD *)((v459 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v461 = *v462;
          v461[1] = v462[1];
          v463 = (_QWORD *)(((unint64_t)v461 + 23) & 0xFFFFFFFFFFFFF8);
          v464 = (_QWORD *)(((unint64_t)v462 + 23) & 0xFFFFFFFFFFFFF8);
          *v463 = *v464;
          v465 = (_QWORD *)(((unint64_t)v463 + 15) & 0xFFFFFFFFFFFFFFF8);
          v466 = (_QWORD *)(((unint64_t)v464 + 15) & 0xFFFFFFFFFFFFFFF8);
          *v465 = *v466;
          v465[1] = v466[1];
          v467 = (_QWORD *)(((unint64_t)v465 + v1354) & v1442);
          v468 = (_QWORD *)(((unint64_t)v466 + v1354) & v1442);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v1392 > 0x7FFFFFFE)
          {
            v471 = (_QWORD *)(((unint64_t)v468 + 23) & 0xFFFFFFFFFFFFFFF8);
            v472 = ((unint64_t)v471 + 23) & 0xFFFFFFFFFFFFFFF8;
            v470 = v1388;
            v89 = a1;
            if (!__swift_getEnumTagSinglePayload((v1459 + v472 + 33) & v132, v1392, v1353))
              goto LABEL_406;
          }
          else
          {
            v469 = v468[1];
            if (v469 >= 0xFFFFFFFF)
              LODWORD(v469) = -1;
            v470 = v1388;
            v89 = a1;
            if ((v469 + 1) <= 1)
            {
              v471 = (_QWORD *)(((unint64_t)v468 + 23) & 0xFFFFFFFFFFFFFFF8);
              v472 = ((unint64_t)v471 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_406:
              *v467 = *v468;
              v467[1] = v468[1];
              v474 = (_QWORD *)(((unint64_t)v467 + 23) & 0xFFFFFFFFFFFFFFF8);
              *v474 = *v471;
              v474[1] = v471[1];
              v475 = ((unint64_t)v474 + 23) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)v475 = *(_QWORD *)v472;
              *(_QWORD *)(v475 + 8) = *(_QWORD *)(v472 + 8);
              *(_BYTE *)(v475 + 16) = *(_BYTE *)(v472 + 16);
              v476 = ((unint64_t)v474 + 47) & 0xFFFFFFFFFFFFFFF8;
              v477 = ((unint64_t)v471 + 47) & 0xFFFFFFFFFFFFFFF8;
              v478 = *(void **)v477;
              *(_QWORD *)v476 = *(_QWORD *)v477;
              *(_BYTE *)(v476 + 8) = *(_BYTE *)(v477 + 8);
              v479 = (v1459 + 9 + v476) & v132;
              v480 = (v1459 + 9 + v477) & v132;
              v481 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1391 + 16);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              v482 = v478;
              v481(v479, v480, v1353);
              v89 = a1;
              v470 = v1388;
              v473 = v1441;
LABEL_407:
              *((_BYTE *)v467 + v473) = *((_BYTE *)v468 + v473);
              v483 = ((unint64_t)v467 + v473) & 0xFFFFFFFFFFFFFFF8;
              v484 = ((unint64_t)v468 + v473) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)(v483 + 8) = *(_QWORD *)(v484 + 8);
              *(_QWORD *)(v483 + 16) = *(_QWORD *)(v484 + 16);
              v485 = (void *)((v1324 + v483) & v1425);
              v486 = (_BYTE *)((v1324 + v484) & v1425);
              sub_21D7C4C20();
              v487 = v1296;
              if (v1451)
              {
                v488 = v1365;
                if (v1365 >= v1370)
                {
                  v489 = (uint64_t)v486;
                  v490 = v1368;
                }
                else
                {
                  v489 = (unint64_t)&v486[v1369] & v1402;
                  v488 = v1370;
                  v490 = v1372;
                }
                v684 = __swift_getEnumTagSinglePayload(v489, v488, v490);
              }
              else
              {
                if (!v486[v470])
                  goto LABEL_1023;
                v637 = (v486[v470] - 1) << v1394;
                if (v470 > 3)
                  v637 = 0;
                if ((_DWORD)v470)
                {
                  if (v470 <= 3)
                    v638 = v470;
                  else
                    v638 = 4;
                  __asm { BR              X11 }
                }
                v684 = v637 + 1;
              }
              if (v684)
              {
                memcpy(v485, v486, v1450);
                goto LABEL_1025;
              }
LABEL_1023:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1362 + 16))(v485, v486, v1368);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1363 + 16))(((unint64_t)v485 + v1369) & v1402, (unint64_t)&v486[v1369] & v1402, v1372);
              if (!v1451)
                *((_BYTE *)v485 + v470) = 0;
LABEL_1025:
              v994 = (_QWORD *)(((unint64_t)v485 + v1444) & v1471);
              v995 = (uint64_t *)((unint64_t)&v486[v1444] & v1471);
              v996 = v1446;
              if ((v1370 & 0x80000000) != 0)
              {
                v1000 = v1357;
                v998 = __swift_getEnumTagSinglePayload(((unint64_t)v995 + v1357) & v1402, v1370, v1372);
                v996 = v1446;
                v999 = v1390;
              }
              else
              {
                v997 = *v995;
                if ((unint64_t)*v995 >= 0xFFFFFFFF)
                  LODWORD(v997) = -1;
                v998 = v997 + 1;
                v999 = v1390;
                v1000 = v1357;
              }
              if (v998)
              {
                memcpy(v994, v995, v996);
              }
              else
              {
                *v994 = *v995;
                v1001 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1363 + 16);
                sub_21D7C4C20();
                v1001(((unint64_t)v994 + v1000) & v1402, ((unint64_t)v995 + v1000) & v1402, v1372);
              }
              v1002 = (_QWORD *)(((unint64_t)v994 + v1356) & v1296);
              v1003 = (_QWORD *)(((unint64_t)v995 + v1356) & v1296);
              if (v1367 >= 0x7FFFFFFF)
              {
                v1005 = v1448;
                if (__swift_getEnumTagSinglePayload(((unint64_t)v1003 + v1371) & v1398, v1359, v1373) <= 1)
                {
                  v1006 = (char *)(v1003 + 1);
                  v1007 = ~v1455;
                  v1008 = (const void *)(((unint64_t)v1003 + v1371) & v1398);
                  goto LABEL_1040;
                }
              }
              else
              {
                v1004 = v1003[2];
                if (v1004 >= 0xFFFFFFFF)
                  LODWORD(v1004) = -1;
                v1005 = v1448;
                if ((int)v1004 - 1 < 0)
                {
                  v1006 = (char *)(v1003 + 1);
                  v1007 = ~v1455;
                  v1008 = (const void *)(((unint64_t)v1003 + v1371) & v1398);
LABEL_1040:
                  *(_BYTE *)v1002 = *(_BYTE *)v1003;
                  v1002[1] = v1003[1];
                  v1002[2] = *((_QWORD *)v1006 + 1);
                  v1002[3] = *((_QWORD *)v1006 + 2);
                  v1002[4] = *((_QWORD *)v1006 + 3);
                  v1002[5] = *((_QWORD *)v1006 + 4);
                  v1002[6] = *((_QWORD *)v1006 + 5);
                  v1002[7] = *((_QWORD *)v1006 + 6);
                  v1002[8] = *((_QWORD *)v1006 + 7);
                  v1002[9] = *((_QWORD *)v1006 + 8);
                  v1002[10] = *((_QWORD *)v1006 + 9);
                  v1002[11] = *((_QWORD *)v1006 + 10);
                  v1002[12] = *((_QWORD *)v1006 + 11);
                  v1009 = *((_QWORD *)v1006 + 12);
                  *((_BYTE *)v1002 + 112) = v1006[104];
                  v1002[13] = v1009;
                  v1010 = (void *)(((unint64_t)v1002 + v1371) & v1007);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (__swift_getEnumTagSinglePayload((uint64_t)v1008, 1, v1373))
                  {
                    memcpy(v1010, v1008, v1445);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1355 + 16))(v1010, v1008, v1373);
                    __swift_storeEnumTagSinglePayload((uint64_t)v1010, 0, 1, v1373);
                  }
                  v89 = a1;
                  v1005 = v1448;
                  v487 = v1296;
                  v999 = v1390;
LABEL_1045:
                  v1011 = (unint64_t)v1002 + v1456 + v1005;
                  v1012 = (unint64_t)v1003 + v1456 + v1005;
                  v1013 = v1012 & v133;
                  if (v1360 < 0x7FFFFFFF)
                  {
                    if (*(_QWORD *)(((v1453 + v1013) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                      goto LABEL_1047;
                  }
                  else if (__swift_getEnumTagSinglePayload(v1012 & v133, v1447, v999) >= 2)
                  {
LABEL_1047:
                    memcpy((void *)(v1011 & v133), (const void *)(v1012 & v133), v1358);
                    v1014 = v1358;
                    v1015 = v1447;
                    goto LABEL_1057;
                  }
                  if (__swift_getEnumTagSinglePayload(v1012 & v133, 1, v999))
                  {
                    memcpy((void *)(v1011 & v133), (const void *)(v1012 & v133), v1474);
                  }
                  else
                  {
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v1375 + 16))(v1011 & v133, v1012 & v133, v999);
                    __swift_storeEnumTagSinglePayload(v1011 & v133, 0, 1, v999);
                  }
                  v1016 = (v1453 + (v1011 & v133)) & 0xFFFFFFFFFFFFFFF8;
                  v1017 = (v1453 + v1013) & 0xFFFFFFFFFFFFFFF8;
                  v1018 = *(_QWORD *)(v1017 + 24);
                  *(_QWORD *)(v1016 + 24) = v1018;
                  *(_QWORD *)(v1016 + 32) = *(_QWORD *)(v1017 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v1018 - 8))(v1016, v1017);
                  v1019 = (v1016 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1020 = (v1017 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1021 = *(_QWORD *)(v1020 + 24);
                  if (v1021 < 0xFFFFFFFF)
                  {
                    v1022 = *(_OWORD *)v1020;
                    v1023 = *(_OWORD *)(v1020 + 16);
                    *(_QWORD *)(v1019 + 32) = *(_QWORD *)(v1020 + 32);
                    *(_OWORD *)v1019 = v1022;
                    *(_OWORD *)(v1019 + 16) = v1023;
                  }
                  else
                  {
                    *(_QWORD *)(v1019 + 24) = v1021;
                    *(_QWORD *)(v1019 + 32) = *(_QWORD *)(v1020 + 32);
                    (**(void (***)(unint64_t, unint64_t))(v1021 - 8))(v1019, (v1017 + 47) & 0xFFFFFFFFFFFFFFF8);
                  }
                  v1024 = (_QWORD *)((v1019 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v1025 = (_QWORD *)((v1020 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v1024 = *v1025;
                  v1024[1] = v1025[1];
                  sub_21D7C4C20();
                  v1014 = v1358;
                  v1015 = v1447;
                  if (v1447)
                    v1014 = ((((((v1387 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                          + 16;
LABEL_1057:
                  v1026 = (v1011 | v1458) + v1014;
                  v1027 = (v1012 | v1458) + v1014;
                  v1028 = v1027 & v133;
                  if (v1360 < 0x7FFFFFFF)
                  {
                    v1029 = v1481;
                    if (*(_QWORD *)(((v1453 + v1028) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                      goto LABEL_1059;
                  }
                  else
                  {
                    v1029 = v1481;
                    if (__swift_getEnumTagSinglePayload(v1027 & v133, v1015, v999) >= 2)
                    {
LABEL_1059:
                      memcpy((void *)(v1026 & v133), (const void *)(v1027 & v133), v1358);
                      v1030 = v1358;
                      v1031 = v1447;
                      goto LABEL_1069;
                    }
                  }
                  if (__swift_getEnumTagSinglePayload(v1027 & v133, 1, v999))
                  {
                    memcpy((void *)(v1026 & v133), (const void *)(v1027 & v133), v1474);
                  }
                  else
                  {
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v1375 + 16))(v1026 & v133, v1027 & v133, v999);
                    __swift_storeEnumTagSinglePayload(v1026 & v133, 0, 1, v999);
                  }
                  v1032 = (v1453 + (v1026 & v133)) & 0xFFFFFFFFFFFFFFF8;
                  v1033 = (v1453 + v1028) & 0xFFFFFFFFFFFFFFF8;
                  v1034 = *(_QWORD *)(v1033 + 24);
                  *(_QWORD *)(v1032 + 24) = v1034;
                  *(_QWORD *)(v1032 + 32) = *(_QWORD *)(v1033 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v1034 - 8))(v1032, v1033);
                  v1035 = (v1032 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1036 = (v1033 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1037 = *(_QWORD *)(v1036 + 24);
                  if (v1037 < 0xFFFFFFFF)
                  {
                    v1038 = *(_OWORD *)v1036;
                    v1039 = *(_OWORD *)(v1036 + 16);
                    *(_QWORD *)(v1035 + 32) = *(_QWORD *)(v1036 + 32);
                    *(_OWORD *)v1035 = v1038;
                    *(_OWORD *)(v1035 + 16) = v1039;
                  }
                  else
                  {
                    *(_QWORD *)(v1035 + 24) = v1037;
                    *(_QWORD *)(v1035 + 32) = *(_QWORD *)(v1036 + 32);
                    (**(void (***)(unint64_t, unint64_t))(v1037 - 8))(v1035, v1036);
                  }
                  v1040 = (_QWORD *)((v1035 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v1041 = (_QWORD *)((v1036 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v1040 = *v1041;
                  v1040[1] = v1041[1];
                  sub_21D7C4C20();
                  v1030 = v1358;
                  v1031 = v1447;
                  if (v1447)
                    v1030 = ((((((v1387 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                          + 16;
LABEL_1069:
                  v1042 = (char *)(((v1026 | v1458) + v1030) & v133);
                  v1043 = (char *)(((v1027 | v1458) + v1030) & v133);
                  if (v1360 < 0x7FFFFFFF)
                  {
                    v84 = v1429;
                    v130 = v1029;
                    if (*(_QWORD *)(((unint64_t)&v1043[v1453] & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                    {
LABEL_1071:
                      memcpy(v1042, v1043, v1358);
                      v1044 = v1465;
                      v1045 = v1352;
                      v1046 = v1387 + 1;
                      if (!v1447)
                        goto LABEL_1083;
                      goto LABEL_1082;
                    }
                  }
                  else
                  {
                    v84 = v1429;
                    v130 = v1029;
                    if (__swift_getEnumTagSinglePayload((uint64_t)v1043, v1031, v999) >= 2)
                      goto LABEL_1071;
                  }
                  if (__swift_getEnumTagSinglePayload((uint64_t)v1043, 1, v999))
                  {
                    memcpy(v1042, v1043, v1474);
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(v1375 + 16))(v1042, v1043, v999);
                    __swift_storeEnumTagSinglePayload((uint64_t)v1042, 0, 1, v999);
                  }
                  v1047 = (unint64_t)&v1042[v1453] & 0xFFFFFFFFFFFFFFF8;
                  v1048 = (unint64_t)&v1043[v1453] & 0xFFFFFFFFFFFFFFF8;
                  v1049 = *(_QWORD *)(v1048 + 24);
                  *(_QWORD *)(v1047 + 24) = v1049;
                  *(_QWORD *)(v1047 + 32) = *(_QWORD *)(v1048 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v1049 - 8))(v1047, v1048);
                  v1050 = (v1047 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1051 = (v1048 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1052 = *(_QWORD *)(v1051 + 24);
                  v1044 = v1465;
                  v1045 = v1352;
                  if (v1052 < 0xFFFFFFFF)
                  {
                    v1053 = *(_OWORD *)v1051;
                    v1054 = *(_OWORD *)(v1051 + 16);
                    *(_QWORD *)(v1050 + 32) = *(_QWORD *)(v1051 + 32);
                    *(_OWORD *)v1050 = v1053;
                    *(_OWORD *)(v1050 + 16) = v1054;
                  }
                  else
                  {
                    *(_QWORD *)(v1050 + 24) = v1052;
                    *(_QWORD *)(v1050 + 32) = *(_QWORD *)(v1051 + 32);
                    (**(void (***)(unint64_t, unint64_t))(v1052 - 8))(v1050, v1051);
                  }
                  v1055 = (_QWORD *)((v1050 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v1056 = (_QWORD *)((v1051 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v1055 = *v1056;
                  v1055[1] = v1056[1];
                  sub_21D7C4C20();
                  v84 = v1429;
                  v130 = v1029;
                  v1046 = v1387 + 1;
                  if (!v1447)
                    goto LABEL_1083;
                  v1358 = ((((((v1387 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                        + 16;
LABEL_1082:
                  v1046 = v1387;
LABEL_1083:
                  *(_QWORD *)&v1042[v1358] = *(_QWORD *)&v1043[v1358];
                  v1057 = v1350
                        + ((v1348
                          + ((v1348
                            + ((v1437
                              + ((v1356
                                + ((v1444
                                  + ((v1440
                                    + ((((((v1354
                                          + ((((((((v1046 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                            + 15) & 0xFFFFFFFFFFFFFFF8)) & v1442)
                                        + v1441) & 0xFFFFFFFFFFFFFFF8)
                                      + 23) & 0xFFFFFFFFFFFFFFF8)) & v1425)) & v1471)) & v487)) & v133)) & v133)) & v133);
                  if (v1351 > v1057)
                    v1057 = v1351;
                  if (v1057 <= v1349)
                    v1057 = v1349;
                  if (v1057 <= v1045)
                    v1057 = v1045;
                  if (v1057 <= v1347)
                    v1057 = v1347;
                  if (v1057 <= v1346)
                    v1057 = v1346;
                  if (v1057 <= v1343)
                    v1057 = v1343;
                  if (v1057 <= v1344)
                    v1057 = (((((v1465 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                          + 16;
                  if (v1057 <= v1345)
                    v1057 = v1345;
                  if (v1057 <= v1341)
                    v1057 = v1341;
                  if (v1057 <= v1340)
                    v1057 = v1340;
                  if (v1057 <= v1338)
                    v1057 = v1338;
                  if (v1057 <= v66)
                    v1057 = v66;
                  if (v1057 <= v1337)
                    v1057 = v1337;
                  if (v1057 <= v1439)
                    v1057 = v1439;
                  if (v1057 <= v1339)
                    v1057 = v1339;
                  if (v1057 <= v1351)
                    v1057 = v1351;
                  if (v1057 <= v1335)
                    v1057 = v1335;
                  if (v1057 <= v1342)
                    v1057 = ((v1465 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
                  if (v1057 <= v1464)
                    v1057 = ((v1458 + 80) & ~v1458) + v1474;
                  if (v1057 <= v1432)
                    v1057 = ((v1458 + 56) & ~v1458) + v1474;
                  if (v1057 <= v1303)
                    v1057 = v1303;
                  if (v1057 <= v1434)
                    v1057 = v1434;
                  if (v1057 <= v1400)
                    v1057 = v1400;
                  if (v1057 <= v1304)
                    v1057 = v1304;
                  if (v1057 <= v1436)
                    v1057 = v1436;
                  if (v1057 <= v1310)
                    v1057 = v1310;
                  if (v1057 <= v1306)
                    v1057 = v1306;
                  if (v1057 <= v1403)
                    v1057 = v1403;
                  if (v1057 <= v1309)
                    v1057 = v1309;
                  if (v1057 <= v1044)
                    v1057 = v1044;
                  if (v1057 <= v1307)
                    v1057 = v1307;
                  if (v1057 <= v1308)
                    v1057 = v1308;
                  if (v1057 <= v1305)
                    v1057 = v1305;
                  if (v1057 <= 8)
                    v1057 = 8;
                  v171 = v1416;
                  *((_BYTE *)v1416 + v1057) = 22;
                  goto LABEL_1358;
                }
              }
              memcpy(v1002, v1003, v1005);
              goto LABEL_1045;
            }
          }
          v473 = v1441;
          memcpy(v467, v468, v1441);
          goto LABEL_407;
        case 0x17:
          *v129 = *v130;
          v164 = v129;
          v190 = ((unint64_t)v129 + v1409 + 8) & v126;
          v166 = v130;
          v191 = ((unint64_t)v130 + v1409 + 8) & v126;
          *(_BYTE *)v190 = *(_BYTE *)v191;
          *(_QWORD *)(v190 + 8) = *(_QWORD *)(v191 + 8);
          *(_QWORD *)(v190 + 16) = *(_QWORD *)(v191 + 0x10);
          *(_QWORD *)(v190 + 24) = *(_QWORD *)(v191 + 0x18);
          *(_QWORD *)(v190 + 32) = *(_QWORD *)(v191 + 0x20);
          *(_QWORD *)(v190 + 40) = *(_QWORD *)(v191 + 0x28);
          *(_QWORD *)(v190 + 48) = *(_QWORD *)(v191 + 0x30);
          *(_QWORD *)(v190 + 56) = *(_QWORD *)(v191 + 0x38);
          *(_QWORD *)(v190 + 64) = *(_QWORD *)(v191 + 0x40);
          *(_QWORD *)(v190 + 72) = *(_QWORD *)(v191 + 0x48);
          *(_QWORD *)(v190 + 80) = *(_QWORD *)(v191 + 0x50);
          *(_QWORD *)(v190 + 88) = *(_QWORD *)(v191 + 0x58);
          *(_QWORD *)(v190 + 96) = *(_QWORD *)(v191 + 0x60);
          v192 = *(_QWORD *)(v191 + 0x68);
          *(_BYTE *)(v190 + 112) = *(_BYTE *)(v191 + 0x70);
          *(_QWORD *)(v190 + 104) = v192;
          v193 = (void *)((v1371 + v190) & v1398);
          v194 = (const void *)((v1371 + v191) & v1398);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (__swift_getEnumTagSinglePayload((uint64_t)v194, 1, v1373))
          {
            memcpy(v193, v194, v1445);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1355 + 16))(v193, v194, v1373);
            __swift_storeEnumTagSinglePayload((uint64_t)v193, 0, 1, v1373);
          }
          v89 = a1;
          v84 = v1429;
          v285 = 23;
LABEL_412:
          v171 = v164;
          *((_BYTE *)v164 + v1462) = v285;
          v86 = a2;
          v402 = v1427;
          v130 = v166;
          goto LABEL_1360;
        case 0x18:
          v171 = v129;
          if (__swift_getEnumTagSinglePayload((uint64_t)v130, 1, v1390))
          {
            memcpy(v129, v130, v1474);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1375 + 16))(v129, v130, v1390);
            __swift_storeEnumTagSinglePayload((uint64_t)v129, 0, 1, v1390);
          }
          v84 = v1429;
          v491 = ((unint64_t)v129 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v492 = ((unint64_t)v130 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v493 = *(_QWORD *)(v492 + 24);
          *(_QWORD *)(v491 + 24) = v493;
          *(_QWORD *)(v491 + 32) = *(_QWORD *)(v492 + 32);
          (**(void (***)(unint64_t, unint64_t))(v493 - 8))(v491, v492);
          v494 = (_QWORD *)((v492 + 47) & 0xFFFFFFFFFFFFF8);
          v495 = (_QWORD *)((v491 + 47) & 0xFFFFFFFFFFFFF8);
          *v495 = *v494;
          v496 = (_QWORD *)(((unint64_t)v495 + 15) & 0xFFFFFFFFFFFFFFF8);
          v497 = (_QWORD *)(((unint64_t)v494 + 15) & 0xFFFFFFFFFFFFFFF8);
          *v496 = *v497;
          v496[1] = v497[1];
          *((_BYTE *)v129 + v1462) = 24;
          sub_21D7C4C20();
          goto LABEL_455;
        case 0x19:
          v171 = v129;
          *v129 = *v130;
          v172 = 25;
          goto LABEL_265;
        case 0x1A:
          v171 = v129;
          *v129 = *v130;
          v172 = 26;
          goto LABEL_265;
        case 0x1B:
          v171 = v129;
          *v129 = *v130;
          v172 = 27;
          goto LABEL_265;
        case 0x1C:
          v171 = v129;
          *v129 = *v130;
          v172 = 28;
          goto LABEL_265;
        case 0x1D:
          v195 = v130[3];
          v171 = v129;
          v129[3] = v195;
          v129[4] = v130[4];
          (**(void (***)(_QWORD *, _QWORD *))(v195 - 8))(v129, v130);
          v196 = (char *)(((unint64_t)v129 + v1449) & v1396);
          v177 = v130;
          v197 = (const void *)(((unint64_t)v130 + v1449) & v1396);
          if (__swift_getEnumTagSinglePayload((uint64_t)v197, 1, v1390))
          {
            v198 = v1474;
            memcpy(v196, v197, v1474);
            v84 = v1429;
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(v1375 + 16))(v196, v197, v1390);
            __swift_storeEnumTagSinglePayload((uint64_t)v196, 0, 1, v1390);
            v84 = v1429;
            v198 = v1474;
          }
          v89 = a1;
          v498 = &v196[v198];
          *v498 = *((_BYTE *)v197 + v198);
          v498[1] = *((_BYTE *)v197 + v198 + 1);
          v499 = (unint64_t)&v196[v198 + 9] & 0xFFFFFFFFFFFFFFF8;
          v500 = ((unint64_t)v197 + v198 + 9) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v499 = *(_QWORD *)v500;
          *(_QWORD *)(v499 + 8) = *(_QWORD *)(v500 + 8);
          *(_BYTE *)(v499 + 16) = *(_BYTE *)(v500 + 16);
          v171[v1462] = 29;
          goto LABEL_761;
        case 0x1E:
          v199 = v130[3];
          v171 = v129;
          v129[3] = v199;
          v129[4] = v130[4];
          (**(void (***)(_QWORD *, _QWORD *))(v199 - 8))(v129, v130);
          *((_BYTE *)v129 + 40) = *((_BYTE *)v130 + 40);
          *((_BYTE *)v129 + 41) = *((_BYTE *)v130 + 41);
          *((_BYTE *)v129 + 42) = *((_BYTE *)v130 + 42);
          *((_BYTE *)v129 + 43) = *((_BYTE *)v130 + 43);
          v200 = (_QWORD *)(((unint64_t)v129 + 51) & 0xFFFFFFFFFFFFFFF8);
          v177 = v130;
          v201 = (_QWORD *)(((unint64_t)v130 + 51) & 0xFFFFFFFFFFFFFFF8);
          *v200 = *v201;
          v200[1] = v201[1];
          v202 = (_QWORD *)(((unint64_t)v200 + 23) & 0xFFFFFFFFFFFFFFF8);
          v203 = (_QWORD *)(((unint64_t)v201 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v202 = *v203;
          v202[1] = v203[1];
          v204 = (void *)(((unint64_t)v202 + v1430) & v1396);
          v205 = (const void *)(((unint64_t)v203 + v1430) & v1396);
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (__swift_getEnumTagSinglePayload((uint64_t)v205, 1, v1390))
          {
            memcpy(v204, v205, v1474);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1375 + 16))(v204, v205, v1390);
            __swift_storeEnumTagSinglePayload((uint64_t)v204, 0, 1, v1390);
          }
          v84 = v1429;
          v89 = a1;
          v501 = 30;
          goto LABEL_421;
        case 0x1F:
          v171 = v129;
          *v129 = *v130;
          v172 = 31;
          goto LABEL_265;
        case 0x20:
          v171 = v129;
          *v129 = *v130;
          v129[1] = v130[1];
          v206 = ((unint64_t)v129 + 23) & 0xFFFFFFFFFFFFFFF8;
          v177 = v130;
          v207 = ((unint64_t)v130 + 23) & 0xFFFFFFFFFFFFFFF8;
          v208 = *(_QWORD *)(v207 + 24);
          *(_QWORD *)(v206 + 24) = v208;
          *(_QWORD *)(v206 + 32) = *(_QWORD *)(v207 + 32);
          v209 = **(void (***)(unint64_t, unint64_t, uint64_t))(v208 - 8);
          sub_21D7C4C20();
          v209(v206, v207, v208);
          v210 = (void *)((v1449 + v206) & v1396);
          v211 = (const void *)((v1449 + v207) & v1396);
          if (__swift_getEnumTagSinglePayload((uint64_t)v211, 1, v1390))
          {
            memcpy(v210, v211, v1474);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1375 + 16))(v210, v211, v1390);
            __swift_storeEnumTagSinglePayload((uint64_t)v210, 0, 1, v1390);
          }
          v84 = v1429;
          v89 = a1;
          v501 = 32;
LABEL_421:
          v171[v1462] = v501;
          goto LABEL_762;
        case 0x21:
          if (v1451)
          {
            v212 = v1370;
            v213 = v1388;
            v214 = v130;
            if (v1365 >= v1370)
            {
              v215 = (uint64_t)v130;
              v212 = v1365;
              v216 = v1368;
            }
            else
            {
              v215 = ((unint64_t)v130 + v1369) & v1402;
              v216 = v1372;
            }
            v680 = __swift_getEnumTagSinglePayload(v215, v212, v216);
            v503 = v1390;
            v171 = v129;
            v89 = a1;
          }
          else
          {
            v213 = v1388;
            v214 = v130;
            v502 = *((unsigned __int8 *)v130 + v1388);
            v503 = v1390;
            v171 = v129;
            v89 = a1;
            if (!v502)
              goto LABEL_755;
            v504 = (v502 - 1) << v1394;
            if (v1388 > 3)
              v504 = 0;
            if ((_DWORD)v1388)
            {
              if (v1388 <= 3)
                v505 = v1388;
              else
                v505 = 4;
              __asm { BR              X11 }
            }
            v680 = v504 + 1;
          }
          if (v680)
          {
            memcpy(v171, v214, v1450);
            goto LABEL_757;
          }
LABEL_755:
          (*(void (**)(_BYTE *, const void *, uint64_t))(v1362 + 16))(v171, v214, v1368);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1363 + 16))((unint64_t)&v171[v1369] & v1402, ((unint64_t)v214 + v1369) & v1402, v1372);
          if (!v1451)
            v171[v213] = 0;
LABEL_757:
          v841 = (unint64_t)&v171[v1405] & 0xFFFFFFFFFFFFFFF8;
          v177 = v214;
          v842 = ((unint64_t)v214 + v1405) & 0xFFFFFFFFFFFFFFF8;
          v843 = *(_QWORD *)(v842 + 24);
          *(_QWORD *)(v841 + 24) = v843;
          *(_QWORD *)(v841 + 32) = *(_QWORD *)(v842 + 32);
          (**(void (***)(unint64_t, unint64_t))(v843 - 8))(v841, v842);
          v844 = (void *)((v1449 + v841) & v1396);
          v845 = (const void *)((v1449 + v842) & v1396);
          v84 = v1429;
          if (__swift_getEnumTagSinglePayload((uint64_t)v845, 1, v503))
          {
            memcpy(v844, v845, v1474);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1375 + 16))(v844, v845, v503);
            __swift_storeEnumTagSinglePayload((uint64_t)v844, 0, 1, v503);
          }
          v846 = (_QWORD *)(((unint64_t)v844 + v1453) & 0xFFFFFFFFFFFFFFF8);
          v847 = (_QWORD *)(((unint64_t)v845 + v1453) & 0xFFFFFFFFFFFFFFF8);
          *v846 = *v847;
          v846[1] = v847[1];
          v848 = (_QWORD *)(((unint64_t)v846 + 23) & 0xFFFFFFFFFFFFFFF8);
          v849 = (_QWORD *)(((unint64_t)v847 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v848 = *v849;
          v848[1] = v849[1];
          v171[v1462] = 33;
          sub_21D7C4C20();
LABEL_761:
          sub_21D7C4C20();
LABEL_762:
          v86 = a2;
          v402 = v1427;
          v130 = v177;
          goto LABEL_1360;
        case 0x22:
          if (__swift_getEnumTagSinglePayload((uint64_t)v130, 1, v1390))
          {
            memcpy(v129, v130, v1474);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1375 + 16))(v129, v130, v1390);
            __swift_storeEnumTagSinglePayload((uint64_t)v129, 0, 1, v1390);
          }
          v506 = ((unint64_t)v129 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v507 = v130;
          v508 = ((unint64_t)v130 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v509 = *(_QWORD *)(v508 + 24);
          *(_QWORD *)(v506 + 24) = v509;
          *(_QWORD *)(v506 + 32) = *(_QWORD *)(v508 + 32);
          (**(void (***)(unint64_t, unint64_t))(v509 - 8))(v506, v508);
          v510 = (v1467 + v506) & v126;
          v511 = (v1467 + v508) & v126;
          *(_BYTE *)v510 = *(_BYTE *)v511;
          *(_QWORD *)(v510 + 8) = *(_QWORD *)(v511 + 8);
          *(_QWORD *)(v510 + 16) = *(_QWORD *)(v511 + 0x10);
          *(_QWORD *)(v510 + 24) = *(_QWORD *)(v511 + 0x18);
          *(_QWORD *)(v510 + 32) = *(_QWORD *)(v511 + 0x20);
          *(_QWORD *)(v510 + 40) = *(_QWORD *)(v511 + 0x28);
          *(_QWORD *)(v510 + 48) = *(_QWORD *)(v511 + 0x30);
          *(_QWORD *)(v510 + 56) = *(_QWORD *)(v511 + 0x38);
          *(_QWORD *)(v510 + 64) = *(_QWORD *)(v511 + 0x40);
          *(_QWORD *)(v510 + 72) = *(_QWORD *)(v511 + 0x48);
          *(_QWORD *)(v510 + 80) = *(_QWORD *)(v511 + 0x50);
          *(_QWORD *)(v510 + 88) = *(_QWORD *)(v511 + 0x58);
          *(_QWORD *)(v510 + 96) = *(_QWORD *)(v511 + 0x60);
          v512 = *(_QWORD *)(v511 + 0x68);
          *(_BYTE *)(v510 + 112) = *(_BYTE *)(v511 + 0x70);
          *(_QWORD *)(v510 + 104) = v512;
          v513 = (void *)((v1371 + v510) & v1398);
          v514 = (const void *)((v1371 + v511) & v1398);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (__swift_getEnumTagSinglePayload((uint64_t)v514, 1, v1373))
          {
            memcpy(v513, v514, v1445);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1355 + 16))(v513, v514, v1373);
            __swift_storeEnumTagSinglePayload((uint64_t)v513, 0, 1, v1373);
          }
          v639 = (_QWORD *)((v1431 + v510) & 0xFFFFFFFFFFFFFFF8);
          v640 = (_QWORD *)((v1431 + v511) & 0xFFFFFFFFFFFFFFF8);
          *v639 = *v640;
          v639[1] = v640[1];
          v641 = ((unint64_t)v639 + 23) & 0xFFFFFFFFFFFFFFF8;
          v642 = ((unint64_t)v640 + 23) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v641 = *(_QWORD *)v642;
          *(_QWORD *)(v641 + 8) = *(_QWORD *)(v642 + 8);
          *(_BYTE *)(v641 + 16) = *(_BYTE *)(v642 + 16);
          *(_BYTE *)(v641 + 17) = *(_BYTE *)(v642 + 17);
          v643 = (void *)((v1321 + v641) & v1425);
          v644 = (_BYTE *)((v1321 + v642) & v1425);
          sub_21D7C4C20();
          sub_21D7C4C20();
          v171 = v129;
          if (v1451)
          {
            v645 = v1370;
            if (v1365 >= v1370)
            {
              v646 = (uint64_t)v644;
              v645 = v1365;
              v647 = v1368;
            }
            else
            {
              v646 = (unint64_t)&v644[v1369] & v1402;
              v647 = v1372;
            }
            v687 = __swift_getEnumTagSinglePayload(v646, v645, v647);
            v674 = a1;
            v84 = v1429;
          }
          else
          {
            v674 = a1;
            v84 = v1429;
            if (!v644[v1388])
              goto LABEL_947;
            v675 = (v644[v1388] - 1) << v1394;
            if (v1388 > 3)
              v675 = 0;
            if ((_DWORD)v1388)
            {
              if (v1388 <= 3)
                v676 = v1388;
              else
                v676 = 4;
              __asm { BR              X11 }
            }
            v687 = v675 + 1;
          }
          if (v687)
          {
            memcpy(v643, v644, v1450);
            goto LABEL_949;
          }
LABEL_947:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1362 + 16))(v643, v644, v1368);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1363 + 16))(((unint64_t)v643 + v1369) & v1402, (unint64_t)&v644[v1369] & v1402, v1372);
          if (!v1451)
            *((_BYTE *)v643 + v1388) = 0;
LABEL_949:
          *((_BYTE *)v129 + v1462) = 34;
          goto LABEL_955;
        case 0x23:
          if (__swift_getEnumTagSinglePayload((uint64_t)v130, 1, v1390))
          {
            memcpy(v129, v130, v1474);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1375 + 16))(v129, v130, v1390);
            __swift_storeEnumTagSinglePayload((uint64_t)v129, 0, 1, v1390);
          }
          v515 = ((unint64_t)v129 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v507 = v130;
          v516 = ((unint64_t)v130 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v517 = *(_QWORD *)(v516 + 24);
          *(_QWORD *)(v515 + 24) = v517;
          *(_QWORD *)(v515 + 32) = *(_QWORD *)(v516 + 32);
          (**(void (***)(unint64_t, unint64_t))(v517 - 8))(v515, v516);
          v518 = (v1467 + v515) & v126;
          v519 = (v1467 + v516) & v126;
          *(_BYTE *)v518 = *(_BYTE *)v519;
          *(_QWORD *)(v518 + 8) = *(_QWORD *)(v519 + 8);
          *(_QWORD *)(v518 + 16) = *(_QWORD *)(v519 + 0x10);
          *(_QWORD *)(v518 + 24) = *(_QWORD *)(v519 + 0x18);
          *(_QWORD *)(v518 + 32) = *(_QWORD *)(v519 + 0x20);
          *(_QWORD *)(v518 + 40) = *(_QWORD *)(v519 + 0x28);
          *(_QWORD *)(v518 + 48) = *(_QWORD *)(v519 + 0x30);
          *(_QWORD *)(v518 + 56) = *(_QWORD *)(v519 + 0x38);
          *(_QWORD *)(v518 + 64) = *(_QWORD *)(v519 + 0x40);
          *(_QWORD *)(v518 + 72) = *(_QWORD *)(v519 + 0x48);
          *(_QWORD *)(v518 + 80) = *(_QWORD *)(v519 + 0x50);
          *(_QWORD *)(v518 + 88) = *(_QWORD *)(v519 + 0x58);
          *(_QWORD *)(v518 + 96) = *(_QWORD *)(v519 + 0x60);
          v520 = *(_QWORD *)(v519 + 0x68);
          *(_BYTE *)(v518 + 112) = *(_BYTE *)(v519 + 0x70);
          *(_QWORD *)(v518 + 104) = v520;
          v521 = (void *)((v1371 + v518) & v1398);
          v522 = (const void *)((v1371 + v519) & v1398);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (__swift_getEnumTagSinglePayload((uint64_t)v522, 1, v1373))
          {
            memcpy(v521, v522, v1445);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1355 + 16))(v521, v522, v1373);
            __swift_storeEnumTagSinglePayload((uint64_t)v521, 0, 1, v1373);
          }
          v648 = (_QWORD *)((v1431 + v518) & 0xFFFFFFFFFFFFFFF8);
          v649 = (_QWORD *)((v1431 + v519) & 0xFFFFFFFFFFFFFFF8);
          *v648 = *v649;
          v648[1] = v649[1];
          v650 = ((unint64_t)v648 + 23) & 0xFFFFFFFFFFFFFFF8;
          v651 = ((unint64_t)v649 + 23) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v650 = *(_QWORD *)v651;
          *(_QWORD *)(v650 + 8) = *(_QWORD *)(v651 + 8);
          *(_BYTE *)(v650 + 16) = *(_BYTE *)(v651 + 16);
          *(_BYTE *)(v650 + 17) = *(_BYTE *)(v651 + 17);
          v652 = (_QWORD *)((v650 + 25) & 0xFFFFFFFFFFFFFFF8);
          v653 = (_QWORD *)((v651 + 25) & 0xFFFFFFFFFFFFFFF8);
          *v652 = *v653;
          v652[1] = v653[1];
          v654 = (_QWORD *)(((unint64_t)v652 + 23) & 0xFFFFFFFFFFFFFFF8);
          v655 = (_QWORD *)(((unint64_t)v653 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v654 = *v655;
          v654[1] = v655[1];
          v656 = (_QWORD *)(((unint64_t)v654 + 23) & 0xFFFFFFFFFFFFFFF8);
          v657 = (_QWORD *)(((unint64_t)v655 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v656 = *v657;
          v656[1] = v657[1];
          v658 = (_QWORD *)(((unint64_t)v656 + 23) & 0xFFFFFFFFFFFFFFF8);
          v659 = (_QWORD *)(((unint64_t)v657 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v658 = *v659;
          v658[1] = v659[1];
          v660 = (_QWORD *)(((unint64_t)v658 + 23) & 0xFFFFFFFFFFFFFFF8);
          v661 = (_QWORD *)(((unint64_t)v659 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v660 = *v661;
          v662 = (void *)(((unint64_t)v660 + v1407) & v1425);
          v663 = (_BYTE *)(((unint64_t)v661 + v1407) & v1425);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v1451)
          {
            v664 = v1370;
            v665 = v1388;
            if (v1365 >= v1370)
            {
              v666 = (uint64_t)v663;
              v664 = v1365;
              v667 = v1368;
            }
            else
            {
              v666 = (unint64_t)&v663[v1369] & v1402;
              v667 = v1372;
            }
            v688 = __swift_getEnumTagSinglePayload(v666, v664, v667);
            v674 = a1;
            v84 = v1429;
            v171 = v129;
            v677 = v1451;
          }
          else
          {
            v665 = v1388;
            v674 = a1;
            v84 = v1429;
            v171 = v129;
            v677 = 0;
            if (!v663[v1388])
              goto LABEL_952;
            v678 = (v663[v1388] - 1) << v1394;
            if (v1388 > 3)
              v678 = 0;
            if ((_DWORD)v1388)
            {
              if (v1388 <= 3)
                v679 = v1388;
              else
                v679 = 4;
              __asm { BR              X11 }
            }
            v688 = v678 + 1;
          }
          if (v688)
          {
            memcpy(v662, v663, v1450);
            goto LABEL_954;
          }
LABEL_952:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1362 + 16))(v662, v663, v1368);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1363 + 16))(((unint64_t)v662 + v1369) & v1402, (unint64_t)&v663[v1369] & v1402, v1372);
          if (!v677)
            *((_BYTE *)v662 + v665) = 0;
LABEL_954:
          v951 = (_QWORD *)(((unint64_t)v662 + v1405) & 0xFFFFFFFFFFFFFFF8);
          v952 = (_QWORD *)((unint64_t)&v663[v1405] & 0xFFFFFFFFFFFFFFF8);
          *v951 = *v952;
          v951[1] = v952[1];
          v171[v1462] = 35;
          sub_21D7C4C20();
LABEL_955:
          v86 = a2;
          v402 = v1427;
          v130 = v507;
          v89 = v674;
          goto LABEL_1360;
        case 0x24:
          v171 = v129;
          if (__swift_getEnumTagSinglePayload((uint64_t)v130, 1, v1390))
          {
            memcpy(v129, v130, v1474);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1375 + 16))(v129, v130, v1390);
            __swift_storeEnumTagSinglePayload((uint64_t)v129, 0, 1, v1390);
          }
          v523 = ((unint64_t)v129 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v524 = ((unint64_t)v130 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v525 = *(_QWORD *)(v524 + 24);
          *(_QWORD *)(v523 + 24) = v525;
          *(_QWORD *)(v523 + 32) = *(_QWORD *)(v524 + 32);
          (**(void (***)(unint64_t, unint64_t))(v525 - 8))(v523, v524);
          v526 = (_QWORD *)((v523 + 47) & 0xFFFFFFFFFFFFFFF8);
          v527 = (_QWORD *)((v524 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v526 = *v527;
          v526[1] = v527[1];
          v528 = ((unint64_t)v526 + 23) & 0xFFFFFFFFFFFFFFF8;
          v529 = ((unint64_t)v527 + 23) & 0xFFFFFFFFFFFFFFF8;
          v530 = *(_QWORD *)(v529 + 24);
          sub_21D7C4C20();
          v89 = a1;
          if (v530 < 0xFFFFFFFF)
          {
            v531 = *(_OWORD *)v529;
            v532 = *(_OWORD *)(v529 + 16);
            *(_QWORD *)(v528 + 32) = *(_QWORD *)(v529 + 32);
            *(_OWORD *)v528 = v531;
            *(_OWORD *)(v528 + 16) = v532;
          }
          else
          {
            *(_QWORD *)(v528 + 24) = v530;
            *(_QWORD *)(v528 + 32) = *(_QWORD *)(v529 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v530 - 8))(v528, v529, v530);
          }
          v84 = v1429;
          v402 = v1427;
          v403 = v1462;
          v404 = 36;
LABEL_441:
          v171[v403] = v404;
          v86 = a2;
          goto LABEL_1360;
        case 0x25:
          v171 = v129;
          if (__swift_getEnumTagSinglePayload((uint64_t)v130, 1, v1390))
          {
            memcpy(v129, v130, v1474);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1375 + 16))(v129, v130, v1390);
            __swift_storeEnumTagSinglePayload((uint64_t)v129, 0, 1, v1390);
          }
          v84 = v1429;
          v533 = ((unint64_t)v129 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v534 = ((unint64_t)v130 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v535 = *(_QWORD *)(v534 + 24);
          *(_QWORD *)(v533 + 24) = v535;
          *(_QWORD *)(v533 + 32) = *(_QWORD *)(v534 + 32);
          (**(void (***)(unint64_t, unint64_t))(v535 - 8))(v533, v534);
          v536 = (_QWORD *)((v533 + 47) & 0xFFFFFFFFFFFFF8);
          v537 = (_QWORD *)((v534 + 47) & 0xFFFFFFFFFFFFF8);
          *v536 = *v537;
          *(_QWORD *)(((unint64_t)v536 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v537 + 15) & 0xFFFFFFFFFFFFF8);
          v457 = 37;
          goto LABEL_454;
        case 0x26:
          v171 = v129;
          if (__swift_getEnumTagSinglePayload((uint64_t)v130, 1, v1390))
          {
            memcpy(v129, v130, v1474);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1375 + 16))(v129, v130, v1390);
            __swift_storeEnumTagSinglePayload((uint64_t)v129, 0, 1, v1390);
          }
          v538 = ((unint64_t)v129 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v539 = ((unint64_t)v130 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v540 = *(_QWORD *)(v539 + 24);
          *(_QWORD *)(v538 + 24) = v540;
          *(_QWORD *)(v538 + 32) = *(_QWORD *)(v539 + 32);
          (**(void (***)(unint64_t, unint64_t))(v540 - 8))(v538, v539);
          v541 = (_QWORD *)((v538 + 47) & 0xFFFFFFFFFFFFFFF8);
          v542 = (_QWORD *)((v539 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v541 = *v542;
          v541[1] = v542[1];
          v543 = (_QWORD *)(((unint64_t)v541 + 23) & 0xFFFFFFFFFFFFFFF8);
          v544 = (_QWORD *)(((unint64_t)v542 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v543 = *v544;
          v543[1] = v544[1];
          v545 = ((unint64_t)v543 + 23) & 0xFFFFFFFFFFFFFFF8;
          v546 = ((unint64_t)v544 + 23) & 0xFFFFFFFFFFFFFFF8;
          v547 = *(_QWORD *)(v546 + 24);
          sub_21D7C4C20();
          sub_21D7C4C20();
          v89 = a1;
          if (v547 < 0xFFFFFFFF)
          {
            v548 = *(_OWORD *)v546;
            v549 = *(_OWORD *)(v546 + 16);
            *(_QWORD *)(v545 + 32) = *(_QWORD *)(v546 + 32);
            *(_OWORD *)v545 = v548;
            *(_OWORD *)(v545 + 16) = v549;
          }
          else
          {
            *(_QWORD *)(v545 + 24) = v547;
            *(_QWORD *)(v545 + 32) = *(_QWORD *)(v546 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v547 - 8))(v545, v546, v547);
          }
          v84 = v1429;
          v550 = (v545 + 47) & 0xFFFFFFFFFFFFFFF8;
          v551 = (v546 + 47) & 0xFFFFFFFFFFFFFFF8;
          v552 = *(_QWORD *)(v551 + 24);
          if (v552 < 0xFFFFFFFF)
          {
            v553 = *(_OWORD *)v551;
            v554 = *(_OWORD *)(v551 + 16);
            *(_QWORD *)(v550 + 32) = *(_QWORD *)(v551 + 32);
            *(_OWORD *)v550 = v553;
            *(_OWORD *)(v550 + 16) = v554;
          }
          else
          {
            *(_QWORD *)(v550 + 24) = v552;
            *(_QWORD *)(v550 + 32) = *(_QWORD *)(v551 + 32);
            (**(void (***)(void))(v552 - 8))();
          }
          v86 = a2;
          v402 = v1427;
          v555 = v1462;
          v556 = 38;
          goto LABEL_1300;
        case 0x27:
          v171 = v129;
          if (__swift_getEnumTagSinglePayload((uint64_t)v130, 1, v1390))
          {
            memcpy(v129, v130, v1474);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1375 + 16))(v129, v130, v1390);
            __swift_storeEnumTagSinglePayload((uint64_t)v129, 0, 1, v1390);
          }
          v84 = v1429;
          v557 = ((unint64_t)v129 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v558 = ((unint64_t)v130 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v559 = *(_QWORD *)(v558 + 24);
          *(_QWORD *)(v557 + 24) = v559;
          *(_QWORD *)(v557 + 32) = *(_QWORD *)(v558 + 32);
          (**(void (***)(unint64_t, unint64_t))(v559 - 8))(v557, v558);
          *(_QWORD *)((v557 + 47) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v558 + 47) & 0xFFFFFFFFFFFFF8);
          v457 = 39;
LABEL_454:
          v171[v1462] = v457;
LABEL_455:
          sub_21D7C4C20();
          goto LABEL_456;
        case 0x28:
          v217 = v130[3];
          v171 = v129;
          v129[3] = v217;
          v129[4] = v130[4];
          (**(void (***)(_QWORD *, _QWORD *))(v217 - 8))(v129, v130);
          v218 = (void *)(((unint64_t)v129 + v1449) & v1396);
          v219 = (const void *)(((unint64_t)v130 + v1449) & v1396);
          if (__swift_getEnumTagSinglePayload((uint64_t)v219, 1, v1390))
          {
            memcpy(v218, v219, v1474);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1375 + 16))(v218, v219, v1390);
            __swift_storeEnumTagSinglePayload((uint64_t)v218, 0, 1, v1390);
          }
          v84 = v1429;
          v89 = a1;
          *(_QWORD *)(((unint64_t)v218 + v1453) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v219
                                                                                          + v1453) & 0xFFFFFFFFFFFFF8);
          v171[v1462] = 40;
          goto LABEL_964;
        case 0x29:
          v220 = v130[3];
          v171 = v129;
          v129[3] = v220;
          v129[4] = v130[4];
          (**(void (***)(_QWORD *, _QWORD *))(v220 - 8))(v129, v130);
          v221 = (void *)(((unint64_t)v129 + v1449) & v1396);
          v222 = (const void *)(((unint64_t)v130 + v1449) & v1396);
          if (__swift_getEnumTagSinglePayload((uint64_t)v222, 1, v1390))
          {
            memcpy(v221, v222, v1474);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1375 + 16))(v221, v222, v1390);
            __swift_storeEnumTagSinglePayload((uint64_t)v221, 0, 1, v1390);
          }
          v84 = v1429;
          v89 = a1;
          v560 = (_QWORD *)(((unint64_t)v221 + v1453) & 0xFFFFFFFFFFFFF8);
          v561 = (_QWORD *)(((unint64_t)v222 + v1453) & 0xFFFFFFFFFFFFFFF8);
          *v560 = *v561;
          *(_QWORD *)(((unint64_t)v560 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v561 + 15) & 0xFFFFFFFFFFFFF8);
          v171[v1462] = 41;
          sub_21D7C4C20();
          goto LABEL_964;
        case 0x2A:
          v171 = v129;
          *v129 = *v130;
          v172 = 42;
          goto LABEL_265;
        case 0x2B:
          v223 = v130[3];
          v171 = v129;
          v129[3] = v223;
          v129[4] = v130[4];
          (**(void (***)(_QWORD *, _QWORD *))(v223 - 8))(v129, v130);
          v224 = (void *)(((unint64_t)v129 + v1449) & v1396);
          v225 = (const void *)(((unint64_t)v130 + v1449) & v1396);
          if (__swift_getEnumTagSinglePayload((uint64_t)v225, 1, v1390))
          {
            memcpy(v224, v225, v1474);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1375 + 16))(v224, v225, v1390);
            __swift_storeEnumTagSinglePayload((uint64_t)v224, 0, 1, v1390);
          }
          v84 = v1429;
          v89 = a1;
          v562 = 43;
          goto LABEL_1357;
        case 0x2C:
          v171 = v129;
          *v129 = *v130;
          v172 = 44;
          goto LABEL_265;
        case 0x2D:
          v226 = ~v128;
          if (__swift_getEnumTagSinglePayload((uint64_t)v130, 1, v1390))
          {
            memcpy(v129, v130, v1474);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1375 + 16))(v129, v130, v1390);
            __swift_storeEnumTagSinglePayload((uint64_t)v129, 0, 1, v1390);
          }
          v1297 = v126;
          v563 = ((unint64_t)v129 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v564 = ((unint64_t)v130 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v565 = *(_QWORD *)(v564 + 24);
          *(_QWORD *)(v563 + 24) = v565;
          *(_QWORD *)(v563 + 32) = *(_QWORD *)(v564 + 32);
          (**(void (***)(unint64_t, unint64_t))(v565 - 8))(v563, v564);
          v566 = (v563 + 47) & 0xFFFFFFFFFFFFFFF8;
          v567 = (v564 + 47) & 0xFFFFFFFFFFFFFFF8;
          v568 = *(_QWORD *)(v567 + 24);
          v569 = v130;
          if (v568 < 0xFFFFFFFF)
          {
            v570 = *(_OWORD *)v567;
            v571 = *(_OWORD *)(v567 + 16);
            *(_QWORD *)(v566 + 32) = *(_QWORD *)(v567 + 32);
            *(_OWORD *)v566 = v570;
            *(_OWORD *)(v566 + 16) = v571;
          }
          else
          {
            *(_QWORD *)(v566 + 24) = v568;
            *(_QWORD *)(v566 + 32) = *(_QWORD *)(v567 + 32);
            (**(void (***)(unint64_t, unint64_t))(v568 - 8))(v566, v567);
          }
          v572 = (_QWORD *)((v566 + 47) & 0xFFFFFFFFFFFFFFF8);
          v573 = (_QWORD *)((v567 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v572 = *v573;
          v572[1] = v573[1];
          v574 = (_QWORD *)(((unint64_t)v572 + 23) & 0xFFFFFFFFFFFFFFF8);
          v575 = (_QWORD *)(((unint64_t)v573 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v574 = *v575;
          v574[1] = v575[1];
          v576 = (_QWORD *)(((unint64_t)v574 + 23) & 0xFFFFFFFFFFFFFFF8);
          v577 = (_QWORD *)(((unint64_t)v575 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v576 = *v577;
          v576[1] = v577[1];
          v578 = (_QWORD *)(((unint64_t)v576 + 23) & 0xFFFFFFFFFFFFFFF8);
          v579 = (_QWORD *)(((unint64_t)v577 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v578 = *v579;
          v578[1] = v579[1];
          v580 = ((unint64_t)v578 + 23) & 0xFFFFFFFFFFFFFFF8;
          v581 = ((unint64_t)v579 + 23) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v580 = *(_QWORD *)v581;
          *(_QWORD *)(v580 + 8) = *(_QWORD *)(v581 + 8);
          *(_BYTE *)(v580 + 16) = *(_BYTE *)(v581 + 16);
          v582 = (_QWORD *)(((unint64_t)v578 + 47) & 0xFFFFFFFFFFFFFFF8);
          v583 = (_QWORD *)(((unint64_t)v579 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v582 = *v583;
          v584 = (void *)(((unint64_t)v582 + v1407) & v1425);
          v585 = (_BYTE *)(((unint64_t)v583 + v1407) & v1425);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v1451)
          {
            v586 = v1370;
            v587 = v1334;
            if (v1365 >= v1370)
            {
              v588 = (uint64_t)v585;
              v586 = v1365;
              v589 = v1368;
            }
            else
            {
              v588 = (unint64_t)&v585[v1369] & v1402;
              v589 = v1372;
            }
            v685 = __swift_getEnumTagSinglePayload(v588, v586, v589);
            v171 = v129;
            v668 = v1388;
            v669 = v126;
          }
          else
          {
            v668 = v1388;
            v171 = v129;
            v669 = v126;
            v587 = v1334;
            if (!v585[v1388])
              goto LABEL_1154;
            v670 = (v585[v1388] - 1) << v1394;
            if (v1388 > 3)
              v670 = 0;
            if ((_DWORD)v1388)
            {
              if (v1388 <= 3)
                v671 = v1388;
              else
                v671 = 4;
              __asm { BR              X11 }
            }
            v685 = v670 + 1;
          }
          if (v685)
          {
            memcpy(v584, v585, v1450);
            goto LABEL_1156;
          }
LABEL_1154:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1362 + 16))(v584, v585, v1368);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1363 + 16))(((unint64_t)v584 + v1369) & v1402, (unint64_t)&v585[v1369] & v1402, v1372);
          if (!v1451)
            *((_BYTE *)v584 + v668) = 0;
LABEL_1156:
          v1058 = (void *)(((unint64_t)v584 + v587) & v1425);
          v1059 = (_BYTE *)((unint64_t)&v585[v587] & v1425);
          if (v1451)
          {
            v1060 = v1370;
            if (v1365 >= v1370)
            {
              v1061 = (uint64_t)v1059;
              v1060 = v1365;
              v1062 = v1368;
            }
            else
            {
              v1061 = (unint64_t)&v1059[v1369] & v1402;
              v1062 = v1372;
            }
            v1065 = __swift_getEnumTagSinglePayload(v1061, v1060, v1062);
          }
          else
          {
            if (!v1059[v668])
              goto LABEL_1196;
            v1063 = (v1059[v668] - 1) << v1394;
            if (v668 > 3)
              v1063 = 0;
            if ((_DWORD)v668)
            {
              if (v668 <= 3)
                v1064 = v668;
              else
                v1064 = 4;
              __asm { BR              X11 }
            }
            v1065 = v1063 + 1;
          }
          if (v1065)
          {
            memcpy(v1058, v1059, v1450);
            goto LABEL_1198;
          }
LABEL_1196:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1362 + 16))(v1058, v1059, v1368);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1363 + 16))(((unint64_t)v1058 + v1369) & v1402, (unint64_t)&v1059[v1369] & v1402, v1372);
          if (!v1451)
            *((_BYTE *)v1058 + v668) = 0;
LABEL_1198:
          v1078 = (_QWORD *)(((unint64_t)v1058 + v1444) & v226);
          v1079 = (uint64_t *)((unint64_t)&v1059[v1444] & v226);
          v1080 = v1446;
          if ((v1370 & 0x80000000) != 0)
          {
            v1082 = __swift_getEnumTagSinglePayload(((unint64_t)v1079 + v1357) & v1402, v1370, v1372);
            v1080 = v1446;
          }
          else
          {
            v1081 = *v1079;
            if ((unint64_t)*v1079 >= 0xFFFFFFFF)
              LODWORD(v1081) = -1;
            v1082 = v1081 + 1;
          }
          if (v1082)
          {
            memcpy(v1078, v1079, v1080);
          }
          else
          {
            *v1078 = *v1079;
            v1083 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1363 + 16);
            sub_21D7C4C20();
            v1083(((unint64_t)v1078 + v1357) & v1402, ((unint64_t)v1079 + v1357) & v1402, v1372);
            v669 = v1297;
          }
          v1084 = (_QWORD *)(((unint64_t)v1078 + v1328) & v226);
          v1085 = (uint64_t *)(((unint64_t)v1079 + v1328) & v226);
          if ((v1370 & 0x80000000) != 0)
          {
            v1087 = __swift_getEnumTagSinglePayload(((unint64_t)v1085 + v1357) & v1402, v1370, v1372);
          }
          else
          {
            v1086 = *v1085;
            if ((unint64_t)*v1085 >= 0xFFFFFFFF)
              LODWORD(v1086) = -1;
            v1087 = v1086 + 1;
          }
          v1088 = v569;
          if (v1087)
          {
            v1089 = v1446;
            memcpy(v1084, v1085, v1446);
          }
          else
          {
            *v1084 = *v1085;
            v1090 = v569;
            v1091 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1363 + 16);
            v1089 = v1446;
            sub_21D7C4C20();
            v1091(((unint64_t)v1084 + v1357) & v1402, ((unint64_t)v1085 + v1357) & v1402, v1372);
            v1088 = v1090;
            v669 = v1297;
          }
          v1092 = (char *)v1084 + v1089;
          *v1092 = *((_BYTE *)v1085 + v1089);
          v1092[1] = *((_BYTE *)v1085 + v1089 + 1);
          v1093 = (_QWORD *)(((unint64_t)v1084 + v1089 + 9) & 0xFFFFFFFFFFFFFFF8);
          v1094 = (_QWORD *)(((unint64_t)v1085 + v1089 + 9) & 0xFFFFFFFFFFFFFFF8);
          *v1093 = *v1094;
          v1093[1] = v1094[1];
          v1095 = ((unint64_t)v1093 + 23) & 0xFFFFFFFFFFFFFFF8;
          v1096 = ((unint64_t)v1094 + 23) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v1095 = *(_QWORD *)v1096;
          *(_QWORD *)(v1095 + 8) = *(_QWORD *)(v1096 + 8);
          *(_BYTE *)(v1095 + 16) = *(_BYTE *)(v1096 + 16);
          v1097 = ((unint64_t)v1093 + 47) & 0xFFFFFFFFFFFFFFF8;
          v1098 = ((unint64_t)v1094 + 47) & 0xFFFFFFFFFFFFFFF8;
          v1099 = *(_QWORD *)(v1098 + 24);
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v1099 < 0xFFFFFFFF)
          {
            v1100 = *(_OWORD *)v1098;
            v1101 = *(_OWORD *)(v1098 + 16);
            *(_QWORD *)(v1097 + 32) = *(_QWORD *)(v1098 + 32);
            *(_OWORD *)v1097 = v1100;
            *(_OWORD *)(v1097 + 16) = v1101;
          }
          else
          {
            *(_QWORD *)(v1097 + 24) = v1099;
            *(_QWORD *)(v1097 + 32) = *(_QWORD *)(v1098 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v1099 - 8))(v1097, v1098, v1099);
          }
          v1102 = (v1467 + v1097) & v669;
          v1103 = (v1467 + v1098) & v669;
          v130 = v1088;
          if (v1367 >= 0x7FFFFFFF)
          {
            v1109 = (const void *)((v1371 + v1103) & v1398);
            v89 = a1;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1109, v1359, v1373) <= 1)
            {
              v1105 = v1371;
              v1106 = a1;
              v1484 = v1088;
              v1421 = v171;
              v1107 = (char *)(v1103 + 8);
              v1108 = ~v1455;
LABEL_1224:
              *(_BYTE *)v1102 = *(_BYTE *)v1103;
              *(_QWORD *)(v1102 + 8) = *(_QWORD *)(v1103 + 8);
              *(_QWORD *)(v1102 + 16) = *((_QWORD *)v1107 + 1);
              *(_QWORD *)(v1102 + 24) = *((_QWORD *)v1107 + 2);
              *(_QWORD *)(v1102 + 32) = *((_QWORD *)v1107 + 3);
              *(_QWORD *)(v1102 + 40) = *((_QWORD *)v1107 + 4);
              *(_QWORD *)(v1102 + 48) = *((_QWORD *)v1107 + 5);
              *(_QWORD *)(v1102 + 56) = *((_QWORD *)v1107 + 6);
              *(_QWORD *)(v1102 + 64) = *((_QWORD *)v1107 + 7);
              *(_QWORD *)(v1102 + 72) = *((_QWORD *)v1107 + 8);
              *(_QWORD *)(v1102 + 80) = *((_QWORD *)v1107 + 9);
              *(_QWORD *)(v1102 + 88) = *((_QWORD *)v1107 + 10);
              *(_QWORD *)(v1102 + 96) = *((_QWORD *)v1107 + 11);
              v1110 = *((_QWORD *)v1107 + 12);
              *(_BYTE *)(v1102 + 112) = v1107[104];
              *(_QWORD *)(v1102 + 104) = v1110;
              v1111 = (void *)((v1105 + v1102) & v1108);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1109, 1, v1373))
              {
                memcpy(v1111, v1109, v1445);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1355 + 16))(v1111, v1109, v1373);
                __swift_storeEnumTagSinglePayload((uint64_t)v1111, 0, 1, v1373);
              }
              v171 = v1421;
              v130 = v1484;
              v1112 = v1448;
              v89 = v1106;
LABEL_1229:
              v1113 = (_QWORD *)(((v1102 | 7) + v1112) & 0xFFFFFFFFFFFFFFF8);
              v1114 = (_QWORD *)(((v1103 | 7) + v1112) & 0xFFFFFFFFFFFFFFF8);
              *v1113 = *v1114;
              v1113[1] = v1114[1];
              v171[v1462] = 45;
              goto LABEL_1230;
            }
          }
          else
          {
            v1104 = *(_QWORD *)(v1103 + 16);
            if (v1104 >= 0xFFFFFFFF)
              LODWORD(v1104) = -1;
            v89 = a1;
            if ((int)v1104 - 1 < 0)
            {
              v1105 = v1371;
              v1106 = a1;
              v1484 = v1088;
              v1421 = v171;
              v1107 = (char *)(v1103 + 8);
              v1108 = ~v1455;
              v1109 = (const void *)((v1371 + v1103) & v1398);
              goto LABEL_1224;
            }
          }
          v1112 = v1448;
          memcpy((void *)v1102, (const void *)v1103, v1448);
          goto LABEL_1229;
        case 0x2E:
          v171 = v129;
          *v129 = *v130;
          v172 = 46;
          goto LABEL_265;
        case 0x2F:
          v171 = v129;
          *v129 = *v130;
          v172 = 47;
          goto LABEL_265;
        case 0x30:
          v171 = v129;
          *v129 = *v130;
          v172 = 48;
          goto LABEL_265;
        case 0x31:
          v171 = v129;
          *v129 = *v130;
          v172 = 49;
          goto LABEL_265;
        case 0x32:
          v227 = v130[3];
          v171 = v129;
          v129[3] = v227;
          v129[4] = v130[4];
          (**(void (***)(_QWORD *, _QWORD *))(v227 - 8))(v129, v130);
          v228 = (void *)(((unint64_t)v129 + v1449) & v1396);
          v229 = (const void *)(((unint64_t)v130 + v1449) & v1396);
          v230 = v130;
          if (__swift_getEnumTagSinglePayload((uint64_t)v229, 1, v1390))
          {
            memcpy(v228, v229, v1474);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1375 + 16))(v228, v229, v1390);
            __swift_storeEnumTagSinglePayload((uint64_t)v228, 0, 1, v1390);
          }
          v590 = v126;
          v591 = (_QWORD *)(((unint64_t)v228 + v1453) & 0xFFFFFFFFFFFFFFF8);
          v592 = (_QWORD *)(((unint64_t)v229 + v1453) & 0xFFFFFFFFFFFFFFF8);
          *v591 = *v592;
          v591[1] = v592[1];
          v593 = ((unint64_t)v591 + 23) & 0xFFFFFFFFFFFFFFF8;
          v594 = ((unint64_t)v592 + 23) & 0xFFFFFFFFFFFFFFF8;
          v595 = *(_QWORD *)(v594 + 24);
          sub_21D7C4C20();
          if (v595 < 0xFFFFFFFF)
          {
            v596 = *(_OWORD *)v594;
            v597 = *(_OWORD *)(v594 + 16);
            *(_QWORD *)(v593 + 32) = *(_QWORD *)(v594 + 32);
            *(_OWORD *)v593 = v596;
            *(_OWORD *)(v593 + 16) = v597;
          }
          else
          {
            *(_QWORD *)(v593 + 24) = v595;
            *(_QWORD *)(v593 + 32) = *(_QWORD *)(v594 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v595 - 8))(v593, v594, v595);
          }
          v598 = (_QWORD *)((v593 + 47) & 0xFFFFFFFFFFFFF8);
          v599 = (_QWORD *)((v594 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v598 = *v599;
          v600 = (_QWORD *)(((unint64_t)v598 + 15) & 0xFFFFFFFFFFFFFFF8);
          v601 = (_QWORD *)(((unint64_t)v599 + 15) & 0xFFFFFFFFFFFFFFF8);
          *v600 = *v601;
          v600[1] = v601[1];
          v602 = (char *)(((unint64_t)v600 + v1430) & v133);
          v603 = (char *)(((unint64_t)v601 + v1430) & v133);
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v1360 < 0x7FFFFFFF)
          {
            v604 = v1439;
            if (*(_QWORD *)(((unint64_t)&v603[v1453] & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
              goto LABEL_477;
          }
          else
          {
            v604 = v1439;
            if (__swift_getEnumTagSinglePayload((uint64_t)v603, v1447, v1390) >= 2)
            {
LABEL_477:
              memcpy(v602, v603, v604);
              v605 = v1319;
              goto LABEL_606;
            }
          }
          if (__swift_getEnumTagSinglePayload((uint64_t)v603, 1, v1390))
          {
            memcpy(v602, v603, v1474);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v1375 + 16))(v602, v603, v1390);
            __swift_storeEnumTagSinglePayload((uint64_t)v602, 0, 1, v1390);
          }
          v706 = (unint64_t)&v602[v1453] & 0xFFFFFFFFFFFFFFF8;
          v707 = (unint64_t)&v603[v1453] & 0xFFFFFFFFFFFFFFF8;
          v708 = *(_QWORD *)(v707 + 24);
          *(_QWORD *)(v706 + 24) = v708;
          *(_QWORD *)(v706 + 32) = *(_QWORD *)(v707 + 32);
          (**(void (***)(unint64_t, unint64_t))(v708 - 8))(v706, v707);
          v709 = (v706 + 47) & 0xFFFFFFFFFFFFFFF8;
          v710 = (v707 + 47) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v709 = *(_QWORD *)v710;
          *(_QWORD *)(v709 + 8) = *(_QWORD *)(v710 + 8);
          *(_BYTE *)(v709 + 16) = *(_BYTE *)(v710 + 16);
          sub_21D7C4C20();
          v605 = v1319;
          if (v1447)
            v604 = ((((v1387 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 17;
LABEL_606:
          v711 = &v602[v604];
          v712 = &v603[v604];
          *(_QWORD *)(v711 + 7) = *(_QWORD *)&v603[v604 + 7];
          *(_QWORD *)(v711 + 15) = *(_QWORD *)&v603[v604 + 15];
          v713 = (_QWORD *)((unint64_t)&v602[v604 + v605] & v590);
          v714 = (_QWORD *)((unint64_t)&v712[v605] & v590);
          sub_21D7C4C20();
          if (v1367 >= 0x7FFFFFFF)
          {
            v721 = (const void *)(((unint64_t)v714 + v1371) & v1398);
            v130 = v230;
            if (__swift_getEnumTagSinglePayload((uint64_t)v721, v1359, v1373) <= 1)
            {
              v716 = v1371;
              v717 = v230;
              v718 = v171;
              v719 = (char *)(v714 + 1);
              v720 = ~v1455;
              goto LABEL_613;
            }
          }
          else
          {
            v715 = v714[2];
            if (v715 >= 0xFFFFFFFF)
              LODWORD(v715) = -1;
            v130 = v230;
            if ((int)v715 - 1 < 0)
            {
              v716 = v1371;
              v717 = v230;
              v718 = v171;
              v719 = (char *)(v714 + 1);
              v720 = ~v1455;
              v721 = (const void *)(((unint64_t)v714 + v1371) & v1398);
LABEL_613:
              *(_BYTE *)v713 = *(_BYTE *)v714;
              v713[1] = v714[1];
              v713[2] = *((_QWORD *)v719 + 1);
              v713[3] = *((_QWORD *)v719 + 2);
              v713[4] = *((_QWORD *)v719 + 3);
              v713[5] = *((_QWORD *)v719 + 4);
              v713[6] = *((_QWORD *)v719 + 5);
              v713[7] = *((_QWORD *)v719 + 6);
              v713[8] = *((_QWORD *)v719 + 7);
              v713[9] = *((_QWORD *)v719 + 8);
              v713[10] = *((_QWORD *)v719 + 9);
              v713[11] = *((_QWORD *)v719 + 10);
              v713[12] = *((_QWORD *)v719 + 11);
              v722 = *((_QWORD *)v719 + 12);
              *((_BYTE *)v713 + 112) = v719[104];
              v713[13] = v722;
              v723 = (void *)(((unint64_t)v713 + v716) & v720);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              if (__swift_getEnumTagSinglePayload((uint64_t)v721, 1, v1373))
              {
                memcpy(v723, v721, v1445);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1355 + 16))(v723, v721, v1373);
                __swift_storeEnumTagSinglePayload((uint64_t)v723, 0, 1, v1373);
              }
              v84 = v1429;
              v171 = v718;
              v130 = v717;
              goto LABEL_657;
            }
          }
          memcpy(v713, v714, v1448);
          v84 = v1429;
LABEL_657:
          v89 = a1;
          v562 = 50;
LABEL_1357:
          v171[v1462] = v562;
LABEL_1358:
          v86 = a2;
          goto LABEL_1359;
        case 0x33:
          v171 = v129;
          if (__swift_getEnumTagSinglePayload((uint64_t)v130, 1, v1390))
          {
            memcpy(v129, v130, v1474);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1375 + 16))(v129, v130, v1390);
            __swift_storeEnumTagSinglePayload((uint64_t)v129, 0, 1, v1390);
          }
          v1298 = v126;
          v606 = ((unint64_t)v129 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v607 = ((unint64_t)v130 + v1453) & 0xFFFFFFFFFFFFFFF8;
          v608 = *(_QWORD *)(v607 + 24);
          *(_QWORD *)(v606 + 24) = v608;
          *(_QWORD *)(v606 + 32) = *(_QWORD *)(v607 + 32);
          (**(void (***)(unint64_t, unint64_t))(v608 - 8))(v606, v607);
          v609 = (v606 + 47) & 0xFFFFFFFFFFFFFFF8;
          v610 = (v607 + 47) & 0xFFFFFFFFFFFFFFF8;
          v611 = *(_QWORD *)(v610 + 24);
          if (v611 < 0xFFFFFFFF)
          {
            v612 = *(_OWORD *)v610;
            v613 = *(_OWORD *)(v610 + 16);
            *(_QWORD *)(v609 + 32) = *(_QWORD *)(v610 + 32);
            *(_OWORD *)v609 = v612;
            *(_OWORD *)(v609 + 16) = v613;
          }
          else
          {
            *(_QWORD *)(v609 + 24) = v611;
            *(_QWORD *)(v609 + 32) = *(_QWORD *)(v610 + 32);
            (**(void (***)(unint64_t, unint64_t))(v611 - 8))(v609, v610);
          }
          v614 = v1388;
          v615 = (_QWORD *)((v609 + 47) & 0xFFFFFFFFFFFFFFF8);
          v616 = (_QWORD *)((v610 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v615 = *v616;
          v615[1] = v616[1];
          v617 = (_QWORD *)(((unint64_t)v615 + 23) & 0xFFFFFFFFFFFFFFF8);
          v618 = (_QWORD *)(((unint64_t)v616 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v617 = *v618;
          v617[1] = v618[1];
          v619 = (_QWORD *)(((unint64_t)v617 + 23) & 0xFFFFFFFFFFFFFFF8);
          v620 = (_QWORD *)(((unint64_t)v618 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v619 = *v620;
          v621 = (_QWORD *)(((unint64_t)v619 + v1317) & v1442);
          v622 = (_QWORD *)(((unint64_t)v620 + v1317) & v1442);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v1392 > 0x7FFFFFFE)
          {
            v624 = (_QWORD *)(((unint64_t)v622 + 23) & 0xFFFFFFFFFFFFFFF8);
            v625 = ((unint64_t)v624 + 23) & 0xFFFFFFFFFFFFFFF8;
            if (!__swift_getEnumTagSinglePayload((v1459 + v625 + 33) & v132, v1392, v1353))
            {
              v1417 = v171;
              goto LABEL_617;
            }
          }
          else
          {
            v623 = v622[1];
            if (v623 >= 0xFFFFFFFF)
              LODWORD(v623) = -1;
            if ((v623 + 1) <= 1)
            {
              v1417 = v171;
              v624 = (_QWORD *)(((unint64_t)v622 + 23) & 0xFFFFFFFFFFFFFFF8);
              v625 = ((unint64_t)v624 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_617:
              *v621 = *v622;
              v621[1] = v622[1];
              v724 = (_QWORD *)(((unint64_t)v621 + 23) & 0xFFFFFFFFFFFFFFF8);
              *v724 = *v624;
              v724[1] = v624[1];
              v725 = ((unint64_t)v724 + 23) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)v725 = *(_QWORD *)v625;
              *(_QWORD *)(v725 + 8) = *(_QWORD *)(v625 + 8);
              *(_BYTE *)(v725 + 16) = *(_BYTE *)(v625 + 16);
              v726 = ((unint64_t)v724 + 47) & 0xFFFFFFFFFFFFFFF8;
              v727 = ((unint64_t)v624 + 47) & 0xFFFFFFFFFFFFFFF8;
              v728 = *(void **)v727;
              *(_QWORD *)v726 = *(_QWORD *)v727;
              *(_BYTE *)(v726 + 8) = *(_BYTE *)(v727 + 8);
              v729 = (v1459 + 9 + v726) & v132;
              v730 = (v1459 + 9 + v727) & v132;
              v731 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1391 + 16);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              v732 = v728;
              v731(v729, v730, v1353);
              v171 = v1417;
              v614 = v1388;
LABEL_618:
              v733 = (void *)(((unint64_t)v621 + v1323) & v1425);
              v734 = (_BYTE *)(((unint64_t)v622 + v1323) & v1425);
              if (v1451)
              {
                v735 = v1365;
                if (v1365 >= v1370)
                {
                  v736 = (uint64_t)v734;
                  v737 = v1368;
                }
                else
                {
                  v736 = (unint64_t)&v734[v1369] & v1402;
                  v735 = v1370;
                  v737 = v1372;
                }
                v740 = __swift_getEnumTagSinglePayload(v736, v735, v737);
              }
              else
              {
                if (!v734[v614])
                  goto LABEL_1172;
                v738 = (v734[v614] - 1) << v1394;
                if (v614 > 3)
                  v738 = 0;
                if ((_DWORD)v614)
                {
                  if (v614 <= 3)
                    v739 = v614;
                  else
                    v739 = 4;
                  __asm { BR              X11 }
                }
                v740 = v738 + 1;
              }
              if (v740)
              {
                memcpy(v733, v734, v1450);
                goto LABEL_1174;
              }
LABEL_1172:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1362 + 16))(v733, v734, v1368);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1363 + 16))(((unint64_t)v733 + v1369) & v1402, (unint64_t)&v734[v1369] & v1402, v1372);
              if (!v1451)
                *((_BYTE *)v733 + v614) = 0;
LABEL_1174:
              v1066 = (_QWORD *)(((unint64_t)v733 + v1405) & 0xFFFFFFFFFFFFFFF8);
              v1067 = (_QWORD *)((unint64_t)&v734[v1405] & 0xFFFFFFFFFFFFFFF8);
              *v1066 = *v1067;
              v1066[1] = v1067[1];
              v1068 = ((unint64_t)v1066 + 23) & 0xFFFFFFFFFFFFFFF8;
              v1069 = ((unint64_t)v1067 + 23) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)v1068 = *(_QWORD *)v1069;
              *(_BYTE *)(v1068 + 8) = *(_BYTE *)(v1069 + 8);
              v1070 = (void *)((v1327 + v1068) & v1425);
              v1071 = (_BYTE *)((v1327 + v1069) & v1425);
              sub_21D7C4C20();
              sub_21D7C4C20();
              if (v1451)
              {
                v1072 = v1365;
                if (v1365 >= v1370)
                {
                  v1073 = (uint64_t)v1071;
                  v1074 = v1368;
                }
                else
                {
                  v1073 = (unint64_t)&v1071[v1369] & v1402;
                  v1072 = v1370;
                  v1074 = v1372;
                }
                v1077 = __swift_getEnumTagSinglePayload(v1073, v1072, v1074);
              }
              else
              {
                if (!v1071[v614])
                  goto LABEL_1234;
                v1075 = (v1071[v614] - 1) << v1394;
                if (v614 > 3)
                  v1075 = 0;
                if ((_DWORD)v614)
                {
                  if (v614 <= 3)
                    v1076 = v614;
                  else
                    v1076 = 4;
                  __asm { BR              X11 }
                }
                v1077 = v1075 + 1;
              }
              if (v1077)
              {
                memcpy(v1070, v1071, v1450);
                goto LABEL_1236;
              }
LABEL_1234:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1362 + 16))(v1070, v1071, v1368);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1363 + 16))(((unint64_t)v1070 + v1369) & v1402, (unint64_t)&v1071[v1369] & v1402, v1372);
              if (!v1451)
                *((_BYTE *)v1070 + v614) = 0;
LABEL_1236:
              v1115 = (_QWORD *)(((unint64_t)v1070 + v1405) & 0xFFFFFFFFFFFFFFF8);
              v1116 = (_QWORD *)((unint64_t)&v1071[v1405] & 0xFFFFFFFFFFFFFFF8);
              *v1115 = *v1116;
              v1115[1] = v1116[1];
              v1117 = (void *)(((unint64_t)v1115 + v1440) & v1425);
              v1118 = (_BYTE *)(((unint64_t)v1116 + v1440) & v1425);
              sub_21D7C4C20();
              if (v1451)
              {
                v1119 = v1365;
                if (v1365 >= v1370)
                {
                  v1120 = (uint64_t)v1118;
                  v1121 = v1368;
                }
                else
                {
                  v1120 = (unint64_t)&v1118[v1369] & v1402;
                  v1119 = v1370;
                  v1121 = v1372;
                }
                v1124 = __swift_getEnumTagSinglePayload(v1120, v1119, v1121);
              }
              else
              {
                if (!v1118[v614])
                  goto LABEL_1252;
                v1122 = (v1118[v614] - 1) << v1394;
                if (v614 > 3)
                  v1122 = 0;
                if ((_DWORD)v614)
                {
                  if (v614 <= 3)
                    v1123 = v614;
                  else
                    v1123 = 4;
                  __asm { BR              X11 }
                }
                v1124 = v1122 + 1;
              }
              if (v1124)
              {
                memcpy(v1117, v1118, v1450);
                goto LABEL_1254;
              }
LABEL_1252:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1362 + 16))(v1117, v1118, v1368);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1363 + 16))(((unint64_t)v1117 + v1369) & v1402, (unint64_t)&v1118[v1369] & v1402, v1372);
              if (!v1451)
                *((_BYTE *)v1117 + v614) = 0;
LABEL_1254:
              v1125 = (_QWORD *)(((unint64_t)v1117 + v1302) & v1298);
              v1126 = (_QWORD *)((unint64_t)&v1118[v1302] & v1298);
              if (v1367 >= 0x7FFFFFFF)
              {
                v1133 = (const void *)(((unint64_t)v1126 + v1371) & v1398);
                v89 = a1;
                if (__swift_getEnumTagSinglePayload((uint64_t)v1133, v1359, v1373) <= 1)
                {
                  v1128 = v1371;
                  v1129 = v130;
                  v1130 = v171;
                  v1131 = (char *)(v1126 + 1);
                  v1132 = ~v1455;
                  goto LABEL_1261;
                }
              }
              else
              {
                v1127 = v1126[2];
                if (v1127 >= 0xFFFFFFFF)
                  LODWORD(v1127) = -1;
                v89 = a1;
                if ((int)v1127 - 1 < 0)
                {
                  v1128 = v1371;
                  v1129 = v130;
                  v1130 = v171;
                  v1131 = (char *)(v1126 + 1);
                  v1132 = ~v1455;
                  v1133 = (const void *)(((unint64_t)v1126 + v1371) & v1398);
LABEL_1261:
                  *(_BYTE *)v1125 = *(_BYTE *)v1126;
                  v1125[1] = v1126[1];
                  v1125[2] = *((_QWORD *)v1131 + 1);
                  v1125[3] = *((_QWORD *)v1131 + 2);
                  v1125[4] = *((_QWORD *)v1131 + 3);
                  v1125[5] = *((_QWORD *)v1131 + 4);
                  v1125[6] = *((_QWORD *)v1131 + 5);
                  v1125[7] = *((_QWORD *)v1131 + 6);
                  v1125[8] = *((_QWORD *)v1131 + 7);
                  v1125[9] = *((_QWORD *)v1131 + 8);
                  v1125[10] = *((_QWORD *)v1131 + 9);
                  v1125[11] = *((_QWORD *)v1131 + 10);
                  v1125[12] = *((_QWORD *)v1131 + 11);
                  v1134 = *((_QWORD *)v1131 + 12);
                  *((_BYTE *)v1125 + 112) = v1131[104];
                  v1125[13] = v1134;
                  v1135 = (void *)(((unint64_t)v1125 + v1128) & v1132);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (__swift_getEnumTagSinglePayload((uint64_t)v1133, 1, v1373))
                  {
                    memcpy(v1135, v1133, v1445);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1355 + 16))(v1135, v1133, v1373);
                    __swift_storeEnumTagSinglePayload((uint64_t)v1135, 0, 1, v1373);
                  }
                  v89 = a1;
                  v84 = v1429;
                  v171 = v1130;
                  v130 = v1129;
                  goto LABEL_1266;
                }
              }
              memcpy(v1125, v1126, v1448);
              v84 = v1429;
LABEL_1266:
              v562 = 51;
              goto LABEL_1357;
            }
          }
          memcpy(v621, v622, v1441);
          goto LABEL_618;
        case 0x34:
          v171 = v129;
          *v129 = *v130;
          v172 = 52;
LABEL_265:
          *((_BYTE *)v129 + v1462) = v172;
          sub_21D7C4C20();
          v84 = v1429;
          goto LABEL_457;
        default:
          if (v1462 <= 3)
            v131 = v1462;
          else
            v131 = 4;
          __asm { BR              X12 }
          return result;
      }
    case 2:
      *a1 = *a2;
      v95 = 2;
      goto LABEL_127;
    case 3:
      *a1 = *a2;
      v95 = 3;
LABEL_127:
      *((_BYTE *)a1 + v84) = v95;
      sub_21D7C4C20();
      goto LABEL_1365;
    default:
      memcpy(a1, a2, v84 + 1);
      goto LABEL_1365;
  }
}

unint64_t sub_21CE9CE4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unsigned __int8 *v92;
  unint64_t v93;
  unsigned int v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  int v108;
  int EnumTagSinglePayload;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  BOOL v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  unint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  unint64_t v146;
  unint64_t v147;
  uint64_t v148;
  unint64_t v149;
  unint64_t v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  unint64_t v163;
  unint64_t v164;
  unint64_t v165;
  uint64_t v166;
  unint64_t v167;
  unint64_t v168;
  unint64_t v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  uint64_t v180;
  unint64_t v181;
  unint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  unint64_t v191;
  unint64_t v192;
  _QWORD *v193;
  uint64_t v194;
  unint64_t v195;
  uint64_t v196;
  unint64_t v197;
  unint64_t v198;
  unint64_t v199;
  uint64_t v200;
  unint64_t v201;
  uint64_t v202;
  unint64_t v203;
  unint64_t v204;
  uint64_t v205;
  uint64_t v206;
  unint64_t v207;
  unint64_t v208;
  int v209;
  unint64_t result;
  uint64_t v211;
  uint64_t v212;
  unint64_t v213;
  unint64_t v214;
  unint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  unint64_t v220;
  unint64_t v221;
  unint64_t v222;
  unint64_t v223;
  uint64_t v224;
  unint64_t v225;
  int v226;
  id *v227;
  unint64_t v228;
  unint64_t v229;
  int v230;
  uint64_t v231;
  int v232;
  int v233;
  unint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  unint64_t v238;
  id *v239;
  unint64_t v240;
  int v241;
  id *v242;
  unint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  int v247;
  unint64_t v248;
  uint64_t v249;
  id *v250;
  unint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  int v261;
  int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  int v267;
  uint64_t v268;
  int v269;
  int v270;
  int v271;
  int v272;
  int v273;
  int v274;
  int v275;
  int v276;
  int v277;
  int v278;
  int v279;
  int v280;
  int v281;
  int v282;
  int v283;
  int v284;
  unint64_t v285;
  unint64_t v286;
  int v287;
  unsigned int v288;
  unint64_t v289;
  unint64_t v290;
  int v291;
  unsigned int v292;
  uint64_t *v293;
  uint64_t v294;
  int v295;
  unint64_t v296;
  unint64_t v297;
  uint64_t v298;
  uint64_t v299;
  unsigned int v300;
  uint64_t v301;
  unint64_t v302;
  uint64_t v303;
  unint64_t v304;
  unint64_t v305;
  unint64_t v306;
  unsigned int v307;
  unint64_t v308;
  unint64_t v309;
  unint64_t v310;
  unint64_t v311;
  uint64_t v312;
  unint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  int v317;
  int v318;
  int v319;
  unsigned int v320;
  unint64_t v321;
  unint64_t v322;
  unint64_t v323;
  unint64_t v324;
  unint64_t v325;
  uint64_t v326;
  unint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  int v331;
  int v332;
  int v333;
  unint64_t v334;
  unint64_t v335;
  unint64_t v336;
  unint64_t v337;
  uint64_t v338;
  unint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  int v343;
  int v344;
  int v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  int v350;
  int v351;
  int v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  int v357;
  int v358;
  int v359;
  unint64_t v360;
  unint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  int v365;
  int v366;
  int v367;
  uint64_t v368;
  int v369;
  uint64_t v370;
  uint64_t *v371;
  uint64_t v372;
  int v373;
  unint64_t v374;
  unint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  int v379;
  int v380;
  int v381;
  unint64_t v382;
  unint64_t v383;
  uint64_t v384;
  unint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  int v389;
  int v390;
  int v391;
  uint64_t *v392;
  uint64_t v393;
  int v394;
  uint64_t *v395;
  uint64_t v396;
  int v397;
  unint64_t v398;
  unint64_t v399;
  unint64_t v400;
  unint64_t v401;
  uint64_t v402;
  unint64_t v403;
  uint64_t v404;
  unsigned __int8 *v405;
  unint64_t v406;
  unsigned int v407;
  uint64_t v408;
  unint64_t v409;
  unint64_t v410;
  unint64_t v411;
  uint64_t v412;
  unint64_t v413;
  unint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  int v418;
  int v419;
  int v420;
  unint64_t v421;
  unint64_t v422;
  unsigned __int8 *v423;
  uint64_t v424;
  unsigned int v425;
  uint64_t v426;
  unint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  int v431;
  int v432;
  unsigned int v433;
  uint64_t v434;
  char v435;
  uint64_t v436;
  uint64_t v437;
  unint64_t v438;
  unint64_t v439;
  unint64_t v440;
  unint64_t v441;
  unint64_t v442;
  unint64_t v443;
  unint64_t v444;
  int v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  unint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  unint64_t v463;
  uint64_t v464;
  unsigned int v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  unsigned int v474;
  unsigned int v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  unsigned int v479;
  uint64_t v480;
  unsigned int v481;
  uint64_t v482;
  uint64_t v483;
  unsigned int v484;
  uint64_t v485;
  uint64_t v486;
  unint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  unint64_t v494;
  uint64_t v495;
  unint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  unsigned int v500;
  uint64_t v501;
  uint64_t v502;
  unint64_t v503;
  unint64_t v504;
  unint64_t v505;
  unint64_t v506;
  unint64_t v507;
  unint64_t v508;
  unint64_t v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  unint64_t v515;
  unint64_t v516;
  uint64_t v517;
  unint64_t v518;
  unint64_t v519;
  unint64_t v520;
  unint64_t v521;
  unint64_t v522;
  uint64_t v523;
  unint64_t v524;
  uint64_t v525;
  uint64_t v526;
  unint64_t v527;
  unint64_t v528;
  uint64_t v529;
  unint64_t v530;
  unint64_t v531;
  uint64_t v532;
  uint64_t v533;
  unint64_t v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  unsigned int v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  unsigned int v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  unint64_t v549;
  unint64_t v550;
  unint64_t v551;
  uint64_t v552;
  unint64_t v553;
  uint64_t v554;
  unint64_t v555;
  uint64_t v556;
  unint64_t v557;
  uint64_t v558;
  uint64_t v559;
  int v560;
  unint64_t v561;
  unint64_t v562;
  unint64_t v563;
  uint64_t v564;
  unint64_t v565;
  uint64_t v566;
  unint64_t v567;
  uint64_t v568;
  unint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;

  v495 = *(_QWORD *)(a2 + 16);
  v493 = *(_QWORD *)(v495 - 8);
  v534 = *(_QWORD *)(v493 + 64);
  v514 = sub_21D7C4668();
  v2 = *(_QWORD *)(v514 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v538 = v3 + 16;
  v539 = *(_DWORD *)(v2 + 84);
  v489 = v2;
  v4 = *(_QWORD *)(v2 + 64);
  v467 = v4;
  if (v539)
    v5 = v4;
  else
    v5 = v4 + 1;
  v548 = v3 | 7;
  v486 = sub_21D7BF754();
  v6 = *(_QWORD *)(v486 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = v7 | 7;
  v9 = v3 | 7 | v7;
  v483 = sub_21D7C3840();
  v10 = *(_QWORD *)(v483 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v485 = sub_21D7C3804();
  v12 = *(_QWORD *)(v485 - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v14 = v13;
  v15 = v13 | v11;
  v16 = v9 | v15;
  v545 = v3;
  v542 = v3 + 40;
  v17 = *(_DWORD *)(v6 + 84);
  if (v17)
    v18 = v17 - 1;
  else
    v18 = 0;
  v481 = v18;
  if (v18 <= 0x7FFFFFFE)
    v19 = 2147483646;
  else
    v19 = v18;
  v560 = v19;
  v484 = *(_DWORD *)(v12 + 84);
  v479 = *(_DWORD *)(v10 + 84);
  if (v484 <= v479)
    v20 = *(_DWORD *)(v10 + 84);
  else
    v20 = *(_DWORD *)(v12 + 84);
  v543 = v20;
  v475 = *(_DWORD *)(v6 + 84);
  v480 = v7 + 113;
  v21 = (v7 + 113) & ~v7;
  v559 = v7;
  v471 = v6;
  v477 = v10;
  v478 = *(_QWORD *)(v485 - 8);
  v482 = *(_QWORD *)(v10 + 64) + v13;
  v554 = *(_QWORD *)(v12 + 64);
  if (v17)
    v22 = *(_QWORD *)(v6 + 64);
  else
    v22 = *(_QWORD *)(v6 + 64) + 1;
  v556 = v22;
  v488 = v16 + 1;
  v23 = (v16 + 1) & ~v16;
  v573 = v9 | v15;
  v549 = ((v3 + 40) & ~v3) + v5;
  v566 = v5;
  v567 = (v549 + 7) & 0xFFFFFFFFFFFFFFF8;
  v541 = v7 + 40;
  v526 = v22 + v21;
  v24 = v22 + v21 + ((v7 + 40 + ((((v567 + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v8);
  v513 = (v482 & ~v14) + v554;
  if (v20)
    v25 = (v482 & ~v14) + v554;
  else
    v25 = (v482 & ~v14) + v554 + 1;
  v552 = v25;
  v537 = v25 + 1;
  v26 = v25 + 1 + ((v15 + 160) & ~v15);
  if (v24 <= v26)
    v24 = v26;
  if (v24 <= 0x30)
    v24 = 48;
  v487 = v24;
  v530 = v24 + v23;
  v547 = v24 + v23 + 1;
  v502 = sub_21D7C3F6C();
  v27 = *(_QWORD *)(v502 - 8);
  v28 = *(unsigned __int8 *)(v27 + 80);
  v498 = (v28 | 7) + 58;
  v497 = v28 | 7;
  v29 = (v498 + ((v547 + (((v9 | v15) + v5 + ((v3 + 16) & ~v3)) & ~(v9 | v15)) + 11) & 0xFFFFFFFFFFFFFFF8)) & ~(v28 | 7);
  v500 = *(_DWORD *)(v27 + 84);
  v490 = v28 + 16;
  v499 = v28;
  v476 = v27;
  v30 = *(_QWORD *)(v27 + 64);
  if (!v500)
    ++v30;
  v31 = v30 + ((v28 + 16) & ~v28);
  v469 = sub_21D7C4314();
  v32 = *(_QWORD *)(v469 - 8);
  v33 = *(_DWORD *)(v32 + 80);
  v533 = v32;
  v571 = v14 | 7;
  v462 = sub_21D7BF964();
  v536 = *(_QWORD *)(v462 - 8);
  v558 = *(unsigned __int8 *)(v536 + 80);
  v564 = v9 | v15 | v14 | v33 | v558;
  v501 = v31;
  v528 = v564 + v31 + v29;
  v34 = v33 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v35 = *(_QWORD *)(v32 + 64) + ((v33 + 65) & ~(unint64_t)v33);
  v544 = v5 + 7;
  v36 = (v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v569 = (v37 + 23) & 0xFFFFFFFFFFFFFFF8;
  v470 = v14 + 8;
  v491 = v14;
  v38 = v554 + ((v14 + 8) & ~v14);
  if (v539)
    v39 = v539 - 1;
  else
    v39 = 0;
  v474 = v39;
  v445 = v560 - 1;
  if (v39 <= v560 - 1)
    v40 = v560 - 1;
  else
    v40 = v39;
  if (v40 <= 0x7FFFFFFF)
    v40 = 0x7FFFFFFF;
  v41 = v543 - 1;
  if (!v543)
    v41 = 0;
  if (v41 <= v40)
    v42 = v40;
  else
    v42 = v41;
  v465 = v42;
  v43 = (v567 + 23) & 0xFFFFFFFFFFFFFFF8;
  v524 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v561 = v37 + 17;
  v454 = v8 + 23;
  v510 = v33 + 16;
  v562 = *(_QWORD *)(v32 + 64) + ((v33 + 65) & ~(unint64_t)v33);
  v563 = v33 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v522 = (v35 + ((v510 + ((v569 + 15) & 0xFFFFFFFFFFFFFFF8)) & v34)) & 0xFFFFFFFFFFFFFFF8;
  v44 = v552 + v571;
  v45 = v38;
  v517 = v38;
  v46 = v38 + v8;
  v47 = (v38 + v8 + ((v552 + v571 + ((v15 + 16 + ((v522 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & ~v571)) & ~v8;
  v48 = (v524 + 47) & 0xFFFFFFFFFFFFFFF8;
  v49 = v36 + 40;
  v50 = (v573 + v49) & ~v573;
  v515 = v49 + v33;
  v540 = v526 + 7;
  v51 = (v526 + 7 + ((v49 + v559) & ~v8)) & 0xFFFFFFFFFFFFFFF8;
  v448 = v556 + v15;
  v52 = v552 + v15;
  v455 = v552 + v15 + 1;
  v53 = ((v38 + v8 + ((v552 + v571 + ((v455 + ((v556 + v15 + ((v37 + 16 + v559) & ~v559)) & ~v15)) & ~v15)) & ~v571)) & ~v8)
      + v526;
  v446 = v8 + 17;
  v519 = v526 + ((v8 + 17 + v567) & ~v8);
  v54 = (((v43 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v451 = v15 + 40;
  v55 = v552;
  v550 = ((v55
         + v15
         + ((v15
           + 40
           + ((((((v54 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & ~v15)
       + v55;
  v56 = (v569 + 23) & 0xFFFFFFFFFFFFFFF8;
  v557 = ((v56 + 47) & 0xFFFFFFFFFFFFFFF8) + 40;
  v57 = v552 + 7;
  v459 = v552 + 7 + ((v526 + v15 + ((v557 + v8) & ~v8)) & ~v15);
  v460 = v559 + 8;
  v58 = ((v559 + 8 + ((v459 + v50) & 0xFFFFFFFFFFFFFFF8)) & ~v8) + v526;
  v521 = (v51 + 23) & 0xFFFFFFFFFFFFFFF8;
  v450 = v15 + 18;
  v551 = ((v15 + 18 + v521) & ~v15) + v552;
  v555 = ((v8 + 23 + v37 + 17 + ((v538 + ((((v43 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v548)) & ~v8)
       + v526;
  v512 = v33;
  v447 = v33 + 8;
  v453 = v35 + v15;
  v457 = v15 + 9;
  v511 = v15 + 16;
  v461 = v552 + v8;
  v553 = ((v552
         + v8
         + ((v15
           + 16
           + ((v55
             + 7
             + ((v15
               + 9
               + ((((v55
                   + 7
                   + ((v35 + v15 + ((v447 + ((((v48 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v34)) & ~v15)) & 0xFFFFFFFFFFFFFFF8)
                 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & ~v8)
       + v526;
  v59 = v526 + v548;
  v60 = v48 + v548 + 16;
  v61 = v48 + 24 + ((v60 + ((v60 + ((v526 + v548 + v47) & ~v548)) & ~v548)) & ~v548);
  v452 = *(_QWORD *)(v536 + 64) + 7;
  v62 = ((v44
        + ((v526
          + v15
          + ((v541
            + ((v452 + ((v537 + *(unsigned __int8 *)(v536 + 80) + ((v37 + 16 + v15) & ~v15)) & ~v558)) & 0xFFFFFFFFFFFFFFF8)) & ~v8)) & ~v15)) & ~v571)
      + v45;
  v464 = v8 + 41;
  v468 = v526 + v15;
  v63 = ((((v57 + ((v526 + v15 + ((v8 + 41 + ((v569 + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v8)) & ~v15)) & 0xFFFFFFFFFFFFFFF8)
        + 47) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v458 = v63 + v573;
  v463 = v530 + 8;
  v64 = ((v573 + 8 + ((v530 + 8 + ((v63 + v573 + v50) & ~v573)) & 0xFFFFFFFFFFFFFFF8)) & ~v573) + v547;
  v65 = ((((((v51 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
  v66 = ((v35 + 7 + (v515 & v34)) & 0xFFFFFFFFFFFFFFF8) + 8;
  v527 = v526 + ((v559 + 8) & ~v8);
  if (v527 <= v61)
    v67 = v61;
  else
    v67 = v527;
  v504 = v62;
  if (v67 <= v62)
    v67 = v62;
  v509 = v63;
  if (v67 <= v63)
    v67 = v63;
  v508 = v64;
  if (v67 <= v64)
    v67 = v64;
  v506 = v65;
  if (v67 <= v65)
    v67 = v65;
  v516 = v53;
  if (v67 <= v53)
    v67 = v53;
  if (v67 <= (((((v549 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16)
    v67 = (((((v549 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v507 = v66;
  if (v67 <= v66)
    v67 = v66;
  v505 = v519 + 1;
  if (v67 <= v519 + 1)
    v67 = v519 + 1;
  v531 = v528 & ~v564;
  v68 = ((((v54 + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 41;
  v69 = v56 + 8;
  v449 = v15 + 24;
  v70 = (v44 + ((v15 + 24 + v522) & ~v15)) & ~v571;
  v523 = v46;
  v525 = v59;
  v529 = v48 + v548 + 16;
  v520 = v48 + 24;
  v71 = v48 + 24 + ((v60 + ((v60 + ((v59 + ((v46 + v70) & ~v8)) & ~v548)) & ~v548)) & ~v548);
  v72 = (v524 + 15) & 0xFFFFFFFFFFFFFFF8;
  v73 = v545;
  v74 = ((v73 + 80) & ~v73) + v566;
  v75 = ((v73 + 56) & ~v73) + v566;
  v76 = ((((v544 + ((v542 + (v57 & 0xFFFFFFFFFFFFFFF8)) & ~v545)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v472 = v57;
  v77 = ((v57
        + ((v15
          + 8
          + ((((((((((v521 + 25) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v78 = v569 + 40;
  v79 = v72 + 16;
  v80 = v72 + 8;
  v81 = v567 + 8;
  v82 = ((v567 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  v473 = v15 + 8;
  v466 = v52;
  v570 = v44;
  v456 = v517 + v571;
  v83 = v517 + 9;
  v568 = v8;
  v84 = ((v540
        + ((v541
          + ((((v517
              + 9
              + ((v517
                + v571
                + ((v44
                  + ((v52
                    + ((v15
                      + 8
                      + ((((((((v48 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                        + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & ~v15)) & ~v571)) & ~v571)) & 0xFFFFFFFFFFFFFFF8)
            + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v8)) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v518 = v68;
  if (v67 <= v68)
    v85 = v68;
  else
    v85 = v67;
  if (v85 <= v550)
    v85 = v550;
  if (v85 <= v69)
    v85 = v69;
  if (v85 <= v58)
    v85 = v58;
  if (v85 <= v561)
    v85 = v561;
  if (v85 <= v71)
    v85 = v71;
  v503 = v79;
  if (v85 <= v79)
    v85 = v79;
  if (v85 <= ((v549 + 9) & 0xFFFFFFFFFFFFFFF8) + 17)
    v85 = ((v549 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
  if (v85 <= v74)
    v85 = v74;
  if (v85 <= v75)
    v85 = v75;
  if (v85 <= v76)
    v85 = v76;
  if (v85 <= v551)
    v85 = v551;
  if (v85 <= v77)
    v85 = v77;
  if (v85 <= v78)
    v85 = v78;
  if (v85 <= v80)
    v85 = v80;
  if (v85 <= v557)
    v85 = v557;
  if (v85 <= v524 + 8)
    v85 = v524 + 8;
  if (v85 <= v81)
    v85 = v81;
  if (v85 <= v82)
    v85 = v82;
  if (v85 <= v549)
    v85 = v549;
  if (v85 <= v84)
    v85 = v84;
  if (v85 <= v555)
    v85 = v555;
  if (v85 <= v553)
    v85 = v553;
  if (v85 <= 8)
    v86 = 8;
  else
    v86 = v85;
  v87 = ((v531 + v86 + 8) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v87 <= v534)
    v87 = v534;
  if (v87 <= 8)
    v88 = 8;
  else
    v88 = v87;
  if (*(unsigned __int8 *)(a1 + v88) >= 4u)
  {
    if (v88 <= 3)
      v89 = v88;
    else
      v89 = 4;
    __asm { BR              X12 }
  }
  switch(*(_BYTE *)(a1 + v88))
  {
    case 0:
      (*(void (**)(uint64_t, uint64_t))(v493 + 8))(a1, v495);
      goto LABEL_390;
    case 1:
      v532 = v88;
      v433 = *(_DWORD *)(v533 + 84);
      v434 = v83;
      v438 = v84;
      v439 = v78;
      v440 = v71;
      v441 = v80;
      v442 = v69;
      v443 = v76;
      v444 = v74;
      v494 = v75;
      v496 = v81;
      v90 = ~v545;
      swift_bridgeObjectRelease();
      v91 = (a1 + v545 + 16) & ~v545;
      if (!__swift_getEnumTagSinglePayload(v91, 1, v514))
        (*(void (**)(uint64_t, uint64_t))(v489 + 8))(v91, v514);
      v535 = ~v8;
      v436 = ~v559;
      v546 = ~v15;
      v437 = ~v491;
      v492 = ~v573;
      v92 = (unsigned __int8 *)((v91 + v566 + v573) & ~v573);
      v435 = 8 * v513;
      if (*v92 > 2u)
        goto LABEL_161;
      v93 = (unint64_t)&v92[v488] & v492;
      v94 = *(unsigned __int8 *)(v93 + v487);
      if (v94 > 2)
        goto LABEL_161;
      if (v94 == 2)
      {
        if (*(_QWORD *)(((unint64_t)&v92[v488] & v492) + 8) >= 0xFFFFFFFFuLL)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(((unint64_t)&v92[v488] & v492) + 0x38))
            __swift_destroy_boxed_opaque_existential_1(v93 + 32);
        }
        v101 = (v93 + 79) & 0xFFFFFFFFFFFFFFF8;
        if (*(_QWORD *)(v101 + 8) >= 0xFFFFFFFFuLL)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(v101 + 56))
            __swift_destroy_boxed_opaque_existential_1(v101 + 32);
        }
        swift_bridgeObjectRelease();
        v102 = (((v101 + 79) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
        swift_bridgeObjectRelease();
        v103 = (v473 + v102) & v546;
        if (v543)
        {
          v104 = v484;
          if (v479 >= v484)
          {
            v105 = (v473 + v102) & v546;
            v104 = v479;
            v106 = v483;
          }
          else
          {
            v105 = (v482 + v103) & v437;
            v106 = v485;
          }
          EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v105, v104, v106);
        }
        else
        {
          if (!*(_BYTE *)(v103 + v513))
          {
LABEL_160:
            (*(void (**)(unint64_t, uint64_t))(v477 + 8))(v103, v483);
            (*(void (**)(unint64_t, uint64_t))(v478 + 8))((v482 + v103) & v437, v485);
            goto LABEL_161;
          }
          v107 = (*(unsigned __int8 *)(v103 + v513) - 1) << v435;
          if (v513 > 3)
            v107 = 0;
          if ((_DWORD)v513)
          {
            if (v513 <= 3)
              v108 = v513;
            else
              v108 = 4;
            __asm { BR              X11 }
          }
          EnumTagSinglePayload = v107 + 1;
        }
        if (EnumTagSinglePayload)
          goto LABEL_161;
        goto LABEL_160;
      }
      if (v94 != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_161;
      }
      __swift_destroy_boxed_opaque_existential_1((unint64_t)&v92[v488] & v492);
      v95 = (v542 + v93) & v90;
      if (!__swift_getEnumTagSinglePayload(v95, 1, v514))
        (*(void (**)(uint64_t, uint64_t))(v489 + 8))(v95, v514);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v96 = (((v544 + v95) & 0xFFFFFFFFFFFFFFF8) + 71) & 0xFFFFFFFFFFFFFFF8;
      swift_bridgeObjectRelease();
      v97 = (v96 + 23) & 0xFFFFFFFFFFFFFFF8;
      if (*(_QWORD *)(v97 + 24) >= 0xFFFFFFFFuLL)
        __swift_destroy_boxed_opaque_existential_1((v96 + 23) & 0xFFFFFFFFFFFFFFF8);
      v98 = (v541 + v97) & v535;
      if (v481 >= 0x7FFFFFFF)
      {
        v100 = (v480 + v98) & v436;
        if (__swift_getEnumTagSinglePayload(v100, v475, v486) > 1)
          goto LABEL_161;
        goto LABEL_146;
      }
      v99 = *(_QWORD *)(((v541 + v97) & v535) + 0x10);
      if (v99 >= 0xFFFFFFFF)
        LODWORD(v99) = -1;
      if ((int)v99 - 1 < 0)
      {
        v100 = (v480 + v98) & v436;
LABEL_146:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!__swift_getEnumTagSinglePayload(v100, 1, v486))
          (*(void (**)(uint64_t, uint64_t))(v471 + 8))(v100, v486);
      }
LABEL_161:
      v110 = (unint64_t)&v92[v547 + 11] & 0xFFFFFFFFFFFFFFF8;
      if (*(_QWORD *)(v110 + 24) >= 0xFFFFFFFFuLL)
      {
        __swift_destroy_boxed_opaque_existential_1((unint64_t)&v92[v547 + 11] & 0xFFFFFFFFFFFFFFF8);
        swift_bridgeObjectRelease();
      }
      v111 = ~v499;
      v112 = (v498 + v110) & ~v497;
      if (v500 >= 0x80000001)
      {
        v113 = (v490 + v112) & v111;
        if (__swift_getEnumTagSinglePayload(v113, v500, v502) <= 1)
        {
LABEL_167:
          swift_bridgeObjectRelease();
          if (!__swift_getEnumTagSinglePayload(v113, 1, v502))
            (*(void (**)(uint64_t, uint64_t))(v476 + 8))(v113, v502);
        }
      }
      else if (*(_QWORD *)(((v498 + v110) & ~v497) + 8) >= 0xFFFFFFFFuLL)
      {
        v113 = (v490 + v112) & v111;
        goto LABEL_167;
      }
      v114 = (v112 + v501 + v564) & ~v564;
      v116 = ~v512;
      v572 = ~v571;
      v117 = ~v548;
      v118 = v90;
      v565 = (v112 + v501 + v564) & ~v564;
      switch(*(_BYTE *)(v114 + v86))
      {
        case 0:
          if (!__swift_getEnumTagSinglePayload(v114, 1, v514))
            (*(void (**)(unint64_t, uint64_t))(v489 + 8))(v114, v514);
          __swift_destroy_boxed_opaque_existential_1((v544 + v114) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v122 = (v510
                + ((((((((v544 + v114) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8)
                  + 15) & 0xFFFFFFFFFFFFFFF8)) & v563;
          v121 = v523;
          if (v433 > 0x7FFFFFFE)
          {
            v126 = (v122 + 23) & 0xFFFFFFFFFFFFFFF8;
            v226 = __swift_getEnumTagSinglePayload((v512 + ((v126 + 23) & 0xFFFFFFFFFFFFFFF8) + 33) & v116, v433, v469);
            v125 = v562;
            if (v226)
              goto LABEL_422;
            goto LABEL_421;
          }
          LODWORD(v123) = -1;
          if (*(_QWORD *)(v122 + 8) < 0xFFFFFFFFuLL)
            v123 = *(_QWORD *)(v122 + 8);
          v124 = (v123 + 1) > 1;
          v125 = v562;
          if (!v124)
          {
            v126 = (v122 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_421:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v227 = (id *)((v126 + 47) & 0xFFFFFFFFFFFFFFF8);

            (*(void (**)(unint64_t, uint64_t))(v533 + 8))(((unint64_t)v227 + v512 + 9) & v116, v469);
            v125 = v562;
          }
LABEL_422:
          v228 = (v122 + v125) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v229 = (v511 + ((v228 + 23) & 0xFFFFFFFFFFFFFFF8)) & v546;
          if (v543)
            goto LABEL_455;
          v230 = v513;
          v231 = v539;
          if (!*(_BYTE *)(v229 + v513))
            goto LABEL_589;
          v232 = (*(unsigned __int8 *)(v229 + v513) - 1) << v435;
          if (v513 > 3)
            v232 = 0;
          if ((_DWORD)v513)
          {
            if (v513 <= 3)
              v233 = v513;
            else
              v233 = 4;
            __asm { BR              X11 }
          }
          goto LABEL_587;
        case 1:
        case 0x17:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v119 = (v480 + ((v568 + v114 + 8) & v535)) & v436;
          v120 = v527;
          v121 = v523;
          if (!__swift_getEnumTagSinglePayload(v119, 1, v486))
            goto LABEL_827;
          goto LABEL_318;
        case 2:
        case 6:
        case 7:
        case 0xB:
        case 0xE:
        case 0xF:
        case 0x12:
        case 0x19:
        case 0x1A:
        case 0x1B:
        case 0x1C:
        case 0x1F:
        case 0x2A:
        case 0x2C:
        case 0x2E:
        case 0x2F:
        case 0x30:
        case 0x31:
        case 0x34:
          goto LABEL_317;
        case 3:
          v127 = v437;
          if (!__swift_getEnumTagSinglePayload(v114, 1, v514))
            (*(void (**)(unint64_t, uint64_t))(v489 + 8))(v114, v514);
          v128 = (v544 + v114) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v128);
          swift_bridgeObjectRelease();
          v129 = (v511 + ((v128 + 47) & 0xFFFFFFFFFFFFFFF8)) & v546;
          v121 = v523;
          if (v543)
          {
            v130 = v484;
            if (v479 >= v484)
            {
              v131 = v129;
              v130 = v479;
              v132 = v483;
            }
            else
            {
              v131 = (v482 + v129) & v437;
              v132 = v485;
            }
            v276 = __swift_getEnumTagSinglePayload(v131, v130, v132);
          }
          else
          {
            if (!*(_BYTE *)(v129 + v513))
              goto LABEL_694;
            v256 = (*(unsigned __int8 *)(v129 + v513) - 1) << v435;
            if (v513 > 3)
              v256 = 0;
            if ((_DWORD)v513)
            {
              if (v513 <= 3)
                v257 = v513;
              else
                v257 = 4;
              __asm { BR              X11 }
            }
            v276 = v256 + 1;
          }
          if (v276)
            goto LABEL_695;
LABEL_694:
          (*(void (**)(unint64_t, uint64_t))(v477 + 8))(v129, v483);
          (*(void (**)(unint64_t, uint64_t))(v478 + 8))((v482 + v129) & v437, v485);
LABEL_695:
          v334 = (v537 + v558 + v129) & ~v558;
          (*(void (**)(unint64_t, uint64_t))(v536 + 8))(v334, v462);
          v335 = (v452 + v334) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v335 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v335);
          v336 = (v541 + v335) & v535;
          if (v481 >= 0x7FFFFFFF)
          {
            v338 = (v480 + v336) & v436;
            if (__swift_getEnumTagSinglePayload(v338, v475, v486) > 1)
              goto LABEL_705;
            goto LABEL_703;
          }
          v337 = *(_QWORD *)(((v541 + v335) & v535) + 0x10);
          if (v337 >= 0xFFFFFFFF)
            LODWORD(v337) = -1;
          if ((int)v337 - 1 < 0)
          {
            v338 = (v480 + v336) & v436;
LABEL_703:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!__swift_getEnumTagSinglePayload(v338, 1, v486))
              (*(void (**)(uint64_t, uint64_t))(v471 + 8))(v338, v486);
          }
LABEL_705:
          v339 = (v468 + v336) & v546;
          if (v543)
          {
            v340 = v484;
            if (v479 >= v484)
            {
              v341 = (v468 + v336) & v546;
              v340 = v479;
              v342 = v483;
            }
            else
            {
              v341 = (v482 + v339) & v437;
              v342 = v485;
            }
            v345 = __swift_getEnumTagSinglePayload(v341, v340, v342);
            v120 = v527;
          }
          else
          {
            v120 = v527;
            if (!*(_BYTE *)(v339 + v513))
              goto LABEL_778;
            v343 = (*(unsigned __int8 *)(v339 + v513) - 1) << v435;
            if (v513 > 3)
              v343 = 0;
            if ((_DWORD)v513)
            {
              if (v513 <= 3)
                v344 = v513;
              else
                v344 = 4;
              __asm { BR              X11 }
            }
            v345 = v343 + 1;
          }
          if (v345)
            goto LABEL_779;
LABEL_778:
          (*(void (**)(unint64_t, uint64_t))(v477 + 8))(v339, v483);
          (*(void (**)(unint64_t, uint64_t))(v478 + 8))((v482 + v339) & v437, v485);
LABEL_779:
          v193 = (_QWORD *)((v570 + v339) & v572);
          if ((v484 & 0x80000000) != 0)
          {
            v369 = __swift_getEnumTagSinglePayload(((unint64_t)v193 + v470) & v437, v484, v485);
          }
          else
          {
            v368 = *v193;
            if (*v193 >= 0xFFFFFFFFuLL)
              LODWORD(v368) = -1;
            v369 = v368 + 1;
          }
          if (v369)
            goto LABEL_318;
          swift_bridgeObjectRelease();
          v370 = v470;
          goto LABEL_838;
        case 4:
          if (!__swift_getEnumTagSinglePayload(v114, 1, v514))
            (*(void (**)(unint64_t, uint64_t))(v489 + 8))(v114, v514);
          v133 = (v544 + v114) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v133);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v134 = (((((v133 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
          v121 = v523;
          if (*(_QWORD *)(v134 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v134);
          v135 = (v464 + v134) & v535;
          if (v481 >= 0x7FFFFFFF)
          {
            v137 = (v480 + v135) & v436;
            if (__swift_getEnumTagSinglePayload(v137, v475, v486) > 1)
              goto LABEL_434;
            goto LABEL_432;
          }
          v136 = *(_QWORD *)(((v464 + v134) & v535) + 0x10);
          if (v136 >= 0xFFFFFFFF)
            LODWORD(v136) = -1;
          if ((int)v136 - 1 < 0)
          {
            v137 = (v480 + v135) & v436;
LABEL_432:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!__swift_getEnumTagSinglePayload(v137, 1, v486))
              (*(void (**)(uint64_t, uint64_t))(v471 + 8))(v137, v486);
          }
LABEL_434:
          v234 = (v468 + v135) & v546;
          if (v543)
          {
            v235 = v484;
            if (v479 >= v484)
            {
              v236 = (v468 + v135) & v546;
              v235 = v479;
              v237 = v483;
            }
            else
            {
              v236 = (v482 + v234) & v437;
              v237 = v485;
            }
            v283 = __swift_getEnumTagSinglePayload(v236, v235, v237);
            v120 = v527;
          }
          else
          {
            v120 = v527;
            if (!*(_BYTE *)(v234 + v513))
              goto LABEL_756;
            v271 = (*(unsigned __int8 *)(v234 + v513) - 1) << v435;
            if (v513 > 3)
              v271 = 0;
            if ((_DWORD)v513)
            {
              if (v513 <= 3)
                v272 = v513;
              else
                v272 = 4;
              __asm { BR              X11 }
            }
            v283 = v271 + 1;
          }
          if (v283)
            goto LABEL_757;
LABEL_756:
          (*(void (**)(unint64_t, uint64_t))(v477 + 8))(v234, v483);
          (*(void (**)(unint64_t, uint64_t))(v478 + 8))((v482 + v234) & v437, v485);
LABEL_757:
          v360 = (v472 + v234) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v360 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v360);
          goto LABEL_834;
        case 5:
          if (!__swift_getEnumTagSinglePayload(v114, 1, v514))
            (*(void (**)(unint64_t, uint64_t))(v489 + 8))(v114, v514);
          v138 = (v544 + v114) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v138);
          v139 = v573 + v138 + 40;
          v140 = ~v573;
          v141 = v139 & v492;
          if (v474 == v465)
          {
            v127 = v437;
            v142 = v539;
            v121 = v523;
            if (v539 < 2)
              goto LABEL_637;
            v143 = v139 & v492;
            v144 = v514;
LABEL_203:
            if (__swift_getEnumTagSinglePayload(v143, v142, v144) >= 2)
              goto LABEL_892;
            goto LABEL_637;
          }
          v238 = (v544 + v141) & 0xFFFFFFFFFFFFFFF8;
          if (v465 == 0x7FFFFFFF)
          {
            v127 = v437;
            v121 = v523;
            if (*(_QWORD *)(v238 + 24) < 0xFFFFFFFFuLL)
              goto LABEL_892;
          }
          else
          {
            v127 = v437;
            v285 = (v568
                  + ((((((v238 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                  + 65) & v535;
            if (v445 != v465)
            {
              v121 = v523;
              if (v543 < 2)
                goto LABEL_637;
              v143 = (v468 + v285) & v546;
              v142 = v484;
              if (v479 >= v484)
              {
                v142 = v479;
                v144 = v483;
              }
              else
              {
                v143 = (v482 + v143) & v437;
                v144 = v485;
              }
              goto LABEL_203;
            }
            v121 = v523;
            if (v481 > 0x7FFFFFFE)
            {
              v307 = __swift_getEnumTagSinglePayload((v480 + v285) & v436, v475, v486);
              if (v307 < 2)
                goto LABEL_637;
              v288 = v307 - 1;
            }
            else
            {
              v286 = *(_QWORD *)(v285 + 16);
              if (v286 >= 0xFFFFFFFF)
                LODWORD(v286) = -1;
              v287 = v286 - 1;
              if (v287 < 0)
                v287 = -1;
              v288 = v287 + 1;
            }
            if (v288 >= 2)
              goto LABEL_892;
          }
LABEL_637:
          if (!__swift_getEnumTagSinglePayload(v141, 1, v514))
            (*(void (**)(uint64_t, uint64_t))(v489 + 8))(v141, v514);
          __swift_destroy_boxed_opaque_existential_1((v544 + v141) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          v308 = (((((v544 + v141) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v309 = (v308 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v309 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1((v308 + 47) & 0xFFFFFFFFFFFFFFF8);
          v310 = (v464 + v309) & v535;
          if (v481 >= 0x7FFFFFFF)
          {
            v312 = (v480 + v310) & v436;
            if (__swift_getEnumTagSinglePayload(v312, v475, v486) > 1)
              goto LABEL_649;
            goto LABEL_647;
          }
          v311 = *(_QWORD *)(((v464 + v309) & v535) + 0x10);
          if (v311 >= 0xFFFFFFFF)
            LODWORD(v311) = -1;
          if ((int)v311 - 1 < 0)
          {
            v312 = (v480 + v310) & v436;
LABEL_647:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!__swift_getEnumTagSinglePayload(v312, 1, v486))
              (*(void (**)(uint64_t, uint64_t))(v471 + 8))(v312, v486);
          }
LABEL_649:
          v313 = (v468 + v310) & v546;
          if (v543)
          {
            v314 = v484;
            if (v479 >= v484)
            {
              v315 = (v468 + v310) & v546;
              v314 = v479;
              v316 = v483;
            }
            else
            {
              v315 = (v482 + v313) & v127;
              v316 = v485;
            }
            v319 = __swift_getEnumTagSinglePayload(v315, v314, v316);
          }
          else
          {
            if (!*(_BYTE *)(v313 + v513))
              goto LABEL_888;
            v317 = (*(unsigned __int8 *)(v313 + v513) - 1) << v435;
            if (v513 > 3)
              v317 = 0;
            if ((_DWORD)v513)
            {
              if (v513 <= 3)
                v318 = v513;
              else
                v318 = 4;
              __asm { BR              X11 }
            }
            v319 = v317 + 1;
          }
          if (v319)
            goto LABEL_889;
LABEL_888:
          (*(void (**)(unint64_t, uint64_t))(v477 + 8))(v313, v483);
          (*(void (**)(unint64_t, uint64_t))(v478 + 8))((v482 + v313) & v127, v485);
LABEL_889:
          v403 = (v472 + v313) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v403 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v403);
          swift_bridgeObjectRelease();
          v140 = ~v573;
LABEL_892:
          v404 = v140;
          v405 = (unsigned __int8 *)((v458 + v141) & v140);
          if (*v405 > 2u)
            goto LABEL_941;
          v406 = (unint64_t)&v405[v488] & v404;
          v407 = *(unsigned __int8 *)(v406 + v487);
          if (v407 > 2)
            goto LABEL_941;
          if (v407 != 2)
          {
            if (v407 != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v404 = ~v573;
              goto LABEL_941;
            }
            __swift_destroy_boxed_opaque_existential_1((unint64_t)&v405[v488] & v404);
            v408 = (v542 + v406) & v118;
            if (!__swift_getEnumTagSinglePayload(v408, 1, v514))
              (*(void (**)(uint64_t, uint64_t))(v489 + 8))(v408, v514);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v409 = (((((v544 + v408) & 0xFFFFFFFFFFFFFFF8) + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
            if (*(_QWORD *)(v409 + 24) >= 0xFFFFFFFFuLL)
              __swift_destroy_boxed_opaque_existential_1(v409);
            v410 = (v541 + v409) & v535;
            if (v481 >= 0x7FFFFFFF)
            {
              v412 = (v480 + v410) & v436;
              v404 = ~v573;
              if (__swift_getEnumTagSinglePayload(v412, v475, v486) > 1)
                goto LABEL_941;
            }
            else
            {
              v411 = *(_QWORD *)(((v541 + v409) & v535) + 0x10);
              if (v411 >= 0xFFFFFFFF)
                LODWORD(v411) = -1;
              v404 = ~v573;
              if ((int)v411 - 1 >= 0)
              {
LABEL_941:
                swift_bridgeObjectRelease();
                v423 = (unsigned __int8 *)((v573 + 8 + ((unint64_t)&v405[v463] & 0xFFFFFFFFFFFFFFF8)) & v404);
                v120 = v527;
                if (*v423 > 2u)
                  goto LABEL_318;
                v424 = (unint64_t)&v423[v488] & v492;
                v425 = *(unsigned __int8 *)(v424 + v487);
                if (v425 > 2)
                  goto LABEL_318;
                if (v425 != 2)
                {
                  if (v425 != 1)
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
LABEL_834:
                    swift_bridgeObjectRelease();
                    goto LABEL_318;
                  }
                  __swift_destroy_boxed_opaque_existential_1(v424);
                  v426 = (v542 + v424) & v118;
                  if (!__swift_getEnumTagSinglePayload(v426, 1, v514))
                    (*(void (**)(uint64_t, uint64_t))(v489 + 8))(v426, v514);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v248 = (((((v544 + v426) & 0xFFFFFFFFFFFFFFF8) + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
                  if (*(_QWORD *)(v248 + 24) >= 0xFFFFFFFFuLL)
                    __swift_destroy_boxed_opaque_existential_1(v248);
                  v249 = v541;
                  goto LABEL_820;
                }
                if (*(_QWORD *)(v424 + 8) >= 0xFFFFFFFFuLL)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (*(_QWORD *)(v424 + 56))
                    __swift_destroy_boxed_opaque_existential_1(v424 + 32);
                }
                v427 = (v424 + 79) & 0xFFFFFFFFFFFFFFF8;
                if (*(_QWORD *)(v427 + 8) >= 0xFFFFFFFFuLL)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (*(_QWORD *)(v427 + 56))
                    __swift_destroy_boxed_opaque_existential_1(v427 + 32);
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v193 = (_QWORD *)((v473 + ((((v427 + 79) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v546);
                if (v543)
                {
                  v428 = v484;
                  if (v479 >= v484)
                  {
                    v429 = (uint64_t)v193;
                    v428 = v479;
                    v430 = v483;
                  }
                  else
                  {
                    v429 = ((unint64_t)v193 + v482) & v127;
                    v430 = v485;
                  }
                  v280 = __swift_getEnumTagSinglePayload(v429, v428, v430);
                }
                else
                {
                  if (!*((_BYTE *)v193 + v513))
                    goto LABEL_837;
                  v431 = (*((unsigned __int8 *)v193 + v513) - 1) << v435;
                  if (v513 > 3)
                    v431 = 0;
                  if ((_DWORD)v513)
                  {
                    if (v513 <= 3)
                      v432 = v513;
                    else
                      v432 = 4;
                    __asm { BR              X11 }
                  }
                  v280 = v431 + 1;
                  v120 = v527;
                  v121 = v523;
                }
LABEL_836:
                if (v280)
                  goto LABEL_318;
LABEL_837:
                (*(void (**)(_QWORD *, uint64_t))(v477 + 8))(v193, v483);
                v370 = v482;
LABEL_838:
                v375 = ((unint64_t)v193 + v370) & v127;
LABEL_839:
                (*(void (**)(unint64_t, uint64_t))(v478 + 8))(v375, v485);
                goto LABEL_318;
              }
              v412 = (v480 + v410) & v436;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v404 = ~v573;
            if (!__swift_getEnumTagSinglePayload(v412, 1, v486))
              (*(void (**)(uint64_t, uint64_t))(v471 + 8))(v412, v486);
            goto LABEL_941;
          }
          if (*(_QWORD *)(((unint64_t)&v405[v488] & v404) + 8) >= 0xFFFFFFFFuLL)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(_QWORD *)(((unint64_t)&v405[v488] & v404) + 0x38))
              __swift_destroy_boxed_opaque_existential_1(v406 + 32);
          }
          v413 = (v406 + 79) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v413 + 8) >= 0xFFFFFFFFuLL)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(_QWORD *)(v413 + 56))
              __swift_destroy_boxed_opaque_existential_1(v413 + 32);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v414 = (v473 + ((((v413 + 79) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v546;
          if (v543)
          {
            v415 = v484;
            if (v479 >= v484)
            {
              v416 = v414;
              v415 = v479;
              v417 = v483;
            }
            else
            {
              v416 = (v482 + v414) & v127;
              v417 = v485;
            }
            v420 = __swift_getEnumTagSinglePayload(v416, v415, v417);
          }
          else
          {
            v404 = ~v573;
            if (!*(_BYTE *)(v414 + v513))
            {
LABEL_940:
              (*(void (**)(unint64_t, uint64_t))(v477 + 8))(v414, v483);
              (*(void (**)(unint64_t, uint64_t))(v478 + 8))((v482 + v414) & v127, v485);
              goto LABEL_941;
            }
            v418 = (*(unsigned __int8 *)(v414 + v513) - 1) << v435;
            if (v513 > 3)
              v418 = 0;
            if ((_DWORD)v513)
            {
              if (v513 <= 3)
                v419 = v513;
              else
                v419 = 4;
              __asm { BR              X11 }
            }
            v420 = v418 + 1;
            v121 = v523;
          }
          v404 = ~v573;
          if (v420)
            goto LABEL_941;
          goto LABEL_940;
        case 8:
          if (!__swift_getEnumTagSinglePayload(v114, 1, v514))
            (*(void (**)(unint64_t, uint64_t))(v489 + 8))(v114, v514);
          v145 = (v544 + v114) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v145);
          v146 = (v541 + v145) & v535;
          v121 = v523;
          if (v481 >= 0x7FFFFFFF)
          {
            v148 = (v480 + v146) & v436;
            if (__swift_getEnumTagSinglePayload(v148, v475, v486) > 1)
              goto LABEL_443;
            goto LABEL_441;
          }
          v147 = *(_QWORD *)(((v541 + v145) & v535) + 0x10);
          if (v147 >= 0xFFFFFFFF)
            LODWORD(v147) = -1;
          if ((int)v147 - 1 < 0)
          {
            v148 = (v480 + v146) & v436;
LABEL_441:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!__swift_getEnumTagSinglePayload(v148, 1, v486))
              (*(void (**)(uint64_t, uint64_t))(v471 + 8))(v148, v486);
          }
LABEL_443:
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(((((((v540 + v146) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                         + 8) >= 0xFFFFFFFFuLL)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          goto LABEL_883;
        case 9:
          if (!__swift_getEnumTagSinglePayload(v114, 1, v514))
            (*(void (**)(unint64_t, uint64_t))(v489 + 8))(v114, v514);
          v149 = (v544 + v114) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v149);
          swift_bridgeObjectRelease();
          v150 = (v559 + ((v149 + 47) & 0xFFFFFFFFFFFFFFF8) + 16) & v436;
          v121 = v523;
          if (!__swift_getEnumTagSinglePayload(v150, 1, v486))
            (*(void (**)(unint64_t, uint64_t))(v471 + 8))(v150, v486);
          v151 = (v448 + v150) & v546;
          if (v543)
          {
            v152 = v484;
            if (v479 >= v484)
            {
              v153 = v151;
              v152 = v479;
              v154 = v483;
            }
            else
            {
              v153 = (v482 + v151) & v437;
              v154 = v485;
            }
            v277 = __swift_getEnumTagSinglePayload(v153, v152, v154);
            v120 = v527;
          }
          else
          {
            v120 = v527;
            if (!*(_BYTE *)(v151 + v513))
              goto LABEL_720;
            v258 = (*(unsigned __int8 *)(v151 + v513) - 1) << v435;
            if (v513 > 3)
              v258 = 0;
            if ((_DWORD)v513)
            {
              if (v513 <= 3)
                v259 = v513;
              else
                v259 = 4;
              __asm { BR              X11 }
            }
            v277 = v258 + 1;
          }
          if (v277)
            goto LABEL_721;
LABEL_720:
          (*(void (**)(unint64_t, uint64_t))(v477 + 8))(v151, v483);
          (*(void (**)(unint64_t, uint64_t))(v478 + 8))((v482 + v151) & v437, v485);
LABEL_721:
          v346 = (v455 + v151) & v546;
          if (v543)
          {
            v347 = v484;
            if (v479 >= v484)
            {
              v348 = v346;
              v347 = v479;
              v349 = v483;
            }
            else
            {
              v348 = (v482 + v346) & v437;
              v349 = v485;
            }
            v352 = __swift_getEnumTagSinglePayload(v348, v347, v349);
          }
          else
          {
            if (!*(_BYTE *)(v346 + v513))
              goto LABEL_788;
            v350 = (*(unsigned __int8 *)(v346 + v513) - 1) << v435;
            if (v513 > 3)
              v350 = 0;
            if ((_DWORD)v513)
            {
              if (v513 <= 3)
                v351 = v513;
              else
                v351 = 4;
              __asm { BR              X11 }
            }
            v352 = v350 + 1;
          }
          if (v352)
            goto LABEL_789;
LABEL_788:
          (*(void (**)(uint64_t, uint64_t))(v477 + 8))(v346, v483);
          (*(void (**)(uint64_t, uint64_t))(v478 + 8))((v482 + v346) & v437, v485);
LABEL_789:
          v371 = (uint64_t *)((v570 + v346) & v572);
          if ((v484 & 0x80000000) != 0)
          {
            v373 = __swift_getEnumTagSinglePayload(((unint64_t)v371 + v470) & v437, v484, v485);
          }
          else
          {
            v372 = *v371;
            if ((unint64_t)*v371 >= 0xFFFFFFFF)
              LODWORD(v372) = -1;
            v373 = v372 + 1;
          }
          if (!v373)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v478 + 8))(((unint64_t)v371 + v470) & v437, v485);
          }
          v374 = (unint64_t)v371 + v523;
          goto LABEL_821;
        case 0xA:
          __swift_destroy_boxed_opaque_existential_1(v114);
          v155 = (v542 + v114) & v90;
          if (!__swift_getEnumTagSinglePayload(v155, 1, v514))
            (*(void (**)(uint64_t, uint64_t))(v489 + 8))(v155, v514);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_317;
        case 0xC:
          if (!__swift_getEnumTagSinglePayload(v114, 1, v514))
            (*(void (**)(unint64_t, uint64_t))(v489 + 8))(v114, v514);
          v156 = (v544 + v114) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v156);
          v157 = (v512 + v156 + 40) & v563;
          v121 = v523;
          if (v433 > 0x7FFFFFFE)
          {
            v159 = (v157 + 23) & 0xFFFFFFFFFFFFFFF8;
            if (__swift_getEnumTagSinglePayload((v512 + ((v159 + 23) & 0xFFFFFFFFFFFFFFF8) + 33) & v116, v433, v469))goto LABEL_883;
            goto LABEL_447;
          }
          LODWORD(v158) = -1;
          if (*(_QWORD *)(((v512 + v156 + 40) & v563) + 8) < 0xFFFFFFFFuLL)
            v158 = *(_QWORD *)(((v512 + v156 + 40) & v563) + 8);
          if ((v158 + 1) <= 1)
          {
            v159 = (v157 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_447:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v239 = (id *)((v159 + 47) & 0xFFFFFFFFFFFFFFF8);

            (*(void (**)(unint64_t, uint64_t))(v533 + 8))(((unint64_t)v239 + v512 + 9) & v116, v469);
            goto LABEL_883;
          }
          goto LABEL_883;
        case 0xD:
          __swift_destroy_boxed_opaque_existential_1(v114);
          v160 = (v542 + v114) & v90;
          if (!__swift_getEnumTagSinglePayload(v160, 1, v514))
            (*(void (**)(uint64_t, uint64_t))(v489 + 8))(v160, v514);
          swift_bridgeObjectRelease();
          v161 = (v446 + ((v544 + v160) & 0xFFFFFFFFFFFFFFF8)) & v535;
          v120 = v527;
          v121 = v523;
          if (v481 >= 0x7FFFFFFF)
            goto LABEL_232;
          goto LABEL_822;
        case 0x10:
          __swift_destroy_boxed_opaque_existential_1(v114);
          v162 = (v542 + v114) & v90;
          if (!__swift_getEnumTagSinglePayload(v162, 1, v514))
            (*(void (**)(uint64_t, uint64_t))(v489 + 8))(v162, v514);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v163 = (((((((v544 + v162) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8;
          v121 = v523;
          if (*(_QWORD *)(v163 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v163);
          v164 = (v163 + 47) & 0xFFFFFFFFFFFFFFF8;
          v120 = v527;
          if (*(_QWORD *)(v164 + 24) >= 0xFFFFFFFFuLL)
            goto LABEL_239;
          goto LABEL_240;
        case 0x11:
          __swift_destroy_boxed_opaque_existential_1(v114);
          v166 = (v542 + v114) & v90;
          if (!__swift_getEnumTagSinglePayload(v166, 1, v514))
            (*(void (**)(uint64_t, uint64_t))(v489 + 8))(v166, v514);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v167 = (((((((((v544 + v166) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                  + 23) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8;
          v121 = v523;
          if (*(_QWORD *)(v167 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v167);
          v168 = (v167 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v168 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v168);
          v169 = (v168 + 47) & 0xFFFFFFFFFFFFFFF8;
          v120 = v527;
          if (*(_QWORD *)(v169 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v169);
          v170 = (v451 + v169) & v546;
          if (v543)
          {
            v171 = v484;
            if (v479 >= v484)
            {
              v172 = v170;
              v171 = v479;
              v173 = v483;
            }
            else
            {
              v172 = (v482 + v170) & v437;
              v173 = v485;
            }
            v278 = __swift_getEnumTagSinglePayload(v172, v171, v173);
          }
          else
          {
            if (!*(_BYTE *)(v170 + v513))
              goto LABEL_736;
            v260 = (*(unsigned __int8 *)(v170 + v513) - 1) << v435;
            if (v513 > 3)
              v260 = 0;
            if ((_DWORD)v513)
            {
              if (v513 <= 3)
                v261 = v513;
              else
                v261 = 4;
              __asm { BR              X11 }
            }
            v278 = v260 + 1;
          }
          if (v278)
            goto LABEL_737;
LABEL_736:
          (*(void (**)(unint64_t, uint64_t))(v477 + 8))(v170, v483);
          (*(void (**)(unint64_t, uint64_t))(v478 + 8))((v482 + v170) & v437, v485);
LABEL_737:
          v353 = (v466 + v170) & v546;
          if (v543)
          {
            v354 = v484;
            if (v479 >= v484)
            {
              v355 = v353;
              v354 = v479;
              v356 = v483;
            }
            else
            {
              v355 = (v482 + v353) & v437;
              v356 = v485;
            }
            v359 = __swift_getEnumTagSinglePayload(v355, v354, v356);
          }
          else
          {
            if (!*(_BYTE *)(v353 + v513))
              goto LABEL_799;
            v357 = (*(unsigned __int8 *)(v353 + v513) - 1) << v435;
            if (v513 > 3)
              v357 = 0;
            if ((_DWORD)v513)
            {
              if (v513 <= 3)
                v358 = v513;
              else
                v358 = 4;
              __asm { BR              X11 }
            }
            v359 = v357 + 1;
          }
          if (v359)
            goto LABEL_318;
LABEL_799:
          (*(void (**)(uint64_t, uint64_t))(v477 + 8))(v353, v483);
          v375 = (v482 + v353) & v437;
          goto LABEL_839;
        case 0x13:
          if (!__swift_getEnumTagSinglePayload(v114, 1, v514))
            (*(void (**)(unint64_t, uint64_t))(v489 + 8))(v114, v514);
          __swift_destroy_boxed_opaque_existential_1((v544 + v114) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_317;
        case 0x14:
          if (!__swift_getEnumTagSinglePayload(v114, 1, v514))
            (*(void (**)(unint64_t, uint64_t))(v489 + 8))(v114, v514);
          v174 = (v544 + v114) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v174);
          v175 = (v573 + v174 + 40) & v492;
          v121 = v523;
          if (v474 == v465)
          {
            v176 = v539;
            if (v539 < 2)
              goto LABEL_665;
            v177 = (v573 + v174 + 40) & v492;
            v178 = v514;
LABEL_261:
            if (__swift_getEnumTagSinglePayload(v177, v176, v178) >= 2)
              goto LABEL_931;
            goto LABEL_665;
          }
          v240 = (v544 + v175) & 0xFFFFFFFFFFFFFFF8;
          if (v465 == 0x7FFFFFFF)
          {
            if (*(_QWORD *)(v240 + 24) < 0xFFFFFFFFuLL)
              goto LABEL_931;
          }
          else
          {
            v289 = (v541
                  + ((((((((v240 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                    + 47) & 0xFFFFFFFFFFFFFFF8)) & v535;
            if (v445 != v465)
            {
              if (v543 < 2)
                goto LABEL_665;
              v177 = (v468 + v289) & v546;
              v176 = v484;
              if (v479 >= v484)
              {
                v176 = v479;
                v178 = v483;
              }
              else
              {
                v177 = (v482 + v177) & v437;
                v178 = v485;
              }
              goto LABEL_261;
            }
            if (v481 > 0x7FFFFFFE)
            {
              v320 = __swift_getEnumTagSinglePayload((v480 + v289) & v436, v475, v486);
              if (v320 < 2)
                goto LABEL_665;
              v292 = v320 - 1;
            }
            else
            {
              v290 = *(_QWORD *)(v289 + 16);
              if (v290 >= 0xFFFFFFFF)
                LODWORD(v290) = -1;
              v291 = v290 - 1;
              if (v291 < 0)
                v291 = -1;
              v292 = v291 + 1;
            }
            if (v292 >= 2)
              goto LABEL_931;
          }
LABEL_665:
          if (!__swift_getEnumTagSinglePayload(v175, 1, v514))
            (*(void (**)(uint64_t, uint64_t))(v489 + 8))(v175, v514);
          __swift_destroy_boxed_opaque_existential_1((v544 + v175) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          v321 = (((((v544 + v175) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          v322 = (v321 + 23) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v322 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1((v321 + 23) & 0xFFFFFFFFFFFFFFF8);
          v323 = (v322 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v323 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v323);
          v324 = (v541 + v323) & v535;
          if (v481 >= 0x7FFFFFFF)
          {
            v326 = (v480 + v324) & v436;
            if (__swift_getEnumTagSinglePayload(v326, v475, v486) > 1)
              goto LABEL_679;
          }
          else
          {
            v325 = *(_QWORD *)(((v541 + v323) & v535) + 0x10);
            if (v325 >= 0xFFFFFFFF)
              LODWORD(v325) = -1;
            if ((int)v325 - 1 >= 0)
            {
LABEL_679:
              v327 = (v468 + v324) & v546;
              if (v543)
              {
                v328 = v484;
                if (v479 >= v484)
                {
                  v329 = (v468 + v324) & v546;
                  v328 = v479;
                  v330 = v483;
                }
                else
                {
                  v329 = (v482 + v327) & v437;
                  v330 = v485;
                }
                v333 = __swift_getEnumTagSinglePayload(v329, v328, v330);
              }
              else
              {
                if (!*(_BYTE *)(v327 + v513))
                  goto LABEL_930;
                v331 = (*(unsigned __int8 *)(v327 + v513) - 1) << v435;
                if (v513 > 3)
                  v331 = 0;
                if ((_DWORD)v513)
                {
                  if (v513 <= 3)
                    v332 = v513;
                  else
                    v332 = 4;
                  __asm { BR              X11 }
                }
                v333 = v331 + 1;
              }
              if (v333)
              {
LABEL_931:
                v421 = (v459 + v175) & 0xFFFFFFFFFFFFFFF8;
                swift_bridgeObjectRelease();
                v161 = (v460 + v421) & v535;
                if (v481 < 0x7FFFFFFF)
                {
                  v422 = *(_QWORD *)(((v460 + v421) & v535) + 0x10);
                  if (v422 >= 0xFFFFFFFF)
                    LODWORD(v422) = -1;
                  v120 = v527;
                  if ((int)v422 - 1 < 0)
                    goto LABEL_825;
                  goto LABEL_318;
                }
                v119 = (v480 + v161) & v436;
                v120 = v527;
                if (__swift_getEnumTagSinglePayload(v119, v475, v486) > 1)
                  goto LABEL_318;
LABEL_826:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v120 = v527;
                if (!__swift_getEnumTagSinglePayload(v119, 1, v486))
LABEL_827:
                  (*(void (**)(uint64_t, uint64_t))(v471 + 8))(v119, v486);
                goto LABEL_318;
              }
LABEL_930:
              (*(void (**)(unint64_t, uint64_t))(v477 + 8))(v327, v483);
              (*(void (**)(unint64_t, uint64_t))(v478 + 8))((v482 + v327) & v437, v485);
              goto LABEL_931;
            }
            v326 = (v480 + v324) & v436;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!__swift_getEnumTagSinglePayload(v326, 1, v486))
            (*(void (**)(uint64_t, uint64_t))(v471 + 8))(v326, v486);
          goto LABEL_679;
        case 0x15:
          if (!__swift_getEnumTagSinglePayload(v114, 1, v514))
            (*(void (**)(unint64_t, uint64_t))(v489 + 8))(v114, v514);
          goto LABEL_307;
        case 0x16:
          if (!__swift_getEnumTagSinglePayload(v114, 1, v514))
            (*(void (**)(unint64_t, uint64_t))(v489 + 8))(v114, v514);
          __swift_destroy_boxed_opaque_existential_1((v544 + v114) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v179 = (v510
                + ((((((((v544 + v114) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8)
                  + 15) & 0xFFFFFFFFFFFFFFF8)) & v563;
          v121 = v523;
          if (v433 > 0x7FFFFFFE)
          {
            v182 = (v179 + 23) & 0xFFFFFFFFFFFFFFF8;
            v241 = __swift_getEnumTagSinglePayload((v512 + ((v182 + 23) & 0xFFFFFFFFFFFFFFF8) + 33) & v116, v433, v469);
            v181 = v562;
            if (v241)
              goto LABEL_454;
            goto LABEL_453;
          }
          LODWORD(v180) = -1;
          if (*(_QWORD *)(v179 + 8) < 0xFFFFFFFFuLL)
            v180 = *(_QWORD *)(v179 + 8);
          v124 = (v180 + 1) > 1;
          v181 = v562;
          if (!v124)
          {
            v182 = (v179 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_453:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v242 = (id *)((v182 + 47) & 0xFFFFFFFFFFFFFFF8);

            (*(void (**)(unint64_t, uint64_t))(v533 + 8))(((unint64_t)v242 + v512 + 9) & v116, v469);
            v181 = v562;
          }
LABEL_454:
          v243 = (v179 + v181) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          v229 = (v449 + v243) & v546;
          if (v543)
          {
LABEL_455:
            v244 = v484;
            v231 = v539;
            if (v479 >= v484)
            {
              v245 = v229;
              v244 = v479;
              v246 = v483;
            }
            else
            {
              v245 = (v482 + v229) & v437;
              v246 = v485;
            }
            v247 = __swift_getEnumTagSinglePayload(v245, v244, v246);
          }
          else
          {
            v230 = v513;
            v231 = v539;
            if (!*(_BYTE *)(v229 + v513))
              goto LABEL_589;
            v232 = (*(unsigned __int8 *)(v229 + v513) - 1) << v435;
            if (v513 > 3)
              v232 = 0;
            if ((_DWORD)v513)
            {
              if (v513 <= 3)
                v273 = v513;
              else
                v273 = 4;
              __asm { BR              X11 }
            }
LABEL_587:
            v247 = (v230 | v232) + 1;
          }
          if (v247)
            goto LABEL_590;
LABEL_589:
          (*(void (**)(unint64_t, uint64_t))(v477 + 8))(v229, v483);
          (*(void (**)(unint64_t, uint64_t))(v478 + 8))((v482 + v229) & v437, v485);
LABEL_590:
          v293 = (uint64_t *)((v570 + v229) & v572);
          if ((v484 & 0x80000000) != 0)
          {
            v295 = __swift_getEnumTagSinglePayload(((unint64_t)v293 + v470) & v437, v484, v485);
          }
          else
          {
            v294 = *v293;
            if ((unint64_t)*v293 >= 0xFFFFFFFF)
              LODWORD(v294) = -1;
            v295 = v294 + 1;
          }
          if (!v295)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v478 + 8))(((unint64_t)v293 + v470) & v437, v485);
          }
          v296 = ((unint64_t)v293 + v121) & v535;
          if (v481 >= 0x7FFFFFFF)
          {
            v298 = (v480 + v296) & v436;
            if (__swift_getEnumTagSinglePayload(v298, v475, v486) > 1)
              goto LABEL_605;
            goto LABEL_603;
          }
          v297 = *(_QWORD *)((((unint64_t)v293 + v121) & v535) + 0x10);
          if (v297 >= 0xFFFFFFFF)
            LODWORD(v297) = -1;
          if ((int)v297 - 1 < 0)
          {
            v298 = (v480 + v296) & v436;
LABEL_603:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!__swift_getEnumTagSinglePayload(v298, 1, v486))
              (*(void (**)(uint64_t, uint64_t))(v471 + 8))(v298, v486);
          }
LABEL_605:
          v299 = (v525 + v296) & v117;
          if (v474 < 0x7FFFFFFF)
          {
            v120 = v527;
            if (*(_QWORD *)(((v544 + v299) & 0xFFFFFFFFFFFFF8) + 0x18) <= 0xFFFFFFFEuLL)
            {
              v301 = (v529 + v299) & v117;
              goto LABEL_617;
            }
          }
          else
          {
            v300 = __swift_getEnumTagSinglePayload((v525 + v296) & v117, v231, v514);
            v120 = v527;
            if (v300 >= 2)
            {
              v301 = (v529 + v299) & v117;
              goto LABEL_614;
            }
          }
          if (!__swift_getEnumTagSinglePayload(v299, 1, v514))
            (*(void (**)(uint64_t, uint64_t))(v489 + 8))(v299, v514);
          __swift_destroy_boxed_opaque_existential_1((v544 + v299) & 0xFFFFFFFFFFFFFFF8);
          v302 = (((v544 + v299) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v302 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v302);
          swift_bridgeObjectRelease();
          v301 = (v529 + v299) & v117;
          v120 = v527;
          if (v474 >= 0x7FFFFFFF)
          {
LABEL_614:
            if (__swift_getEnumTagSinglePayload(v301, v231, v514) >= 2)
            {
              v303 = (v529 + v301) & v117;
              goto LABEL_623;
            }
            goto LABEL_618;
          }
LABEL_617:
          if (*(_QWORD *)(((v544 + v301) & 0xFFFFFFFFFFFFF8) + 0x18) <= 0xFFFFFFFEuLL)
          {
            v303 = (v529 + v301) & v117;
            goto LABEL_626;
          }
LABEL_618:
          if (!__swift_getEnumTagSinglePayload(v301, 1, v514))
            (*(void (**)(uint64_t, uint64_t))(v489 + 8))(v301, v514);
          __swift_destroy_boxed_opaque_existential_1((v544 + v301) & 0xFFFFFFFFFFFFFFF8);
          v304 = (((v544 + v301) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v304 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v304);
          swift_bridgeObjectRelease();
          v303 = (v529 + v301) & v117;
          v120 = v527;
          if (v474 >= 0x7FFFFFFF)
          {
LABEL_623:
            if (__swift_getEnumTagSinglePayload(v303, v231, v514) >= 2)
              goto LABEL_632;
            goto LABEL_627;
          }
LABEL_626:
          if (*(_QWORD *)(((v544 + v303) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
            goto LABEL_632;
LABEL_627:
          if (!__swift_getEnumTagSinglePayload(v303, 1, v514))
            (*(void (**)(uint64_t, uint64_t))(v489 + 8))(v303, v514);
          v305 = (v544 + v303) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v305);
          v306 = (v305 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v306 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v306);
          swift_bridgeObjectRelease();
LABEL_632:
          v206 = v467;
          if (!(_DWORD)v231)
            goto LABEL_318;
LABEL_319:
          v207 = v520
               + ((v529
                 + ((v529
                   + ((v525
                     + ((v121
                       + ((v570
                         + ((v511
                           + ((((((v510
                                 + ((((((((v206 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                   + 15) & 0xFFFFFFFFFFFFFFF8)) & v563)
                               + v562) & 0xFFFFFFFFFFFFFFF8)
                             + 23) & 0xFFFFFFFFFFFFFFF8)) & v546)) & v572)) & v535)) & v117)) & v117)) & v117);
          if (v120 > v207)
            v207 = v120;
          if (v207 <= v504)
            v207 = v504;
          if (v207 <= v509)
            v207 = v509;
          if (v207 <= v508)
            v207 = v508;
          if (v207 <= v506)
            v207 = v506;
          if (v207 <= v516)
            v207 = v516;
          if (v207 <= (((((v549 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                     + 16)
            v207 = (((((v549 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
          if (v207 <= v507)
            v207 = v507;
          if (v207 <= v505)
            v207 = v505;
          if (v207 <= v518)
            v207 = v518;
          if (v207 <= v550)
            v207 = v550;
          if (v207 <= v442)
            v207 = v442;
          if (v207 <= v58)
            v207 = v58;
          if (v207 <= v561)
            v207 = v561;
          if (v207 <= v440)
            v207 = v440;
          if (v207 <= v120)
            v207 = v120;
          if (v207 <= v503)
            v207 = v503;
          if (v207 <= ((v549 + 9) & 0xFFFFFFFFFFFFFFF8) + 17)
            v207 = ((v549 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
          if (v207 <= v444)
            v207 = v444;
          if (v207 <= v494)
            v207 = v494;
          if (v207 <= v443)
            v207 = v443;
          if (v207 <= v551)
            v207 = v551;
          if (v207 <= v77)
            v207 = v77;
          if (v207 <= v439)
            v207 = v439;
          if (v207 <= v441)
            v207 = v441;
          if (v207 <= v557)
            v207 = v557;
          if (v207 <= v524 + 8)
            v207 = v524 + 8;
          if (v207 <= v496)
            v207 = v496;
          if (v207 <= v82)
            v207 = v82;
          if (v207 <= v549)
            v207 = v549;
          if (v207 <= v438)
            v207 = v438;
          if (v207 <= v555)
            v207 = v555;
          if (v207 <= v553)
            v207 = v553;
          if (v207 <= 8)
            v207 = 8;
          v208 = *(_QWORD *)((v565 + v207 + 8) & 0xFFFFFFFFFFFFF8);
          v209 = -1;
          if (v208 < 0xFFFFFFFF)
            v209 = v208;
          v88 = v532;
          if (v209 - 1 < 0)
LABEL_118:
            swift_bridgeObjectRelease();
LABEL_390:
          result = *(_QWORD *)((a1 + v88 + 8) & 0xFFFFFFFFFFFFF8);
          LODWORD(v211) = -1;
          if (result < 0xFFFFFFFF)
            v211 = *(_QWORD *)((a1 + v88 + 8) & 0xFFFFFFFFFFFFF8);
          if ((int)v211 - 1 < 0)
            return swift_bridgeObjectRelease();
          return result;
        case 0x18:
          if (!__swift_getEnumTagSinglePayload(v114, 1, v514))
            (*(void (**)(unint64_t, uint64_t))(v489 + 8))(v114, v514);
          __swift_destroy_boxed_opaque_existential_1((v544 + v114) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          goto LABEL_317;
        case 0x1D:
          __swift_destroy_boxed_opaque_existential_1(v114);
          v183 = (v542 + v114) & v90;
          if (!__swift_getEnumTagSinglePayload(v183, 1, v514))
            (*(void (**)(uint64_t, uint64_t))(v489 + 8))(v183, v514);
          goto LABEL_317;
        case 0x1E:
          __swift_destroy_boxed_opaque_existential_1(v114);
          swift_bridgeObjectRelease();
          v114 = (((v114 + 51) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          v184 = v538;
          goto LABEL_282;
        case 0x20:
          swift_bridgeObjectRelease();
          v114 = (v114 + 23) & 0xFFFFFFFFFFFFFFF8;
          goto LABEL_281;
        case 0x21:
          if (v543)
          {
            v186 = v484;
            v187 = v472;
            v188 = v437;
            if (v479 >= v484)
            {
              v189 = v114;
              v186 = v479;
              v190 = v483;
            }
            else
            {
              v189 = (v482 + v114) & v437;
              v190 = v485;
            }
            v279 = __swift_getEnumTagSinglePayload(v189, v186, v190);
            v120 = v527;
            v121 = v523;
          }
          else
          {
            v188 = v437;
            v120 = v527;
            v121 = v523;
            v187 = v472;
            if (!*(_BYTE *)(v114 + v513))
              goto LABEL_830;
            v262 = (*(unsigned __int8 *)(v114 + v513) - 1) << v435;
            if (v513 > 3)
              v262 = 0;
            if ((_DWORD)v513)
            {
              if (v513 <= 3)
                v263 = v513;
              else
                v263 = 4;
              __asm { BR              X11 }
            }
            v279 = v262 + 1;
          }
          if (v279)
            goto LABEL_831;
LABEL_830:
          (*(void (**)(unint64_t, uint64_t))(v477 + 8))(v114, v483);
          (*(void (**)(unint64_t, uint64_t))(v478 + 8))((v482 + v114) & v188, v485);
LABEL_831:
          v383 = (v187 + v114) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v383);
          v384 = (v542 + v383) & v118;
          if (!__swift_getEnumTagSinglePayload(v384, 1, v514))
            (*(void (**)(uint64_t, uint64_t))(v489 + 8))(v384, v514);
          swift_bridgeObjectRelease();
          goto LABEL_834;
        case 0x22:
          v127 = v437;
          if (!__swift_getEnumTagSinglePayload(v114, 1, v514))
            (*(void (**)(unint64_t, uint64_t))(v489 + 8))(v114, v514);
          v191 = (v544 + v114) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v191);
          v192 = (v541 + v191) & v535;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v121 = v523;
          if (!__swift_getEnumTagSinglePayload((v480 + v192) & v436, 1, v486))
            (*(void (**)(unint64_t, uint64_t))(v471 + 8))((v480 + v192) & v436, v486);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v193 = (_QWORD *)((v450 + ((((v540 + v192) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v546);
          if (v543)
          {
            v194 = v484;
            if (v479 >= v484)
            {
              v195 = (v450 + ((((v540 + v192) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v546;
              v194 = v479;
              v196 = v483;
            }
            else
            {
              v195 = ((unint64_t)v193 + v482) & v437;
              v196 = v485;
            }
            v280 = __swift_getEnumTagSinglePayload(v195, v194, v196);
            v120 = v527;
          }
          else
          {
            v120 = v527;
            if (!*((_BYTE *)v193 + v513))
              goto LABEL_837;
            v264 = (*((unsigned __int8 *)v193 + v513) - 1) << v435;
            if (v513 > 3)
              v264 = 0;
            if ((_DWORD)v513)
            {
              if (v513 <= 3)
                v265 = v513;
              else
                v265 = 4;
              __asm { BR              X11 }
            }
            v280 = v264 + 1;
          }
          goto LABEL_836;
        case 0x23:
          if (!__swift_getEnumTagSinglePayload(v114, 1, v514))
            (*(void (**)(unint64_t, uint64_t))(v489 + 8))(v114, v514);
          v197 = (v544 + v114) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v197);
          v198 = (v541 + v197) & v535;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v121 = v523;
          if (!__swift_getEnumTagSinglePayload((v480 + v198) & v436, 1, v486))
            (*(void (**)(unint64_t, uint64_t))(v471 + 8))((v480 + v198) & v436, v486);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v199 = (v473
                + ((((((((((((((v540 + v198) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 25) & 0xFFFFFFFFFFFFFFF8)
                        + 23) & 0xFFFFFFFFFFFFFFF8)
                      + 23) & 0xFFFFFFFFFFFFFFF8)
                    + 23) & 0xFFFFFFFFFFFFFFF8)
                  + 23) & 0xFFFFFFFFFFFFFFF8)) & v546;
          if (v543)
          {
            v200 = v484;
            if (v479 >= v484)
            {
              v201 = (v473
                    + ((((((((((((((v540 + v198) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 25) & 0xFFFFFFFFFFFFFFF8)
                            + 23) & 0xFFFFFFFFFFFFFFF8)
                          + 23) & 0xFFFFFFFFFFFFFFF8)
                        + 23) & 0xFFFFFFFFFFFFFFF8)
                      + 23) & 0xFFFFFFFFFFFFFFF8)) & v546;
              v200 = v479;
              v202 = v483;
            }
            else
            {
              v201 = (v482 + v199) & v437;
              v202 = v485;
            }
            v281 = __swift_getEnumTagSinglePayload(v201, v200, v202);
            v120 = v527;
          }
          else
          {
            v120 = v527;
            if (!*(_BYTE *)(v199 + v513))
              goto LABEL_752;
            v266 = (*(unsigned __int8 *)(v199 + v513) - 1) << v435;
            if (v513 > 3)
              v266 = 0;
            if ((_DWORD)v513)
            {
              if (v513 <= 3)
                v267 = v513;
              else
                v267 = 4;
              __asm { BR              X11 }
            }
            v281 = v266 + 1;
          }
          if (v281)
            goto LABEL_834;
LABEL_752:
          (*(void (**)(unint64_t, uint64_t))(v477 + 8))(v199, v483);
          (*(void (**)(unint64_t, uint64_t))(v478 + 8))((v482 + v199) & v437, v485);
          goto LABEL_834;
        case 0x24:
          if (!__swift_getEnumTagSinglePayload(v114, 1, v514))
            (*(void (**)(unint64_t, uint64_t))(v489 + 8))(v114, v514);
          v203 = (v544 + v114) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v203);
          swift_bridgeObjectRelease();
          v165 = (((v203 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
          v120 = v527;
          v121 = v523;
          if (*(_QWORD *)(v165 + 24) >= 0xFFFFFFFFuLL)
            goto LABEL_304;
          goto LABEL_318;
        case 0x25:
          if (!__swift_getEnumTagSinglePayload(v114, 1, v514))
            (*(void (**)(unint64_t, uint64_t))(v489 + 8))(v114, v514);
          goto LABEL_307;
        case 0x26:
          if (!__swift_getEnumTagSinglePayload(v114, 1, v514))
            (*(void (**)(unint64_t, uint64_t))(v489 + 8))(v114, v514);
          v204 = (v544 + v114) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v204);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v164 = (((((v204 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
          v120 = v527;
          v121 = v523;
          if (*(_QWORD *)(v164 + 24) < 0xFFFFFFFFuLL)
            goto LABEL_240;
LABEL_239:
          __swift_destroy_boxed_opaque_existential_1(v164);
LABEL_240:
          v165 = (v164 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v165 + 24) >= 0xFFFFFFFFuLL)
LABEL_304:
            __swift_destroy_boxed_opaque_existential_1(v165);
          goto LABEL_318;
        case 0x27:
          if (!__swift_getEnumTagSinglePayload(v114, 1, v514))
            (*(void (**)(unint64_t, uint64_t))(v489 + 8))(v114, v514);
LABEL_307:
          __swift_destroy_boxed_opaque_existential_1((v544 + v114) & 0xFFFFFFFFFFFFFFF8);
          goto LABEL_317;
        case 0x28:
          __swift_destroy_boxed_opaque_existential_1(v114);
          v205 = (v542 + v114) & v90;
          if (!__swift_getEnumTagSinglePayload(v205, 1, v514))
            (*(void (**)(uint64_t, uint64_t))(v489 + 8))(v205, v514);
          goto LABEL_317;
        case 0x29:
          __swift_destroy_boxed_opaque_existential_1(v114);
          v212 = (v542 + v114) & v90;
          if (!__swift_getEnumTagSinglePayload(v212, 1, v514))
            (*(void (**)(uint64_t, uint64_t))(v489 + 8))(v212, v514);
          swift_bridgeObjectRelease();
LABEL_317:
          swift_bridgeObjectRelease();
          v120 = v527;
          v121 = v523;
          goto LABEL_318;
        case 0x2B:
LABEL_281:
          __swift_destroy_boxed_opaque_existential_1(v114);
          v184 = v542;
LABEL_282:
          v185 = (v184 + v114) & v90;
          v120 = v527;
          v121 = v523;
          if (!__swift_getEnumTagSinglePayload(v185, 1, v514))
            (*(void (**)(uint64_t, uint64_t))(v489 + 8))(v185, v514);
          goto LABEL_318;
        case 0x2D:
          if (!__swift_getEnumTagSinglePayload(v114, 1, v514))
            (*(void (**)(unint64_t, uint64_t))(v489 + 8))(v114, v514);
          v213 = (v544 + v114) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v213);
          v214 = (v213 + 47) & 0xFFFFFFFFFFFFFFF8;
          v121 = v523;
          if (*(_QWORD *)(v214 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v214);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v215 = (v473
                + ((((((((((v214 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                    + 23) & 0xFFFFFFFFFFFFFFF8)
                  + 47) & 0xFFFFFFFFFFFFFFF8)) & v546;
          if (v543)
          {
            v216 = v484;
            if (v479 >= v484)
            {
              v217 = v215;
              v216 = v479;
              v218 = v483;
            }
            else
            {
              v217 = (v482 + v215) & v437;
              v218 = v485;
            }
            v282 = __swift_getEnumTagSinglePayload(v217, v216, v218);
            v268 = v434;
          }
          else
          {
            v268 = v434;
            if (!*(_BYTE *)(v215 + v513))
              goto LABEL_842;
            v269 = (*(unsigned __int8 *)(v215 + v513) - 1) << v435;
            if (v513 > 3)
              v269 = 0;
            if ((_DWORD)v513)
            {
              if (v513 <= 3)
                v270 = v513;
              else
                v270 = 4;
              __asm { BR              X11 }
            }
            v282 = v269 + 1;
          }
          if (v282)
            goto LABEL_843;
LABEL_842:
          (*(void (**)(unint64_t, uint64_t))(v477 + 8))(v215, v483);
          (*(void (**)(unint64_t, uint64_t))(v478 + 8))((v482 + v215) & v437, v485);
          v268 = v434;
LABEL_843:
          v385 = (v466 + v215) & v546;
          if (v543)
          {
            v386 = v484;
            if (v479 >= v484)
            {
              v387 = v385;
              v386 = v479;
              v388 = v483;
            }
            else
            {
              v387 = (v482 + v385) & v437;
              v388 = v485;
            }
            v391 = __swift_getEnumTagSinglePayload(v387, v386, v388);
            v268 = v434;
          }
          else
          {
            if (!*(_BYTE *)(v385 + v513))
              goto LABEL_858;
            v389 = (*(unsigned __int8 *)(v385 + v513) - 1) << v435;
            if (v513 > 3)
              v389 = 0;
            if ((_DWORD)v513)
            {
              if (v513 <= 3)
                v390 = v513;
              else
                v390 = 4;
              __asm { BR              X11 }
            }
            v391 = v389 + 1;
          }
          if (v391)
            goto LABEL_859;
LABEL_858:
          (*(void (**)(unint64_t, uint64_t))(v477 + 8))(v385, v483);
          (*(void (**)(unint64_t, uint64_t))(v478 + 8))((v482 + v385) & v437, v485);
          v268 = v434;
LABEL_859:
          v392 = (uint64_t *)((v570 + v385) & v572);
          if ((v484 & 0x80000000) != 0)
          {
            v394 = __swift_getEnumTagSinglePayload(((unint64_t)v392 + v470) & v437, v484, v485);
            v268 = v434;
          }
          else
          {
            v393 = *v392;
            if ((unint64_t)*v392 >= 0xFFFFFFFF)
              LODWORD(v393) = -1;
            v394 = v393 + 1;
          }
          if (!v394)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v478 + 8))(((unint64_t)v392 + v470) & v437, v485);
            v268 = v434;
          }
          v395 = (uint64_t *)(((unint64_t)v392 + v456) & v572);
          if ((v484 & 0x80000000) != 0)
          {
            v397 = __swift_getEnumTagSinglePayload(((unint64_t)v395 + v470) & v437, v484, v485);
            v268 = v434;
          }
          else
          {
            v396 = *v395;
            if ((unint64_t)*v395 >= 0xFFFFFFFF)
              LODWORD(v396) = -1;
            v397 = v396 + 1;
          }
          if (!v397)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v478 + 8))(((unint64_t)v395 + v470) & v437, v485);
            v268 = v434;
          }
          v398 = ((unint64_t)v395 + v268) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v399 = (v398 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v399 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v399);
          v400 = (v541 + v399) & v535;
          if (v481 >= 0x7FFFFFFF)
          {
            v402 = (v480 + v400) & v436;
            if (__swift_getEnumTagSinglePayload(v402, v475, v486) > 1)
              goto LABEL_883;
          }
          else
          {
            v401 = *(_QWORD *)(((v541 + v399) & v535) + 0x10);
            if (v401 >= 0xFFFFFFFF)
              LODWORD(v401) = -1;
            if ((int)v401 - 1 >= 0)
            {
LABEL_883:
              swift_bridgeObjectRelease();
              v120 = v527;
              goto LABEL_318;
            }
            v402 = (v480 + v400) & v436;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!__swift_getEnumTagSinglePayload(v402, 1, v486))
            (*(void (**)(uint64_t, uint64_t))(v471 + 8))(v402, v486);
          goto LABEL_883;
        case 0x32:
          __swift_destroy_boxed_opaque_existential_1(v114);
          v219 = (v542 + v114) & v90;
          if (!__swift_getEnumTagSinglePayload(v219, 1, v514))
            (*(void (**)(uint64_t, uint64_t))(v489 + 8))(v219, v514);
          swift_bridgeObjectRelease();
          v220 = (((v544 + v219) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
          v121 = v523;
          if (*(_QWORD *)(v220 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v220);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v221 = (v538 + ((((v220 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v117;
          if (v474 < 0x7FFFFFFF)
          {
            v120 = v527;
            if (*(_QWORD *)(((v544 + v221) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
              goto LABEL_463;
          }
          else
          {
            v120 = v527;
            if (__swift_getEnumTagSinglePayload(v221, v539, v514) >= 2)
              goto LABEL_463;
          }
          if (!__swift_getEnumTagSinglePayload(v221, 1, v514))
            (*(void (**)(unint64_t, uint64_t))(v489 + 8))(v221, v514);
          __swift_destroy_boxed_opaque_existential_1((v544 + v221) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          v120 = v527;
LABEL_463:
          v248 = v221 + v561;
          swift_bridgeObjectRelease();
          v249 = v454;
          goto LABEL_820;
        case 0x33:
          if (!__swift_getEnumTagSinglePayload(v114, 1, v514))
            (*(void (**)(unint64_t, uint64_t))(v489 + 8))(v114, v514);
          __swift_destroy_boxed_opaque_existential_1((v544 + v114) & 0xFFFFFFFFFFFFFFF8);
          v222 = (((v544 + v114) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
          v121 = v523;
          if (*(_QWORD *)(v222 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v222);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v223 = (v447
                + ((((((v222 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v563;
          if (v433 > 0x7FFFFFFE)
          {
            v225 = (v223 + 23) & 0xFFFFFFFFFFFFFFF8;
            if (__swift_getEnumTagSinglePayload((v512 + ((v225 + 23) & 0xFFFFFFFFFFFFFFF8) + 33) & v116, v433, v469))goto LABEL_466;
            goto LABEL_465;
          }
          LODWORD(v224) = -1;
          if (*(_QWORD *)(((v447
                           + ((((((v222 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v563)
                         + 8) < 0xFFFFFFFFuLL)
            v224 = *(_QWORD *)(((v447
                               + ((((((v222 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v563)
                             + 8);
          if ((v224 + 1) <= 1)
          {
            v225 = (v223 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_465:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v250 = (id *)((v225 + 47) & 0xFFFFFFFFFFFFFFF8);

            (*(void (**)(unint64_t, uint64_t))(v533 + 8))(((unint64_t)v250 + v512 + 9) & v116, v469);
          }
LABEL_466:
          v251 = (v453 + v223) & v546;
          if (v543)
          {
            v252 = v484;
            v120 = v527;
            v253 = v472;
            if (v479 >= v484)
            {
              v254 = v251;
              v252 = v479;
              v255 = v483;
            }
            else
            {
              v254 = (v482 + v251) & v437;
              v255 = v485;
            }
            v284 = __swift_getEnumTagSinglePayload(v254, v252, v255);
          }
          else
          {
            v120 = v527;
            v253 = v472;
            if (!*(_BYTE *)(v251 + v513))
            {
LABEL_762:
              (*(void (**)(unint64_t, uint64_t))(v477 + 8))(v251, v483);
              (*(void (**)(unint64_t, uint64_t))(v478 + 8))((v482 + v251) & v437, v485);
LABEL_763:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v361 = (v457 + ((((v253 + v251) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v546;
              if (v543)
              {
                v362 = v484;
                if (v479 >= v484)
                {
                  v363 = v361;
                  v362 = v479;
                  v364 = v483;
                }
                else
                {
                  v363 = (v482 + v361) & v437;
                  v364 = v485;
                }
                v367 = __swift_getEnumTagSinglePayload(v363, v362, v364);
              }
              else
              {
                if (!*(_BYTE *)(v361 + v513))
                {
LABEL_802:
                  (*(void (**)(unint64_t, uint64_t))(v477 + 8))(v361, v483);
                  (*(void (**)(unint64_t, uint64_t))(v478 + 8))((v482 + v361) & v437, v485);
LABEL_803:
                  swift_bridgeObjectRelease();
                  v248 = (v511 + ((v253 + v361) & 0xFFFFFFFFFFFFFFF8)) & v546;
                  if (v543)
                  {
                    v376 = v479;
                    if (v479 >= v484)
                    {
                      v377 = v248;
                      v378 = v483;
                    }
                    else
                    {
                      v376 = v484;
                      v377 = (v482 + v248) & v437;
                      v378 = v485;
                    }
                    v381 = __swift_getEnumTagSinglePayload(v377, v376, v378);
                  }
                  else
                  {
                    if (!*(_BYTE *)(v248 + v513))
                      goto LABEL_818;
                    v379 = (*(unsigned __int8 *)(v248 + v513) - 1) << v435;
                    if (v513 > 3)
                      v379 = 0;
                    if ((_DWORD)v513)
                    {
                      if (v513 <= 3)
                        v380 = v513;
                      else
                        v380 = 4;
                      __asm { BR              X11 }
                    }
                    v381 = v379 + 1;
                  }
                  if (v381)
                  {
LABEL_819:
                    v249 = v461;
LABEL_820:
                    v374 = v249 + v248;
LABEL_821:
                    v161 = v374 & v535;
                    if (v481 < 0x7FFFFFFF)
                    {
LABEL_822:
                      v382 = *(_QWORD *)(v161 + 16);
                      if (v382 >= 0xFFFFFFFF)
                        LODWORD(v382) = -1;
                      if ((int)v382 - 1 < 0)
                      {
LABEL_825:
                        v119 = (v480 + v161) & v436;
                        goto LABEL_826;
                      }
LABEL_318:
                      v206 = v566;
                      goto LABEL_319;
                    }
LABEL_232:
                    v119 = (v480 + v161) & v436;
                    if (__swift_getEnumTagSinglePayload(v119, v475, v486) > 1)
                      goto LABEL_318;
                    goto LABEL_826;
                  }
LABEL_818:
                  (*(void (**)(unint64_t, uint64_t))(v477 + 8))(v248, v483);
                  (*(void (**)(unint64_t, uint64_t))(v478 + 8))((v482 + v248) & v437, v485);
                  goto LABEL_819;
                }
                v365 = (*(unsigned __int8 *)(v361 + v513) - 1) << v435;
                if (v513 > 3)
                  v365 = 0;
                if ((_DWORD)v513)
                {
                  if (v513 <= 3)
                    v366 = v513;
                  else
                    v366 = 4;
                  __asm { BR              X11 }
                }
                v367 = v365 + 1;
              }
              if (v367)
                goto LABEL_803;
              goto LABEL_802;
            }
            v274 = (*(unsigned __int8 *)(v251 + v513) - 1) << v435;
            if (v513 > 3)
              v274 = 0;
            if ((_DWORD)v513)
            {
              if (v513 <= 3)
                v275 = v513;
              else
                v275 = 4;
              __asm { BR              X11 }
            }
            v284 = v274 + 1;
          }
          if (v284)
            goto LABEL_763;
          goto LABEL_762;
        default:
          if (v86 <= 3)
            v115 = v86;
          else
            v115 = 4;
          __asm { BR              X12 }
          return result;
      }
    case 2:
    case 3:
      goto LABEL_118;
    default:
      goto LABEL_390;
  }
}

_QWORD *sub_21CEA206C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  size_t v5;
  size_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  unsigned int v19;
  int v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  size_t v29;
  size_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  size_t v38;
  size_t v39;
  unsigned int v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  size_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  size_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  size_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  size_t v87;
  size_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  const void *v99;
  size_t v100;
  size_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  _BYTE *v105;
  unsigned __int8 *v106;
  unsigned int v107;
  _QWORD *v108;
  __int128 *v109;
  unsigned int v110;
  uint64_t v111;
  void *v112;
  const void *v113;
  void *v114;
  __int128 *v115;
  size_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _BYTE *v120;
  unsigned __int8 *v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  _QWORD *v132;
  unint64_t v133;
  uint64_t v134;
  const void *v135;
  unsigned int v136;
  void *v137;
  size_t v138;
  uint64_t v139;
  size_t v140;
  _QWORD *v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  _QWORD *v149;
  unint64_t v150;
  unint64_t v151;
  unint64_t v152;
  unint64_t v153;
  unint64_t v154;
  unint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  _QWORD *v158;
  unint64_t v159;
  unint64_t v160;
  unint64_t v161;
  __int128 v162;
  __int128 v163;
  _BYTE *v164;
  _QWORD *v165;
  unint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  void *v172;
  const void *v173;
  size_t v174;
  _QWORD *v175;
  uint64_t v176;
  _QWORD *v177;
  uint64_t v178;
  uint64_t v179;
  void *v180;
  const void *v181;
  char v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void *v187;
  const void *v188;
  size_t v189;
  uint64_t v190;
  void *v191;
  const void *v192;
  uint64_t v193;
  void *v194;
  const void *v195;
  _QWORD *v196;
  uint64_t v197;
  void *v198;
  const void *v199;
  _QWORD *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  void *v204;
  const void *v205;
  uint64_t v206;
  char *v207;
  const void *v208;
  size_t v209;
  uint64_t v210;
  _QWORD *v211;
  _QWORD *v212;
  _QWORD *v213;
  _QWORD *v214;
  _QWORD *v215;
  void *v216;
  const void *v217;
  uint64_t v218;
  unint64_t v219;
  _QWORD *v220;
  unint64_t v221;
  uint64_t v222;
  void (*v223)(unint64_t, unint64_t, uint64_t);
  void *v224;
  const void *v225;
  uint64_t v226;
  uint64_t v227;
  unint64_t v228;
  uint64_t v229;
  size_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  void *v234;
  const void *v235;
  uint64_t v236;
  void *v237;
  const void *v238;
  uint64_t v239;
  void *v240;
  const void *v241;
  uint64_t v242;
  uint64_t v243;
  void *v244;
  const void *v245;
  size_t v246;
  uint64_t v247;
  _QWORD *v248;
  unint64_t v249;
  uint64_t v250;
  unint64_t v251;
  uint64_t v252;
  _QWORD *result;
  __int128 v254;
  __int128 v255;
  unint64_t v256;
  __int128 *v257;
  __int128 v258;
  __int128 v259;
  _QWORD *v260;
  _QWORD *v261;
  _QWORD *v262;
  _QWORD *v263;
  _BYTE *v264;
  unsigned __int8 *v265;
  uint64_t v266;
  const void *v267;
  uint64_t v268;
  uint64_t v269;
  int v270;
  int v271;
  int v272;
  int EnumTagSinglePayload;
  unint64_t v274;
  unint64_t v275;
  uint64_t v276;
  _QWORD *v277;
  _QWORD *v278;
  _QWORD *v279;
  _QWORD *v280;
  _QWORD *v281;
  _QWORD *v282;
  _QWORD *v283;
  _QWORD *v284;
  unint64_t v285;
  size_t v286;
  _QWORD *v287;
  unint64_t v288;
  int v289;
  unint64_t v290;
  _QWORD *v291;
  unint64_t v292;
  unint64_t v293;
  unint64_t v294;
  void *v295;
  uint64_t v296;
  uint64_t v297;
  void (*v298)(uint64_t, uint64_t, uint64_t);
  id v299;
  unint64_t v300;
  unint64_t v301;
  _QWORD *v302;
  _QWORD *v303;
  void *v304;
  _BYTE *v305;
  size_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  char v310;
  unint64_t v311;
  uint64_t v312;
  unint64_t v313;
  unint64_t v314;
  uint64_t v315;
  _QWORD *v316;
  _QWORD *v317;
  void *v318;
  _BYTE *v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  unint64_t v323;
  unint64_t v324;
  uint64_t v325;
  _QWORD *v326;
  _QWORD *v327;
  _QWORD *v328;
  _QWORD *v329;
  unint64_t v330;
  unint64_t v331;
  unint64_t v332;
  unint64_t v333;
  unint64_t v334;
  __int128 v335;
  __int128 v336;
  unint64_t v337;
  uint64_t v338;
  size_t v339;
  _BYTE *v340;
  _QWORD *v341;
  unint64_t v342;
  _QWORD *v343;
  uint64_t v344;
  uint64_t v345;
  const void *v346;
  uint64_t v347;
  void *v348;
  unint64_t v349;
  unint64_t v350;
  uint64_t v351;
  void *v352;
  const void *v353;
  unint64_t v354;
  uint64_t v355;
  size_t v356;
  uint64_t v357;
  uint64_t v358;
  unint64_t v359;
  unint64_t v360;
  unint64_t v361;
  uint64_t v362;
  unint64_t v363;
  unint64_t v364;
  unint64_t v365;
  char *v366;
  uint64_t v367;
  uint64_t v368;
  const void *v369;
  uint64_t v370;
  void *v371;
  unint64_t v372;
  unint64_t v373;
  uint64_t v374;
  _QWORD *v375;
  _QWORD *v376;
  void *v377;
  const void *v378;
  unint64_t v379;
  unint64_t v380;
  _QWORD *v381;
  _QWORD *v382;
  _QWORD *v383;
  _QWORD *v384;
  _QWORD *v385;
  unint64_t v386;
  unint64_t v387;
  uint64_t v388;
  _QWORD *v389;
  _QWORD *v390;
  unint64_t v391;
  size_t v392;
  _QWORD *v393;
  unint64_t v394;
  int v395;
  unint64_t v396;
  unint64_t v397;
  _QWORD *v398;
  _QWORD *v399;
  unint64_t v400;
  char *v401;
  uint64_t v402;
  uint64_t v403;
  const void *v404;
  uint64_t v405;
  void *v406;
  _QWORD *v407;
  _QWORD *v408;
  _QWORD *v409;
  _QWORD *v410;
  _QWORD *v411;
  _QWORD *v412;
  unint64_t v413;
  unint64_t v414;
  unint64_t v415;
  __int128 v416;
  __int128 v417;
  unint64_t v418;
  unint64_t v419;
  unint64_t v420;
  __int128 v421;
  __int128 v422;
  unint64_t v423;
  unint64_t v424;
  unint64_t v425;
  __int128 v426;
  __int128 v427;
  uint64_t v428;
  char v429;
  _QWORD *v430;
  _QWORD *v431;
  _QWORD *v432;
  _QWORD *v433;
  _QWORD *v434;
  _QWORD *v435;
  _QWORD *v436;
  _QWORD *v437;
  unint64_t v438;
  unint64_t v439;
  unint64_t v440;
  __int128 v441;
  __int128 v442;
  unint64_t v443;
  unint64_t v444;
  unint64_t v445;
  __int128 v446;
  __int128 v447;
  unint64_t v448;
  unint64_t v449;
  unint64_t v450;
  __int128 v451;
  __int128 v452;
  void *v453;
  _BYTE *v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  unint64_t v458;
  unint64_t v459;
  uint64_t v460;
  _QWORD *v461;
  _QWORD *v462;
  _QWORD *v463;
  _QWORD *v464;
  unint64_t v465;
  unint64_t v466;
  uint64_t v467;
  void *v468;
  const void *v469;
  unint64_t v470;
  uint64_t v471;
  uint64_t v472;
  size_t v473;
  uint64_t v474;
  uint64_t v475;
  unint64_t v476;
  unint64_t v477;
  unint64_t v478;
  uint64_t v479;
  unint64_t v480;
  unint64_t v481;
  char v482;
  unint64_t v483;
  unint64_t v484;
  uint64_t v485;
  _QWORD *v486;
  _QWORD *v487;
  _QWORD *v488;
  _QWORD *v489;
  _QWORD *v490;
  _QWORD *v491;
  _QWORD *v492;
  _QWORD *v493;
  unint64_t v494;
  size_t v495;
  _QWORD *v496;
  unint64_t v497;
  int v498;
  unint64_t v499;
  _QWORD *v500;
  unint64_t v501;
  unint64_t v502;
  unint64_t v503;
  void *v504;
  uint64_t v505;
  uint64_t v506;
  void (*v507)(uint64_t, uint64_t, uint64_t);
  id v508;
  unint64_t v509;
  unint64_t v510;
  void *v511;
  _BYTE *v512;
  size_t v513;
  size_t v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  unint64_t v518;
  unint64_t v519;
  uint64_t v520;
  _QWORD *v521;
  _QWORD *v522;
  _QWORD *v523;
  _QWORD *v524;
  char v525;
  char *v526;
  unint64_t v527;
  unint64_t v528;
  char v529;
  uint64_t v530;
  size_t v531;
  int v532;
  int v533;
  unint64_t v534;
  unint64_t v535;
  uint64_t v536;
  unint64_t v537;
  unint64_t v538;
  uint64_t v539;
  void *v540;
  const void *v541;
  unint64_t v542;
  unint64_t v543;
  uint64_t v544;
  unint64_t v545;
  unint64_t v546;
  uint64_t v547;
  void *v548;
  const void *v549;
  unint64_t v550;
  unint64_t v551;
  uint64_t v552;
  _QWORD *v553;
  _QWORD *v554;
  unint64_t v555;
  unint64_t v556;
  unint64_t v557;
  __int128 v558;
  __int128 v559;
  unint64_t v560;
  unint64_t v561;
  uint64_t v562;
  _QWORD *v563;
  _QWORD *v564;
  unint64_t v565;
  _QWORD *v566;
  unint64_t v567;
  uint64_t v568;
  _QWORD *v569;
  _QWORD *v570;
  _QWORD *v571;
  _QWORD *v572;
  unint64_t v573;
  unint64_t v574;
  unint64_t v575;
  __int128 v576;
  __int128 v577;
  unint64_t v578;
  unint64_t v579;
  unint64_t v580;
  __int128 v581;
  __int128 v582;
  unint64_t v583;
  unint64_t v584;
  uint64_t v585;
  _QWORD *v586;
  _QWORD *v587;
  unint64_t v588;
  unint64_t v589;
  uint64_t v590;
  unint64_t v591;
  unint64_t v592;
  unint64_t v593;
  __int128 v594;
  __int128 v595;
  _QWORD *v596;
  _QWORD *v597;
  _QWORD *v598;
  _QWORD *v599;
  _QWORD *v600;
  _QWORD *v601;
  _QWORD *v602;
  _QWORD *v603;
  unint64_t v604;
  unint64_t v605;
  _QWORD *v606;
  _QWORD *v607;
  void *v608;
  _BYTE *v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  _QWORD *v613;
  _QWORD *v614;
  unint64_t v615;
  unint64_t v616;
  unint64_t v617;
  __int128 v618;
  __int128 v619;
  _QWORD *v620;
  _QWORD *v621;
  _QWORD *v622;
  _QWORD *v623;
  char *v624;
  char *v625;
  uint64_t v626;
  unint64_t v627;
  uint64_t v628;
  uint64_t v629;
  unint64_t v630;
  unint64_t v631;
  uint64_t v632;
  unint64_t v633;
  unint64_t v634;
  unint64_t v635;
  __int128 v636;
  __int128 v637;
  uint64_t v638;
  _QWORD *v639;
  _QWORD *v640;
  _QWORD *v641;
  _QWORD *v642;
  _QWORD *v643;
  _QWORD *v644;
  _QWORD *v645;
  _QWORD *v646;
  unint64_t v647;
  size_t v648;
  _QWORD *v649;
  unint64_t v650;
  int v651;
  uint64_t v652;
  int v653;
  int v654;
  int v655;
  int v656;
  void *v657;
  _BYTE *v658;
  uint64_t v659;
  uint64_t v660;
  uint64_t v661;
  int v662;
  int v663;
  uint64_t v664;
  int v665;
  int v666;
  _QWORD *v667;
  _QWORD *v668;
  unint64_t v669;
  unint64_t v670;
  void *v671;
  _BYTE *v672;
  uint64_t v673;
  unint64_t v674;
  uint64_t v675;
  uint64_t v676;
  uint64_t v677;
  _QWORD *v678;
  _QWORD *v679;
  unint64_t v680;
  unint64_t v681;
  _QWORD *v682;
  _QWORD *v683;
  _QWORD *v684;
  _QWORD *v685;
  _QWORD *v686;
  _QWORD *v687;
  _QWORD *v688;
  _QWORD *v689;
  _QWORD *v690;
  _QWORD *v691;
  void *v692;
  _BYTE *v693;
  uint64_t v694;
  unint64_t v695;
  uint64_t v696;
  uint64_t v697;
  uint64_t v698;
  unint64_t v699;
  int v700;
  int v701;
  int v702;
  int v703;
  int v704;
  int v705;
  size_t v706;
  int v707;
  int v708;
  int v709;
  int v710;
  int v711;
  int v712;
  int v713;
  int v714;
  int v715;
  int v716;
  int v717;
  unint64_t v718;
  unint64_t v719;
  int v720;
  unsigned int v721;
  unint64_t v722;
  unint64_t v723;
  int v724;
  unsigned int v725;
  _QWORD *v726;
  unint64_t v727;
  unint64_t v728;
  unint64_t v729;
  void *v730;
  uint64_t v731;
  uint64_t v732;
  void (*v733)(uint64_t, uint64_t, uint64_t);
  id v734;
  unint64_t v735;
  unint64_t v736;
  uint64_t v737;
  unint64_t v738;
  unint64_t v739;
  char *v740;
  char *v741;
  _QWORD *v742;
  _QWORD *v743;
  unint64_t v744;
  _QWORD *v745;
  uint64_t v746;
  char *v747;
  uint64_t v748;
  uint64_t v749;
  const void *v750;
  uint64_t v751;
  void *v752;
  _QWORD *v753;
  unint64_t v754;
  unint64_t v755;
  unint64_t v756;
  void *v757;
  uint64_t v758;
  uint64_t v759;
  void (*v760)(uint64_t, uint64_t, uint64_t);
  id v761;
  void *v762;
  _BYTE *v763;
  uint64_t v764;
  unint64_t v765;
  uint64_t v766;
  uint64_t v767;
  uint64_t v768;
  int v769;
  int v770;
  int v771;
  _BYTE *v772;
  _BYTE *v773;
  uint64_t v774;
  uint64_t v775;
  uint64_t v776;
  int v777;
  int v778;
  int v779;
  _QWORD *v780;
  _QWORD *v781;
  _QWORD *v782;
  _QWORD *v783;
  unint64_t v784;
  unint64_t v785;
  unint64_t v786;
  __int128 v787;
  char v788;
  char v789;
  unsigned int v790;
  unint64_t v791;
  unint64_t v792;
  uint64_t v793;
  _QWORD *v794;
  _QWORD *v795;
  _QWORD *v796;
  _QWORD *v797;
  unint64_t v798;
  unint64_t v799;
  unint64_t v800;
  unint64_t v801;
  unint64_t v802;
  __int128 v803;
  __int128 v804;
  _QWORD *v805;
  _QWORD *v806;
  unint64_t v807;
  char *v808;
  uint64_t v809;
  uint64_t v810;
  const void *v811;
  uint64_t v812;
  void *v813;
  _BYTE *v814;
  uint64_t v815;
  uint64_t v816;
  uint64_t v817;
  int v818;
  int v819;
  int v820;
  unsigned int v821;
  void *v822;
  const void *v823;
  size_t v824;
  unint64_t v825;
  unint64_t v826;
  uint64_t v827;
  _QWORD *v828;
  _QWORD *v829;
  _QWORD *v830;
  _QWORD *v831;
  unint64_t v832;
  unint64_t v833;
  unint64_t v834;
  __int128 v835;
  __int128 v836;
  unint64_t v837;
  unint64_t v838;
  unint64_t v839;
  __int128 v840;
  __int128 v841;
  _QWORD *v842;
  _QWORD *v843;
  unint64_t v844;
  void *v845;
  char *v846;
  uint64_t v847;
  uint64_t v848;
  const void *v849;
  uint64_t v850;
  void *v851;
  void *v852;
  _BYTE *v853;
  uint64_t v854;
  uint64_t v855;
  uint64_t v856;
  int v857;
  int v858;
  int v859;
  unint64_t v860;
  unint64_t v861;
  uint64_t v862;
  void *v863;
  const void *v864;
  _QWORD *v865;
  _QWORD *v866;
  _QWORD *v867;
  _QWORD *v868;
  _QWORD *v869;
  uint64_t *v870;
  size_t v871;
  uint64_t v872;
  int v873;
  size_t v874;
  void (*v875)(unint64_t, unint64_t, uint64_t);
  _QWORD *v876;
  _BYTE *v877;
  unint64_t v878;
  uint64_t v879;
  _BYTE *v880;
  uint64_t v881;
  const void *v882;
  uint64_t v883;
  size_t v884;
  unint64_t v885;
  unint64_t v886;
  unint64_t v887;
  unint64_t v888;
  uint64_t v889;
  unint64_t v890;
  unint64_t v891;
  uint64_t v892;
  unint64_t v893;
  unint64_t v894;
  unint64_t v895;
  __int128 v896;
  __int128 v897;
  _QWORD *v898;
  _QWORD *v899;
  unint64_t v900;
  unint64_t v901;
  unint64_t v902;
  unint64_t v903;
  size_t v904;
  uint64_t v905;
  unint64_t v906;
  unint64_t v907;
  uint64_t v908;
  unint64_t v909;
  unint64_t v910;
  unint64_t v911;
  __int128 v912;
  __int128 v913;
  _QWORD *v914;
  _QWORD *v915;
  char *v916;
  char *v917;
  unint64_t v918;
  unint64_t v919;
  unint64_t v920;
  uint64_t v921;
  unint64_t v922;
  unint64_t v923;
  unint64_t v924;
  __int128 v925;
  __int128 v926;
  _QWORD *v927;
  _QWORD *v928;
  unint64_t v929;
  uint64_t v930;
  unint64_t v931;
  unint64_t v932;
  unint64_t v933;
  __int128 v934;
  __int128 v935;
  _BYTE *v936;
  _QWORD *v937;
  unint64_t v938;
  char *v939;
  uint64_t v940;
  uint64_t v941;
  const void *v942;
  uint64_t v943;
  void *v944;
  void *v945;
  _BYTE *v946;
  uint64_t v947;
  uint64_t v948;
  uint64_t v949;
  int v950;
  int v951;
  int v952;
  char *v953;
  void *v954;
  _BYTE *v955;
  uint64_t v956;
  uint64_t v957;
  uint64_t v958;
  int v959;
  int v960;
  int v961;
  char v962;
  _QWORD *v963;
  _QWORD *v964;
  unint64_t v965;
  unint64_t v966;
  unint64_t v967;
  __int128 v968;
  __int128 v969;
  _QWORD *v970;
  _QWORD *v971;
  _QWORD *v972;
  uint64_t *v973;
  size_t v974;
  uint64_t v975;
  int v976;
  unint64_t v977;
  void (*v978)(unint64_t, unint64_t, uint64_t);
  _QWORD *v979;
  uint64_t *v980;
  size_t v981;
  uint64_t v982;
  int v983;
  _QWORD *v984;
  void (*v985)(unint64_t, unint64_t, uint64_t);
  _QWORD *v986;
  _QWORD *v987;
  unint64_t v988;
  _QWORD *v989;
  uint64_t v990;
  char *v991;
  uint64_t v992;
  uint64_t v993;
  const void *v994;
  uint64_t v995;
  void *v996;
  void *v997;
  _BYTE *v998;
  uint64_t v999;
  uint64_t v1000;
  uint64_t v1001;
  int v1002;
  int v1003;
  int v1004;
  _QWORD *v1005;
  uint64_t *v1006;
  size_t v1007;
  uint64_t v1008;
  int v1009;
  void (*v1010)(unint64_t, unint64_t, uint64_t);
  _QWORD *v1011;
  _BYTE *v1012;
  unint64_t v1013;
  uint64_t v1014;
  _BYTE *v1015;
  uint64_t v1016;
  const void *v1017;
  uint64_t v1018;
  size_t v1019;
  unint64_t v1020;
  unint64_t v1021;
  unint64_t v1022;
  unint64_t v1023;
  uint64_t v1024;
  unint64_t v1025;
  unint64_t v1026;
  uint64_t v1027;
  unint64_t v1028;
  unint64_t v1029;
  unint64_t v1030;
  __int128 v1031;
  __int128 v1032;
  _QWORD *v1033;
  _QWORD *v1034;
  unint64_t v1035;
  unint64_t v1036;
  unint64_t v1037;
  unint64_t v1038;
  size_t v1039;
  uint64_t v1040;
  unint64_t v1041;
  unint64_t v1042;
  uint64_t v1043;
  unint64_t v1044;
  unint64_t v1045;
  unint64_t v1046;
  __int128 v1047;
  __int128 v1048;
  _QWORD *v1049;
  _QWORD *v1050;
  char *v1051;
  char *v1052;
  unint64_t v1053;
  unint64_t v1054;
  unint64_t v1055;
  uint64_t v1056;
  unint64_t v1057;
  unint64_t v1058;
  unint64_t v1059;
  __int128 v1060;
  __int128 v1061;
  _QWORD *v1062;
  _QWORD *v1063;
  unint64_t v1064;
  uint64_t v1065;
  void *v1066;
  _BYTE *v1067;
  uint64_t v1068;
  uint64_t v1069;
  uint64_t v1070;
  int v1071;
  int v1072;
  int v1073;
  _QWORD *v1074;
  _QWORD *v1075;
  unint64_t v1076;
  unint64_t v1077;
  void *v1078;
  _BYTE *v1079;
  uint64_t v1080;
  uint64_t v1081;
  uint64_t v1082;
  int v1083;
  int v1084;
  int v1085;
  _QWORD *v1086;
  uint64_t *v1087;
  size_t v1088;
  uint64_t v1089;
  int v1090;
  _QWORD *v1091;
  void (*v1092)(unint64_t, unint64_t, uint64_t);
  _QWORD *v1093;
  uint64_t *v1094;
  uint64_t v1095;
  int v1096;
  size_t v1097;
  unint64_t v1098;
  unint64_t v1099;
  _QWORD *v1100;
  void (*v1101)(unint64_t, unint64_t, uint64_t);
  _BYTE *v1102;
  _QWORD *v1103;
  _QWORD *v1104;
  unint64_t v1105;
  unint64_t v1106;
  unint64_t v1107;
  unint64_t v1108;
  unint64_t v1109;
  __int128 v1110;
  __int128 v1111;
  size_t v1112;
  unint64_t v1113;
  unint64_t v1114;
  unint64_t v1115;
  char *v1116;
  uint64_t v1117;
  uint64_t v1118;
  const void *v1119;
  uint64_t v1120;
  void *v1121;
  _QWORD *v1122;
  _QWORD *v1123;
  _QWORD *v1124;
  _QWORD *v1125;
  void *v1126;
  _BYTE *v1127;
  uint64_t v1128;
  uint64_t v1129;
  uint64_t v1130;
  int v1131;
  int v1132;
  int v1133;
  _QWORD *v1134;
  _QWORD *v1135;
  unint64_t v1136;
  uint64_t v1137;
  char *v1138;
  uint64_t v1139;
  uint64_t v1140;
  const void *v1141;
  uint64_t v1142;
  void *v1143;
  unint64_t v1144;
  unint64_t v1145;
  unint64_t v1146;
  __int128 v1147;
  __int128 v1148;
  _QWORD *v1149;
  _QWORD *v1150;
  _BYTE *v1151;
  unsigned __int8 *v1152;
  unsigned int v1153;
  uint64_t v1154;
  _QWORD *v1155;
  _QWORD *v1156;
  _QWORD *v1157;
  unsigned int v1158;
  uint64_t v1159;
  uint64_t v1160;
  void *v1161;
  const void *v1162;
  uint64_t v1163;
  uint64_t v1164;
  uint64_t v1165;
  uint64_t v1166;
  _QWORD *v1167;
  _QWORD *v1168;
  unint64_t v1169;
  unint64_t v1170;
  unint64_t v1171;
  unint64_t v1172;
  unint64_t v1173;
  unint64_t v1174;
  uint64_t v1175;
  _QWORD *v1176;
  _QWORD *v1177;
  unint64_t v1178;
  unint64_t v1179;
  unint64_t v1180;
  __int128 v1181;
  __int128 v1182;
  _QWORD *v1183;
  _QWORD *v1184;
  unint64_t v1185;
  char *v1186;
  uint64_t v1187;
  void *v1188;
  _QWORD *v1189;
  _QWORD *v1190;
  _QWORD *v1191;
  _QWORD *v1192;
  unint64_t v1193;
  _QWORD *v1194;
  uint64_t v1195;
  char *v1196;
  uint64_t v1197;
  uint64_t v1198;
  const void *v1199;
  uint64_t v1200;
  void *v1201;
  __int128 v1202;
  __int128 v1203;
  unint64_t v1204;
  _QWORD *v1205;
  uint64_t v1206;
  __int128 v1207;
  __int128 v1208;
  _QWORD *v1209;
  _QWORD *v1210;
  _QWORD *v1211;
  _QWORD *v1212;
  void *v1213;
  _BYTE *v1214;
  uint64_t v1215;
  uint64_t v1216;
  uint64_t v1217;
  int v1218;
  int v1219;
  int v1220;
  _QWORD *v1221;
  _QWORD *v1222;
  _BYTE *v1223;
  unsigned __int8 *v1224;
  unsigned int v1225;
  _QWORD *v1226;
  _QWORD *v1227;
  unsigned int v1228;
  uint64_t v1229;
  void *v1230;
  const void *v1231;
  uint64_t v1232;
  void *v1233;
  const void *v1234;
  size_t v1235;
  _QWORD *v1236;
  uint64_t v1237;
  _QWORD *v1238;
  _QWORD *v1239;
  unint64_t v1240;
  unint64_t v1241;
  unint64_t v1242;
  unint64_t v1243;
  unint64_t v1244;
  unint64_t v1245;
  uint64_t v1246;
  _QWORD *v1247;
  _QWORD *v1248;
  unint64_t v1249;
  unint64_t v1250;
  unint64_t v1251;
  __int128 v1252;
  __int128 v1253;
  _QWORD *v1254;
  _QWORD *v1255;
  unint64_t v1256;
  char *v1257;
  const void *v1258;
  uint64_t v1259;
  void *v1260;
  __int128 v1261;
  __int128 v1262;
  unint64_t v1263;
  _QWORD *v1264;
  uint64_t v1265;
  uint64_t v1266;
  __int128 v1267;
  __int128 v1268;
  _QWORD *v1269;
  _QWORD *v1270;
  _QWORD *v1271;
  _QWORD *v1272;
  void *v1273;
  _BYTE *v1274;
  uint64_t v1275;
  uint64_t v1276;
  uint64_t v1277;
  int v1278;
  int v1279;
  int v1280;
  char v1281;
  unint64_t v1282;
  unint64_t v1283;
  __int128 *v1284;
  __int128 *v1285;
  _OWORD *v1286;
  _OWORD *v1287;
  _QWORD *v1288;
  unsigned __int8 *v1289;
  unsigned __int8 *v1290;
  _BYTE *v1291;
  _BYTE *v1292;
  uint64_t v1293;
  uint64_t v1294;
  uint64_t v1295;
  uint64_t v1296;
  uint64_t v1297;
  uint64_t v1298;
  uint64_t v1299;
  uint64_t v1300;
  uint64_t v1301;
  uint64_t v1302;
  size_t v1303;
  unint64_t v1304;
  unint64_t v1305;
  unint64_t v1306;
  unint64_t v1307;
  unint64_t v1308;
  unint64_t v1309;
  unint64_t v1310;
  unint64_t v1311;
  unint64_t v1312;
  uint64_t v1313;
  unsigned int v1314;
  char v1315;
  uint64_t v1316;
  uint64_t v1317;
  size_t v1318;
  size_t v1319;
  int v1320;
  uint64_t v1321;
  uint64_t v1322;
  uint64_t v1323;
  uint64_t v1324;
  uint64_t v1325;
  size_t v1326;
  uint64_t v1327;
  uint64_t v1328;
  uint64_t v1329;
  uint64_t v1330;
  size_t v1331;
  uint64_t v1332;
  uint64_t v1333;
  size_t v1334;
  uint64_t v1335;
  unint64_t v1336;
  uint64_t v1337;
  size_t v1338;
  size_t v1339;
  unsigned int v1340;
  unint64_t v1341;
  unint64_t v1342;
  unint64_t v1343;
  unint64_t v1344;
  unint64_t v1345;
  unint64_t v1346;
  unint64_t v1347;
  unint64_t v1348;
  unint64_t v1349;
  unint64_t v1350;
  unint64_t v1351;
  unint64_t v1352;
  unint64_t v1353;
  unint64_t v1354;
  size_t v1355;
  size_t v1356;
  uint64_t v1357;
  uint64_t v1358;
  uint64_t v1359;
  uint64_t v1360;
  size_t v1361;
  unint64_t v1362;
  unsigned int v1363;
  unsigned int v1364;
  uint64_t v1365;
  uint64_t v1366;
  uint64_t v1367;
  size_t __n;
  unsigned int v1369;
  size_t v1370;
  unsigned int v1371;
  uint64_t v1372;
  uint64_t v1373;
  uint64_t v1374;
  unsigned int v1375;
  uint64_t v1376;
  uint64_t v1377;
  uint64_t v1378;
  uint64_t v1379;
  unint64_t v1380;
  uint64_t v1381;
  uint64_t v1382;
  size_t v1383;
  uint64_t v1384;
  uint64_t v1385;
  uint64_t v1386;
  uint64_t v1387;
  uint64_t v1388;
  uint64_t v1389;
  uint64_t v1390;
  uint64_t v1391;
  unsigned int v1392;
  uint64_t v1393;
  uint64_t v1394;
  size_t v1395;
  unint64_t v1396;
  uint64_t v1397;
  uint64_t v1398;
  unint64_t v1399;
  unint64_t v1400;
  unint64_t v1401;
  uint64_t v1402;
  unint64_t v1403;
  uint64_t v1404;
  unint64_t v1405;
  unint64_t v1406;
  unint64_t v1407;
  uint64_t v1408;
  _QWORD *v1409;
  _QWORD *v1410;
  _QWORD *v1411;
  _QWORD *v1412;
  _QWORD *v1413;
  _QWORD *v1414;
  _QWORD *v1415;
  _QWORD *v1416;
  _QWORD *v1417;
  unint64_t v1418;
  size_t v1419;
  unint64_t v1420;
  uint64_t v1421;
  unint64_t v1422;
  uint64_t v1423;
  uint64_t v1424;
  uint64_t v1425;
  unint64_t v1426;
  unint64_t v1427;
  unint64_t v1428;
  unint64_t v1429;
  unint64_t v1430;
  unint64_t v1431;
  size_t v1432;
  int v1433;
  size_t v1434;
  uint64_t v1435;
  size_t v1436;
  size_t v1437;
  size_t v1438;
  size_t v1439;
  unsigned int v1440;
  uint64_t v1441;
  size_t v1442;
  size_t v1443;
  unsigned int v1444;
  size_t v1445;
  uint64_t v1447;
  uint64_t v1448;
  uint64_t v1449;
  uint64_t v1450;
  uint64_t v1451;
  uint64_t v1452;
  _QWORD *v1453;
  _QWORD *v1454;
  _QWORD *v1455;
  _QWORD *v1456;
  _QWORD *v1457;
  _QWORD *v1458;
  _QWORD *v1459;
  _QWORD *v1460;
  _QWORD *v1461;
  _QWORD *v1462;
  _QWORD *v1463;
  uint64_t v1464;
  uint64_t v1465;
  uint64_t v1466;
  uint64_t v1467;
  unint64_t v1468;
  uint64_t v1469;
  unint64_t v1470;
  void *v1471;
  unint64_t v1472;
  const void *v1473;
  unint64_t v1474;
  uint64_t v1475;
  const void *v1476;
  const void *v1477;
  uint64_t v1478;
  void *v1479;
  void *v1480;
  size_t v1481;

  v1389 = *(_QWORD *)(a3 + 16);
  v1387 = *(_QWORD *)(v1389 - 8);
  v1422 = *(_QWORD *)(v1387 + 64);
  v1398 = sub_21D7C4668();
  v3 = *(_QWORD *)(v1398 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v1425 = v4 + 16;
  v1440 = *(_DWORD *)(v3 + 84);
  v1379 = v3;
  v5 = *(_QWORD *)(v3 + 64);
  v1395 = v5;
  if (v1440)
    v6 = v5;
  else
    v6 = v5 + 1;
  v1448 = v4 | 7;
  v1376 = sub_21D7BF754();
  v7 = *(_QWORD *)(v1376 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = v8 | 7;
  v10 = v4 | 7 | v8;
  v1372 = sub_21D7C3840();
  v11 = *(_QWORD *)(v1372 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v1377 = sub_21D7C3804();
  v13 = *(_QWORD *)(v1377 - 8);
  v14 = *(_DWORD *)(v13 + 80);
  v15 = v14;
  v16 = v14 | v12;
  v17 = v10 | v16;
  v1481 = v6;
  v1449 = v4;
  v1441 = v4 + 40;
  v18 = *(_DWORD *)(v7 + 84);
  if (v18)
    v19 = v18 - 1;
  else
    v19 = 0;
  v1371 = v19;
  if (v19 <= 0x7FFFFFFE)
    v20 = 2147483646;
  else
    v20 = v19;
  v1433 = v20;
  v1375 = *(_DWORD *)(v13 + 84);
  v1369 = *(_DWORD *)(v11 + 84);
  if (v1375 <= v1369)
    v21 = *(_DWORD *)(v11 + 84);
  else
    v21 = *(_DWORD *)(v13 + 84);
  v1444 = v21;
  v1363 = *(_DWORD *)(v7 + 84);
  v1374 = v8 + 113;
  v1447 = v8;
  v1360 = v7;
  v1366 = v11;
  v1373 = *(_QWORD *)(v11 + 64) + v14;
  v1367 = *(_QWORD *)(v1377 - 8);
  v1438 = *(_QWORD *)(v13 + 64);
  if (v18)
    v22 = *(_QWORD *)(v7 + 64);
  else
    v22 = *(_QWORD *)(v7 + 64) + 1;
  v1437 = v22;
  v1378 = v17 + 1;
  v1470 = ((v4 + 40) & ~v4) + v6;
  v1464 = v10 | v16;
  v1468 = (v1470 + 7) & 0xFFFFFFFFFFFFFFF8;
  v1478 = v8 + 40;
  v1442 = v22 + ((v8 + 113) & ~v8);
  v23 = v1442 + ((v8 + 40 + ((((v1468 + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v9);
  v1396 = (v1373 & ~(unint64_t)v14) + v1438;
  if (v21)
    v24 = (v1373 & ~(unint64_t)v14) + v1438;
  else
    v24 = (v1373 & ~(unint64_t)v14) + v1438 + 1;
  v1443 = v24;
  v1431 = v24 + 1;
  v25 = v24 + 1 + ((v16 + 160) & ~v16);
  if (v23 <= v25)
    v23 = v25;
  if (v23 <= 0x30)
    v23 = 48;
  v1380 = v23;
  __n = v23 + 1;
  v1451 = v23 + 1 + ((v17 + 1) & ~v17);
  v1393 = sub_21D7C3F6C();
  v26 = *(_QWORD *)(v1393 - 8);
  v27 = *(unsigned __int8 *)(v26 + 80);
  v1391 = (v27 | 7) + 58;
  v1381 = v27 | 7;
  v28 = (v1391 + (((((v10 | v16) + v6 + ((v4 + 16) & ~v4)) & ~(v10 | v16)) + v1451 + 11) & 0xFFFFFFFFFFFFFFF8)) & ~(v27 | 7);
  v1392 = *(_DWORD *)(v26 + 84);
  v1397 = v27 + 16;
  v1384 = v27;
  v1365 = v26;
  v29 = *(_QWORD *)(v26 + 64);
  if (!v1392)
    ++v29;
  v1370 = v29;
  v30 = ((v27 + 16) & ~v27) + v29;
  v1357 = sub_21D7C4314();
  v31 = *(_DWORD *)(*(_QWORD *)(v1357 - 8) + 80);
  v32 = *(_QWORD *)(v1357 - 8);
  v1424 = v32;
  v33 = v15 | 7;
  v1333 = sub_21D7BF964();
  v34 = *(_QWORD *)(v1333 - 8);
  v35 = *(unsigned __int8 *)(v34 + 80);
  v1452 = v17 | v15 | v31 | v35;
  v1383 = v30;
  v1450 = v31;
  v1472 = v31 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v1474 = *(_QWORD *)(v32 + 64) + ((v31 + 65) & ~(unint64_t)v31);
  v1445 = v1481 + 7;
  v36 = (((v1481 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 23) & 0xFFFFFFFFFFFFFFF8;
  v1399 = v37;
  v1358 = v31 + 16;
  v1429 = (v1474 + ((v1358 + ((v37 + 15) & 0xFFFFFFFFFFFFFFF8)) & v1472)) & 0xFFFFFFFFFFFFFFF8;
  v1435 = v16 + 16;
  v1359 = v15 + 8;
  v1385 = v15;
  v38 = v1438 + ((v15 + 8) & ~v15);
  v39 = v1443 + (v15 | 7);
  if (v1440)
    v40 = v1440 - 1;
  else
    v40 = 0;
  v41 = v36 + 16;
  v42 = (((v1481 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
  v43 = v1431 + v35 + ((v36 + 16 + v16) & ~v16);
  v1364 = v40;
  v1320 = v1433 - 1;
  if (v40 <= v1433 - 1)
    v44 = v1433 - 1;
  else
    v44 = v40;
  if (v44 <= 0x7FFFFFFF)
    v44 = 0x7FFFFFFF;
  v45 = v1444 - 1;
  if (!v1444)
    v45 = 0;
  if (v45 <= v44)
    v46 = v44;
  else
    v46 = v45;
  v1340 = v46;
  v47 = (v1468 + 23) & 0xFFFFFFFFFFFFFFF8;
  v1407 = (((v1481 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
  v1434 = v42 + 17;
  v1323 = v9 + 23;
  v1418 = v9 + 23 + v42 + 17 + ((v1425 + ((((v47 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v1448);
  v1439 = v1438 + ((v15 + 8) & ~v15);
  v1432 = v1442 + v1448;
  v1420 = (v42 + 47) & 0xFFFFFFFFFFFFFFF8;
  v1362 = v1420 + 16;
  v48 = v1420 + 16 + v1448;
  v49 = v1420
      + 24
      + ((v48
        + ((v48
          + ((v1442
            + v1448
            + ((v38 + v9 + ((v1443 + v33 + ((v16 + 16 + ((v1429 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & ~v33)) & ~v9)) & ~v1448)) & ~v1448)) & ~v1448);
  v1394 = *(unsigned __int8 *)(v34 + 80);
  v1332 = *(_QWORD *)(v1333 - 8);
  v1329 = *(_QWORD *)(v34 + 64) + 7;
  v1436 = v1443 + v33;
  v50 = ((v39 + ((v1442 + v16 + ((v1478 + ((v1329 + (v43 & ~v35)) & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & ~v16)) & ~v33)
      + v38;
  v1337 = v9 + 41;
  v51 = v1443 + 7;
  v52 = ((((v1443 + 7 + ((v1442 + v16 + ((v9 + 41 + ((v37 + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & ~v16)) & 0xFFFFFFFFFFFFFFF8)
        + 47) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v53 = ((v1481 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
  v54 = v1464;
  v1426 = (v54 + v53) & ~v54;
  v1336 = v52 + v1464;
  v55 = ((v54 + 8 + ((v1451 + 7 + ((v52 + v54 + v1426) & ~v54)) & 0xFFFFFFFFFFFFFFF8)) & ~v54) + v1451;
  v56 = v53 + v31;
  v1401 = (v1442 + 7 + ((v53 + v1447) & ~v9)) & 0xFFFFFFFFFFFFFFF8;
  v1326 = v1437 + v16;
  v57 = v1443 + v16;
  v58 = (v39 + ((v1443 + v16 + ((v1437 + v16 + ((v41 + v1447) & ~v1447)) & ~v16) + 1) & ~v16)) & ~v33;
  v59 = v15 | 7;
  v60 = ((v38 + v9 + v58) & ~v9) + v1442;
  v61 = ((v1474 + 7 + (v56 & v1472)) & 0xFFFFFFFFFFFFFFF8) + 8;
  v1324 = v9 + 17;
  v62 = v1442 + ((v9 + 17 + v1468) & ~v9);
  v1355 = v1442 + ((v1447 + 8) & ~v9);
  if (v1355 <= v49)
    v63 = v49;
  else
    v63 = v1442 + ((v1447 + 8) & ~v9);
  v1353 = v50;
  if (v63 <= v50)
    v63 = v50;
  v1356 = v52;
  if (v63 <= v52)
    v63 = v52;
  v1350 = ((((((v1401 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
  v1351 = v55;
  if (v63 <= v55)
    v63 = v55;
  if (v63 <= ((((((v1401 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8)
    v63 = ((((((v1401 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
  v1347 = v60;
  v1348 = (((((v1470 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v63 <= v60)
    v63 = v60;
  if (v63 <= (((((v1470 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16)
    v63 = (((((v1470 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v1349 = v61;
  if (v63 <= v61)
    v63 = v61;
  v1346 = v62 + 1;
  if (v63 <= v62 + 1)
    v64 = v62 + 1;
  else
    v64 = v63;
  v1405 = v64;
  v1403 = (v28 + v30 + v1452) & ~v1452;
  v65 = (((v47 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v66 = ((((v65 + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 41;
  v1322 = v16 + 40;
  v67 = ((v57
        + ((v16
          + 40
          + ((((((v65 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & ~v16)
      + v1443;
  v68 = (v1399 + 23) & 0xFFFFFFFFFFFFFFF8;
  v69 = v68 + 8;
  v70 = ((v68 + 47) & 0xFFFFFFFFFFFFFFF8) + 40;
  v1318 = v1442 + v16;
  v1319 = ((v1442 + v16 + ((v70 + v9) & ~v9)) & ~v16) + v1443;
  v1334 = v1319 + 7;
  v1335 = v1447 + 8;
  v71 = ((v1447 + 8 + ((v1319 + 7 + v1426) & 0xFFFFFFFFFFFFFFF8)) & ~v9) + v1442;
  v1328 = v16 + 24;
  v72 = v59;
  v1361 = v38 + v9;
  v1352 = v1420 + 16 + v1448;
  v1354 = v1420 + 24;
  v73 = v1420
      + 24
      + ((v48
        + ((v48 + ((v1432 + ((v38 + v9 + ((v1436 + ((v16 + 24 + v1429) & ~v16)) & ~v59)) & ~v9)) & ~v1448)) & ~v1448)) & ~v1448);
  v74 = (v1407 + 15) & 0xFFFFFFFFFFFFFFF8;
  v75 = v1449;
  v1427 = ((v75 + 80) & ~v75) + v1481;
  v1430 = ((v75 + 56) & ~v75) + v1481;
  v1428 = ((((v1445 + ((v1441 + (v51 & 0xFFFFFFFFFFFFFFF8)) & ~v1449)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  v76 = (v1401 + 23) & 0xFFFFFFFFFFFFFFF8;
  v1325 = v16 + 18;
  v77 = ((v16 + 18 + v76) & ~v16) + v1443;
  v78 = ((v51
        + ((v16
          + 8
          + ((((((((((v76 + 25) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v79 = v1399 + 40;
  v80 = v74 + 8;
  v81 = v1407 + 8;
  v82 = v1468 + 8;
  v83 = ((v1468 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  v84 = (((v1420 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v1402 = v16 + 8;
  v1338 = v1443 + v16;
  v1331 = v1439 + v72;
  v1408 = v72;
  v1339 = v1442 + 7;
  v85 = ((v1442
        + 7
        + ((v1478
          + ((((v1439
              + ((v1439
                + v1408
                + ((v1436
                  + ((v57 + ((v16 + 8 + ((((v84 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & ~v16)) & ~v1408)) & ~v1408)
              + 9) & 0xFFFFFFFFFFFFFFF8)
            + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v86 = (v1418 & ~v9) + v1442;
  v1321 = v31 + 8;
  v1327 = v1474 + v16;
  v1330 = v16 + 9;
  v1419 = v1443 + 7;
  v87 = v1435
      + ((v51
        + ((v16
          + 9
          + ((((v51 + ((v1474 + v16 + ((v1321 + v84) & v1472)) & ~v16)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & 0xFFFFFFFFFFFFFFF8);
  v1469 = v16;
  v88 = v1443 + v9;
  v1421 = v9;
  v89 = ((v1443 + v9 + (v87 & ~v16)) & ~v9) + v1442;
  v90 = v1405;
  v1344 = v73;
  v1345 = v66;
  if (v1405 <= v66)
    v90 = v66;
  v1342 = v71;
  v1343 = v67;
  if (v90 <= v67)
    v90 = v67;
  v1400 = v69;
  if (v90 <= v69)
    v90 = v69;
  if (v90 <= v71)
    v90 = v71;
  if (v90 <= v1434)
    v90 = v1434;
  if (v90 <= v73)
    v90 = v73;
  v1341 = v74 + 16;
  if (v90 <= v74 + 16)
    v90 = v74 + 16;
  v1406 = ((v1470 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
  if (v90 <= v1406)
    v90 = ((v1470 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
  if (v90 <= v1427)
    v90 = v1427;
  if (v90 <= v1430)
    v90 = v1430;
  if (v90 <= v1428)
    v90 = v1428;
  if (v90 <= v77)
    v90 = v77;
  if (v90 <= v78)
    v90 = v78;
  if (v90 <= v79)
    v90 = v79;
  if (v90 <= v80)
    v90 = v74 + 8;
  if (v90 <= v70)
    v90 = v70;
  if (v90 <= v81)
    v90 = v81;
  if (v90 <= v82)
    v90 = v82;
  if (v90 <= v83)
    v90 = v83;
  if (v90 <= v1470)
    v90 = v1470;
  if (v90 <= v85)
    v90 = v85;
  if (v90 <= v86)
    v90 = v86;
  if (v90 <= v89)
    v90 = v89;
  if (v90 <= 8)
    v91 = 8;
  else
    v91 = v90;
  v92 = ((v91 + 8 + v1403) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v92 <= v1422)
    v92 = v1422;
  if (v92 <= 8)
    v93 = 8;
  else
    v93 = v92;
  if (*((unsigned __int8 *)a2 + v93) >= 4u)
  {
    if (v93 <= 3)
      v94 = v93;
    else
      v94 = 4;
    __asm { BR              X12 }
  }
  v95 = a1;
  switch(*((_BYTE *)a2 + v93))
  {
    case 0:
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1387 + 16))(a1, a2, v1389);
      *((_BYTE *)a1 + v93) = 0;
      goto LABEL_270;
    case 1:
      v1314 = *(_DWORD *)(v1424 + 84);
      v1303 = v88;
      v1304 = v78;
      v1305 = v79;
      v1306 = v77;
      v1307 = v81;
      v1308 = v85;
      v1309 = v86;
      v1310 = v82;
      v1311 = v83;
      v1312 = v70;
      v1423 = v91;
      v1404 = v91 + 8;
      v96 = ~v1464;
      v97 = a2[1];
      *a1 = *a2;
      a1[1] = v97;
      v98 = (void *)(((unint64_t)a1 + v1449 + 16) & ~v1449);
      v1317 = ~v1449;
      v99 = (const void *)(((unint64_t)a2 + v1449 + 16) & ~v1449);
      sub_21D7C4C20();
      if (__swift_getEnumTagSinglePayload((uint64_t)v99, 1, v1398))
      {
        v100 = v1481;
        memcpy(v98, v99, v1481);
        v101 = v1451;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v1379 + 16))(v98, v99, v1398);
        __swift_storeEnumTagSinglePayload((uint64_t)v98, 0, 1, v1398);
        v101 = v1451;
        v100 = v1481;
      }
      v1388 = ~v1421;
      v103 = ~v1447;
      v1390 = ~v1469;
      v104 = ~v1385;
      v105 = (_BYTE *)(((unint64_t)v98 + v100 + v1464) & v96);
      v106 = (unsigned __int8 *)(((unint64_t)v99 + v100 + v1464) & v96);
      v107 = *v106;
      v1315 = 8 * v1396;
      v1386 = ~v1447;
      v1313 = ~v1464;
      v1316 = v104;
      if (v107 > 2)
      {
        v114 = v105;
        v115 = (__int128 *)v106;
        v116 = v101;
LABEL_134:
        memcpy(v114, v115, v116);
        v117 = v1384;
        v118 = v1381;
        goto LABEL_135;
      }
      *v105 = v107;
      v108 = (_QWORD *)((unint64_t)&v105[v1378] & v96);
      v109 = (__int128 *)((unint64_t)&v106[v1378] & v96);
      v110 = *((unsigned __int8 *)v109 + v1380);
      if (v110 > 2)
      {
        v114 = v108;
        v115 = v109;
        v116 = __n;
        goto LABEL_134;
      }
      if (v110 != 2)
      {
        if (v110 != 1)
        {
          *v108 = *(_QWORD *)v109;
          v108[1] = *((_QWORD *)v109 + 1);
          v108[2] = *((_QWORD *)v109 + 2);
          v108[3] = *((_QWORD *)v109 + 3);
          v108[4] = *((_QWORD *)v109 + 4);
          v108[5] = *((_QWORD *)v109 + 5);
          *((_BYTE *)v108 + v1380) = 0;
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          v117 = v1384;
          v118 = v1381;
          goto LABEL_135;
        }
        v1289 = v106;
        v1291 = v105;
        v111 = *((_QWORD *)v109 + 3);
        v108[3] = v111;
        v108[4] = *((_QWORD *)v109 + 4);
        (**(void (***)(_QWORD *, __int128 *))(v111 - 8))(v108, v109);
        v112 = (void *)(((unint64_t)v108 + v1441) & v1317);
        v113 = (const void *)(((unint64_t)v109 + v1441) & v1317);
        if (__swift_getEnumTagSinglePayload((uint64_t)v113, 1, v1398))
        {
          memcpy(v112, v113, v1481);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v1379 + 16))(v112, v113, v1398);
          __swift_storeEnumTagSinglePayload((uint64_t)v112, 0, 1, v1398);
        }
        v148 = (_QWORD *)(((unint64_t)v112 + v1445) & 0xFFFFFFFFFFFFFFF8);
        v149 = (_QWORD *)(((unint64_t)v113 + v1445) & 0xFFFFFFFFFFFFFFF8);
        *v148 = *v149;
        v148[1] = v149[1];
        v150 = ((unint64_t)v148 + 23) & 0xFFFFFFFFFFFFFFF8;
        v151 = ((unint64_t)v149 + 23) & 0xFFFFFFFFFFFFFFF8;
        *(_QWORD *)v150 = *(_QWORD *)v151;
        *(_BYTE *)(v150 + 8) = *(_BYTE *)(v151 + 8);
        v152 = ((unint64_t)v148 + 39) & 0xFFFFFFFFFFFFFFF8;
        v153 = ((unint64_t)v149 + 39) & 0xFFFFFFFFFFFFFFF8;
        *(_QWORD *)v152 = *(_QWORD *)v153;
        *(_BYTE *)(v152 + 8) = *(_BYTE *)(v153 + 8);
        v154 = ((unint64_t)v148 + 55) & 0xFFFFFFFFFFFFFFF8;
        v155 = ((unint64_t)v149 + 55) & 0xFFFFFFFFFFFFFFF8;
        v156 = *(_QWORD *)v155;
        *(_BYTE *)(v154 + 8) = *(_BYTE *)(v155 + 8);
        *(_QWORD *)v154 = v156;
        v157 = (_QWORD *)(((unint64_t)v148 + 71) & 0xFFFFFFFFFFFFFFF8);
        v158 = (_QWORD *)(((unint64_t)v149 + 71) & 0xFFFFFFFFFFFFFFF8);
        *v157 = *v158;
        v157[1] = v158[1];
        v159 = ((unint64_t)v157 + 23) & 0xFFFFFFFFFFFFFFF8;
        v160 = ((unint64_t)v158 + 23) & 0xFFFFFFFFFFFFFFF8;
        v161 = *(_QWORD *)(v160 + 24);
        sub_21D7C4C20();
        sub_21D7C4C20();
        sub_21D7C4C20();
        sub_21D7C4C20();
        if (v161 < 0xFFFFFFFF)
        {
          v162 = *(_OWORD *)v160;
          v163 = *(_OWORD *)(v160 + 16);
          *(_QWORD *)(v159 + 32) = *(_QWORD *)(v160 + 32);
          *(_OWORD *)v159 = v162;
          *(_OWORD *)(v159 + 16) = v163;
        }
        else
        {
          *(_QWORD *)(v159 + 24) = v161;
          *(_QWORD *)(v159 + 32) = *(_QWORD *)(v160 + 32);
          (**(void (***)(unint64_t, unint64_t, unint64_t))(v161 - 8))(v159, v160, v161);
        }
        v101 = v1451;
        v164 = (_BYTE *)((v1478 + v159) & v1388);
        v165 = (_QWORD *)((v1478 + v160) & v1388);
        if (v1371 >= 0x7FFFFFFF)
        {
          v169 = ((unint64_t)v165 + v1374) & v103;
          if (__swift_getEnumTagSinglePayload(v169, v1363, v1376) <= 1)
          {
            v167 = (char *)(v165 + 1);
            v168 = v1374;
            goto LABEL_171;
          }
        }
        else
        {
          v166 = v165[2];
          if (v166 >= 0xFFFFFFFF)
            LODWORD(v166) = -1;
          if ((int)v166 - 1 < 0)
          {
            v167 = (char *)(v165 + 1);
            v168 = v1374;
            v169 = ((unint64_t)v165 + v1374) & v103;
LABEL_171:
            *v164 = *(_BYTE *)v165;
            *(_QWORD *)(((v1478 + v159) & v1388) + 8) = v165[1];
            *(_QWORD *)(((v1478 + v159) & v1388) + 0x10) = *((_QWORD *)v167 + 1);
            *(_QWORD *)(((v1478 + v159) & v1388) + 0x18) = *((_QWORD *)v167 + 2);
            *(_QWORD *)(((v1478 + v159) & v1388) + 0x20) = *((_QWORD *)v167 + 3);
            *(_QWORD *)(((v1478 + v159) & v1388) + 0x28) = *((_QWORD *)v167 + 4);
            *(_QWORD *)(((v1478 + v159) & v1388) + 0x30) = *((_QWORD *)v167 + 5);
            *(_QWORD *)(((v1478 + v159) & v1388) + 0x38) = *((_QWORD *)v167 + 6);
            *(_QWORD *)(((v1478 + v159) & v1388) + 0x40) = *((_QWORD *)v167 + 7);
            *(_QWORD *)(((v1478 + v159) & v1388) + 0x48) = *((_QWORD *)v167 + 8);
            *(_QWORD *)(((v1478 + v159) & v1388) + 0x50) = *((_QWORD *)v167 + 9);
            *(_QWORD *)(((v1478 + v159) & v1388) + 0x58) = *((_QWORD *)v167 + 10);
            *(_QWORD *)(((v1478 + v159) & v1388) + 0x60) = *((_QWORD *)v167 + 11);
            v170 = *((_QWORD *)v167 + 12);
            *(_BYTE *)(((v1478 + v159) & v1388) + 0x70) = v167[104];
            *(_QWORD *)(((v1478 + v159) & v1388) + 0x68) = v170;
            v171 = (unint64_t)&v164[v168] & v103;
            sub_21D7C4C20();
            sub_21D7C4C20();
            sub_21D7C4C20();
            sub_21D7C4C20();
            sub_21D7C4C20();
            sub_21D7C4C20();
            if (!__swift_getEnumTagSinglePayload(v169, 1, v1376))
            {
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v1360 + 16))(v171, v169, v1376);
              __swift_storeEnumTagSinglePayload(v171, 0, 1, v1376);
              goto LABEL_175;
            }
            v172 = (void *)v171;
            v173 = (const void *)v169;
            v174 = v1437;
LABEL_174:
            memcpy(v172, v173, v174);
LABEL_175:
            v118 = v1381;
            v106 = v1289;
            v105 = v1291;
            *((_BYTE *)v108 + v1380) = 1;
            v117 = v1384;
            goto LABEL_135;
          }
        }
        v172 = (void *)((v1478 + v159) & v1388);
        v173 = v165;
        v174 = v1442;
        goto LABEL_174;
      }
      v1290 = v106;
      v1292 = v105;
      if (*((_QWORD *)v109 + 1) < 0xFFFFFFFFuLL)
      {
        memcpy(v108, v109, 0x48uLL);
        v118 = v1381;
      }
      else
      {
        *v108 = *(_QWORD *)v109;
        v108[1] = *((_QWORD *)v109 + 1);
        v108[2] = *((_QWORD *)v109 + 2);
        v108[3] = *((_QWORD *)v109 + 3);
        v1284 = v109 + 2;
        v1286 = v108 + 4;
        v147 = *((_QWORD *)v109 + 7);
        sub_21D7C4C20();
        sub_21D7C4C20();
        v118 = v1381;
        if (v147)
        {
          v108[7] = v147;
          v108[8] = *((_QWORD *)v109 + 8);
          (**(void (***)(_OWORD *, __int128 *, uint64_t))(v147 - 8))(v1286, v1284, v147);
        }
        else
        {
          v254 = *v1284;
          v255 = v109[3];
          v108[8] = *((_QWORD *)v109 + 8);
          *v1286 = v254;
          *((_OWORD *)v108 + 3) = v255;
        }
      }
      v256 = ((unint64_t)v108 + 79) & 0xFFFFFFFFFFFFFFF8;
      v257 = (__int128 *)(((unint64_t)v109 + 79) & 0xFFFFFFFFFFFFFFF8);
      if (*((_QWORD *)v257 + 1) < 0xFFFFFFFFuLL)
      {
        memcpy((void *)(((unint64_t)v108 + 79) & 0xFFFFFFFFFFFFFFF8), v257, 0x48uLL);
      }
      else
      {
        *(_QWORD *)v256 = *(_QWORD *)v257;
        *(_QWORD *)(v256 + 8) = *((_QWORD *)v257 + 1);
        *(_QWORD *)(v256 + 16) = *((_QWORD *)v257 + 2);
        *(_QWORD *)(v256 + 24) = *((_QWORD *)v257 + 3);
        v1285 = v257 + 2;
        v1287 = (_OWORD *)(v256 + 32);
        v1382 = *((_QWORD *)v257 + 7);
        sub_21D7C4C20();
        sub_21D7C4C20();
        if (v1382)
        {
          *(_QWORD *)(v256 + 56) = v1382;
          *(_QWORD *)(v256 + 64) = *((_QWORD *)v257 + 8);
          (**(void (***)(_OWORD *, __int128 *))(v1382 - 8))(v1287, v1285);
        }
        else
        {
          v258 = *v1285;
          v259 = v257[3];
          *(_QWORD *)(v256 + 64) = *((_QWORD *)v257 + 8);
          *v1287 = v258;
          *(_OWORD *)(v256 + 48) = v259;
        }
      }
      v260 = (_QWORD *)((v256 + 79) & 0xFFFFFFFFFFFFF8);
      v261 = (_QWORD *)(((unint64_t)v257 + 79) & 0xFFFFFFFFFFFFFFF8);
      *v260 = *v261;
      v262 = (_QWORD *)(((unint64_t)v260 + 15) & 0xFFFFFFFFFFFFFFF8);
      v263 = (_QWORD *)(((unint64_t)v261 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v262 = *v263;
      v264 = (_BYTE *)(((unint64_t)v262 + v1402) & v1390);
      v265 = (unsigned __int8 *)(((unint64_t)v263 + v1402) & v1390);
      sub_21D7C4C20();
      sub_21D7C4C20();
      v1288 = v108;
      if (v1444)
      {
        v266 = v1375;
        v117 = v1384;
        v267 = v265;
        if (v1369 >= v1375)
        {
          v268 = (uint64_t)v265;
          v266 = v1369;
          v269 = v1372;
        }
        else
        {
          v268 = (unint64_t)&v265[v1373] & v104;
          v269 = v1377;
        }
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v268, v266, v269);
        v106 = v1290;
        v105 = v1292;
      }
      else
      {
        v267 = v265;
        v270 = v265[v1396];
        v117 = v1384;
        v106 = v1290;
        v105 = v1292;
        if (!v270)
          goto LABEL_671;
        v271 = (v270 - 1) << v1315;
        if (v1396 > 3)
          v271 = 0;
        if ((_DWORD)v1396)
        {
          if (v1396 <= 3)
            v272 = v1396;
          else
            v272 = 4;
          __asm { BR              X11 }
        }
        EnumTagSinglePayload = v271 + 1;
      }
      if (!EnumTagSinglePayload)
      {
LABEL_671:
        (*(void (**)(_BYTE *, const void *, uint64_t))(v1366 + 16))(v264, v267, v1372);
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v1367 + 16))((unint64_t)&v264[v1373] & v104, ((unint64_t)v267 + v1373) & v104, v1377);
        if (!v1444)
          v264[v1396] = 0;
        goto LABEL_673;
      }
      memcpy(v264, v267, v1443);
LABEL_673:
      v264[v1443] = *((_BYTE *)v267 + v1443);
      *((_BYTE *)v1288 + v1380) = 2;
      v101 = v1451;
LABEL_135:
      v119 = ~v118;
      v120 = &v105[v101];
      v121 = &v106[v101];
      *(_WORD *)v120 = *(_WORD *)&v106[v101];
      v120[2] = v106[v101 + 2];
      v120[3] = v106[v101 + 3];
      v122 = (unint64_t)&v105[v101 + 11] & 0xFFFFFFFFFFFFFFF8;
      v123 = (unint64_t)(v121 + 11) & 0xFFFFFFFFFFFFFFF8;
      v124 = *(_QWORD *)(v123 + 24);
      if (v124 < 0xFFFFFFFF)
      {
        v125 = *(_OWORD *)v123;
        v126 = *(_OWORD *)(v123 + 16);
        v127 = *(_OWORD *)(v123 + 32);
        *(_OWORD *)(v122 + 41) = *(_OWORD *)(v123 + 41);
        *(_OWORD *)(v122 + 16) = v126;
        *(_OWORD *)(v122 + 32) = v127;
        *(_OWORD *)v122 = v125;
      }
      else
      {
        *(_QWORD *)(v122 + 24) = v124;
        *(_QWORD *)(v122 + 32) = *(_QWORD *)(v123 + 32);
        (**(void (***)(unint64_t, unint64_t))(v124 - 8))(v122, (unint64_t)(v121 + 11) & 0xFFFFFFFFFFFFFFF8);
        *(_QWORD *)(v122 + 40) = *(_QWORD *)(v123 + 40);
        *(_QWORD *)(v122 + 48) = *(_QWORD *)(v123 + 48);
        *(_BYTE *)(v122 + 56) = *(_BYTE *)(v123 + 56);
        sub_21D7C4C20();
      }
      v128 = v1397;
      v129 = ~v117;
      v130 = ~v1452;
      *(_BYTE *)(v122 + 57) = *(_BYTE *)(v123 + 57);
      v131 = (_QWORD *)((v1391 + v122) & v119);
      v132 = (_QWORD *)((v1391 + v123) & v119);
      if (v1392 >= 0x80000001)
      {
        v135 = (const void *)(((unint64_t)v132 + v1397) & v129);
        v134 = v1393;
        v136 = __swift_getEnumTagSinglePayload((uint64_t)v135, v1392, v1393);
        v128 = v1397;
        if (v136 < 2)
          goto LABEL_142;
      }
      else
      {
        v133 = *(_QWORD *)(((v1391 + v123) & v119) + 8);
        v134 = v1393;
        if (v133 >= 0xFFFFFFFF)
        {
          v135 = (const void *)(((unint64_t)v132 + v1397) & v129);
LABEL_142:
          *v131 = *v132;
          v131[1] = v132[1];
          v137 = (void *)(((unint64_t)v131 + v128) & v129);
          sub_21D7C4C20();
          if (__swift_getEnumTagSinglePayload((uint64_t)v135, 1, v134))
          {
            memcpy(v137, v135, v1370);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1365 + 16))(v137, v135, v134);
            __swift_storeEnumTagSinglePayload((uint64_t)v137, 0, 1, v134);
          }
          v139 = v1408;
          v138 = v1383;
          goto LABEL_147;
        }
      }
      v138 = v1383;
      memcpy(v131, v132, v1383);
      v139 = v1408;
LABEL_147:
      v140 = v1395 + 1;
      v141 = (_QWORD *)(((unint64_t)v131 + v1452 + v138) & v130);
      v142 = (_QWORD *)(((unint64_t)v132 + v1452 + v138) & v130);
      v144 = ~v1450;
      v145 = ~v1448;
      v146 = ~v1394;
      switch(*((_BYTE *)v142 + v1423))
      {
        case 0:
          v1465 = ~v139;
          v1293 = v93;
          v1282 = v89;
          if (__swift_getEnumTagSinglePayload((uint64_t)v142, 1, v1398))
          {
            memcpy(v141, v142, v1481);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1379 + 16))(v141, v142, v1398);
            __swift_storeEnumTagSinglePayload((uint64_t)v141, 0, 1, v1398);
          }
          v1409 = v141;
          v274 = ((unint64_t)v141 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v1454 = v142;
          v275 = ((unint64_t)v142 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v276 = *(_QWORD *)(v275 + 24);
          *(_QWORD *)(v274 + 24) = v276;
          *(_QWORD *)(v274 + 32) = *(_QWORD *)(v275 + 32);
          (**(void (***)(unint64_t, unint64_t))(v276 - 8))(v274, v275);
          v277 = (_QWORD *)((v274 + 47) & 0xFFFFFFFFFFFFFFF8);
          v278 = (_QWORD *)((v275 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v277 = *v278;
          v277[1] = v278[1];
          v279 = (_QWORD *)(((unint64_t)v277 + 23) & 0xFFFFFFFFFFFFF8);
          v280 = (_QWORD *)(((unint64_t)v278 + 23) & 0xFFFFFFFFFFFFF8);
          *v279 = *v280;
          v281 = (_QWORD *)(((unint64_t)v279 + 15) & 0xFFFFFFFFFFFFFFF8);
          v282 = (_QWORD *)(((unint64_t)v280 + 15) & 0xFFFFFFFFFFFFFFF8);
          *v281 = *v282;
          v281[1] = v282[1];
          v283 = (_QWORD *)(((unint64_t)v281 + v1358) & v1472);
          v284 = (_QWORD *)(((unint64_t)v282 + v1358) & v1472);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v1314 > 0x7FFFFFFE)
          {
            v287 = (_QWORD *)(((unint64_t)v284 + 23) & 0xFFFFFFFFFFFFFFF8);
            v288 = ((unint64_t)v287 + 23) & 0xFFFFFFFFFFFFFFF8;
            v289 = __swift_getEnumTagSinglePayload((v1450 + v288 + 33) & v144, v1314, v1357);
            v286 = v1474;
            if (!v289)
              goto LABEL_304;
          }
          else
          {
            v285 = v284[1];
            if (v285 >= 0xFFFFFFFF)
              LODWORD(v285) = -1;
            v286 = v1474;
            if ((v285 + 1) <= 1)
            {
              v287 = (_QWORD *)(((unint64_t)v284 + 23) & 0xFFFFFFFFFFFFFFF8);
              v288 = ((unint64_t)v287 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_304:
              *v283 = *v284;
              v283[1] = v284[1];
              v291 = (_QWORD *)(((unint64_t)v283 + 23) & 0xFFFFFFFFFFFFFFF8);
              *v291 = *v287;
              v291[1] = v287[1];
              v292 = ((unint64_t)v291 + 23) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)v292 = *(_QWORD *)v288;
              *(_QWORD *)(v292 + 8) = *(_QWORD *)(v288 + 8);
              *(_BYTE *)(v292 + 16) = *(_BYTE *)(v288 + 16);
              v293 = ((unint64_t)v291 + 47) & 0xFFFFFFFFFFFFFFF8;
              v294 = ((unint64_t)v287 + 47) & 0xFFFFFFFFFFFFFFF8;
              v295 = *(void **)v294;
              *(_QWORD *)v293 = *(_QWORD *)v294;
              *(_BYTE *)(v293 + 8) = *(_BYTE *)(v294 + 8);
              v296 = (v1450 + 9 + v293) & v144;
              v297 = (v1450 + 9 + v294) & v144;
              v298 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1424 + 16);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              v299 = v295;
              v298(v296, v297, v1357);
              v290 = v1474;
LABEL_305:
              *((_BYTE *)v283 + v290) = *((_BYTE *)v284 + v290);
              v300 = ((unint64_t)v283 + v290) & 0xFFFFFFFFFFFFFFF8;
              v301 = ((unint64_t)v284 + v290) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)(v300 + 8) = *(_QWORD *)(v301 + 8);
              v302 = (_QWORD *)((v300 + 23) & 0xFFFFFFFFFFFFFFF8);
              v303 = (_QWORD *)((v301 + 23) & 0xFFFFFFFFFFFFFFF8);
              *v302 = *v303;
              v302[1] = v303[1];
              v304 = (void *)(((unint64_t)v302 + v1435) & v1390);
              v305 = (_BYTE *)(((unint64_t)v303 + v1435) & v1390);
              sub_21D7C4C20();
              sub_21D7C4C20();
              v306 = v1481;
              if (v1444)
              {
                v307 = v1375;
                if (v1369 >= v1375)
                {
                  v308 = (uint64_t)v305;
                  v307 = v1369;
                  v309 = v1372;
                }
                else
                {
                  v308 = (unint64_t)&v305[v1373] & v1316;
                  v309 = v1377;
                }
                v710 = __swift_getEnumTagSinglePayload(v308, v307, v309);
                v652 = v1293;
              }
              else
              {
                v652 = v1293;
                if (!v305[v1396])
                  goto LABEL_777;
                v653 = (v305[v1396] - 1) << v1315;
                if (v1396 > 3)
                  v653 = 0;
                if ((_DWORD)v1396)
                {
                  if (v1396 <= 3)
                    v654 = v1396;
                  else
                    v654 = 4;
                  __asm { BR              X11 }
                }
                v710 = v653 + 1;
              }
              if (v710)
              {
                memcpy(v304, v305, v1443);
                goto LABEL_779;
              }
LABEL_777:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1366 + 16))(v304, v305, v1372);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1367 + 16))(((unint64_t)v304 + v1373) & v1316, (unint64_t)&v305[v1373] & v1316, v1377);
              if (!v1444)
                *((_BYTE *)v304 + v1396) = 0;
LABEL_779:
              v869 = (_QWORD *)(((unint64_t)v304 + v1436) & v1465);
              v870 = (uint64_t *)((unint64_t)&v305[v1436] & v1465);
              v871 = v1439;
              if ((v1375 & 0x80000000) != 0)
              {
                v873 = __swift_getEnumTagSinglePayload(((unint64_t)v870 + v1359) & v1316, v1375, v1377);
                v871 = v1439;
              }
              else
              {
                v872 = *v870;
                if ((unint64_t)*v870 >= 0xFFFFFFFF)
                  LODWORD(v872) = -1;
                v873 = v872 + 1;
              }
              v874 = v1442;
              if (v873)
              {
                memcpy(v869, v870, v871);
              }
              else
              {
                *v869 = *v870;
                v875 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1367 + 16);
                sub_21D7C4C20();
                v306 = v1481;
                v875(((unint64_t)v869 + v1359) & v1316, ((unint64_t)v870 + v1359) & v1316, v1377);
              }
              v876 = (_QWORD *)(((unint64_t)v869 + v1361) & v1388);
              v877 = (_BYTE *)(((unint64_t)v870 + v1361) & v1388);
              if (v1371 >= 0x7FFFFFFF)
              {
                v882 = (const void *)((unint64_t)&v877[v1374] & v1386);
                if (__swift_getEnumTagSinglePayload((uint64_t)v882, v1363, v1376) <= 1)
                {
                  v880 = v877 + 8;
                  v881 = v1374;
                  v879 = ~v1447;
                  goto LABEL_794;
                }
              }
              else
              {
                v878 = *(_QWORD *)((((unint64_t)v870 + v1361) & v1388) + 0x10);
                if (v878 >= 0xFFFFFFFF)
                  LODWORD(v878) = -1;
                v879 = ~v1447;
                if ((int)v878 - 1 < 0)
                {
                  v880 = v877 + 8;
                  v881 = v1374;
                  v882 = (const void *)((unint64_t)&v877[v1374] & v1386);
LABEL_794:
                  *(_BYTE *)v876 = *v877;
                  v876[1] = *(_QWORD *)((((unint64_t)v870 + v1361) & v1388) + 8);
                  v876[2] = *((_QWORD *)v880 + 1);
                  v876[3] = *((_QWORD *)v880 + 2);
                  v876[4] = *((_QWORD *)v880 + 3);
                  v876[5] = *((_QWORD *)v880 + 4);
                  v876[6] = *((_QWORD *)v880 + 5);
                  v876[7] = *((_QWORD *)v880 + 6);
                  v876[8] = *((_QWORD *)v880 + 7);
                  v876[9] = *((_QWORD *)v880 + 8);
                  v876[10] = *((_QWORD *)v880 + 9);
                  v876[11] = *((_QWORD *)v880 + 10);
                  v876[12] = *((_QWORD *)v880 + 11);
                  v883 = *((_QWORD *)v880 + 12);
                  *((_BYTE *)v876 + 112) = v880[104];
                  v876[13] = v883;
                  v1479 = (void *)(((unint64_t)v876 + v881) & v879);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (__swift_getEnumTagSinglePayload((uint64_t)v882, 1, v1376))
                  {
                    memcpy(v1479, v882, v1437);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1360 + 16))(v1479, v882, v1376);
                    __swift_storeEnumTagSinglePayload((uint64_t)v1479, 0, 1, v1376);
                  }
                  v652 = v1293;
                  v874 = v1442;
                  v306 = v1481;
LABEL_799:
                  v884 = v874;
                  v885 = (unint64_t)v876 + v1448 + v874;
                  v886 = (unint64_t)&v877[v1448 + v884];
                  v887 = v886 & v145;
                  if (v1364 < 0x7FFFFFFF)
                  {
                    if (*(_QWORD *)(((v1445 + v887) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                      goto LABEL_801;
                  }
                  else if (__swift_getEnumTagSinglePayload(v886 & v145, v1440, v1398) >= 2)
                  {
LABEL_801:
                    memcpy((void *)(v885 & v145), (const void *)(v886 & v145), v1362);
                    v888 = v1362;
                    v889 = v1440;
                    goto LABEL_811;
                  }
                  if (__swift_getEnumTagSinglePayload(v886 & v145, 1, v1398))
                  {
                    memcpy((void *)(v885 & v145), (const void *)(v886 & v145), v306);
                  }
                  else
                  {
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v1379 + 16))(v885 & v145, v886 & v145, v1398);
                    __swift_storeEnumTagSinglePayload(v885 & v145, 0, 1, v1398);
                  }
                  v890 = (v1445 + (v885 & v145)) & 0xFFFFFFFFFFFFFFF8;
                  v891 = (v1445 + v887) & 0xFFFFFFFFFFFFFFF8;
                  v892 = *(_QWORD *)(v891 + 24);
                  *(_QWORD *)(v890 + 24) = v892;
                  *(_QWORD *)(v890 + 32) = *(_QWORD *)(v891 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v892 - 8))(v890, v891);
                  v893 = (v890 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v894 = (v891 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v895 = *(_QWORD *)(v894 + 24);
                  if (v895 < 0xFFFFFFFF)
                  {
                    v896 = *(_OWORD *)v894;
                    v897 = *(_OWORD *)(v894 + 16);
                    *(_QWORD *)(v893 + 32) = *(_QWORD *)(v894 + 32);
                    *(_OWORD *)v893 = v896;
                    *(_OWORD *)(v893 + 16) = v897;
                  }
                  else
                  {
                    *(_QWORD *)(v893 + 24) = v895;
                    *(_QWORD *)(v893 + 32) = *(_QWORD *)(v894 + 32);
                    (**(void (***)(unint64_t, unint64_t))(v895 - 8))(v893, (v891 + 47) & 0xFFFFFFFFFFFFFFF8);
                  }
                  v898 = (_QWORD *)((v893 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v899 = (_QWORD *)((v894 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v898 = *v899;
                  v898[1] = v899[1];
                  sub_21D7C4C20();
                  v888 = v1362;
                  v889 = v1440;
                  if (v1440)
                    v888 = ((((((v1395 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                         + 16;
LABEL_811:
                  v900 = (v885 | v1449) + v888;
                  v901 = (v886 | v1449) + v888;
                  v902 = v901 & v145;
                  if (v1364 < 0x7FFFFFFF)
                  {
                    v141 = v1409;
                    if (*(_QWORD *)(((v1445 + v902) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                      goto LABEL_813;
                  }
                  else
                  {
                    v141 = v1409;
                    if (__swift_getEnumTagSinglePayload(v901 & v145, v889, v1398) >= 2)
                    {
LABEL_813:
                      memcpy((void *)(v900 & v145), (const void *)(v901 & v145), v1362);
                      v903 = v1362;
                      v904 = v1481;
                      v905 = v1440;
                      goto LABEL_823;
                    }
                  }
                  if (__swift_getEnumTagSinglePayload(v901 & v145, 1, v1398))
                  {
                    v904 = v1481;
                    memcpy((void *)(v900 & v145), (const void *)(v901 & v145), v1481);
                  }
                  else
                  {
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v1379 + 16))(v900 & v145, v901 & v145, v1398);
                    __swift_storeEnumTagSinglePayload(v900 & v145, 0, 1, v1398);
                    v904 = v1481;
                  }
                  v906 = (v1445 + (v900 & v145)) & 0xFFFFFFFFFFFFFFF8;
                  v907 = (v1445 + v902) & 0xFFFFFFFFFFFFFFF8;
                  v908 = *(_QWORD *)(v907 + 24);
                  *(_QWORD *)(v906 + 24) = v908;
                  *(_QWORD *)(v906 + 32) = *(_QWORD *)(v907 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v908 - 8))(v906, v907);
                  v909 = (v906 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v910 = (v907 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v911 = *(_QWORD *)(v910 + 24);
                  if (v911 < 0xFFFFFFFF)
                  {
                    v912 = *(_OWORD *)v910;
                    v913 = *(_OWORD *)(v910 + 16);
                    *(_QWORD *)(v909 + 32) = *(_QWORD *)(v910 + 32);
                    *(_OWORD *)v909 = v912;
                    *(_OWORD *)(v909 + 16) = v913;
                  }
                  else
                  {
                    *(_QWORD *)(v909 + 24) = v911;
                    *(_QWORD *)(v909 + 32) = *(_QWORD *)(v910 + 32);
                    (**(void (***)(unint64_t, unint64_t))(v911 - 8))(v909, v910);
                  }
                  v914 = (_QWORD *)((v909 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v915 = (_QWORD *)((v910 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v914 = *v915;
                  v914[1] = v915[1];
                  sub_21D7C4C20();
                  v903 = v1362;
                  v905 = v1440;
                  if (v1440)
                    v903 = ((((((v1395 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                         + 16;
LABEL_823:
                  v916 = (char *)(((v900 | v1449) + v903) & v145);
                  v917 = (char *)(((v901 | v1449) + v903) & v145);
                  if (v1364 < 0x7FFFFFFF)
                  {
                    v142 = v1454;
                    v93 = v652;
                    if (*(_QWORD *)(((unint64_t)&v917[v1445] & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                    {
LABEL_825:
                      memcpy(v916, v917, v1362);
                      v918 = v1470;
                      if (!v1440)
                        goto LABEL_837;
                      goto LABEL_836;
                    }
                  }
                  else
                  {
                    v142 = v1454;
                    v93 = v652;
                    if (__swift_getEnumTagSinglePayload((uint64_t)v917, v905, v1398) >= 2)
                      goto LABEL_825;
                  }
                  if (__swift_getEnumTagSinglePayload((uint64_t)v917, 1, v1398))
                  {
                    memcpy(v916, v917, v904);
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(v1379 + 16))(v916, v917, v1398);
                    __swift_storeEnumTagSinglePayload((uint64_t)v916, 0, 1, v1398);
                  }
                  v919 = (unint64_t)&v916[v1445] & 0xFFFFFFFFFFFFFFF8;
                  v920 = (unint64_t)&v917[v1445] & 0xFFFFFFFFFFFFFFF8;
                  v921 = *(_QWORD *)(v920 + 24);
                  *(_QWORD *)(v919 + 24) = v921;
                  *(_QWORD *)(v919 + 32) = *(_QWORD *)(v920 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v921 - 8))(v919, v920);
                  v922 = (v919 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v923 = (v920 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v924 = *(_QWORD *)(v923 + 24);
                  v918 = v1470;
                  if (v924 < 0xFFFFFFFF)
                  {
                    v925 = *(_OWORD *)v923;
                    v926 = *(_OWORD *)(v923 + 16);
                    *(_QWORD *)(v922 + 32) = *(_QWORD *)(v923 + 32);
                    *(_OWORD *)v922 = v925;
                    *(_OWORD *)(v922 + 16) = v926;
                  }
                  else
                  {
                    *(_QWORD *)(v922 + 24) = v924;
                    *(_QWORD *)(v922 + 32) = *(_QWORD *)(v923 + 32);
                    (**(void (***)(unint64_t, unint64_t))(v924 - 8))(v922, v923);
                  }
                  v927 = (_QWORD *)((v922 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v928 = (_QWORD *)((v923 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v927 = *v928;
                  v927[1] = v928[1];
                  sub_21D7C4C20();
                  v142 = v1454;
                  v93 = v652;
                  if (!v1440)
                    goto LABEL_837;
                  v1362 = ((((((v1395 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                        + 16;
LABEL_836:
                  v140 = v1395;
LABEL_837:
                  *(_QWORD *)&v916[v1362] = *(_QWORD *)&v917[v1362];
                  v929 = v1354
                       + ((v1352
                         + ((v1352
                           + ((v1432
                             + ((v1361
                               + ((v1436
                                 + ((v1435
                                   + ((((((v1358
                                         + ((((((((v140 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                           + 15) & 0xFFFFFFFFFFFFFFF8)) & v1472)
                                       + v1474) & 0xFFFFFFFFFFFFFFF8)
                                     + 23) & 0xFFFFFFFFFFFFFFF8)) & v1390)) & v1465)) & v1388)) & v145)) & v145)) & v145);
                  if (v1355 > v929)
                    v929 = v1355;
                  if (v929 <= v1353)
                    v929 = v1353;
                  if (v929 <= v1356)
                    v929 = v1356;
                  if (v929 <= v1351)
                    v929 = v1351;
                  if (v929 <= v1350)
                    v929 = v1350;
                  if (v929 <= v1347)
                    v929 = v1347;
                  if (v929 <= v1348)
                    v929 = (((((v1470 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                         + 16;
                  if (v929 <= v1349)
                    v929 = v1349;
                  if (v929 <= v1346)
                    v929 = v1346;
                  if (v929 <= v1345)
                    v929 = v1345;
                  if (v929 <= v1343)
                    v929 = v1343;
                  if (v929 <= v1400)
                    v929 = v1400;
                  if (v929 <= v1342)
                    v929 = v1342;
                  if (v929 <= v1434)
                    v929 = v1434;
                  if (v929 <= v1344)
                    v929 = v1344;
                  if (v929 <= v1355)
                    v929 = v1355;
                  if (v929 <= v1341)
                    v929 = v1341;
                  if (v929 <= v1406)
                    v929 = ((v1470 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
                  if (v929 <= v1427)
                    v929 = v1427;
                  if (v929 <= v1430)
                    v929 = v1430;
                  if (v929 <= v1428)
                    v929 = v1428;
                  if (v929 <= v1306)
                    v929 = v1306;
                  if (v929 <= v1304)
                    v929 = v1304;
                  if (v929 <= v1305)
                    v929 = v1305;
                  if (v929 <= v80)
                    v929 = v80;
                  if (v929 <= v1312)
                    v929 = v1312;
                  if (v929 <= v1307)
                    v929 = v1307;
                  if (v929 <= v1310)
                    v929 = v1310;
                  if (v929 <= v1311)
                    v929 = v1311;
                  if (v929 <= v918)
                    v929 = v918;
                  if (v929 <= v1308)
                    v929 = v1308;
                  if (v929 <= v1309)
                    v929 = v1309;
                  if (v929 <= v1282)
                    v929 = v1282;
                  if (v929 <= 8)
                    v929 = 8;
                  *((_BYTE *)v141 + v929) = 0;
                  goto LABEL_264;
                }
              }
              memcpy(v876, v877, v1442);
              goto LABEL_799;
            }
          }
          v290 = v286;
          memcpy(v283, v284, v286);
          goto LABEL_305;
        case 1:
          *v141 = *v142;
          v175 = v141;
          v176 = ((unint64_t)v141 + v1421 + 8) & v1388;
          v177 = v142;
          v178 = ((unint64_t)v142 + v1421 + 8) & v1388;
          *(_BYTE *)v176 = *(_BYTE *)v178;
          *(_QWORD *)(v176 + 8) = *(_QWORD *)(v178 + 8);
          *(_QWORD *)(v176 + 16) = *(_QWORD *)(v178 + 0x10);
          *(_QWORD *)(v176 + 24) = *(_QWORD *)(v178 + 0x18);
          *(_QWORD *)(v176 + 32) = *(_QWORD *)(v178 + 0x20);
          *(_QWORD *)(v176 + 40) = *(_QWORD *)(v178 + 0x28);
          *(_QWORD *)(v176 + 48) = *(_QWORD *)(v178 + 0x30);
          *(_QWORD *)(v176 + 56) = *(_QWORD *)(v178 + 0x38);
          *(_QWORD *)(v176 + 64) = *(_QWORD *)(v178 + 0x40);
          *(_QWORD *)(v176 + 72) = *(_QWORD *)(v178 + 0x48);
          *(_QWORD *)(v176 + 80) = *(_QWORD *)(v178 + 0x50);
          *(_QWORD *)(v176 + 88) = *(_QWORD *)(v178 + 0x58);
          *(_QWORD *)(v176 + 96) = *(_QWORD *)(v178 + 0x60);
          v179 = *(_QWORD *)(v178 + 0x68);
          *(_BYTE *)(v176 + 112) = *(_BYTE *)(v178 + 0x70);
          *(_QWORD *)(v176 + 104) = v179;
          v180 = (void *)((v1374 + v176) & v1386);
          v181 = (const void *)((v1374 + v178) & v1386);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (__swift_getEnumTagSinglePayload((uint64_t)v181, 1, v1376))
          {
            memcpy(v180, v181, v1437);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1360 + 16))(v180, v181, v1376);
            __swift_storeEnumTagSinglePayload((uint64_t)v180, 0, 1, v1376);
          }
          v310 = 1;
          goto LABEL_423;
        case 2:
          *v141 = *v142;
          v182 = 2;
          goto LABEL_262;
        case 3:
          v1466 = ~v139;
          if (__swift_getEnumTagSinglePayload((uint64_t)v142, 1, v1398))
          {
            memcpy(v141, v142, v1481);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1379 + 16))(v141, v142, v1398);
            __swift_storeEnumTagSinglePayload((uint64_t)v141, 0, 1, v1398);
          }
          v311 = v1396;
          v312 = v1316;
          v313 = ((unint64_t)v141 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v1455 = v142;
          v314 = ((unint64_t)v142 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v315 = *(_QWORD *)(v314 + 24);
          *(_QWORD *)(v313 + 24) = v315;
          *(_QWORD *)(v313 + 32) = *(_QWORD *)(v314 + 32);
          (**(void (***)(unint64_t, unint64_t))(v315 - 8))(v313, v314);
          v316 = (_QWORD *)((v313 + 47) & 0xFFFFFFFFFFFFFFF8);
          v317 = (_QWORD *)((v314 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v316 = *v317;
          v316[1] = v317[1];
          v318 = (void *)(((unint64_t)v316 + v1435) & v1390);
          v319 = (_BYTE *)(((unint64_t)v317 + v1435) & v1390);
          sub_21D7C4C20();
          if (v1444)
          {
            v320 = v1375;
            if (v1369 >= v1375)
            {
              v321 = (uint64_t)v319;
              v320 = v1369;
              v322 = v1372;
            }
            else
            {
              v321 = (unint64_t)&v319[v1373] & v1316;
              v322 = v1377;
            }
            v711 = __swift_getEnumTagSinglePayload(v321, v320, v322);
          }
          else
          {
            if (!v319[v1396])
              goto LABEL_908;
            v655 = (v319[v1396] - 1) << v1315;
            if (v1396 > 3)
              v655 = 0;
            if ((_DWORD)v1396)
            {
              if (v1396 <= 3)
                v656 = v1396;
              else
                v656 = 4;
              __asm { BR              X11 }
            }
            v711 = v655 + 1;
          }
          if (v711)
          {
            memcpy(v318, v319, v1443);
            goto LABEL_910;
          }
LABEL_908:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1366 + 16))(v318, v319, v1372);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1367 + 16))(((unint64_t)v318 + v1373) & v1316, (unint64_t)&v319[v1373] & v1316, v1377);
          if (!v1444)
            *((_BYTE *)v318 + v1396) = 0;
LABEL_910:
          *((_BYTE *)v318 + v1443) = v319[v1443];
          v930 = ((unint64_t)v318 + v1443 + v1394 + 1) & v146;
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v1332 + 16))(v930, (unint64_t)&v319[v1443 + 1 + v1394] & v146, v1333);
          v931 = (v1329 + v930) & 0xFFFFFFFFFFFFFFF8;
          v932 = (v1329 + ((unint64_t)&v319[v1443 + 1 + v1394] & v146)) & 0xFFFFFFFFFFFFFFF8;
          v933 = *(_QWORD *)(v932 + 24);
          if (v933 < 0xFFFFFFFF)
          {
            v934 = *(_OWORD *)v932;
            v935 = *(_OWORD *)(v932 + 16);
            *(_QWORD *)(v931 + 32) = *(_QWORD *)(v932 + 32);
            *(_OWORD *)v931 = v934;
            *(_OWORD *)(v931 + 16) = v935;
          }
          else
          {
            *(_QWORD *)(v931 + 24) = v933;
            *(_QWORD *)(v931 + 32) = *(_QWORD *)(v932 + 32);
            (**(void (***)(unint64_t, unint64_t))(v933 - 8))(v931, v932);
          }
          v936 = (_BYTE *)((v1478 + v931) & v1388);
          v937 = (_QWORD *)((v1478 + v932) & v1388);
          if (v1371 >= 0x7FFFFFFF)
          {
            v942 = (const void *)(((unint64_t)v937 + v1374) & v1386);
            if (__swift_getEnumTagSinglePayload((uint64_t)v942, v1363, v1376) <= 1)
            {
              v1416 = v141;
              v939 = (char *)(v937 + 1);
              v940 = v1374;
              v941 = ~v1447;
              goto LABEL_920;
            }
          }
          else
          {
            v938 = v937[2];
            if (v938 >= 0xFFFFFFFF)
              LODWORD(v938) = -1;
            if ((int)v938 - 1 < 0)
            {
              v1416 = v141;
              v939 = (char *)(v937 + 1);
              v940 = v1374;
              v941 = ~v1447;
              v942 = (const void *)(((unint64_t)v937 + v1374) & v1386);
LABEL_920:
              *v936 = *(_BYTE *)v937;
              *(_QWORD *)(((v1478 + v931) & v1388) + 8) = v937[1];
              *(_QWORD *)(((v1478 + v931) & v1388) + 0x10) = *((_QWORD *)v939 + 1);
              *(_QWORD *)(((v1478 + v931) & v1388) + 0x18) = *((_QWORD *)v939 + 2);
              *(_QWORD *)(((v1478 + v931) & v1388) + 0x20) = *((_QWORD *)v939 + 3);
              *(_QWORD *)(((v1478 + v931) & v1388) + 0x28) = *((_QWORD *)v939 + 4);
              *(_QWORD *)(((v1478 + v931) & v1388) + 0x30) = *((_QWORD *)v939 + 5);
              *(_QWORD *)(((v1478 + v931) & v1388) + 0x38) = *((_QWORD *)v939 + 6);
              *(_QWORD *)(((v1478 + v931) & v1388) + 0x40) = *((_QWORD *)v939 + 7);
              *(_QWORD *)(((v1478 + v931) & v1388) + 0x48) = *((_QWORD *)v939 + 8);
              *(_QWORD *)(((v1478 + v931) & v1388) + 0x50) = *((_QWORD *)v939 + 9);
              *(_QWORD *)(((v1478 + v931) & v1388) + 0x58) = *((_QWORD *)v939 + 10);
              *(_QWORD *)(((v1478 + v931) & v1388) + 0x60) = *((_QWORD *)v939 + 11);
              v943 = *((_QWORD *)v939 + 12);
              *(_BYTE *)(((v1478 + v931) & v1388) + 0x70) = v939[104];
              *(_QWORD *)(((v1478 + v931) & v1388) + 0x68) = v943;
              v944 = (void *)((unint64_t)&v936[v940] & v941);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              if (__swift_getEnumTagSinglePayload((uint64_t)v942, 1, v1376))
              {
                memcpy(v944, v942, v1437);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1360 + 16))(v944, v942, v1376);
                __swift_storeEnumTagSinglePayload((uint64_t)v944, 0, 1, v1376);
              }
              v141 = v1416;
              v311 = v1396;
              v312 = v1316;
LABEL_925:
              v945 = (void *)((unint64_t)&v936[v1469 + v1442] & v1390);
              v946 = (_BYTE *)(((unint64_t)v937 + v1469 + v1442) & v1390);
              if (v1444)
              {
                v947 = v1375;
                if (v1369 >= v1375)
                {
                  v948 = (uint64_t)v946;
                  v947 = v1369;
                  v949 = v1372;
                }
                else
                {
                  v948 = (unint64_t)&v946[v1373] & v312;
                  v949 = v1377;
                }
                v952 = __swift_getEnumTagSinglePayload(v948, v947, v949);
              }
              else
              {
                if (!v946[v311])
                  goto LABEL_977;
                v950 = (v946[v311] - 1) << v1315;
                if (v311 > 3)
                  v950 = 0;
                if ((_DWORD)v311)
                {
                  if (v311 <= 3)
                    v951 = v311;
                  else
                    v951 = 4;
                  __asm { BR              X11 }
                }
                v952 = v950 + 1;
              }
              if (v952)
              {
                memcpy(v945, v946, v1443);
LABEL_979:
                v972 = (_QWORD *)(((unint64_t)v945 + v1436) & v1466);
                v973 = (uint64_t *)((unint64_t)&v946[v1436] & v1466);
                v974 = v1439;
                if ((v1375 & 0x80000000) != 0)
                {
                  v976 = __swift_getEnumTagSinglePayload(((unint64_t)v973 + v1359) & v312, v1375, v1377);
                  v974 = v1439;
                }
                else
                {
                  v975 = *v973;
                  if ((unint64_t)*v973 >= 0xFFFFFFFF)
                    LODWORD(v975) = -1;
                  v976 = v975 + 1;
                }
                if (v976)
                {
                  memcpy(v972, v973, v974);
                }
                else
                {
                  *v972 = *v973;
                  v977 = ((unint64_t)v972 + v1359) & v312;
                  v978 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1367 + 16);
                  sub_21D7C4C20();
                  v978(v977, ((unint64_t)v973 + v1359) & v312, v1377);
                }
                v788 = 3;
LABEL_988:
                *((_BYTE *)v141 + v1423) = v788;
LABEL_989:
                v247 = v1404;
                v142 = v1455;
                goto LABEL_265;
              }
LABEL_977:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1366 + 16))(v945, v946, v1372);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1367 + 16))(((unint64_t)v945 + v1373) & v312, (unint64_t)&v946[v1373] & v312, v1377);
              if (!v1444)
                *((_BYTE *)v945 + v311) = 0;
              goto LABEL_979;
            }
          }
          memcpy(v936, v937, v1442);
          goto LABEL_925;
        case 4:
          if (__swift_getEnumTagSinglePayload((uint64_t)v142, 1, v1398))
          {
            memcpy(v141, v142, v1481);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1379 + 16))(v141, v142, v1398);
            __swift_storeEnumTagSinglePayload((uint64_t)v141, 0, 1, v1398);
          }
          v323 = ((unint64_t)v141 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v1456 = v142;
          v324 = ((unint64_t)v142 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v325 = *(_QWORD *)(v324 + 24);
          *(_QWORD *)(v323 + 24) = v325;
          *(_QWORD *)(v323 + 32) = *(_QWORD *)(v324 + 32);
          (**(void (***)(unint64_t, unint64_t))(v325 - 8))(v323, v324);
          v326 = (_QWORD *)((v323 + 47) & 0xFFFFFFFFFFFFFFF8);
          v327 = (_QWORD *)((v324 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v326 = *v327;
          v326[1] = v327[1];
          v328 = (_QWORD *)(((unint64_t)v326 + 23) & 0xFFFFFFFFFFFFFFF8);
          v329 = (_QWORD *)(((unint64_t)v327 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v328 = *v329;
          v328[1] = v329[1];
          v330 = ((unint64_t)v328 + 23) & 0xFFFFFFFFFFFFFFF8;
          v331 = ((unint64_t)v329 + 23) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v330 = *(_QWORD *)v331;
          *(_QWORD *)(v330 + 8) = *(_QWORD *)(v331 + 8);
          *(_BYTE *)(v330 + 16) = *(_BYTE *)(v331 + 16);
          v332 = ((unint64_t)v328 + 47) & 0xFFFFFFFFFFFFFFF8;
          v333 = ((unint64_t)v329 + 47) & 0xFFFFFFFFFFFFFFF8;
          v334 = *(_QWORD *)(v333 + 24);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v334 < 0xFFFFFFFF)
          {
            v335 = *(_OWORD *)v333;
            v336 = *(_OWORD *)(v333 + 16);
            *(_QWORD *)(v332 + 32) = *(_QWORD *)(v333 + 32);
            *(_OWORD *)v332 = v335;
            *(_OWORD *)(v332 + 16) = v336;
          }
          else
          {
            *(_QWORD *)(v332 + 24) = v334;
            *(_QWORD *)(v332 + 32) = *(_QWORD *)(v333 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v334 - 8))(v332, v333, v334);
          }
          v337 = v1396;
          v338 = v1316;
          v339 = v1443 + 7;
          *(_BYTE *)(v332 + 40) = *(_BYTE *)(v333 + 40);
          v340 = (_BYTE *)((v1337 + v332) & v1388);
          v341 = (_QWORD *)((v1337 + v333) & v1388);
          if (v1371 >= 0x7FFFFFFF)
          {
            v346 = (const void *)(((unint64_t)v341 + v1374) & v1386);
            if (__swift_getEnumTagSinglePayload((uint64_t)v346, v1363, v1376) <= 1)
            {
              v343 = v341 + 1;
              v344 = v1374;
              v345 = ~v1447;
              goto LABEL_325;
            }
LABEL_327:
            memcpy(v340, v341, v1442);
            goto LABEL_644;
          }
          v342 = *(_QWORD *)(((v1337 + v333) & v1388) + 0x10);
          if (v342 >= 0xFFFFFFFF)
            LODWORD(v342) = -1;
          if ((int)v342 - 1 >= 0)
            goto LABEL_327;
          v343 = v341 + 1;
          v344 = v1374;
          v345 = ~v1447;
          v346 = (const void *)(((unint64_t)v341 + v1374) & v1386);
LABEL_325:
          *v340 = *(_BYTE *)v341;
          *((_QWORD *)v340 + 1) = v341[1];
          *((_QWORD *)v340 + 2) = v343[1];
          *((_QWORD *)v340 + 3) = v343[2];
          *((_QWORD *)v340 + 4) = v343[3];
          *((_QWORD *)v340 + 5) = v343[4];
          *((_QWORD *)v340 + 6) = v343[5];
          *((_QWORD *)v340 + 7) = v343[6];
          *((_QWORD *)v340 + 8) = v343[7];
          *((_QWORD *)v340 + 9) = v343[8];
          *((_QWORD *)v340 + 10) = v343[9];
          *((_QWORD *)v340 + 11) = v343[10];
          *((_QWORD *)v340 + 12) = v343[11];
          v347 = v343[12];
          v340[112] = *((_BYTE *)v343 + 104);
          *((_QWORD *)v340 + 13) = v347;
          v348 = (void *)((unint64_t)&v340[v344] & v345);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (__swift_getEnumTagSinglePayload((uint64_t)v346, 1, v1376))
          {
            memcpy(v348, v346, v1437);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1360 + 16))(v348, v346, v1376);
            __swift_storeEnumTagSinglePayload((uint64_t)v348, 0, 1, v1376);
          }
          v337 = v1396;
          v338 = v1316;
          v339 = v1443 + 7;
LABEL_644:
          v772 = (_BYTE *)((unint64_t)&v340[v1469 + v1442] & v1390);
          v773 = (_BYTE *)(((unint64_t)v341 + v1469 + v1442) & v1390);
          v142 = v1456;
          if (v1444)
          {
            v774 = v1375;
            if (v1369 >= v1375)
            {
              v775 = (uint64_t)v773;
              v774 = v1369;
              v776 = v1372;
            }
            else
            {
              v775 = (unint64_t)&v773[v1373] & v338;
              v776 = v1377;
            }
            v779 = __swift_getEnumTagSinglePayload(v775, v774, v776);
          }
          else
          {
            if (!v773[v337])
              goto LABEL_969;
            v777 = (v773[v337] - 1) << v1315;
            if (v337 > 3)
              v777 = 0;
            if ((_DWORD)v337)
            {
              if (v337 <= 3)
                v778 = v337;
              else
                v778 = 4;
              __asm { BR              X11 }
            }
            v779 = v777 + 1;
          }
          if (!v779)
          {
LABEL_969:
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v1366 + 16))(v772, v773, v1372);
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v1367 + 16))((unint64_t)&v772[v1373] & v338, (unint64_t)&v773[v1373] & v338, v1377);
            if (!v1444)
              v772[v337] = 0;
            goto LABEL_971;
          }
          memcpy(v772, v773, v1443);
LABEL_971:
          v965 = (unint64_t)&v772[v339] & 0xFFFFFFFFFFFFFFF8;
          v966 = (unint64_t)&v773[v339] & 0xFFFFFFFFFFFFFFF8;
          v967 = *(_QWORD *)(v966 + 24);
          if (v967 < 0xFFFFFFFF)
          {
            v968 = *(_OWORD *)v966;
            v969 = *(_OWORD *)(v966 + 16);
            *(_QWORD *)(v965 + 32) = *(_QWORD *)(v966 + 32);
            *(_OWORD *)v965 = v968;
            *(_OWORD *)(v965 + 16) = v969;
          }
          else
          {
            *(_QWORD *)(v965 + 24) = v967;
            *(_QWORD *)(v965 + 32) = *(_QWORD *)(v966 + 32);
            (**(void (***)(unint64_t, unint64_t))(v967 - 8))(v965, v966);
          }
          v970 = (_QWORD *)((v965 + 47) & 0xFFFFFFFFFFFFFFF8);
          v971 = (_QWORD *)((v966 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v970 = *v971;
          v970[1] = v971[1];
          *((_BYTE *)v141 + v1423) = 4;
LABEL_263:
          sub_21D7C4C20();
LABEL_264:
          v247 = v1404;
LABEL_265:
          v248 = (_QWORD *)(((unint64_t)v141 + v247) & 0xFFFFFFFFFFFFFFF8);
          v249 = *(_QWORD *)(((unint64_t)v142 + v247) & 0xFFFFFFFFFFFFF8);
          LODWORD(v250) = -1;
          if (v249 < 0xFFFFFFFF)
            v250 = *(_QWORD *)(((unint64_t)v142 + v247) & 0xFFFFFFFFFFFFF8);
          if ((int)v250 - 1 < 0)
            v249 = sub_21D7C4C20();
          *v248 = v249;
          v95 = a1;
          *((_BYTE *)a1 + v93) = 1;
LABEL_270:
          v251 = *(_QWORD *)(((unint64_t)a2 + v93 + 8) & 0xFFFFFFFFFFFFF8);
          LODWORD(v252) = -1;
          if (v251 < 0xFFFFFFFF)
            v252 = *(_QWORD *)(((unint64_t)a2 + v93 + 8) & 0xFFFFFFFFFFFFF8);
          if ((int)v252 - 1 < 0)
            v251 = sub_21D7C4C20();
          *(_QWORD *)((((unint64_t)v95 + v93) & 0xFFFFFFFFFFFFF8) + 8) = v251;
          return v95;
        case 5:
          v183 = v1398;
          if (__swift_getEnumTagSinglePayload((uint64_t)v142, 1, v1398))
          {
            memcpy(v141, v142, v1481);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1379 + 16))(v141, v142, v1398);
            __swift_storeEnumTagSinglePayload((uint64_t)v141, 0, 1, v1398);
          }
          v349 = ((unint64_t)v141 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v1457 = v142;
          v350 = ((unint64_t)v142 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v351 = *(_QWORD *)(v350 + 24);
          *(_QWORD *)(v349 + 24) = v351;
          *(_QWORD *)(v349 + 32) = *(_QWORD *)(v350 + 32);
          (**(void (***)(unint64_t, unint64_t))(v351 - 8))(v349, v350);
          v352 = (void *)((v1464 + 40 + v349) & v1313);
          v353 = (const void *)((v1464 + 40 + v350) & v1313);
          v354 = v1396;
          if (v1364 == v1340)
          {
            v355 = v1440;
            v356 = v1481;
            if (v1440 < 2)
              goto LABEL_694;
            v357 = (v1464 + 40 + v350) & v1313;
            v358 = v1398;
          }
          else
          {
            v359 = ((unint64_t)v353 + v1445) & 0xFFFFFFFFFFFFFFF8;
            if (v1340 == 0x7FFFFFFF)
            {
              v356 = v1481;
              if (*(_QWORD *)(v359 + 24) >= 0xFFFFFFFFuLL)
                goto LABEL_694;
              goto LABEL_696;
            }
            v718 = (v1421
                  + ((((((v359 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                  + 65) & v1388;
            v356 = v1481;
            if (v1320 == v1340)
            {
              if (v1371 > 0x7FFFFFFE)
              {
                v790 = __swift_getEnumTagSinglePayload((v1374 + v718) & v1386, v1363, v1376);
                if (v790 < 2)
                  goto LABEL_694;
                v721 = v790 - 1;
              }
              else
              {
                v719 = *(_QWORD *)(v718 + 16);
                if (v719 >= 0xFFFFFFFF)
                  LODWORD(v719) = -1;
                v720 = v719 - 1;
                if (v720 < 0)
                  v720 = -1;
                v721 = v720 + 1;
              }
              if (v721 < 2)
              {
LABEL_694:
                v1414 = v141;
                if (__swift_getEnumTagSinglePayload((uint64_t)v353, 1, v1398))
                {
                  memcpy(v352, v353, v356);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v1379 + 16))(v352, v353, v1398);
                  __swift_storeEnumTagSinglePayload((uint64_t)v352, 0, 1, v1398);
                }
                v791 = ((unint64_t)v352 + v1445) & 0xFFFFFFFFFFFFFFF8;
                v792 = ((unint64_t)v353 + v1445) & 0xFFFFFFFFFFFFFFF8;
                v793 = *(_QWORD *)(v792 + 24);
                *(_QWORD *)(v791 + 24) = v793;
                *(_QWORD *)(v791 + 32) = *(_QWORD *)(v792 + 32);
                (**(void (***)(unint64_t, unint64_t))(v793 - 8))(v791, v792);
                v794 = (_QWORD *)((v791 + 47) & 0xFFFFFFFFFFFFFFF8);
                v795 = (_QWORD *)((v792 + 47) & 0xFFFFFFFFFFFFFFF8);
                *v794 = *v795;
                v794[1] = v795[1];
                v796 = (_QWORD *)(((unint64_t)v794 + 23) & 0xFFFFFFFFFFFFFFF8);
                v797 = (_QWORD *)(((unint64_t)v795 + 23) & 0xFFFFFFFFFFFFFFF8);
                *v796 = *v797;
                v796[1] = v797[1];
                v798 = ((unint64_t)v796 + 23) & 0xFFFFFFFFFFFFFFF8;
                v799 = ((unint64_t)v797 + 23) & 0xFFFFFFFFFFFFFFF8;
                *(_QWORD *)v798 = *(_QWORD *)v799;
                *(_QWORD *)(v798 + 8) = *(_QWORD *)(v799 + 8);
                *(_BYTE *)(v798 + 16) = *(_BYTE *)(v799 + 16);
                v800 = ((unint64_t)v796 + 47) & 0xFFFFFFFFFFFFFFF8;
                v801 = ((unint64_t)v797 + 47) & 0xFFFFFFFFFFFFFFF8;
                v802 = *(_QWORD *)(v801 + 24);
                sub_21D7C4C20();
                sub_21D7C4C20();
                sub_21D7C4C20();
                if (v802 < 0xFFFFFFFF)
                {
                  v803 = *(_OWORD *)v801;
                  v804 = *(_OWORD *)(v801 + 16);
                  *(_QWORD *)(v800 + 32) = *(_QWORD *)(v801 + 32);
                  *(_OWORD *)v800 = v803;
                  *(_OWORD *)(v800 + 16) = v804;
                }
                else
                {
                  *(_QWORD *)(v800 + 24) = v802;
                  *(_QWORD *)(v800 + 32) = *(_QWORD *)(v801 + 32);
                  (**(void (***)(unint64_t, unint64_t, unint64_t))(v802 - 8))(v800, v801, v802);
                }
                v354 = v1396;
                *(_BYTE *)(v800 + 40) = *(_BYTE *)(v801 + 40);
                v805 = (_QWORD *)((v1337 + v800) & v1388);
                v806 = (_QWORD *)((v1337 + v801) & v1388);
                if (v1371 >= 0x7FFFFFFF)
                {
                  v811 = (const void *)(((unint64_t)v806 + v1374) & v1386);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v811, v1363, v1376) <= 1)
                  {
                    v1473 = v353;
                    v1475 = (v1464 + 40 + v349) & v1313;
                    v808 = (char *)(v806 + 1);
                    v809 = v1374;
                    v810 = ~v1447;
                    goto LABEL_708;
                  }
                }
                else
                {
                  v807 = *(_QWORD *)(((v1337 + v801) & v1388) + 0x10);
                  if (v807 >= 0xFFFFFFFF)
                    LODWORD(v807) = -1;
                  if ((int)v807 - 1 < 0)
                  {
                    v1473 = v353;
                    v1475 = (v1464 + 40 + v349) & v1313;
                    v808 = (char *)(v806 + 1);
                    v809 = v1374;
                    v810 = ~v1447;
                    v811 = (const void *)(((unint64_t)v806 + v1374) & v1386);
LABEL_708:
                    *(_BYTE *)v805 = *(_BYTE *)v806;
                    v805[1] = v806[1];
                    v805[2] = *((_QWORD *)v808 + 1);
                    v805[3] = *((_QWORD *)v808 + 2);
                    v805[4] = *((_QWORD *)v808 + 3);
                    v805[5] = *((_QWORD *)v808 + 4);
                    v805[6] = *((_QWORD *)v808 + 5);
                    v805[7] = *((_QWORD *)v808 + 6);
                    v805[8] = *((_QWORD *)v808 + 7);
                    v805[9] = *((_QWORD *)v808 + 8);
                    v805[10] = *((_QWORD *)v808 + 9);
                    v805[11] = *((_QWORD *)v808 + 10);
                    v805[12] = *((_QWORD *)v808 + 11);
                    v812 = *((_QWORD *)v808 + 12);
                    *((_BYTE *)v805 + 112) = v808[104];
                    v805[13] = v812;
                    v1471 = (void *)(((unint64_t)v805 + v809) & v810);
                    sub_21D7C4C20();
                    sub_21D7C4C20();
                    sub_21D7C4C20();
                    sub_21D7C4C20();
                    sub_21D7C4C20();
                    sub_21D7C4C20();
                    if (__swift_getEnumTagSinglePayload((uint64_t)v811, 1, v1376))
                    {
                      memcpy(v1471, v811, v1437);
                    }
                    else
                    {
                      (*(void (**)(void *, const void *, uint64_t))(v1360 + 16))(v1471, v811, v1376);
                      __swift_storeEnumTagSinglePayload((uint64_t)v1471, 0, 1, v1376);
                    }
                    v354 = v1396;
                    v356 = v1481;
                    v353 = v1473;
                    v352 = (void *)v1475;
LABEL_713:
                    v813 = (void *)(((unint64_t)v805 + v1469 + v1442) & v1390);
                    v814 = (_BYTE *)(((unint64_t)v806 + v1469 + v1442) & v1390);
                    v183 = v1398;
                    if (v1444)
                    {
                      v815 = v1375;
                      if (v1369 >= v1375)
                      {
                        v816 = (uint64_t)v814;
                        v815 = v1369;
                        v817 = v1372;
                      }
                      else
                      {
                        v816 = (unint64_t)&v814[v1373] & v1316;
                        v817 = v1377;
                      }
                      v820 = __swift_getEnumTagSinglePayload(v816, v815, v817);
                    }
                    else
                    {
                      if (!v814[v354])
                        goto LABEL_1283;
                      v818 = (v814[v354] - 1) << v1315;
                      if (v354 > 3)
                        v818 = 0;
                      if ((_DWORD)v354)
                      {
                        if (v354 <= 3)
                          v819 = v354;
                        else
                          v819 = 4;
                        __asm { BR              X11 }
                      }
                      v820 = v818 + 1;
                    }
                    if (v820)
                    {
                      memcpy(v813, v814, v1443);
LABEL_1285:
                      v1144 = ((unint64_t)v813 + v1419) & 0xFFFFFFFFFFFFFFF8;
                      v1145 = (unint64_t)&v814[v1419] & 0xFFFFFFFFFFFFFFF8;
                      v1146 = *(_QWORD *)(v1145 + 24);
                      if (v1146 < 0xFFFFFFFF)
                      {
                        v1147 = *(_OWORD *)v1145;
                        v1148 = *(_OWORD *)(v1145 + 16);
                        *(_QWORD *)(v1144 + 32) = *(_QWORD *)(v1145 + 32);
                        *(_OWORD *)v1144 = v1147;
                        *(_OWORD *)(v1144 + 16) = v1148;
                      }
                      else
                      {
                        *(_QWORD *)(v1144 + 24) = v1146;
                        *(_QWORD *)(v1144 + 32) = *(_QWORD *)(v1145 + 32);
                        (**(void (***)(unint64_t, unint64_t))(v1146 - 8))(v1144, v1145);
                      }
                      v1149 = (_QWORD *)((v1144 + 47) & 0xFFFFFFFFFFFFFFF8);
                      v1150 = (_QWORD *)((v1145 + 47) & 0xFFFFFFFFFFFFFFF8);
                      *v1149 = *v1150;
                      v1149[1] = v1150[1];
                      sub_21D7C4C20();
                      v141 = v1414;
LABEL_1289:
                      v1151 = (_BYTE *)(((unint64_t)v352 + v1336) & v1313);
                      v1152 = (unsigned __int8 *)(((unint64_t)v353 + v1336) & v1313);
                      v1153 = *v1152;
                      if (v1153 > 2)
                      {
                        memcpy(v1151, (const void *)(((unint64_t)v353 + v1336) & v1313), v101);
                        v1163 = v1451 + 7;
                        v1164 = v1464 + 8;
                        v1165 = ~v1464;
                        goto LABEL_1367;
                      }
                      v1154 = v93;
                      v1155 = v141;
                      *v1151 = v1153;
                      v1156 = (_QWORD *)((unint64_t)&v1151[v1378] & v1313);
                      v1157 = (_QWORD *)((unint64_t)&v1152[v1378] & v1313);
                      v1158 = *((unsigned __int8 *)v1157 + v1380);
                      if (v1158 > 2)
                      {
                        memcpy((void *)((unint64_t)&v1151[v1378] & v1313), (const void *)((unint64_t)&v1152[v1378] & v1313), __n);
                        v141 = v1155;
                        goto LABEL_1301;
                      }
                      if (v1158 != 2)
                      {
                        if (v1158 == 1)
                        {
                          v1159 = *(_QWORD *)(((unint64_t)&v1152[v1378] & v1313) + 0x18);
                          *(_QWORD *)(((unint64_t)&v1151[v1378] & v1313) + 0x18) = v1159;
                          *(_QWORD *)(((unint64_t)&v1151[v1378] & v1313) + 0x20) = *(_QWORD *)(((unint64_t)&v1152[v1378] & v1313) + 0x20);
                          (**(void (***)(_QWORD *, _QWORD *))(v1159 - 8))(v1156, v1157);
                          v1160 = v183;
                          v1161 = (void *)(((unint64_t)v1156 + v1441) & v1317);
                          v1162 = (const void *)(((unint64_t)v1157 + v1441) & v1317);
                          v1302 = v1154;
                          if (__swift_getEnumTagSinglePayload((uint64_t)v1162, 1, v1160))
                          {
                            memcpy(v1161, v1162, v356);
                          }
                          else
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v1379 + 16))(v1161, v1162, v1398);
                            __swift_storeEnumTagSinglePayload((uint64_t)v1161, 0, 1, v1398);
                          }
                          v1167 = (_QWORD *)(((unint64_t)v1161 + v1445) & 0xFFFFFFFFFFFFFFF8);
                          v1168 = (_QWORD *)(((unint64_t)v1162 + v1445) & 0xFFFFFFFFFFFFFFF8);
                          *v1167 = *v1168;
                          v1167[1] = v1168[1];
                          v1169 = ((unint64_t)v1167 + 23) & 0xFFFFFFFFFFFFFFF8;
                          v1170 = ((unint64_t)v1168 + 23) & 0xFFFFFFFFFFFFFFF8;
                          *(_QWORD *)v1169 = *(_QWORD *)v1170;
                          *(_BYTE *)(v1169 + 8) = *(_BYTE *)(v1170 + 8);
                          v1171 = ((unint64_t)v1167 + 39) & 0xFFFFFFFFFFFFFFF8;
                          v1172 = ((unint64_t)v1168 + 39) & 0xFFFFFFFFFFFFFFF8;
                          *(_QWORD *)v1171 = *(_QWORD *)v1172;
                          *(_BYTE *)(v1171 + 8) = *(_BYTE *)(v1172 + 8);
                          v1173 = ((unint64_t)v1167 + 55) & 0xFFFFFFFFFFFFFFF8;
                          v1174 = ((unint64_t)v1168 + 55) & 0xFFFFFFFFFFFFFFF8;
                          v1175 = *(_QWORD *)v1174;
                          *(_BYTE *)(v1173 + 8) = *(_BYTE *)(v1174 + 8);
                          *(_QWORD *)v1173 = v1175;
                          v1176 = (_QWORD *)(((unint64_t)v1167 + 71) & 0xFFFFFFFFFFFFFFF8);
                          v1177 = (_QWORD *)(((unint64_t)v1168 + 71) & 0xFFFFFFFFFFFFFFF8);
                          *v1176 = *v1177;
                          v1176[1] = v1177[1];
                          v1178 = ((unint64_t)v1176 + 23) & 0xFFFFFFFFFFFFFFF8;
                          v1179 = ((unint64_t)v1177 + 23) & 0xFFFFFFFFFFFFFFF8;
                          v1180 = *(_QWORD *)(v1179 + 24);
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          if (v1180 < 0xFFFFFFFF)
                          {
                            v1181 = *(_OWORD *)v1179;
                            v1182 = *(_OWORD *)(v1179 + 16);
                            *(_QWORD *)(v1178 + 32) = *(_QWORD *)(v1179 + 32);
                            *(_OWORD *)v1178 = v1181;
                            *(_OWORD *)(v1178 + 16) = v1182;
                          }
                          else
                          {
                            *(_QWORD *)(v1178 + 24) = v1180;
                            *(_QWORD *)(v1178 + 32) = *(_QWORD *)(v1179 + 32);
                            (**(void (***)(unint64_t, unint64_t, unint64_t))(v1180 - 8))(v1178, v1179, v1180);
                          }
                          v354 = v1396;
                          v1165 = ~v1464;
                          v1183 = (_QWORD *)((v1478 + v1178) & v1388);
                          v1184 = (_QWORD *)((v1478 + v1179) & v1388);
                          if (v1371 >= 0x7FFFFFFF)
                          {
                            v141 = v1155;
                            if (__swift_getEnumTagSinglePayload(((unint64_t)v1184 + v1374) & v1386, v1363, v1376) <= 1)
                            {
                              v1477 = (const void *)(((unint64_t)v1184 + v1374) & v1386);
                              v1186 = (char *)(v1184 + 1);
                              goto LABEL_1314;
                            }
                          }
                          else
                          {
                            v1185 = v1184[2];
                            if (v1185 >= 0xFFFFFFFF)
                              LODWORD(v1185) = -1;
                            v141 = v1155;
                            if ((int)v1185 - 1 < 0)
                            {
                              v1186 = (char *)(v1184 + 1);
                              v1477 = (const void *)(((unint64_t)v1184 + v1374) & v1386);
LABEL_1314:
                              *(_BYTE *)v1183 = *(_BYTE *)v1184;
                              v1183[1] = v1184[1];
                              v1183[2] = *((_QWORD *)v1186 + 1);
                              v1183[3] = *((_QWORD *)v1186 + 2);
                              v1183[4] = *((_QWORD *)v1186 + 3);
                              v1183[5] = *((_QWORD *)v1186 + 4);
                              v1183[6] = *((_QWORD *)v1186 + 5);
                              v1183[7] = *((_QWORD *)v1186 + 6);
                              v1183[8] = *((_QWORD *)v1186 + 7);
                              v1183[9] = *((_QWORD *)v1186 + 8);
                              v1183[10] = *((_QWORD *)v1186 + 9);
                              v1183[11] = *((_QWORD *)v1186 + 10);
                              v1183[12] = *((_QWORD *)v1186 + 11);
                              v1187 = *((_QWORD *)v1186 + 12);
                              *((_BYTE *)v1183 + 112) = v1186[104];
                              v1183[13] = v1187;
                              v1188 = (void *)(((unint64_t)v1183 + v1374) & v1386);
                              sub_21D7C4C20();
                              sub_21D7C4C20();
                              sub_21D7C4C20();
                              sub_21D7C4C20();
                              sub_21D7C4C20();
                              sub_21D7C4C20();
                              if (__swift_getEnumTagSinglePayload((uint64_t)v1477, 1, v1376))
                              {
                                memcpy(v1188, v1477, v1437);
                              }
                              else
                              {
                                (*(void (**)(void *, const void *, uint64_t))(v1360 + 16))(v1188, v1477, v1376);
                                __swift_storeEnumTagSinglePayload((uint64_t)v1188, 0, 1, v1376);
                              }
                              v141 = v1155;
                              v93 = v1302;
                              v354 = v1396;
                              v101 = v1451;
                              v1165 = ~v1464;
                              goto LABEL_1359;
                            }
                          }
                          memcpy(v1183, v1184, v1442);
                          v93 = v1302;
                          v101 = v1451;
LABEL_1359:
                          *((_BYTE *)v1156 + v1380) = 1;
                          v183 = v1398;
LABEL_1366:
                          v1163 = v1451 + 7;
                          v1164 = v1464 + 8;
LABEL_1367:
                          v1221 = (_QWORD *)((unint64_t)&v1151[v1163] & 0xFFFFFFFFFFFFFFF8);
                          v1222 = (_QWORD *)((unint64_t)&v1152[v1163] & 0xFFFFFFFFFFFFFFF8);
                          *v1221 = *v1222;
                          v1223 = (_BYTE *)(((unint64_t)v1221 + v1164) & v1165);
                          v1224 = (unsigned __int8 *)(((unint64_t)v1222 + v1164) & v1165);
                          v1225 = *v1224;
                          sub_21D7C4C20();
                          if (v1225 > 2)
                          {
                            v1233 = v1223;
                            v1234 = v1224;
                            v1235 = v101;
                          }
                          else
                          {
                            *v1223 = v1225;
                            v1226 = (_QWORD *)((unint64_t)&v1223[v1378] & v1165);
                            v1227 = (_QWORD *)((unint64_t)&v1224[v1378] & v1165);
                            v1228 = *((unsigned __int8 *)v1227 + v1380);
                            if (v1228 <= 2)
                            {
                              if (v1228 != 2)
                              {
                                if (v1228 != 1)
                                {
                                  *v1226 = *v1227;
                                  v1226[1] = v1227[1];
                                  v1226[2] = v1227[2];
                                  v1226[3] = v1227[3];
                                  v1226[4] = v1227[4];
                                  v1226[5] = v1227[5];
                                  *((_BYTE *)v1226 + v1380) = 0;
                                  sub_21D7C4C20();
                                  sub_21D7C4C20();
                                  sub_21D7C4C20();
                                  goto LABEL_1376;
                                }
                                v1229 = v1227[3];
                                v1226[3] = v1229;
                                v1226[4] = v1227[4];
                                (**(void (***)(_QWORD *, _QWORD *))(v1229 - 8))(v1226, v1227);
                                v1230 = (void *)(((unint64_t)v1226 + v1441) & v1317);
                                v1231 = (const void *)(((unint64_t)v1227 + v1441) & v1317);
                                v1232 = v93;
                                if (__swift_getEnumTagSinglePayload((uint64_t)v1231, 1, v183))
                                {
                                  memcpy(v1230, v1231, v1481);
                                }
                                else
                                {
                                  (*(void (**)(void *, const void *, uint64_t))(v1379 + 16))(v1230, v1231, v183);
                                  __swift_storeEnumTagSinglePayload((uint64_t)v1230, 0, 1, v183);
                                }
                                v1238 = (_QWORD *)(((unint64_t)v1230 + v1445) & 0xFFFFFFFFFFFFFFF8);
                                v1239 = (_QWORD *)(((unint64_t)v1231 + v1445) & 0xFFFFFFFFFFFFFFF8);
                                *v1238 = *v1239;
                                v1238[1] = v1239[1];
                                v1240 = ((unint64_t)v1238 + 23) & 0xFFFFFFFFFFFFFFF8;
                                v1241 = ((unint64_t)v1239 + 23) & 0xFFFFFFFFFFFFFFF8;
                                *(_QWORD *)v1240 = *(_QWORD *)v1241;
                                *(_BYTE *)(v1240 + 8) = *(_BYTE *)(v1241 + 8);
                                v1242 = ((unint64_t)v1238 + 39) & 0xFFFFFFFFFFFFFFF8;
                                v1243 = ((unint64_t)v1239 + 39) & 0xFFFFFFFFFFFFFFF8;
                                *(_QWORD *)v1242 = *(_QWORD *)v1243;
                                *(_BYTE *)(v1242 + 8) = *(_BYTE *)(v1243 + 8);
                                v1244 = ((unint64_t)v1238 + 55) & 0xFFFFFFFFFFFFFFF8;
                                v1245 = ((unint64_t)v1239 + 55) & 0xFFFFFFFFFFFFFFF8;
                                v1246 = *(_QWORD *)v1245;
                                *(_BYTE *)(v1244 + 8) = *(_BYTE *)(v1245 + 8);
                                *(_QWORD *)v1244 = v1246;
                                v1247 = (_QWORD *)(((unint64_t)v1238 + 71) & 0xFFFFFFFFFFFFFFF8);
                                v1248 = (_QWORD *)(((unint64_t)v1239 + 71) & 0xFFFFFFFFFFFFFFF8);
                                *v1247 = *v1248;
                                v1247[1] = v1248[1];
                                v1249 = ((unint64_t)v1247 + 23) & 0xFFFFFFFFFFFFFFF8;
                                v1250 = ((unint64_t)v1248 + 23) & 0xFFFFFFFFFFFFFFF8;
                                v1251 = *(_QWORD *)(v1250 + 24);
                                sub_21D7C4C20();
                                sub_21D7C4C20();
                                sub_21D7C4C20();
                                sub_21D7C4C20();
                                if (v1251 < 0xFFFFFFFF)
                                {
                                  v1252 = *(_OWORD *)v1250;
                                  v1253 = *(_OWORD *)(v1250 + 16);
                                  *(_QWORD *)(v1249 + 32) = *(_QWORD *)(v1250 + 32);
                                  *(_OWORD *)v1249 = v1252;
                                  *(_OWORD *)(v1249 + 16) = v1253;
                                }
                                else
                                {
                                  *(_QWORD *)(v1249 + 24) = v1251;
                                  *(_QWORD *)(v1249 + 32) = *(_QWORD *)(v1250 + 32);
                                  (**(void (***)(unint64_t, unint64_t, unint64_t))(v1251 - 8))(v1249, v1250, v1251);
                                }
                                v1254 = (_QWORD *)((v1478 + v1249) & v1388);
                                v1255 = (_QWORD *)((v1478 + v1250) & v1388);
                                if (v1371 >= 0x7FFFFFFF)
                                {
                                  v1258 = (const void *)(((unint64_t)v1255 + v1374) & v1386);
                                  if (__swift_getEnumTagSinglePayload((uint64_t)v1258, v1363, v1376) <= 1)
                                  {
                                    v1257 = (char *)(v1255 + 1);
                                    goto LABEL_1394;
                                  }
                                }
                                else
                                {
                                  v1256 = v1255[2];
                                  if (v1256 >= 0xFFFFFFFF)
                                    LODWORD(v1256) = -1;
                                  if ((int)v1256 - 1 < 0)
                                  {
                                    v1257 = (char *)(v1255 + 1);
                                    v1258 = (const void *)(((unint64_t)v1255 + v1374) & v1386);
LABEL_1394:
                                    *(_BYTE *)v1254 = *(_BYTE *)v1255;
                                    v1254[1] = v1255[1];
                                    v1254[2] = *((_QWORD *)v1257 + 1);
                                    v1254[3] = *((_QWORD *)v1257 + 2);
                                    v1254[4] = *((_QWORD *)v1257 + 3);
                                    v1254[5] = *((_QWORD *)v1257 + 4);
                                    v1254[6] = *((_QWORD *)v1257 + 5);
                                    v1254[7] = *((_QWORD *)v1257 + 6);
                                    v1254[8] = *((_QWORD *)v1257 + 7);
                                    v1254[9] = *((_QWORD *)v1257 + 8);
                                    v1254[10] = *((_QWORD *)v1257 + 9);
                                    v1254[11] = *((_QWORD *)v1257 + 10);
                                    v1254[12] = *((_QWORD *)v1257 + 11);
                                    v1259 = *((_QWORD *)v1257 + 12);
                                    *((_BYTE *)v1254 + 112) = v1257[104];
                                    v1254[13] = v1259;
                                    v1260 = (void *)(((unint64_t)v1254 + v1374) & v1386);
                                    sub_21D7C4C20();
                                    sub_21D7C4C20();
                                    sub_21D7C4C20();
                                    sub_21D7C4C20();
                                    sub_21D7C4C20();
                                    sub_21D7C4C20();
                                    if (__swift_getEnumTagSinglePayload((uint64_t)v1258, 1, v1376))
                                    {
                                      memcpy(v1260, v1258, v1437);
                                    }
                                    else
                                    {
                                      (*(void (**)(void *, const void *, uint64_t))(v1360 + 16))(v1260, v1258, v1376);
                                      __swift_storeEnumTagSinglePayload((uint64_t)v1260, 0, 1, v1376);
                                    }
                                    v93 = v1232;
                                    goto LABEL_1420;
                                  }
                                }
                                memcpy(v1254, v1255, v1442);
                                v93 = v1232;
LABEL_1420:
                                v1281 = 1;
LABEL_1427:
                                *((_BYTE *)v1226 + v1380) = v1281;
LABEL_1376:
                                v247 = v1404;
                                v142 = v1457;
                                v428 = v1423;
                                v429 = 5;
LABEL_1377:
                                *((_BYTE *)v141 + v428) = v429;
                                goto LABEL_265;
                              }
                              if (v1227[1] < 0xFFFFFFFFuLL)
                              {
                                memcpy(v1226, v1227, 0x48uLL);
                              }
                              else
                              {
                                v1236 = v141;
                                *v1226 = *v1227;
                                v1226[1] = v1227[1];
                                v1226[2] = v1227[2];
                                v1226[3] = v1227[3];
                                v1237 = v1227[7];
                                sub_21D7C4C20();
                                sub_21D7C4C20();
                                if (v1237)
                                {
                                  v1226[7] = v1237;
                                  v1226[8] = v1227[8];
                                  (**(void (***)(uint64_t, uint64_t, uint64_t))(v1237 - 8))((uint64_t)(v1226 + 4), (uint64_t)(v1227 + 4), v1237);
                                }
                                else
                                {
                                  v1261 = *((_OWORD *)v1227 + 2);
                                  v1262 = *((_OWORD *)v1227 + 3);
                                  v1226[8] = v1227[8];
                                  *((_OWORD *)v1226 + 2) = v1261;
                                  *((_OWORD *)v1226 + 3) = v1262;
                                }
                                v141 = v1236;
                                v354 = v1396;
                              }
                              v1263 = ((unint64_t)v1226 + 79) & 0xFFFFFFFFFFFFFFF8;
                              v1264 = (_QWORD *)(((unint64_t)v1227 + 79) & 0xFFFFFFFFFFFFFFF8);
                              if (v1264[1] < 0xFFFFFFFFuLL)
                              {
                                v1266 = v93;
                                memcpy((void *)(((unint64_t)v1226 + 79) & 0xFFFFFFFFFFFFFFF8), v1264, 0x48uLL);
                              }
                              else
                              {
                                *(_QWORD *)v1263 = *v1264;
                                *(_QWORD *)(v1263 + 8) = v1264[1];
                                *(_QWORD *)(v1263 + 16) = v1264[2];
                                *(_QWORD *)(v1263 + 24) = v1264[3];
                                v1265 = v1264[7];
                                sub_21D7C4C20();
                                sub_21D7C4C20();
                                if (v1265)
                                {
                                  *(_QWORD *)(v1263 + 56) = v1265;
                                  *(_QWORD *)(v1263 + 64) = v1264[8];
                                  (**(void (***)(uint64_t, uint64_t, uint64_t))(v1265 - 8))(v1263 + 32, (uint64_t)(v1264 + 4), v1265);
                                }
                                else
                                {
                                  v1267 = *((_OWORD *)v1264 + 2);
                                  v1268 = *((_OWORD *)v1264 + 3);
                                  *(_QWORD *)(v1263 + 64) = v1264[8];
                                  *(_OWORD *)(v1263 + 32) = v1267;
                                  *(_OWORD *)(v1263 + 48) = v1268;
                                }
                                v1266 = v93;
                                v354 = v1396;
                              }
                              v1269 = (_QWORD *)((v1263 + 79) & 0xFFFFFFFFFFFFF8);
                              v1270 = (_QWORD *)(((unint64_t)v1264 + 79) & 0xFFFFFFFFFFFFFFF8);
                              *v1269 = *v1270;
                              v1271 = (_QWORD *)(((unint64_t)v1269 + 15) & 0xFFFFFFFFFFFFFFF8);
                              v1272 = (_QWORD *)(((unint64_t)v1270 + 15) & 0xFFFFFFFFFFFFFFF8);
                              *v1271 = *v1272;
                              v1273 = (void *)(((unint64_t)v1271 + v1402) & v1390);
                              v1274 = (_BYTE *)(((unint64_t)v1272 + v1402) & v1390);
                              sub_21D7C4C20();
                              sub_21D7C4C20();
                              if (v1444)
                              {
                                v1275 = v1375;
                                if (v1369 >= v1375)
                                {
                                  v1276 = (uint64_t)v1274;
                                  v1275 = v1369;
                                  v1277 = v1372;
                                }
                                else
                                {
                                  v1276 = (unint64_t)&v1274[v1373] & v1316;
                                  v1277 = v1377;
                                }
                                v1280 = __swift_getEnumTagSinglePayload(v1276, v1275, v1277);
                                v93 = v1266;
                              }
                              else
                              {
                                v93 = v1266;
                                if (!v1274[v354])
                                  goto LABEL_1424;
                                v1278 = (v1274[v354] - 1) << v1315;
                                if (v354 > 3)
                                  v1278 = 0;
                                if ((_DWORD)v354)
                                {
                                  if (v1396 <= 3)
                                    v1279 = v1396;
                                  else
                                    v1279 = 4;
                                  __asm { BR              X11 }
                                }
                                v1280 = v1278 + 1;
                                v354 = v1396;
                              }
                              if (v1280)
                              {
                                memcpy(v1273, v1274, v1443);
LABEL_1426:
                                *((_BYTE *)v1273 + v1443) = v1274[v1443];
                                v1281 = 2;
                                goto LABEL_1427;
                              }
LABEL_1424:
                              (*(void (**)(void *, _BYTE *, uint64_t))(v1366 + 16))(v1273, v1274, v1372);
                              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1367 + 16))(((unint64_t)v1273 + v1373) & v1316, (unint64_t)&v1274[v1373] & v1316, v1377);
                              if (!v1444)
                                *((_BYTE *)v1273 + v354) = 0;
                              goto LABEL_1426;
                            }
                            v1233 = v1226;
                            v1234 = v1227;
                            v1235 = __n;
                          }
                          memcpy(v1233, v1234, v1235);
                          goto LABEL_1376;
                        }
                        *v1156 = *v1157;
                        *(_QWORD *)(((unint64_t)&v1151[v1378] & v1313) + 8) = *(_QWORD *)(((unint64_t)&v1152[v1378] & v1313)
                                                                                               + 8);
                        *(_QWORD *)(((unint64_t)&v1151[v1378] & v1313) + 0x10) = *(_QWORD *)(((unint64_t)&v1152[v1378] & v1313)
                                                                                                  + 0x10);
                        *(_QWORD *)(((unint64_t)&v1151[v1378] & v1313) + 0x18) = *(_QWORD *)(((unint64_t)&v1152[v1378] & v1313)
                                                                                                  + 0x18);
                        *(_QWORD *)(((unint64_t)&v1151[v1378] & v1313) + 0x20) = *(_QWORD *)(((unint64_t)&v1152[v1378] & v1313)
                                                                                                  + 0x20);
                        *(_QWORD *)(((unint64_t)&v1151[v1378] & v1313) + 0x28) = *(_QWORD *)(((unint64_t)&v1152[v1378] & v1313)
                                                                                                  + 0x28);
                        *((_BYTE *)v1156 + v1380) = 0;
                        sub_21D7C4C20();
                        sub_21D7C4C20();
                        sub_21D7C4C20();
                        v141 = v1155;
                        v183 = v1398;
LABEL_1301:
                        v93 = v1154;
                        v101 = v1451;
                        v1163 = v1451 + 7;
                        v1164 = v1464 + 8;
                        v1165 = ~v1464;
                        goto LABEL_1367;
                      }
                      if (*(_QWORD *)(((unint64_t)&v1152[v1378] & v1313) + 8) < 0xFFFFFFFFuLL)
                      {
                        memcpy((void *)((unint64_t)&v1151[v1378] & v1313), (const void *)((unint64_t)&v1152[v1378] & v1313), 0x48uLL);
                      }
                      else
                      {
                        *v1156 = *v1157;
                        *(_QWORD *)(((unint64_t)&v1151[v1378] & v1313) + 8) = *(_QWORD *)(((unint64_t)&v1152[v1378] & v1313)
                                                                                               + 8);
                        *(_QWORD *)(((unint64_t)&v1151[v1378] & v1313) + 0x10) = *(_QWORD *)(((unint64_t)&v1152[v1378] & v1313)
                                                                                                  + 0x10);
                        *(_QWORD *)(((unint64_t)&v1151[v1378] & v1313) + 0x18) = *(_QWORD *)(((unint64_t)&v1152[v1378] & v1313)
                                                                                                  + 0x18);
                        v1166 = *(_QWORD *)(((unint64_t)&v1152[v1378] & v1313) + 0x38);
                        sub_21D7C4C20();
                        sub_21D7C4C20();
                        if (v1166)
                        {
                          *(_QWORD *)(((unint64_t)&v1151[v1378] & v1313) + 0x38) = v1166;
                          *(_QWORD *)(((unint64_t)&v1151[v1378] & v1313) + 0x40) = *(_QWORD *)(((unint64_t)&v1152[v1378] & v1313) + 0x40);
                          (**(void (***)(uint64_t, uint64_t, uint64_t))(v1166 - 8))((uint64_t)(v1156 + 4), (uint64_t)(v1157 + 4), v1166);
                        }
                        else
                        {
                          v1202 = *(_OWORD *)(((unint64_t)&v1152[v1378] & v1313) + 0x20);
                          v1203 = *(_OWORD *)(((unint64_t)&v1152[v1378] & v1313) + 0x30);
                          *(_QWORD *)(((unint64_t)&v1151[v1378] & v1313) + 0x40) = *(_QWORD *)(((unint64_t)&v1152[v1378] & v1313) + 0x40);
                          *(_OWORD *)(((unint64_t)&v1151[v1378] & v1313) + 0x20) = v1202;
                          *(_OWORD *)(((unint64_t)&v1151[v1378] & v1313) + 0x30) = v1203;
                        }
                        v354 = v1396;
                      }
                      v1204 = ((unint64_t)v1156 + 79) & 0xFFFFFFFFFFFFFFF8;
                      v1205 = (_QWORD *)(((unint64_t)v1157 + 79) & 0xFFFFFFFFFFFFFFF8);
                      if (v1205[1] < 0xFFFFFFFFuLL)
                      {
                        memcpy((void *)(((unint64_t)v1156 + 79) & 0xFFFFFFFFFFFFFFF8), v1205, 0x48uLL);
                      }
                      else
                      {
                        *(_QWORD *)v1204 = *v1205;
                        *(_QWORD *)(v1204 + 8) = v1205[1];
                        *(_QWORD *)(v1204 + 16) = v1205[2];
                        *(_QWORD *)(v1204 + 24) = v1205[3];
                        v1206 = v1205[7];
                        sub_21D7C4C20();
                        sub_21D7C4C20();
                        if (v1206)
                        {
                          *(_QWORD *)(v1204 + 56) = v1206;
                          *(_QWORD *)(v1204 + 64) = v1205[8];
                          (**(void (***)(uint64_t, uint64_t, uint64_t))(v1206 - 8))(v1204 + 32, (uint64_t)(v1205 + 4), v1206);
                        }
                        else
                        {
                          v1207 = *((_OWORD *)v1205 + 2);
                          v1208 = *((_OWORD *)v1205 + 3);
                          *(_QWORD *)(v1204 + 64) = v1205[8];
                          *(_OWORD *)(v1204 + 32) = v1207;
                          *(_OWORD *)(v1204 + 48) = v1208;
                        }
                        v354 = v1396;
                      }
                      v1165 = ~v1464;
                      v1209 = (_QWORD *)((v1204 + 79) & 0xFFFFFFFFFFFFF8);
                      v1210 = (_QWORD *)(((unint64_t)v1205 + 79) & 0xFFFFFFFFFFFFFFF8);
                      *v1209 = *v1210;
                      v1211 = (_QWORD *)(((unint64_t)v1209 + 15) & 0xFFFFFFFFFFFFFFF8);
                      v1212 = (_QWORD *)(((unint64_t)v1210 + 15) & 0xFFFFFFFFFFFFFFF8);
                      *v1211 = *v1212;
                      v1213 = (void *)(((unint64_t)v1211 + v1402) & v1390);
                      v1214 = (_BYTE *)(((unint64_t)v1212 + v1402) & v1390);
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      if (v1444)
                      {
                        v1215 = v1369;
                        if (v1369 >= v1375)
                        {
                          v1216 = (uint64_t)v1214;
                          v1217 = v1372;
                        }
                        else
                        {
                          v1216 = (unint64_t)&v1214[v1373] & v1316;
                          v1215 = v1375;
                          v1217 = v1377;
                        }
                        v1220 = __swift_getEnumTagSinglePayload(v1216, v1215, v1217);
                      }
                      else
                      {
                        if (!v1214[v354])
                          goto LABEL_1363;
                        v1218 = (v1214[v354] - 1) << v1315;
                        if (v354 > 3)
                          v1218 = 0;
                        if ((_DWORD)v354)
                        {
                          if (v1396 <= 3)
                            v1219 = v1396;
                          else
                            v1219 = 4;
                          __asm { BR              X11 }
                        }
                        v1220 = v1218 + 1;
                        v354 = v1396;
                        v1165 = ~v1464;
                      }
                      if (v1220)
                      {
                        memcpy(v1213, v1214, v1443);
LABEL_1365:
                        *((_BYTE *)v1213 + v1443) = v1214[v1443];
                        *((_BYTE *)v1156 + v1380) = 2;
                        v141 = v1155;
                        v183 = v1398;
                        v93 = v1154;
                        v101 = v1451;
                        goto LABEL_1366;
                      }
LABEL_1363:
                      (*(void (**)(void *, _BYTE *, uint64_t))(v1366 + 16))(v1213, v1214, v1372);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1367 + 16))(((unint64_t)v1213 + v1373) & v1316, (unint64_t)&v1214[v1373] & v1316, v1377);
                      if (!v1444)
                        *((_BYTE *)v1213 + v354) = 0;
                      goto LABEL_1365;
                    }
LABEL_1283:
                    (*(void (**)(void *, _BYTE *, uint64_t))(v1366 + 16))(v813, v814, v1372);
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v1367 + 16))(((unint64_t)v813 + v1373) & v1316, (unint64_t)&v814[v1373] & v1316, v1377);
                    if (!v1444)
                      *((_BYTE *)v813 + v354) = 0;
                    goto LABEL_1285;
                  }
                }
                memcpy(v805, v806, v1442);
                goto LABEL_713;
              }
LABEL_696:
              memcpy(v352, v353, v1356);
              goto LABEL_1289;
            }
            if (v1444 < 2)
              goto LABEL_694;
            v357 = (v1318 + v718) & v1390;
            v355 = v1369;
            if (v1369 >= v1375)
            {
              v358 = v1372;
            }
            else
            {
              v357 = (v1373 + v357) & v1316;
              v355 = v1375;
              v358 = v1377;
            }
          }
          if (__swift_getEnumTagSinglePayload(v357, v355, v358) < 2)
            goto LABEL_694;
          goto LABEL_696;
        case 6:
          *v141 = *v142;
          v182 = 6;
          goto LABEL_262;
        case 7:
          *v141 = *v142;
          v182 = 7;
          goto LABEL_262;
        case 8:
          if (__swift_getEnumTagSinglePayload((uint64_t)v142, 1, v1398))
          {
            memcpy(v141, v142, v1481);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1379 + 16))(v141, v142, v1398);
            __swift_storeEnumTagSinglePayload((uint64_t)v141, 0, 1, v1398);
          }
          v360 = ((unint64_t)v141 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v1455 = v142;
          v361 = ((unint64_t)v142 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v362 = *(_QWORD *)(v361 + 24);
          *(_QWORD *)(v360 + 24) = v362;
          *(_QWORD *)(v360 + 32) = *(_QWORD *)(v361 + 32);
          (**(void (***)(unint64_t, unint64_t))(v362 - 8))(v360, v361);
          v363 = (v1478 + v360) & v1388;
          v364 = (v1478 + v361) & v1388;
          if (v1371 >= 0x7FFFFFFF)
          {
            v369 = (const void *)((v1374 + v364) & v1386);
            if (__swift_getEnumTagSinglePayload((uint64_t)v369, v1363, v1376) <= 1)
            {
              v1410 = v141;
              v1296 = v93;
              v366 = (char *)(v364 + 8);
              v367 = v1374;
              v368 = ~v1447;
LABEL_345:
              *(_BYTE *)v363 = *(_BYTE *)v364;
              *(_QWORD *)(v363 + 8) = *(_QWORD *)(v364 + 8);
              *(_QWORD *)(v363 + 16) = *((_QWORD *)v366 + 1);
              *(_QWORD *)(v363 + 24) = *((_QWORD *)v366 + 2);
              *(_QWORD *)(v363 + 32) = *((_QWORD *)v366 + 3);
              *(_QWORD *)(v363 + 40) = *((_QWORD *)v366 + 4);
              *(_QWORD *)(v363 + 48) = *((_QWORD *)v366 + 5);
              *(_QWORD *)(v363 + 56) = *((_QWORD *)v366 + 6);
              *(_QWORD *)(v363 + 64) = *((_QWORD *)v366 + 7);
              *(_QWORD *)(v363 + 72) = *((_QWORD *)v366 + 8);
              *(_QWORD *)(v363 + 80) = *((_QWORD *)v366 + 9);
              *(_QWORD *)(v363 + 88) = *((_QWORD *)v366 + 10);
              *(_QWORD *)(v363 + 96) = *((_QWORD *)v366 + 11);
              v370 = *((_QWORD *)v366 + 12);
              *(_BYTE *)(v363 + 112) = v366[104];
              *(_QWORD *)(v363 + 104) = v370;
              v371 = (void *)((v367 + v363) & v368);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              if (__swift_getEnumTagSinglePayload((uint64_t)v369, 1, v1376))
              {
                memcpy(v371, v369, v1437);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1360 + 16))(v371, v369, v1376);
                __swift_storeEnumTagSinglePayload((uint64_t)v371, 0, 1, v1376);
              }
              v93 = v1296;
              v141 = v1410;
LABEL_659:
              v780 = (_QWORD *)(((v363 | 7) + v1442) & 0xFFFFFFFFFFFFF8);
              v781 = (_QWORD *)(((v364 | 7) + v1442) & 0xFFFFFFFFFFFFFFF8);
              *v780 = *v781;
              v782 = (_QWORD *)(((unint64_t)v780 + 15) & 0xFFFFFFFFFFFFFFF8);
              v783 = (_QWORD *)(((unint64_t)v781 + 15) & 0xFFFFFFFFFFFFFFF8);
              *v782 = *v783;
              v782[1] = v783[1];
              v784 = ((unint64_t)v782 + 23) & 0xFFFFFFFFFFFFFFF8;
              v785 = ((unint64_t)v783 + 23) & 0xFFFFFFFFFFFFFFF8;
              v786 = *(_QWORD *)(v785 + 8);
              sub_21D7C4C20();
              if (v786 < 0xFFFFFFFF)
              {
                v787 = *(_OWORD *)v785;
                *(_QWORD *)(v784 + 16) = *(_QWORD *)(v785 + 16);
                *(_OWORD *)v784 = v787;
              }
              else
              {
                *(_QWORD *)v784 = *(_QWORD *)v785;
                *(_QWORD *)(v784 + 8) = *(_QWORD *)(v785 + 8);
                *(_QWORD *)(v784 + 16) = *(_QWORD *)(v785 + 16);
                sub_21D7C4C20();
                sub_21D7C4C20();
              }
              *(_QWORD *)((v784 + 31) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v785 + 31) & 0xFFFFFFFFFFFFF8);
              *((_BYTE *)v141 + v1423) = 8;
              sub_21D7C4C20();
              goto LABEL_989;
            }
          }
          else
          {
            v365 = *(_QWORD *)(v364 + 16);
            if (v365 >= 0xFFFFFFFF)
              LODWORD(v365) = -1;
            if ((int)v365 - 1 < 0)
            {
              v1410 = v141;
              v1296 = v93;
              v366 = (char *)(v364 + 8);
              v367 = v1374;
              v368 = ~v1447;
              v369 = (const void *)((v1374 + v364) & v1386);
              goto LABEL_345;
            }
          }
          memcpy((void *)v363, (const void *)v364, v1442);
          goto LABEL_659;
        case 9:
          v184 = ~v139;
          if (__swift_getEnumTagSinglePayload((uint64_t)v142, 1, v1398))
          {
            memcpy(v141, v142, v1481);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1379 + 16))(v141, v142, v1398);
            __swift_storeEnumTagSinglePayload((uint64_t)v141, 0, 1, v1398);
          }
          v372 = ((unint64_t)v141 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v1458 = v142;
          v373 = ((unint64_t)v142 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v374 = *(_QWORD *)(v373 + 24);
          *(_QWORD *)(v372 + 24) = v374;
          *(_QWORD *)(v372 + 32) = *(_QWORD *)(v373 + 32);
          (**(void (***)(unint64_t, unint64_t))(v374 - 8))(v372, v373);
          v375 = (_QWORD *)((v372 + 47) & 0xFFFFFFFFFFFFFFF8);
          v376 = (_QWORD *)((v373 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v375 = *v376;
          v375[1] = v376[1];
          v377 = (void *)(((unint64_t)v375 + v1447 + 16) & v1386);
          v378 = (const void *)(((unint64_t)v376 + v1447 + 16) & v1386);
          sub_21D7C4C20();
          if (__swift_getEnumTagSinglePayload((uint64_t)v378, 1, v1376))
          {
            memcpy(v377, v378, v1437);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1360 + 16))(v377, v378, v1376);
            __swift_storeEnumTagSinglePayload((uint64_t)v377, 0, 1, v1376);
          }
          v657 = (void *)(((unint64_t)v377 + v1326) & v1390);
          v658 = (_BYTE *)(((unint64_t)v378 + v1326) & v1390);
          if (v1444)
          {
            v659 = v1375;
            if (v1369 >= v1375)
            {
              v660 = (uint64_t)v658;
              v659 = v1369;
              v661 = v1372;
            }
            else
            {
              v660 = (unint64_t)&v658[v1373] & v1316;
              v661 = v1377;
            }
            v715 = __swift_getEnumTagSinglePayload(v660, v659, v661);
          }
          else
          {
            if (!v658[v1396])
              goto LABEL_941;
            v702 = (v658[v1396] - 1) << v1315;
            if (v1396 > 3)
              v702 = 0;
            if ((_DWORD)v1396)
            {
              if (v1396 <= 3)
                v703 = v1396;
              else
                v703 = 4;
              __asm { BR              X11 }
            }
            v715 = v702 + 1;
          }
          if (v715)
          {
            memcpy(v657, v658, v1443);
            goto LABEL_943;
          }
LABEL_941:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1366 + 16))(v657, v658, v1372);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1367 + 16))(((unint64_t)v657 + v1373) & v1316, (unint64_t)&v658[v1373] & v1316, v1377);
          if (!v1444)
            *((_BYTE *)v657 + v1396) = 0;
LABEL_943:
          v953 = &v658[v1443];
          *((_BYTE *)v657 + v1443) = v658[v1443];
          v954 = (void *)(((unint64_t)v657 + v1443 + v1469 + 1) & v1390);
          v955 = (_BYTE *)((unint64_t)&v658[v1443 + 1 + v1469] & v1390);
          if (v1444)
          {
            v956 = v1375;
            if (v1369 >= v1375)
            {
              v957 = (unint64_t)&v953[v1469 + 1] & v1390;
              v956 = v1369;
              v958 = v1372;
            }
            else
            {
              v957 = (unint64_t)&v955[v1373] & v1316;
              v958 = v1377;
            }
            v961 = __swift_getEnumTagSinglePayload(v957, v956, v958);
          }
          else
          {
            if (!v955[v1396])
              goto LABEL_992;
            v959 = (v955[v1396] - 1) << v1315;
            if (v1396 > 3)
              v959 = 0;
            if ((_DWORD)v1396)
            {
              if (v1396 <= 3)
                v960 = v1396;
              else
                v960 = 4;
              __asm { BR              X11 }
            }
            v961 = v959 + 1;
          }
          if (v961)
          {
            memcpy(v954, v955, v1443);
            goto LABEL_994;
          }
LABEL_992:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1366 + 16))(v954, v955, v1372);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1367 + 16))(((unint64_t)v954 + v1373) & v1316, (unint64_t)&v955[v1373] & v1316, v1377);
          if (!v1444)
            *((_BYTE *)v954 + v1396) = 0;
LABEL_994:
          v979 = (_QWORD *)(((unint64_t)v954 + v1436) & v184);
          v980 = (uint64_t *)((unint64_t)&v955[v1436] & v184);
          v981 = v1439;
          if ((v1375 & 0x80000000) != 0)
          {
            v983 = __swift_getEnumTagSinglePayload(((unint64_t)v980 + v1359) & v1316, v1375, v1377);
            v981 = v1439;
          }
          else
          {
            v982 = *v980;
            if ((unint64_t)*v980 >= 0xFFFFFFFF)
              LODWORD(v982) = -1;
            v983 = v982 + 1;
          }
          if (v983)
          {
            memcpy(v979, v980, v981);
          }
          else
          {
            *v979 = *v980;
            v984 = v141;
            v985 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1367 + 16);
            sub_21D7C4C20();
            v985(((unint64_t)v979 + v1359) & v1316, ((unint64_t)v980 + v1359) & v1316, v1377);
            v141 = v984;
          }
          v986 = (_QWORD *)(((unint64_t)v979 + v1361) & v1388);
          v987 = (_QWORD *)(((unint64_t)v980 + v1361) & v1388);
          if (v1371 >= 0x7FFFFFFF)
          {
            v994 = (const void *)(((unint64_t)v987 + v1374) & v1386);
            if (__swift_getEnumTagSinglePayload((uint64_t)v994, v1363, v1376) <= 1)
            {
              v989 = v141;
              v990 = v93;
              v991 = (char *)(v987 + 1);
              v992 = v1374;
              v993 = ~v1447;
LABEL_1009:
              *(_BYTE *)v986 = *(_BYTE *)v987;
              v986[1] = v987[1];
              v986[2] = *((_QWORD *)v991 + 1);
              v986[3] = *((_QWORD *)v991 + 2);
              v986[4] = *((_QWORD *)v991 + 3);
              v986[5] = *((_QWORD *)v991 + 4);
              v986[6] = *((_QWORD *)v991 + 5);
              v986[7] = *((_QWORD *)v991 + 6);
              v986[8] = *((_QWORD *)v991 + 7);
              v986[9] = *((_QWORD *)v991 + 8);
              v986[10] = *((_QWORD *)v991 + 9);
              v986[11] = *((_QWORD *)v991 + 10);
              v986[12] = *((_QWORD *)v991 + 11);
              v995 = *((_QWORD *)v991 + 12);
              *((_BYTE *)v986 + 112) = v991[104];
              v986[13] = v995;
              v996 = (void *)(((unint64_t)v986 + v992) & v993);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              if (__swift_getEnumTagSinglePayload((uint64_t)v994, 1, v1376))
              {
                memcpy(v996, v994, v1437);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1360 + 16))(v996, v994, v1376);
                __swift_storeEnumTagSinglePayload((uint64_t)v996, 0, 1, v1376);
              }
              v93 = v990;
              v141 = v989;
LABEL_1014:
              v142 = v1458;
              v789 = 9;
              goto LABEL_1335;
            }
          }
          else
          {
            v988 = v987[2];
            if (v988 >= 0xFFFFFFFF)
              LODWORD(v988) = -1;
            if ((int)v988 - 1 < 0)
            {
              v989 = v141;
              v990 = v93;
              v991 = (char *)(v987 + 1);
              v992 = v1374;
              v993 = ~v1447;
              v994 = (const void *)(((unint64_t)v987 + v1374) & v1386);
              goto LABEL_1009;
            }
          }
          memcpy(v986, v987, v1442);
          goto LABEL_1014;
        case 0xA:
          v185 = v93;
          v186 = v142[3];
          v141[3] = v186;
          v141[4] = v142[4];
          (**(void (***)(_QWORD *, _QWORD *))(v186 - 8))(v141, v142);
          v187 = (void *)(((unint64_t)v141 + v1441) & v1317);
          v188 = (const void *)(((unint64_t)v142 + v1441) & v1317);
          if (__swift_getEnumTagSinglePayload((uint64_t)v188, 1, v1398))
          {
            v189 = v1481;
            memcpy(v187, v188, v1481);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1379 + 16))(v187, v188, v1398);
            __swift_storeEnumTagSinglePayload((uint64_t)v187, 0, 1, v1398);
            v189 = v1481;
          }
          *((_BYTE *)v187 + v189) = *((_BYTE *)v188 + v189);
          v379 = ((unint64_t)v187 + v189) & 0xFFFFFFFFFFFFFFF8;
          v380 = ((unint64_t)v188 + v189) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)(v379 + 8) = *(_QWORD *)(v380 + 8);
          *(_QWORD *)(v379 + 16) = *(_QWORD *)(v380 + 16);
          v381 = (_QWORD *)((v379 + 31) & 0xFFFFFFFFFFFFFFF8);
          v382 = (_QWORD *)((v380 + 31) & 0xFFFFFFFFFFFFFFF8);
          *v381 = *v382;
          v381[1] = v382[1];
          v383 = (_QWORD *)(((unint64_t)v381 + 23) & 0xFFFFFFFFFFFFFFF8);
          v384 = (_QWORD *)(((unint64_t)v382 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v383 = *v384;
          v383[1] = v384[1];
          *((_BYTE *)v141 + v1423) = 10;
          sub_21D7C4C20();
          sub_21D7C4C20();
          goto LABEL_470;
        case 0xB:
          *v141 = *v142;
          v182 = 11;
          goto LABEL_262;
        case 0xC:
          if (__swift_getEnumTagSinglePayload((uint64_t)v142, 1, v1398))
          {
            memcpy(v141, v142, v1481);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1379 + 16))(v141, v142, v1398);
            __swift_storeEnumTagSinglePayload((uint64_t)v141, 0, 1, v1398);
          }
          v385 = v141;
          v386 = ((unint64_t)v141 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v387 = ((unint64_t)v142 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v388 = *(_QWORD *)(v387 + 24);
          *(_QWORD *)(v386 + 24) = v388;
          *(_QWORD *)(v386 + 32) = *(_QWORD *)(v387 + 32);
          (**(void (***)(unint64_t, unint64_t))(v388 - 8))(v386, v387);
          v389 = (_QWORD *)((v1450 + 40 + v386) & v1472);
          v390 = (_QWORD *)((v1450 + 40 + v387) & v1472);
          if (v1314 > 0x7FFFFFFE)
          {
            v393 = (_QWORD *)(((unint64_t)v390 + 23) & 0xFFFFFFFFFFFFFFF8);
            v394 = ((unint64_t)v393 + 23) & 0xFFFFFFFFFFFFFFF8;
            v395 = __swift_getEnumTagSinglePayload((v1450 + v394 + 33) & v144, v1314, v1357);
            v392 = v1474;
            if (!v395)
            {
              v1459 = v142;
              v1297 = v93;
LABEL_612:
              *v389 = *v390;
              v389[1] = v390[1];
              v726 = (_QWORD *)(((unint64_t)v389 + 23) & 0xFFFFFFFFFFFFFFF8);
              *v726 = *v393;
              v726[1] = v393[1];
              v727 = ((unint64_t)v726 + 23) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)v727 = *(_QWORD *)v394;
              *(_QWORD *)(v727 + 8) = *(_QWORD *)(v394 + 8);
              *(_BYTE *)(v727 + 16) = *(_BYTE *)(v394 + 16);
              v728 = ((unint64_t)v726 + 47) & 0xFFFFFFFFFFFFFFF8;
              v729 = ((unint64_t)v393 + 47) & 0xFFFFFFFFFFFFFFF8;
              v730 = *(void **)v729;
              *(_QWORD *)v728 = *(_QWORD *)v729;
              *(_BYTE *)(v728 + 8) = *(_BYTE *)(v729 + 8);
              v731 = (v1450 + 9 + v728) & v144;
              v732 = (v1450 + 9 + v729) & v144;
              v733 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1424 + 16);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              v734 = v730;
              v733(v731, v732, v1357);
              v93 = v1297;
              v142 = v1459;
LABEL_613:
              *(_QWORD *)(((unint64_t)v389 + v1474 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v390
                                                                                                  + v1474
                                                                                                  + 7) & 0xFFFFFFFFFFFFF8);
              v141 = v385;
              *((_BYTE *)v385 + v1423) = 12;
              goto LABEL_263;
            }
          }
          else
          {
            v391 = v390[1];
            if (v391 >= 0xFFFFFFFF)
              LODWORD(v391) = -1;
            v392 = v1474;
            if ((v391 + 1) <= 1)
            {
              v1459 = v142;
              v1297 = v93;
              v393 = (_QWORD *)(((unint64_t)v390 + 23) & 0xFFFFFFFFFFFFFFF8);
              v394 = ((unint64_t)v393 + 23) & 0xFFFFFFFFFFFFFFF8;
              goto LABEL_612;
            }
          }
          memcpy(v389, v390, v392);
          goto LABEL_613;
        case 0xD:
          v190 = v142[3];
          v141[3] = v190;
          v141[4] = v142[4];
          (**(void (***)(_QWORD *, _QWORD *))(v190 - 8))(v141, v142);
          v191 = (void *)(((unint64_t)v141 + v1441) & v1317);
          v192 = (const void *)(((unint64_t)v142 + v1441) & v1317);
          if (__swift_getEnumTagSinglePayload((uint64_t)v192, 1, v1398))
          {
            memcpy(v191, v192, v1481);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1379 + 16))(v191, v192, v1398);
            __swift_storeEnumTagSinglePayload((uint64_t)v191, 0, 1, v1398);
          }
          v1455 = v142;
          v396 = ((unint64_t)v191 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v397 = ((unint64_t)v192 + v1445) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v396 = *(_QWORD *)v397;
          *(_QWORD *)(v396 + 8) = *(_QWORD *)(v397 + 8);
          *(_BYTE *)(v396 + 16) = *(_BYTE *)(v397 + 16);
          v398 = (_QWORD *)((v1324 + v396) & v1388);
          v399 = (_QWORD *)((v1324 + v397) & v1388);
          sub_21D7C4C20();
          if (v1371 >= 0x7FFFFFFF)
          {
            v404 = (const void *)(((unint64_t)v399 + v1374) & v1386);
            if (__swift_getEnumTagSinglePayload((uint64_t)v404, v1363, v1376) <= 1)
            {
              v1411 = v141;
              v1298 = v93;
              v401 = (char *)(v399 + 1);
              v402 = v1374;
              v403 = ~v1447;
LABEL_369:
              *(_BYTE *)v398 = *(_BYTE *)v399;
              v398[1] = v399[1];
              v398[2] = *((_QWORD *)v401 + 1);
              v398[3] = *((_QWORD *)v401 + 2);
              v398[4] = *((_QWORD *)v401 + 3);
              v398[5] = *((_QWORD *)v401 + 4);
              v398[6] = *((_QWORD *)v401 + 5);
              v398[7] = *((_QWORD *)v401 + 6);
              v398[8] = *((_QWORD *)v401 + 7);
              v398[9] = *((_QWORD *)v401 + 8);
              v398[10] = *((_QWORD *)v401 + 9);
              v398[11] = *((_QWORD *)v401 + 10);
              v398[12] = *((_QWORD *)v401 + 11);
              v405 = *((_QWORD *)v401 + 12);
              *((_BYTE *)v398 + 112) = v401[104];
              v398[13] = v405;
              v406 = (void *)(((unint64_t)v398 + v402) & v403);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              if (__swift_getEnumTagSinglePayload((uint64_t)v404, 1, v1376))
              {
                memcpy(v406, v404, v1437);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1360 + 16))(v406, v404, v1376);
                __swift_storeEnumTagSinglePayload((uint64_t)v406, 0, 1, v1376);
              }
              v93 = v1298;
              v141 = v1411;
LABEL_665:
              *((_BYTE *)v398 + v1442) = *((_BYTE *)v399 + v1442);
              v788 = 13;
              goto LABEL_988;
            }
          }
          else
          {
            v400 = v399[2];
            if (v400 >= 0xFFFFFFFF)
              LODWORD(v400) = -1;
            if ((int)v400 - 1 < 0)
            {
              v1411 = v141;
              v1298 = v93;
              v401 = (char *)(v399 + 1);
              v402 = v1374;
              v403 = ~v1447;
              v404 = (const void *)(((unint64_t)v399 + v1374) & v1386);
              goto LABEL_369;
            }
          }
          memcpy(v398, v399, v1442);
          goto LABEL_665;
        case 0xE:
          *v141 = *v142;
          v182 = 14;
          goto LABEL_262;
        case 0xF:
          *v141 = *v142;
          v182 = 15;
          goto LABEL_262;
        case 0x10:
          v193 = v142[3];
          v141[3] = v193;
          v141[4] = v142[4];
          (**(void (***)(_QWORD *, _QWORD *))(v193 - 8))(v141, v142);
          v194 = (void *)(((unint64_t)v141 + v1441) & v1317);
          v195 = (const void *)(((unint64_t)v142 + v1441) & v1317);
          v196 = v142;
          if (__swift_getEnumTagSinglePayload((uint64_t)v195, 1, v1398))
          {
            memcpy(v194, v195, v1481);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1379 + 16))(v194, v195, v1398);
            __swift_storeEnumTagSinglePayload((uint64_t)v194, 0, 1, v1398);
          }
          v407 = (_QWORD *)(((unint64_t)v194 + v1445) & 0xFFFFFFFFFFFFFFF8);
          v408 = (_QWORD *)(((unint64_t)v195 + v1445) & 0xFFFFFFFFFFFFFFF8);
          *v407 = *v408;
          v407[1] = v408[1];
          v409 = (_QWORD *)(((unint64_t)v407 + 23) & 0xFFFFFFFFFFFFFFF8);
          v410 = (_QWORD *)(((unint64_t)v408 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v409 = *v410;
          v409[1] = v410[1];
          v411 = (_QWORD *)(((unint64_t)v409 + 23) & 0xFFFFFFFFFFFFFFF8);
          v412 = (_QWORD *)(((unint64_t)v410 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v411 = *v412;
          v411[1] = v412[1];
          v413 = ((unint64_t)v411 + 23) & 0xFFFFFFFFFFFFFFF8;
          v414 = ((unint64_t)v412 + 23) & 0xFFFFFFFFFFFFFFF8;
          v415 = *(_QWORD *)(v414 + 24);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v415 < 0xFFFFFFFF)
          {
            v416 = *(_OWORD *)v414;
            v417 = *(_OWORD *)(v414 + 16);
            *(_QWORD *)(v413 + 32) = *(_QWORD *)(v414 + 32);
            *(_OWORD *)v413 = v416;
            *(_OWORD *)(v413 + 16) = v417;
          }
          else
          {
            *(_QWORD *)(v413 + 24) = v415;
            *(_QWORD *)(v413 + 32) = *(_QWORD *)(v414 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v415 - 8))(v413, v414, v415);
          }
          v418 = (v413 + 47) & 0xFFFFFFFFFFFFFFF8;
          v419 = (v414 + 47) & 0xFFFFFFFFFFFFFFF8;
          v420 = *(_QWORD *)(v419 + 24);
          v142 = v196;
          if (v420 < 0xFFFFFFFF)
          {
            v421 = *(_OWORD *)v419;
            v422 = *(_OWORD *)(v419 + 16);
            *(_QWORD *)(v418 + 32) = *(_QWORD *)(v419 + 32);
            *(_OWORD *)v418 = v421;
            *(_OWORD *)(v418 + 16) = v422;
          }
          else
          {
            *(_QWORD *)(v418 + 24) = v420;
            *(_QWORD *)(v418 + 32) = *(_QWORD *)(v419 + 32);
            (**(void (***)(unint64_t, unint64_t))(v420 - 8))(v418, v419);
          }
          v423 = (v418 + 47) & 0xFFFFFFFFFFFFFFF8;
          v424 = (v419 + 47) & 0xFFFFFFFFFFFFFFF8;
          v425 = *(_QWORD *)(v424 + 24);
          if (v425 < 0xFFFFFFFF)
          {
            v426 = *(_OWORD *)v424;
            v427 = *(_OWORD *)(v424 + 16);
            *(_QWORD *)(v423 + 32) = *(_QWORD *)(v424 + 32);
            *(_OWORD *)v423 = v426;
            *(_OWORD *)(v423 + 16) = v427;
          }
          else
          {
            *(_QWORD *)(v423 + 24) = v425;
            *(_QWORD *)(v423 + 32) = *(_QWORD *)(v424 + 32);
            (**(void (***)(unint64_t, unint64_t))(v425 - 8))(v423, v424);
          }
          v247 = v1404;
          v428 = v1423;
          *(_BYTE *)(v423 + 40) = *(_BYTE *)(v424 + 40);
          v429 = 16;
          goto LABEL_1377;
        case 0x11:
          v197 = v142[3];
          v141[3] = v197;
          v141[4] = v142[4];
          (**(void (***)(_QWORD *, _QWORD *))(v197 - 8))(v141, v142);
          v198 = (void *)(((unint64_t)v141 + v1441) & v1317);
          v199 = (const void *)(((unint64_t)v142 + v1441) & v1317);
          v200 = v142;
          if (__swift_getEnumTagSinglePayload((uint64_t)v199, 1, v1398))
          {
            memcpy(v198, v199, v1481);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1379 + 16))(v198, v199, v1398);
            __swift_storeEnumTagSinglePayload((uint64_t)v198, 0, 1, v1398);
          }
          v430 = (_QWORD *)(((unint64_t)v198 + v1445) & 0xFFFFFFFFFFFFFFF8);
          v431 = (_QWORD *)(((unint64_t)v199 + v1445) & 0xFFFFFFFFFFFFFFF8);
          *v430 = *v431;
          v430[1] = v431[1];
          v432 = (_QWORD *)(((unint64_t)v430 + 23) & 0xFFFFFFFFFFFFFFF8);
          v433 = (_QWORD *)(((unint64_t)v431 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v432 = *v433;
          v432[1] = v433[1];
          v434 = (_QWORD *)(((unint64_t)v432 + 23) & 0xFFFFFFFFFFFFFFF8);
          v435 = (_QWORD *)(((unint64_t)v433 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v434 = *v435;
          v434[1] = v435[1];
          v436 = (_QWORD *)(((unint64_t)v434 + 23) & 0xFFFFFFFFFFFFFFF8);
          v437 = (_QWORD *)(((unint64_t)v435 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v436 = *v437;
          v436[1] = v437[1];
          v438 = ((unint64_t)v436 + 23) & 0xFFFFFFFFFFFFFFF8;
          v439 = ((unint64_t)v437 + 23) & 0xFFFFFFFFFFFFFFF8;
          v440 = *(_QWORD *)(v439 + 24);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v440 < 0xFFFFFFFF)
          {
            v441 = *(_OWORD *)v439;
            v442 = *(_OWORD *)(v439 + 16);
            *(_QWORD *)(v438 + 32) = *(_QWORD *)(v439 + 32);
            *(_OWORD *)v438 = v441;
            *(_OWORD *)(v438 + 16) = v442;
          }
          else
          {
            *(_QWORD *)(v438 + 24) = v440;
            *(_QWORD *)(v438 + 32) = *(_QWORD *)(v439 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v440 - 8))(v438, v439, v440);
          }
          v443 = (v438 + 47) & 0xFFFFFFFFFFFFFFF8;
          v444 = (v439 + 47) & 0xFFFFFFFFFFFFFFF8;
          v445 = *(_QWORD *)(v444 + 24);
          v218 = v93;
          v142 = v200;
          if (v445 < 0xFFFFFFFF)
          {
            v446 = *(_OWORD *)v444;
            v447 = *(_OWORD *)(v444 + 16);
            *(_QWORD *)(v443 + 32) = *(_QWORD *)(v444 + 32);
            *(_OWORD *)v443 = v446;
            *(_OWORD *)(v443 + 16) = v447;
          }
          else
          {
            *(_QWORD *)(v443 + 24) = v445;
            *(_QWORD *)(v443 + 32) = *(_QWORD *)(v444 + 32);
            (**(void (***)(unint64_t, unint64_t))(v445 - 8))(v443, v444);
          }
          v448 = (v443 + 47) & 0xFFFFFFFFFFFFFFF8;
          v449 = (v444 + 47) & 0xFFFFFFFFFFFFFFF8;
          v450 = *(_QWORD *)(v449 + 24);
          if (v450 < 0xFFFFFFFF)
          {
            v451 = *(_OWORD *)v449;
            v452 = *(_OWORD *)(v449 + 16);
            *(_QWORD *)(v448 + 32) = *(_QWORD *)(v449 + 32);
            *(_OWORD *)v448 = v451;
            *(_OWORD *)(v448 + 16) = v452;
          }
          else
          {
            *(_QWORD *)(v448 + 24) = v450;
            *(_QWORD *)(v448 + 32) = *(_QWORD *)(v449 + 32);
            (**(void (***)(unint64_t, unint64_t))(v450 - 8))(v448, v449);
          }
          v453 = (void *)((v1322 + v448) & v1390);
          v454 = (_BYTE *)((v1322 + v449) & v1390);
          if (v1444)
          {
            v455 = v1375;
            if (v1369 >= v1375)
            {
              v456 = (uint64_t)v454;
              v455 = v1369;
              v457 = v1372;
            }
            else
            {
              v456 = (unint64_t)&v454[v1373] & v1316;
              v457 = v1377;
            }
            v712 = __swift_getEnumTagSinglePayload(v456, v455, v457);
          }
          else
          {
            if (!v454[v1396])
              goto LABEL_1017;
            v662 = (v454[v1396] - 1) << v1315;
            if (v1396 > 3)
              v662 = 0;
            if ((_DWORD)v1396)
            {
              if (v1396 <= 3)
                v663 = v1396;
              else
                v663 = 4;
              __asm { BR              X11 }
            }
            v712 = v662 + 1;
          }
          if (v712)
          {
            memcpy(v453, v454, v1443);
            goto LABEL_1019;
          }
LABEL_1017:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1366 + 16))(v453, v454, v1372);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1367 + 16))(((unint64_t)v453 + v1373) & v1316, (unint64_t)&v454[v1373] & v1316, v1377);
          if (!v1444)
            *((_BYTE *)v453 + v1396) = 0;
LABEL_1019:
          v997 = (void *)(((unint64_t)v453 + v1338) & v1390);
          v998 = (_BYTE *)((unint64_t)&v454[v1338] & v1390);
          if (v1444)
          {
            v999 = v1375;
            if (v1369 >= v1375)
            {
              v1000 = (uint64_t)v998;
              v999 = v1369;
              v1001 = v1372;
            }
            else
            {
              v1000 = (unint64_t)&v998[v1373] & v1316;
              v1001 = v1377;
            }
            v1004 = __swift_getEnumTagSinglePayload(v1000, v999, v1001);
          }
          else
          {
            if (!v998[v1396])
              goto LABEL_1202;
            v1002 = (v998[v1396] - 1) << v1315;
            if (v1396 > 3)
              v1002 = 0;
            if ((_DWORD)v1396)
            {
              if (v1396 <= 3)
                v1003 = v1396;
              else
                v1003 = 4;
              __asm { BR              X11 }
            }
            v1004 = v1002 + 1;
          }
          if (v1004)
          {
            memcpy(v997, v998, v1443);
            goto LABEL_1204;
          }
LABEL_1202:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1366 + 16))(v997, v998, v1372);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1367 + 16))(((unint64_t)v997 + v1373) & v1316, (unint64_t)&v998[v1373] & v1316, v1377);
          if (!v1444)
            *((_BYTE *)v997 + v1396) = 0;
LABEL_1204:
          v962 = 17;
          goto LABEL_1205;
        case 0x12:
          *v141 = *v142;
          v182 = 18;
          goto LABEL_262;
        case 0x13:
          if (__swift_getEnumTagSinglePayload((uint64_t)v142, 1, v1398))
          {
            memcpy(v141, v142, v1481);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1379 + 16))(v141, v142, v1398);
            __swift_storeEnumTagSinglePayload((uint64_t)v141, 0, 1, v1398);
          }
          v458 = ((unint64_t)v141 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v459 = ((unint64_t)v142 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v460 = *(_QWORD *)(v459 + 24);
          *(_QWORD *)(v458 + 24) = v460;
          *(_QWORD *)(v458 + 32) = *(_QWORD *)(v459 + 32);
          (**(void (***)(unint64_t, unint64_t))(v460 - 8))(v458, v459);
          v461 = (_QWORD *)((v458 + 47) & 0xFFFFFFFFFFFFFFF8);
          v462 = (_QWORD *)((v459 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v461 = *v462;
          v461[1] = v462[1];
          v463 = (_QWORD *)(((unint64_t)v461 + 23) & 0xFFFFFFFFFFFFFFF8);
          v464 = (_QWORD *)(((unint64_t)v462 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v463 = *v464;
          v463[1] = v464[1];
          *(_QWORD *)(((unint64_t)v463 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v464 + 23) & 0xFFFFFFFFFFFFF8);
          *((_BYTE *)v141 + v1423) = 19;
          sub_21D7C4C20();
          sub_21D7C4C20();
          goto LABEL_263;
        case 0x14:
          if (__swift_getEnumTagSinglePayload((uint64_t)v142, 1, v1398))
          {
            memcpy(v141, v142, v1481);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1379 + 16))(v141, v142, v1398);
            __swift_storeEnumTagSinglePayload((uint64_t)v141, 0, 1, v1398);
          }
          v465 = ((unint64_t)v141 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v466 = ((unint64_t)v142 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v467 = *(_QWORD *)(v466 + 24);
          *(_QWORD *)(v465 + 24) = v467;
          *(_QWORD *)(v465 + 32) = *(_QWORD *)(v466 + 32);
          (**(void (***)(unint64_t, unint64_t))(v467 - 8))(v465, v466);
          v468 = (void *)((v1464 + 40 + v465) & v1313);
          v469 = (const void *)((v1464 + 40 + v466) & v1313);
          v470 = v1396;
          v471 = v1316;
          v1460 = v142;
          if (v1364 == v1340)
          {
            v472 = v1440;
            v473 = v1481;
            if (v1440 < 2)
              goto LABEL_729;
            v474 = (uint64_t)v469;
            v475 = v1398;
          }
          else
          {
            v476 = ((unint64_t)v469 + v1445) & 0xFFFFFFFFFFFFFFF8;
            if (v1340 == 0x7FFFFFFF)
            {
              v473 = v1481;
              if (*(_QWORD *)(v476 + 24) >= 0xFFFFFFFFuLL)
                goto LABEL_729;
              goto LABEL_731;
            }
            v473 = v1481;
            v722 = (v1478
                  + ((((((((v476 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                    + 47) & 0xFFFFFFFFFFFFFFF8)) & v1388;
            if (v1320 == v1340)
            {
              if (v1371 > 0x7FFFFFFE)
              {
                v821 = __swift_getEnumTagSinglePayload((v1374 + v722) & v1386, v1363, v1376);
                if (v821 < 2)
                  goto LABEL_729;
                v725 = v821 - 1;
              }
              else
              {
                v723 = *(_QWORD *)(v722 + 16);
                if (v723 >= 0xFFFFFFFF)
                  LODWORD(v723) = -1;
                v724 = v723 - 1;
                if (v724 < 0)
                  v724 = -1;
                v725 = v724 + 1;
              }
              if (v725 < 2)
              {
LABEL_729:
                v1415 = v141;
                if (__swift_getEnumTagSinglePayload((uint64_t)v469, 1, v1398))
                {
                  memcpy(v468, v469, v473);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v1379 + 16))(v468, v469, v1398);
                  __swift_storeEnumTagSinglePayload((uint64_t)v468, 0, 1, v1398);
                }
                v825 = ((unint64_t)v468 + v1445) & 0xFFFFFFFFFFFFFFF8;
                v826 = ((unint64_t)v469 + v1445) & 0xFFFFFFFFFFFFFFF8;
                v827 = *(_QWORD *)(v826 + 24);
                *(_QWORD *)(v825 + 24) = v827;
                *(_QWORD *)(v825 + 32) = *(_QWORD *)(v826 + 32);
                (**(void (***)(unint64_t, unint64_t))(v827 - 8))(v825, v826);
                v828 = (_QWORD *)((v825 + 47) & 0xFFFFFFFFFFFFFFF8);
                v829 = (_QWORD *)((v826 + 47) & 0xFFFFFFFFFFFFFFF8);
                *v828 = *v829;
                v828[1] = v829[1];
                v830 = (_QWORD *)(((unint64_t)v828 + 23) & 0xFFFFFFFFFFFFFFF8);
                v831 = (_QWORD *)(((unint64_t)v829 + 23) & 0xFFFFFFFFFFFFFFF8);
                *v830 = *v831;
                v830[1] = v831[1];
                v832 = ((unint64_t)v830 + 23) & 0xFFFFFFFFFFFFFFF8;
                v833 = ((unint64_t)v831 + 23) & 0xFFFFFFFFFFFFFFF8;
                v834 = *(_QWORD *)(v833 + 24);
                sub_21D7C4C20();
                sub_21D7C4C20();
                if (v834 < 0xFFFFFFFF)
                {
                  v835 = *(_OWORD *)v833;
                  v836 = *(_OWORD *)(v833 + 16);
                  *(_QWORD *)(v832 + 32) = *(_QWORD *)(v833 + 32);
                  *(_OWORD *)v832 = v835;
                  *(_OWORD *)(v832 + 16) = v836;
                }
                else
                {
                  *(_QWORD *)(v832 + 24) = v834;
                  *(_QWORD *)(v832 + 32) = *(_QWORD *)(v833 + 32);
                  (**(void (***)(unint64_t, unint64_t, unint64_t))(v834 - 8))(v832, v833, v834);
                }
                v837 = (v832 + 47) & 0xFFFFFFFFFFFFFFF8;
                v838 = (v833 + 47) & 0xFFFFFFFFFFFFFFF8;
                v839 = *(_QWORD *)(v838 + 24);
                v1300 = v93;
                v1476 = v469;
                if (v839 < 0xFFFFFFFF)
                {
                  v840 = *(_OWORD *)v838;
                  v841 = *(_OWORD *)(v838 + 16);
                  *(_QWORD *)(v837 + 32) = *(_QWORD *)(v838 + 32);
                  *(_OWORD *)v837 = v840;
                  *(_OWORD *)(v837 + 16) = v841;
                }
                else
                {
                  *(_QWORD *)(v837 + 24) = v839;
                  *(_QWORD *)(v837 + 32) = *(_QWORD *)(v838 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v839 - 8))(v837, (v833 + 47) & 0xFFFFFFFFFFFFFFF8);
                }
                v842 = (_QWORD *)((v1478 + v837) & v1388);
                v843 = (_QWORD *)((v1478 + v838) & v1388);
                if (v1371 >= 0x7FFFFFFF)
                {
                  v849 = (const void *)(((unint64_t)v843 + v1374) & v1386);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v849, v1363, v1376) <= 1)
                  {
                    v845 = v468;
                    v846 = (char *)(v843 + 1);
                    v847 = v1374;
                    v848 = ~v1447;
                    goto LABEL_746;
                  }
                }
                else
                {
                  v844 = *(_QWORD *)(((v1478 + v838) & v1388) + 0x10);
                  if (v844 >= 0xFFFFFFFF)
                    LODWORD(v844) = -1;
                  if ((int)v844 - 1 < 0)
                  {
                    v845 = v468;
                    v846 = (char *)(v843 + 1);
                    v847 = v1374;
                    v848 = ~v1447;
                    v849 = (const void *)(((unint64_t)v843 + v1374) & v1386);
LABEL_746:
                    *(_BYTE *)v842 = *(_BYTE *)v843;
                    v842[1] = v843[1];
                    v842[2] = *((_QWORD *)v846 + 1);
                    v842[3] = *((_QWORD *)v846 + 2);
                    v842[4] = *((_QWORD *)v846 + 3);
                    v842[5] = *((_QWORD *)v846 + 4);
                    v842[6] = *((_QWORD *)v846 + 5);
                    v842[7] = *((_QWORD *)v846 + 6);
                    v842[8] = *((_QWORD *)v846 + 7);
                    v842[9] = *((_QWORD *)v846 + 8);
                    v842[10] = *((_QWORD *)v846 + 9);
                    v842[11] = *((_QWORD *)v846 + 10);
                    v842[12] = *((_QWORD *)v846 + 11);
                    v850 = *((_QWORD *)v846 + 12);
                    *((_BYTE *)v842 + 112) = v846[104];
                    v842[13] = v850;
                    v851 = (void *)(((unint64_t)v842 + v847) & v848);
                    sub_21D7C4C20();
                    sub_21D7C4C20();
                    sub_21D7C4C20();
                    sub_21D7C4C20();
                    sub_21D7C4C20();
                    sub_21D7C4C20();
                    if (__swift_getEnumTagSinglePayload((uint64_t)v849, 1, v1376))
                    {
                      memcpy(v851, v849, v1437);
                    }
                    else
                    {
                      (*(void (**)(void *, const void *, uint64_t))(v1360 + 16))(v851, v849, v1376);
                      __swift_storeEnumTagSinglePayload((uint64_t)v851, 0, 1, v1376);
                    }
                    v470 = v1396;
                    v471 = v1316;
                    v468 = v845;
LABEL_751:
                    v852 = (void *)(((unint64_t)v842 + v1469 + v1442) & v1390);
                    v853 = (_BYTE *)(((unint64_t)v843 + v1469 + v1442) & v1390);
                    v141 = v1415;
                    if (v1444)
                    {
                      v854 = v1375;
                      if (v1369 >= v1375)
                      {
                        v855 = (uint64_t)v853;
                        v854 = v1369;
                        v856 = v1372;
                      }
                      else
                      {
                        v855 = (unint64_t)&v853[v1373] & v471;
                        v856 = v1377;
                      }
                      v859 = __swift_getEnumTagSinglePayload(v855, v854, v856);
                      v93 = v1300;
                      v469 = v1476;
                    }
                    else
                    {
                      v93 = v1300;
                      v469 = v1476;
                      if (!v853[v470])
                        goto LABEL_1320;
                      v857 = (v853[v470] - 1) << v1315;
                      if (v470 > 3)
                        v857 = 0;
                      if ((_DWORD)v470)
                      {
                        if (v470 <= 3)
                          v858 = v470;
                        else
                          v858 = 4;
                        __asm { BR              X11 }
                      }
                      v859 = v857 + 1;
                    }
                    if (v859)
                    {
                      v822 = v852;
                      v823 = v853;
                      v824 = v1443;
                      goto LABEL_1319;
                    }
LABEL_1320:
                    (*(void (**)(void *, _BYTE *, uint64_t))(v1366 + 16))(v852, v853, v1372);
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v1367 + 16))(((unint64_t)v852 + v1373) & v471, (unint64_t)&v853[v1373] & v471, v1377);
                    if (!v1444)
                      *((_BYTE *)v852 + v470) = 0;
LABEL_1322:
                    v1189 = (_QWORD *)(((unint64_t)v468 + v1334) & 0xFFFFFFFFFFFFFFF8);
                    v1190 = (_QWORD *)(((unint64_t)v469 + v1334) & 0xFFFFFFFFFFFFFFF8);
                    *v1189 = *v1190;
                    v1191 = (_QWORD *)(((unint64_t)v1189 + v1335) & v1388);
                    v1192 = (_QWORD *)(((unint64_t)v1190 + v1335) & v1388);
                    sub_21D7C4C20();
                    if (v1371 >= 0x7FFFFFFF)
                    {
                      v1199 = (const void *)(((unint64_t)v1192 + v1374) & v1386);
                      if (__swift_getEnumTagSinglePayload((uint64_t)v1199, v1363, v1376) <= 1)
                      {
                        v1194 = v141;
                        v1195 = v93;
                        v1196 = (char *)(v1192 + 1);
                        v1197 = v1374;
                        v1198 = ~v1447;
                        goto LABEL_1329;
                      }
                    }
                    else
                    {
                      v1193 = v1192[2];
                      if (v1193 >= 0xFFFFFFFF)
                        LODWORD(v1193) = -1;
                      if ((int)v1193 - 1 < 0)
                      {
                        v1194 = v141;
                        v1195 = v93;
                        v1196 = (char *)(v1192 + 1);
                        v1197 = v1374;
                        v1198 = ~v1447;
                        v1199 = (const void *)(((unint64_t)v1192 + v1374) & v1386);
LABEL_1329:
                        *(_BYTE *)v1191 = *(_BYTE *)v1192;
                        v1191[1] = v1192[1];
                        v1191[2] = *((_QWORD *)v1196 + 1);
                        v1191[3] = *((_QWORD *)v1196 + 2);
                        v1191[4] = *((_QWORD *)v1196 + 3);
                        v1191[5] = *((_QWORD *)v1196 + 4);
                        v1191[6] = *((_QWORD *)v1196 + 5);
                        v1191[7] = *((_QWORD *)v1196 + 6);
                        v1191[8] = *((_QWORD *)v1196 + 7);
                        v1191[9] = *((_QWORD *)v1196 + 8);
                        v1191[10] = *((_QWORD *)v1196 + 9);
                        v1191[11] = *((_QWORD *)v1196 + 10);
                        v1191[12] = *((_QWORD *)v1196 + 11);
                        v1200 = *((_QWORD *)v1196 + 12);
                        *((_BYTE *)v1191 + 112) = v1196[104];
                        v1191[13] = v1200;
                        v1201 = (void *)(((unint64_t)v1191 + v1197) & v1198);
                        sub_21D7C4C20();
                        sub_21D7C4C20();
                        sub_21D7C4C20();
                        sub_21D7C4C20();
                        sub_21D7C4C20();
                        sub_21D7C4C20();
                        if (__swift_getEnumTagSinglePayload((uint64_t)v1199, 1, v1376))
                        {
                          memcpy(v1201, v1199, v1437);
                        }
                        else
                        {
                          (*(void (**)(void *, const void *, uint64_t))(v1360 + 16))(v1201, v1199, v1376);
                          __swift_storeEnumTagSinglePayload((uint64_t)v1201, 0, 1, v1376);
                        }
                        v93 = v1195;
                        v141 = v1194;
                        goto LABEL_1334;
                      }
                    }
                    memcpy(v1191, v1192, v1442);
LABEL_1334:
                    v142 = v1460;
                    v789 = 20;
                    goto LABEL_1335;
                  }
                }
                memcpy(v842, v843, v1442);
                goto LABEL_751;
              }
LABEL_731:
              v822 = v468;
              v823 = v469;
              v824 = v1319;
LABEL_1319:
              memcpy(v822, v823, v824);
              goto LABEL_1322;
            }
            if (v1444 < 2)
              goto LABEL_729;
            v474 = (v1318 + v722) & v1390;
            v472 = v1375;
            if (v1369 >= v1375)
            {
              v472 = v1369;
              v475 = v1372;
            }
            else
            {
              v474 = (v1373 + v474) & v1316;
              v475 = v1377;
            }
          }
          if (__swift_getEnumTagSinglePayload(v474, v472, v475) < 2)
            goto LABEL_729;
          goto LABEL_731;
        case 0x15:
          if (__swift_getEnumTagSinglePayload((uint64_t)v142, 1, v1398))
          {
            memcpy(v141, v142, v1481);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1379 + 16))(v141, v142, v1398);
            __swift_storeEnumTagSinglePayload((uint64_t)v141, 0, 1, v1398);
          }
          v477 = ((unint64_t)v141 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v478 = ((unint64_t)v142 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v479 = *(_QWORD *)(v478 + 24);
          *(_QWORD *)(v477 + 24) = v479;
          *(_QWORD *)(v477 + 32) = *(_QWORD *)(v478 + 32);
          (**(void (***)(unint64_t, unint64_t))(v479 - 8))(v477, v478);
          v480 = (v477 + 47) & 0xFFFFFFFFFFFFFFF8;
          v481 = (v478 + 47) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v480 = *(_QWORD *)v481;
          *(_QWORD *)(v480 + 8) = *(_QWORD *)(v481 + 8);
          *(_BYTE *)(v480 + 16) = *(_BYTE *)(v481 + 16);
          v482 = 21;
          goto LABEL_464;
        case 0x16:
          v1467 = ~v139;
          v1294 = v93;
          v1283 = v89;
          if (__swift_getEnumTagSinglePayload((uint64_t)v142, 1, v1398))
          {
            memcpy(v141, v142, v1481);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1379 + 16))(v141, v142, v1398);
            __swift_storeEnumTagSinglePayload((uint64_t)v141, 0, 1, v1398);
          }
          v1412 = v141;
          v483 = ((unint64_t)v141 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v1461 = v142;
          v484 = ((unint64_t)v142 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v485 = *(_QWORD *)(v484 + 24);
          *(_QWORD *)(v483 + 24) = v485;
          *(_QWORD *)(v483 + 32) = *(_QWORD *)(v484 + 32);
          (**(void (***)(unint64_t, unint64_t))(v485 - 8))(v483, v484);
          v486 = (_QWORD *)((v483 + 47) & 0xFFFFFFFFFFFFFFF8);
          v487 = (_QWORD *)((v484 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v486 = *v487;
          v486[1] = v487[1];
          v488 = (_QWORD *)(((unint64_t)v486 + 23) & 0xFFFFFFFFFFFFF8);
          v489 = (_QWORD *)(((unint64_t)v487 + 23) & 0xFFFFFFFFFFFFF8);
          *v488 = *v489;
          v490 = (_QWORD *)(((unint64_t)v488 + 15) & 0xFFFFFFFFFFFFFFF8);
          v491 = (_QWORD *)(((unint64_t)v489 + 15) & 0xFFFFFFFFFFFFFFF8);
          *v490 = *v491;
          v490[1] = v491[1];
          v492 = (_QWORD *)(((unint64_t)v490 + v1358) & v1472);
          v493 = (_QWORD *)(((unint64_t)v491 + v1358) & v1472);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v1314 > 0x7FFFFFFE)
          {
            v496 = (_QWORD *)(((unint64_t)v493 + 23) & 0xFFFFFFFFFFFFFFF8);
            v497 = ((unint64_t)v496 + 23) & 0xFFFFFFFFFFFFFFF8;
            v498 = __swift_getEnumTagSinglePayload((v1450 + v497 + 33) & v144, v1314, v1357);
            v495 = v1474;
            if (!v498)
              goto LABEL_417;
          }
          else
          {
            v494 = v493[1];
            if (v494 >= 0xFFFFFFFF)
              LODWORD(v494) = -1;
            v495 = v1474;
            if ((v494 + 1) <= 1)
            {
              v496 = (_QWORD *)(((unint64_t)v493 + 23) & 0xFFFFFFFFFFFFFFF8);
              v497 = ((unint64_t)v496 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_417:
              *v492 = *v493;
              v492[1] = v493[1];
              v500 = (_QWORD *)(((unint64_t)v492 + 23) & 0xFFFFFFFFFFFFFFF8);
              *v500 = *v496;
              v500[1] = v496[1];
              v501 = ((unint64_t)v500 + 23) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)v501 = *(_QWORD *)v497;
              *(_QWORD *)(v501 + 8) = *(_QWORD *)(v497 + 8);
              *(_BYTE *)(v501 + 16) = *(_BYTE *)(v497 + 16);
              v502 = ((unint64_t)v500 + 47) & 0xFFFFFFFFFFFFFFF8;
              v503 = ((unint64_t)v496 + 47) & 0xFFFFFFFFFFFFFFF8;
              v504 = *(void **)v503;
              *(_QWORD *)v502 = *(_QWORD *)v503;
              *(_BYTE *)(v502 + 8) = *(_BYTE *)(v503 + 8);
              v505 = (v1450 + 9 + v502) & v144;
              v506 = (v1450 + 9 + v503) & v144;
              v507 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1424 + 16);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              v508 = v504;
              v507(v505, v506, v1357);
              v499 = v1474;
LABEL_418:
              *((_BYTE *)v492 + v499) = *((_BYTE *)v493 + v499);
              v509 = ((unint64_t)v492 + v499) & 0xFFFFFFFFFFFFFFF8;
              v510 = ((unint64_t)v493 + v499) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)(v509 + 8) = *(_QWORD *)(v510 + 8);
              *(_QWORD *)(v509 + 16) = *(_QWORD *)(v510 + 16);
              v511 = (void *)((v1328 + v509) & v1390);
              v512 = (_BYTE *)((v1328 + v510) & v1390);
              sub_21D7C4C20();
              v513 = v1442;
              v514 = v1481;
              if (v1444)
              {
                v515 = v1375;
                if (v1369 >= v1375)
                {
                  v516 = (uint64_t)v512;
                  v515 = v1369;
                  v517 = v1372;
                }
                else
                {
                  v516 = (unint64_t)&v512[v1373] & v1316;
                  v517 = v1377;
                }
                v713 = __swift_getEnumTagSinglePayload(v516, v515, v517);
                v664 = v1294;
              }
              else
              {
                v664 = v1294;
                if (!v512[v1396])
                  goto LABEL_1035;
                v665 = (v512[v1396] - 1) << v1315;
                if (v1396 > 3)
                  v665 = 0;
                if ((_DWORD)v1396)
                {
                  if (v1396 <= 3)
                    v666 = v1396;
                  else
                    v666 = 4;
                  __asm { BR              X11 }
                }
                v713 = v665 + 1;
              }
              if (v713)
              {
                memcpy(v511, v512, v1443);
                goto LABEL_1037;
              }
LABEL_1035:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1366 + 16))(v511, v512, v1372);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1367 + 16))(((unint64_t)v511 + v1373) & v1316, (unint64_t)&v512[v1373] & v1316, v1377);
              if (!v1444)
                *((_BYTE *)v511 + v1396) = 0;
LABEL_1037:
              v1005 = (_QWORD *)(((unint64_t)v511 + v1436) & v1467);
              v1006 = (uint64_t *)((unint64_t)&v512[v1436] & v1467);
              v1007 = v1439;
              if ((v1375 & 0x80000000) != 0)
              {
                v1009 = __swift_getEnumTagSinglePayload(((unint64_t)v1006 + v1359) & v1316, v1375, v1377);
                v1007 = v1439;
              }
              else
              {
                v1008 = *v1006;
                if ((unint64_t)*v1006 >= 0xFFFFFFFF)
                  LODWORD(v1008) = -1;
                v1009 = v1008 + 1;
              }
              if (v1009)
              {
                memcpy(v1005, v1006, v1007);
              }
              else
              {
                *v1005 = *v1006;
                v1010 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1367 + 16);
                sub_21D7C4C20();
                v514 = v1481;
                v1010(((unint64_t)v1005 + v1359) & v1316, ((unint64_t)v1006 + v1359) & v1316, v1377);
              }
              v1011 = (_QWORD *)(((unint64_t)v1005 + v1361) & v1388);
              v1012 = (_BYTE *)(((unint64_t)v1006 + v1361) & v1388);
              if (v1371 >= 0x7FFFFFFF)
              {
                v1017 = (const void *)((unint64_t)&v1012[v1374] & v1386);
                if (__swift_getEnumTagSinglePayload((uint64_t)v1017, v1363, v1376) <= 1)
                {
                  v1015 = v1012 + 8;
                  v1016 = v1374;
                  v1014 = ~v1447;
                  goto LABEL_1052;
                }
              }
              else
              {
                v1013 = *(_QWORD *)((((unint64_t)v1006 + v1361) & v1388) + 0x10);
                if (v1013 >= 0xFFFFFFFF)
                  LODWORD(v1013) = -1;
                v1014 = ~v1447;
                if ((int)v1013 - 1 < 0)
                {
                  v1015 = v1012 + 8;
                  v1016 = v1374;
                  v1017 = (const void *)((unint64_t)&v1012[v1374] & v1386);
LABEL_1052:
                  *(_BYTE *)v1011 = *v1012;
                  v1011[1] = *(_QWORD *)((((unint64_t)v1006 + v1361) & v1388) + 8);
                  v1011[2] = *((_QWORD *)v1015 + 1);
                  v1011[3] = *((_QWORD *)v1015 + 2);
                  v1011[4] = *((_QWORD *)v1015 + 3);
                  v1011[5] = *((_QWORD *)v1015 + 4);
                  v1011[6] = *((_QWORD *)v1015 + 5);
                  v1011[7] = *((_QWORD *)v1015 + 6);
                  v1011[8] = *((_QWORD *)v1015 + 7);
                  v1011[9] = *((_QWORD *)v1015 + 8);
                  v1011[10] = *((_QWORD *)v1015 + 9);
                  v1011[11] = *((_QWORD *)v1015 + 10);
                  v1011[12] = *((_QWORD *)v1015 + 11);
                  v1018 = *((_QWORD *)v1015 + 12);
                  *((_BYTE *)v1011 + 112) = v1015[104];
                  v1011[13] = v1018;
                  v1480 = (void *)(((unint64_t)v1011 + v1016) & v1014);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (__swift_getEnumTagSinglePayload((uint64_t)v1017, 1, v1376))
                  {
                    memcpy(v1480, v1017, v1437);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1360 + 16))(v1480, v1017, v1376);
                    __swift_storeEnumTagSinglePayload((uint64_t)v1480, 0, 1, v1376);
                  }
                  v664 = v1294;
                  v513 = v1442;
                  v514 = v1481;
LABEL_1057:
                  v1019 = v513;
                  v1020 = (unint64_t)v1011 + v1448 + v513;
                  v1021 = (unint64_t)&v1012[v1448 + v1019];
                  v1022 = v1021 & v145;
                  if (v1364 < 0x7FFFFFFF)
                  {
                    if (*(_QWORD *)(((v1445 + v1022) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                      goto LABEL_1059;
                  }
                  else if (__swift_getEnumTagSinglePayload(v1021 & v145, v1440, v1398) >= 2)
                  {
LABEL_1059:
                    memcpy((void *)(v1020 & v145), (const void *)(v1021 & v145), v1362);
                    v1023 = v1362;
                    v1024 = v1440;
                    goto LABEL_1069;
                  }
                  if (__swift_getEnumTagSinglePayload(v1021 & v145, 1, v1398))
                  {
                    memcpy((void *)(v1020 & v145), (const void *)(v1021 & v145), v514);
                  }
                  else
                  {
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v1379 + 16))(v1020 & v145, v1021 & v145, v1398);
                    __swift_storeEnumTagSinglePayload(v1020 & v145, 0, 1, v1398);
                  }
                  v1025 = (v1445 + (v1020 & v145)) & 0xFFFFFFFFFFFFFFF8;
                  v1026 = (v1445 + v1022) & 0xFFFFFFFFFFFFFFF8;
                  v1027 = *(_QWORD *)(v1026 + 24);
                  *(_QWORD *)(v1025 + 24) = v1027;
                  *(_QWORD *)(v1025 + 32) = *(_QWORD *)(v1026 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v1027 - 8))(v1025, v1026);
                  v1028 = (v1025 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1029 = (v1026 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1030 = *(_QWORD *)(v1029 + 24);
                  if (v1030 < 0xFFFFFFFF)
                  {
                    v1031 = *(_OWORD *)v1029;
                    v1032 = *(_OWORD *)(v1029 + 16);
                    *(_QWORD *)(v1028 + 32) = *(_QWORD *)(v1029 + 32);
                    *(_OWORD *)v1028 = v1031;
                    *(_OWORD *)(v1028 + 16) = v1032;
                  }
                  else
                  {
                    *(_QWORD *)(v1028 + 24) = v1030;
                    *(_QWORD *)(v1028 + 32) = *(_QWORD *)(v1029 + 32);
                    (**(void (***)(unint64_t, unint64_t))(v1030 - 8))(v1028, (v1026 + 47) & 0xFFFFFFFFFFFFFFF8);
                  }
                  v1033 = (_QWORD *)((v1028 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v1034 = (_QWORD *)((v1029 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v1033 = *v1034;
                  v1033[1] = v1034[1];
                  sub_21D7C4C20();
                  v1023 = v1362;
                  v1024 = v1440;
                  if (v1440)
                    v1023 = ((((((v1395 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                          + 16;
LABEL_1069:
                  v1035 = (v1020 | v1449) + v1023;
                  v1036 = (v1021 | v1449) + v1023;
                  v1037 = v1036 & v145;
                  if (v1364 < 0x7FFFFFFF)
                  {
                    v141 = v1412;
                    if (*(_QWORD *)(((v1445 + v1037) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                      goto LABEL_1071;
                  }
                  else
                  {
                    v141 = v1412;
                    if (__swift_getEnumTagSinglePayload(v1036 & v145, v1024, v1398) >= 2)
                    {
LABEL_1071:
                      memcpy((void *)(v1035 & v145), (const void *)(v1036 & v145), v1362);
                      v1038 = v1362;
                      v1039 = v1481;
                      v1040 = v1440;
                      goto LABEL_1081;
                    }
                  }
                  if (__swift_getEnumTagSinglePayload(v1036 & v145, 1, v1398))
                  {
                    v1039 = v1481;
                    memcpy((void *)(v1035 & v145), (const void *)(v1036 & v145), v1481);
                  }
                  else
                  {
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v1379 + 16))(v1035 & v145, v1036 & v145, v1398);
                    __swift_storeEnumTagSinglePayload(v1035 & v145, 0, 1, v1398);
                    v1039 = v1481;
                  }
                  v1041 = (v1445 + (v1035 & v145)) & 0xFFFFFFFFFFFFFFF8;
                  v1042 = (v1445 + v1037) & 0xFFFFFFFFFFFFFFF8;
                  v1043 = *(_QWORD *)(v1042 + 24);
                  *(_QWORD *)(v1041 + 24) = v1043;
                  *(_QWORD *)(v1041 + 32) = *(_QWORD *)(v1042 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v1043 - 8))(v1041, v1042);
                  v1044 = (v1041 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1045 = (v1042 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1046 = *(_QWORD *)(v1045 + 24);
                  if (v1046 < 0xFFFFFFFF)
                  {
                    v1047 = *(_OWORD *)v1045;
                    v1048 = *(_OWORD *)(v1045 + 16);
                    *(_QWORD *)(v1044 + 32) = *(_QWORD *)(v1045 + 32);
                    *(_OWORD *)v1044 = v1047;
                    *(_OWORD *)(v1044 + 16) = v1048;
                  }
                  else
                  {
                    *(_QWORD *)(v1044 + 24) = v1046;
                    *(_QWORD *)(v1044 + 32) = *(_QWORD *)(v1045 + 32);
                    (**(void (***)(unint64_t, unint64_t))(v1046 - 8))(v1044, v1045);
                  }
                  v1049 = (_QWORD *)((v1044 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v1050 = (_QWORD *)((v1045 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v1049 = *v1050;
                  v1049[1] = v1050[1];
                  sub_21D7C4C20();
                  v1038 = v1362;
                  v1040 = v1440;
                  if (v1440)
                    v1038 = ((((((v1395 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                          + 16;
LABEL_1081:
                  v1051 = (char *)(((v1035 | v1449) + v1038) & v145);
                  v1052 = (char *)(((v1036 | v1449) + v1038) & v145);
                  if (v1364 < 0x7FFFFFFF)
                  {
                    v142 = v1461;
                    v93 = v664;
                    if (*(_QWORD *)(((unint64_t)&v1052[v1445] & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                    {
LABEL_1083:
                      memcpy(v1051, v1052, v1362);
                      v1053 = v1470;
                      if (!v1440)
                        goto LABEL_1095;
                      goto LABEL_1094;
                    }
                  }
                  else
                  {
                    v142 = v1461;
                    v93 = v664;
                    if (__swift_getEnumTagSinglePayload((uint64_t)v1052, v1040, v1398) >= 2)
                      goto LABEL_1083;
                  }
                  if (__swift_getEnumTagSinglePayload((uint64_t)v1052, 1, v1398))
                  {
                    memcpy(v1051, v1052, v1039);
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(v1379 + 16))(v1051, v1052, v1398);
                    __swift_storeEnumTagSinglePayload((uint64_t)v1051, 0, 1, v1398);
                  }
                  v1054 = (unint64_t)&v1051[v1445] & 0xFFFFFFFFFFFFFFF8;
                  v1055 = (unint64_t)&v1052[v1445] & 0xFFFFFFFFFFFFFFF8;
                  v1056 = *(_QWORD *)(v1055 + 24);
                  *(_QWORD *)(v1054 + 24) = v1056;
                  *(_QWORD *)(v1054 + 32) = *(_QWORD *)(v1055 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v1056 - 8))(v1054, v1055);
                  v1057 = (v1054 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1058 = (v1055 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1059 = *(_QWORD *)(v1058 + 24);
                  v1053 = v1470;
                  if (v1059 < 0xFFFFFFFF)
                  {
                    v1060 = *(_OWORD *)v1058;
                    v1061 = *(_OWORD *)(v1058 + 16);
                    *(_QWORD *)(v1057 + 32) = *(_QWORD *)(v1058 + 32);
                    *(_OWORD *)v1057 = v1060;
                    *(_OWORD *)(v1057 + 16) = v1061;
                  }
                  else
                  {
                    *(_QWORD *)(v1057 + 24) = v1059;
                    *(_QWORD *)(v1057 + 32) = *(_QWORD *)(v1058 + 32);
                    (**(void (***)(unint64_t, unint64_t))(v1059 - 8))(v1057, v1058);
                  }
                  v1062 = (_QWORD *)((v1057 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v1063 = (_QWORD *)((v1058 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v1062 = *v1063;
                  v1062[1] = v1063[1];
                  sub_21D7C4C20();
                  v142 = v1461;
                  v93 = v664;
                  if (!v1440)
                    goto LABEL_1095;
                  v1362 = ((((((v1395 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                        + 16;
LABEL_1094:
                  v140 = v1395;
LABEL_1095:
                  *(_QWORD *)&v1051[v1362] = *(_QWORD *)&v1052[v1362];
                  v1064 = v1354
                        + ((v1352
                          + ((v1352
                            + ((v1432
                              + ((v1361
                                + ((v1436
                                  + ((v1435
                                    + ((((((v1358
                                          + ((((((((v140 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                            + 15) & 0xFFFFFFFFFFFFFFF8)) & v1472)
                                        + v1474) & 0xFFFFFFFFFFFFFFF8)
                                      + 23) & 0xFFFFFFFFFFFFFFF8)) & v1390)) & v1467)) & v1388)) & v145)) & v145)) & v145);
                  if (v1355 > v1064)
                    v1064 = v1355;
                  if (v1064 <= v1353)
                    v1064 = v1353;
                  if (v1064 <= v1356)
                    v1064 = v1356;
                  if (v1064 <= v1351)
                    v1064 = v1351;
                  if (v1064 <= v1350)
                    v1064 = v1350;
                  if (v1064 <= v1347)
                    v1064 = v1347;
                  if (v1064 <= v1348)
                    v1064 = (((((v1470 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                          + 16;
                  if (v1064 <= v1349)
                    v1064 = v1349;
                  if (v1064 <= v1346)
                    v1064 = v1346;
                  if (v1064 <= v1345)
                    v1064 = v1345;
                  if (v1064 <= v1343)
                    v1064 = v1343;
                  if (v1064 <= v1400)
                    v1064 = v1400;
                  if (v1064 <= v1342)
                    v1064 = v1342;
                  if (v1064 <= v1434)
                    v1064 = v1434;
                  if (v1064 <= v1344)
                    v1064 = v1344;
                  if (v1064 <= v1355)
                    v1064 = v1355;
                  if (v1064 <= v1341)
                    v1064 = v1341;
                  if (v1064 <= v1406)
                    v1064 = ((v1470 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
                  if (v1064 <= v1427)
                    v1064 = v1427;
                  if (v1064 <= v1430)
                    v1064 = v1430;
                  if (v1064 <= v1428)
                    v1064 = v1428;
                  if (v1064 <= v1306)
                    v1064 = v1306;
                  if (v1064 <= v1304)
                    v1064 = v1304;
                  if (v1064 <= v1305)
                    v1064 = v1305;
                  if (v1064 <= v80)
                    v1064 = v80;
                  if (v1064 <= v1312)
                    v1064 = v1312;
                  if (v1064 <= v1307)
                    v1064 = v1307;
                  if (v1064 <= v1310)
                    v1064 = v1310;
                  if (v1064 <= v1311)
                    v1064 = v1311;
                  if (v1064 <= v1053)
                    v1064 = v1053;
                  if (v1064 <= v1308)
                    v1064 = v1308;
                  if (v1064 <= v1309)
                    v1064 = v1309;
                  if (v1064 <= v1283)
                    v1064 = v1283;
                  if (v1064 <= 8)
                    v1064 = 8;
                  *((_BYTE *)v141 + v1064) = 22;
                  goto LABEL_264;
                }
              }
              memcpy(v1011, v1012, v1442);
              goto LABEL_1057;
            }
          }
          v499 = v495;
          memcpy(v492, v493, v495);
          goto LABEL_418;
        case 0x17:
          *v141 = *v142;
          v175 = v141;
          v201 = ((unint64_t)v141 + v1421 + 8) & v1388;
          v177 = v142;
          v202 = ((unint64_t)v142 + v1421 + 8) & v1388;
          *(_BYTE *)v201 = *(_BYTE *)v202;
          *(_QWORD *)(v201 + 8) = *(_QWORD *)(v202 + 8);
          *(_QWORD *)(v201 + 16) = *(_QWORD *)(v202 + 0x10);
          *(_QWORD *)(v201 + 24) = *(_QWORD *)(v202 + 0x18);
          *(_QWORD *)(v201 + 32) = *(_QWORD *)(v202 + 0x20);
          *(_QWORD *)(v201 + 40) = *(_QWORD *)(v202 + 0x28);
          *(_QWORD *)(v201 + 48) = *(_QWORD *)(v202 + 0x30);
          *(_QWORD *)(v201 + 56) = *(_QWORD *)(v202 + 0x38);
          *(_QWORD *)(v201 + 64) = *(_QWORD *)(v202 + 0x40);
          *(_QWORD *)(v201 + 72) = *(_QWORD *)(v202 + 0x48);
          *(_QWORD *)(v201 + 80) = *(_QWORD *)(v202 + 0x50);
          *(_QWORD *)(v201 + 88) = *(_QWORD *)(v202 + 0x58);
          *(_QWORD *)(v201 + 96) = *(_QWORD *)(v202 + 0x60);
          v203 = *(_QWORD *)(v202 + 0x68);
          *(_BYTE *)(v201 + 112) = *(_BYTE *)(v202 + 0x70);
          *(_QWORD *)(v201 + 104) = v203;
          v204 = (void *)((v1374 + v201) & v1386);
          v205 = (const void *)((v1374 + v202) & v1386);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (__swift_getEnumTagSinglePayload((uint64_t)v205, 1, v1376))
          {
            memcpy(v204, v205, v1437);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1360 + 16))(v204, v205, v1376);
            __swift_storeEnumTagSinglePayload((uint64_t)v204, 0, 1, v1376);
          }
          v310 = 23;
LABEL_423:
          v141 = v175;
          *((_BYTE *)v175 + v1423) = v310;
          v247 = v1404;
          v142 = v177;
          goto LABEL_265;
        case 0x18:
          if (__swift_getEnumTagSinglePayload((uint64_t)v142, 1, v1398))
          {
            memcpy(v141, v142, v1481);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1379 + 16))(v141, v142, v1398);
            __swift_storeEnumTagSinglePayload((uint64_t)v141, 0, 1, v1398);
          }
          v518 = ((unint64_t)v141 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v519 = ((unint64_t)v142 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v520 = *(_QWORD *)(v519 + 24);
          *(_QWORD *)(v518 + 24) = v520;
          *(_QWORD *)(v518 + 32) = *(_QWORD *)(v519 + 32);
          (**(void (***)(unint64_t, unint64_t))(v520 - 8))(v518, v519);
          v521 = (_QWORD *)((v519 + 47) & 0xFFFFFFFFFFFFF8);
          v522 = (_QWORD *)((v518 + 47) & 0xFFFFFFFFFFFFF8);
          *v522 = *v521;
          v523 = (_QWORD *)(((unint64_t)v522 + 15) & 0xFFFFFFFFFFFFFFF8);
          v524 = (_QWORD *)(((unint64_t)v521 + 15) & 0xFFFFFFFFFFFFFFF8);
          *v523 = *v524;
          v523[1] = v524[1];
          v525 = 24;
          goto LABEL_774;
        case 0x19:
          *v141 = *v142;
          v182 = 25;
          goto LABEL_262;
        case 0x1A:
          *v141 = *v142;
          v182 = 26;
          goto LABEL_262;
        case 0x1B:
          *v141 = *v142;
          v182 = 27;
          goto LABEL_262;
        case 0x1C:
          *v141 = *v142;
          v182 = 28;
          goto LABEL_262;
        case 0x1D:
          v185 = v93;
          v206 = v142[3];
          v141[3] = v206;
          v141[4] = v142[4];
          (**(void (***)(_QWORD *, _QWORD *))(v206 - 8))(v141, v142);
          v207 = (char *)(((unint64_t)v141 + v1441) & v1317);
          v208 = (const void *)(((unint64_t)v142 + v1441) & v1317);
          if (__swift_getEnumTagSinglePayload((uint64_t)v208, 1, v1398))
          {
            v209 = v1481;
            memcpy(v207, v208, v1481);
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(v1379 + 16))(v207, v208, v1398);
            __swift_storeEnumTagSinglePayload((uint64_t)v207, 0, 1, v1398);
            v209 = v1481;
          }
          v526 = &v207[v209];
          *v526 = *((_BYTE *)v208 + v209);
          v526[1] = *((_BYTE *)v208 + v209 + 1);
          v527 = (unint64_t)&v207[v209 + 9] & 0xFFFFFFFFFFFFFFF8;
          v528 = ((unint64_t)v208 + v209 + 9) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v527 = *(_QWORD *)v528;
          *(_QWORD *)(v527 + 8) = *(_QWORD *)(v528 + 8);
          *(_BYTE *)(v527 + 16) = *(_BYTE *)(v528 + 16);
          v529 = 29;
          goto LABEL_467;
        case 0x1E:
          v185 = v93;
          v210 = v142[3];
          v141[3] = v210;
          v141[4] = v142[4];
          (**(void (***)(_QWORD *, _QWORD *))(v210 - 8))(v141, v142);
          *((_BYTE *)v141 + 40) = *((_BYTE *)v142 + 40);
          *((_BYTE *)v141 + 41) = *((_BYTE *)v142 + 41);
          *((_BYTE *)v141 + 42) = *((_BYTE *)v142 + 42);
          *((_BYTE *)v141 + 43) = *((_BYTE *)v142 + 43);
          v211 = (_QWORD *)(((unint64_t)v141 + 51) & 0xFFFFFFFFFFFFFFF8);
          v212 = v142;
          v213 = (_QWORD *)(((unint64_t)v142 + 51) & 0xFFFFFFFFFFFFFFF8);
          *v211 = *v213;
          v211[1] = v213[1];
          v214 = (_QWORD *)(((unint64_t)v211 + 23) & 0xFFFFFFFFFFFFFFF8);
          v215 = (_QWORD *)(((unint64_t)v213 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v214 = *v215;
          v214[1] = v215[1];
          v216 = (void *)(((unint64_t)v214 + v1425) & v1317);
          v217 = (const void *)(((unint64_t)v215 + v1425) & v1317);
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (__swift_getEnumTagSinglePayload((uint64_t)v217, 1, v1398))
          {
            memcpy(v216, v217, v1481);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1379 + 16))(v216, v217, v1398);
            __swift_storeEnumTagSinglePayload((uint64_t)v216, 0, 1, v1398);
          }
          *((_BYTE *)v141 + v1423) = 30;
          v247 = v1404;
          goto LABEL_451;
        case 0x1F:
          *v141 = *v142;
          v182 = 31;
          goto LABEL_262;
        case 0x20:
          v218 = v93;
          *v141 = *v142;
          v141[1] = v142[1];
          v219 = ((unint64_t)v141 + 23) & 0xFFFFFFFFFFFFFFF8;
          v220 = v142;
          v221 = ((unint64_t)v142 + 23) & 0xFFFFFFFFFFFFFFF8;
          v222 = *(_QWORD *)(v221 + 24);
          *(_QWORD *)(v219 + 24) = v222;
          *(_QWORD *)(v219 + 32) = *(_QWORD *)(v221 + 32);
          v223 = **(void (***)(unint64_t, unint64_t, uint64_t))(v222 - 8);
          sub_21D7C4C20();
          v223(v219, v221, v222);
          v224 = (void *)((v1441 + v219) & v1317);
          v225 = (const void *)((v1441 + v221) & v1317);
          if (__swift_getEnumTagSinglePayload((uint64_t)v225, 1, v1398))
          {
            memcpy(v224, v225, v1481);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1379 + 16))(v224, v225, v1398);
            __swift_storeEnumTagSinglePayload((uint64_t)v224, 0, 1, v1398);
          }
          *((_BYTE *)v141 + v1423) = 32;
          v247 = v1404;
          v142 = v220;
          goto LABEL_1243;
        case 0x21:
          if (v1444)
          {
            v226 = v93;
            v227 = v1375;
            v228 = v1396;
            v229 = v1316;
            v230 = v1443 + 7;
            if (v1369 >= v1375)
            {
              v231 = (uint64_t)v142;
              v227 = v1369;
              v232 = v1372;
            }
            else
            {
              v231 = ((unint64_t)v142 + v1373) & v1316;
              v232 = v1377;
            }
            v709 = __swift_getEnumTagSinglePayload(v231, v227, v232);
            v530 = v1398;
            v531 = v1481;
          }
          else
          {
            v226 = v93;
            v228 = v1396;
            v229 = v1316;
            v530 = v1398;
            v531 = v1481;
            v230 = v1443 + 7;
            if (!*((_BYTE *)v142 + v1396))
              goto LABEL_768;
            v532 = (*((unsigned __int8 *)v142 + v1396) - 1) << v1315;
            if (v1396 > 3)
              v532 = 0;
            if ((_DWORD)v1396)
            {
              if (v1396 <= 3)
                v533 = v1396;
              else
                v533 = 4;
              __asm { BR              X11 }
            }
            v709 = v532 + 1;
          }
          if (v709)
          {
            memcpy(v141, v142, v1443);
            goto LABEL_770;
          }
LABEL_768:
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1366 + 16))(v141, v142, v1372);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1367 + 16))(((unint64_t)v141 + v1373) & v229, ((unint64_t)v142 + v1373) & v229, v1377);
          if (!v1444)
            *((_BYTE *)v141 + v228) = 0;
LABEL_770:
          v860 = ((unint64_t)v141 + v230) & 0xFFFFFFFFFFFFFFF8;
          v861 = ((unint64_t)v142 + v230) & 0xFFFFFFFFFFFFFFF8;
          v862 = *(_QWORD *)(v861 + 24);
          *(_QWORD *)(v860 + 24) = v862;
          *(_QWORD *)(v860 + 32) = *(_QWORD *)(v861 + 32);
          (**(void (***)(unint64_t, unint64_t))(v862 - 8))(v860, v861);
          v863 = (void *)((v1441 + v860) & v1317);
          v864 = (const void *)((v1441 + v861) & v1317);
          if (__swift_getEnumTagSinglePayload((uint64_t)v864, 1, v530))
          {
            memcpy(v863, v864, v531);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1379 + 16))(v863, v864, v530);
            __swift_storeEnumTagSinglePayload((uint64_t)v863, 0, 1, v530);
          }
          v93 = v226;
          v865 = (_QWORD *)(((unint64_t)v863 + v1445) & 0xFFFFFFFFFFFFFFF8);
          v866 = (_QWORD *)(((unint64_t)v864 + v1445) & 0xFFFFFFFFFFFFFFF8);
          *v865 = *v866;
          v865[1] = v866[1];
          v867 = (_QWORD *)(((unint64_t)v865 + 23) & 0xFFFFFFFFFFFFFFF8);
          v868 = (_QWORD *)(((unint64_t)v866 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v867 = *v868;
          v867[1] = v868[1];
          v525 = 33;
LABEL_774:
          *((_BYTE *)v141 + v1423) = v525;
          sub_21D7C4C20();
          goto LABEL_263;
        case 0x22:
          if (__swift_getEnumTagSinglePayload((uint64_t)v142, 1, v1398))
          {
            memcpy(v141, v142, v1481);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1379 + 16))(v141, v142, v1398);
            __swift_storeEnumTagSinglePayload((uint64_t)v141, 0, 1, v1398);
          }
          v534 = ((unint64_t)v141 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v535 = ((unint64_t)v142 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v536 = *(_QWORD *)(v535 + 24);
          *(_QWORD *)(v534 + 24) = v536;
          *(_QWORD *)(v534 + 32) = *(_QWORD *)(v535 + 32);
          (**(void (***)(unint64_t, unint64_t))(v536 - 8))(v534, v535);
          v537 = (v1478 + v534) & v1388;
          v538 = (v1478 + v535) & v1388;
          *(_BYTE *)v537 = *(_BYTE *)v538;
          *(_QWORD *)(v537 + 8) = *(_QWORD *)(v538 + 8);
          *(_QWORD *)(v537 + 16) = *(_QWORD *)(v538 + 0x10);
          *(_QWORD *)(v537 + 24) = *(_QWORD *)(v538 + 0x18);
          *(_QWORD *)(v537 + 32) = *(_QWORD *)(v538 + 0x20);
          *(_QWORD *)(v537 + 40) = *(_QWORD *)(v538 + 0x28);
          *(_QWORD *)(v537 + 48) = *(_QWORD *)(v538 + 0x30);
          *(_QWORD *)(v537 + 56) = *(_QWORD *)(v538 + 0x38);
          *(_QWORD *)(v537 + 64) = *(_QWORD *)(v538 + 0x40);
          *(_QWORD *)(v537 + 72) = *(_QWORD *)(v538 + 0x48);
          *(_QWORD *)(v537 + 80) = *(_QWORD *)(v538 + 0x50);
          *(_QWORD *)(v537 + 88) = *(_QWORD *)(v538 + 0x58);
          *(_QWORD *)(v537 + 96) = *(_QWORD *)(v538 + 0x60);
          v539 = *(_QWORD *)(v538 + 0x68);
          *(_BYTE *)(v537 + 112) = *(_BYTE *)(v538 + 0x70);
          *(_QWORD *)(v537 + 104) = v539;
          v540 = (void *)((v1374 + v537) & v1386);
          v541 = (const void *)((v1374 + v538) & v1386);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (__swift_getEnumTagSinglePayload((uint64_t)v541, 1, v1376))
          {
            memcpy(v540, v541, v1437);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1360 + 16))(v540, v541, v1376);
            __swift_storeEnumTagSinglePayload((uint64_t)v540, 0, 1, v1376);
          }
          v667 = (_QWORD *)((v1339 + v537) & 0xFFFFFFFFFFFFFFF8);
          v668 = (_QWORD *)((v1339 + v538) & 0xFFFFFFFFFFFFFFF8);
          *v667 = *v668;
          v667[1] = v668[1];
          v669 = ((unint64_t)v667 + 23) & 0xFFFFFFFFFFFFFFF8;
          v670 = ((unint64_t)v668 + 23) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v669 = *(_QWORD *)v670;
          *(_QWORD *)(v669 + 8) = *(_QWORD *)(v670 + 8);
          *(_BYTE *)(v669 + 16) = *(_BYTE *)(v670 + 16);
          *(_BYTE *)(v669 + 17) = *(_BYTE *)(v670 + 17);
          v671 = (void *)((v1325 + v669) & v1390);
          v672 = (_BYTE *)((v1325 + v670) & v1390);
          sub_21D7C4C20();
          sub_21D7C4C20();
          v218 = v93;
          if (v1444)
          {
            v673 = v1375;
            v674 = v1396;
            v675 = v1316;
            if (v1369 >= v1375)
            {
              v676 = (uint64_t)v672;
              v673 = v1369;
              v677 = v1372;
            }
            else
            {
              v676 = (unint64_t)&v672[v1373] & v1316;
              v677 = v1377;
            }
            v716 = __swift_getEnumTagSinglePayload(v676, v673, v677);
          }
          else
          {
            v674 = v1396;
            v675 = v1316;
            if (!v672[v1396])
              goto LABEL_959;
            v704 = (v672[v1396] - 1) << v1315;
            if (v1396 > 3)
              v704 = 0;
            if ((_DWORD)v1396)
            {
              if (v1396 <= 3)
                v705 = v1396;
              else
                v705 = 4;
              __asm { BR              X11 }
            }
            v716 = v704 + 1;
          }
          if (v716)
          {
            memcpy(v671, v672, v1443);
            goto LABEL_961;
          }
LABEL_959:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1366 + 16))(v671, v672, v1372);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1367 + 16))(((unint64_t)v671 + v1373) & v675, (unint64_t)&v672[v1373] & v675, v1377);
          if (!v1444)
            *((_BYTE *)v671 + v674) = 0;
LABEL_961:
          v962 = 34;
LABEL_1205:
          *((_BYTE *)v141 + v1423) = v962;
          goto LABEL_1206;
        case 0x23:
          v1295 = v93;
          if (__swift_getEnumTagSinglePayload((uint64_t)v142, 1, v1398))
          {
            memcpy(v141, v142, v1481);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1379 + 16))(v141, v142, v1398);
            __swift_storeEnumTagSinglePayload((uint64_t)v141, 0, 1, v1398);
          }
          v542 = ((unint64_t)v141 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v543 = ((unint64_t)v142 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v544 = *(_QWORD *)(v543 + 24);
          *(_QWORD *)(v542 + 24) = v544;
          *(_QWORD *)(v542 + 32) = *(_QWORD *)(v543 + 32);
          (**(void (***)(unint64_t, unint64_t))(v544 - 8))(v542, v543);
          v545 = (v1478 + v542) & v1388;
          v546 = (v1478 + v543) & v1388;
          *(_BYTE *)v545 = *(_BYTE *)v546;
          *(_QWORD *)(v545 + 8) = *(_QWORD *)(v546 + 8);
          *(_QWORD *)(v545 + 16) = *(_QWORD *)(v546 + 0x10);
          *(_QWORD *)(v545 + 24) = *(_QWORD *)(v546 + 0x18);
          *(_QWORD *)(v545 + 32) = *(_QWORD *)(v546 + 0x20);
          *(_QWORD *)(v545 + 40) = *(_QWORD *)(v546 + 0x28);
          *(_QWORD *)(v545 + 48) = *(_QWORD *)(v546 + 0x30);
          *(_QWORD *)(v545 + 56) = *(_QWORD *)(v546 + 0x38);
          *(_QWORD *)(v545 + 64) = *(_QWORD *)(v546 + 0x40);
          *(_QWORD *)(v545 + 72) = *(_QWORD *)(v546 + 0x48);
          *(_QWORD *)(v545 + 80) = *(_QWORD *)(v546 + 0x50);
          *(_QWORD *)(v545 + 88) = *(_QWORD *)(v546 + 0x58);
          *(_QWORD *)(v545 + 96) = *(_QWORD *)(v546 + 0x60);
          v547 = *(_QWORD *)(v546 + 0x68);
          *(_BYTE *)(v545 + 112) = *(_BYTE *)(v546 + 0x70);
          *(_QWORD *)(v545 + 104) = v547;
          v548 = (void *)((v1374 + v545) & v1386);
          v549 = (const void *)((v1374 + v546) & v1386);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (__swift_getEnumTagSinglePayload((uint64_t)v549, 1, v1376))
          {
            memcpy(v548, v549, v1437);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1360 + 16))(v548, v549, v1376);
            __swift_storeEnumTagSinglePayload((uint64_t)v548, 0, 1, v1376);
          }
          v678 = (_QWORD *)((v1339 + v545) & 0xFFFFFFFFFFFFFFF8);
          v679 = (_QWORD *)((v1339 + v546) & 0xFFFFFFFFFFFFFFF8);
          *v678 = *v679;
          v678[1] = v679[1];
          v680 = ((unint64_t)v678 + 23) & 0xFFFFFFFFFFFFFFF8;
          v681 = ((unint64_t)v679 + 23) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v680 = *(_QWORD *)v681;
          *(_QWORD *)(v680 + 8) = *(_QWORD *)(v681 + 8);
          *(_BYTE *)(v680 + 16) = *(_BYTE *)(v681 + 16);
          *(_BYTE *)(v680 + 17) = *(_BYTE *)(v681 + 17);
          v682 = (_QWORD *)((v680 + 25) & 0xFFFFFFFFFFFFFFF8);
          v683 = (_QWORD *)((v681 + 25) & 0xFFFFFFFFFFFFFFF8);
          *v682 = *v683;
          v682[1] = v683[1];
          v684 = (_QWORD *)(((unint64_t)v682 + 23) & 0xFFFFFFFFFFFFFFF8);
          v685 = (_QWORD *)(((unint64_t)v683 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v684 = *v685;
          v684[1] = v685[1];
          v686 = (_QWORD *)(((unint64_t)v684 + 23) & 0xFFFFFFFFFFFFFFF8);
          v687 = (_QWORD *)(((unint64_t)v685 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v686 = *v687;
          v686[1] = v687[1];
          v688 = (_QWORD *)(((unint64_t)v686 + 23) & 0xFFFFFFFFFFFFFFF8);
          v689 = (_QWORD *)(((unint64_t)v687 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v688 = *v689;
          v688[1] = v689[1];
          v690 = (_QWORD *)(((unint64_t)v688 + 23) & 0xFFFFFFFFFFFFFFF8);
          v691 = (_QWORD *)(((unint64_t)v689 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v690 = *v691;
          v692 = (void *)(((unint64_t)v690 + v1402) & v1390);
          v693 = (_BYTE *)(((unint64_t)v691 + v1402) & v1390);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v1444)
          {
            v694 = v1375;
            v695 = v1396;
            v696 = v1316;
            if (v1369 >= v1375)
            {
              v697 = (uint64_t)v693;
              v694 = v1369;
              v698 = v1372;
            }
            else
            {
              v697 = (unint64_t)&v693[v1373] & v1316;
              v698 = v1377;
            }
            v717 = __swift_getEnumTagSinglePayload(v697, v694, v698);
            v218 = v1295;
            v706 = v1443 + 7;
          }
          else
          {
            v695 = v1396;
            v218 = v1295;
            v696 = v1316;
            v706 = v1443 + 7;
            if (!v693[v1396])
              goto LABEL_964;
            v707 = (v693[v1396] - 1) << v1315;
            if (v1396 > 3)
              v707 = 0;
            if ((_DWORD)v1396)
            {
              if (v1396 <= 3)
                v708 = v1396;
              else
                v708 = 4;
              __asm { BR              X11 }
            }
            v717 = v707 + 1;
          }
          if (v717)
          {
            memcpy(v692, v693, v1443);
            goto LABEL_966;
          }
LABEL_964:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1366 + 16))(v692, v693, v1372);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1367 + 16))(((unint64_t)v692 + v1373) & v696, (unint64_t)&v693[v1373] & v696, v1377);
          if (!v1444)
            *((_BYTE *)v692 + v695) = 0;
LABEL_966:
          v963 = (_QWORD *)(((unint64_t)v692 + v706) & 0xFFFFFFFFFFFFFFF8);
          v964 = (_QWORD *)((unint64_t)&v693[v706] & 0xFFFFFFFFFFFFFFF8);
          *v963 = *v964;
          v963[1] = v964[1];
          *((_BYTE *)v141 + v1423) = 35;
          sub_21D7C4C20();
LABEL_1206:
          v247 = v1404;
          goto LABEL_1243;
        case 0x24:
          v185 = v93;
          if (__swift_getEnumTagSinglePayload((uint64_t)v142, 1, v1398))
          {
            memcpy(v141, v142, v1481);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1379 + 16))(v141, v142, v1398);
            __swift_storeEnumTagSinglePayload((uint64_t)v141, 0, 1, v1398);
          }
          v550 = ((unint64_t)v141 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v212 = v142;
          v551 = ((unint64_t)v142 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v552 = *(_QWORD *)(v551 + 24);
          *(_QWORD *)(v550 + 24) = v552;
          *(_QWORD *)(v550 + 32) = *(_QWORD *)(v551 + 32);
          (**(void (***)(unint64_t, unint64_t))(v552 - 8))(v550, v551);
          v553 = (_QWORD *)((v550 + 47) & 0xFFFFFFFFFFFFFFF8);
          v554 = (_QWORD *)((v551 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v553 = *v554;
          v553[1] = v554[1];
          v555 = ((unint64_t)v553 + 23) & 0xFFFFFFFFFFFFFFF8;
          v556 = ((unint64_t)v554 + 23) & 0xFFFFFFFFFFFFFFF8;
          v557 = *(_QWORD *)(v556 + 24);
          sub_21D7C4C20();
          if (v557 < 0xFFFFFFFF)
          {
            v558 = *(_OWORD *)v556;
            v559 = *(_OWORD *)(v556 + 16);
            *(_QWORD *)(v555 + 32) = *(_QWORD *)(v556 + 32);
            *(_OWORD *)v555 = v558;
            *(_OWORD *)(v555 + 16) = v559;
          }
          else
          {
            *(_QWORD *)(v555 + 24) = v557;
            *(_QWORD *)(v555 + 32) = *(_QWORD *)(v556 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v557 - 8))(v555, v556, v557);
          }
          v247 = v1404;
          *((_BYTE *)v141 + v1423) = 36;
LABEL_451:
          v142 = v212;
          goto LABEL_472;
        case 0x25:
          if (__swift_getEnumTagSinglePayload((uint64_t)v142, 1, v1398))
          {
            memcpy(v141, v142, v1481);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1379 + 16))(v141, v142, v1398);
            __swift_storeEnumTagSinglePayload((uint64_t)v141, 0, 1, v1398);
          }
          v560 = ((unint64_t)v141 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v561 = ((unint64_t)v142 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v562 = *(_QWORD *)(v561 + 24);
          *(_QWORD *)(v560 + 24) = v562;
          *(_QWORD *)(v560 + 32) = *(_QWORD *)(v561 + 32);
          (**(void (***)(unint64_t, unint64_t))(v562 - 8))(v560, v561);
          v563 = (_QWORD *)((v560 + 47) & 0xFFFFFFFFFFFFF8);
          v564 = (_QWORD *)((v561 + 47) & 0xFFFFFFFFFFFFF8);
          *v563 = *v564;
          *(_QWORD *)(((unint64_t)v563 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v564 + 15) & 0xFFFFFFFFFFFFF8);
          v482 = 37;
          goto LABEL_464;
        case 0x26:
          if (__swift_getEnumTagSinglePayload((uint64_t)v142, 1, v1398))
          {
            memcpy(v141, v142, v1481);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1379 + 16))(v141, v142, v1398);
            __swift_storeEnumTagSinglePayload((uint64_t)v141, 0, 1, v1398);
          }
          v565 = ((unint64_t)v141 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v566 = v142;
          v567 = ((unint64_t)v142 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v568 = *(_QWORD *)(v567 + 24);
          *(_QWORD *)(v565 + 24) = v568;
          *(_QWORD *)(v565 + 32) = *(_QWORD *)(v567 + 32);
          (**(void (***)(unint64_t, unint64_t))(v568 - 8))(v565, v567);
          v569 = (_QWORD *)((v565 + 47) & 0xFFFFFFFFFFFFFFF8);
          v570 = (_QWORD *)((v567 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v569 = *v570;
          v569[1] = v570[1];
          v571 = (_QWORD *)(((unint64_t)v569 + 23) & 0xFFFFFFFFFFFFFFF8);
          v572 = (_QWORD *)(((unint64_t)v570 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v571 = *v572;
          v571[1] = v572[1];
          v573 = ((unint64_t)v571 + 23) & 0xFFFFFFFFFFFFFFF8;
          v574 = ((unint64_t)v572 + 23) & 0xFFFFFFFFFFFFFFF8;
          v575 = *(_QWORD *)(v574 + 24);
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v575 < 0xFFFFFFFF)
          {
            v576 = *(_OWORD *)v574;
            v577 = *(_OWORD *)(v574 + 16);
            *(_QWORD *)(v573 + 32) = *(_QWORD *)(v574 + 32);
            *(_OWORD *)v573 = v576;
            *(_OWORD *)(v573 + 16) = v577;
          }
          else
          {
            *(_QWORD *)(v573 + 24) = v575;
            *(_QWORD *)(v573 + 32) = *(_QWORD *)(v574 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v575 - 8))(v573, v574, v575);
          }
          v578 = (v573 + 47) & 0xFFFFFFFFFFFFFFF8;
          v579 = (v574 + 47) & 0xFFFFFFFFFFFFFFF8;
          v580 = *(_QWORD *)(v579 + 24);
          v142 = v566;
          if (v580 < 0xFFFFFFFF)
          {
            v581 = *(_OWORD *)v579;
            v582 = *(_OWORD *)(v579 + 16);
            *(_QWORD *)(v578 + 32) = *(_QWORD *)(v579 + 32);
            *(_OWORD *)v578 = v581;
            *(_OWORD *)(v578 + 16) = v582;
          }
          else
          {
            *(_QWORD *)(v578 + 24) = v580;
            *(_QWORD *)(v578 + 32) = *(_QWORD *)(v579 + 32);
            (**(void (***)(void))(v580 - 8))();
          }
          v247 = v1404;
          v428 = v1423;
          v429 = 38;
          goto LABEL_1377;
        case 0x27:
          if (__swift_getEnumTagSinglePayload((uint64_t)v142, 1, v1398))
          {
            memcpy(v141, v142, v1481);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1379 + 16))(v141, v142, v1398);
            __swift_storeEnumTagSinglePayload((uint64_t)v141, 0, 1, v1398);
          }
          v583 = ((unint64_t)v141 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v584 = ((unint64_t)v142 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v585 = *(_QWORD *)(v584 + 24);
          *(_QWORD *)(v583 + 24) = v585;
          *(_QWORD *)(v583 + 32) = *(_QWORD *)(v584 + 32);
          (**(void (***)(unint64_t, unint64_t))(v585 - 8))(v583, v584);
          *(_QWORD *)((v583 + 47) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v584 + 47) & 0xFFFFFFFFFFFFF8);
          v482 = 39;
LABEL_464:
          *((_BYTE *)v141 + v1423) = v482;
          goto LABEL_263;
        case 0x28:
          v185 = v93;
          v233 = v142[3];
          v141[3] = v233;
          v141[4] = v142[4];
          (**(void (***)(_QWORD *, _QWORD *))(v233 - 8))(v141, v142);
          v234 = (void *)(((unint64_t)v141 + v1441) & v1317);
          v235 = (const void *)(((unint64_t)v142 + v1441) & v1317);
          if (__swift_getEnumTagSinglePayload((uint64_t)v235, 1, v1398))
          {
            memcpy(v234, v235, v1481);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1379 + 16))(v234, v235, v1398);
            __swift_storeEnumTagSinglePayload((uint64_t)v234, 0, 1, v1398);
          }
          *(_QWORD *)(((unint64_t)v234 + v1445) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v235
                                                                                          + v1445) & 0xFFFFFFFFFFFFF8);
          v529 = 40;
LABEL_467:
          *((_BYTE *)v141 + v1423) = v529;
          goto LABEL_470;
        case 0x29:
          v185 = v93;
          v236 = v142[3];
          v141[3] = v236;
          v141[4] = v142[4];
          (**(void (***)(_QWORD *, _QWORD *))(v236 - 8))(v141, v142);
          v237 = (void *)(((unint64_t)v141 + v1441) & v1317);
          v238 = (const void *)(((unint64_t)v142 + v1441) & v1317);
          if (__swift_getEnumTagSinglePayload((uint64_t)v238, 1, v1398))
          {
            memcpy(v237, v238, v1481);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1379 + 16))(v237, v238, v1398);
            __swift_storeEnumTagSinglePayload((uint64_t)v237, 0, 1, v1398);
          }
          v586 = (_QWORD *)(((unint64_t)v237 + v1445) & 0xFFFFFFFFFFFFF8);
          v587 = (_QWORD *)(((unint64_t)v238 + v1445) & 0xFFFFFFFFFFFFFFF8);
          *v586 = *v587;
          *(_QWORD *)(((unint64_t)v586 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v587 + 15) & 0xFFFFFFFFFFFFF8);
          *((_BYTE *)v141 + v1423) = 41;
          sub_21D7C4C20();
LABEL_470:
          sub_21D7C4C20();
          goto LABEL_471;
        case 0x2A:
          *v141 = *v142;
          v182 = 42;
          goto LABEL_262;
        case 0x2B:
          v185 = v93;
          v239 = v142[3];
          v141[3] = v239;
          v141[4] = v142[4];
          (**(void (***)(_QWORD *, _QWORD *))(v239 - 8))(v141, v142);
          v240 = (void *)(((unint64_t)v141 + v1441) & v1317);
          v241 = (const void *)(((unint64_t)v142 + v1441) & v1317);
          if (__swift_getEnumTagSinglePayload((uint64_t)v241, 1, v1398))
          {
            memcpy(v240, v241, v1481);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1379 + 16))(v240, v241, v1398);
            __swift_storeEnumTagSinglePayload((uint64_t)v240, 0, 1, v1398);
          }
          *((_BYTE *)v141 + v1423) = 43;
LABEL_471:
          v247 = v1404;
LABEL_472:
          v93 = v185;
          goto LABEL_265;
        case 0x2C:
          *v141 = *v142;
          v182 = 44;
          goto LABEL_262;
        case 0x2D:
          v242 = ~v139;
          if (__swift_getEnumTagSinglePayload((uint64_t)v142, 1, v1398))
          {
            memcpy(v141, v142, v1481);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1379 + 16))(v141, v142, v1398);
            __swift_storeEnumTagSinglePayload((uint64_t)v141, 0, 1, v1398);
          }
          v588 = ((unint64_t)v141 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v589 = ((unint64_t)v142 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v590 = *(_QWORD *)(v589 + 24);
          *(_QWORD *)(v588 + 24) = v590;
          *(_QWORD *)(v588 + 32) = *(_QWORD *)(v589 + 32);
          (**(void (***)(unint64_t, unint64_t))(v590 - 8))(v588, v589);
          v591 = (v588 + 47) & 0xFFFFFFFFFFFFFFF8;
          v592 = (v589 + 47) & 0xFFFFFFFFFFFFFFF8;
          v593 = *(_QWORD *)(v592 + 24);
          v1462 = v142;
          if (v593 < 0xFFFFFFFF)
          {
            v594 = *(_OWORD *)v592;
            v595 = *(_OWORD *)(v592 + 16);
            *(_QWORD *)(v591 + 32) = *(_QWORD *)(v592 + 32);
            *(_OWORD *)v591 = v594;
            *(_OWORD *)(v591 + 16) = v595;
          }
          else
          {
            *(_QWORD *)(v591 + 24) = v593;
            *(_QWORD *)(v591 + 32) = *(_QWORD *)(v592 + 32);
            (**(void (***)(unint64_t, unint64_t))(v593 - 8))(v591, v592);
          }
          v596 = (_QWORD *)((v591 + 47) & 0xFFFFFFFFFFFFFFF8);
          v597 = (_QWORD *)((v592 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v596 = *v597;
          v596[1] = v597[1];
          v598 = (_QWORD *)(((unint64_t)v596 + 23) & 0xFFFFFFFFFFFFFFF8);
          v599 = (_QWORD *)(((unint64_t)v597 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v598 = *v599;
          v598[1] = v599[1];
          v600 = (_QWORD *)(((unint64_t)v598 + 23) & 0xFFFFFFFFFFFFFFF8);
          v601 = (_QWORD *)(((unint64_t)v599 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v600 = *v601;
          v600[1] = v601[1];
          v602 = (_QWORD *)(((unint64_t)v600 + 23) & 0xFFFFFFFFFFFFFFF8);
          v603 = (_QWORD *)(((unint64_t)v601 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v602 = *v603;
          v602[1] = v603[1];
          v604 = ((unint64_t)v602 + 23) & 0xFFFFFFFFFFFFFFF8;
          v605 = ((unint64_t)v603 + 23) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v604 = *(_QWORD *)v605;
          *(_QWORD *)(v604 + 8) = *(_QWORD *)(v605 + 8);
          *(_BYTE *)(v604 + 16) = *(_BYTE *)(v605 + 16);
          v606 = (_QWORD *)(((unint64_t)v602 + 47) & 0xFFFFFFFFFFFFFFF8);
          v607 = (_QWORD *)(((unint64_t)v603 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v606 = *v607;
          v608 = (void *)(((unint64_t)v606 + v1402) & v1390);
          v609 = (_BYTE *)(((unint64_t)v607 + v1402) & v1390);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v1444)
          {
            v610 = v1375;
            if (v1369 >= v1375)
            {
              v611 = (uint64_t)v609;
              v610 = v1369;
              v612 = v1372;
            }
            else
            {
              v611 = (unint64_t)&v609[v1373] & v1316;
              v612 = v1377;
            }
            v714 = __swift_getEnumTagSinglePayload(v611, v610, v612);
            v699 = v1396;
          }
          else
          {
            v699 = v1396;
            if (!v609[v1396])
              goto LABEL_1166;
            v700 = (v609[v1396] - 1) << v1315;
            if (v1396 > 3)
              v700 = 0;
            if ((_DWORD)v1396)
            {
              if (v1396 <= 3)
                v701 = v1396;
              else
                v701 = 4;
              __asm { BR              X11 }
            }
            v714 = v700 + 1;
          }
          if (v714)
          {
            memcpy(v608, v609, v1443);
            v1065 = v1316;
            goto LABEL_1168;
          }
LABEL_1166:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1366 + 16))(v608, v609, v1372);
          v1065 = v1316;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1367 + 16))(((unint64_t)v608 + v1373) & v1316, (unint64_t)&v609[v1373] & v1316, v1377);
          if (!v1444)
            *((_BYTE *)v608 + v699) = 0;
LABEL_1168:
          v1066 = (void *)(((unint64_t)v608 + v1338) & v1390);
          v1067 = (_BYTE *)((unint64_t)&v609[v1338] & v1390);
          if (v1444)
          {
            v1068 = v1375;
            if (v1369 >= v1375)
            {
              v1069 = (uint64_t)v1067;
              v1068 = v1369;
              v1070 = v1372;
            }
            else
            {
              v1069 = (unint64_t)&v1067[v1373] & v1065;
              v1070 = v1377;
            }
            v1073 = __swift_getEnumTagSinglePayload(v1069, v1068, v1070);
          }
          else
          {
            if (!v1067[v699])
              goto LABEL_1209;
            v1071 = (v1067[v699] - 1) << v1315;
            if (v699 > 3)
              v1071 = 0;
            if ((_DWORD)v699)
            {
              if (v699 <= 3)
                v1072 = v699;
              else
                v1072 = 4;
              __asm { BR              X11 }
            }
            v1073 = v1071 + 1;
          }
          if (v1073)
          {
            memcpy(v1066, v1067, v1443);
            goto LABEL_1211;
          }
LABEL_1209:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1366 + 16))(v1066, v1067, v1372);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1367 + 16))(((unint64_t)v1066 + v1373) & v1065, (unint64_t)&v1067[v1373] & v1065, v1377);
          if (!v1444)
            *((_BYTE *)v1066 + v699) = 0;
LABEL_1211:
          v1086 = (_QWORD *)(((unint64_t)v1066 + v1436) & v242);
          v1087 = (uint64_t *)((unint64_t)&v1067[v1436] & v242);
          v1088 = v1439;
          if ((v1375 & 0x80000000) != 0)
          {
            v1090 = __swift_getEnumTagSinglePayload(((unint64_t)v1087 + v1359) & v1065, v1375, v1377);
            v1088 = v1439;
          }
          else
          {
            v1089 = *v1087;
            if ((unint64_t)*v1087 >= 0xFFFFFFFF)
              LODWORD(v1089) = -1;
            v1090 = v1089 + 1;
          }
          v218 = v93;
          if (v1090)
          {
            memcpy(v1086, v1087, v1088);
          }
          else
          {
            *v1086 = *v1087;
            v1091 = v141;
            v1092 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1367 + 16);
            sub_21D7C4C20();
            v1092(((unint64_t)v1086 + v1359) & v1065, ((unint64_t)v1087 + v1359) & v1065, v1377);
            v141 = v1091;
          }
          v1093 = (_QWORD *)(((unint64_t)v1086 + v1331) & v242);
          v1094 = (uint64_t *)(((unint64_t)v1087 + v1331) & v242);
          if ((v1375 & 0x80000000) != 0)
          {
            v1096 = __swift_getEnumTagSinglePayload(((unint64_t)v1094 + v1359) & v1065, v1375, v1377);
          }
          else
          {
            v1095 = *v1094;
            if ((unint64_t)*v1094 >= 0xFFFFFFFF)
              LODWORD(v1095) = -1;
            v1096 = v1095 + 1;
          }
          if (v1096)
          {
            v1097 = v1439;
            memcpy(v1093, v1094, v1439);
          }
          else
          {
            *v1093 = *v1094;
            v1098 = ((unint64_t)v1093 + v1359) & v1065;
            v1099 = ((unint64_t)v1094 + v1359) & v1065;
            v1100 = v141;
            v1101 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1367 + 16);
            v1097 = v1439;
            sub_21D7C4C20();
            v1101(v1098, v1099, v1377);
            v141 = v1100;
          }
          v1102 = (char *)v1093 + v1097;
          *v1102 = *((_BYTE *)v1094 + v1097);
          v1102[1] = *((_BYTE *)v1094 + v1097 + 1);
          v1103 = (_QWORD *)(((unint64_t)v1093 + v1097 + 9) & 0xFFFFFFFFFFFFFFF8);
          v1104 = (_QWORD *)(((unint64_t)v1094 + v1097 + 9) & 0xFFFFFFFFFFFFFFF8);
          *v1103 = *v1104;
          v1103[1] = v1104[1];
          v1105 = ((unint64_t)v1103 + 23) & 0xFFFFFFFFFFFFFFF8;
          v1106 = ((unint64_t)v1104 + 23) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v1105 = *(_QWORD *)v1106;
          *(_QWORD *)(v1105 + 8) = *(_QWORD *)(v1106 + 8);
          *(_BYTE *)(v1105 + 16) = *(_BYTE *)(v1106 + 16);
          v1107 = ((unint64_t)v1103 + 47) & 0xFFFFFFFFFFFFFFF8;
          v1108 = ((unint64_t)v1104 + 47) & 0xFFFFFFFFFFFFFFF8;
          v1109 = *(_QWORD *)(v1108 + 24);
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v1109 < 0xFFFFFFFF)
          {
            v1110 = *(_OWORD *)v1108;
            v1111 = *(_OWORD *)(v1108 + 16);
            *(_QWORD *)(v1107 + 32) = *(_QWORD *)(v1108 + 32);
            *(_OWORD *)v1107 = v1110;
            *(_OWORD *)(v1107 + 16) = v1111;
          }
          else
          {
            *(_QWORD *)(v1107 + 24) = v1109;
            *(_QWORD *)(v1107 + 32) = *(_QWORD *)(v1108 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v1109 - 8))(v1107, v1108, v1109);
          }
          v1112 = v1442;
          v1113 = (v1478 + v1107) & v1388;
          v1114 = (v1478 + v1108) & v1388;
          if (v1371 >= 0x7FFFFFFF)
          {
            v1119 = (const void *)((v1374 + v1114) & v1386);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1119, v1363, v1376) <= 1)
            {
              v1417 = v141;
              v1301 = v218;
              v1116 = (char *)(v1114 + 8);
              v1117 = v1374;
              v1118 = ~v1447;
LABEL_1237:
              *(_BYTE *)v1113 = *(_BYTE *)v1114;
              *(_QWORD *)(v1113 + 8) = *(_QWORD *)(v1114 + 8);
              *(_QWORD *)(v1113 + 16) = *((_QWORD *)v1116 + 1);
              *(_QWORD *)(v1113 + 24) = *((_QWORD *)v1116 + 2);
              *(_QWORD *)(v1113 + 32) = *((_QWORD *)v1116 + 3);
              *(_QWORD *)(v1113 + 40) = *((_QWORD *)v1116 + 4);
              *(_QWORD *)(v1113 + 48) = *((_QWORD *)v1116 + 5);
              *(_QWORD *)(v1113 + 56) = *((_QWORD *)v1116 + 6);
              *(_QWORD *)(v1113 + 64) = *((_QWORD *)v1116 + 7);
              *(_QWORD *)(v1113 + 72) = *((_QWORD *)v1116 + 8);
              *(_QWORD *)(v1113 + 80) = *((_QWORD *)v1116 + 9);
              *(_QWORD *)(v1113 + 88) = *((_QWORD *)v1116 + 10);
              *(_QWORD *)(v1113 + 96) = *((_QWORD *)v1116 + 11);
              v1120 = *((_QWORD *)v1116 + 12);
              *(_BYTE *)(v1113 + 112) = v1116[104];
              *(_QWORD *)(v1113 + 104) = v1120;
              v1121 = (void *)((v1117 + v1113) & v1118);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1119, 1, v1376))
              {
                memcpy(v1121, v1119, v1437);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1360 + 16))(v1121, v1119, v1376);
                __swift_storeEnumTagSinglePayload((uint64_t)v1121, 0, 1, v1376);
              }
              v218 = v1301;
              v141 = v1417;
              v1112 = v1442;
LABEL_1242:
              v1122 = (_QWORD *)(((v1113 | 7) + v1112) & 0xFFFFFFFFFFFFFFF8);
              v1123 = (_QWORD *)(((v1114 | 7) + v1112) & 0xFFFFFFFFFFFFFFF8);
              *v1122 = *v1123;
              v1122[1] = v1123[1];
              *((_BYTE *)v141 + v1423) = 45;
              sub_21D7C4C20();
              v247 = v1404;
              v142 = v1462;
LABEL_1243:
              v93 = v218;
              goto LABEL_265;
            }
          }
          else
          {
            v1115 = *(_QWORD *)(v1114 + 16);
            if (v1115 >= 0xFFFFFFFF)
              LODWORD(v1115) = -1;
            if ((int)v1115 - 1 < 0)
            {
              v1417 = v141;
              v1301 = v218;
              v1116 = (char *)(v1114 + 8);
              v1117 = v1374;
              v1118 = ~v1447;
              v1119 = (const void *)((v1374 + v1114) & v1386);
              goto LABEL_1237;
            }
          }
          memcpy((void *)v1113, (const void *)v1114, v1442);
          goto LABEL_1242;
        case 0x2E:
          *v141 = *v142;
          v182 = 46;
          goto LABEL_262;
        case 0x2F:
          *v141 = *v142;
          v182 = 47;
          goto LABEL_262;
        case 0x30:
          *v141 = *v142;
          v182 = 48;
          goto LABEL_262;
        case 0x31:
          *v141 = *v142;
          v182 = 49;
          goto LABEL_262;
        case 0x32:
          v243 = v142[3];
          v141[3] = v243;
          v141[4] = v142[4];
          (**(void (***)(_QWORD *, _QWORD *))(v243 - 8))(v141, v142);
          v244 = (void *)(((unint64_t)v141 + v1441) & v1317);
          v245 = (const void *)(((unint64_t)v142 + v1441) & v1317);
          v1453 = v142;
          if (__swift_getEnumTagSinglePayload((uint64_t)v245, 1, v1398))
          {
            v246 = v1481;
            memcpy(v244, v245, v1481);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1379 + 16))(v244, v245, v1398);
            __swift_storeEnumTagSinglePayload((uint64_t)v244, 0, 1, v1398);
            v246 = v1481;
          }
          v613 = (_QWORD *)(((unint64_t)v244 + v1445) & 0xFFFFFFFFFFFFFFF8);
          v614 = (_QWORD *)(((unint64_t)v245 + v1445) & 0xFFFFFFFFFFFFFFF8);
          *v613 = *v614;
          v613[1] = v614[1];
          v615 = ((unint64_t)v613 + 23) & 0xFFFFFFFFFFFFFFF8;
          v616 = ((unint64_t)v614 + 23) & 0xFFFFFFFFFFFFFFF8;
          v617 = *(_QWORD *)(v616 + 24);
          sub_21D7C4C20();
          if (v617 < 0xFFFFFFFF)
          {
            v618 = *(_OWORD *)v616;
            v619 = *(_OWORD *)(v616 + 16);
            *(_QWORD *)(v615 + 32) = *(_QWORD *)(v616 + 32);
            *(_OWORD *)v615 = v618;
            *(_OWORD *)(v615 + 16) = v619;
          }
          else
          {
            *(_QWORD *)(v615 + 24) = v617;
            *(_QWORD *)(v615 + 32) = *(_QWORD *)(v616 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v617 - 8))(v615, v616, v617);
          }
          v620 = (_QWORD *)((v615 + 47) & 0xFFFFFFFFFFFFF8);
          v621 = (_QWORD *)((v616 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v620 = *v621;
          v622 = (_QWORD *)(((unint64_t)v620 + 15) & 0xFFFFFFFFFFFFFFF8);
          v623 = (_QWORD *)(((unint64_t)v621 + 15) & 0xFFFFFFFFFFFFFFF8);
          *v622 = *v623;
          v622[1] = v623[1];
          v624 = (char *)(((unint64_t)v622 + v1425) & v145);
          v625 = (char *)(((unint64_t)v623 + v1425) & v145);
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v1364 < 0x7FFFFFFF)
          {
            v626 = v1398;
            if (*(_QWORD *)(((unint64_t)&v625[v1445] & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
              goto LABEL_488;
          }
          else
          {
            v626 = v1398;
            if (__swift_getEnumTagSinglePayload((uint64_t)v625, v1440, v1398) >= 2)
            {
LABEL_488:
              v627 = v1434;
              memcpy(v624, v625, v1434);
              v628 = v1323;
              goto LABEL_617;
            }
          }
          v629 = v93;
          if (__swift_getEnumTagSinglePayload((uint64_t)v625, 1, v626))
          {
            memcpy(v624, v625, v246);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v1379 + 16))(v624, v625, v626);
            __swift_storeEnumTagSinglePayload((uint64_t)v624, 0, 1, v626);
          }
          v735 = (unint64_t)&v624[v1445] & 0xFFFFFFFFFFFFFFF8;
          v736 = (unint64_t)&v625[v1445] & 0xFFFFFFFFFFFFFFF8;
          v737 = *(_QWORD *)(v736 + 24);
          *(_QWORD *)(v735 + 24) = v737;
          *(_QWORD *)(v735 + 32) = *(_QWORD *)(v736 + 32);
          (**(void (***)(unint64_t, unint64_t))(v737 - 8))(v735, v736);
          v738 = (v735 + 47) & 0xFFFFFFFFFFFFFFF8;
          v739 = (v736 + 47) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v738 = *(_QWORD *)v739;
          *(_QWORD *)(v738 + 8) = *(_QWORD *)(v739 + 8);
          *(_BYTE *)(v738 + 16) = *(_BYTE *)(v739 + 16);
          sub_21D7C4C20();
          v627 = v1434;
          v93 = v629;
          v628 = v1323;
          if (v1440)
            v627 = ((((v1395 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 17;
LABEL_617:
          v740 = &v624[v627];
          v741 = &v625[v627];
          *(_QWORD *)(v740 + 7) = *(_QWORD *)&v625[v627 + 7];
          *(_QWORD *)(v740 + 15) = *(_QWORD *)&v625[v627 + 15];
          v742 = (_QWORD *)((unint64_t)&v624[v627 + v628] & v1388);
          v743 = (_QWORD *)((unint64_t)&v741[v628] & v1388);
          sub_21D7C4C20();
          if (v1371 >= 0x7FFFFFFF)
          {
            v750 = (const void *)(((unint64_t)v743 + v1374) & v1386);
            if (__swift_getEnumTagSinglePayload((uint64_t)v750, v1363, v1376) <= 1)
            {
              v745 = v141;
              v746 = v93;
              v747 = (char *)(v743 + 1);
              v748 = v1374;
              v749 = ~v1447;
              goto LABEL_624;
            }
          }
          else
          {
            v744 = v743[2];
            if (v744 >= 0xFFFFFFFF)
              LODWORD(v744) = -1;
            if ((int)v744 - 1 < 0)
            {
              v745 = v141;
              v746 = v93;
              v747 = (char *)(v743 + 1);
              v748 = v1374;
              v749 = ~v1447;
              v750 = (const void *)(((unint64_t)v743 + v1374) & v1386);
LABEL_624:
              *(_BYTE *)v742 = *(_BYTE *)v743;
              v742[1] = v743[1];
              v742[2] = *((_QWORD *)v747 + 1);
              v742[3] = *((_QWORD *)v747 + 2);
              v742[4] = *((_QWORD *)v747 + 3);
              v742[5] = *((_QWORD *)v747 + 4);
              v742[6] = *((_QWORD *)v747 + 5);
              v742[7] = *((_QWORD *)v747 + 6);
              v742[8] = *((_QWORD *)v747 + 7);
              v742[9] = *((_QWORD *)v747 + 8);
              v742[10] = *((_QWORD *)v747 + 9);
              v742[11] = *((_QWORD *)v747 + 10);
              v742[12] = *((_QWORD *)v747 + 11);
              v751 = *((_QWORD *)v747 + 12);
              *((_BYTE *)v742 + 112) = v747[104];
              v742[13] = v751;
              v752 = (void *)(((unint64_t)v742 + v748) & v749);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              if (__swift_getEnumTagSinglePayload((uint64_t)v750, 1, v1376))
              {
                memcpy(v752, v750, v1437);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1360 + 16))(v752, v750, v1376);
                __swift_storeEnumTagSinglePayload((uint64_t)v752, 0, 1, v1376);
              }
              v93 = v746;
              v141 = v745;
              goto LABEL_668;
            }
          }
          memcpy(v742, v743, v1442);
LABEL_668:
          v142 = v1453;
          v789 = 50;
LABEL_1335:
          *((_BYTE *)v141 + v1423) = v789;
          goto LABEL_264;
        case 0x33:
          if (__swift_getEnumTagSinglePayload((uint64_t)v142, 1, v1398))
          {
            memcpy(v141, v142, v1481);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1379 + 16))(v141, v142, v1398);
            __swift_storeEnumTagSinglePayload((uint64_t)v141, 0, 1, v1398);
          }
          v630 = ((unint64_t)v141 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v631 = ((unint64_t)v142 + v1445) & 0xFFFFFFFFFFFFFFF8;
          v632 = *(_QWORD *)(v631 + 24);
          *(_QWORD *)(v630 + 24) = v632;
          *(_QWORD *)(v630 + 32) = *(_QWORD *)(v631 + 32);
          (**(void (***)(unint64_t, unint64_t))(v632 - 8))(v630, v631);
          v633 = (v630 + 47) & 0xFFFFFFFFFFFFFFF8;
          v634 = (v631 + 47) & 0xFFFFFFFFFFFFFFF8;
          v635 = *(_QWORD *)(v634 + 24);
          v1463 = v142;
          if (v635 < 0xFFFFFFFF)
          {
            v636 = *(_OWORD *)v634;
            v637 = *(_OWORD *)(v634 + 16);
            *(_QWORD *)(v633 + 32) = *(_QWORD *)(v634 + 32);
            *(_OWORD *)v633 = v636;
            *(_OWORD *)(v633 + 16) = v637;
          }
          else
          {
            *(_QWORD *)(v633 + 24) = v635;
            *(_QWORD *)(v633 + 32) = *(_QWORD *)(v634 + 32);
            (**(void (***)(unint64_t, unint64_t))(v635 - 8))(v633, v634);
          }
          v638 = v93;
          v1413 = v141;
          v639 = (_QWORD *)((v633 + 47) & 0xFFFFFFFFFFFFFFF8);
          v640 = (_QWORD *)((v634 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v639 = *v640;
          v639[1] = v640[1];
          v641 = (_QWORD *)(((unint64_t)v639 + 23) & 0xFFFFFFFFFFFFFFF8);
          v642 = (_QWORD *)(((unint64_t)v640 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v641 = *v642;
          v641[1] = v642[1];
          v643 = (_QWORD *)(((unint64_t)v641 + 23) & 0xFFFFFFFFFFFFFFF8);
          v644 = (_QWORD *)(((unint64_t)v642 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v643 = *v644;
          v645 = (_QWORD *)(((unint64_t)v643 + v1321) & v1472);
          v646 = (_QWORD *)(((unint64_t)v644 + v1321) & v1472);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v1314 > 0x7FFFFFFE)
          {
            v649 = (_QWORD *)(((unint64_t)v646 + 23) & 0xFFFFFFFFFFFFFFF8);
            v650 = ((unint64_t)v649 + 23) & 0xFFFFFFFFFFFFFFF8;
            v651 = __swift_getEnumTagSinglePayload((v1450 + v650 + 33) & v144, v1314, v1357);
            v648 = v1474;
            if (!v651)
            {
              v1299 = v638;
              goto LABEL_628;
            }
          }
          else
          {
            v647 = v646[1];
            if (v647 >= 0xFFFFFFFF)
              LODWORD(v647) = -1;
            v648 = v1474;
            if ((v647 + 1) <= 1)
            {
              v1299 = v93;
              v649 = (_QWORD *)(((unint64_t)v646 + 23) & 0xFFFFFFFFFFFFFFF8);
              v650 = ((unint64_t)v649 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_628:
              *v645 = *v646;
              v645[1] = v646[1];
              v753 = (_QWORD *)(((unint64_t)v645 + 23) & 0xFFFFFFFFFFFFFFF8);
              *v753 = *v649;
              v753[1] = v649[1];
              v754 = ((unint64_t)v753 + 23) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)v754 = *(_QWORD *)v650;
              *(_QWORD *)(v754 + 8) = *(_QWORD *)(v650 + 8);
              *(_BYTE *)(v754 + 16) = *(_BYTE *)(v650 + 16);
              v755 = ((unint64_t)v753 + 47) & 0xFFFFFFFFFFFFFFF8;
              v756 = ((unint64_t)v649 + 47) & 0xFFFFFFFFFFFFFFF8;
              v757 = *(void **)v756;
              *(_QWORD *)v755 = *(_QWORD *)v756;
              *(_BYTE *)(v755 + 8) = *(_BYTE *)(v756 + 8);
              v758 = (v1450 + 9 + v755) & v144;
              v759 = (v1450 + 9 + v756) & v144;
              v760 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1424 + 16);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              v761 = v757;
              v760(v758, v759, v1357);
              v638 = v1299;
LABEL_629:
              v762 = (void *)(((unint64_t)v645 + v1327) & v1390);
              v763 = (_BYTE *)(((unint64_t)v646 + v1327) & v1390);
              v141 = v1413;
              if (v1444)
              {
                v764 = v1375;
                v765 = v1396;
                v766 = v1316;
                if (v1369 >= v1375)
                {
                  v767 = (uint64_t)v763;
                  v764 = v1369;
                  v768 = v1372;
                }
                else
                {
                  v767 = (unint64_t)&v763[v1373] & v1316;
                  v768 = v1377;
                }
                v771 = __swift_getEnumTagSinglePayload(v767, v764, v768);
              }
              else
              {
                v765 = v1396;
                v766 = v1316;
                if (!v763[v1396])
                  goto LABEL_1184;
                v769 = (v763[v1396] - 1) << v1315;
                if (v1396 > 3)
                  v769 = 0;
                if ((_DWORD)v1396)
                {
                  if (v1396 <= 3)
                    v770 = v1396;
                  else
                    v770 = 4;
                  __asm { BR              X11 }
                }
                v771 = v769 + 1;
              }
              if (v771)
              {
                memcpy(v762, v763, v1443);
                goto LABEL_1186;
              }
LABEL_1184:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1366 + 16))(v762, v763, v1372);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1367 + 16))(((unint64_t)v762 + v1373) & v766, (unint64_t)&v763[v1373] & v766, v1377);
              if (!v1444)
                *((_BYTE *)v762 + v765) = 0;
LABEL_1186:
              v1074 = (_QWORD *)(((unint64_t)v762 + v1419) & 0xFFFFFFFFFFFFFFF8);
              v1075 = (_QWORD *)((unint64_t)&v763[v1419] & 0xFFFFFFFFFFFFFFF8);
              *v1074 = *v1075;
              v1074[1] = v1075[1];
              v1076 = ((unint64_t)v1074 + 23) & 0xFFFFFFFFFFFFFFF8;
              v1077 = ((unint64_t)v1075 + 23) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)v1076 = *(_QWORD *)v1077;
              *(_BYTE *)(v1076 + 8) = *(_BYTE *)(v1077 + 8);
              v1078 = (void *)((v1330 + v1076) & v1390);
              v1079 = (_BYTE *)((v1330 + v1077) & v1390);
              sub_21D7C4C20();
              sub_21D7C4C20();
              if (v1444)
              {
                v1080 = v1375;
                if (v1369 >= v1375)
                {
                  v1081 = (uint64_t)v1079;
                  v1080 = v1369;
                  v1082 = v1372;
                }
                else
                {
                  v1081 = (unint64_t)&v1079[v1373] & v766;
                  v1082 = v1377;
                }
                v1085 = __swift_getEnumTagSinglePayload(v1081, v1080, v1082);
              }
              else
              {
                if (!v1079[v765])
                  goto LABEL_1246;
                v1083 = (v1079[v765] - 1) << v1315;
                if (v765 > 3)
                  v1083 = 0;
                if ((_DWORD)v765)
                {
                  if (v765 <= 3)
                    v1084 = v765;
                  else
                    v1084 = 4;
                  __asm { BR              X11 }
                }
                v1085 = v1083 + 1;
              }
              if (v1085)
              {
                memcpy(v1078, v1079, v1443);
                goto LABEL_1248;
              }
LABEL_1246:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1366 + 16))(v1078, v1079, v1372);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1367 + 16))(((unint64_t)v1078 + v1373) & v766, (unint64_t)&v1079[v1373] & v766, v1377);
              if (!v1444)
                *((_BYTE *)v1078 + v765) = 0;
LABEL_1248:
              v1124 = (_QWORD *)(((unint64_t)v1078 + v1419) & 0xFFFFFFFFFFFFFFF8);
              v1125 = (_QWORD *)((unint64_t)&v1079[v1419] & 0xFFFFFFFFFFFFFFF8);
              *v1124 = *v1125;
              v1124[1] = v1125[1];
              v1126 = (void *)(((unint64_t)v1124 + v1435) & v1390);
              v1127 = (_BYTE *)(((unint64_t)v1125 + v1435) & v1390);
              sub_21D7C4C20();
              if (v1444)
              {
                v1128 = v1375;
                if (v1369 >= v1375)
                {
                  v1129 = (uint64_t)v1127;
                  v1128 = v1369;
                  v1130 = v1372;
                }
                else
                {
                  v1129 = (unint64_t)&v1127[v1373] & v766;
                  v1130 = v1377;
                }
                v1133 = __swift_getEnumTagSinglePayload(v1129, v1128, v1130);
              }
              else
              {
                if (!v1127[v765])
                  goto LABEL_1264;
                v1131 = (v1127[v765] - 1) << v1315;
                if (v765 > 3)
                  v1131 = 0;
                if ((_DWORD)v765)
                {
                  if (v765 <= 3)
                    v1132 = v765;
                  else
                    v1132 = 4;
                  __asm { BR              X11 }
                }
                v1133 = v1131 + 1;
              }
              if (v1133)
              {
                memcpy(v1126, v1127, v1443);
                goto LABEL_1266;
              }
LABEL_1264:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1366 + 16))(v1126, v1127, v1372);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1367 + 16))(((unint64_t)v1126 + v1373) & v766, (unint64_t)&v1127[v1373] & v766, v1377);
              if (!v1444)
                *((_BYTE *)v1126 + v765) = 0;
LABEL_1266:
              v1134 = (_QWORD *)(((unint64_t)v1126 + v1303) & v1388);
              v1135 = (_QWORD *)((unint64_t)&v1127[v1303] & v1388);
              if (v1371 >= 0x7FFFFFFF)
              {
                v1141 = (const void *)(((unint64_t)v1135 + v1374) & v1386);
                if (__swift_getEnumTagSinglePayload((uint64_t)v1141, v1363, v1376) <= 1)
                {
                  v1137 = v638;
                  v1138 = (char *)(v1135 + 1);
                  v1139 = v1374;
                  v1140 = ~v1447;
                  goto LABEL_1273;
                }
              }
              else
              {
                v1136 = v1135[2];
                if (v1136 >= 0xFFFFFFFF)
                  LODWORD(v1136) = -1;
                if ((int)v1136 - 1 < 0)
                {
                  v1137 = v638;
                  v1138 = (char *)(v1135 + 1);
                  v1139 = v1374;
                  v1140 = ~v1447;
                  v1141 = (const void *)(((unint64_t)v1135 + v1374) & v1386);
LABEL_1273:
                  *(_BYTE *)v1134 = *(_BYTE *)v1135;
                  v1134[1] = v1135[1];
                  v1134[2] = *((_QWORD *)v1138 + 1);
                  v1134[3] = *((_QWORD *)v1138 + 2);
                  v1134[4] = *((_QWORD *)v1138 + 3);
                  v1134[5] = *((_QWORD *)v1138 + 4);
                  v1134[6] = *((_QWORD *)v1138 + 5);
                  v1134[7] = *((_QWORD *)v1138 + 6);
                  v1134[8] = *((_QWORD *)v1138 + 7);
                  v1134[9] = *((_QWORD *)v1138 + 8);
                  v1134[10] = *((_QWORD *)v1138 + 9);
                  v1134[11] = *((_QWORD *)v1138 + 10);
                  v1134[12] = *((_QWORD *)v1138 + 11);
                  v1142 = *((_QWORD *)v1138 + 12);
                  *((_BYTE *)v1134 + 112) = v1138[104];
                  v1134[13] = v1142;
                  v1143 = (void *)(((unint64_t)v1134 + v1139) & v1140);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (__swift_getEnumTagSinglePayload((uint64_t)v1141, 1, v1376))
                  {
                    memcpy(v1143, v1141, v1437);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1360 + 16))(v1143, v1141, v1376);
                    __swift_storeEnumTagSinglePayload((uint64_t)v1143, 0, 1, v1376);
                  }
                  v93 = v1137;
                  v141 = v1413;
                  v142 = v1463;
                  goto LABEL_1278;
                }
              }
              memcpy(v1134, v1135, v1442);
              v142 = v1463;
              v93 = v638;
LABEL_1278:
              v789 = 51;
              goto LABEL_1335;
            }
          }
          memcpy(v645, v646, v648);
          goto LABEL_629;
        case 0x34:
          *v141 = *v142;
          v182 = 52;
LABEL_262:
          *((_BYTE *)v141 + v1423) = v182;
          goto LABEL_263;
        default:
          if (v1423 <= 3)
            v143 = v1423;
          else
            v143 = 4;
          __asm { BR              X12 }
          return result;
      }
    case 2:
      *a1 = *a2;
      v102 = 2;
      goto LABEL_124;
    case 3:
      *a1 = *a2;
      v102 = 3;
LABEL_124:
      *((_BYTE *)a1 + v93) = v102;
      sub_21D7C4C20();
      goto LABEL_270;
    default:
      memcpy(a1, a2, v93 + 1);
      goto LABEL_270;
  }
}

_QWORD *sub_21CEAC42C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  size_t v5;
  size_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  int v29;
  int v30;
  size_t v31;
  size_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  size_t v40;
  uint64_t v41;
  size_t v42;
  unsigned int v43;
  unint64_t v44;
  uint64_t v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  uint64_t v49;
  size_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  size_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  size_t v60;
  size_t v61;
  unint64_t v62;
  size_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unsigned __int8 *v99;
  unint64_t v100;
  unsigned int v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  int v114;
  int EnumTagSinglePayload;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  size_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  size_t v124;
  uint64_t v125;
  size_t v126;
  unint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  unint64_t v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  unint64_t v150;
  unint64_t v151;
  uint64_t v152;
  unint64_t v153;
  unint64_t v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  unint64_t v167;
  unint64_t v168;
  unint64_t v169;
  uint64_t v170;
  unint64_t v171;
  unint64_t v172;
  unint64_t v173;
  unint64_t v174;
  unint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  unint64_t v185;
  uint64_t v186;
  unint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  unint64_t v194;
  unint64_t v195;
  unint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t v200;
  unint64_t v201;
  unint64_t v202;
  unint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  unint64_t v207;
  unint64_t v208;
  unint64_t v209;
  unint64_t v210;
  uint64_t v211;
  size_t v212;
  unint64_t v213;
  unint64_t v214;
  int v215;
  uint64_t v216;
  void *v217;
  const void *v218;
  size_t v219;
  _QWORD *v220;
  char v221;
  _BYTE *v222;
  unsigned __int8 *v223;
  unsigned int v224;
  _QWORD *v225;
  _QWORD *v226;
  unsigned int v227;
  size_t v228;
  uint64_t v229;
  void *v230;
  const void *v231;
  uint64_t v232;
  _QWORD *v233;
  _QWORD *v234;
  unint64_t v235;
  unint64_t v236;
  unint64_t v237;
  unint64_t v238;
  unint64_t v239;
  unint64_t v240;
  uint64_t v241;
  _QWORD *v242;
  _QWORD *v243;
  unint64_t v244;
  unint64_t v245;
  unint64_t v246;
  __int128 v247;
  __int128 v248;
  _QWORD *v249;
  _QWORD *v250;
  unint64_t v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;
  const void *v255;
  uint64_t v256;
  void *v257;
  uint64_t v258;
  uint64_t v259;
  unint64_t v260;
  unint64_t v261;
  unint64_t v262;
  unint64_t v263;
  uint64_t v264;
  unint64_t v265;
  uint64_t v266;
  uint64_t v267;
  unint64_t v268;
  unint64_t v269;
  unint64_t v270;
  unint64_t v271;
  unint64_t v272;
  unint64_t v273;
  uint64_t v274;
  unint64_t v275;
  __int128 v276;
  __int128 v277;
  unint64_t v278;
  _QWORD *v279;
  uint64_t v280;
  __int128 v281;
  __int128 v282;
  _QWORD *v283;
  _QWORD *v284;
  _QWORD *v285;
  _QWORD *v286;
  void *v287;
  _BYTE *v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  int v293;
  int v294;
  int v295;
  id *v296;
  unint64_t v297;
  int v298;
  int v299;
  int v300;
  size_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  unint64_t v305;
  id *v306;
  unint64_t v307;
  id *v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  int v312;
  unint64_t v313;
  id *v314;
  unint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  int v319;
  int v320;
  int v321;
  int v322;
  int v323;
  int v324;
  uint64_t v325;
  int v326;
  int v327;
  int v328;
  int v329;
  int v330;
  int v331;
  int v332;
  int v333;
  int v334;
  int v335;
  int v336;
  int v337;
  int v338;
  int v339;
  int v340;
  int v341;
  int v342;
  int v343;
  int v344;
  int v345;
  int v346;
  int v347;
  unint64_t v348;
  unint64_t v349;
  int v350;
  unsigned int v351;
  unint64_t v352;
  unint64_t v353;
  int v354;
  unsigned int v355;
  _BYTE *v356;
  unint64_t v357;
  unint64_t v358;
  unint64_t v359;
  __int128 v360;
  __int128 v361;
  __int128 v362;
  uint64_t v363;
  _QWORD *v364;
  _QWORD *v365;
  uint64_t v366;
  const void *v367;
  unsigned int v368;
  unint64_t v369;
  void *v370;
  size_t v371;
  _QWORD *v372;
  _QWORD *v373;
  uint64_t v374;
  uint64_t v375;
  size_t v376;
  uint64_t v377;
  _QWORD *v378;
  uint64_t v379;
  uint64_t v380;
  void *v381;
  const void *v382;
  char v383;
  _QWORD *v384;
  unint64_t v385;
  uint64_t v386;
  void *v387;
  _QWORD *v388;
  const void *v389;
  size_t v390;
  unint64_t v391;
  uint64_t v392;
  void *v393;
  const void *v394;
  unint64_t v395;
  uint64_t v396;
  void *v397;
  const void *v398;
  _QWORD *v399;
  uint64_t v400;
  void *v401;
  const void *v402;
  _QWORD *v403;
  size_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  void *v408;
  const void *v409;
  _QWORD *v410;
  unint64_t v411;
  uint64_t v412;
  char *v413;
  _QWORD *v414;
  const void *v415;
  size_t v416;
  _QWORD *v417;
  unint64_t v418;
  uint64_t v419;
  _QWORD *v420;
  _QWORD *v421;
  _QWORD *v422;
  _QWORD *v423;
  void *v424;
  const void *v425;
  unint64_t v426;
  unint64_t v427;
  unint64_t v428;
  uint64_t v429;
  void (*v430)(unint64_t, unint64_t, uint64_t);
  void *v431;
  const void *v432;
  uint64_t v433;
  const void *v434;
  uint64_t v435;
  uint64_t v436;
  unint64_t v437;
  _QWORD *v438;
  uint64_t v439;
  void *v440;
  const void *v441;
  _QWORD *v442;
  uint64_t v443;
  void *v444;
  const void *v445;
  _QWORD *v446;
  unint64_t v447;
  uint64_t v448;
  void *v449;
  const void *v450;
  uint64_t v451;
  void *v452;
  const void *v453;
  _QWORD *v454;
  unint64_t v455;
  unint64_t v456;
  uint64_t v457;
  _QWORD *v458;
  _QWORD *v459;
  _QWORD *v460;
  _QWORD *v461;
  _QWORD *v462;
  _QWORD *v463;
  _QWORD *v464;
  _QWORD *v465;
  unint64_t v466;
  _QWORD *v467;
  unint64_t v468;
  size_t v469;
  _QWORD *v470;
  unint64_t v471;
  unint64_t v472;
  unint64_t v473;
  void *v474;
  uint64_t v475;
  uint64_t v476;
  void (*v477)(uint64_t, uint64_t, uint64_t);
  id v478;
  unint64_t v479;
  unint64_t v480;
  _QWORD *v481;
  _QWORD *v482;
  void *v483;
  _BYTE *v484;
  uint64_t v485;
  size_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  char v491;
  unint64_t v492;
  unint64_t v493;
  uint64_t v494;
  _QWORD *v495;
  _QWORD *v496;
  void *v497;
  _BYTE *v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  unint64_t v503;
  unint64_t v504;
  uint64_t v505;
  _QWORD *v506;
  _QWORD *v507;
  _QWORD *v508;
  _QWORD *v509;
  unint64_t v510;
  unint64_t v511;
  unint64_t v512;
  unint64_t v513;
  unint64_t v514;
  __int128 v515;
  __int128 v516;
  _QWORD *v517;
  _QWORD *v518;
  unint64_t v519;
  char *v520;
  uint64_t v521;
  uint64_t v522;
  const void *v523;
  uint64_t v524;
  void *v525;
  size_t v526;
  unint64_t v527;
  unint64_t v528;
  uint64_t v529;
  void *v530;
  const void *v531;
  uint64_t v532;
  size_t v533;
  uint64_t v534;
  uint64_t v535;
  unint64_t v536;
  unint64_t v537;
  unint64_t v538;
  uint64_t v539;
  unint64_t v540;
  unint64_t v541;
  unint64_t v542;
  char *v543;
  uint64_t v544;
  uint64_t v545;
  const void *v546;
  uint64_t v547;
  void *v548;
  size_t v549;
  unint64_t v550;
  unint64_t v551;
  uint64_t v552;
  _QWORD *v553;
  _QWORD *v554;
  void *v555;
  const void *v556;
  unint64_t v557;
  unint64_t v558;
  _QWORD *v559;
  _QWORD *v560;
  _QWORD *v561;
  _QWORD *v562;
  uint64_t v563;
  unint64_t v564;
  unint64_t v565;
  uint64_t v566;
  _QWORD *v567;
  _QWORD *v568;
  unint64_t v569;
  _QWORD *v570;
  unint64_t v571;
  unint64_t v572;
  unint64_t v573;
  _QWORD *v574;
  _QWORD *v575;
  unint64_t v576;
  char *v577;
  uint64_t v578;
  uint64_t v579;
  const void *v580;
  uint64_t v581;
  void *v582;
  size_t v583;
  _QWORD *v584;
  _QWORD *v585;
  _QWORD *v586;
  _QWORD *v587;
  _QWORD *v588;
  _QWORD *v589;
  unint64_t v590;
  unint64_t v591;
  unint64_t v592;
  __int128 v593;
  __int128 v594;
  unint64_t v595;
  unint64_t v596;
  unint64_t v597;
  __int128 v598;
  __int128 v599;
  unint64_t v600;
  unint64_t v601;
  unint64_t v602;
  __int128 v603;
  __int128 v604;
  _QWORD *v605;
  _QWORD *v606;
  _QWORD *v607;
  _QWORD *v608;
  _QWORD *v609;
  _QWORD *v610;
  _QWORD *v611;
  _QWORD *v612;
  unint64_t v613;
  unint64_t v614;
  unint64_t v615;
  __int128 v616;
  __int128 v617;
  unint64_t v618;
  unint64_t v619;
  unint64_t v620;
  __int128 v621;
  __int128 v622;
  unint64_t v623;
  unint64_t v624;
  unint64_t v625;
  __int128 v626;
  __int128 v627;
  void *v628;
  _BYTE *v629;
  uint64_t v630;
  uint64_t v631;
  uint64_t v632;
  unint64_t v633;
  unint64_t v634;
  uint64_t v635;
  _QWORD *v636;
  _QWORD *v637;
  _QWORD *v638;
  _QWORD *v639;
  unint64_t v640;
  unint64_t v641;
  uint64_t v642;
  void *v643;
  const void *v644;
  uint64_t v645;
  uint64_t v646;
  uint64_t v647;
  unint64_t v648;
  unint64_t v649;
  unint64_t v650;
  uint64_t v651;
  unint64_t v652;
  unint64_t v653;
  char v654;
  unint64_t v655;
  unint64_t v656;
  uint64_t v657;
  _QWORD *v658;
  _QWORD *v659;
  _QWORD *v660;
  _QWORD *v661;
  _QWORD *v662;
  _QWORD *v663;
  _QWORD *v664;
  _QWORD *v665;
  unint64_t v666;
  _QWORD *v667;
  unint64_t v668;
  size_t v669;
  _QWORD *v670;
  unint64_t v671;
  unint64_t v672;
  unint64_t v673;
  void *v674;
  uint64_t v675;
  uint64_t v676;
  void (*v677)(uint64_t, uint64_t, uint64_t);
  id v678;
  unint64_t v679;
  unint64_t v680;
  void *v681;
  _BYTE *v682;
  uint64_t v683;
  size_t v684;
  uint64_t v685;
  uint64_t v686;
  uint64_t v687;
  uint64_t v688;
  unint64_t v689;
  unint64_t v690;
  uint64_t v691;
  _QWORD *v692;
  _QWORD *v693;
  _QWORD *v694;
  _QWORD *v695;
  char *v696;
  unint64_t v697;
  unint64_t v698;
  char v699;
  char v700;
  int v701;
  int v702;
  unint64_t v703;
  unint64_t v704;
  uint64_t v705;
  unint64_t v706;
  unint64_t v707;
  uint64_t v708;
  void *v709;
  const void *v710;
  unint64_t v711;
  unint64_t v712;
  uint64_t v713;
  unint64_t v714;
  unint64_t v715;
  uint64_t v716;
  void *v717;
  const void *v718;
  unint64_t v719;
  unint64_t v720;
  uint64_t v721;
  _QWORD *v722;
  _QWORD *v723;
  unint64_t v724;
  unint64_t v725;
  unint64_t v726;
  __int128 v727;
  __int128 v728;
  unint64_t v729;
  unint64_t v730;
  uint64_t v731;
  unint64_t v732;
  _QWORD *v733;
  unint64_t v734;
  _QWORD *v735;
  unint64_t v736;
  uint64_t v737;
  _QWORD *v738;
  _QWORD *v739;
  _QWORD *v740;
  _QWORD *v741;
  unint64_t v742;
  unint64_t v743;
  unint64_t v744;
  __int128 v745;
  __int128 v746;
  unint64_t v747;
  unint64_t v748;
  unint64_t v749;
  __int128 v750;
  __int128 v751;
  unint64_t v752;
  char v753;
  unint64_t v754;
  unint64_t v755;
  uint64_t v756;
  unint64_t v757;
  _QWORD *v758;
  _QWORD *v759;
  unint64_t v760;
  unint64_t v761;
  uint64_t v762;
  unint64_t v763;
  unint64_t v764;
  unint64_t v765;
  __int128 v766;
  __int128 v767;
  _QWORD *v768;
  _QWORD *v769;
  _QWORD *v770;
  _QWORD *v771;
  _QWORD *v772;
  _QWORD *v773;
  _QWORD *v774;
  _QWORD *v775;
  unint64_t v776;
  unint64_t v777;
  _QWORD *v778;
  _QWORD *v779;
  void *v780;
  _BYTE *v781;
  uint64_t v782;
  uint64_t v783;
  uint64_t v784;
  _QWORD *v785;
  _QWORD *v786;
  unint64_t v787;
  unint64_t v788;
  unint64_t v789;
  __int128 v790;
  __int128 v791;
  _QWORD *v792;
  _QWORD *v793;
  _QWORD *v794;
  _QWORD *v795;
  char *v796;
  char *v797;
  unint64_t v798;
  unint64_t v799;
  unint64_t v800;
  uint64_t v801;
  unint64_t v802;
  unint64_t v803;
  unint64_t v804;
  __int128 v805;
  __int128 v806;
  _QWORD *v807;
  _QWORD *v808;
  _QWORD *v809;
  _QWORD *v810;
  _QWORD *v811;
  _QWORD *v812;
  _QWORD *v813;
  _QWORD *v814;
  unint64_t v815;
  uint64_t v816;
  _QWORD *v817;
  unint64_t v818;
  _QWORD *v819;
  unint64_t v820;
  unint64_t v821;
  unint64_t v822;
  void *v823;
  uint64_t v824;
  uint64_t v825;
  void (*v826)(uint64_t, uint64_t, uint64_t);
  id v827;
  void *v828;
  _BYTE *v829;
  uint64_t v830;
  uint64_t v831;
  uint64_t v832;
  int v833;
  int v834;
  int v835;
  int v836;
  void *v837;
  _BYTE *v838;
  uint64_t v839;
  uint64_t v840;
  uint64_t v841;
  int v842;
  int v843;
  int v844;
  int v845;
  _QWORD *v846;
  _QWORD *v847;
  unint64_t v848;
  unint64_t v849;
  void *v850;
  _BYTE *v851;
  uint64_t v852;
  uint64_t v853;
  uint64_t v854;
  uint64_t v855;
  uint64_t v856;
  _QWORD *v857;
  _QWORD *v858;
  unint64_t v859;
  unint64_t v860;
  _QWORD *v861;
  _QWORD *v862;
  _QWORD *v863;
  _QWORD *v864;
  _QWORD *v865;
  _QWORD *v866;
  _QWORD *v867;
  _QWORD *v868;
  _QWORD *v869;
  _QWORD *v870;
  void *v871;
  _BYTE *v872;
  uint64_t v873;
  uint64_t v874;
  uint64_t v875;
  int v876;
  int v877;
  int v878;
  int v879;
  int v880;
  int v881;
  int v882;
  int v883;
  uint64_t v884;
  int v885;
  int v886;
  int v887;
  int v888;
  int v889;
  int v890;
  int v891;
  int v892;
  int v893;
  int v894;
  int v895;
  int v896;
  unint64_t v897;
  unint64_t v898;
  int v899;
  unsigned int v900;
  unint64_t v901;
  unint64_t v902;
  int v903;
  unsigned int v904;
  _QWORD *v905;
  unint64_t v906;
  unint64_t v907;
  unint64_t v908;
  void *v909;
  uint64_t v910;
  uint64_t v911;
  void (*v912)(uint64_t, uint64_t, uint64_t);
  id v913;
  unint64_t v914;
  unint64_t v915;
  uint64_t v916;
  unint64_t v917;
  unint64_t v918;
  char *v919;
  char *v920;
  _QWORD *v921;
  _QWORD *v922;
  unint64_t v923;
  uint64_t v924;
  char *v925;
  uint64_t v926;
  uint64_t v927;
  const void *v928;
  uint64_t v929;
  void *v930;
  void *v931;
  _BYTE *v932;
  uint64_t v933;
  uint64_t v934;
  uint64_t v935;
  int v936;
  int v937;
  int v938;
  _QWORD *v939;
  _QWORD *v940;
  _QWORD *v941;
  _QWORD *v942;
  unint64_t v943;
  unint64_t v944;
  unint64_t v945;
  __int128 v946;
  char v947;
  char v948;
  uint64_t *v949;
  uint64_t v950;
  int v951;
  unint64_t v952;
  unint64_t v953;
  uint64_t v954;
  uint64_t v955;
  uint64_t v956;
  uint64_t v957;
  uint64_t v958;
  unint64_t v959;
  unint64_t v960;
  unsigned int v961;
  unint64_t v962;
  unint64_t v963;
  unint64_t v964;
  unint64_t v965;
  uint64_t v966;
  uint64_t v967;
  uint64_t v968;
  uint64_t v969;
  uint64_t v970;
  int v971;
  int v972;
  int v973;
  unsigned int v974;
  unint64_t v975;
  unint64_t v976;
  unint64_t v977;
  unint64_t v978;
  unint64_t v979;
  unint64_t v980;
  uint64_t v981;
  size_t v982;
  uint64_t v983;
  uint64_t v984;
  uint64_t v985;
  int v986;
  int v987;
  int v988;
  unsigned int v989;
  unint64_t v990;
  unint64_t v991;
  uint64_t v992;
  _QWORD *v993;
  _QWORD *v994;
  _QWORD *v995;
  _QWORD *v996;
  unint64_t v997;
  unint64_t v998;
  unint64_t v999;
  unint64_t v1000;
  unint64_t v1001;
  __int128 v1002;
  __int128 v1003;
  _QWORD *v1004;
  _QWORD *v1005;
  unint64_t v1006;
  size_t v1007;
  uint64_t v1008;
  char *v1009;
  uint64_t v1010;
  uint64_t v1011;
  const void *v1012;
  uint64_t v1013;
  void *v1014;
  void *v1015;
  _BYTE *v1016;
  uint64_t v1017;
  uint64_t v1018;
  uint64_t v1019;
  int v1020;
  int v1021;
  int v1022;
  unsigned int v1023;
  unint64_t v1024;
  unint64_t v1025;
  uint64_t v1026;
  _QWORD *v1027;
  _QWORD *v1028;
  _QWORD *v1029;
  _QWORD *v1030;
  unint64_t v1031;
  unint64_t v1032;
  unint64_t v1033;
  __int128 v1034;
  __int128 v1035;
  unint64_t v1036;
  unint64_t v1037;
  unint64_t v1038;
  __int128 v1039;
  __int128 v1040;
  _QWORD *v1041;
  _QWORD *v1042;
  unint64_t v1043;
  char *v1044;
  uint64_t v1045;
  uint64_t v1046;
  const void *v1047;
  uint64_t v1048;
  void *v1049;
  size_t v1050;
  void *v1051;
  _BYTE *v1052;
  uint64_t v1053;
  uint64_t v1054;
  uint64_t v1055;
  int v1056;
  int v1057;
  int v1058;
  unint64_t v1059;
  unint64_t v1060;
  unint64_t v1061;
  unint64_t v1062;
  uint64_t v1063;
  size_t v1064;
  uint64_t v1065;
  uint64_t v1066;
  uint64_t v1067;
  int v1068;
  int v1069;
  int v1070;
  uint64_t v1071;
  uint64_t v1072;
  uint64_t v1073;
  uint64_t v1074;
  int v1075;
  int v1076;
  int v1077;
  uint64_t v1078;
  int v1079;
  uint64_t v1080;
  unint64_t v1081;
  uint64_t v1082;
  uint64_t v1083;
  uint64_t v1084;
  int v1085;
  int v1086;
  int v1087;
  unint64_t v1088;
  unint64_t v1089;
  unint64_t v1090;
  uint64_t v1091;
  uint64_t v1092;
  uint64_t v1093;
  int v1094;
  int v1095;
  int v1096;
  unint64_t v1097;
  size_t v1098;
  size_t v1099;
  unint64_t v1100;
  _QWORD *v1101;
  unint64_t v1102;
  uint64_t v1103;
  void *v1104;
  const void *v1105;
  _QWORD *v1106;
  _QWORD *v1107;
  _QWORD *v1108;
  _QWORD *v1109;
  _QWORD *v1110;
  uint64_t *v1111;
  uint64_t v1112;
  uint64_t v1113;
  int v1114;
  void (*v1115)(unint64_t, unint64_t, uint64_t);
  uint64_t v1116;
  _QWORD *v1117;
  _QWORD *v1118;
  unint64_t v1119;
  char *v1120;
  uint64_t v1121;
  const void *v1122;
  uint64_t v1123;
  void *v1124;
  size_t v1125;
  unint64_t v1126;
  void *v1127;
  unint64_t v1128;
  const void *v1129;
  unint64_t v1130;
  unint64_t v1131;
  unint64_t v1132;
  uint64_t v1133;
  unint64_t v1134;
  unint64_t v1135;
  unint64_t v1136;
  __int128 v1137;
  __int128 v1138;
  _QWORD *v1139;
  _QWORD *v1140;
  unint64_t v1141;
  void *v1142;
  unint64_t v1143;
  const void *v1144;
  unint64_t v1145;
  unint64_t v1146;
  unint64_t v1147;
  uint64_t v1148;
  unint64_t v1149;
  unint64_t v1150;
  unint64_t v1151;
  __int128 v1152;
  __int128 v1153;
  _QWORD *v1154;
  _QWORD *v1155;
  char *v1156;
  char *v1157;
  unint64_t v1158;
  unint64_t v1159;
  uint64_t v1160;
  unint64_t v1161;
  unint64_t v1162;
  unint64_t v1163;
  __int128 v1164;
  __int128 v1165;
  _QWORD *v1166;
  _QWORD *v1167;
  unint64_t v1168;
  uint64_t v1169;
  unint64_t v1170;
  unint64_t v1171;
  unint64_t v1172;
  __int128 v1173;
  __int128 v1174;
  _QWORD *v1175;
  _QWORD *v1176;
  unint64_t v1177;
  char *v1178;
  uint64_t v1179;
  uint64_t v1180;
  const void *v1181;
  uint64_t v1182;
  void *v1183;
  size_t v1184;
  void *v1185;
  _BYTE *v1186;
  uint64_t v1187;
  uint64_t v1188;
  uint64_t v1189;
  int v1190;
  int v1191;
  int v1192;
  char *v1193;
  void *v1194;
  _BYTE *v1195;
  uint64_t v1196;
  uint64_t v1197;
  uint64_t v1198;
  int v1199;
  int v1200;
  int v1201;
  _QWORD *v1202;
  _QWORD *v1203;
  unint64_t v1204;
  unint64_t v1205;
  unint64_t v1206;
  unint64_t v1207;
  __int128 v1208;
  __int128 v1209;
  _QWORD *v1210;
  _QWORD *v1211;
  uint64_t *v1212;
  uint64_t v1213;
  int v1214;
  uint64_t *v1215;
  uint64_t v1216;
  int v1217;
  uint64_t v1218;
  unint64_t v1219;
  uint64_t *v1220;
  uint64_t v1221;
  int v1222;
  uint64_t *v1223;
  uint64_t v1224;
  int v1225;
  unint64_t v1226;
  unint64_t v1227;
  unint64_t v1228;
  unint64_t v1229;
  uint64_t v1230;
  unint64_t v1231;
  unint64_t v1232;
  uint64_t v1233;
  uint64_t v1234;
  uint64_t v1235;
  int v1236;
  int v1237;
  int v1238;
  _QWORD *v1239;
  uint64_t *v1240;
  uint64_t v1241;
  int v1242;
  unint64_t v1243;
  void (*v1244)(unint64_t, unint64_t, uint64_t);
  unint64_t v1245;
  _QWORD *v1246;
  _QWORD *v1247;
  uint64_t *v1248;
  uint64_t v1249;
  int v1250;
  uint64_t v1251;
  void (*v1252)(unint64_t, unint64_t, uint64_t);
  _QWORD *v1253;
  _QWORD *v1254;
  unint64_t v1255;
  uint64_t v1256;
  char *v1257;
  uint64_t v1258;
  uint64_t v1259;
  const void *v1260;
  uint64_t v1261;
  void *v1262;
  unint64_t v1263;
  BOOL v1264;
  BOOL v1265;
  unint64_t v1266;
  uint64_t v1267;
  void *v1268;
  _BYTE *v1269;
  uint64_t v1270;
  uint64_t v1271;
  uint64_t v1272;
  int v1273;
  int v1274;
  int v1275;
  _QWORD *v1276;
  uint64_t *v1277;
  uint64_t v1278;
  uint64_t v1279;
  int v1280;
  void (*v1281)(unint64_t, unint64_t, uint64_t);
  uint64_t v1282;
  _QWORD *v1283;
  _QWORD *v1284;
  unint64_t v1285;
  char *v1286;
  uint64_t v1287;
  const void *v1288;
  uint64_t v1289;
  void *v1290;
  size_t v1291;
  unint64_t v1292;
  void *v1293;
  unint64_t v1294;
  const void *v1295;
  unint64_t v1296;
  unint64_t v1297;
  unint64_t v1298;
  uint64_t v1299;
  unint64_t v1300;
  unint64_t v1301;
  unint64_t v1302;
  __int128 v1303;
  __int128 v1304;
  _QWORD *v1305;
  _QWORD *v1306;
  unint64_t v1307;
  void *v1308;
  unint64_t v1309;
  const void *v1310;
  unint64_t v1311;
  unint64_t v1312;
  unint64_t v1313;
  uint64_t v1314;
  unint64_t v1315;
  unint64_t v1316;
  unint64_t v1317;
  __int128 v1318;
  __int128 v1319;
  _QWORD *v1320;
  _QWORD *v1321;
  char *v1322;
  char *v1323;
  unint64_t v1324;
  unint64_t v1325;
  uint64_t v1326;
  unint64_t v1327;
  unint64_t v1328;
  unint64_t v1329;
  __int128 v1330;
  __int128 v1331;
  _QWORD *v1332;
  _QWORD *v1333;
  unint64_t v1334;
  uint64_t v1335;
  void *v1336;
  _BYTE *v1337;
  uint64_t v1338;
  uint64_t v1339;
  uint64_t v1340;
  int v1341;
  int v1342;
  int v1343;
  uint64_t v1344;
  _QWORD *v1345;
  _QWORD *v1346;
  unint64_t v1347;
  unint64_t v1348;
  void *v1349;
  _BYTE *v1350;
  uint64_t v1351;
  uint64_t v1352;
  uint64_t v1353;
  int v1354;
  int v1355;
  int v1356;
  unint64_t v1357;
  _QWORD *v1358;
  uint64_t *v1359;
  uint64_t v1360;
  int v1361;
  uint64_t v1362;
  void (*v1363)(unint64_t, unint64_t, uint64_t);
  _QWORD *v1364;
  uint64_t *v1365;
  uint64_t v1366;
  int v1367;
  uint64_t v1368;
  void (*v1369)(unint64_t, unint64_t, uint64_t);
  _BYTE *v1370;
  _QWORD *v1371;
  _QWORD *v1372;
  unint64_t v1373;
  unint64_t v1374;
  unint64_t v1375;
  unint64_t v1376;
  unint64_t v1377;
  __int128 v1378;
  __int128 v1379;
  unint64_t v1380;
  unint64_t v1381;
  unint64_t v1382;
  char *v1383;
  uint64_t v1384;
  uint64_t v1385;
  const void *v1386;
  uint64_t v1387;
  void *v1388;
  size_t v1389;
  _QWORD *v1390;
  _QWORD *v1391;
  _QWORD *v1392;
  _QWORD *v1393;
  void *v1394;
  _BYTE *v1395;
  uint64_t v1396;
  uint64_t v1397;
  uint64_t v1398;
  int v1399;
  int v1400;
  int v1401;
  _QWORD *v1402;
  _QWORD *v1403;
  unint64_t v1404;
  char *v1405;
  uint64_t v1406;
  uint64_t v1407;
  const void *v1408;
  uint64_t v1409;
  void *v1410;
  uint64_t v1411;
  unsigned __int8 *v1412;
  unint64_t v1413;
  unsigned int v1414;
  uint64_t v1415;
  unint64_t v1416;
  unint64_t v1417;
  unint64_t v1418;
  uint64_t v1419;
  unint64_t v1420;
  unint64_t v1421;
  uint64_t v1422;
  uint64_t v1423;
  uint64_t v1424;
  int v1425;
  int v1426;
  int v1427;
  unint64_t v1428;
  unint64_t v1429;
  unint64_t v1430;
  unint64_t v1431;
  unint64_t v1432;
  __int128 v1433;
  __int128 v1434;
  _QWORD *v1435;
  _QWORD *v1436;
  _BYTE *v1437;
  unsigned __int8 *v1438;
  unsigned int v1439;
  _QWORD *v1440;
  _QWORD *v1441;
  unsigned int v1442;
  uint64_t v1443;
  void *v1444;
  const void *v1445;
  void *v1446;
  const void *v1447;
  size_t v1448;
  _QWORD *v1449;
  _QWORD *v1450;
  _BYTE *v1451;
  unsigned __int8 *v1452;
  unsigned int v1453;
  _QWORD *v1454;
  _QWORD *v1455;
  unsigned int v1456;
  uint64_t v1457;
  void *v1458;
  const void *v1459;
  uint64_t v1460;
  uint64_t v1461;
  uint64_t v1462;
  _QWORD *v1463;
  _QWORD *v1464;
  unint64_t v1465;
  unint64_t v1466;
  unint64_t v1467;
  unint64_t v1468;
  unint64_t v1469;
  unint64_t v1470;
  uint64_t v1471;
  _QWORD *v1472;
  _QWORD *v1473;
  unint64_t v1474;
  unint64_t v1475;
  unint64_t v1476;
  __int128 v1477;
  __int128 v1478;
  _QWORD *v1479;
  _BYTE *v1480;
  unint64_t v1481;
  _BYTE *v1482;
  uint64_t v1483;
  uint64_t v1484;
  void *v1485;
  const void *v1486;
  size_t v1487;
  _QWORD *v1488;
  _QWORD *v1489;
  unint64_t v1490;
  unint64_t v1491;
  unint64_t v1492;
  unint64_t v1493;
  unint64_t v1494;
  unint64_t v1495;
  uint64_t v1496;
  _QWORD *v1497;
  _QWORD *v1498;
  unint64_t v1499;
  unint64_t v1500;
  unint64_t v1501;
  __int128 v1502;
  __int128 v1503;
  _QWORD *v1504;
  _QWORD *v1505;
  unint64_t v1506;
  char *v1507;
  uint64_t v1508;
  uint64_t v1509;
  uint64_t v1510;
  void *v1511;
  const void *v1512;
  size_t v1513;
  _QWORD *v1514;
  _QWORD *v1515;
  _QWORD *v1516;
  _QWORD *v1517;
  unint64_t v1518;
  uint64_t v1519;
  char *v1520;
  uint64_t v1521;
  uint64_t v1522;
  const void *v1523;
  uint64_t v1524;
  void *v1525;
  _QWORD *v1526;
  unint64_t v1527;
  uint64_t v1528;
  uint64_t v1529;
  uint64_t v1530;
  int v1531;
  uint64_t v1532;
  uint64_t v1533;
  uint64_t v1534;
  uint64_t v1535;
  uint64_t v1536;
  uint64_t v1537;
  uint64_t v1538;
  unsigned int v1539;
  uint64_t v1540;
  int v1541;
  uint64_t v1542;
  uint64_t v1543;
  uint64_t v1544;
  uint64_t v1545;
  uint64_t v1546;
  uint64_t v1547;
  uint64_t v1548;
  unint64_t v1549;
  uint64_t v1550;
  uint64_t v1551;
  unint64_t v1552;
  BOOL v1553;
  uint64_t v1554;
  uint64_t v1555;
  uint64_t v1556;
  uint64_t v1557;
  uint64_t v1558;
  uint64_t v1559;
  uint64_t v1560;
  unint64_t v1561;
  unint64_t v1562;
  uint64_t v1563;
  uint64_t v1564;
  unint64_t v1565;
  uint64_t v1566;
  unint64_t v1567;
  size_t v1568;
  uint64_t v1569;
  uint64_t v1570;
  uint64_t v1571;
  unint64_t v1572;
  unint64_t v1573;
  uint64_t v1574;
  unint64_t v1575;
  uint64_t v1576;
  unint64_t v1577;
  unint64_t v1578;
  unint64_t v1579;
  unint64_t v1580;
  uint64_t v1581;
  unint64_t v1582;
  unint64_t v1583;
  unint64_t v1584;
  uint64_t v1585;
  unint64_t v1586;
  unint64_t v1587;
  unint64_t v1588;
  unint64_t v1589;
  unint64_t v1590;
  unint64_t v1591;
  unint64_t v1592;
  uint64_t v1593;
  unint64_t v1594;
  unint64_t v1595;
  unint64_t v1596;
  uint64_t v1597;
  unint64_t v1598;
  unint64_t v1599;
  unint64_t v1600;
  unint64_t v1601;
  uint64_t *v1602;
  unint64_t *v1603;
  unint64_t v1604;
  uint64_t v1605;
  int v1606;
  unint64_t v1607;
  int v1608;
  _QWORD *result;
  __int128 v1610;
  __int128 v1611;
  _QWORD *v1612;
  _QWORD *v1613;
  uint64_t v1614;
  __int128 v1615;
  __int128 v1616;
  unint64_t v1617;
  _QWORD *v1618;
  uint64_t v1619;
  __int128 v1620;
  __int128 v1621;
  _QWORD *v1622;
  _QWORD *v1623;
  _QWORD *v1624;
  _QWORD *v1625;
  void *v1626;
  _BYTE *v1627;
  uint64_t v1628;
  unint64_t v1629;
  uint64_t v1630;
  uint64_t v1631;
  int v1632;
  int v1633;
  int v1634;
  __int128 v1635;
  __int128 v1636;
  _QWORD *v1637;
  _QWORD *v1638;
  _QWORD *v1639;
  _QWORD *v1640;
  void *v1641;
  _BYTE *v1642;
  uint64_t v1643;
  uint64_t v1644;
  uint64_t v1645;
  int v1646;
  int v1647;
  int v1648;
  unsigned __int8 *v1649;
  uint64_t v1650;
  unsigned int v1651;
  uint64_t v1652;
  unint64_t v1653;
  unint64_t v1654;
  unint64_t v1655;
  unint64_t v1656;
  int v1657;
  int v1658;
  uint64_t v1659;
  uint64_t v1660;
  uint64_t v1661;
  uint64_t v1662;
  uint64_t v1663;
  uint64_t v1664;
  uint64_t v1665;
  uint64_t v1666;
  uint64_t v1667;
  uint64_t v1668;
  size_t v1669;
  unint64_t v1670;
  unint64_t v1671;
  unint64_t v1672;
  unint64_t v1673;
  unint64_t v1674;
  unint64_t v1675;
  unint64_t v1676;
  unint64_t v1677;
  uint64_t v1678;
  uint64_t v1679;
  uint64_t v1680;
  uint64_t v1681;
  size_t v1682;
  int v1683;
  uint64_t v1684;
  uint64_t v1685;
  uint64_t v1686;
  uint64_t v1687;
  size_t v1688;
  size_t v1689;
  uint64_t v1690;
  uint64_t v1691;
  uint64_t v1692;
  uint64_t v1693;
  uint64_t v1694;
  size_t v1695;
  uint64_t v1696;
  uint64_t v1697;
  size_t v1698;
  size_t v1699;
  uint64_t v1700;
  unint64_t v1701;
  size_t v1702;
  uint64_t v1703;
  size_t v1704;
  uint64_t v1705;
  size_t v1706;
  unsigned int v1707;
  size_t v1708;
  uint64_t v1709;
  unsigned int v1710;
  uint64_t v1711;
  uint64_t v1712;
  size_t v1713;
  uint64_t v1714;
  size_t __n;
  unsigned int v1716;
  size_t v1717;
  unsigned int v1718;
  uint64_t v1719;
  uint64_t v1720;
  uint64_t v1721;
  unsigned int v1722;
  unsigned int v1723;
  uint64_t v1724;
  uint64_t v1725;
  uint64_t v1726;
  unsigned int v1727;
  unsigned int v1728;
  uint64_t v1729;
  uint64_t v1730;
  uint64_t v1731;
  unint64_t v1732;
  unint64_t v1733;
  unint64_t v1734;
  unint64_t v1735;
  unint64_t v1736;
  unint64_t v1737;
  unint64_t v1738;
  unint64_t v1739;
  unint64_t v1740;
  unint64_t v1741;
  unint64_t v1742;
  unint64_t v1743;
  unint64_t v1744;
  unint64_t v1745;
  unint64_t v1746;
  unint64_t v1747;
  unint64_t v1748;
  unint64_t v1749;
  unint64_t v1750;
  unint64_t v1751;
  unint64_t v1752;
  unint64_t v1753;
  unint64_t v1754;
  unint64_t v1755;
  unint64_t v1756;
  unint64_t v1757;
  size_t v1758;
  size_t v1759;
  size_t v1760;
  unint64_t v1761;
  uint64_t v1762;
  size_t v1763;
  unint64_t v1764;
  uint64_t v1765;
  size_t v1766;
  uint64_t v1767;
  uint64_t v1768;
  int v1769;
  uint64_t v1770;
  uint64_t v1771;
  uint64_t v1772;
  uint64_t v1773;
  uint64_t v1774;
  uint64_t v1775;
  uint64_t v1776;
  char v1777;
  uint64_t v1778;
  uint64_t v1779;
  uint64_t v1780;
  unint64_t v1781;
  unint64_t v1782;
  unint64_t v1783;
  uint64_t v1784;
  size_t v1785;
  unint64_t v1786;
  uint64_t v1787;
  unint64_t v1788;
  uint64_t v1789;
  unint64_t v1790;
  unint64_t v1791;
  unint64_t v1792;
  unint64_t v1793;
  uint64_t v1794;
  _QWORD *v1795;
  _QWORD *v1796;
  _QWORD *v1797;
  _QWORD *v1798;
  _QWORD *v1799;
  _QWORD *v1800;
  _QWORD *v1801;
  _QWORD *v1802;
  _QWORD *v1803;
  _QWORD *v1804;
  _QWORD *v1805;
  unint64_t v1806;
  uint64_t v1807;
  unint64_t v1808;
  uint64_t v1809;
  unint64_t v1810;
  uint64_t v1811;
  uint64_t v1812;
  uint64_t v1813;
  uint64_t v1814;
  size_t v1815;
  size_t v1816;
  size_t v1817;
  uint64_t v1818;
  unsigned int v1819;
  size_t v1820;
  size_t v1821;
  size_t v1822;
  size_t v1823;
  uint64_t v1824;
  uint64_t v1825;
  uint64_t v1826;
  uint64_t v1827;
  unint64_t v1828;
  uint64_t v1829;
  uint64_t v1830;
  size_t v1831;
  unint64_t v1832;
  unsigned int v1833;
  int v1834;
  size_t v1835;
  uint64_t v1836;
  uint64_t v1837;
  uint64_t v1838;
  size_t v1839;
  unint64_t v1840;
  size_t v1841;
  size_t v1842;
  unint64_t v1843;
  uint64_t v1844;
  uint64_t v1845;
  unint64_t v1846;
  uint64_t v1847;
  uint64_t v1848;
  uint64_t v1849;
  uint64_t v1850;
  uint64_t v1851;
  uint64_t v1852;
  uint64_t v1853;
  uint64_t v1854;
  uint64_t v1855;
  uint64_t v1856;
  uint64_t v1857;
  unint64_t v1858;
  unint64_t v1859;
  size_t v1860;
  uint64_t v1861;
  unint64_t v1862;
  void *v1863;
  const void *v1864;
  unint64_t v1865;
  uint64_t v1867;
  _QWORD *v1868;
  uint64_t v1869;
  uint64_t v1870;
  const void *v1871;
  void *v1872;
  uint64_t v1873;
  uint64_t v1874;
  unint64_t v1875;
  uint64_t v1876;
  uint64_t v1877;

  if (a1 == a2)
    goto LABEL_2193;
  v1780 = a3;
  v1768 = *(_QWORD *)(a3 + 16);
  v1767 = *(_QWORD *)(v1768 - 8);
  v1808 = *(_QWORD *)(v1767 + 64);
  v1773 = sub_21D7C4668();
  v3 = *(_QWORD *)(v1773 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v1814 = v4 + 16;
  v1819 = *(_DWORD *)(v3 + 84);
  v1765 = v3;
  v5 = *(_QWORD *)(v3 + 64);
  v1760 = v5;
  if (v1819)
    v6 = v5;
  else
    v6 = v5 + 1;
  v1849 = v4 | 7;
  v1730 = sub_21D7BF754();
  v7 = *(_QWORD *)(v1730 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v1851 = v8 | 7;
  v9 = v4 | 7 | v8;
  v1724 = sub_21D7C3840();
  v10 = *(_QWORD *)(v1724 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v1729 = sub_21D7C3804();
  v12 = *(_QWORD *)(v1729 - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v14 = v13;
  v15 = v13 | v11;
  v16 = v9 | v15;
  v1854 = v4;
  v1824 = v4 + 40;
  v17 = *(_DWORD *)(v7 + 84);
  if (v17)
    v18 = v17 - 1;
  else
    v18 = 0;
  v1723 = v18;
  if (v18 <= 0x7FFFFFFE)
    v19 = 2147483646;
  else
    v19 = v18;
  v1834 = v19;
  v1728 = *(_DWORD *)(v12 + 84);
  v1722 = *(_DWORD *)(v10 + 84);
  if (v1728 <= v1722)
    v20 = *(_DWORD *)(v10 + 84);
  else
    v20 = *(_DWORD *)(v12 + 84);
  v1833 = v20;
  v1718 = *(_DWORD *)(v7 + 84);
  v1726 = v8 + 113;
  v21 = (v8 + 113) & ~v8;
  v1847 = v8;
  v1712 = v7;
  v1720 = v10;
  v1721 = *(_QWORD *)(v1729 - 8);
  v1725 = *(_QWORD *)(v10 + 64) + v13;
  v1830 = *(_QWORD *)(v12 + 64);
  if (v17)
    v22 = *(_QWORD *)(v7 + 64);
  else
    v22 = *(_QWORD *)(v7 + 64) + 1;
  v1817 = v22;
  v1731 = v16 + 1;
  v1858 = ((v4 + 40) & ~v4) + v6;
  v1842 = v6;
  v1870 = v9 | v15;
  v1875 = (v1858 + 7) & 0xFFFFFFFFFFFFFFF8;
  v1856 = v8 + 40;
  v1820 = v22 + v21;
  v23 = v22 + v21 + ((v8 + 40 + ((((v1875 + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~(v8 | 7));
  v1826 = (v1725 & ~(unint64_t)v13) + v1830;
  if (v20)
    v24 = (v1725 & ~(unint64_t)v13) + v1830;
  else
    v24 = (v1725 & ~(unint64_t)v13) + v1830 + 1;
  v1822 = v24;
  v1810 = v24 + 1;
  v25 = v24 + 1 + ((v15 + 160) & ~v15);
  if (v23 <= v25)
    v23 = v25;
  if (v23 <= 0x30)
    v23 = 48;
  v1764 = v23;
  __n = v23 + 1;
  v1841 = v23 + 1 + ((v16 + 1) & ~v16);
  v1772 = sub_21D7C3F6C();
  v26 = *(_QWORD *)(v1772 - 8);
  v27 = *(unsigned __int8 *)(v26 + 80);
  v1770 = (v27 | 7) + 58;
  v1774 = v27 | 7;
  v28 = (v1770 + ((v1841 + (((v9 | v15) + v6 + ((v4 + 16) & ~v4)) & ~(v9 | v15)) + 11) & 0xFFFFFFFFFFFFFFF8)) & ~(v27 | 7);
  v29 = *(_DWORD *)(v26 + 84);
  v30 = v29 - 1;
  if (!v29)
    v30 = 0;
  v1769 = v30;
  v1727 = *(_DWORD *)(v26 + 84);
  v1771 = v27 + 16;
  v1776 = *(unsigned __int8 *)(v26 + 80);
  v1719 = *(_QWORD *)(v1772 - 8);
  v31 = *(_QWORD *)(v26 + 64);
  if (!v29)
    ++v31;
  v1717 = v31;
  v32 = ((v27 + 16) & ~v27) + v31;
  v1709 = sub_21D7C4314();
  v33 = *(_DWORD *)(*(_QWORD *)(v1709 - 8) + 80);
  v34 = *(_QWORD *)(v1709 - 8);
  v1813 = v34;
  v1697 = sub_21D7BF964();
  v35 = *(_QWORD *)(v1697 - 8);
  v36 = *(unsigned __int8 *)(v35 + 80);
  v1867 = v16 | v14 | v33 | v36;
  v1766 = v32;
  v1862 = v33 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v1818 = v33;
  v1860 = *(_QWORD *)(v34 + 64) + ((v33 + 65) & ~(unint64_t)v33);
  v1839 = v6 + 7;
  v37 = (v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 23) & 0xFFFFFFFFFFFFFFF8;
  v1762 = v33 + 16;
  v1806 = (v1860 + ((v1762 + ((v39 + 15) & 0xFFFFFFFFFFFFFFF8)) & v1862)) & 0xFFFFFFFFFFFFFFF8;
  v1837 = v15 + 16;
  v1711 = v14 + 8;
  v1778 = v14;
  v40 = v1830 + ((v14 + 8) & ~v14);
  v41 = v14 | 7;
  v42 = v1822 + (v14 | 7);
  if (v1819)
    v43 = v1819 - 1;
  else
    v43 = 0;
  v1792 = v38 + 16;
  v44 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v45 = v1810 + v36 + ((v38 + 16 + v15) & ~v15);
  v1716 = v43;
  v1683 = v1834 - 1;
  if (v43 <= v1834 - 1)
    v46 = v1834 - 1;
  else
    v46 = v43;
  if (v46 <= 0x7FFFFFFF)
    v46 = 0x7FFFFFFF;
  v47 = v1833 - 1;
  if (!v1833)
    v47 = 0;
  if (v47 <= v46)
    v48 = v46;
  else
    v48 = v47;
  v1707 = v48;
  v1788 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v1831 = v44 + 17;
  v49 = v8 | 7;
  v1694 = v1851 + 23;
  v1790 = v1851
        + 23
        + v44
        + 17
        + ((v1814 + ((((((v1875 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v1849);
  v1815 = v40;
  v50 = v40 + v1851;
  v1835 = v1820 + v1849;
  v1786 = (v44 + 47) & 0xFFFFFFFFFFFFFFF8;
  v1704 = v1786 + 16;
  v51 = v1786 + 16 + v1849;
  v52 = v1786
      + 24
      + ((v51
        + ((v51
          + ((v1820
            + v1849
            + ((v40
              + v49
              + ((v1822 + (v14 | 7) + ((v15 + 16 + ((v1806 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & ~(v14 | 7))) & ~v49)) & ~v1849)) & ~v1849)) & ~v1849);
  v1812 = *(unsigned __int8 *)(v35 + 80);
  v1696 = *(_QWORD *)(v1697 - 8);
  v1692 = *(_QWORD *)(v35 + 64) + 7;
  v1844 = v14 | 7;
  v53 = ((v42 + ((v1820 + v15 + ((v1856 + ((v1692 + (v45 & ~v36)) & 0xFFFFFFFFFFFFFFF8)) & ~v1851)) & ~v15)) & ~v41)
      + v40;
  v54 = (v1788 + 23) & 0xFFFFFFFFFFFFFFF8;
  v1705 = v1851 + 41;
  v55 = v1822 + 7;
  v56 = ((((v1822 + 7 + ((v1820 + v15 + ((v49 + 41 + ((v39 + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v49)) & ~v15)) & 0xFFFFFFFFFFFFFFF8)
        + 47) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v57 = v37 + 40;
  v58 = (v1870 + v57) & ~v1870;
  v1701 = v56 + v1870;
  v1702 = v1841 + 7;
  v1703 = v1870 + 8;
  v59 = v57 + v33;
  v1816 = v1820 + 7;
  v1783 = (v1820 + 7 + ((v57 + v1847) & ~v1851)) & 0xFFFFFFFFFFFFFFF8;
  v1688 = v1817 + v15;
  v60 = v1822 + v15;
  v1684 = v1822 + v15 + 1;
  v61 = v42;
  v62 = ((v1860 + 7 + (v59 & v1862)) & 0xFFFFFFFFFFFFFFF8) + 8;
  v1686 = v1851 + 17;
  v63 = v1820 + ((v1851 + 17 + v1875) & ~v1851);
  v1758 = v1820 + ((v1847 + 8) & ~v1851);
  if (v1758 <= v52)
    v64 = v52;
  else
    v64 = v1820 + ((v1847 + 8) & ~v1851);
  v1755 = v53;
  if (v64 <= v53)
    v64 = v53;
  v1759 = v56;
  if (v64 <= v56)
    v64 = v56;
  v1751 = ((v1870 + 8 + ((v1841 + 7 + ((v56 + v1870 + v58) & ~v1870)) & 0xFFFFFFFFFFFFFFF8)) & ~v1870) + v1841;
  if (v64 <= v1751)
    v64 = ((v1870 + 8 + ((v1841 + 7 + ((v56 + v1870 + v58) & ~v1870)) & 0xFFFFFFFFFFFFFFF8)) & ~v1870) + v1841;
  v1749 = ((((((v1783 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v64 <= v1749)
    v64 = ((((((v1783 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
  v1746 = ((v50 + ((v42 + ((v1684 + ((v1817 + v15 + ((v1792 + v1847) & ~v1847)) & ~v15)) & ~v15)) & ~v41)) & ~v1851)
        + v1820;
  if (v64 <= v1746)
    v64 = ((v50 + ((v42 + ((v1684 + ((v1817 + v15 + ((v1792 + v1847) & ~v1847)) & ~v15)) & ~v15)) & ~v41)) & ~v1851)
        + v1820;
  v1747 = (((((v1858 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v64 <= v1747)
    v64 = (((((v1858 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v1748 = v62;
  if (v64 <= v62)
    v64 = v62;
  v1737 = v63 + 1;
  if (v64 <= v63 + 1)
    v65 = v63 + 1;
  else
    v65 = v64;
  v1781 = v65;
  v1793 = (v1867 + v32 + v28) & ~v1867;
  v66 = (((((v1875 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v1828 = ((((v66 + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 41;
  v1691 = v15 + 40;
  v67 = ((v60
        + ((v15
          + 40
          + ((((((v66 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & ~v15)
      + v1822;
  v68 = (v54 + 23) & 0xFFFFFFFFFFFFFFF8;
  v69 = v68 + 8;
  v70 = ((v68 + 47) & 0xFFFFFFFFFFFFFFF8) + 40;
  v1706 = v1820 + v15;
  v1682 = ((v1820 + v15 + ((v70 + v1851) & ~v1851)) & ~v15) + v1822;
  v1699 = v1682 + 7;
  v1700 = v1847 + 8;
  v1690 = v15 + 24;
  v1763 = v50;
  v1761 = v1786 + 16 + v1849;
  v1756 = v1786 + 24;
  v71 = v1786
      + 24
      + ((v51 + ((v51 + ((v1835 + ((v50 + ((v61 + ((v15 + 24 + v1806) & ~v15)) & ~v41)) & ~v1851)) & ~v1849)) & ~v1849)) & ~v1849);
  v72 = (v1788 + 15) & 0xFFFFFFFFFFFFFFF8;
  v73 = v1854;
  v74 = ((v73 + 80) & ~v73) + v1842;
  v75 = ((v73 + 56) & ~v73) + v1842;
  v76 = (v1783 + 23) & 0xFFFFFFFFFFFFFFF8;
  v1687 = v15 + 18;
  v77 = v54 + 40;
  v78 = v72 + 16;
  v79 = v72 + 8;
  v80 = v1875 + 8;
  v81 = ((v1875 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  v82 = (((v1786 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v1714 = v15 + 8;
  v1708 = v1822 + v15;
  v1785 = v61;
  v1695 = v1815 + v1844;
  v83 = ((v1816
        + ((v1856
          + ((((v1815
              + 9
              + ((v1815
                + v1844
                + ((v61
                  + ((v60 + ((v15 + 8 + ((((v82 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & ~v15)) & ~v1844)) & ~v1844)) & 0xFFFFFFFFFFFFFFF8)
            + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v1851)) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v1685 = v1818 + 8;
  v1689 = v1860 + v15;
  v1693 = v15 + 9;
  v1713 = v1822 + 7;
  v1876 = v15;
  v1698 = v1822 + v1851;
  v84 = ((v1822
        + v1851
        + ((v1837
          + ((v55
            + ((v15
              + 9
              + ((((v55 + ((v1860 + v15 + ((v1818 + 8 + v82) & v1862)) & ~v15)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & ~v1851)
      + v1820;
  v85 = v1828;
  if (v1781 > v1828)
    v85 = v1781;
  v1733 = ((v1847 + 8 + ((v1682 + 7 + v58) & 0xFFFFFFFFFFFFFFF8)) & ~v1851) + v1820;
  v1734 = v67;
  if (v85 <= v67)
    v85 = v67;
  v1736 = v69;
  if (v85 <= v69)
    v85 = v69;
  if (v85 <= ((v1847 + 8 + ((v1682 + 7 + v58) & 0xFFFFFFFFFFFFFFF8)) & ~v1851) + v1820)
    v85 = ((v1847 + 8 + ((v1682 + 7 + v58) & 0xFFFFFFFFFFFFFFF8)) & ~v1851) + v1820;
  if (v85 <= v1831)
    v85 = v44 + 17;
  v1735 = v71;
  if (v85 <= v71)
    v85 = v71;
  v1732 = v78;
  if (v85 <= v78)
    v85 = v78;
  v1738 = ((v1858 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
  v1739 = ((v55
          + ((v15
            + 8
            + ((((((((((v76 + 25) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8)
              + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  if (v85 <= v1738)
    v85 = ((v1858 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
  v1740 = v74;
  if (v85 <= v74)
    v85 = v74;
  v1742 = v75;
  if (v85 <= v75)
    v85 = v75;
  v1741 = ((((v1839 + ((v1824 + (v55 & 0xFFFFFFFFFFFFFFF8)) & ~v1854)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  if (v85 <= v1741)
    v85 = ((((v1839 + ((v1824 + (v55 & 0xFFFFFFFFFFFFFFF8)) & ~v1854)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  v1744 = ((v15 + 18 + v76) & ~v15) + v1822;
  if (v85 <= v1744)
    v85 = ((v15 + 18 + v76) & ~v15) + v1822;
  if (v85 <= ((v55
              + ((v15
                + 8
                + ((((((((((v76 + 25) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                    + 23) & 0xFFFFFFFFFFFFFFF8)
                  + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & 0xFFFFFFFFFFFFFFF8)
            + 16)
    v85 = ((v55
          + ((v15
            + 8
            + ((((((((((v76 + 25) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8)
              + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  v1743 = v77;
  if (v85 <= v77)
    v85 = v77;
  v1745 = v79;
  if (v85 <= v79)
    v85 = v79;
  v1782 = v70;
  if (v85 <= v70)
    v85 = v70;
  v1752 = v1788 + 8;
  if (v85 <= v1788 + 8)
    v85 = v1788 + 8;
  v1754 = v80;
  if (v85 <= v80)
    v85 = v80;
  v1757 = v81;
  if (v85 <= v81)
    v85 = v81;
  if (v85 <= v1858)
    v85 = v1858;
  v86 = v83;
  if (v85 <= v83)
    v85 = v83;
  v1753 = (v1790 & ~v1851) + v1820;
  if (v85 <= v1753)
    v85 = (v1790 & ~v1851) + v1820;
  v1750 = v84;
  if (v85 <= v84)
    v85 = v84;
  if (v85 <= 8)
    v85 = 8;
  v1791 = v85;
  v87 = v85 + 8;
  v88 = ((v85 + 8 + v1793) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v88 <= v1808)
    v88 = v1808;
  if (v88 <= 8)
    v89 = 8;
  else
    v89 = v88;
  v1710 = *(_DWORD *)(v1813 + 84);
  if (*((unsigned __int8 *)a1 + v89) >= 4u)
  {
    if (v89 <= 3)
      v90 = v89;
    else
      v90 = 4;
    __asm { BR              X12 }
  }
  v91 = v1854;
  v92 = v1778;
  v1807 = ~v1854;
  v1809 = ~v1870;
  v1789 = ~v1851;
  v1779 = ~v1847;
  v93 = ~v1876;
  v1794 = ~v1774;
  v1787 = ~v1776;
  v94 = ~v1867;
  v1775 = ~v1818;
  v1845 = ~v1844;
  v95 = ~v1849;
  v96 = ~v1812;
  v1777 = 8 * v1826;
  v1784 = ~v92;
  switch(*((_BYTE *)a1 + v89))
  {
    case 0:
      (*(void (**)(_QWORD *, uint64_t))(v1767 + 8))(a1, v1768);
      goto LABEL_391;
    case 1:
      v1678 = ~v1867;
      v1680 = ~v1876;
      v97 = v89;
      swift_bridgeObjectRelease();
      v98 = ((unint64_t)a1 + v1854 + 16) & v1807;
      if (!__swift_getEnumTagSinglePayload(v98, 1, v1773))
        (*(void (**)(uint64_t, uint64_t))(v1765 + 8))(v98, v1773);
      v99 = (unsigned __int8 *)((v98 + v1842 + v1870) & v1809);
      if (*v99 > 2u)
        goto LABEL_164;
      v100 = (unint64_t)&v99[v1731] & v1809;
      v101 = *(unsigned __int8 *)(v100 + v1764);
      if (v101 > 2)
        goto LABEL_164;
      if (v101 == 2)
      {
        if (*(_QWORD *)(((unint64_t)&v99[v1731] & v1809) + 8) >= 0xFFFFFFFFuLL)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(((unint64_t)&v99[v1731] & v1809) + 0x38))
            __swift_destroy_boxed_opaque_existential_1(v100 + 32);
        }
        v108 = (v100 + 79) & 0xFFFFFFFFFFFFFFF8;
        if (*(_QWORD *)(v108 + 8) >= 0xFFFFFFFFuLL)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(v108 + 56))
            __swift_destroy_boxed_opaque_existential_1(v108 + 32);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v109 = (v1714 + ((((v108 + 79) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v1680;
        if (v1833)
        {
          v110 = v1728;
          if (v1722 >= v1728)
          {
            v111 = v109;
            v110 = v1722;
            v112 = v1724;
          }
          else
          {
            v111 = (v1725 + v109) & v1784;
            v112 = v1729;
          }
          EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v111, v110, v112);
        }
        else
        {
          if (!*(_BYTE *)(v109 + v1826))
          {
LABEL_163:
            (*(void (**)(unint64_t, uint64_t))(v1720 + 8))(v109, v1724);
            (*(void (**)(unint64_t, uint64_t))(v1721 + 8))((v1725 + v109) & v1784, v1729);
            goto LABEL_164;
          }
          v113 = (*(unsigned __int8 *)(v109 + v1826) - 1) << v1777;
          if (v1826 > 3)
            v113 = 0;
          if ((_DWORD)v1826)
          {
            if (v1826 <= 3)
              v114 = v1826;
            else
              v114 = 4;
            __asm { BR              X11 }
          }
          EnumTagSinglePayload = v113 + 1;
        }
        if (EnumTagSinglePayload)
          goto LABEL_164;
        goto LABEL_163;
      }
      if (v101 != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_164;
      }
      __swift_destroy_boxed_opaque_existential_1((unint64_t)&v99[v1731] & v1809);
      v102 = (v1824 + v100) & v1807;
      if (!__swift_getEnumTagSinglePayload(v102, 1, v1773))
        (*(void (**)(uint64_t, uint64_t))(v1765 + 8))(v102, v1773);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v103 = (((((v1839 + v102) & 0xFFFFFFFFFFFFFFF8) + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
      if (*(_QWORD *)(v103 + 24) >= 0xFFFFFFFFuLL)
        __swift_destroy_boxed_opaque_existential_1(v103);
      v104 = (v1856 + v103) & v1789;
      if (v1723 >= 0x7FFFFFFF)
      {
        v107 = (v1726 + v104) & v1779;
        if (__swift_getEnumTagSinglePayload(v107, v1718, v1730) > 1)
          goto LABEL_164;
        v106 = v87;
        goto LABEL_149;
      }
      v105 = *(_QWORD *)(((v1856 + v103) & v1789) + 0x10);
      if (v105 >= 0xFFFFFFFF)
        LODWORD(v105) = -1;
      if ((int)v105 - 1 < 0)
      {
        v106 = v87;
        v107 = (v1726 + v104) & v1779;
LABEL_149:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v87 = v106;
        if (!__swift_getEnumTagSinglePayload(v107, 1, v1730))
          (*(void (**)(uint64_t, uint64_t))(v1712 + 8))(v107, v1730);
      }
LABEL_164:
      v116 = (unint64_t)&v99[v1841 + 11] & 0xFFFFFFFFFFFFFFF8;
      if (*(_QWORD *)(v116 + 24) >= 0xFFFFFFFFuLL)
      {
        __swift_destroy_boxed_opaque_existential_1((unint64_t)&v99[v1841 + 11] & 0xFFFFFFFFFFFFFFF8);
        swift_bridgeObjectRelease();
      }
      v117 = (v1770 + v116) & v1794;
      if (v1769 < 0)
      {
        v118 = (v1771 + v117) & v1787;
        v89 = v97;
        if (__swift_getEnumTagSinglePayload(v118, v1727, v1772) <= 1)
        {
LABEL_170:
          swift_bridgeObjectRelease();
          if (!__swift_getEnumTagSinglePayload(v118, 1, v1772))
            (*(void (**)(uint64_t, uint64_t))(v1719 + 8))(v118, v1772);
        }
      }
      else
      {
        v89 = v97;
        if (*(_QWORD *)(((v1770 + v116) & v1794) + 8) >= 0xFFFFFFFFuLL)
        {
          v118 = (v1771 + v117) & v1787;
          goto LABEL_170;
        }
      }
      v119 = v117 + v1766 + v1867;
      v120 = v119 & v1678;
      v1669 = v119 & v1678;
      v1670 = v87;
      switch(*(_BYTE *)((v119 & v1678) + v1791))
      {
        case 0:
          v125 = v1773;
          if (!__swift_getEnumTagSinglePayload(v120, 1, v1773))
            (*(void (**)(unint64_t, uint64_t))(v1765 + 8))(v120, v1773);
          v122 = ~v1849;
          v126 = v1839;
          v127 = (v1839 + v120) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v127);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v128 = (v1762
                + ((((((v127 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v1862;
          if (v1710 > 0x7FFFFFFE)
          {
            v131 = (v128 + 23) & 0xFFFFFFFFFFFFFFF8;
            v130 = v1784;
            if (__swift_getEnumTagSinglePayload((v1818 + ((v131 + 23) & 0xFFFFFFFFFFFFFFF8) + 33) & v1775, v1710, v1709))goto LABEL_488;
            goto LABEL_487;
          }
          LODWORD(v129) = -1;
          if (*(_QWORD *)(((v1762
                           + ((((((v127 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v1862)
                         + 8) < 0xFFFFFFFFuLL)
            v129 = *(_QWORD *)(((v1762
                               + ((((((v127 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v1862)
                             + 8);
          v130 = v1784;
          if ((v129 + 1) <= 1)
          {
            v131 = (v128 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_487:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v296 = (id *)((v131 + 47) & 0xFFFFFFFFFFFFFFF8);

            (*(void (**)(unint64_t, uint64_t))(v1813 + 8))(((unint64_t)v296 + v1818 + 9) & v1775, v1709);
          }
LABEL_488:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v297 = (v1837 + ((((v128 + v1860) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v1680;
          if (v1833)
            goto LABEL_521;
          if (!*(_BYTE *)(v297 + v1826))
            goto LABEL_1155;
          v298 = (*(unsigned __int8 *)(v297 + v1826) - 1) << v1777;
          v299 = v1826;
          if (v1826 > 3)
            v298 = 0;
          if ((_DWORD)v1826)
          {
            if (v1826 <= 3)
              v300 = v1826;
            else
              v300 = 4;
            __asm { BR              X11 }
          }
          goto LABEL_1153;
        case 1:
        case 0x17:
          v122 = ~v1849;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v123 = (v1726 + ((v1851 + v120 + 8) & v1789)) & v1779;
          v124 = v1831;
          if (!__swift_getEnumTagSinglePayload(v123, 1, v1730))
            goto LABEL_2097;
          goto LABEL_319;
        case 2:
        case 6:
        case 7:
        case 0xB:
        case 0xE:
        case 0xF:
        case 0x12:
        case 0x19:
        case 0x1A:
        case 0x1B:
        case 0x1C:
        case 0x1F:
        case 0x2A:
        case 0x2C:
        case 0x2E:
        case 0x2F:
        case 0x30:
        case 0x31:
        case 0x34:
          v122 = ~v1849;
          goto LABEL_318;
        case 3:
          if (!__swift_getEnumTagSinglePayload(v120, 1, v1773))
            (*(void (**)(unint64_t, uint64_t))(v1765 + 8))(v120, v1773);
          v132 = (v1839 + v120) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v132);
          v133 = (v132 + 47) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          v134 = (v1837 + v133) & v1680;
          v122 = ~v1849;
          if (v1833)
          {
            v135 = v1728;
            if (v1722 >= v1728)
            {
              v136 = (v1837 + v133) & v1680;
              v135 = v1722;
              v137 = v1724;
            }
            else
            {
              v136 = (v1725 + v134) & v1784;
              v137 = v1729;
            }
            v340 = __swift_getEnumTagSinglePayload(v136, v135, v137);
            v124 = v1831;
          }
          else
          {
            v124 = v1831;
            if (!*(_BYTE *)(v134 + v1826))
              goto LABEL_1334;
            v319 = (*(unsigned __int8 *)(v134 + v1826) - 1) << v1777;
            if (v1826 > 3)
              v319 = 0;
            if ((_DWORD)v1826)
            {
              if (v1826 <= 3)
                v320 = v1826;
              else
                v320 = 4;
              __asm { BR              X11 }
            }
            v340 = v319 + 1;
          }
          if (v340)
            goto LABEL_1335;
LABEL_1334:
          (*(void (**)(unint64_t, uint64_t))(v1720 + 8))(v134, v1724);
          (*(void (**)(unint64_t, uint64_t))(v1721 + 8))((v1725 + v134) & v1784, v1729);
LABEL_1335:
          v1059 = (v1810 + v1812 + v134) & ~v1812;
          (*(void (**)(unint64_t, uint64_t))(v1696 + 8))(v1059, v1697);
          v1060 = (v1692 + v1059) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v1060 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v1060);
          v1061 = (v1856 + v1060) & v1789;
          if (v1723 >= 0x7FFFFFFF)
          {
            v1063 = (v1726 + v1061) & v1779;
            if (__swift_getEnumTagSinglePayload(v1063, v1718, v1730) > 1)
              goto LABEL_1345;
            goto LABEL_1343;
          }
          v1062 = *(_QWORD *)(((v1856 + v1060) & v1789) + 0x10);
          if (v1062 >= 0xFFFFFFFF)
            LODWORD(v1062) = -1;
          if ((int)v1062 - 1 < 0)
          {
            v1063 = (v1726 + v1061) & v1779;
LABEL_1343:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!__swift_getEnumTagSinglePayload(v1063, 1, v1730))
              (*(void (**)(uint64_t, uint64_t))(v1712 + 8))(v1063, v1730);
          }
LABEL_1345:
          v1064 = (v1706 + v1061) & v1680;
          if (v1833)
          {
            v1065 = v1728;
            if (v1722 >= v1728)
            {
              v1066 = (v1706 + v1061) & v1680;
              v1065 = v1722;
              v1067 = v1724;
            }
            else
            {
              v1066 = (v1725 + v1064) & v1784;
              v1067 = v1729;
            }
            v1070 = __swift_getEnumTagSinglePayload(v1066, v1065, v1067);
          }
          else
          {
            if (!*(_BYTE *)(v1064 + v1826))
              goto LABEL_1647;
            v1068 = (*(unsigned __int8 *)(v1064 + v1826) - 1) << v1777;
            if (v1826 > 3)
              v1068 = 0;
            if ((_DWORD)v1826)
            {
              if (v1826 <= 3)
                v1069 = v1826;
              else
                v1069 = 4;
              __asm { BR              X11 }
            }
            v1070 = v1068 + 1;
          }
          if (v1070)
            goto LABEL_1648;
LABEL_1647:
          (*(void (**)(size_t, uint64_t))(v1720 + 8))(v1064, v1724);
          (*(void (**)(size_t, uint64_t))(v1721 + 8))((v1725 + v1064) & v1784, v1729);
LABEL_1648:
          v1212 = (uint64_t *)((v1785 + v1064) & v1845);
          if ((v1728 & 0x80000000) != 0)
          {
            v1214 = __swift_getEnumTagSinglePayload(((unint64_t)v1212 + v1711) & v1784, v1728, v1729);
          }
          else
          {
            v1213 = *v1212;
            if ((unint64_t)*v1212 >= 0xFFFFFFFF)
              LODWORD(v1213) = -1;
            v1214 = v1213 + 1;
          }
          v91 = v1854;
          if (v1214)
            goto LABEL_319;
          swift_bridgeObjectRelease();
          v1080 = (uint64_t)v1212 + v1711;
          goto LABEL_1655;
        case 4:
          if (!__swift_getEnumTagSinglePayload(v120, 1, v1773))
            (*(void (**)(unint64_t, uint64_t))(v1765 + 8))(v120, v1773);
          v138 = (v1839 + v120) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v138);
          swift_bridgeObjectRelease();
          v139 = (((v138 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v140 = (v139 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v140 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1((v139 + 47) & 0xFFFFFFFFFFFFFFF8);
          v122 = ~v1849;
          v141 = (v1705 + v140) & v1789;
          if (v1723 >= 0x7FFFFFFF)
          {
            v143 = (v1726 + v141) & v1779;
            v124 = v1831;
            if (__swift_getEnumTagSinglePayload(v143, v1718, v1730) > 1)
              goto LABEL_500;
            goto LABEL_498;
          }
          v142 = *(_QWORD *)(((v1705 + v140) & v1789) + 0x10);
          if (v142 >= 0xFFFFFFFF)
            LODWORD(v142) = -1;
          v124 = v1831;
          if ((int)v142 - 1 < 0)
          {
            v143 = (v1726 + v141) & v1779;
LABEL_498:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!__swift_getEnumTagSinglePayload(v143, 1, v1730))
              (*(void (**)(uint64_t, uint64_t))(v1712 + 8))(v143, v1730);
          }
LABEL_500:
          v301 = (v1706 + v141) & v1680;
          if (v1833)
          {
            v302 = v1728;
            if (v1722 >= v1728)
            {
              v303 = (v1706 + v141) & v1680;
              v302 = v1722;
              v304 = v1724;
            }
            else
            {
              v303 = (v1725 + v301) & v1784;
              v304 = v1729;
            }
            v346 = __swift_getEnumTagSinglePayload(v303, v302, v304);
          }
          else
          {
            if (!*(_BYTE *)(v301 + v1826))
              goto LABEL_1413;
            v335 = (*(unsigned __int8 *)(v301 + v1826) - 1) << v1777;
            if (v1826 > 3)
              v335 = 0;
            if ((_DWORD)v1826)
            {
              if (v1826 <= 3)
                v336 = v1826;
              else
                v336 = 4;
              __asm { BR              X11 }
            }
            v346 = v335 + 1;
          }
          if (v346)
            goto LABEL_1414;
LABEL_1413:
          (*(void (**)(size_t, uint64_t))(v1720 + 8))(v301, v1724);
          (*(void (**)(size_t, uint64_t))(v1721 + 8))((v1725 + v301) & v1784, v1729);
LABEL_1414:
          v1088 = (v1713 + v301) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v1088 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v1088);
LABEL_1770:
          swift_bridgeObjectRelease();
          v91 = v1854;
          goto LABEL_319;
        case 5:
          if (!__swift_getEnumTagSinglePayload(v120, 1, v1773))
            (*(void (**)(unint64_t, uint64_t))(v1765 + 8))(v120, v1773);
          v144 = (v1839 + v120) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v144);
          v145 = (v1870 + v144 + 40) & v1809;
          v122 = ~v1849;
          if (v1716 == v1707)
          {
            v124 = v1831;
            if (v1819 < 2)
              goto LABEL_1203;
            v146 = v145;
            v147 = v1819;
            v148 = v1773;
LABEL_207:
            if (__swift_getEnumTagSinglePayload(v146, v147, v148) >= 2)
              goto LABEL_2048;
            goto LABEL_1203;
          }
          v305 = (v1839 + v145) & 0xFFFFFFFFFFFFFFF8;
          if (v1707 == 0x7FFFFFFF)
          {
            v124 = v1831;
            if (*(_QWORD *)(v305 + 24) < 0xFFFFFFFFuLL)
              goto LABEL_2048;
          }
          else
          {
            v348 = (v1851
                  + ((((((v305 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                  + 65) & v1789;
            v124 = v1831;
            if (v1683 != v1707)
            {
              if (v1833 < 2)
                goto LABEL_1203;
              v146 = (v1706 + v348) & v1680;
              v147 = v1722;
              if (v1722 >= v1728)
              {
                v148 = v1724;
              }
              else
              {
                v146 = (v1725 + v146) & v1784;
                v147 = v1728;
                v148 = v1729;
              }
              goto LABEL_207;
            }
            if (v1723 > 0x7FFFFFFE)
            {
              v961 = __swift_getEnumTagSinglePayload((v1726 + v348) & v1779, v1718, v1730);
              if (v961 < 2)
                goto LABEL_1203;
              v351 = v961 - 1;
            }
            else
            {
              v349 = *(_QWORD *)(v348 + 16);
              if (v349 >= 0xFFFFFFFF)
                LODWORD(v349) = -1;
              v350 = v349 - 1;
              if (v350 < 0)
                v350 = -1;
              v351 = v350 + 1;
            }
            if (v351 >= 2)
              goto LABEL_2048;
          }
LABEL_1203:
          if (!__swift_getEnumTagSinglePayload(v145, 1, v1773))
            (*(void (**)(uint64_t, uint64_t))(v1765 + 8))(v145, v1773);
          __swift_destroy_boxed_opaque_existential_1((v1839 + v145) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          v962 = (((((v1839 + v145) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v963 = (v962 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v963 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1((v962 + 47) & 0xFFFFFFFFFFFFFFF8);
          v964 = (v1705 + v963) & v1789;
          if (v1723 >= 0x7FFFFFFF)
          {
            v966 = (v1726 + v964) & v1779;
            if (__swift_getEnumTagSinglePayload(v966, v1718, v1730) > 1)
              goto LABEL_1215;
            goto LABEL_1213;
          }
          v965 = *(_QWORD *)(((v1705 + v963) & v1789) + 0x10);
          if (v965 >= 0xFFFFFFFF)
            LODWORD(v965) = -1;
          if ((int)v965 - 1 < 0)
          {
            v966 = (v1726 + v964) & v1779;
LABEL_1213:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!__swift_getEnumTagSinglePayload(v966, 1, v1730))
              (*(void (**)(uint64_t, uint64_t))(v1712 + 8))(v966, v1730);
          }
LABEL_1215:
          v967 = (v1706 + v964) & v1680;
          if (v1833)
          {
            v968 = v1728;
            if (v1722 >= v1728)
            {
              v969 = v967;
              v968 = v1722;
              v970 = v1724;
            }
            else
            {
              v969 = (v1725 + v967) & v1784;
              v970 = v1729;
            }
            v973 = __swift_getEnumTagSinglePayload(v969, v968, v970);
          }
          else
          {
            if (!*(_BYTE *)(v967 + v1826))
              goto LABEL_2044;
            v971 = (*(unsigned __int8 *)(v967 + v1826) - 1) << v1777;
            if (v1826 > 3)
              v971 = 0;
            if ((_DWORD)v1826)
            {
              if (v1826 <= 3)
                v972 = v1826;
              else
                v972 = 4;
              __asm { BR              X11 }
            }
            v973 = v971 + 1;
          }
          if (v973)
            goto LABEL_2045;
LABEL_2044:
          (*(void (**)(uint64_t, uint64_t))(v1720 + 8))(v967, v1724);
          (*(void (**)(uint64_t, uint64_t))(v1721 + 8))((v1725 + v967) & v1784, v1729);
LABEL_2045:
          if (*(_QWORD *)(((v1713 + v967) & 0xFFFFFFFFFFFFFFF8) + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1((v1713 + v967) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
LABEL_2048:
          v1411 = ~v1870;
          v1412 = (unsigned __int8 *)((v1701 + v145) & v1809);
          if (*v1412 > 2u)
            goto LABEL_2336;
          v1413 = (unint64_t)&v1412[v1731] & v1809;
          v1414 = *(unsigned __int8 *)(v1413 + v1764);
          if (v1414 > 2)
            goto LABEL_2336;
          if (v1414 != 2)
          {
            if (v1414 != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v1411 = ~v1870;
              goto LABEL_2336;
            }
            __swift_destroy_boxed_opaque_existential_1((unint64_t)&v1412[v1731] & v1809);
            v1415 = (v1824 + v1413) & v1807;
            if (!__swift_getEnumTagSinglePayload(v1415, 1, v1773))
              (*(void (**)(uint64_t, uint64_t))(v1765 + 8))(v1415, v1773);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v1416 = (((((v1839 + v1415) & 0xFFFFFFFFFFFFFFF8) + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
            if (*(_QWORD *)(v1416 + 24) >= 0xFFFFFFFFuLL)
              __swift_destroy_boxed_opaque_existential_1(v1416);
            v1417 = (v1856 + v1416) & v1789;
            if (v1723 >= 0x7FFFFFFF)
            {
              v1419 = (v1726 + v1417) & v1779;
              v1411 = ~v1870;
              if (__swift_getEnumTagSinglePayload(v1419, v1718, v1730) > 1)
                goto LABEL_2336;
            }
            else
            {
              v1418 = *(_QWORD *)(((v1856 + v1416) & v1789) + 0x10);
              if (v1418 >= 0xFFFFFFFF)
                LODWORD(v1418) = -1;
              v1411 = ~v1870;
              if ((int)v1418 - 1 >= 0)
                goto LABEL_2336;
              v1419 = (v1726 + v1417) & v1779;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v1411 = ~v1870;
            if (!__swift_getEnumTagSinglePayload(v1419, 1, v1730))
              (*(void (**)(uint64_t, uint64_t))(v1712 + 8))(v1419, v1730);
LABEL_2336:
            swift_bridgeObjectRelease();
            v1649 = (unsigned __int8 *)((v1703 + ((unint64_t)&v1412[v1702] & 0xFFFFFFFFFFFFFFF8)) & v1411);
            v91 = v1854;
            if (*v1649 > 2u)
              goto LABEL_319;
            v1650 = (unint64_t)&v1649[v1731] & v1809;
            v1651 = *(unsigned __int8 *)(v1650 + v1764);
            if (v1651 > 2)
              goto LABEL_319;
            if (v1651 == 2)
            {
              if (*(_QWORD *)(v1650 + 8) >= 0xFFFFFFFFuLL)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(_QWORD *)(v1650 + 56))
                  __swift_destroy_boxed_opaque_existential_1(v1650 + 32);
              }
              v1655 = (v1650 + 79) & 0xFFFFFFFFFFFFFFF8;
              if (*(_QWORD *)(v1655 + 8) >= 0xFFFFFFFFuLL)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(_QWORD *)(v1655 + 56))
                  __swift_destroy_boxed_opaque_existential_1(v1655 + 32);
              }
              swift_bridgeObjectRelease();
              v1656 = (((v1655 + 79) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
              swift_bridgeObjectRelease();
              v196 = (v1714 + v1656) & v1680;
              if (v1833)
              {
                v197 = v1722;
                if (v1722 >= v1728)
                {
                  v199 = (v1714 + v1656) & v1680;
LABEL_1382:
                  v1078 = v1724;
                }
                else
                {
                  v199 = (v1725 + v196) & v1784;
                  v197 = v1728;
LABEL_1380:
                  v1078 = v1729;
                }
                if (__swift_getEnumTagSinglePayload(v199, v197, v1078))
                  goto LABEL_319;
              }
              else if (*(_BYTE *)(v196 + v1826))
              {
                v1657 = (*(unsigned __int8 *)(v196 + v1826) - 1) << v1777;
                if (v1826 > 3)
                  v1657 = 0;
                if ((_DWORD)v1826)
                {
                  if (v1826 <= 3)
                    v1658 = v1826;
                  else
                    v1658 = 4;
                  __asm { BR              X11 }
                }
                v89 = v97;
                v124 = v1831;
                v91 = v1854;
                if (v1657 != -1)
                  goto LABEL_319;
              }
LABEL_1394:
              (*(void (**)(unint64_t, uint64_t))(v1720 + 8))(v196, v1724);
              v1080 = v1725 + v196;
LABEL_1655:
              (*(void (**)(uint64_t, uint64_t))(v1721 + 8))(v1080 & v1784, v1729);
              goto LABEL_319;
            }
            if (v1651 == 1)
            {
              __swift_destroy_boxed_opaque_existential_1(v1650);
              v1652 = (v1824 + v1650) & v1807;
              if (!__swift_getEnumTagSinglePayload(v1652, 1, v1773))
                (*(void (**)(uint64_t, uint64_t))(v1765 + 8))(v1652, v1773);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v1653 = (((v1839 + v1652) & 0xFFFFFFFFFFFFFFF8) + 71) & 0xFFFFFFFFFFFFFFF8;
              swift_bridgeObjectRelease();
              v1654 = (v1653 + 23) & 0xFFFFFFFFFFFFFFF8;
              if (*(_QWORD *)(v1654 + 24) >= 0xFFFFFFFFuLL)
                __swift_destroy_boxed_opaque_existential_1((v1653 + 23) & 0xFFFFFFFFFFFFFFF8);
              v1218 = v1856 + v1654;
LABEL_1667:
              v165 = v1218 & v1789;
              if (v1723 < 0x7FFFFFFF)
              {
LABEL_1668:
                v1219 = *(_QWORD *)(v165 + 16);
                if (v1219 >= 0xFFFFFFFF)
                  LODWORD(v1219) = -1;
                if ((int)v1219 - 1 < 0)
                  goto LABEL_2093;
                goto LABEL_319;
              }
LABEL_236:
              v123 = (v1726 + v165) & v1779;
              if (__swift_getEnumTagSinglePayload(v123, v1718, v1730) > 1)
                goto LABEL_319;
LABEL_2096:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (!__swift_getEnumTagSinglePayload(v123, 1, v1730))
LABEL_2097:
                (*(void (**)(uint64_t, uint64_t))(v1712 + 8))(v123, v1730);
              goto LABEL_319;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_1774:
            swift_bridgeObjectRelease();
            goto LABEL_319;
          }
          if (*(_QWORD *)(((unint64_t)&v1412[v1731] & v1809) + 8) >= 0xFFFFFFFFuLL)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(_QWORD *)(((unint64_t)&v1412[v1731] & v1809) + 0x38))
              __swift_destroy_boxed_opaque_existential_1(v1413 + 32);
          }
          v1420 = (v1413 + 79) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v1420 + 8) >= 0xFFFFFFFFuLL)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(_QWORD *)(v1420 + 56))
              __swift_destroy_boxed_opaque_existential_1(v1420 + 32);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v1421 = (v1714 + ((((v1420 + 79) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v1680;
          if (v1833)
          {
            v1422 = v1722;
            if (v1722 >= v1728)
            {
              v1423 = v1421;
              v1424 = v1724;
            }
            else
            {
              v1423 = (v1725 + v1421) & v1784;
              v1422 = v1728;
              v1424 = v1729;
            }
            v1427 = __swift_getEnumTagSinglePayload(v1423, v1422, v1424);
          }
          else
          {
            v1411 = ~v1870;
            if (!*(_BYTE *)(v1421 + v1826))
            {
LABEL_2335:
              (*(void (**)(unint64_t, uint64_t))(v1720 + 8))(v1421, v1724);
              (*(void (**)(unint64_t, uint64_t))(v1721 + 8))((v1725 + v1421) & v1784, v1729);
              goto LABEL_2336;
            }
            v1425 = (*(unsigned __int8 *)(v1421 + v1826) - 1) << v1777;
            if (v1826 > 3)
              v1425 = 0;
            if ((_DWORD)v1826)
            {
              if (v1826 <= 3)
                v1426 = v1826;
              else
                v1426 = 4;
              __asm { BR              X11 }
            }
            v1427 = v1425 + 1;
            v89 = v97;
            v124 = v1831;
          }
          v1411 = ~v1870;
          if (v1427)
            goto LABEL_2336;
          goto LABEL_2335;
        case 8:
          if (!__swift_getEnumTagSinglePayload(v120, 1, v1773))
            (*(void (**)(unint64_t, uint64_t))(v1765 + 8))(v120, v1773);
          v122 = ~v1849;
          v149 = (v1839 + v120) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v149);
          v150 = (v1856 + v149) & v1789;
          if (v1723 >= 0x7FFFFFFF)
          {
            v152 = (v1726 + v150) & v1779;
            v124 = v1831;
            if (__swift_getEnumTagSinglePayload(v152, v1718, v1730) > 1)
              goto LABEL_509;
          }
          else
          {
            v151 = *(_QWORD *)(((v1856 + v149) & v1789) + 0x10);
            if (v151 >= 0xFFFFFFFF)
              LODWORD(v151) = -1;
            v124 = v1831;
            if ((int)v151 - 1 >= 0)
            {
LABEL_509:
              swift_bridgeObjectRelease();
              if (*(_QWORD *)(((((((v1816 + v150) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                             + 8) >= 0xFFFFFFFFuLL)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              goto LABEL_1774;
            }
            v152 = (v1726 + v150) & v1779;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!__swift_getEnumTagSinglePayload(v152, 1, v1730))
            (*(void (**)(uint64_t, uint64_t))(v1712 + 8))(v152, v1730);
          goto LABEL_509;
        case 9:
          if (!__swift_getEnumTagSinglePayload(v120, 1, v1773))
            (*(void (**)(unint64_t, uint64_t))(v1765 + 8))(v120, v1773);
          v153 = (v1839 + v120) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v153);
          swift_bridgeObjectRelease();
          v154 = (v1847 + ((v153 + 47) & 0xFFFFFFFFFFFFFFF8) + 16) & v1779;
          if (!__swift_getEnumTagSinglePayload(v154, 1, v1730))
            (*(void (**)(unint64_t, uint64_t))(v1712 + 8))(v154, v1730);
          v155 = (v1688 + v154) & v1680;
          if (v1833)
          {
            v156 = v1728;
            if (v1722 >= v1728)
            {
              v157 = v155;
              v156 = v1722;
              v158 = v1724;
            }
            else
            {
              v157 = (v1725 + v155) & v1784;
              v158 = v1729;
            }
            v341 = __swift_getEnumTagSinglePayload(v157, v156, v158);
          }
          else
          {
            if (!*(_BYTE *)(v155 + v1826))
              goto LABEL_1360;
            v321 = (*(unsigned __int8 *)(v155 + v1826) - 1) << v1777;
            if (v1826 > 3)
              v321 = 0;
            if ((_DWORD)v1826)
            {
              if (v1826 <= 3)
                v322 = v1826;
              else
                v322 = 4;
              __asm { BR              X11 }
            }
            v341 = v321 + 1;
          }
          if (v341)
            goto LABEL_1361;
LABEL_1360:
          (*(void (**)(unint64_t, uint64_t))(v1720 + 8))(v155, v1724);
          (*(void (**)(unint64_t, uint64_t))(v1721 + 8))((v1725 + v155) & v1784, v1729);
LABEL_1361:
          v1071 = (v1684 + v155) & v1680;
          if (v1833)
          {
            v122 = ~v1849;
            v1072 = v1728;
            if (v1722 >= v1728)
            {
              v1073 = v1071;
              v1072 = v1722;
              v1074 = v1724;
            }
            else
            {
              v1073 = (v1725 + v1071) & v1784;
              v1074 = v1729;
            }
            v1077 = __swift_getEnumTagSinglePayload(v1073, v1072, v1074);
            v124 = v1831;
          }
          else
          {
            v122 = ~v1849;
            v124 = v1831;
            if (!*(_BYTE *)(v1071 + v1826))
              goto LABEL_1658;
            v1075 = (*(unsigned __int8 *)(v1071 + v1826) - 1) << v1777;
            if (v1826 > 3)
              v1075 = 0;
            if ((_DWORD)v1826)
            {
              if (v1826 <= 3)
                v1076 = v1826;
              else
                v1076 = 4;
              __asm { BR              X11 }
            }
            v1077 = v1075 + 1;
          }
          if (v1077)
            goto LABEL_1659;
LABEL_1658:
          (*(void (**)(uint64_t, uint64_t))(v1720 + 8))(v1071, v1724);
          (*(void (**)(uint64_t, uint64_t))(v1721 + 8))((v1725 + v1071) & v1784, v1729);
LABEL_1659:
          v1215 = (uint64_t *)((v1785 + v1071) & v1845);
          if ((v1728 & 0x80000000) != 0)
          {
            v1217 = __swift_getEnumTagSinglePayload(((unint64_t)v1215 + v1711) & v1784, v1728, v1729);
          }
          else
          {
            v1216 = *v1215;
            if ((unint64_t)*v1215 >= 0xFFFFFFFF)
              LODWORD(v1216) = -1;
            v1217 = v1216 + 1;
          }
          if (!v1217)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v1721 + 8))(((unint64_t)v1215 + v1711) & v1784, v1729);
          }
          v1218 = (uint64_t)v1215 + v1763;
          goto LABEL_1667;
        case 0xA:
          v122 = ~v1849;
          __swift_destroy_boxed_opaque_existential_1(v120);
          v159 = (v1824 + v120) & v1807;
          if (!__swift_getEnumTagSinglePayload(v159, 1, v1773))
            (*(void (**)(uint64_t, uint64_t))(v1765 + 8))(v159, v1773);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_318;
        case 0xC:
          if (!__swift_getEnumTagSinglePayload(v120, 1, v1773))
            (*(void (**)(unint64_t, uint64_t))(v1765 + 8))(v120, v1773);
          v122 = ~v1849;
          v160 = (v1839 + v120) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v160);
          v161 = (v1818 + v160 + 40) & v1862;
          if (v1710 > 0x7FFFFFFE)
          {
            v163 = (v161 + 23) & 0xFFFFFFFFFFFFFFF8;
            v124 = v1831;
            if (__swift_getEnumTagSinglePayload((v1818 + ((v163 + 23) & 0xFFFFFFFFFFFFFFF8) + 33) & v1775, v1710, v1709))goto LABEL_1774;
          }
          else
          {
            LODWORD(v162) = -1;
            if (*(_QWORD *)(((v1818 + v160 + 40) & v1862) + 8) < 0xFFFFFFFFuLL)
              v162 = *(_QWORD *)(((v1818 + v160 + 40) & v1862) + 8);
            v124 = v1831;
            if ((v162 + 1) > 1)
              goto LABEL_1774;
            v163 = (v161 + 23) & 0xFFFFFFFFFFFFFFF8;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v306 = (id *)((v163 + 47) & 0xFFFFFFFFFFFFFFF8);

          (*(void (**)(unint64_t, uint64_t))(v1813 + 8))(((unint64_t)v306 + v1818 + 9) & v1775, v1709);
          goto LABEL_1774;
        case 0xD:
          v122 = ~v1849;
          __swift_destroy_boxed_opaque_existential_1(v120);
          v164 = (v1824 + v120) & v1807;
          if (!__swift_getEnumTagSinglePayload(v164, 1, v1773))
            (*(void (**)(uint64_t, uint64_t))(v1765 + 8))(v164, v1773);
          swift_bridgeObjectRelease();
          v165 = (v1686 + ((v1839 + v164) & 0xFFFFFFFFFFFFFFF8)) & v1789;
          v124 = v1831;
          if (v1723 >= 0x7FFFFFFF)
            goto LABEL_236;
          goto LABEL_1668;
        case 0x10:
          __swift_destroy_boxed_opaque_existential_1(v120);
          v166 = (v1824 + v120) & v1807;
          if (!__swift_getEnumTagSinglePayload(v166, 1, v1773))
            (*(void (**)(uint64_t, uint64_t))(v1765 + 8))(v166, v1773);
          v122 = ~v1849;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v167 = (((((v1839 + v166) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          v168 = (v167 + 23) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v168 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1((v167 + 23) & 0xFFFFFFFFFFFFFFF8);
          v169 = v168 + 47;
          goto LABEL_309;
        case 0x11:
          __swift_destroy_boxed_opaque_existential_1(v120);
          v170 = (v1824 + v120) & v1807;
          if (!__swift_getEnumTagSinglePayload(v170, 1, v1773))
            (*(void (**)(uint64_t, uint64_t))(v1765 + 8))(v170, v1773);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v171 = (((((((v1839 + v170) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          v172 = (v171 + 23) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v172 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1((v171 + 23) & 0xFFFFFFFFFFFFFFF8);
          v122 = ~v1849;
          v173 = (v172 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v173 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v173);
          v174 = (v173 + 47) & 0xFFFFFFFFFFFFFFF8;
          v124 = v1831;
          if (*(_QWORD *)(v174 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v174);
          v175 = (v1691 + v174) & v1680;
          if (v1833)
          {
            v176 = v1728;
            if (v1722 >= v1728)
            {
              v177 = v175;
              v176 = v1722;
              v178 = v1724;
            }
            else
            {
              v177 = (v1725 + v175) & v1784;
              v178 = v1729;
            }
            v342 = __swift_getEnumTagSinglePayload(v177, v176, v178);
          }
          else
          {
            if (!*(_BYTE *)(v175 + v1826))
              goto LABEL_1376;
            v323 = (*(unsigned __int8 *)(v175 + v1826) - 1) << v1777;
            if (v1826 > 3)
              v323 = 0;
            if ((_DWORD)v1826)
            {
              if (v1826 <= 3)
                v324 = v1826;
              else
                v324 = 4;
              __asm { BR              X11 }
            }
            v342 = v323 + 1;
          }
          if (v342)
            goto LABEL_1377;
LABEL_1376:
          (*(void (**)(unint64_t, uint64_t))(v1720 + 8))(v175, v1724);
          (*(void (**)(unint64_t, uint64_t))(v1721 + 8))((v1725 + v175) & v1784, v1729);
LABEL_1377:
          v196 = (v1708 + v175) & v1680;
          if (v1833)
          {
            v197 = v1728;
            v198 = v1722;
            if (v1722 >= v1728)
              goto LABEL_1381;
            v199 = (v1725 + v196) & v1784;
            goto LABEL_1380;
          }
          if (!*(_BYTE *)(v196 + v1826))
            goto LABEL_1394;
          v328 = (*(unsigned __int8 *)(v196 + v1826) - 1) << v1777;
          v329 = v1826;
          if (v1826 > 3)
            v328 = 0;
          if ((_DWORD)v1826)
          {
            if (v1826 <= 3)
              v1079 = v1826;
            else
              v1079 = 4;
            __asm { BR              X11 }
          }
          goto LABEL_1393;
        case 0x13:
          v122 = ~v1849;
          if (!__swift_getEnumTagSinglePayload(v120, 1, v1773))
            (*(void (**)(unint64_t, uint64_t))(v1765 + 8))(v120, v1773);
          __swift_destroy_boxed_opaque_existential_1((v1839 + v120) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_318;
        case 0x14:
          if (!__swift_getEnumTagSinglePayload(v120, 1, v1773))
            (*(void (**)(unint64_t, uint64_t))(v1765 + 8))(v120, v1773);
          v179 = (v1839 + v120) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v179);
          v180 = (v1870 + v179 + 40) & v1809;
          if (v1716 == v1707)
          {
            v122 = ~v1849;
            if (v1819 < 2)
              goto LABEL_1231;
            v181 = v180;
            v182 = v1819;
            v183 = v1773;
LABEL_262:
            if (__swift_getEnumTagSinglePayload(v181, v182, v183) >= 2)
              goto LABEL_2087;
            goto LABEL_1231;
          }
          v307 = (v1839 + v180) & 0xFFFFFFFFFFFFFFF8;
          v122 = ~v1849;
          if (v1707 == 0x7FFFFFFF)
          {
            if (*(_QWORD *)(v307 + 24) < 0xFFFFFFFFuLL)
              goto LABEL_2087;
          }
          else
          {
            v352 = (v1856
                  + ((((((((v307 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                    + 47) & 0xFFFFFFFFFFFFFFF8)) & v1789;
            if (v1683 != v1707)
            {
              if (v1833 < 2)
                goto LABEL_1231;
              v181 = (v1706 + v352) & v1680;
              v182 = v1728;
              if (v1722 >= v1728)
              {
                v182 = v1722;
                v183 = v1724;
              }
              else
              {
                v181 = (v1725 + v181) & v1784;
                v183 = v1729;
              }
              goto LABEL_262;
            }
            if (v1723 > 0x7FFFFFFE)
            {
              v974 = __swift_getEnumTagSinglePayload((v1726 + v352) & v1779, v1718, v1730);
              if (v974 < 2)
                goto LABEL_1231;
              v355 = v974 - 1;
            }
            else
            {
              v353 = *(_QWORD *)(v352 + 16);
              if (v353 >= 0xFFFFFFFF)
                LODWORD(v353) = -1;
              v354 = v353 - 1;
              if (v354 < 0)
                v354 = -1;
              v355 = v354 + 1;
            }
            if (v355 >= 2)
              goto LABEL_2087;
          }
LABEL_1231:
          if (!__swift_getEnumTagSinglePayload(v180, 1, v1773))
            (*(void (**)(uint64_t, uint64_t))(v1765 + 8))(v180, v1773);
          v975 = (v1839 + v180) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v975);
          swift_bridgeObjectRelease();
          v976 = (((v975 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          v977 = (v976 + 23) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v977 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1((v976 + 23) & 0xFFFFFFFFFFFFFFF8);
          v978 = (v977 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v978 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v978);
          v979 = (v1856 + v978) & v1789;
          if (v1723 >= 0x7FFFFFFF)
          {
            v981 = (v1726 + v979) & v1779;
            if (__swift_getEnumTagSinglePayload(v981, v1718, v1730) > 1)
              goto LABEL_1245;
            goto LABEL_1243;
          }
          v980 = *(_QWORD *)(((v1856 + v978) & v1789) + 0x10);
          if (v980 >= 0xFFFFFFFF)
            LODWORD(v980) = -1;
          if ((int)v980 - 1 < 0)
          {
            v981 = (v1726 + v979) & v1779;
LABEL_1243:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!__swift_getEnumTagSinglePayload(v981, 1, v1730))
              (*(void (**)(uint64_t, uint64_t))(v1712 + 8))(v981, v1730);
          }
LABEL_1245:
          v982 = (v1706 + v979) & v1680;
          if (v1833)
          {
            v983 = v1728;
            if (v1722 >= v1728)
            {
              v984 = (v1706 + v979) & v1680;
              v983 = v1722;
              v985 = v1724;
            }
            else
            {
              v984 = (v1725 + v982) & v1784;
              v985 = v1729;
            }
            v988 = __swift_getEnumTagSinglePayload(v984, v983, v985);
          }
          else
          {
            if (!*(_BYTE *)(v982 + v1826))
              goto LABEL_2086;
            v986 = (*(unsigned __int8 *)(v982 + v1826) - 1) << v1777;
            if (v1826 > 3)
              v986 = 0;
            if ((_DWORD)v1826)
            {
              if (v1826 <= 3)
                v987 = v1826;
              else
                v987 = 4;
              __asm { BR              X11 }
            }
            v988 = v986 + 1;
          }
          if (v988)
            goto LABEL_2087;
LABEL_2086:
          (*(void (**)(size_t, uint64_t))(v1720 + 8))(v982, v1724);
          (*(void (**)(size_t, uint64_t))(v1721 + 8))((v1725 + v982) & v1784, v1729);
LABEL_2087:
          v1428 = (v1699 + v180) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          v165 = (v1700 + v1428) & v1789;
          if (v1723 < 0x7FFFFFFF)
          {
            v1429 = *(_QWORD *)(((v1700 + v1428) & v1789) + 0x10);
            if (v1429 >= 0xFFFFFFFF)
              LODWORD(v1429) = -1;
            v1264 = (int)v1429 - 1 < 0;
            v124 = v1831;
            goto LABEL_2091;
          }
          v123 = (v1726 + v165) & v1779;
          v1265 = __swift_getEnumTagSinglePayload(v123, v1718, v1730) > 1;
          v124 = v1831;
          goto LABEL_2095;
        case 0x15:
          v122 = ~v1849;
          if (!__swift_getEnumTagSinglePayload(v120, 1, v1773))
            (*(void (**)(unint64_t, uint64_t))(v1765 + 8))(v120, v1773);
          goto LABEL_305;
        case 0x16:
          v125 = v1773;
          if (!__swift_getEnumTagSinglePayload(v120, 1, v1773))
            (*(void (**)(unint64_t, uint64_t))(v1765 + 8))(v120, v1773);
          v122 = ~v1849;
          v126 = v1839;
          v184 = (v1839 + v120) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v184);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v185 = (v1762
                + ((((((v184 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v1862;
          if (v1710 > 0x7FFFFFFE)
          {
            v187 = (v185 + 23) & 0xFFFFFFFFFFFFFFF8;
            v130 = v1784;
            if (__swift_getEnumTagSinglePayload((v1818 + ((v187 + 23) & 0xFFFFFFFFFFFFFFF8) + 33) & v1775, v1710, v1709))goto LABEL_520;
            goto LABEL_519;
          }
          LODWORD(v186) = -1;
          if (*(_QWORD *)(((v1762
                           + ((((((v184 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v1862)
                         + 8) < 0xFFFFFFFFuLL)
            v186 = *(_QWORD *)(((v1762
                               + ((((((v184 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v1862)
                             + 8);
          v130 = v1784;
          if ((v186 + 1) <= 1)
          {
            v187 = (v185 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_519:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v308 = (id *)((v187 + 47) & 0xFFFFFFFFFFFFFFF8);

            (*(void (**)(unint64_t, uint64_t))(v1813 + 8))(((unint64_t)v308 + v1818 + 9) & v1775, v1709);
          }
LABEL_520:
          swift_bridgeObjectRelease();
          v297 = (v1690 + ((v185 + v1860) & 0xFFFFFFFFFFFFFFF8)) & v1680;
          if (v1833)
          {
LABEL_521:
            v309 = v1728;
            if (v1722 >= v1728)
            {
              v310 = v297;
              v309 = v1722;
              v311 = v1724;
            }
            else
            {
              v310 = (v1725 + v297) & v130;
              v311 = v1729;
            }
            v312 = __swift_getEnumTagSinglePayload(v310, v309, v311);
          }
          else
          {
            if (!*(_BYTE *)(v297 + v1826))
            {
LABEL_1155:
              (*(void (**)(unint64_t, uint64_t))(v1720 + 8))(v297, v1724);
              (*(void (**)(unint64_t, uint64_t))(v1721 + 8))((v1725 + v297) & v130, v1729);
LABEL_1156:
              v949 = (uint64_t *)((v1785 + v297) & v1845);
              if ((v1728 & 0x80000000) != 0)
              {
                v951 = __swift_getEnumTagSinglePayload(((unint64_t)v949 + v1711) & v130, v1728, v1729);
              }
              else
              {
                v950 = *v949;
                if ((unint64_t)*v949 >= 0xFFFFFFFF)
                  LODWORD(v950) = -1;
                v951 = v950 + 1;
              }
              if (!v951)
              {
                swift_bridgeObjectRelease();
                (*(void (**)(unint64_t, uint64_t))(v1721 + 8))(((unint64_t)v949 + v1711) & v130, v1729);
              }
              v952 = ((unint64_t)v949 + v1763) & v1789;
              if (v1723 >= 0x7FFFFFFF)
              {
                v955 = (v1726 + v952) & v1779;
                v91 = v1854;
                v954 = v122;
                if (__swift_getEnumTagSinglePayload(v955, v1718, v1730) > 1)
                  goto LABEL_1171;
              }
              else
              {
                v953 = *(_QWORD *)(v952 + 16);
                if (v953 >= 0xFFFFFFFF)
                  LODWORD(v953) = -1;
                v91 = v1854;
                v954 = v122;
                if ((int)v953 - 1 >= 0)
                {
LABEL_1171:
                  v956 = (v1835 + v952) & v954;
                  if (v1716 < 0x7FFFFFFF)
                  {
                    if (*(_QWORD *)(((v126 + v956) & 0xFFFFFFFFFFFFF8) + 0x18) <= 0xFFFFFFFEuLL)
                    {
                      v957 = (v1761 + v956) & v954;
                      goto LABEL_1183;
                    }
                  }
                  else if (__swift_getEnumTagSinglePayload((v1835 + v952) & v954, v1819, v125) >= 2)
                  {
                    v957 = (v1761 + v956) & v954;
                    goto LABEL_1180;
                  }
                  if (!__swift_getEnumTagSinglePayload(v956, 1, v125))
                    (*(void (**)(uint64_t, uint64_t))(v1765 + 8))(v956, v125);
                  __swift_destroy_boxed_opaque_existential_1((v126 + v956) & 0xFFFFFFFFFFFFFFF8);
                  if (*(_QWORD *)(((((v126 + v956) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 24) >= 0xFFFFFFFFuLL)
                    __swift_destroy_boxed_opaque_existential_1((((v126 + v956) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8);
                  swift_bridgeObjectRelease();
                  v957 = (v1761 + v956) & v954;
                  if (v1716 >= 0x7FFFFFFF)
                  {
LABEL_1180:
                    if (__swift_getEnumTagSinglePayload(v957, v1819, v125) >= 2)
                    {
                      v958 = (v1761 + v957) & v954;
                      goto LABEL_1189;
                    }
                    goto LABEL_1184;
                  }
LABEL_1183:
                  if (*(_QWORD *)(((v126 + v957) & 0xFFFFFFFFFFFFF8) + 0x18) <= 0xFFFFFFFEuLL)
                  {
                    v958 = (v1761 + v957) & v954;
                    goto LABEL_1192;
                  }
LABEL_1184:
                  if (!__swift_getEnumTagSinglePayload(v957, 1, v125))
                    (*(void (**)(uint64_t, uint64_t))(v1765 + 8))(v957, v125);
                  __swift_destroy_boxed_opaque_existential_1((v126 + v957) & 0xFFFFFFFFFFFFFFF8);
                  if (*(_QWORD *)(((((v126 + v957) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 24) >= 0xFFFFFFFFuLL)
                    __swift_destroy_boxed_opaque_existential_1((((v126 + v957) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8);
                  swift_bridgeObjectRelease();
                  v958 = (v1761 + v957) & v954;
                  if (v1716 >= 0x7FFFFFFF)
                  {
LABEL_1189:
                    if (__swift_getEnumTagSinglePayload(v958, v1819, v125) >= 2)
                      goto LABEL_1198;
                    goto LABEL_1193;
                  }
LABEL_1192:
                  if (*(_QWORD *)(((v126 + v958) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                    goto LABEL_1198;
LABEL_1193:
                  if (!__swift_getEnumTagSinglePayload(v958, 1, v125))
                    (*(void (**)(uint64_t, uint64_t))(v1765 + 8))(v958, v125);
                  v959 = (v126 + v958) & 0xFFFFFFFFFFFFFFF8;
                  __swift_destroy_boxed_opaque_existential_1(v959);
                  v960 = (v959 + 47) & 0xFFFFFFFFFFFFFFF8;
                  if (*(_QWORD *)(v960 + 24) >= 0xFFFFFFFFuLL)
                    __swift_destroy_boxed_opaque_existential_1(v960);
                  swift_bridgeObjectRelease();
LABEL_1198:
                  v212 = v1760;
                  v124 = v1831;
                  if (v1819)
                    goto LABEL_320;
                  goto LABEL_319;
                }
                v955 = (v1726 + v952) & v1779;
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (!__swift_getEnumTagSinglePayload(v955, 1, v1730))
                (*(void (**)(uint64_t, uint64_t))(v1712 + 8))(v955, v1730);
              goto LABEL_1171;
            }
            v298 = (*(unsigned __int8 *)(v297 + v1826) - 1) << v1777;
            v299 = v1826;
            if (v1826 > 3)
              v298 = 0;
            if ((_DWORD)v1826)
            {
              if (v1826 <= 3)
                v337 = v1826;
              else
                v337 = 4;
              __asm { BR              X11 }
            }
LABEL_1153:
            v312 = (v299 | v298) + 1;
          }
          if (v312)
            goto LABEL_1156;
          goto LABEL_1155;
        case 0x18:
          v122 = ~v1849;
          if (!__swift_getEnumTagSinglePayload(v120, 1, v1773))
            (*(void (**)(unint64_t, uint64_t))(v1765 + 8))(v120, v1773);
          __swift_destroy_boxed_opaque_existential_1((v1839 + v120) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          goto LABEL_318;
        case 0x1D:
          v122 = ~v1849;
          __swift_destroy_boxed_opaque_existential_1(v120);
          v188 = (v1824 + v120) & v1807;
          if (!__swift_getEnumTagSinglePayload(v188, 1, v1773))
            (*(void (**)(uint64_t, uint64_t))(v1765 + 8))(v188, v1773);
          goto LABEL_318;
        case 0x1E:
          v122 = ~v1849;
          __swift_destroy_boxed_opaque_existential_1(v120);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v189 = v1814 + ((((v120 + 51) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
          goto LABEL_437;
        case 0x20:
          v122 = ~v1849;
          swift_bridgeObjectRelease();
          v120 = (v120 + 23) & 0xFFFFFFFFFFFFFFF8;
          goto LABEL_436;
        case 0x21:
          if (v1833)
          {
            v122 = ~v1849;
            v190 = v1728;
            v191 = v1784;
            if (v1722 >= v1728)
            {
              v192 = v119 & v1678;
              v190 = v1722;
              v193 = v1724;
            }
            else
            {
              v192 = (v1725 + v120) & v1784;
              v193 = v1729;
            }
            v343 = __swift_getEnumTagSinglePayload(v192, v190, v193);
            v325 = v1773;
            v124 = v1831;
          }
          else
          {
            v122 = ~v1849;
            v191 = v1784;
            v325 = v1773;
            v124 = v1831;
            if (!*(_BYTE *)(v120 + v1826))
              goto LABEL_1766;
            v326 = (*(unsigned __int8 *)(v120 + v1826) - 1) << v1777;
            if (v1826 > 3)
              v326 = 0;
            if ((_DWORD)v1826)
            {
              if (v1826 <= 3)
                v327 = v1826;
              else
                v327 = 4;
              __asm { BR              X11 }
            }
            v343 = v326 + 1;
          }
          if (v343)
            goto LABEL_1767;
LABEL_1766:
          (*(void (**)(unint64_t, uint64_t))(v1720 + 8))(v120, v1724);
          (*(void (**)(unint64_t, uint64_t))(v1721 + 8))((v1725 + v120) & v191, v1729);
LABEL_1767:
          v1266 = (v1713 + v120) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v1266);
          v1267 = (v1824 + v1266) & v1807;
          if (!__swift_getEnumTagSinglePayload(v1267, 1, v325))
            (*(void (**)(uint64_t, uint64_t))(v1765 + 8))(v1267, v325);
          swift_bridgeObjectRelease();
          goto LABEL_1770;
        case 0x22:
          if (!__swift_getEnumTagSinglePayload(v120, 1, v1773))
            (*(void (**)(unint64_t, uint64_t))(v1765 + 8))(v120, v1773);
          v122 = ~v1849;
          v194 = (v1839 + v120) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v194);
          v195 = (v1856 + v194) & v1789;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!__swift_getEnumTagSinglePayload((v1726 + v195) & v1779, 1, v1730))
            (*(void (**)(unint64_t, uint64_t))(v1712 + 8))((v1726 + v195) & v1779, v1730);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v196 = (v1687 + ((((v1816 + v195) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v1680;
          v124 = v1831;
          if (v1833)
          {
            v197 = v1728;
            v198 = v1722;
            if (v1722 < v1728)
            {
              v199 = (v1725 + v196) & v1784;
              goto LABEL_1380;
            }
LABEL_1381:
            v199 = v196;
            v197 = v198;
            goto LABEL_1382;
          }
          if (*(_BYTE *)(v196 + v1826))
          {
            v328 = (*(unsigned __int8 *)(v196 + v1826) - 1) << v1777;
            v329 = v1826;
            if (v1826 > 3)
              v328 = 0;
            if ((_DWORD)v1826)
            {
              if (v1826 <= 3)
                v330 = v1826;
              else
                v330 = 4;
              __asm { BR              X11 }
            }
LABEL_1393:
            if ((v329 | v328) != 0xFFFFFFFF)
              goto LABEL_319;
          }
          goto LABEL_1394;
        case 0x23:
          if (!__swift_getEnumTagSinglePayload(v120, 1, v1773))
            (*(void (**)(unint64_t, uint64_t))(v1765 + 8))(v120, v1773);
          v122 = ~v1849;
          v200 = (v1839 + v120) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v200);
          v201 = (v1856 + v200) & v1789;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!__swift_getEnumTagSinglePayload((v1726 + v201) & v1779, 1, v1730))
            (*(void (**)(unint64_t, uint64_t))(v1712 + 8))((v1726 + v201) & v1779, v1730);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v202 = (((((((((((((v1816 + v201) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 25) & 0xFFFFFFFFFFFFFFF8)
                      + 23) & 0xFFFFFFFFFFFFFFF8)
                    + 23) & 0xFFFFFFFFFFFFFFF8)
                  + 23) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          v203 = (v1714 + v202) & v1680;
          v124 = v1831;
          if (v1833)
          {
            v204 = v1728;
            if (v1722 >= v1728)
            {
              v205 = (v1714 + v202) & v1680;
              v204 = v1722;
              v206 = v1724;
            }
            else
            {
              v205 = (v1725 + v203) & v1784;
              v206 = v1729;
            }
            v344 = __swift_getEnumTagSinglePayload(v205, v204, v206);
          }
          else
          {
            if (!*(_BYTE *)(v203 + v1826))
              goto LABEL_1773;
            v331 = (*(unsigned __int8 *)(v203 + v1826) - 1) << v1777;
            if (v1826 > 3)
              v331 = 0;
            if ((_DWORD)v1826)
            {
              if (v1826 <= 3)
                v332 = v1826;
              else
                v332 = 4;
              __asm { BR              X11 }
            }
            v344 = v331 + 1;
          }
          if (v344)
            goto LABEL_1774;
LABEL_1773:
          (*(void (**)(unint64_t, uint64_t))(v1720 + 8))(v203, v1724);
          (*(void (**)(unint64_t, uint64_t))(v1721 + 8))((v1725 + v203) & v1784, v1729);
          goto LABEL_1774;
        case 0x24:
          v122 = ~v1849;
          if (!__swift_getEnumTagSinglePayload(v120, 1, v1773))
            (*(void (**)(unint64_t, uint64_t))(v1765 + 8))(v120, v1773);
          v207 = (v1839 + v120) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v207);
          swift_bridgeObjectRelease();
          v208 = (((v207 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
          v124 = v1831;
          if (*(_QWORD *)(v208 + 24) < 0xFFFFFFFFuLL)
            goto LABEL_319;
          goto LABEL_312;
        case 0x25:
          v122 = ~v1849;
          if (!__swift_getEnumTagSinglePayload(v120, 1, v1773))
            (*(void (**)(unint64_t, uint64_t))(v1765 + 8))(v120, v1773);
          goto LABEL_305;
        case 0x26:
          v122 = ~v1849;
          if (!__swift_getEnumTagSinglePayload(v120, 1, v1773))
            (*(void (**)(unint64_t, uint64_t))(v1765 + 8))(v120, v1773);
          v209 = (v1839 + v120) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v209);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v169 = ((((v209 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23;
LABEL_309:
          v210 = v169 & 0xFFFFFFFFFFFFFFF8;
          v124 = v1831;
          if (*(_QWORD *)((v169 & 0xFFFFFFFFFFFFFFF8) + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v210);
          v208 = (v210 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v208 + 24) >= 0xFFFFFFFFuLL)
LABEL_312:
            __swift_destroy_boxed_opaque_existential_1(v208);
          goto LABEL_319;
        case 0x27:
          v122 = ~v1849;
          if (!__swift_getEnumTagSinglePayload(v120, 1, v1773))
            (*(void (**)(unint64_t, uint64_t))(v1765 + 8))(v120, v1773);
LABEL_305:
          __swift_destroy_boxed_opaque_existential_1((v1839 + v120) & 0xFFFFFFFFFFFFFFF8);
          goto LABEL_318;
        case 0x28:
          v122 = ~v1849;
          __swift_destroy_boxed_opaque_existential_1(v120);
          v211 = (v1824 + v120) & v1807;
          if (!__swift_getEnumTagSinglePayload(v211, 1, v1773))
            (*(void (**)(uint64_t, uint64_t))(v1765 + 8))(v211, v1773);
          goto LABEL_318;
        case 0x29:
          v122 = ~v1849;
          __swift_destroy_boxed_opaque_existential_1(v120);
          v258 = (v1824 + v120) & v1807;
          if (!__swift_getEnumTagSinglePayload(v258, 1, v1773))
            (*(void (**)(uint64_t, uint64_t))(v1765 + 8))(v258, v1773);
          swift_bridgeObjectRelease();
LABEL_318:
          swift_bridgeObjectRelease();
          v124 = v1831;
          goto LABEL_319;
        case 0x2B:
          v122 = ~v1849;
LABEL_436:
          __swift_destroy_boxed_opaque_existential_1(v120);
          v189 = v1824 + v120;
LABEL_437:
          v259 = v189 & v1807;
          v124 = v1831;
          if (!__swift_getEnumTagSinglePayload(v189 & v1807, 1, v1773))
            (*(void (**)(uint64_t, uint64_t))(v1765 + 8))(v259, v1773);
          goto LABEL_319;
        case 0x2D:
          if (!__swift_getEnumTagSinglePayload(v120, 1, v1773))
            (*(void (**)(unint64_t, uint64_t))(v1765 + 8))(v120, v1773);
          v260 = (v1839 + v120) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v260);
          v261 = (v260 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v261 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v261);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v262 = (((((((v261 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v263 = (v1714 + ((v262 + 47) & 0xFFFFFFFFFFFFFFF8)) & v1680;
          if (v1833)
          {
            v122 = ~v1849;
            v264 = v1728;
            if (v1722 >= v1728)
            {
              v265 = (v1714 + ((v262 + 47) & 0xFFFFFFFFFFFFFFF8)) & v1680;
              v264 = v1722;
              v266 = v1724;
            }
            else
            {
              v265 = (v1725 + v263) & v1784;
              v266 = v1729;
            }
            v345 = __swift_getEnumTagSinglePayload(v265, v264, v266);
            v124 = v1831;
          }
          else
          {
            v122 = ~v1849;
            v124 = v1831;
            if (!*(_BYTE *)(v263 + v1826))
              goto LABEL_1397;
            v333 = (*(unsigned __int8 *)(v263 + v1826) - 1) << v1777;
            if (v1826 > 3)
              v333 = 0;
            if ((_DWORD)v1826)
            {
              if (v1826 <= 3)
                v334 = v1826;
              else
                v334 = 4;
              __asm { BR              X11 }
            }
            v345 = v333 + 1;
          }
          if (v345)
            goto LABEL_1398;
LABEL_1397:
          (*(void (**)(unint64_t, uint64_t))(v1720 + 8))(v263, v1724);
          (*(void (**)(unint64_t, uint64_t))(v1721 + 8))((v1725 + v263) & v1784, v1729);
LABEL_1398:
          v1081 = (v1708 + v263) & v1680;
          if (v1833)
          {
            v1082 = v1728;
            if (v1722 >= v1728)
            {
              v1083 = v1081;
              v1082 = v1722;
              v1084 = v1724;
            }
            else
            {
              v1083 = (v1725 + v1081) & v1784;
              v1084 = v1729;
            }
            v1087 = __swift_getEnumTagSinglePayload(v1083, v1082, v1084);
          }
          else
          {
            if (!*(_BYTE *)(v1081 + v1826))
              goto LABEL_1674;
            v1085 = (*(unsigned __int8 *)(v1081 + v1826) - 1) << v1777;
            if (v1826 > 3)
              v1085 = 0;
            if ((_DWORD)v1826)
            {
              if (v1826 <= 3)
                v1086 = v1826;
              else
                v1086 = 4;
              __asm { BR              X11 }
            }
            v1087 = v1085 + 1;
          }
          if (v1087)
            goto LABEL_1675;
LABEL_1674:
          (*(void (**)(unint64_t, uint64_t))(v1720 + 8))(v1081, v1724);
          (*(void (**)(unint64_t, uint64_t))(v1721 + 8))((v1725 + v1081) & v1784, v1729);
LABEL_1675:
          v1220 = (uint64_t *)((v1785 + v1081) & v1845);
          if ((v1728 & 0x80000000) != 0)
          {
            v1222 = __swift_getEnumTagSinglePayload(((unint64_t)v1220 + v1711) & v1784, v1728, v1729);
          }
          else
          {
            v1221 = *v1220;
            if ((unint64_t)*v1220 >= 0xFFFFFFFF)
              LODWORD(v1221) = -1;
            v1222 = v1221 + 1;
          }
          if (!v1222)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v1721 + 8))(((unint64_t)v1220 + v1711) & v1784, v1729);
          }
          v1223 = (uint64_t *)(((unint64_t)v1220 + v1695) & v1845);
          if ((v1728 & 0x80000000) != 0)
          {
            v1225 = __swift_getEnumTagSinglePayload(((unint64_t)v1223 + v1711) & v1784, v1728, v1729);
          }
          else
          {
            v1224 = *v1223;
            if ((unint64_t)*v1223 >= 0xFFFFFFFF)
              LODWORD(v1224) = -1;
            v1225 = v1224 + 1;
          }
          if (!v1225)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v1721 + 8))(((unint64_t)v1223 + v1711) & v1784, v1729);
          }
          v1226 = ((unint64_t)v1223 + v1815 + 9) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v1227 = (v1226 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v1227 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1((v1226 + 47) & 0xFFFFFFFFFFFFFFF8);
          v1228 = (v1856 + v1227) & v1789;
          if (v1723 >= 0x7FFFFFFF)
          {
            v1230 = (v1726 + v1228) & v1779;
            if (__swift_getEnumTagSinglePayload(v1230, v1718, v1730) > 1)
              goto LABEL_1774;
          }
          else
          {
            v1229 = *(_QWORD *)(((v1856 + v1227) & v1789) + 0x10);
            if (v1229 >= 0xFFFFFFFF)
              LODWORD(v1229) = -1;
            if ((int)v1229 - 1 >= 0)
              goto LABEL_1774;
            v1230 = (v1726 + v1228) & v1779;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!__swift_getEnumTagSinglePayload(v1230, 1, v1730))
            (*(void (**)(uint64_t, uint64_t))(v1712 + 8))(v1230, v1730);
          goto LABEL_1774;
        case 0x32:
          __swift_destroy_boxed_opaque_existential_1(v120);
          v267 = (v1824 + v120) & v1807;
          if (!__swift_getEnumTagSinglePayload(v267, 1, v1773))
            (*(void (**)(uint64_t, uint64_t))(v1765 + 8))(v267, v1773);
          v268 = (v1839 + v267) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          v269 = (v268 + 23) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v269 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1((v268 + 23) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v122 = ~v1849;
          v270 = (v1814 + ((((v269 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v95;
          v124 = v1831;
          if (v1716 < 0x7FFFFFFF)
          {
            if (*(_QWORD *)(((v1839 + v270) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
              goto LABEL_529;
          }
          else if (__swift_getEnumTagSinglePayload(v270, v1819, v1773) >= 2)
          {
            goto LABEL_529;
          }
          if (!__swift_getEnumTagSinglePayload(v270, 1, v1773))
            (*(void (**)(unint64_t, uint64_t))(v1765 + 8))(v270, v1773);
          __swift_destroy_boxed_opaque_existential_1((v1839 + v270) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
LABEL_529:
          swift_bridgeObjectRelease();
          v313 = v1694 + v270 + v1831;
          goto LABEL_1759;
        case 0x33:
          if (!__swift_getEnumTagSinglePayload(v120, 1, v1773))
            (*(void (**)(unint64_t, uint64_t))(v1765 + 8))(v120, v1773);
          v271 = (v1839 + v120) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v271);
          v272 = (v271 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v272 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v272);
          v122 = ~v1849;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v273 = (v1685
                + ((((((v272 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v1862;
          if (v1710 > 0x7FFFFFFE)
          {
            v275 = (v273 + 23) & 0xFFFFFFFFFFFFFFF8;
            v124 = v1831;
            if (__swift_getEnumTagSinglePayload((v1818 + ((v275 + 23) & 0xFFFFFFFFFFFFFFF8) + 33) & v1775, v1710, v1709))goto LABEL_532;
            goto LABEL_531;
          }
          LODWORD(v274) = -1;
          if (*(_QWORD *)(((v1685
                           + ((((((v272 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v1862)
                         + 8) < 0xFFFFFFFFuLL)
            v274 = *(_QWORD *)(((v1685
                               + ((((((v272 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v1862)
                             + 8);
          v124 = v1831;
          if ((v274 + 1) <= 1)
          {
            v275 = (v273 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_531:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v314 = (id *)((v275 + 47) & 0xFFFFFFFFFFFFFFF8);

            (*(void (**)(unint64_t, uint64_t))(v1813 + 8))(((unint64_t)v314 + v1818 + 9) & v1775, v1709);
          }
LABEL_532:
          v315 = (v1689 + v273) & v1680;
          if (v1833)
          {
            v316 = v1728;
            if (v1722 >= v1728)
            {
              v317 = (v1689 + v273) & v1680;
              v316 = v1722;
              v318 = v1724;
            }
            else
            {
              v317 = (v1725 + v315) & v1784;
              v318 = v1729;
            }
            v347 = __swift_getEnumTagSinglePayload(v317, v316, v318);
          }
          else
          {
            if (!*(_BYTE *)(v315 + v1826))
              goto LABEL_1419;
            v338 = (*(unsigned __int8 *)(v315 + v1826) - 1) << v1777;
            if (v1826 > 3)
              v338 = 0;
            if ((_DWORD)v1826)
            {
              if (v1826 <= 3)
                v339 = v1826;
              else
                v339 = 4;
              __asm { BR              X11 }
            }
            v347 = v338 + 1;
          }
          if (v347)
            goto LABEL_1420;
LABEL_1419:
          (*(void (**)(unint64_t, uint64_t))(v1720 + 8))(v315, v1724);
          (*(void (**)(unint64_t, uint64_t))(v1721 + 8))((v1725 + v315) & v1784, v1729);
LABEL_1420:
          swift_bridgeObjectRelease();
          v1089 = (((v1713 + v315) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          v1090 = (v1693 + v1089) & v1680;
          if (v1833)
          {
            v1091 = v1728;
            if (v1722 >= v1728)
            {
              v1092 = (v1693 + v1089) & v1680;
              v1091 = v1722;
              v1093 = v1724;
            }
            else
            {
              v1092 = (v1725 + v1090) & v1784;
              v1093 = v1729;
            }
            v1096 = __swift_getEnumTagSinglePayload(v1092, v1091, v1093);
          }
          else
          {
            if (!*(_BYTE *)(v1090 + v1826))
              goto LABEL_1702;
            v1094 = (*(unsigned __int8 *)(v1090 + v1826) - 1) << v1777;
            if (v1826 > 3)
              v1094 = 0;
            if ((_DWORD)v1826)
            {
              if (v1826 <= 3)
                v1095 = v1826;
              else
                v1095 = 4;
              __asm { BR              X11 }
            }
            v1096 = v1094 + 1;
          }
          if (v1096)
            goto LABEL_1703;
LABEL_1702:
          (*(void (**)(unint64_t, uint64_t))(v1720 + 8))(v1090, v1724);
          (*(void (**)(unint64_t, uint64_t))(v1721 + 8))((v1725 + v1090) & v1784, v1729);
LABEL_1703:
          v1231 = (v1713 + v1090) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          v1232 = (v1837 + v1231) & v1680;
          if (v1833)
          {
            v1233 = v1728;
            if (v1722 >= v1728)
            {
              v1234 = (v1837 + v1231) & v1680;
              v1233 = v1722;
              v1235 = v1724;
            }
            else
            {
              v1234 = (v1725 + v1232) & v1784;
              v1235 = v1729;
            }
            v1238 = __swift_getEnumTagSinglePayload(v1234, v1233, v1235);
          }
          else
          {
            if (!*(_BYTE *)(v1232 + v1826))
              goto LABEL_1757;
            v1236 = (*(unsigned __int8 *)(v1232 + v1826) - 1) << v1777;
            if (v1826 > 3)
              v1236 = 0;
            if ((_DWORD)v1826)
            {
              if (v1826 <= 3)
                v1237 = v1826;
              else
                v1237 = 4;
              __asm { BR              X11 }
            }
            v1238 = v1236 + 1;
          }
          if (v1238)
            goto LABEL_1758;
LABEL_1757:
          (*(void (**)(unint64_t, uint64_t))(v1720 + 8))(v1232, v1724);
          (*(void (**)(unint64_t, uint64_t))(v1721 + 8))((v1725 + v1232) & v1784, v1729);
LABEL_1758:
          v313 = v1698 + v1232;
LABEL_1759:
          v165 = v313 & v1789;
          if (v1723 >= 0x7FFFFFFF)
          {
            v123 = (v1726 + v165) & v1779;
            v1265 = __swift_getEnumTagSinglePayload(v123, v1718, v1730) > 1;
LABEL_2095:
            v91 = v1854;
            if (v1265)
              goto LABEL_319;
            goto LABEL_2096;
          }
          v1263 = *(_QWORD *)((v313 & v1789) + 0x10);
          if (v1263 >= 0xFFFFFFFF)
            LODWORD(v1263) = -1;
          v1264 = (int)v1263 - 1 < 0;
LABEL_2091:
          v91 = v1854;
          if (v1264)
          {
LABEL_2093:
            v123 = (v1726 + v165) & v1779;
            goto LABEL_2096;
          }
LABEL_319:
          v212 = v1842;
LABEL_320:
          v93 = ~v1876;
          v213 = v1756
               + ((v1761
                 + ((v1761
                   + ((v1835
                     + ((v1763
                       + ((v1785
                         + ((v1837
                           + ((((((v1762
                                 + ((((((((v212 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                   + 15) & 0xFFFFFFFFFFFFFFF8)) & v1862)
                               + v1860) & 0xFFFFFFFFFFFFFFF8)
                             + 23) & 0xFFFFFFFFFFFFFFF8)) & v1680)) & v1845)) & v1789)) & v122)) & v122)) & v122);
          if (v1758 > v213)
            v213 = v1820 + ((v1847 + 8) & ~v1851);
          if (v213 <= v1755)
            v213 = v1755;
          if (v213 <= v1759)
            v213 = v1759;
          if (v213 <= v1751)
            v213 = v1751;
          if (v213 <= v1749)
            v213 = v1749;
          if (v213 <= v1746)
            v213 = v1746;
          if (v213 <= v1747)
            v213 = (((((v1858 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
          if (v213 <= v1748)
            v213 = v1748;
          if (v213 <= v1737)
            v213 = v1737;
          if (v213 <= v1828)
            v213 = v1828;
          if (v213 <= v1734)
            v213 = v1734;
          if (v213 <= v1736)
            v213 = v1736;
          if (v213 <= v1733)
            v213 = v1733;
          if (v213 <= v124)
            v213 = v124;
          v95 = v122;
          if (v213 <= v1735)
            v213 = v1735;
          if (v213 <= v1758)
            v213 = v1820 + ((v1847 + 8) & ~v1851);
          if (v213 <= v1732)
            v213 = v1732;
          if (v213 <= v1738)
            v213 = ((v1858 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
          if (v213 <= v1740)
            v213 = v1740;
          if (v213 <= v1742)
            v213 = v1742;
          if (v213 <= v1741)
            v213 = v1741;
          if (v213 <= v1744)
            v213 = v1744;
          if (v213 <= v1739)
            v213 = v1739;
          if (v213 <= v1743)
            v213 = v1743;
          if (v213 <= v1745)
            v213 = v1745;
          if (v213 <= v1782)
            v213 = v1782;
          if (v213 <= v1752)
            v213 = v1752;
          if (v213 <= v1754)
            v213 = v1754;
          if (v213 <= v1757)
            v213 = v1757;
          if (v213 <= v1858)
            v213 = v1858;
          if (v213 <= v86)
            v213 = v86;
          if (v213 <= v1753)
            v213 = v1753;
          if (v213 <= v1750)
            v213 = v1750;
          if (v213 <= 8)
            v213 = 8;
          v87 = v1670;
          v214 = *(_QWORD *)((v1669 + v213 + 8) & 0xFFFFFFFFFFFFF8);
          v215 = -1;
          if (v214 < 0xFFFFFFFF)
            v215 = v214;
          v96 = ~v1812;
          v94 = ~v1867;
          if (v215 - 1 < 0)
LABEL_120:
            swift_bridgeObjectRelease();
LABEL_391:
          if (*((unsigned __int8 *)a2 + v89) >= 4u)
          {
            if (v89 <= 3)
              v216 = v89;
            else
              v216 = 4;
            __asm { BR              X12 }
          }
          switch(*((_BYTE *)a2 + v89))
          {
            case 0:
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1767 + 16))(a1, a2, v1768);
              *((_BYTE *)a1 + v89) = 0;
              goto LABEL_2192;
            case 1:
              v1811 = v95;
              v1677 = v86;
              v1681 = v93;
              *a1 = *a2;
              a1[1] = a2[1];
              v217 = (void *)(((unint64_t)a1 + v91 + 16) & v1807);
              v218 = (const void *)(((unint64_t)a2 + v91 + 16) & v1807);
              sub_21D7C4C20();
              if (__swift_getEnumTagSinglePayload((uint64_t)v218, 1, v1773))
              {
                v219 = v1842;
                memcpy(v217, v218, v1842);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1765 + 16))(v217, v218, v1773);
                __swift_storeEnumTagSinglePayload((uint64_t)v217, 0, 1, v1773);
                v219 = v1842;
              }
              v222 = (_BYTE *)(((unint64_t)v217 + v219 + v1870) & v1809);
              v223 = (unsigned __int8 *)(((unint64_t)v218 + v219 + v1870) & v1809);
              v224 = *v223;
              if (v224 > 2)
              {
                v228 = v1841;
                memcpy(v222, v223, v1841);
                goto LABEL_653;
              }
              v1679 = v94;
              *v222 = v224;
              v225 = (_QWORD *)((unint64_t)&v222[v1731] & v1809);
              v226 = (_QWORD *)((unint64_t)&v223[v1731] & v1809);
              v227 = *((unsigned __int8 *)v226 + v1764);
              v228 = v1841;
              if (v227 > 2)
              {
                memcpy((void *)((unint64_t)&v222[v1731] & v1809), (const void *)((unint64_t)&v223[v1731] & v1809), __n);
                goto LABEL_652;
              }
              if (v227 == 2)
              {
                v1672 = v87;
                if (*(_QWORD *)(((unint64_t)&v223[v1731] & v1809) + 8) < 0xFFFFFFFFuLL)
                {
                  memcpy((void *)((unint64_t)&v222[v1731] & v1809), (const void *)((unint64_t)&v223[v1731] & v1809), 0x48uLL);
                }
                else
                {
                  *v225 = *v226;
                  *(_QWORD *)(((unint64_t)&v222[v1731] & v1809) + 8) = *(_QWORD *)(((unint64_t)&v223[v1731] & v1809)
                                                                                        + 8);
                  *(_QWORD *)(((unint64_t)&v222[v1731] & v1809) + 0x10) = *(_QWORD *)(((unint64_t)&v223[v1731] & v1809)
                                                                                           + 0x10);
                  *(_QWORD *)(((unint64_t)&v222[v1731] & v1809) + 0x18) = *(_QWORD *)(((unint64_t)&v223[v1731] & v1809)
                                                                                           + 0x18);
                  v232 = *(_QWORD *)(((unint64_t)&v223[v1731] & v1809) + 0x38);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (v232)
                  {
                    *(_QWORD *)(((unint64_t)&v222[v1731] & v1809) + 0x38) = v232;
                    *(_QWORD *)(((unint64_t)&v222[v1731] & v1809) + 0x40) = *(_QWORD *)(((unint64_t)&v223[v1731] & v1809)
                                                                                             + 0x40);
                    (**(void (***)(uint64_t, uint64_t, uint64_t))(v232 - 8))((uint64_t)(v225 + 4), (uint64_t)(v226 + 4), v232);
                  }
                  else
                  {
                    v276 = *(_OWORD *)(((unint64_t)&v223[v1731] & v1809) + 0x20);
                    v277 = *(_OWORD *)(((unint64_t)&v223[v1731] & v1809) + 0x30);
                    *(_QWORD *)(((unint64_t)&v222[v1731] & v1809) + 0x40) = *(_QWORD *)(((unint64_t)&v223[v1731] & v1809)
                                                                                             + 0x40);
                    *(_OWORD *)(((unint64_t)&v222[v1731] & v1809) + 0x20) = v276;
                    *(_OWORD *)(((unint64_t)&v222[v1731] & v1809) + 0x30) = v277;
                  }
                  v87 = v1672;
                }
                v278 = ((unint64_t)v225 + 79) & 0xFFFFFFFFFFFFFFF8;
                v279 = (_QWORD *)(((unint64_t)v226 + 79) & 0xFFFFFFFFFFFFFFF8);
                if (v279[1] < 0xFFFFFFFFuLL)
                {
                  memcpy((void *)(((unint64_t)v225 + 79) & 0xFFFFFFFFFFFFFFF8), v279, 0x48uLL);
                }
                else
                {
                  *(_QWORD *)v278 = *v279;
                  *(_QWORD *)(v278 + 8) = v279[1];
                  *(_QWORD *)(v278 + 16) = v279[2];
                  *(_QWORD *)(v278 + 24) = v279[3];
                  v280 = v279[7];
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (v280)
                  {
                    *(_QWORD *)(v278 + 56) = v280;
                    *(_QWORD *)(v278 + 64) = v279[8];
                    (**(void (***)(uint64_t, uint64_t, uint64_t))(v280 - 8))(v278 + 32, (uint64_t)(v279 + 4), v280);
                  }
                  else
                  {
                    v281 = *((_OWORD *)v279 + 2);
                    v282 = *((_OWORD *)v279 + 3);
                    *(_QWORD *)(v278 + 64) = v279[8];
                    *(_OWORD *)(v278 + 32) = v281;
                    *(_OWORD *)(v278 + 48) = v282;
                  }
                  v87 = v1672;
                }
                v283 = (_QWORD *)((v278 + 79) & 0xFFFFFFFFFFFFF8);
                v284 = (_QWORD *)(((unint64_t)v279 + 79) & 0xFFFFFFFFFFFFFFF8);
                *v283 = *v284;
                v285 = (_QWORD *)(((unint64_t)v283 + 15) & 0xFFFFFFFFFFFFFFF8);
                v286 = (_QWORD *)(((unint64_t)v284 + 15) & 0xFFFFFFFFFFFFFFF8);
                *v285 = *v286;
                v287 = (void *)(((unint64_t)v285 + v1714) & v1681);
                v288 = (_BYTE *)(((unint64_t)v286 + v1714) & v1681);
                sub_21D7C4C20();
                sub_21D7C4C20();
                if (v1833)
                {
                  v289 = v1728;
                  v290 = v1826;
                  if (v1722 >= v1728)
                  {
                    v291 = (uint64_t)v288;
                    v289 = v1722;
                    v292 = v1724;
                  }
                  else
                  {
                    v291 = (unint64_t)&v288[v1725] & v1784;
                    v292 = v1729;
                  }
                  v295 = __swift_getEnumTagSinglePayload(v291, v289, v292);
                }
                else
                {
                  v290 = v1826;
                  if (!v288[v1826])
                    goto LABEL_648;
                  v293 = (v288[v1826] - 1) << v1777;
                  if (v1826 > 3)
                    v293 = 0;
                  if ((_DWORD)v1826)
                  {
                    if (v1826 <= 3)
                      v294 = v1826;
                    else
                      v294 = 4;
                    __asm { BR              X11 }
                  }
                  v295 = v293 + 1;
                }
                if (v295)
                {
                  memcpy(v287, v288, v1822);
LABEL_650:
                  *((_BYTE *)v287 + v1822) = v288[v1822];
                  *((_BYTE *)v225 + v1764) = 2;
                  goto LABEL_651;
                }
LABEL_648:
                (*(void (**)(void *, _BYTE *, uint64_t))(v1720 + 16))(v287, v288, v1724);
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v1721 + 16))(((unint64_t)v287 + v1725) & v1784, (unint64_t)&v288[v1725] & v1784, v1729);
                if (!v1833)
                  *((_BYTE *)v287 + v290) = 0;
                goto LABEL_650;
              }
              if (v227 == 1)
              {
                v229 = *(_QWORD *)(((unint64_t)&v223[v1731] & v1809) + 0x18);
                *(_QWORD *)(((unint64_t)&v222[v1731] & v1809) + 0x18) = v229;
                *(_QWORD *)(((unint64_t)&v222[v1731] & v1809) + 0x20) = *(_QWORD *)(((unint64_t)&v223[v1731] & v1809)
                                                                                         + 0x20);
                (**(void (***)(_QWORD *, _QWORD *))(v229 - 8))(v225, v226);
                v230 = (void *)(((unint64_t)v225 + v1824) & v1807);
                v231 = (const void *)(((unint64_t)v226 + v1824) & v1807);
                v1671 = v87;
                if (__swift_getEnumTagSinglePayload((uint64_t)v231, 1, v1773))
                {
                  memcpy(v230, v231, v1842);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v1765 + 16))(v230, v231, v1773);
                  __swift_storeEnumTagSinglePayload((uint64_t)v230, 0, 1, v1773);
                }
                v233 = (_QWORD *)(((unint64_t)v230 + v1839) & 0xFFFFFFFFFFFFFFF8);
                v234 = (_QWORD *)(((unint64_t)v231 + v1839) & 0xFFFFFFFFFFFFFFF8);
                *v233 = *v234;
                v233[1] = v234[1];
                v235 = ((unint64_t)v233 + 23) & 0xFFFFFFFFFFFFFFF8;
                v236 = ((unint64_t)v234 + 23) & 0xFFFFFFFFFFFFFFF8;
                *(_QWORD *)v235 = *(_QWORD *)v236;
                *(_BYTE *)(v235 + 8) = *(_BYTE *)(v236 + 8);
                v237 = ((unint64_t)v233 + 39) & 0xFFFFFFFFFFFFFFF8;
                v238 = ((unint64_t)v234 + 39) & 0xFFFFFFFFFFFFFFF8;
                *(_QWORD *)v237 = *(_QWORD *)v238;
                *(_BYTE *)(v237 + 8) = *(_BYTE *)(v238 + 8);
                v239 = ((unint64_t)v233 + 55) & 0xFFFFFFFFFFFFFFF8;
                v240 = ((unint64_t)v234 + 55) & 0xFFFFFFFFFFFFFFF8;
                v241 = *(_QWORD *)v240;
                *(_BYTE *)(v239 + 8) = *(_BYTE *)(v240 + 8);
                *(_QWORD *)v239 = v241;
                v242 = (_QWORD *)(((unint64_t)v233 + 71) & 0xFFFFFFFFFFFFFFF8);
                v243 = (_QWORD *)(((unint64_t)v234 + 71) & 0xFFFFFFFFFFFFFFF8);
                *v242 = *v243;
                v242[1] = v243[1];
                v244 = ((unint64_t)v242 + 23) & 0xFFFFFFFFFFFFFFF8;
                v245 = ((unint64_t)v243 + 23) & 0xFFFFFFFFFFFFFFF8;
                v246 = *(_QWORD *)(v245 + 24);
                sub_21D7C4C20();
                sub_21D7C4C20();
                sub_21D7C4C20();
                sub_21D7C4C20();
                if (v246 < 0xFFFFFFFF)
                {
                  v247 = *(_OWORD *)v245;
                  v248 = *(_OWORD *)(v245 + 16);
                  *(_QWORD *)(v244 + 32) = *(_QWORD *)(v245 + 32);
                  *(_OWORD *)v244 = v247;
                  *(_OWORD *)(v244 + 16) = v248;
                }
                else
                {
                  *(_QWORD *)(v244 + 24) = v246;
                  *(_QWORD *)(v244 + 32) = *(_QWORD *)(v245 + 32);
                  (**(void (***)(unint64_t, unint64_t, unint64_t))(v246 - 8))(v244, v245, v246);
                }
                v87 = v1671;
                v228 = v1841;
                v249 = (_QWORD *)((v1856 + v244) & v1789);
                v250 = (_QWORD *)((v1856 + v245) & v1789);
                if (v1723 >= 0x7FFFFFFF)
                {
                  v255 = (const void *)(((unint64_t)v250 + v1726) & v1779);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v255, v1718, v1730) <= 1)
                  {
                    v252 = (char *)(v250 + 1);
                    v253 = v1726;
                    v254 = ~v1847;
                    goto LABEL_429;
                  }
                }
                else
                {
                  v251 = v250[2];
                  if (v251 >= 0xFFFFFFFF)
                    LODWORD(v251) = -1;
                  if ((int)v251 - 1 < 0)
                  {
                    v252 = (char *)(v250 + 1);
                    v253 = v1726;
                    v254 = ~v1847;
                    v255 = (const void *)(((unint64_t)v250 + v1726) & v1779);
LABEL_429:
                    *(_BYTE *)v249 = *(_BYTE *)v250;
                    v249[1] = v250[1];
                    v249[2] = *((_QWORD *)v252 + 1);
                    v249[3] = *((_QWORD *)v252 + 2);
                    v249[4] = *((_QWORD *)v252 + 3);
                    v249[5] = *((_QWORD *)v252 + 4);
                    v249[6] = *((_QWORD *)v252 + 5);
                    v249[7] = *((_QWORD *)v252 + 6);
                    v249[8] = *((_QWORD *)v252 + 7);
                    v249[9] = *((_QWORD *)v252 + 8);
                    v249[10] = *((_QWORD *)v252 + 9);
                    v249[11] = *((_QWORD *)v252 + 10);
                    v249[12] = *((_QWORD *)v252 + 11);
                    v256 = *((_QWORD *)v252 + 12);
                    *((_BYTE *)v249 + 112) = v252[104];
                    v249[13] = v256;
                    v257 = (void *)(((unint64_t)v249 + v253) & v254);
                    sub_21D7C4C20();
                    sub_21D7C4C20();
                    sub_21D7C4C20();
                    sub_21D7C4C20();
                    sub_21D7C4C20();
                    sub_21D7C4C20();
                    if (__swift_getEnumTagSinglePayload((uint64_t)v255, 1, v1730))
                    {
                      memcpy(v257, v255, v1817);
                    }
                    else
                    {
                      (*(void (**)(void *, const void *, uint64_t))(v1712 + 16))(v257, v255, v1730);
                      __swift_storeEnumTagSinglePayload((uint64_t)v257, 0, 1, v1730);
                    }
                    v87 = v1671;
                    v228 = v1841;
                    goto LABEL_485;
                  }
                }
                memcpy(v249, v250, v1820);
LABEL_485:
                *((_BYTE *)v225 + v1764) = 1;
                goto LABEL_652;
              }
              *v225 = *v226;
              *(_QWORD *)(((unint64_t)&v222[v1731] & v1809) + 8) = *(_QWORD *)(((unint64_t)&v223[v1731] & v1809)
                                                                                    + 8);
              *(_QWORD *)(((unint64_t)&v222[v1731] & v1809) + 0x10) = *(_QWORD *)(((unint64_t)&v223[v1731] & v1809)
                                                                                       + 0x10);
              *(_QWORD *)(((unint64_t)&v222[v1731] & v1809) + 0x18) = *(_QWORD *)(((unint64_t)&v223[v1731] & v1809)
                                                                                       + 0x18);
              *(_QWORD *)(((unint64_t)&v222[v1731] & v1809) + 0x20) = *(_QWORD *)(((unint64_t)&v223[v1731] & v1809)
                                                                                       + 0x20);
              *(_QWORD *)(((unint64_t)&v222[v1731] & v1809) + 0x28) = *(_QWORD *)(((unint64_t)&v223[v1731] & v1809)
                                                                                       + 0x28);
              *((_BYTE *)v225 + v1764) = 0;
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
LABEL_651:
              v228 = v1841;
LABEL_652:
              v94 = v1679;
LABEL_653:
              v356 = &v222[v228];
              *(_WORD *)v356 = *(_WORD *)&v223[v228];
              v356[2] = v223[v228 + 2];
              v356[3] = v223[v228 + 3];
              v357 = (unint64_t)&v222[v228 + 11] & 0xFFFFFFFFFFFFFFF8;
              v358 = (unint64_t)&v223[v228 + 11] & 0xFFFFFFFFFFFFFFF8;
              v359 = *(_QWORD *)(v358 + 24);
              if (v359 < 0xFFFFFFFF)
              {
                v360 = *(_OWORD *)v358;
                v361 = *(_OWORD *)(v358 + 16);
                v362 = *(_OWORD *)(v358 + 32);
                *(_OWORD *)(v357 + 41) = *(_OWORD *)(v358 + 41);
                *(_OWORD *)(v357 + 16) = v361;
                *(_OWORD *)(v357 + 32) = v362;
                *(_OWORD *)v357 = v360;
              }
              else
              {
                *(_QWORD *)(v357 + 24) = v359;
                *(_QWORD *)(v357 + 32) = *(_QWORD *)(v358 + 32);
                (**(void (***)(unint64_t, unint64_t))(v359 - 8))(v357, v358);
                *(_QWORD *)(v357 + 40) = *(_QWORD *)(v358 + 40);
                *(_QWORD *)(v357 + 48) = *(_QWORD *)(v358 + 48);
                *(_BYTE *)(v357 + 56) = *(_BYTE *)(v358 + 56);
                sub_21D7C4C20();
              }
              v363 = v1771;
              *(_BYTE *)(v357 + 57) = *(_BYTE *)(v358 + 57);
              v364 = (_QWORD *)((v1770 + v357) & v1794);
              v365 = (_QWORD *)((v1770 + v358) & v1794);
              if (v1769 < 0)
              {
                v367 = (const void *)(((unint64_t)v365 + v1771) & v1787);
                v368 = __swift_getEnumTagSinglePayload((uint64_t)v367, v1727, v1772);
                v366 = v1787;
                v363 = v1771;
                if (v368 < 2)
                  goto LABEL_660;
              }
              else
              {
                v366 = v1787;
                if (v365[1] >= 0xFFFFFFFFuLL)
                {
                  v367 = (const void *)(((unint64_t)v365 + v1771) & v1787);
LABEL_660:
                  v369 = v87;
                  *v364 = *v365;
                  v364[1] = v365[1];
                  v370 = (void *)(((unint64_t)v364 + v363) & v366);
                  sub_21D7C4C20();
                  if (__swift_getEnumTagSinglePayload((uint64_t)v367, 1, v1772))
                  {
                    memcpy(v370, v367, v1717);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1719 + 16))(v370, v367, v1772);
                    __swift_storeEnumTagSinglePayload((uint64_t)v370, 0, 1, v1772);
                  }
                  v87 = v369;
                  v371 = v1766;
                  goto LABEL_665;
                }
              }
              v371 = v1766;
              memcpy(v364, v365, v1766);
LABEL_665:
              v372 = (_QWORD *)(((unint64_t)v364 + v1867 + v371) & v94);
              v373 = (_QWORD *)(((unint64_t)v365 + v1867 + v371) & v94);
              v375 = v1681;
              v1868 = v372;
              switch(*((_BYTE *)v373 + v1791))
              {
                case 0:
                  v376 = v1760 + 1;
                  v1673 = v87;
                  if (__swift_getEnumTagSinglePayload((uint64_t)v373, 1, v1773))
                  {
                    memcpy(v372, v373, v1842);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1765 + 16))(v372, v373, v1773);
                    __swift_storeEnumTagSinglePayload((uint64_t)v372, 0, 1, v1773);
                  }
                  v1659 = v89;
                  v455 = ((unint64_t)v372 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v1795 = v373;
                  v456 = ((unint64_t)v373 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v457 = *(_QWORD *)(v456 + 24);
                  *(_QWORD *)(v455 + 24) = v457;
                  *(_QWORD *)(v455 + 32) = *(_QWORD *)(v456 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v457 - 8))(v455, v456);
                  v458 = (_QWORD *)((v455 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v459 = (_QWORD *)((v456 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v458 = *v459;
                  v458[1] = v459[1];
                  v460 = (_QWORD *)(((unint64_t)v458 + 23) & 0xFFFFFFFFFFFFF8);
                  v461 = (_QWORD *)(((unint64_t)v459 + 23) & 0xFFFFFFFFFFFFF8);
                  *v460 = *v461;
                  v462 = (_QWORD *)(((unint64_t)v460 + 15) & 0xFFFFFFFFFFFFFFF8);
                  v463 = (_QWORD *)(((unint64_t)v461 + 15) & 0xFFFFFFFFFFFFFFF8);
                  *v462 = *v463;
                  v462[1] = v463[1];
                  v464 = (_QWORD *)(((unint64_t)v462 + v1762) & v1862);
                  v465 = (_QWORD *)(((unint64_t)v463 + v1762) & v1862);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (v1710 > 0x7FFFFFFE)
                  {
                    v467 = (_QWORD *)(((unint64_t)v465 + 23) & 0xFFFFFFFFFFFFFFF8);
                    v468 = ((unint64_t)v467 + 23) & 0xFFFFFFFFFFFFFFF8;
                    if (!__swift_getEnumTagSinglePayload((v1818 + v468 + 33) & v1775, v1710, v1709))
                      goto LABEL_769;
                  }
                  else
                  {
                    v466 = v465[1];
                    if (v466 >= 0xFFFFFFFF)
                      LODWORD(v466) = -1;
                    if ((v466 + 1) <= 1)
                    {
                      v467 = (_QWORD *)(((unint64_t)v465 + 23) & 0xFFFFFFFFFFFFFFF8);
                      v468 = ((unint64_t)v467 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_769:
                      *v464 = *v465;
                      v464[1] = v465[1];
                      v470 = (_QWORD *)(((unint64_t)v464 + 23) & 0xFFFFFFFFFFFFFFF8);
                      *v470 = *v467;
                      v470[1] = v467[1];
                      v471 = ((unint64_t)v470 + 23) & 0xFFFFFFFFFFFFFFF8;
                      *(_QWORD *)v471 = *(_QWORD *)v468;
                      *(_QWORD *)(v471 + 8) = *(_QWORD *)(v468 + 8);
                      *(_BYTE *)(v471 + 16) = *(_BYTE *)(v468 + 16);
                      v472 = ((unint64_t)v470 + 47) & 0xFFFFFFFFFFFFFFF8;
                      v473 = ((unint64_t)v467 + 47) & 0xFFFFFFFFFFFFFFF8;
                      v474 = *(void **)v473;
                      *(_QWORD *)v472 = *(_QWORD *)v473;
                      *(_BYTE *)(v472 + 8) = *(_BYTE *)(v473 + 8);
                      v475 = (v1818 + 9 + v472) & v1775;
                      v476 = (v1818 + 9 + v473) & v1775;
                      v477 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1813 + 16);
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      v478 = v474;
                      v477(v475, v476, v1709);
                      v469 = v1860;
LABEL_770:
                      *((_BYTE *)v464 + v469) = *((_BYTE *)v465 + v469);
                      v479 = ((unint64_t)v464 + v469) & 0xFFFFFFFFFFFFFFF8;
                      v480 = ((unint64_t)v465 + v469) & 0xFFFFFFFFFFFFFFF8;
                      *(_QWORD *)(v479 + 8) = *(_QWORD *)(v480 + 8);
                      v481 = (_QWORD *)((v479 + 23) & 0xFFFFFFFFFFFFFFF8);
                      v482 = (_QWORD *)((v480 + 23) & 0xFFFFFFFFFFFFFFF8);
                      *v481 = *v482;
                      v481[1] = v482[1];
                      v483 = (void *)(((unint64_t)v481 + v1837) & v1681);
                      v484 = (_BYTE *)(((unint64_t)v482 + v1837) & v1681);
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      v485 = v1726;
                      v486 = v1704;
                      if (v1833)
                      {
                        v487 = v1728;
                        v488 = v1784;
                        if (v1722 >= v1728)
                        {
                          v489 = (uint64_t)v484;
                          v487 = v1722;
                          v490 = v1724;
                        }
                        else
                        {
                          v489 = (unint64_t)&v484[v1725] & v1784;
                          v490 = v1729;
                        }
                        v888 = __swift_getEnumTagSinglePayload(v489, v487, v490);
                      }
                      else
                      {
                        v488 = v1784;
                        if (!v484[v1826])
                          goto LABEL_1444;
                        v833 = (v484[v1826] - 1) << v1777;
                        if (v1826 > 3)
                          v833 = 0;
                        if ((_DWORD)v1826)
                        {
                          if (v1826 <= 3)
                            v834 = v1826;
                          else
                            v834 = 4;
                          __asm { BR              X11 }
                        }
                        v888 = v833 + 1;
                      }
                      if (v888)
                      {
                        memcpy(v483, v484, v1822);
                        goto LABEL_1446;
                      }
LABEL_1444:
                      (*(void (**)(void *, _BYTE *, uint64_t))(v1720 + 16))(v483, v484, v1724);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1721 + 16))(((unint64_t)v483 + v1725) & v488, (unint64_t)&v484[v1725] & v488, v1729);
                      if (!v1833)
                        *((_BYTE *)v483 + v1826) = 0;
LABEL_1446:
                      v1110 = (_QWORD *)(((unint64_t)v483 + v1785) & v1845);
                      v1111 = (uint64_t *)((unint64_t)&v484[v1785] & v1845);
                      v1112 = v1819;
                      if ((v1728 & 0x80000000) != 0)
                      {
                        v1114 = __swift_getEnumTagSinglePayload(((unint64_t)v1111 + v1711) & v488, v1728, v1729);
                      }
                      else
                      {
                        v1113 = *v1111;
                        if ((unint64_t)*v1111 >= 0xFFFFFFFF)
                          LODWORD(v1113) = -1;
                        v1114 = v1113 + 1;
                      }
                      if (v1114)
                      {
                        memcpy(v1110, v1111, v1815);
                      }
                      else
                      {
                        *v1110 = *v1111;
                        v1115 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1721 + 16);
                        sub_21D7C4C20();
                        v1115(((unint64_t)v1110 + v1711) & v488, ((unint64_t)v1111 + v1711) & v488, v1729);
                        v485 = v1726;
                      }
                      v1116 = v1773;
                      v1117 = (_QWORD *)(((unint64_t)v1110 + v1763) & v1789);
                      v1118 = (_QWORD *)(((unint64_t)v1111 + v1763) & v1789);
                      if (v1723 >= 0x7FFFFFFF)
                      {
                        v1122 = (const void *)(((unint64_t)v1118 + v485) & v1779);
                        if (__swift_getEnumTagSinglePayload((uint64_t)v1122, v1718, v1730) <= 1)
                        {
                          v1120 = (char *)(v1118 + 1);
                          v1121 = ~v1847;
                          goto LABEL_1461;
                        }
                      }
                      else
                      {
                        v1119 = v1118[2];
                        if (v1119 >= 0xFFFFFFFF)
                          LODWORD(v1119) = -1;
                        if ((int)v1119 - 1 < 0)
                        {
                          v1120 = (char *)(v1118 + 1);
                          v1121 = ~v1847;
                          v1122 = (const void *)(((unint64_t)v1118 + v485) & v1779);
LABEL_1461:
                          *(_BYTE *)v1117 = *(_BYTE *)v1118;
                          v1117[1] = v1118[1];
                          v1117[2] = *((_QWORD *)v1120 + 1);
                          v1117[3] = *((_QWORD *)v1120 + 2);
                          v1117[4] = *((_QWORD *)v1120 + 3);
                          v1117[5] = *((_QWORD *)v1120 + 4);
                          v1117[6] = *((_QWORD *)v1120 + 5);
                          v1117[7] = *((_QWORD *)v1120 + 6);
                          v1117[8] = *((_QWORD *)v1120 + 7);
                          v1117[9] = *((_QWORD *)v1120 + 8);
                          v1117[10] = *((_QWORD *)v1120 + 9);
                          v1117[11] = *((_QWORD *)v1120 + 10);
                          v1117[12] = *((_QWORD *)v1120 + 11);
                          v1123 = *((_QWORD *)v1120 + 12);
                          *((_BYTE *)v1117 + 112) = v1120[104];
                          v1117[13] = v1123;
                          v1124 = (void *)(((unint64_t)v1117 + v485) & v1121);
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          if (__swift_getEnumTagSinglePayload((uint64_t)v1122, 1, v1730))
                          {
                            memcpy(v1124, v1122, v1817);
                          }
                          else
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v1712 + 16))(v1124, v1122, v1730);
                            __swift_storeEnumTagSinglePayload((uint64_t)v1124, 0, 1, v1730);
                          }
                          v1125 = v1820;
                          v1116 = v1773;
                          v1112 = v1819;
                          v486 = v1704;
LABEL_1466:
                          v1126 = (unint64_t)v1117 + v1849 + v1125;
                          v1127 = (void *)(v1126 & v1811);
                          v1128 = (unint64_t)v1118 + v1849 + v1125;
                          v1129 = (const void *)(v1128 & v1811);
                          if (v1716 < 0x7FFFFFFF)
                          {
                            v372 = v1868;
                            if (*(_QWORD *)((((unint64_t)v1129 + v1839) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                              goto LABEL_1468;
                          }
                          else
                          {
                            v372 = v1868;
                            if (__swift_getEnumTagSinglePayload(v1128 & v1811, v1112, v1116) >= 2)
                            {
LABEL_1468:
                              memcpy(v1127, v1129, v486);
                              v1130 = v486;
                              goto LABEL_1478;
                            }
                          }
                          if (__swift_getEnumTagSinglePayload((uint64_t)v1129, 1, v1116))
                          {
                            memcpy(v1127, v1129, v1842);
                          }
                          else
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v1765 + 16))(v1127, v1129, v1116);
                            __swift_storeEnumTagSinglePayload((uint64_t)v1127, 0, 1, v1116);
                          }
                          v1131 = ((unint64_t)v1127 + v1839) & 0xFFFFFFFFFFFFFFF8;
                          v1132 = ((unint64_t)v1129 + v1839) & 0xFFFFFFFFFFFFFFF8;
                          v1133 = *(_QWORD *)(v1132 + 24);
                          *(_QWORD *)(v1131 + 24) = v1133;
                          *(_QWORD *)(v1131 + 32) = *(_QWORD *)(v1132 + 32);
                          (**(void (***)(unint64_t, unint64_t))(v1133 - 8))(v1131, v1132);
                          v1134 = (v1131 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1135 = (v1132 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1136 = *(_QWORD *)(v1135 + 24);
                          if (v1136 < 0xFFFFFFFF)
                          {
                            v1137 = *(_OWORD *)v1135;
                            v1138 = *(_OWORD *)(v1135 + 16);
                            *(_QWORD *)(v1134 + 32) = *(_QWORD *)(v1135 + 32);
                            *(_OWORD *)v1134 = v1137;
                            *(_OWORD *)(v1134 + 16) = v1138;
                          }
                          else
                          {
                            *(_QWORD *)(v1134 + 24) = v1136;
                            *(_QWORD *)(v1134 + 32) = *(_QWORD *)(v1135 + 32);
                            (**(void (***)(unint64_t, unint64_t))(v1136 - 8))((v1131 + 47) & 0xFFFFFFFFFFFFFFF8, v1135);
                          }
                          v372 = v1868;
                          v1139 = (_QWORD *)((v1134 + 47) & 0xFFFFFFFFFFFFFFF8);
                          v1140 = (_QWORD *)((v1135 + 47) & 0xFFFFFFFFFFFFFFF8);
                          *v1139 = *v1140;
                          v1139[1] = v1140[1];
                          sub_21D7C4C20();
                          v1130 = v486;
                          if ((_DWORD)v1112)
                            v1130 = ((((((v1760 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                                  + 16;
LABEL_1478:
                          v1141 = (v1126 | v1854) + v1130;
                          v1142 = (void *)(v1141 & v1811);
                          v1143 = (v1128 | v1854) + v1130;
                          v1144 = (const void *)(v1143 & v1811);
                          if (v1716 < 0x7FFFFFFF)
                          {
                            if (*(_QWORD *)((((unint64_t)v1144 + v1839) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                              goto LABEL_1480;
                          }
                          else if (__swift_getEnumTagSinglePayload(v1143 & v1811, v1112, v1116) >= 2)
                          {
LABEL_1480:
                            memcpy(v1142, v1144, v486);
                            v1145 = v486;
                            goto LABEL_1490;
                          }
                          if (__swift_getEnumTagSinglePayload((uint64_t)v1144, 1, v1116))
                          {
                            memcpy(v1142, v1144, v1842);
                          }
                          else
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v1765 + 16))(v1142, v1144, v1116);
                            __swift_storeEnumTagSinglePayload((uint64_t)v1142, 0, 1, v1116);
                          }
                          v1146 = ((unint64_t)v1142 + v1839) & 0xFFFFFFFFFFFFFFF8;
                          v1147 = ((unint64_t)v1144 + v1839) & 0xFFFFFFFFFFFFFFF8;
                          v1148 = *(_QWORD *)(v1147 + 24);
                          *(_QWORD *)(v1146 + 24) = v1148;
                          *(_QWORD *)(v1146 + 32) = *(_QWORD *)(v1147 + 32);
                          (**(void (***)(unint64_t, unint64_t))(v1148 - 8))(v1146, v1147);
                          v1149 = (v1146 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1150 = (v1147 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1151 = *(_QWORD *)(v1150 + 24);
                          if (v1151 < 0xFFFFFFFF)
                          {
                            v1152 = *(_OWORD *)v1150;
                            v1153 = *(_OWORD *)(v1150 + 16);
                            *(_QWORD *)(v1149 + 32) = *(_QWORD *)(v1150 + 32);
                            *(_OWORD *)v1149 = v1152;
                            *(_OWORD *)(v1149 + 16) = v1153;
                          }
                          else
                          {
                            *(_QWORD *)(v1149 + 24) = v1151;
                            *(_QWORD *)(v1149 + 32) = *(_QWORD *)(v1150 + 32);
                            (**(void (***)(unint64_t, unint64_t))(v1151 - 8))((v1146 + 47) & 0xFFFFFFFFFFFFFFF8, v1150);
                          }
                          v372 = v1868;
                          v1154 = (_QWORD *)((v1149 + 47) & 0xFFFFFFFFFFFFFFF8);
                          v1155 = (_QWORD *)((v1150 + 47) & 0xFFFFFFFFFFFFFFF8);
                          *v1154 = *v1155;
                          v1154[1] = v1155[1];
                          sub_21D7C4C20();
                          v1145 = v486;
                          if ((_DWORD)v1112)
                            v1145 = ((((((v1760 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                                  + 16;
LABEL_1490:
                          v1156 = (char *)(((v1141 | v1854) + v1145) & v1811);
                          v1157 = (char *)(((v1143 | v1854) + v1145) & v1811);
                          if (v1716 < 0x7FFFFFFF)
                          {
                            v89 = v1659;
                            v373 = v1795;
                            if (*(_QWORD *)(((unint64_t)&v1157[v1839] & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                            {
LABEL_1492:
                              memcpy(v1156, v1157, v486);
                              if (!(_DWORD)v1112)
                                goto LABEL_1504;
                              goto LABEL_1503;
                            }
                          }
                          else
                          {
                            v89 = v1659;
                            v373 = v1795;
                            if (__swift_getEnumTagSinglePayload((uint64_t)v1157, v1112, v1116) >= 2)
                              goto LABEL_1492;
                          }
                          if (__swift_getEnumTagSinglePayload((uint64_t)v1157, 1, v1116))
                          {
                            memcpy(v1156, v1157, v1842);
                          }
                          else
                          {
                            (*(void (**)(char *, char *, uint64_t))(v1765 + 16))(v1156, v1157, v1116);
                            __swift_storeEnumTagSinglePayload((uint64_t)v1156, 0, 1, v1116);
                          }
                          v1158 = (unint64_t)&v1156[v1839] & 0xFFFFFFFFFFFFFFF8;
                          v1159 = (unint64_t)&v1157[v1839] & 0xFFFFFFFFFFFFFFF8;
                          v1160 = *(_QWORD *)(v1159 + 24);
                          *(_QWORD *)(v1158 + 24) = v1160;
                          *(_QWORD *)(v1158 + 32) = *(_QWORD *)(v1159 + 32);
                          (**(void (***)(unint64_t, unint64_t))(v1160 - 8))(v1158, v1159);
                          v1161 = (v1158 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1162 = (v1159 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1163 = *(_QWORD *)(v1162 + 24);
                          if (v1163 < 0xFFFFFFFF)
                          {
                            v1164 = *(_OWORD *)v1162;
                            v1165 = *(_OWORD *)(v1162 + 16);
                            *(_QWORD *)(v1161 + 32) = *(_QWORD *)(v1162 + 32);
                            *(_OWORD *)v1161 = v1164;
                            *(_OWORD *)(v1161 + 16) = v1165;
                          }
                          else
                          {
                            *(_QWORD *)(v1161 + 24) = v1163;
                            *(_QWORD *)(v1161 + 32) = *(_QWORD *)(v1162 + 32);
                            (**(void (***)(unint64_t, unint64_t))(v1163 - 8))((v1158 + 47) & 0xFFFFFFFFFFFFFFF8, v1162);
                          }
                          v372 = v1868;
                          v1166 = (_QWORD *)((v1161 + 47) & 0xFFFFFFFFFFFFFFF8);
                          v1167 = (_QWORD *)((v1162 + 47) & 0xFFFFFFFFFFFFFFF8);
                          *v1166 = *v1167;
                          v1166[1] = v1167[1];
                          sub_21D7C4C20();
                          v89 = v1659;
                          v373 = v1795;
                          if (!(_DWORD)v1112)
                            goto LABEL_1504;
                          v486 = ((((((v1760 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                               + 16;
LABEL_1503:
                          v376 = v1760;
LABEL_1504:
                          *(_QWORD *)&v1156[v486] = *(_QWORD *)&v1157[v486];
                          v1168 = v1756
                                + ((v1761
                                  + ((v1761
                                    + ((v1835
                                      + ((v1763
                                        + ((v1785
                                          + ((v1837
                                            + ((((((v1762
                                                  + ((((((((v376 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                                                      + 23) & 0xFFFFFFFFFFFFFFF8)
                                                    + 15) & 0xFFFFFFFFFFFFFFF8)) & v1862)
                                                + v1860) & 0xFFFFFFFFFFFFFFF8)
                                              + 23) & 0xFFFFFFFFFFFFFFF8)) & v1681)) & v1845)) & v1789)) & v1811)) & v1811)) & v1811);
                          if (v1758 > v1168)
                            v1168 = v1820 + ((v1847 + 8) & ~v1851);
                          if (v1168 <= v1755)
                            v1168 = v1755;
                          if (v1168 <= v1759)
                            v1168 = v1759;
                          if (v1168 <= v1751)
                            v1168 = v1751;
                          if (v1168 <= v1749)
                            v1168 = v1749;
                          if (v1168 <= v1746)
                            v1168 = v1746;
                          if (v1168 <= v1747)
                            v1168 = (((((v1858 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                  + 16;
                          if (v1168 <= v1748)
                            v1168 = v1748;
                          if (v1168 <= v1737)
                            v1168 = v1737;
                          if (v1168 <= v1828)
                            v1168 = v1828;
                          if (v1168 <= v1734)
                            v1168 = v1734;
                          if (v1168 <= v1736)
                            v1168 = v1736;
                          if (v1168 <= v1733)
                            v1168 = v1733;
                          if (v1168 <= v1831)
                            v1168 = v1831;
                          if (v1168 <= v1735)
                            v1168 = v1735;
                          if (v1168 <= v1758)
                            v1168 = v1820 + ((v1847 + 8) & ~v1851);
                          if (v1168 <= v1732)
                            v1168 = v1732;
                          if (v1168 <= v1738)
                            v1168 = ((v1858 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
                          if (v1168 <= v1740)
                            v1168 = v1740;
                          if (v1168 <= v1742)
                            v1168 = v1742;
                          if (v1168 <= v1741)
                            v1168 = v1741;
                          if (v1168 <= v1744)
                            v1168 = v1744;
                          if (v1168 <= v1739)
                            v1168 = v1739;
                          if (v1168 <= v1743)
                            v1168 = v1743;
                          if (v1168 <= v1745)
                            v1168 = v1745;
                          if (v1168 <= v1782)
                            v1168 = v1782;
                          if (v1168 <= v1752)
                            v1168 = v1752;
                          if (v1168 <= v1754)
                            v1168 = v1754;
                          if (v1168 <= v1757)
                            v1168 = v1757;
                          if (v1168 <= v1858)
                            v1168 = v1858;
                          if (v1168 <= v1677)
                            v1168 = v1677;
                          if (v1168 <= v1753)
                            v1168 = v1753;
                          if (v1168 <= v1750)
                            v1168 = v1750;
                          if (v1168 <= 8)
                            v1168 = 8;
                          *((_BYTE *)v372 + v1168) = 0;
LABEL_2186:
                          v87 = v1673;
                          goto LABEL_2187;
                        }
                      }
                      v1125 = v1820;
                      memcpy(v1117, v1118, v1820);
                      goto LABEL_1466;
                    }
                  }
                  v469 = v1860;
                  memcpy(v464, v465, v1860);
                  goto LABEL_770;
                case 1:
                  v1674 = v87;
                  *v372 = *v373;
                  v377 = ((unint64_t)v372 + v1851 + 8) & v1789;
                  v378 = v373;
                  v379 = ((unint64_t)v373 + v1851 + 8) & v1789;
                  *(_BYTE *)v377 = *(_BYTE *)v379;
                  *(_QWORD *)(v377 + 8) = *(_QWORD *)(v379 + 8);
                  *(_QWORD *)(v377 + 16) = *(_QWORD *)(v379 + 0x10);
                  *(_QWORD *)(v377 + 24) = *(_QWORD *)(v379 + 0x18);
                  *(_QWORD *)(v377 + 32) = *(_QWORD *)(v379 + 0x20);
                  *(_QWORD *)(v377 + 40) = *(_QWORD *)(v379 + 0x28);
                  *(_QWORD *)(v377 + 48) = *(_QWORD *)(v379 + 0x30);
                  *(_QWORD *)(v377 + 56) = *(_QWORD *)(v379 + 0x38);
                  *(_QWORD *)(v377 + 64) = *(_QWORD *)(v379 + 0x40);
                  *(_QWORD *)(v377 + 72) = *(_QWORD *)(v379 + 0x48);
                  *(_QWORD *)(v377 + 80) = *(_QWORD *)(v379 + 0x50);
                  *(_QWORD *)(v377 + 88) = *(_QWORD *)(v379 + 0x58);
                  *(_QWORD *)(v377 + 96) = *(_QWORD *)(v379 + 0x60);
                  v380 = *(_QWORD *)(v379 + 0x68);
                  *(_BYTE *)(v377 + 112) = *(_BYTE *)(v379 + 0x70);
                  *(_QWORD *)(v377 + 104) = v380;
                  v381 = (void *)((v1726 + v377) & v1779);
                  v382 = (const void *)((v1726 + v379) & v1779);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (__swift_getEnumTagSinglePayload((uint64_t)v382, 1, v1730))
                  {
                    memcpy(v381, v382, v1817);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1712 + 16))(v381, v382, v1730);
                    __swift_storeEnumTagSinglePayload((uint64_t)v381, 0, 1, v1730);
                  }
                  v491 = 1;
                  goto LABEL_888;
                case 2:
                  *v372 = *v373;
                  v383 = 2;
                  goto LABEL_759;
                case 3:
                  v1673 = v87;
                  if (__swift_getEnumTagSinglePayload((uint64_t)v373, 1, v1773))
                  {
                    memcpy(v372, v373, v1842);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1765 + 16))(v372, v373, v1773);
                    __swift_storeEnumTagSinglePayload((uint64_t)v372, 0, 1, v1773);
                  }
                  v492 = ((unint64_t)v372 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v493 = ((unint64_t)v373 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v494 = *(_QWORD *)(v493 + 24);
                  *(_QWORD *)(v492 + 24) = v494;
                  *(_QWORD *)(v492 + 32) = *(_QWORD *)(v493 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v494 - 8))(v492, v493);
                  v495 = (_QWORD *)((v492 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v496 = (_QWORD *)((v493 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v495 = *v496;
                  v495[1] = v496[1];
                  v497 = (void *)(((unint64_t)v495 + v1837) & v1681);
                  v498 = (_BYTE *)(((unint64_t)v496 + v1837) & v1681);
                  sub_21D7C4C20();
                  v1796 = v373;
                  if (v1833)
                  {
                    v499 = v1728;
                    v500 = v1784;
                    if (v1722 >= v1728)
                    {
                      v501 = (uint64_t)v498;
                      v499 = v1722;
                      v502 = v1724;
                    }
                    else
                    {
                      v501 = (unint64_t)&v498[v1725] & v1784;
                      v502 = v1729;
                    }
                    v889 = __swift_getEnumTagSinglePayload(v501, v499, v502);
                  }
                  else
                  {
                    v500 = v1784;
                    if (!v498[v1826])
                      goto LABEL_1576;
                    v835 = (v498[v1826] - 1) << v1777;
                    if (v1826 > 3)
                      v835 = 0;
                    if ((_DWORD)v1826)
                    {
                      if (v1826 <= 3)
                        v836 = v1826;
                      else
                        v836 = 4;
                      __asm { BR              X11 }
                    }
                    v889 = v835 + 1;
                  }
                  if (v889)
                  {
                    memcpy(v497, v498, v1822);
                    goto LABEL_1578;
                  }
LABEL_1576:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1720 + 16))(v497, v498, v1724);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1721 + 16))(((unint64_t)v497 + v1725) & v500, (unint64_t)&v498[v1725] & v500, v1729);
                  if (!v1833)
                    *((_BYTE *)v497 + v1826) = 0;
LABEL_1578:
                  *((_BYTE *)v497 + v1822) = v498[v1822];
                  v1169 = (unint64_t)&v498[v1822 + 1 + v1812] & v96;
                  (*(void (**)(unint64_t, uint64_t, uint64_t))(v1696 + 16))(((unint64_t)v497 + v1822 + v1812 + 1) & v96, v1169, v1697);
                  v1170 = (v1692 + (((unint64_t)v497 + v1822 + v1812 + 1) & v96)) & 0xFFFFFFFFFFFFFFF8;
                  v1171 = (v1692 + v1169) & 0xFFFFFFFFFFFFFFF8;
                  v1172 = *(_QWORD *)(v1171 + 24);
                  if (v1172 < 0xFFFFFFFF)
                  {
                    v1173 = *(_OWORD *)v1171;
                    v1174 = *(_OWORD *)(v1171 + 16);
                    *(_QWORD *)(v1170 + 32) = *(_QWORD *)(v1171 + 32);
                    *(_OWORD *)v1170 = v1173;
                    *(_OWORD *)(v1170 + 16) = v1174;
                  }
                  else
                  {
                    *(_QWORD *)(v1170 + 24) = v1172;
                    *(_QWORD *)(v1170 + 32) = *(_QWORD *)(v1171 + 32);
                    (**(void (***)(unint64_t, unint64_t))(v1172 - 8))(v1170, v1171);
                  }
                  v1175 = (_QWORD *)((v1856 + v1170) & v1789);
                  v1176 = (_QWORD *)((v1856 + v1171) & v1789);
                  if (v1723 >= 0x7FFFFFFF)
                  {
                    v1181 = (const void *)(((unint64_t)v1176 + v1726) & v1779);
                    if (__swift_getEnumTagSinglePayload((uint64_t)v1181, v1718, v1730) <= 1)
                    {
                      v1667 = v89;
                      v1178 = (char *)(v1176 + 1);
                      v1179 = v1726;
                      v1180 = ~v1847;
                      goto LABEL_1588;
                    }
                  }
                  else
                  {
                    v1177 = *(_QWORD *)(((v1856 + v1171) & v1789) + 0x10);
                    if (v1177 >= 0xFFFFFFFF)
                      LODWORD(v1177) = -1;
                    if ((int)v1177 - 1 < 0)
                    {
                      v1667 = v89;
                      v1178 = (char *)(v1176 + 1);
                      v1179 = v1726;
                      v1180 = ~v1847;
                      v1181 = (const void *)(((unint64_t)v1176 + v1726) & v1779);
LABEL_1588:
                      *(_BYTE *)v1175 = *(_BYTE *)v1176;
                      v1175[1] = v1176[1];
                      v1175[2] = *((_QWORD *)v1178 + 1);
                      v1175[3] = *((_QWORD *)v1178 + 2);
                      v1175[4] = *((_QWORD *)v1178 + 3);
                      v1175[5] = *((_QWORD *)v1178 + 4);
                      v1175[6] = *((_QWORD *)v1178 + 5);
                      v1175[7] = *((_QWORD *)v1178 + 6);
                      v1175[8] = *((_QWORD *)v1178 + 7);
                      v1175[9] = *((_QWORD *)v1178 + 8);
                      v1175[10] = *((_QWORD *)v1178 + 9);
                      v1175[11] = *((_QWORD *)v1178 + 10);
                      v1175[12] = *((_QWORD *)v1178 + 11);
                      v1182 = *((_QWORD *)v1178 + 12);
                      *((_BYTE *)v1175 + 112) = v1178[104];
                      v1175[13] = v1182;
                      v1183 = (void *)(((unint64_t)v1175 + v1179) & v1180);
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      if (__swift_getEnumTagSinglePayload((uint64_t)v1181, 1, v1730))
                      {
                        memcpy(v1183, v1181, v1817);
                      }
                      else
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v1712 + 16))(v1183, v1181, v1730);
                        __swift_storeEnumTagSinglePayload((uint64_t)v1183, 0, 1, v1730);
                      }
                      v89 = v1667;
                      v1184 = v1820;
LABEL_1593:
                      v1185 = (void *)(((unint64_t)v1175 + v1876 + v1184) & v1681);
                      v1186 = (_BYTE *)(((unint64_t)v1176 + v1876 + v1184) & v1681);
                      v373 = v1796;
                      if (v1833)
                      {
                        v1187 = v1728;
                        if (v1722 >= v1728)
                        {
                          v1188 = (uint64_t)v1186;
                          v1187 = v1722;
                          v1189 = v1724;
                        }
                        else
                        {
                          v1188 = (unint64_t)&v1186[v1725] & v1784;
                          v1189 = v1729;
                        }
                        v1192 = __swift_getEnumTagSinglePayload(v1188, v1187, v1189);
                        v372 = v1868;
                      }
                      else
                      {
                        v372 = v1868;
                        if (!v1186[v1826])
                          goto LABEL_1719;
                        v1190 = (v1186[v1826] - 1) << v1777;
                        if (v1826 > 3)
                          v1190 = 0;
                        if ((_DWORD)v1826)
                        {
                          if (v1826 <= 3)
                            v1191 = v1826;
                          else
                            v1191 = 4;
                          __asm { BR              X11 }
                        }
                        v1192 = v1190 + 1;
                      }
                      if (v1192)
                      {
                        memcpy(v1185, v1186, v1822);
LABEL_1721:
                        v1239 = (_QWORD *)(((unint64_t)v1185 + v1785) & v1845);
                        v1240 = (uint64_t *)((unint64_t)&v1186[v1785] & v1845);
                        if ((v1728 & 0x80000000) != 0)
                        {
                          v1242 = __swift_getEnumTagSinglePayload(((unint64_t)v1240 + v1711) & v1784, v1728, v1729);
                        }
                        else
                        {
                          v1241 = *v1240;
                          if ((unint64_t)*v1240 >= 0xFFFFFFFF)
                            LODWORD(v1241) = -1;
                          v1242 = v1241 + 1;
                        }
                        if (v1242)
                        {
                          memcpy(v1239, v1240, v1815);
                        }
                        else
                        {
                          *v1239 = *v1240;
                          v1243 = ((unint64_t)v1239 + v1711) & v1784;
                          v1244 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1721 + 16);
                          sub_21D7C4C20();
                          v1245 = v1243;
                          v372 = v1868;
                          v1244(v1245, ((unint64_t)v1240 + v1711) & v1784, v1729);
                        }
                        v948 = 3;
                        goto LABEL_2184;
                      }
LABEL_1719:
                      (*(void (**)(void *, _BYTE *, uint64_t))(v1720 + 16))(v1185, v1186, v1724);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1721 + 16))(((unint64_t)v1185 + v1725) & v1784, (unint64_t)&v1186[v1725] & v1784, v1729);
                      if (!v1833)
                        *((_BYTE *)v1185 + v1826) = 0;
                      goto LABEL_1721;
                    }
                  }
                  v1184 = v1820;
                  memcpy(v1175, v1176, v1820);
                  goto LABEL_1593;
                case 4:
                  v1673 = v87;
                  if (__swift_getEnumTagSinglePayload((uint64_t)v373, 1, v1773))
                  {
                    memcpy(v372, v373, v1842);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1765 + 16))(v372, v373, v1773);
                    __swift_storeEnumTagSinglePayload((uint64_t)v372, 0, 1, v1773);
                  }
                  v503 = ((unint64_t)v372 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v1797 = v373;
                  v504 = ((unint64_t)v373 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v505 = *(_QWORD *)(v504 + 24);
                  *(_QWORD *)(v503 + 24) = v505;
                  *(_QWORD *)(v503 + 32) = *(_QWORD *)(v504 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v505 - 8))(v503, v504);
                  v506 = (_QWORD *)((v503 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v507 = (_QWORD *)((v504 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v506 = *v507;
                  v506[1] = v507[1];
                  v508 = (_QWORD *)(((unint64_t)v506 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v509 = (_QWORD *)(((unint64_t)v507 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v508 = *v509;
                  v508[1] = v509[1];
                  v510 = ((unint64_t)v508 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v511 = ((unint64_t)v509 + 23) & 0xFFFFFFFFFFFFFFF8;
                  *(_QWORD *)v510 = *(_QWORD *)v511;
                  *(_QWORD *)(v510 + 8) = *(_QWORD *)(v511 + 8);
                  *(_BYTE *)(v510 + 16) = *(_BYTE *)(v511 + 16);
                  v512 = ((unint64_t)v508 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v513 = ((unint64_t)v509 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v514 = *(_QWORD *)(v513 + 24);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (v514 < 0xFFFFFFFF)
                  {
                    v515 = *(_OWORD *)v513;
                    v516 = *(_OWORD *)(v513 + 16);
                    *(_QWORD *)(v512 + 32) = *(_QWORD *)(v513 + 32);
                    *(_OWORD *)v512 = v515;
                    *(_OWORD *)(v512 + 16) = v516;
                  }
                  else
                  {
                    *(_QWORD *)(v512 + 24) = v514;
                    *(_QWORD *)(v512 + 32) = *(_QWORD *)(v513 + 32);
                    (**(void (***)(unint64_t, unint64_t, unint64_t))(v514 - 8))(v512, v513, v514);
                  }
                  *(_BYTE *)(v512 + 40) = *(_BYTE *)(v513 + 40);
                  v517 = (_QWORD *)((v1705 + v512) & v1789);
                  v518 = (_QWORD *)((v1705 + v513) & v1789);
                  if (v1723 >= 0x7FFFFFFF)
                  {
                    v523 = (const void *)(((unint64_t)v518 + v1726) & v1779);
                    if (__swift_getEnumTagSinglePayload((uint64_t)v523, v1718, v1730) <= 1)
                    {
                      v1660 = v89;
                      v520 = (char *)(v518 + 1);
                      v521 = v1726;
                      v522 = ~v1847;
                      goto LABEL_790;
                    }
                  }
                  else
                  {
                    v519 = *(_QWORD *)(((v1705 + v513) & v1789) + 0x10);
                    if (v519 >= 0xFFFFFFFF)
                      LODWORD(v519) = -1;
                    if ((int)v519 - 1 < 0)
                    {
                      v1660 = v89;
                      v520 = (char *)(v518 + 1);
                      v521 = v1726;
                      v522 = ~v1847;
                      v523 = (const void *)(((unint64_t)v518 + v1726) & v1779);
LABEL_790:
                      *(_BYTE *)v517 = *(_BYTE *)v518;
                      v517[1] = v518[1];
                      v517[2] = *((_QWORD *)v520 + 1);
                      v517[3] = *((_QWORD *)v520 + 2);
                      v517[4] = *((_QWORD *)v520 + 3);
                      v517[5] = *((_QWORD *)v520 + 4);
                      v517[6] = *((_QWORD *)v520 + 5);
                      v517[7] = *((_QWORD *)v520 + 6);
                      v517[8] = *((_QWORD *)v520 + 7);
                      v517[9] = *((_QWORD *)v520 + 8);
                      v517[10] = *((_QWORD *)v520 + 9);
                      v517[11] = *((_QWORD *)v520 + 10);
                      v517[12] = *((_QWORD *)v520 + 11);
                      v524 = *((_QWORD *)v520 + 12);
                      *((_BYTE *)v517 + 112) = v520[104];
                      v517[13] = v524;
                      v525 = (void *)(((unint64_t)v517 + v521) & v522);
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      if (__swift_getEnumTagSinglePayload((uint64_t)v523, 1, v1730))
                      {
                        memcpy(v525, v523, v1817);
                      }
                      else
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v1712 + 16))(v525, v523, v1730);
                        __swift_storeEnumTagSinglePayload((uint64_t)v525, 0, 1, v1730);
                      }
                      v89 = v1660;
                      v526 = v1820;
LABEL_1108:
                      v931 = (void *)(((unint64_t)v517 + v1876 + v526) & v1681);
                      v932 = (_BYTE *)(((unint64_t)v518 + v1876 + v526) & v1681);
                      v373 = v1797;
                      if (v1833)
                      {
                        v933 = v1728;
                        if (v1722 >= v1728)
                        {
                          v934 = (uint64_t)v932;
                          v933 = v1722;
                          v935 = v1724;
                        }
                        else
                        {
                          v934 = (unint64_t)&v932[v1725] & v1784;
                          v935 = v1729;
                        }
                        v938 = __swift_getEnumTagSinglePayload(v934, v933, v935);
                        v372 = v1868;
                      }
                      else
                      {
                        v372 = v1868;
                        if (!v932[v1826])
                          goto LABEL_1637;
                        v936 = (v932[v1826] - 1) << v1777;
                        if (v1826 > 3)
                          v936 = 0;
                        if ((_DWORD)v1826)
                        {
                          if (v1826 <= 3)
                            v937 = v1826;
                          else
                            v937 = 4;
                          __asm { BR              X11 }
                        }
                        v938 = v936 + 1;
                      }
                      if (v938)
                      {
                        memcpy(v931, v932, v1822);
LABEL_1639:
                        v1205 = ((unint64_t)v931 + v1713) & 0xFFFFFFFFFFFFFFF8;
                        v1206 = (unint64_t)&v932[v1713] & 0xFFFFFFFFFFFFFFF8;
                        v1207 = *(_QWORD *)(v1206 + 24);
                        if (v1207 < 0xFFFFFFFF)
                        {
                          v1208 = *(_OWORD *)v1206;
                          v1209 = *(_OWORD *)(v1206 + 16);
                          *(_QWORD *)(v1205 + 32) = *(_QWORD *)(v1206 + 32);
                          *(_OWORD *)v1205 = v1208;
                          *(_OWORD *)(v1205 + 16) = v1209;
                        }
                        else
                        {
                          *(_QWORD *)(v1205 + 24) = v1207;
                          *(_QWORD *)(v1205 + 32) = *(_QWORD *)(v1206 + 32);
                          (**(void (***)(unint64_t, unint64_t))(v1207 - 8))(v1205, v1206);
                        }
                        v1210 = (_QWORD *)((v1205 + 47) & 0xFFFFFFFFFFFFFFF8);
                        v1211 = (_QWORD *)((v1206 + 47) & 0xFFFFFFFFFFFFFFF8);
                        *v1210 = *v1211;
                        v1210[1] = v1211[1];
                        v947 = 4;
                        goto LABEL_1643;
                      }
LABEL_1637:
                      (*(void (**)(void *, _BYTE *, uint64_t))(v1720 + 16))(v931, v932, v1724);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1721 + 16))(((unint64_t)v931 + v1725) & v1784, (unint64_t)&v932[v1725] & v1784, v1729);
                      if (!v1833)
                        *((_BYTE *)v931 + v1826) = 0;
                      goto LABEL_1639;
                    }
                  }
                  v526 = v1820;
                  memcpy(v517, v518, v1820);
                  goto LABEL_1108;
                case 5:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v373, 1, v1773))
                  {
                    memcpy(v372, v373, v1842);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1765 + 16))(v372, v373, v1773);
                    __swift_storeEnumTagSinglePayload((uint64_t)v372, 0, 1, v1773);
                  }
                  v527 = ((unint64_t)v372 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v1798 = v373;
                  v528 = ((unint64_t)v373 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v529 = *(_QWORD *)(v528 + 24);
                  *(_QWORD *)(v527 + 24) = v529;
                  *(_QWORD *)(v527 + 32) = *(_QWORD *)(v528 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v529 - 8))(v527, v528);
                  v530 = (void *)((v1870 + 40 + v527) & v1809);
                  v531 = (const void *)((v1870 + 40 + v528) & v1809);
                  v1676 = v87;
                  if (v1716 == v1707)
                  {
                    v532 = v1819;
                    v533 = v1841;
                    if (v1819 < 2)
                      goto LABEL_1261;
                    v534 = (v1870 + 40 + v528) & v1809;
                    v535 = v1773;
                  }
                  else
                  {
                    v536 = ((unint64_t)v531 + v1839) & 0xFFFFFFFFFFFFFFF8;
                    v533 = v1841;
                    if (v1707 == 0x7FFFFFFF)
                    {
                      if (*(_QWORD *)(v536 + 24) >= 0xFFFFFFFFuLL)
                        goto LABEL_1261;
                      goto LABEL_1263;
                    }
                    v897 = (v1851
                          + ((((((v536 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                          + 65) & v1789;
                    if (v1683 == v1707)
                    {
                      if (v1723 > 0x7FFFFFFE)
                      {
                        v989 = __swift_getEnumTagSinglePayload((v1726 + v897) & v1779, v1718, v1730);
                        if (v989 < 2)
                          goto LABEL_1261;
                        v900 = v989 - 1;
                      }
                      else
                      {
                        v898 = *(_QWORD *)(v897 + 16);
                        if (v898 >= 0xFFFFFFFF)
                          LODWORD(v898) = -1;
                        v899 = v898 - 1;
                        if (v899 < 0)
                          v899 = -1;
                        v900 = v899 + 1;
                      }
                      if (v900 < 2)
                      {
LABEL_1261:
                        if (__swift_getEnumTagSinglePayload((uint64_t)v531, 1, v1773))
                        {
                          memcpy(v530, v531, v1842);
                        }
                        else
                        {
                          (*(void (**)(void *, const void *, uint64_t))(v1765 + 16))(v530, v531, v1773);
                          __swift_storeEnumTagSinglePayload((uint64_t)v530, 0, 1, v1773);
                        }
                        v990 = ((unint64_t)v530 + v1839) & 0xFFFFFFFFFFFFFFF8;
                        v991 = ((unint64_t)v531 + v1839) & 0xFFFFFFFFFFFFFFF8;
                        v992 = *(_QWORD *)(v991 + 24);
                        *(_QWORD *)(v990 + 24) = v992;
                        *(_QWORD *)(v990 + 32) = *(_QWORD *)(v991 + 32);
                        (**(void (***)(unint64_t, unint64_t))(v992 - 8))(v990, v991);
                        v993 = (_QWORD *)((v990 + 47) & 0xFFFFFFFFFFFFFFF8);
                        v994 = (_QWORD *)((v991 + 47) & 0xFFFFFFFFFFFFFFF8);
                        *v993 = *v994;
                        v993[1] = v994[1];
                        v995 = (_QWORD *)(((unint64_t)v993 + 23) & 0xFFFFFFFFFFFFFFF8);
                        v996 = (_QWORD *)(((unint64_t)v994 + 23) & 0xFFFFFFFFFFFFFFF8);
                        *v995 = *v996;
                        v995[1] = v996[1];
                        v997 = ((unint64_t)v995 + 23) & 0xFFFFFFFFFFFFFFF8;
                        v998 = ((unint64_t)v996 + 23) & 0xFFFFFFFFFFFFFFF8;
                        *(_QWORD *)v997 = *(_QWORD *)v998;
                        *(_QWORD *)(v997 + 8) = *(_QWORD *)(v998 + 8);
                        *(_BYTE *)(v997 + 16) = *(_BYTE *)(v998 + 16);
                        v999 = ((unint64_t)v995 + 47) & 0xFFFFFFFFFFFFFFF8;
                        v1000 = ((unint64_t)v996 + 47) & 0xFFFFFFFFFFFFFFF8;
                        v1001 = *(_QWORD *)(v1000 + 24);
                        sub_21D7C4C20();
                        sub_21D7C4C20();
                        sub_21D7C4C20();
                        v1871 = v531;
                        if (v1001 < 0xFFFFFFFF)
                        {
                          v1002 = *(_OWORD *)v1000;
                          v1003 = *(_OWORD *)(v1000 + 16);
                          *(_QWORD *)(v999 + 32) = *(_QWORD *)(v1000 + 32);
                          *(_OWORD *)v999 = v1002;
                          *(_OWORD *)(v999 + 16) = v1003;
                        }
                        else
                        {
                          *(_QWORD *)(v999 + 24) = v1001;
                          *(_QWORD *)(v999 + 32) = *(_QWORD *)(v1000 + 32);
                          (**(void (***)(unint64_t, unint64_t, unint64_t))(v1001 - 8))(v999, v1000, v1001);
                        }
                        *(_BYTE *)(v999 + 40) = *(_BYTE *)(v1000 + 40);
                        v1004 = (_QWORD *)((v1705 + v999) & v1789);
                        v1005 = (_QWORD *)((v1705 + v1000) & v1789);
                        if (v1723 >= 0x7FFFFFFF)
                        {
                          v1012 = (const void *)(((unint64_t)v1005 + v1726) & v1779);
                          v1007 = v1820;
                          v1008 = v1681;
                          if (__swift_getEnumTagSinglePayload((uint64_t)v1012, v1718, v1730) <= 1)
                          {
                            v1863 = v530;
                            v1666 = v89;
                            v1009 = (char *)(v1005 + 1);
                            v1010 = v1726;
                            v1011 = ~v1847;
                            goto LABEL_1275;
                          }
                        }
                        else
                        {
                          v1006 = v1005[2];
                          if (v1006 >= 0xFFFFFFFF)
                            LODWORD(v1006) = -1;
                          v1007 = v1820;
                          v1008 = v1681;
                          if ((int)v1006 - 1 < 0)
                          {
                            v1863 = v530;
                            v1666 = v89;
                            v1009 = (char *)(v1005 + 1);
                            v1010 = v1726;
                            v1011 = ~v1847;
                            v1012 = (const void *)(((unint64_t)v1005 + v1726) & v1779);
LABEL_1275:
                            *(_BYTE *)v1004 = *(_BYTE *)v1005;
                            v1004[1] = v1005[1];
                            v1004[2] = *((_QWORD *)v1009 + 1);
                            v1004[3] = *((_QWORD *)v1009 + 2);
                            v1004[4] = *((_QWORD *)v1009 + 3);
                            v1004[5] = *((_QWORD *)v1009 + 4);
                            v1004[6] = *((_QWORD *)v1009 + 5);
                            v1004[7] = *((_QWORD *)v1009 + 6);
                            v1004[8] = *((_QWORD *)v1009 + 7);
                            v1004[9] = *((_QWORD *)v1009 + 8);
                            v1004[10] = *((_QWORD *)v1009 + 9);
                            v1004[11] = *((_QWORD *)v1009 + 10);
                            v1004[12] = *((_QWORD *)v1009 + 11);
                            v1013 = *((_QWORD *)v1009 + 12);
                            *((_BYTE *)v1004 + 112) = v1009[104];
                            v1004[13] = v1013;
                            v1014 = (void *)(((unint64_t)v1004 + v1010) & v1011);
                            sub_21D7C4C20();
                            sub_21D7C4C20();
                            sub_21D7C4C20();
                            sub_21D7C4C20();
                            sub_21D7C4C20();
                            sub_21D7C4C20();
                            if (__swift_getEnumTagSinglePayload((uint64_t)v1012, 1, v1730))
                            {
                              memcpy(v1014, v1012, v1817);
                            }
                            else
                            {
                              (*(void (**)(void *, const void *, uint64_t))(v1712 + 16))(v1014, v1012, v1730);
                              __swift_storeEnumTagSinglePayload((uint64_t)v1014, 0, 1, v1730);
                            }
                            v89 = v1666;
                            v1007 = v1820;
                            v1008 = v1681;
                            v530 = v1863;
LABEL_1280:
                            v1015 = (void *)(((unint64_t)v1004 + v1876 + v1007) & v1008);
                            v1016 = (_BYTE *)(((unint64_t)v1005 + v1876 + v1007) & v1008);
                            v1017 = v1728;
                            if (v1833)
                            {
                              if (v1722 >= v1728)
                              {
                                v1018 = (uint64_t)v1016;
                                v1017 = v1722;
                                v1019 = v1724;
                              }
                              else
                              {
                                v1018 = (unint64_t)&v1016[v1725] & v1784;
                                v1019 = v1729;
                              }
                              v1022 = __swift_getEnumTagSinglePayload(v1018, v1017, v1019);
                            }
                            else
                            {
                              if (!v1016[v1826])
                                goto LABEL_2100;
                              v1020 = (v1016[v1826] - 1) << v1777;
                              if (v1826 > 3)
                                v1020 = 0;
                              if ((_DWORD)v1826)
                              {
                                if (v1826 <= 3)
                                  v1021 = v1826;
                                else
                                  v1021 = 4;
                                __asm { BR              X11 }
                              }
                              v1022 = v1020 + 1;
                            }
                            if (v1022)
                            {
                              memcpy(v1015, v1016, v1822);
LABEL_2102:
                              v1430 = ((unint64_t)v1015 + v1713) & 0xFFFFFFFFFFFFFFF8;
                              v1431 = (unint64_t)&v1016[v1713] & 0xFFFFFFFFFFFFFFF8;
                              v1432 = *(_QWORD *)(v1431 + 24);
                              if (v1432 < 0xFFFFFFFF)
                              {
                                v1433 = *(_OWORD *)v1431;
                                v1434 = *(_OWORD *)(v1431 + 16);
                                *(_QWORD *)(v1430 + 32) = *(_QWORD *)(v1431 + 32);
                                *(_OWORD *)v1430 = v1433;
                                *(_OWORD *)(v1430 + 16) = v1434;
                              }
                              else
                              {
                                *(_QWORD *)(v1430 + 24) = v1432;
                                *(_QWORD *)(v1430 + 32) = *(_QWORD *)(v1431 + 32);
                                (**(void (***)(unint64_t, unint64_t))(v1432 - 8))(v1430, v1431);
                              }
                              v533 = v1841;
                              v531 = v1871;
                              v1435 = (_QWORD *)((v1430 + 47) & 0xFFFFFFFFFFFFFFF8);
                              v1436 = (_QWORD *)((v1431 + 47) & 0xFFFFFFFFFFFFFFF8);
                              *v1435 = *v1436;
                              v1435[1] = v1436[1];
                              sub_21D7C4C20();
LABEL_2106:
                              v1437 = (_BYTE *)(((unint64_t)v530 + v1701) & v1809);
                              v1438 = (unsigned __int8 *)(((unint64_t)v531 + v1701) & v1809);
                              v1439 = *v1438;
                              if (v1439 > 2)
                              {
                                v1446 = (void *)(((unint64_t)v530 + v1701) & v1809);
                                v1447 = (const void *)(((unint64_t)v531 + v1701) & v1809);
                                v1448 = v533;
                              }
                              else
                              {
                                *v1437 = v1439;
                                v1440 = (_QWORD *)((unint64_t)&v1437[v1731] & v1809);
                                v1441 = (_QWORD *)((unint64_t)&v1438[v1731] & v1809);
                                v1442 = *((unsigned __int8 *)v1441 + v1764);
                                if (v1442 <= 2)
                                {
                                  if (v1442 != 2)
                                  {
                                    if (v1442 != 1)
                                    {
                                      *v1440 = *v1441;
                                      *(_QWORD *)(((unint64_t)&v1437[v1731] & v1809) + 8) = *(_QWORD *)(((unint64_t)&v1438[v1731] & v1809) + 8);
                                      *(_QWORD *)(((unint64_t)&v1437[v1731] & v1809) + 0x10) = *(_QWORD *)(((unint64_t)&v1438[v1731] & v1809) + 0x10);
                                      *(_QWORD *)(((unint64_t)&v1437[v1731] & v1809) + 0x18) = *(_QWORD *)(((unint64_t)&v1438[v1731] & v1809) + 0x18);
                                      *(_QWORD *)(((unint64_t)&v1437[v1731] & v1809) + 0x20) = *(_QWORD *)(((unint64_t)&v1438[v1731] & v1809) + 0x20);
                                      *(_QWORD *)(((unint64_t)&v1437[v1731] & v1809) + 0x28) = *(_QWORD *)(((unint64_t)&v1438[v1731] & v1809) + 0x28);
                                      *((_BYTE *)v1440 + v1764) = 0;
                                      sub_21D7C4C20();
                                      sub_21D7C4C20();
                                      sub_21D7C4C20();
                                      goto LABEL_2115;
                                    }
                                    v1443 = *(_QWORD *)(((unint64_t)&v1438[v1731] & v1809) + 0x18);
                                    *(_QWORD *)(((unint64_t)&v1437[v1731] & v1809) + 0x18) = v1443;
                                    *(_QWORD *)(((unint64_t)&v1437[v1731] & v1809) + 0x20) = *(_QWORD *)(((unint64_t)&v1438[v1731] & v1809) + 0x20);
                                    (**(void (***)(_QWORD *, _QWORD *))(v1443 - 8))(v1440, v1441);
                                    v1444 = (void *)(((unint64_t)v1440 + v1824) & v1807);
                                    v1445 = (const void *)(((unint64_t)v1441 + v1824) & v1807);
                                    if (__swift_getEnumTagSinglePayload((uint64_t)v1445, 1, v1773))
                                    {
                                      memcpy(v1444, v1445, v1842);
                                    }
                                    else
                                    {
                                      (*(void (**)(void *, const void *, uint64_t))(v1765 + 16))(v1444, v1445, v1773);
                                      __swift_storeEnumTagSinglePayload((uint64_t)v1444, 0, 1, v1773);
                                    }
                                    v1463 = (_QWORD *)(((unint64_t)v1444 + v1839) & 0xFFFFFFFFFFFFFFF8);
                                    v1464 = (_QWORD *)(((unint64_t)v1445 + v1839) & 0xFFFFFFFFFFFFFFF8);
                                    *v1463 = *v1464;
                                    v1463[1] = v1464[1];
                                    v1465 = ((unint64_t)v1463 + 23) & 0xFFFFFFFFFFFFFFF8;
                                    v1466 = ((unint64_t)v1464 + 23) & 0xFFFFFFFFFFFFFFF8;
                                    *(_QWORD *)v1465 = *(_QWORD *)v1466;
                                    *(_BYTE *)(v1465 + 8) = *(_BYTE *)(v1466 + 8);
                                    v1467 = ((unint64_t)v1463 + 39) & 0xFFFFFFFFFFFFFFF8;
                                    v1468 = ((unint64_t)v1464 + 39) & 0xFFFFFFFFFFFFFFF8;
                                    *(_QWORD *)v1467 = *(_QWORD *)v1468;
                                    *(_BYTE *)(v1467 + 8) = *(_BYTE *)(v1468 + 8);
                                    v1469 = ((unint64_t)v1463 + 55) & 0xFFFFFFFFFFFFFFF8;
                                    v1470 = ((unint64_t)v1464 + 55) & 0xFFFFFFFFFFFFFFF8;
                                    v1471 = *(_QWORD *)v1470;
                                    *(_BYTE *)(v1469 + 8) = *(_BYTE *)(v1470 + 8);
                                    *(_QWORD *)v1469 = v1471;
                                    v1472 = (_QWORD *)(((unint64_t)v1463 + 71) & 0xFFFFFFFFFFFFFFF8);
                                    v1473 = (_QWORD *)(((unint64_t)v1464 + 71) & 0xFFFFFFFFFFFFFFF8);
                                    *v1472 = *v1473;
                                    v1472[1] = v1473[1];
                                    v1474 = ((unint64_t)v1472 + 23) & 0xFFFFFFFFFFFFFFF8;
                                    v1475 = ((unint64_t)v1473 + 23) & 0xFFFFFFFFFFFFFFF8;
                                    v1476 = *(_QWORD *)(v1475 + 24);
                                    sub_21D7C4C20();
                                    sub_21D7C4C20();
                                    sub_21D7C4C20();
                                    sub_21D7C4C20();
                                    if (v1476 < 0xFFFFFFFF)
                                    {
                                      v1477 = *(_OWORD *)v1475;
                                      v1478 = *(_OWORD *)(v1475 + 16);
                                      *(_QWORD *)(v1474 + 32) = *(_QWORD *)(v1475 + 32);
                                      *(_OWORD *)v1474 = v1477;
                                      *(_OWORD *)(v1474 + 16) = v1478;
                                    }
                                    else
                                    {
                                      *(_QWORD *)(v1474 + 24) = v1476;
                                      *(_QWORD *)(v1474 + 32) = *(_QWORD *)(v1475 + 32);
                                      (**(void (***)(unint64_t, unint64_t, unint64_t))(v1476 - 8))(v1474, v1475, v1476);
                                    }
                                    v1479 = (_QWORD *)((v1856 + v1474) & v1789);
                                    v1480 = (_BYTE *)((v1856 + v1475) & v1789);
                                    if (v1723 >= 0x7FFFFFFF)
                                    {
                                      v1873 = (unint64_t)&v1480[v1726] & v1779;
                                      if (__swift_getEnumTagSinglePayload(v1873, v1718, v1730) <= 1)
                                      {
                                        v1482 = v1480 + 8;
                                        goto LABEL_2145;
                                      }
                                    }
                                    else
                                    {
                                      v1481 = *(_QWORD *)(((v1856 + v1475) & v1789) + 0x10);
                                      if (v1481 >= 0xFFFFFFFF)
                                        LODWORD(v1481) = -1;
                                      if ((int)v1481 - 1 < 0)
                                      {
                                        v1482 = v1480 + 8;
                                        v1873 = (unint64_t)&v1480[v1726] & v1779;
LABEL_2145:
                                        *(_BYTE *)v1479 = *v1480;
                                        v1479[1] = *(_QWORD *)(((v1856 + v1475) & v1789) + 8);
                                        v1479[2] = *((_QWORD *)v1482 + 1);
                                        v1479[3] = *((_QWORD *)v1482 + 2);
                                        v1479[4] = *((_QWORD *)v1482 + 3);
                                        v1479[5] = *((_QWORD *)v1482 + 4);
                                        v1479[6] = *((_QWORD *)v1482 + 5);
                                        v1479[7] = *((_QWORD *)v1482 + 6);
                                        v1479[8] = *((_QWORD *)v1482 + 7);
                                        v1479[9] = *((_QWORD *)v1482 + 8);
                                        v1479[10] = *((_QWORD *)v1482 + 9);
                                        v1479[11] = *((_QWORD *)v1482 + 10);
                                        v1479[12] = *((_QWORD *)v1482 + 11);
                                        v1483 = *((_QWORD *)v1482 + 12);
                                        *((_BYTE *)v1479 + 112) = v1482[104];
                                        v1479[13] = v1483;
                                        v1484 = ((unint64_t)v1479 + v1726) & v1779;
                                        sub_21D7C4C20();
                                        sub_21D7C4C20();
                                        sub_21D7C4C20();
                                        sub_21D7C4C20();
                                        sub_21D7C4C20();
                                        sub_21D7C4C20();
                                        if (!__swift_getEnumTagSinglePayload(v1873, 1, v1730))
                                        {
                                          (*(void (**)(uint64_t, uint64_t, uint64_t))(v1712 + 16))(v1484, v1873, v1730);
                                          __swift_storeEnumTagSinglePayload(v1484, 0, 1, v1730);
                                          goto LABEL_2149;
                                        }
                                        v1485 = (void *)(((unint64_t)v1479 + v1726) & v1779);
                                        v1486 = (const void *)v1873;
                                        v1487 = v1817;
LABEL_2148:
                                        memcpy(v1485, v1486, v1487);
LABEL_2149:
                                        *((_BYTE *)v1440 + v1764) = 1;
                                        goto LABEL_2115;
                                      }
                                    }
                                    v1485 = v1479;
                                    v1486 = (const void *)((v1856 + v1475) & v1789);
                                    v1487 = v1820;
                                    goto LABEL_2148;
                                  }
                                  if (*(_QWORD *)(((unint64_t)&v1438[v1731] & v1809) + 8) < 0xFFFFFFFFuLL)
                                  {
                                    memcpy((void *)((unint64_t)&v1437[v1731] & v1809), (const void *)((unint64_t)&v1438[v1731] & v1809), 0x48uLL);
                                  }
                                  else
                                  {
                                    *v1440 = *v1441;
                                    *(_QWORD *)(((unint64_t)&v1437[v1731] & v1809) + 8) = *(_QWORD *)(((unint64_t)&v1438[v1731] & v1809) + 8);
                                    *(_QWORD *)(((unint64_t)&v1437[v1731] & v1809) + 0x10) = *(_QWORD *)(((unint64_t)&v1438[v1731] & v1809) + 0x10);
                                    *(_QWORD *)(((unint64_t)&v1437[v1731] & v1809) + 0x18) = *(_QWORD *)(((unint64_t)&v1438[v1731] & v1809) + 0x18);
                                    v1461 = *(_QWORD *)(((unint64_t)&v1438[v1731] & v1809) + 0x38);
                                    sub_21D7C4C20();
                                    sub_21D7C4C20();
                                    if (v1461)
                                    {
                                      *(_QWORD *)(((unint64_t)&v1437[v1731] & v1809) + 0x38) = v1461;
                                      *(_QWORD *)(((unint64_t)&v1437[v1731] & v1809) + 0x40) = *(_QWORD *)(((unint64_t)&v1438[v1731] & v1809) + 0x40);
                                      (**(void (***)(uint64_t, uint64_t, uint64_t))(v1461 - 8))((uint64_t)(v1440 + 4), (uint64_t)(v1441 + 4), v1461);
                                    }
                                    else
                                    {
                                      v1610 = *(_OWORD *)(((unint64_t)&v1438[v1731] & v1809) + 0x20);
                                      v1611 = *(_OWORD *)(((unint64_t)&v1438[v1731] & v1809) + 0x30);
                                      *(_QWORD *)(((unint64_t)&v1437[v1731] & v1809) + 0x40) = *(_QWORD *)(((unint64_t)&v1438[v1731] & v1809) + 0x40);
                                      *(_OWORD *)(((unint64_t)&v1437[v1731] & v1809) + 0x20) = v1610;
                                      *(_OWORD *)(((unint64_t)&v1437[v1731] & v1809) + 0x30) = v1611;
                                    }
                                  }
                                  v1612 = (_QWORD *)(((unint64_t)v1440 + 79) & 0xFFFFFFFFFFFFFFF8);
                                  v1613 = (_QWORD *)(((unint64_t)v1441 + 79) & 0xFFFFFFFFFFFFFFF8);
                                  if (v1613[1] < 0xFFFFFFFFuLL)
                                  {
                                    memcpy(v1612, v1613, 0x48uLL);
                                  }
                                  else
                                  {
                                    *v1612 = *v1613;
                                    v1612[1] = v1613[1];
                                    v1612[2] = v1613[2];
                                    v1612[3] = v1613[3];
                                    v1614 = v1613[7];
                                    sub_21D7C4C20();
                                    sub_21D7C4C20();
                                    if (v1614)
                                    {
                                      v1612[7] = v1614;
                                      v1612[8] = v1613[8];
                                      (**(void (***)(uint64_t, uint64_t, uint64_t))(v1614 - 8))((uint64_t)(v1612 + 4), (uint64_t)(v1613 + 4), v1614);
                                    }
                                    else
                                    {
                                      v1620 = *((_OWORD *)v1613 + 2);
                                      v1621 = *((_OWORD *)v1613 + 3);
                                      v1612[8] = v1613[8];
                                      *((_OWORD *)v1612 + 2) = v1620;
                                      *((_OWORD *)v1612 + 3) = v1621;
                                    }
                                  }
                                  v1622 = (_QWORD *)(((unint64_t)v1612 + 79) & 0xFFFFFFFFFFFFF8);
                                  v1623 = (_QWORD *)(((unint64_t)v1613 + 79) & 0xFFFFFFFFFFFFFFF8);
                                  *v1622 = *v1623;
                                  v1624 = (_QWORD *)(((unint64_t)v1622 + 15) & 0xFFFFFFFFFFFFFFF8);
                                  v1625 = (_QWORD *)(((unint64_t)v1623 + 15) & 0xFFFFFFFFFFFFFFF8);
                                  *v1624 = *v1625;
                                  v1626 = (void *)(((unint64_t)v1624 + v1714) & v1681);
                                  v1627 = (_BYTE *)(((unint64_t)v1625 + v1714) & v1681);
                                  sub_21D7C4C20();
                                  sub_21D7C4C20();
                                  if (v1833)
                                  {
                                    v1628 = v1722;
                                    v1629 = (unint64_t)&v1437[v1731] & v1809;
                                    if (v1722 >= v1728)
                                    {
                                      v1630 = (uint64_t)v1627;
                                      v1631 = v1724;
                                    }
                                    else
                                    {
                                      v1630 = (unint64_t)&v1627[v1725] & v1784;
                                      v1628 = v1728;
                                      v1631 = v1729;
                                    }
                                    v1634 = __swift_getEnumTagSinglePayload(v1630, v1628, v1631);
                                  }
                                  else
                                  {
                                    v1629 = (unint64_t)&v1437[v1731] & v1809;
                                    if (!v1627[v1826])
                                      goto LABEL_2368;
                                    v1632 = (v1627[v1826] - 1) << v1777;
                                    if (v1826 > 3)
                                      v1632 = 0;
                                    if ((_DWORD)v1826)
                                    {
                                      if (v1826 <= 3)
                                        v1633 = v1826;
                                      else
                                        v1633 = 4;
                                      __asm { BR              X11 }
                                    }
                                    v1634 = v1632 + 1;
                                    v1629 = (unint64_t)&v1437[v1731] & v1809;
                                  }
                                  if (v1634)
                                  {
                                    memcpy(v1626, v1627, v1822);
LABEL_2370:
                                    *((_BYTE *)v1626 + v1822) = v1627[v1822];
                                    *(_BYTE *)(v1629 + v1764) = 2;
LABEL_2115:
                                    v1449 = (_QWORD *)((unint64_t)&v1437[v1702] & 0xFFFFFFFFFFFFFFF8);
                                    v1450 = (_QWORD *)((unint64_t)&v1438[v1702] & 0xFFFFFFFFFFFFFFF8);
                                    *v1449 = *v1450;
                                    v1451 = (_BYTE *)(((unint64_t)v1449 + v1703) & v1809);
                                    v1452 = (unsigned __int8 *)(((unint64_t)v1450 + v1703) & v1809);
                                    v1453 = *v1452;
                                    sub_21D7C4C20();
                                    if (v1453 > 2)
                                    {
                                      memcpy(v1451, v1452, v1841);
                                      v87 = v1676;
                                      v372 = v1868;
LABEL_2378:
                                      v373 = v1798;
LABEL_2379:
                                      v753 = 5;
                                      v752 = v1791;
LABEL_2380:
                                      *((_BYTE *)v372 + v752) = v753;
                                      goto LABEL_2187;
                                    }
                                    *v1451 = v1453;
                                    v1454 = (_QWORD *)((unint64_t)&v1451[v1731] & v1809);
                                    v1455 = (_QWORD *)((unint64_t)&v1452[v1731] & v1809);
                                    v1456 = *((unsigned __int8 *)v1455 + v1764);
                                    v373 = v1798;
                                    if (v1456 > 2)
                                    {
                                      memcpy(v1454, v1455, __n);
                                      goto LABEL_2131;
                                    }
                                    if (v1456 != 2)
                                    {
                                      if (v1456 == 1)
                                      {
                                        v1457 = v1455[3];
                                        v1454[3] = v1457;
                                        v1454[4] = v1455[4];
                                        (**(void (***)(_QWORD *, _QWORD *))(v1457 - 8))(v1454, v1455);
                                        v1458 = (void *)(((unint64_t)v1454 + v1824) & v1807);
                                        v1459 = (const void *)(((unint64_t)v1455 + v1824) & v1807);
                                        v1460 = v89;
                                        if (__swift_getEnumTagSinglePayload((uint64_t)v1459, 1, v1773))
                                        {
                                          memcpy(v1458, v1459, v1842);
                                        }
                                        else
                                        {
                                          (*(void (**)(void *, const void *, uint64_t))(v1765 + 16))(v1458, v1459, v1773);
                                          __swift_storeEnumTagSinglePayload((uint64_t)v1458, 0, 1, v1773);
                                        }
                                        v1488 = (_QWORD *)(((unint64_t)v1458 + v1839) & 0xFFFFFFFFFFFFFFF8);
                                        v1489 = (_QWORD *)(((unint64_t)v1459 + v1839) & 0xFFFFFFFFFFFFFFF8);
                                        *v1488 = *v1489;
                                        v1488[1] = v1489[1];
                                        v1490 = ((unint64_t)v1488 + 23) & 0xFFFFFFFFFFFFFFF8;
                                        v1491 = ((unint64_t)v1489 + 23) & 0xFFFFFFFFFFFFFFF8;
                                        *(_QWORD *)v1490 = *(_QWORD *)v1491;
                                        *(_BYTE *)(v1490 + 8) = *(_BYTE *)(v1491 + 8);
                                        v1492 = ((unint64_t)v1488 + 39) & 0xFFFFFFFFFFFFFFF8;
                                        v1493 = ((unint64_t)v1489 + 39) & 0xFFFFFFFFFFFFFFF8;
                                        *(_QWORD *)v1492 = *(_QWORD *)v1493;
                                        *(_BYTE *)(v1492 + 8) = *(_BYTE *)(v1493 + 8);
                                        v1494 = ((unint64_t)v1488 + 55) & 0xFFFFFFFFFFFFFFF8;
                                        v1495 = ((unint64_t)v1489 + 55) & 0xFFFFFFFFFFFFFFF8;
                                        v1496 = *(_QWORD *)v1495;
                                        *(_BYTE *)(v1494 + 8) = *(_BYTE *)(v1495 + 8);
                                        *(_QWORD *)v1494 = v1496;
                                        v1497 = (_QWORD *)(((unint64_t)v1488 + 71) & 0xFFFFFFFFFFFFFFF8);
                                        v1498 = (_QWORD *)(((unint64_t)v1489 + 71) & 0xFFFFFFFFFFFFFFF8);
                                        *v1497 = *v1498;
                                        v1497[1] = v1498[1];
                                        v1499 = ((unint64_t)v1497 + 23) & 0xFFFFFFFFFFFFFFF8;
                                        v1500 = ((unint64_t)v1498 + 23) & 0xFFFFFFFFFFFFFFF8;
                                        v1501 = *(_QWORD *)(v1500 + 24);
                                        sub_21D7C4C20();
                                        sub_21D7C4C20();
                                        sub_21D7C4C20();
                                        sub_21D7C4C20();
                                        if (v1501 < 0xFFFFFFFF)
                                        {
                                          v1502 = *(_OWORD *)v1500;
                                          v1503 = *(_OWORD *)(v1500 + 16);
                                          *(_QWORD *)(v1499 + 32) = *(_QWORD *)(v1500 + 32);
                                          *(_OWORD *)v1499 = v1502;
                                          *(_OWORD *)(v1499 + 16) = v1503;
                                        }
                                        else
                                        {
                                          *(_QWORD *)(v1499 + 24) = v1501;
                                          *(_QWORD *)(v1499 + 32) = *(_QWORD *)(v1500 + 32);
                                          (**(void (***)(unint64_t, unint64_t, unint64_t))(v1501 - 8))(v1499, v1500, v1501);
                                        }
                                        v1504 = (_QWORD *)((v1856 + v1499) & v1789);
                                        v1505 = (_QWORD *)((v1856 + v1500) & v1789);
                                        if (v1723 >= 0x7FFFFFFF)
                                        {
                                          v1508 = ((unint64_t)v1505 + v1726) & v1779;
                                          if (__swift_getEnumTagSinglePayload(v1508, v1718, v1730) <= 1)
                                          {
                                            v1507 = (char *)(v1505 + 1);
                                            goto LABEL_2161;
                                          }
                                        }
                                        else
                                        {
                                          v1506 = v1505[2];
                                          if (v1506 >= 0xFFFFFFFF)
                                            LODWORD(v1506) = -1;
                                          if ((int)v1506 - 1 < 0)
                                          {
                                            v1507 = (char *)(v1505 + 1);
                                            v1508 = ((unint64_t)v1505 + v1726) & v1779;
LABEL_2161:
                                            *(_BYTE *)v1504 = *(_BYTE *)v1505;
                                            v1504[1] = v1505[1];
                                            v1504[2] = *((_QWORD *)v1507 + 1);
                                            v1504[3] = *((_QWORD *)v1507 + 2);
                                            v1504[4] = *((_QWORD *)v1507 + 3);
                                            v1504[5] = *((_QWORD *)v1507 + 4);
                                            v1504[6] = *((_QWORD *)v1507 + 5);
                                            v1504[7] = *((_QWORD *)v1507 + 6);
                                            v1504[8] = *((_QWORD *)v1507 + 7);
                                            v1504[9] = *((_QWORD *)v1507 + 8);
                                            v1504[10] = *((_QWORD *)v1507 + 9);
                                            v1504[11] = *((_QWORD *)v1507 + 10);
                                            v1504[12] = *((_QWORD *)v1507 + 11);
                                            v1509 = *((_QWORD *)v1507 + 12);
                                            *((_BYTE *)v1504 + 112) = v1507[104];
                                            v1504[13] = v1509;
                                            v1510 = ((unint64_t)v1504 + v1726) & v1779;
                                            sub_21D7C4C20();
                                            sub_21D7C4C20();
                                            sub_21D7C4C20();
                                            sub_21D7C4C20();
                                            sub_21D7C4C20();
                                            sub_21D7C4C20();
                                            if (!__swift_getEnumTagSinglePayload(v1508, 1, v1730))
                                            {
                                              (*(void (**)(uint64_t, uint64_t, uint64_t))(v1712 + 16))(v1510, v1508, v1730);
                                              __swift_storeEnumTagSinglePayload(v1510, 0, 1, v1730);
                                              goto LABEL_2165;
                                            }
                                            v1511 = (void *)v1510;
                                            v1512 = (const void *)v1508;
                                            v1513 = v1817;
LABEL_2164:
                                            memcpy(v1511, v1512, v1513);
LABEL_2165:
                                            v372 = v1868;
                                            *((_BYTE *)v1454 + v1764) = 1;
                                            v89 = v1460;
LABEL_2377:
                                            v87 = v1676;
                                            goto LABEL_2378;
                                          }
                                        }
                                        v1511 = v1504;
                                        v1512 = v1505;
                                        v1513 = v1820;
                                        goto LABEL_2164;
                                      }
                                      *v1454 = *v1455;
                                      v1454[1] = v1455[1];
                                      v1454[2] = v1455[2];
                                      v1454[3] = v1455[3];
                                      v1454[4] = v1455[4];
                                      v1454[5] = v1455[5];
                                      *((_BYTE *)v1454 + v1764) = 0;
                                      sub_21D7C4C20();
                                      sub_21D7C4C20();
                                      sub_21D7C4C20();
LABEL_2131:
                                      v87 = v1676;
                                      v372 = v1868;
                                      goto LABEL_2379;
                                    }
                                    if (v1455[1] < 0xFFFFFFFFuLL)
                                    {
                                      memcpy(v1454, v1455, 0x48uLL);
                                    }
                                    else
                                    {
                                      *v1454 = *v1455;
                                      v1454[1] = v1455[1];
                                      v1454[2] = v1455[2];
                                      v1454[3] = v1455[3];
                                      v1462 = v1455[7];
                                      sub_21D7C4C20();
                                      sub_21D7C4C20();
                                      if (v1462)
                                      {
                                        v1454[7] = v1462;
                                        v1454[8] = v1455[8];
                                        (**(void (***)(uint64_t, uint64_t, uint64_t))(v1462 - 8))((uint64_t)(v1454 + 4), (uint64_t)(v1455 + 4), v1462);
                                      }
                                      else
                                      {
                                        v1615 = *((_OWORD *)v1455 + 2);
                                        v1616 = *((_OWORD *)v1455 + 3);
                                        v1454[8] = v1455[8];
                                        *((_OWORD *)v1454 + 2) = v1615;
                                        *((_OWORD *)v1454 + 3) = v1616;
                                      }
                                    }
                                    v1617 = ((unint64_t)v1454 + 79) & 0xFFFFFFFFFFFFFFF8;
                                    v1618 = (_QWORD *)(((unint64_t)v1455 + 79) & 0xFFFFFFFFFFFFFFF8);
                                    if (v1618[1] < 0xFFFFFFFFuLL)
                                    {
                                      memcpy((void *)(((unint64_t)v1454 + 79) & 0xFFFFFFFFFFFFFFF8), v1618, 0x48uLL);
                                    }
                                    else
                                    {
                                      *(_QWORD *)v1617 = *v1618;
                                      *(_QWORD *)(v1617 + 8) = v1618[1];
                                      *(_QWORD *)(v1617 + 16) = v1618[2];
                                      *(_QWORD *)(v1617 + 24) = v1618[3];
                                      v1619 = v1618[7];
                                      sub_21D7C4C20();
                                      sub_21D7C4C20();
                                      if (v1619)
                                      {
                                        *(_QWORD *)(v1617 + 56) = v1619;
                                        *(_QWORD *)(v1617 + 64) = v1618[8];
                                        (**(void (***)(uint64_t, uint64_t, uint64_t))(v1619 - 8))(v1617 + 32, (uint64_t)(v1618 + 4), v1619);
                                      }
                                      else
                                      {
                                        v1635 = *((_OWORD *)v1618 + 2);
                                        v1636 = *((_OWORD *)v1618 + 3);
                                        *(_QWORD *)(v1617 + 64) = v1618[8];
                                        *(_OWORD *)(v1617 + 32) = v1635;
                                        *(_OWORD *)(v1617 + 48) = v1636;
                                      }
                                    }
                                    v1637 = (_QWORD *)((v1617 + 79) & 0xFFFFFFFFFFFFF8);
                                    v1638 = (_QWORD *)(((unint64_t)v1618 + 79) & 0xFFFFFFFFFFFFFFF8);
                                    *v1637 = *v1638;
                                    v1639 = (_QWORD *)(((unint64_t)v1637 + 15) & 0xFFFFFFFFFFFFFFF8);
                                    v1640 = (_QWORD *)(((unint64_t)v1638 + 15) & 0xFFFFFFFFFFFFFFF8);
                                    *v1639 = *v1640;
                                    v1641 = (void *)(((unint64_t)v1639 + v1714) & v1681);
                                    v1642 = (_BYTE *)(((unint64_t)v1640 + v1714) & v1681);
                                    sub_21D7C4C20();
                                    sub_21D7C4C20();
                                    if (v1833)
                                    {
                                      v1643 = v1728;
                                      v372 = v1868;
                                      if (v1722 >= v1728)
                                      {
                                        v1644 = (uint64_t)v1642;
                                        v1643 = v1722;
                                        v1645 = v1724;
                                      }
                                      else
                                      {
                                        v1644 = (unint64_t)&v1642[v1725] & v1784;
                                        v1645 = v1729;
                                      }
                                      v1648 = __swift_getEnumTagSinglePayload(v1644, v1643, v1645);
                                    }
                                    else
                                    {
                                      v372 = v1868;
                                      if (!v1642[v1826])
                                        goto LABEL_2374;
                                      v1646 = (v1642[v1826] - 1) << v1777;
                                      if (v1826 > 3)
                                        v1646 = 0;
                                      if ((_DWORD)v1826)
                                      {
                                        if (v1826 <= 3)
                                          v1647 = v1826;
                                        else
                                          v1647 = 4;
                                        __asm { BR              X11 }
                                      }
                                      v1648 = v1646 + 1;
                                      v372 = v1868;
                                    }
                                    if (v1648)
                                    {
                                      memcpy(v1641, v1642, v1822);
LABEL_2376:
                                      *((_BYTE *)v1641 + v1822) = v1642[v1822];
                                      *((_BYTE *)v1454 + v1764) = 2;
                                      goto LABEL_2377;
                                    }
LABEL_2374:
                                    (*(void (**)(void *, _BYTE *, uint64_t))(v1720 + 16))(v1641, v1642, v1724);
                                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v1721 + 16))(((unint64_t)v1641 + v1725) & v1784, (unint64_t)&v1642[v1725] & v1784, v1729);
                                    if (!v1833)
                                      *((_BYTE *)v1641 + v1826) = 0;
                                    goto LABEL_2376;
                                  }
LABEL_2368:
                                  (*(void (**)(void *, _BYTE *, uint64_t))(v1720 + 16))(v1626, v1627, v1724);
                                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1721 + 16))(((unint64_t)v1626 + v1725) & v1784, (unint64_t)&v1627[v1725] & v1784, v1729);
                                  if (!v1833)
                                    *((_BYTE *)v1626 + v1826) = 0;
                                  goto LABEL_2370;
                                }
                                v1446 = (void *)((unint64_t)&v1437[v1731] & v1809);
                                v1447 = (const void *)((unint64_t)&v1438[v1731] & v1809);
                                v1448 = __n;
                              }
                              memcpy(v1446, v1447, v1448);
                              goto LABEL_2115;
                            }
LABEL_2100:
                            (*(void (**)(void *, _BYTE *, uint64_t))(v1720 + 16))(v1015, v1016, v1724);
                            (*(void (**)(unint64_t, unint64_t, uint64_t))(v1721 + 16))(((unint64_t)v1015 + v1725) & v1784, (unint64_t)&v1016[v1725] & v1784, v1729);
                            if (!v1833)
                              *((_BYTE *)v1015 + v1826) = 0;
                            goto LABEL_2102;
                          }
                        }
                        memcpy(v1004, v1005, v1007);
                        goto LABEL_1280;
                      }
LABEL_1263:
                      memcpy(v530, v531, v1759);
                      goto LABEL_2106;
                    }
                    if (v1833 < 2)
                      goto LABEL_1261;
                    v534 = (v1706 + v897) & v1681;
                    v532 = v1728;
                    if (v1722 >= v1728)
                    {
                      v532 = v1722;
                      v535 = v1724;
                    }
                    else
                    {
                      v534 = (v1725 + v534) & v1784;
                      v535 = v1729;
                    }
                  }
                  if (__swift_getEnumTagSinglePayload(v534, v532, v535) < 2)
                    goto LABEL_1261;
                  goto LABEL_1263;
                case 6:
                  *v372 = *v373;
                  v383 = 6;
                  goto LABEL_759;
                case 7:
                  *v372 = *v373;
                  v383 = 7;
                  goto LABEL_759;
                case 8:
                  v1673 = v87;
                  if (__swift_getEnumTagSinglePayload((uint64_t)v373, 1, v1773))
                  {
                    memcpy(v372, v373, v1842);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1765 + 16))(v372, v373, v1773);
                    __swift_storeEnumTagSinglePayload((uint64_t)v372, 0, 1, v1773);
                  }
                  v537 = ((unint64_t)v372 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v1799 = v373;
                  v538 = ((unint64_t)v373 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v539 = *(_QWORD *)(v538 + 24);
                  *(_QWORD *)(v537 + 24) = v539;
                  *(_QWORD *)(v537 + 32) = *(_QWORD *)(v538 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v539 - 8))(((unint64_t)v1868 + v1839) & 0xFFFFFFFFFFFFFFF8, v538);
                  v540 = (v1856 + v537) & v1789;
                  v541 = (v1856 + v538) & v1789;
                  if (v1723 >= 0x7FFFFFFF)
                  {
                    v546 = (const void *)((v1726 + v541) & v1779);
                    if (__swift_getEnumTagSinglePayload((uint64_t)v546, v1718, v1730) <= 1)
                    {
                      v1661 = v89;
                      v543 = (char *)(v541 + 8);
                      v544 = v1726;
                      v545 = ~v1847;
LABEL_810:
                      *(_BYTE *)v540 = *(_BYTE *)v541;
                      *(_QWORD *)(((v1856 + v537) & v1789) + 8) = *(_QWORD *)(v541 + 8);
                      *(_QWORD *)(((v1856 + v537) & v1789) + 0x10) = *((_QWORD *)v543 + 1);
                      *(_QWORD *)(((v1856 + v537) & v1789) + 0x18) = *((_QWORD *)v543 + 2);
                      *(_QWORD *)(((v1856 + v537) & v1789) + 0x20) = *((_QWORD *)v543 + 3);
                      *(_QWORD *)(((v1856 + v537) & v1789) + 0x28) = *((_QWORD *)v543 + 4);
                      *(_QWORD *)(((v1856 + v537) & v1789) + 0x30) = *((_QWORD *)v543 + 5);
                      *(_QWORD *)(((v1856 + v537) & v1789) + 0x38) = *((_QWORD *)v543 + 6);
                      *(_QWORD *)(((v1856 + v537) & v1789) + 0x40) = *((_QWORD *)v543 + 7);
                      *(_QWORD *)(((v1856 + v537) & v1789) + 0x48) = *((_QWORD *)v543 + 8);
                      *(_QWORD *)(((v1856 + v537) & v1789) + 0x50) = *((_QWORD *)v543 + 9);
                      *(_QWORD *)(((v1856 + v537) & v1789) + 0x58) = *((_QWORD *)v543 + 10);
                      *(_QWORD *)(((v1856 + v537) & v1789) + 0x60) = *((_QWORD *)v543 + 11);
                      v547 = *((_QWORD *)v543 + 12);
                      *(_BYTE *)(((v1856 + v537) & v1789) + 0x70) = v543[104];
                      *(_QWORD *)(((v1856 + v537) & v1789) + 0x68) = v547;
                      v548 = (void *)((v544 + v540) & v545);
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      if (__swift_getEnumTagSinglePayload((uint64_t)v546, 1, v1730))
                      {
                        memcpy(v548, v546, v1817);
                      }
                      else
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v1712 + 16))(v548, v546, v1730);
                        __swift_storeEnumTagSinglePayload((uint64_t)v548, 0, 1, v1730);
                      }
                      v89 = v1661;
                      v549 = v1820;
LABEL_1123:
                      v939 = (_QWORD *)(((v540 | 7) + v549) & 0xFFFFFFFFFFFFF8);
                      v940 = (_QWORD *)(((v541 | 7) + v549) & 0xFFFFFFFFFFFFFFF8);
                      *v939 = *v940;
                      v941 = (_QWORD *)(((unint64_t)v939 + 15) & 0xFFFFFFFFFFFFFFF8);
                      v942 = (_QWORD *)(((unint64_t)v940 + 15) & 0xFFFFFFFFFFFFFFF8);
                      *v941 = *v942;
                      v941[1] = v942[1];
                      v943 = ((unint64_t)v941 + 23) & 0xFFFFFFFFFFFFFFF8;
                      v944 = ((unint64_t)v942 + 23) & 0xFFFFFFFFFFFFFFF8;
                      v945 = *(_QWORD *)(v944 + 8);
                      sub_21D7C4C20();
                      v373 = v1799;
                      if (v945 < 0xFFFFFFFF)
                      {
                        v946 = *(_OWORD *)v944;
                        *(_QWORD *)(v943 + 16) = *(_QWORD *)(v944 + 16);
                        *(_OWORD *)v943 = v946;
                      }
                      else
                      {
                        *(_QWORD *)v943 = *(_QWORD *)v944;
                        *(_QWORD *)(v943 + 8) = *(_QWORD *)(v944 + 8);
                        *(_QWORD *)(v943 + 16) = *(_QWORD *)(v944 + 16);
                        sub_21D7C4C20();
                        sub_21D7C4C20();
                      }
                      v372 = v1868;
                      *(_QWORD *)((v943 + 31) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v944 + 31) & 0xFFFFFFFFFFFFF8);
                      v947 = 8;
LABEL_1643:
                      v1204 = v1791;
LABEL_1644:
                      *((_BYTE *)v372 + v1204) = v947;
                      sub_21D7C4C20();
                      goto LABEL_2186;
                    }
                  }
                  else
                  {
                    v542 = *(_QWORD *)(v541 + 16);
                    if (v542 >= 0xFFFFFFFF)
                      LODWORD(v542) = -1;
                    if ((int)v542 - 1 < 0)
                    {
                      v1661 = v89;
                      v543 = (char *)(v541 + 8);
                      v544 = v1726;
                      v545 = ~v1847;
                      v546 = (const void *)((v1726 + v541) & v1779);
                      goto LABEL_810;
                    }
                  }
                  v549 = v1820;
                  memcpy((void *)v540, (const void *)v541, v1820);
                  goto LABEL_1123;
                case 9:
                  v1673 = v87;
                  if (__swift_getEnumTagSinglePayload((uint64_t)v373, 1, v1773))
                  {
                    memcpy(v372, v373, v1842);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1765 + 16))(v372, v373, v1773);
                    __swift_storeEnumTagSinglePayload((uint64_t)v372, 0, 1, v1773);
                  }
                  v550 = ((unint64_t)v372 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v551 = ((unint64_t)v373 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v552 = *(_QWORD *)(v551 + 24);
                  *(_QWORD *)(v550 + 24) = v552;
                  *(_QWORD *)(v550 + 32) = *(_QWORD *)(v551 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v552 - 8))(v550, v551);
                  v553 = (_QWORD *)((v550 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v554 = (_QWORD *)((v551 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v553 = *v554;
                  v553[1] = v554[1];
                  v555 = (void *)(((unint64_t)v553 + v1847 + 16) & v1779);
                  v556 = (const void *)(((unint64_t)v554 + v1847 + 16) & v1779);
                  sub_21D7C4C20();
                  if (__swift_getEnumTagSinglePayload((uint64_t)v556, 1, v1730))
                  {
                    memcpy(v555, v556, v1817);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1712 + 16))(v555, v556, v1730);
                    __swift_storeEnumTagSinglePayload((uint64_t)v555, 0, 1, v1730);
                  }
                  v837 = (void *)(((unint64_t)v555 + v1688) & v1681);
                  v838 = (_BYTE *)(((unint64_t)v556 + v1688) & v1681);
                  v372 = v1868;
                  if (v1833)
                  {
                    v839 = v1728;
                    if (v1722 >= v1728)
                    {
                      v840 = (uint64_t)v838;
                      v839 = v1722;
                      v841 = v1724;
                    }
                    else
                    {
                      v840 = (unint64_t)&v838[v1725] & v1784;
                      v841 = v1729;
                    }
                    v894 = __swift_getEnumTagSinglePayload(v840, v839, v841);
                  }
                  else
                  {
                    if (!v838[v1826])
                      goto LABEL_1608;
                    v880 = (v838[v1826] - 1) << v1777;
                    if (v1826 > 3)
                      v880 = 0;
                    if ((_DWORD)v1826)
                    {
                      if (v1826 <= 3)
                        v881 = v1826;
                      else
                        v881 = 4;
                      __asm { BR              X11 }
                    }
                    v894 = v880 + 1;
                  }
                  if (v894)
                  {
                    memcpy(v837, v838, v1822);
                    goto LABEL_1610;
                  }
LABEL_1608:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1720 + 16))(v837, v838, v1724);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1721 + 16))(((unint64_t)v837 + v1725) & v1784, (unint64_t)&v838[v1725] & v1784, v1729);
                  if (!v1833)
                    *((_BYTE *)v837 + v1826) = 0;
LABEL_1610:
                  v1193 = &v838[v1822];
                  *((_BYTE *)v837 + v1822) = v838[v1822];
                  v1194 = (void *)(((unint64_t)v837 + v1822 + v1876 + 1) & v1681);
                  v1195 = (_BYTE *)((unint64_t)&v838[v1822 + 1 + v1876] & v1681);
                  if (v1833)
                  {
                    v1196 = v1728;
                    if (v1722 >= v1728)
                    {
                      v1197 = (unint64_t)&v1193[v1876 + 1] & v1681;
                      v1196 = v1722;
                      v1198 = v1724;
                    }
                    else
                    {
                      v1197 = (unint64_t)&v1195[v1725] & v1784;
                      v1198 = v1729;
                    }
                    v1201 = __swift_getEnumTagSinglePayload(v1197, v1196, v1198);
                  }
                  else
                  {
                    if (!v1195[v1826])
                      goto LABEL_1732;
                    v1199 = (v1195[v1826] - 1) << v1777;
                    if (v1826 > 3)
                      v1199 = 0;
                    if ((_DWORD)v1826)
                    {
                      if (v1826 <= 3)
                        v1200 = v1826;
                      else
                        v1200 = 4;
                      __asm { BR              X11 }
                    }
                    v1201 = v1199 + 1;
                  }
                  if (v1201)
                  {
                    v1246 = v373;
                    memcpy(v1194, v1195, v1822);
                    goto LABEL_1734;
                  }
LABEL_1732:
                  v1246 = v373;
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1720 + 16))(v1194, v1195, v1724);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1721 + 16))(((unint64_t)v1194 + v1725) & v1784, (unint64_t)&v1195[v1725] & v1784, v1729);
                  if (!v1833)
                    *((_BYTE *)v1194 + v1826) = 0;
LABEL_1734:
                  v1247 = (_QWORD *)(((unint64_t)v1194 + v1785) & v1845);
                  v1248 = (uint64_t *)((unint64_t)&v1195[v1785] & v1845);
                  if ((v1728 & 0x80000000) != 0)
                  {
                    v1250 = __swift_getEnumTagSinglePayload(((unint64_t)v1248 + v1711) & v1784, v1728, v1729);
                  }
                  else
                  {
                    v1249 = *v1248;
                    if ((unint64_t)*v1248 >= 0xFFFFFFFF)
                      LODWORD(v1249) = -1;
                    v1250 = v1249 + 1;
                  }
                  if (v1250)
                  {
                    memcpy(v1247, v1248, v1815);
                  }
                  else
                  {
                    *v1247 = *v1248;
                    v1251 = v89;
                    v1252 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1721 + 16);
                    sub_21D7C4C20();
                    v372 = v1868;
                    v1252(((unint64_t)v1247 + v1711) & v1784, ((unint64_t)v1248 + v1711) & v1784, v1729);
                    v89 = v1251;
                  }
                  v1253 = (_QWORD *)(((unint64_t)v1247 + v1763) & v1789);
                  v1254 = (_QWORD *)(((unint64_t)v1248 + v1763) & v1789);
                  if (v1723 >= 0x7FFFFFFF)
                  {
                    v1260 = (const void *)(((unint64_t)v1254 + v1726) & v1779);
                    if (__swift_getEnumTagSinglePayload((uint64_t)v1260, v1718, v1730) <= 1)
                    {
                      v1256 = v89;
                      v1257 = (char *)(v1254 + 1);
                      v1258 = v1726;
                      v1259 = ~v1847;
LABEL_1749:
                      *(_BYTE *)v1253 = *(_BYTE *)v1254;
                      v1253[1] = v1254[1];
                      v1253[2] = *((_QWORD *)v1257 + 1);
                      v1253[3] = *((_QWORD *)v1257 + 2);
                      v1253[4] = *((_QWORD *)v1257 + 3);
                      v1253[5] = *((_QWORD *)v1257 + 4);
                      v1253[6] = *((_QWORD *)v1257 + 5);
                      v1253[7] = *((_QWORD *)v1257 + 6);
                      v1253[8] = *((_QWORD *)v1257 + 7);
                      v1253[9] = *((_QWORD *)v1257 + 8);
                      v1253[10] = *((_QWORD *)v1257 + 9);
                      v1253[11] = *((_QWORD *)v1257 + 10);
                      v1253[12] = *((_QWORD *)v1257 + 11);
                      v1261 = *((_QWORD *)v1257 + 12);
                      *((_BYTE *)v1253 + 112) = v1257[104];
                      v1253[13] = v1261;
                      v1262 = (void *)(((unint64_t)v1253 + v1258) & v1259);
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      if (__swift_getEnumTagSinglePayload((uint64_t)v1260, 1, v1730))
                      {
                        memcpy(v1262, v1260, v1817);
                      }
                      else
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v1712 + 16))(v1262, v1260, v1730);
                        __swift_storeEnumTagSinglePayload((uint64_t)v1262, 0, 1, v1730);
                      }
                      v89 = v1256;
                      v372 = v1868;
LABEL_1754:
                      v373 = v1246;
                      v948 = 9;
LABEL_2184:
                      v1357 = v1791;
LABEL_2185:
                      *((_BYTE *)v372 + v1357) = v948;
                      goto LABEL_2186;
                    }
                  }
                  else
                  {
                    v1255 = *(_QWORD *)((((unint64_t)v1248 + v1763) & v1789) + 0x10);
                    if (v1255 >= 0xFFFFFFFF)
                      LODWORD(v1255) = -1;
                    if ((int)v1255 - 1 < 0)
                    {
                      v1256 = v89;
                      v1257 = (char *)(v1254 + 1);
                      v1258 = v1726;
                      v1259 = ~v1847;
                      v1260 = (const void *)(((unint64_t)v1254 + v1726) & v1779);
                      goto LABEL_1749;
                    }
                  }
                  memcpy(v1253, v1254, v1820);
                  goto LABEL_1754;
                case 0xA:
                  v384 = v373;
                  v385 = v87;
                  v386 = v384[3];
                  v372[3] = v386;
                  v372[4] = v384[4];
                  (**(void (***)(_QWORD *, _QWORD *))(v386 - 8))(v372, v384);
                  v387 = (void *)(((unint64_t)v372 + v1824) & v1807);
                  v388 = v384;
                  v389 = (const void *)(((unint64_t)v384 + v1824) & v1807);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v389, 1, v1773))
                  {
                    v390 = v1842;
                    memcpy(v387, v389, v1842);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1765 + 16))(v387, v389, v1773);
                    __swift_storeEnumTagSinglePayload((uint64_t)v387, 0, 1, v1773);
                    v390 = v1842;
                  }
                  *((_BYTE *)v387 + v390) = *((_BYTE *)v389 + v390);
                  v557 = ((unint64_t)v387 + v390) & 0xFFFFFFFFFFFFFFF8;
                  v558 = ((unint64_t)v389 + v390) & 0xFFFFFFFFFFFFFFF8;
                  *(_QWORD *)(v557 + 8) = *(_QWORD *)(v558 + 8);
                  *(_QWORD *)(v557 + 16) = *(_QWORD *)(v558 + 16);
                  v559 = (_QWORD *)((v557 + 31) & 0xFFFFFFFFFFFFFFF8);
                  v560 = (_QWORD *)((v558 + 31) & 0xFFFFFFFFFFFFFFF8);
                  *v559 = *v560;
                  v559[1] = v560[1];
                  v561 = (_QWORD *)(((unint64_t)v559 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v562 = (_QWORD *)(((unint64_t)v560 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v561 = *v562;
                  v561[1] = v562[1];
                  *((_BYTE *)v1868 + v1791) = 10;
                  sub_21D7C4C20();
                  v372 = v1868;
                  sub_21D7C4C20();
                  goto LABEL_935;
                case 0xB:
                  *v372 = *v373;
                  v383 = 11;
                  goto LABEL_759;
                case 0xC:
                  v391 = v87;
                  if (__swift_getEnumTagSinglePayload((uint64_t)v373, 1, v1773))
                  {
                    memcpy(v372, v373, v1842);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1765 + 16))(v372, v373, v1773);
                    __swift_storeEnumTagSinglePayload((uint64_t)v372, 0, 1, v1773);
                  }
                  v563 = v89;
                  v564 = ((unint64_t)v372 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v565 = ((unint64_t)v373 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v566 = *(_QWORD *)(v565 + 24);
                  *(_QWORD *)(v564 + 24) = v566;
                  *(_QWORD *)(v564 + 32) = *(_QWORD *)(v565 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v566 - 8))(((unint64_t)v1868 + v1839) & 0xFFFFFFFFFFFFFFF8, v565);
                  v567 = (_QWORD *)((v1818 + 40 + v564) & v1862);
                  v568 = (_QWORD *)((v1818 + 40 + v565) & v1862);
                  if (v1710 <= 0x7FFFFFFE)
                  {
                    v569 = v568[1];
                    if (v569 >= 0xFFFFFFFF)
                      LODWORD(v569) = -1;
                    if ((v569 + 1) <= 1)
                    {
                      v1800 = v373;
                      v570 = (_QWORD *)(((unint64_t)v568 + 23) & 0xFFFFFFFFFFFFFFF8);
                      v571 = ((unint64_t)v570 + 23) & 0xFFFFFFFFFFFFFFF8;
                      goto LABEL_1091;
                    }
LABEL_825:
                    memcpy(v567, v568, v1860);
                    goto LABEL_1092;
                  }
                  v570 = (_QWORD *)(((unint64_t)v568 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v571 = ((unint64_t)v570 + 23) & 0xFFFFFFFFFFFFFFF8;
                  if (__swift_getEnumTagSinglePayload((v1818 + v571 + 33) & v1775, v1710, v1709))
                    goto LABEL_825;
                  v1800 = v373;
LABEL_1091:
                  *v567 = *v568;
                  *(_QWORD *)(((v1818 + 40 + v564) & v1862) + 8) = v568[1];
                  v905 = (_QWORD *)(((unint64_t)v567 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v905 = *v570;
                  v905[1] = v570[1];
                  v906 = ((unint64_t)v905 + 23) & 0xFFFFFFFFFFFFFFF8;
                  *(_QWORD *)v906 = *(_QWORD *)v571;
                  *(_QWORD *)(v906 + 8) = *(_QWORD *)(v571 + 8);
                  *(_BYTE *)(v906 + 16) = *(_BYTE *)(v571 + 16);
                  v907 = ((unint64_t)v905 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v908 = ((unint64_t)v570 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v909 = *(void **)v908;
                  *(_QWORD *)v907 = *(_QWORD *)v908;
                  *(_BYTE *)(v907 + 8) = *(_BYTE *)(v908 + 8);
                  v910 = (v1818 + 9 + v907) & v1775;
                  v911 = (v1818 + 9 + v908) & v1775;
                  v912 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1813 + 16);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  v913 = v909;
                  v912(v910, v911, v1709);
                  v373 = v1800;
LABEL_1092:
                  *(_QWORD *)(((unint64_t)v567 + v1860 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v568 + v1860 + 7) & 0xFFFFFFFFFFFFF8);
                  v372 = v1868;
                  *((_BYTE *)v1868 + v1791) = 12;
                  sub_21D7C4C20();
                  v89 = v563;
                  v87 = v391;
LABEL_2187:
                  v1526 = (_QWORD *)(((unint64_t)v372 + v87) & 0xFFFFFFFFFFFFFFF8);
                  v1527 = *(_QWORD *)(((unint64_t)v373 + v87) & 0xFFFFFFFFFFFFF8);
                  LODWORD(v1528) = -1;
                  if (v1527 < 0xFFFFFFFF)
                    v1528 = *(_QWORD *)(((unint64_t)v373 + v87) & 0xFFFFFFFFFFFFF8);
                  if ((int)v1528 - 1 < 0)
                    v1527 = sub_21D7C4C20();
                  *v1526 = v1527;
                  *((_BYTE *)a1 + v89) = 1;
LABEL_2192:
                  a3 = v1780;
LABEL_2193:
                  v1865 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
                  v1529 = *(_QWORD *)(sub_21D7C4668() - 8);
                  v1530 = *(unsigned __int8 *)(v1529 + 80);
                  v1861 = v1530 + 16;
                  v1531 = *(_DWORD *)(v1529 + 84);
                  v1532 = *(_QWORD *)(v1529 + 64);
                  if (!v1531)
                    ++v1532;
                  v1533 = ((v1530 + 16) & ~v1530) + v1532;
                  v1869 = v1530 | 7;
                  v1874 = v1532;
                  v1534 = *(_QWORD *)(sub_21D7BF754() - 8);
                  v1535 = *(unsigned __int8 *)(v1534 + 80);
                  v1536 = v1535 | 7;
                  v1537 = v1530 | 7 | v1535;
                  v1538 = *(_QWORD *)(sub_21D7C3840() - 8);
                  v1539 = *(unsigned __int8 *)(v1538 + 80);
                  v1540 = *(_QWORD *)(sub_21D7C3804() - 8);
                  v1541 = *(_DWORD *)(v1540 + 84);
                  v1542 = *(_DWORD *)(v1540 + 80);
                  v1543 = *(_DWORD *)(v1540 + 80) | v1539;
                  v1544 = v1537 | v1543;
                  v1855 = v1530;
                  v1857 = v1530 + 40;
                  v1545 = (v1530 + 40) & ~v1530;
                  v1546 = (v1535 + 113) & ~v1535;
                  v1547 = *(_QWORD *)(v1534 + 64);
                  v1852 = *(_QWORD *)(v1540 + 64);
                  v1548 = ((*(_QWORD *)(v1538 + 64) + v1542) & ~v1542) + v1852;
                  if (!*(_DWORD *)(v1534 + 84))
                    ++v1547;
                  v1838 = v1547;
                  v1840 = v1545 + v1874;
                  v1843 = (v1545 + v1874 + 7) & 0xFFFFFFFFFFFFFFF8;
                  v1877 = v1535 + 40;
                  v1829 = v1547 + v1546;
                  if (!(v1541 | *(_DWORD *)(v1538 + 84)))
                    ++v1548;
                  v1827 = v1548;
                  v1825 = v1548 + 1;
                  v1549 = v1548 + 1 + ((v1543 + 160) & ~v1543);
                  if (v1547
                     + v1546
                     + ((v1535 + 40 + ((((v1843 + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v1536) > v1549)
                    v1549 = v1547
                          + v1546
                          + ((v1535 + 40 + ((((v1843 + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v1536);
                  if (v1549 <= 0x30)
                    v1549 = 48;
                  v1836 = v1549 + ((v1544 + 1) & ~v1544) + 1;
                  v1550 = *(_QWORD *)(sub_21D7C3F6C() - 8);
                  v1551 = *(unsigned __int8 *)(v1550 + 80);
                  v1552 = ((v1551 | 7)
                         + ((((v1533 + (v1537 | v1543)) & ~(v1537 | v1543)) + v1836 + 11) & 0xFFFFFFFFFFFFFFF8)
                         + 58) & ~(v1551 | 7);
                  v1553 = *(_DWORD *)(v1550 + 84) == 0;
                  v1554 = (v1551 + 16) & ~v1551;
                  v1555 = *(_QWORD *)(v1550 + 64);
                  if (v1553)
                    ++v1555;
                  v1556 = v1555 + v1554;
                  v1557 = *(_QWORD *)(sub_21D7C4314() - 8);
                  v1558 = *(unsigned __int8 *)(v1557 + 80);
                  v1821 = v1558 | 7;
                  v1823 = v1542 | 7;
                  v1559 = *(_QWORD *)(sub_21D7BF964() - 8);
                  v1560 = *(unsigned __int8 *)(v1559 + 80);
                  v1859 = (v1556 + (v1544 | v1542 | v1558 | v1560) + v1552) & ~(v1544 | v1542 | v1558 | v1560);
                  v1850 = v1874 + 7;
                  v1561 = (v1874 + 7) & 0xFFFFFFFFFFFFFFF8;
                  v1562 = (v1561 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1563 = v1852 + ((v1542 + 8) & ~v1542);
                  v1564 = *(_QWORD *)(v1559 + 64) + ((v1825 + v1560 + ((v1562 + 16 + v1543) & ~v1543)) & ~v1560);
                  v1565 = (v1562 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v1566 = ((v1558 + 65) & ~v1558) + *(_QWORD *)(v1557 + 64);
                  v1567 = (((((v1565 + 15) & 0xFFFFFFFFFFFFFFF8) + v1821 + 16) & ~v1821) + v1566) & 0xFFFFFFFFFFFFFFF8;
                  v1853 = v1543 + 16;
                  v1568 = v1827 + v1823;
                  v1848 = v1563;
                  v1569 = v1563 + v1536;
                  v1846 = (v1562 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1570 = v1846 + v1869 + 16;
                  v1832 = v1846 + 24;
                  v1571 = v1535 + 8;
                  v1572 = v1829 + ((v1535 + 8) & ~v1536);
                  if (v1572 <= v1846
                              + 24
                              + ((v1570
                                + ((v1570
                                  + ((v1829
                                    + v1869
                                    + ((v1563
                                      + v1536
                                      + ((v1827 + v1823 + ((v1543 + 16 + ((v1567 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v1543)) & ~v1823)) & ~v1536)) & ~v1869)) & ~v1869)) & ~v1869))
                    v1573 = v1846
                          + 24
                          + ((v1570
                            + ((v1570
                              + ((v1829
                                + v1869
                                + ((v1563
                                  + v1536
                                  + ((v1827 + v1823 + ((v1543 + 16 + ((v1567 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v1543)) & ~v1823)) & ~v1536)) & ~v1869)) & ~v1869)) & ~v1869);
                  else
                    v1573 = v1829 + ((v1535 + 8) & ~v1536);
                  v1574 = v1829 + v1543;
                  v1575 = ((v1568
                          + ((v1829 + v1543 + ((v1877 + ((v1564 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v1536)) & ~v1543)) & ~v1823)
                        + v1563;
                  if (v1573 <= v1575)
                    v1573 = v1575;
                  v1576 = v1827 + 7;
                  v1577 = ((((v1827
                            + 7
                            + ((v1574 + ((v1536 + ((v1565 + 47) & 0xFFFFFFFFFFFFFFF8) + 41) & ~v1536)) & ~v1543)) & 0xFFFFFFFFFFFFFFF8)
                          + 47) & 0xFFFFFFFFFFFFFFF8)
                        + 16;
                  if (v1573 <= v1577)
                    v1573 = ((((v1827
                              + 7
                              + ((v1574 + ((v1536 + ((v1565 + 47) & 0xFFFFFFFFFFFFFFF8) + 41) & ~v1536)) & ~v1543)) & 0xFFFFFFFFFFFFFFF8)
                            + 47) & 0xFFFFFFFFFFFFFFF8)
                          + 16;
                  v1578 = v1561 + 40;
                  v1579 = v1544 + v1561 + 40;
                  v1580 = (v1579 | v1544) + v1577;
                  v1581 = v1579 & ~v1544;
                  v1582 = ((v1544 + ((v1836 + (v1580 & ~v1544) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v1544) + v1836;
                  if (v1573 > v1582)
                    v1582 = v1573;
                  v1583 = (v1829 + 7 + ((v1578 + v1535) & ~v1536)) & 0xFFFFFFFFFFFFFFF8;
                  if (v1582 <= ((((((v1583 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
                              + 8)
                    v1582 = ((((((v1583 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
                          + 8;
                  v1584 = ((v1569
                          + ((v1568
                            + ((v1825 + v1543 + ((((v1562 + 16 + v1535) & ~v1535) + v1543 + v1838) & ~v1543)) & ~v1543)) & ~v1823)) & ~v1536)
                        + v1829;
                  if (v1582 > v1584)
                    v1584 = v1582;
                  if (v1584 <= (((((v1840 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                              + 16)
                    v1584 = (((((v1840 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                          + 16;
                  if (v1584 <= ((v1566 + ((v1578 + v1558) & ~v1821) + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
                    v1584 = ((v1566 + ((v1578 + v1558) & ~v1821) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
                  v1585 = v1829 + ((v1843 + v1536 + 17) & ~v1536);
                  if (v1584 <= v1585 + 1)
                    v1586 = v1585 + 1;
                  else
                    v1586 = v1584;
                  v1587 = (v1843 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v1588 = (((v1587 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
                  if (v1586 <= ((((v1588 + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 41)
                    v1586 = ((((v1588 + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 41;
                  if (v1586 <= ((v1827
                                + v1543
                                + ((v1543
                                  + ((((((v1588 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                                  + 40) & ~v1543)) & ~v1543)
                              + v1827)
                    v1586 = ((v1827
                            + v1543
                            + ((v1543
                              + ((((((v1588 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                              + 40) & ~v1543)) & ~v1543)
                          + v1827;
                  v1589 = (v1565 + 23) & 0xFFFFFFFFFFFFFFF8;
                  if (v1586 <= v1589 + 8)
                    v1586 = v1589 + 8;
                  v1590 = ((v1589 + 47) & 0xFFFFFFFFFFFFFFF8) + 40;
                  v1591 = (v1576 + v1581 + ((v1574 + ((v1590 + v1536) & ~v1536)) & ~v1543)) & 0xFFFFFFFFFFFFFFF8;
                  if (v1586 <= ((v1571 + v1591) & ~v1536) + v1829)
                    v1592 = ((v1571 + v1591) & ~v1536) + v1829;
                  else
                    v1592 = v1586;
                  v1593 = (v1570
                         + ((v1570
                           + ((v1829 + v1869 + ((v1569 + ((v1568 + ((v1543 + v1567 + 24) & ~v1543)) & ~v1823)) & ~v1536)) & ~v1869)) & ~v1869)) & ~v1869;
                  if (v1592 <= v1562 + 17)
                    v1592 = v1562 + 17;
                  if (v1592 <= v1832 + v1593)
                    v1592 = v1832 + v1593;
                  if (v1592 <= v1572)
                    v1592 = v1829 + ((v1535 + 8) & ~v1536);
                  v1594 = (v1562 + 15) & 0xFFFFFFFFFFFFFFF8;
                  if (v1592 <= v1594 + 16)
                    v1592 = v1594 + 16;
                  if (v1592 <= ((v1840 + 9) & 0xFFFFFFFFFFFFFFF8) + 17)
                    v1592 = ((v1840 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
                  if (v1592 <= ((v1855 + 80) & (unint64_t)~v1855) + v1874)
                    v1592 = ((v1855 + 80) & ~v1855) + v1874;
                  if (v1592 <= ((v1855 + 56) & (unint64_t)~v1855) + v1874)
                    v1592 = ((v1855 + 56) & ~v1855) + v1874;
                  v1595 = (v1857 + (v1576 & 0xFFFFFFFFFFFFFFF8)) & ~v1855;
                  if (v1592 <= ((((v1850 + v1595) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16)
                    v1592 = ((((v1850 + v1595) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
                  v1596 = (v1583 + 23) & 0xFFFFFFFFFFFFFFF8;
                  if (v1592 <= ((v1543 + v1596 + 18) & ~v1543) + v1827)
                    v1592 = ((v1543 + v1596 + 18) & ~v1543) + v1827;
                  v1597 = v1543 + 8;
                  v1598 = ((v1576
                          + ((v1543
                            + 8
                            + ((((((((((v1596 + 25) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                + 23) & 0xFFFFFFFFFFFFFFF8)
                              + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v1543)) & 0xFFFFFFFFFFFFFFF8)
                        + 16;
                  if (v1592 <= v1598)
                    v1592 = v1598;
                  if (v1592 <= v1565 + 40)
                    v1592 = v1565 + 40;
                  if (v1592 <= v1594 + 8)
                    v1592 = v1594 + 8;
                  if (v1592 <= v1590)
                    v1592 = v1590;
                  if (v1592 <= v1562 + 8)
                    v1592 = v1562 + 8;
                  if (v1592 <= v1843 + 8)
                    v1592 = v1843 + 8;
                  if (v1592 <= ((v1843 + 15) & 0xFFFFFFFFFFFFFFF8) + 8)
                    v1592 = ((v1843 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
                  if (v1592 <= v1840)
                    v1592 = v1840;
                  v1599 = (((v1846 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
                  if (v1592 <= ((v1829
                                + 7
                                + ((v1877
                                  + ((((v1848
                                      + ((v1848
                                        + v1823
                                        + ((v1568
                                          + ((v1827
                                            + v1543
                                            + ((v1597
                                              + ((((v1599 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v1543)) & ~v1543)) & ~v1823)) & ~v1823)
                                      + 9) & 0xFFFFFFFFFFFFFFF8)
                                    + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v1536)) & 0xFFFFFFFFFFFFFFF8)
                              + 16)
                    v1592 = ((v1829
                            + 7
                            + ((v1877
                              + ((((v1848
                                  + ((v1848
                                    + v1823
                                    + ((v1568
                                      + ((v1827
                                        + v1543
                                        + ((v1597 + ((((v1599 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v1543)) & ~v1543)) & ~v1823)) & ~v1823)
                                  + 9) & 0xFFFFFFFFFFFFFFF8)
                                + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v1536)) & 0xFFFFFFFFFFFFFFF8)
                          + 16;
                  v1600 = ((v1536
                          + v1562
                          + 17
                          + ((v1861 + ((((v1587 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v1869)
                          + 23) & ~v1536)
                        + v1829;
                  if (v1592 > v1600)
                    v1600 = v1592;
                  if (v1600 <= ((v1827
                                + v1536
                                + ((v1853
                                  + ((v1576
                                    + ((v1543
                                      + ((((v1576 + ((v1566 + v1543 + ((v1599 + v1821 + 8) & ~v1821)) & ~v1543)) & 0xFFFFFFFFFFFFFFF8)
                                        + 23) & 0xFFFFFFFFFFFFFFF8)
                                      + 9) & ~v1543)) & 0xFFFFFFFFFFFFFFF8)) & ~v1543)) & ~v1536)
                              + v1829)
                    v1600 = ((v1827
                            + v1536
                            + ((v1853
                              + ((v1576
                                + ((v1543
                                  + ((((v1576 + ((v1566 + v1543 + ((v1599 + v1821 + 8) & ~v1821)) & ~v1543)) & 0xFFFFFFFFFFFFFFF8)
                                    + 23) & 0xFFFFFFFFFFFFFFF8)
                                  + 9) & ~v1543)) & 0xFFFFFFFFFFFFFFF8)) & ~v1543)) & ~v1536)
                          + v1829;
                  if (v1600 <= 8)
                    v1600 = 8;
                  v1601 = ((v1859 + v1600 + 8) & 0xFFFFFFFFFFFFFFF8) + 8;
                  if (v1601 <= v1865)
                    v1601 = v1865;
                  if (v1601 <= 8)
                    v1601 = 8;
                  v1604 = v1601 + 8;
                  v1602 = (uint64_t *)(((unint64_t)a1 + v1604) & 0xFFFFFFFFFFFFFFF8);
                  v1603 = (unint64_t *)(((unint64_t)a2 + v1604) & 0xFFFFFFFFFFFFFFF8);
                  LODWORD(v1604) = -1;
                  if ((unint64_t)*v1602 >= 0xFFFFFFFF)
                    LODWORD(v1605) = -1;
                  else
                    v1605 = *v1602;
                  v1606 = v1605 - 1;
                  v1607 = *v1603;
                  if (*v1603 < 0xFFFFFFFF)
                    v1604 = *v1603;
                  v1608 = v1604 - 1;
                  if (v1606 < 0)
                  {
                    if (v1608 < 0)
                    {
                      *v1602 = v1607;
                      sub_21D7C4C20();
                      swift_bridgeObjectRelease();
                    }
                    else
                    {
                      swift_bridgeObjectRelease();
                      *v1602 = *v1603;
                    }
                  }
                  else
                  {
                    *v1602 = v1607;
                    if (v1608 < 0)
                      sub_21D7C4C20();
                  }
                  return a1;
                case 0xD:
                  v1675 = v87;
                  v392 = v373[3];
                  v372[3] = v392;
                  v372[4] = v373[4];
                  (**(void (***)(_QWORD *, _QWORD *))(v392 - 8))(v372, v373);
                  v393 = (void *)(((unint64_t)v372 + v1824) & v1807);
                  v394 = (const void *)(((unint64_t)v373 + v1824) & v1807);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v394, 1, v1773))
                  {
                    memcpy(v393, v394, v1842);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1765 + 16))(v393, v394, v1773);
                    __swift_storeEnumTagSinglePayload((uint64_t)v393, 0, 1, v1773);
                  }
                  v1801 = v373;
                  v572 = ((unint64_t)v393 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v573 = ((unint64_t)v394 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  *(_QWORD *)v572 = *(_QWORD *)v573;
                  *(_QWORD *)(v572 + 8) = *(_QWORD *)(v573 + 8);
                  *(_BYTE *)(v572 + 16) = *(_BYTE *)(v573 + 16);
                  v574 = (_QWORD *)((v1686 + v572) & v1789);
                  v575 = (_QWORD *)((v1686 + v573) & v1789);
                  sub_21D7C4C20();
                  if (v1723 >= 0x7FFFFFFF)
                  {
                    v580 = (const void *)(((unint64_t)v575 + v1726) & v1779);
                    if (__swift_getEnumTagSinglePayload((uint64_t)v580, v1718, v1730) <= 1)
                    {
                      v1662 = v89;
                      v577 = (char *)(v575 + 1);
                      v578 = v1726;
                      v579 = ~v1847;
LABEL_834:
                      *(_BYTE *)v574 = *(_BYTE *)v575;
                      v574[1] = v575[1];
                      v574[2] = *((_QWORD *)v577 + 1);
                      v574[3] = *((_QWORD *)v577 + 2);
                      v574[4] = *((_QWORD *)v577 + 3);
                      v574[5] = *((_QWORD *)v577 + 4);
                      v574[6] = *((_QWORD *)v577 + 5);
                      v574[7] = *((_QWORD *)v577 + 6);
                      v574[8] = *((_QWORD *)v577 + 7);
                      v574[9] = *((_QWORD *)v577 + 8);
                      v574[10] = *((_QWORD *)v577 + 9);
                      v574[11] = *((_QWORD *)v577 + 10);
                      v574[12] = *((_QWORD *)v577 + 11);
                      v581 = *((_QWORD *)v577 + 12);
                      *((_BYTE *)v574 + 112) = v577[104];
                      v574[13] = v581;
                      v582 = (void *)(((unint64_t)v574 + v578) & v579);
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      if (__swift_getEnumTagSinglePayload((uint64_t)v580, 1, v1730))
                      {
                        memcpy(v582, v580, v1817);
                      }
                      else
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v1712 + 16))(v582, v580, v1730);
                        __swift_storeEnumTagSinglePayload((uint64_t)v582, 0, 1, v1730);
                      }
                      v89 = v1662;
                      v583 = v1820;
LABEL_1129:
                      *((_BYTE *)v574 + v583) = *((_BYTE *)v575 + v583);
                      v372 = v1868;
                      *((_BYTE *)v1868 + v1791) = 13;
LABEL_2002:
                      v87 = v1675;
                      v373 = v1801;
                      goto LABEL_2187;
                    }
                  }
                  else
                  {
                    v576 = v575[2];
                    if (v576 >= 0xFFFFFFFF)
                      LODWORD(v576) = -1;
                    if ((int)v576 - 1 < 0)
                    {
                      v1662 = v89;
                      v577 = (char *)(v575 + 1);
                      v578 = v1726;
                      v579 = ~v1847;
                      v580 = (const void *)(((unint64_t)v575 + v1726) & v1779);
                      goto LABEL_834;
                    }
                  }
                  v583 = v1820;
                  memcpy(v574, v575, v1820);
                  goto LABEL_1129;
                case 0xE:
                  *v372 = *v373;
                  v383 = 14;
                  goto LABEL_759;
                case 0xF:
                  *v372 = *v373;
                  v383 = 15;
                  goto LABEL_759;
                case 0x10:
                  v395 = v87;
                  v396 = v373[3];
                  v372[3] = v396;
                  v372[4] = v373[4];
                  (**(void (***)(_QWORD *, _QWORD *))(v396 - 8))(v372, v373);
                  v397 = (void *)(((unint64_t)v372 + v1824) & v1807);
                  v398 = (const void *)(((unint64_t)v373 + v1824) & v1807);
                  v399 = v373;
                  if (__swift_getEnumTagSinglePayload((uint64_t)v398, 1, v1773))
                  {
                    memcpy(v397, v398, v1842);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1765 + 16))(v397, v398, v1773);
                    __swift_storeEnumTagSinglePayload((uint64_t)v397, 0, 1, v1773);
                  }
                  v584 = (_QWORD *)(((unint64_t)v397 + v1839) & 0xFFFFFFFFFFFFFFF8);
                  v585 = (_QWORD *)(((unint64_t)v398 + v1839) & 0xFFFFFFFFFFFFFFF8);
                  *v584 = *v585;
                  v584[1] = v585[1];
                  v586 = (_QWORD *)(((unint64_t)v584 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v587 = (_QWORD *)(((unint64_t)v585 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v586 = *v587;
                  v586[1] = v587[1];
                  v588 = (_QWORD *)(((unint64_t)v586 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v589 = (_QWORD *)(((unint64_t)v587 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v588 = *v589;
                  v588[1] = v589[1];
                  v590 = ((unint64_t)v588 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v591 = ((unint64_t)v589 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v592 = *(_QWORD *)(v591 + 24);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (v592 < 0xFFFFFFFF)
                  {
                    v593 = *(_OWORD *)v591;
                    v594 = *(_OWORD *)(v591 + 16);
                    *(_QWORD *)(v590 + 32) = *(_QWORD *)(v591 + 32);
                    *(_OWORD *)v590 = v593;
                    *(_OWORD *)(v590 + 16) = v594;
                  }
                  else
                  {
                    *(_QWORD *)(v590 + 24) = v592;
                    *(_QWORD *)(v590 + 32) = *(_QWORD *)(v591 + 32);
                    (**(void (***)(unint64_t, unint64_t, unint64_t))(v592 - 8))(v590, v591, v592);
                  }
                  v595 = (v590 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v596 = (v591 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v597 = *(_QWORD *)(v596 + 24);
                  v373 = v399;
                  if (v597 < 0xFFFFFFFF)
                  {
                    v598 = *(_OWORD *)v596;
                    v599 = *(_OWORD *)(v596 + 16);
                    *(_QWORD *)(v595 + 32) = *(_QWORD *)(v596 + 32);
                    *(_OWORD *)v595 = v598;
                    *(_OWORD *)(v595 + 16) = v599;
                  }
                  else
                  {
                    *(_QWORD *)(v595 + 24) = v597;
                    *(_QWORD *)(v595 + 32) = *(_QWORD *)(v596 + 32);
                    (**(void (***)(unint64_t, unint64_t))(v597 - 8))(v595, v596);
                  }
                  v600 = (v595 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v601 = (v596 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v602 = *(_QWORD *)(v601 + 24);
                  if (v602 < 0xFFFFFFFF)
                  {
                    v603 = *(_OWORD *)v601;
                    v604 = *(_OWORD *)(v601 + 16);
                    *(_QWORD *)(v600 + 32) = *(_QWORD *)(v601 + 32);
                    *(_OWORD *)v600 = v603;
                    *(_OWORD *)(v600 + 16) = v604;
                  }
                  else
                  {
                    *(_QWORD *)(v600 + 24) = v602;
                    *(_QWORD *)(v600 + 32) = *(_QWORD *)(v601 + 32);
                    (**(void (***)(unint64_t, unint64_t))(v602 - 8))(v600, v601);
                  }
                  *(_BYTE *)(v600 + 40) = *(_BYTE *)(v601 + 40);
                  *((_BYTE *)v372 + v1791) = 16;
                  v87 = v395;
                  goto LABEL_2187;
                case 0x11:
                  v1673 = v87;
                  v400 = v373[3];
                  v372[3] = v400;
                  v372[4] = v373[4];
                  (**(void (***)(_QWORD *, _QWORD *))(v400 - 8))(v372, v373);
                  v401 = (void *)(((unint64_t)v372 + v1824) & v1807);
                  v402 = (const void *)(((unint64_t)v373 + v1824) & v1807);
                  v403 = v373;
                  if (__swift_getEnumTagSinglePayload((uint64_t)v402, 1, v1773))
                  {
                    memcpy(v401, v402, v1842);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1765 + 16))(v401, v402, v1773);
                    __swift_storeEnumTagSinglePayload((uint64_t)v401, 0, 1, v1773);
                  }
                  v605 = (_QWORD *)(((unint64_t)v401 + v1839) & 0xFFFFFFFFFFFFFFF8);
                  v606 = (_QWORD *)(((unint64_t)v402 + v1839) & 0xFFFFFFFFFFFFFFF8);
                  *v605 = *v606;
                  v605[1] = v606[1];
                  v607 = (_QWORD *)(((unint64_t)v605 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v608 = (_QWORD *)(((unint64_t)v606 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v607 = *v608;
                  v607[1] = v608[1];
                  v609 = (_QWORD *)(((unint64_t)v607 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v610 = (_QWORD *)(((unint64_t)v608 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v609 = *v610;
                  v609[1] = v610[1];
                  v611 = (_QWORD *)(((unint64_t)v609 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v612 = (_QWORD *)(((unint64_t)v610 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v611 = *v612;
                  v611[1] = v612[1];
                  v613 = ((unint64_t)v611 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v614 = ((unint64_t)v612 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v615 = *(_QWORD *)(v614 + 24);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (v615 < 0xFFFFFFFF)
                  {
                    v616 = *(_OWORD *)v614;
                    v617 = *(_OWORD *)(v614 + 16);
                    *(_QWORD *)(v613 + 32) = *(_QWORD *)(v614 + 32);
                    *(_OWORD *)v613 = v616;
                    *(_OWORD *)(v613 + 16) = v617;
                  }
                  else
                  {
                    *(_QWORD *)(v613 + 24) = v615;
                    *(_QWORD *)(v613 + 32) = *(_QWORD *)(v614 + 32);
                    (**(void (***)(unint64_t, unint64_t, unint64_t))(v615 - 8))(v613, v614, v615);
                  }
                  v618 = (v613 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v619 = (v614 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v620 = *(_QWORD *)(v619 + 24);
                  v373 = v403;
                  if (v620 < 0xFFFFFFFF)
                  {
                    v621 = *(_OWORD *)v619;
                    v622 = *(_OWORD *)(v619 + 16);
                    *(_QWORD *)(v618 + 32) = *(_QWORD *)(v619 + 32);
                    *(_OWORD *)v618 = v621;
                    *(_OWORD *)(v618 + 16) = v622;
                  }
                  else
                  {
                    *(_QWORD *)(v618 + 24) = v620;
                    *(_QWORD *)(v618 + 32) = *(_QWORD *)(v619 + 32);
                    (**(void (***)(unint64_t, unint64_t))(v620 - 8))(v618, v619);
                  }
                  v623 = (v618 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v624 = (v619 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v625 = *(_QWORD *)(v624 + 24);
                  if (v625 < 0xFFFFFFFF)
                  {
                    v626 = *(_OWORD *)v624;
                    v627 = *(_OWORD *)(v624 + 16);
                    *(_QWORD *)(v623 + 32) = *(_QWORD *)(v624 + 32);
                    *(_OWORD *)v623 = v626;
                    *(_OWORD *)(v623 + 16) = v627;
                  }
                  else
                  {
                    *(_QWORD *)(v623 + 24) = v625;
                    *(_QWORD *)(v623 + 32) = *(_QWORD *)(v624 + 32);
                    (**(void (***)(unint64_t, unint64_t))(v625 - 8))(v623, v624);
                  }
                  v628 = (void *)((v1691 + v623) & v1681);
                  v629 = (_BYTE *)((v1691 + v624) & v1681);
                  if (v1833)
                  {
                    v630 = v1728;
                    if (v1722 >= v1728)
                    {
                      v631 = (uint64_t)v629;
                      v630 = v1722;
                      v632 = v1724;
                    }
                    else
                    {
                      v631 = (unint64_t)&v629[v1725] & v1784;
                      v632 = v1729;
                    }
                    v890 = __swift_getEnumTagSinglePayload(v631, v630, v632);
                  }
                  else
                  {
                    if (!v629[v1826])
                      goto LABEL_1777;
                    v842 = (v629[v1826] - 1) << v1777;
                    if (v1826 > 3)
                      v842 = 0;
                    if ((_DWORD)v1826)
                    {
                      if (v1826 <= 3)
                        v843 = v1826;
                      else
                        v843 = 4;
                      __asm { BR              X11 }
                    }
                    v890 = v842 + 1;
                  }
                  if (v890)
                  {
                    memcpy(v628, v629, v1822);
                    goto LABEL_1779;
                  }
LABEL_1777:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1720 + 16))(v628, v629, v1724);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1721 + 16))(((unint64_t)v628 + v1725) & v1784, (unint64_t)&v629[v1725] & v1784, v1729);
                  if (!v1833)
                    *((_BYTE *)v628 + v1826) = 0;
LABEL_1779:
                  v1268 = (void *)(((unint64_t)v628 + v1708) & v1681);
                  v1269 = (_BYTE *)((unint64_t)&v629[v1708] & v1681);
                  if (v1833)
                  {
                    v1270 = v1728;
                    if (v1722 >= v1728)
                    {
                      v1271 = (uint64_t)v1269;
                      v1270 = v1722;
                      v1272 = v1724;
                    }
                    else
                    {
                      v1271 = (unint64_t)&v1269[v1725] & v1784;
                      v1272 = v1729;
                    }
                    v1275 = __swift_getEnumTagSinglePayload(v1271, v1270, v1272);
                  }
                  else
                  {
                    if (!v1269[v1826])
                      goto LABEL_1962;
                    v1273 = (v1269[v1826] - 1) << v1777;
                    if (v1826 > 3)
                      v1273 = 0;
                    if ((_DWORD)v1826)
                    {
                      if (v1826 <= 3)
                        v1274 = v1826;
                      else
                        v1274 = 4;
                      __asm { BR              X11 }
                    }
                    v1275 = v1273 + 1;
                  }
                  if (v1275)
                  {
                    memcpy(v1268, v1269, v1822);
                    goto LABEL_1964;
                  }
LABEL_1962:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1720 + 16))(v1268, v1269, v1724);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1721 + 16))(((unint64_t)v1268 + v1725) & v1784, (unint64_t)&v1269[v1725] & v1784, v1729);
                  if (!v1833)
                    *((_BYTE *)v1268 + v1826) = 0;
LABEL_1964:
                  v948 = 17;
                  goto LABEL_1965;
                case 0x12:
                  *v372 = *v373;
                  v383 = 18;
                  goto LABEL_759;
                case 0x13:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v373, 1, v1773))
                  {
                    memcpy(v372, v373, v1842);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1765 + 16))(v372, v373, v1773);
                    __swift_storeEnumTagSinglePayload((uint64_t)v372, 0, 1, v1773);
                  }
                  v633 = ((unint64_t)v372 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v634 = ((unint64_t)v373 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v635 = *(_QWORD *)(v634 + 24);
                  *(_QWORD *)(v633 + 24) = v635;
                  *(_QWORD *)(v633 + 32) = *(_QWORD *)(v634 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v635 - 8))(v633, v634);
                  v636 = (_QWORD *)((v633 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v637 = (_QWORD *)((v634 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v636 = *v637;
                  v636[1] = v637[1];
                  v638 = (_QWORD *)(((unint64_t)v636 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v639 = (_QWORD *)(((unint64_t)v637 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v638 = *v639;
                  v638[1] = v639[1];
                  *(_QWORD *)(((unint64_t)v638 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v639
                                                                                               + 23) & 0xFFFFFFFFFFFFF8);
                  *((_BYTE *)v1868 + v1791) = 19;
                  sub_21D7C4C20();
                  v372 = v1868;
                  sub_21D7C4C20();
                  goto LABEL_760;
                case 0x14:
                  v1673 = v87;
                  if (__swift_getEnumTagSinglePayload((uint64_t)v373, 1, v1773))
                  {
                    memcpy(v372, v373, v1842);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1765 + 16))(v372, v373, v1773);
                    __swift_storeEnumTagSinglePayload((uint64_t)v372, 0, 1, v1773);
                  }
                  v640 = ((unint64_t)v372 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v1802 = v373;
                  v641 = ((unint64_t)v373 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v642 = *(_QWORD *)(v641 + 24);
                  *(_QWORD *)(v640 + 24) = v642;
                  *(_QWORD *)(v640 + 32) = *(_QWORD *)(v641 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v642 - 8))(v640, v641);
                  v643 = (void *)((v1870 + 40 + v640) & v1809);
                  v644 = (const void *)((v1870 + 40 + v641) & v1809);
                  v1663 = v89;
                  if (v1716 == v1707)
                  {
                    v645 = v1819;
                    if (v1819 < 2)
                      goto LABEL_1296;
                    v646 = (uint64_t)v644;
                    v647 = v1773;
                  }
                  else
                  {
                    v648 = ((unint64_t)v644 + v1839) & 0xFFFFFFFFFFFFFFF8;
                    if (v1707 == 0x7FFFFFFF)
                    {
                      if (*(_QWORD *)(v648 + 24) >= 0xFFFFFFFFuLL)
                        goto LABEL_1296;
                      goto LABEL_1298;
                    }
                    v901 = (v1856
                          + ((((((((v648 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                            + 47) & 0xFFFFFFFFFFFFFFF8)) & v1789;
                    if (v1683 == v1707)
                    {
                      if (v1723 > 0x7FFFFFFE)
                      {
                        v1023 = __swift_getEnumTagSinglePayload((v1726 + v901) & v1779, v1718, v1730);
                        if (v1023 < 2)
                          goto LABEL_1296;
                        v904 = v1023 - 1;
                      }
                      else
                      {
                        v902 = *(_QWORD *)(v901 + 16);
                        if (v902 >= 0xFFFFFFFF)
                          LODWORD(v902) = -1;
                        v903 = v902 - 1;
                        if (v903 < 0)
                          v903 = -1;
                        v904 = v903 + 1;
                      }
                      if (v904 < 2)
                      {
LABEL_1296:
                        if (__swift_getEnumTagSinglePayload((uint64_t)v644, 1, v1773))
                        {
                          memcpy(v643, v644, v1842);
                        }
                        else
                        {
                          (*(void (**)(void *, const void *, uint64_t))(v1765 + 16))(v643, v644, v1773);
                          __swift_storeEnumTagSinglePayload((uint64_t)v643, 0, 1, v1773);
                        }
                        v1024 = ((unint64_t)v643 + v1839) & 0xFFFFFFFFFFFFFFF8;
                        v1025 = ((unint64_t)v644 + v1839) & 0xFFFFFFFFFFFFFFF8;
                        v1026 = *(_QWORD *)(v1025 + 24);
                        *(_QWORD *)(v1024 + 24) = v1026;
                        *(_QWORD *)(v1024 + 32) = *(_QWORD *)(v1025 + 32);
                        (**(void (***)(unint64_t, unint64_t))(v1026 - 8))(v1024, v1025);
                        v1027 = (_QWORD *)((v1024 + 47) & 0xFFFFFFFFFFFFFFF8);
                        v1028 = (_QWORD *)((v1025 + 47) & 0xFFFFFFFFFFFFFFF8);
                        *v1027 = *v1028;
                        v1027[1] = v1028[1];
                        v1029 = (_QWORD *)(((unint64_t)v1027 + 23) & 0xFFFFFFFFFFFFFFF8);
                        v1030 = (_QWORD *)(((unint64_t)v1028 + 23) & 0xFFFFFFFFFFFFFFF8);
                        *v1029 = *v1030;
                        v1029[1] = v1030[1];
                        v1031 = ((unint64_t)v1029 + 23) & 0xFFFFFFFFFFFFFFF8;
                        v1032 = ((unint64_t)v1030 + 23) & 0xFFFFFFFFFFFFFFF8;
                        v1033 = *(_QWORD *)(v1032 + 24);
                        sub_21D7C4C20();
                        sub_21D7C4C20();
                        if (v1033 < 0xFFFFFFFF)
                        {
                          v1034 = *(_OWORD *)v1032;
                          v1035 = *(_OWORD *)(v1032 + 16);
                          *(_QWORD *)(v1031 + 32) = *(_QWORD *)(v1032 + 32);
                          *(_OWORD *)v1031 = v1034;
                          *(_OWORD *)(v1031 + 16) = v1035;
                        }
                        else
                        {
                          *(_QWORD *)(v1031 + 24) = v1033;
                          *(_QWORD *)(v1031 + 32) = *(_QWORD *)(v1032 + 32);
                          (**(void (***)(unint64_t, unint64_t, unint64_t))(v1033 - 8))(v1031, v1032, v1033);
                        }
                        v1036 = (v1031 + 47) & 0xFFFFFFFFFFFFFFF8;
                        v1037 = (v1032 + 47) & 0xFFFFFFFFFFFFFFF8;
                        v1038 = *(_QWORD *)(v1037 + 24);
                        if (v1038 < 0xFFFFFFFF)
                        {
                          v1039 = *(_OWORD *)v1037;
                          v1040 = *(_OWORD *)(v1037 + 16);
                          *(_QWORD *)(v1036 + 32) = *(_QWORD *)(v1037 + 32);
                          *(_OWORD *)v1036 = v1039;
                          *(_OWORD *)(v1036 + 16) = v1040;
                        }
                        else
                        {
                          *(_QWORD *)(v1036 + 24) = v1038;
                          *(_QWORD *)(v1036 + 32) = *(_QWORD *)(v1037 + 32);
                          (**(void (***)(unint64_t, unint64_t))(v1038 - 8))(v1036, (v1032 + 47) & 0xFFFFFFFFFFFFFFF8);
                        }
                        v1041 = (_QWORD *)((v1856 + v1036) & v1789);
                        v1042 = (_QWORD *)((v1856 + v1037) & v1789);
                        if (v1723 >= 0x7FFFFFFF)
                        {
                          v1047 = (const void *)(((unint64_t)v1042 + v1726) & v1779);
                          if (__swift_getEnumTagSinglePayload((uint64_t)v1047, v1718, v1730) <= 1)
                          {
                            v1864 = v644;
                            v1872 = v643;
                            v1044 = (char *)(v1042 + 1);
                            v1045 = v1726;
                            v1046 = ~v1847;
                            goto LABEL_1313;
                          }
                        }
                        else
                        {
                          v1043 = *(_QWORD *)(((v1856 + v1037) & v1789) + 0x10);
                          if (v1043 >= 0xFFFFFFFF)
                            LODWORD(v1043) = -1;
                          if ((int)v1043 - 1 < 0)
                          {
                            v1864 = v644;
                            v1872 = v643;
                            v1044 = (char *)(v1042 + 1);
                            v1045 = v1726;
                            v1046 = ~v1847;
                            v1047 = (const void *)(((unint64_t)v1042 + v1726) & v1779);
LABEL_1313:
                            *(_BYTE *)v1041 = *(_BYTE *)v1042;
                            v1041[1] = v1042[1];
                            v1041[2] = *((_QWORD *)v1044 + 1);
                            v1041[3] = *((_QWORD *)v1044 + 2);
                            v1041[4] = *((_QWORD *)v1044 + 3);
                            v1041[5] = *((_QWORD *)v1044 + 4);
                            v1041[6] = *((_QWORD *)v1044 + 5);
                            v1041[7] = *((_QWORD *)v1044 + 6);
                            v1041[8] = *((_QWORD *)v1044 + 7);
                            v1041[9] = *((_QWORD *)v1044 + 8);
                            v1041[10] = *((_QWORD *)v1044 + 9);
                            v1041[11] = *((_QWORD *)v1044 + 10);
                            v1041[12] = *((_QWORD *)v1044 + 11);
                            v1048 = *((_QWORD *)v1044 + 12);
                            *((_BYTE *)v1041 + 112) = v1044[104];
                            v1041[13] = v1048;
                            v1049 = (void *)(((unint64_t)v1041 + v1045) & v1046);
                            sub_21D7C4C20();
                            sub_21D7C4C20();
                            sub_21D7C4C20();
                            sub_21D7C4C20();
                            sub_21D7C4C20();
                            sub_21D7C4C20();
                            if (__swift_getEnumTagSinglePayload((uint64_t)v1047, 1, v1730))
                            {
                              memcpy(v1049, v1047, v1817);
                            }
                            else
                            {
                              (*(void (**)(void *, const void *, uint64_t))(v1712 + 16))(v1049, v1047, v1730);
                              __swift_storeEnumTagSinglePayload((uint64_t)v1049, 0, 1, v1730);
                            }
                            v1050 = v1820;
                            v375 = v1681;
                            v643 = v1872;
                            v644 = v1864;
LABEL_1318:
                            v1051 = (void *)(((unint64_t)v1041 + v1876 + v1050) & v375);
                            v1052 = (_BYTE *)(((unint64_t)v1042 + v1876 + v1050) & v375);
                            v1053 = v1728;
                            if (v1833)
                            {
                              if (v1722 >= v1728)
                              {
                                v1054 = (uint64_t)v1052;
                                v1053 = v1722;
                                v1055 = v1724;
                              }
                              else
                              {
                                v1054 = (unint64_t)&v1052[v1725] & v1784;
                                v1055 = v1729;
                              }
                              v1058 = __swift_getEnumTagSinglePayload(v1054, v1053, v1055);
                              v372 = v1868;
                            }
                            else
                            {
                              v372 = v1868;
                              if (!v1052[v1826])
                                goto LABEL_2169;
                              v1056 = (v1052[v1826] - 1) << v1777;
                              if (v1826 > 3)
                                v1056 = 0;
                              if ((_DWORD)v1826)
                              {
                                if (v1826 <= 3)
                                  v1057 = v1826;
                                else
                                  v1057 = 4;
                                __asm { BR              X11 }
                              }
                              v1058 = v1056 + 1;
                            }
                            if (v1058)
                            {
                              memcpy(v1051, v1052, v1822);
                              goto LABEL_2171;
                            }
LABEL_2169:
                            (*(void (**)(void *, _BYTE *, uint64_t))(v1720 + 16))(v1051, v1052, v1724);
                            (*(void (**)(unint64_t, unint64_t, uint64_t))(v1721 + 16))(((unint64_t)v1051 + v1725) & v1784, (unint64_t)&v1052[v1725] & v1784, v1729);
                            if (!v1833)
                              *((_BYTE *)v1051 + v1826) = 0;
LABEL_2171:
                            v1514 = (_QWORD *)(((unint64_t)v643 + v1699) & 0xFFFFFFFFFFFFFFF8);
                            v1515 = (_QWORD *)(((unint64_t)v644 + v1699) & 0xFFFFFFFFFFFFFFF8);
                            *v1514 = *v1515;
                            v1516 = (_QWORD *)(((unint64_t)v1514 + v1700) & v1789);
                            v1517 = (_QWORD *)(((unint64_t)v1515 + v1700) & v1789);
                            sub_21D7C4C20();
                            if (v1723 >= 0x7FFFFFFF)
                            {
                              v1523 = (const void *)(((unint64_t)v1517 + v1726) & v1779);
                              v89 = v1663;
                              if (__swift_getEnumTagSinglePayload((uint64_t)v1523, v1718, v1730) <= 1)
                              {
                                v1519 = v1663;
                                v1520 = (char *)(v1517 + 1);
                                v1521 = v1726;
                                v1522 = ~v1847;
                                goto LABEL_2178;
                              }
                            }
                            else
                            {
                              v1518 = v1517[2];
                              if (v1518 >= 0xFFFFFFFF)
                                LODWORD(v1518) = -1;
                              v89 = v1663;
                              if ((int)v1518 - 1 < 0)
                              {
                                v1519 = v1663;
                                v1520 = (char *)(v1517 + 1);
                                v1521 = v1726;
                                v1522 = ~v1847;
                                v1523 = (const void *)(((unint64_t)v1517 + v1726) & v1779);
LABEL_2178:
                                *(_BYTE *)v1516 = *(_BYTE *)v1517;
                                v1516[1] = v1517[1];
                                v1516[2] = *((_QWORD *)v1520 + 1);
                                v1516[3] = *((_QWORD *)v1520 + 2);
                                v1516[4] = *((_QWORD *)v1520 + 3);
                                v1516[5] = *((_QWORD *)v1520 + 4);
                                v1516[6] = *((_QWORD *)v1520 + 5);
                                v1516[7] = *((_QWORD *)v1520 + 6);
                                v1516[8] = *((_QWORD *)v1520 + 7);
                                v1516[9] = *((_QWORD *)v1520 + 8);
                                v1516[10] = *((_QWORD *)v1520 + 9);
                                v1516[11] = *((_QWORD *)v1520 + 10);
                                v1516[12] = *((_QWORD *)v1520 + 11);
                                v1524 = *((_QWORD *)v1520 + 12);
                                *((_BYTE *)v1516 + 112) = v1520[104];
                                v1516[13] = v1524;
                                v1525 = (void *)(((unint64_t)v1516 + v1521) & v1522);
                                sub_21D7C4C20();
                                sub_21D7C4C20();
                                sub_21D7C4C20();
                                sub_21D7C4C20();
                                sub_21D7C4C20();
                                sub_21D7C4C20();
                                if (__swift_getEnumTagSinglePayload((uint64_t)v1523, 1, v1730))
                                {
                                  memcpy(v1525, v1523, v1817);
                                }
                                else
                                {
                                  (*(void (**)(void *, const void *, uint64_t))(v1712 + 16))(v1525, v1523, v1730);
                                  __swift_storeEnumTagSinglePayload((uint64_t)v1525, 0, 1, v1730);
                                }
                                v89 = v1519;
                                v372 = v1868;
                                goto LABEL_2183;
                              }
                            }
                            memcpy(v1516, v1517, v1820);
LABEL_2183:
                            v373 = v1802;
                            v948 = 20;
                            goto LABEL_2184;
                          }
                        }
                        v1050 = v1820;
                        memcpy(v1041, v1042, v1820);
                        goto LABEL_1318;
                      }
LABEL_1298:
                      memcpy(v643, v644, v1682);
                      v372 = v1868;
                      goto LABEL_2171;
                    }
                    if (v1833 < 2)
                      goto LABEL_1296;
                    v646 = (v1706 + v901) & v1681;
                    v645 = v1728;
                    if (v1722 >= v1728)
                    {
                      v645 = v1722;
                      v647 = v1724;
                    }
                    else
                    {
                      v646 = (v1725 + v646) & v1784;
                      v647 = v1729;
                    }
                  }
                  if (__swift_getEnumTagSinglePayload(v646, v645, v647) < 2)
                    goto LABEL_1296;
                  goto LABEL_1298;
                case 0x15:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v373, 1, v1773))
                  {
                    memcpy(v372, v373, v1842);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1765 + 16))(v372, v373, v1773);
                    __swift_storeEnumTagSinglePayload((uint64_t)v372, 0, 1, v1773);
                  }
                  v649 = ((unint64_t)v372 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v650 = ((unint64_t)v373 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v651 = *(_QWORD *)(v650 + 24);
                  *(_QWORD *)(v649 + 24) = v651;
                  *(_QWORD *)(v649 + 32) = *(_QWORD *)(v650 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v651 - 8))(v649, v650);
                  v652 = v649 + 47;
                  v372 = v1868;
                  v652 &= 0xFFFFFFFFFFFFFFF8;
                  v653 = (v650 + 47) & 0xFFFFFFFFFFFFFFF8;
                  *(_QWORD *)v652 = *(_QWORD *)v653;
                  *(_QWORD *)(v652 + 8) = *(_QWORD *)(v653 + 8);
                  *(_BYTE *)(v652 + 16) = *(_BYTE *)(v653 + 16);
                  v654 = 21;
                  goto LABEL_929;
                case 0x16:
                  v404 = v1760 + 1;
                  v1673 = v87;
                  if (__swift_getEnumTagSinglePayload((uint64_t)v373, 1, v1773))
                  {
                    memcpy(v372, v373, v1842);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1765 + 16))(v372, v373, v1773);
                    __swift_storeEnumTagSinglePayload((uint64_t)v372, 0, 1, v1773);
                  }
                  v1664 = v89;
                  v655 = ((unint64_t)v372 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v1803 = v373;
                  v656 = ((unint64_t)v373 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v657 = *(_QWORD *)(v656 + 24);
                  *(_QWORD *)(v655 + 24) = v657;
                  *(_QWORD *)(v655 + 32) = *(_QWORD *)(v656 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v657 - 8))(v655, v656);
                  v658 = (_QWORD *)((v655 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v659 = (_QWORD *)((v656 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v658 = *v659;
                  v658[1] = v659[1];
                  v660 = (_QWORD *)(((unint64_t)v658 + 23) & 0xFFFFFFFFFFFFF8);
                  v661 = (_QWORD *)(((unint64_t)v659 + 23) & 0xFFFFFFFFFFFFF8);
                  *v660 = *v661;
                  v662 = (_QWORD *)(((unint64_t)v660 + 15) & 0xFFFFFFFFFFFFFFF8);
                  v663 = (_QWORD *)(((unint64_t)v661 + 15) & 0xFFFFFFFFFFFFFFF8);
                  *v662 = *v663;
                  v662[1] = v663[1];
                  v664 = (_QWORD *)(((unint64_t)v662 + v1762) & v1862);
                  v665 = (_QWORD *)(((unint64_t)v663 + v1762) & v1862);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (v1710 > 0x7FFFFFFE)
                  {
                    v667 = (_QWORD *)(((unint64_t)v665 + 23) & 0xFFFFFFFFFFFFFFF8);
                    v668 = ((unint64_t)v667 + 23) & 0xFFFFFFFFFFFFFFF8;
                    if (!__swift_getEnumTagSinglePayload((v1818 + v668 + 33) & v1775, v1710, v1709))
                      goto LABEL_882;
                  }
                  else
                  {
                    v666 = v665[1];
                    if (v666 >= 0xFFFFFFFF)
                      LODWORD(v666) = -1;
                    if ((v666 + 1) <= 1)
                    {
                      v667 = (_QWORD *)(((unint64_t)v665 + 23) & 0xFFFFFFFFFFFFFFF8);
                      v668 = ((unint64_t)v667 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_882:
                      *v664 = *v665;
                      v664[1] = v665[1];
                      v670 = (_QWORD *)(((unint64_t)v664 + 23) & 0xFFFFFFFFFFFFFFF8);
                      *v670 = *v667;
                      v670[1] = v667[1];
                      v671 = ((unint64_t)v670 + 23) & 0xFFFFFFFFFFFFFFF8;
                      *(_QWORD *)v671 = *(_QWORD *)v668;
                      *(_QWORD *)(v671 + 8) = *(_QWORD *)(v668 + 8);
                      *(_BYTE *)(v671 + 16) = *(_BYTE *)(v668 + 16);
                      v672 = ((unint64_t)v670 + 47) & 0xFFFFFFFFFFFFFFF8;
                      v673 = ((unint64_t)v667 + 47) & 0xFFFFFFFFFFFFFFF8;
                      v674 = *(void **)v673;
                      *(_QWORD *)v672 = *(_QWORD *)v673;
                      *(_BYTE *)(v672 + 8) = *(_BYTE *)(v673 + 8);
                      v675 = (v1818 + 9 + v672) & v1775;
                      v676 = (v1818 + 9 + v673) & v1775;
                      v677 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1813 + 16);
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      v678 = v674;
                      v677(v675, v676, v1709);
                      v669 = v1860;
LABEL_883:
                      *((_BYTE *)v664 + v669) = *((_BYTE *)v665 + v669);
                      v679 = ((unint64_t)v664 + v669) & 0xFFFFFFFFFFFFFFF8;
                      v680 = ((unint64_t)v665 + v669) & 0xFFFFFFFFFFFFFFF8;
                      *(_QWORD *)(v679 + 8) = *(_QWORD *)(v680 + 8);
                      *(_QWORD *)(v679 + 16) = *(_QWORD *)(v680 + 16);
                      v681 = (void *)((v1690 + v679) & v1681);
                      v682 = (_BYTE *)((v1690 + v680) & v1681);
                      sub_21D7C4C20();
                      v683 = v1726;
                      v684 = v1704;
                      if (v1833)
                      {
                        v685 = v1728;
                        v686 = v1784;
                        if (v1722 >= v1728)
                        {
                          v687 = (uint64_t)v682;
                          v685 = v1722;
                          v688 = v1724;
                        }
                        else
                        {
                          v687 = (unint64_t)&v682[v1725] & v1784;
                          v688 = v1729;
                        }
                        v891 = __swift_getEnumTagSinglePayload(v687, v685, v688);
                      }
                      else
                      {
                        v686 = v1784;
                        if (!v682[v1826])
                          goto LABEL_1795;
                        v844 = (v682[v1826] - 1) << v1777;
                        if (v1826 > 3)
                          v844 = 0;
                        if ((_DWORD)v1826)
                        {
                          if (v1826 <= 3)
                            v845 = v1826;
                          else
                            v845 = 4;
                          __asm { BR              X11 }
                        }
                        v891 = v844 + 1;
                      }
                      if (v891)
                      {
                        memcpy(v681, v682, v1822);
                        goto LABEL_1797;
                      }
LABEL_1795:
                      (*(void (**)(void *, _BYTE *, uint64_t))(v1720 + 16))(v681, v682, v1724);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1721 + 16))(((unint64_t)v681 + v1725) & v686, (unint64_t)&v682[v1725] & v686, v1729);
                      if (!v1833)
                        *((_BYTE *)v681 + v1826) = 0;
LABEL_1797:
                      v1276 = (_QWORD *)(((unint64_t)v681 + v1785) & v1845);
                      v1277 = (uint64_t *)((unint64_t)&v682[v1785] & v1845);
                      v1278 = v1819;
                      if ((v1728 & 0x80000000) != 0)
                      {
                        v1280 = __swift_getEnumTagSinglePayload(((unint64_t)v1277 + v1711) & v686, v1728, v1729);
                      }
                      else
                      {
                        v1279 = *v1277;
                        if ((unint64_t)*v1277 >= 0xFFFFFFFF)
                          LODWORD(v1279) = -1;
                        v1280 = v1279 + 1;
                      }
                      if (v1280)
                      {
                        memcpy(v1276, v1277, v1815);
                      }
                      else
                      {
                        *v1276 = *v1277;
                        v1281 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1721 + 16);
                        sub_21D7C4C20();
                        v1281(((unint64_t)v1276 + v1711) & v686, ((unint64_t)v1277 + v1711) & v686, v1729);
                        v683 = v1726;
                      }
                      v1282 = v1773;
                      v1283 = (_QWORD *)(((unint64_t)v1276 + v1763) & v1789);
                      v1284 = (_QWORD *)(((unint64_t)v1277 + v1763) & v1789);
                      if (v1723 >= 0x7FFFFFFF)
                      {
                        v1288 = (const void *)(((unint64_t)v1284 + v683) & v1779);
                        if (__swift_getEnumTagSinglePayload((uint64_t)v1288, v1718, v1730) <= 1)
                        {
                          v1286 = (char *)(v1284 + 1);
                          v1287 = ~v1847;
                          goto LABEL_1812;
                        }
                      }
                      else
                      {
                        v1285 = v1284[2];
                        if (v1285 >= 0xFFFFFFFF)
                          LODWORD(v1285) = -1;
                        if ((int)v1285 - 1 < 0)
                        {
                          v1286 = (char *)(v1284 + 1);
                          v1287 = ~v1847;
                          v1288 = (const void *)(((unint64_t)v1284 + v683) & v1779);
LABEL_1812:
                          *(_BYTE *)v1283 = *(_BYTE *)v1284;
                          v1283[1] = v1284[1];
                          v1283[2] = *((_QWORD *)v1286 + 1);
                          v1283[3] = *((_QWORD *)v1286 + 2);
                          v1283[4] = *((_QWORD *)v1286 + 3);
                          v1283[5] = *((_QWORD *)v1286 + 4);
                          v1283[6] = *((_QWORD *)v1286 + 5);
                          v1283[7] = *((_QWORD *)v1286 + 6);
                          v1283[8] = *((_QWORD *)v1286 + 7);
                          v1283[9] = *((_QWORD *)v1286 + 8);
                          v1283[10] = *((_QWORD *)v1286 + 9);
                          v1283[11] = *((_QWORD *)v1286 + 10);
                          v1283[12] = *((_QWORD *)v1286 + 11);
                          v1289 = *((_QWORD *)v1286 + 12);
                          *((_BYTE *)v1283 + 112) = v1286[104];
                          v1283[13] = v1289;
                          v1290 = (void *)(((unint64_t)v1283 + v683) & v1287);
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          if (__swift_getEnumTagSinglePayload((uint64_t)v1288, 1, v1730))
                          {
                            memcpy(v1290, v1288, v1817);
                          }
                          else
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v1712 + 16))(v1290, v1288, v1730);
                            __swift_storeEnumTagSinglePayload((uint64_t)v1290, 0, 1, v1730);
                          }
                          v1291 = v1820;
                          v1282 = v1773;
                          v1278 = v1819;
                          v684 = v1704;
LABEL_1817:
                          v1292 = (unint64_t)v1283 + v1849 + v1291;
                          v1293 = (void *)(v1292 & v1811);
                          v1294 = (unint64_t)v1284 + v1849 + v1291;
                          v1295 = (const void *)(v1294 & v1811);
                          if (v1716 < 0x7FFFFFFF)
                          {
                            v372 = v1868;
                            if (*(_QWORD *)((((unint64_t)v1295 + v1839) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                              goto LABEL_1819;
                          }
                          else
                          {
                            v372 = v1868;
                            if (__swift_getEnumTagSinglePayload(v1294 & v1811, v1278, v1282) >= 2)
                            {
LABEL_1819:
                              memcpy(v1293, v1295, v684);
                              v1296 = v684;
                              goto LABEL_1829;
                            }
                          }
                          if (__swift_getEnumTagSinglePayload((uint64_t)v1295, 1, v1282))
                          {
                            memcpy(v1293, v1295, v1842);
                          }
                          else
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v1765 + 16))(v1293, v1295, v1282);
                            __swift_storeEnumTagSinglePayload((uint64_t)v1293, 0, 1, v1282);
                          }
                          v1297 = ((unint64_t)v1293 + v1839) & 0xFFFFFFFFFFFFFFF8;
                          v1298 = ((unint64_t)v1295 + v1839) & 0xFFFFFFFFFFFFFFF8;
                          v1299 = *(_QWORD *)(v1298 + 24);
                          *(_QWORD *)(v1297 + 24) = v1299;
                          *(_QWORD *)(v1297 + 32) = *(_QWORD *)(v1298 + 32);
                          (**(void (***)(unint64_t, unint64_t))(v1299 - 8))(v1297, v1298);
                          v1300 = (v1297 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1301 = (v1298 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1302 = *(_QWORD *)(v1301 + 24);
                          if (v1302 < 0xFFFFFFFF)
                          {
                            v1303 = *(_OWORD *)v1301;
                            v1304 = *(_OWORD *)(v1301 + 16);
                            *(_QWORD *)(v1300 + 32) = *(_QWORD *)(v1301 + 32);
                            *(_OWORD *)v1300 = v1303;
                            *(_OWORD *)(v1300 + 16) = v1304;
                          }
                          else
                          {
                            *(_QWORD *)(v1300 + 24) = v1302;
                            *(_QWORD *)(v1300 + 32) = *(_QWORD *)(v1301 + 32);
                            (**(void (***)(unint64_t, unint64_t))(v1302 - 8))((v1297 + 47) & 0xFFFFFFFFFFFFFFF8, v1301);
                          }
                          v372 = v1868;
                          v1305 = (_QWORD *)((v1300 + 47) & 0xFFFFFFFFFFFFFFF8);
                          v1306 = (_QWORD *)((v1301 + 47) & 0xFFFFFFFFFFFFFFF8);
                          *v1305 = *v1306;
                          v1305[1] = v1306[1];
                          sub_21D7C4C20();
                          v1296 = v684;
                          if ((_DWORD)v1278)
                            v1296 = ((((((v1760 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                                  + 16;
LABEL_1829:
                          v1307 = (v1292 | v1854) + v1296;
                          v1308 = (void *)(v1307 & v1811);
                          v1309 = (v1294 | v1854) + v1296;
                          v1310 = (const void *)(v1309 & v1811);
                          if (v1716 < 0x7FFFFFFF)
                          {
                            if (*(_QWORD *)((((unint64_t)v1310 + v1839) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                              goto LABEL_1831;
                          }
                          else if (__swift_getEnumTagSinglePayload(v1309 & v1811, v1278, v1282) >= 2)
                          {
LABEL_1831:
                            memcpy(v1308, v1310, v684);
                            v1311 = v684;
                            goto LABEL_1841;
                          }
                          if (__swift_getEnumTagSinglePayload((uint64_t)v1310, 1, v1282))
                          {
                            memcpy(v1308, v1310, v1842);
                          }
                          else
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v1765 + 16))(v1308, v1310, v1282);
                            __swift_storeEnumTagSinglePayload((uint64_t)v1308, 0, 1, v1282);
                          }
                          v1312 = ((unint64_t)v1308 + v1839) & 0xFFFFFFFFFFFFFFF8;
                          v1313 = ((unint64_t)v1310 + v1839) & 0xFFFFFFFFFFFFFFF8;
                          v1314 = *(_QWORD *)(v1313 + 24);
                          *(_QWORD *)(v1312 + 24) = v1314;
                          *(_QWORD *)(v1312 + 32) = *(_QWORD *)(v1313 + 32);
                          (**(void (***)(unint64_t, unint64_t))(v1314 - 8))(v1312, v1313);
                          v1315 = (v1312 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1316 = (v1313 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1317 = *(_QWORD *)(v1316 + 24);
                          if (v1317 < 0xFFFFFFFF)
                          {
                            v1318 = *(_OWORD *)v1316;
                            v1319 = *(_OWORD *)(v1316 + 16);
                            *(_QWORD *)(v1315 + 32) = *(_QWORD *)(v1316 + 32);
                            *(_OWORD *)v1315 = v1318;
                            *(_OWORD *)(v1315 + 16) = v1319;
                          }
                          else
                          {
                            *(_QWORD *)(v1315 + 24) = v1317;
                            *(_QWORD *)(v1315 + 32) = *(_QWORD *)(v1316 + 32);
                            (**(void (***)(unint64_t, unint64_t))(v1317 - 8))((v1312 + 47) & 0xFFFFFFFFFFFFFFF8, v1316);
                          }
                          v372 = v1868;
                          v1320 = (_QWORD *)((v1315 + 47) & 0xFFFFFFFFFFFFFFF8);
                          v1321 = (_QWORD *)((v1316 + 47) & 0xFFFFFFFFFFFFFFF8);
                          *v1320 = *v1321;
                          v1320[1] = v1321[1];
                          sub_21D7C4C20();
                          v1311 = v684;
                          if ((_DWORD)v1278)
                            v1311 = ((((((v1760 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                                  + 16;
LABEL_1841:
                          v1322 = (char *)(((v1307 | v1854) + v1311) & v1811);
                          v1323 = (char *)(((v1309 | v1854) + v1311) & v1811);
                          if (v1716 < 0x7FFFFFFF)
                          {
                            v89 = v1664;
                            v373 = v1803;
                            if (*(_QWORD *)(((unint64_t)&v1323[v1839] & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                            {
LABEL_1843:
                              memcpy(v1322, v1323, v684);
                              if (!(_DWORD)v1278)
                                goto LABEL_1855;
                              goto LABEL_1854;
                            }
                          }
                          else
                          {
                            v89 = v1664;
                            v373 = v1803;
                            if (__swift_getEnumTagSinglePayload((uint64_t)v1323, v1278, v1282) >= 2)
                              goto LABEL_1843;
                          }
                          if (__swift_getEnumTagSinglePayload((uint64_t)v1323, 1, v1282))
                          {
                            memcpy(v1322, v1323, v1842);
                          }
                          else
                          {
                            (*(void (**)(char *, char *, uint64_t))(v1765 + 16))(v1322, v1323, v1282);
                            __swift_storeEnumTagSinglePayload((uint64_t)v1322, 0, 1, v1282);
                          }
                          v1324 = (unint64_t)&v1322[v1839] & 0xFFFFFFFFFFFFFFF8;
                          v1325 = (unint64_t)&v1323[v1839] & 0xFFFFFFFFFFFFFFF8;
                          v1326 = *(_QWORD *)(v1325 + 24);
                          *(_QWORD *)(v1324 + 24) = v1326;
                          *(_QWORD *)(v1324 + 32) = *(_QWORD *)(v1325 + 32);
                          (**(void (***)(unint64_t, unint64_t))(v1326 - 8))(v1324, v1325);
                          v1327 = (v1324 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1328 = (v1325 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1329 = *(_QWORD *)(v1328 + 24);
                          if (v1329 < 0xFFFFFFFF)
                          {
                            v1330 = *(_OWORD *)v1328;
                            v1331 = *(_OWORD *)(v1328 + 16);
                            *(_QWORD *)(v1327 + 32) = *(_QWORD *)(v1328 + 32);
                            *(_OWORD *)v1327 = v1330;
                            *(_OWORD *)(v1327 + 16) = v1331;
                          }
                          else
                          {
                            *(_QWORD *)(v1327 + 24) = v1329;
                            *(_QWORD *)(v1327 + 32) = *(_QWORD *)(v1328 + 32);
                            (**(void (***)(unint64_t, unint64_t))(v1329 - 8))((v1324 + 47) & 0xFFFFFFFFFFFFFFF8, v1328);
                          }
                          v372 = v1868;
                          v1332 = (_QWORD *)((v1327 + 47) & 0xFFFFFFFFFFFFFFF8);
                          v1333 = (_QWORD *)((v1328 + 47) & 0xFFFFFFFFFFFFFFF8);
                          *v1332 = *v1333;
                          v1332[1] = v1333[1];
                          sub_21D7C4C20();
                          v89 = v1664;
                          v373 = v1803;
                          if (!(_DWORD)v1278)
                            goto LABEL_1855;
                          v684 = ((((((v1760 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                               + 16;
LABEL_1854:
                          v404 = v1760;
LABEL_1855:
                          *(_QWORD *)&v1322[v684] = *(_QWORD *)&v1323[v684];
                          v1334 = v1756
                                + ((v1761
                                  + ((v1761
                                    + ((v1835
                                      + ((v1763
                                        + ((v1785
                                          + ((v1837
                                            + ((((((v1762
                                                  + ((((((((v404 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                                                      + 23) & 0xFFFFFFFFFFFFFFF8)
                                                    + 15) & 0xFFFFFFFFFFFFFFF8)) & v1862)
                                                + v1860) & 0xFFFFFFFFFFFFFFF8)
                                              + 23) & 0xFFFFFFFFFFFFFFF8)) & v1681)) & v1845)) & v1789)) & v1811)) & v1811)) & v1811);
                          if (v1758 > v1334)
                            v1334 = v1820 + ((v1847 + 8) & ~v1851);
                          if (v1334 <= v1755)
                            v1334 = v1755;
                          if (v1334 <= v1759)
                            v1334 = v1759;
                          if (v1334 <= v1751)
                            v1334 = v1751;
                          if (v1334 <= v1749)
                            v1334 = v1749;
                          if (v1334 <= v1746)
                            v1334 = v1746;
                          if (v1334 <= v1747)
                            v1334 = (((((v1858 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                  + 16;
                          if (v1334 <= v1748)
                            v1334 = v1748;
                          if (v1334 <= v1737)
                            v1334 = v1737;
                          if (v1334 <= v1828)
                            v1334 = v1828;
                          if (v1334 <= v1734)
                            v1334 = v1734;
                          if (v1334 <= v1736)
                            v1334 = v1736;
                          if (v1334 <= v1733)
                            v1334 = v1733;
                          if (v1334 <= v1831)
                            v1334 = v1831;
                          if (v1334 <= v1735)
                            v1334 = v1735;
                          if (v1334 <= v1758)
                            v1334 = v1820 + ((v1847 + 8) & ~v1851);
                          if (v1334 <= v1732)
                            v1334 = v1732;
                          if (v1334 <= v1738)
                            v1334 = ((v1858 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
                          if (v1334 <= v1740)
                            v1334 = v1740;
                          if (v1334 <= v1742)
                            v1334 = v1742;
                          if (v1334 <= v1741)
                            v1334 = v1741;
                          if (v1334 <= v1744)
                            v1334 = v1744;
                          if (v1334 <= v1739)
                            v1334 = v1739;
                          if (v1334 <= v1743)
                            v1334 = v1743;
                          if (v1334 <= v1745)
                            v1334 = v1745;
                          if (v1334 <= v1782)
                            v1334 = v1782;
                          if (v1334 <= v1752)
                            v1334 = v1752;
                          if (v1334 <= v1754)
                            v1334 = v1754;
                          if (v1334 <= v1757)
                            v1334 = v1757;
                          if (v1334 <= v1858)
                            v1334 = v1858;
                          if (v1334 <= v1677)
                            v1334 = v1677;
                          if (v1334 <= v1753)
                            v1334 = v1753;
                          if (v1334 <= v1750)
                            v1334 = v1750;
                          if (v1334 <= 8)
                            v1334 = 8;
                          *((_BYTE *)v372 + v1334) = 22;
                          goto LABEL_2186;
                        }
                      }
                      v1291 = v1820;
                      memcpy(v1283, v1284, v1820);
                      goto LABEL_1817;
                    }
                  }
                  v669 = v1860;
                  memcpy(v664, v665, v1860);
                  goto LABEL_883;
                case 0x17:
                  v1674 = v87;
                  *v372 = *v373;
                  v405 = ((unint64_t)v372 + v1851 + 8) & v1789;
                  v378 = v373;
                  v406 = ((unint64_t)v373 + v1851 + 8) & v1789;
                  *(_BYTE *)v405 = *(_BYTE *)v406;
                  *(_QWORD *)(v405 + 8) = *(_QWORD *)(v406 + 8);
                  *(_QWORD *)(v405 + 16) = *(_QWORD *)(v406 + 0x10);
                  *(_QWORD *)(v405 + 24) = *(_QWORD *)(v406 + 0x18);
                  *(_QWORD *)(v405 + 32) = *(_QWORD *)(v406 + 0x20);
                  *(_QWORD *)(v405 + 40) = *(_QWORD *)(v406 + 0x28);
                  *(_QWORD *)(v405 + 48) = *(_QWORD *)(v406 + 0x30);
                  *(_QWORD *)(v405 + 56) = *(_QWORD *)(v406 + 0x38);
                  *(_QWORD *)(v405 + 64) = *(_QWORD *)(v406 + 0x40);
                  *(_QWORD *)(v405 + 72) = *(_QWORD *)(v406 + 0x48);
                  *(_QWORD *)(v405 + 80) = *(_QWORD *)(v406 + 0x50);
                  *(_QWORD *)(v405 + 88) = *(_QWORD *)(v406 + 0x58);
                  *(_QWORD *)(v405 + 96) = *(_QWORD *)(v406 + 0x60);
                  v407 = *(_QWORD *)(v406 + 0x68);
                  *(_BYTE *)(v405 + 112) = *(_BYTE *)(v406 + 0x70);
                  *(_QWORD *)(v405 + 104) = v407;
                  v408 = (void *)((v1726 + v405) & v1779);
                  v409 = (const void *)((v1726 + v406) & v1779);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (__swift_getEnumTagSinglePayload((uint64_t)v409, 1, v1730))
                  {
                    memcpy(v408, v409, v1817);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1712 + 16))(v408, v409, v1730);
                    __swift_storeEnumTagSinglePayload((uint64_t)v408, 0, 1, v1730);
                  }
                  v491 = 23;
LABEL_888:
                  *((_BYTE *)v372 + v1791) = v491;
                  v87 = v1674;
                  v373 = v378;
                  goto LABEL_2187;
                case 0x18:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v373, 1, v1773))
                  {
                    memcpy(v372, v373, v1842);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1765 + 16))(v372, v373, v1773);
                    __swift_storeEnumTagSinglePayload((uint64_t)v372, 0, 1, v1773);
                  }
                  v689 = ((unint64_t)v372 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v690 = ((unint64_t)v373 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v691 = *(_QWORD *)(v690 + 24);
                  *(_QWORD *)(v689 + 24) = v691;
                  *(_QWORD *)(v689 + 32) = *(_QWORD *)(v690 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v691 - 8))(v689, v690);
                  v692 = (_QWORD *)((v690 + 47) & 0xFFFFFFFFFFFFF8);
                  v693 = (_QWORD *)((v689 + 47) & 0xFFFFFFFFFFFFF8);
                  *v693 = *v692;
                  v694 = (_QWORD *)(((unint64_t)v693 + 15) & 0xFFFFFFFFFFFFFFF8);
                  v695 = (_QWORD *)(((unint64_t)v692 + 15) & 0xFFFFFFFFFFFFFFF8);
                  *v694 = *v695;
                  v694[1] = v695[1];
                  *((_BYTE *)v1868 + v1791) = 24;
                  sub_21D7C4C20();
                  v372 = v1868;
                  goto LABEL_760;
                case 0x19:
                  *v372 = *v373;
                  v383 = 25;
                  goto LABEL_759;
                case 0x1A:
                  *v372 = *v373;
                  v383 = 26;
                  goto LABEL_759;
                case 0x1B:
                  *v372 = *v373;
                  v383 = 27;
                  goto LABEL_759;
                case 0x1C:
                  *v372 = *v373;
                  v383 = 28;
                  goto LABEL_759;
                case 0x1D:
                  v410 = v372;
                  v411 = v87;
                  v412 = v373[3];
                  v410[3] = v412;
                  v410[4] = v373[4];
                  (**(void (***)(_QWORD *, _QWORD *))(v412 - 8))(v410, v373);
                  v413 = (char *)(((unint64_t)v410 + v1824) & v1807);
                  v414 = v373;
                  v415 = (const void *)(((unint64_t)v373 + v1824) & v1807);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v415, 1, v1773))
                  {
                    v416 = v1842;
                    memcpy(v413, v415, v1842);
                  }
                  else
                  {
                    (*(void (**)(char *, const void *, uint64_t))(v1765 + 16))(v413, v415, v1773);
                    __swift_storeEnumTagSinglePayload((uint64_t)v413, 0, 1, v1773);
                    v416 = v1842;
                  }
                  v696 = &v413[v416];
                  *v696 = *((_BYTE *)v415 + v416);
                  v696[1] = *((_BYTE *)v415 + v416 + 1);
                  v697 = (unint64_t)&v413[v416 + 9] & 0xFFFFFFFFFFFFFFF8;
                  v698 = ((unint64_t)v415 + v416 + 9) & 0xFFFFFFFFFFFFFFF8;
                  *(_QWORD *)v697 = *(_QWORD *)v698;
                  *(_QWORD *)(v697 + 8) = *(_QWORD *)(v698 + 8);
                  *(_BYTE *)(v697 + 16) = *(_BYTE *)(v698 + 16);
                  v699 = 29;
                  goto LABEL_932;
                case 0x1E:
                  v417 = v373;
                  v418 = v87;
                  v419 = v417[3];
                  v372[3] = v419;
                  v372[4] = v417[4];
                  (**(void (***)(_QWORD *, _QWORD *))(v419 - 8))(v372, v417);
                  *((_BYTE *)v372 + 40) = *((_BYTE *)v417 + 40);
                  *((_BYTE *)v372 + 41) = *((_BYTE *)v417 + 41);
                  *((_BYTE *)v372 + 42) = *((_BYTE *)v417 + 42);
                  *((_BYTE *)v372 + 43) = *((_BYTE *)v417 + 43);
                  v420 = (_QWORD *)(((unint64_t)v372 + 51) & 0xFFFFFFFFFFFFFFF8);
                  v414 = v417;
                  v421 = (_QWORD *)(((unint64_t)v417 + 51) & 0xFFFFFFFFFFFFFFF8);
                  *v420 = *v421;
                  v420[1] = v421[1];
                  v422 = (_QWORD *)(((unint64_t)v420 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v423 = (_QWORD *)(((unint64_t)v421 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v422 = *v423;
                  v422[1] = v423[1];
                  v424 = (void *)(((unint64_t)v422 + v1814) & v1807);
                  v425 = (const void *)(((unint64_t)v423 + v1814) & v1807);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (__swift_getEnumTagSinglePayload((uint64_t)v425, 1, v1773))
                  {
                    memcpy(v424, v425, v1842);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1765 + 16))(v424, v425, v1773);
                    __swift_storeEnumTagSinglePayload((uint64_t)v424, 0, 1, v1773);
                  }
                  *((_BYTE *)v372 + v1791) = 30;
                  v87 = v418;
                  goto LABEL_939;
                case 0x1F:
                  *v372 = *v373;
                  v383 = 31;
                  goto LABEL_759;
                case 0x20:
                  v426 = v87;
                  *v372 = *v373;
                  v372[1] = v373[1];
                  v427 = ((unint64_t)v372 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v388 = v373;
                  v428 = ((unint64_t)v373 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v429 = *(_QWORD *)(v428 + 24);
                  *(_QWORD *)(v427 + 24) = v429;
                  *(_QWORD *)(v427 + 32) = *(_QWORD *)(v428 + 32);
                  v430 = **(void (***)(unint64_t, unint64_t, uint64_t))(v429 - 8);
                  sub_21D7C4C20();
                  v430(v427, v428, v429);
                  v431 = (void *)((v1824 + v427) & v1807);
                  v432 = (const void *)((v1824 + v428) & v1807);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v432, 1, v1773))
                  {
                    memcpy(v431, v432, v1842);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1765 + 16))(v431, v432, v1773);
                    __swift_storeEnumTagSinglePayload((uint64_t)v431, 0, 1, v1773);
                  }
                  v700 = 32;
                  goto LABEL_916;
                case 0x21:
                  if (v1833)
                  {
                    v433 = v1728;
                    v434 = v373;
                    if (v1722 >= v1728)
                    {
                      v435 = (uint64_t)v373;
                      v433 = v1722;
                      v436 = v1724;
                    }
                    else
                    {
                      v435 = ((unint64_t)v373 + v1725) & v1784;
                      v436 = v1729;
                    }
                    v887 = __swift_getEnumTagSinglePayload(v435, v433, v436);
                  }
                  else
                  {
                    v434 = v373;
                    if (!*((_BYTE *)v373 + v1826))
                      goto LABEL_1436;
                    v701 = (*((unsigned __int8 *)v373 + v1826) - 1) << v1777;
                    if (v1826 > 3)
                      v701 = 0;
                    if ((_DWORD)v1826)
                    {
                      if (v1826 <= 3)
                        v702 = v1826;
                      else
                        v702 = 4;
                      __asm { BR              X11 }
                    }
                    v887 = v701 + 1;
                  }
                  if (v887)
                  {
                    v1097 = v87;
                    memcpy(v372, v434, v1822);
                    v1098 = v1839;
                    v1099 = v1842;
                    goto LABEL_1438;
                  }
LABEL_1436:
                  v1097 = v87;
                  (*(void (**)(_QWORD *, const void *, uint64_t))(v1720 + 16))(v372, v434, v1724);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1721 + 16))(((unint64_t)v372 + v1725) & v1784, ((unint64_t)v434 + v1725) & v1784, v1729);
                  v1098 = v1839;
                  v1099 = v1842;
                  if (!v1833)
                    *((_BYTE *)v372 + v1826) = 0;
LABEL_1438:
                  v1100 = ((unint64_t)v372 + v1713) & 0xFFFFFFFFFFFFFFF8;
                  v1101 = v434;
                  v1102 = ((unint64_t)v434 + v1713) & 0xFFFFFFFFFFFFFFF8;
                  v1103 = *(_QWORD *)(v1102 + 24);
                  *(_QWORD *)(v1100 + 24) = v1103;
                  *(_QWORD *)(v1100 + 32) = *(_QWORD *)(v1102 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v1103 - 8))(v1100, v1102);
                  v1104 = (void *)((v1824 + v1100) & v1807);
                  v1105 = (const void *)((v1824 + v1102) & v1807);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v1105, 1, v1773))
                  {
                    memcpy(v1104, v1105, v1099);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1765 + 16))(v1104, v1105, v1773);
                    __swift_storeEnumTagSinglePayload((uint64_t)v1104, 0, 1, v1773);
                  }
                  v1106 = (_QWORD *)(((unint64_t)v1104 + v1098) & 0xFFFFFFFFFFFFFFF8);
                  v1107 = (_QWORD *)(((unint64_t)v1105 + v1098) & 0xFFFFFFFFFFFFFFF8);
                  *v1106 = *v1107;
                  v1106[1] = v1107[1];
                  v1108 = (_QWORD *)(((unint64_t)v1106 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v1109 = (_QWORD *)(((unint64_t)v1107 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v1108 = *v1109;
                  v1108[1] = v1109[1];
                  *((_BYTE *)v1868 + v1791) = 33;
                  sub_21D7C4C20();
                  v372 = v1868;
                  sub_21D7C4C20();
                  v87 = v1097;
                  v373 = v1101;
                  goto LABEL_2187;
                case 0x22:
                  v1673 = v87;
                  if (__swift_getEnumTagSinglePayload((uint64_t)v373, 1, v1773))
                  {
                    memcpy(v372, v373, v1842);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1765 + 16))(v372, v373, v1773);
                    __swift_storeEnumTagSinglePayload((uint64_t)v372, 0, 1, v1773);
                  }
                  v703 = ((unint64_t)v372 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v1804 = v373;
                  v704 = ((unint64_t)v373 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v705 = *(_QWORD *)(v704 + 24);
                  *(_QWORD *)(v703 + 24) = v705;
                  *(_QWORD *)(v703 + 32) = *(_QWORD *)(v704 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v705 - 8))(v703, v704);
                  v706 = (v1856 + v703) & v1789;
                  v707 = (v1856 + v704) & v1789;
                  *(_BYTE *)v706 = *(_BYTE *)v707;
                  *(_QWORD *)(v706 + 8) = *(_QWORD *)(v707 + 8);
                  *(_QWORD *)(v706 + 16) = *(_QWORD *)(v707 + 0x10);
                  *(_QWORD *)(v706 + 24) = *(_QWORD *)(v707 + 0x18);
                  *(_QWORD *)(v706 + 32) = *(_QWORD *)(v707 + 0x20);
                  *(_QWORD *)(v706 + 40) = *(_QWORD *)(v707 + 0x28);
                  *(_QWORD *)(v706 + 48) = *(_QWORD *)(v707 + 0x30);
                  *(_QWORD *)(v706 + 56) = *(_QWORD *)(v707 + 0x38);
                  *(_QWORD *)(v706 + 64) = *(_QWORD *)(v707 + 0x40);
                  *(_QWORD *)(v706 + 72) = *(_QWORD *)(v707 + 0x48);
                  *(_QWORD *)(v706 + 80) = *(_QWORD *)(v707 + 0x50);
                  *(_QWORD *)(v706 + 88) = *(_QWORD *)(v707 + 0x58);
                  *(_QWORD *)(v706 + 96) = *(_QWORD *)(v707 + 0x60);
                  v708 = *(_QWORD *)(v707 + 0x68);
                  *(_BYTE *)(v706 + 112) = *(_BYTE *)(v707 + 0x70);
                  *(_QWORD *)(v706 + 104) = v708;
                  v709 = (void *)((v1726 + v706) & v1779);
                  v710 = (const void *)((v1726 + v707) & v1779);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (__swift_getEnumTagSinglePayload((uint64_t)v710, 1, v1730))
                  {
                    memcpy(v709, v710, v1817);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1712 + 16))(v709, v710, v1730);
                    __swift_storeEnumTagSinglePayload((uint64_t)v709, 0, 1, v1730);
                  }
                  v846 = (_QWORD *)((v1816 + v706) & 0xFFFFFFFFFFFFFFF8);
                  v847 = (_QWORD *)((v1816 + v707) & 0xFFFFFFFFFFFFFFF8);
                  *v846 = *v847;
                  v846[1] = v847[1];
                  v848 = ((unint64_t)v846 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v849 = ((unint64_t)v847 + 23) & 0xFFFFFFFFFFFFFFF8;
                  *(_QWORD *)v848 = *(_QWORD *)v849;
                  *(_QWORD *)(v848 + 8) = *(_QWORD *)(v849 + 8);
                  *(_BYTE *)(v848 + 16) = *(_BYTE *)(v849 + 16);
                  *(_BYTE *)(v848 + 17) = *(_BYTE *)(v849 + 17);
                  v850 = (void *)((v1687 + v848) & v1681);
                  v851 = (_BYTE *)((v1687 + v849) & v1681);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (v1833)
                  {
                    v852 = v1728;
                    v853 = v1826;
                    v854 = v1784;
                    if (v1722 >= v1728)
                    {
                      v855 = (uint64_t)v851;
                      v852 = v1722;
                      v856 = v1724;
                    }
                    else
                    {
                      v855 = (unint64_t)&v851[v1725] & v1784;
                      v856 = v1729;
                    }
                    v895 = __swift_getEnumTagSinglePayload(v855, v852, v856);
                  }
                  else
                  {
                    v853 = v1826;
                    v854 = v1784;
                    if (!v851[v1826])
                      goto LABEL_1626;
                    v882 = (v851[v1826] - 1) << v1777;
                    if (v1826 > 3)
                      v882 = 0;
                    if ((_DWORD)v1826)
                    {
                      if (v1826 <= 3)
                        v883 = v1826;
                      else
                        v883 = 4;
                      __asm { BR              X11 }
                    }
                    v895 = v882 + 1;
                  }
                  if (v895)
                  {
                    memcpy(v850, v851, v1822);
                    v373 = v1804;
                    goto LABEL_1628;
                  }
LABEL_1626:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1720 + 16))(v850, v851, v1724);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1721 + 16))(((unint64_t)v850 + v1725) & v854, (unint64_t)&v851[v1725] & v854, v1729);
                  v373 = v1804;
                  if (!v1833)
                    *((_BYTE *)v850 + v853) = 0;
LABEL_1628:
                  v948 = 34;
LABEL_1965:
                  v1357 = v1791;
                  v372 = v1868;
                  goto LABEL_2185;
                case 0x23:
                  v1673 = v87;
                  if (__swift_getEnumTagSinglePayload((uint64_t)v373, 1, v1773))
                  {
                    memcpy(v372, v373, v1842);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1765 + 16))(v372, v373, v1773);
                    __swift_storeEnumTagSinglePayload((uint64_t)v372, 0, 1, v1773);
                  }
                  v711 = ((unint64_t)v372 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v712 = ((unint64_t)v373 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v713 = *(_QWORD *)(v712 + 24);
                  *(_QWORD *)(v711 + 24) = v713;
                  *(_QWORD *)(v711 + 32) = *(_QWORD *)(v712 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v713 - 8))(v711, v712);
                  v714 = (v1856 + v711) & v1789;
                  v715 = (v1856 + v712) & v1789;
                  *(_BYTE *)v714 = *(_BYTE *)v715;
                  *(_QWORD *)(v714 + 8) = *(_QWORD *)(v715 + 8);
                  *(_QWORD *)(v714 + 16) = *(_QWORD *)(v715 + 0x10);
                  *(_QWORD *)(v714 + 24) = *(_QWORD *)(v715 + 0x18);
                  *(_QWORD *)(v714 + 32) = *(_QWORD *)(v715 + 0x20);
                  *(_QWORD *)(v714 + 40) = *(_QWORD *)(v715 + 0x28);
                  *(_QWORD *)(v714 + 48) = *(_QWORD *)(v715 + 0x30);
                  *(_QWORD *)(v714 + 56) = *(_QWORD *)(v715 + 0x38);
                  *(_QWORD *)(v714 + 64) = *(_QWORD *)(v715 + 0x40);
                  *(_QWORD *)(v714 + 72) = *(_QWORD *)(v715 + 0x48);
                  *(_QWORD *)(v714 + 80) = *(_QWORD *)(v715 + 0x50);
                  *(_QWORD *)(v714 + 88) = *(_QWORD *)(v715 + 0x58);
                  *(_QWORD *)(v714 + 96) = *(_QWORD *)(v715 + 0x60);
                  v716 = *(_QWORD *)(v715 + 0x68);
                  *(_BYTE *)(v714 + 112) = *(_BYTE *)(v715 + 0x70);
                  *(_QWORD *)(v714 + 104) = v716;
                  v717 = (void *)((v1726 + v714) & v1779);
                  v718 = (const void *)((v1726 + v715) & v1779);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (__swift_getEnumTagSinglePayload((uint64_t)v718, 1, v1730))
                  {
                    memcpy(v717, v718, v1817);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1712 + 16))(v717, v718, v1730);
                    __swift_storeEnumTagSinglePayload((uint64_t)v717, 0, 1, v1730);
                  }
                  v857 = (_QWORD *)((v1816 + v714) & 0xFFFFFFFFFFFFFFF8);
                  v858 = (_QWORD *)((v1816 + v715) & 0xFFFFFFFFFFFFFFF8);
                  *v857 = *v858;
                  v857[1] = v858[1];
                  v859 = ((unint64_t)v857 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v860 = ((unint64_t)v858 + 23) & 0xFFFFFFFFFFFFFFF8;
                  *(_QWORD *)v859 = *(_QWORD *)v860;
                  *(_QWORD *)(v859 + 8) = *(_QWORD *)(v860 + 8);
                  *(_BYTE *)(v859 + 16) = *(_BYTE *)(v860 + 16);
                  *(_BYTE *)(v859 + 17) = *(_BYTE *)(v860 + 17);
                  v861 = (_QWORD *)((v859 + 25) & 0xFFFFFFFFFFFFFFF8);
                  v862 = (_QWORD *)((v860 + 25) & 0xFFFFFFFFFFFFFFF8);
                  *v861 = *v862;
                  v861[1] = v862[1];
                  v863 = (_QWORD *)(((unint64_t)v861 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v864 = (_QWORD *)(((unint64_t)v862 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v863 = *v864;
                  v863[1] = v864[1];
                  v865 = (_QWORD *)(((unint64_t)v863 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v866 = (_QWORD *)(((unint64_t)v864 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v865 = *v866;
                  v865[1] = v866[1];
                  v867 = (_QWORD *)(((unint64_t)v865 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v868 = (_QWORD *)(((unint64_t)v866 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v867 = *v868;
                  v867[1] = v868[1];
                  v869 = (_QWORD *)(((unint64_t)v867 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v870 = (_QWORD *)(((unint64_t)v868 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v869 = *v870;
                  v871 = (void *)(((unint64_t)v869 + v1714) & v1681);
                  v872 = (_BYTE *)(((unint64_t)v870 + v1714) & v1681);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (v1833)
                  {
                    v873 = v1728;
                    if (v1722 >= v1728)
                    {
                      v874 = (uint64_t)v872;
                      v873 = v1722;
                      v875 = v1724;
                    }
                    else
                    {
                      v874 = (unint64_t)&v872[v1725] & v1784;
                      v875 = v1729;
                    }
                    v896 = __swift_getEnumTagSinglePayload(v874, v873, v875);
                    v884 = v1826;
                  }
                  else
                  {
                    v884 = v1826;
                    if (!v872[v1826])
                      goto LABEL_1631;
                    v885 = (v872[v1826] - 1) << v1777;
                    if (v1826 > 3)
                      v885 = 0;
                    if ((_DWORD)v1826)
                    {
                      if (v1826 <= 3)
                        v886 = v1826;
                      else
                        v886 = 4;
                      __asm { BR              X11 }
                    }
                    v896 = v885 + 1;
                  }
                  if (v896)
                  {
                    memcpy(v871, v872, v1822);
                    goto LABEL_1633;
                  }
LABEL_1631:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1720 + 16))(v871, v872, v1724);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1721 + 16))(((unint64_t)v871 + v1725) & v1784, (unint64_t)&v872[v1725] & v1784, v1729);
                  if (!v1833)
                    *((_BYTE *)v871 + v884) = 0;
LABEL_1633:
                  v1202 = (_QWORD *)(((unint64_t)v871 + v1713) & 0xFFFFFFFFFFFFFFF8);
                  v1203 = (_QWORD *)((unint64_t)&v872[v1713] & 0xFFFFFFFFFFFFFFF8);
                  *v1202 = *v1203;
                  v1202[1] = v1203[1];
                  v947 = 35;
                  v1204 = v1791;
                  v372 = v1868;
                  goto LABEL_1644;
                case 0x24:
                  v426 = v87;
                  if (__swift_getEnumTagSinglePayload((uint64_t)v373, 1, v1773))
                  {
                    memcpy(v372, v373, v1842);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1765 + 16))(v372, v373, v1773);
                    __swift_storeEnumTagSinglePayload((uint64_t)v372, 0, 1, v1773);
                  }
                  v719 = ((unint64_t)v372 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v388 = v373;
                  v720 = ((unint64_t)v373 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v721 = *(_QWORD *)(v720 + 24);
                  *(_QWORD *)(v719 + 24) = v721;
                  *(_QWORD *)(v719 + 32) = *(_QWORD *)(v720 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v721 - 8))(v719, v720);
                  v722 = (_QWORD *)((v719 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v723 = (_QWORD *)((v720 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v722 = *v723;
                  v722[1] = v723[1];
                  v724 = ((unint64_t)v722 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v725 = ((unint64_t)v723 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v726 = *(_QWORD *)(v725 + 24);
                  sub_21D7C4C20();
                  if (v726 < 0xFFFFFFFF)
                  {
                    v727 = *(_OWORD *)v725;
                    v728 = *(_OWORD *)(v725 + 16);
                    *(_QWORD *)(v724 + 32) = *(_QWORD *)(v725 + 32);
                    *(_OWORD *)v724 = v727;
                    *(_OWORD *)(v724 + 16) = v728;
                  }
                  else
                  {
                    *(_QWORD *)(v724 + 24) = v726;
                    *(_QWORD *)(v724 + 32) = *(_QWORD *)(v725 + 32);
                    (**(void (***)(unint64_t, unint64_t, unint64_t))(v726 - 8))(v724, v725, v726);
                  }
                  v700 = 36;
LABEL_916:
                  v372 = v1868;
                  *((_BYTE *)v1868 + v1791) = v700;
                  v87 = v426;
                  goto LABEL_936;
                case 0x25:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v373, 1, v1773))
                  {
                    memcpy(v372, v373, v1842);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1765 + 16))(v372, v373, v1773);
                    __swift_storeEnumTagSinglePayload((uint64_t)v372, 0, 1, v1773);
                  }
                  v729 = ((unint64_t)v372 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v730 = ((unint64_t)v373 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v731 = *(_QWORD *)(v730 + 24);
                  *(_QWORD *)(v729 + 24) = v731;
                  *(_QWORD *)(v729 + 32) = *(_QWORD *)(v730 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v731 - 8))(v729, v730);
                  v732 = v729 + 47;
                  v372 = v1868;
                  v732 &= 0xFFFFFFFFFFFFF8uLL;
                  v733 = (_QWORD *)((v730 + 47) & 0xFFFFFFFFFFFFF8);
                  *(_QWORD *)v732 = *v733;
                  *(_QWORD *)((v732 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v733 + 15) & 0xFFFFFFFFFFFFF8);
                  v654 = 37;
                  goto LABEL_929;
                case 0x26:
                  v437 = v87;
                  if (__swift_getEnumTagSinglePayload((uint64_t)v373, 1, v1773))
                  {
                    memcpy(v372, v373, v1842);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1765 + 16))(v372, v373, v1773);
                    __swift_storeEnumTagSinglePayload((uint64_t)v372, 0, 1, v1773);
                  }
                  v734 = ((unint64_t)v372 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v735 = v373;
                  v736 = ((unint64_t)v373 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v737 = *(_QWORD *)(v736 + 24);
                  *(_QWORD *)(v734 + 24) = v737;
                  *(_QWORD *)(v734 + 32) = *(_QWORD *)(v736 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v737 - 8))(v734, v736);
                  v738 = (_QWORD *)((v734 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v739 = (_QWORD *)((v736 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v738 = *v739;
                  v738[1] = v739[1];
                  v740 = (_QWORD *)(((unint64_t)v738 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v741 = (_QWORD *)(((unint64_t)v739 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v740 = *v741;
                  v740[1] = v741[1];
                  v742 = ((unint64_t)v740 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v743 = ((unint64_t)v741 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v744 = *(_QWORD *)(v743 + 24);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (v744 < 0xFFFFFFFF)
                  {
                    v745 = *(_OWORD *)v743;
                    v746 = *(_OWORD *)(v743 + 16);
                    *(_QWORD *)(v742 + 32) = *(_QWORD *)(v743 + 32);
                    *(_OWORD *)v742 = v745;
                    *(_OWORD *)(v742 + 16) = v746;
                  }
                  else
                  {
                    *(_QWORD *)(v742 + 24) = v744;
                    *(_QWORD *)(v742 + 32) = *(_QWORD *)(v743 + 32);
                    (**(void (***)(unint64_t, unint64_t, unint64_t))(v744 - 8))(v742, v743, v744);
                  }
                  v747 = (v742 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v748 = (v743 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v749 = *(_QWORD *)(v748 + 24);
                  v372 = v1868;
                  v373 = v735;
                  if (v749 < 0xFFFFFFFF)
                  {
                    v750 = *(_OWORD *)v748;
                    v751 = *(_OWORD *)(v748 + 16);
                    *(_QWORD *)(v747 + 32) = *(_QWORD *)(v748 + 32);
                    *(_OWORD *)v747 = v750;
                    *(_OWORD *)(v747 + 16) = v751;
                  }
                  else
                  {
                    *(_QWORD *)(v747 + 24) = v749;
                    *(_QWORD *)(v747 + 32) = *(_QWORD *)(v748 + 32);
                    (**(void (***)(void))(v749 - 8))();
                  }
                  v87 = v437;
                  v752 = v1791;
                  v753 = 38;
                  goto LABEL_2380;
                case 0x27:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v373, 1, v1773))
                  {
                    memcpy(v372, v373, v1842);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1765 + 16))(v372, v373, v1773);
                    __swift_storeEnumTagSinglePayload((uint64_t)v372, 0, 1, v1773);
                  }
                  v754 = ((unint64_t)v372 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v755 = ((unint64_t)v373 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v756 = *(_QWORD *)(v755 + 24);
                  *(_QWORD *)(v754 + 24) = v756;
                  *(_QWORD *)(v754 + 32) = *(_QWORD *)(v755 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v756 - 8))(v754, v755);
                  v757 = v754 + 47;
                  v372 = v1868;
                  *(_QWORD *)(v757 & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v755 + 47) & 0xFFFFFFFFFFFFF8);
                  v654 = 39;
LABEL_929:
                  *((_BYTE *)v372 + v1791) = v654;
                  goto LABEL_760;
                case 0x28:
                  v438 = v372;
                  v411 = v87;
                  v439 = v373[3];
                  v438[3] = v439;
                  v438[4] = v373[4];
                  (**(void (***)(_QWORD *, _QWORD *))(v439 - 8))(v438, v373);
                  v440 = (void *)(((unint64_t)v438 + v1824) & v1807);
                  v414 = v373;
                  v441 = (const void *)(((unint64_t)v373 + v1824) & v1807);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v441, 1, v1773))
                  {
                    memcpy(v440, v441, v1842);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1765 + 16))(v440, v441, v1773);
                    __swift_storeEnumTagSinglePayload((uint64_t)v440, 0, 1, v1773);
                  }
                  *(_QWORD *)(((unint64_t)v440 + v1839) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v441
                                                                                                  + v1839) & 0xFFFFFFFFFFFFF8);
                  v699 = 40;
LABEL_932:
                  *((_BYTE *)v1868 + v1791) = v699;
                  sub_21D7C4C20();
                  v87 = v411;
                  v372 = v1868;
                  goto LABEL_939;
                case 0x29:
                  v442 = v373;
                  v385 = v87;
                  v443 = v442[3];
                  v372[3] = v443;
                  v372[4] = v442[4];
                  (**(void (***)(_QWORD *, _QWORD *))(v443 - 8))(v372, v442);
                  v444 = (void *)(((unint64_t)v372 + v1824) & v1807);
                  v388 = v442;
                  v445 = (const void *)(((unint64_t)v442 + v1824) & v1807);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v445, 1, v1773))
                  {
                    memcpy(v444, v445, v1842);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1765 + 16))(v444, v445, v1773);
                    __swift_storeEnumTagSinglePayload((uint64_t)v444, 0, 1, v1773);
                  }
                  v758 = (_QWORD *)(((unint64_t)v444 + v1839) & 0xFFFFFFFFFFFFF8);
                  v759 = (_QWORD *)(((unint64_t)v445 + v1839) & 0xFFFFFFFFFFFFFFF8);
                  *v758 = *v759;
                  *(_QWORD *)(((unint64_t)v758 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v759
                                                                                               + 15) & 0xFFFFFFFFFFFFF8);
                  *((_BYTE *)v372 + v1791) = 41;
                  sub_21D7C4C20();
LABEL_935:
                  sub_21D7C4C20();
                  v87 = v385;
LABEL_936:
                  v373 = v388;
                  goto LABEL_2187;
                case 0x2A:
                  *v372 = *v373;
                  v383 = 42;
                  goto LABEL_759;
                case 0x2B:
                  v446 = v372;
                  v447 = v87;
                  v448 = v373[3];
                  v446[3] = v448;
                  v446[4] = v373[4];
                  (**(void (***)(_QWORD *, _QWORD *))(v448 - 8))(v446, v373);
                  v449 = (void *)(((unint64_t)v446 + v1824) & v1807);
                  v414 = v373;
                  v450 = (const void *)(((unint64_t)v373 + v1824) & v1807);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v450, 1, v1773))
                  {
                    memcpy(v449, v450, v1842);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1765 + 16))(v449, v450, v1773);
                    __swift_storeEnumTagSinglePayload((uint64_t)v449, 0, 1, v1773);
                  }
                  *((_BYTE *)v1868 + v1791) = 43;
                  v87 = v447;
                  v372 = v1868;
LABEL_939:
                  v373 = v414;
                  goto LABEL_2187;
                case 0x2C:
                  *v372 = *v373;
                  v383 = 44;
                  goto LABEL_759;
                case 0x2D:
                  v1675 = v87;
                  if (__swift_getEnumTagSinglePayload((uint64_t)v373, 1, v1773))
                  {
                    memcpy(v372, v373, v1842);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1765 + 16))(v372, v373, v1773);
                    __swift_storeEnumTagSinglePayload((uint64_t)v372, 0, 1, v1773);
                  }
                  v760 = ((unint64_t)v372 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v761 = ((unint64_t)v373 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v762 = *(_QWORD *)(v761 + 24);
                  *(_QWORD *)(v760 + 24) = v762;
                  *(_QWORD *)(v760 + 32) = *(_QWORD *)(v761 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v762 - 8))(((unint64_t)v1868 + v1839) & 0xFFFFFFFFFFFFFFF8, v761);
                  v763 = (v760 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v764 = (v761 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v765 = *(_QWORD *)(v764 + 24);
                  v1801 = v373;
                  if (v765 < 0xFFFFFFFF)
                  {
                    v766 = *(_OWORD *)v764;
                    v767 = *(_OWORD *)(v764 + 16);
                    *(_QWORD *)(v763 + 32) = *(_QWORD *)(v764 + 32);
                    *(_OWORD *)v763 = v766;
                    *(_OWORD *)(v763 + 16) = v767;
                  }
                  else
                  {
                    *(_QWORD *)(v763 + 24) = v765;
                    *(_QWORD *)(v763 + 32) = *(_QWORD *)(v764 + 32);
                    (**(void (***)(unint64_t, unint64_t))(v765 - 8))((v760 + 47) & 0xFFFFFFFFFFFFFFF8, v764);
                  }
                  v768 = (_QWORD *)((v763 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v769 = (_QWORD *)((v764 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v768 = *v769;
                  v768[1] = v769[1];
                  v770 = (_QWORD *)(((unint64_t)v768 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v771 = (_QWORD *)(((unint64_t)v769 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v770 = *v771;
                  v770[1] = v771[1];
                  v772 = (_QWORD *)(((unint64_t)v770 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v773 = (_QWORD *)(((unint64_t)v771 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v772 = *v773;
                  v772[1] = v773[1];
                  v774 = (_QWORD *)(((unint64_t)v772 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v775 = (_QWORD *)(((unint64_t)v773 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v774 = *v775;
                  v774[1] = v775[1];
                  v776 = ((unint64_t)v774 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v777 = ((unint64_t)v775 + 23) & 0xFFFFFFFFFFFFFFF8;
                  *(_QWORD *)v776 = *(_QWORD *)v777;
                  *(_QWORD *)(v776 + 8) = *(_QWORD *)(v777 + 8);
                  *(_BYTE *)(v776 + 16) = *(_BYTE *)(v777 + 16);
                  v778 = (_QWORD *)(((unint64_t)v774 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v779 = (_QWORD *)(((unint64_t)v775 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v778 = *v779;
                  v780 = (void *)(((unint64_t)v778 + v1714) & v1681);
                  v781 = (_BYTE *)(((unint64_t)v779 + v1714) & v1681);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (v1833)
                  {
                    v782 = v1728;
                    if (v1722 >= v1728)
                    {
                      v783 = (uint64_t)v781;
                      v782 = v1722;
                      v784 = v1724;
                    }
                    else
                    {
                      v783 = (unint64_t)&v781[v1725] & v1784;
                      v784 = v1729;
                    }
                    v892 = __swift_getEnumTagSinglePayload(v783, v782, v784);
                  }
                  else
                  {
                    if (!v781[v1826])
                      goto LABEL_1926;
                    v876 = (v781[v1826] - 1) << v1777;
                    if (v1826 > 3)
                      v876 = 0;
                    if ((_DWORD)v1826)
                    {
                      if (v1826 <= 3)
                        v877 = v1826;
                      else
                        v877 = 4;
                      __asm { BR              X11 }
                    }
                    v892 = v876 + 1;
                  }
                  if (v892)
                  {
                    memcpy(v780, v781, v1822);
                    v1335 = v1784;
                    goto LABEL_1928;
                  }
LABEL_1926:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1720 + 16))(v780, v781, v1724);
                  v1335 = v1784;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1721 + 16))(((unint64_t)v780 + v1725) & v1784, (unint64_t)&v781[v1725] & v1784, v1729);
                  if (!v1833)
                    *((_BYTE *)v780 + v1826) = 0;
LABEL_1928:
                  v1336 = (void *)(((unint64_t)v780 + v1708) & v1681);
                  v1337 = (_BYTE *)((unint64_t)&v781[v1708] & v1681);
                  if (v1833)
                  {
                    v1338 = v1728;
                    if (v1722 >= v1728)
                    {
                      v1339 = (uint64_t)v1337;
                      v1338 = v1722;
                      v1340 = v1724;
                    }
                    else
                    {
                      v1339 = (unint64_t)&v1337[v1725] & v1335;
                      v1340 = v1729;
                    }
                    v1343 = __swift_getEnumTagSinglePayload(v1339, v1338, v1340);
                  }
                  else
                  {
                    if (!v1337[v1826])
                      goto LABEL_1968;
                    v1341 = (v1337[v1826] - 1) << v1777;
                    if (v1826 > 3)
                      v1341 = 0;
                    if ((_DWORD)v1826)
                    {
                      if (v1826 <= 3)
                        v1342 = v1826;
                      else
                        v1342 = 4;
                      __asm { BR              X11 }
                    }
                    v1343 = v1341 + 1;
                  }
                  if (v1343)
                  {
                    memcpy(v1336, v1337, v1822);
                    goto LABEL_1970;
                  }
LABEL_1968:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1720 + 16))(v1336, v1337, v1724);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1721 + 16))(((unint64_t)v1336 + v1725) & v1335, (unint64_t)&v1337[v1725] & v1335, v1729);
                  if (!v1833)
                    *((_BYTE *)v1336 + v1826) = 0;
LABEL_1970:
                  v1358 = (_QWORD *)(((unint64_t)v1336 + v1785) & v1845);
                  v1359 = (uint64_t *)((unint64_t)&v1337[v1785] & v1845);
                  if ((v1728 & 0x80000000) != 0)
                  {
                    v1361 = __swift_getEnumTagSinglePayload(((unint64_t)v1359 + v1711) & v1335, v1728, v1729);
                  }
                  else
                  {
                    v1360 = *v1359;
                    if ((unint64_t)*v1359 >= 0xFFFFFFFF)
                      LODWORD(v1360) = -1;
                    v1361 = v1360 + 1;
                  }
                  if (v1361)
                  {
                    memcpy(v1358, v1359, v1815);
                  }
                  else
                  {
                    *v1358 = *v1359;
                    v1362 = v89;
                    v1363 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1721 + 16);
                    sub_21D7C4C20();
                    v1363(((unint64_t)v1358 + v1711) & v1335, ((unint64_t)v1359 + v1711) & v1335, v1729);
                    v89 = v1362;
                  }
                  v1364 = (_QWORD *)(((unint64_t)v1358 + v1695) & v1845);
                  v1365 = (uint64_t *)(((unint64_t)v1359 + v1695) & v1845);
                  if ((v1728 & 0x80000000) != 0)
                  {
                    v1367 = __swift_getEnumTagSinglePayload(((unint64_t)v1365 + v1711) & v1335, v1728, v1729);
                  }
                  else
                  {
                    v1366 = *v1365;
                    if ((unint64_t)*v1365 >= 0xFFFFFFFF)
                      LODWORD(v1366) = -1;
                    v1367 = v1366 + 1;
                  }
                  if (v1367)
                  {
                    memcpy(v1364, v1365, v1815);
                  }
                  else
                  {
                    *v1364 = *v1365;
                    v1368 = v89;
                    v1369 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1721 + 16);
                    sub_21D7C4C20();
                    v1369(((unint64_t)v1364 + v1711) & v1335, ((unint64_t)v1365 + v1711) & v1335, v1729);
                    v89 = v1368;
                  }
                  v1370 = (char *)v1364 + v1815;
                  *v1370 = *((_BYTE *)v1365 + v1815);
                  v1370[1] = *((_BYTE *)v1365 + v1815 + 1);
                  v1371 = (_QWORD *)(((unint64_t)v1364 + v1815 + 9) & 0xFFFFFFFFFFFFFFF8);
                  v1372 = (_QWORD *)(((unint64_t)v1365 + v1815 + 9) & 0xFFFFFFFFFFFFFFF8);
                  *v1371 = *v1372;
                  v1371[1] = v1372[1];
                  v1373 = ((unint64_t)v1371 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v1374 = ((unint64_t)v1372 + 23) & 0xFFFFFFFFFFFFFFF8;
                  *(_QWORD *)v1373 = *(_QWORD *)v1374;
                  *(_QWORD *)(v1373 + 8) = *(_QWORD *)(v1374 + 8);
                  *(_BYTE *)(v1373 + 16) = *(_BYTE *)(v1374 + 16);
                  v1375 = ((unint64_t)v1371 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1376 = ((unint64_t)v1372 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1377 = *(_QWORD *)(v1376 + 24);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (v1377 < 0xFFFFFFFF)
                  {
                    v1378 = *(_OWORD *)v1376;
                    v1379 = *(_OWORD *)(v1376 + 16);
                    *(_QWORD *)(v1375 + 32) = *(_QWORD *)(v1376 + 32);
                    *(_OWORD *)v1375 = v1378;
                    *(_OWORD *)(v1375 + 16) = v1379;
                  }
                  else
                  {
                    *(_QWORD *)(v1375 + 24) = v1377;
                    *(_QWORD *)(v1375 + 32) = *(_QWORD *)(v1376 + 32);
                    (**(void (***)(unint64_t, unint64_t, unint64_t))(v1377 - 8))(v1375, v1376, v1377);
                  }
                  v1380 = (v1856 + v1375) & v1789;
                  v1381 = (v1856 + v1376) & v1789;
                  if (v1723 >= 0x7FFFFFFF)
                  {
                    v1386 = (const void *)((v1726 + v1381) & v1779);
                    if (__swift_getEnumTagSinglePayload((uint64_t)v1386, v1718, v1730) <= 1)
                    {
                      v1668 = v89;
                      v1383 = (char *)(v1381 + 8);
                      v1384 = v1726;
                      v1385 = ~v1847;
LABEL_1996:
                      *(_BYTE *)v1380 = *(_BYTE *)v1381;
                      *(_QWORD *)(v1380 + 8) = *(_QWORD *)(v1381 + 8);
                      *(_QWORD *)(v1380 + 16) = *((_QWORD *)v1383 + 1);
                      *(_QWORD *)(v1380 + 24) = *((_QWORD *)v1383 + 2);
                      *(_QWORD *)(v1380 + 32) = *((_QWORD *)v1383 + 3);
                      *(_QWORD *)(v1380 + 40) = *((_QWORD *)v1383 + 4);
                      *(_QWORD *)(v1380 + 48) = *((_QWORD *)v1383 + 5);
                      *(_QWORD *)(v1380 + 56) = *((_QWORD *)v1383 + 6);
                      *(_QWORD *)(v1380 + 64) = *((_QWORD *)v1383 + 7);
                      *(_QWORD *)(v1380 + 72) = *((_QWORD *)v1383 + 8);
                      *(_QWORD *)(v1380 + 80) = *((_QWORD *)v1383 + 9);
                      *(_QWORD *)(v1380 + 88) = *((_QWORD *)v1383 + 10);
                      *(_QWORD *)(v1380 + 96) = *((_QWORD *)v1383 + 11);
                      v1387 = *((_QWORD *)v1383 + 12);
                      *(_BYTE *)(v1380 + 112) = v1383[104];
                      *(_QWORD *)(v1380 + 104) = v1387;
                      v1388 = (void *)((v1384 + v1380) & v1385);
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      if (__swift_getEnumTagSinglePayload((uint64_t)v1386, 1, v1730))
                      {
                        memcpy(v1388, v1386, v1817);
                      }
                      else
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v1712 + 16))(v1388, v1386, v1730);
                        __swift_storeEnumTagSinglePayload((uint64_t)v1388, 0, 1, v1730);
                      }
                      v89 = v1668;
                      v1389 = v1820;
LABEL_2001:
                      v1390 = (_QWORD *)(((v1380 | 7) + v1389) & 0xFFFFFFFFFFFFFFF8);
                      v1391 = (_QWORD *)(((v1381 | 7) + v1389) & 0xFFFFFFFFFFFFFFF8);
                      *v1390 = *v1391;
                      v1390[1] = v1391[1];
                      v372 = v1868;
                      *((_BYTE *)v1868 + v1791) = 45;
                      sub_21D7C4C20();
                      goto LABEL_2002;
                    }
                  }
                  else
                  {
                    v1382 = *(_QWORD *)(v1381 + 16);
                    if (v1382 >= 0xFFFFFFFF)
                      LODWORD(v1382) = -1;
                    if ((int)v1382 - 1 < 0)
                    {
                      v1668 = v89;
                      v1383 = (char *)(v1381 + 8);
                      v1384 = v1726;
                      v1385 = ~v1847;
                      v1386 = (const void *)((v1726 + v1381) & v1779);
                      goto LABEL_1996;
                    }
                  }
                  v1389 = v1820;
                  memcpy((void *)v1380, (const void *)v1381, v1820);
                  goto LABEL_2001;
                case 0x2E:
                  *v372 = *v373;
                  v383 = 46;
                  goto LABEL_759;
                case 0x2F:
                  *v372 = *v373;
                  v383 = 47;
                  goto LABEL_759;
                case 0x30:
                  *v372 = *v373;
                  v383 = 48;
                  goto LABEL_759;
                case 0x31:
                  *v372 = *v373;
                  v383 = 49;
                  goto LABEL_759;
                case 0x32:
                  v1673 = v87;
                  v451 = v373[3];
                  v372[3] = v451;
                  v372[4] = v373[4];
                  (**(void (***)(_QWORD *, _QWORD *))(v451 - 8))(v372, v373);
                  v452 = (void *)(((unint64_t)v372 + v1824) & v1807);
                  v453 = (const void *)(((unint64_t)v373 + v1824) & v1807);
                  v454 = v373;
                  if (__swift_getEnumTagSinglePayload((uint64_t)v453, 1, v1773))
                  {
                    memcpy(v452, v453, v1842);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1765 + 16))(v452, v453, v1773);
                    __swift_storeEnumTagSinglePayload((uint64_t)v452, 0, 1, v1773);
                  }
                  v785 = (_QWORD *)(((unint64_t)v452 + v1839) & 0xFFFFFFFFFFFFFFF8);
                  v786 = (_QWORD *)(((unint64_t)v453 + v1839) & 0xFFFFFFFFFFFFFFF8);
                  *v785 = *v786;
                  v785[1] = v786[1];
                  v787 = ((unint64_t)v785 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v788 = ((unint64_t)v786 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v789 = *(_QWORD *)(v788 + 24);
                  sub_21D7C4C20();
                  if (v789 < 0xFFFFFFFF)
                  {
                    v790 = *(_OWORD *)v788;
                    v791 = *(_OWORD *)(v788 + 16);
                    *(_QWORD *)(v787 + 32) = *(_QWORD *)(v788 + 32);
                    *(_OWORD *)v787 = v790;
                    *(_OWORD *)(v787 + 16) = v791;
                  }
                  else
                  {
                    *(_QWORD *)(v787 + 24) = v789;
                    *(_QWORD *)(v787 + 32) = *(_QWORD *)(v788 + 32);
                    (**(void (***)(unint64_t, unint64_t, unint64_t))(v789 - 8))(v787, v788, v789);
                  }
                  v792 = (_QWORD *)((v787 + 47) & 0xFFFFFFFFFFFFF8);
                  v793 = (_QWORD *)((v788 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v792 = *v793;
                  v794 = (_QWORD *)(((unint64_t)v792 + 15) & 0xFFFFFFFFFFFFFFF8);
                  v795 = (_QWORD *)(((unint64_t)v793 + 15) & 0xFFFFFFFFFFFFFFF8);
                  *v794 = *v795;
                  v794[1] = v795[1];
                  v796 = (char *)(((unint64_t)v794 + v1814) & v1811);
                  v797 = (char *)(((unint64_t)v795 + v1814) & v1811);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (v1716 < 0x7FFFFFFF)
                  {
                    if (*(_QWORD *)(((unint64_t)&v797[v1839] & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                      goto LABEL_953;
                  }
                  else if (__swift_getEnumTagSinglePayload((uint64_t)v797, v1819, v1773) >= 2)
                  {
LABEL_953:
                    v798 = v1831;
                    memcpy(v796, v797, v1831);
                    goto LABEL_1096;
                  }
                  if (__swift_getEnumTagSinglePayload((uint64_t)v797, 1, v1773))
                  {
                    memcpy(v796, v797, v1842);
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(v1765 + 16))(v796, v797, v1773);
                    __swift_storeEnumTagSinglePayload((uint64_t)v796, 0, 1, v1773);
                  }
                  v914 = (unint64_t)&v796[v1839] & 0xFFFFFFFFFFFFFFF8;
                  v915 = (unint64_t)&v797[v1839] & 0xFFFFFFFFFFFFFFF8;
                  v916 = *(_QWORD *)(v915 + 24);
                  *(_QWORD *)(v914 + 24) = v916;
                  *(_QWORD *)(v914 + 32) = *(_QWORD *)(v915 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v916 - 8))(v914, v915);
                  v917 = (v914 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v918 = (v915 + 47) & 0xFFFFFFFFFFFFFFF8;
                  *(_QWORD *)v917 = *(_QWORD *)v918;
                  *(_QWORD *)(v917 + 8) = *(_QWORD *)(v918 + 8);
                  *(_BYTE *)(v917 + 16) = *(_BYTE *)(v918 + 16);
                  sub_21D7C4C20();
                  v372 = v1868;
                  v798 = v1831;
                  if (v1819)
                    v798 = ((((v1760 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 17;
LABEL_1096:
                  v919 = &v796[v798];
                  v920 = &v797[v798];
                  *(_QWORD *)(v919 + 7) = *(_QWORD *)&v797[v798 + 7];
                  *(_QWORD *)(v919 + 15) = *(_QWORD *)&v797[v798 + 15];
                  v921 = (_QWORD *)((unint64_t)&v796[v798 + v1694] & v1789);
                  v922 = (_QWORD *)((unint64_t)&v920[v1694] & v1789);
                  sub_21D7C4C20();
                  if (v1723 >= 0x7FFFFFFF)
                  {
                    v928 = (const void *)(((unint64_t)v922 + v1726) & v1779);
                    if (__swift_getEnumTagSinglePayload((uint64_t)v928, v1718, v1730) <= 1)
                    {
                      v924 = v89;
                      v925 = (char *)(v922 + 1);
                      v926 = v1726;
                      v927 = ~v1847;
                      goto LABEL_1103;
                    }
                  }
                  else
                  {
                    v923 = v922[2];
                    if (v923 >= 0xFFFFFFFF)
                      LODWORD(v923) = -1;
                    if ((int)v923 - 1 < 0)
                    {
                      v924 = v89;
                      v925 = (char *)(v922 + 1);
                      v926 = v1726;
                      v927 = ~v1847;
                      v928 = (const void *)(((unint64_t)v922 + v1726) & v1779);
LABEL_1103:
                      *(_BYTE *)v921 = *(_BYTE *)v922;
                      v921[1] = v922[1];
                      v921[2] = *((_QWORD *)v925 + 1);
                      v921[3] = *((_QWORD *)v925 + 2);
                      v921[4] = *((_QWORD *)v925 + 3);
                      v921[5] = *((_QWORD *)v925 + 4);
                      v921[6] = *((_QWORD *)v925 + 5);
                      v921[7] = *((_QWORD *)v925 + 6);
                      v921[8] = *((_QWORD *)v925 + 7);
                      v921[9] = *((_QWORD *)v925 + 8);
                      v921[10] = *((_QWORD *)v925 + 9);
                      v921[11] = *((_QWORD *)v925 + 10);
                      v921[12] = *((_QWORD *)v925 + 11);
                      v929 = *((_QWORD *)v925 + 12);
                      *((_BYTE *)v921 + 112) = v925[104];
                      v921[13] = v929;
                      v930 = (void *)(((unint64_t)v921 + v926) & v927);
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      if (__swift_getEnumTagSinglePayload((uint64_t)v928, 1, v1730))
                      {
                        memcpy(v930, v928, v1817);
                      }
                      else
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v1712 + 16))(v930, v928, v1730);
                        __swift_storeEnumTagSinglePayload((uint64_t)v930, 0, 1, v1730);
                      }
                      v89 = v924;
                      v372 = v1868;
                      goto LABEL_1132;
                    }
                  }
                  memcpy(v921, v922, v1820);
LABEL_1132:
                  v373 = v454;
                  v948 = 50;
                  goto LABEL_2184;
                case 0x33:
                  v1673 = v87;
                  if (__swift_getEnumTagSinglePayload((uint64_t)v373, 1, v1773))
                  {
                    memcpy(v372, v373, v1842);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1765 + 16))(v372, v373, v1773);
                    __swift_storeEnumTagSinglePayload((uint64_t)v372, 0, 1, v1773);
                  }
                  v799 = ((unint64_t)v372 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v800 = ((unint64_t)v373 + v1839) & 0xFFFFFFFFFFFFFFF8;
                  v801 = *(_QWORD *)(v800 + 24);
                  *(_QWORD *)(v799 + 24) = v801;
                  *(_QWORD *)(v799 + 32) = *(_QWORD *)(v800 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v801 - 8))(((unint64_t)v1868 + v1839) & 0xFFFFFFFFFFFFFFF8, v800);
                  v802 = (v799 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v803 = (v800 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v804 = *(_QWORD *)(v803 + 24);
                  v1805 = v373;
                  if (v804 < 0xFFFFFFFF)
                  {
                    v805 = *(_OWORD *)v803;
                    v806 = *(_OWORD *)(v803 + 16);
                    *(_QWORD *)(v802 + 32) = *(_QWORD *)(v803 + 32);
                    *(_OWORD *)v802 = v805;
                    *(_OWORD *)(v802 + 16) = v806;
                  }
                  else
                  {
                    *(_QWORD *)(v802 + 24) = v804;
                    *(_QWORD *)(v802 + 32) = *(_QWORD *)(v803 + 32);
                    (**(void (***)(unint64_t, unint64_t))(v804 - 8))((v799 + 47) & 0xFFFFFFFFFFFFFFF8, v803);
                  }
                  v1665 = v89;
                  v807 = (_QWORD *)((v802 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v808 = (_QWORD *)((v803 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v807 = *v808;
                  v807[1] = v808[1];
                  v809 = (_QWORD *)(((unint64_t)v807 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v810 = (_QWORD *)(((unint64_t)v808 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v809 = *v810;
                  v809[1] = v810[1];
                  v811 = (_QWORD *)(((unint64_t)v809 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v812 = (_QWORD *)(((unint64_t)v810 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v811 = *v812;
                  v813 = (_QWORD *)(((unint64_t)v811 + v1685) & v1862);
                  v814 = (_QWORD *)(((unint64_t)v812 + v1685) & v1862);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (v1710 > 0x7FFFFFFE)
                  {
                    v817 = (_QWORD *)(((unint64_t)v814 + 23) & 0xFFFFFFFFFFFFFFF8);
                    v818 = ((unint64_t)v817 + 23) & 0xFFFFFFFFFFFFFFF8;
                    v816 = v1784;
                    if (!__swift_getEnumTagSinglePayload((v1818 + v818 + 33) & v1775, v1710, v1709))
                      goto LABEL_968;
                  }
                  else
                  {
                    v815 = v814[1];
                    if (v815 >= 0xFFFFFFFF)
                      LODWORD(v815) = -1;
                    v816 = v1784;
                    if ((v815 + 1) <= 1)
                    {
                      v817 = (_QWORD *)(((unint64_t)v814 + 23) & 0xFFFFFFFFFFFFFFF8);
                      v818 = ((unint64_t)v817 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_968:
                      *v813 = *v814;
                      v813[1] = v814[1];
                      v819 = (_QWORD *)(((unint64_t)v813 + 23) & 0xFFFFFFFFFFFFFFF8);
                      *v819 = *v817;
                      v819[1] = v817[1];
                      v820 = ((unint64_t)v819 + 23) & 0xFFFFFFFFFFFFFFF8;
                      *(_QWORD *)v820 = *(_QWORD *)v818;
                      *(_QWORD *)(v820 + 8) = *(_QWORD *)(v818 + 8);
                      *(_BYTE *)(v820 + 16) = *(_BYTE *)(v818 + 16);
                      v821 = ((unint64_t)v819 + 47) & 0xFFFFFFFFFFFFFFF8;
                      v822 = ((unint64_t)v817 + 47) & 0xFFFFFFFFFFFFFFF8;
                      v823 = *(void **)v822;
                      *(_QWORD *)v821 = *(_QWORD *)v822;
                      *(_BYTE *)(v821 + 8) = *(_BYTE *)(v822 + 8);
                      v824 = (v1818 + 9 + v821) & v1775;
                      v825 = (v1818 + 9 + v822) & v1775;
                      v826 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1813 + 16);
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      v827 = v823;
                      v826(v824, v825, v1709);
LABEL_969:
                      v828 = (void *)(((unint64_t)v813 + v1689) & v1681);
                      v829 = (_BYTE *)(((unint64_t)v814 + v1689) & v1681);
                      v89 = v1665;
                      if (v1833)
                      {
                        v830 = v1728;
                        if (v1722 >= v1728)
                        {
                          v831 = (uint64_t)v829;
                          v830 = v1722;
                          v832 = v1724;
                        }
                        else
                        {
                          v831 = (unint64_t)&v829[v1725] & v816;
                          v832 = v1729;
                        }
                        v893 = __swift_getEnumTagSinglePayload(v831, v830, v832);
                      }
                      else
                      {
                        if (!v829[v1826])
                          goto LABEL_1944;
                        v878 = (v829[v1826] - 1) << v1777;
                        if (v1826 > 3)
                          v878 = 0;
                        if ((_DWORD)v1826)
                        {
                          if (v1826 <= 3)
                            v879 = v1826;
                          else
                            v879 = 4;
                          __asm { BR              X11 }
                        }
                        v893 = v878 + 1;
                      }
                      if (v893)
                      {
                        v1344 = v816;
                        memcpy(v828, v829, v1822);
                        goto LABEL_1946;
                      }
LABEL_1944:
                      (*(void (**)(void *, _BYTE *, uint64_t))(v1720 + 16))(v828, v829, v1724);
                      v1344 = v816;
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1721 + 16))(((unint64_t)v828 + v1725) & v816, (unint64_t)&v829[v1725] & v816, v1729);
                      if (!v1833)
                        *((_BYTE *)v828 + v1826) = 0;
LABEL_1946:
                      v1345 = (_QWORD *)(((unint64_t)v828 + v1713) & 0xFFFFFFFFFFFFFFF8);
                      v1346 = (_QWORD *)((unint64_t)&v829[v1713] & 0xFFFFFFFFFFFFFFF8);
                      *v1345 = *v1346;
                      v1345[1] = v1346[1];
                      v1347 = ((unint64_t)v1345 + 23) & 0xFFFFFFFFFFFFFFF8;
                      v1348 = ((unint64_t)v1346 + 23) & 0xFFFFFFFFFFFFFFF8;
                      *(_QWORD *)v1347 = *(_QWORD *)v1348;
                      *(_BYTE *)(v1347 + 8) = *(_BYTE *)(v1348 + 8);
                      v1349 = (void *)((v1693 + v1347) & v1681);
                      v1350 = (_BYTE *)((v1693 + v1348) & v1681);
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      if (v1833)
                      {
                        v1351 = v1728;
                        v372 = v1868;
                        if (v1722 >= v1728)
                        {
                          v1352 = (uint64_t)v1350;
                          v1351 = v1722;
                          v1353 = v1724;
                        }
                        else
                        {
                          v1352 = (unint64_t)&v1350[v1725] & v1344;
                          v1353 = v1729;
                        }
                        v1356 = __swift_getEnumTagSinglePayload(v1352, v1351, v1353);
                      }
                      else
                      {
                        v372 = v1868;
                        if (!v1350[v1826])
                          goto LABEL_2005;
                        v1354 = (v1350[v1826] - 1) << v1777;
                        if (v1826 > 3)
                          v1354 = 0;
                        if ((_DWORD)v1826)
                        {
                          if (v1826 <= 3)
                            v1355 = v1826;
                          else
                            v1355 = 4;
                          __asm { BR              X11 }
                        }
                        v1356 = v1354 + 1;
                      }
                      if (v1356)
                      {
                        memcpy(v1349, v1350, v1822);
                        goto LABEL_2007;
                      }
LABEL_2005:
                      (*(void (**)(void *, _BYTE *, uint64_t))(v1720 + 16))(v1349, v1350, v1724);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1721 + 16))(((unint64_t)v1349 + v1725) & v1344, (unint64_t)&v1350[v1725] & v1344, v1729);
                      if (!v1833)
                        *((_BYTE *)v1349 + v1826) = 0;
LABEL_2007:
                      v1392 = (_QWORD *)(((unint64_t)v1349 + v1713) & 0xFFFFFFFFFFFFFFF8);
                      v1393 = (_QWORD *)((unint64_t)&v1350[v1713] & 0xFFFFFFFFFFFFFFF8);
                      *v1392 = *v1393;
                      v1392[1] = v1393[1];
                      v1394 = (void *)(((unint64_t)v1392 + v1837) & v1681);
                      v1395 = (_BYTE *)(((unint64_t)v1393 + v1837) & v1681);
                      sub_21D7C4C20();
                      if (v1833)
                      {
                        v1396 = v1728;
                        if (v1722 >= v1728)
                        {
                          v1397 = (uint64_t)v1395;
                          v1396 = v1722;
                          v1398 = v1724;
                        }
                        else
                        {
                          v1397 = (unint64_t)&v1395[v1725] & v1344;
                          v1398 = v1729;
                        }
                        v1401 = __swift_getEnumTagSinglePayload(v1397, v1396, v1398);
                      }
                      else
                      {
                        if (!v1395[v1826])
                          goto LABEL_2023;
                        v1399 = (v1395[v1826] - 1) << v1777;
                        if (v1826 > 3)
                          v1399 = 0;
                        if ((_DWORD)v1826)
                        {
                          if (v1826 <= 3)
                            v1400 = v1826;
                          else
                            v1400 = 4;
                          __asm { BR              X11 }
                        }
                        v1401 = v1399 + 1;
                      }
                      if (v1401)
                      {
                        memcpy(v1394, v1395, v1822);
                        goto LABEL_2025;
                      }
LABEL_2023:
                      (*(void (**)(void *, _BYTE *, uint64_t))(v1720 + 16))(v1394, v1395, v1724);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1721 + 16))(((unint64_t)v1394 + v1725) & v1344, (unint64_t)&v1395[v1725] & v1344, v1729);
                      if (!v1833)
                        *((_BYTE *)v1394 + v1826) = 0;
LABEL_2025:
                      v1402 = (_QWORD *)(((unint64_t)v1394 + v1698) & v1789);
                      v1403 = (_QWORD *)((unint64_t)&v1395[v1698] & v1789);
                      if (v1723 >= 0x7FFFFFFF)
                      {
                        v1408 = (const void *)(((unint64_t)v1403 + v1726) & v1779);
                        if (__swift_getEnumTagSinglePayload((uint64_t)v1408, v1718, v1730) <= 1)
                        {
                          v1405 = (char *)(v1403 + 1);
                          v1406 = v1726;
                          v1407 = ~v1847;
                          goto LABEL_2032;
                        }
                      }
                      else
                      {
                        v1404 = v1403[2];
                        if (v1404 >= 0xFFFFFFFF)
                          LODWORD(v1404) = -1;
                        if ((int)v1404 - 1 < 0)
                        {
                          v1405 = (char *)(v1403 + 1);
                          v1406 = v1726;
                          v1407 = ~v1847;
                          v1408 = (const void *)(((unint64_t)v1403 + v1726) & v1779);
LABEL_2032:
                          *(_BYTE *)v1402 = *(_BYTE *)v1403;
                          v1402[1] = v1403[1];
                          v1402[2] = *((_QWORD *)v1405 + 1);
                          v1402[3] = *((_QWORD *)v1405 + 2);
                          v1402[4] = *((_QWORD *)v1405 + 3);
                          v1402[5] = *((_QWORD *)v1405 + 4);
                          v1402[6] = *((_QWORD *)v1405 + 5);
                          v1402[7] = *((_QWORD *)v1405 + 6);
                          v1402[8] = *((_QWORD *)v1405 + 7);
                          v1402[9] = *((_QWORD *)v1405 + 8);
                          v1402[10] = *((_QWORD *)v1405 + 9);
                          v1402[11] = *((_QWORD *)v1405 + 10);
                          v1402[12] = *((_QWORD *)v1405 + 11);
                          v1409 = *((_QWORD *)v1405 + 12);
                          *((_BYTE *)v1402 + 112) = v1405[104];
                          v1402[13] = v1409;
                          v1410 = (void *)(((unint64_t)v1402 + v1406) & v1407);
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          if (__swift_getEnumTagSinglePayload((uint64_t)v1408, 1, v1730))
                          {
                            memcpy(v1410, v1408, v1817);
                          }
                          else
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v1712 + 16))(v1410, v1408, v1730);
                            __swift_storeEnumTagSinglePayload((uint64_t)v1410, 0, 1, v1730);
                          }
                          v89 = v1665;
                          v372 = v1868;
                          goto LABEL_2037;
                        }
                      }
                      memcpy(v1402, v1403, v1820);
LABEL_2037:
                      v373 = v1805;
                      v948 = 51;
                      goto LABEL_2184;
                    }
                  }
                  memcpy(v813, v814, v1860);
                  goto LABEL_969;
                case 0x34:
                  *v372 = *v373;
                  v383 = 52;
LABEL_759:
                  *((_BYTE *)v372 + v1791) = v383;
LABEL_760:
                  sub_21D7C4C20();
                  goto LABEL_2187;
                default:
                  if (v1791 <= 3)
                    v374 = v1791;
                  else
                    v374 = 4;
                  __asm { BR              X12 }
                  return result;
              }
            case 2:
              v220 = a1;
              *a1 = *a2;
              v221 = 2;
              goto LABEL_403;
            case 3:
              v220 = a1;
              *a1 = *a2;
              v221 = 3;
LABEL_403:
              *((_BYTE *)v220 + v89) = v221;
              sub_21D7C4C20();
              goto LABEL_2192;
            default:
              memcpy(a1, a2, v89 + 1);
              goto LABEL_2192;
          }
        default:
          if (v1791 <= 3)
            v121 = v1791;
          else
            v121 = 4;
          __asm { BR              X12 }
          return result;
      }
    case 2:
    case 3:
      goto LABEL_120;
    default:
      goto LABEL_391;
  }
}

_OWORD *sub_21CEBB8A4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  size_t v5;
  size_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  size_t v28;
  size_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unsigned int v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  size_t v49;
  unint64_t v50;
  size_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  size_t v57;
  unint64_t v58;
  unint64_t v59;
  size_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  size_t v85;
  size_t v86;
  size_t v87;
  _OWORD *v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _OWORD *v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  char *v99;
  size_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  _BYTE *v105;
  unsigned __int8 *v106;
  unsigned int v107;
  _OWORD *v108;
  __int128 *v109;
  unsigned int v110;
  size_t v111;
  __int128 v112;
  __int128 v113;
  void *v114;
  const void *v115;
  const void *v116;
  size_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _BYTE *v121;
  unint64_t v122;
  unint64_t v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  _OWORD *v127;
  _OWORD *v128;
  unint64_t v129;
  size_t v130;
  uint64_t v131;
  const void *v132;
  uint64_t v133;
  void *v134;
  void *v135;
  const void *v136;
  uint64_t v137;
  _QWORD *v138;
  _QWORD *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  void *v146;
  const void *v147;
  _QWORD *v148;
  _QWORD *v149;
  _QWORD *v150;
  _QWORD *v151;
  void *v152;
  _BYTE *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  __int128 v157;
  __int128 v158;
  _OWORD *v159;
  _OWORD *v160;
  unint64_t v161;
  unint64_t v162;
  uint64_t v163;
  unint64_t v164;
  unint64_t v165;
  uint64_t v166;
  unint64_t v167;
  unint64_t v168;
  uint64_t v169;
  _OWORD *v170;
  _OWORD *v171;
  unint64_t v172;
  unint64_t v173;
  __int128 v174;
  __int128 v175;
  _BYTE *v176;
  _BYTE *v177;
  unint64_t v178;
  _BYTE *v179;
  const void *v180;
  uint64_t v181;
  uint64_t v182;
  _BYTE *v183;
  unsigned int v184;
  _BYTE *v185;
  uint64_t v186;
  void *v187;
  const void *v188;
  size_t v189;
  int v190;
  int v191;
  int EnumTagSinglePayload;
  _QWORD *v193;
  _BYTE *v194;
  _BYTE *v195;
  void *v196;
  const void *v197;
  char v198;
  uint64_t v199;
  size_t v200;
  size_t v201;
  uint64_t v202;
  __int128 v203;
  __int128 v204;
  void *v205;
  const void *v206;
  size_t v207;
  __int128 v208;
  __int128 v209;
  _QWORD *v210;
  void *v211;
  const void *v212;
  __int128 v213;
  __int128 v214;
  void *v215;
  const void *v216;
  __int128 v217;
  __int128 v218;
  void *v219;
  const void *v220;
  _BYTE *v221;
  _BYTE *v222;
  void *v223;
  const void *v224;
  __int128 v225;
  __int128 v226;
  char *v227;
  const void *v228;
  size_t v229;
  __int128 v230;
  __int128 v231;
  _OWORD *v232;
  _OWORD *v233;
  _OWORD *v234;
  _OWORD *v235;
  void *v236;
  const void *v237;
  unint64_t v238;
  unint64_t v239;
  __int128 v240;
  __int128 v241;
  void *v242;
  const void *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  __int128 v248;
  __int128 v249;
  void *v250;
  const void *v251;
  __int128 v252;
  __int128 v253;
  void *v254;
  const void *v255;
  __int128 v256;
  __int128 v257;
  void *v258;
  const void *v259;
  uint64_t v260;
  __int128 v261;
  __int128 v262;
  void *v263;
  const void *v264;
  uint64_t v265;
  unint64_t v266;
  unint64_t v267;
  __int128 v268;
  __int128 v269;
  _OWORD *v270;
  _OWORD *v271;
  _QWORD *v272;
  _QWORD *v273;
  _OWORD *v274;
  _OWORD *v275;
  _OWORD *v276;
  _OWORD *v277;
  unint64_t v278;
  size_t v279;
  size_t v280;
  _OWORD *v281;
  unint64_t v282;
  int v283;
  size_t v284;
  _OWORD *v285;
  unint64_t v286;
  unint64_t v287;
  unint64_t v288;
  unint64_t v289;
  unint64_t v290;
  _OWORD *v291;
  _OWORD *v292;
  void *v293;
  _BYTE *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  unint64_t v298;
  unint64_t v299;
  __int128 v300;
  __int128 v301;
  _OWORD *v302;
  _OWORD *v303;
  void *v304;
  _BYTE *v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  _QWORD *v309;
  _QWORD *v310;
  unint64_t v311;
  _QWORD *v312;
  unint64_t v313;
  __int128 v314;
  __int128 v315;
  _OWORD *v316;
  _OWORD *v317;
  _OWORD *v318;
  _OWORD *v319;
  unint64_t v320;
  unint64_t v321;
  unint64_t v322;
  unint64_t v323;
  __int128 v324;
  __int128 v325;
  _BYTE *v326;
  _BYTE *v327;
  unint64_t v328;
  const void *v329;
  uint64_t v330;
  const void *v331;
  void *v332;
  char v333;
  size_t v334;
  unint64_t v335;
  unint64_t v336;
  __int128 v337;
  __int128 v338;
  void *v339;
  const void *v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  unint64_t v347;
  unint64_t v348;
  unint64_t v349;
  __int128 v350;
  __int128 v351;
  unint64_t v352;
  unint64_t v353;
  unint64_t v354;
  const void *v355;
  uint64_t v356;
  const void *v357;
  size_t v358;
  unint64_t v359;
  unint64_t v360;
  __int128 v361;
  __int128 v362;
  _OWORD *v363;
  _OWORD *v364;
  void *v365;
  const void *v366;
  unint64_t v367;
  unint64_t v368;
  _OWORD *v369;
  _OWORD *v370;
  unint64_t v371;
  unint64_t v372;
  __int128 v373;
  __int128 v374;
  _OWORD *v375;
  _OWORD *v376;
  unint64_t v377;
  size_t v378;
  _OWORD *v379;
  unint64_t v380;
  int v381;
  _OWORD *v382;
  unint64_t v383;
  unint64_t v384;
  unint64_t v385;
  unint64_t v386;
  unint64_t v387;
  _BYTE *v388;
  _BYTE *v389;
  unint64_t v390;
  const void *v391;
  uint64_t v392;
  const void *v393;
  void *v394;
  size_t v395;
  _OWORD *v396;
  _OWORD *v397;
  _OWORD *v398;
  _OWORD *v399;
  _OWORD *v400;
  _OWORD *v401;
  unint64_t v402;
  unint64_t v403;
  __int128 v404;
  __int128 v405;
  unint64_t v406;
  unint64_t v407;
  __int128 v408;
  __int128 v409;
  unint64_t v410;
  unint64_t v411;
  __int128 v412;
  __int128 v413;
  _OWORD *v414;
  _OWORD *v415;
  _OWORD *v416;
  _OWORD *v417;
  _OWORD *v418;
  _OWORD *v419;
  _OWORD *v420;
  _OWORD *v421;
  unint64_t v422;
  unint64_t v423;
  __int128 v424;
  __int128 v425;
  unint64_t v426;
  unint64_t v427;
  __int128 v428;
  __int128 v429;
  unint64_t v430;
  unint64_t v431;
  __int128 v432;
  __int128 v433;
  void *v434;
  _BYTE *v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  unint64_t v439;
  unint64_t v440;
  __int128 v441;
  __int128 v442;
  _OWORD *v443;
  _OWORD *v444;
  _OWORD *v445;
  _OWORD *v446;
  uint64_t v447;
  unint64_t v448;
  unint64_t v449;
  __int128 v450;
  __int128 v451;
  void *v452;
  const void *v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  unint64_t v458;
  unint64_t v459;
  unint64_t v460;
  __int128 v461;
  __int128 v462;
  unint64_t v463;
  unint64_t v464;
  unint64_t v465;
  unint64_t v466;
  __int128 v467;
  __int128 v468;
  _OWORD *v469;
  _OWORD *v470;
  _QWORD *v471;
  _QWORD *v472;
  _OWORD *v473;
  _OWORD *v474;
  _OWORD *v475;
  _OWORD *v476;
  unint64_t v477;
  size_t v478;
  size_t v479;
  _OWORD *v480;
  unint64_t v481;
  int v482;
  unint64_t v483;
  _OWORD *v484;
  unint64_t v485;
  unint64_t v486;
  unint64_t v487;
  unint64_t v488;
  unint64_t v489;
  void *v490;
  _BYTE *v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  unint64_t v495;
  unint64_t v496;
  __int128 v497;
  __int128 v498;
  _QWORD *v499;
  _QWORD *v500;
  char *v501;
  unint64_t v502;
  unint64_t v503;
  uint64_t v504;
  size_t v505;
  size_t v506;
  int v507;
  int v508;
  unint64_t v509;
  unint64_t v510;
  __int128 v511;
  __int128 v512;
  _BYTE *v513;
  _BYTE *v514;
  void *v515;
  const void *v516;
  unint64_t v517;
  unint64_t v518;
  __int128 v519;
  __int128 v520;
  _BYTE *v521;
  _BYTE *v522;
  void *v523;
  const void *v524;
  unint64_t v525;
  unint64_t v526;
  __int128 v527;
  __int128 v528;
  _OWORD *v529;
  _OWORD *v530;
  unint64_t v531;
  unint64_t v532;
  __int128 v533;
  __int128 v534;
  unint64_t v535;
  unint64_t v536;
  __int128 v537;
  __int128 v538;
  _QWORD *v539;
  _QWORD *v540;
  unint64_t v541;
  unint64_t v542;
  __int128 v543;
  __int128 v544;
  _OWORD *v545;
  _OWORD *v546;
  _OWORD *v547;
  _OWORD *v548;
  unint64_t v549;
  unint64_t v550;
  __int128 v551;
  __int128 v552;
  unint64_t v553;
  unint64_t v554;
  __int128 v555;
  __int128 v556;
  unint64_t v557;
  unint64_t v558;
  __int128 v559;
  __int128 v560;
  uint64_t v561;
  size_t v562;
  unint64_t v563;
  _QWORD *v564;
  _QWORD *v565;
  unint64_t v566;
  unint64_t v567;
  __int128 v568;
  __int128 v569;
  unint64_t v570;
  unint64_t v571;
  __int128 v572;
  __int128 v573;
  _OWORD *v574;
  _OWORD *v575;
  _OWORD *v576;
  _OWORD *v577;
  _OWORD *v578;
  _OWORD *v579;
  _OWORD *v580;
  _OWORD *v581;
  unint64_t v582;
  unint64_t v583;
  _QWORD *v584;
  _QWORD *v585;
  void *v586;
  _BYTE *v587;
  char v588;
  uint64_t v589;
  uint64_t v590;
  uint64_t v591;
  _OWORD *v592;
  _OWORD *v593;
  unint64_t v594;
  unint64_t v595;
  __int128 v596;
  __int128 v597;
  _QWORD *v598;
  _QWORD *v599;
  _OWORD *v600;
  _OWORD *v601;
  char *v602;
  char *v603;
  uint64_t v604;
  uint64_t v605;
  unint64_t v606;
  uint64_t v607;
  unint64_t v608;
  unint64_t v609;
  __int128 v610;
  __int128 v611;
  unint64_t v612;
  unint64_t v613;
  __int128 v614;
  __int128 v615;
  _OWORD *v616;
  _OWORD *v617;
  _OWORD *v618;
  _OWORD *v619;
  _QWORD *v620;
  _QWORD *v621;
  _OWORD *v622;
  _OWORD *v623;
  unint64_t v624;
  uint64_t v625;
  uint64_t v626;
  size_t v627;
  _OWORD *v628;
  unint64_t v629;
  int v630;
  _OWORD *v631;
  unint64_t v632;
  unint64_t v633;
  unint64_t v634;
  void *v635;
  _BYTE *v636;
  uint64_t v637;
  uint64_t v638;
  uint64_t v639;
  int v640;
  int v641;
  uint64_t v642;
  int v643;
  int v644;
  void *v645;
  _BYTE *v646;
  uint64_t v647;
  uint64_t v648;
  uint64_t v649;
  int v650;
  int v651;
  int v652;
  int v653;
  _OWORD *v654;
  _OWORD *v655;
  unint64_t v656;
  unint64_t v657;
  void *v658;
  _BYTE *v659;
  uint64_t v660;
  uint64_t v661;
  uint64_t v662;
  _OWORD *v663;
  _OWORD *v664;
  unint64_t v665;
  unint64_t v666;
  _OWORD *v667;
  _OWORD *v668;
  _OWORD *v669;
  _OWORD *v670;
  _OWORD *v671;
  _OWORD *v672;
  _OWORD *v673;
  _OWORD *v674;
  _QWORD *v675;
  _QWORD *v676;
  void *v677;
  _BYTE *v678;
  uint64_t v679;
  uint64_t v680;
  uint64_t v681;
  uint64_t v682;
  int v683;
  int v684;
  size_t v685;
  int v686;
  int v687;
  int v688;
  int v689;
  int v690;
  int v691;
  int v692;
  int v693;
  int v694;
  int v695;
  int v696;
  int v697;
  int v698;
  int v699;
  int v700;
  int v701;
  int v702;
  int v703;
  unint64_t v704;
  unint64_t v705;
  int v706;
  unsigned int v707;
  unint64_t v708;
  unint64_t v709;
  int v710;
  unsigned int v711;
  unint64_t v712;
  unint64_t v713;
  __int128 v714;
  __int128 v715;
  unint64_t v716;
  unint64_t v717;
  _BYTE *v718;
  _QWORD *v719;
  unint64_t v720;
  const void *v721;
  uint64_t v722;
  uint64_t v723;
  uint64_t v724;
  uint64_t v725;
  void *v726;
  const void *v727;
  size_t v728;
  void *v729;
  _BYTE *v730;
  uint64_t v731;
  uint64_t v732;
  uint64_t v733;
  int v734;
  int v735;
  int v736;
  _QWORD *v737;
  _QWORD *v738;
  _OWORD *v739;
  _OWORD *v740;
  unint64_t v741;
  unint64_t v742;
  __int128 v743;
  unsigned int v744;
  unint64_t v745;
  unint64_t v746;
  __int128 v747;
  __int128 v748;
  _OWORD *v749;
  _OWORD *v750;
  _OWORD *v751;
  _OWORD *v752;
  unint64_t v753;
  unint64_t v754;
  unint64_t v755;
  unint64_t v756;
  __int128 v757;
  __int128 v758;
  _BYTE *v759;
  _BYTE *v760;
  unint64_t v761;
  const void *v762;
  uint64_t v763;
  const void *v764;
  void *v765;
  uint64_t v766;
  size_t v767;
  void *v768;
  _BYTE *v769;
  uint64_t v770;
  uint64_t v771;
  uint64_t v772;
  uint64_t v773;
  int v774;
  int v775;
  int v776;
  unsigned int v777;
  size_t v778;
  unint64_t v779;
  unint64_t v780;
  __int128 v781;
  __int128 v782;
  _OWORD *v783;
  _OWORD *v784;
  _OWORD *v785;
  _OWORD *v786;
  unint64_t v787;
  unint64_t v788;
  __int128 v789;
  __int128 v790;
  unint64_t v791;
  unint64_t v792;
  __int128 v793;
  __int128 v794;
  _BYTE *v795;
  _BYTE *v796;
  unint64_t v797;
  const void *v798;
  uint64_t v799;
  uint64_t v800;
  const void *v801;
  void *v802;
  char v803;
  void *v804;
  _BYTE *v805;
  uint64_t v806;
  uint64_t v807;
  uint64_t v808;
  int v809;
  int v810;
  int v811;
  unint64_t v812;
  unint64_t v813;
  __int128 v814;
  __int128 v815;
  void *v816;
  const void *v817;
  _OWORD *v818;
  _OWORD *v819;
  _QWORD *v820;
  uint64_t *v821;
  size_t v822;
  uint64_t v823;
  int v824;
  _BYTE *v825;
  _BYTE *v826;
  unint64_t v827;
  const void *v828;
  uint64_t v829;
  const void *v830;
  void *v831;
  unint64_t v832;
  unint64_t v833;
  unint64_t v834;
  uint64_t v835;
  unint64_t v836;
  unint64_t v837;
  unint64_t v838;
  __int128 v839;
  __int128 v840;
  unint64_t v841;
  unint64_t v842;
  __int128 v843;
  __int128 v844;
  unint64_t v845;
  unint64_t v846;
  unint64_t v847;
  unint64_t v848;
  unint64_t v849;
  unint64_t v850;
  __int128 v851;
  __int128 v852;
  unint64_t v853;
  unint64_t v854;
  __int128 v855;
  __int128 v856;
  char *v857;
  char *v858;
  unsigned int v859;
  size_t v860;
  uint64_t v861;
  unint64_t v862;
  unint64_t v863;
  uint64_t v864;
  uint64_t v865;
  unint64_t v866;
  unint64_t v867;
  unint64_t v868;
  unint64_t v869;
  unint64_t v870;
  unint64_t v871;
  unint64_t v872;
  unint64_t v873;
  unint64_t v874;
  unint64_t v875;
  unint64_t v876;
  unint64_t v877;
  unint64_t v878;
  unint64_t v879;
  unint64_t v880;
  __int128 v881;
  __int128 v882;
  unint64_t v883;
  unint64_t v884;
  __int128 v885;
  __int128 v886;
  unint64_t v887;
  char *v888;
  uint64_t v889;
  uint64_t v890;
  unint64_t v891;
  unint64_t v892;
  uint64_t v893;
  __int128 v894;
  _BYTE *v895;
  _QWORD *v896;
  unint64_t v897;
  const void *v898;
  uint64_t v899;
  uint64_t v900;
  const void *v901;
  void *v902;
  char v903;
  size_t v904;
  void *v905;
  _BYTE *v906;
  uint64_t v907;
  uint64_t v908;
  uint64_t v909;
  int v910;
  int v911;
  int v912;
  char *v913;
  void *v914;
  _BYTE *v915;
  uint64_t v916;
  uint64_t v917;
  uint64_t v918;
  size_t v919;
  int v920;
  int v921;
  int v922;
  unint64_t v923;
  unint64_t v924;
  __int128 v925;
  __int128 v926;
  _QWORD *v927;
  uint64_t *v928;
  size_t v929;
  uint64_t v930;
  int v931;
  _QWORD *v932;
  uint64_t *v933;
  size_t v934;
  uint64_t v935;
  int v936;
  _BYTE *v937;
  _BYTE *v938;
  unint64_t v939;
  uint64_t v940;
  const void *v941;
  uint64_t v942;
  uint64_t v943;
  uint64_t v944;
  void *v945;
  const void *v946;
  size_t v947;
  void *v948;
  _BYTE *v949;
  uint64_t v950;
  uint64_t v951;
  uint64_t v952;
  int v953;
  int v954;
  int v955;
  _QWORD *v956;
  uint64_t *v957;
  size_t v958;
  uint64_t v959;
  int v960;
  _BYTE *v961;
  _BYTE *v962;
  unint64_t v963;
  const void *v964;
  uint64_t v965;
  const void *v966;
  void *v967;
  unint64_t v968;
  unint64_t v969;
  unint64_t v970;
  uint64_t v971;
  unint64_t v972;
  unint64_t v973;
  unint64_t v974;
  __int128 v975;
  __int128 v976;
  unint64_t v977;
  unint64_t v978;
  __int128 v979;
  __int128 v980;
  unint64_t v981;
  unint64_t v982;
  unint64_t v983;
  unint64_t v984;
  unint64_t v985;
  unint64_t v986;
  __int128 v987;
  __int128 v988;
  unint64_t v989;
  unint64_t v990;
  __int128 v991;
  __int128 v992;
  char *v993;
  char *v994;
  unsigned int v995;
  uint64_t v996;
  size_t v997;
  uint64_t v998;
  unint64_t v999;
  unint64_t v1000;
  uint64_t v1001;
  uint64_t v1002;
  unint64_t v1003;
  unint64_t v1004;
  unint64_t v1005;
  unint64_t v1006;
  unint64_t v1007;
  unint64_t v1008;
  unint64_t v1009;
  unint64_t v1010;
  unint64_t v1011;
  unint64_t v1012;
  unint64_t v1013;
  unint64_t v1014;
  unint64_t v1015;
  unint64_t v1016;
  unint64_t v1017;
  __int128 v1018;
  __int128 v1019;
  unint64_t v1020;
  unint64_t v1021;
  __int128 v1022;
  __int128 v1023;
  unint64_t v1024;
  void *v1025;
  _BYTE *v1026;
  uint64_t v1027;
  uint64_t v1028;
  uint64_t v1029;
  int v1030;
  int v1031;
  int v1032;
  _OWORD *v1033;
  _OWORD *v1034;
  unint64_t v1035;
  unint64_t v1036;
  void *v1037;
  _BYTE *v1038;
  uint64_t v1039;
  uint64_t v1040;
  uint64_t v1041;
  int v1042;
  int v1043;
  int v1044;
  _QWORD *v1045;
  uint64_t *v1046;
  size_t v1047;
  uint64_t v1048;
  int v1049;
  _QWORD *v1050;
  uint64_t *v1051;
  uint64_t v1052;
  int v1053;
  size_t v1054;
  _BYTE *v1055;
  _OWORD *v1056;
  _OWORD *v1057;
  unint64_t v1058;
  unint64_t v1059;
  __int128 v1060;
  unint64_t v1061;
  unint64_t v1062;
  __int128 v1063;
  __int128 v1064;
  unint64_t v1065;
  unint64_t v1066;
  unint64_t v1067;
  const void *v1068;
  uint64_t v1069;
  const void *v1070;
  void *v1071;
  size_t v1072;
  _OWORD *v1073;
  _OWORD *v1074;
  void *v1075;
  _BYTE *v1076;
  uint64_t v1077;
  uint64_t v1078;
  uint64_t v1079;
  int v1080;
  int v1081;
  int v1082;
  _BYTE *v1083;
  _BYTE *v1084;
  unint64_t v1085;
  const void *v1086;
  uint64_t v1087;
  uint64_t v1088;
  uint64_t v1089;
  void *v1090;
  const void *v1091;
  size_t v1092;
  unint64_t v1093;
  unint64_t v1094;
  __int128 v1095;
  __int128 v1096;
  _BYTE *v1097;
  unsigned __int8 *v1098;
  unsigned int v1099;
  uint64_t v1100;
  _OWORD *v1101;
  __int128 *v1102;
  unsigned int v1103;
  uint64_t v1104;
  __int128 v1105;
  __int128 v1106;
  void *v1107;
  const void *v1108;
  uint64_t v1109;
  const void *v1110;
  _QWORD *v1111;
  _QWORD *v1112;
  _QWORD *v1113;
  _QWORD *v1114;
  void *v1115;
  _BYTE *v1116;
  uint64_t v1117;
  uint64_t v1118;
  uint64_t v1119;
  __int128 v1120;
  __int128 v1121;
  _OWORD *v1122;
  _OWORD *v1123;
  unint64_t v1124;
  unint64_t v1125;
  uint64_t v1126;
  unint64_t v1127;
  unint64_t v1128;
  uint64_t v1129;
  unint64_t v1130;
  unint64_t v1131;
  uint64_t v1132;
  _OWORD *v1133;
  _OWORD *v1134;
  unint64_t v1135;
  unint64_t v1136;
  __int128 v1137;
  __int128 v1138;
  _BYTE *v1139;
  _BYTE *v1140;
  unint64_t v1141;
  const void *v1142;
  const void *v1143;
  void *v1144;
  int v1145;
  int v1146;
  int v1147;
  _QWORD *v1148;
  _QWORD *v1149;
  _BYTE *v1150;
  _BYTE *v1151;
  unint64_t v1152;
  const void *v1153;
  uint64_t v1154;
  uint64_t v1155;
  uint64_t v1156;
  void *v1157;
  const void *v1158;
  size_t v1159;
  char v1160;
  _QWORD *v1161;
  _QWORD *v1162;
  _BYTE *v1163;
  unsigned __int8 *v1164;
  unsigned int v1165;
  _OWORD *v1166;
  __int128 *v1167;
  unsigned int v1168;
  __int128 v1169;
  __int128 v1170;
  void *v1171;
  const void *v1172;
  size_t v1173;
  _OWORD *result;
  const void *v1175;
  _QWORD *v1176;
  _QWORD *v1177;
  _QWORD *v1178;
  _QWORD *v1179;
  void *v1180;
  _BYTE *v1181;
  uint64_t v1182;
  uint64_t v1183;
  uint64_t v1184;
  uint64_t v1185;
  __int128 v1186;
  __int128 v1187;
  _OWORD *v1188;
  _OWORD *v1189;
  unint64_t v1190;
  unint64_t v1191;
  uint64_t v1192;
  unint64_t v1193;
  unint64_t v1194;
  uint64_t v1195;
  unint64_t v1196;
  unint64_t v1197;
  uint64_t v1198;
  _OWORD *v1199;
  _OWORD *v1200;
  unint64_t v1201;
  unint64_t v1202;
  __int128 v1203;
  __int128 v1204;
  _BYTE *v1205;
  _BYTE *v1206;
  unint64_t v1207;
  const void *v1208;
  uint64_t v1209;
  uint64_t v1210;
  void *v1211;
  const void *v1212;
  size_t v1213;
  char v1214;
  int v1215;
  int v1216;
  int v1217;
  unint64_t v1218;
  size_t v1219;
  unint64_t v1220;
  unint64_t v1221;
  unint64_t v1222;
  unint64_t v1223;
  unint64_t v1224;
  unint64_t v1225;
  unsigned int v1226;
  uint64_t v1227;
  char v1228;
  uint64_t v1229;
  uint64_t v1230;
  size_t v1231;
  size_t v1232;
  int v1233;
  size_t v1234;
  uint64_t v1235;
  uint64_t v1236;
  uint64_t v1237;
  uint64_t v1238;
  uint64_t v1239;
  uint64_t v1240;
  uint64_t v1241;
  size_t v1242;
  uint64_t v1243;
  uint64_t v1244;
  uint64_t v1245;
  size_t v1246;
  size_t v1247;
  uint64_t v1248;
  uint64_t v1249;
  unint64_t v1250;
  uint64_t v1251;
  uint64_t v1252;
  unsigned int v1253;
  size_t v1254;
  unint64_t v1255;
  unint64_t v1256;
  unint64_t v1257;
  unint64_t v1258;
  unint64_t v1259;
  size_t v1260;
  unint64_t v1261;
  unint64_t v1262;
  unint64_t v1263;
  unint64_t v1264;
  unint64_t v1265;
  unint64_t v1266;
  unint64_t v1267;
  unint64_t v1268;
  unint64_t v1269;
  unint64_t v1270;
  unint64_t v1271;
  unint64_t v1272;
  unint64_t v1273;
  unint64_t v1274;
  unint64_t v1275;
  unint64_t v1276;
  uint64_t v1277;
  uint64_t v1278;
  uint64_t v1279;
  uint64_t v1280;
  uint64_t v1281;
  unint64_t v1282;
  unsigned int v1283;
  unsigned int v1284;
  uint64_t v1285;
  uint64_t v1286;
  uint64_t v1287;
  size_t __n;
  unsigned int v1289;
  size_t v1290;
  unsigned int v1291;
  uint64_t v1292;
  uint64_t v1293;
  uint64_t v1294;
  uint64_t v1295;
  uint64_t v1296;
  unsigned int v1297;
  uint64_t v1298;
  uint64_t v1299;
  uint64_t v1300;
  uint64_t v1301;
  unint64_t v1302;
  uint64_t v1303;
  uint64_t v1304;
  uint64_t v1305;
  uint64_t v1306;
  uint64_t v1307;
  uint64_t v1308;
  uint64_t v1309;
  uint64_t v1310;
  uint64_t v1311;
  uint64_t v1312;
  unsigned int v1313;
  uint64_t v1314;
  size_t v1315;
  size_t v1316;
  size_t v1317;
  size_t v1318;
  size_t v1319;
  uint64_t v1320;
  uint64_t v1321;
  uint64_t v1322;
  unint64_t v1323;
  uint64_t v1324;
  unint64_t v1325;
  unint64_t v1326;
  size_t v1327;
  unint64_t v1328;
  uint64_t v1329;
  uint64_t v1330;
  uint64_t v1331;
  unint64_t v1332;
  uint64_t v1333;
  size_t v1334;
  uint64_t v1335;
  unint64_t v1336;
  unint64_t v1337;
  unint64_t v1338;
  unint64_t v1339;
  unint64_t v1340;
  size_t v1341;
  int v1342;
  size_t v1343;
  uint64_t v1344;
  size_t v1345;
  size_t v1346;
  uint64_t v1347;
  size_t v1348;
  unsigned int v1349;
  size_t v1350;
  uint64_t v1351;
  unsigned int v1352;
  size_t v1353;
  uint64_t v1355;
  uint64_t v1356;
  size_t v1358;
  uint64_t v1359;
  uint64_t v1360;
  uint64_t v1361;
  uint64_t v1362;
  _QWORD *v1363;
  _QWORD *v1364;
  _QWORD *v1365;
  unint64_t v1366;
  uint64_t v1367;
  size_t v1368;
  size_t v1369;
  unint64_t v1370;
  unint64_t v1371;
  unint64_t v1372;
  void *v1373;
  uint64_t v1374;
  uint64_t v1375;
  uint64_t v1376;
  size_t v1377;
  size_t v1378;

  v1310 = *(_QWORD *)(a3 + 16);
  v1308 = *(_QWORD *)(v1310 - 8);
  v1332 = *(_QWORD *)(v1308 + 64);
  v1321 = sub_21D7C4668();
  v3 = *(_QWORD *)(v1321 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v1335 = v4 + 16;
  v1349 = *(_DWORD *)(v3 + 84);
  v1299 = v3;
  v5 = *(_QWORD *)(v3 + 64);
  v1315 = v5;
  if (v1349)
    v6 = v5;
  else
    v6 = v5 + 1;
  v1378 = v6;
  v1355 = v4 | 7;
  v1294 = sub_21D7BF754();
  v7 = *(_QWORD *)(v1294 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = v8 | 7;
  v1292 = sub_21D7C3840();
  v10 = *(_QWORD *)(v1292 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v1296 = sub_21D7C3804();
  v12 = *(_QWORD *)(v1296 - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v14 = v13;
  v15 = v13 | v11;
  v16 = v4 | 7 | v8 | v15;
  v1360 = v4;
  v1351 = v4 + 40;
  v17 = *(_DWORD *)(v7 + 84);
  if (v17)
    v18 = v17 - 1;
  else
    v18 = 0;
  v1291 = v18;
  if (v18 <= 0x7FFFFFFE)
    v19 = 2147483646;
  else
    v19 = v18;
  v1342 = v19;
  v1297 = *(_DWORD *)(v12 + 84);
  v1289 = *(_DWORD *)(v10 + 84);
  if (v1297 <= v1289)
    v20 = *(_DWORD *)(v10 + 84);
  else
    v20 = *(_DWORD *)(v12 + 84);
  v1352 = v20;
  v1283 = *(_DWORD *)(v7 + 84);
  v1295 = v8 + 113;
  v1359 = v8;
  v1279 = v7;
  v1286 = v10;
  v1293 = *(_QWORD *)(v10 + 64) + v13;
  v1287 = *(_QWORD *)(v1296 - 8);
  v1347 = *(_QWORD *)(v12 + 64);
  if (v17)
    v21 = *(_QWORD *)(v7 + 64);
  else
    v21 = *(_QWORD *)(v7 + 64) + 1;
  v1345 = v21;
  v1298 = v16 + 1;
  v1370 = ((v4 + 40) & ~v4) + v6;
  v1366 = (v1370 + 7) & 0xFFFFFFFFFFFFFFF8;
  v1374 = v8 + 40;
  v1350 = v21 + ((v8 + 113) & ~v8);
  v22 = v1350 + ((v8 + 40 + ((((v1366 + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v9);
  v1320 = (v1293 & ~(unint64_t)v13) + v1347;
  if (v20)
    v23 = (v1293 & ~(unint64_t)v13) + v1347;
  else
    v23 = (v1293 & ~(unint64_t)v13) + v1347 + 1;
  v1377 = v23;
  v1340 = v23 + 1;
  v24 = v23 + 1 + ((v15 + 160) & ~v15);
  if (v22 <= v24)
    v22 = v24;
  if (v22 <= 0x30)
    v22 = 48;
  v1302 = v22;
  __n = v22 + 1;
  v1358 = v22 + 1 + ((v16 + 1) & ~v16);
  v1301 = sub_21D7C3F6C();
  v25 = *(_QWORD *)(v1301 - 8);
  v26 = *(unsigned __int8 *)(v25 + 80);
  v1312 = (v26 | 7) + 58;
  v1304 = v26 | 7;
  v27 = (v1312 + ((((v16 + v6 + ((v4 + 16) & ~v4)) & ~v16) + v1358 + 11) & 0xFFFFFFFFFFFFFFF8)) & ~(v26 | 7);
  v1313 = *(_DWORD *)(v25 + 84);
  v1300 = v26 + 16;
  v1303 = v26;
  v1285 = v25;
  v28 = *(_QWORD *)(v25 + 64);
  if (!v1313)
    ++v28;
  v1290 = v28;
  v29 = ((v26 + 16) & ~v26) + v28;
  v1277 = sub_21D7C4314();
  v30 = *(_QWORD *)(v1277 - 8);
  v31 = *(_DWORD *)(v30 + 80);
  v1331 = v30;
  v32 = v14 | 7;
  v1249 = sub_21D7BF964();
  v33 = *(_QWORD *)(v1249 - 8);
  v34 = *(unsigned __int8 *)(v33 + 80);
  v1362 = v16 | v14 | v31 | v34;
  v1316 = v29;
  v1336 = v27 + v29 + v1362;
  v1361 = v31;
  v1371 = v31 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v1372 = *(_QWORD *)(v30 + 64) + ((v31 + 65) & ~(unint64_t)v31);
  v1353 = v1378 + 7;
  v35 = (((v1378 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  v1280 = v31 + 16;
  v1338 = (v1372 + ((v1280 + ((v36 + 15) & 0xFFFFFFFFFFFFFFF8)) & v1371)) & 0xFFFFFFFFFFFFFFF8;
  v1344 = v15 + 16;
  v1306 = v14;
  v1278 = v14 + 8;
  v37 = v1347 + ((v14 + 8) & ~v14);
  if (v1349)
    v38 = v1349 - 1;
  else
    v38 = 0;
  v39 = v35 + 16;
  v40 = (((v1378 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
  v41 = v1340 + v34 + ((v35 + 16 + v15) & ~v15);
  v1284 = v38;
  v1233 = v1342 - 1;
  if (v38 <= v1342 - 1)
    v42 = v1342 - 1;
  else
    v42 = v38;
  if (v42 <= 0x7FFFFFFF)
    v42 = 0x7FFFFFFF;
  v43 = v1352 - 1;
  if (!v1352)
    v43 = 0;
  if (v43 <= v42)
    v44 = v42;
  else
    v44 = v43;
  v1253 = v44;
  v45 = (v1366 + 23) & 0xFFFFFFFFFFFFFFF8;
  v1328 = (((v1378 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
  v1343 = v40 + 17;
  v1236 = v9 + 23;
  v1346 = v1347 + ((v14 + 8) & ~v14);
  v46 = v37 + v9;
  v1341 = v1350 + v1355;
  v1326 = (v40 + 47) & 0xFFFFFFFFFFFFFFF8;
  v1282 = v1326 + 16;
  v47 = v1326 + 16 + v1355;
  v48 = v1326
      + 24
      + ((v47
        + ((v47
          + ((v1350
            + v1355
            + ((v37 + v9 + ((v1377 + v32 + ((v15 + 16 + ((v1338 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & ~v32)) & ~v9)) & ~v1355)) & ~v1355)) & ~v1355);
  v1314 = *(unsigned __int8 *)(v33 + 80);
  v1248 = *(_QWORD *)(v1249 - 8);
  v1245 = *(_QWORD *)(v33 + 64) + 7;
  v49 = v1377 + v32;
  v1348 = v1377 + v32;
  v1356 = v14 | 7;
  v50 = ((v1377 + v32 + ((v1350 + v15 + ((v1374 + ((v1245 + (v41 & ~v34)) & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & ~v15)) & ~v32)
      + v37;
  v1252 = v9 + 41;
  v51 = v1377 + 7;
  v52 = ((((v1377 + 7 + ((v1350 + v15 + ((v9 + 41 + ((v36 + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & ~v15)) & 0xFFFFFFFFFFFFFFF8)
        + 47) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v53 = ((v1378 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
  v54 = (v16 + v53) & ~v16;
  v1250 = v52 + v16;
  v1234 = v1358 + 7;
  v1235 = v16 + 8;
  v1322 = v16;
  v55 = ((v16 + 8 + ((v1358 + 7 + ((v52 + v16 + v54) & ~v16)) & 0xFFFFFFFFFFFFFFF8)) & ~v16) + v1358;
  v1334 = v1350 + 7;
  v56 = (v1350 + 7 + ((v53 + v8) & ~v9)) & 0xFFFFFFFFFFFFFFF8;
  v1242 = v1345 + v15;
  v57 = v1377 + v15;
  v58 = ((v46 + ((v49 + ((v1377 + v15 + ((v1345 + v15 + ((v39 + v8) & ~v8)) & ~v15) + 1) & ~v15)) & ~(v14 | 7))) & ~v9)
      + v1350;
  v59 = ((v1372 + 7 + ((v53 + v31) & v1371)) & 0xFFFFFFFFFFFFFFF8) + 8;
  v1238 = v9 + 17;
  v60 = v1350 + ((v9 + 17 + v1366) & ~v9);
  v1260 = v1350 + ((v1359 + 8) & ~v9);
  if (v1260 <= v48)
    v61 = v48;
  else
    v61 = v1350 + ((v1359 + 8) & ~v9);
  v1272 = v55;
  v1273 = v50;
  if (v61 <= v50)
    v61 = v50;
  v1275 = v59;
  v1276 = ((((v1377 + 7 + ((v1350 + v15 + ((v9 + 41 + ((v36 + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & ~v15)) & 0xFFFFFFFFFFFFFFF8)
          + 47) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  if (v61 <= v52)
    v61 = ((((v1377 + 7 + ((v1350 + v15 + ((v9 + 41 + ((v36 + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & ~v15)) & 0xFFFFFFFFFFFFFFF8)
          + 47) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  if (v61 <= v55)
    v61 = v55;
  v1270 = v58;
  v1271 = ((((((v56 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v61 <= v1271)
    v61 = ((((((v56 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v61 <= v58)
    v61 = v58;
  v1274 = (((((v1370 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v61 <= v1274)
    v61 = (((((v1370 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v61 <= v59)
    v61 = v59;
  v1265 = v60 + 1;
  if (v61 <= v60 + 1)
    v62 = v60 + 1;
  else
    v62 = v61;
  v1323 = v1336 & ~v1362;
  v63 = (((v45 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v64 = ((((v63 + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 41;
  v1240 = v15 + 40;
  v65 = ((v57
        + ((v15
          + 40
          + ((((((v63 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & ~v15)
      + v1377;
  v66 = (((((((v1378 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v67 = v66 + 8;
  v1337 = ((v66 + 47) & 0xFFFFFFFFFFFFFFF8) + 40;
  v1231 = v1350 + v15;
  v1232 = ((v1350 + v15 + ((v1337 + v9) & ~v9)) & ~v15) + v1377;
  v1247 = v1232 + 7;
  v1251 = v1359 + 8;
  v68 = ((v1359 + 8 + ((v1232 + 7 + v54) & 0xFFFFFFFFFFFFFFF8)) & ~v9) + v1350;
  v1243 = v15 + 24;
  v1281 = v46;
  v1268 = v1326 + 16 + v1355;
  v1269 = v1326 + 24;
  v1339 = v1326
        + 24
        + ((v47
          + ((v47 + ((v1341 + ((v46 + ((v1348 + ((v15 + 24 + v1338) & ~v15)) & ~v1356)) & ~v9)) & ~v1355)) & ~v1355)) & ~v1355);
  v69 = (v1328 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = v1360;
  v71 = ((v70 + 80) & ~v70) + v1378;
  v72 = ((v70 + 56) & ~v70) + v1378;
  v73 = ((((v1353 + ((v1351 + (v51 & 0xFFFFFFFFFFFFFFF8)) & ~v1360)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v74 = (v56 + 23) & 0xFFFFFFFFFFFFFFF8;
  v1239 = v15 + 18;
  v75 = ((v15 + 18 + v74) & ~v15) + v1377;
  v76 = ((v51
        + ((v15
          + 8
          + ((((((((((v74 + 25) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v77 = v69 + 16;
  v78 = v69 + 8;
  v79 = v1328 + 8;
  v80 = v1366 + 8;
  v81 = ((v1366 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  v82 = (((v1326 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v1329 = v15 + 8;
  v1254 = v1377 + v15;
  v1246 = v1346 + v1356;
  v83 = ((v1334
        + ((v1374
          + ((((v1346
              + ((v1346
                + v1356
                + ((v1348
                  + ((v57 + ((v15 + 8 + ((((v82 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & ~v15)) & ~v1356)) & ~v1356)
              + 9) & 0xFFFFFFFFFFFFFFF8)
            + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v84 = ((v9 + 23 + v40 + 17 + ((v1335 + ((((v45 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v1355)) & ~v9)
      + v1350;
  v1237 = v1361 + 8;
  v1241 = v1372 + v15;
  v1244 = v15 + 9;
  v1327 = v1377 + 7;
  v85 = v1344
      + ((v51
        + ((v15
          + 9
          + ((((v51 + ((v1372 + v15 + ((v1361 + 8 + v82) & v1371)) & ~v15)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & 0xFFFFFFFFFFFFFFF8);
  v1367 = v15;
  v86 = v1377 + v9;
  v1330 = v9;
  v87 = (v1377 + v9 + (v85 & ~v15)) & ~v9;
  v88 = a2;
  v89 = v87 + v1350;
  v90 = v62;
  v1263 = v65;
  v1264 = v64;
  if (v62 <= v64)
    v90 = v64;
  if (v90 <= v65)
    v90 = v65;
  v1266 = v68;
  v1267 = v67;
  if (v90 <= v67)
    v90 = v67;
  if (v90 <= v68)
    v90 = v68;
  if (v90 <= v1343)
    v90 = v40 + 17;
  if (v90 <= v1339)
    v90 = v1339;
  if (v90 <= v77)
    v90 = v77;
  v1325 = ((v1370 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
  if (v90 <= v1325)
    v90 = ((v1370 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
  v1261 = v71;
  v1262 = v76;
  if (v90 <= v71)
    v90 = v71;
  v1255 = v72;
  v1256 = v73;
  if (v90 <= v72)
    v90 = v72;
  if (v90 <= v73)
    v90 = v73;
  v1257 = v75;
  if (v90 <= v75)
    v90 = v75;
  if (v90 <= v76)
    v90 = v76;
  if (v90 <= ((((((v1378 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 40)
    v90 = ((((((v1378 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 40;
  v1258 = v78;
  v1259 = v79;
  if (v90 <= v78)
    v90 = v78;
  if (v90 <= v1337)
    v90 = v1337;
  if (v90 <= v79)
    v90 = v79;
  if (v90 <= v80)
    v90 = v80;
  if (v90 <= v81)
    v90 = v81;
  if (v90 <= v1370)
    v90 = v1370;
  if (v90 <= v83)
    v90 = v83;
  if (v90 <= v84)
    v90 = v84;
  if (v90 <= v89)
    v90 = v89;
  if (v90 <= 8)
    v91 = 8;
  else
    v91 = v90;
  v92 = ((v91 + 8 + v1323) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v92 <= v1332)
    v92 = v1332;
  if (v92 <= 8)
    v93 = 8;
  else
    v93 = v92;
  if (*((unsigned __int8 *)a2 + v93) >= 4u)
  {
    if (v93 <= 3)
      v94 = v93;
    else
      v94 = 4;
    __asm { BR              X12 }
  }
  switch(*((_BYTE *)a2 + v93))
  {
    case 0:
      v95 = a1;
      (*(void (**)(_OWORD *, _OWORD *, uint64_t, _QWORD))(v1308 + 32))(a1, a2, v1310, *(unsigned int *)(v1331 + 84));
      *((_BYTE *)a1 + v93) = 0;
      goto LABEL_1319;
    case 1:
      v1226 = *(_DWORD *)(v1331 + 84);
      v1219 = v86;
      v1220 = v89;
      v1223 = v77;
      v1224 = v80;
      v1225 = v83;
      v1221 = v81;
      v1222 = v84;
      v1333 = v91;
      v1324 = v91 + 8;
      v96 = ~v1360;
      v97 = ~v1322;
      *a1 = *a2;
      v98 = (void *)(((unint64_t)a1 + v1360 + 16) & ~v1360);
      v99 = (char *)(((unint64_t)a2 + v1360 + 16) & ~v1360);
      if (__swift_getEnumTagSinglePayload((uint64_t)v99, 1, v1321))
      {
        v100 = v1378;
        memcpy(v98, v99, v1378);
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v1299 + 32))(v98, v99, v1321);
        __swift_storeEnumTagSinglePayload((uint64_t)v98, 0, 1, v1321);
        v100 = v1378;
      }
      v1230 = ~v1330;
      v102 = ~v1359;
      v1309 = ~v15;
      v1307 = ~v1306;
      v103 = ~v1304;
      v104 = &v99[v100];
      v105 = (_BYTE *)(((unint64_t)v98 + v100 + v1322) & v97);
      v106 = (unsigned __int8 *)((unint64_t)&v104[v1322] & v97);
      v107 = *v106;
      v1228 = 8 * v1320;
      v1311 = v93;
      v1305 = ~v1359;
      v1227 = ~v1322;
      v1229 = ~v1360;
      if (v107 > 2)
      {
        v108 = v105;
        v116 = (const void *)((unint64_t)&v104[v1322] & v97);
        v111 = v1358;
        v117 = v1358;
LABEL_134:
        memcpy(v108, v116, v117);
LABEL_135:
        v118 = v1303;
        goto LABEL_136;
      }
      *v105 = v107;
      v108 = (_OWORD *)((unint64_t)&v105[v1298] & v97);
      v109 = (__int128 *)((unint64_t)&v106[v1298] & v97);
      v110 = *((unsigned __int8 *)v109 + v1302);
      v111 = v1358;
      if (v110 > 2)
      {
        v116 = (const void *)((unint64_t)&v106[v1298] & v97);
        v117 = __n;
        goto LABEL_134;
      }
      if (v110 == 2)
      {
        memcpy(v108, (const void *)((unint64_t)&v106[v1298] & v97), 0x48uLL);
        v145 = (unint64_t)&v105[v1298] & v97;
        v146 = (void *)((v145 + 79) & 0xFFFFFFFFFFFFFFF8);
        v147 = (const void *)(((unint64_t)v109 + 79) & 0xFFFFFFFFFFFFFFF8);
        memcpy(v146, v147, 0x48uLL);
        v148 = (_QWORD *)(((unint64_t)v146 + 79) & 0xFFFFFFFFFFFFF8);
        v149 = (_QWORD *)(((unint64_t)v147 + 79) & 0xFFFFFFFFFFFFF8);
        *v148 = *v149;
        v150 = (_QWORD *)(((unint64_t)v148 + 15) & 0xFFFFFFFFFFFFFFF8);
        v151 = (_QWORD *)(((unint64_t)v149 + 15) & 0xFFFFFFFFFFFFFFF8);
        *v150 = *v151;
        v152 = (void *)(((unint64_t)v150 + v1329) & v1309);
        v153 = (_BYTE *)(((unint64_t)v151 + v1329) & v1309);
        if (v1352)
        {
          v154 = v1297;
          if (v1289 >= v1297)
          {
            v155 = ((unint64_t)v151 + v1329) & v1309;
            v154 = v1289;
            v156 = v1292;
          }
          else
          {
            v155 = (unint64_t)&v153[v1293] & v1307;
            v156 = v1296;
          }
          EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v155, v154, v156);
        }
        else
        {
          if (!v153[v1320])
            goto LABEL_668;
          v190 = (v153[v1320] - 1) << v1228;
          if (v1320 > 3)
            v190 = 0;
          if ((_DWORD)v1320)
          {
            if (v1320 <= 3)
              v191 = v1320;
            else
              v191 = 4;
            __asm { BR              X11 }
          }
          EnumTagSinglePayload = v190 + 1;
        }
        if (EnumTagSinglePayload)
        {
          memcpy(v152, v153, v1377);
LABEL_670:
          *((_BYTE *)v152 + v1377) = v153[v1377];
          *(_BYTE *)(v145 + v1302) = 2;
          goto LABEL_135;
        }
LABEL_668:
        (*(void (**)(void *, _BYTE *, uint64_t))(v1286 + 32))(v152, v153, v1292);
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v1287 + 32))(((unint64_t)v152 + v1293) & v1307, (unint64_t)&v153[v1293] & v1307, v1296);
        if (!v1352)
          *((_BYTE *)v152 + v1320) = 0;
        goto LABEL_670;
      }
      if (v110 != 1)
      {
        v157 = *v109;
        v158 = *(_OWORD *)(((unint64_t)&v106[v1298] & v97) + 0x20);
        *(_OWORD *)(((unint64_t)&v105[v1298] & v97) + 0x10) = *(_OWORD *)(((unint64_t)&v106[v1298] & v97)
                                                                               + 0x10);
        *(_OWORD *)(((unint64_t)&v105[v1298] & v97) + 0x20) = v158;
        *v108 = v157;
        *((_BYTE *)v108 + v1302) = 0;
        goto LABEL_135;
      }
      v112 = *v109;
      v113 = *(_OWORD *)(((unint64_t)&v106[v1298] & v97) + 0x10);
      *(_QWORD *)(((unint64_t)&v105[v1298] & v97) + 0x20) = *(_QWORD *)(((unint64_t)&v106[v1298] & v97)
                                                                             + 0x20);
      *v108 = v112;
      *(_OWORD *)(((unint64_t)&v105[v1298] & v97) + 0x10) = v113;
      v1218 = (unint64_t)&v105[v1298] & v97;
      v114 = (void *)(((unint64_t)v108 + v1351) & v96);
      v115 = (const void *)(((unint64_t)v109 + v1351) & v96);
      if (__swift_getEnumTagSinglePayload((uint64_t)v115, 1, v1321))
      {
        memcpy(v114, v115, v1378);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v1299 + 32))(v114, v115, v1321);
        __swift_storeEnumTagSinglePayload((uint64_t)v114, 0, 1, v1321);
      }
      v159 = (_OWORD *)(((unint64_t)v114 + v1353) & 0xFFFFFFFFFFFFFFF8);
      v160 = (_OWORD *)(((unint64_t)v115 + v1353) & 0xFFFFFFFFFFFFFFF8);
      *v159 = *v160;
      v161 = ((unint64_t)v159 + 23) & 0xFFFFFFFFFFFFFFF8;
      v162 = ((unint64_t)v160 + 23) & 0xFFFFFFFFFFFFFFF8;
      v163 = *(_QWORD *)v162;
      *(_BYTE *)(v161 + 8) = *(_BYTE *)(v162 + 8);
      *(_QWORD *)v161 = v163;
      v164 = ((unint64_t)v159 + 39) & 0xFFFFFFFFFFFFFFF8;
      v165 = ((unint64_t)v160 + 39) & 0xFFFFFFFFFFFFFFF8;
      v166 = *(_QWORD *)v165;
      *(_BYTE *)(v164 + 8) = *(_BYTE *)(v165 + 8);
      *(_QWORD *)v164 = v166;
      v167 = ((unint64_t)v159 + 55) & 0xFFFFFFFFFFFFFFF8;
      v168 = ((unint64_t)v160 + 55) & 0xFFFFFFFFFFFFFFF8;
      v169 = *(_QWORD *)v168;
      *(_BYTE *)(v167 + 8) = *(_BYTE *)(v168 + 8);
      *(_QWORD *)v167 = v169;
      v170 = (_OWORD *)(((unint64_t)v159 + 71) & 0xFFFFFFFFFFFFFFF8);
      v171 = (_OWORD *)(((unint64_t)v160 + 71) & 0xFFFFFFFFFFFFFFF8);
      *v170 = *v171;
      v172 = ((unint64_t)v170 + 23) & 0xFFFFFFFFFFFFFFF8;
      v173 = ((unint64_t)v171 + 23) & 0xFFFFFFFFFFFFFFF8;
      v174 = *(_OWORD *)v173;
      v175 = *(_OWORD *)(v173 + 16);
      *(_QWORD *)(v172 + 32) = *(_QWORD *)(v173 + 32);
      *(_OWORD *)v172 = v174;
      *(_OWORD *)(v172 + 16) = v175;
      v176 = (_BYTE *)((v1374 + v172) & v1230);
      v177 = (_BYTE *)((v1374 + v173) & v1230);
      if (v1291 >= 0x7FFFFFFF)
      {
        v182 = (unint64_t)&v177[v1295] & v102;
        v183 = (_BYTE *)((v1374 + v173) & v1230);
        v184 = __swift_getEnumTagSinglePayload(v182, v1283, v1294);
        v177 = v183;
        if (v184 <= 1)
        {
          v179 = v176;
          v180 = v183 + 8;
          v181 = v1295;
          goto LABEL_167;
        }
LABEL_169:
        v187 = v176;
        v188 = v177;
        v189 = v1350;
        goto LABEL_170;
      }
      v178 = *(_QWORD *)(((v1374 + v173) & v1230) + 0x10);
      if (v178 >= 0xFFFFFFFF)
        LODWORD(v178) = -1;
      if ((int)v178 - 1 >= 0)
        goto LABEL_169;
      v179 = v176;
      v180 = v177 + 8;
      v181 = v1295;
      v182 = (unint64_t)&v177[v1295] & v102;
LABEL_167:
      v185 = v179;
      *v179 = *v177;
      memcpy(v179 + 8, v180, 0x69uLL);
      v186 = (unint64_t)&v185[v181] & v102;
      if (!__swift_getEnumTagSinglePayload(v182, 1, v1294))
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v1279 + 32))(v186, v182, v1294);
        __swift_storeEnumTagSinglePayload(v186, 0, 1, v1294);
        goto LABEL_171;
      }
      v187 = (void *)v186;
      v188 = (const void *)v182;
      v189 = v1345;
LABEL_170:
      memcpy(v187, v188, v189);
LABEL_171:
      v118 = v1303;
      *(_BYTE *)(v1218 + v1302) = 1;
LABEL_136:
      v119 = ~v118;
      v120 = ~v1362;
      v121 = &v105[v111];
      *(_WORD *)v121 = *(_WORD *)&v106[v111];
      v121[2] = v106[v111 + 2];
      v121[3] = v106[v111 + 3];
      v122 = (unint64_t)&v105[v111 + 11] & 0xFFFFFFFFFFFFFFF8;
      v123 = (unint64_t)&v106[v111 + 11] & 0xFFFFFFFFFFFFFFF8;
      v124 = *(_OWORD *)v123;
      v125 = *(_OWORD *)(v123 + 16);
      v126 = *(_OWORD *)(v123 + 32);
      *(_OWORD *)(v122 + 41) = *(_OWORD *)(v123 + 41);
      *(_OWORD *)(v122 + 16) = v125;
      *(_OWORD *)(v122 + 32) = v126;
      *(_OWORD *)v122 = v124;
      *(_BYTE *)(v122 + 57) = *(_BYTE *)(v123 + 57);
      v127 = (_OWORD *)((v1312 + v122) & v103);
      v128 = (_OWORD *)((v1312 + v123) & v103);
      if (v1313 >= 0x80000001)
      {
        v131 = v1300;
        v132 = (const void *)(((unint64_t)v128 + v1300) & v119);
        v133 = v1301;
        if (__swift_getEnumTagSinglePayload((uint64_t)v132, v1313, v1301) < 2)
          goto LABEL_140;
        v135 = v127;
        v136 = v128;
        v130 = v1316;
      }
      else
      {
        v129 = *(_QWORD *)(((v1312 + v123) & v103) + 8);
        v130 = v1316;
        if (v129 >= 0xFFFFFFFF)
        {
          v131 = v1300;
          v132 = (const void *)(((unint64_t)v128 + v1300) & v119);
          v133 = v1301;
LABEL_140:
          *v127 = *v128;
          v134 = (void *)(((unint64_t)v127 + v131) & v119);
          if (__swift_getEnumTagSinglePayload((uint64_t)v132, 1, v133))
          {
            memcpy(v134, v132, v1290);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1285 + 32))(v134, v132, v133);
            __swift_storeEnumTagSinglePayload((uint64_t)v134, 0, 1, v133);
          }
          v137 = v1355;
          v130 = v1316;
          goto LABEL_147;
        }
        v135 = v127;
        v136 = v128;
      }
      memcpy(v135, v136, v130);
      v137 = v1355;
LABEL_147:
      v138 = (_QWORD *)(((unint64_t)v127 + v1362 + v130) & v120);
      v139 = (_QWORD *)(((unint64_t)v128 + v1362 + v130) & v120);
      v140 = v1333;
      v142 = ~v1361;
      v143 = ~v137;
      v144 = ~v1314;
      switch(*((_BYTE *)v139 + v1333))
      {
        case 0:
          v1368 = v1315 + 1;
          v1375 = ~v1356;
          if (__swift_getEnumTagSinglePayload((uint64_t)v139, 1, v1321))
          {
            memcpy(v138, v139, v1378);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1299 + 32))(v138, v139, v1321);
            __swift_storeEnumTagSinglePayload((uint64_t)v138, 0, 1, v1321);
          }
          v1363 = v138;
          v266 = ((unint64_t)v138 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v267 = ((unint64_t)v139 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v268 = *(_OWORD *)v267;
          v269 = *(_OWORD *)(v267 + 16);
          *(_QWORD *)(v266 + 32) = *(_QWORD *)(v267 + 32);
          *(_OWORD *)v266 = v268;
          *(_OWORD *)(v266 + 16) = v269;
          v270 = (_OWORD *)((v266 + 47) & 0xFFFFFFFFFFFFFFF8);
          v271 = (_OWORD *)((v267 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v270 = *v271;
          v272 = (_QWORD *)(((unint64_t)v270 + 23) & 0xFFFFFFFFFFFFF8);
          v273 = (_QWORD *)(((unint64_t)v271 + 23) & 0xFFFFFFFFFFFFF8);
          *v272 = *v273;
          v274 = (_OWORD *)(((unint64_t)v272 + 15) & 0xFFFFFFFFFFFFFFF8);
          v275 = (_OWORD *)(((unint64_t)v273 + 15) & 0xFFFFFFFFFFFFFFF8);
          *v274 = *v275;
          v276 = (_OWORD *)(((unint64_t)v274 + v1280) & v1371);
          v277 = (_OWORD *)(((unint64_t)v275 + v1280) & v1371);
          if (v1226 > 0x7FFFFFFE)
          {
            v281 = (_OWORD *)(((unint64_t)v277 + 23) & 0xFFFFFFFFFFFFFFF8);
            v282 = ((unint64_t)v281 + 23) & 0xFFFFFFFFFFFFFFF8;
            v283 = __swift_getEnumTagSinglePayload((v1361 + v282 + 33) & v142, v1226, v1277);
            v279 = v1350;
            v280 = v1372;
            if (!v283)
              goto LABEL_280;
LABEL_279:
            v284 = v280;
            memcpy(v276, v277, v280);
            goto LABEL_281;
          }
          v278 = *(_QWORD *)((((unint64_t)v275 + v1280) & v1371) + 8);
          if (v278 >= 0xFFFFFFFF)
            LODWORD(v278) = -1;
          v279 = v1350;
          v280 = v1372;
          if ((v278 + 1) > 1)
            goto LABEL_279;
          v281 = (_OWORD *)(((unint64_t)v277 + 23) & 0xFFFFFFFFFFFFFFF8);
          v282 = ((unint64_t)v281 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_280:
          *v276 = *v277;
          v285 = (_OWORD *)(((unint64_t)v276 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v285 = *v281;
          v286 = ((unint64_t)v285 + 23) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)v286 = *(_OWORD *)v282;
          *(_BYTE *)(v286 + 16) = *(_BYTE *)(v282 + 16);
          v287 = ((unint64_t)v285 + 47) & 0xFFFFFFFFFFFFFFF8;
          v288 = ((unint64_t)v281 + 47) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v287 = *(_QWORD *)v288;
          *(_BYTE *)(v287 + 8) = *(_BYTE *)(v288 + 8);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1331 + 32))((v1361 + 9 + v287) & v142, (v1361 + 9 + v288) & v142, v1277);
          v284 = v1372;
LABEL_281:
          *((_BYTE *)v276 + v284) = *((_BYTE *)v277 + v284);
          v289 = ((unint64_t)v276 + v284) & 0xFFFFFFFFFFFFFFF8;
          v290 = ((unint64_t)v277 + v284) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)(v289 + 8) = *(_QWORD *)(v290 + 8);
          v291 = (_OWORD *)((v289 + 23) & 0xFFFFFFFFFFFFFFF8);
          v292 = (_OWORD *)((v290 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v291 = *v292;
          v293 = (void *)(((unint64_t)v291 + v1344) & v1309);
          v294 = (_BYTE *)(((unint64_t)v292 + v1344) & v1309);
          v93 = v1311;
          if (v1352)
          {
            v295 = v1297;
            if (v1289 >= v1297)
            {
              v296 = ((unint64_t)v292 + v1344) & v1309;
              v295 = v1289;
              v297 = v1292;
            }
            else
            {
              v296 = (unint64_t)&v294[v1293] & v1307;
              v297 = v1296;
            }
            v695 = __swift_getEnumTagSinglePayload(v296, v295, v297);
          }
          else
          {
            if (!v294[v1320])
              goto LABEL_764;
            v640 = (v294[v1320] - 1) << v1228;
            if (v1320 > 3)
              v640 = 0;
            if ((_DWORD)v1320)
            {
              if (v1320 <= 3)
                v641 = v1320;
              else
                v641 = 4;
              __asm { BR              X11 }
            }
            v695 = v640 + 1;
          }
          if (v695)
          {
            memcpy(v293, v294, v1377);
            goto LABEL_766;
          }
LABEL_764:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1286 + 32))(v293, v294, v1292);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1287 + 32))(((unint64_t)v293 + v1293) & v1307, (unint64_t)&v294[v1293] & v1307, v1296);
          if (!v1352)
            *((_BYTE *)v293 + v1320) = 0;
LABEL_766:
          v820 = (_QWORD *)(((unint64_t)v293 + v1348) & v1375);
          v821 = (uint64_t *)((unint64_t)&v294[v1348] & v1375);
          v822 = v1346;
          if ((v1297 & 0x80000000) != 0)
          {
            v824 = __swift_getEnumTagSinglePayload(((unint64_t)v821 + v1278) & v1307, v1297, v1296);
            v822 = v1346;
          }
          else
          {
            v823 = *v821;
            if ((unint64_t)*v821 >= 0xFFFFFFFF)
              LODWORD(v823) = -1;
            v824 = v823 + 1;
          }
          if (v824)
          {
            memcpy(v820, v821, v822);
          }
          else
          {
            *v820 = *v821;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v1287 + 32))(((unint64_t)v820 + v1278) & v1307, ((unint64_t)v821 + v1278) & v1307, v1296);
          }
          v825 = (_BYTE *)(((unint64_t)v820 + v1281) & v1230);
          v826 = (_BYTE *)(((unint64_t)v821 + v1281) & v1230);
          if (v1291 >= 0x7FFFFFFF)
          {
            v830 = (const void *)((unint64_t)&v826[v1295] & v1305);
            if (__swift_getEnumTagSinglePayload((uint64_t)v830, v1283, v1294) <= 1)
            {
              v828 = v826 + 8;
              v829 = ~v1359;
              goto LABEL_781;
            }
LABEL_783:
            memcpy(v825, v826, v279);
            goto LABEL_786;
          }
          v827 = *(_QWORD *)((((unint64_t)v821 + v1281) & v1230) + 0x10);
          if (v827 >= 0xFFFFFFFF)
            LODWORD(v827) = -1;
          if ((int)v827 - 1 >= 0)
            goto LABEL_783;
          v828 = v826 + 8;
          v829 = ~v1359;
          v830 = (const void *)((unint64_t)&v826[v1295] & v1305);
LABEL_781:
          *v825 = *v826;
          memcpy(v825 + 8, v828, 0x69uLL);
          v831 = (void *)((unint64_t)&v825[v1295] & v829);
          if (__swift_getEnumTagSinglePayload((uint64_t)v830, 1, v1294))
          {
            memcpy(v831, v830, v1345);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1279 + 32))(v831, v830, v1294);
            __swift_storeEnumTagSinglePayload((uint64_t)v831, 0, 1, v1294);
          }
          v279 = v1350;
LABEL_786:
          v832 = (unint64_t)&v825[v137 + v279];
          v833 = (unint64_t)&v826[v137 + v279];
          v834 = v833 & v143;
          if (v1284 < 0x7FFFFFFF)
          {
            v835 = v1321;
            if (*(_QWORD *)(((v1353 + v834) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
              goto LABEL_788;
          }
          else
          {
            v835 = v1321;
            if (__swift_getEnumTagSinglePayload(v833 & v143, v1349, v1321) >= 2)
            {
LABEL_788:
              memcpy((void *)(v832 & v143), (const void *)(v833 & v143), v1282);
              v836 = v1282;
              goto LABEL_795;
            }
          }
          if (__swift_getEnumTagSinglePayload(v833 & v143, 1, v835))
          {
            memcpy((void *)(v832 & v143), (const void *)(v833 & v143), v1378);
          }
          else
          {
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v1299 + 32))(v832 & v143, v833 & v143, v835);
            __swift_storeEnumTagSinglePayload(v832 & v143, 0, 1, v835);
          }
          v837 = (v1353 + (v832 & v143)) & 0xFFFFFFFFFFFFFFF8;
          v838 = (v1353 + v834) & 0xFFFFFFFFFFFFFFF8;
          v839 = *(_OWORD *)v838;
          v840 = *(_OWORD *)(v838 + 16);
          *(_QWORD *)(v837 + 32) = *(_QWORD *)(v838 + 32);
          *(_OWORD *)v837 = v839;
          *(_OWORD *)(v837 + 16) = v840;
          v841 = (v837 + 47) & 0xFFFFFFFFFFFFFFF8;
          v842 = (v838 + 47) & 0xFFFFFFFFFFFFFFF8;
          v843 = *(_OWORD *)v842;
          v844 = *(_OWORD *)(v842 + 16);
          *(_QWORD *)(v841 + 32) = *(_QWORD *)(v842 + 32);
          *(_OWORD *)v841 = v843;
          *(_OWORD *)(v841 + 16) = v844;
          *(_OWORD *)((v841 + 47) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v842 + 47) & 0xFFFFFFFFFFFFF8);
          v836 = v1282;
          if (v1349)
            v836 = ((((((v1315 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                 + 16;
LABEL_795:
          v845 = (v832 | v1360) + v836;
          v846 = (v833 | v1360) + v836;
          v847 = v846 & v143;
          if (v1284 < 0x7FFFFFFF)
          {
            if (*(_QWORD *)(((v1353 + v847) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
              goto LABEL_797;
          }
          else if (__swift_getEnumTagSinglePayload(v846 & v143, v1349, v835) >= 2)
          {
LABEL_797:
            memcpy((void *)(v845 & v143), (const void *)(v846 & v143), v1282);
            v848 = v1282;
            goto LABEL_804;
          }
          if (__swift_getEnumTagSinglePayload(v846 & v143, 1, v835))
          {
            memcpy((void *)(v845 & v143), (const void *)(v846 & v143), v1378);
          }
          else
          {
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v1299 + 32))(v845 & v143, v846 & v143, v835);
            __swift_storeEnumTagSinglePayload(v845 & v143, 0, 1, v835);
          }
          v849 = (v1353 + (v845 & v143)) & 0xFFFFFFFFFFFFFFF8;
          v850 = (v1353 + v847) & 0xFFFFFFFFFFFFFFF8;
          v851 = *(_OWORD *)v850;
          v852 = *(_OWORD *)(v850 + 16);
          *(_QWORD *)(v849 + 32) = *(_QWORD *)(v850 + 32);
          *(_OWORD *)v849 = v851;
          *(_OWORD *)(v849 + 16) = v852;
          v853 = (v849 + 47) & 0xFFFFFFFFFFFFFFF8;
          v854 = (v850 + 47) & 0xFFFFFFFFFFFFFFF8;
          v855 = *(_OWORD *)v854;
          v856 = *(_OWORD *)(v854 + 16);
          *(_QWORD *)(v853 + 32) = *(_QWORD *)(v854 + 32);
          *(_OWORD *)v853 = v855;
          *(_OWORD *)(v853 + 16) = v856;
          *(_OWORD *)((v853 + 47) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v854 + 47) & 0xFFFFFFFFFFFFF8);
          v848 = v1282;
          if (v1349)
            v848 = ((((((v1315 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                 + 16;
LABEL_804:
          v857 = (char *)(((v845 | v1360) + v848) & v143);
          v858 = (char *)(((v846 | v1360) + v848) & v143);
          if (v1284 < 0x7FFFFFFF)
          {
            v859 = v1349;
            if (*(_QWORD *)(((unint64_t)&v858[v1353] & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
            {
LABEL_806:
              memcpy(v857, v858, v1282);
              v265 = v1324;
              v860 = v1348;
              v861 = v1344;
              v862 = v1370;
              v863 = v1372;
              v864 = ~v1356;
              v865 = v1281;
              v866 = v1276;
              v867 = v1259;
              v868 = v1260;
              v869 = v1337;
              v871 = v1221;
              v870 = v1222;
              v872 = v1220;
              v874 = ((((((v1378 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                   + 40;
              v873 = v1258;
              v876 = v1256;
              v875 = v1257;
              v877 = v1255;
              v878 = v1261;
              if (!v859)
                goto LABEL_815;
              goto LABEL_814;
            }
          }
          else
          {
            v859 = v1349;
            if (__swift_getEnumTagSinglePayload((uint64_t)v858, v1349, v835) >= 2)
              goto LABEL_806;
          }
          if (__swift_getEnumTagSinglePayload((uint64_t)v858, 1, v835))
          {
            memcpy(v857, v858, v1378);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v1299 + 32))(v857, v858, v835);
            __swift_storeEnumTagSinglePayload((uint64_t)v857, 0, 1, v835);
          }
          v879 = (unint64_t)&v857[v1353] & 0xFFFFFFFFFFFFFFF8;
          v880 = (unint64_t)&v858[v1353] & 0xFFFFFFFFFFFFFFF8;
          v881 = *(_OWORD *)v880;
          v882 = *(_OWORD *)(v880 + 16);
          *(_QWORD *)(v879 + 32) = *(_QWORD *)(v880 + 32);
          *(_OWORD *)v879 = v881;
          *(_OWORD *)(v879 + 16) = v882;
          v883 = (v879 + 47) & 0xFFFFFFFFFFFFFFF8;
          v884 = (v880 + 47) & 0xFFFFFFFFFFFFFFF8;
          v885 = *(_OWORD *)v884;
          v886 = *(_OWORD *)(v884 + 16);
          *(_QWORD *)(v883 + 32) = *(_QWORD *)(v884 + 32);
          *(_OWORD *)v883 = v885;
          *(_OWORD *)(v883 + 16) = v886;
          *(_OWORD *)((v883 + 47) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v884 + 47) & 0xFFFFFFFFFFFFF8);
          v265 = v1324;
          v860 = v1348;
          v861 = v1344;
          v862 = v1370;
          v863 = v1372;
          v864 = ~v1356;
          v865 = v1281;
          v866 = v1276;
          v867 = v1259;
          v868 = v1260;
          v869 = v1337;
          v871 = v1221;
          v870 = v1222;
          v872 = v1220;
          v874 = ((((((v1378 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
               + 40;
          v873 = v1258;
          v876 = v1256;
          v875 = v1257;
          v877 = v1255;
          v878 = v1261;
          if (!v859)
            goto LABEL_815;
          v1282 = ((((((v1315 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                + 16;
LABEL_814:
          v1368 = v1315;
LABEL_815:
          v198 = 0;
          *(_QWORD *)&v857[v1282] = *(_QWORD *)&v858[v1282];
          v887 = v1269
               + ((v1268
                 + ((v1268
                   + ((v1341
                     + ((v865
                       + ((v860
                         + ((v861
                           + ((((((v1280
                                 + ((((((((v1368 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                   + 15) & 0xFFFFFFFFFFFFFFF8)) & v1371)
                               + v863) & 0xFFFFFFFFFFFFFFF8)
                             + 23) & 0xFFFFFFFFFFFFFFF8)) & v1309)) & v864)) & v1230)) & v143)) & v143)) & v143);
          if (v868 > v887)
            v887 = v868;
          if (v887 <= v1273)
            v887 = v1273;
          if (v887 <= v866)
            v887 = v866;
          if (v887 <= v1272)
            v887 = v1272;
          if (v887 <= v1271)
            v887 = v1271;
          if (v887 <= v1270)
            v887 = v1270;
          if (v887 <= v1274)
            v887 = (((((v1370 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
          if (v887 <= v1275)
            v887 = v1275;
          if (v887 <= v1265)
            v887 = v1265;
          if (v887 <= v1264)
            v887 = v1264;
          if (v887 <= v1263)
            v887 = v1263;
          if (v887 <= v1267)
            v887 = v1267;
          if (v887 <= v1266)
            v887 = v1266;
          if (v887 <= v1343)
            v887 = v1343;
          if (v887 <= v1339)
            v887 = v1339;
          if (v887 <= v868)
            v887 = v868;
          if (v887 <= v1223)
            v887 = v1223;
          if (v887 <= v1325)
            v887 = ((v1370 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
          if (v887 <= v878)
            v887 = v878;
          if (v887 <= v877)
            v887 = v877;
          if (v887 <= v876)
            v887 = v876;
          if (v887 <= v875)
            v887 = v875;
          if (v887 <= v1262)
            v887 = v1262;
          if (v887 <= v874)
            v887 = v874;
          if (v887 <= v873)
            v887 = v873;
          if (v887 <= v869)
            v887 = v869;
          if (v887 <= v867)
            v887 = v867;
          if (v887 <= v1224)
            v887 = v1224;
          if (v887 <= v871)
            v887 = v871;
          if (v887 <= v862)
            v887 = v862;
          if (v887 <= v1225)
            v887 = v1225;
          if (v887 <= v870)
            v887 = v870;
          if (v887 <= v872)
            v887 = v872;
          if (v887 <= 8)
            v140 = 8;
          else
            v140 = v887;
LABEL_1126:
          v138 = v1363;
LABEL_1318:
          *((_BYTE *)v138 + v140) = v198;
          *(_QWORD *)(((unint64_t)v138 + v265) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v139 + v265) & 0xFFFFFFFFFFFFF8);
          v95 = a1;
          *((_BYTE *)a1 + v93) = 1;
          v88 = a2;
LABEL_1319:
          *(_QWORD *)(((unint64_t)v95 + v93 + 8) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v88
                                                                                           + v93
                                                                                           + 8) & 0xFFFFFFFFFFFFF8);
          return v95;
        case 1:
          *v138 = *v139;
          v193 = v138;
          v194 = (_BYTE *)(((unint64_t)v138 + v1330 + 8) & v1230);
          v195 = (_BYTE *)(((unint64_t)v139 + v1330 + 8) & v1230);
          *v194 = *v195;
          memcpy(v194 + 8, v195 + 8, 0x69uLL);
          v196 = (void *)((unint64_t)&v194[v1295] & v1305);
          v197 = (const void *)((v1295 + (((unint64_t)v139 + v1330 + 8) & v1230)) & v1305);
          if (__swift_getEnumTagSinglePayload((uint64_t)v197, 1, v1294))
          {
            memcpy(v196, v197, v1345);
            v198 = 1;
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1279 + 32))(v196, v197, v1294);
            v198 = 1;
            __swift_storeEnumTagSinglePayload((uint64_t)v196, 0, 1, v1294);
          }
          goto LABEL_486;
        case 2:
          *v138 = *v139;
          v198 = 2;
          goto LABEL_268;
        case 3:
          v199 = ~v1356;
          if (__swift_getEnumTagSinglePayload((uint64_t)v139, 1, v1321))
          {
            memcpy(v138, v139, v1378);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1299 + 32))(v138, v139, v1321);
            __swift_storeEnumTagSinglePayload((uint64_t)v138, 0, 1, v1321);
          }
          v1364 = v138;
          v298 = ((unint64_t)v138 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v1317 = (size_t)v139;
          v299 = ((unint64_t)v139 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v300 = *(_OWORD *)v299;
          v301 = *(_OWORD *)(v299 + 16);
          *(_QWORD *)(v298 + 32) = *(_QWORD *)(v299 + 32);
          *(_OWORD *)v298 = v300;
          *(_OWORD *)(v298 + 16) = v301;
          v302 = (_OWORD *)((v298 + 47) & 0xFFFFFFFFFFFFFFF8);
          v303 = (_OWORD *)((v299 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v302 = *v303;
          v304 = (void *)(((unint64_t)v302 + v1344) & v1309);
          v305 = (_BYTE *)(((unint64_t)v303 + v1344) & v1309);
          if (v1352)
          {
            v306 = v1297;
            if (v1289 >= v1297)
            {
              v307 = ((unint64_t)v303 + v1344) & v1309;
              v306 = v1289;
              v308 = v1292;
            }
            else
            {
              v307 = (unint64_t)&v305[v1293] & v1307;
              v308 = v1296;
            }
            v696 = __swift_getEnumTagSinglePayload(v307, v306, v308);
            v93 = v1311;
            v642 = ~v1330;
          }
          else
          {
            v93 = v1311;
            v642 = ~v1330;
            if (!v305[v1320])
              goto LABEL_886;
            v643 = (v305[v1320] - 1) << v1228;
            if (v1320 > 3)
              v643 = 0;
            if ((_DWORD)v1320)
            {
              if (v1320 <= 3)
                v644 = v1320;
              else
                v644 = 4;
              __asm { BR              X11 }
            }
            v696 = v643 + 1;
          }
          if (v696)
          {
            memcpy(v304, v305, v1377);
            goto LABEL_888;
          }
LABEL_886:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1286 + 32))(v304, v305, v1292);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1287 + 32))(((unint64_t)v304 + v1293) & v1307, (unint64_t)&v305[v1293] & v1307, v1296);
          if (!v1352)
            *((_BYTE *)v304 + v1320) = 0;
LABEL_888:
          v888 = &v305[v1377];
          *((_BYTE *)v304 + v1377) = v305[v1377];
          v889 = ((unint64_t)v304 + v1377 + v1314 + 1) & v144;
          v890 = (unint64_t)&v888[v1314 + 1] & v144;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v1248 + 32))(v889, v890, v1249);
          v891 = (v1245 + v889) & 0xFFFFFFFFFFFFFFF8;
          v892 = (v1245 + v890) & 0xFFFFFFFFFFFFFFF8;
          v893 = *(_QWORD *)(v892 + 32);
          v894 = *(_OWORD *)(v892 + 16);
          *(_OWORD *)v891 = *(_OWORD *)v892;
          *(_OWORD *)(v891 + 16) = v894;
          *(_QWORD *)(v891 + 32) = v893;
          v895 = (_BYTE *)((v1374 + v891) & v642);
          v896 = (_QWORD *)((v1374 + v892) & v642);
          if (v1291 >= 0x7FFFFFFF)
          {
            v901 = (const void *)(((unint64_t)v896 + v1295) & v1305);
            if (__swift_getEnumTagSinglePayload((uint64_t)v901, v1283, v1294) <= 1)
            {
              v898 = v896 + 1;
              v899 = v1295;
              v900 = ~v1359;
              goto LABEL_895;
            }
          }
          else
          {
            v897 = v896[2];
            if (v897 >= 0xFFFFFFFF)
              LODWORD(v897) = -1;
            if ((int)v897 - 1 < 0)
            {
              v898 = v896 + 1;
              v899 = v1295;
              v900 = ~v1359;
              v901 = (const void *)(((unint64_t)v896 + v1295) & v1305);
LABEL_895:
              *v895 = *(_BYTE *)v896;
              memcpy(v895 + 8, v898, 0x69uLL);
              v902 = (void *)((unint64_t)&v895[v899] & v900);
              v903 = 8 * v1320;
              if (__swift_getEnumTagSinglePayload((uint64_t)v901, 1, v1294))
              {
                memcpy(v902, v901, v1345);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1279 + 32))(v902, v901, v1294);
                __swift_storeEnumTagSinglePayload((uint64_t)v902, 0, 1, v1294);
              }
              v904 = v1350;
LABEL_900:
              v905 = (void *)((unint64_t)&v895[v1367 + v904] & v1309);
              v906 = (_BYTE *)(((unint64_t)v896 + v1367 + v904) & v1309);
              v907 = v1297;
              if (v1352)
              {
                if (v1289 >= v1297)
                {
                  v908 = (uint64_t)v906;
                  v907 = v1289;
                  v909 = v1292;
                }
                else
                {
                  v908 = (unint64_t)&v906[v1293] & v1307;
                  v909 = v1296;
                }
                v912 = __swift_getEnumTagSinglePayload(v908, v907, v909);
              }
              else
              {
                if (!v906[v1320])
                  goto LABEL_949;
                v910 = (v906[v1320] - 1) << v903;
                if (v1320 > 3)
                  v910 = 0;
                if ((_DWORD)v1320)
                {
                  if (v1320 <= 3)
                    v911 = v1320;
                  else
                    v911 = 4;
                  __asm { BR              X11 }
                }
                v912 = v910 + 1;
              }
              if (v912)
              {
                memcpy(v905, v906, v1377);
LABEL_951:
                v927 = (_QWORD *)(((unint64_t)v905 + v1348) & v199);
                v928 = (uint64_t *)((unint64_t)&v906[v1348] & v199);
                v929 = v1346;
                if ((v1297 & 0x80000000) != 0)
                {
                  v931 = __swift_getEnumTagSinglePayload(((unint64_t)v928 + v1278) & v1307, v1297, v1296);
                  v929 = v1346;
                }
                else
                {
                  v930 = *v928;
                  if ((unint64_t)*v928 >= 0xFFFFFFFF)
                    LODWORD(v930) = -1;
                  v931 = v930 + 1;
                }
                if (v931)
                {
                  memcpy(v927, v928, v929);
                }
                else
                {
                  *v927 = *v928;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1287 + 32))(((unint64_t)v927 + v1278) & v1307, ((unint64_t)v928 + v1278) & v1307, v1296);
                }
                v198 = 3;
                v265 = v1324;
                v138 = v1364;
                v139 = (_QWORD *)v1317;
                goto LABEL_1317;
              }
LABEL_949:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1286 + 32))(v905, v906, v1292);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1287 + 32))(((unint64_t)v905 + v1293) & v1307, (unint64_t)&v906[v1293] & v1307, v1296);
              if (!v1352)
                *((_BYTE *)v905 + v1320) = 0;
              goto LABEL_951;
            }
          }
          v903 = 8 * v1320;
          v904 = v1350;
          memcpy(v895, v896, v1350);
          goto LABEL_900;
        case 4:
          if (__swift_getEnumTagSinglePayload((uint64_t)v139, 1, v1321))
          {
            memcpy(v138, v139, v1378);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1299 + 32))(v138, v139, v1321);
            __swift_storeEnumTagSinglePayload((uint64_t)v138, 0, 1, v1321);
          }
          v309 = v139;
          v310 = v138;
          v311 = ((unint64_t)v138 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v312 = v309;
          v313 = ((unint64_t)v309 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v314 = *(_OWORD *)v313;
          v315 = *(_OWORD *)(v313 + 16);
          *(_QWORD *)(v311 + 32) = *(_QWORD *)(v313 + 32);
          *(_OWORD *)v311 = v314;
          *(_OWORD *)(v311 + 16) = v315;
          v316 = (_OWORD *)((v311 + 47) & 0xFFFFFFFFFFFFFFF8);
          v317 = (_OWORD *)((v313 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v316 = *v317;
          v318 = (_OWORD *)(((unint64_t)v316 + 23) & 0xFFFFFFFFFFFFFFF8);
          v319 = (_OWORD *)(((unint64_t)v317 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v318 = *v319;
          v320 = ((unint64_t)v318 + 23) & 0xFFFFFFFFFFFFFFF8;
          v321 = ((unint64_t)v319 + 23) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)v320 = *(_OWORD *)v321;
          *(_BYTE *)(v320 + 16) = *(_BYTE *)(v321 + 16);
          v322 = ((unint64_t)v318 + 47) & 0xFFFFFFFFFFFFFFF8;
          v323 = ((unint64_t)v319 + 47) & 0xFFFFFFFFFFFFFFF8;
          v324 = *(_OWORD *)v323;
          v325 = *(_OWORD *)(v323 + 16);
          *(_QWORD *)(v322 + 32) = *(_QWORD *)(v323 + 32);
          *(_OWORD *)v322 = v324;
          *(_OWORD *)(v322 + 16) = v325;
          *(_BYTE *)(v322 + 40) = *(_BYTE *)(v323 + 40);
          v326 = (_BYTE *)((v1252 + v322) & v1230);
          v327 = (_BYTE *)((v1252 + v323) & v1230);
          if (v1291 >= 0x7FFFFFFF)
          {
            v331 = (const void *)((unint64_t)&v327[v1295] & v1305);
            v93 = v1311;
            if (__swift_getEnumTagSinglePayload((uint64_t)v331, v1283, v1294) <= 1)
            {
              v329 = v327 + 8;
              v330 = ~v1359;
              goto LABEL_297;
            }
          }
          else
          {
            v328 = *(_QWORD *)(((v1252 + v323) & v1230) + 0x10);
            if (v328 >= 0xFFFFFFFF)
              LODWORD(v328) = -1;
            v93 = v1311;
            if ((int)v328 - 1 < 0)
            {
              v329 = v327 + 8;
              v330 = ~v1359;
              v331 = (const void *)((unint64_t)&v327[v1295] & v1305);
LABEL_297:
              *v326 = *v327;
              memcpy(v326 + 8, v329, 0x69uLL);
              v332 = (void *)((unint64_t)&v326[v1295] & v330);
              v333 = 8 * v1320;
              if (__swift_getEnumTagSinglePayload((uint64_t)v331, 1, v1294))
              {
                memcpy(v332, v331, v1345);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1279 + 32))(v332, v331, v1294);
                __swift_storeEnumTagSinglePayload((uint64_t)v332, 0, 1, v1294);
              }
              v334 = v1350;
LABEL_646:
              v729 = (void *)((unint64_t)&v326[v1367 + v334] & v1309);
              v730 = (_BYTE *)((unint64_t)&v327[v1367 + v334] & v1309);
              v731 = v1297;
              if (v1352)
              {
                if (v1289 >= v1297)
                {
                  v732 = (uint64_t)v730;
                  v731 = v1289;
                  v733 = v1292;
                }
                else
                {
                  v732 = (unint64_t)&v730[v1293] & v1307;
                  v733 = v1296;
                }
                v736 = __swift_getEnumTagSinglePayload(v732, v731, v733);
              }
              else
              {
                if (!v730[v1320])
                  goto LABEL_944;
                v734 = (v730[v1320] - 1) << v333;
                if (v1320 > 3)
                  v734 = 0;
                if ((_DWORD)v1320)
                {
                  if (v1320 <= 3)
                    v735 = v1320;
                  else
                    v735 = 4;
                  __asm { BR              X11 }
                }
                v736 = v734 + 1;
              }
              if (v736)
              {
                memcpy(v729, v730, v1377);
LABEL_946:
                v923 = ((unint64_t)v729 + v1327) & 0xFFFFFFFFFFFFFFF8;
                v924 = (unint64_t)&v730[v1327] & 0xFFFFFFFFFFFFFFF8;
                v925 = *(_OWORD *)v924;
                v926 = *(_OWORD *)(v924 + 16);
                *(_QWORD *)(v923 + 32) = *(_QWORD *)(v924 + 32);
                *(_OWORD *)v923 = v925;
                *(_OWORD *)(v923 + 16) = v926;
                *(_OWORD *)((v923 + 47) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v924 + 47) & 0xFFFFFFFFFFFFF8);
                v198 = 4;
                v265 = v1324;
                v138 = v310;
                v139 = v312;
LABEL_1317:
                v140 = v1333;
                goto LABEL_1318;
              }
LABEL_944:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1286 + 32))(v729, v730, v1292);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1287 + 32))(((unint64_t)v729 + v1293) & v1307, (unint64_t)&v730[v1293] & v1307, v1296);
              if (!v1352)
                *((_BYTE *)v729 + v1320) = 0;
              goto LABEL_946;
            }
          }
          v333 = 8 * v1320;
          v334 = v1350;
          memcpy(v326, v327, v1350);
          goto LABEL_646;
        case 5:
          if (__swift_getEnumTagSinglePayload((uint64_t)v139, 1, v1321))
          {
            v200 = v1378;
            memcpy(v138, v139, v1378);
            v201 = v1378 + 7;
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1299 + 32))(v138, v139, v1321);
            __swift_storeEnumTagSinglePayload((uint64_t)v138, 0, 1, v1321);
            v201 = v1378 + 7;
            v200 = v1378;
          }
          v1365 = v138;
          v335 = ((unint64_t)v138 + v201) & 0xFFFFFFFFFFFFFFF8;
          v336 = ((unint64_t)v139 + v201) & 0xFFFFFFFFFFFFFFF8;
          v337 = *(_OWORD *)v336;
          v338 = *(_OWORD *)(v336 + 16);
          *(_QWORD *)(v335 + 32) = *(_QWORD *)(v336 + 32);
          *(_OWORD *)v335 = v337;
          *(_OWORD *)(v335 + 16) = v338;
          v339 = (void *)((v1322 + 40 + v335) & v1227);
          v340 = (const void *)((v1322 + 40 + v336) & v1227);
          v93 = v1311;
          v341 = v1294;
          v342 = ~v1330;
          v1318 = (size_t)v139;
          if (v1284 == v1253)
          {
            v343 = v1349;
            v344 = v1295;
            if (v1349 < 2)
              goto LABEL_691;
            v345 = (v1322 + 40 + v336) & v1227;
            v346 = v1321;
          }
          else
          {
            v347 = ((unint64_t)v340 + v201) & 0xFFFFFFFFFFFFFFF8;
            if (v1253 == 0x7FFFFFFF)
            {
              v344 = v1295;
              if (*(_QWORD *)(v347 + 24) >= 0xFFFFFFFFuLL)
                goto LABEL_691;
              goto LABEL_693;
            }
            v704 = (v1330
                  + ((((((v347 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                  + 65) & v1230;
            if (v1233 == v1253)
            {
              v344 = v1295;
              if (v1291 > 0x7FFFFFFE)
              {
                v744 = __swift_getEnumTagSinglePayload((v1295 + v704) & v1305, v1283, v1294);
                if (v744 < 2)
                  goto LABEL_691;
                v707 = v744 - 1;
              }
              else
              {
                v705 = *(_QWORD *)(v704 + 16);
                if (v705 >= 0xFFFFFFFF)
                  LODWORD(v705) = -1;
                v706 = v705 - 1;
                if (v706 < 0)
                  v706 = -1;
                v707 = v706 + 1;
              }
              if (v707 < 2)
              {
LABEL_691:
                if (__swift_getEnumTagSinglePayload((uint64_t)v340, 1, v1321))
                {
                  memcpy(v339, v340, v200);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v1299 + 32))(v339, v340, v1321);
                  __swift_storeEnumTagSinglePayload((uint64_t)v339, 0, 1, v1321);
                }
                v745 = ((unint64_t)v339 + v201) & 0xFFFFFFFFFFFFFFF8;
                v746 = ((unint64_t)v340 + v201) & 0xFFFFFFFFFFFFFFF8;
                v747 = *(_OWORD *)v746;
                v748 = *(_OWORD *)(v746 + 16);
                *(_QWORD *)(v745 + 32) = *(_QWORD *)(v746 + 32);
                *(_OWORD *)v745 = v747;
                *(_OWORD *)(v745 + 16) = v748;
                v749 = (_OWORD *)((v745 + 47) & 0xFFFFFFFFFFFFFFF8);
                v750 = (_OWORD *)((v746 + 47) & 0xFFFFFFFFFFFFFFF8);
                *v749 = *v750;
                v751 = (_OWORD *)(((unint64_t)v749 + 23) & 0xFFFFFFFFFFFFFFF8);
                v752 = (_OWORD *)(((unint64_t)v750 + 23) & 0xFFFFFFFFFFFFFFF8);
                *v751 = *v752;
                v753 = ((unint64_t)v751 + 23) & 0xFFFFFFFFFFFFFFF8;
                v754 = ((unint64_t)v752 + 23) & 0xFFFFFFFFFFFFFFF8;
                *(_OWORD *)v753 = *(_OWORD *)v754;
                *(_BYTE *)(v753 + 16) = *(_BYTE *)(v754 + 16);
                v755 = ((unint64_t)v751 + 47) & 0xFFFFFFFFFFFFFFF8;
                v756 = ((unint64_t)v752 + 47) & 0xFFFFFFFFFFFFFFF8;
                v757 = *(_OWORD *)v756;
                v758 = *(_OWORD *)(v756 + 16);
                *(_QWORD *)(v755 + 32) = *(_QWORD *)(v756 + 32);
                *(_OWORD *)v755 = v757;
                *(_OWORD *)(v755 + 16) = v758;
                *(_BYTE *)(v755 + 40) = *(_BYTE *)(v756 + 40);
                v759 = (_BYTE *)((v1252 + v755) & v1230);
                v760 = (_BYTE *)((v1252 + v756) & v1230);
                v1373 = v339;
                if (v1291 >= 0x7FFFFFFF)
                {
                  v764 = (const void *)((unint64_t)&v760[v344] & v1305);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v764, v1283, v1294) <= 1)
                  {
                    v762 = v760 + 8;
                    v763 = ~v1359;
                    goto LABEL_702;
                  }
                }
                else
                {
                  v761 = *(_QWORD *)(((v1252 + v756) & v1230) + 0x10);
                  if (v761 >= 0xFFFFFFFF)
                    LODWORD(v761) = -1;
                  if ((int)v761 - 1 < 0)
                  {
                    v762 = v760 + 8;
                    v763 = ~v1359;
                    v764 = (const void *)((unint64_t)&v760[v344] & v1305);
LABEL_702:
                    *v759 = *v760;
                    memcpy(v759 + 8, v762, 0x69uLL);
                    v765 = (void *)((unint64_t)&v759[v344] & v763);
                    if (__swift_getEnumTagSinglePayload((uint64_t)v764, 1, v1294))
                    {
                      memcpy(v765, v764, v1345);
                    }
                    else
                    {
                      (*(void (**)(void *, const void *, uint64_t))(v1279 + 32))(v765, v764, v1294);
                      __swift_storeEnumTagSinglePayload((uint64_t)v765, 0, 1, v1294);
                    }
                    v767 = v1350;
                    v766 = v1295;
LABEL_707:
                    v768 = (void *)((unint64_t)&v759[v1367 + v767] & v1309);
                    v769 = (_BYTE *)((unint64_t)&v760[v1367 + v767] & v1309);
                    v770 = v1297;
                    if (v1352)
                    {
                      v200 = v1378;
                      if (v1289 >= v1297)
                      {
                        v771 = (uint64_t)v769;
                        v770 = v1289;
                        v772 = v1292;
                      }
                      else
                      {
                        v771 = (unint64_t)&v769[v1293] & v1307;
                        v772 = v1296;
                      }
                      v776 = __swift_getEnumTagSinglePayload(v771, v770, v772);
                      v773 = v1294;
                      v342 = ~v1330;
                      v344 = v766;
                    }
                    else
                    {
                      v773 = v1294;
                      v342 = ~v1330;
                      v200 = v1378;
                      v344 = v766;
                      if (!v769[v1320])
                        goto LABEL_1241;
                      v774 = (v769[v1320] - 1) << v1228;
                      if (v1320 > 3)
                        v774 = 0;
                      if ((_DWORD)v1320)
                      {
                        if (v1320 <= 3)
                          v775 = v1320;
                        else
                          v775 = 4;
                        __asm { BR              X11 }
                      }
                      v776 = v774 + 1;
                    }
                    if (v776)
                    {
                      memcpy(v768, v769, v1377);
LABEL_1243:
                      v1093 = ((unint64_t)v768 + v1327) & 0xFFFFFFFFFFFFFFF8;
                      v1094 = (unint64_t)&v769[v1327] & 0xFFFFFFFFFFFFFFF8;
                      v1095 = *(_OWORD *)v1094;
                      v1096 = *(_OWORD *)(v1094 + 16);
                      *(_QWORD *)(v1093 + 32) = *(_QWORD *)(v1094 + 32);
                      *(_OWORD *)v1093 = v1095;
                      *(_OWORD *)(v1093 + 16) = v1096;
                      *(_OWORD *)((v1093 + 47) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v1094 + 47) & 0xFFFFFFFFFFFFF8);
                      v341 = v773;
                      v339 = v1373;
LABEL_1244:
                      v1097 = (_BYTE *)(((unint64_t)v339 + v1250) & v1227);
                      v1098 = (unsigned __int8 *)(((unint64_t)v340 + v1250) & v1227);
                      v1099 = *v1098;
                      if (v1099 > 2)
                      {
                        memcpy((void *)(((unint64_t)v339 + v1250) & v1227), v1098, v1358);
                        v139 = (_QWORD *)v1318;
                        goto LABEL_1305;
                      }
                      v1100 = v342;
                      *v1097 = v1099;
                      v1101 = (_OWORD *)((unint64_t)&v1097[v1298] & v1227);
                      v1102 = (__int128 *)((unint64_t)&v1098[v1298] & v1227);
                      v1103 = *((unsigned __int8 *)v1102 + v1302);
                      if (v1103 > 2)
                      {
                        memcpy((void *)((unint64_t)&v1097[v1298] & v1227), (const void *)((unint64_t)&v1098[v1298] & v1227), __n);
LABEL_1303:
                        v139 = (_QWORD *)v1318;
                        goto LABEL_1304;
                      }
                      if (v1103 != 2)
                      {
                        if (v1103 != 1)
                        {
                          v139 = (_QWORD *)v1318;
                          v1120 = *v1102;
                          v1121 = *(_OWORD *)(((unint64_t)&v1098[v1298] & v1227) + 0x20);
                          *(_OWORD *)(((unint64_t)&v1097[v1298] & v1227) + 0x10) = *(_OWORD *)(((unint64_t)&v1098[v1298] & v1227) + 0x10);
                          *(_OWORD *)(((unint64_t)&v1097[v1298] & v1227) + 0x20) = v1121;
                          *v1101 = v1120;
                          *((_BYTE *)v1101 + v1302) = 0;
LABEL_1304:
                          v200 = v1378;
LABEL_1305:
                          v1161 = (_QWORD *)((unint64_t)&v1097[v1234] & 0xFFFFFFFFFFFFFFF8);
                          v1162 = (_QWORD *)((unint64_t)&v1098[v1234] & 0xFFFFFFFFFFFFFFF8);
                          *v1161 = *v1162;
                          v1163 = (_BYTE *)(((unint64_t)v1161 + v1235) & v1227);
                          v1164 = (unsigned __int8 *)(((unint64_t)v1162 + v1235) & v1227);
                          v1165 = *v1164;
                          if (v1165 > 2)
                          {
                            v1173 = v1358;
                          }
                          else
                          {
                            *v1163 = v1165;
                            v1166 = (_OWORD *)((unint64_t)&v1163[v1298] & v1227);
                            v1167 = (__int128 *)((unint64_t)&v1164[v1298] & v1227);
                            v1168 = *((unsigned __int8 *)v1167 + v1302);
                            if (v1168 <= 2)
                            {
                              v265 = v1324;
                              if (v1168 != 2)
                              {
                                if (v1168 != 1)
                                {
                                  v1186 = *v1167;
                                  v1187 = *(_OWORD *)(((unint64_t)&v1164[v1298] & v1227) + 0x20);
                                  *(_OWORD *)(((unint64_t)&v1163[v1298] & v1227) + 0x10) = *(_OWORD *)(((unint64_t)&v1164[v1298] & v1227) + 0x10);
                                  *(_OWORD *)(((unint64_t)&v1163[v1298] & v1227) + 0x20) = v1187;
                                  *v1166 = v1186;
                                  *((_BYTE *)v1166 + v1302) = 0;
                                  v198 = 5;
                                  goto LABEL_1316;
                                }
                                v1169 = *v1167;
                                v1170 = *(_OWORD *)(((unint64_t)&v1164[v1298] & v1227) + 0x10);
                                *(_QWORD *)(((unint64_t)&v1163[v1298] & v1227) + 0x20) = *(_QWORD *)(((unint64_t)&v1164[v1298] & v1227) + 0x20);
                                *v1166 = v1169;
                                *(_OWORD *)(((unint64_t)&v1163[v1298] & v1227) + 0x10) = v1170;
                                v1171 = (void *)(((unint64_t)v1166 + v1351) & v1229);
                                v1172 = (const void *)(((unint64_t)v1167 + v1351) & v1229);
                                if (__swift_getEnumTagSinglePayload((uint64_t)v1172, 1, v1321))
                                {
                                  memcpy(v1171, v1172, v200);
                                }
                                else
                                {
                                  (*(void (**)(void *, const void *, uint64_t))(v1299 + 32))(v1171, v1172, v1321);
                                  __swift_storeEnumTagSinglePayload((uint64_t)v1171, 0, 1, v1321);
                                }
                                v1188 = (_OWORD *)(((unint64_t)v1171 + v1353) & 0xFFFFFFFFFFFFFFF8);
                                v1189 = (_OWORD *)(((unint64_t)v1172 + v1353) & 0xFFFFFFFFFFFFFFF8);
                                *v1188 = *v1189;
                                v1190 = ((unint64_t)v1188 + 23) & 0xFFFFFFFFFFFFFFF8;
                                v1191 = ((unint64_t)v1189 + 23) & 0xFFFFFFFFFFFFFFF8;
                                v1192 = *(_QWORD *)v1191;
                                *(_BYTE *)(v1190 + 8) = *(_BYTE *)(v1191 + 8);
                                *(_QWORD *)v1190 = v1192;
                                v1193 = ((unint64_t)v1188 + 39) & 0xFFFFFFFFFFFFFFF8;
                                v1194 = ((unint64_t)v1189 + 39) & 0xFFFFFFFFFFFFFFF8;
                                v1195 = *(_QWORD *)v1194;
                                *(_BYTE *)(v1193 + 8) = *(_BYTE *)(v1194 + 8);
                                *(_QWORD *)v1193 = v1195;
                                v1196 = ((unint64_t)v1188 + 55) & 0xFFFFFFFFFFFFFFF8;
                                v1197 = ((unint64_t)v1189 + 55) & 0xFFFFFFFFFFFFFFF8;
                                v1198 = *(_QWORD *)v1197;
                                *(_BYTE *)(v1196 + 8) = *(_BYTE *)(v1197 + 8);
                                *(_QWORD *)v1196 = v1198;
                                v1199 = (_OWORD *)(((unint64_t)v1188 + 71) & 0xFFFFFFFFFFFFFFF8);
                                v1200 = (_OWORD *)(((unint64_t)v1189 + 71) & 0xFFFFFFFFFFFFFFF8);
                                *v1199 = *v1200;
                                v1201 = ((unint64_t)v1199 + 23) & 0xFFFFFFFFFFFFFFF8;
                                v1202 = ((unint64_t)v1200 + 23) & 0xFFFFFFFFFFFFFFF8;
                                v1203 = *(_OWORD *)v1202;
                                v1204 = *(_OWORD *)(v1202 + 16);
                                *(_QWORD *)(v1201 + 32) = *(_QWORD *)(v1202 + 32);
                                *(_OWORD *)v1201 = v1203;
                                *(_OWORD *)(v1201 + 16) = v1204;
                                v1205 = (_BYTE *)((v1374 + v1201) & v1230);
                                v1206 = (_BYTE *)((v1374 + v1202) & v1230);
                                if (v1291 >= 0x7FFFFFFF)
                                {
                                  v1209 = (unint64_t)&v1206[v1295] & v1305;
                                  if (__swift_getEnumTagSinglePayload(v1209, v1283, v341) <= 1)
                                  {
                                    v1208 = v1206 + 8;
                                    goto LABEL_1332;
                                  }
                                }
                                else
                                {
                                  v1207 = *(_QWORD *)(((v1374 + v1202) & v1230) + 0x10);
                                  if (v1207 >= 0xFFFFFFFF)
                                    LODWORD(v1207) = -1;
                                  if ((int)v1207 - 1 < 0)
                                  {
                                    v1208 = v1206 + 8;
                                    v1209 = (unint64_t)&v1206[v1295] & v1305;
LABEL_1332:
                                    *v1205 = *v1206;
                                    memcpy(v1205 + 8, v1208, 0x69uLL);
                                    v1210 = (unint64_t)&v1205[v1295] & v1305;
                                    if (!__swift_getEnumTagSinglePayload(v1209, 1, v341))
                                    {
                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v1279 + 32))(v1210, v1209, v341);
                                      __swift_storeEnumTagSinglePayload(v1210, 0, 1, v341);
                                      goto LABEL_1336;
                                    }
                                    v1211 = (void *)v1210;
                                    v1212 = (const void *)v1209;
                                    v1213 = v1345;
LABEL_1335:
                                    memcpy(v1211, v1212, v1213);
LABEL_1336:
                                    v1214 = 1;
LABEL_1354:
                                    *((_BYTE *)v1166 + v1302) = v1214;
                                    goto LABEL_1314;
                                  }
                                }
                                v1211 = v1205;
                                v1212 = v1206;
                                v1213 = v1350;
                                goto LABEL_1335;
                              }
                              memcpy(v1166, v1167, 0x48uLL);
                              v1175 = (const void *)(((unint64_t)v1167 + 79) & 0xFFFFFFFFFFFFFFF8);
                              memcpy((void *)(((unint64_t)v1166 + 79) & 0xFFFFFFFFFFFFFFF8), v1175, 0x48uLL);
                              v1176 = (_QWORD *)(((((unint64_t)v1166 + 79) & 0xFFFFFFFFFFFFFFF8) + 79) & 0xFFFFFFFFFFFFF8);
                              v1177 = (_QWORD *)(((unint64_t)v1175 + 79) & 0xFFFFFFFFFFFFF8);
                              *v1176 = *v1177;
                              v1178 = (_QWORD *)(((unint64_t)v1176 + 15) & 0xFFFFFFFFFFFFFFF8);
                              v1179 = (_QWORD *)(((unint64_t)v1177 + 15) & 0xFFFFFFFFFFFFFFF8);
                              *v1178 = *v1179;
                              v1180 = (void *)(((unint64_t)v1178 + v1329) & v1309);
                              v1181 = (_BYTE *)(((unint64_t)v1179 + v1329) & v1309);
                              if (v1352)
                              {
                                v1182 = v1297;
                                v1183 = v1320;
                                if (v1289 >= v1297)
                                {
                                  v1184 = ((unint64_t)v1179 + v1329) & v1309;
                                  v1182 = v1289;
                                  v1185 = v1292;
                                }
                                else
                                {
                                  v1184 = (unint64_t)&v1181[v1293] & v1307;
                                  v1185 = v1296;
                                }
                                v1217 = __swift_getEnumTagSinglePayload(v1184, v1182, v1185);
                              }
                              else
                              {
                                v1183 = v1320;
                                if (!v1181[v1320])
                                  goto LABEL_1351;
                                v1215 = (v1181[v1320] - 1) << v1228;
                                if (v1320 > 3)
                                  v1215 = 0;
                                if ((_DWORD)v1320)
                                {
                                  if (v1320 <= 3)
                                    v1216 = v1320;
                                  else
                                    v1216 = 4;
                                  __asm { BR              X11 }
                                }
                                v1217 = v1215 + 1;
                                v93 = v1311;
                                v1183 = v1320;
                              }
                              if (v1217)
                              {
                                memcpy(v1180, v1181, v1377);
LABEL_1353:
                                *((_BYTE *)v1180 + v1377) = v1181[v1377];
                                v1214 = 2;
                                goto LABEL_1354;
                              }
LABEL_1351:
                              (*(void (**)(void *, _BYTE *, uint64_t))(v1286 + 32))(v1180, v1181, v1292);
                              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1287 + 32))(((unint64_t)v1180 + v1293) & v1307, (unint64_t)&v1181[v1293] & v1307, v1296);
                              if (!v1352)
                                *((_BYTE *)v1180 + v1183) = 0;
                              goto LABEL_1353;
                            }
                            v1163 = (_BYTE *)((unint64_t)&v1163[v1298] & v1227);
                            v1164 = (unsigned __int8 *)((unint64_t)&v1164[v1298] & v1227);
                            v1173 = __n;
                          }
                          memcpy(v1163, v1164, v1173);
LABEL_1314:
                          v198 = 5;
                          goto LABEL_1315;
                        }
                        v1104 = v344;
                        v1105 = *v1102;
                        v1106 = *(_OWORD *)(((unint64_t)&v1098[v1298] & v1227) + 0x10);
                        *(_QWORD *)(((unint64_t)&v1097[v1298] & v1227) + 0x20) = *(_QWORD *)(((unint64_t)&v1098[v1298] & v1227)
                                                                                                  + 0x20);
                        *v1101 = v1105;
                        *(_OWORD *)(((unint64_t)&v1097[v1298] & v1227) + 0x10) = v1106;
                        v1107 = (void *)(((unint64_t)v1101 + v1351) & v1229);
                        v1108 = (const void *)(((unint64_t)v1102 + v1351) & v1229);
                        v1109 = v341;
                        if (__swift_getEnumTagSinglePayload((uint64_t)v1108, 1, v1321))
                        {
                          memcpy(v1107, v1108, v1378);
                        }
                        else
                        {
                          (*(void (**)(void *, const void *, uint64_t))(v1299 + 32))(v1107, v1108, v1321);
                          __swift_storeEnumTagSinglePayload((uint64_t)v1107, 0, 1, v1321);
                        }
                        v1122 = (_OWORD *)(((unint64_t)v1107 + v1353) & 0xFFFFFFFFFFFFFFF8);
                        v1123 = (_OWORD *)(((unint64_t)v1108 + v1353) & 0xFFFFFFFFFFFFFFF8);
                        *v1122 = *v1123;
                        v1124 = ((unint64_t)v1122 + 23) & 0xFFFFFFFFFFFFFFF8;
                        v1125 = ((unint64_t)v1123 + 23) & 0xFFFFFFFFFFFFFFF8;
                        v1126 = *(_QWORD *)v1125;
                        *(_BYTE *)(v1124 + 8) = *(_BYTE *)(v1125 + 8);
                        *(_QWORD *)v1124 = v1126;
                        v1127 = ((unint64_t)v1122 + 39) & 0xFFFFFFFFFFFFFFF8;
                        v1128 = ((unint64_t)v1123 + 39) & 0xFFFFFFFFFFFFFFF8;
                        v1129 = *(_QWORD *)v1128;
                        *(_BYTE *)(v1127 + 8) = *(_BYTE *)(v1128 + 8);
                        *(_QWORD *)v1127 = v1129;
                        v1130 = ((unint64_t)v1122 + 55) & 0xFFFFFFFFFFFFFFF8;
                        v1131 = ((unint64_t)v1123 + 55) & 0xFFFFFFFFFFFFFFF8;
                        v1132 = *(_QWORD *)v1131;
                        *(_BYTE *)(v1130 + 8) = *(_BYTE *)(v1131 + 8);
                        *(_QWORD *)v1130 = v1132;
                        v1133 = (_OWORD *)(((unint64_t)v1122 + 71) & 0xFFFFFFFFFFFFFFF8);
                        v1134 = (_OWORD *)(((unint64_t)v1123 + 71) & 0xFFFFFFFFFFFFFFF8);
                        *v1133 = *v1134;
                        v1135 = ((unint64_t)v1133 + 23) & 0xFFFFFFFFFFFFFFF8;
                        v1136 = ((unint64_t)v1134 + 23) & 0xFFFFFFFFFFFFFFF8;
                        v1137 = *(_OWORD *)v1136;
                        v1138 = *(_OWORD *)(v1136 + 16);
                        *(_QWORD *)(v1135 + 32) = *(_QWORD *)(v1136 + 32);
                        *(_OWORD *)v1135 = v1137;
                        *(_OWORD *)(v1135 + 16) = v1138;
                        v1139 = (_BYTE *)((v1374 + v1135) & v1100);
                        v1140 = (_BYTE *)((v1374 + v1136) & v1100);
                        if (v1291 >= 0x7FFFFFFF)
                        {
                          v1143 = (const void *)((unint64_t)&v1140[v1104] & v1305);
                          if (__swift_getEnumTagSinglePayload((uint64_t)v1143, v1283, v1109) <= 1)
                          {
                            v1142 = v1140 + 8;
LABEL_1264:
                            *v1139 = *v1140;
                            memcpy(v1139 + 8, v1142, 0x69uLL);
                            v1144 = (void *)((unint64_t)&v1139[v1104] & v1305);
                            v341 = v1109;
                            if (__swift_getEnumTagSinglePayload((uint64_t)v1143, 1, v1109))
                            {
                              memcpy(v1144, v1143, v1345);
                            }
                            else
                            {
                              (*(void (**)(void *, const void *, uint64_t))(v1279 + 32))(v1144, v1143, v1109);
                              __swift_storeEnumTagSinglePayload((uint64_t)v1144, 0, 1, v1109);
                            }
                            goto LABEL_1295;
                          }
                        }
                        else
                        {
                          v1141 = *(_QWORD *)(((v1374 + v1136) & v1100) + 0x10);
                          if (v1141 >= 0xFFFFFFFF)
                            LODWORD(v1141) = -1;
                          if ((int)v1141 - 1 < 0)
                          {
                            v1142 = v1140 + 8;
                            v1143 = (const void *)((unint64_t)&v1140[v1104] & v1305);
                            goto LABEL_1264;
                          }
                        }
                        memcpy(v1139, v1140, v1350);
                        v341 = v1109;
LABEL_1295:
                        v1160 = 1;
LABEL_1302:
                        *((_BYTE *)v1101 + v1302) = v1160;
                        goto LABEL_1303;
                      }
                      memcpy((void *)((unint64_t)&v1097[v1298] & v1227), (const void *)((unint64_t)&v1098[v1298] & v1227), 0x48uLL);
                      v1110 = (const void *)(((unint64_t)v1102 + 79) & 0xFFFFFFFFFFFFFFF8);
                      memcpy((void *)(((unint64_t)v1101 + 79) & 0xFFFFFFFFFFFFFFF8), v1110, 0x48uLL);
                      v1111 = (_QWORD *)(((((unint64_t)v1101 + 79) & 0xFFFFFFFFFFFFFFF8) + 79) & 0xFFFFFFFFFFFFF8);
                      v1112 = (_QWORD *)(((unint64_t)v1110 + 79) & 0xFFFFFFFFFFFFF8);
                      *v1111 = *v1112;
                      v1113 = (_QWORD *)(((unint64_t)v1111 + 15) & 0xFFFFFFFFFFFFFFF8);
                      v1114 = (_QWORD *)(((unint64_t)v1112 + 15) & 0xFFFFFFFFFFFFFFF8);
                      *v1113 = *v1114;
                      v1115 = (void *)(((unint64_t)v1113 + v1329) & v1309);
                      v1116 = (_BYTE *)(((unint64_t)v1114 + v1329) & v1309);
                      if (v1352)
                      {
                        v1117 = v1297;
                        if (v1289 >= v1297)
                        {
                          v1118 = ((unint64_t)v1114 + v1329) & v1309;
                          v1117 = v1289;
                          v1119 = v1292;
                        }
                        else
                        {
                          v1118 = (unint64_t)&v1116[v1293] & v1307;
                          v1119 = v1296;
                        }
                        v1147 = __swift_getEnumTagSinglePayload(v1118, v1117, v1119);
                      }
                      else
                      {
                        if (!v1116[v1320])
                          goto LABEL_1299;
                        v1145 = (v1116[v1320] - 1) << v1228;
                        if (v1320 > 3)
                          v1145 = 0;
                        if ((_DWORD)v1320)
                        {
                          if (v1320 <= 3)
                            v1146 = v1320;
                          else
                            v1146 = 4;
                          __asm { BR              X11 }
                        }
                        v1147 = v1145 + 1;
                        v93 = v1311;
                        v341 = v1294;
                      }
                      if (v1147)
                      {
                        memcpy(v1115, v1116, v1377);
LABEL_1301:
                        *((_BYTE *)v1115 + v1377) = v1116[v1377];
                        v1160 = 2;
                        goto LABEL_1302;
                      }
LABEL_1299:
                      (*(void (**)(void *, _BYTE *, uint64_t))(v1286 + 32))(v1115, v1116, v1292);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1287 + 32))(((unint64_t)v1115 + v1293) & v1307, (unint64_t)&v1116[v1293] & v1307, v1296);
                      if (!v1352)
                        *((_BYTE *)v1115 + v1320) = 0;
                      goto LABEL_1301;
                    }
LABEL_1241:
                    (*(void (**)(void *, _BYTE *, uint64_t))(v1286 + 32))(v768, v769, v1292);
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v1287 + 32))(((unint64_t)v768 + v1293) & v1307, (unint64_t)&v769[v1293] & v1307, v1296);
                    if (!v1352)
                      *((_BYTE *)v768 + v1320) = 0;
                    goto LABEL_1243;
                  }
                }
                v766 = v344;
                v767 = v1350;
                memcpy(v759, v760, v1350);
                goto LABEL_707;
              }
LABEL_693:
              memcpy(v339, v340, v1276);
              goto LABEL_1244;
            }
            v344 = v1295;
            if (v1352 < 2)
              goto LABEL_691;
            v345 = (v1231 + v704) & v1309;
            v343 = v1297;
            if (v1289 >= v1297)
            {
              v343 = v1289;
              v346 = v1292;
            }
            else
            {
              v345 = (v1293 + v345) & v1307;
              v346 = v1296;
            }
          }
          if (__swift_getEnumTagSinglePayload(v345, v343, v346) < 2)
            goto LABEL_691;
          goto LABEL_693;
        case 6:
          *v138 = *v139;
          v198 = 6;
          goto LABEL_268;
        case 7:
          *v138 = *v139;
          v198 = 7;
          goto LABEL_268;
        case 8:
          if (__swift_getEnumTagSinglePayload((uint64_t)v139, 1, v1321))
          {
            memcpy(v138, v139, v1378);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1299 + 32))(v138, v139, v1321);
            __swift_storeEnumTagSinglePayload((uint64_t)v138, 0, 1, v1321);
          }
          v1365 = v138;
          v348 = ((unint64_t)v138 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v349 = ((unint64_t)v139 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v350 = *(_OWORD *)v349;
          v351 = *(_OWORD *)(v349 + 16);
          *(_QWORD *)(v348 + 32) = *(_QWORD *)(v349 + 32);
          *(_OWORD *)v348 = v350;
          *(_OWORD *)(v348 + 16) = v351;
          v352 = (v1374 + v348) & v1230;
          v353 = (v1374 + v349) & v1230;
          if (v1291 >= 0x7FFFFFFF)
          {
            v357 = (const void *)((v1295 + v353) & v1305);
            v93 = v1311;
            if (__swift_getEnumTagSinglePayload((uint64_t)v357, v1283, v1294) <= 1)
            {
              v355 = (const void *)(v353 + 8);
              v356 = ~v1359;
LABEL_317:
              *(_BYTE *)v352 = *(_BYTE *)v353;
              memcpy((void *)(v352 + 8), v355, 0x69uLL);
              if (__swift_getEnumTagSinglePayload((uint64_t)v357, 1, v1294))
              {
                memcpy((void *)((v1295 + v352) & v356), v357, v1345);
              }
              else
              {
                (*(void (**)(unint64_t, const void *, uint64_t))(v1279 + 32))((v1295 + v352) & v356, v357, v1294);
                __swift_storeEnumTagSinglePayload((v1295 + v352) & v356, 0, 1, v1294);
              }
              v358 = v1350;
LABEL_661:
              v737 = (_QWORD *)(((v352 | 7) + v358) & 0xFFFFFFFFFFFFF8);
              v738 = (_QWORD *)(((v353 | 7) + v358) & 0xFFFFFFFFFFFFFFF8);
              *v737 = *v738;
              v739 = (_OWORD *)(((unint64_t)v737 + 15) & 0xFFFFFFFFFFFFFFF8);
              v740 = (_OWORD *)(((unint64_t)v738 + 15) & 0xFFFFFFFFFFFFFFF8);
              *v739 = *v740;
              v741 = ((unint64_t)v739 + 23) & 0xFFFFFFFFFFFFFFF8;
              v742 = ((unint64_t)v740 + 23) & 0xFFFFFFFFFFFFFFF8;
              v743 = *(_OWORD *)v742;
              *(_QWORD *)(v741 + 16) = *(_QWORD *)(v742 + 16);
              *(_OWORD *)v741 = v743;
              *(_QWORD *)((v741 + 31) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v742 + 31) & 0xFFFFFFFFFFFFF8);
              v198 = 8;
              goto LABEL_1315;
            }
          }
          else
          {
            v354 = *(_QWORD *)(((v1374 + v349) & v1230) + 0x10);
            if (v354 >= 0xFFFFFFFF)
              LODWORD(v354) = -1;
            v93 = v1311;
            if ((int)v354 - 1 < 0)
            {
              v355 = (const void *)(v353 + 8);
              v356 = ~v1359;
              v357 = (const void *)((v1295 + v353) & v1305);
              goto LABEL_317;
            }
          }
          v358 = v1350;
          memcpy((void *)v352, (const void *)v353, v1350);
          goto LABEL_661;
        case 9:
          v202 = ~v1356;
          if (__swift_getEnumTagSinglePayload((uint64_t)v139, 1, v1321))
          {
            memcpy(v138, v139, v1378);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1299 + 32))(v138, v139, v1321);
            __swift_storeEnumTagSinglePayload((uint64_t)v138, 0, 1, v1321);
          }
          v1365 = v138;
          v359 = ((unint64_t)v138 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v360 = ((unint64_t)v139 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v361 = *(_OWORD *)v360;
          v362 = *(_OWORD *)(v360 + 16);
          *(_QWORD *)(v359 + 32) = *(_QWORD *)(v360 + 32);
          *(_OWORD *)v359 = v361;
          *(_OWORD *)(v359 + 16) = v362;
          v363 = (_OWORD *)((v359 + 47) & 0xFFFFFFFFFFFFFFF8);
          v364 = (_OWORD *)((v360 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v363 = *v364;
          v365 = (void *)(((unint64_t)v363 + v1359 + 16) & v1305);
          v366 = (const void *)(((unint64_t)v364 + v1359 + 16) & v1305);
          if (__swift_getEnumTagSinglePayload((uint64_t)v366, 1, v1294))
          {
            memcpy(v365, v366, v1345);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1279 + 32))(v365, v366, v1294);
            __swift_storeEnumTagSinglePayload((uint64_t)v365, 0, 1, v1294);
          }
          v93 = v1311;
          v645 = (void *)(((unint64_t)v365 + v1242) & v1309);
          v646 = (_BYTE *)(((unint64_t)v366 + v1242) & v1309);
          v647 = v1297;
          if (v1352)
          {
            if (v1289 >= v1297)
            {
              v648 = (uint64_t)v646;
              v647 = v1289;
              v649 = v1292;
            }
            else
            {
              v648 = (unint64_t)&v646[v1293] & v1307;
              v649 = v1296;
            }
            v701 = __swift_getEnumTagSinglePayload(v648, v647, v649);
          }
          else
          {
            if (!v646[v1320])
              goto LABEL_916;
            v688 = (v646[v1320] - 1) << v1228;
            if (v1320 > 3)
              v688 = 0;
            if ((_DWORD)v1320)
            {
              if (v1320 <= 3)
                v689 = v1320;
              else
                v689 = 4;
              __asm { BR              X11 }
            }
            v701 = v688 + 1;
          }
          if (v701)
          {
            memcpy(v645, v646, v1377);
            goto LABEL_918;
          }
LABEL_916:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1286 + 32))(v645, v646, v1292);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1287 + 32))(((unint64_t)v645 + v1293) & v1307, (unint64_t)&v646[v1293] & v1307, v1296);
          if (!v1352)
            *((_BYTE *)v645 + v1320) = 0;
LABEL_918:
          v913 = &v646[v1377];
          *((_BYTE *)v645 + v1377) = v646[v1377];
          v914 = (void *)(((unint64_t)v645 + v1377 + v1367 + 1) & v1309);
          v915 = (_BYTE *)((unint64_t)&v646[v1377 + 1 + v1367] & v1309);
          if (v1352)
          {
            v916 = v1297;
            if (v1289 >= v1297)
            {
              v917 = (unint64_t)&v913[v1367 + 1] & v1309;
              v916 = v1289;
              v918 = v1292;
            }
            else
            {
              v917 = (unint64_t)&v915[v1293] & v1307;
              v918 = v1296;
            }
            v922 = __swift_getEnumTagSinglePayload(v917, v916, v918);
            v919 = v1350;
          }
          else
          {
            v919 = v1350;
            if (!v915[v1320])
              goto LABEL_962;
            v920 = (v915[v1320] - 1) << v1228;
            if (v1320 > 3)
              v920 = 0;
            if ((_DWORD)v1320)
            {
              if (v1320 <= 3)
                v921 = v1320;
              else
                v921 = 4;
              __asm { BR              X11 }
            }
            v922 = v920 + 1;
          }
          if (v922)
          {
            memcpy(v914, v915, v1377);
            goto LABEL_964;
          }
LABEL_962:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1286 + 32))(v914, v915, v1292);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1287 + 32))(((unint64_t)v914 + v1293) & v1307, (unint64_t)&v915[v1293] & v1307, v1296);
          if (!v1352)
            *((_BYTE *)v914 + v1320) = 0;
LABEL_964:
          v932 = (_QWORD *)(((unint64_t)v914 + v1348) & v202);
          v933 = (uint64_t *)((unint64_t)&v915[v1348] & v202);
          v934 = v1346;
          if ((v1297 & 0x80000000) != 0)
          {
            v936 = __swift_getEnumTagSinglePayload(((unint64_t)v933 + v1278) & v1307, v1297, v1296);
            v934 = v1346;
          }
          else
          {
            v935 = *v933;
            if ((unint64_t)*v933 >= 0xFFFFFFFF)
              LODWORD(v935) = -1;
            v936 = v935 + 1;
          }
          if (v936)
          {
            memcpy(v932, v933, v934);
          }
          else
          {
            *v932 = *v933;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v1287 + 32))(((unint64_t)v932 + v1278) & v1307, ((unint64_t)v933 + v1278) & v1307, v1296);
          }
          v937 = (_BYTE *)(((unint64_t)v932 + v1281) & v1230);
          v938 = (_BYTE *)(((unint64_t)v933 + v1281) & v1230);
          if (v1291 >= 0x7FFFFFFF)
          {
            v940 = v1295;
            v943 = (unint64_t)&v938[v1295] & v1305;
            if (__swift_getEnumTagSinglePayload(v943, v1283, v1294) <= 1)
            {
              v941 = v938 + 8;
              v942 = ~v1359;
              goto LABEL_979;
            }
          }
          else
          {
            v939 = *(_QWORD *)((((unint64_t)v933 + v1281) & v1230) + 0x10);
            if (v939 >= 0xFFFFFFFF)
              LODWORD(v939) = -1;
            v940 = v1295;
            if ((int)v939 - 1 < 0)
            {
              v941 = v938 + 8;
              v942 = ~v1359;
              v943 = (unint64_t)&v938[v1295] & v1305;
LABEL_979:
              *v937 = *v938;
              memcpy(v937 + 8, v941, 0x69uLL);
              v944 = (unint64_t)&v937[v940] & v942;
              if (!__swift_getEnumTagSinglePayload(v943, 1, v1294))
              {
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v1279 + 32))(v944, v943, v1294);
                __swift_storeEnumTagSinglePayload(v944, 0, 1, v1294);
LABEL_983:
                v198 = 9;
                goto LABEL_1315;
              }
              v945 = (void *)v944;
              v946 = (const void *)v943;
              v947 = v1345;
LABEL_982:
              memcpy(v945, v946, v947);
              goto LABEL_983;
            }
          }
          v945 = v937;
          v946 = v938;
          v947 = v919;
          goto LABEL_982;
        case 0xA:
          v203 = *(_OWORD *)v139;
          v204 = *((_OWORD *)v139 + 1);
          v138[4] = v139[4];
          *(_OWORD *)v138 = v203;
          *((_OWORD *)v138 + 1) = v204;
          v193 = v138;
          v205 = (void *)(((unint64_t)v138 + v1351) & v1229);
          v206 = (const void *)(((unint64_t)v139 + v1351) & v1229);
          if (__swift_getEnumTagSinglePayload((uint64_t)v206, 1, v1321))
          {
            v207 = v1378;
            memcpy(v205, v206, v1378);
            v93 = v1311;
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1299 + 32))(v205, v206, v1321);
            __swift_storeEnumTagSinglePayload((uint64_t)v205, 0, 1, v1321);
            v93 = v1311;
            v207 = v1378;
          }
          *((_BYTE *)v205 + v207) = *((_BYTE *)v206 + v207);
          v367 = ((unint64_t)v205 + v207) & 0xFFFFFFFFFFFFFFF8;
          v368 = ((unint64_t)v206 + v207) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)(v367 + 8) = *(_OWORD *)(v368 + 8);
          v369 = (_OWORD *)((v367 + 31) & 0xFFFFFFFFFFFFFFF8);
          v370 = (_OWORD *)((v368 + 31) & 0xFFFFFFFFFFFFFFF8);
          *v369 = *v370;
          *(_OWORD *)(((unint64_t)v369 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v370 + 23) & 0xFFFFFFFFFFFFF8);
          v198 = 10;
          goto LABEL_487;
        case 0xB:
          *v138 = *v139;
          v198 = 11;
          goto LABEL_268;
        case 0xC:
          if (__swift_getEnumTagSinglePayload((uint64_t)v139, 1, v1321))
          {
            memcpy(v138, v139, v1378);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1299 + 32))(v138, v139, v1321);
            __swift_storeEnumTagSinglePayload((uint64_t)v138, 0, 1, v1321);
          }
          v210 = v138;
          v371 = ((unint64_t)v138 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v372 = ((unint64_t)v139 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v373 = *(_OWORD *)v372;
          v374 = *(_OWORD *)(v372 + 16);
          *(_QWORD *)(v371 + 32) = *(_QWORD *)(v372 + 32);
          *(_OWORD *)v371 = v373;
          *(_OWORD *)(v371 + 16) = v374;
          v375 = (_OWORD *)((v1361 + 40 + v371) & v1371);
          v376 = (_OWORD *)((v1361 + 40 + v372) & v1371);
          if (v1226 > 0x7FFFFFFE)
          {
            v379 = (_OWORD *)(((unint64_t)v376 + 23) & 0xFFFFFFFFFFFFFFF8);
            v380 = ((unint64_t)v379 + 23) & 0xFFFFFFFFFFFFFFF8;
            v381 = __swift_getEnumTagSinglePayload((v1361 + v380 + 33) & v142, v1226, v1277);
            v378 = v1372;
            if (!v381)
            {
LABEL_333:
              *v375 = *v376;
              v382 = (_OWORD *)(((unint64_t)v375 + 23) & 0xFFFFFFFFFFFFFFF8);
              *v382 = *v379;
              v383 = ((unint64_t)v382 + 23) & 0xFFFFFFFFFFFFFFF8;
              *(_OWORD *)v383 = *(_OWORD *)v380;
              *(_BYTE *)(v383 + 16) = *(_BYTE *)(v380 + 16);
              v384 = ((unint64_t)v382 + 47) & 0xFFFFFFFFFFFFFFF8;
              v385 = ((unint64_t)v379 + 47) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)v384 = *(_QWORD *)v385;
              *(_BYTE *)(v384 + 8) = *(_BYTE *)(v385 + 8);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1331 + 32))((v1361 + 9 + v384) & v142, (v1361 + 9 + v385) & v142, v1277);
LABEL_334:
              *(_QWORD *)(((unint64_t)v375 + v1372 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v376
                                                                                                  + v1372
                                                                                                  + 7) & 0xFFFFFFFFFFFFF8);
              v198 = 12;
              v93 = v1311;
LABEL_1201:
              v265 = v1324;
              v138 = v210;
              goto LABEL_1317;
            }
          }
          else
          {
            v377 = *(_QWORD *)(((v1361 + 40 + v372) & v1371) + 8);
            if (v377 >= 0xFFFFFFFF)
              LODWORD(v377) = -1;
            v378 = v1372;
            if ((v377 + 1) <= 1)
            {
              v379 = (_OWORD *)(((unint64_t)v376 + 23) & 0xFFFFFFFFFFFFFFF8);
              v380 = ((unint64_t)v379 + 23) & 0xFFFFFFFFFFFFFFF8;
              goto LABEL_333;
            }
          }
          memcpy(v375, v376, v378);
          goto LABEL_334;
        case 0xD:
          v208 = *(_OWORD *)v139;
          v209 = *((_OWORD *)v139 + 1);
          v138[4] = v139[4];
          *(_OWORD *)v138 = v208;
          *((_OWORD *)v138 + 1) = v209;
          v210 = v138;
          v211 = (void *)(((unint64_t)v138 + v1351) & v1229);
          v212 = (const void *)(((unint64_t)v139 + v1351) & v1229);
          if (__swift_getEnumTagSinglePayload((uint64_t)v212, 1, v1321))
          {
            memcpy(v211, v212, v1378);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1299 + 32))(v211, v212, v1321);
            __swift_storeEnumTagSinglePayload((uint64_t)v211, 0, 1, v1321);
          }
          v386 = ((unint64_t)v211 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v387 = ((unint64_t)v212 + v1353) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)v386 = *(_OWORD *)v387;
          *(_BYTE *)(v386 + 16) = *(_BYTE *)(v387 + 16);
          v388 = (_BYTE *)((v1238 + v386) & v1230);
          v389 = (_BYTE *)((v1238 + v387) & v1230);
          if (v1291 >= 0x7FFFFFFF)
          {
            v393 = (const void *)((unint64_t)&v389[v1295] & v1305);
            v93 = v1311;
            if (__swift_getEnumTagSinglePayload((uint64_t)v393, v1283, v1294) <= 1)
            {
              v391 = v389 + 8;
              v392 = ~v1359;
LABEL_343:
              *v388 = *v389;
              memcpy(v388 + 8, v391, 0x69uLL);
              v394 = (void *)((unint64_t)&v388[v1295] & v392);
              if (__swift_getEnumTagSinglePayload((uint64_t)v393, 1, v1294))
              {
                memcpy(v394, v393, v1345);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1279 + 32))(v394, v393, v1294);
                __swift_storeEnumTagSinglePayload((uint64_t)v394, 0, 1, v1294);
              }
              v395 = v1350;
LABEL_664:
              v388[v395] = v389[v395];
              v198 = 13;
              goto LABEL_1201;
            }
          }
          else
          {
            v390 = *(_QWORD *)(((v1238 + v387) & v1230) + 0x10);
            if (v390 >= 0xFFFFFFFF)
              LODWORD(v390) = -1;
            v93 = v1311;
            if ((int)v390 - 1 < 0)
            {
              v391 = v389 + 8;
              v392 = ~v1359;
              v393 = (const void *)((unint64_t)&v389[v1295] & v1305);
              goto LABEL_343;
            }
          }
          v395 = v1350;
          memcpy(v388, v389, v1350);
          goto LABEL_664;
        case 0xE:
          *v138 = *v139;
          v198 = 14;
          goto LABEL_268;
        case 0xF:
          *v138 = *v139;
          v198 = 15;
          goto LABEL_268;
        case 0x10:
          v213 = *(_OWORD *)v139;
          v214 = *((_OWORD *)v139 + 1);
          v138[4] = v139[4];
          *(_OWORD *)v138 = v213;
          *((_OWORD *)v138 + 1) = v214;
          v193 = v138;
          v215 = (void *)(((unint64_t)v138 + v1351) & v1229);
          v216 = (const void *)(((unint64_t)v139 + v1351) & v1229);
          if (__swift_getEnumTagSinglePayload((uint64_t)v216, 1, v1321))
          {
            memcpy(v215, v216, v1378);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1299 + 32))(v215, v216, v1321);
            __swift_storeEnumTagSinglePayload((uint64_t)v215, 0, 1, v1321);
          }
          v93 = v1311;
          v396 = (_OWORD *)(((unint64_t)v215 + v1353) & 0xFFFFFFFFFFFFFFF8);
          v397 = (_OWORD *)(((unint64_t)v216 + v1353) & 0xFFFFFFFFFFFFFFF8);
          *v396 = *v397;
          v398 = (_OWORD *)(((unint64_t)v396 + 23) & 0xFFFFFFFFFFFFFFF8);
          v399 = (_OWORD *)(((unint64_t)v397 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v398 = *v399;
          v400 = (_OWORD *)(((unint64_t)v398 + 23) & 0xFFFFFFFFFFFFFFF8);
          v401 = (_OWORD *)(((unint64_t)v399 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v400 = *v401;
          v402 = ((unint64_t)v400 + 23) & 0xFFFFFFFFFFFFFFF8;
          v403 = ((unint64_t)v401 + 23) & 0xFFFFFFFFFFFFFFF8;
          v404 = *(_OWORD *)v403;
          v405 = *(_OWORD *)(v403 + 16);
          *(_QWORD *)(v402 + 32) = *(_QWORD *)(v403 + 32);
          *(_OWORD *)v402 = v404;
          *(_OWORD *)(v402 + 16) = v405;
          v406 = (v402 + 47) & 0xFFFFFFFFFFFFFFF8;
          v407 = (v403 + 47) & 0xFFFFFFFFFFFFFFF8;
          v408 = *(_OWORD *)v407;
          v409 = *(_OWORD *)(v407 + 16);
          *(_QWORD *)(v406 + 32) = *(_QWORD *)(v407 + 32);
          *(_OWORD *)v406 = v408;
          *(_OWORD *)(v406 + 16) = v409;
          v410 = (v406 + 47) & 0xFFFFFFFFFFFFFFF8;
          v411 = (v407 + 47) & 0xFFFFFFFFFFFFFFF8;
          v412 = *(_OWORD *)v411;
          v413 = *(_OWORD *)(v411 + 16);
          *(_QWORD *)(v410 + 32) = *(_QWORD *)(v411 + 32);
          *(_OWORD *)v410 = v412;
          *(_OWORD *)(v410 + 16) = v413;
          *(_BYTE *)(v410 + 40) = *(_BYTE *)(v411 + 40);
          v198 = 16;
          goto LABEL_487;
        case 0x11:
          v217 = *(_OWORD *)v139;
          v218 = *((_OWORD *)v139 + 1);
          v138[4] = v139[4];
          *(_OWORD *)v138 = v217;
          *((_OWORD *)v138 + 1) = v218;
          v193 = v138;
          v219 = (void *)(((unint64_t)v138 + v1351) & v1229);
          v220 = (const void *)(((unint64_t)v139 + v1351) & v1229);
          if (__swift_getEnumTagSinglePayload((uint64_t)v220, 1, v1321))
          {
            memcpy(v219, v220, v1378);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1299 + 32))(v219, v220, v1321);
            __swift_storeEnumTagSinglePayload((uint64_t)v219, 0, 1, v1321);
          }
          v414 = (_OWORD *)(((unint64_t)v219 + v1353) & 0xFFFFFFFFFFFFFFF8);
          v415 = (_OWORD *)(((unint64_t)v220 + v1353) & 0xFFFFFFFFFFFFFFF8);
          *v414 = *v415;
          v416 = (_OWORD *)(((unint64_t)v414 + 23) & 0xFFFFFFFFFFFFFFF8);
          v417 = (_OWORD *)(((unint64_t)v415 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v416 = *v417;
          v418 = (_OWORD *)(((unint64_t)v416 + 23) & 0xFFFFFFFFFFFFFFF8);
          v419 = (_OWORD *)(((unint64_t)v417 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v418 = *v419;
          v420 = (_OWORD *)(((unint64_t)v418 + 23) & 0xFFFFFFFFFFFFFFF8);
          v421 = (_OWORD *)(((unint64_t)v419 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v420 = *v421;
          v422 = ((unint64_t)v420 + 23) & 0xFFFFFFFFFFFFFFF8;
          v423 = ((unint64_t)v421 + 23) & 0xFFFFFFFFFFFFFFF8;
          v424 = *(_OWORD *)v423;
          v425 = *(_OWORD *)(v423 + 16);
          *(_QWORD *)(v422 + 32) = *(_QWORD *)(v423 + 32);
          *(_OWORD *)v422 = v424;
          *(_OWORD *)(v422 + 16) = v425;
          v426 = (v422 + 47) & 0xFFFFFFFFFFFFFFF8;
          v427 = (v423 + 47) & 0xFFFFFFFFFFFFFFF8;
          v428 = *(_OWORD *)v427;
          v429 = *(_OWORD *)(v427 + 16);
          *(_QWORD *)(v426 + 32) = *(_QWORD *)(v427 + 32);
          *(_OWORD *)v426 = v428;
          *(_OWORD *)(v426 + 16) = v429;
          v430 = (v426 + 47) & 0xFFFFFFFFFFFFFFF8;
          v431 = (v427 + 47) & 0xFFFFFFFFFFFFFFF8;
          v432 = *(_OWORD *)v431;
          v433 = *(_OWORD *)(v431 + 16);
          *(_QWORD *)(v430 + 32) = *(_QWORD *)(v431 + 32);
          *(_OWORD *)v430 = v432;
          *(_OWORD *)(v430 + 16) = v433;
          v434 = (void *)((v1240 + v430) & v1309);
          v435 = (_BYTE *)((v1240 + v431) & v1309);
          if (v1352)
          {
            v436 = v1297;
            if (v1289 >= v1297)
            {
              v437 = (v1240 + v431) & v1309;
              v436 = v1289;
              v438 = v1292;
            }
            else
            {
              v437 = (unint64_t)&v435[v1293] & v1307;
              v438 = v1296;
            }
            v697 = __swift_getEnumTagSinglePayload(v437, v436, v438);
            v93 = v1311;
          }
          else
          {
            v93 = v1311;
            if (!v435[v1320])
              goto LABEL_987;
            v650 = (v435[v1320] - 1) << v1228;
            if (v1320 > 3)
              v650 = 0;
            if ((_DWORD)v1320)
            {
              if (v1320 <= 3)
                v651 = v1320;
              else
                v651 = 4;
              __asm { BR              X11 }
            }
            v697 = v650 + 1;
          }
          if (v697)
          {
            memcpy(v434, v435, v1377);
            goto LABEL_989;
          }
LABEL_987:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1286 + 32))(v434, v435, v1292);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1287 + 32))(((unint64_t)v434 + v1293) & v1307, (unint64_t)&v435[v1293] & v1307, v1296);
          if (!v1352)
            *((_BYTE *)v434 + v1320) = 0;
LABEL_989:
          v948 = (void *)(((unint64_t)v434 + v1254) & v1309);
          v949 = (_BYTE *)((unint64_t)&v435[v1254] & v1309);
          v950 = v1297;
          if (v1352)
          {
            if (v1289 >= v1297)
            {
              v951 = (uint64_t)v949;
              v950 = v1289;
              v952 = v1292;
            }
            else
            {
              v951 = (unint64_t)&v949[v1293] & v1307;
              v952 = v1296;
            }
            v955 = __swift_getEnumTagSinglePayload(v951, v950, v952);
          }
          else
          {
            if (!v949[v1320])
              goto LABEL_1165;
            v953 = (v949[v1320] - 1) << v1228;
            if (v1320 > 3)
              v953 = 0;
            if ((_DWORD)v1320)
            {
              if (v1320 <= 3)
                v954 = v1320;
              else
                v954 = 4;
              __asm { BR              X11 }
            }
            v955 = v953 + 1;
          }
          if (v955)
          {
            memcpy(v948, v949, v1377);
            goto LABEL_1167;
          }
LABEL_1165:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1286 + 32))(v948, v949, v1292);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1287 + 32))(((unint64_t)v948 + v1293) & v1307, (unint64_t)&v949[v1293] & v1307, v1296);
          if (!v1352)
            *((_BYTE *)v948 + v1320) = 0;
LABEL_1167:
          v198 = 17;
          goto LABEL_487;
        case 0x12:
          *v138 = *v139;
          v198 = 18;
          goto LABEL_268;
        case 0x13:
          if (__swift_getEnumTagSinglePayload((uint64_t)v139, 1, v1321))
          {
            memcpy(v138, v139, v1378);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1299 + 32))(v138, v139, v1321);
            __swift_storeEnumTagSinglePayload((uint64_t)v138, 0, 1, v1321);
          }
          v93 = v1311;
          v439 = ((unint64_t)v138 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v440 = ((unint64_t)v139 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v441 = *(_OWORD *)v440;
          v442 = *(_OWORD *)(v440 + 16);
          *(_QWORD *)(v439 + 32) = *(_QWORD *)(v440 + 32);
          *(_OWORD *)v439 = v441;
          *(_OWORD *)(v439 + 16) = v442;
          v443 = (_OWORD *)((v439 + 47) & 0xFFFFFFFFFFFFFFF8);
          v444 = (_OWORD *)((v440 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v443 = *v444;
          v445 = (_OWORD *)(((unint64_t)v443 + 23) & 0xFFFFFFFFFFFFFFF8);
          v446 = (_OWORD *)(((unint64_t)v444 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v445 = *v446;
          *(_QWORD *)(((unint64_t)v445 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v446 + 23) & 0xFFFFFFFFFFFFF8);
          v198 = 19;
          goto LABEL_269;
        case 0x14:
          if (__swift_getEnumTagSinglePayload((uint64_t)v139, 1, v1321))
          {
            memcpy(v138, v139, v1378);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1299 + 32))(v138, v139, v1321);
            __swift_storeEnumTagSinglePayload((uint64_t)v138, 0, 1, v1321);
          }
          v447 = v1295;
          v1365 = v138;
          v448 = ((unint64_t)v138 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v449 = ((unint64_t)v139 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v450 = *(_OWORD *)v449;
          v451 = *(_OWORD *)(v449 + 16);
          *(_QWORD *)(v448 + 32) = *(_QWORD *)(v449 + 32);
          *(_OWORD *)v448 = v450;
          *(_OWORD *)(v448 + 16) = v451;
          v452 = (void *)((v1322 + 40 + v448) & v1227);
          v453 = (const void *)((v1322 + 40 + v449) & v1227);
          v93 = v1311;
          v454 = v1294;
          if (v1284 == v1253)
          {
            v455 = v1349;
            if (v1349 < 2)
              goto LABEL_723;
            v456 = (v1322 + 40 + v449) & v1227;
            v457 = v1321;
          }
          else
          {
            v458 = ((unint64_t)v453 + v1353) & 0xFFFFFFFFFFFFFFF8;
            if (v1253 == 0x7FFFFFFF)
            {
              if (*(_QWORD *)(v458 + 24) >= 0xFFFFFFFFuLL)
                goto LABEL_723;
              goto LABEL_725;
            }
            v708 = (v1374
                  + ((((((((v458 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                    + 47) & 0xFFFFFFFFFFFFFFF8)) & v1230;
            if (v1233 == v1253)
            {
              if (v1291 > 0x7FFFFFFE)
              {
                v777 = __swift_getEnumTagSinglePayload((v1295 + v708) & v1305, v1283, v1294);
                if (v777 < 2)
                  goto LABEL_723;
                v711 = v777 - 1;
              }
              else
              {
                v709 = *(_QWORD *)(v708 + 16);
                if (v709 >= 0xFFFFFFFF)
                  LODWORD(v709) = -1;
                v710 = v709 - 1;
                if (v710 < 0)
                  v710 = -1;
                v711 = v710 + 1;
              }
              if (v711 < 2)
              {
LABEL_723:
                if (__swift_getEnumTagSinglePayload((uint64_t)v453, 1, v1321))
                {
                  memcpy(v452, v453, v1378);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v1299 + 32))(v452, v453, v1321);
                  __swift_storeEnumTagSinglePayload((uint64_t)v452, 0, 1, v1321);
                }
                v779 = ((unint64_t)v452 + v1353) & 0xFFFFFFFFFFFFFFF8;
                v780 = ((unint64_t)v453 + v1353) & 0xFFFFFFFFFFFFFFF8;
                v781 = *(_OWORD *)v780;
                v782 = *(_OWORD *)(v780 + 16);
                *(_QWORD *)(v779 + 32) = *(_QWORD *)(v780 + 32);
                *(_OWORD *)v779 = v781;
                *(_OWORD *)(v779 + 16) = v782;
                v783 = (_OWORD *)((v779 + 47) & 0xFFFFFFFFFFFFFFF8);
                v784 = (_OWORD *)((v780 + 47) & 0xFFFFFFFFFFFFFFF8);
                *v783 = *v784;
                v785 = (_OWORD *)(((unint64_t)v783 + 23) & 0xFFFFFFFFFFFFFFF8);
                v786 = (_OWORD *)(((unint64_t)v784 + 23) & 0xFFFFFFFFFFFFFFF8);
                *v785 = *v786;
                v787 = ((unint64_t)v785 + 23) & 0xFFFFFFFFFFFFFFF8;
                v788 = ((unint64_t)v786 + 23) & 0xFFFFFFFFFFFFFFF8;
                v789 = *(_OWORD *)v788;
                v790 = *(_OWORD *)(v788 + 16);
                *(_QWORD *)(v787 + 32) = *(_QWORD *)(v788 + 32);
                *(_OWORD *)v787 = v789;
                *(_OWORD *)(v787 + 16) = v790;
                v791 = (v787 + 47) & 0xFFFFFFFFFFFFFFF8;
                v792 = (v788 + 47) & 0xFFFFFFFFFFFFFFF8;
                v793 = *(_OWORD *)v792;
                v794 = *(_OWORD *)(v792 + 16);
                *(_QWORD *)(v791 + 32) = *(_QWORD *)(v792 + 32);
                *(_OWORD *)v791 = v793;
                *(_OWORD *)(v791 + 16) = v794;
                v795 = (_BYTE *)((v1374 + v791) & v1230);
                v796 = (_BYTE *)((v1374 + v792) & v1230);
                if (v1291 >= 0x7FFFFFFF)
                {
                  v801 = (const void *)((unint64_t)&v796[v1295] & v1305);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v801, v1283, v1294) <= 1)
                  {
                    v1319 = (size_t)v139;
                    v798 = v796 + 8;
                    v799 = v1295;
                    v800 = ~v1359;
                    goto LABEL_734;
                  }
                }
                else
                {
                  v797 = *(_QWORD *)(((v1374 + v792) & v1230) + 0x10);
                  if (v797 >= 0xFFFFFFFF)
                    LODWORD(v797) = -1;
                  if ((int)v797 - 1 < 0)
                  {
                    v1319 = (size_t)v139;
                    v798 = v796 + 8;
                    v799 = v1295;
                    v800 = ~v1359;
                    v801 = (const void *)((unint64_t)&v796[v1295] & v1305);
LABEL_734:
                    *v795 = *v796;
                    memcpy(v795 + 8, v798, 0x69uLL);
                    v802 = (void *)((unint64_t)&v795[v799] & v800);
                    v454 = v1294;
                    v803 = 8 * v1320;
                    if (__swift_getEnumTagSinglePayload((uint64_t)v801, 1, v1294))
                    {
                      memcpy(v802, v801, v1345);
                    }
                    else
                    {
                      (*(void (**)(void *, const void *, uint64_t))(v1279 + 32))(v802, v801, v1294);
                      __swift_storeEnumTagSinglePayload((uint64_t)v802, 0, 1, v1294);
                    }
                    v139 = (_QWORD *)v1319;
                    v778 = v1350;
LABEL_739:
                    v804 = (void *)((unint64_t)&v795[v1367 + v778] & v1309);
                    v805 = (_BYTE *)((unint64_t)&v796[v1367 + v778] & v1309);
                    v806 = v1297;
                    if (v1352)
                    {
                      if (v1289 >= v1297)
                      {
                        v807 = (unint64_t)&v796[v1367 + v778] & v1309;
                        v806 = v1289;
                        v808 = v1292;
                      }
                      else
                      {
                        v807 = (unint64_t)&v805[v1293] & v1307;
                        v808 = v1296;
                      }
                      v811 = __swift_getEnumTagSinglePayload(v807, v806, v808);
                    }
                    else
                    {
                      if (!v805[v1320])
                        goto LABEL_1279;
                      v809 = (v805[v1320] - 1) << v803;
                      if (v1320 > 3)
                        v809 = 0;
                      if ((_DWORD)v1320)
                      {
                        if (v1320 <= 3)
                          v810 = v1320;
                        else
                          v810 = 4;
                        __asm { BR              X11 }
                      }
                      v811 = v809 + 1;
                    }
                    if (v811)
                    {
                      memcpy(v804, v805, v1377);
                      v447 = v1295;
                      goto LABEL_1281;
                    }
LABEL_1279:
                    (*(void (**)(void *, _BYTE *, uint64_t))(v1286 + 32))(v804, v805, v1292);
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v1287 + 32))(((unint64_t)v804 + v1293) & v1307, (unint64_t)&v805[v1293] & v1307, v1296);
                    v447 = v1295;
                    if (!v1352)
                      *((_BYTE *)v804 + v1320) = 0;
LABEL_1281:
                    v1148 = (_QWORD *)(((unint64_t)v452 + v1247) & 0xFFFFFFFFFFFFFFF8);
                    v1149 = (_QWORD *)(((unint64_t)v453 + v1247) & 0xFFFFFFFFFFFFFFF8);
                    *v1148 = *v1149;
                    v1150 = (_BYTE *)(((unint64_t)v1148 + v1251) & v1230);
                    v1151 = (_BYTE *)(((unint64_t)v1149 + v1251) & v1230);
                    if (v1291 >= 0x7FFFFFFF)
                    {
                      v1155 = (unint64_t)&v1151[v447] & v1305;
                      if (__swift_getEnumTagSinglePayload(v1155, v1283, v454) <= 1)
                      {
                        v1153 = v1151 + 8;
                        v1154 = ~v1359;
                        goto LABEL_1288;
                      }
                    }
                    else
                    {
                      v1152 = *(_QWORD *)((((unint64_t)v1149 + v1251) & v1230) + 0x10);
                      if (v1152 >= 0xFFFFFFFF)
                        LODWORD(v1152) = -1;
                      if ((int)v1152 - 1 < 0)
                      {
                        v1153 = v1151 + 8;
                        v1154 = ~v1359;
                        v1155 = (unint64_t)&v1151[v447] & v1305;
LABEL_1288:
                        *v1150 = *v1151;
                        memcpy(v1150 + 8, v1153, 0x69uLL);
                        v1156 = (unint64_t)&v1150[v447] & v1154;
                        if (!__swift_getEnumTagSinglePayload(v1155, 1, v454))
                        {
                          (*(void (**)(uint64_t, uint64_t, uint64_t))(v1279 + 32))(v1156, v1155, v454);
                          __swift_storeEnumTagSinglePayload(v1156, 0, 1, v454);
                          goto LABEL_1292;
                        }
                        v1157 = (void *)v1156;
                        v1158 = (const void *)v1155;
                        v1159 = v1345;
LABEL_1291:
                        memcpy(v1157, v1158, v1159);
LABEL_1292:
                        v198 = 20;
                        goto LABEL_1315;
                      }
                    }
                    v1157 = v1150;
                    v1158 = v1151;
                    v1159 = v778;
                    goto LABEL_1291;
                  }
                }
                v803 = 8 * v1320;
                v778 = v1350;
                memcpy(v795, v796, v1350);
                goto LABEL_739;
              }
LABEL_725:
              memcpy(v452, v453, v1232);
              v778 = v1350;
              goto LABEL_1281;
            }
            if (v1352 < 2)
              goto LABEL_723;
            v456 = (v1231 + v708) & v1309;
            v455 = v1297;
            if (v1289 >= v1297)
            {
              v455 = v1289;
              v457 = v1292;
            }
            else
            {
              v456 = (v1293 + v456) & v1307;
              v457 = v1296;
            }
          }
          if (__swift_getEnumTagSinglePayload(v456, v455, v457) < 2)
            goto LABEL_723;
          goto LABEL_725;
        case 0x15:
          if (__swift_getEnumTagSinglePayload((uint64_t)v139, 1, v1321))
          {
            memcpy(v138, v139, v1378);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1299 + 32))(v138, v139, v1321);
            __swift_storeEnumTagSinglePayload((uint64_t)v138, 0, 1, v1321);
          }
          v93 = v1311;
          v459 = ((unint64_t)v138 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v460 = ((unint64_t)v139 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v461 = *(_OWORD *)v460;
          v462 = *(_OWORD *)(v460 + 16);
          *(_QWORD *)(v459 + 32) = *(_QWORD *)(v460 + 32);
          *(_OWORD *)v459 = v461;
          *(_OWORD *)(v459 + 16) = v462;
          v463 = (v459 + 47) & 0xFFFFFFFFFFFFFFF8;
          v464 = (v460 + 47) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)v463 = *(_OWORD *)v464;
          *(_BYTE *)(v463 + 16) = *(_BYTE *)(v464 + 16);
          v198 = 21;
          goto LABEL_269;
        case 0x16:
          v1369 = v1315 + 1;
          v1376 = ~v1356;
          if (__swift_getEnumTagSinglePayload((uint64_t)v139, 1, v1321))
          {
            memcpy(v138, v139, v1378);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1299 + 32))(v138, v139, v1321);
            __swift_storeEnumTagSinglePayload((uint64_t)v138, 0, 1, v1321);
          }
          v1363 = v138;
          v465 = ((unint64_t)v138 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v466 = ((unint64_t)v139 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v467 = *(_OWORD *)v466;
          v468 = *(_OWORD *)(v466 + 16);
          *(_QWORD *)(v465 + 32) = *(_QWORD *)(v466 + 32);
          *(_OWORD *)v465 = v467;
          *(_OWORD *)(v465 + 16) = v468;
          v469 = (_OWORD *)((v465 + 47) & 0xFFFFFFFFFFFFFFF8);
          v470 = (_OWORD *)((v466 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v469 = *v470;
          v471 = (_QWORD *)(((unint64_t)v469 + 23) & 0xFFFFFFFFFFFFF8);
          v472 = (_QWORD *)(((unint64_t)v470 + 23) & 0xFFFFFFFFFFFFF8);
          *v471 = *v472;
          v473 = (_OWORD *)(((unint64_t)v471 + 15) & 0xFFFFFFFFFFFFFFF8);
          v474 = (_OWORD *)(((unint64_t)v472 + 15) & 0xFFFFFFFFFFFFFFF8);
          *v473 = *v474;
          v475 = (_OWORD *)(((unint64_t)v473 + v1280) & v1371);
          v476 = (_OWORD *)(((unint64_t)v474 + v1280) & v1371);
          if (v1226 > 0x7FFFFFFE)
          {
            v480 = (_OWORD *)(((unint64_t)v476 + 23) & 0xFFFFFFFFFFFFFFF8);
            v481 = ((unint64_t)v480 + 23) & 0xFFFFFFFFFFFFFFF8;
            v482 = __swift_getEnumTagSinglePayload((v1361 + v481 + 33) & v142, v1226, v1277);
            v478 = v1350;
            v479 = v1372;
            if (!v482)
              goto LABEL_373;
          }
          else
          {
            v477 = *(_QWORD *)((((unint64_t)v474 + v1280) & v1371) + 8);
            if (v477 >= 0xFFFFFFFF)
              LODWORD(v477) = -1;
            v478 = v1350;
            v479 = v1372;
            if ((v477 + 1) <= 1)
            {
              v480 = (_OWORD *)(((unint64_t)v476 + 23) & 0xFFFFFFFFFFFFFFF8);
              v481 = ((unint64_t)v480 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_373:
              *v475 = *v476;
              v484 = (_OWORD *)(((unint64_t)v475 + 23) & 0xFFFFFFFFFFFFFFF8);
              *v484 = *v480;
              v485 = ((unint64_t)v484 + 23) & 0xFFFFFFFFFFFFFFF8;
              *(_OWORD *)v485 = *(_OWORD *)v481;
              *(_BYTE *)(v485 + 16) = *(_BYTE *)(v481 + 16);
              v486 = ((unint64_t)v484 + 47) & 0xFFFFFFFFFFFFFFF8;
              v487 = ((unint64_t)v480 + 47) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)v486 = *(_QWORD *)v487;
              *(_BYTE *)(v486 + 8) = *(_BYTE *)(v487 + 8);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1331 + 32))((v1361 + 9 + v486) & v142, (v1361 + 9 + v487) & v142, v1277);
              v483 = v1372;
LABEL_374:
              *((_BYTE *)v475 + v483) = *((_BYTE *)v476 + v483);
              v488 = ((unint64_t)v475 + v483) & 0xFFFFFFFFFFFFFFF8;
              v489 = ((unint64_t)v476 + v483) & 0xFFFFFFFFFFFFFFF8;
              *(_OWORD *)(v488 + 8) = *(_OWORD *)(v489 + 8);
              v490 = (void *)((v1243 + v488) & v1309);
              v491 = (_BYTE *)((v1243 + v489) & v1309);
              v93 = v1311;
              if (v1352)
              {
                v492 = v1297;
                if (v1289 >= v1297)
                {
                  v493 = (v1243 + v489) & v1309;
                  v492 = v1289;
                  v494 = v1292;
                }
                else
                {
                  v493 = (unint64_t)&v491[v1293] & v1307;
                  v494 = v1296;
                }
                v698 = __swift_getEnumTagSinglePayload(v493, v492, v494);
              }
              else
              {
                if (!v491[v1320])
                  goto LABEL_1005;
                v652 = (v491[v1320] - 1) << v1228;
                if (v1320 > 3)
                  v652 = 0;
                if ((_DWORD)v1320)
                {
                  if (v1320 <= 3)
                    v653 = v1320;
                  else
                    v653 = 4;
                  __asm { BR              X11 }
                }
                v698 = v652 + 1;
              }
              if (v698)
              {
                memcpy(v490, v491, v1377);
                goto LABEL_1007;
              }
LABEL_1005:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1286 + 32))(v490, v491, v1292);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1287 + 32))(((unint64_t)v490 + v1293) & v1307, (unint64_t)&v491[v1293] & v1307, v1296);
              if (!v1352)
                *((_BYTE *)v490 + v1320) = 0;
LABEL_1007:
              v956 = (_QWORD *)(((unint64_t)v490 + v1348) & v1376);
              v957 = (uint64_t *)((unint64_t)&v491[v1348] & v1376);
              v958 = v1346;
              if ((v1297 & 0x80000000) != 0)
              {
                v960 = __swift_getEnumTagSinglePayload(((unint64_t)v957 + v1278) & v1307, v1297, v1296);
                v958 = v1346;
              }
              else
              {
                v959 = *v957;
                if ((unint64_t)*v957 >= 0xFFFFFFFF)
                  LODWORD(v959) = -1;
                v960 = v959 + 1;
              }
              if (v960)
              {
                memcpy(v956, v957, v958);
              }
              else
              {
                *v956 = *v957;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v1287 + 32))(((unint64_t)v956 + v1278) & v1307, ((unint64_t)v957 + v1278) & v1307, v1296);
              }
              v961 = (_BYTE *)(((unint64_t)v956 + v1281) & v1230);
              v962 = (_BYTE *)(((unint64_t)v957 + v1281) & v1230);
              if (v1291 >= 0x7FFFFFFF)
              {
                v966 = (const void *)((unint64_t)&v962[v1295] & v1305);
                if (__swift_getEnumTagSinglePayload((uint64_t)v966, v1283, v1294) <= 1)
                {
                  v964 = v962 + 8;
                  v965 = ~v1359;
                  goto LABEL_1022;
                }
              }
              else
              {
                v963 = *(_QWORD *)((((unint64_t)v957 + v1281) & v1230) + 0x10);
                if (v963 >= 0xFFFFFFFF)
                  LODWORD(v963) = -1;
                if ((int)v963 - 1 < 0)
                {
                  v964 = v962 + 8;
                  v965 = ~v1359;
                  v966 = (const void *)((unint64_t)&v962[v1295] & v1305);
LABEL_1022:
                  *v961 = *v962;
                  memcpy(v961 + 8, v964, 0x69uLL);
                  v967 = (void *)((unint64_t)&v961[v1295] & v965);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v966, 1, v1294))
                  {
                    memcpy(v967, v966, v1345);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1279 + 32))(v967, v966, v1294);
                    __swift_storeEnumTagSinglePayload((uint64_t)v967, 0, 1, v1294);
                  }
                  v478 = v1350;
LABEL_1027:
                  v968 = (unint64_t)&v961[v137 + v478];
                  v969 = (unint64_t)&v962[v137 + v478];
                  v970 = v969 & v143;
                  if (v1284 < 0x7FFFFFFF)
                  {
                    v971 = v1321;
                    if (*(_QWORD *)(((v1353 + v970) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                      goto LABEL_1029;
                  }
                  else
                  {
                    v971 = v1321;
                    if (__swift_getEnumTagSinglePayload(v969 & v143, v1349, v1321) >= 2)
                    {
LABEL_1029:
                      memcpy((void *)(v968 & v143), (const void *)(v969 & v143), v1282);
                      v972 = v1282;
                      goto LABEL_1036;
                    }
                  }
                  if (__swift_getEnumTagSinglePayload(v969 & v143, 1, v971))
                  {
                    memcpy((void *)(v968 & v143), (const void *)(v969 & v143), v1378);
                  }
                  else
                  {
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v1299 + 32))(v968 & v143, v969 & v143, v971);
                    __swift_storeEnumTagSinglePayload(v968 & v143, 0, 1, v971);
                  }
                  v973 = (v1353 + (v968 & v143)) & 0xFFFFFFFFFFFFFFF8;
                  v974 = (v1353 + v970) & 0xFFFFFFFFFFFFFFF8;
                  v975 = *(_OWORD *)v974;
                  v976 = *(_OWORD *)(v974 + 16);
                  *(_QWORD *)(v973 + 32) = *(_QWORD *)(v974 + 32);
                  *(_OWORD *)v973 = v975;
                  *(_OWORD *)(v973 + 16) = v976;
                  v977 = (v973 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v978 = (v974 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v979 = *(_OWORD *)v978;
                  v980 = *(_OWORD *)(v978 + 16);
                  *(_QWORD *)(v977 + 32) = *(_QWORD *)(v978 + 32);
                  *(_OWORD *)v977 = v979;
                  *(_OWORD *)(v977 + 16) = v980;
                  *(_OWORD *)((v977 + 47) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v978 + 47) & 0xFFFFFFFFFFFFF8);
                  v972 = v1282;
                  if (v1349)
                    v972 = ((((((v1315 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                         + 16;
LABEL_1036:
                  v981 = (v968 | v1360) + v972;
                  v982 = (v969 | v1360) + v972;
                  v983 = v982 & v143;
                  if (v1284 < 0x7FFFFFFF)
                  {
                    if (*(_QWORD *)(((v1353 + v983) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                      goto LABEL_1038;
                  }
                  else if (__swift_getEnumTagSinglePayload(v982 & v143, v1349, v971) >= 2)
                  {
LABEL_1038:
                    memcpy((void *)(v981 & v143), (const void *)(v982 & v143), v1282);
                    v984 = v1282;
                    goto LABEL_1045;
                  }
                  if (__swift_getEnumTagSinglePayload(v982 & v143, 1, v971))
                  {
                    memcpy((void *)(v981 & v143), (const void *)(v982 & v143), v1378);
                  }
                  else
                  {
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v1299 + 32))(v981 & v143, v982 & v143, v971);
                    __swift_storeEnumTagSinglePayload(v981 & v143, 0, 1, v971);
                  }
                  v985 = (v1353 + (v981 & v143)) & 0xFFFFFFFFFFFFFFF8;
                  v986 = (v1353 + v983) & 0xFFFFFFFFFFFFFFF8;
                  v987 = *(_OWORD *)v986;
                  v988 = *(_OWORD *)(v986 + 16);
                  *(_QWORD *)(v985 + 32) = *(_QWORD *)(v986 + 32);
                  *(_OWORD *)v985 = v987;
                  *(_OWORD *)(v985 + 16) = v988;
                  v989 = (v985 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v990 = (v986 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v991 = *(_OWORD *)v990;
                  v992 = *(_OWORD *)(v990 + 16);
                  *(_QWORD *)(v989 + 32) = *(_QWORD *)(v990 + 32);
                  *(_OWORD *)v989 = v991;
                  *(_OWORD *)(v989 + 16) = v992;
                  *(_OWORD *)((v989 + 47) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v990 + 47) & 0xFFFFFFFFFFFFF8);
                  v984 = v1282;
                  if (v1349)
                    v984 = ((((((v1315 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                         + 16;
LABEL_1045:
                  v993 = (char *)(((v981 | v1360) + v984) & v143);
                  v994 = (char *)(((v982 | v1360) + v984) & v143);
                  if (v1284 < 0x7FFFFFFF)
                  {
                    v996 = ~v1330;
                    v995 = v1349;
                    if (*(_QWORD *)(((unint64_t)&v994[v1353] & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                    {
LABEL_1047:
                      memcpy(v993, v994, v1282);
                      v265 = v1324;
                      v997 = v1348;
                      v998 = v1344;
                      v999 = v1370;
                      v1000 = v1372;
                      v1001 = ~v1356;
                      v1002 = v1281;
                      v1003 = v1276;
                      v1004 = v1259;
                      v1005 = v1260;
                      v1006 = v1337;
                      v1008 = v1221;
                      v1007 = v1222;
                      v1009 = v1220;
                      v1011 = ((((((v1378 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                            + 40;
                      v1010 = v1258;
                      v1013 = v1256;
                      v1012 = v1257;
                      v1014 = v1262;
                      v1015 = v1255;
                      if (!v995)
                        goto LABEL_1056;
                      goto LABEL_1055;
                    }
                  }
                  else
                  {
                    v995 = v1349;
                    v996 = ~v1330;
                    if (__swift_getEnumTagSinglePayload((uint64_t)v994, v1349, v971) >= 2)
                      goto LABEL_1047;
                  }
                  if (__swift_getEnumTagSinglePayload((uint64_t)v994, 1, v971))
                  {
                    memcpy(v993, v994, v1378);
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(v1299 + 32))(v993, v994, v971);
                    __swift_storeEnumTagSinglePayload((uint64_t)v993, 0, 1, v971);
                  }
                  v1014 = v1262;
                  v1016 = (unint64_t)&v993[v1353] & 0xFFFFFFFFFFFFFFF8;
                  v1017 = (unint64_t)&v994[v1353] & 0xFFFFFFFFFFFFFFF8;
                  v1018 = *(_OWORD *)v1017;
                  v1019 = *(_OWORD *)(v1017 + 16);
                  *(_QWORD *)(v1016 + 32) = *(_QWORD *)(v1017 + 32);
                  *(_OWORD *)v1016 = v1018;
                  *(_OWORD *)(v1016 + 16) = v1019;
                  v1020 = (v1016 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1021 = (v1017 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1022 = *(_OWORD *)v1021;
                  v1023 = *(_OWORD *)(v1021 + 16);
                  *(_QWORD *)(v1020 + 32) = *(_QWORD *)(v1021 + 32);
                  *(_OWORD *)v1020 = v1022;
                  *(_OWORD *)(v1020 + 16) = v1023;
                  *(_OWORD *)((v1020 + 47) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v1021 + 47) & 0xFFFFFFFFFFFFF8);
                  v265 = v1324;
                  v997 = v1348;
                  v998 = v1344;
                  v999 = v1370;
                  v1000 = v1372;
                  v1001 = ~v1356;
                  v1002 = v1281;
                  v1003 = v1276;
                  v1004 = v1259;
                  v1005 = v1260;
                  v1006 = v1337;
                  v1008 = v1221;
                  v1007 = v1222;
                  v1009 = v1220;
                  v1011 = ((((((v1378 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                        + 40;
                  v1010 = v1258;
                  v1013 = v1256;
                  v1012 = v1257;
                  v1015 = v1255;
                  if (!v995)
                    goto LABEL_1056;
                  v1282 = ((((((v1315 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                        + 16;
LABEL_1055:
                  v1369 = v1315;
LABEL_1056:
                  *(_QWORD *)&v993[v1282] = *(_QWORD *)&v994[v1282];
                  v1024 = v1269
                        + ((v1268
                          + ((v1268
                            + ((v1341
                              + ((v1002
                                + ((v997
                                  + ((v998
                                    + ((((((v1280
                                          + ((((((((v1369 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                            + 15) & 0xFFFFFFFFFFFFFFF8)) & v1371)
                                        + v1000) & 0xFFFFFFFFFFFFFFF8)
                                      + 23) & 0xFFFFFFFFFFFFFFF8)) & v1309)) & v1001)) & v996)) & v143)) & v143)) & v143);
                  if (v1005 > v1024)
                    v1024 = v1005;
                  if (v1024 <= v1273)
                    v1024 = v1273;
                  if (v1024 <= v1003)
                    v1024 = v1003;
                  if (v1024 <= v1272)
                    v1024 = v1272;
                  if (v1024 <= v1271)
                    v1024 = v1271;
                  if (v1024 <= v1270)
                    v1024 = v1270;
                  if (v1024 <= v1274)
                    v1024 = (((((v1370 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                          + 16;
                  if (v1024 <= v1275)
                    v1024 = v1275;
                  if (v1024 <= v1265)
                    v1024 = v1265;
                  if (v1024 <= v1264)
                    v1024 = v1264;
                  if (v1024 <= v1263)
                    v1024 = v1263;
                  if (v1024 <= v1267)
                    v1024 = v1267;
                  if (v1024 <= v1266)
                    v1024 = v1266;
                  if (v1024 <= v1343)
                    v1024 = v1343;
                  if (v1024 <= v1339)
                    v1024 = v1339;
                  if (v1024 <= v1005)
                    v1024 = v1005;
                  if (v1024 <= v1223)
                    v1024 = v1223;
                  if (v1024 <= v1325)
                    v1024 = ((v1370 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
                  if (v1024 <= v1261)
                    v1024 = v1261;
                  if (v1024 <= v1015)
                    v1024 = v1015;
                  if (v1024 <= v1013)
                    v1024 = v1013;
                  if (v1024 <= v1012)
                    v1024 = v1012;
                  if (v1024 <= v1014)
                    v1024 = v1014;
                  if (v1024 <= v1011)
                    v1024 = v1011;
                  if (v1024 <= v1010)
                    v1024 = v1010;
                  if (v1024 <= v1006)
                    v1024 = v1006;
                  if (v1024 <= v1004)
                    v1024 = v1004;
                  if (v1024 <= v1224)
                    v1024 = v1224;
                  if (v1024 <= v1008)
                    v1024 = v1008;
                  if (v1024 <= v999)
                    v1024 = v999;
                  if (v1024 <= v1225)
                    v1024 = v1225;
                  if (v1024 <= v1007)
                    v1024 = v1007;
                  if (v1024 <= v1009)
                    v1024 = v1009;
                  if (v1024 <= 8)
                    v140 = 8;
                  else
                    v140 = v1024;
                  v198 = 22;
                  goto LABEL_1126;
                }
              }
              memcpy(v961, v962, v478);
              goto LABEL_1027;
            }
          }
          v483 = v479;
          memcpy(v475, v476, v479);
          goto LABEL_374;
        case 0x17:
          *v138 = *v139;
          v193 = v138;
          v221 = (_BYTE *)(((unint64_t)v138 + v1330 + 8) & v1230);
          v222 = (_BYTE *)(((unint64_t)v139 + v1330 + 8) & v1230);
          *v221 = *v222;
          memcpy(v221 + 8, v222 + 8, 0x69uLL);
          v223 = (void *)((unint64_t)&v221[v1295] & v1305);
          v224 = (const void *)((v1295 + (((unint64_t)v139 + v1330 + 8) & v1230)) & v1305);
          if (__swift_getEnumTagSinglePayload((uint64_t)v224, 1, v1294))
          {
            memcpy(v223, v224, v1345);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1279 + 32))(v223, v224, v1294);
            __swift_storeEnumTagSinglePayload((uint64_t)v223, 0, 1, v1294);
          }
          v198 = 23;
          goto LABEL_486;
        case 0x18:
          if (__swift_getEnumTagSinglePayload((uint64_t)v139, 1, v1321))
          {
            memcpy(v138, v139, v1378);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1299 + 32))(v138, v139, v1321);
            __swift_storeEnumTagSinglePayload((uint64_t)v138, 0, 1, v1321);
          }
          v93 = v1311;
          v495 = ((unint64_t)v138 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v496 = ((unint64_t)v139 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v497 = *(_OWORD *)v496;
          v498 = *(_OWORD *)(v496 + 16);
          *(_QWORD *)(v495 + 32) = *(_QWORD *)(v496 + 32);
          *(_OWORD *)v495 = v497;
          *(_OWORD *)(v495 + 16) = v498;
          v499 = (_QWORD *)((v495 + 47) & 0xFFFFFFFFFFFFF8);
          v500 = (_QWORD *)((v496 + 47) & 0xFFFFFFFFFFFFF8);
          *v499 = *v500;
          *(_OWORD *)(((unint64_t)v499 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v500 + 15) & 0xFFFFFFFFFFFFF8);
          v198 = 24;
          goto LABEL_269;
        case 0x19:
          *v138 = *v139;
          v198 = 25;
          goto LABEL_268;
        case 0x1A:
          *v138 = *v139;
          v198 = 26;
          goto LABEL_268;
        case 0x1B:
          *v138 = *v139;
          v198 = 27;
          goto LABEL_268;
        case 0x1C:
          *v138 = *v139;
          v198 = 28;
          goto LABEL_268;
        case 0x1D:
          v225 = *(_OWORD *)v139;
          v226 = *((_OWORD *)v139 + 1);
          v138[4] = v139[4];
          *(_OWORD *)v138 = v225;
          *((_OWORD *)v138 + 1) = v226;
          v193 = v138;
          v227 = (char *)(((unint64_t)v138 + v1351) & v1229);
          v228 = (const void *)(((unint64_t)v139 + v1351) & v1229);
          if (__swift_getEnumTagSinglePayload((uint64_t)v228, 1, v1321))
          {
            v229 = v1378;
            memcpy(v227, v228, v1378);
            v93 = v1311;
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(v1299 + 32))(v227, v228, v1321);
            __swift_storeEnumTagSinglePayload((uint64_t)v227, 0, 1, v1321);
            v93 = v1311;
            v229 = v1378;
          }
          v501 = &v227[v229];
          *v501 = *((_BYTE *)v228 + v229);
          v501[1] = *((_BYTE *)v228 + v229 + 1);
          v502 = (unint64_t)&v227[v229 + 9] & 0xFFFFFFFFFFFFFFF8;
          v503 = ((unint64_t)v228 + v229 + 9) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)v502 = *(_OWORD *)v503;
          *(_BYTE *)(v502 + 16) = *(_BYTE *)(v503 + 16);
          v198 = 29;
          goto LABEL_487;
        case 0x1E:
          v230 = *(_OWORD *)v139;
          v231 = *((_OWORD *)v139 + 1);
          v138[4] = v139[4];
          *(_OWORD *)v138 = v230;
          *((_OWORD *)v138 + 1) = v231;
          *((_BYTE *)v138 + 40) = *((_BYTE *)v139 + 40);
          *((_BYTE *)v138 + 41) = *((_BYTE *)v139 + 41);
          *((_BYTE *)v138 + 42) = *((_BYTE *)v139 + 42);
          *((_BYTE *)v138 + 43) = *((_BYTE *)v139 + 43);
          v193 = v138;
          v232 = (_OWORD *)(((unint64_t)v138 + 51) & 0xFFFFFFFFFFFFFFF8);
          v233 = (_OWORD *)(((unint64_t)v139 + 51) & 0xFFFFFFFFFFFFFFF8);
          *v232 = *v233;
          v234 = (_OWORD *)(((unint64_t)v232 + 23) & 0xFFFFFFFFFFFFFFF8);
          v235 = (_OWORD *)(((unint64_t)v233 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v234 = *v235;
          v236 = (void *)(((unint64_t)v234 + v1335) & v1229);
          v237 = (const void *)(((unint64_t)v235 + v1335) & v1229);
          if (__swift_getEnumTagSinglePayload((uint64_t)v237, 1, v1321))
          {
            memcpy(v236, v237, v1378);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1299 + 32))(v236, v237, v1321);
            __swift_storeEnumTagSinglePayload((uint64_t)v236, 0, 1, v1321);
          }
          v198 = 30;
          goto LABEL_486;
        case 0x1F:
          *v138 = *v139;
          v198 = 31;
          goto LABEL_268;
        case 0x20:
          *(_OWORD *)v138 = *(_OWORD *)v139;
          v193 = v138;
          v238 = ((unint64_t)v138 + 23) & 0xFFFFFFFFFFFFFFF8;
          v239 = ((unint64_t)v139 + 23) & 0xFFFFFFFFFFFFFFF8;
          v240 = *(_OWORD *)v239;
          v241 = *(_OWORD *)(v239 + 16);
          *(_QWORD *)(v238 + 32) = *(_QWORD *)(v239 + 32);
          *(_OWORD *)v238 = v240;
          *(_OWORD *)(v238 + 16) = v241;
          v242 = (void *)((v1351 + v238) & v1229);
          v243 = (const void *)((v1351 + v239) & v1229);
          if (__swift_getEnumTagSinglePayload((uint64_t)v243, 1, v1321))
          {
            memcpy(v242, v243, v1378);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1299 + 32))(v242, v243, v1321);
            __swift_storeEnumTagSinglePayload((uint64_t)v242, 0, 1, v1321);
          }
          v198 = 32;
          goto LABEL_486;
        case 0x21:
          if (v1352)
          {
            v244 = v1297;
            v245 = v1320;
            if (v1289 >= v1297)
            {
              v246 = (uint64_t)v139;
              v244 = v1289;
              v247 = v1292;
            }
            else
            {
              v246 = ((unint64_t)v139 + v1293) & v1307;
              v247 = v1296;
            }
            v694 = __swift_getEnumTagSinglePayload(v246, v244, v247);
            v504 = v1321;
            v505 = v1378 + 7;
            v506 = v1378;
          }
          else
          {
            v245 = v1320;
            v504 = v1321;
            v505 = v1378 + 7;
            v506 = v1378;
            if (!*((_BYTE *)v139 + v1320))
              goto LABEL_756;
            v507 = (*((unsigned __int8 *)v139 + v1320) - 1) << v1228;
            if (v1320 > 3)
              v507 = 0;
            if ((_DWORD)v1320)
            {
              if (v1320 <= 3)
                v508 = v1320;
              else
                v508 = 4;
              __asm { BR              X11 }
            }
            v694 = v507 + 1;
          }
          if (v694)
          {
            memcpy(v138, v139, v1377);
            goto LABEL_758;
          }
LABEL_756:
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1286 + 32))(v138, v139, v1292);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1287 + 32))(((unint64_t)v138 + v1293) & v1307, ((unint64_t)v139 + v1293) & v1307, v1296);
          if (!v1352)
            *((_BYTE *)v138 + v245) = 0;
LABEL_758:
          v193 = v138;
          v812 = ((unint64_t)v138 + v1327) & 0xFFFFFFFFFFFFFFF8;
          v813 = ((unint64_t)v139 + v1327) & 0xFFFFFFFFFFFFFFF8;
          v814 = *(_OWORD *)v813;
          v815 = *(_OWORD *)(v813 + 16);
          *(_QWORD *)(v812 + 32) = *(_QWORD *)(v813 + 32);
          *(_OWORD *)v812 = v814;
          *(_OWORD *)(v812 + 16) = v815;
          v816 = (void *)((v1351 + v812) & v1229);
          v817 = (const void *)((v1351 + v813) & v1229);
          v93 = v1311;
          if (__swift_getEnumTagSinglePayload((uint64_t)v817, 1, v504))
          {
            memcpy(v816, v817, v506);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1299 + 32))(v816, v817, v504);
            __swift_storeEnumTagSinglePayload((uint64_t)v816, 0, 1, v504);
          }
          v818 = (_OWORD *)(((unint64_t)v816 + v505) & 0xFFFFFFFFFFFFFFF8);
          v819 = (_OWORD *)(((unint64_t)v817 + v505) & 0xFFFFFFFFFFFFFFF8);
          *v818 = *v819;
          *(_OWORD *)(((unint64_t)v818 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v819 + 23) & 0xFFFFFFFFFFFFF8);
          v198 = 33;
          goto LABEL_487;
        case 0x22:
          if (__swift_getEnumTagSinglePayload((uint64_t)v139, 1, v1321))
          {
            memcpy(v138, v139, v1378);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1299 + 32))(v138, v139, v1321);
            __swift_storeEnumTagSinglePayload((uint64_t)v138, 0, 1, v1321);
          }
          v1365 = v138;
          v509 = ((unint64_t)v138 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v510 = ((unint64_t)v139 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v511 = *(_OWORD *)v510;
          v512 = *(_OWORD *)(v510 + 16);
          *(_QWORD *)(v509 + 32) = *(_QWORD *)(v510 + 32);
          *(_OWORD *)v509 = v511;
          *(_OWORD *)(v509 + 16) = v512;
          v513 = (_BYTE *)((v1374 + v509) & v1230);
          v514 = (_BYTE *)((v1374 + v510) & v1230);
          *v513 = *v514;
          memcpy(v513 + 8, v514 + 8, 0x69uLL);
          v515 = (void *)((unint64_t)&v513[v1295] & v1305);
          v516 = (const void *)((unint64_t)&v514[v1295] & v1305);
          if (__swift_getEnumTagSinglePayload((uint64_t)v516, 1, v1294))
          {
            memcpy(v515, v516, v1345);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1279 + 32))(v515, v516, v1294);
            __swift_storeEnumTagSinglePayload((uint64_t)v515, 0, 1, v1294);
          }
          v93 = v1311;
          v654 = (_OWORD *)((unint64_t)&v513[v1334] & 0xFFFFFFFFFFFFFFF8);
          v655 = (_OWORD *)((unint64_t)&v514[v1334] & 0xFFFFFFFFFFFFFFF8);
          *v654 = *v655;
          v656 = ((unint64_t)v654 + 23) & 0xFFFFFFFFFFFFFFF8;
          v657 = ((unint64_t)v655 + 23) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)v656 = *(_OWORD *)v657;
          *(_BYTE *)(v656 + 16) = *(_BYTE *)(v657 + 16);
          *(_BYTE *)(v656 + 17) = *(_BYTE *)(v657 + 17);
          v658 = (void *)((v1239 + v656) & v1309);
          v659 = (_BYTE *)((v1239 + v657) & v1309);
          if (v1352)
          {
            v660 = v1297;
            if (v1289 >= v1297)
            {
              v661 = (v1239 + v657) & v1309;
              v660 = v1289;
              v662 = v1292;
            }
            else
            {
              v661 = (unint64_t)&v659[v1293] & v1307;
              v662 = v1296;
            }
            v702 = __swift_getEnumTagSinglePayload(v661, v660, v662);
          }
          else
          {
            if (!v659[v1320])
              goto LABEL_934;
            v690 = (v659[v1320] - 1) << v1228;
            if (v1320 > 3)
              v690 = 0;
            if ((_DWORD)v1320)
            {
              if (v1320 <= 3)
                v691 = v1320;
              else
                v691 = 4;
              __asm { BR              X11 }
            }
            v702 = v690 + 1;
          }
          if (v702)
          {
            memcpy(v658, v659, v1377);
            goto LABEL_936;
          }
LABEL_934:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1286 + 32))(v658, v659, v1292);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1287 + 32))(((unint64_t)v658 + v1293) & v1307, (unint64_t)&v659[v1293] & v1307, v1296);
          if (!v1352)
            *((_BYTE *)v658 + v1320) = 0;
LABEL_936:
          v198 = 34;
          goto LABEL_1315;
        case 0x23:
          if (__swift_getEnumTagSinglePayload((uint64_t)v139, 1, v1321))
          {
            memcpy(v138, v139, v1378);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1299 + 32))(v138, v139, v1321);
            __swift_storeEnumTagSinglePayload((uint64_t)v138, 0, 1, v1321);
          }
          v1365 = v138;
          v517 = ((unint64_t)v138 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v518 = ((unint64_t)v139 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v519 = *(_OWORD *)v518;
          v520 = *(_OWORD *)(v518 + 16);
          *(_QWORD *)(v517 + 32) = *(_QWORD *)(v518 + 32);
          *(_OWORD *)v517 = v519;
          *(_OWORD *)(v517 + 16) = v520;
          v521 = (_BYTE *)((v1374 + v517) & v1230);
          v522 = (_BYTE *)((v1374 + v518) & v1230);
          *v521 = *v522;
          memcpy(v521 + 8, v522 + 8, 0x69uLL);
          v523 = (void *)((unint64_t)&v521[v1295] & v1305);
          v524 = (const void *)((unint64_t)&v522[v1295] & v1305);
          if (__swift_getEnumTagSinglePayload((uint64_t)v524, 1, v1294))
          {
            memcpy(v523, v524, v1345);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1279 + 32))(v523, v524, v1294);
            __swift_storeEnumTagSinglePayload((uint64_t)v523, 0, 1, v1294);
          }
          v93 = v1311;
          v663 = (_OWORD *)((unint64_t)&v521[v1334] & 0xFFFFFFFFFFFFFFF8);
          v664 = (_OWORD *)((unint64_t)&v522[v1334] & 0xFFFFFFFFFFFFFFF8);
          *v663 = *v664;
          v665 = ((unint64_t)v663 + 23) & 0xFFFFFFFFFFFFFFF8;
          v666 = ((unint64_t)v664 + 23) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)v665 = *(_OWORD *)v666;
          *(_BYTE *)(v665 + 16) = *(_BYTE *)(v666 + 16);
          *(_BYTE *)(v665 + 17) = *(_BYTE *)(v666 + 17);
          v667 = (_OWORD *)((v665 + 25) & 0xFFFFFFFFFFFFFFF8);
          v668 = (_OWORD *)((v666 + 25) & 0xFFFFFFFFFFFFFFF8);
          *v667 = *v668;
          v669 = (_OWORD *)(((unint64_t)v667 + 23) & 0xFFFFFFFFFFFFFFF8);
          v670 = (_OWORD *)(((unint64_t)v668 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v669 = *v670;
          v671 = (_OWORD *)(((unint64_t)v669 + 23) & 0xFFFFFFFFFFFFFFF8);
          v672 = (_OWORD *)(((unint64_t)v670 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v671 = *v672;
          v673 = (_OWORD *)(((unint64_t)v671 + 23) & 0xFFFFFFFFFFFFFFF8);
          v674 = (_OWORD *)(((unint64_t)v672 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v673 = *v674;
          v675 = (_QWORD *)(((unint64_t)v673 + 23) & 0xFFFFFFFFFFFFFFF8);
          v676 = (_QWORD *)(((unint64_t)v674 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v675 = *v676;
          v677 = (void *)(((unint64_t)v675 + v1329) & v1309);
          v678 = (_BYTE *)(((unint64_t)v676 + v1329) & v1309);
          if (v1352)
          {
            v679 = v1297;
            if (v1289 >= v1297)
            {
              v680 = ((unint64_t)v676 + v1329) & v1309;
              v679 = v1289;
              v681 = v1292;
            }
            else
            {
              v680 = (unint64_t)&v678[v1293] & v1307;
              v681 = v1296;
            }
            v703 = __swift_getEnumTagSinglePayload(v680, v679, v681);
          }
          else
          {
            if (!v678[v1320])
              goto LABEL_939;
            v692 = (v678[v1320] - 1) << v1228;
            if (v1320 > 3)
              v692 = 0;
            if ((_DWORD)v1320)
            {
              if (v1320 <= 3)
                v693 = v1320;
              else
                v693 = 4;
              __asm { BR              X11 }
            }
            v703 = v692 + 1;
          }
          if (v703)
          {
            memcpy(v677, v678, v1377);
            goto LABEL_941;
          }
LABEL_939:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1286 + 32))(v677, v678, v1292);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1287 + 32))(((unint64_t)v677 + v1293) & v1307, (unint64_t)&v678[v1293] & v1307, v1296);
          if (!v1352)
            *((_BYTE *)v677 + v1320) = 0;
LABEL_941:
          *(_OWORD *)(((unint64_t)v677 + v1327) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v678[v1327] & 0xFFFFFFFFFFFFF8);
          v198 = 35;
          goto LABEL_1315;
        case 0x24:
          if (__swift_getEnumTagSinglePayload((uint64_t)v139, 1, v1321))
          {
            memcpy(v138, v139, v1378);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1299 + 32))(v138, v139, v1321);
            __swift_storeEnumTagSinglePayload((uint64_t)v138, 0, 1, v1321);
          }
          v93 = v1311;
          v525 = ((unint64_t)v138 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v526 = ((unint64_t)v139 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v527 = *(_OWORD *)v526;
          v528 = *(_OWORD *)(v526 + 16);
          *(_QWORD *)(v525 + 32) = *(_QWORD *)(v526 + 32);
          *(_OWORD *)v525 = v527;
          *(_OWORD *)(v525 + 16) = v528;
          v529 = (_OWORD *)((v525 + 47) & 0xFFFFFFFFFFFFFFF8);
          v530 = (_OWORD *)((v526 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v529 = *v530;
          v531 = ((unint64_t)v529 + 23) & 0xFFFFFFFFFFFFFFF8;
          v532 = ((unint64_t)v530 + 23) & 0xFFFFFFFFFFFFFFF8;
          v533 = *(_OWORD *)v532;
          v534 = *(_OWORD *)(v532 + 16);
          *(_QWORD *)(v531 + 32) = *(_QWORD *)(v532 + 32);
          *(_OWORD *)v531 = v533;
          *(_OWORD *)(v531 + 16) = v534;
          v198 = 36;
          goto LABEL_269;
        case 0x25:
          if (__swift_getEnumTagSinglePayload((uint64_t)v139, 1, v1321))
          {
            memcpy(v138, v139, v1378);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1299 + 32))(v138, v139, v1321);
            __swift_storeEnumTagSinglePayload((uint64_t)v138, 0, 1, v1321);
          }
          v93 = v1311;
          v535 = ((unint64_t)v138 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v536 = ((unint64_t)v139 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v537 = *(_OWORD *)v536;
          v538 = *(_OWORD *)(v536 + 16);
          *(_QWORD *)(v535 + 32) = *(_QWORD *)(v536 + 32);
          *(_OWORD *)v535 = v537;
          *(_OWORD *)(v535 + 16) = v538;
          v539 = (_QWORD *)((v535 + 47) & 0xFFFFFFFFFFFFF8);
          v540 = (_QWORD *)((v536 + 47) & 0xFFFFFFFFFFFFF8);
          *v539 = *v540;
          *(_QWORD *)(((unint64_t)v539 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v540 + 15) & 0xFFFFFFFFFFFFF8);
          v198 = 37;
          goto LABEL_269;
        case 0x26:
          if (__swift_getEnumTagSinglePayload((uint64_t)v139, 1, v1321))
          {
            memcpy(v138, v139, v1378);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1299 + 32))(v138, v139, v1321);
            __swift_storeEnumTagSinglePayload((uint64_t)v138, 0, 1, v1321);
          }
          v93 = v1311;
          v541 = ((unint64_t)v138 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v542 = ((unint64_t)v139 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v543 = *(_OWORD *)v542;
          v544 = *(_OWORD *)(v542 + 16);
          *(_QWORD *)(v541 + 32) = *(_QWORD *)(v542 + 32);
          *(_OWORD *)v541 = v543;
          *(_OWORD *)(v541 + 16) = v544;
          v545 = (_OWORD *)((v541 + 47) & 0xFFFFFFFFFFFFFFF8);
          v546 = (_OWORD *)((v542 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v545 = *v546;
          v547 = (_OWORD *)(((unint64_t)v545 + 23) & 0xFFFFFFFFFFFFFFF8);
          v548 = (_OWORD *)(((unint64_t)v546 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v547 = *v548;
          v549 = ((unint64_t)v547 + 23) & 0xFFFFFFFFFFFFFFF8;
          v550 = ((unint64_t)v548 + 23) & 0xFFFFFFFFFFFFFFF8;
          v551 = *(_OWORD *)v550;
          v552 = *(_OWORD *)(v550 + 16);
          *(_QWORD *)(v549 + 32) = *(_QWORD *)(v550 + 32);
          *(_OWORD *)v549 = v551;
          *(_OWORD *)(v549 + 16) = v552;
          v553 = (v549 + 47) & 0xFFFFFFFFFFFFFFF8;
          v554 = (v550 + 47) & 0xFFFFFFFFFFFFFFF8;
          v555 = *(_OWORD *)v554;
          v556 = *(_OWORD *)(v554 + 16);
          *(_QWORD *)(v553 + 32) = *(_QWORD *)(v554 + 32);
          *(_OWORD *)v553 = v555;
          *(_OWORD *)(v553 + 16) = v556;
          v198 = 38;
          goto LABEL_269;
        case 0x27:
          if (__swift_getEnumTagSinglePayload((uint64_t)v139, 1, v1321))
          {
            memcpy(v138, v139, v1378);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1299 + 32))(v138, v139, v1321);
            __swift_storeEnumTagSinglePayload((uint64_t)v138, 0, 1, v1321);
          }
          v93 = v1311;
          v557 = ((unint64_t)v138 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v558 = ((unint64_t)v139 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v559 = *(_OWORD *)v558;
          v560 = *(_OWORD *)(v558 + 16);
          *(_QWORD *)(v557 + 32) = *(_QWORD *)(v558 + 32);
          *(_OWORD *)v557 = v559;
          *(_OWORD *)(v557 + 16) = v560;
          *(_QWORD *)((v557 + 47) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v558 + 47) & 0xFFFFFFFFFFFFF8);
          v198 = 39;
          goto LABEL_269;
        case 0x28:
          v248 = *(_OWORD *)v139;
          v249 = *((_OWORD *)v139 + 1);
          v138[4] = v139[4];
          *(_OWORD *)v138 = v248;
          *((_OWORD *)v138 + 1) = v249;
          v1363 = v138;
          v250 = (void *)(((unint64_t)v138 + v1351) & v1229);
          v251 = (const void *)(((unint64_t)v139 + v1351) & v1229);
          if (__swift_getEnumTagSinglePayload((uint64_t)v251, 1, v1321))
          {
            memcpy(v250, v251, v1378);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1299 + 32))(v250, v251, v1321);
            __swift_storeEnumTagSinglePayload((uint64_t)v250, 0, 1, v1321);
          }
          v93 = v1311;
          v561 = 7;
          if (!v1349)
            v561 = 8;
          v562 = v1315 + v561;
          *(_QWORD *)(((unint64_t)v250 + v562) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v251 + v562) & 0xFFFFFFFFFFFFF8);
          v563 = v1269
               + ((v1268
                 + ((v1268
                   + ((v1341
                     + ((v1281
                       + ((v1348
                         + ((v1344
                           + ((((((v1280
                                 + (((((((v562 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                   + 15) & 0xFFFFFFFFFFFFFFF8)) & v1371)
                               + v1372) & 0xFFFFFFFFFFFFFFF8)
                             + 23) & 0xFFFFFFFFFFFFFFF8)) & v1309)) & ~v1356)) & v1230)) & v143)) & v143)) & v143);
          if (v1260 > v563)
            v563 = v1260;
          if (v563 <= v1273)
            v563 = v1273;
          if (v563 <= v1276)
            v563 = v1276;
          if (v563 <= v1272)
            v563 = v1272;
          if (v563 <= v1271)
            v563 = v1271;
          if (v563 <= v1270)
            v563 = v1270;
          if (v563 <= v1274)
            v563 = (((((v1370 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
          if (v563 <= v1275)
            v563 = v1275;
          if (v563 <= v1265)
            v563 = v1265;
          if (v563 <= v1264)
            v563 = v1264;
          if (v563 <= v65)
            v563 = v65;
          if (v563 <= v1267)
            v563 = v1267;
          if (v563 <= v1266)
            v563 = v1266;
          if (v563 <= v1343)
            v563 = v1343;
          if (v563 <= v1339)
            v563 = v1339;
          if (v563 <= v1260)
            v563 = v1260;
          if (v563 <= v1223)
            v563 = v1223;
          if (v563 <= v1325)
            v563 = ((v1370 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
          if (v563 <= v1261)
            v563 = v1261;
          if (v563 <= v1255)
            v563 = v1255;
          if (v563 <= v73)
            v563 = v73;
          if (v563 <= v1257)
            v563 = v1257;
          if (v563 <= v1262)
            v563 = v1262;
          if (v563 <= ((((((v1378 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                     + 40)
            v563 = ((((((v1378 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                 + 40;
          if (v563 <= v1258)
            v563 = v1258;
          if (v563 <= v1337)
            v563 = v1337;
          if (v563 <= v1259)
            v563 = v1259;
          if (v563 <= v1224)
            v563 = v1224;
          if (v563 <= v1221)
            v563 = v1221;
          if (v563 <= v1370)
            v563 = v1370;
          if (v563 <= v1225)
            v563 = v1225;
          if (v563 <= v1222)
            v563 = v1222;
          if (v563 <= v1220)
            v563 = v1220;
          if (v563 <= 8)
            v140 = 8;
          else
            v140 = v563;
          v198 = 40;
          v265 = v1324;
          goto LABEL_1126;
        case 0x29:
          v252 = *(_OWORD *)v139;
          v253 = *((_OWORD *)v139 + 1);
          v138[4] = v139[4];
          *(_OWORD *)v138 = v252;
          *((_OWORD *)v138 + 1) = v253;
          v193 = v138;
          v254 = (void *)(((unint64_t)v138 + v1351) & v1229);
          v255 = (const void *)(((unint64_t)v139 + v1351) & v1229);
          if (__swift_getEnumTagSinglePayload((uint64_t)v255, 1, v1321))
          {
            memcpy(v254, v255, v1378);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1299 + 32))(v254, v255, v1321);
            __swift_storeEnumTagSinglePayload((uint64_t)v254, 0, 1, v1321);
          }
          v93 = v1311;
          v564 = (_QWORD *)(((unint64_t)v254 + v1353) & 0xFFFFFFFFFFFFF8);
          v565 = (_QWORD *)(((unint64_t)v255 + v1353) & 0xFFFFFFFFFFFFFFF8);
          *v564 = *v565;
          *(_QWORD *)(((unint64_t)v564 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v565 + 15) & 0xFFFFFFFFFFFFF8);
          v198 = 41;
          goto LABEL_487;
        case 0x2A:
          *v138 = *v139;
          v198 = 42;
          goto LABEL_268;
        case 0x2B:
          v256 = *(_OWORD *)v139;
          v257 = *((_OWORD *)v139 + 1);
          v138[4] = v139[4];
          *(_OWORD *)v138 = v256;
          *((_OWORD *)v138 + 1) = v257;
          v193 = v138;
          v258 = (void *)(((unint64_t)v138 + v1351) & v1229);
          v259 = (const void *)(((unint64_t)v139 + v1351) & v1229);
          if (__swift_getEnumTagSinglePayload((uint64_t)v259, 1, v1321))
          {
            memcpy(v258, v259, v1378);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1299 + 32))(v258, v259, v1321);
            __swift_storeEnumTagSinglePayload((uint64_t)v258, 0, 1, v1321);
          }
          v198 = 43;
LABEL_486:
          v93 = v1311;
          goto LABEL_487;
        case 0x2C:
          *v138 = *v139;
          v198 = 44;
          goto LABEL_268;
        case 0x2D:
          v260 = ~v1356;
          if (__swift_getEnumTagSinglePayload((uint64_t)v139, 1, v1321))
          {
            memcpy(v138, v139, v1378);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1299 + 32))(v138, v139, v1321);
            __swift_storeEnumTagSinglePayload((uint64_t)v138, 0, 1, v1321);
          }
          v566 = ((unint64_t)v138 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v567 = ((unint64_t)v139 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v568 = *(_OWORD *)v567;
          v569 = *(_OWORD *)(v567 + 16);
          *(_QWORD *)(v566 + 32) = *(_QWORD *)(v567 + 32);
          *(_OWORD *)v566 = v568;
          *(_OWORD *)(v566 + 16) = v569;
          v570 = (v566 + 47) & 0xFFFFFFFFFFFFFFF8;
          v571 = (v567 + 47) & 0xFFFFFFFFFFFFFFF8;
          v572 = *(_OWORD *)v571;
          v573 = *(_OWORD *)(v571 + 16);
          *(_QWORD *)(v570 + 32) = *(_QWORD *)(v571 + 32);
          *(_OWORD *)v570 = v572;
          *(_OWORD *)(v570 + 16) = v573;
          v574 = (_OWORD *)((v570 + 47) & 0xFFFFFFFFFFFFFFF8);
          v575 = (_OWORD *)((v571 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v574 = *v575;
          v576 = (_OWORD *)(((unint64_t)v574 + 23) & 0xFFFFFFFFFFFFFFF8);
          v577 = (_OWORD *)(((unint64_t)v575 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v576 = *v577;
          v578 = (_OWORD *)(((unint64_t)v576 + 23) & 0xFFFFFFFFFFFFFFF8);
          v579 = (_OWORD *)(((unint64_t)v577 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v578 = *v579;
          v580 = (_OWORD *)(((unint64_t)v578 + 23) & 0xFFFFFFFFFFFFFFF8);
          v581 = (_OWORD *)(((unint64_t)v579 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v580 = *v581;
          v582 = ((unint64_t)v580 + 23) & 0xFFFFFFFFFFFFFFF8;
          v583 = ((unint64_t)v581 + 23) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)v582 = *(_OWORD *)v583;
          *(_BYTE *)(v582 + 16) = *(_BYTE *)(v583 + 16);
          v584 = (_QWORD *)(((unint64_t)v580 + 47) & 0xFFFFFFFFFFFFFFF8);
          v585 = (_QWORD *)(((unint64_t)v581 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v584 = *v585;
          v586 = (void *)(((unint64_t)v584 + v1329) & v1309);
          v587 = (_BYTE *)(((unint64_t)v585 + v1329) & v1309);
          if (v1352)
          {
            v588 = 8 * v1320;
            v589 = v1297;
            if (v1289 >= v1297)
            {
              v590 = ((unint64_t)v585 + v1329) & v1309;
              v589 = v1289;
              v591 = v1292;
            }
            else
            {
              v590 = (unint64_t)&v587[v1293] & v1307;
              v591 = v1296;
            }
            v699 = __swift_getEnumTagSinglePayload(v590, v589, v591);
            v93 = v1311;
            v682 = v1294;
          }
          else
          {
            v588 = 8 * v1320;
            v93 = v1311;
            v682 = v1294;
            if (!v587[v1320])
              goto LABEL_1129;
            v683 = (v587[v1320] - 1) << v1228;
            if (v1320 > 3)
              v683 = 0;
            if ((_DWORD)v1320)
            {
              if (v1320 <= 3)
                v684 = v1320;
              else
                v684 = 4;
              __asm { BR              X11 }
            }
            v699 = v683 + 1;
          }
          if (v699)
          {
            memcpy(v586, v587, v1377);
            goto LABEL_1131;
          }
LABEL_1129:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1286 + 32))(v586, v587, v1292);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1287 + 32))(((unint64_t)v586 + v1293) & v1307, (unint64_t)&v587[v1293] & v1307, v1296);
          if (!v1352)
            *((_BYTE *)v586 + v1320) = 0;
LABEL_1131:
          v1025 = (void *)(((unint64_t)v586 + v1254) & v1309);
          v1026 = (_BYTE *)((unint64_t)&v587[v1254] & v1309);
          v1027 = v1297;
          if (v1352)
          {
            if (v1289 >= v1297)
            {
              v1028 = (uint64_t)v1026;
              v1027 = v1289;
              v1029 = v1292;
            }
            else
            {
              v1028 = (unint64_t)&v1026[v1293] & v1307;
              v1029 = v1296;
            }
            v1032 = __swift_getEnumTagSinglePayload(v1028, v1027, v1029);
          }
          else
          {
            if (!v1026[v1320])
              goto LABEL_1170;
            v1030 = (v1026[v1320] - 1) << v588;
            if (v1320 > 3)
              v1030 = 0;
            if ((_DWORD)v1320)
            {
              if (v1320 <= 3)
                v1031 = v1320;
              else
                v1031 = 4;
              __asm { BR              X11 }
            }
            v1032 = v1030 + 1;
          }
          if (v1032)
          {
            memcpy(v1025, v1026, v1377);
            goto LABEL_1172;
          }
LABEL_1170:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1286 + 32))(v1025, v1026, v1292);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1287 + 32))(((unint64_t)v1025 + v1293) & v1307, (unint64_t)&v1026[v1293] & v1307, v1296);
          if (!v1352)
            *((_BYTE *)v1025 + v1320) = 0;
LABEL_1172:
          v1045 = (_QWORD *)(((unint64_t)v1025 + v1348) & v260);
          v1046 = (uint64_t *)((unint64_t)&v1026[v1348] & v260);
          v1047 = v1346;
          if ((v1297 & 0x80000000) != 0)
          {
            v1049 = __swift_getEnumTagSinglePayload(((unint64_t)v1046 + v1278) & v1307, v1297, v1296);
            v1047 = v1346;
          }
          else
          {
            v1048 = *v1046;
            if ((unint64_t)*v1046 >= 0xFFFFFFFF)
              LODWORD(v1048) = -1;
            v1049 = v1048 + 1;
          }
          if (v1049)
          {
            memcpy(v1045, v1046, v1047);
          }
          else
          {
            *v1045 = *v1046;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v1287 + 32))(((unint64_t)v1045 + v1278) & v1307, ((unint64_t)v1046 + v1278) & v1307, v1296);
          }
          v1050 = (_QWORD *)(((unint64_t)v1045 + v1246) & v260);
          v1051 = (uint64_t *)(((unint64_t)v1046 + v1246) & v260);
          if ((v1297 & 0x80000000) != 0)
          {
            v1053 = __swift_getEnumTagSinglePayload(((unint64_t)v1051 + v1278) & v1307, v1297, v1296);
          }
          else
          {
            v1052 = *v1051;
            if ((unint64_t)*v1051 >= 0xFFFFFFFF)
              LODWORD(v1052) = -1;
            v1053 = v1052 + 1;
          }
          v210 = v138;
          if (v1053)
          {
            v1054 = v1346;
            memcpy(v1050, v1051, v1346);
          }
          else
          {
            *v1050 = *v1051;
            v1054 = v1346;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v1287 + 32))(((unint64_t)v1050 + v1278) & v1307, ((unint64_t)v1051 + v1278) & v1307, v1296);
          }
          v1055 = (char *)v1050 + v1054;
          *v1055 = *((_BYTE *)v1051 + v1054);
          v1055[1] = *((_BYTE *)v1051 + v1054 + 1);
          v1056 = (_OWORD *)(((unint64_t)v1050 + v1054 + 9) & 0xFFFFFFFFFFFFFFF8);
          v1057 = (_OWORD *)(((unint64_t)v1051 + v1054 + 9) & 0xFFFFFFFFFFFFFFF8);
          *v1056 = *v1057;
          v1058 = ((unint64_t)v1056 + 23) & 0xFFFFFFFFFFFFFFF8;
          v1059 = ((unint64_t)v1057 + 23) & 0xFFFFFFFFFFFFFFF8;
          v1060 = *(_OWORD *)v1059;
          *(_BYTE *)(v1058 + 16) = *(_BYTE *)(v1059 + 16);
          *(_OWORD *)v1058 = v1060;
          v1061 = ((unint64_t)v1056 + 47) & 0xFFFFFFFFFFFFFFF8;
          v1062 = ((unint64_t)v1057 + 47) & 0xFFFFFFFFFFFFFFF8;
          v1063 = *(_OWORD *)v1062;
          v1064 = *(_OWORD *)(v1062 + 16);
          *(_QWORD *)(v1061 + 32) = *(_QWORD *)(v1062 + 32);
          *(_OWORD *)v1061 = v1063;
          *(_OWORD *)(v1061 + 16) = v1064;
          v1065 = (v1374 + v1061) & v1230;
          v1066 = (v1374 + v1062) & v1230;
          if (v1291 >= 0x7FFFFFFF)
          {
            v1070 = (const void *)((v1295 + v1066) & v1305);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1070, v1283, v682) <= 1)
            {
              v1068 = (const void *)(v1066 + 8);
              v1069 = ~v1359;
LABEL_1195:
              *(_BYTE *)v1065 = *(_BYTE *)v1066;
              memcpy((void *)(v1065 + 8), v1068, 0x69uLL);
              v1071 = (void *)((v1295 + v1065) & v1069);
              if (__swift_getEnumTagSinglePayload((uint64_t)v1070, 1, v682))
              {
                memcpy(v1071, v1070, v1345);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1279 + 32))(v1071, v1070, v682);
                __swift_storeEnumTagSinglePayload((uint64_t)v1071, 0, 1, v682);
              }
              v1072 = v1350;
LABEL_1200:
              *(_OWORD *)(((v1065 | 7) + v1072) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((v1066 | 7) + v1072) & 0xFFFFFFFFFFFFF8);
              v198 = 45;
              goto LABEL_1201;
            }
          }
          else
          {
            v1067 = *(_QWORD *)(((v1374 + v1062) & v1230) + 0x10);
            if (v1067 >= 0xFFFFFFFF)
              LODWORD(v1067) = -1;
            if ((int)v1067 - 1 < 0)
            {
              v1068 = (const void *)(v1066 + 8);
              v1069 = ~v1359;
              v1070 = (const void *)((v1295 + v1066) & v1305);
              goto LABEL_1195;
            }
          }
          v1072 = v1350;
          memcpy((void *)v1065, (const void *)v1066, v1350);
          goto LABEL_1200;
        case 0x2E:
          *v138 = *v139;
          v198 = 46;
          goto LABEL_268;
        case 0x2F:
          *v138 = *v139;
          v198 = 47;
          goto LABEL_268;
        case 0x30:
          *v138 = *v139;
          v198 = 48;
          goto LABEL_268;
        case 0x31:
          *v138 = *v139;
          v198 = 49;
          goto LABEL_268;
        case 0x32:
          v261 = *(_OWORD *)v139;
          v262 = *((_OWORD *)v139 + 1);
          v138[4] = v139[4];
          *(_OWORD *)v138 = v261;
          *((_OWORD *)v138 + 1) = v262;
          v193 = v138;
          v263 = (void *)(((unint64_t)v138 + v1351) & v1229);
          v264 = (const void *)(((unint64_t)v139 + v1351) & v1229);
          if (__swift_getEnumTagSinglePayload((uint64_t)v264, 1, v1321))
          {
            memcpy(v263, v264, v1378);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1299 + 32))(v263, v264, v1321);
            __swift_storeEnumTagSinglePayload((uint64_t)v263, 0, 1, v1321);
          }
          v592 = (_OWORD *)(((unint64_t)v263 + v1353) & 0xFFFFFFFFFFFFFFF8);
          v593 = (_OWORD *)(((unint64_t)v264 + v1353) & 0xFFFFFFFFFFFFFFF8);
          *v592 = *v593;
          v594 = ((unint64_t)v592 + 23) & 0xFFFFFFFFFFFFFFF8;
          v595 = ((unint64_t)v593 + 23) & 0xFFFFFFFFFFFFFFF8;
          v596 = *(_OWORD *)v595;
          v597 = *(_OWORD *)(v595 + 16);
          *(_QWORD *)(v594 + 32) = *(_QWORD *)(v595 + 32);
          *(_OWORD *)v594 = v596;
          *(_OWORD *)(v594 + 16) = v597;
          v598 = (_QWORD *)((v594 + 47) & 0xFFFFFFFFFFFFF8);
          v599 = (_QWORD *)((v595 + 47) & 0xFFFFFFFFFFFFF8);
          *v598 = *v599;
          v600 = (_OWORD *)(((unint64_t)v598 + 15) & 0xFFFFFFFFFFFFFFF8);
          v601 = (_OWORD *)(((unint64_t)v599 + 15) & 0xFFFFFFFFFFFFFFF8);
          *v600 = *v601;
          v602 = (char *)(((unint64_t)v600 + v1335) & v143);
          v603 = (char *)(((unint64_t)v601 + v1335) & v143);
          if (v1284 < 0x7FFFFFFF)
          {
            v93 = v1311;
            v604 = v1294;
            v605 = ~v1330;
            if (*(_QWORD *)(((unint64_t)&v603[v1353] & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
              goto LABEL_495;
          }
          else
          {
            v93 = v1311;
            v604 = v1294;
            v605 = ~v1330;
            if (__swift_getEnumTagSinglePayload((uint64_t)v603, v1349, v1321) >= 2)
            {
LABEL_495:
              v606 = v1343;
              memcpy(v602, v603, v1343);
              v607 = v1236;
              goto LABEL_632;
            }
          }
          if (__swift_getEnumTagSinglePayload((uint64_t)v603, 1, v1321))
          {
            memcpy(v602, v603, v1378);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v1299 + 32))(v602, v603, v1321);
            __swift_storeEnumTagSinglePayload((uint64_t)v602, 0, 1, v1321);
          }
          v712 = (unint64_t)&v602[v1353] & 0xFFFFFFFFFFFFFFF8;
          v713 = (unint64_t)&v603[v1353] & 0xFFFFFFFFFFFFFFF8;
          v714 = *(_OWORD *)v713;
          v715 = *(_OWORD *)(v713 + 16);
          *(_QWORD *)(v712 + 32) = *(_QWORD *)(v713 + 32);
          *(_OWORD *)v712 = v714;
          *(_OWORD *)(v712 + 16) = v715;
          v716 = (v712 + 47) & 0xFFFFFFFFFFFFFFF8;
          v717 = (v713 + 47) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)v716 = *(_OWORD *)v717;
          *(_BYTE *)(v716 + 16) = *(_BYTE *)(v717 + 16);
          v606 = v1343;
          v607 = v1236;
          if (v1349)
            v606 = ((((v1315 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 17;
LABEL_632:
          *(_OWORD *)&v602[v606 + 7] = *(_OWORD *)&v603[v606 + 7];
          v718 = (_BYTE *)((unint64_t)&v602[v606 + v607] & v605);
          v719 = (_QWORD *)((unint64_t)&v603[v606 + v607] & v605);
          if (v1291 >= 0x7FFFFFFF)
          {
            v724 = ((unint64_t)v719 + v1295) & v1305;
            if (__swift_getEnumTagSinglePayload(v724, v1283, v604) <= 1)
            {
              v721 = v719 + 1;
              v722 = v1295;
              v723 = ~v1359;
              goto LABEL_639;
            }
          }
          else
          {
            v720 = v719[2];
            if (v720 >= 0xFFFFFFFF)
              LODWORD(v720) = -1;
            if ((int)v720 - 1 < 0)
            {
              v721 = v719 + 1;
              v722 = v1295;
              v723 = ~v1359;
              v724 = ((unint64_t)v719 + v1295) & v1305;
LABEL_639:
              *v718 = *(_BYTE *)v719;
              memcpy(v718 + 8, v721, 0x69uLL);
              v725 = (unint64_t)&v718[v722] & v723;
              if (!__swift_getEnumTagSinglePayload(v724, 1, v604))
              {
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v1279 + 32))(v725, v724, v604);
                __swift_storeEnumTagSinglePayload(v725, 0, 1, v604);
LABEL_643:
                v198 = 50;
LABEL_487:
                v265 = v1324;
                v138 = v193;
                goto LABEL_1317;
              }
              v726 = (void *)v725;
              v727 = (const void *)v724;
              v728 = v1345;
LABEL_642:
              memcpy(v726, v727, v728);
              goto LABEL_643;
            }
          }
          v726 = v718;
          v727 = v719;
          v728 = v1350;
          goto LABEL_642;
        case 0x33:
          if (__swift_getEnumTagSinglePayload((uint64_t)v139, 1, v1321))
          {
            memcpy(v138, v139, v1378);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1299 + 32))(v138, v139, v1321);
            __swift_storeEnumTagSinglePayload((uint64_t)v138, 0, 1, v1321);
          }
          v1365 = v138;
          v608 = ((unint64_t)v138 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v609 = ((unint64_t)v139 + v1353) & 0xFFFFFFFFFFFFFFF8;
          v610 = *(_OWORD *)v609;
          v611 = *(_OWORD *)(v609 + 16);
          *(_QWORD *)(v608 + 32) = *(_QWORD *)(v609 + 32);
          *(_OWORD *)v608 = v610;
          *(_OWORD *)(v608 + 16) = v611;
          v612 = (v608 + 47) & 0xFFFFFFFFFFFFFFF8;
          v613 = (v609 + 47) & 0xFFFFFFFFFFFFFFF8;
          v614 = *(_OWORD *)v613;
          v615 = *(_OWORD *)(v613 + 16);
          *(_QWORD *)(v612 + 32) = *(_QWORD *)(v613 + 32);
          *(_OWORD *)v612 = v614;
          *(_OWORD *)(v612 + 16) = v615;
          v616 = (_OWORD *)((v612 + 47) & 0xFFFFFFFFFFFFFFF8);
          v617 = (_OWORD *)((v613 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v616 = *v617;
          v618 = (_OWORD *)(((unint64_t)v616 + 23) & 0xFFFFFFFFFFFFFFF8);
          v619 = (_OWORD *)(((unint64_t)v617 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v618 = *v619;
          v620 = (_QWORD *)(((unint64_t)v618 + 23) & 0xFFFFFFFFFFFFFFF8);
          v621 = (_QWORD *)(((unint64_t)v619 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v620 = *v621;
          v622 = (_OWORD *)(((unint64_t)v620 + v1237) & v1371);
          v623 = (_OWORD *)(((unint64_t)v621 + v1237) & v1371);
          if (v1226 > 0x7FFFFFFE)
          {
            v628 = (_OWORD *)(((unint64_t)v623 + 23) & 0xFFFFFFFFFFFFFFF8);
            v629 = ((unint64_t)v628 + 23) & 0xFFFFFFFFFFFFFFF8;
            v630 = __swift_getEnumTagSinglePayload((v1361 + v629 + 33) & v142, v1226, v1277);
            v625 = v1294;
            v626 = v1320;
            v627 = v1372;
            if (!v630)
              goto LABEL_507;
          }
          else
          {
            v624 = *(_QWORD *)((((unint64_t)v621 + v1237) & v1371) + 8);
            if (v624 >= 0xFFFFFFFF)
              LODWORD(v624) = -1;
            v625 = v1294;
            v626 = v1320;
            v627 = v1372;
            if ((v624 + 1) <= 1)
            {
              v628 = (_OWORD *)(((unint64_t)v623 + 23) & 0xFFFFFFFFFFFFFFF8);
              v629 = ((unint64_t)v628 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_507:
              *v622 = *v623;
              v631 = (_OWORD *)(((unint64_t)v622 + 23) & 0xFFFFFFFFFFFFFFF8);
              *v631 = *v628;
              v632 = ((unint64_t)v631 + 23) & 0xFFFFFFFFFFFFFFF8;
              *(_OWORD *)v632 = *(_OWORD *)v629;
              *(_BYTE *)(v632 + 16) = *(_BYTE *)(v629 + 16);
              v633 = ((unint64_t)v631 + 47) & 0xFFFFFFFFFFFFFFF8;
              v634 = ((unint64_t)v628 + 47) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)v633 = *(_QWORD *)v634;
              *(_BYTE *)(v633 + 8) = *(_BYTE *)(v634 + 8);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1331 + 32))((v1361 + 9 + v633) & v142, (v1361 + 9 + v634) & v142, v1277);
LABEL_508:
              v635 = (void *)(((unint64_t)v622 + v1241) & v1309);
              v636 = (_BYTE *)(((unint64_t)v623 + v1241) & v1309);
              v93 = v1311;
              v637 = v1297;
              if (v1352)
              {
                if (v1289 >= v1297)
                {
                  v638 = (uint64_t)v636;
                  v637 = v1289;
                  v639 = v1292;
                }
                else
                {
                  v638 = (unint64_t)&v636[v1293] & v1307;
                  v639 = v1296;
                }
                v700 = __swift_getEnumTagSinglePayload(v638, v637, v639);
                v685 = v1377 + 7;
              }
              else
              {
                v685 = v1377 + 7;
                if (!v636[v626])
                  goto LABEL_1147;
                v686 = (v636[v626] - 1) << v1228;
                if (v626 > 3)
                  v686 = 0;
                if ((_DWORD)v626)
                {
                  if (v626 <= 3)
                    v687 = v626;
                  else
                    v687 = 4;
                  __asm { BR              X11 }
                }
                v700 = v686 + 1;
              }
              if (v700)
              {
                memcpy(v635, v636, v1377);
                goto LABEL_1149;
              }
LABEL_1147:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1286 + 32))(v635, v636, v1292);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1287 + 32))(((unint64_t)v635 + v1293) & v1307, (unint64_t)&v636[v1293] & v1307, v1296);
              if (!v1352)
                *((_BYTE *)v635 + v626) = 0;
LABEL_1149:
              v1033 = (_OWORD *)(((unint64_t)v635 + v685) & 0xFFFFFFFFFFFFFFF8);
              v1034 = (_OWORD *)((unint64_t)&v636[v685] & 0xFFFFFFFFFFFFFFF8);
              *v1033 = *v1034;
              v1035 = ((unint64_t)v1033 + 23) & 0xFFFFFFFFFFFFFFF8;
              v1036 = ((unint64_t)v1034 + 23) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)v1035 = *(_QWORD *)v1036;
              *(_BYTE *)(v1035 + 8) = *(_BYTE *)(v1036 + 8);
              v1037 = (void *)((v1244 + v1035) & v1309);
              v1038 = (_BYTE *)((v1244 + v1036) & v1309);
              if (v1352)
              {
                v1039 = v1297;
                if (v1289 >= v1297)
                {
                  v1040 = (v1244 + v1036) & v1309;
                  v1039 = v1289;
                  v1041 = v1292;
                }
                else
                {
                  v1040 = (unint64_t)&v1038[v1293] & v1307;
                  v1041 = v1296;
                }
                v1044 = __swift_getEnumTagSinglePayload(v1040, v1039, v1041);
              }
              else
              {
                if (!v1038[v626])
                  goto LABEL_1204;
                v1042 = (v1038[v626] - 1) << v1228;
                if (v626 > 3)
                  v1042 = 0;
                if ((_DWORD)v626)
                {
                  if (v626 <= 3)
                    v1043 = v626;
                  else
                    v1043 = 4;
                  __asm { BR              X11 }
                }
                v1044 = v1042 + 1;
              }
              if (v1044)
              {
                memcpy(v1037, v1038, v1377);
                goto LABEL_1206;
              }
LABEL_1204:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1286 + 32))(v1037, v1038, v1292);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1287 + 32))(((unint64_t)v1037 + v1293) & v1307, (unint64_t)&v1038[v1293] & v1307, v1296);
              if (!v1352)
                *((_BYTE *)v1037 + v626) = 0;
LABEL_1206:
              v1073 = (_OWORD *)(((unint64_t)v1037 + v685) & 0xFFFFFFFFFFFFFFF8);
              v1074 = (_OWORD *)((unint64_t)&v1038[v685] & 0xFFFFFFFFFFFFFFF8);
              *v1073 = *v1074;
              v1075 = (void *)(((unint64_t)v1073 + v1344) & v1309);
              v1076 = (_BYTE *)(((unint64_t)v1074 + v1344) & v1309);
              v1077 = v1297;
              if (v1352)
              {
                if (v1289 >= v1297)
                {
                  v1078 = ((unint64_t)v1074 + v1344) & v1309;
                  v1077 = v1289;
                  v1079 = v1292;
                }
                else
                {
                  v1078 = (unint64_t)&v1076[v1293] & v1307;
                  v1079 = v1296;
                }
                v1082 = __swift_getEnumTagSinglePayload(v1078, v1077, v1079);
              }
              else
              {
                if (!v1076[v626])
                  goto LABEL_1222;
                v1080 = (v1076[v626] - 1) << v1228;
                if (v626 > 3)
                  v1080 = 0;
                if ((_DWORD)v626)
                {
                  if (v626 <= 3)
                    v1081 = v626;
                  else
                    v1081 = 4;
                  __asm { BR              X11 }
                }
                v1082 = v1080 + 1;
              }
              if (v1082)
              {
                memcpy(v1075, v1076, v1377);
                goto LABEL_1224;
              }
LABEL_1222:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1286 + 32))(v1075, v1076, v1292);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1287 + 32))(((unint64_t)v1075 + v1293) & v1307, (unint64_t)&v1076[v1293] & v1307, v1296);
              if (!v1352)
                *((_BYTE *)v1075 + v626) = 0;
LABEL_1224:
              v1083 = (_BYTE *)(((unint64_t)v1075 + v1219) & v1230);
              v1084 = (_BYTE *)((unint64_t)&v1076[v1219] & v1230);
              if (v1291 >= 0x7FFFFFFF)
              {
                v1088 = (unint64_t)&v1084[v1295] & v1305;
                if (__swift_getEnumTagSinglePayload(v1088, v1283, v625) <= 1)
                {
                  v1086 = v1084 + 8;
                  v1087 = ~v1359;
                  goto LABEL_1231;
                }
              }
              else
              {
                v1085 = *(_QWORD *)(((unint64_t)&v1076[v1219] & v1230) + 0x10);
                if (v1085 >= 0xFFFFFFFF)
                  LODWORD(v1085) = -1;
                if ((int)v1085 - 1 < 0)
                {
                  v1086 = v1084 + 8;
                  v1087 = ~v1359;
                  v1088 = (unint64_t)&v1084[v1295] & v1305;
LABEL_1231:
                  *v1083 = *v1084;
                  memcpy(v1083 + 8, v1086, 0x69uLL);
                  v1089 = (unint64_t)&v1083[v1295] & v1087;
                  if (!__swift_getEnumTagSinglePayload(v1088, 1, v625))
                  {
                    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1279 + 32))(v1089, v1088, v625);
                    __swift_storeEnumTagSinglePayload(v1089, 0, 1, v625);
                    goto LABEL_1235;
                  }
                  v1090 = (void *)v1089;
                  v1091 = (const void *)v1088;
                  v1092 = v1345;
LABEL_1234:
                  memcpy(v1090, v1091, v1092);
LABEL_1235:
                  v198 = 51;
LABEL_1315:
                  v265 = v1324;
LABEL_1316:
                  v138 = v1365;
                  goto LABEL_1317;
                }
              }
              v1090 = v1083;
              v1091 = v1084;
              v1092 = v1350;
              goto LABEL_1234;
            }
          }
          memcpy(v622, v623, v627);
          goto LABEL_508;
        case 0x34:
          *v138 = *v139;
          v198 = 52;
LABEL_268:
          v93 = v1311;
LABEL_269:
          v265 = v1324;
          goto LABEL_1318;
        default:
          if (v1333 <= 3)
            v141 = v1333;
          else
            v141 = 4;
          __asm { BR              X12 }
          return result;
      }
    case 2:
      v95 = a1;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v101 = 2;
      goto LABEL_124;
    case 3:
      v95 = a1;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v101 = 3;
LABEL_124:
      *((_BYTE *)v95 + v93) = v101;
      goto LABEL_1319;
    default:
      v95 = a1;
      memcpy(a1, a2, v93 + 1);
      goto LABEL_1319;
  }
}

_OWORD *sub_21CEC3AD8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  size_t v5;
  size_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  size_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  int v32;
  size_t v33;
  size_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  size_t v41;
  unsigned int v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  unint64_t v49;
  size_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  size_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  size_t v59;
  size_t v60;
  unint64_t v61;
  unint64_t v62;
  size_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _OWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  _OWORD *v99;
  uint64_t v100;
  unsigned __int8 *v101;
  unint64_t v102;
  unsigned int v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  int v116;
  int EnumTagSinglePayload;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  _OWORD *v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  unint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  unint64_t v151;
  unint64_t v152;
  uint64_t v153;
  unint64_t v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  unint64_t v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  unint64_t v171;
  unint64_t v172;
  uint64_t v173;
  unint64_t v174;
  unint64_t v175;
  unint64_t v176;
  unint64_t v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  unint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;
  unint64_t v188;
  unint64_t v189;
  uint64_t v190;
  unint64_t v191;
  uint64_t v192;
  unint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t v200;
  unint64_t v201;
  unint64_t v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t v205;
  unint64_t v206;
  unint64_t v207;
  unint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  unint64_t v212;
  unint64_t v213;
  unint64_t v214;
  unint64_t v215;
  uint64_t v216;
  uint64_t v217;
  unint64_t v218;
  unint64_t v219;
  unint64_t v220;
  unint64_t v221;
  uint64_t v222;
  unint64_t v223;
  uint64_t v224;
  uint64_t v225;
  unint64_t v226;
  unint64_t v227;
  unint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  unint64_t v233;
  unint64_t v234;
  unint64_t v235;
  uint64_t v236;
  unint64_t v237;
  id *v238;
  unint64_t v239;
  int v240;
  int v241;
  size_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  unint64_t v246;
  id *v247;
  unint64_t v248;
  id *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  int v253;
  uint64_t *v254;
  uint64_t v255;
  id *v256;
  unint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  int v267;
  int v268;
  int v269;
  int v270;
  int v271;
  int v272;
  int v273;
  int v274;
  int v275;
  int v276;
  int v277;
  int v278;
  int v279;
  int v280;
  int v281;
  int v282;
  int v283;
  int v284;
  int v285;
  int v286;
  int v287;
  int v288;
  unint64_t v289;
  unint64_t v290;
  int v291;
  unsigned int v292;
  unint64_t v293;
  unint64_t v294;
  int v295;
  unsigned int v296;
  uint64_t *v297;
  uint64_t v298;
  int v299;
  uint64_t v300;
  unint64_t v301;
  unint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  unint64_t v309;
  unint64_t v310;
  size_t v311;
  unsigned int v312;
  unint64_t v313;
  unint64_t v314;
  unint64_t v315;
  unint64_t v316;
  uint64_t v317;
  size_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  int v322;
  int v323;
  int v324;
  unsigned int v325;
  unint64_t v326;
  unint64_t v327;
  unint64_t v328;
  unint64_t v329;
  unint64_t v330;
  uint64_t v331;
  size_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  int v336;
  int v337;
  int v338;
  unint64_t v339;
  unint64_t v340;
  unint64_t v341;
  unint64_t v342;
  uint64_t v343;
  size_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  int v348;
  int v349;
  int v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  int v355;
  int v356;
  int v357;
  uint64_t v358;
  int v359;
  unint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  int v364;
  int v365;
  int v366;
  unint64_t v367;
  unint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  int v372;
  int v373;
  int v374;
  uint64_t *v375;
  uint64_t v376;
  int v377;
  uint64_t v378;
  uint64_t v379;
  int v380;
  uint64_t v381;
  size_t v382;
  uint64_t *v383;
  uint64_t v384;
  int v385;
  uint64_t v386;
  uint64_t *v387;
  uint64_t v388;
  int v389;
  size_t v390;
  unint64_t v391;
  unint64_t v392;
  unint64_t v393;
  unint64_t v394;
  uint64_t v395;
  unint64_t v396;
  unint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  int v401;
  int v402;
  int v403;
  unint64_t v404;
  uint64_t v405;
  unint64_t v406;
  unint64_t v407;
  int v408;
  uint64_t v409;
  void *v410;
  char *v411;
  uint64_t v412;
  size_t v413;
  char v414;
  char *v415;
  _BYTE *v416;
  unsigned __int8 *v417;
  unsigned int v418;
  char v419;
  _OWORD *v420;
  __int128 *v421;
  unsigned int v422;
  size_t v423;
  unint64_t v424;
  __int128 v425;
  __int128 v426;
  void *v427;
  const void *v428;
  uint64_t v429;
  void *v430;
  const void *v431;
  size_t v432;
  uint64_t v433;
  uint64_t v434;
  _BYTE *v435;
  unint64_t v436;
  unint64_t v437;
  __int128 v438;
  __int128 v439;
  __int128 v440;
  _OWORD *v441;
  _OWORD *v442;
  unint64_t v443;
  uint64_t v444;
  const void *v445;
  unsigned int v446;
  void *v447;
  size_t v448;
  size_t v449;
  uint64_t v450;
  uint64_t v451;
  char v452;
  uint64_t v453;
  uint64_t v454;
  const void *v455;
  const void *v456;
  _QWORD *v457;
  _QWORD *v458;
  _QWORD *v459;
  _QWORD *v460;
  void *v461;
  _BYTE *v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  __int128 v466;
  __int128 v467;
  _OWORD *v468;
  _OWORD *v469;
  unint64_t v470;
  unint64_t v471;
  uint64_t v472;
  unint64_t v473;
  unint64_t v474;
  uint64_t v475;
  unint64_t v476;
  unint64_t v477;
  uint64_t v478;
  _OWORD *v479;
  _OWORD *v480;
  unint64_t v481;
  unint64_t v482;
  __int128 v483;
  __int128 v484;
  _BYTE *v485;
  _BYTE *v486;
  unint64_t v487;
  const void *v488;
  uint64_t v489;
  uint64_t v490;
  const void *v491;
  void *v492;
  int v493;
  int v494;
  int v495;
  void *v496;
  _BYTE *v497;
  uint64_t v498;
  _BYTE *v499;
  void *v500;
  const void *v501;
  char v502;
  const void *v503;
  const void *v504;
  const void *v505;
  const void *v506;
  const void *v507;
  __int128 v508;
  __int128 v509;
  void *v510;
  const void *v511;
  size_t v512;
  unint64_t v513;
  const void *v514;
  __int128 v515;
  __int128 v516;
  void *v517;
  const void *v518;
  __int128 v519;
  __int128 v520;
  void *v521;
  const void *v522;
  char v523;
  __int128 v524;
  __int128 v525;
  void *v526;
  const void *v527;
  const void *v528;
  const void *v529;
  const void *v530;
  _BYTE *v531;
  _BYTE *v532;
  void *v533;
  const void *v534;
  __int128 v535;
  __int128 v536;
  char *v537;
  const void *v538;
  size_t v539;
  __int128 v540;
  __int128 v541;
  _OWORD *v542;
  _OWORD *v543;
  _OWORD *v544;
  _OWORD *v545;
  void *v546;
  const void *v547;
  unint64_t v548;
  unint64_t v549;
  __int128 v550;
  __int128 v551;
  void *v552;
  const void *v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  const void *v557;
  uint64_t v558;
  const void *v559;
  uint64_t v560;
  int v561;
  char v562;
  const void *v563;
  uint64_t v564;
  int v565;
  char v566;
  __int128 v567;
  __int128 v568;
  void *v569;
  const void *v570;
  const void *v571;
  __int128 v572;
  __int128 v573;
  void *v574;
  const void *v575;
  __int128 v576;
  __int128 v577;
  void *v578;
  const void *v579;
  __int128 v580;
  __int128 v581;
  void *v582;
  const void *v583;
  const void *v584;
  uint64_t v585;
  int v586;
  char v587;
  _OWORD *v588;
  char v589;
  unint64_t v590;
  uint64_t v591;
  unint64_t v592;
  __int128 v593;
  __int128 v594;
  _OWORD *v595;
  _OWORD *v596;
  _QWORD *v597;
  _QWORD *v598;
  _OWORD *v599;
  _OWORD *v600;
  _OWORD *v601;
  _OWORD *v602;
  unint64_t v603;
  uint64_t v604;
  _OWORD *v605;
  unint64_t v606;
  size_t v607;
  _OWORD *v608;
  unint64_t v609;
  unint64_t v610;
  unint64_t v611;
  unint64_t v612;
  unint64_t v613;
  _OWORD *v614;
  _OWORD *v615;
  void *v616;
  _BYTE *v617;
  uint64_t v618;
  uint64_t v619;
  uint64_t v620;
  unint64_t v621;
  unint64_t v622;
  __int128 v623;
  __int128 v624;
  _OWORD *v625;
  _OWORD *v626;
  void *v627;
  _BYTE *v628;
  uint64_t v629;
  uint64_t v630;
  uint64_t v631;
  unint64_t v632;
  unint64_t v633;
  __int128 v634;
  __int128 v635;
  _OWORD *v636;
  _OWORD *v637;
  _OWORD *v638;
  _OWORD *v639;
  unint64_t v640;
  unint64_t v641;
  unint64_t v642;
  unint64_t v643;
  __int128 v644;
  __int128 v645;
  _BYTE *v646;
  _BYTE *v647;
  uint64_t v648;
  unint64_t v649;
  uint64_t v650;
  uint64_t v651;
  const void *v652;
  const void *v653;
  void *v654;
  size_t v655;
  size_t v656;
  unint64_t v657;
  unint64_t v658;
  __int128 v659;
  __int128 v660;
  void *v661;
  const void *v662;
  uint64_t v663;
  uint64_t v664;
  uint64_t v665;
  uint64_t v666;
  unint64_t v667;
  unint64_t v668;
  unint64_t v669;
  __int128 v670;
  __int128 v671;
  unint64_t v672;
  unint64_t v673;
  unint64_t v674;
  uint64_t v675;
  const void *v676;
  const void *v677;
  void *v678;
  size_t v679;
  unint64_t v680;
  unint64_t v681;
  __int128 v682;
  __int128 v683;
  _OWORD *v684;
  _OWORD *v685;
  void *v686;
  const void *v687;
  unint64_t v688;
  unint64_t v689;
  _OWORD *v690;
  _OWORD *v691;
  unint64_t v692;
  unint64_t v693;
  __int128 v694;
  __int128 v695;
  _OWORD *v696;
  _OWORD *v697;
  unint64_t v698;
  _OWORD *v699;
  unint64_t v700;
  uint64_t v701;
  _OWORD *v702;
  unint64_t v703;
  unint64_t v704;
  unint64_t v705;
  unint64_t v706;
  unint64_t v707;
  _BYTE *v708;
  _BYTE *v709;
  unint64_t v710;
  uint64_t v711;
  const void *v712;
  const void *v713;
  void *v714;
  size_t v715;
  _OWORD *v716;
  _OWORD *v717;
  _OWORD *v718;
  _OWORD *v719;
  _OWORD *v720;
  _OWORD *v721;
  unint64_t v722;
  unint64_t v723;
  __int128 v724;
  __int128 v725;
  unint64_t v726;
  unint64_t v727;
  __int128 v728;
  __int128 v729;
  unint64_t v730;
  unint64_t v731;
  __int128 v732;
  __int128 v733;
  _OWORD *v734;
  _OWORD *v735;
  _OWORD *v736;
  _OWORD *v737;
  _OWORD *v738;
  _OWORD *v739;
  _OWORD *v740;
  _OWORD *v741;
  unint64_t v742;
  unint64_t v743;
  __int128 v744;
  __int128 v745;
  unint64_t v746;
  unint64_t v747;
  __int128 v748;
  __int128 v749;
  unint64_t v750;
  unint64_t v751;
  __int128 v752;
  __int128 v753;
  void *v754;
  _BYTE *v755;
  uint64_t v756;
  uint64_t v757;
  uint64_t v758;
  unint64_t v759;
  unint64_t v760;
  __int128 v761;
  __int128 v762;
  _OWORD *v763;
  _OWORD *v764;
  _OWORD *v765;
  _OWORD *v766;
  unint64_t v767;
  unint64_t v768;
  __int128 v769;
  __int128 v770;
  void *v771;
  const void *v772;
  uint64_t v773;
  uint64_t v774;
  uint64_t v775;
  uint64_t v776;
  unint64_t v777;
  unint64_t v778;
  unint64_t v779;
  __int128 v780;
  __int128 v781;
  unint64_t v782;
  unint64_t v783;
  unint64_t v784;
  uint64_t v785;
  unint64_t v786;
  __int128 v787;
  __int128 v788;
  _OWORD *v789;
  _OWORD *v790;
  _QWORD *v791;
  _QWORD *v792;
  _OWORD *v793;
  _OWORD *v794;
  _OWORD *v795;
  _OWORD *v796;
  unint64_t v797;
  uint64_t v798;
  _OWORD *v799;
  unint64_t v800;
  size_t v801;
  _OWORD *v802;
  unint64_t v803;
  unint64_t v804;
  unint64_t v805;
  unint64_t v806;
  unint64_t v807;
  void *v808;
  _BYTE *v809;
  uint64_t v810;
  uint64_t v811;
  uint64_t v812;
  unint64_t v813;
  unint64_t v814;
  __int128 v815;
  __int128 v816;
  _QWORD *v817;
  _QWORD *v818;
  char *v819;
  unint64_t v820;
  unint64_t v821;
  size_t v822;
  size_t v823;
  int v824;
  int v825;
  unint64_t v826;
  unint64_t v827;
  __int128 v828;
  __int128 v829;
  _BYTE *v830;
  _BYTE *v831;
  void *v832;
  const void *v833;
  unint64_t v834;
  unint64_t v835;
  __int128 v836;
  __int128 v837;
  _BYTE *v838;
  _BYTE *v839;
  void *v840;
  const void *v841;
  unint64_t v842;
  unint64_t v843;
  __int128 v844;
  __int128 v845;
  _OWORD *v846;
  _OWORD *v847;
  unint64_t v848;
  unint64_t v849;
  __int128 v850;
  __int128 v851;
  unint64_t v852;
  unint64_t v853;
  __int128 v854;
  __int128 v855;
  _QWORD *v856;
  _QWORD *v857;
  unint64_t v858;
  unint64_t v859;
  __int128 v860;
  __int128 v861;
  _OWORD *v862;
  _OWORD *v863;
  _OWORD *v864;
  _OWORD *v865;
  unint64_t v866;
  unint64_t v867;
  __int128 v868;
  __int128 v869;
  unint64_t v870;
  unint64_t v871;
  __int128 v872;
  __int128 v873;
  unint64_t v874;
  unint64_t v875;
  __int128 v876;
  __int128 v877;
  uint64_t v878;
  size_t v879;
  unint64_t v880;
  _QWORD *v881;
  _QWORD *v882;
  unint64_t v883;
  unint64_t v884;
  __int128 v885;
  __int128 v886;
  unint64_t v887;
  unint64_t v888;
  __int128 v889;
  __int128 v890;
  _OWORD *v891;
  _OWORD *v892;
  _OWORD *v893;
  _OWORD *v894;
  _OWORD *v895;
  _OWORD *v896;
  _OWORD *v897;
  _OWORD *v898;
  unint64_t v899;
  unint64_t v900;
  _QWORD *v901;
  _QWORD *v902;
  void *v903;
  _BYTE *v904;
  uint64_t v905;
  uint64_t v906;
  uint64_t v907;
  unint64_t v908;
  _OWORD *v909;
  _OWORD *v910;
  unint64_t v911;
  unint64_t v912;
  __int128 v913;
  __int128 v914;
  _QWORD *v915;
  _QWORD *v916;
  _OWORD *v917;
  _OWORD *v918;
  char *v919;
  char *v920;
  uint64_t v921;
  unint64_t v922;
  unint64_t v923;
  __int128 v924;
  __int128 v925;
  unint64_t v926;
  unint64_t v927;
  __int128 v928;
  __int128 v929;
  _OWORD *v930;
  _OWORD *v931;
  _OWORD *v932;
  _OWORD *v933;
  _QWORD *v934;
  _QWORD *v935;
  _OWORD *v936;
  _OWORD *v937;
  unint64_t v938;
  uint64_t v939;
  uint64_t v940;
  _OWORD *v941;
  unint64_t v942;
  uint64_t v943;
  _OWORD *v944;
  unint64_t v945;
  unint64_t v946;
  unint64_t v947;
  void *v948;
  _BYTE *v949;
  uint64_t v950;
  uint64_t v951;
  uint64_t v952;
  int v953;
  int v954;
  uint64_t v955;
  int v956;
  int v957;
  void *v958;
  _BYTE *v959;
  uint64_t v960;
  uint64_t v961;
  uint64_t v962;
  int v963;
  int v964;
  int v965;
  int v966;
  _OWORD *v967;
  _OWORD *v968;
  unint64_t v969;
  unint64_t v970;
  void *v971;
  _BYTE *v972;
  uint64_t v973;
  uint64_t v974;
  uint64_t v975;
  _OWORD *v976;
  _OWORD *v977;
  unint64_t v978;
  unint64_t v979;
  _OWORD *v980;
  _OWORD *v981;
  _OWORD *v982;
  _OWORD *v983;
  _OWORD *v984;
  _OWORD *v985;
  _OWORD *v986;
  _OWORD *v987;
  _QWORD *v988;
  _QWORD *v989;
  void *v990;
  _BYTE *v991;
  uint64_t v992;
  uint64_t v993;
  uint64_t v994;
  uint64_t v995;
  int v996;
  int v997;
  int v998;
  int v999;
  int v1000;
  int v1001;
  uint64_t v1002;
  int v1003;
  int v1004;
  uint64_t v1005;
  int v1006;
  int v1007;
  int v1008;
  int v1009;
  int v1010;
  int v1011;
  int v1012;
  int v1013;
  int v1014;
  int v1015;
  int v1016;
  int v1017;
  unint64_t v1018;
  unint64_t v1019;
  int v1020;
  unsigned int v1021;
  unint64_t v1022;
  unint64_t v1023;
  int v1024;
  unsigned int v1025;
  unint64_t v1026;
  unint64_t v1027;
  __int128 v1028;
  __int128 v1029;
  unint64_t v1030;
  unint64_t v1031;
  _BYTE *v1032;
  _BYTE *v1033;
  unint64_t v1034;
  uint64_t v1035;
  const void *v1036;
  uint64_t v1037;
  uint64_t v1038;
  void *v1039;
  const void *v1040;
  size_t v1041;
  void *v1042;
  _BYTE *v1043;
  uint64_t v1044;
  uint64_t v1045;
  uint64_t v1046;
  int v1047;
  int v1048;
  int v1049;
  _QWORD *v1050;
  _QWORD *v1051;
  _OWORD *v1052;
  _OWORD *v1053;
  unint64_t v1054;
  unint64_t v1055;
  __int128 v1056;
  unsigned int v1057;
  uint64_t v1058;
  unint64_t v1059;
  unint64_t v1060;
  __int128 v1061;
  __int128 v1062;
  _OWORD *v1063;
  _OWORD *v1064;
  _OWORD *v1065;
  _OWORD *v1066;
  unint64_t v1067;
  unint64_t v1068;
  unint64_t v1069;
  unint64_t v1070;
  __int128 v1071;
  __int128 v1072;
  _BYTE *v1073;
  _BYTE *v1074;
  unint64_t v1075;
  const void *v1076;
  uint64_t v1077;
  uint64_t v1078;
  const void *v1079;
  void *v1080;
  _BYTE *v1081;
  uint64_t v1082;
  uint64_t v1083;
  uint64_t v1084;
  int v1085;
  int v1086;
  int v1087;
  unsigned int v1088;
  void *v1089;
  const void *v1090;
  size_t v1091;
  unint64_t v1092;
  unint64_t v1093;
  __int128 v1094;
  __int128 v1095;
  _OWORD *v1096;
  _OWORD *v1097;
  _OWORD *v1098;
  _OWORD *v1099;
  unint64_t v1100;
  unint64_t v1101;
  __int128 v1102;
  __int128 v1103;
  unint64_t v1104;
  unint64_t v1105;
  __int128 v1106;
  __int128 v1107;
  _BYTE *v1108;
  _BYTE *v1109;
  unint64_t v1110;
  const void *v1111;
  uint64_t v1112;
  const void *v1113;
  void *v1114;
  size_t v1115;
  void *v1116;
  _BYTE *v1117;
  uint64_t v1118;
  uint64_t v1119;
  uint64_t v1120;
  int v1121;
  int v1122;
  int v1123;
  unint64_t v1124;
  unint64_t v1125;
  __int128 v1126;
  __int128 v1127;
  void *v1128;
  const void *v1129;
  _OWORD *v1130;
  _OWORD *v1131;
  _QWORD *v1132;
  uint64_t *v1133;
  uint64_t v1134;
  int v1135;
  _BYTE *v1136;
  _QWORD *v1137;
  unint64_t v1138;
  const void *v1139;
  uint64_t v1140;
  uint64_t v1141;
  const void *v1142;
  void *v1143;
  size_t v1144;
  unint64_t v1145;
  unint64_t v1146;
  unint64_t v1147;
  unint64_t v1148;
  unint64_t v1149;
  unint64_t v1150;
  __int128 v1151;
  __int128 v1152;
  unint64_t v1153;
  unint64_t v1154;
  __int128 v1155;
  __int128 v1156;
  unint64_t v1157;
  unint64_t v1158;
  unint64_t v1159;
  unint64_t v1160;
  unint64_t v1161;
  unint64_t v1162;
  __int128 v1163;
  __int128 v1164;
  unint64_t v1165;
  unint64_t v1166;
  __int128 v1167;
  __int128 v1168;
  char *v1169;
  char *v1170;
  uint64_t v1171;
  uint64_t v1172;
  unint64_t v1173;
  unint64_t v1174;
  __int128 v1175;
  __int128 v1176;
  unint64_t v1177;
  unint64_t v1178;
  __int128 v1179;
  __int128 v1180;
  unint64_t v1181;
  uint64_t v1182;
  uint64_t v1183;
  unint64_t v1184;
  unint64_t v1185;
  uint64_t v1186;
  __int128 v1187;
  _BYTE *v1188;
  _BYTE *v1189;
  unint64_t v1190;
  uint64_t v1191;
  const void *v1192;
  const void *v1193;
  void *v1194;
  size_t v1195;
  void *v1196;
  _BYTE *v1197;
  uint64_t v1198;
  uint64_t v1199;
  uint64_t v1200;
  int v1201;
  int v1202;
  int v1203;
  void *v1204;
  _BYTE *v1205;
  uint64_t v1206;
  uint64_t v1207;
  uint64_t v1208;
  int v1209;
  int v1210;
  int v1211;
  unint64_t v1212;
  unint64_t v1213;
  __int128 v1214;
  __int128 v1215;
  _QWORD *v1216;
  uint64_t *v1217;
  uint64_t v1218;
  int v1219;
  _QWORD *v1220;
  uint64_t *v1221;
  uint64_t v1222;
  int v1223;
  _BYTE *v1224;
  _BYTE *v1225;
  unint64_t v1226;
  uint64_t v1227;
  const void *v1228;
  uint64_t v1229;
  uint64_t v1230;
  void *v1231;
  const void *v1232;
  size_t v1233;
  void *v1234;
  _BYTE *v1235;
  uint64_t v1236;
  uint64_t v1237;
  uint64_t v1238;
  int v1239;
  int v1240;
  int v1241;
  _QWORD *v1242;
  uint64_t *v1243;
  uint64_t v1244;
  int v1245;
  _BYTE *v1246;
  _QWORD *v1247;
  unint64_t v1248;
  const void *v1249;
  uint64_t v1250;
  uint64_t v1251;
  const void *v1252;
  void *v1253;
  size_t v1254;
  unint64_t v1255;
  unint64_t v1256;
  unint64_t v1257;
  unint64_t v1258;
  unint64_t v1259;
  unint64_t v1260;
  __int128 v1261;
  __int128 v1262;
  unint64_t v1263;
  unint64_t v1264;
  __int128 v1265;
  __int128 v1266;
  unint64_t v1267;
  unint64_t v1268;
  unint64_t v1269;
  unint64_t v1270;
  unint64_t v1271;
  unint64_t v1272;
  __int128 v1273;
  __int128 v1274;
  unint64_t v1275;
  unint64_t v1276;
  __int128 v1277;
  __int128 v1278;
  char *v1279;
  char *v1280;
  uint64_t v1281;
  unint64_t v1282;
  unint64_t v1283;
  __int128 v1284;
  __int128 v1285;
  unint64_t v1286;
  unint64_t v1287;
  __int128 v1288;
  __int128 v1289;
  unint64_t v1290;
  void *v1291;
  _BYTE *v1292;
  uint64_t v1293;
  uint64_t v1294;
  uint64_t v1295;
  int v1296;
  int v1297;
  int v1298;
  _OWORD *v1299;
  _OWORD *v1300;
  unint64_t v1301;
  unint64_t v1302;
  void *v1303;
  _BYTE *v1304;
  uint64_t v1305;
  uint64_t v1306;
  uint64_t v1307;
  int v1308;
  int v1309;
  int v1310;
  _QWORD *v1311;
  uint64_t *v1312;
  uint64_t v1313;
  int v1314;
  _QWORD *v1315;
  uint64_t *v1316;
  uint64_t v1317;
  int v1318;
  _BYTE *v1319;
  _OWORD *v1320;
  _OWORD *v1321;
  unint64_t v1322;
  unint64_t v1323;
  __int128 v1324;
  unint64_t v1325;
  unint64_t v1326;
  __int128 v1327;
  __int128 v1328;
  unint64_t v1329;
  unint64_t v1330;
  unint64_t v1331;
  uint64_t v1332;
  const void *v1333;
  const void *v1334;
  void *v1335;
  size_t v1336;
  _OWORD *v1337;
  _OWORD *v1338;
  void *v1339;
  _BYTE *v1340;
  uint64_t v1341;
  uint64_t v1342;
  uint64_t v1343;
  int v1344;
  int v1345;
  int v1346;
  _BYTE *v1347;
  _BYTE *v1348;
  unint64_t v1349;
  const void *v1350;
  uint64_t v1351;
  uint64_t v1352;
  uint64_t v1353;
  void *v1354;
  const void *v1355;
  size_t v1356;
  unint64_t v1357;
  uint64_t v1358;
  unsigned __int8 *v1359;
  unint64_t v1360;
  unsigned int v1361;
  uint64_t v1362;
  unint64_t v1363;
  unint64_t v1364;
  unint64_t v1365;
  uint64_t v1366;
  unint64_t v1367;
  unint64_t v1368;
  uint64_t v1369;
  uint64_t v1370;
  uint64_t v1371;
  int v1372;
  int v1373;
  int v1374;
  unint64_t v1375;
  unint64_t v1376;
  unint64_t v1377;
  __int128 v1378;
  __int128 v1379;
  uint64_t v1380;
  _BYTE *v1381;
  unsigned __int8 *v1382;
  unsigned int v1383;
  _OWORD *v1384;
  __int128 *v1385;
  unsigned int v1386;
  __int128 v1387;
  __int128 v1388;
  void *v1389;
  const void *v1390;
  const void *v1391;
  _QWORD *v1392;
  _QWORD *v1393;
  _QWORD *v1394;
  _QWORD *v1395;
  void *v1396;
  _BYTE *v1397;
  uint64_t v1398;
  uint64_t v1399;
  uint64_t v1400;
  __int128 v1401;
  __int128 v1402;
  _OWORD *v1403;
  _OWORD *v1404;
  unint64_t v1405;
  unint64_t v1406;
  uint64_t v1407;
  unint64_t v1408;
  unint64_t v1409;
  uint64_t v1410;
  unint64_t v1411;
  unint64_t v1412;
  uint64_t v1413;
  _OWORD *v1414;
  _OWORD *v1415;
  unint64_t v1416;
  unint64_t v1417;
  __int128 v1418;
  __int128 v1419;
  _BYTE *v1420;
  _BYTE *v1421;
  unint64_t v1422;
  const void *v1423;
  const void *v1424;
  void *v1425;
  int v1426;
  int v1427;
  int v1428;
  _QWORD *v1429;
  _QWORD *v1430;
  _BYTE *v1431;
  _BYTE *v1432;
  unint64_t v1433;
  uint64_t v1434;
  const void *v1435;
  uint64_t v1436;
  uint64_t v1437;
  void *v1438;
  const void *v1439;
  size_t v1440;
  char v1441;
  unsigned __int8 *v1442;
  uint64_t v1443;
  unsigned int v1444;
  uint64_t v1445;
  unint64_t v1446;
  unint64_t v1447;
  unint64_t v1448;
  int v1449;
  int v1450;
  _QWORD *v1451;
  _QWORD *v1452;
  _BYTE *v1453;
  unsigned __int8 *v1454;
  unsigned int v1455;
  _OWORD *v1456;
  __int128 *v1457;
  unsigned int v1458;
  __int128 v1459;
  __int128 v1460;
  void *v1461;
  const void *v1462;
  uint64_t v1463;
  uint64_t v1464;
  int v1465;
  uint64_t v1466;
  uint64_t v1467;
  uint64_t v1468;
  uint64_t v1469;
  uint64_t v1470;
  uint64_t v1471;
  uint64_t v1472;
  unsigned int v1473;
  uint64_t v1474;
  int v1475;
  uint64_t v1476;
  uint64_t v1477;
  uint64_t v1478;
  uint64_t v1479;
  uint64_t v1480;
  uint64_t v1481;
  uint64_t v1482;
  unint64_t v1483;
  uint64_t v1484;
  uint64_t v1485;
  unint64_t v1486;
  BOOL v1487;
  uint64_t v1488;
  uint64_t v1489;
  uint64_t v1490;
  uint64_t v1491;
  uint64_t v1492;
  uint64_t v1493;
  uint64_t v1494;
  unint64_t v1495;
  unint64_t v1496;
  uint64_t v1497;
  uint64_t v1498;
  unint64_t v1499;
  uint64_t v1500;
  unint64_t v1501;
  uint64_t v1502;
  uint64_t v1503;
  uint64_t v1504;
  uint64_t v1505;
  unint64_t v1506;
  unint64_t v1507;
  uint64_t v1508;
  unint64_t v1509;
  uint64_t v1510;
  unint64_t v1511;
  unint64_t v1512;
  unint64_t v1513;
  unint64_t v1514;
  uint64_t v1515;
  unint64_t v1516;
  unint64_t v1517;
  unint64_t v1518;
  uint64_t v1519;
  unint64_t v1520;
  unint64_t v1521;
  unint64_t v1522;
  unint64_t v1523;
  unint64_t v1524;
  unint64_t v1525;
  unint64_t v1526;
  uint64_t v1527;
  unint64_t v1528;
  unint64_t v1529;
  unint64_t v1530;
  uint64_t v1531;
  unint64_t v1532;
  unint64_t v1533;
  unint64_t v1534;
  unint64_t v1535;
  unint64_t v1536;
  uint64_t *v1537;
  unint64_t *v1538;
  uint64_t v1539;
  unint64_t v1540;
  unint64_t v1541;
  _OWORD *result;
  const void *v1543;
  _QWORD *v1544;
  _QWORD *v1545;
  _QWORD *v1546;
  _QWORD *v1547;
  void *v1548;
  _BYTE *v1549;
  uint64_t v1550;
  uint64_t v1551;
  uint64_t v1552;
  __int128 v1553;
  __int128 v1554;
  _OWORD *v1555;
  _OWORD *v1556;
  unint64_t v1557;
  unint64_t v1558;
  uint64_t v1559;
  unint64_t v1560;
  unint64_t v1561;
  uint64_t v1562;
  unint64_t v1563;
  unint64_t v1564;
  uint64_t v1565;
  _OWORD *v1566;
  _OWORD *v1567;
  unint64_t v1568;
  unint64_t v1569;
  __int128 v1570;
  __int128 v1571;
  _BYTE *v1572;
  _BYTE *v1573;
  unint64_t v1574;
  const void *v1575;
  const void *v1576;
  void *v1577;
  int v1578;
  int v1579;
  int v1580;
  char v1581;
  unint64_t v1582;
  size_t v1583;
  char v1584;
  char v1585;
  char v1586;
  unsigned int v1587;
  unsigned int v1588;
  uint64_t v1589;
  uint64_t v1590;
  uint64_t v1591;
  uint64_t v1592;
  uint64_t v1593;
  uint64_t v1594;
  size_t v1595;
  int v1596;
  uint64_t v1597;
  unint64_t v1598;
  uint64_t v1599;
  uint64_t v1600;
  uint64_t v1601;
  uint64_t v1602;
  uint64_t v1603;
  size_t v1604;
  size_t v1605;
  uint64_t v1606;
  uint64_t v1607;
  uint64_t v1608;
  uint64_t v1609;
  size_t v1610;
  size_t v1611;
  size_t v1612;
  uint64_t v1613;
  uint64_t v1614;
  unint64_t v1615;
  uint64_t v1616;
  uint64_t v1617;
  uint64_t v1618;
  uint64_t v1619;
  size_t v1620;
  unsigned int v1621;
  size_t v1622;
  uint64_t v1623;
  unint64_t v1624;
  uint64_t v1625;
  uint64_t v1626;
  size_t v1627;
  uint64_t v1628;
  size_t __n;
  unsigned int v1630;
  size_t v1631;
  unsigned int v1632;
  uint64_t v1633;
  uint64_t v1634;
  uint64_t v1635;
  unsigned int v1636;
  unsigned int v1637;
  unsigned int v1638;
  uint64_t v1639;
  uint64_t v1640;
  unsigned int v1641;
  uint64_t v1642;
  uint64_t v1643;
  uint64_t v1644;
  unint64_t v1645;
  uint64_t v1646;
  unint64_t v1647;
  unint64_t v1648;
  unint64_t v1649;
  unint64_t v1650;
  unint64_t v1651;
  unint64_t v1652;
  unint64_t v1653;
  unint64_t v1654;
  unint64_t v1655;
  unint64_t v1656;
  unint64_t v1657;
  unint64_t v1658;
  unint64_t v1659;
  unint64_t v1660;
  unint64_t v1661;
  unint64_t v1662;
  unint64_t v1663;
  unint64_t v1664;
  char *v1665;
  unint64_t v1666;
  unint64_t v1667;
  unint64_t v1668;
  unint64_t v1669;
  unint64_t v1670;
  unint64_t v1671;
  unint64_t v1672;
  unint64_t v1673;
  size_t v1674;
  unint64_t v1675;
  uint64_t v1676;
  uint64_t v1677;
  size_t v1678;
  unint64_t v1679;
  uint64_t v1680;
  uint64_t v1681;
  size_t v1682;
  uint64_t v1683;
  uint64_t v1684;
  int v1685;
  uint64_t v1686;
  uint64_t v1687;
  uint64_t v1688;
  uint64_t v1689;
  uint64_t v1690;
  uint64_t v1691;
  uint64_t v1692;
  uint64_t v1693;
  uint64_t v1694;
  uint64_t v1695;
  unint64_t v1696;
  uint64_t v1697;
  unint64_t v1698;
  uint64_t v1699;
  unint64_t v1700;
  uint64_t v1701;
  char *__dst;
  unint64_t __dsta;
  _QWORD *__dstb;
  unint64_t v1705;
  unint64_t v1706;
  unint64_t v1707;
  uint64_t v1708;
  unint64_t v1709;
  uint64_t v1710;
  uint64_t v1711;
  uint64_t v1712;
  uint64_t v1713;
  size_t v1714;
  size_t v1715;
  size_t v1716;
  uint64_t v1717;
  size_t v1718;
  unsigned int v1719;
  size_t v1720;
  size_t v1721;
  uint64_t v1722;
  uint64_t v1723;
  uint64_t v1724;
  uint64_t v1725;
  unint64_t v1726;
  unint64_t v1727;
  uint64_t v1728;
  unint64_t v1729;
  uint64_t v1730;
  unsigned int v1731;
  unint64_t v1732;
  size_t v1733;
  uint64_t v1734;
  size_t v1735;
  uint64_t v1736;
  uint64_t v1737;
  uint64_t v1738;
  size_t v1739;
  unint64_t v1740;
  uint64_t v1741;
  int v1742;
  uint64_t v1743;
  unint64_t v1744;
  size_t v1745;
  unint64_t v1746;
  unint64_t v1747;
  uint64_t v1748;
  uint64_t v1749;
  uint64_t v1750;
  uint64_t v1751;
  uint64_t v1752;
  uint64_t v1753;
  uint64_t v1754;
  uint64_t v1755;
  uint64_t v1756;
  uint64_t v1757;
  uint64_t v1758;
  unint64_t v1759;
  unint64_t v1760;
  size_t v1761;
  uint64_t v1762;
  unint64_t v1763;
  unint64_t v1764;
  uint64_t v1767;
  uint64_t v1768;
  uint64_t v1769;
  uint64_t v1770;
  uint64_t v1771;
  uint64_t v1772;
  uint64_t v1773;
  uint64_t v1774;
  uint64_t v1775;

  if (a1 == a2)
    goto LABEL_2173;
  v1695 = a3;
  v1684 = *(_QWORD *)(a3 + 16);
  v1683 = *(_QWORD *)(v1684 - 8);
  v1709 = *(_QWORD *)(v1683 + 64);
  v1688 = sub_21D7C4668();
  v3 = *(_QWORD *)(v1688 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v1713 = v4 + 16;
  v1719 = *(_DWORD *)(v3 + 84);
  v1680 = v3;
  v5 = *(_QWORD *)(v3 + 64);
  v1674 = v5;
  if (v1719)
    v6 = v5;
  else
    v6 = v5 + 1;
  v1752 = v4 | 7;
  v1644 = sub_21D7BF754();
  v7 = *(_QWORD *)(v1644 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v1755 = v8 | 7;
  v9 = v4 | 7 | v8;
  v1639 = sub_21D7C3840();
  v10 = *(_QWORD *)(v1639 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v1643 = sub_21D7C3804();
  v12 = *(_QWORD *)(v1643 - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v14 = v13;
  v15 = v13 | v11;
  v16 = v9 | v15;
  v1771 = v4;
  v1724 = v4 + 40;
  v17 = *(_DWORD *)(v7 + 84);
  if (v17)
    v18 = v17 - 1;
  else
    v18 = 0;
  v1638 = v18;
  if (v18 <= 0x7FFFFFFE)
    v19 = 2147483646;
  else
    v19 = v18;
  v1742 = v19;
  v1637 = *(_DWORD *)(v12 + 84);
  v1636 = *(_DWORD *)(v10 + 84);
  if (v1637 <= v1636)
    v20 = *(_DWORD *)(v10 + 84);
  else
    v20 = *(_DWORD *)(v12 + 84);
  v1731 = v20;
  v1632 = *(_DWORD *)(v7 + 84);
  v1642 = v8 + 113;
  v21 = (v8 + 113) & ~v8;
  v1750 = v8;
  v1626 = v7;
  v1634 = v10;
  v1635 = *(_QWORD *)(v1643 - 8);
  v1640 = *(_QWORD *)(v10 + 64) + v13;
  v1734 = *(_QWORD *)(v12 + 64);
  if (v17)
    v22 = *(_QWORD *)(v7 + 64);
  else
    v22 = *(_QWORD *)(v7 + 64) + 1;
  v1716 = v22;
  v1646 = v16 + 1;
  v1759 = ((v4 + 40) & ~v4) + v6;
  v23 = v6;
  v1745 = v6;
  v1747 = (v1759 + 7) & 0xFFFFFFFFFFFFFFF8;
  v1757 = v8 + 40;
  v1718 = v22 + v21;
  v24 = v22 + v21 + ((v8 + 40 + ((((v1747 + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~(v8 | 7));
  v1722 = (v1640 & ~(unint64_t)v13) + v1734;
  if (v20)
    v25 = (v1640 & ~(unint64_t)v13) + v1734;
  else
    v25 = (v1640 & ~(unint64_t)v13) + v1734 + 1;
  v1720 = v25;
  v26 = v25 + 1;
  v27 = v25 + 1 + ((v15 + 160) & ~v15);
  if (v24 <= v27)
    v24 = v27;
  if (v24 <= 0x30)
    v24 = 48;
  v1679 = v24;
  __n = v24 + 1;
  v1741 = v24 + 1 + ((v16 + 1) & ~v16);
  v1687 = sub_21D7C3F6C();
  v28 = *(_QWORD *)(v1687 - 8);
  v29 = *(unsigned __int8 *)(v28 + 80);
  v1686 = (v29 | 7) + 58;
  v1689 = v29 | 7;
  v30 = (v1686 + ((v1741 + (((v9 | v15) + v6 + ((v4 + 16) & ~v4)) & ~(v9 | v15)) + 11) & 0xFFFFFFFFFFFFFFF8)) & ~(v29 | 7);
  v31 = *(_DWORD *)(v28 + 84);
  v32 = v31 - 1;
  if (!v31)
    v32 = 0;
  v1685 = v32;
  v1641 = *(_DWORD *)(v28 + 84);
  v1681 = v29 + 16;
  v1691 = *(unsigned __int8 *)(v28 + 80);
  v1633 = *(_QWORD *)(v1687 - 8);
  v33 = *(_QWORD *)(v28 + 64);
  if (!v31)
    ++v33;
  v1631 = v33;
  v34 = ((v29 + 16) & ~v29) + v33;
  v1623 = sub_21D7C4314();
  v35 = *(_QWORD *)(v1623 - 8);
  v36 = *(_DWORD *)(v35 + 80);
  v1712 = v35;
  v1773 = v14 | 7;
  v1614 = sub_21D7BF964();
  v37 = *(_QWORD *)(v1614 - 8);
  v38 = *(unsigned __int8 *)(v37 + 80);
  v1767 = v16 | v14 | v36 | v38;
  v1682 = v34;
  v1726 = v1767 + v34 + v30;
  v1763 = v36 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v1717 = v36;
  v1761 = *(_QWORD *)(v35 + 64) + ((v36 + 65) & ~(unint64_t)v36);
  v1739 = v23 + 7;
  v39 = (v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v1676 = v36 + 16;
  v1707 = (v1761 + ((v1676 + ((((v40 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v1763)) & 0xFFFFFFFFFFFFFFF8;
  v1737 = v15 + 16;
  v1625 = v14 + 8;
  v1693 = v14;
  v41 = v1734 + ((v14 + 8) & ~v14);
  if (v1719)
    v42 = v1719 - 1;
  else
    v42 = 0;
  v43 = v40 + 16;
  v44 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v1598 = v26;
  v45 = v26 + v38 + ((v40 + 16 + v15) & ~v15);
  v1630 = v42;
  v1596 = v1742 - 1;
  if (v42 <= v1742 - 1)
    v46 = v1742 - 1;
  else
    v46 = v42;
  if (v46 <= 0x7FFFFFFF)
    v46 = 0x7FFFFFFF;
  v47 = v1731 - 1;
  if (!v1731)
    v47 = 0;
  if (v47 <= v46)
    v48 = v46;
  else
    v48 = v47;
  v1621 = v48;
  v49 = (v1747 + 23) & 0xFFFFFFFFFFFFFFF8;
  __dst = (char *)((v39 + 47) & 0xFFFFFFFFFFFFFFF8);
  v1735 = v44 + 17;
  v1609 = v1755 + 23;
  v1705 = v1755
        + 23
        + v44
        + 17
        + ((v1713 + ((((v49 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v1752);
  v1714 = v41;
  v50 = v41 + v1755;
  v51 = v1755;
  v1733 = v1718 + v1752;
  v1700 = (v44 + 47) & 0xFFFFFFFFFFFFFFF8;
  v1624 = v1700 + 16;
  v52 = v1700 + 16 + v1752;
  v1729 = v1700 + 24;
  v1711 = *(unsigned __int8 *)(v37 + 80);
  v1613 = *(_QWORD *)(v1614 - 8);
  v1608 = *(_QWORD *)(v37 + 64) + 7;
  v53 = ((v1720 + v1773 + ((v1718 + v15 + ((v1757 + ((v1608 + (v45 & ~v38)) & 0xFFFFFFFFFFFFFFF8)) & ~v1755)) & ~v15)) & ~v1773)
      + v41;
  v1619 = v1755 + 41;
  v54 = v1720 + 7;
  v55 = ((((v1720
          + 7
          + ((v1718
            + v15
            + ((v51 + 41 + ((((unint64_t)(__dst + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v51)) & ~v15)) & 0xFFFFFFFFFFFFFFF8)
        + 47) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v56 = v39 + 40;
  v57 = (v16 + v56) & ~v16;
  v1615 = v55 + v16;
  v1617 = v1741 + 7;
  v1618 = v16 + 8;
  v1743 = v9 | v15;
  v1715 = v1718 + 7;
  v58 = (v1718 + 7 + ((v56 + v1750) & ~v1755)) & 0xFFFFFFFFFFFFFFF8;
  v1605 = v1716 + v15;
  v59 = v1720 + v15;
  v1597 = v1720 + v15 + 1;
  v60 = v1720 + v1773;
  v61 = ((v41 + v1755 + ((v1720 + v1773 + ((v1597 + ((v1716 + v15 + ((v43 + v1750) & ~v1750)) & ~v15)) & ~v15)) & ~v1773)) & ~v1755)
      + v1718;
  v62 = ((v1761 + 7 + ((v56 + v36) & v1763)) & 0xFFFFFFFFFFFFFFF8) + 8;
  v1601 = v1755 + 17;
  v63 = v1718 + ((v51 + 17 + v1747) & ~v51);
  v1672 = v1718 + ((v1750 + 8) & ~v1755);
  if (v1672 <= v1700
              + 24
              + ((v52
                + ((v52
                  + ((v1718
                    + v1752
                    + ((v41
                      + v51
                      + ((v1720 + v1773 + ((v15 + 16 + ((v1707 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & ~v1773)) & ~v51)) & ~v1752)) & ~v1752)) & ~v1752))
    v64 = v1700
        + 24
        + ((v52
          + ((v52
            + ((v1718
              + v1752
              + ((v41 + v1755 + ((v1720 + v1773 + ((v15 + 16 + ((v1707 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & ~v1773)) & ~v1755)) & ~v1752)) & ~v1752)) & ~v1752);
  else
    v64 = v1718 + ((v1750 + 8) & ~v1755);
  v1655 = v53;
  if (v64 <= v53)
    v64 = v53;
  v1673 = ((((v1720
            + 7
            + ((v1718
              + v15
              + ((v1755 + 41 + ((((unint64_t)(__dst + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v1755)) & ~v15)) & 0xFFFFFFFFFFFFFFF8)
          + 47) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  if (v64 <= v55)
    v64 = ((((v1720
            + 7
            + ((v1718
              + v15
              + ((v1755 + 41 + ((((unint64_t)(__dst + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v1755)) & ~v15)) & 0xFFFFFFFFFFFFFFF8)
          + 47) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  v1654 = ((v16 + 8 + ((v1741 + 7 + ((v55 + v16 + v57) & ~v16)) & 0xFFFFFFFFFFFFFFF8)) & ~v16) + v1741;
  if (v64 <= v1654)
    v64 = ((v16 + 8 + ((v1741 + 7 + ((v55 + v16 + v57) & ~v16)) & 0xFFFFFFFFFFFFFFF8)) & ~v16) + v1741;
  v1653 = ((((((v58 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v64 <= v1653)
    v64 = ((((((v58 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
  v1652 = v61;
  if (v64 <= v61)
    v64 = v61;
  v1656 = (((((v1759 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v64 <= v1656)
    v64 = (((((v1759 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v1657 = v62;
  if (v64 <= v62)
    v64 = v62;
  v1649 = v63 + 1;
  if (v64 <= v63 + 1)
    v65 = v63 + 1;
  else
    v65 = v64;
  v1696 = v65;
  v1698 = v1726 & ~v1767;
  v66 = (((v49 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v1727 = ((((v66 + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 41;
  v1603 = v15 + 40;
  v67 = ((v59
        + ((v15
          + 40
          + ((((((v66 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & ~v15)
      + v1720;
  v68 = (((unint64_t)(__dst + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v69 = v68 + 8;
  v70 = ((v68 + 47) & 0xFFFFFFFFFFFFFFF8) + 40;
  v1620 = v1718 + v15;
  v1595 = ((v1718 + v15 + ((v70 + v1755) & ~v1755)) & ~v15) + v1720;
  v1611 = v1595 + 7;
  v1616 = v1750 + 8;
  v71 = ((v1750 + 8 + ((v1595 + 7 + v57) & 0xFFFFFFFFFFFFFFF8)) & ~v1755) + v1718;
  v1606 = v15 + 24;
  v1677 = v50;
  v1675 = v1700 + 16 + v1752;
  v72 = v1729
      + ((v52 + ((v52 + ((v1733 + ((v50 + ((v60 + ((v15 + 24 + v1707) & ~v15)) & ~v1773)) & ~v1755)) & ~v1752)) & ~v1752)) & ~v1752);
  v73 = (unint64_t)(__dst + 15) & 0xFFFFFFFFFFFFFFF8;
  v74 = v1771;
  v75 = ((v74 + 80) & ~v74) + v1745;
  v76 = ((v74 + 56) & ~v74) + v1745;
  v77 = (v58 + 23) & 0xFFFFFFFFFFFFFFF8;
  v1602 = v15 + 18;
  v78 = ((v15 + 18 + v77) & ~v15) + v1720;
  v79 = ((v54
        + ((v15
          + 8
          + ((((((((((v77 + 25) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v80 = v73 + 16;
  v81 = v73 + 8;
  v82 = v1747 + 8;
  v83 = ((v1747 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  v84 = (((v1700 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v1628 = v15 + 8;
  v1622 = v1720 + v15;
  v1678 = v1720 + v1773;
  v1610 = v1714 + v1773;
  v85 = ((v1715
        + ((v1757
          + ((((v1714
              + 9
              + ((v1714
                + v1773
                + ((v60
                  + ((v59 + ((v15 + 8 + ((((v84 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & ~v15)) & ~v1773)) & ~v1773)) & 0xFFFFFFFFFFFFFFF8)
            + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v1755)) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v1599 = v1717 + 8;
  v1604 = v1761 + v15;
  v1607 = v15 + 9;
  v1627 = v1720 + 7;
  v1748 = v15;
  v1612 = v1720 + v1755;
  v86 = ((v1720
        + v1755
        + ((v1737
          + ((v54
            + ((v15
              + 9
              + ((((v54 + ((v1761 + v15 + ((v1717 + 8 + v84) & v1763)) & ~v15)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & ~v1755)
      + v1718;
  v87 = v1727;
  if (v1696 > v1727)
    v87 = v1696;
  v1648 = v67;
  if (v87 <= v67)
    v87 = v67;
  v1650 = v71;
  v1651 = v69;
  if (v87 <= v69)
    v87 = v69;
  if (v87 <= v71)
    v87 = v71;
  if (v87 <= v1735)
    v87 = v1735;
  v88 = v72;
  if (v87 <= v72)
    v87 = v72;
  v1647 = v80;
  if (v87 <= v80)
    v87 = v80;
  v1658 = ((v1759 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
  if (v87 <= v1658)
    v87 = ((v1759 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
  if (v87 <= v75)
    v87 = v75;
  v1659 = v76;
  if (v87 <= v76)
    v87 = v76;
  v1660 = ((((v1739 + ((v1724 + (v54 & 0xFFFFFFFFFFFFFFF8)) & ~v1771)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  if (v87 <= v1660)
    v87 = ((((v1739 + ((v1724 + (v54 & 0xFFFFFFFFFFFFFFF8)) & ~v1771)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  v1662 = v78;
  if (v87 <= v78)
    v87 = v78;
  v1661 = v79;
  if (v87 <= v79)
    v87 = v79;
  v1663 = ((unint64_t)(__dst + 23) & 0xFFFFFFFFFFFFFFF8) + 40;
  if (v87 <= v1663)
    v87 = ((unint64_t)(__dst + 23) & 0xFFFFFFFFFFFFFFF8) + 40;
  v1664 = v81;
  if (v87 <= v81)
    v87 = v81;
  v1671 = v70;
  if (v87 <= v70)
    v87 = v70;
  v1665 = __dst + 8;
  if (v87 <= (unint64_t)(__dst + 8))
    v87 = (unint64_t)(__dst + 8);
  v1666 = v82;
  if (v87 <= v82)
    v87 = v82;
  v1669 = v83;
  if (v87 <= v83)
    v87 = v83;
  if (v87 <= v1759)
    v87 = v1759;
  v1667 = v85;
  if (v87 <= v85)
    v87 = v85;
  v1670 = (v1705 & ~v1755) + v1718;
  if (v87 <= v1670)
    v87 = (v1705 & ~v1755) + v1718;
  v1668 = v86;
  if (v87 <= v86)
    v87 = v86;
  if (v87 <= 8)
    v87 = 8;
  v1706 = v87;
  v1645 = v87 + 8;
  v89 = ((v87 + 8 + v1698) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v89 <= v1709)
    v89 = v1709;
  if (v89 <= 8)
    v90 = 8;
  else
    v90 = v89;
  v91 = *(unsigned int *)(v35 + 84);
  v92 = a1;
  if (*((unsigned __int8 *)a1 + v90) >= 4u)
  {
    if (v90 <= 3)
      v93 = v90;
    else
      v93 = 4;
    __asm { BR              X12 }
  }
  v94 = v1693;
  v95 = v1691;
  v1708 = ~v1771;
  v1710 = ~v1743;
  v1697 = ~v1755;
  v1692 = ~v1750;
  v96 = ~v15;
  v97 = ~v1693;
  v1699 = ~v1689;
  __dsta = ~v95;
  v1701 = ~v1767;
  v1690 = ~v1717;
  v1774 = ~v1773;
  v1694 = ~v1752;
  v1600 = ~v1711;
  v98 = 8 * v1722;
  v99 = a2;
  switch(*((_BYTE *)a1 + v90))
  {
    case 0:
      (*(void (**)(_OWORD *, uint64_t))(v1683 + 8))(a1, v1684);
      goto LABEL_871;
    case 1:
      v1589 = ~v94;
      v1591 = ~v1748;
      swift_bridgeObjectRelease();
      v100 = ((unint64_t)a1 + v1771 + 16) & v1708;
      if (!__swift_getEnumTagSinglePayload(v100, 1, v1688))
        (*(void (**)(uint64_t, uint64_t))(v1680 + 8))(v100, v1688);
      v101 = (unsigned __int8 *)((v100 + v1745 + v1743) & v1710);
      v1584 = 8 * v1722;
      if (*v101 > 2u)
        goto LABEL_164;
      v102 = (unint64_t)&v101[v1646] & v1710;
      v103 = *(unsigned __int8 *)(v102 + v1679);
      if (v103 > 2)
        goto LABEL_164;
      if (v103 == 2)
      {
        if (*(_QWORD *)(((unint64_t)&v101[v1646] & v1710) + 8) >= 0xFFFFFFFFuLL)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(((unint64_t)&v101[v1646] & v1710) + 0x38))
            __swift_destroy_boxed_opaque_existential_1(v102 + 32);
        }
        v110 = (v102 + 79) & 0xFFFFFFFFFFFFFFF8;
        if (*(_QWORD *)(v110 + 8) >= 0xFFFFFFFFuLL)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(v110 + 56))
            __swift_destroy_boxed_opaque_existential_1(v110 + 32);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v111 = (v1628 + ((((v110 + 79) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v1591;
        if (v1731)
        {
          v112 = v1637;
          if (v1636 >= v1637)
          {
            v113 = v111;
            v112 = v1636;
            v114 = v1639;
          }
          else
          {
            v113 = (v1640 + v111) & v1589;
            v114 = v1643;
          }
          EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v113, v112, v114);
        }
        else
        {
          if (!*(_BYTE *)(v111 + v1722))
          {
LABEL_163:
            (*(void (**)(unint64_t, uint64_t))(v1634 + 8))(v111, v1639);
            (*(void (**)(unint64_t, uint64_t))(v1635 + 8))((v1640 + v111) & v1589, v1643);
            goto LABEL_164;
          }
          v115 = (*(unsigned __int8 *)(v111 + v1722) - 1) << v98;
          if (v1722 > 3)
            v115 = 0;
          if ((_DWORD)v1722)
          {
            if (v1722 <= 3)
              v116 = v1722;
            else
              v116 = 4;
            __asm { BR              X11 }
          }
          EnumTagSinglePayload = v115 + 1;
        }
        if (EnumTagSinglePayload)
          goto LABEL_164;
        goto LABEL_163;
      }
      if (v103 != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_164;
      }
      __swift_destroy_boxed_opaque_existential_1((unint64_t)&v101[v1646] & v1710);
      v104 = (v1724 + v102) & v1708;
      if (!__swift_getEnumTagSinglePayload(v104, 1, v1688))
        (*(void (**)(uint64_t, uint64_t))(v1680 + 8))(v104, v1688);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v105 = (((((v1739 + v104) & 0xFFFFFFFFFFFFFFF8) + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
      if (*(_QWORD *)(v105 + 24) >= 0xFFFFFFFFuLL)
        __swift_destroy_boxed_opaque_existential_1(v105);
      v106 = (v1757 + v105) & v1697;
      if (v1638 >= 0x7FFFFFFF)
      {
        v109 = (v1642 + v106) & v1692;
        if (__swift_getEnumTagSinglePayload(v109, v1632, v1644) > 1)
          goto LABEL_164;
        v108 = v90;
        goto LABEL_149;
      }
      v107 = *(_QWORD *)(((v1757 + v105) & v1697) + 0x10);
      if (v107 >= 0xFFFFFFFF)
        LODWORD(v107) = -1;
      if ((int)v107 - 1 < 0)
      {
        v108 = v90;
        v109 = (v1642 + v106) & v1692;
LABEL_149:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v90 = v108;
        if (!__swift_getEnumTagSinglePayload(v109, 1, v1644))
          (*(void (**)(uint64_t, uint64_t))(v1626 + 8))(v109, v1644);
      }
LABEL_164:
      v118 = (unint64_t)&v101[v1741 + 11] & 0xFFFFFFFFFFFFFFF8;
      if (*(_QWORD *)(v118 + 24) >= 0xFFFFFFFFuLL)
      {
        __swift_destroy_boxed_opaque_existential_1((unint64_t)&v101[v1741 + 11] & 0xFFFFFFFFFFFFFFF8);
        swift_bridgeObjectRelease();
      }
      v119 = (v1686 + v118) & v1699;
      if (v1685 < 0)
      {
        v120 = (v1681 + v119) & __dsta;
        if (__swift_getEnumTagSinglePayload(v120, v1641, v1687) <= 1)
        {
LABEL_170:
          swift_bridgeObjectRelease();
          if (!__swift_getEnumTagSinglePayload(v120, 1, v1687))
            (*(void (**)(uint64_t, uint64_t))(v1633 + 8))(v120, v1687);
        }
      }
      else if (*(_QWORD *)(((v1686 + v118) & v1699) + 8) >= 0xFFFFFFFFuLL)
      {
        v120 = (v1681 + v119) & __dsta;
        goto LABEL_170;
      }
      v121 = (v119 + v1682 + v1767) & v1701;
      v1593 = v90;
      v1587 = v91;
      v1583 = (v119 + v1682 + v1767) & v1701;
      switch(*(_BYTE *)(v121 + v1706))
      {
        case 0:
          v123 = ~v1752;
          v124 = v88;
          if (!__swift_getEnumTagSinglePayload(v121, 1, v1688))
            (*(void (**)(unint64_t, uint64_t))(v1680 + 8))(v121, v1688);
          v125 = a1;
          v127 = (v1739 + v121) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v127);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v128 = (v1676
                + ((((((v127 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v1763;
          if (v1587 > 0x7FFFFFFE)
          {
            v132 = (v128 + 23) & 0xFFFFFFFFFFFFFFF8;
            v130 = v1642;
            v131 = v1637;
            if (__swift_getEnumTagSinglePayload((v1717 + ((v132 + 23) & 0xFFFFFFFFFFFFFFF8) + 33) & v1690, v1587, v1623))goto LABEL_350;
            goto LABEL_349;
          }
          LODWORD(v129) = -1;
          if (*(_QWORD *)(((v1676
                           + ((((((v127 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v1763)
                         + 8) < 0xFFFFFFFFuLL)
            v129 = *(_QWORD *)(((v1676
                               + ((((((v127 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v1763)
                             + 8);
          v130 = v1642;
          v131 = v1637;
          if ((v129 + 1) <= 1)
          {
            v132 = (v128 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_349:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v238 = (id *)((v132 + 47) & 0xFFFFFFFFFFFFFFF8);

            (*(void (**)(unint64_t, uint64_t))(v1712 + 8))(((unint64_t)v238 + v1717 + 9) & v1690, v1623);
          }
LABEL_350:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v239 = (v1737 + ((((v128 + v1761) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v1591;
          if (v1731)
            goto LABEL_383;
          if (!*(_BYTE *)(v239 + v1722))
            goto LABEL_523;
          v240 = (*(unsigned __int8 *)(v239 + v1722) - 1) << v1584;
          if (v1722 > 3)
            v240 = 0;
          if ((_DWORD)v1722)
          {
            if (v1722 <= 3)
              v241 = v1722;
            else
              v241 = 4;
            __asm { BR              X11 }
          }
          goto LABEL_507;
        case 1:
        case 0x17:
          v123 = ~v1752;
          v124 = v88;
          v125 = a1;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v126 = (v1642 + ((v1755 + v121 + 8) & v1697)) & v1692;
          goto LABEL_2057;
        case 2:
        case 6:
        case 7:
        case 0xB:
        case 0xE:
        case 0xF:
        case 0x12:
        case 0x19:
        case 0x1A:
        case 0x1B:
        case 0x1C:
        case 0x1F:
        case 0x2A:
        case 0x2C:
        case 0x2E:
        case 0x2F:
        case 0x30:
        case 0x31:
        case 0x34:
          v123 = ~v1752;
          v124 = v88;
          v125 = a1;
          goto LABEL_798;
        case 3:
          v123 = ~v1752;
          v124 = v88;
          v125 = a1;
          if (!__swift_getEnumTagSinglePayload(v121, 1, v1688))
            (*(void (**)(unint64_t, uint64_t))(v1680 + 8))(v121, v1688);
          v133 = (v1739 + v121) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v133);
          v134 = (v133 + 47) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          v135 = (v1737 + v134) & v1591;
          if (v1731)
          {
            v136 = v1636;
            if (v1636 >= v1637)
            {
              v137 = (v1737 + v134) & v1591;
              v138 = v1639;
            }
            else
            {
              v137 = (v1640 + v135) & v1589;
              v136 = v1637;
              v138 = v1643;
            }
            v281 = __swift_getEnumTagSinglePayload(v137, v136, v138);
            v261 = v1642;
          }
          else
          {
            v261 = v1642;
            if (!*(_BYTE *)(v135 + v1722))
              goto LABEL_629;
            v262 = (*(unsigned __int8 *)(v135 + v1722) - 1) << v1584;
            if (v1722 > 3)
              v262 = 0;
            if ((_DWORD)v1722)
            {
              if (v1722 <= 3)
                v263 = v1722;
              else
                v263 = 4;
              __asm { BR              X11 }
            }
            v281 = v262 + 1;
          }
          if (v281)
            goto LABEL_630;
LABEL_629:
          (*(void (**)(unint64_t, uint64_t))(v1634 + 8))(v135, v1639);
          (*(void (**)(unint64_t, uint64_t))(v1635 + 8))((v1640 + v135) & v1589, v1643);
LABEL_630:
          v339 = (v1598 + v1711 + v135) & v1600;
          (*(void (**)(unint64_t, uint64_t))(v1613 + 8))(v339, v1614);
          v340 = (v1608 + v339) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v340 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v340);
          v341 = (v1757 + v340) & v1697;
          if (v1638 >= 0x7FFFFFFF)
          {
            v343 = (v261 + v341) & v1692;
            if (__swift_getEnumTagSinglePayload(v343, v1632, v1644) > 1)
              goto LABEL_640;
            goto LABEL_638;
          }
          v342 = *(_QWORD *)(((v1757 + v340) & v1697) + 0x10);
          if (v342 >= 0xFFFFFFFF)
            LODWORD(v342) = -1;
          if ((int)v342 - 1 < 0)
          {
            v343 = (v261 + v341) & v1692;
LABEL_638:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!__swift_getEnumTagSinglePayload(v343, 1, v1644))
              (*(void (**)(uint64_t, uint64_t))(v1626 + 8))(v343, v1644);
          }
LABEL_640:
          v344 = (v1620 + v341) & v1591;
          if (v1731)
          {
            v345 = v1636;
            if (v1636 >= v1637)
            {
              v346 = (v1620 + v341) & v1591;
              v347 = v1639;
            }
            else
            {
              v346 = (v1640 + v344) & v1589;
              v345 = v1637;
              v347 = v1643;
            }
            v350 = __swift_getEnumTagSinglePayload(v346, v345, v347);
          }
          else
          {
            if (!*(_BYTE *)(v344 + v1722))
              goto LABEL_724;
            v348 = (*(unsigned __int8 *)(v344 + v1722) - 1) << v1584;
            if (v1722 > 3)
              v348 = 0;
            if ((_DWORD)v1722)
            {
              if (v1722 <= 3)
                v349 = v1722;
              else
                v349 = 4;
              __asm { BR              X11 }
            }
            v350 = v348 + 1;
          }
          if (v350)
            goto LABEL_725;
LABEL_724:
          (*(void (**)(size_t, uint64_t))(v1634 + 8))(v344, v1639);
          (*(void (**)(size_t, uint64_t))(v1635 + 8))((v1640 + v344) & v1589, v1643);
LABEL_725:
          v375 = (uint64_t *)((v1678 + v344) & v1774);
          if ((v1637 & 0x80000000) != 0)
          {
            v377 = __swift_getEnumTagSinglePayload(((unint64_t)v375 + v1625) & v1589, v1637, v1643);
          }
          else
          {
            v376 = *v375;
            if ((unint64_t)*v375 >= 0xFFFFFFFF)
              LODWORD(v376) = -1;
            v377 = v376 + 1;
          }
          if (v377)
            goto LABEL_799;
          swift_bridgeObjectRelease();
          v378 = (uint64_t)v375 + v1625;
          goto LABEL_2143;
        case 4:
          v123 = ~v1752;
          v124 = v88;
          if (!__swift_getEnumTagSinglePayload(v121, 1, v1688))
            (*(void (**)(unint64_t, uint64_t))(v1680 + 8))(v121, v1688);
          v125 = a1;
          v139 = (v1739 + v121) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v139);
          swift_bridgeObjectRelease();
          v140 = (((v139 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v141 = (v140 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v141 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1((v140 + 47) & 0xFFFFFFFFFFFFFFF8);
          v142 = (v1619 + v141) & v1697;
          if (v1638 >= 0x7FFFFFFF)
          {
            v144 = (v1642 + v142) & v1692;
            if (__swift_getEnumTagSinglePayload(v144, v1632, v1644) > 1)
              goto LABEL_362;
            goto LABEL_360;
          }
          v143 = *(_QWORD *)(((v1619 + v141) & v1697) + 0x10);
          if (v143 >= 0xFFFFFFFF)
            LODWORD(v143) = -1;
          if ((int)v143 - 1 < 0)
          {
            v144 = (v1642 + v142) & v1692;
LABEL_360:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!__swift_getEnumTagSinglePayload(v144, 1, v1644))
              (*(void (**)(uint64_t, uint64_t))(v1626 + 8))(v144, v1644);
          }
LABEL_362:
          v242 = (v1620 + v142) & v1591;
          if (v1731)
          {
            v243 = v1636;
            if (v1636 >= v1637)
            {
              v244 = (v1620 + v142) & v1591;
              v245 = v1639;
            }
            else
            {
              v244 = (v1640 + v242) & v1589;
              v243 = v1637;
              v245 = v1643;
            }
            v287 = __swift_getEnumTagSinglePayload(v244, v243, v245);
          }
          else
          {
            if (!*(_BYTE *)(v242 + v1722))
              goto LABEL_703;
            v276 = (*(unsigned __int8 *)(v242 + v1722) - 1) << v1584;
            if (v1722 > 3)
              v276 = 0;
            if ((_DWORD)v1722)
            {
              if (v1722 <= 3)
                v277 = v1722;
              else
                v277 = 4;
              __asm { BR              X11 }
            }
            v287 = v276 + 1;
          }
          if (v287)
            goto LABEL_704;
LABEL_703:
          (*(void (**)(size_t, uint64_t))(v1634 + 8))(v242, v1639);
          (*(void (**)(size_t, uint64_t))(v1635 + 8))((v1640 + v242) & v1589, v1643);
LABEL_704:
          v187 = (v1627 + v242) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v187 + 24) >= 0xFFFFFFFFuLL)
LABEL_705:
            __swift_destroy_boxed_opaque_existential_1(v187);
          goto LABEL_798;
        case 5:
          v123 = ~v1752;
          v124 = v88;
          v125 = a1;
          if (!__swift_getEnumTagSinglePayload(v121, 1, v1688))
            (*(void (**)(unint64_t, uint64_t))(v1680 + 8))(v121, v1688);
          v145 = (v1739 + v121) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v145);
          v146 = (v1743 + v145 + 40) & v1710;
          if (v1630 == v1621)
          {
            if (v1719 < 2)
              goto LABEL_571;
            v147 = v146;
            v148 = v1719;
            v149 = v1688;
LABEL_206:
            if (__swift_getEnumTagSinglePayload(v147, v148, v149) >= 2)
              goto LABEL_2011;
            goto LABEL_571;
          }
          v246 = (v1739 + v146) & 0xFFFFFFFFFFFFFFF8;
          if (v1621 == 0x7FFFFFFF)
          {
            if (*(_QWORD *)(v246 + 24) < 0xFFFFFFFFuLL)
              goto LABEL_2011;
          }
          else
          {
            v289 = (v1755
                  + ((((((v246 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                  + 65) & v1697;
            if (v1596 != v1621)
            {
              if (v1731 < 2)
                goto LABEL_571;
              v147 = (v1620 + v289) & v1591;
              v148 = v1636;
              if (v1636 >= v1637)
              {
                v149 = v1639;
              }
              else
              {
                v147 = (v1640 + v147) & v1589;
                v148 = v1637;
                v149 = v1643;
              }
              goto LABEL_206;
            }
            if (v1638 > 0x7FFFFFFE)
            {
              v312 = __swift_getEnumTagSinglePayload((v1642 + v289) & v1692, v1632, v1644);
              if (v312 < 2)
                goto LABEL_571;
              v292 = v312 - 1;
            }
            else
            {
              v290 = *(_QWORD *)(v289 + 16);
              if (v290 >= 0xFFFFFFFF)
                LODWORD(v290) = -1;
              v291 = v290 - 1;
              if (v291 < 0)
                v291 = -1;
              v292 = v291 + 1;
            }
            if (v292 >= 2)
              goto LABEL_2011;
          }
LABEL_571:
          if (!__swift_getEnumTagSinglePayload(v146, 1, v1688))
            (*(void (**)(uint64_t, uint64_t))(v1680 + 8))(v146, v1688);
          __swift_destroy_boxed_opaque_existential_1((v1739 + v146) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          v313 = (((((v1739 + v146) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v314 = (v313 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v314 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1((v313 + 47) & 0xFFFFFFFFFFFFFFF8);
          v315 = (v1619 + v314) & v1697;
          if (v1638 >= 0x7FFFFFFF)
          {
            v317 = (v1642 + v315) & v1692;
            if (__swift_getEnumTagSinglePayload(v317, v1632, v1644) > 1)
              goto LABEL_583;
            goto LABEL_581;
          }
          v316 = *(_QWORD *)(((v1619 + v314) & v1697) + 0x10);
          if (v316 >= 0xFFFFFFFF)
            LODWORD(v316) = -1;
          if ((int)v316 - 1 < 0)
          {
            v317 = (v1642 + v315) & v1692;
LABEL_581:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!__swift_getEnumTagSinglePayload(v317, 1, v1644))
              (*(void (**)(uint64_t, uint64_t))(v1626 + 8))(v317, v1644);
          }
LABEL_583:
          v318 = (v1620 + v315) & v1591;
          if (v1731)
          {
            v319 = v1636;
            if (v1636 >= v1637)
            {
              v320 = (v1620 + v315) & v1591;
              v321 = v1639;
            }
            else
            {
              v320 = (v1640 + v318) & v1589;
              v319 = v1637;
              v321 = v1643;
            }
            v324 = __swift_getEnumTagSinglePayload(v320, v319, v321);
          }
          else
          {
            if (!*(_BYTE *)(v318 + v1722))
              goto LABEL_2007;
            v322 = (*(unsigned __int8 *)(v318 + v1722) - 1) << v1584;
            if (v1722 > 3)
              v322 = 0;
            if ((_DWORD)v1722)
            {
              if (v1722 <= 3)
                v323 = v1722;
              else
                v323 = 4;
              __asm { BR              X11 }
            }
            v324 = v322 + 1;
          }
          if (v324)
            goto LABEL_2008;
LABEL_2007:
          (*(void (**)(size_t, uint64_t))(v1634 + 8))(v318, v1639);
          (*(void (**)(size_t, uint64_t))(v1635 + 8))((v1640 + v318) & v1589, v1643);
LABEL_2008:
          v1357 = (v1627 + v318) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v1357 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v1357);
          swift_bridgeObjectRelease();
LABEL_2011:
          v1358 = ~v1743;
          v1359 = (unsigned __int8 *)((v1615 + v146) & v1710);
          if (*v1359 > 2u)
            goto LABEL_2122;
          v1360 = (unint64_t)&v1359[v1646] & v1710;
          v1361 = *(unsigned __int8 *)(v1360 + v1679);
          if (v1361 > 2)
            goto LABEL_2122;
          if (v1361 != 2)
          {
            if (v1361 != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v1358 = ~v1743;
              goto LABEL_2122;
            }
            __swift_destroy_boxed_opaque_existential_1((unint64_t)&v1359[v1646] & v1710);
            v1362 = (v1724 + v1360) & v1708;
            if (!__swift_getEnumTagSinglePayload(v1362, 1, v1688))
              (*(void (**)(uint64_t, uint64_t))(v1680 + 8))(v1362, v1688);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v1363 = (((((v1739 + v1362) & 0xFFFFFFFFFFFFFFF8) + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
            if (*(_QWORD *)(v1363 + 24) >= 0xFFFFFFFFuLL)
              __swift_destroy_boxed_opaque_existential_1(v1363);
            v1364 = (v1757 + v1363) & v1697;
            if (v1638 >= 0x7FFFFFFF)
            {
              v1366 = (v1642 + v1364) & v1692;
              v1358 = ~v1743;
              if (__swift_getEnumTagSinglePayload(v1366, v1632, v1644) > 1)
                goto LABEL_2122;
            }
            else
            {
              v1365 = *(_QWORD *)(((v1757 + v1363) & v1697) + 0x10);
              if (v1365 >= 0xFFFFFFFF)
                LODWORD(v1365) = -1;
              v1358 = ~v1743;
              if ((int)v1365 - 1 >= 0)
                goto LABEL_2122;
              v1366 = (v1642 + v1364) & v1692;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v1358 = ~v1743;
            if (!__swift_getEnumTagSinglePayload(v1366, 1, v1644))
              (*(void (**)(uint64_t, uint64_t))(v1626 + 8))(v1366, v1644);
LABEL_2122:
            swift_bridgeObjectRelease();
            v1442 = (unsigned __int8 *)((v1618 + ((unint64_t)&v1359[v1617] & 0xFFFFFFFFFFFFFFF8)) & v1358);
            if (*v1442 > 2u)
              goto LABEL_799;
            v1443 = (unint64_t)&v1442[v1646] & v1710;
            v1444 = *(unsigned __int8 *)(v1443 + v1679);
            if (v1444 > 2)
              goto LABEL_799;
            if (v1444 == 2)
            {
              if (*(_QWORD *)(v1443 + 8) >= 0xFFFFFFFFuLL)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(_QWORD *)(v1443 + 56))
                  __swift_destroy_boxed_opaque_existential_1(v1443 + 32);
              }
              v1448 = (v1443 + 79) & 0xFFFFFFFFFFFFFFF8;
              if (*(_QWORD *)(v1448 + 8) >= 0xFFFFFFFFuLL)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(_QWORD *)(v1448 + 56))
                  __swift_destroy_boxed_opaque_existential_1(v1448 + 32);
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v202 = (v1628 + ((((v1448 + 79) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v1591;
              if (v1731)
              {
                v203 = v1636;
                if (v1636 >= v1637)
                {
LABEL_2140:
                  v204 = v202;
                  v358 = v1639;
                }
                else
                {
                  v204 = (v1640 + v202) & v1589;
                  v203 = v1637;
LABEL_675:
                  v358 = v1643;
                }
                if (__swift_getEnumTagSinglePayload(v204, v203, v358))
                  goto LABEL_799;
              }
              else if (*(_BYTE *)(v202 + v1722))
              {
                v1449 = (*(unsigned __int8 *)(v202 + v1722) - 1) << v1584;
                if (v1722 > 3)
                  v1449 = 0;
                if ((_DWORD)v1722)
                {
                  if (v1722 <= 3)
                    v1450 = v1722;
                  else
                    v1450 = 4;
                  __asm { BR              X11 }
                }
                v99 = a2;
                if (v1449 != -1)
                  goto LABEL_799;
              }
LABEL_2142:
              (*(void (**)(unint64_t, uint64_t))(v1634 + 8))(v202, v1639);
              v378 = v1640 + v202;
LABEL_2143:
              (*(void (**)(uint64_t, uint64_t))(v1635 + 8))(v378 & v1589, v1643);
              goto LABEL_799;
            }
            if (v1444 == 1)
            {
              __swift_destroy_boxed_opaque_existential_1(v1443);
              v1445 = (v1724 + v1443) & v1708;
              if (!__swift_getEnumTagSinglePayload(v1445, 1, v1688))
                (*(void (**)(uint64_t, uint64_t))(v1680 + 8))(v1445, v1688);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v1446 = (((v1739 + v1445) & 0xFFFFFFFFFFFFFFF8) + 71) & 0xFFFFFFFFFFFFFFF8;
              swift_bridgeObjectRelease();
              v1447 = (v1446 + 23) & 0xFFFFFFFFFFFFFFF8;
              if (*(_QWORD *)(v1447 + 24) >= 0xFFFFFFFFuLL)
                __swift_destroy_boxed_opaque_existential_1((v1446 + 23) & 0xFFFFFFFFFFFFFFF8);
              v166 = v1757 + v1447;
LABEL_235:
              v167 = v166 & v1697;
              if (v1638 >= 0x7FFFFFFF)
              {
                v168 = v1642 + v167;
                goto LABEL_2055;
              }
LABEL_2050:
              v1375 = *(_QWORD *)(v167 + 16);
              if (v1375 >= 0xFFFFFFFF)
                LODWORD(v1375) = -1;
              if ((int)v1375 - 1 < 0)
              {
                v126 = (v1642 + v167) & v1692;
                goto LABEL_2056;
              }
LABEL_799:
              v311 = v1745;
              goto LABEL_800;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_798:
            swift_bridgeObjectRelease();
            goto LABEL_799;
          }
          if (*(_QWORD *)(((unint64_t)&v1359[v1646] & v1710) + 8) >= 0xFFFFFFFFuLL)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(_QWORD *)(((unint64_t)&v1359[v1646] & v1710) + 0x38))
              __swift_destroy_boxed_opaque_existential_1(v1360 + 32);
          }
          v1367 = (v1360 + 79) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v1367 + 8) >= 0xFFFFFFFFuLL)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(_QWORD *)(v1367 + 56))
              __swift_destroy_boxed_opaque_existential_1(v1367 + 32);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v1368 = (v1628 + ((((v1367 + 79) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v1591;
          if (v1731)
          {
            v1369 = v1636;
            if (v1636 >= v1637)
            {
              v1370 = v1368;
              v1371 = v1639;
            }
            else
            {
              v1370 = (v1640 + v1368) & v1589;
              v1369 = v1637;
              v1371 = v1643;
            }
            v1374 = __swift_getEnumTagSinglePayload(v1370, v1369, v1371);
          }
          else
          {
            v1358 = ~v1743;
            if (!*(_BYTE *)(v1368 + v1722))
            {
LABEL_2121:
              (*(void (**)(unint64_t, uint64_t))(v1634 + 8))(v1368, v1639);
              (*(void (**)(unint64_t, uint64_t))(v1635 + 8))((v1640 + v1368) & v1589, v1643);
              goto LABEL_2122;
            }
            v1372 = (*(unsigned __int8 *)(v1368 + v1722) - 1) << v1584;
            if (v1722 > 3)
              v1372 = 0;
            if ((_DWORD)v1722)
            {
              if (v1722 <= 3)
                v1373 = v1722;
              else
                v1373 = 4;
              __asm { BR              X11 }
            }
            v1374 = v1372 + 1;
            v99 = a2;
          }
          v1358 = ~v1743;
          if (v1374)
            goto LABEL_2122;
          goto LABEL_2121;
        case 8:
          v123 = ~v1752;
          if (!__swift_getEnumTagSinglePayload(v121, 1, v1688))
            (*(void (**)(unint64_t, uint64_t))(v1680 + 8))(v121, v1688);
          v124 = v88;
          v150 = (v1739 + v121) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v150);
          v151 = (v1757 + v150) & v1697;
          v125 = a1;
          if (v1638 >= 0x7FFFFFFF)
          {
            v153 = (v1642 + v151) & v1692;
            if (__swift_getEnumTagSinglePayload(v153, v1632, v1644) > 1)
              goto LABEL_371;
          }
          else
          {
            v152 = *(_QWORD *)(((v1757 + v150) & v1697) + 0x10);
            if (v152 >= 0xFFFFFFFF)
              LODWORD(v152) = -1;
            if ((int)v152 - 1 >= 0)
            {
LABEL_371:
              swift_bridgeObjectRelease();
              if (*(_QWORD *)(((((((v1715 + v151) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                             + 8) >= 0xFFFFFFFFuLL)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              goto LABEL_798;
            }
            v153 = (v1642 + v151) & v1692;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!__swift_getEnumTagSinglePayload(v153, 1, v1644))
            (*(void (**)(uint64_t, uint64_t))(v1626 + 8))(v153, v1644);
          goto LABEL_371;
        case 9:
          if (!__swift_getEnumTagSinglePayload(v121, 1, v1688))
            (*(void (**)(unint64_t, uint64_t))(v1680 + 8))(v121, v1688);
          v154 = (v1739 + v121) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v154);
          swift_bridgeObjectRelease();
          v155 = (v1750 + ((v154 + 47) & 0xFFFFFFFFFFFFFFF8) + 16) & v1692;
          if (!__swift_getEnumTagSinglePayload(v155, 1, v1644))
            (*(void (**)(unint64_t, uint64_t))(v1626 + 8))(v155, v1644);
          v156 = (v1605 + v155) & v1591;
          if (v1731)
          {
            v157 = v1636;
            if (v1636 >= v1637)
            {
              v158 = v156;
              v159 = v1639;
            }
            else
            {
              v158 = (v1640 + v156) & v1589;
              v157 = v1637;
              v159 = v1643;
            }
            v282 = __swift_getEnumTagSinglePayload(v158, v157, v159);
            v232 = v1642;
          }
          else
          {
            v232 = v1642;
            if (!*(_BYTE *)(v156 + v1722))
              goto LABEL_655;
            v264 = (*(unsigned __int8 *)(v156 + v1722) - 1) << v1584;
            if (v1722 > 3)
              v264 = 0;
            if ((_DWORD)v1722)
            {
              if (v1722 <= 3)
                v265 = v1722;
              else
                v265 = 4;
              __asm { BR              X11 }
            }
            v282 = v264 + 1;
          }
          if (v282)
            goto LABEL_656;
LABEL_655:
          (*(void (**)(unint64_t, uint64_t))(v1634 + 8))(v156, v1639);
          (*(void (**)(unint64_t, uint64_t))(v1635 + 8))((v1640 + v156) & v1589, v1643);
LABEL_656:
          v351 = (v1597 + v156) & v1591;
          if (v1731)
          {
            v352 = v1636;
            if (v1636 >= v1637)
            {
              v353 = v351;
              v354 = v1639;
            }
            else
            {
              v353 = (v1640 + v351) & v1589;
              v352 = v1637;
              v354 = v1643;
            }
            v357 = __swift_getEnumTagSinglePayload(v353, v352, v354);
          }
          else
          {
            if (!*(_BYTE *)(v351 + v1722))
              goto LABEL_733;
            v355 = (*(unsigned __int8 *)(v351 + v1722) - 1) << v1584;
            if (v1722 > 3)
              v355 = 0;
            if ((_DWORD)v1722)
            {
              if (v1722 <= 3)
                v356 = v1722;
              else
                v356 = 4;
              __asm { BR              X11 }
            }
            v357 = v355 + 1;
          }
          if (v357)
            goto LABEL_734;
LABEL_733:
          (*(void (**)(uint64_t, uint64_t))(v1634 + 8))(v351, v1639);
          (*(void (**)(uint64_t, uint64_t))(v1635 + 8))((v1640 + v351) & v1589, v1643);
LABEL_734:
          v123 = ~v1752;
          v254 = (uint64_t *)((v1678 + v351) & v1774);
          v124 = v88;
          if ((v1637 & 0x80000000) != 0)
          {
            v381 = v1589;
            v380 = __swift_getEnumTagSinglePayload(((unint64_t)v254 + v1625) & v1589, v1637, v1643);
          }
          else
          {
            v379 = *v254;
            if ((unint64_t)*v254 >= 0xFFFFFFFF)
              LODWORD(v379) = -1;
            v380 = v379 + 1;
            v381 = v1589;
          }
          v125 = a1;
          if (!v380)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v1635 + 8))(((unint64_t)v254 + v1625) & v381, v1643);
          }
          v255 = v1677;
          goto LABEL_742;
        case 0xA:
          v123 = ~v1752;
          v124 = v88;
          v125 = a1;
          __swift_destroy_boxed_opaque_existential_1(v121);
          v160 = (v1724 + v121) & v1708;
          if (!__swift_getEnumTagSinglePayload(v160, 1, v1688))
            (*(void (**)(uint64_t, uint64_t))(v1680 + 8))(v160, v1688);
          swift_bridgeObjectRelease();
          goto LABEL_320;
        case 0xC:
          v123 = ~v1752;
          v124 = v88;
          if (!__swift_getEnumTagSinglePayload(v121, 1, v1688))
            (*(void (**)(unint64_t, uint64_t))(v1680 + 8))(v121, v1688);
          v125 = a1;
          v161 = (v1739 + v121) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v161);
          v162 = (v1717 + v161 + 40) & v1763;
          if (v1587 > 0x7FFFFFFE)
          {
            v164 = (v162 + 23) & 0xFFFFFFFFFFFFFFF8;
            if (__swift_getEnumTagSinglePayload((v1717 + ((v164 + 23) & 0xFFFFFFFFFFFFFFF8) + 33) & v1690, v1587, v1623))goto LABEL_798;
          }
          else
          {
            LODWORD(v163) = -1;
            if (*(_QWORD *)(((v1717 + v161 + 40) & v1763) + 8) < 0xFFFFFFFFuLL)
              v163 = *(_QWORD *)(((v1717 + v161 + 40) & v1763) + 8);
            if ((v163 + 1) > 1)
              goto LABEL_798;
            v164 = (v162 + 23) & 0xFFFFFFFFFFFFFFF8;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v247 = (id *)((v164 + 47) & 0xFFFFFFFFFFFFFFF8);

          (*(void (**)(unint64_t, uint64_t))(v1712 + 8))(((unint64_t)v247 + v1717 + 9) & v1690, v1623);
          goto LABEL_798;
        case 0xD:
          v123 = ~v1752;
          v124 = v88;
          v125 = a1;
          __swift_destroy_boxed_opaque_existential_1(v121);
          v165 = (v1724 + v121) & v1708;
          if (!__swift_getEnumTagSinglePayload(v165, 1, v1688))
            (*(void (**)(uint64_t, uint64_t))(v1680 + 8))(v165, v1688);
          swift_bridgeObjectRelease();
          v166 = v1601 + ((v1739 + v165) & 0xFFFFFFFFFFFFFFF8);
          goto LABEL_235;
        case 0x10:
          v123 = ~v1752;
          v124 = v88;
          __swift_destroy_boxed_opaque_existential_1(v121);
          v169 = (v1724 + v121) & v1708;
          if (!__swift_getEnumTagSinglePayload(v169, 1, v1688))
            (*(void (**)(uint64_t, uint64_t))(v1680 + 8))(v169, v1688);
          v125 = a1;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v170 = (((((v1739 + v169) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          v171 = (v170 + 23) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v171 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1((v170 + 23) & 0xFFFFFFFFFFFFFFF8);
          v172 = v171 + 47;
          goto LABEL_307;
        case 0x11:
          __swift_destroy_boxed_opaque_existential_1(v121);
          v173 = (v1724 + v121) & v1708;
          if (!__swift_getEnumTagSinglePayload(v173, 1, v1688))
            (*(void (**)(uint64_t, uint64_t))(v1680 + 8))(v173, v1688);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v174 = (((((((v1739 + v173) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          v175 = (v174 + 23) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v175 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1((v174 + 23) & 0xFFFFFFFFFFFFFFF8);
          v176 = (v175 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v176 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v176);
          v177 = (v176 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v177 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v177);
          v123 = ~v1752;
          v178 = (v1603 + v177) & v1591;
          if (v1731)
          {
            v124 = v88;
            v179 = v1636;
            if (v1636 >= v1637)
            {
              v180 = v178;
              v181 = v1639;
            }
            else
            {
              v180 = (v1640 + v178) & v1589;
              v179 = v1637;
              v181 = v1643;
            }
            v283 = __swift_getEnumTagSinglePayload(v180, v179, v181);
          }
          else
          {
            v124 = v88;
            if (!*(_BYTE *)(v178 + v1722))
              goto LABEL_671;
            v266 = (*(unsigned __int8 *)(v178 + v1722) - 1) << v1584;
            if (v1722 > 3)
              v266 = 0;
            if ((_DWORD)v1722)
            {
              if (v1722 <= 3)
                v267 = v1722;
              else
                v267 = 4;
              __asm { BR              X11 }
            }
            v283 = v266 + 1;
          }
          if (v283)
            goto LABEL_672;
LABEL_671:
          (*(void (**)(unint64_t, uint64_t))(v1634 + 8))(v178, v1639);
          (*(void (**)(unint64_t, uint64_t))(v1635 + 8))((v1640 + v178) & v1589, v1643);
LABEL_672:
          v125 = a1;
          v202 = (v1622 + v178) & v1591;
          if (v1731)
          {
            v203 = v1636;
            if (v1636 >= v1637)
              goto LABEL_2140;
            v204 = (v1640 + v202) & v1589;
            v203 = v1637;
            goto LABEL_675;
          }
          if (!*(_BYTE *)(v202 + v1722))
            goto LABEL_2142;
          v270 = (*(unsigned __int8 *)(v202 + v1722) - 1) << v1584;
          if (v1722 > 3)
            v270 = 0;
          if ((_DWORD)v1722)
          {
            if (v1722 <= 3)
              v359 = v1722;
            else
              v359 = 4;
            __asm { BR              X11 }
          }
          goto LABEL_684;
        case 0x13:
          v123 = ~v1752;
          v124 = v88;
          v125 = a1;
          if (!__swift_getEnumTagSinglePayload(v121, 1, v1688))
            (*(void (**)(unint64_t, uint64_t))(v1680 + 8))(v121, v1688);
          __swift_destroy_boxed_opaque_existential_1((v1739 + v121) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_798;
        case 0x14:
          v123 = ~v1752;
          v124 = v88;
          v125 = a1;
          if (!__swift_getEnumTagSinglePayload(v121, 1, v1688))
            (*(void (**)(unint64_t, uint64_t))(v1680 + 8))(v121, v1688);
          v182 = (v1739 + v121) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v182);
          v183 = (v1743 + v182 + 40) & v1710;
          if (v1630 == v1621)
          {
            if (v1719 < 2)
              goto LABEL_599;
            v184 = v183;
            v185 = v1719;
            v186 = v1688;
LABEL_261:
            if (__swift_getEnumTagSinglePayload(v184, v185, v186) >= 2)
              goto LABEL_2049;
            goto LABEL_599;
          }
          v248 = (v1739 + v183) & 0xFFFFFFFFFFFFFFF8;
          if (v1621 == 0x7FFFFFFF)
          {
            if (*(_QWORD *)(v248 + 24) < 0xFFFFFFFFuLL)
              goto LABEL_2049;
          }
          else
          {
            v293 = (v1757
                  + ((((((((v248 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                    + 47) & 0xFFFFFFFFFFFFFFF8)) & v1697;
            if (v1596 != v1621)
            {
              if (v1731 < 2)
                goto LABEL_599;
              v184 = (v1620 + v293) & v1591;
              v185 = v1636;
              if (v1636 >= v1637)
              {
                v186 = v1639;
              }
              else
              {
                v184 = (v1640 + v184) & v1589;
                v185 = v1637;
                v186 = v1643;
              }
              goto LABEL_261;
            }
            if (v1638 > 0x7FFFFFFE)
            {
              v325 = __swift_getEnumTagSinglePayload((v1642 + v293) & v1692, v1632, v1644);
              if (v325 < 2)
                goto LABEL_599;
              v296 = v325 - 1;
            }
            else
            {
              v294 = *(_QWORD *)(v293 + 16);
              if (v294 >= 0xFFFFFFFF)
                LODWORD(v294) = -1;
              v295 = v294 - 1;
              if (v295 < 0)
                v295 = -1;
              v296 = v295 + 1;
            }
            if (v296 >= 2)
              goto LABEL_2049;
          }
LABEL_599:
          if (!__swift_getEnumTagSinglePayload(v183, 1, v1688))
            (*(void (**)(uint64_t, uint64_t))(v1680 + 8))(v183, v1688);
          __swift_destroy_boxed_opaque_existential_1((v1739 + v183) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          v326 = (((((v1739 + v183) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          v327 = (v326 + 23) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v327 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1((v326 + 23) & 0xFFFFFFFFFFFFFFF8);
          v328 = (v327 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v328 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v328);
          v329 = (v1757 + v328) & v1697;
          if (v1638 >= 0x7FFFFFFF)
          {
            v331 = (v1642 + v329) & v1692;
            if (__swift_getEnumTagSinglePayload(v331, v1632, v1644) > 1)
              goto LABEL_613;
          }
          else
          {
            v330 = *(_QWORD *)(((v1757 + v328) & v1697) + 0x10);
            if (v330 >= 0xFFFFFFFF)
              LODWORD(v330) = -1;
            if ((int)v330 - 1 >= 0)
            {
LABEL_613:
              v332 = (v1620 + v329) & v1591;
              if (v1731)
              {
                v333 = v1636;
                if (v1636 >= v1637)
                {
                  v334 = (v1620 + v329) & v1591;
                  v335 = v1639;
                }
                else
                {
                  v334 = (v1640 + v332) & v1589;
                  v333 = v1637;
                  v335 = v1643;
                }
                v338 = __swift_getEnumTagSinglePayload(v334, v333, v335);
              }
              else
              {
                if (!*(_BYTE *)(v332 + v1722))
                  goto LABEL_2048;
                v336 = (*(unsigned __int8 *)(v332 + v1722) - 1) << v1584;
                if (v1722 > 3)
                  v336 = 0;
                if ((_DWORD)v1722)
                {
                  if (v1722 <= 3)
                    v337 = v1722;
                  else
                    v337 = 4;
                  __asm { BR              X11 }
                }
                v338 = v336 + 1;
              }
              if (v338)
              {
LABEL_2049:
                swift_bridgeObjectRelease();
                v167 = (v1616 + ((v1611 + v183) & 0xFFFFFFFFFFFFFFF8)) & v1697;
                if (v1638 < 0x7FFFFFFF)
                  goto LABEL_2050;
                v168 = v1642 + v167;
                goto LABEL_2055;
              }
LABEL_2048:
              (*(void (**)(size_t, uint64_t))(v1634 + 8))(v332, v1639);
              (*(void (**)(size_t, uint64_t))(v1635 + 8))((v1640 + v332) & v1589, v1643);
              goto LABEL_2049;
            }
            v331 = (v1642 + v329) & v1692;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!__swift_getEnumTagSinglePayload(v331, 1, v1644))
            (*(void (**)(uint64_t, uint64_t))(v1626 + 8))(v331, v1644);
          goto LABEL_613;
        case 0x15:
          v123 = ~v1752;
          v124 = v88;
          v125 = a1;
          if (!__swift_getEnumTagSinglePayload(v121, 1, v1688))
            (*(void (**)(unint64_t, uint64_t))(v1680 + 8))(v121, v1688);
          v187 = (v1739 + v121) & 0xFFFFFFFFFFFFFFF8;
          goto LABEL_705;
        case 0x16:
          v123 = ~v1752;
          v124 = v88;
          if (!__swift_getEnumTagSinglePayload(v121, 1, v1688))
            (*(void (**)(unint64_t, uint64_t))(v1680 + 8))(v121, v1688);
          v125 = a1;
          v188 = (v1739 + v121) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v188);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v189 = (v1676
                + ((((((v188 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v1763;
          if (v1587 > 0x7FFFFFFE)
          {
            v191 = (v189 + 23) & 0xFFFFFFFFFFFFFFF8;
            v130 = v1642;
            v131 = v1637;
            if (__swift_getEnumTagSinglePayload((v1717 + ((v191 + 23) & 0xFFFFFFFFFFFFFFF8) + 33) & v1690, v1587, v1623))goto LABEL_382;
            goto LABEL_381;
          }
          LODWORD(v190) = -1;
          if (*(_QWORD *)(((v1676
                           + ((((((v188 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v1763)
                         + 8) < 0xFFFFFFFFuLL)
            v190 = *(_QWORD *)(((v1676
                               + ((((((v188 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v1763)
                             + 8);
          v130 = v1642;
          v131 = v1637;
          if ((v190 + 1) <= 1)
          {
            v191 = (v189 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_381:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v249 = (id *)((v191 + 47) & 0xFFFFFFFFFFFFFFF8);

            (*(void (**)(unint64_t, uint64_t))(v1712 + 8))(((unint64_t)v249 + v1717 + 9) & v1690, v1623);
          }
LABEL_382:
          swift_bridgeObjectRelease();
          v239 = (v1606 + ((v189 + v1761) & 0xFFFFFFFFFFFFFFF8)) & v1591;
          if (v1731)
          {
LABEL_383:
            v250 = v1636;
            if (v1636 >= v131)
            {
              v251 = v239;
              v252 = v1639;
            }
            else
            {
              v251 = (v1640 + v239) & v1589;
              v250 = v131;
              v252 = v1643;
            }
            v253 = __swift_getEnumTagSinglePayload(v251, v250, v252);
          }
          else
          {
            if (!*(_BYTE *)(v239 + v1722))
              goto LABEL_523;
            v240 = (*(unsigned __int8 *)(v239 + v1722) - 1) << v1584;
            if (v1722 > 3)
              v240 = 0;
            if ((_DWORD)v1722)
            {
              if (v1722 <= 3)
                v278 = v1722;
              else
                v278 = 4;
              __asm { BR              X11 }
            }
LABEL_507:
            v253 = v240 + 1;
          }
          if (v253)
            goto LABEL_524;
LABEL_523:
          (*(void (**)(unint64_t, uint64_t))(v1634 + 8))(v239, v1639);
          (*(void (**)(unint64_t, uint64_t))(v1635 + 8))((v1640 + v239) & v1589, v1643);
LABEL_524:
          v297 = (uint64_t *)((v1678 + v239) & v1774);
          if ((v131 & 0x80000000) != 0)
          {
            v300 = v1589;
            v299 = __swift_getEnumTagSinglePayload(((unint64_t)v297 + v1625) & v1589, v131, v1643);
          }
          else
          {
            v298 = *v297;
            if ((unint64_t)*v297 >= 0xFFFFFFFF)
              LODWORD(v298) = -1;
            v299 = v298 + 1;
            v300 = v1589;
          }
          if (!v299)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v1635 + 8))(((unint64_t)v297 + v1625) & v300, v1643);
          }
          v301 = ((unint64_t)v297 + v1677) & v1697;
          if (v1638 >= 0x7FFFFFFF)
          {
            v303 = (v130 + v301) & v1692;
            if (__swift_getEnumTagSinglePayload(v303, v1632, v1644) > 1)
              goto LABEL_539;
            goto LABEL_537;
          }
          v302 = *(_QWORD *)(v301 + 16);
          if (v302 >= 0xFFFFFFFF)
            LODWORD(v302) = -1;
          if ((int)v302 - 1 < 0)
          {
            v303 = (v130 + v301) & v1692;
LABEL_537:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!__swift_getEnumTagSinglePayload(v303, 1, v1644))
              (*(void (**)(uint64_t, uint64_t))(v1626 + 8))(v303, v1644);
          }
LABEL_539:
          v304 = (v1733 + v301) & v123;
          if (v1630 < 0x7FFFFFFF)
          {
            v306 = v1688;
            if (*(_QWORD *)(((v1739 + v304) & 0xFFFFFFFFFFFFF8) + 0x18) <= 0xFFFFFFFEuLL)
            {
              v307 = (v1675 + v304) & v123;
              goto LABEL_551;
            }
          }
          else
          {
            v305 = (v1733 + v301) & v123;
            v306 = v1688;
            if (__swift_getEnumTagSinglePayload(v305, v1719, v1688) >= 2)
            {
              v307 = (v1675 + v304) & v123;
              goto LABEL_548;
            }
          }
          if (!__swift_getEnumTagSinglePayload(v304, 1, v306))
            (*(void (**)(uint64_t, uint64_t))(v1680 + 8))(v304, v306);
          __swift_destroy_boxed_opaque_existential_1((v1739 + v304) & 0xFFFFFFFFFFFFFFF8);
          if (*(_QWORD *)(((((v1739 + v304) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1((((v1739 + v304) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          v307 = (v1675 + v304) & v123;
          if (v1630 >= 0x7FFFFFFF)
          {
LABEL_548:
            if (__swift_getEnumTagSinglePayload(v307, v1719, v306) >= 2)
            {
              v308 = (v1675 + v307) & v123;
              goto LABEL_557;
            }
            goto LABEL_552;
          }
LABEL_551:
          if (*(_QWORD *)(((v1739 + v307) & 0xFFFFFFFFFFFFF8) + 0x18) <= 0xFFFFFFFEuLL)
          {
            v308 = (v1675 + v307) & v123;
            goto LABEL_560;
          }
LABEL_552:
          if (!__swift_getEnumTagSinglePayload(v307, 1, v306))
            (*(void (**)(uint64_t, uint64_t))(v1680 + 8))(v307, v306);
          __swift_destroy_boxed_opaque_existential_1((v1739 + v307) & 0xFFFFFFFFFFFFFFF8);
          if (*(_QWORD *)(((((v1739 + v307) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1((((v1739 + v307) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          v308 = (v1675 + v307) & v123;
          if (v1630 >= 0x7FFFFFFF)
          {
LABEL_557:
            if (__swift_getEnumTagSinglePayload(v308, v1719, v306) >= 2)
              goto LABEL_566;
            goto LABEL_561;
          }
LABEL_560:
          if (*(_QWORD *)(((v1739 + v308) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
            goto LABEL_566;
LABEL_561:
          if (!__swift_getEnumTagSinglePayload(v308, 1, v306))
            (*(void (**)(uint64_t, uint64_t))(v1680 + 8))(v308, v306);
          v309 = (v1739 + v308) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v309);
          v310 = (v309 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v310 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v310);
          swift_bridgeObjectRelease();
LABEL_566:
          v311 = v1674;
          if (!v1719)
            goto LABEL_799;
LABEL_800:
          v96 = ~v1748;
          v406 = v1729
               + ((v1675
                 + ((v1675
                   + ((v1733
                     + ((v1677
                       + ((v1678
                         + ((v1737
                           + ((((((v1676
                                 + ((((((((v311 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                   + 15) & 0xFFFFFFFFFFFFFFF8)) & v1763)
                               + v1761) & 0xFFFFFFFFFFFFFFF8)
                             + 23) & 0xFFFFFFFFFFFFFFF8)) & v1591)) & v1774)) & v1697)) & v123)) & v123)) & v123);
          if (v1672 > v406)
            v406 = v1718 + ((v1750 + 8) & ~v1755);
          if (v406 <= v1655)
            v406 = v1655;
          if (v406 <= v1673)
            v406 = v1673;
          if (v406 <= v1654)
            v406 = v1654;
          if (v406 <= v1653)
            v406 = v1653;
          if (v406 <= v1652)
            v406 = v1652;
          if (v406 <= v1656)
            v406 = (((((v1759 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
          if (v406 <= v1657)
            v406 = v1657;
          if (v406 <= v1649)
            v406 = v1649;
          if (v406 <= v1727)
            v406 = v1727;
          if (v406 <= v1648)
            v406 = v1648;
          if (v406 <= v69)
            v406 = v69;
          if (v406 <= v1650)
            v406 = v1650;
          if (v406 <= v1735)
            v406 = v1735;
          if (v406 <= v124)
            v406 = v124;
          if (v406 <= v1672)
            v406 = v1718 + ((v1750 + 8) & ~v1755);
          if (v406 <= v1647)
            v406 = v1647;
          if (v406 <= v1658)
            v406 = ((v1759 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
          if (v406 <= v75)
            v406 = v75;
          if (v406 <= v1659)
            v406 = v1659;
          if (v406 <= v1660)
            v406 = v1660;
          if (v406 <= v1662)
            v406 = v1662;
          if (v406 <= v1661)
            v406 = v1661;
          if (v406 <= v1663)
            v406 = v1663;
          if (v406 <= v1664)
            v406 = v1664;
          if (v406 <= v1671)
            v406 = v1671;
          if (v406 <= (unint64_t)v1665)
            v406 = (unint64_t)v1665;
          if (v406 <= v1666)
            v406 = v1666;
          if (v406 <= v1669)
            v406 = v1669;
          if (v406 <= v1759)
            v406 = v1759;
          if (v406 <= v1667)
            v406 = v1667;
          if (v406 <= v1670)
            v406 = v1670;
          if (v406 <= v1668)
            v406 = v1668;
          if (v406 <= 8)
            v406 = 8;
          v407 = *(_QWORD *)((v1583 + v406 + 8) & 0xFFFFFFFFFFFFF8);
          v408 = -1;
          if (v407 < 0xFFFFFFFF)
            v408 = v407;
          v90 = v1593;
          v97 = v1589;
          v92 = v125;
          v88 = v124;
          v98 = 8 * v1722;
          v91 = v1587;
          if (v408 - 1 < 0)
LABEL_120:
            swift_bridgeObjectRelease();
LABEL_871:
          if (*((unsigned __int8 *)v99 + v90) >= 4u)
          {
            if (v90 <= 3)
              v409 = v90;
            else
              v409 = 4;
            __asm { BR              X12 }
          }
          switch(*((_BYTE *)v99 + v90))
          {
            case 0:
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v1683 + 32))(v92, v99, v1684);
              *((_BYTE *)v92 + v90) = 0;
              goto LABEL_2172;
            case 1:
              v1590 = v97;
              v1592 = v96;
              v1594 = v90;
              *v92 = *v99;
              v410 = (void *)(((unint64_t)v92 + v1771 + 16) & v1708);
              v411 = (char *)(((unint64_t)v99 + v1771 + 16) & v1708);
              v412 = v1688;
              v1582 = v88;
              if (__swift_getEnumTagSinglePayload((uint64_t)v411, 1, v1688))
              {
                v413 = v1745;
                memcpy(v410, v411, v1745);
              }
              else
              {
                (*(void (**)(void *, char *, uint64_t))(v1680 + 32))(v410, v411, v1688);
                __swift_storeEnumTagSinglePayload((uint64_t)v410, 0, 1, v1688);
                v413 = v1745;
              }
              v415 = &v411[v413];
              v416 = (_BYTE *)(((unint64_t)v410 + v413 + v1743) & v1710);
              v417 = (unsigned __int8 *)((unint64_t)&v415[v1743] & v1710);
              v418 = *v417;
              if (v418 > 2)
              {
                v429 = v1688;
                v419 = v98;
                v430 = v416;
                v431 = (const void *)((unint64_t)&v415[v1743] & v1710);
                v423 = v1741;
                v432 = v1741;
LABEL_893:
                memcpy(v430, v431, v432);
LABEL_894:
                v433 = v1687;
                v424 = __dsta;
                goto LABEL_895;
              }
              v419 = v98;
              *v416 = v418;
              v420 = (_OWORD *)((unint64_t)&v416[v1646] & v1710);
              v421 = (__int128 *)((unint64_t)&v417[v1646] & v1710);
              v422 = *((unsigned __int8 *)v421 + v1679);
              v423 = v1741;
              if (v422 > 2)
              {
                v429 = v1688;
                v430 = (void *)((unint64_t)&v416[v1646] & v1710);
                v431 = (const void *)((unint64_t)&v417[v1646] & v1710);
                v432 = __n;
                goto LABEL_893;
              }
              v424 = __dsta;
              if (v422 == 2)
              {
                v429 = v1688;
                memcpy((void *)((unint64_t)&v416[v1646] & v1710), (const void *)((unint64_t)&v417[v1646] & v1710), 0x48uLL);
                v456 = (const void *)(((unint64_t)v421 + 79) & 0xFFFFFFFFFFFFFFF8);
                memcpy((void *)(((unint64_t)v420 + 79) & 0xFFFFFFFFFFFFFFF8), v456, 0x48uLL);
                v457 = (_QWORD *)(((((unint64_t)v420 + 79) & 0xFFFFFFFFFFFFFFF8) + 79) & 0xFFFFFFFFFFFFF8);
                v458 = (_QWORD *)(((unint64_t)v456 + 79) & 0xFFFFFFFFFFFFF8);
                *v457 = *v458;
                v459 = (_QWORD *)(((unint64_t)v457 + 15) & 0xFFFFFFFFFFFFFFF8);
                v460 = (_QWORD *)(((unint64_t)v458 + 15) & 0xFFFFFFFFFFFFFFF8);
                *v459 = *v460;
                v461 = (void *)(((unint64_t)v459 + v1628) & v1592);
                v462 = (_BYTE *)(((unint64_t)v460 + v1628) & v1592);
                if (v1731)
                {
                  v463 = v1637;
                  if (v1636 >= v1637)
                  {
                    v464 = ((unint64_t)v460 + v1628) & v1592;
                    v463 = v1636;
                    v465 = v1639;
                  }
                  else
                  {
                    v464 = (unint64_t)&v462[v1640] & v1590;
                    v465 = v1643;
                  }
                  v495 = __swift_getEnumTagSinglePayload(v464, v463, v465);
                }
                else
                {
                  if (!v462[v1722])
                    goto LABEL_1428;
                  v493 = (v462[v1722] - 1) << v419;
                  if (v1722 > 3)
                    v493 = 0;
                  if ((_DWORD)v1722)
                  {
                    if (v1722 <= 3)
                      v494 = v1722;
                    else
                      v494 = 4;
                    __asm { BR              X11 }
                  }
                  v495 = v493 + 1;
                }
                if (v495)
                {
                  memcpy(v461, v462, v1720);
LABEL_1430:
                  *((_BYTE *)v461 + v1720) = v462[v1720];
                  v589 = 2;
                  goto LABEL_1431;
                }
LABEL_1428:
                (*(void (**)(void *, _BYTE *, uint64_t))(v1634 + 32))(v461, v462, v1639);
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v1635 + 32))(((unint64_t)v461 + v1640) & v1590, (unint64_t)&v462[v1640] & v1590, v1643);
                if (!v1731)
                  *((_BYTE *)v461 + v1722) = 0;
                goto LABEL_1430;
              }
              if (v422 == 1)
              {
                v1588 = v91;
                v425 = *v421;
                v426 = *(_OWORD *)(((unint64_t)&v417[v1646] & v1710) + 0x10);
                *(_QWORD *)(((unint64_t)&v416[v1646] & v1710) + 0x20) = *(_QWORD *)(((unint64_t)&v417[v1646] & v1710)
                                                                                         + 0x20);
                *v420 = v425;
                *(_OWORD *)(((unint64_t)&v416[v1646] & v1710) + 0x10) = v426;
                v427 = (void *)(((unint64_t)v420 + v1724) & v1708);
                v428 = (const void *)(((unint64_t)v421 + v1724) & v1708);
                if (__swift_getEnumTagSinglePayload((uint64_t)v428, 1, v1688))
                {
                  memcpy(v427, v428, v1745);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v1680 + 32))(v427, v428, v1688);
                  __swift_storeEnumTagSinglePayload((uint64_t)v427, 0, 1, v1688);
                }
                v468 = (_OWORD *)(((unint64_t)v427 + v1739) & 0xFFFFFFFFFFFFFFF8);
                v469 = (_OWORD *)(((unint64_t)v428 + v1739) & 0xFFFFFFFFFFFFFFF8);
                *v468 = *v469;
                v470 = ((unint64_t)v468 + 23) & 0xFFFFFFFFFFFFFFF8;
                v471 = ((unint64_t)v469 + 23) & 0xFFFFFFFFFFFFFFF8;
                v472 = *(_QWORD *)v471;
                *(_BYTE *)(v470 + 8) = *(_BYTE *)(v471 + 8);
                *(_QWORD *)v470 = v472;
                v473 = ((unint64_t)v468 + 39) & 0xFFFFFFFFFFFFFFF8;
                v474 = ((unint64_t)v469 + 39) & 0xFFFFFFFFFFFFFFF8;
                v475 = *(_QWORD *)v474;
                *(_BYTE *)(v473 + 8) = *(_BYTE *)(v474 + 8);
                *(_QWORD *)v473 = v475;
                v476 = ((unint64_t)v468 + 55) & 0xFFFFFFFFFFFFFFF8;
                v477 = ((unint64_t)v469 + 55) & 0xFFFFFFFFFFFFFFF8;
                v478 = *(_QWORD *)v477;
                *(_BYTE *)(v476 + 8) = *(_BYTE *)(v477 + 8);
                *(_QWORD *)v476 = v478;
                v479 = (_OWORD *)(((unint64_t)v468 + 71) & 0xFFFFFFFFFFFFFFF8);
                v480 = (_OWORD *)(((unint64_t)v469 + 71) & 0xFFFFFFFFFFFFFFF8);
                *v479 = *v480;
                v481 = ((unint64_t)v479 + 23) & 0xFFFFFFFFFFFFFFF8;
                v482 = ((unint64_t)v480 + 23) & 0xFFFFFFFFFFFFFFF8;
                v483 = *(_OWORD *)v482;
                v484 = *(_OWORD *)(v482 + 16);
                *(_QWORD *)(v481 + 32) = *(_QWORD *)(v482 + 32);
                *(_OWORD *)v481 = v483;
                *(_OWORD *)(v481 + 16) = v484;
                v485 = (_BYTE *)((v1757 + v481) & v1697);
                v486 = (_BYTE *)((v1757 + v482) & v1697);
                if (v1638 >= 0x7FFFFFFF)
                {
                  v491 = (const void *)((unint64_t)&v486[v1642] & v1692);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v491, v1632, v1644) <= 1)
                  {
                    v488 = v486 + 8;
                    v489 = v1642;
                    v490 = ~v1750;
                    goto LABEL_924;
                  }
                }
                else
                {
                  v487 = *(_QWORD *)(((v1757 + v482) & v1697) + 0x10);
                  if (v487 >= 0xFFFFFFFF)
                    LODWORD(v487) = -1;
                  if ((int)v487 - 1 < 0)
                  {
                    v488 = v486 + 8;
                    v489 = v1642;
                    v490 = ~v1750;
                    v491 = (const void *)((unint64_t)&v486[v1642] & v1692);
LABEL_924:
                    *v485 = *v486;
                    memcpy(v485 + 8, v488, 0x69uLL);
                    v492 = (void *)((unint64_t)&v485[v489] & v490);
                    if (__swift_getEnumTagSinglePayload((uint64_t)v491, 1, v1644))
                    {
                      memcpy(v492, v491, v1716);
                    }
                    else
                    {
                      (*(void (**)(void *, const void *, uint64_t))(v1626 + 32))(v492, v491, v1644);
                      __swift_storeEnumTagSinglePayload((uint64_t)v492, 0, 1, v1644);
                    }
                    v412 = v1688;
                    v423 = v1741;
                    goto LABEL_1027;
                  }
                }
                memcpy(v485, v486, v1718);
LABEL_1027:
                v91 = v1588;
                v429 = v412;
                v589 = 1;
LABEL_1431:
                *((_BYTE *)v420 + v1679) = v589;
                goto LABEL_894;
              }
              v429 = v1688;
              v466 = *v421;
              v467 = *(_OWORD *)(((unint64_t)&v417[v1646] & v1710) + 0x20);
              *(_OWORD *)(((unint64_t)&v416[v1646] & v1710) + 0x10) = *(_OWORD *)(((unint64_t)&v417[v1646] & v1710)
                                                                                       + 0x10);
              *(_OWORD *)(((unint64_t)&v416[v1646] & v1710) + 0x20) = v467;
              *v420 = v466;
              *((_BYTE *)v420 + v1679) = 0;
              v433 = v1687;
LABEL_895:
              v434 = v91;
              v435 = &v416[v423];
              *(_WORD *)v435 = *(_WORD *)&v417[v423];
              v435[2] = v417[v423 + 2];
              v435[3] = v417[v423 + 3];
              v436 = (unint64_t)&v416[v423 + 11] & 0xFFFFFFFFFFFFFFF8;
              v437 = (unint64_t)&v417[v423 + 11] & 0xFFFFFFFFFFFFFFF8;
              v438 = *(_OWORD *)v437;
              v439 = *(_OWORD *)(v437 + 16);
              v440 = *(_OWORD *)(v437 + 32);
              *(_OWORD *)(v436 + 41) = *(_OWORD *)(v437 + 41);
              *(_OWORD *)(v436 + 16) = v439;
              *(_OWORD *)(v436 + 32) = v440;
              *(_OWORD *)v436 = v438;
              *(_BYTE *)(v436 + 57) = *(_BYTE *)(v437 + 57);
              v441 = (_OWORD *)((v1686 + v436) & v1699);
              v442 = (_OWORD *)((v1686 + v437) & v1699);
              if (v1685 < 0)
              {
                v445 = (const void *)(((unint64_t)v442 + v1681) & v424);
                v446 = __swift_getEnumTagSinglePayload((uint64_t)v445, v1641, v433);
                v444 = v1681;
                v424 = __dsta;
                if (v446 < 2)
                  goto LABEL_899;
              }
              else
              {
                v443 = *(_QWORD *)(((v1686 + v437) & v1699) + 8);
                v444 = v1681;
                if (v443 >= 0xFFFFFFFF)
                {
                  v445 = (const void *)(((unint64_t)v442 + v1681) & v424);
LABEL_899:
                  *v441 = *v442;
                  v447 = (void *)(((unint64_t)v441 + v444) & v424);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v445, 1, v433))
                  {
                    memcpy(v447, v445, v1631);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1633 + 32))(v447, v445, v433);
                    __swift_storeEnumTagSinglePayload((uint64_t)v447, 0, 1, v433);
                  }
                  v448 = v1682;
                  goto LABEL_904;
                }
              }
              v448 = v1682;
              memcpy(v441, v442, v1682);
LABEL_904:
              v449 = v1674 + 1;
              __dstb = (_QWORD *)(((unint64_t)v441 + v1767 + v448) & v1701);
              v450 = ((unint64_t)v442 + v1767 + v448) & v1701;
              v451 = v1706;
              v452 = v419;
              v454 = v1594;
              switch(*(_BYTE *)(v450 + v1706))
              {
                case 0:
                  v455 = (const void *)v450;
                  if (__swift_getEnumTagSinglePayload(v450, 1, v429))
                  {
                    memcpy(__dstb, v455, v1745);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, const void *, uint64_t))(v1680 + 32))(__dstb, v455, v429);
                    __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v429);
                  }
                  v590 = ((unint64_t)__dstb + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v591 = (uint64_t)v455;
                  v592 = ((unint64_t)v455 + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v593 = *(_OWORD *)v592;
                  v594 = *(_OWORD *)(v592 + 16);
                  *(_QWORD *)(v590 + 32) = *(_QWORD *)(v592 + 32);
                  *(_OWORD *)v590 = v593;
                  *(_OWORD *)(v590 + 16) = v594;
                  v595 = (_OWORD *)((v590 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v596 = (_OWORD *)((v592 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v595 = *v596;
                  v597 = (_QWORD *)(((unint64_t)v595 + 23) & 0xFFFFFFFFFFFFF8);
                  v598 = (_QWORD *)(((unint64_t)v596 + 23) & 0xFFFFFFFFFFFFF8);
                  *v597 = *v598;
                  v599 = (_OWORD *)(((unint64_t)v597 + 15) & 0xFFFFFFFFFFFFFFF8);
                  v600 = (_OWORD *)(((unint64_t)v598 + 15) & 0xFFFFFFFFFFFFFFF8);
                  *v599 = *v600;
                  v601 = (_OWORD *)(((unint64_t)v599 + v1676) & v1763);
                  v602 = (_OWORD *)(((unint64_t)v600 + v1676) & v1763);
                  if (v91 > 0x7FFFFFFE)
                  {
                    v605 = (_OWORD *)(((unint64_t)v602 + 23) & 0xFFFFFFFFFFFFFFF8);
                    v606 = ((unint64_t)v605 + 23) & 0xFFFFFFFFFFFFFFF8;
                    v604 = ~v1752;
                    if (!__swift_getEnumTagSinglePayload((v1717 + v606 + 33) & v1690, v91, v1623))
                      goto LABEL_1037;
                  }
                  else
                  {
                    v603 = *(_QWORD *)((((unint64_t)v600 + v1676) & v1763) + 8);
                    if (v603 >= 0xFFFFFFFF)
                      LODWORD(v603) = -1;
                    v604 = ~v1752;
                    if ((v603 + 1) <= 1)
                    {
                      v605 = (_OWORD *)(((unint64_t)v602 + 23) & 0xFFFFFFFFFFFFFFF8);
                      v606 = ((unint64_t)v605 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_1037:
                      *v601 = *v602;
                      v608 = (_OWORD *)(((unint64_t)v601 + 23) & 0xFFFFFFFFFFFFFFF8);
                      *v608 = *v605;
                      v609 = ((unint64_t)v608 + 23) & 0xFFFFFFFFFFFFFFF8;
                      *(_OWORD *)v609 = *(_OWORD *)v606;
                      *(_BYTE *)(v609 + 16) = *(_BYTE *)(v606 + 16);
                      v610 = ((unint64_t)v608 + 47) & 0xFFFFFFFFFFFFFFF8;
                      v611 = ((unint64_t)v605 + 47) & 0xFFFFFFFFFFFFFFF8;
                      *(_QWORD *)v610 = *(_QWORD *)v611;
                      *(_BYTE *)(v610 + 8) = *(_BYTE *)(v611 + 8);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1712 + 32))((v1717 + 9 + v610) & v1690, (v1717 + 9 + v611) & v1690, v1623);
                      v607 = v1761;
LABEL_1038:
                      *((_BYTE *)v601 + v607) = *((_BYTE *)v602 + v607);
                      v612 = ((unint64_t)v601 + v607) & 0xFFFFFFFFFFFFFFF8;
                      v613 = ((unint64_t)v602 + v607) & 0xFFFFFFFFFFFFFFF8;
                      *(_QWORD *)(v612 + 8) = *(_QWORD *)(v613 + 8);
                      v614 = (_OWORD *)((v612 + 23) & 0xFFFFFFFFFFFFFFF8);
                      v615 = (_OWORD *)((v613 + 23) & 0xFFFFFFFFFFFFFFF8);
                      *v614 = *v615;
                      v616 = (void *)(((unint64_t)v614 + v1737) & v1592);
                      v617 = (_BYTE *)(((unint64_t)v615 + v1737) & v1592);
                      if (v1731)
                      {
                        v618 = v1637;
                        if (v1636 >= v1637)
                        {
                          v619 = ((unint64_t)v615 + v1737) & v1592;
                          v618 = v1636;
                          v620 = v1639;
                        }
                        else
                        {
                          v619 = (unint64_t)&v617[v1640] & v1590;
                          v620 = v1643;
                        }
                        v1009 = __swift_getEnumTagSinglePayload(v619, v618, v620);
                      }
                      else
                      {
                        if (!v617[v1722])
                          goto LABEL_1525;
                        v953 = (v617[v1722] - 1) << v452;
                        if (v1722 > 3)
                          v953 = 0;
                        if ((_DWORD)v1722)
                        {
                          if (v1722 <= 3)
                            v954 = v1722;
                          else
                            v954 = 4;
                          __asm { BR              X11 }
                        }
                        v1009 = v953 + 1;
                      }
                      if (v1009)
                      {
                        memcpy(v616, v617, v1720);
                        goto LABEL_1527;
                      }
LABEL_1525:
                      (*(void (**)(void *, _BYTE *, uint64_t))(v1634 + 32))(v616, v617, v1639);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1635 + 32))(((unint64_t)v616 + v1640) & v1590, (unint64_t)&v617[v1640] & v1590, v1643);
                      if (!v1731)
                        *((_BYTE *)v616 + v1722) = 0;
LABEL_1527:
                      v1132 = (_QWORD *)(((unint64_t)v616 + v1678) & v1774);
                      v1133 = (uint64_t *)((unint64_t)&v617[v1678] & v1774);
                      if ((v1637 & 0x80000000) != 0)
                      {
                        v1135 = __swift_getEnumTagSinglePayload(((unint64_t)v1133 + v1625) & v1590, v1637, v1643);
                      }
                      else
                      {
                        v1134 = *v1133;
                        if ((unint64_t)*v1133 >= 0xFFFFFFFF)
                          LODWORD(v1134) = -1;
                        v1135 = v1134 + 1;
                      }
                      if (v1135)
                      {
                        memcpy(v1132, v1133, v1714);
                      }
                      else
                      {
                        *v1132 = *v1133;
                        (*(void (**)(unint64_t, unint64_t, uint64_t))(v1635 + 32))(((unint64_t)v1132 + v1625) & v1590, ((unint64_t)v1133 + v1625) & v1590, v1643);
                      }
                      v1136 = (_BYTE *)(((unint64_t)v1132 + v1677) & v1697);
                      v1137 = (_QWORD *)(((unint64_t)v1133 + v1677) & v1697);
                      if (v1638 >= 0x7FFFFFFF)
                      {
                        v1142 = (const void *)(((unint64_t)v1137 + v1642) & v1692);
                        if (__swift_getEnumTagSinglePayload((uint64_t)v1142, v1632, v1644) <= 1)
                        {
                          v1139 = v1137 + 1;
                          v1140 = v1642;
                          v1141 = ~v1750;
                          goto LABEL_1542;
                        }
                      }
                      else
                      {
                        v1138 = v1137[2];
                        if (v1138 >= 0xFFFFFFFF)
                          LODWORD(v1138) = -1;
                        if ((int)v1138 - 1 < 0)
                        {
                          v1139 = v1137 + 1;
                          v1140 = v1642;
                          v1141 = ~v1750;
                          v1142 = (const void *)(((unint64_t)v1137 + v1642) & v1692);
LABEL_1542:
                          *v1136 = *(_BYTE *)v1137;
                          memcpy(v1136 + 8, v1139, 0x69uLL);
                          v1143 = (void *)((unint64_t)&v1136[v1140] & v1141);
                          if (__swift_getEnumTagSinglePayload((uint64_t)v1142, 1, v1644))
                          {
                            memcpy(v1143, v1142, v1716);
                          }
                          else
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v1626 + 32))(v1143, v1142, v1644);
                            __swift_storeEnumTagSinglePayload((uint64_t)v1143, 0, 1, v1644);
                          }
                          v1144 = v1718;
LABEL_1547:
                          v1145 = (unint64_t)&v1136[v1752 + v1144];
                          v1146 = (unint64_t)v1137 + v1752 + v1144;
                          v1147 = v1146 & v604;
                          if (v1630 < 0x7FFFFFFF)
                          {
                            if (*(_QWORD *)(((v1739 + v1147) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                              goto LABEL_1549;
                          }
                          else if (__swift_getEnumTagSinglePayload(v1146 & v604, v1719, v1688) >= 2)
                          {
LABEL_1549:
                            memcpy((void *)(v1145 & v604), (const void *)(v1146 & v604), v1624);
                            v1148 = v1624;
                            goto LABEL_1556;
                          }
                          if (__swift_getEnumTagSinglePayload(v1146 & v604, 1, v1688))
                          {
                            memcpy((void *)(v1145 & v604), (const void *)(v1146 & v604), v1745);
                          }
                          else
                          {
                            (*(void (**)(unint64_t, unint64_t, uint64_t))(v1680 + 32))(v1145 & v604, v1146 & v604, v1688);
                            __swift_storeEnumTagSinglePayload(v1145 & v604, 0, 1, v1688);
                          }
                          v1149 = (v1739 + (v1145 & v604)) & 0xFFFFFFFFFFFFFFF8;
                          v1150 = (v1739 + v1147) & 0xFFFFFFFFFFFFFFF8;
                          v1151 = *(_OWORD *)v1150;
                          v1152 = *(_OWORD *)(v1150 + 16);
                          *(_QWORD *)(v1149 + 32) = *(_QWORD *)(v1150 + 32);
                          *(_OWORD *)v1149 = v1151;
                          *(_OWORD *)(v1149 + 16) = v1152;
                          v1153 = (v1149 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1154 = (v1150 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1155 = *(_OWORD *)v1154;
                          v1156 = *(_OWORD *)(v1154 + 16);
                          *(_QWORD *)(v1153 + 32) = *(_QWORD *)(v1154 + 32);
                          *(_OWORD *)v1153 = v1155;
                          *(_OWORD *)(v1153 + 16) = v1156;
                          *(_OWORD *)((v1153 + 47) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v1154 + 47) & 0xFFFFFFFFFFFFF8);
                          v1148 = v1624;
                          if (v1719)
                            v1148 = ((((((v1674 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                                  + 16;
LABEL_1556:
                          v1157 = (v1145 | v1771) + v1148;
                          v1158 = (v1146 | v1771) + v1148;
                          v1159 = v1158 & v604;
                          if (v1630 < 0x7FFFFFFF)
                          {
                            if (*(_QWORD *)(((v1739 + v1159) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                              goto LABEL_1558;
                          }
                          else if (__swift_getEnumTagSinglePayload(v1158 & v604, v1719, v1688) >= 2)
                          {
LABEL_1558:
                            memcpy((void *)(v1157 & v604), (const void *)(v1158 & v604), v1624);
                            v1160 = v1624;
                            goto LABEL_1565;
                          }
                          if (__swift_getEnumTagSinglePayload(v1158 & v604, 1, v1688))
                          {
                            memcpy((void *)(v1157 & v604), (const void *)(v1158 & v604), v1745);
                          }
                          else
                          {
                            (*(void (**)(unint64_t, unint64_t, uint64_t))(v1680 + 32))(v1157 & v604, v1158 & v604, v1688);
                            __swift_storeEnumTagSinglePayload(v1157 & v604, 0, 1, v1688);
                          }
                          v1161 = (v1739 + (v1157 & v604)) & 0xFFFFFFFFFFFFFFF8;
                          v1162 = (v1739 + v1159) & 0xFFFFFFFFFFFFFFF8;
                          v1163 = *(_OWORD *)v1162;
                          v1164 = *(_OWORD *)(v1162 + 16);
                          *(_QWORD *)(v1161 + 32) = *(_QWORD *)(v1162 + 32);
                          *(_OWORD *)v1161 = v1163;
                          *(_OWORD *)(v1161 + 16) = v1164;
                          v1165 = (v1161 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1166 = (v1162 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1167 = *(_OWORD *)v1166;
                          v1168 = *(_OWORD *)(v1166 + 16);
                          *(_QWORD *)(v1165 + 32) = *(_QWORD *)(v1166 + 32);
                          *(_OWORD *)v1165 = v1167;
                          *(_OWORD *)(v1165 + 16) = v1168;
                          *(_OWORD *)((v1165 + 47) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v1166 + 47) & 0xFFFFFFFFFFFFF8);
                          v1160 = v1624;
                          if (v1719)
                            v1160 = ((((((v1674 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                                  + 16;
LABEL_1565:
                          v1169 = (char *)(((v1157 | v1771) + v1160) & v604);
                          v1170 = (char *)(((v1158 | v1771) + v1160) & v604);
                          if (v1630 < 0x7FFFFFFF)
                          {
                            v1171 = ~v1755;
                            v454 = v1594;
                            v1172 = v1688;
                            if (*(_QWORD *)(((unint64_t)&v1170[v1739] & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                            {
LABEL_1567:
                              memcpy(v1169, v1170, v1624);
                              v513 = v1645;
                              v450 = v591;
                              if (!v1719)
                                goto LABEL_1576;
                              goto LABEL_1575;
                            }
                          }
                          else
                          {
                            v1171 = ~v1755;
                            v1172 = v1688;
                            v454 = v1594;
                            if (__swift_getEnumTagSinglePayload((uint64_t)v1170, v1719, v1688) >= 2)
                              goto LABEL_1567;
                          }
                          v513 = v1645;
                          if (__swift_getEnumTagSinglePayload((uint64_t)v1170, 1, v1172))
                          {
                            memcpy(v1169, v1170, v1745);
                          }
                          else
                          {
                            (*(void (**)(char *, char *, uint64_t))(v1680 + 32))(v1169, v1170, v1172);
                            __swift_storeEnumTagSinglePayload((uint64_t)v1169, 0, 1, v1172);
                          }
                          v1173 = (unint64_t)&v1169[v1739] & 0xFFFFFFFFFFFFFFF8;
                          v1174 = (unint64_t)&v1170[v1739] & 0xFFFFFFFFFFFFFFF8;
                          v1175 = *(_OWORD *)v1174;
                          v1176 = *(_OWORD *)(v1174 + 16);
                          *(_QWORD *)(v1173 + 32) = *(_QWORD *)(v1174 + 32);
                          *(_OWORD *)v1173 = v1175;
                          *(_OWORD *)(v1173 + 16) = v1176;
                          v1177 = (v1173 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1178 = (v1174 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1179 = *(_OWORD *)v1178;
                          v1180 = *(_OWORD *)(v1178 + 16);
                          *(_QWORD *)(v1177 + 32) = *(_QWORD *)(v1178 + 32);
                          *(_OWORD *)v1177 = v1179;
                          *(_OWORD *)(v1177 + 16) = v1180;
                          *(_OWORD *)((v1177 + 47) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v1178 + 47) & 0xFFFFFFFFFFFFF8);
                          v450 = v591;
                          if (!v1719)
                            goto LABEL_1576;
                          v1624 = ((((((v1674 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                                + 16;
LABEL_1575:
                          v449 = v1674;
LABEL_1576:
                          v502 = 0;
                          *(_QWORD *)&v1169[v1624] = *(_QWORD *)&v1170[v1624];
                          v1181 = v1729
                                + ((v1675
                                  + ((v1675
                                    + ((v1733
                                      + ((v1677
                                        + ((v1678
                                          + ((v1737
                                            + ((((((v1676
                                                  + ((((((((v449 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                                                      + 23) & 0xFFFFFFFFFFFFFFF8)
                                                    + 15) & 0xFFFFFFFFFFFFFFF8)) & v1763)
                                                + v1761) & 0xFFFFFFFFFFFFFFF8)
                                              + 23) & 0xFFFFFFFFFFFFFFF8)) & v1592)) & v1774)) & v1171)) & v604)) & v604)) & v604);
                          if (v1672 > v1181)
                            v1181 = v1718 + ((v1750 + 8) & ~v1755);
                          if (v1181 <= v1655)
                            v1181 = v1655;
                          if (v1181 <= v1673)
                            v1181 = v1673;
                          if (v1181 <= v1654)
                            v1181 = v1654;
                          if (v1181 <= v1653)
                            v1181 = v1653;
                          if (v1181 <= v1652)
                            v1181 = v1652;
                          if (v1181 <= v1656)
                            v1181 = (((((v1759 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                  + 16;
                          if (v1181 <= v1657)
                            v1181 = v1657;
                          if (v1181 <= v1649)
                            v1181 = v1649;
                          if (v1181 <= v1727)
                            v1181 = v1727;
                          if (v1181 <= v1648)
                            v1181 = v1648;
                          if (v1181 <= v1651)
                            v1181 = v1651;
                          if (v1181 <= v1650)
                            v1181 = v1650;
                          if (v1181 <= v1735)
                            v1181 = v1735;
                          if (v1181 <= v1582)
                            v1181 = v1582;
                          if (v1181 <= v1672)
                            v1181 = v1718 + ((v1750 + 8) & ~v1755);
                          if (v1181 <= v1647)
                            v1181 = v1647;
                          if (v1181 <= v1658)
                            v1181 = ((v1759 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
                          if (v1181 <= v75)
                            v1181 = v75;
                          if (v1181 <= v1659)
                            v1181 = v1659;
                          if (v1181 <= v1660)
                            v1181 = v1660;
                          if (v1181 <= v1662)
                            v1181 = v1662;
                          if (v1181 <= v1661)
                            v1181 = v1661;
                          if (v1181 <= v1663)
                            v1181 = v1663;
                          if (v1181 <= v1664)
                            v1181 = v1664;
                          if (v1181 <= v1671)
                            v1181 = v1671;
                          if (v1181 <= (unint64_t)v1665)
                            v1181 = (unint64_t)v1665;
                          if (v1181 <= v1666)
                            v1181 = v1666;
                          if (v1181 <= v1669)
                            v1181 = v1669;
                          if (v1181 <= v1759)
                            v1181 = v1759;
                          if (v1181 <= v1667)
                            v1181 = v1667;
                          if (v1181 <= v1670)
                            v1181 = v1670;
                          if (v1181 <= v1668)
                            v1181 = v1668;
                          if (v1181 <= 8)
                            v451 = 8;
                          else
                            v451 = v1181;
LABEL_1888:
                          v588 = a1;
                          v496 = __dstb;
                          goto LABEL_2171;
                        }
                      }
                      v1144 = v1718;
                      memcpy(v1136, v1137, v1718);
                      goto LABEL_1547;
                    }
                  }
                  v607 = v1761;
                  memcpy(v601, v602, v1761);
                  goto LABEL_1038;
                case 1:
                  v496 = __dstb;
                  *__dstb = *(_QWORD *)v450;
                  v497 = (_BYTE *)(((unint64_t)__dstb + v1755 + 8) & v1697);
                  v498 = v450;
                  v499 = (_BYTE *)((v1755 + 8 + v450) & v1697);
                  *v497 = *v499;
                  memcpy(v497 + 8, v499 + 8, 0x69uLL);
                  v500 = (void *)((unint64_t)&v497[v1642] & v1692);
                  v501 = (const void *)((unint64_t)&v499[v1642] & v1692);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v501, 1, v1644))
                  {
                    memcpy(v500, v501, v1716);
                    v502 = 1;
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1626 + 32))(v500, v501, v1644);
                    v502 = 1;
                    __swift_storeEnumTagSinglePayload((uint64_t)v500, 0, 1, v1644);
                  }
                  goto LABEL_1244;
                case 2:
                  v496 = __dstb;
                  *__dstb = *(_QWORD *)v450;
                  v502 = 2;
                  goto LABEL_1023;
                case 3:
                  v503 = (const void *)v450;
                  v496 = __dstb;
                  if (__swift_getEnumTagSinglePayload(v450, 1, v429))
                  {
                    memcpy(__dstb, v503, v1745);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, const void *, uint64_t))(v1680 + 32))(__dstb, v503, v429);
                    __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v429);
                  }
                  v621 = ((unint64_t)__dstb + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v622 = ((unint64_t)v503 + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v623 = *(_OWORD *)v622;
                  v624 = *(_OWORD *)(v622 + 16);
                  *(_QWORD *)(v621 + 32) = *(_QWORD *)(v622 + 32);
                  *(_OWORD *)v621 = v623;
                  *(_OWORD *)(v621 + 16) = v624;
                  v625 = (_OWORD *)((v621 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v626 = (_OWORD *)((v622 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v625 = *v626;
                  v627 = (void *)(((unint64_t)v625 + v1737) & v1592);
                  v628 = (_BYTE *)(((unint64_t)v626 + v1737) & v1592);
                  v1768 = (uint64_t)v503;
                  if (v1731)
                  {
                    v629 = v1636;
                    if (v1636 >= v1637)
                    {
                      v630 = ((unint64_t)v626 + v1737) & v1592;
                      v631 = v1639;
                    }
                    else
                    {
                      v630 = (unint64_t)&v628[v1640] & v1590;
                      v629 = v1637;
                      v631 = v1643;
                    }
                    v1010 = __swift_getEnumTagSinglePayload(v630, v629, v631);
                    v955 = v1642;
                  }
                  else
                  {
                    v955 = v1642;
                    if (!v628[v1722])
                      goto LABEL_1647;
                    v956 = (v628[v1722] - 1) << v419;
                    if (v1722 > 3)
                      v956 = 0;
                    if ((_DWORD)v1722)
                    {
                      if (v1722 <= 3)
                        v957 = v1722;
                      else
                        v957 = 4;
                      __asm { BR              X11 }
                    }
                    v1010 = v956 + 1;
                  }
                  if (v1010)
                  {
                    memcpy(v627, v628, v1720);
                    goto LABEL_1649;
                  }
LABEL_1647:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1634 + 32))(v627, v628, v1639);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1635 + 32))(((unint64_t)v627 + v1640) & v1590, (unint64_t)&v628[v1640] & v1590, v1643);
                  if (!v1731)
                    *((_BYTE *)v627 + v1722) = 0;
LABEL_1649:
                  *((_BYTE *)v627 + v1720) = v628[v1720];
                  v1182 = ((unint64_t)v627 + v1720 + v1711 + 1) & v1600;
                  v1183 = (unint64_t)&v628[v1720 + 1 + v1711] & v1600;
                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1613 + 32))(v1182, v1183, v1614);
                  v1184 = (v1608 + v1182) & 0xFFFFFFFFFFFFFFF8;
                  v1185 = (v1608 + v1183) & 0xFFFFFFFFFFFFFFF8;
                  v1186 = *(_QWORD *)(v1185 + 32);
                  v1187 = *(_OWORD *)(v1185 + 16);
                  *(_OWORD *)v1184 = *(_OWORD *)v1185;
                  *(_OWORD *)(v1184 + 16) = v1187;
                  *(_QWORD *)(v1184 + 32) = v1186;
                  v1188 = (_BYTE *)((v1757 + v1184) & v1697);
                  v1189 = (_BYTE *)((v1757 + v1185) & v1697);
                  if (v1638 >= 0x7FFFFFFF)
                  {
                    v1191 = ~v1750;
                    v1193 = (const void *)((unint64_t)&v1189[v955] & v1692);
                    if (__swift_getEnumTagSinglePayload((uint64_t)v1193, v1632, v1644) <= 1)
                    {
                      v1192 = v1189 + 8;
                      goto LABEL_1656;
                    }
                  }
                  else
                  {
                    v1190 = *(_QWORD *)(((v1757 + v1185) & v1697) + 0x10);
                    if (v1190 >= 0xFFFFFFFF)
                      LODWORD(v1190) = -1;
                    v1191 = ~v1750;
                    if ((int)v1190 - 1 < 0)
                    {
                      v1192 = v1189 + 8;
                      v1193 = (const void *)((unint64_t)&v1189[v955] & v1692);
LABEL_1656:
                      *v1188 = *v1189;
                      memcpy(v1188 + 8, v1192, 0x69uLL);
                      v1194 = (void *)((unint64_t)&v1188[v955] & v1191);
                      if (__swift_getEnumTagSinglePayload((uint64_t)v1193, 1, v1644))
                      {
                        memcpy(v1194, v1193, v1716);
                      }
                      else
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v1626 + 32))(v1194, v1193, v1644);
                        __swift_storeEnumTagSinglePayload((uint64_t)v1194, 0, 1, v1644);
                      }
                      v1195 = v1718;
LABEL_1661:
                      v1196 = (void *)((unint64_t)&v1188[v1748 + v1195] & v1592);
                      v1197 = (_BYTE *)((unint64_t)&v1189[v1748 + v1195] & v1592);
                      if (v1731)
                      {
                        v1198 = v1636;
                        if (v1636 >= v1637)
                        {
                          v1199 = (unint64_t)&v1189[v1748 + v1195] & v1592;
                          v1200 = v1639;
                        }
                        else
                        {
                          v1199 = (unint64_t)&v1197[v1640] & v1590;
                          v1198 = v1637;
                          v1200 = v1643;
                        }
                        v1203 = __swift_getEnumTagSinglePayload(v1199, v1198, v1200);
                      }
                      else
                      {
                        if (!v1197[v1722])
                          goto LABEL_1711;
                        v1201 = (v1197[v1722] - 1) << v419;
                        if (v1722 > 3)
                          v1201 = 0;
                        if ((_DWORD)v1722)
                        {
                          if (v1722 <= 3)
                            v1202 = v1722;
                          else
                            v1202 = 4;
                          __asm { BR              X11 }
                        }
                        v1203 = v1201 + 1;
                      }
                      if (v1203)
                      {
                        memcpy(v1196, v1197, v1720);
LABEL_1713:
                        v1216 = (_QWORD *)(((unint64_t)v1196 + v1678) & v1774);
                        v1217 = (uint64_t *)((unint64_t)&v1197[v1678] & v1774);
                        if ((v1637 & 0x80000000) != 0)
                        {
                          v1219 = __swift_getEnumTagSinglePayload(((unint64_t)v1217 + v1625) & v1590, v1637, v1643);
                        }
                        else
                        {
                          v1218 = *v1217;
                          if ((unint64_t)*v1217 >= 0xFFFFFFFF)
                            LODWORD(v1218) = -1;
                          v1219 = v1218 + 1;
                        }
                        v588 = a1;
                        if (v1219)
                        {
                          memcpy(v1216, v1217, v1714);
                        }
                        else
                        {
                          *v1216 = *v1217;
                          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1635 + 32))(((unint64_t)v1216 + v1625) & v1590, ((unint64_t)v1217 + v1625) & v1590, v1643);
                        }
                        v502 = 3;
                        goto LABEL_1999;
                      }
LABEL_1711:
                      (*(void (**)(void *, _BYTE *, uint64_t))(v1634 + 32))(v1196, v1197, v1639);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1635 + 32))(((unint64_t)v1196 + v1640) & v1590, (unint64_t)&v1197[v1640] & v1590, v1643);
                      if (!v1731)
                        *((_BYTE *)v1196 + v1722) = 0;
                      goto LABEL_1713;
                    }
                  }
                  v1195 = v1718;
                  memcpy(v1188, v1189, v1718);
                  goto LABEL_1661;
                case 4:
                  v504 = (const void *)v450;
                  v1585 = v419;
                  v496 = __dstb;
                  if (__swift_getEnumTagSinglePayload(v450, 1, v429))
                  {
                    memcpy(__dstb, v504, v1745);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, const void *, uint64_t))(v1680 + 32))(__dstb, v504, v429);
                    __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v429);
                  }
                  v632 = ((unint64_t)__dstb + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v633 = ((unint64_t)v504 + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v634 = *(_OWORD *)v633;
                  v635 = *(_OWORD *)(v633 + 16);
                  *(_QWORD *)(v632 + 32) = *(_QWORD *)(v633 + 32);
                  *(_OWORD *)v632 = v634;
                  *(_OWORD *)(v632 + 16) = v635;
                  v636 = (_OWORD *)((v632 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v637 = (_OWORD *)((v633 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v636 = *v637;
                  v638 = (_OWORD *)(((unint64_t)v636 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v639 = (_OWORD *)(((unint64_t)v637 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v638 = *v639;
                  v640 = ((unint64_t)v638 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v641 = ((unint64_t)v639 + 23) & 0xFFFFFFFFFFFFFFF8;
                  *(_OWORD *)v640 = *(_OWORD *)v641;
                  *(_BYTE *)(v640 + 16) = *(_BYTE *)(v641 + 16);
                  v642 = ((unint64_t)v638 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v643 = ((unint64_t)v639 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v644 = *(_OWORD *)v643;
                  v645 = *(_OWORD *)(v643 + 16);
                  *(_QWORD *)(v642 + 32) = *(_QWORD *)(v643 + 32);
                  *(_OWORD *)v642 = v644;
                  *(_OWORD *)(v642 + 16) = v645;
                  *(_BYTE *)(v642 + 40) = *(_BYTE *)(v643 + 40);
                  v646 = (_BYTE *)((v1619 + v642) & v1697);
                  v647 = (_BYTE *)((v1619 + v643) & v1697);
                  v648 = (uint64_t)v504;
                  if (v1638 >= 0x7FFFFFFF)
                  {
                    v650 = ~v1750;
                    v653 = (const void *)((unint64_t)&v647[v1642] & v1692);
                    v651 = v1637;
                    if (__swift_getEnumTagSinglePayload((uint64_t)v653, v1632, v1644) <= 1)
                    {
                      v652 = v647 + 8;
                      goto LABEL_1054;
                    }
                  }
                  else
                  {
                    v649 = *(_QWORD *)(((v1619 + v643) & v1697) + 0x10);
                    if (v649 >= 0xFFFFFFFF)
                      LODWORD(v649) = -1;
                    v650 = ~v1750;
                    v651 = v1637;
                    if ((int)v649 - 1 < 0)
                    {
                      v652 = v647 + 8;
                      v653 = (const void *)((unint64_t)&v647[v1642] & v1692);
LABEL_1054:
                      *v646 = *v647;
                      memcpy(v646 + 8, v652, 0x69uLL);
                      v654 = (void *)((unint64_t)&v646[v1642] & v650);
                      if (__swift_getEnumTagSinglePayload((uint64_t)v653, 1, v1644))
                      {
                        memcpy(v654, v653, v1716);
                      }
                      else
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v1626 + 32))(v654, v653, v1644);
                        __swift_storeEnumTagSinglePayload((uint64_t)v654, 0, 1, v1644);
                      }
                      v454 = v1594;
                      v655 = v1718;
LABEL_1403:
                      v1042 = (void *)((unint64_t)&v646[v1748 + v655] & v1592);
                      v1043 = (_BYTE *)((unint64_t)&v647[v1748 + v655] & v1592);
                      v513 = v1645;
                      if (v1731)
                      {
                        v1044 = v1636;
                        if (v1636 >= v651)
                        {
                          v1045 = (unint64_t)&v647[v1748 + v655] & v1592;
                          v1046 = v1639;
                        }
                        else
                        {
                          v1045 = (unint64_t)&v1043[v1640] & v1590;
                          v1044 = v651;
                          v1046 = v1643;
                        }
                        v1049 = __swift_getEnumTagSinglePayload(v1045, v1044, v1046);
                        v588 = a1;
                      }
                      else
                      {
                        v588 = a1;
                        if (!v1043[v1722])
                          goto LABEL_1705;
                        v1047 = (v1043[v1722] - 1) << v1585;
                        if (v1722 > 3)
                          v1047 = 0;
                        if ((_DWORD)v1722)
                        {
                          if (v1722 <= 3)
                            v1048 = v1722;
                          else
                            v1048 = 4;
                          __asm { BR              X11 }
                        }
                        v1049 = v1047 + 1;
                      }
                      if (v1049)
                      {
                        memcpy(v1042, v1043, v1720);
LABEL_1707:
                        v1212 = ((unint64_t)v1042 + v1627) & 0xFFFFFFFFFFFFFFF8;
                        v1213 = (unint64_t)&v1043[v1627] & 0xFFFFFFFFFFFFFFF8;
                        v1214 = *(_OWORD *)v1213;
                        v1215 = *(_OWORD *)(v1213 + 16);
                        *(_QWORD *)(v1212 + 32) = *(_QWORD *)(v1213 + 32);
                        *(_OWORD *)v1212 = v1214;
                        *(_OWORD *)(v1212 + 16) = v1215;
                        *(_OWORD *)((v1212 + 47) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v1213 + 47) & 0xFFFFFFFFFFFFF8);
                        v502 = 4;
LABEL_1708:
                        v451 = v1706;
LABEL_2170:
                        v450 = v648;
                        goto LABEL_2171;
                      }
LABEL_1705:
                      (*(void (**)(void *, _BYTE *, uint64_t))(v1634 + 32))(v1042, v1043, v1639);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1635 + 32))(((unint64_t)v1042 + v1640) & v1590, (unint64_t)&v1043[v1640] & v1590, v1643);
                      if (!v1731)
                        *((_BYTE *)v1042 + v1722) = 0;
                      goto LABEL_1707;
                    }
                  }
                  v655 = v1718;
                  memcpy(v646, v647, v1718);
                  v454 = v1594;
                  goto LABEL_1403;
                case 5:
                  v505 = (const void *)v450;
                  v1586 = v419;
                  v496 = __dstb;
                  if (__swift_getEnumTagSinglePayload(v450, 1, v429))
                  {
                    memcpy(__dstb, v505, v1745);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, const void *, uint64_t))(v1680 + 32))(__dstb, v505, v429);
                    __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v429);
                  }
                  v656 = v1718;
                  v657 = ((unint64_t)__dstb + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v658 = ((unint64_t)v505 + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v659 = *(_OWORD *)v658;
                  v660 = *(_OWORD *)(v658 + 16);
                  *(_QWORD *)(v657 + 32) = *(_QWORD *)(v658 + 32);
                  *(_OWORD *)v657 = v659;
                  *(_OWORD *)(v657 + 16) = v660;
                  v661 = (void *)((v1743 + 40 + v657) & v1710);
                  v662 = (const void *)((v1743 + 40 + v658) & v1710);
                  v663 = v1642;
                  if (v1630 == v1621)
                  {
                    v648 = (uint64_t)v505;
                    v664 = v1719;
                    if (v1719 < 2)
                      goto LABEL_1452;
                    v665 = (v1743 + 40 + v658) & v1710;
                    v666 = v1688;
                  }
                  else
                  {
                    v667 = ((unint64_t)v662 + v1739) & 0xFFFFFFFFFFFFFFF8;
                    v648 = (uint64_t)v505;
                    if (v1621 == 0x7FFFFFFF)
                    {
                      if (*(_QWORD *)(v667 + 24) >= 0xFFFFFFFFuLL)
                        goto LABEL_1452;
                      goto LABEL_1454;
                    }
                    v1018 = (v1755
                           + ((((((v667 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                           + 65) & v1697;
                    if (v1596 == v1621)
                    {
                      if (v1638 > 0x7FFFFFFE)
                      {
                        v1057 = __swift_getEnumTagSinglePayload((v1642 + v1018) & v1692, v1632, v1644);
                        if (v1057 < 2)
                          goto LABEL_1452;
                        v1021 = v1057 - 1;
                      }
                      else
                      {
                        v1019 = *(_QWORD *)(v1018 + 16);
                        if (v1019 >= 0xFFFFFFFF)
                          LODWORD(v1019) = -1;
                        v1020 = v1019 - 1;
                        if (v1020 < 0)
                          v1020 = -1;
                        v1021 = v1020 + 1;
                      }
                      if (v1021 < 2)
                      {
LABEL_1452:
                        if (__swift_getEnumTagSinglePayload((uint64_t)v662, 1, v1688))
                        {
                          memcpy(v661, v662, v1745);
                        }
                        else
                        {
                          (*(void (**)(void *, const void *, uint64_t))(v1680 + 32))(v661, v662, v1688);
                          __swift_storeEnumTagSinglePayload((uint64_t)v661, 0, 1, v1688);
                        }
                        v1059 = ((unint64_t)v661 + v1739) & 0xFFFFFFFFFFFFFFF8;
                        v1060 = ((unint64_t)v662 + v1739) & 0xFFFFFFFFFFFFFFF8;
                        v1061 = *(_OWORD *)v1060;
                        v1062 = *(_OWORD *)(v1060 + 16);
                        *(_QWORD *)(v1059 + 32) = *(_QWORD *)(v1060 + 32);
                        *(_OWORD *)v1059 = v1061;
                        *(_OWORD *)(v1059 + 16) = v1062;
                        v1063 = (_OWORD *)((v1059 + 47) & 0xFFFFFFFFFFFFFFF8);
                        v1064 = (_OWORD *)((v1060 + 47) & 0xFFFFFFFFFFFFFFF8);
                        *v1063 = *v1064;
                        v1065 = (_OWORD *)(((unint64_t)v1063 + 23) & 0xFFFFFFFFFFFFFFF8);
                        v1066 = (_OWORD *)(((unint64_t)v1064 + 23) & 0xFFFFFFFFFFFFFFF8);
                        *v1065 = *v1066;
                        v1067 = ((unint64_t)v1065 + 23) & 0xFFFFFFFFFFFFFFF8;
                        v1068 = ((unint64_t)v1066 + 23) & 0xFFFFFFFFFFFFFFF8;
                        *(_OWORD *)v1067 = *(_OWORD *)v1068;
                        *(_BYTE *)(v1067 + 16) = *(_BYTE *)(v1068 + 16);
                        v1069 = ((unint64_t)v1065 + 47) & 0xFFFFFFFFFFFFFFF8;
                        v1070 = ((unint64_t)v1066 + 47) & 0xFFFFFFFFFFFFFFF8;
                        v1071 = *(_OWORD *)v1070;
                        v1072 = *(_OWORD *)(v1070 + 16);
                        *(_QWORD *)(v1069 + 32) = *(_QWORD *)(v1070 + 32);
                        *(_OWORD *)v1069 = v1071;
                        *(_OWORD *)(v1069 + 16) = v1072;
                        *(_BYTE *)(v1069 + 40) = *(_BYTE *)(v1070 + 40);
                        v1073 = (_BYTE *)((v1619 + v1069) & v1697);
                        v1074 = (_BYTE *)((v1619 + v1070) & v1697);
                        if (v1638 >= 0x7FFFFFFF)
                        {
                          v1079 = (const void *)((unint64_t)&v1074[v1642] & v1692);
                          if (__swift_getEnumTagSinglePayload((uint64_t)v1079, v1632, v1644) <= 1)
                          {
                            v1076 = v1074 + 8;
                            v1077 = v1642;
                            v1078 = ~v1750;
                            goto LABEL_1463;
                          }
                        }
                        else
                        {
                          v1075 = *(_QWORD *)(((v1619 + v1070) & v1697) + 0x10);
                          if (v1075 >= 0xFFFFFFFF)
                            LODWORD(v1075) = -1;
                          if ((int)v1075 - 1 < 0)
                          {
                            v1076 = v1074 + 8;
                            v1077 = v1642;
                            v1078 = ~v1750;
                            v1079 = (const void *)((unint64_t)&v1074[v1642] & v1692);
LABEL_1463:
                            *v1073 = *v1074;
                            memcpy(v1073 + 8, v1076, 0x69uLL);
                            if (__swift_getEnumTagSinglePayload((uint64_t)v1079, 1, v1644))
                            {
                              memcpy((void *)((unint64_t)&v1073[v1077] & v1078), v1079, v1716);
                            }
                            else
                            {
                              (*(void (**)(unint64_t, const void *, uint64_t))(v1626 + 32))((unint64_t)&v1073[v1077] & v1078, v1079, v1644);
                              __swift_storeEnumTagSinglePayload((unint64_t)&v1073[v1077] & v1078, 0, 1, v1644);
                            }
                            v656 = v1718;
                            v423 = v1741;
LABEL_1468:
                            v1080 = (void *)((unint64_t)&v1073[v1748 + v656] & v1592);
                            v1081 = (_BYTE *)((unint64_t)&v1074[v1748 + v656] & v1592);
                            v496 = __dstb;
                            if (v1731)
                            {
                              v1082 = v1637;
                              v1058 = v1688;
                              if (v1636 >= v1637)
                              {
                                v1083 = (uint64_t)v1081;
                                v1082 = v1636;
                                v1084 = v1639;
                              }
                              else
                              {
                                v1083 = (unint64_t)&v1081[v1640] & v1590;
                                v1084 = v1643;
                              }
                              v1087 = __swift_getEnumTagSinglePayload(v1083, v1082, v1084);
                            }
                            else
                            {
                              v1058 = v1688;
                              if (!v1081[v1722])
                                goto LABEL_2061;
                              v1085 = (v1081[v1722] - 1) << v1586;
                              if (v1722 > 3)
                                v1085 = 0;
                              if ((_DWORD)v1722)
                              {
                                if (v1722 <= 3)
                                  v1086 = v1722;
                                else
                                  v1086 = 4;
                                __asm { BR              X11 }
                              }
                              v1087 = v1085 + 1;
                            }
                            if (v1087)
                            {
                              memcpy(v1080, v1081, v1720);
LABEL_2063:
                              v1376 = ((unint64_t)v1080 + v1627) & 0xFFFFFFFFFFFFFFF8;
                              v1377 = (unint64_t)&v1081[v1627] & 0xFFFFFFFFFFFFFFF8;
                              v1378 = *(_OWORD *)v1377;
                              v1379 = *(_OWORD *)(v1377 + 16);
                              *(_QWORD *)(v1376 + 32) = *(_QWORD *)(v1377 + 32);
                              *(_OWORD *)v1376 = v1378;
                              *(_OWORD *)(v1376 + 16) = v1379;
                              *(_OWORD *)((v1376 + 47) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v1377 + 47) & 0xFFFFFFFFFFFFF8);
                              v451 = v1706;
                              v663 = v1642;
LABEL_2064:
                              v1380 = ~v1743;
                              v1381 = (_BYTE *)(((unint64_t)v661 + v1615) & v1710);
                              v1382 = (unsigned __int8 *)(((unint64_t)v662 + v1615) & v1710);
                              v1383 = *v1382;
                              if (v1383 > 2)
                              {
                                memcpy((void *)(((unint64_t)v661 + v1615) & v1710), v1382, v423);
                                v1380 = ~v1743;
                                goto LABEL_2161;
                              }
                              *v1381 = v1383;
                              v1384 = (_OWORD *)((unint64_t)&v1381[v1646] & v1710);
                              v1385 = (__int128 *)((unint64_t)&v1382[v1646] & v1710);
                              v1386 = *((unsigned __int8 *)v1385 + v1679);
                              if (v1386 > 2)
                              {
                                memcpy((void *)((unint64_t)&v1381[v1646] & v1710), (const void *)((unint64_t)&v1382[v1646] & v1710), __n);
                                v1380 = ~v1743;
                                goto LABEL_2076;
                              }
                              if (v1386 != 2)
                              {
                                if (v1386 == 1)
                                {
                                  v1387 = *v1385;
                                  v1388 = *(_OWORD *)(((unint64_t)&v1382[v1646] & v1710) + 0x10);
                                  *(_QWORD *)(((unint64_t)&v1381[v1646] & v1710) + 0x20) = *(_QWORD *)(((unint64_t)&v1382[v1646] & v1710) + 0x20);
                                  *v1384 = v1387;
                                  *(_OWORD *)(((unint64_t)&v1381[v1646] & v1710) + 0x10) = v1388;
                                  v1389 = (void *)(((unint64_t)v1384 + v1724) & v1708);
                                  v1390 = (const void *)(((unint64_t)v1385 + v1724) & v1708);
                                  if (__swift_getEnumTagSinglePayload((uint64_t)v1390, 1, v1058))
                                  {
                                    memcpy(v1389, v1390, v1745);
                                  }
                                  else
                                  {
                                    (*(void (**)(void *, const void *, uint64_t))(v1680 + 32))(v1389, v1390, v1058);
                                    __swift_storeEnumTagSinglePayload((uint64_t)v1389, 0, 1, v1058);
                                  }
                                  v1403 = (_OWORD *)(((unint64_t)v1389 + v1739) & 0xFFFFFFFFFFFFFFF8);
                                  v1404 = (_OWORD *)(((unint64_t)v1390 + v1739) & 0xFFFFFFFFFFFFFFF8);
                                  *v1403 = *v1404;
                                  v1405 = ((unint64_t)v1403 + 23) & 0xFFFFFFFFFFFFFFF8;
                                  v1406 = ((unint64_t)v1404 + 23) & 0xFFFFFFFFFFFFFFF8;
                                  v1407 = *(_QWORD *)v1406;
                                  *(_BYTE *)(v1405 + 8) = *(_BYTE *)(v1406 + 8);
                                  *(_QWORD *)v1405 = v1407;
                                  v1408 = ((unint64_t)v1403 + 39) & 0xFFFFFFFFFFFFFFF8;
                                  v1409 = ((unint64_t)v1404 + 39) & 0xFFFFFFFFFFFFFFF8;
                                  v1410 = *(_QWORD *)v1409;
                                  *(_BYTE *)(v1408 + 8) = *(_BYTE *)(v1409 + 8);
                                  *(_QWORD *)v1408 = v1410;
                                  v1411 = ((unint64_t)v1403 + 55) & 0xFFFFFFFFFFFFFFF8;
                                  v1412 = ((unint64_t)v1404 + 55) & 0xFFFFFFFFFFFFFFF8;
                                  v1413 = *(_QWORD *)v1412;
                                  *(_BYTE *)(v1411 + 8) = *(_BYTE *)(v1412 + 8);
                                  *(_QWORD *)v1411 = v1413;
                                  v1414 = (_OWORD *)(((unint64_t)v1403 + 71) & 0xFFFFFFFFFFFFFFF8);
                                  v1415 = (_OWORD *)(((unint64_t)v1404 + 71) & 0xFFFFFFFFFFFFFFF8);
                                  *v1414 = *v1415;
                                  v1416 = ((unint64_t)v1414 + 23) & 0xFFFFFFFFFFFFFFF8;
                                  v1417 = ((unint64_t)v1415 + 23) & 0xFFFFFFFFFFFFFFF8;
                                  v1418 = *(_OWORD *)v1417;
                                  v1419 = *(_OWORD *)(v1417 + 16);
                                  *(_QWORD *)(v1416 + 32) = *(_QWORD *)(v1417 + 32);
                                  *(_OWORD *)v1416 = v1418;
                                  *(_OWORD *)(v1416 + 16) = v1419;
                                  v1420 = (_BYTE *)((v1757 + v1416) & v1697);
                                  v1421 = (_BYTE *)((v1757 + v1417) & v1697);
                                  if (v1638 >= 0x7FFFFFFF)
                                  {
                                    v1424 = (const void *)((unint64_t)&v1421[v1642] & v1692);
                                    if (__swift_getEnumTagSinglePayload((uint64_t)v1424, v1632, v1644) <= 1)
                                    {
                                      v1423 = v1421 + 8;
                                      goto LABEL_2085;
                                    }
                                  }
                                  else
                                  {
                                    v1422 = *(_QWORD *)(((v1757 + v1417) & v1697) + 0x10);
                                    if (v1422 >= 0xFFFFFFFF)
                                      LODWORD(v1422) = -1;
                                    if ((int)v1422 - 1 < 0)
                                    {
                                      v1423 = v1421 + 8;
                                      v1424 = (const void *)((unint64_t)&v1421[v1642] & v1692);
LABEL_2085:
                                      *v1420 = *v1421;
                                      memcpy(v1420 + 8, v1423, 0x69uLL);
                                      v1425 = (void *)((unint64_t)&v1420[v1642] & v1692);
                                      if (__swift_getEnumTagSinglePayload((uint64_t)v1424, 1, v1644))
                                      {
                                        memcpy(v1425, v1424, v1716);
                                      }
                                      else
                                      {
                                        (*(void (**)(void *, const void *, uint64_t))(v1626 + 32))(v1425, v1424, v1644);
                                        __swift_storeEnumTagSinglePayload((uint64_t)v1425, 0, 1, v1644);
                                      }
                                      v1058 = v1688;
                                      v423 = v1741;
                                      goto LABEL_2118;
                                    }
                                  }
                                  memcpy(v1420, v1421, v1718);
LABEL_2118:
                                  v1441 = 1;
LABEL_2160:
                                  *((_BYTE *)v1384 + v1679) = v1441;
                                  v451 = v1706;
                                  v663 = v1642;
                                  v1380 = ~v1743;
                                  v496 = __dstb;
LABEL_2161:
                                  v1451 = (_QWORD *)((unint64_t)&v1381[v1617] & 0xFFFFFFFFFFFFFFF8);
                                  v1452 = (_QWORD *)((unint64_t)&v1382[v1617] & 0xFFFFFFFFFFFFFFF8);
                                  *v1451 = *v1452;
                                  v1453 = (_BYTE *)(((unint64_t)v1451 + v1618) & v1380);
                                  v1454 = (unsigned __int8 *)(((unint64_t)v1452 + v1618) & v1380);
                                  v1455 = *v1454;
                                  if (v1455 > 2)
                                  {
                                    memcpy(v1453, v1454, v423);
                                    v502 = 5;
                                    v454 = v1594;
                                    v513 = v1645;
                                  }
                                  else
                                  {
                                    *v1453 = v1455;
                                    v1456 = (_OWORD *)((unint64_t)&v1453[v1646] & v1380);
                                    v1457 = (__int128 *)((unint64_t)&v1454[v1646] & v1380);
                                    v1458 = *((unsigned __int8 *)v1457 + v1679);
                                    v454 = v1594;
                                    if (v1458 <= 2)
                                    {
                                      if (v1458 != 2)
                                      {
                                        if (v1458 != 1)
                                        {
                                          v450 = v648;
                                          v1553 = *v1457;
                                          v1554 = *(_OWORD *)(((unint64_t)&v1454[v1646] & v1380) + 0x20);
                                          v1456[1] = *(_OWORD *)(((unint64_t)&v1454[v1646] & v1380) + 0x10);
                                          v1456[2] = v1554;
                                          *v1456 = v1553;
                                          *((_BYTE *)v1456 + v1679) = 0;
                                          v502 = 5;
                                          v513 = v1645;
                                          v451 = v1706;
LABEL_1024:
                                          v588 = a1;
                                          goto LABEL_2171;
                                        }
                                        v1459 = *v1457;
                                        v1460 = *(_OWORD *)(((unint64_t)&v1454[v1646] & v1380) + 0x10);
                                        *(_QWORD *)(((unint64_t)&v1453[v1646] & v1380) + 0x20) = *(_QWORD *)(((unint64_t)&v1454[v1646] & v1380) + 0x20);
                                        *v1456 = v1459;
                                        *(_OWORD *)(((unint64_t)&v1453[v1646] & v1380) + 0x10) = v1460;
                                        v1461 = (void *)(((unint64_t)v1456 + v1724) & v1708);
                                        v1462 = (const void *)(((unint64_t)v1457 + v1724) & v1708);
                                        if (__swift_getEnumTagSinglePayload((uint64_t)v1462, 1, v1058))
                                        {
                                          memcpy(v1461, v1462, v1745);
                                        }
                                        else
                                        {
                                          (*(void (**)(void *, const void *, uint64_t))(v1680 + 32))(v1461, v1462, v1058);
                                          __swift_storeEnumTagSinglePayload((uint64_t)v1461, 0, 1, v1058);
                                        }
                                        v1555 = (_OWORD *)(((unint64_t)v1461 + v1739) & 0xFFFFFFFFFFFFFFF8);
                                        v1556 = (_OWORD *)(((unint64_t)v1462 + v1739) & 0xFFFFFFFFFFFFFFF8);
                                        *v1555 = *v1556;
                                        v1557 = ((unint64_t)v1555 + 23) & 0xFFFFFFFFFFFFFFF8;
                                        v1558 = ((unint64_t)v1556 + 23) & 0xFFFFFFFFFFFFFFF8;
                                        v1559 = *(_QWORD *)v1558;
                                        *(_BYTE *)(v1557 + 8) = *(_BYTE *)(v1558 + 8);
                                        *(_QWORD *)v1557 = v1559;
                                        v1560 = ((unint64_t)v1555 + 39) & 0xFFFFFFFFFFFFFFF8;
                                        v1561 = ((unint64_t)v1556 + 39) & 0xFFFFFFFFFFFFFFF8;
                                        v1562 = *(_QWORD *)v1561;
                                        *(_BYTE *)(v1560 + 8) = *(_BYTE *)(v1561 + 8);
                                        *(_QWORD *)v1560 = v1562;
                                        v1563 = ((unint64_t)v1555 + 55) & 0xFFFFFFFFFFFFFFF8;
                                        v1564 = ((unint64_t)v1556 + 55) & 0xFFFFFFFFFFFFFFF8;
                                        v1565 = *(_QWORD *)v1564;
                                        *(_BYTE *)(v1563 + 8) = *(_BYTE *)(v1564 + 8);
                                        *(_QWORD *)v1563 = v1565;
                                        v1566 = (_OWORD *)(((unint64_t)v1555 + 71) & 0xFFFFFFFFFFFFFFF8);
                                        v1567 = (_OWORD *)(((unint64_t)v1556 + 71) & 0xFFFFFFFFFFFFFFF8);
                                        *v1566 = *v1567;
                                        v1568 = ((unint64_t)v1566 + 23) & 0xFFFFFFFFFFFFFFF8;
                                        v1569 = ((unint64_t)v1567 + 23) & 0xFFFFFFFFFFFFFFF8;
                                        v1570 = *(_OWORD *)v1569;
                                        v1571 = *(_OWORD *)(v1569 + 16);
                                        *(_QWORD *)(v1568 + 32) = *(_QWORD *)(v1569 + 32);
                                        *(_OWORD *)v1568 = v1570;
                                        *(_OWORD *)(v1568 + 16) = v1571;
                                        v1572 = (_BYTE *)((v1757 + v1568) & v1697);
                                        v1573 = (_BYTE *)((v1757 + v1569) & v1697);
                                        if (v1638 >= 0x7FFFFFFF)
                                        {
                                          v1576 = (const void *)((unint64_t)&v1573[v663] & v1692);
                                          if (__swift_getEnumTagSinglePayload((uint64_t)v1576, v1632, v1644) <= 1)
                                          {
                                            v588 = a1;
                                            v1575 = v1573 + 8;
                                            goto LABEL_2283;
                                          }
                                        }
                                        else
                                        {
                                          v1574 = *(_QWORD *)(((v1757 + v1569) & v1697) + 0x10);
                                          if (v1574 >= 0xFFFFFFFF)
                                            LODWORD(v1574) = -1;
                                          if ((int)v1574 - 1 < 0)
                                          {
                                            v588 = a1;
                                            v1575 = v1573 + 8;
                                            v1576 = (const void *)((unint64_t)&v1573[v663] & v1692);
LABEL_2283:
                                            *v1572 = *v1573;
                                            memcpy(v1572 + 8, v1575, 0x69uLL);
                                            v1577 = (void *)((unint64_t)&v1572[v663] & v1692);
                                            if (__swift_getEnumTagSinglePayload((uint64_t)v1576, 1, v1644))
                                            {
                                              memcpy(v1577, v1576, v1716);
                                            }
                                            else
                                            {
                                              (*(void (**)(void *, const void *, uint64_t))(v1626 + 32))(v1577, v1576, v1644);
                                              __swift_storeEnumTagSinglePayload((uint64_t)v1577, 0, 1, v1644);
                                            }
                                            v496 = __dstb;
                                            goto LABEL_2298;
                                          }
                                        }
                                        memcpy(v1572, v1573, v1718);
                                        v588 = a1;
LABEL_2298:
                                        v1581 = 1;
LABEL_2307:
                                        *((_BYTE *)v1456 + v1679) = v1581;
                                        v502 = 5;
                                        v454 = v1594;
                                        v513 = v1645;
                                        goto LABEL_1708;
                                      }
                                      memcpy((void *)((unint64_t)&v1453[v1646] & v1380), (const void *)((unint64_t)&v1454[v1646] & v1380), 0x48uLL);
                                      v1543 = (const void *)(((unint64_t)v1457 + 79) & 0xFFFFFFFFFFFFFFF8);
                                      memcpy((void *)(((unint64_t)v1456 + 79) & 0xFFFFFFFFFFFFFFF8), v1543, 0x48uLL);
                                      v1544 = (_QWORD *)(((((unint64_t)v1456 + 79) & 0xFFFFFFFFFFFFFFF8) + 79) & 0xFFFFFFFFFFFFF8);
                                      v1545 = (_QWORD *)(((unint64_t)v1543 + 79) & 0xFFFFFFFFFFFFF8);
                                      *v1544 = *v1545;
                                      v1546 = (_QWORD *)(((unint64_t)v1544 + 15) & 0xFFFFFFFFFFFFFFF8);
                                      v1547 = (_QWORD *)(((unint64_t)v1545 + 15) & 0xFFFFFFFFFFFFFFF8);
                                      *v1546 = *v1547;
                                      v1548 = (void *)(((unint64_t)v1546 + v1628) & v1592);
                                      v1549 = (_BYTE *)(((unint64_t)v1547 + v1628) & v1592);
                                      if (v1731)
                                      {
                                        v1550 = v1637;
                                        v588 = a1;
                                        if (v1636 >= v1637)
                                        {
                                          v1551 = ((unint64_t)v1547 + v1628) & v1592;
                                          v1550 = v1636;
                                          v1552 = v1639;
                                        }
                                        else
                                        {
                                          v1551 = (unint64_t)&v1549[v1640] & v1590;
                                          v1552 = v1643;
                                        }
                                        v1580 = __swift_getEnumTagSinglePayload(v1551, v1550, v1552);
                                      }
                                      else
                                      {
                                        v588 = a1;
                                        if (!v1549[v1722])
                                          goto LABEL_2304;
                                        v1578 = (v1549[v1722] - 1) << v1586;
                                        if (v1722 > 3)
                                          v1578 = 0;
                                        if ((_DWORD)v1722)
                                        {
                                          if (v1722 <= 3)
                                            v1579 = v1722;
                                          else
                                            v1579 = 4;
                                          __asm { BR              X11 }
                                        }
                                        v1580 = v1578 + 1;
                                        v496 = __dstb;
                                      }
                                      if (v1580)
                                      {
                                        memcpy(v1548, v1549, v1720);
LABEL_2306:
                                        *((_BYTE *)v1548 + v1720) = v1549[v1720];
                                        v1581 = 2;
                                        goto LABEL_2307;
                                      }
LABEL_2304:
                                      (*(void (**)(void *, _BYTE *, uint64_t))(v1634 + 32))(v1548, v1549, v1639);
                                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1635 + 32))(((unint64_t)v1548 + v1640) & v1590, (unint64_t)&v1549[v1640] & v1590, v1643);
                                      if (!v1731)
                                        *((_BYTE *)v1548 + v1722) = 0;
                                      goto LABEL_2306;
                                    }
                                    memcpy((void *)((unint64_t)&v1453[v1646] & v1380), (const void *)((unint64_t)&v1454[v1646] & v1380), __n);
                                    v502 = 5;
                                    v513 = v1645;
                                    v451 = v1706;
                                  }
                                  v588 = a1;
                                  goto LABEL_2170;
                                }
                                v1401 = *v1385;
                                v1402 = *(_OWORD *)(((unint64_t)&v1382[v1646] & v1710) + 0x20);
                                *(_OWORD *)(((unint64_t)&v1381[v1646] & v1710) + 0x10) = *(_OWORD *)(((unint64_t)&v1382[v1646] & v1710) + 0x10);
                                *(_OWORD *)(((unint64_t)&v1381[v1646] & v1710) + 0x20) = v1402;
                                *v1384 = v1401;
                                *((_BYTE *)v1384 + v1679) = 0;
LABEL_2076:
                                v451 = v1706;
                                v663 = v1642;
                                goto LABEL_2161;
                              }
                              memcpy((void *)((unint64_t)&v1381[v1646] & v1710), (const void *)((unint64_t)&v1382[v1646] & v1710), 0x48uLL);
                              v1391 = (const void *)(((unint64_t)v1385 + 79) & 0xFFFFFFFFFFFFFFF8);
                              memcpy((void *)(((unint64_t)v1384 + 79) & 0xFFFFFFFFFFFFFFF8), v1391, 0x48uLL);
                              v1392 = (_QWORD *)(((((unint64_t)v1384 + 79) & 0xFFFFFFFFFFFFFFF8) + 79) & 0xFFFFFFFFFFFFF8);
                              v1393 = (_QWORD *)(((unint64_t)v1391 + 79) & 0xFFFFFFFFFFFFF8);
                              *v1392 = *v1393;
                              v1394 = (_QWORD *)(((unint64_t)v1392 + 15) & 0xFFFFFFFFFFFFFFF8);
                              v1395 = (_QWORD *)(((unint64_t)v1393 + 15) & 0xFFFFFFFFFFFFFFF8);
                              *v1394 = *v1395;
                              v1396 = (void *)(((unint64_t)v1394 + v1628) & v1592);
                              v1397 = (_BYTE *)(((unint64_t)v1395 + v1628) & v1592);
                              if (v1731)
                              {
                                v1398 = v1636;
                                if (v1636 >= v1637)
                                {
                                  v1399 = ((unint64_t)v1395 + v1628) & v1592;
                                  v1400 = v1639;
                                }
                                else
                                {
                                  v1399 = (unint64_t)&v1397[v1640] & v1590;
                                  v1398 = v1637;
                                  v1400 = v1643;
                                }
                                v1428 = __swift_getEnumTagSinglePayload(v1399, v1398, v1400);
                              }
                              else
                              {
                                if (!v1397[v1722])
                                  goto LABEL_2157;
                                v1426 = (v1397[v1722] - 1) << v1586;
                                if (v1722 > 3)
                                  v1426 = 0;
                                if ((_DWORD)v1722)
                                {
                                  if (v1722 <= 3)
                                    v1427 = v1722;
                                  else
                                    v1427 = 4;
                                  __asm { BR              X11 }
                                }
                                v1428 = v1426 + 1;
                                v1058 = v1688;
                                v423 = v1741;
                              }
                              if (v1428)
                              {
                                memcpy(v1396, v1397, v1720);
LABEL_2159:
                                *((_BYTE *)v1396 + v1720) = v1397[v1720];
                                v1441 = 2;
                                goto LABEL_2160;
                              }
LABEL_2157:
                              (*(void (**)(void *, _BYTE *, uint64_t))(v1634 + 32))(v1396, v1397, v1639);
                              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1635 + 32))(((unint64_t)v1396 + v1640) & v1590, (unint64_t)&v1397[v1640] & v1590, v1643);
                              if (!v1731)
                                *((_BYTE *)v1396 + v1722) = 0;
                              goto LABEL_2159;
                            }
LABEL_2061:
                            (*(void (**)(void *, _BYTE *, uint64_t))(v1634 + 32))(v1080, v1081, v1639);
                            (*(void (**)(unint64_t, unint64_t, uint64_t))(v1635 + 32))(((unint64_t)v1080 + v1640) & v1590, (unint64_t)&v1081[v1640] & v1590, v1643);
                            if (!v1731)
                              *((_BYTE *)v1080 + v1722) = 0;
                            goto LABEL_2063;
                          }
                        }
                        memcpy(v1073, v1074, v1718);
                        goto LABEL_1468;
                      }
LABEL_1454:
                      memcpy(v661, v662, v1673);
                      v1058 = v1688;
                      goto LABEL_2064;
                    }
                    if (v1731 < 2)
                      goto LABEL_1452;
                    v665 = (v1620 + v1018) & v1592;
                    v664 = v1636;
                    if (v1636 >= v1637)
                    {
                      v666 = v1639;
                    }
                    else
                    {
                      v665 = (v1640 + v665) & v1590;
                      v664 = v1637;
                      v666 = v1643;
                    }
                  }
                  if (__swift_getEnumTagSinglePayload(v665, v664, v666) < 2)
                    goto LABEL_1452;
                  goto LABEL_1454;
                case 6:
                  v496 = __dstb;
                  *__dstb = *(_QWORD *)v450;
                  v502 = 6;
                  goto LABEL_1023;
                case 7:
                  v496 = __dstb;
                  *__dstb = *(_QWORD *)v450;
                  v502 = 7;
                  goto LABEL_1023;
                case 8:
                  v506 = (const void *)v450;
                  v496 = __dstb;
                  if (__swift_getEnumTagSinglePayload(v450, 1, v429))
                  {
                    memcpy(__dstb, v506, v1745);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, const void *, uint64_t))(v1680 + 32))(__dstb, v506, v429);
                    __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v429);
                  }
                  v668 = ((unint64_t)__dstb + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v669 = ((unint64_t)v506 + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v670 = *(_OWORD *)v669;
                  v671 = *(_OWORD *)(v669 + 16);
                  *(_QWORD *)(v668 + 32) = *(_QWORD *)(v669 + 32);
                  *(_OWORD *)v668 = v670;
                  *(_OWORD *)(v668 + 16) = v671;
                  v672 = (v1757 + v668) & v1697;
                  v673 = (v1757 + v669) & v1697;
                  v498 = (uint64_t)v506;
                  if (v1638 >= 0x7FFFFFFF)
                  {
                    v675 = ~v1750;
                    v677 = (const void *)((v1642 + v673) & v1692);
                    v588 = a1;
                    if (__swift_getEnumTagSinglePayload((uint64_t)v677, v1632, v1644) <= 1)
                    {
                      v676 = (const void *)(v673 + 8);
LABEL_1074:
                      *(_BYTE *)v672 = *(_BYTE *)v673;
                      memcpy((void *)(v672 + 8), v676, 0x69uLL);
                      v678 = (void *)((v1642 + v672) & v675);
                      if (__swift_getEnumTagSinglePayload((uint64_t)v677, 1, v1644))
                      {
                        memcpy(v678, v677, v1716);
                      }
                      else
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v1626 + 32))(v678, v677, v1644);
                        __swift_storeEnumTagSinglePayload((uint64_t)v678, 0, 1, v1644);
                      }
                      v679 = v1718;
LABEL_1418:
                      v1050 = (_QWORD *)(((v672 | 7) + v679) & 0xFFFFFFFFFFFFF8);
                      v1051 = (_QWORD *)(((v673 | 7) + v679) & 0xFFFFFFFFFFFFFFF8);
                      *v1050 = *v1051;
                      v1052 = (_OWORD *)(((unint64_t)v1050 + 15) & 0xFFFFFFFFFFFFFFF8);
                      v1053 = (_OWORD *)(((unint64_t)v1051 + 15) & 0xFFFFFFFFFFFFFFF8);
                      *v1052 = *v1053;
                      v1054 = ((unint64_t)v1052 + 23) & 0xFFFFFFFFFFFFFFF8;
                      v1055 = ((unint64_t)v1053 + 23) & 0xFFFFFFFFFFFFFFF8;
                      v1056 = *(_OWORD *)v1055;
                      *(_QWORD *)(v1054 + 16) = *(_QWORD *)(v1055 + 16);
                      *(_OWORD *)v1054 = v1056;
                      *(_QWORD *)((v1054 + 31) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v1055 + 31) & 0xFFFFFFFFFFFFF8);
                      v502 = 8;
LABEL_1422:
                      v454 = v1594;
                      v513 = v1645;
LABEL_1423:
                      v451 = v1706;
LABEL_1424:
                      v450 = v498;
                      goto LABEL_2171;
                    }
                  }
                  else
                  {
                    v674 = *(_QWORD *)(((v1757 + v669) & v1697) + 0x10);
                    if (v674 >= 0xFFFFFFFF)
                      LODWORD(v674) = -1;
                    v675 = ~v1750;
                    v588 = a1;
                    if ((int)v674 - 1 < 0)
                    {
                      v676 = (const void *)(v673 + 8);
                      v677 = (const void *)((v1642 + v673) & v1692);
                      goto LABEL_1074;
                    }
                  }
                  v679 = v1718;
                  memcpy((void *)v672, (const void *)v673, v1718);
                  goto LABEL_1418;
                case 9:
                  v507 = (const void *)v450;
                  v496 = __dstb;
                  if (__swift_getEnumTagSinglePayload(v450, 1, v429))
                  {
                    memcpy(__dstb, v507, v1745);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, const void *, uint64_t))(v1680 + 32))(__dstb, v507, v429);
                    __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v429);
                  }
                  v680 = ((unint64_t)__dstb + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v1768 = (uint64_t)v507;
                  v681 = ((unint64_t)v507 + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v682 = *(_OWORD *)v681;
                  v683 = *(_OWORD *)(v681 + 16);
                  *(_QWORD *)(v680 + 32) = *(_QWORD *)(v681 + 32);
                  *(_OWORD *)v680 = v682;
                  *(_OWORD *)(v680 + 16) = v683;
                  v684 = (_OWORD *)((v680 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v685 = (_OWORD *)((v681 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v684 = *v685;
                  v686 = (void *)(((unint64_t)v684 + v1750 + 16) & v1692);
                  v687 = (const void *)(((unint64_t)v685 + v1750 + 16) & v1692);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v687, 1, v1644))
                  {
                    memcpy(v686, v687, v1716);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1626 + 32))(v686, v687, v1644);
                    __swift_storeEnumTagSinglePayload((uint64_t)v686, 0, 1, v1644);
                  }
                  v958 = (void *)(((unint64_t)v686 + v1605) & v1592);
                  v959 = (_BYTE *)(((unint64_t)v687 + v1605) & v1592);
                  if (v1731)
                  {
                    v960 = v1636;
                    if (v1636 >= v1637)
                    {
                      v961 = (uint64_t)v959;
                      v962 = v1639;
                    }
                    else
                    {
                      v961 = (unint64_t)&v959[v1640] & v1590;
                      v960 = v1637;
                      v962 = v1643;
                    }
                    v1015 = __swift_getEnumTagSinglePayload(v961, v960, v962);
                  }
                  else
                  {
                    if (!v959[v1722])
                      goto LABEL_1677;
                    v1000 = (v959[v1722] - 1) << v419;
                    if (v1722 > 3)
                      v1000 = 0;
                    if ((_DWORD)v1722)
                    {
                      if (v1722 <= 3)
                        v1001 = v1722;
                      else
                        v1001 = 4;
                      __asm { BR              X11 }
                    }
                    v1015 = v1000 + 1;
                  }
                  if (v1015)
                  {
                    memcpy(v958, v959, v1720);
                    goto LABEL_1679;
                  }
LABEL_1677:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1634 + 32))(v958, v959, v1639);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1635 + 32))(((unint64_t)v958 + v1640) & v1590, (unint64_t)&v959[v1640] & v1590, v1643);
                  if (!v1731)
                    *((_BYTE *)v958 + v1722) = 0;
LABEL_1679:
                  *((_BYTE *)v958 + v1720) = v959[v1720];
                  v1204 = (void *)(((unint64_t)v958 + v1720 + v1748 + 1) & v1592);
                  v1205 = (_BYTE *)((unint64_t)&v959[v1720 + 1 + v1748] & v1592);
                  if (v1731)
                  {
                    v1206 = v1636;
                    if (v1636 >= v1637)
                    {
                      v1207 = (unint64_t)&v959[v1720 + 1 + v1748] & v1592;
                      v1208 = v1639;
                    }
                    else
                    {
                      v1207 = (unint64_t)&v1205[v1640] & v1590;
                      v1206 = v1637;
                      v1208 = v1643;
                    }
                    v1211 = __swift_getEnumTagSinglePayload(v1207, v1206, v1208);
                  }
                  else
                  {
                    if (!v1205[v1722])
                      goto LABEL_1724;
                    v1209 = (v1205[v1722] - 1) << v419;
                    if (v1722 > 3)
                      v1209 = 0;
                    if ((_DWORD)v1722)
                    {
                      if (v1722 <= 3)
                        v1210 = v1722;
                      else
                        v1210 = 4;
                      __asm { BR              X11 }
                    }
                    v1211 = v1209 + 1;
                  }
                  if (v1211)
                  {
                    memcpy(v1204, v1205, v1720);
                    goto LABEL_1726;
                  }
LABEL_1724:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1634 + 32))(v1204, v1205, v1639);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1635 + 32))(((unint64_t)v1204 + v1640) & v1590, (unint64_t)&v1205[v1640] & v1590, v1643);
                  if (!v1731)
                    *((_BYTE *)v1204 + v1722) = 0;
LABEL_1726:
                  v1220 = (_QWORD *)(((unint64_t)v1204 + v1678) & v1774);
                  v1221 = (uint64_t *)((unint64_t)&v1205[v1678] & v1774);
                  if ((v1637 & 0x80000000) != 0)
                  {
                    v1223 = __swift_getEnumTagSinglePayload(((unint64_t)v1221 + v1625) & v1590, v1637, v1643);
                  }
                  else
                  {
                    v1222 = *v1221;
                    if ((unint64_t)*v1221 >= 0xFFFFFFFF)
                      LODWORD(v1222) = -1;
                    v1223 = v1222 + 1;
                  }
                  if (v1223)
                  {
                    memcpy(v1220, v1221, v1714);
                  }
                  else
                  {
                    *v1220 = *v1221;
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v1635 + 32))(((unint64_t)v1220 + v1625) & v1590, ((unint64_t)v1221 + v1625) & v1590, v1643);
                  }
                  v588 = a1;
                  v1224 = (_BYTE *)(((unint64_t)v1220 + v1677) & v1697);
                  v1225 = (_BYTE *)(((unint64_t)v1221 + v1677) & v1697);
                  if (v1638 >= 0x7FFFFFFF)
                  {
                    v1227 = ~v1750;
                    v1229 = (unint64_t)&v1225[v1642] & v1692;
                    if (__swift_getEnumTagSinglePayload(v1229, v1632, v1644) <= 1)
                    {
                      v1228 = v1225 + 8;
                      goto LABEL_1741;
                    }
                  }
                  else
                  {
                    v1226 = *(_QWORD *)((((unint64_t)v1221 + v1677) & v1697) + 0x10);
                    if (v1226 >= 0xFFFFFFFF)
                      LODWORD(v1226) = -1;
                    v1227 = ~v1750;
                    if ((int)v1226 - 1 < 0)
                    {
                      v1228 = v1225 + 8;
                      v1229 = (unint64_t)&v1225[v1642] & v1692;
LABEL_1741:
                      *v1224 = *v1225;
                      memcpy(v1224 + 8, v1228, 0x69uLL);
                      v1230 = (unint64_t)&v1224[v1642] & v1227;
                      if (!__swift_getEnumTagSinglePayload(v1229, 1, v1644))
                      {
                        (*(void (**)(uint64_t, uint64_t, uint64_t))(v1626 + 32))(v1230, v1229, v1644);
                        __swift_storeEnumTagSinglePayload(v1230, 0, 1, v1644);
LABEL_1745:
                        v502 = 9;
LABEL_1999:
                        v454 = v1594;
                        v513 = v1645;
LABEL_2000:
                        v451 = v1706;
                        v450 = v1768;
                        goto LABEL_2171;
                      }
                      v1231 = (void *)v1230;
                      v1232 = (const void *)v1229;
                      v1233 = v1716;
LABEL_1744:
                      memcpy(v1231, v1232, v1233);
                      goto LABEL_1745;
                    }
                  }
                  v1231 = v1224;
                  v1232 = v1225;
                  v1233 = v1718;
                  goto LABEL_1744;
                case 0xA:
                  v508 = *(_OWORD *)v450;
                  v509 = *(_OWORD *)(v450 + 16);
                  v496 = __dstb;
                  __dstb[4] = *(_QWORD *)(v450 + 32);
                  *(_OWORD *)__dstb = v508;
                  *((_OWORD *)__dstb + 1) = v509;
                  v510 = (void *)(((unint64_t)__dstb + v1724) & v1708);
                  v498 = v450;
                  v511 = (const void *)((v1724 + v450) & v1708);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v511, 1, v429))
                  {
                    v512 = v1745;
                    memcpy(v510, v511, v1745);
                    v513 = v1645;
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1680 + 32))(v510, v511, v429);
                    __swift_storeEnumTagSinglePayload((uint64_t)v510, 0, 1, v429);
                    v513 = v1645;
                    v512 = v1745;
                  }
                  v588 = a1;
                  *((_BYTE *)v510 + v512) = *((_BYTE *)v511 + v512);
                  v688 = ((unint64_t)v510 + v512) & 0xFFFFFFFFFFFFFFF8;
                  v689 = ((unint64_t)v511 + v512) & 0xFFFFFFFFFFFFFFF8;
                  *(_OWORD *)(v688 + 8) = *(_OWORD *)(v689 + 8);
                  v690 = (_OWORD *)((v688 + 31) & 0xFFFFFFFFFFFFFFF8);
                  v691 = (_OWORD *)((v689 + 31) & 0xFFFFFFFFFFFFFFF8);
                  *v690 = *v691;
                  *(_OWORD *)(((unint64_t)v690 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v691
                                                                                               + 23) & 0xFFFFFFFFFFFFF8);
                  v502 = 10;
                  goto LABEL_1423;
                case 0xB:
                  v496 = __dstb;
                  *__dstb = *(_QWORD *)v450;
                  v502 = 11;
                  goto LABEL_1023;
                case 0xC:
                  v514 = (const void *)v450;
                  v496 = __dstb;
                  if (__swift_getEnumTagSinglePayload(v450, 1, v429))
                  {
                    memcpy(__dstb, v514, v1745);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, const void *, uint64_t))(v1680 + 32))(__dstb, v514, v429);
                    __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v429);
                  }
                  v692 = ((unint64_t)__dstb + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v498 = (uint64_t)v514;
                  v693 = ((unint64_t)v514 + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v694 = *(_OWORD *)v693;
                  v695 = *(_OWORD *)(v693 + 16);
                  *(_QWORD *)(v692 + 32) = *(_QWORD *)(v693 + 32);
                  *(_OWORD *)v692 = v694;
                  *(_OWORD *)(v692 + 16) = v695;
                  v696 = (_OWORD *)((v1717 + 40 + v692) & v1763);
                  v697 = (_OWORD *)((v1717 + 40 + v693) & v1763);
                  if (v434 > 0x7FFFFFFE)
                  {
                    v701 = v434;
                    v699 = (_OWORD *)(((unint64_t)v697 + 23) & 0xFFFFFFFFFFFFFFF8);
                    v700 = ((unint64_t)v699 + 23) & 0xFFFFFFFFFFFFFFF8;
                    v588 = a1;
                    if (!__swift_getEnumTagSinglePayload((v1717 + v700 + 33) & v1690, v701, v1623))
                    {
LABEL_1090:
                      *v696 = *v697;
                      v702 = (_OWORD *)(((unint64_t)v696 + 23) & 0xFFFFFFFFFFFFFFF8);
                      *v702 = *v699;
                      v703 = ((unint64_t)v702 + 23) & 0xFFFFFFFFFFFFFFF8;
                      *(_OWORD *)v703 = *(_OWORD *)v700;
                      *(_BYTE *)(v703 + 16) = *(_BYTE *)(v700 + 16);
                      v704 = ((unint64_t)v702 + 47) & 0xFFFFFFFFFFFFFFF8;
                      v705 = ((unint64_t)v699 + 47) & 0xFFFFFFFFFFFFFFF8;
                      *(_QWORD *)v704 = *(_QWORD *)v705;
                      *(_BYTE *)(v704 + 8) = *(_BYTE *)(v705 + 8);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1712 + 32))((v1717 + 9 + v704) & v1690, (v1717 + 9 + v705) & v1690, v1623);
LABEL_1091:
                      *(_QWORD *)(((unint64_t)v696 + v1761 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v697 + v1761 + 7) & 0xFFFFFFFFFFFFF8);
                      v502 = 12;
                      goto LABEL_1422;
                    }
                  }
                  else
                  {
                    v698 = *(_QWORD *)(((v1717 + 40 + v693) & v1763) + 8);
                    if (v698 >= 0xFFFFFFFF)
                      LODWORD(v698) = -1;
                    v588 = a1;
                    if ((v698 + 1) <= 1)
                    {
                      v699 = (_OWORD *)(((unint64_t)v697 + 23) & 0xFFFFFFFFFFFFFFF8);
                      v700 = ((unint64_t)v699 + 23) & 0xFFFFFFFFFFFFFFF8;
                      goto LABEL_1090;
                    }
                  }
                  memcpy(v696, v697, v1761);
                  goto LABEL_1091;
                case 0xD:
                  v515 = *(_OWORD *)v450;
                  v516 = *(_OWORD *)(v450 + 16);
                  v496 = __dstb;
                  __dstb[4] = *(_QWORD *)(v450 + 32);
                  *(_OWORD *)__dstb = v515;
                  *((_OWORD *)__dstb + 1) = v516;
                  v517 = (void *)(((unint64_t)__dstb + v1724) & v1708);
                  v498 = v450;
                  v518 = (const void *)((v1724 + v450) & v1708);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v518, 1, v429))
                  {
                    memcpy(v517, v518, v1745);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1680 + 32))(v517, v518, v429);
                    __swift_storeEnumTagSinglePayload((uint64_t)v517, 0, 1, v429);
                  }
                  v706 = ((unint64_t)v517 + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v707 = ((unint64_t)v518 + v1739) & 0xFFFFFFFFFFFFFFF8;
                  *(_OWORD *)v706 = *(_OWORD *)v707;
                  *(_BYTE *)(v706 + 16) = *(_BYTE *)(v707 + 16);
                  v708 = (_BYTE *)((v1601 + v706) & v1697);
                  v709 = (_BYTE *)((v1601 + v707) & v1697);
                  if (v1638 >= 0x7FFFFFFF)
                  {
                    v711 = ~v1750;
                    v713 = (const void *)((unint64_t)&v709[v1642] & v1692);
                    v588 = a1;
                    if (__swift_getEnumTagSinglePayload((uint64_t)v713, v1632, v1644) <= 1)
                    {
                      v712 = v709 + 8;
LABEL_1100:
                      *v708 = *v709;
                      memcpy(v708 + 8, v712, 0x69uLL);
                      v714 = (void *)((unint64_t)&v708[v1642] & v711);
                      if (__swift_getEnumTagSinglePayload((uint64_t)v713, 1, v1644))
                      {
                        memcpy(v714, v713, v1716);
                      }
                      else
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v1626 + 32))(v714, v713, v1644);
                        __swift_storeEnumTagSinglePayload((uint64_t)v714, 0, 1, v1644);
                      }
                      v715 = v1718;
LABEL_1421:
                      v708[v715] = v709[v715];
                      v502 = 13;
                      goto LABEL_1422;
                    }
                  }
                  else
                  {
                    v710 = *(_QWORD *)(((v1601 + v707) & v1697) + 0x10);
                    if (v710 >= 0xFFFFFFFF)
                      LODWORD(v710) = -1;
                    v711 = ~v1750;
                    v588 = a1;
                    if ((int)v710 - 1 < 0)
                    {
                      v712 = v709 + 8;
                      v713 = (const void *)((unint64_t)&v709[v1642] & v1692);
                      goto LABEL_1100;
                    }
                  }
                  v715 = v1718;
                  memcpy(v708, v709, v1718);
                  goto LABEL_1421;
                case 0xE:
                  v496 = __dstb;
                  *__dstb = *(_QWORD *)v450;
                  v502 = 14;
                  goto LABEL_1023;
                case 0xF:
                  v496 = __dstb;
                  *__dstb = *(_QWORD *)v450;
                  v502 = 15;
                  goto LABEL_1023;
                case 0x10:
                  v519 = *(_OWORD *)v450;
                  v520 = *(_OWORD *)(v450 + 16);
                  v496 = __dstb;
                  __dstb[4] = *(_QWORD *)(v450 + 32);
                  *(_OWORD *)__dstb = v519;
                  *((_OWORD *)__dstb + 1) = v520;
                  v521 = (void *)(((unint64_t)__dstb + v1724) & v1708);
                  v498 = v450;
                  v522 = (const void *)((v1724 + v450) & v1708);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v522, 1, v429))
                  {
                    memcpy(v521, v522, v1745);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1680 + 32))(v521, v522, v429);
                    __swift_storeEnumTagSinglePayload((uint64_t)v521, 0, 1, v429);
                  }
                  v513 = v1645;
                  v588 = a1;
                  v716 = (_OWORD *)(((unint64_t)v521 + v1739) & 0xFFFFFFFFFFFFFFF8);
                  v717 = (_OWORD *)(((unint64_t)v522 + v1739) & 0xFFFFFFFFFFFFFFF8);
                  *v716 = *v717;
                  v718 = (_OWORD *)(((unint64_t)v716 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v719 = (_OWORD *)(((unint64_t)v717 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v718 = *v719;
                  v720 = (_OWORD *)(((unint64_t)v718 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v721 = (_OWORD *)(((unint64_t)v719 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v720 = *v721;
                  v722 = ((unint64_t)v720 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v723 = ((unint64_t)v721 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v724 = *(_OWORD *)v723;
                  v725 = *(_OWORD *)(v723 + 16);
                  *(_QWORD *)(v722 + 32) = *(_QWORD *)(v723 + 32);
                  *(_OWORD *)v722 = v724;
                  *(_OWORD *)(v722 + 16) = v725;
                  v726 = (v722 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v727 = (v723 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v728 = *(_OWORD *)v727;
                  v729 = *(_OWORD *)(v727 + 16);
                  *(_QWORD *)(v726 + 32) = *(_QWORD *)(v727 + 32);
                  *(_OWORD *)v726 = v728;
                  *(_OWORD *)(v726 + 16) = v729;
                  v730 = (v726 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v731 = (v727 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v732 = *(_OWORD *)v731;
                  v733 = *(_OWORD *)(v731 + 16);
                  *(_QWORD *)(v730 + 32) = *(_QWORD *)(v731 + 32);
                  *(_OWORD *)v730 = v732;
                  *(_OWORD *)(v730 + 16) = v733;
                  *(_BYTE *)(v730 + 40) = *(_BYTE *)(v731 + 40);
                  v502 = 16;
                  goto LABEL_1423;
                case 0x11:
                  v523 = v419;
                  v524 = *(_OWORD *)v450;
                  v525 = *(_OWORD *)(v450 + 16);
                  v496 = __dstb;
                  __dstb[4] = *(_QWORD *)(v450 + 32);
                  *(_OWORD *)__dstb = v524;
                  *((_OWORD *)__dstb + 1) = v525;
                  v526 = (void *)(((unint64_t)__dstb + v1724) & v1708);
                  v1768 = v450;
                  v527 = (const void *)((v1724 + v450) & v1708);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v527, 1, v429))
                  {
                    memcpy(v526, v527, v1745);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1680 + 32))(v526, v527, v429);
                    __swift_storeEnumTagSinglePayload((uint64_t)v526, 0, 1, v429);
                  }
                  v734 = (_OWORD *)(((unint64_t)v526 + v1739) & 0xFFFFFFFFFFFFFFF8);
                  v735 = (_OWORD *)(((unint64_t)v527 + v1739) & 0xFFFFFFFFFFFFFFF8);
                  *v734 = *v735;
                  v736 = (_OWORD *)(((unint64_t)v734 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v737 = (_OWORD *)(((unint64_t)v735 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v736 = *v737;
                  v738 = (_OWORD *)(((unint64_t)v736 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v739 = (_OWORD *)(((unint64_t)v737 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v738 = *v739;
                  v740 = (_OWORD *)(((unint64_t)v738 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v741 = (_OWORD *)(((unint64_t)v739 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v740 = *v741;
                  v742 = ((unint64_t)v740 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v743 = ((unint64_t)v741 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v744 = *(_OWORD *)v743;
                  v745 = *(_OWORD *)(v743 + 16);
                  *(_QWORD *)(v742 + 32) = *(_QWORD *)(v743 + 32);
                  *(_OWORD *)v742 = v744;
                  *(_OWORD *)(v742 + 16) = v745;
                  v746 = (v742 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v747 = (v743 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v748 = *(_OWORD *)v747;
                  v749 = *(_OWORD *)(v747 + 16);
                  *(_QWORD *)(v746 + 32) = *(_QWORD *)(v747 + 32);
                  *(_OWORD *)v746 = v748;
                  *(_OWORD *)(v746 + 16) = v749;
                  v750 = (v746 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v751 = (v747 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v752 = *(_OWORD *)v751;
                  v753 = *(_OWORD *)(v751 + 16);
                  *(_QWORD *)(v750 + 32) = *(_QWORD *)(v751 + 32);
                  *(_OWORD *)v750 = v752;
                  *(_OWORD *)(v750 + 16) = v753;
                  v754 = (void *)((v1603 + v750) & v1592);
                  v755 = (_BYTE *)((v1603 + v751) & v1592);
                  if (v1731)
                  {
                    v756 = v1636;
                    if (v1636 >= v1637)
                    {
                      v757 = (v1603 + v751) & v1592;
                      v758 = v1639;
                    }
                    else
                    {
                      v757 = (unint64_t)&v755[v1640] & v1590;
                      v756 = v1637;
                      v758 = v1643;
                    }
                    v1011 = __swift_getEnumTagSinglePayload(v757, v756, v758);
                    v513 = v1645;
                    v588 = a1;
                  }
                  else
                  {
                    v513 = v1645;
                    v588 = a1;
                    if (!v755[v1722])
                      goto LABEL_1749;
                    v963 = (v755[v1722] - 1) << v523;
                    if (v1722 > 3)
                      v963 = 0;
                    if ((_DWORD)v1722)
                    {
                      if (v1722 <= 3)
                        v964 = v1722;
                      else
                        v964 = 4;
                      __asm { BR              X11 }
                    }
                    v1011 = v963 + 1;
                  }
                  if (v1011)
                  {
                    memcpy(v754, v755, v1720);
                    goto LABEL_1751;
                  }
LABEL_1749:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1634 + 32))(v754, v755, v1639);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1635 + 32))(((unint64_t)v754 + v1640) & v1590, (unint64_t)&v755[v1640] & v1590, v1643);
                  if (!v1731)
                    *((_BYTE *)v754 + v1722) = 0;
LABEL_1751:
                  v1234 = (void *)(((unint64_t)v754 + v1622) & v1592);
                  v1235 = (_BYTE *)((unint64_t)&v755[v1622] & v1592);
                  if (v1731)
                  {
                    v1236 = v1636;
                    if (v1636 >= v1637)
                    {
                      v1237 = (uint64_t)v1235;
                      v1238 = v1639;
                    }
                    else
                    {
                      v1237 = (unint64_t)&v1235[v1640] & v1590;
                      v1236 = v1637;
                      v1238 = v1643;
                    }
                    v1241 = __swift_getEnumTagSinglePayload(v1237, v1236, v1238);
                  }
                  else
                  {
                    if (!v1235[v1722])
                      goto LABEL_1927;
                    v1239 = (v1235[v1722] - 1) << v523;
                    if (v1722 > 3)
                      v1239 = 0;
                    if ((_DWORD)v1722)
                    {
                      if (v1722 <= 3)
                        v1240 = v1722;
                      else
                        v1240 = 4;
                      __asm { BR              X11 }
                    }
                    v1241 = v1239 + 1;
                  }
                  if (v1241)
                  {
                    memcpy(v1234, v1235, v1720);
                    goto LABEL_1929;
                  }
LABEL_1927:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1634 + 32))(v1234, v1235, v1639);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1635 + 32))(((unint64_t)v1234 + v1640) & v1590, (unint64_t)&v1235[v1640] & v1590, v1643);
                  if (!v1731)
                    *((_BYTE *)v1234 + v1722) = 0;
LABEL_1929:
                  v502 = 17;
                  goto LABEL_2000;
                case 0x12:
                  v496 = __dstb;
                  *__dstb = *(_QWORD *)v450;
                  v502 = 18;
                  goto LABEL_1023;
                case 0x13:
                  v528 = (const void *)v450;
                  v496 = __dstb;
                  if (__swift_getEnumTagSinglePayload(v450, 1, v429))
                  {
                    memcpy(__dstb, v528, v1745);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, const void *, uint64_t))(v1680 + 32))(__dstb, v528, v429);
                    __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v429);
                  }
                  v513 = v1645;
                  v588 = a1;
                  v759 = ((unint64_t)__dstb + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v760 = ((unint64_t)v528 + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v761 = *(_OWORD *)v760;
                  v762 = *(_OWORD *)(v760 + 16);
                  *(_QWORD *)(v759 + 32) = *(_QWORD *)(v760 + 32);
                  *(_OWORD *)v759 = v761;
                  *(_OWORD *)(v759 + 16) = v762;
                  v763 = (_OWORD *)((v759 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v764 = (_OWORD *)((v760 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v763 = *v764;
                  v765 = (_OWORD *)(((unint64_t)v763 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v766 = (_OWORD *)(((unint64_t)v764 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v765 = *v766;
                  *(_QWORD *)(((unint64_t)v765 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v766
                                                                                               + 23) & 0xFFFFFFFFFFFFF8);
                  v502 = 19;
                  goto LABEL_1166;
                case 0x14:
                  v529 = (const void *)v450;
                  if (__swift_getEnumTagSinglePayload(v450, 1, v429))
                  {
                    memcpy(__dstb, v529, v1745);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, const void *, uint64_t))(v1680 + 32))(__dstb, v529, v429);
                    __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v429);
                  }
                  v767 = ((unint64_t)__dstb + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v768 = ((unint64_t)v529 + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v769 = *(_OWORD *)v768;
                  v770 = *(_OWORD *)(v768 + 16);
                  *(_QWORD *)(v767 + 32) = *(_QWORD *)(v768 + 32);
                  *(_OWORD *)v767 = v769;
                  *(_OWORD *)(v767 + 16) = v770;
                  v771 = (void *)((v1743 + 40 + v767) & v1710);
                  v772 = (const void *)((v1743 + 40 + v768) & v1710);
                  v773 = v1642;
                  v1769 = (uint64_t)v529;
                  if (v1630 == v1621)
                  {
                    v774 = v1719;
                    if (v1719 < 2)
                      goto LABEL_1484;
                    v775 = (v1743 + 40 + v768) & v1710;
                    v776 = v429;
                  }
                  else
                  {
                    v777 = ((unint64_t)v772 + v1739) & 0xFFFFFFFFFFFFFFF8;
                    if (v1621 == 0x7FFFFFFF)
                    {
                      if (*(_QWORD *)(v777 + 24) >= 0xFFFFFFFFuLL)
                        goto LABEL_1484;
                      goto LABEL_1486;
                    }
                    v1022 = (v1757
                           + ((((((((v777 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                             + 47) & 0xFFFFFFFFFFFFFFF8)) & v1697;
                    if (v1596 == v1621)
                    {
                      if (v1638 > 0x7FFFFFFE)
                      {
                        v1088 = __swift_getEnumTagSinglePayload((v1642 + v1022) & v1692, v1632, v1644);
                        if (v1088 < 2)
                          goto LABEL_1484;
                        v1025 = v1088 - 1;
                      }
                      else
                      {
                        v1023 = *(_QWORD *)(v1022 + 16);
                        if (v1023 >= 0xFFFFFFFF)
                          LODWORD(v1023) = -1;
                        v1024 = v1023 - 1;
                        if (v1024 < 0)
                          v1024 = -1;
                        v1025 = v1024 + 1;
                      }
                      if (v1025 < 2)
                      {
LABEL_1484:
                        if (__swift_getEnumTagSinglePayload((uint64_t)v772, 1, v429))
                        {
                          memcpy(v771, v772, v1745);
                        }
                        else
                        {
                          (*(void (**)(void *, const void *, uint64_t))(v1680 + 32))(v771, v772, v429);
                          __swift_storeEnumTagSinglePayload((uint64_t)v771, 0, 1, v429);
                        }
                        v1092 = ((unint64_t)v771 + v1739) & 0xFFFFFFFFFFFFFFF8;
                        v1093 = ((unint64_t)v772 + v1739) & 0xFFFFFFFFFFFFFFF8;
                        v1094 = *(_OWORD *)v1093;
                        v1095 = *(_OWORD *)(v1093 + 16);
                        *(_QWORD *)(v1092 + 32) = *(_QWORD *)(v1093 + 32);
                        *(_OWORD *)v1092 = v1094;
                        *(_OWORD *)(v1092 + 16) = v1095;
                        v1096 = (_OWORD *)((v1092 + 47) & 0xFFFFFFFFFFFFFFF8);
                        v1097 = (_OWORD *)((v1093 + 47) & 0xFFFFFFFFFFFFFFF8);
                        *v1096 = *v1097;
                        v1098 = (_OWORD *)(((unint64_t)v1096 + 23) & 0xFFFFFFFFFFFFFFF8);
                        v1099 = (_OWORD *)(((unint64_t)v1097 + 23) & 0xFFFFFFFFFFFFFFF8);
                        *v1098 = *v1099;
                        v1100 = ((unint64_t)v1098 + 23) & 0xFFFFFFFFFFFFFFF8;
                        v1101 = ((unint64_t)v1099 + 23) & 0xFFFFFFFFFFFFFFF8;
                        v1102 = *(_OWORD *)v1101;
                        v1103 = *(_OWORD *)(v1101 + 16);
                        *(_QWORD *)(v1100 + 32) = *(_QWORD *)(v1101 + 32);
                        *(_OWORD *)v1100 = v1102;
                        *(_OWORD *)(v1100 + 16) = v1103;
                        v1104 = (v1100 + 47) & 0xFFFFFFFFFFFFFFF8;
                        v1105 = (v1101 + 47) & 0xFFFFFFFFFFFFFFF8;
                        v1106 = *(_OWORD *)v1105;
                        v1107 = *(_OWORD *)(v1105 + 16);
                        *(_QWORD *)(v1104 + 32) = *(_QWORD *)(v1105 + 32);
                        *(_OWORD *)v1104 = v1106;
                        *(_OWORD *)(v1104 + 16) = v1107;
                        v1108 = (_BYTE *)((v1757 + v1104) & v1697);
                        v1109 = (_BYTE *)((v1757 + v1105) & v1697);
                        if (v1638 >= 0x7FFFFFFF)
                        {
                          v1113 = (const void *)((unint64_t)&v1109[v1642] & v1692);
                          if (__swift_getEnumTagSinglePayload((uint64_t)v1113, v1632, v1644) <= 1)
                          {
                            v1111 = v1109 + 8;
                            v1112 = ~v1750;
                            goto LABEL_1495;
                          }
                        }
                        else
                        {
                          v1110 = *(_QWORD *)(((v1757 + v1105) & v1697) + 0x10);
                          if (v1110 >= 0xFFFFFFFF)
                            LODWORD(v1110) = -1;
                          if ((int)v1110 - 1 < 0)
                          {
                            v1111 = v1109 + 8;
                            v1112 = ~v1750;
                            v1113 = (const void *)((unint64_t)&v1109[v1642] & v1692);
LABEL_1495:
                            *v1108 = *v1109;
                            memcpy(v1108 + 8, v1111, 0x69uLL);
                            v1114 = (void *)((unint64_t)&v1108[v1642] & v1112);
                            if (__swift_getEnumTagSinglePayload((uint64_t)v1113, 1, v1644))
                            {
                              memcpy(v1114, v1113, v1716);
                            }
                            else
                            {
                              (*(void (**)(void *, const void *, uint64_t))(v1626 + 32))(v1114, v1113, v1644);
                              __swift_storeEnumTagSinglePayload((uint64_t)v1114, 0, 1, v1644);
                            }
                            v1115 = v1718;
                            v773 = v1642;
LABEL_1500:
                            v1116 = (void *)((unint64_t)&v1108[v1748 + v1115] & v1592);
                            v1117 = (_BYTE *)((unint64_t)&v1109[v1748 + v1115] & v1592);
                            if (v1731)
                            {
                              v1118 = v1637;
                              if (v1636 >= v1637)
                              {
                                v1119 = (uint64_t)v1117;
                                v1118 = v1636;
                                v1120 = v1639;
                              }
                              else
                              {
                                v1119 = (unint64_t)&v1117[v1640] & v1590;
                                v1120 = v1643;
                              }
                              v1123 = __swift_getEnumTagSinglePayload(v1119, v1118, v1120);
                            }
                            else
                            {
                              if (!v1117[v1722])
                                goto LABEL_2101;
                              v1121 = (v1117[v1722] - 1) << v419;
                              if (v1722 > 3)
                                v1121 = 0;
                              if ((_DWORD)v1722)
                              {
                                if (v1722 <= 3)
                                  v1122 = v1722;
                                else
                                  v1122 = 4;
                                __asm { BR              X11 }
                              }
                              v1123 = v1121 + 1;
                            }
                            if (v1123)
                            {
                              v1089 = v1116;
                              v1090 = v1117;
                              v1091 = v1720;
                              goto LABEL_2100;
                            }
LABEL_2101:
                            (*(void (**)(void *, _BYTE *, uint64_t))(v1634 + 32))(v1116, v1117, v1639);
                            (*(void (**)(unint64_t, unint64_t, uint64_t))(v1635 + 32))(((unint64_t)v1116 + v1640) & v1590, (unint64_t)&v1117[v1640] & v1590, v1643);
                            if (!v1731)
                              *((_BYTE *)v1116 + v1722) = 0;
LABEL_2103:
                            v1429 = (_QWORD *)(((unint64_t)v771 + v1611) & 0xFFFFFFFFFFFFFFF8);
                            v1430 = (_QWORD *)(((unint64_t)v772 + v1611) & 0xFFFFFFFFFFFFFFF8);
                            *v1429 = *v1430;
                            v1431 = (_BYTE *)(((unint64_t)v1429 + v1616) & v1697);
                            v1432 = (_BYTE *)(((unint64_t)v1430 + v1616) & v1697);
                            if (v1638 >= 0x7FFFFFFF)
                            {
                              v1434 = ~v1750;
                              v1436 = (unint64_t)&v1432[v773] & v1692;
                              v496 = __dstb;
                              if (__swift_getEnumTagSinglePayload(v1436, v1632, v1644) <= 1)
                              {
                                v1435 = v1432 + 8;
                                goto LABEL_2110;
                              }
                            }
                            else
                            {
                              v1433 = *(_QWORD *)((((unint64_t)v1430 + v1616) & v1697) + 0x10);
                              if (v1433 >= 0xFFFFFFFF)
                                LODWORD(v1433) = -1;
                              v1434 = ~v1750;
                              v496 = __dstb;
                              if ((int)v1433 - 1 < 0)
                              {
                                v1435 = v1432 + 8;
                                v1436 = (unint64_t)&v1432[v773] & v1692;
LABEL_2110:
                                *v1431 = *v1432;
                                memcpy(v1431 + 8, v1435, 0x69uLL);
                                v1437 = (unint64_t)&v1431[v773] & v1434;
                                if (!__swift_getEnumTagSinglePayload(v1436, 1, v1644))
                                {
                                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1626 + 32))(v1437, v1436, v1644);
                                  __swift_storeEnumTagSinglePayload(v1437, 0, 1, v1644);
                                  goto LABEL_2114;
                                }
                                v1438 = (void *)v1437;
                                v1439 = (const void *)v1436;
                                v1440 = v1716;
LABEL_2113:
                                memcpy(v1438, v1439, v1440);
LABEL_2114:
                                v502 = 20;
                                v454 = v1594;
                                v513 = v1645;
                                v451 = v1706;
                                v588 = a1;
                                v450 = v1769;
                                goto LABEL_2171;
                              }
                            }
                            v1438 = v1431;
                            v1439 = v1432;
                            v1440 = v1718;
                            goto LABEL_2113;
                          }
                        }
                        v1115 = v1718;
                        memcpy(v1108, v1109, v1718);
                        goto LABEL_1500;
                      }
LABEL_1486:
                      v1089 = v771;
                      v1090 = v772;
                      v1091 = v1595;
LABEL_2100:
                      memcpy(v1089, v1090, v1091);
                      goto LABEL_2103;
                    }
                    if (v1731 < 2)
                      goto LABEL_1484;
                    v775 = (v1620 + v1022) & v1592;
                    v774 = v1636;
                    if (v1636 >= v1637)
                    {
                      v776 = v1639;
                    }
                    else
                    {
                      v775 = (v1640 + v775) & v1590;
                      v774 = v1637;
                      v776 = v1643;
                    }
                  }
                  if (__swift_getEnumTagSinglePayload(v775, v774, v776) < 2)
                    goto LABEL_1484;
                  goto LABEL_1486;
                case 0x15:
                  v528 = (const void *)v450;
                  v496 = __dstb;
                  if (__swift_getEnumTagSinglePayload(v450, 1, v429))
                  {
                    memcpy(__dstb, v528, v1745);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, const void *, uint64_t))(v1680 + 32))(__dstb, v528, v429);
                    __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v429);
                  }
                  v513 = v1645;
                  v588 = a1;
                  v778 = ((unint64_t)__dstb + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v779 = ((unint64_t)v528 + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v780 = *(_OWORD *)v779;
                  v781 = *(_OWORD *)(v779 + 16);
                  *(_QWORD *)(v778 + 32) = *(_QWORD *)(v779 + 32);
                  *(_OWORD *)v778 = v780;
                  *(_OWORD *)(v778 + 16) = v781;
                  v782 = (v778 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v783 = (v779 + 47) & 0xFFFFFFFFFFFFFFF8;
                  *(_OWORD *)v782 = *(_OWORD *)v783;
                  *(_BYTE *)(v782 + 16) = *(_BYTE *)(v783 + 16);
                  v502 = 21;
                  goto LABEL_1166;
                case 0x16:
                  v530 = (const void *)v450;
                  if (__swift_getEnumTagSinglePayload(v450, 1, v429))
                  {
                    memcpy(__dstb, v530, v1745);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, const void *, uint64_t))(v1680 + 32))(__dstb, v530, v429);
                    __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v429);
                  }
                  v784 = ((unint64_t)__dstb + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v785 = (uint64_t)v530;
                  v786 = ((unint64_t)v530 + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v787 = *(_OWORD *)v786;
                  v788 = *(_OWORD *)(v786 + 16);
                  *(_QWORD *)(v784 + 32) = *(_QWORD *)(v786 + 32);
                  *(_OWORD *)v784 = v787;
                  *(_OWORD *)(v784 + 16) = v788;
                  v789 = (_OWORD *)((v784 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v790 = (_OWORD *)((v786 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v789 = *v790;
                  v791 = (_QWORD *)(((unint64_t)v789 + 23) & 0xFFFFFFFFFFFFF8);
                  v792 = (_QWORD *)(((unint64_t)v790 + 23) & 0xFFFFFFFFFFFFF8);
                  *v791 = *v792;
                  v793 = (_OWORD *)(((unint64_t)v791 + 15) & 0xFFFFFFFFFFFFFFF8);
                  v794 = (_OWORD *)(((unint64_t)v792 + 15) & 0xFFFFFFFFFFFFFFF8);
                  *v793 = *v794;
                  v795 = (_OWORD *)(((unint64_t)v793 + v1676) & v1763);
                  v796 = (_OWORD *)(((unint64_t)v794 + v1676) & v1763);
                  if (v91 > 0x7FFFFFFE)
                  {
                    v799 = (_OWORD *)(((unint64_t)v796 + 23) & 0xFFFFFFFFFFFFFFF8);
                    v800 = ((unint64_t)v799 + 23) & 0xFFFFFFFFFFFFFFF8;
                    v798 = ~v1752;
                    if (!__swift_getEnumTagSinglePayload((v1717 + v800 + 33) & v1690, v91, v1623))
                      goto LABEL_1130;
                  }
                  else
                  {
                    v797 = *(_QWORD *)((((unint64_t)v794 + v1676) & v1763) + 8);
                    if (v797 >= 0xFFFFFFFF)
                      LODWORD(v797) = -1;
                    v798 = ~v1752;
                    if ((v797 + 1) <= 1)
                    {
                      v799 = (_OWORD *)(((unint64_t)v796 + 23) & 0xFFFFFFFFFFFFFFF8);
                      v800 = ((unint64_t)v799 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_1130:
                      *v795 = *v796;
                      v802 = (_OWORD *)(((unint64_t)v795 + 23) & 0xFFFFFFFFFFFFFFF8);
                      *v802 = *v799;
                      v803 = ((unint64_t)v802 + 23) & 0xFFFFFFFFFFFFFFF8;
                      *(_OWORD *)v803 = *(_OWORD *)v800;
                      *(_BYTE *)(v803 + 16) = *(_BYTE *)(v800 + 16);
                      v804 = ((unint64_t)v802 + 47) & 0xFFFFFFFFFFFFFFF8;
                      v805 = ((unint64_t)v799 + 47) & 0xFFFFFFFFFFFFFFF8;
                      *(_QWORD *)v804 = *(_QWORD *)v805;
                      *(_BYTE *)(v804 + 8) = *(_BYTE *)(v805 + 8);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1712 + 32))((v1717 + 9 + v804) & v1690, (v1717 + 9 + v805) & v1690, v1623);
                      v801 = v1761;
LABEL_1131:
                      *((_BYTE *)v795 + v801) = *((_BYTE *)v796 + v801);
                      v806 = ((unint64_t)v795 + v801) & 0xFFFFFFFFFFFFFFF8;
                      v807 = ((unint64_t)v796 + v801) & 0xFFFFFFFFFFFFFFF8;
                      *(_OWORD *)(v806 + 8) = *(_OWORD *)(v807 + 8);
                      v808 = (void *)((v1606 + v806) & v1592);
                      v809 = (_BYTE *)((v1606 + v807) & v1592);
                      if (v1731)
                      {
                        v810 = v1637;
                        if (v1636 >= v1637)
                        {
                          v811 = (v1606 + v807) & v1592;
                          v810 = v1636;
                          v812 = v1639;
                        }
                        else
                        {
                          v811 = (unint64_t)&v809[v1640] & v1590;
                          v812 = v1643;
                        }
                        v1012 = __swift_getEnumTagSinglePayload(v811, v810, v812);
                      }
                      else
                      {
                        if (!v809[v1722])
                          goto LABEL_1767;
                        v965 = (v809[v1722] - 1) << v452;
                        if (v1722 > 3)
                          v965 = 0;
                        if ((_DWORD)v1722)
                        {
                          if (v1722 <= 3)
                            v966 = v1722;
                          else
                            v966 = 4;
                          __asm { BR              X11 }
                        }
                        v1012 = v965 + 1;
                      }
                      if (v1012)
                      {
                        memcpy(v808, v809, v1720);
                        goto LABEL_1769;
                      }
LABEL_1767:
                      (*(void (**)(void *, _BYTE *, uint64_t))(v1634 + 32))(v808, v809, v1639);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1635 + 32))(((unint64_t)v808 + v1640) & v1590, (unint64_t)&v809[v1640] & v1590, v1643);
                      if (!v1731)
                        *((_BYTE *)v808 + v1722) = 0;
LABEL_1769:
                      v1242 = (_QWORD *)(((unint64_t)v808 + v1678) & v1774);
                      v1243 = (uint64_t *)((unint64_t)&v809[v1678] & v1774);
                      if ((v1637 & 0x80000000) != 0)
                      {
                        v1245 = __swift_getEnumTagSinglePayload(((unint64_t)v1243 + v1625) & v1590, v1637, v1643);
                      }
                      else
                      {
                        v1244 = *v1243;
                        if ((unint64_t)*v1243 >= 0xFFFFFFFF)
                          LODWORD(v1244) = -1;
                        v1245 = v1244 + 1;
                      }
                      if (v1245)
                      {
                        memcpy(v1242, v1243, v1714);
                      }
                      else
                      {
                        *v1242 = *v1243;
                        (*(void (**)(unint64_t, unint64_t, uint64_t))(v1635 + 32))(((unint64_t)v1242 + v1625) & v1590, ((unint64_t)v1243 + v1625) & v1590, v1643);
                      }
                      v1246 = (_BYTE *)(((unint64_t)v1242 + v1677) & v1697);
                      v1247 = (_QWORD *)(((unint64_t)v1243 + v1677) & v1697);
                      if (v1638 >= 0x7FFFFFFF)
                      {
                        v1252 = (const void *)(((unint64_t)v1247 + v1642) & v1692);
                        if (__swift_getEnumTagSinglePayload((uint64_t)v1252, v1632, v1644) <= 1)
                        {
                          v1249 = v1247 + 1;
                          v1250 = v1642;
                          v1251 = ~v1750;
                          goto LABEL_1784;
                        }
                      }
                      else
                      {
                        v1248 = v1247[2];
                        if (v1248 >= 0xFFFFFFFF)
                          LODWORD(v1248) = -1;
                        if ((int)v1248 - 1 < 0)
                        {
                          v1249 = v1247 + 1;
                          v1250 = v1642;
                          v1251 = ~v1750;
                          v1252 = (const void *)(((unint64_t)v1247 + v1642) & v1692);
LABEL_1784:
                          *v1246 = *(_BYTE *)v1247;
                          memcpy(v1246 + 8, v1249, 0x69uLL);
                          v1253 = (void *)((unint64_t)&v1246[v1250] & v1251);
                          if (__swift_getEnumTagSinglePayload((uint64_t)v1252, 1, v1644))
                          {
                            memcpy(v1253, v1252, v1716);
                          }
                          else
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v1626 + 32))(v1253, v1252, v1644);
                            __swift_storeEnumTagSinglePayload((uint64_t)v1253, 0, 1, v1644);
                          }
                          v1254 = v1718;
LABEL_1789:
                          v1255 = (unint64_t)&v1246[v1752 + v1254];
                          v1256 = (unint64_t)v1247 + v1752 + v1254;
                          v1257 = v1256 & v798;
                          if (v1630 < 0x7FFFFFFF)
                          {
                            if (*(_QWORD *)(((v1739 + v1257) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                              goto LABEL_1791;
                          }
                          else if (__swift_getEnumTagSinglePayload(v1256 & v798, v1719, v1688) >= 2)
                          {
LABEL_1791:
                            memcpy((void *)(v1255 & v798), (const void *)(v1256 & v798), v1624);
                            v1258 = v1624;
                            goto LABEL_1798;
                          }
                          if (__swift_getEnumTagSinglePayload(v1256 & v798, 1, v1688))
                          {
                            memcpy((void *)(v1255 & v798), (const void *)(v1256 & v798), v1745);
                          }
                          else
                          {
                            (*(void (**)(unint64_t, unint64_t, uint64_t))(v1680 + 32))(v1255 & v798, v1256 & v798, v1688);
                            __swift_storeEnumTagSinglePayload(v1255 & v798, 0, 1, v1688);
                          }
                          v1259 = (v1739 + (v1255 & v798)) & 0xFFFFFFFFFFFFFFF8;
                          v1260 = (v1739 + v1257) & 0xFFFFFFFFFFFFFFF8;
                          v1261 = *(_OWORD *)v1260;
                          v1262 = *(_OWORD *)(v1260 + 16);
                          *(_QWORD *)(v1259 + 32) = *(_QWORD *)(v1260 + 32);
                          *(_OWORD *)v1259 = v1261;
                          *(_OWORD *)(v1259 + 16) = v1262;
                          v1263 = (v1259 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1264 = (v1260 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1265 = *(_OWORD *)v1264;
                          v1266 = *(_OWORD *)(v1264 + 16);
                          *(_QWORD *)(v1263 + 32) = *(_QWORD *)(v1264 + 32);
                          *(_OWORD *)v1263 = v1265;
                          *(_OWORD *)(v1263 + 16) = v1266;
                          *(_OWORD *)((v1263 + 47) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v1264 + 47) & 0xFFFFFFFFFFFFF8);
                          v1258 = v1624;
                          if (v1719)
                            v1258 = ((((((v1674 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                                  + 16;
LABEL_1798:
                          v1267 = (v1255 | v1771) + v1258;
                          v1268 = (v1256 | v1771) + v1258;
                          v1269 = v1268 & v798;
                          if (v1630 < 0x7FFFFFFF)
                          {
                            if (*(_QWORD *)(((v1739 + v1269) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                              goto LABEL_1800;
                          }
                          else if (__swift_getEnumTagSinglePayload(v1268 & v798, v1719, v1688) >= 2)
                          {
LABEL_1800:
                            memcpy((void *)(v1267 & v798), (const void *)(v1268 & v798), v1624);
                            v1270 = v1624;
                            goto LABEL_1807;
                          }
                          if (__swift_getEnumTagSinglePayload(v1268 & v798, 1, v1688))
                          {
                            memcpy((void *)(v1267 & v798), (const void *)(v1268 & v798), v1745);
                          }
                          else
                          {
                            (*(void (**)(unint64_t, unint64_t, uint64_t))(v1680 + 32))(v1267 & v798, v1268 & v798, v1688);
                            __swift_storeEnumTagSinglePayload(v1267 & v798, 0, 1, v1688);
                          }
                          v1271 = (v1739 + (v1267 & v798)) & 0xFFFFFFFFFFFFFFF8;
                          v1272 = (v1739 + v1269) & 0xFFFFFFFFFFFFFFF8;
                          v1273 = *(_OWORD *)v1272;
                          v1274 = *(_OWORD *)(v1272 + 16);
                          *(_QWORD *)(v1271 + 32) = *(_QWORD *)(v1272 + 32);
                          *(_OWORD *)v1271 = v1273;
                          *(_OWORD *)(v1271 + 16) = v1274;
                          v1275 = (v1271 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1276 = (v1272 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1277 = *(_OWORD *)v1276;
                          v1278 = *(_OWORD *)(v1276 + 16);
                          *(_QWORD *)(v1275 + 32) = *(_QWORD *)(v1276 + 32);
                          *(_OWORD *)v1275 = v1277;
                          *(_OWORD *)(v1275 + 16) = v1278;
                          *(_OWORD *)((v1275 + 47) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v1276 + 47) & 0xFFFFFFFFFFFFF8);
                          v1270 = v1624;
                          if (v1719)
                            v1270 = ((((((v1674 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                                  + 16;
LABEL_1807:
                          v1279 = (char *)(((v1267 | v1771) + v1270) & v798);
                          v1280 = (char *)(((v1268 | v1771) + v1270) & v798);
                          if (v1630 < 0x7FFFFFFF)
                          {
                            v1281 = ~v1755;
                            v454 = v1594;
                            if (*(_QWORD *)(((unint64_t)&v1280[v1739] & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                            {
LABEL_1809:
                              memcpy(v1279, v1280, v1624);
                              v513 = v1645;
                              v450 = v785;
                              if (!v1719)
                                goto LABEL_1818;
                              goto LABEL_1817;
                            }
                          }
                          else
                          {
                            v1281 = ~v1755;
                            v454 = v1594;
                            if (__swift_getEnumTagSinglePayload((uint64_t)v1280, v1719, v1688) >= 2)
                              goto LABEL_1809;
                          }
                          v513 = v1645;
                          if (__swift_getEnumTagSinglePayload((uint64_t)v1280, 1, v1688))
                          {
                            memcpy(v1279, v1280, v1745);
                          }
                          else
                          {
                            (*(void (**)(char *, char *, uint64_t))(v1680 + 32))(v1279, v1280, v1688);
                            __swift_storeEnumTagSinglePayload((uint64_t)v1279, 0, 1, v1688);
                          }
                          v1282 = (unint64_t)&v1279[v1739] & 0xFFFFFFFFFFFFFFF8;
                          v1283 = (unint64_t)&v1280[v1739] & 0xFFFFFFFFFFFFFFF8;
                          v1284 = *(_OWORD *)v1283;
                          v1285 = *(_OWORD *)(v1283 + 16);
                          *(_QWORD *)(v1282 + 32) = *(_QWORD *)(v1283 + 32);
                          *(_OWORD *)v1282 = v1284;
                          *(_OWORD *)(v1282 + 16) = v1285;
                          v1286 = (v1282 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1287 = (v1283 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1288 = *(_OWORD *)v1287;
                          v1289 = *(_OWORD *)(v1287 + 16);
                          *(_QWORD *)(v1286 + 32) = *(_QWORD *)(v1287 + 32);
                          *(_OWORD *)v1286 = v1288;
                          *(_OWORD *)(v1286 + 16) = v1289;
                          *(_OWORD *)((v1286 + 47) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v1287 + 47) & 0xFFFFFFFFFFFFF8);
                          v450 = v785;
                          if (!v1719)
                            goto LABEL_1818;
                          v1624 = ((((((v1674 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                                + 16;
LABEL_1817:
                          v449 = v1674;
LABEL_1818:
                          *(_QWORD *)&v1279[v1624] = *(_QWORD *)&v1280[v1624];
                          v1290 = v1729
                                + ((v1675
                                  + ((v1675
                                    + ((v1733
                                      + ((v1677
                                        + ((v1678
                                          + ((v1737
                                            + ((((((v1676
                                                  + ((((((((v449 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                                                      + 23) & 0xFFFFFFFFFFFFFFF8)
                                                    + 15) & 0xFFFFFFFFFFFFFFF8)) & v1763)
                                                + v1761) & 0xFFFFFFFFFFFFFFF8)
                                              + 23) & 0xFFFFFFFFFFFFFFF8)) & v1592)) & v1774)) & v1281)) & v798)) & v798)) & v798);
                          if (v1672 > v1290)
                            v1290 = v1718 + ((v1750 + 8) & ~v1755);
                          if (v1290 <= v1655)
                            v1290 = v1655;
                          if (v1290 <= v1673)
                            v1290 = v1673;
                          if (v1290 <= v1654)
                            v1290 = v1654;
                          if (v1290 <= v1653)
                            v1290 = v1653;
                          if (v1290 <= v1652)
                            v1290 = v1652;
                          if (v1290 <= v1656)
                            v1290 = (((((v1759 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                  + 16;
                          if (v1290 <= v1657)
                            v1290 = v1657;
                          if (v1290 <= v1649)
                            v1290 = v1649;
                          if (v1290 <= v1727)
                            v1290 = v1727;
                          if (v1290 <= v1648)
                            v1290 = v1648;
                          if (v1290 <= v1651)
                            v1290 = v1651;
                          if (v1290 <= v1650)
                            v1290 = v1650;
                          if (v1290 <= v1735)
                            v1290 = v1735;
                          if (v1290 <= v1582)
                            v1290 = v1582;
                          if (v1290 <= v1672)
                            v1290 = v1718 + ((v1750 + 8) & ~v1755);
                          if (v1290 <= v1647)
                            v1290 = v1647;
                          if (v1290 <= v1658)
                            v1290 = ((v1759 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
                          if (v1290 <= v75)
                            v1290 = v75;
                          if (v1290 <= v1659)
                            v1290 = v1659;
                          if (v1290 <= v1660)
                            v1290 = v1660;
                          if (v1290 <= v1662)
                            v1290 = v1662;
                          if (v1290 <= v1661)
                            v1290 = v1661;
                          if (v1290 <= v1663)
                            v1290 = v1663;
                          if (v1290 <= v1664)
                            v1290 = v1664;
                          if (v1290 <= v1671)
                            v1290 = v1671;
                          if (v1290 <= (unint64_t)v1665)
                            v1290 = (unint64_t)v1665;
                          if (v1290 <= v1666)
                            v1290 = v1666;
                          if (v1290 <= v1669)
                            v1290 = v1669;
                          if (v1290 <= v1759)
                            v1290 = v1759;
                          if (v1290 <= v1667)
                            v1290 = v1667;
                          if (v1290 <= v1670)
                            v1290 = v1670;
                          if (v1290 <= v1668)
                            v1290 = v1668;
                          if (v1290 <= 8)
                            v451 = 8;
                          else
                            v451 = v1290;
                          v502 = 22;
                          goto LABEL_1888;
                        }
                      }
                      v1254 = v1718;
                      memcpy(v1246, v1247, v1718);
                      goto LABEL_1789;
                    }
                  }
                  v801 = v1761;
                  memcpy(v795, v796, v1761);
                  goto LABEL_1131;
                case 0x17:
                  v496 = __dstb;
                  *__dstb = *(_QWORD *)v450;
                  v531 = (_BYTE *)(((unint64_t)__dstb + v1755 + 8) & v1697);
                  v498 = v450;
                  v532 = (_BYTE *)((v1755 + 8 + v450) & v1697);
                  *v531 = *v532;
                  memcpy(v531 + 8, v532 + 8, 0x69uLL);
                  v533 = (void *)((unint64_t)&v531[v1642] & v1692);
                  v534 = (const void *)((unint64_t)&v532[v1642] & v1692);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v534, 1, v1644))
                  {
                    memcpy(v533, v534, v1716);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1626 + 32))(v533, v534, v1644);
                    __swift_storeEnumTagSinglePayload((uint64_t)v533, 0, 1, v1644);
                  }
                  v502 = 23;
                  goto LABEL_1244;
                case 0x18:
                  v528 = (const void *)v450;
                  v496 = __dstb;
                  if (__swift_getEnumTagSinglePayload(v450, 1, v429))
                  {
                    memcpy(__dstb, v528, v1745);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, const void *, uint64_t))(v1680 + 32))(__dstb, v528, v429);
                    __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v429);
                  }
                  v513 = v1645;
                  v588 = a1;
                  v813 = ((unint64_t)__dstb + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v814 = ((unint64_t)v528 + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v815 = *(_OWORD *)v814;
                  v816 = *(_OWORD *)(v814 + 16);
                  *(_QWORD *)(v813 + 32) = *(_QWORD *)(v814 + 32);
                  *(_OWORD *)v813 = v815;
                  *(_OWORD *)(v813 + 16) = v816;
                  v817 = (_QWORD *)((v813 + 47) & 0xFFFFFFFFFFFFF8);
                  v818 = (_QWORD *)((v814 + 47) & 0xFFFFFFFFFFFFF8);
                  *v817 = *v818;
                  *(_OWORD *)(((unint64_t)v817 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v818
                                                                                               + 15) & 0xFFFFFFFFFFFFF8);
                  v502 = 24;
                  goto LABEL_1166;
                case 0x19:
                  v496 = __dstb;
                  *__dstb = *(_QWORD *)v450;
                  v502 = 25;
                  goto LABEL_1023;
                case 0x1A:
                  v496 = __dstb;
                  *__dstb = *(_QWORD *)v450;
                  v502 = 26;
                  goto LABEL_1023;
                case 0x1B:
                  v496 = __dstb;
                  *__dstb = *(_QWORD *)v450;
                  v502 = 27;
                  goto LABEL_1023;
                case 0x1C:
                  v496 = __dstb;
                  *__dstb = *(_QWORD *)v450;
                  v502 = 28;
                  goto LABEL_1023;
                case 0x1D:
                  v535 = *(_OWORD *)v450;
                  v536 = *(_OWORD *)(v450 + 16);
                  v496 = __dstb;
                  __dstb[4] = *(_QWORD *)(v450 + 32);
                  *(_OWORD *)__dstb = v535;
                  *((_OWORD *)__dstb + 1) = v536;
                  v537 = (char *)(((unint64_t)__dstb + v1724) & v1708);
                  v498 = v450;
                  v538 = (const void *)((v1724 + v450) & v1708);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v538, 1, v429))
                  {
                    v539 = v1745;
                    memcpy(v537, v538, v1745);
                    v513 = v1645;
                  }
                  else
                  {
                    (*(void (**)(char *, const void *, uint64_t))(v1680 + 32))(v537, v538, v429);
                    __swift_storeEnumTagSinglePayload((uint64_t)v537, 0, 1, v429);
                    v513 = v1645;
                    v539 = v1745;
                  }
                  v588 = a1;
                  v819 = &v537[v539];
                  *v819 = *((_BYTE *)v538 + v539);
                  v819[1] = *((_BYTE *)v538 + v539 + 1);
                  v820 = (unint64_t)&v537[v539 + 9] & 0xFFFFFFFFFFFFFFF8;
                  v821 = ((unint64_t)v538 + v539 + 9) & 0xFFFFFFFFFFFFFFF8;
                  *(_OWORD *)v820 = *(_OWORD *)v821;
                  *(_BYTE *)(v820 + 16) = *(_BYTE *)(v821 + 16);
                  v502 = 29;
                  goto LABEL_1423;
                case 0x1E:
                  v540 = *(_OWORD *)v450;
                  v541 = *(_OWORD *)(v450 + 16);
                  v496 = __dstb;
                  __dstb[4] = *(_QWORD *)(v450 + 32);
                  *(_OWORD *)__dstb = v540;
                  *((_OWORD *)__dstb + 1) = v541;
                  *((_BYTE *)__dstb + 40) = *(_BYTE *)(v450 + 40);
                  *((_BYTE *)__dstb + 41) = *(_BYTE *)(v450 + 41);
                  *((_BYTE *)__dstb + 42) = *(_BYTE *)(v450 + 42);
                  *((_BYTE *)__dstb + 43) = *(_BYTE *)(v450 + 43);
                  v542 = (_OWORD *)(((unint64_t)__dstb + 51) & 0xFFFFFFFFFFFFFFF8);
                  v498 = v450;
                  v543 = (_OWORD *)((v450 + 51) & 0xFFFFFFFFFFFFFFF8);
                  *v542 = *v543;
                  v544 = (_OWORD *)(((unint64_t)v542 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v545 = (_OWORD *)(((unint64_t)v543 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v544 = *v545;
                  v546 = (void *)(((unint64_t)v544 + v1713) & v1708);
                  v547 = (const void *)(((unint64_t)v545 + v1713) & v1708);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v547, 1, v429))
                  {
                    memcpy(v546, v547, v1745);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1680 + 32))(v546, v547, v429);
                    __swift_storeEnumTagSinglePayload((uint64_t)v546, 0, 1, v429);
                  }
                  v502 = 30;
                  goto LABEL_1244;
                case 0x1F:
                  v496 = __dstb;
                  *__dstb = *(_QWORD *)v450;
                  v502 = 31;
                  goto LABEL_1023;
                case 0x20:
                  v496 = __dstb;
                  *(_OWORD *)__dstb = *(_OWORD *)v450;
                  v548 = ((unint64_t)__dstb + 23) & 0xFFFFFFFFFFFFFFF8;
                  v498 = v450;
                  v549 = (v450 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v550 = *(_OWORD *)v549;
                  v551 = *(_OWORD *)(v549 + 16);
                  *(_QWORD *)(v548 + 32) = *(_QWORD *)(v549 + 32);
                  *(_OWORD *)v548 = v550;
                  *(_OWORD *)(v548 + 16) = v551;
                  v552 = (void *)((v1724 + v548) & v1708);
                  v553 = (const void *)((v1724 + v549) & v1708);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v553, 1, v429))
                  {
                    memcpy(v552, v553, v1745);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1680 + 32))(v552, v553, v429);
                    __swift_storeEnumTagSinglePayload((uint64_t)v552, 0, 1, v429);
                  }
                  v502 = 32;
                  goto LABEL_1244;
                case 0x21:
                  if (v1731)
                  {
                    v554 = v1637;
                    v555 = v1722;
                    v556 = v1590;
                    v557 = (const void *)v450;
                    if (v1636 >= v1637)
                    {
                      v554 = v1636;
                      v558 = v1639;
                    }
                    else
                    {
                      v450 = (v1640 + v450) & v1590;
                      v558 = v1643;
                    }
                    v1008 = __swift_getEnumTagSinglePayload(v450, v554, v558);
                    v822 = v1739;
                    v823 = v1745;
                    v496 = __dstb;
                  }
                  else
                  {
                    v555 = v1722;
                    v557 = (const void *)v450;
                    v556 = v1590;
                    v822 = v1739;
                    v823 = v1745;
                    v496 = __dstb;
                    if (!*(_BYTE *)(v450 + v1722))
                      goto LABEL_1517;
                    v824 = (*(unsigned __int8 *)(v450 + v1722) - 1) << v419;
                    if (v1722 > 3)
                      v824 = 0;
                    if ((_DWORD)v1722)
                    {
                      if (v1722 <= 3)
                        v825 = v1722;
                      else
                        v825 = 4;
                      __asm { BR              X11 }
                    }
                    v1008 = v824 + 1;
                  }
                  if (v1008)
                  {
                    memcpy(v496, v557, v1720);
                    goto LABEL_1519;
                  }
LABEL_1517:
                  (*(void (**)(void *, const void *, uint64_t))(v1634 + 32))(v496, v557, v1639);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1635 + 32))(((unint64_t)v496 + v1640) & v556, ((unint64_t)v557 + v1640) & v556, v1643);
                  if (!v1731)
                    *((_BYTE *)v496 + v555) = 0;
LABEL_1519:
                  v1124 = ((unint64_t)v496 + v1627) & 0xFFFFFFFFFFFFFFF8;
                  v570 = v557;
                  v1125 = ((unint64_t)v557 + v1627) & 0xFFFFFFFFFFFFFFF8;
                  v1126 = *(_OWORD *)v1125;
                  v1127 = *(_OWORD *)(v1125 + 16);
                  *(_QWORD *)(v1124 + 32) = *(_QWORD *)(v1125 + 32);
                  *(_OWORD *)v1124 = v1126;
                  *(_OWORD *)(v1124 + 16) = v1127;
                  v1128 = (void *)((v1724 + v1124) & v1708);
                  v1129 = (const void *)((v1724 + v1125) & v1708);
                  v513 = v1645;
                  v588 = a1;
                  if (__swift_getEnumTagSinglePayload((uint64_t)v1129, 1, v1688))
                  {
                    memcpy(v1128, v1129, v823);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1680 + 32))(v1128, v1129, v1688);
                    __swift_storeEnumTagSinglePayload((uint64_t)v1128, 0, 1, v1688);
                  }
                  v1130 = (_OWORD *)(((unint64_t)v1128 + v822) & 0xFFFFFFFFFFFFFFF8);
                  v1131 = (_OWORD *)(((unint64_t)v1129 + v822) & 0xFFFFFFFFFFFFFFF8);
                  *v1130 = *v1131;
                  *(_OWORD *)(((unint64_t)v1130 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v1131
                                                                                                + 23) & 0xFFFFFFFFFFFFF8);
                  v502 = 33;
                  goto LABEL_1963;
                case 0x22:
                  v559 = (const void *)v450;
                  v560 = v429;
                  v561 = __swift_getEnumTagSinglePayload(v450, 1, v429);
                  v562 = v419;
                  v496 = __dstb;
                  if (v561)
                  {
                    memcpy(__dstb, v559, v1745);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, const void *, uint64_t))(v1680 + 32))(__dstb, v559, v560);
                    __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v560);
                  }
                  v826 = ((unint64_t)__dstb + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v570 = v559;
                  v827 = ((unint64_t)v559 + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v828 = *(_OWORD *)v827;
                  v829 = *(_OWORD *)(v827 + 16);
                  *(_QWORD *)(v826 + 32) = *(_QWORD *)(v827 + 32);
                  *(_OWORD *)v826 = v828;
                  *(_OWORD *)(v826 + 16) = v829;
                  v830 = (_BYTE *)((v1757 + v826) & v1697);
                  v831 = (_BYTE *)((v1757 + v827) & v1697);
                  *v830 = *v831;
                  memcpy(v830 + 8, v831 + 8, 0x69uLL);
                  v832 = (void *)((unint64_t)&v830[v1642] & v1692);
                  v833 = (const void *)((unint64_t)&v831[v1642] & v1692);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v833, 1, v1644))
                  {
                    memcpy(v832, v833, v1716);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1626 + 32))(v832, v833, v1644);
                    __swift_storeEnumTagSinglePayload((uint64_t)v832, 0, 1, v1644);
                  }
                  v588 = a1;
                  v967 = (_OWORD *)((unint64_t)&v830[v1715] & 0xFFFFFFFFFFFFFFF8);
                  v968 = (_OWORD *)((unint64_t)&v831[v1715] & 0xFFFFFFFFFFFFFFF8);
                  *v967 = *v968;
                  v969 = ((unint64_t)v967 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v970 = ((unint64_t)v968 + 23) & 0xFFFFFFFFFFFFFFF8;
                  *(_OWORD *)v969 = *(_OWORD *)v970;
                  *(_BYTE *)(v969 + 16) = *(_BYTE *)(v970 + 16);
                  *(_BYTE *)(v969 + 17) = *(_BYTE *)(v970 + 17);
                  v971 = (void *)((v1602 + v969) & v1592);
                  v972 = (_BYTE *)((v1602 + v970) & v1592);
                  if (v1731)
                  {
                    v973 = v1636;
                    if (v1636 >= v1637)
                    {
                      v974 = (v1602 + v970) & v1592;
                      v975 = v1639;
                    }
                    else
                    {
                      v974 = (unint64_t)&v972[v1640] & v1590;
                      v973 = v1637;
                      v975 = v1643;
                    }
                    v1016 = __swift_getEnumTagSinglePayload(v974, v973, v975);
                    v454 = v1594;
                    v513 = v1645;
                    v1002 = v1722;
                  }
                  else
                  {
                    v1002 = v1722;
                    v454 = v1594;
                    v513 = v1645;
                    if (!v972[v1722])
                      goto LABEL_1695;
                    v1003 = (v972[v1722] - 1) << v562;
                    if (v1722 > 3)
                      v1003 = 0;
                    if ((_DWORD)v1722)
                    {
                      if (v1722 <= 3)
                        v1004 = v1722;
                      else
                        v1004 = 4;
                      __asm { BR              X11 }
                    }
                    v1016 = v1003 + 1;
                  }
                  if (v1016)
                  {
                    memcpy(v971, v972, v1720);
                    goto LABEL_1697;
                  }
LABEL_1695:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1634 + 32))(v971, v972, v1639);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1635 + 32))(((unint64_t)v971 + v1640) & v1590, (unint64_t)&v972[v1640] & v1590, v1643);
                  if (!v1731)
                    *((_BYTE *)v971 + v1002) = 0;
LABEL_1697:
                  v502 = 34;
                  goto LABEL_1963;
                case 0x23:
                  v563 = (const void *)v450;
                  v564 = v429;
                  v565 = __swift_getEnumTagSinglePayload(v450, 1, v429);
                  v566 = v419;
                  v496 = __dstb;
                  if (v565)
                  {
                    memcpy(__dstb, v563, v1745);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, const void *, uint64_t))(v1680 + 32))(__dstb, v563, v564);
                    __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v564);
                  }
                  v834 = ((unint64_t)__dstb + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v570 = v563;
                  v835 = ((unint64_t)v563 + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v836 = *(_OWORD *)v835;
                  v837 = *(_OWORD *)(v835 + 16);
                  *(_QWORD *)(v834 + 32) = *(_QWORD *)(v835 + 32);
                  *(_OWORD *)v834 = v836;
                  *(_OWORD *)(v834 + 16) = v837;
                  v838 = (_BYTE *)((v1757 + v834) & v1697);
                  v839 = (_BYTE *)((v1757 + v835) & v1697);
                  *v838 = *v839;
                  memcpy(v838 + 8, v839 + 8, 0x69uLL);
                  v840 = (void *)((unint64_t)&v838[v1642] & v1692);
                  v841 = (const void *)((unint64_t)&v839[v1642] & v1692);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v841, 1, v1644))
                  {
                    memcpy(v840, v841, v1716);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1626 + 32))(v840, v841, v1644);
                    __swift_storeEnumTagSinglePayload((uint64_t)v840, 0, 1, v1644);
                  }
                  v588 = a1;
                  v976 = (_OWORD *)((unint64_t)&v838[v1715] & 0xFFFFFFFFFFFFFFF8);
                  v977 = (_OWORD *)((unint64_t)&v839[v1715] & 0xFFFFFFFFFFFFFFF8);
                  *v976 = *v977;
                  v978 = ((unint64_t)v976 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v979 = ((unint64_t)v977 + 23) & 0xFFFFFFFFFFFFFFF8;
                  *(_OWORD *)v978 = *(_OWORD *)v979;
                  *(_BYTE *)(v978 + 16) = *(_BYTE *)(v979 + 16);
                  *(_BYTE *)(v978 + 17) = *(_BYTE *)(v979 + 17);
                  v980 = (_OWORD *)((v978 + 25) & 0xFFFFFFFFFFFFFFF8);
                  v981 = (_OWORD *)((v979 + 25) & 0xFFFFFFFFFFFFFFF8);
                  *v980 = *v981;
                  v982 = (_OWORD *)(((unint64_t)v980 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v983 = (_OWORD *)(((unint64_t)v981 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v982 = *v983;
                  v984 = (_OWORD *)(((unint64_t)v982 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v985 = (_OWORD *)(((unint64_t)v983 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v984 = *v985;
                  v986 = (_OWORD *)(((unint64_t)v984 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v987 = (_OWORD *)(((unint64_t)v985 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v986 = *v987;
                  v988 = (_QWORD *)(((unint64_t)v986 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v989 = (_QWORD *)(((unint64_t)v987 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v988 = *v989;
                  v990 = (void *)(((unint64_t)v988 + v1628) & v1592);
                  v991 = (_BYTE *)(((unint64_t)v989 + v1628) & v1592);
                  if (v1731)
                  {
                    v992 = v1636;
                    if (v1636 >= v1637)
                    {
                      v993 = ((unint64_t)v989 + v1628) & v1592;
                      v994 = v1639;
                    }
                    else
                    {
                      v993 = (unint64_t)&v991[v1640] & v1590;
                      v992 = v1637;
                      v994 = v1643;
                    }
                    v1017 = __swift_getEnumTagSinglePayload(v993, v992, v994);
                    v454 = v1594;
                    v513 = v1645;
                    v1005 = v1722;
                  }
                  else
                  {
                    v1005 = v1722;
                    v454 = v1594;
                    v513 = v1645;
                    if (!v991[v1722])
                      goto LABEL_1700;
                    v1006 = (v991[v1722] - 1) << v566;
                    if (v1722 > 3)
                      v1006 = 0;
                    if ((_DWORD)v1722)
                    {
                      if (v1722 <= 3)
                        v1007 = v1722;
                      else
                        v1007 = 4;
                      __asm { BR              X11 }
                    }
                    v1017 = v1006 + 1;
                  }
                  if (v1017)
                  {
                    memcpy(v990, v991, v1720);
                    goto LABEL_1702;
                  }
LABEL_1700:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1634 + 32))(v990, v991, v1639);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1635 + 32))(((unint64_t)v990 + v1640) & v1590, (unint64_t)&v991[v1640] & v1590, v1643);
                  if (!v1731)
                    *((_BYTE *)v990 + v1005) = 0;
LABEL_1702:
                  *(_OWORD *)(((unint64_t)v990 + v1627) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v991[v1627] & 0xFFFFFFFFFFFFF8);
                  v502 = 35;
                  goto LABEL_1963;
                case 0x24:
                  v528 = (const void *)v450;
                  v496 = __dstb;
                  if (__swift_getEnumTagSinglePayload(v450, 1, v429))
                  {
                    memcpy(__dstb, v528, v1745);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, const void *, uint64_t))(v1680 + 32))(__dstb, v528, v429);
                    __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v429);
                  }
                  v513 = v1645;
                  v588 = a1;
                  v842 = ((unint64_t)__dstb + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v843 = ((unint64_t)v528 + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v844 = *(_OWORD *)v843;
                  v845 = *(_OWORD *)(v843 + 16);
                  *(_QWORD *)(v842 + 32) = *(_QWORD *)(v843 + 32);
                  *(_OWORD *)v842 = v844;
                  *(_OWORD *)(v842 + 16) = v845;
                  v846 = (_OWORD *)((v842 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v847 = (_OWORD *)((v843 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v846 = *v847;
                  v848 = ((unint64_t)v846 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v849 = ((unint64_t)v847 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v850 = *(_OWORD *)v849;
                  v851 = *(_OWORD *)(v849 + 16);
                  *(_QWORD *)(v848 + 32) = *(_QWORD *)(v849 + 32);
                  *(_OWORD *)v848 = v850;
                  *(_OWORD *)(v848 + 16) = v851;
                  v502 = 36;
                  goto LABEL_1166;
                case 0x25:
                  v528 = (const void *)v450;
                  v496 = __dstb;
                  if (__swift_getEnumTagSinglePayload(v450, 1, v429))
                  {
                    memcpy(__dstb, v528, v1745);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, const void *, uint64_t))(v1680 + 32))(__dstb, v528, v429);
                    __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v429);
                  }
                  v513 = v1645;
                  v588 = a1;
                  v852 = ((unint64_t)__dstb + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v853 = ((unint64_t)v528 + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v854 = *(_OWORD *)v853;
                  v855 = *(_OWORD *)(v853 + 16);
                  *(_QWORD *)(v852 + 32) = *(_QWORD *)(v853 + 32);
                  *(_OWORD *)v852 = v854;
                  *(_OWORD *)(v852 + 16) = v855;
                  v856 = (_QWORD *)((v852 + 47) & 0xFFFFFFFFFFFFF8);
                  v857 = (_QWORD *)((v853 + 47) & 0xFFFFFFFFFFFFF8);
                  *v856 = *v857;
                  *(_QWORD *)(((unint64_t)v856 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v857
                                                                                               + 15) & 0xFFFFFFFFFFFFF8);
                  v502 = 37;
                  goto LABEL_1166;
                case 0x26:
                  v528 = (const void *)v450;
                  v496 = __dstb;
                  if (__swift_getEnumTagSinglePayload(v450, 1, v429))
                  {
                    memcpy(__dstb, v528, v1745);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, const void *, uint64_t))(v1680 + 32))(__dstb, v528, v429);
                    __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v429);
                  }
                  v513 = v1645;
                  v588 = a1;
                  v858 = ((unint64_t)__dstb + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v859 = ((unint64_t)v528 + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v860 = *(_OWORD *)v859;
                  v861 = *(_OWORD *)(v859 + 16);
                  *(_QWORD *)(v858 + 32) = *(_QWORD *)(v859 + 32);
                  *(_OWORD *)v858 = v860;
                  *(_OWORD *)(v858 + 16) = v861;
                  v862 = (_OWORD *)((v858 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v863 = (_OWORD *)((v859 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v862 = *v863;
                  v864 = (_OWORD *)(((unint64_t)v862 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v865 = (_OWORD *)(((unint64_t)v863 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v864 = *v865;
                  v866 = ((unint64_t)v864 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v867 = ((unint64_t)v865 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v868 = *(_OWORD *)v867;
                  v869 = *(_OWORD *)(v867 + 16);
                  *(_QWORD *)(v866 + 32) = *(_QWORD *)(v867 + 32);
                  *(_OWORD *)v866 = v868;
                  *(_OWORD *)(v866 + 16) = v869;
                  v870 = (v866 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v871 = (v867 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v872 = *(_OWORD *)v871;
                  v873 = *(_OWORD *)(v871 + 16);
                  *(_QWORD *)(v870 + 32) = *(_QWORD *)(v871 + 32);
                  *(_OWORD *)v870 = v872;
                  *(_OWORD *)(v870 + 16) = v873;
                  v502 = 38;
                  goto LABEL_1166;
                case 0x27:
                  v528 = (const void *)v450;
                  v496 = __dstb;
                  if (__swift_getEnumTagSinglePayload(v450, 1, v429))
                  {
                    memcpy(__dstb, v528, v1745);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, const void *, uint64_t))(v1680 + 32))(__dstb, v528, v429);
                    __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v429);
                  }
                  v513 = v1645;
                  v588 = a1;
                  v874 = ((unint64_t)__dstb + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v875 = ((unint64_t)v528 + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v876 = *(_OWORD *)v875;
                  v877 = *(_OWORD *)(v875 + 16);
                  *(_QWORD *)(v874 + 32) = *(_QWORD *)(v875 + 32);
                  *(_OWORD *)v874 = v876;
                  *(_OWORD *)(v874 + 16) = v877;
                  *(_QWORD *)((v874 + 47) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v875 + 47) & 0xFFFFFFFFFFFFF8);
                  v502 = 39;
LABEL_1166:
                  v450 = (uint64_t)v528;
                  goto LABEL_2171;
                case 0x28:
                  v567 = *(_OWORD *)v450;
                  v568 = *(_OWORD *)(v450 + 16);
                  __dstb[4] = *(_QWORD *)(v450 + 32);
                  *(_OWORD *)__dstb = v567;
                  *((_OWORD *)__dstb + 1) = v568;
                  v569 = (void *)(((unint64_t)__dstb + v1724) & v1708);
                  v570 = (const void *)v450;
                  v571 = (const void *)((v1724 + v450) & v1708);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v571, 1, v429))
                  {
                    memcpy(v569, v571, v1745);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1680 + 32))(v569, v571, v429);
                    __swift_storeEnumTagSinglePayload((uint64_t)v569, 0, 1, v429);
                  }
                  v513 = v1645;
                  v588 = a1;
                  v878 = 7;
                  if (!v1719)
                    v878 = 8;
                  v879 = v1674 + v878;
                  *(_QWORD *)(((unint64_t)v569 + v879) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v571
                                                                                                 + v879) & 0xFFFFFFFFFFFFF8);
                  v880 = v1729
                       + ((v1675
                         + ((v1675
                           + ((v1733
                             + ((v1677
                               + ((v1678
                                 + ((v1737
                                   + ((((((v1676
                                         + (((((((v879 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                           + 15) & 0xFFFFFFFFFFFFFFF8)) & v1763)
                                       + v1761) & 0xFFFFFFFFFFFFFFF8)
                                     + 23) & 0xFFFFFFFFFFFFFFF8)) & v1592)) & v1774)) & v1697)) & v1694)) & v1694)) & v1694);
                  if (v1672 > v880)
                    v880 = v1718 + ((v1750 + 8) & ~v1755);
                  if (v880 <= v1655)
                    v880 = v1655;
                  if (v880 <= v1673)
                    v880 = v1673;
                  if (v880 <= v1654)
                    v880 = v1654;
                  if (v880 <= v1653)
                    v880 = v1653;
                  if (v880 <= v1652)
                    v880 = v1652;
                  if (v880 <= v1656)
                    v880 = (((((v1759 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                         + 16;
                  if (v880 <= v1657)
                    v880 = v1657;
                  if (v880 <= v1649)
                    v880 = v1649;
                  if (v880 <= v1727)
                    v880 = v1727;
                  if (v880 <= v1648)
                    v880 = v1648;
                  if (v880 <= v1651)
                    v880 = v1651;
                  if (v880 <= v1650)
                    v880 = v1650;
                  if (v880 <= v1735)
                    v880 = v1735;
                  if (v880 <= v1582)
                    v880 = v1582;
                  if (v880 <= v1672)
                    v880 = v1718 + ((v1750 + 8) & ~v1755);
                  if (v880 <= v1647)
                    v880 = v1647;
                  if (v880 <= v1658)
                    v880 = ((v1759 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
                  if (v880 <= v75)
                    v880 = v75;
                  if (v880 <= v1659)
                    v880 = v1659;
                  if (v880 <= v1660)
                    v880 = v1660;
                  if (v880 <= v1662)
                    v880 = v1662;
                  if (v880 <= v1661)
                    v880 = v1661;
                  if (v880 <= v1663)
                    v880 = v1663;
                  if (v880 <= v1664)
                    v880 = v1664;
                  if (v880 <= v1671)
                    v880 = v1671;
                  if (v880 <= (unint64_t)v1665)
                    v880 = (unint64_t)v1665;
                  if (v880 <= v1666)
                    v880 = v1666;
                  if (v880 <= v1669)
                    v880 = v1669;
                  if (v880 <= v1759)
                    v880 = v1759;
                  if (v880 <= v1667)
                    v880 = v1667;
                  if (v880 <= v1670)
                    v880 = v1670;
                  if (v880 <= v1668)
                    v880 = v1668;
                  if (v880 <= 8)
                    v451 = 8;
                  else
                    v451 = v880;
                  v502 = 40;
                  v496 = __dstb;
                  goto LABEL_1964;
                case 0x29:
                  v572 = *(_OWORD *)v450;
                  v573 = *(_OWORD *)(v450 + 16);
                  v496 = __dstb;
                  __dstb[4] = *(_QWORD *)(v450 + 32);
                  *(_OWORD *)__dstb = v572;
                  *((_OWORD *)__dstb + 1) = v573;
                  v574 = (void *)(((unint64_t)__dstb + v1724) & v1708);
                  v498 = v450;
                  v575 = (const void *)((v1724 + v450) & v1708);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v575, 1, v429))
                  {
                    memcpy(v574, v575, v1745);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1680 + 32))(v574, v575, v429);
                    __swift_storeEnumTagSinglePayload((uint64_t)v574, 0, 1, v429);
                  }
                  v513 = v1645;
                  v588 = a1;
                  v881 = (_QWORD *)(((unint64_t)v574 + v1739) & 0xFFFFFFFFFFFFF8);
                  v882 = (_QWORD *)(((unint64_t)v575 + v1739) & 0xFFFFFFFFFFFFFFF8);
                  *v881 = *v882;
                  *(_QWORD *)(((unint64_t)v881 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v882
                                                                                               + 15) & 0xFFFFFFFFFFFFF8);
                  v502 = 41;
                  goto LABEL_1423;
                case 0x2A:
                  v496 = __dstb;
                  *__dstb = *(_QWORD *)v450;
                  v502 = 42;
                  goto LABEL_1023;
                case 0x2B:
                  v576 = *(_OWORD *)v450;
                  v577 = *(_OWORD *)(v450 + 16);
                  v496 = __dstb;
                  __dstb[4] = *(_QWORD *)(v450 + 32);
                  *(_OWORD *)__dstb = v576;
                  *((_OWORD *)__dstb + 1) = v577;
                  v578 = (void *)(((unint64_t)__dstb + v1724) & v1708);
                  v498 = v450;
                  v579 = (const void *)((v1724 + v450) & v1708);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v579, 1, v429))
                  {
                    memcpy(v578, v579, v1745);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1680 + 32))(v578, v579, v429);
                    __swift_storeEnumTagSinglePayload((uint64_t)v578, 0, 1, v429);
                  }
                  v502 = 43;
LABEL_1244:
                  v513 = v1645;
                  v451 = v1706;
                  v588 = a1;
                  goto LABEL_1424;
                case 0x2C:
                  v496 = __dstb;
                  *__dstb = *(_QWORD *)v450;
                  v502 = 44;
                  goto LABEL_1023;
                case 0x2D:
                  v570 = (const void *)v450;
                  v496 = __dstb;
                  if (__swift_getEnumTagSinglePayload(v450, 1, v429))
                  {
                    memcpy(__dstb, v570, v1745);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, const void *, uint64_t))(v1680 + 32))(__dstb, v570, v429);
                    __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v429);
                  }
                  v883 = ((unint64_t)__dstb + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v884 = ((unint64_t)v570 + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v885 = *(_OWORD *)v884;
                  v886 = *(_OWORD *)(v884 + 16);
                  *(_QWORD *)(v883 + 32) = *(_QWORD *)(v884 + 32);
                  *(_OWORD *)v883 = v885;
                  *(_OWORD *)(v883 + 16) = v886;
                  v887 = (v883 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v888 = (v884 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v889 = *(_OWORD *)v888;
                  v890 = *(_OWORD *)(v888 + 16);
                  *(_QWORD *)(v887 + 32) = *(_QWORD *)(v888 + 32);
                  *(_OWORD *)v887 = v889;
                  *(_OWORD *)(v887 + 16) = v890;
                  v891 = (_OWORD *)((v887 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v892 = (_OWORD *)((v888 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v891 = *v892;
                  v893 = (_OWORD *)(((unint64_t)v891 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v894 = (_OWORD *)(((unint64_t)v892 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v893 = *v894;
                  v895 = (_OWORD *)(((unint64_t)v893 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v896 = (_OWORD *)(((unint64_t)v894 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v895 = *v896;
                  v897 = (_OWORD *)(((unint64_t)v895 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v898 = (_OWORD *)(((unint64_t)v896 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v897 = *v898;
                  v899 = ((unint64_t)v897 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v900 = ((unint64_t)v898 + 23) & 0xFFFFFFFFFFFFFFF8;
                  *(_OWORD *)v899 = *(_OWORD *)v900;
                  *(_BYTE *)(v899 + 16) = *(_BYTE *)(v900 + 16);
                  v901 = (_QWORD *)(((unint64_t)v897 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v902 = (_QWORD *)(((unint64_t)v898 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v901 = *v902;
                  v903 = (void *)(((unint64_t)v901 + v1628) & v1592);
                  v904 = (_BYTE *)(((unint64_t)v902 + v1628) & v1592);
                  if (v1731)
                  {
                    v905 = v1636;
                    if (v1636 >= v1637)
                    {
                      v906 = ((unint64_t)v902 + v1628) & v1592;
                      v907 = v1639;
                    }
                    else
                    {
                      v906 = (unint64_t)&v904[v1640] & v1590;
                      v905 = v1637;
                      v907 = v1643;
                    }
                    v1013 = __swift_getEnumTagSinglePayload(v906, v905, v907);
                    v995 = v1642;
                    v588 = a1;
                  }
                  else
                  {
                    v995 = v1642;
                    v588 = a1;
                    if (!v904[v1722])
                      goto LABEL_1891;
                    v996 = (v904[v1722] - 1) << v452;
                    if (v1722 > 3)
                      v996 = 0;
                    if ((_DWORD)v1722)
                    {
                      if (v1722 <= 3)
                        v997 = v1722;
                      else
                        v997 = 4;
                      __asm { BR              X11 }
                    }
                    v1013 = v996 + 1;
                  }
                  if (v1013)
                  {
                    memcpy(v903, v904, v1720);
                    goto LABEL_1893;
                  }
LABEL_1891:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1634 + 32))(v903, v904, v1639);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1635 + 32))(((unint64_t)v903 + v1640) & v1590, (unint64_t)&v904[v1640] & v1590, v1643);
                  if (!v1731)
                    *((_BYTE *)v903 + v1722) = 0;
LABEL_1893:
                  v1291 = (void *)(((unint64_t)v903 + v1622) & v1592);
                  v1292 = (_BYTE *)((unint64_t)&v904[v1622] & v1592);
                  if (v1731)
                  {
                    v1293 = v1636;
                    if (v1636 >= v1637)
                    {
                      v1294 = (uint64_t)v1292;
                      v1295 = v1639;
                    }
                    else
                    {
                      v1294 = (unint64_t)&v1292[v1640] & v1590;
                      v1293 = v1637;
                      v1295 = v1643;
                    }
                    v1298 = __swift_getEnumTagSinglePayload(v1294, v1293, v1295);
                  }
                  else
                  {
                    if (!v1292[v1722])
                      goto LABEL_1932;
                    v1296 = (v1292[v1722] - 1) << v452;
                    if (v1722 > 3)
                      v1296 = 0;
                    if ((_DWORD)v1722)
                    {
                      if (v1722 <= 3)
                        v1297 = v1722;
                      else
                        v1297 = 4;
                      __asm { BR              X11 }
                    }
                    v1298 = v1296 + 1;
                  }
                  if (v1298)
                  {
                    memcpy(v1291, v1292, v1720);
                    goto LABEL_1934;
                  }
LABEL_1932:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1634 + 32))(v1291, v1292, v1639);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1635 + 32))(((unint64_t)v1291 + v1640) & v1590, (unint64_t)&v1292[v1640] & v1590, v1643);
                  if (!v1731)
                    *((_BYTE *)v1291 + v1722) = 0;
LABEL_1934:
                  v1311 = (_QWORD *)(((unint64_t)v1291 + v1678) & v1774);
                  v1312 = (uint64_t *)((unint64_t)&v1292[v1678] & v1774);
                  if ((v1637 & 0x80000000) != 0)
                  {
                    v1314 = __swift_getEnumTagSinglePayload(((unint64_t)v1312 + v1625) & v1590, v1637, v1643);
                  }
                  else
                  {
                    v1313 = *v1312;
                    if ((unint64_t)*v1312 >= 0xFFFFFFFF)
                      LODWORD(v1313) = -1;
                    v1314 = v1313 + 1;
                  }
                  if (v1314)
                  {
                    memcpy(v1311, v1312, v1714);
                  }
                  else
                  {
                    *v1311 = *v1312;
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v1635 + 32))(((unint64_t)v1311 + v1625) & v1590, ((unint64_t)v1312 + v1625) & v1590, v1643);
                  }
                  v1315 = (_QWORD *)(((unint64_t)v1311 + v1610) & v1774);
                  v1316 = (uint64_t *)(((unint64_t)v1312 + v1610) & v1774);
                  if ((v1637 & 0x80000000) != 0)
                  {
                    v1318 = __swift_getEnumTagSinglePayload(((unint64_t)v1316 + v1625) & v1590, v1637, v1643);
                  }
                  else
                  {
                    v1317 = *v1316;
                    if ((unint64_t)*v1316 >= 0xFFFFFFFF)
                      LODWORD(v1317) = -1;
                    v1318 = v1317 + 1;
                  }
                  if (v1318)
                  {
                    memcpy(v1315, v1316, v1714);
                  }
                  else
                  {
                    *v1315 = *v1316;
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v1635 + 32))(((unint64_t)v1315 + v1625) & v1590, ((unint64_t)v1316 + v1625) & v1590, v1643);
                  }
                  v1319 = (char *)v1315 + v1714;
                  *v1319 = *((_BYTE *)v1316 + v1714);
                  v1319[1] = *((_BYTE *)v1316 + v1714 + 1);
                  v1320 = (_OWORD *)(((unint64_t)v1315 + v1714 + 9) & 0xFFFFFFFFFFFFFFF8);
                  v1321 = (_OWORD *)(((unint64_t)v1316 + v1714 + 9) & 0xFFFFFFFFFFFFFFF8);
                  *v1320 = *v1321;
                  v1322 = ((unint64_t)v1320 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v1323 = ((unint64_t)v1321 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v1324 = *(_OWORD *)v1323;
                  *(_BYTE *)(v1322 + 16) = *(_BYTE *)(v1323 + 16);
                  *(_OWORD *)v1322 = v1324;
                  v1325 = ((unint64_t)v1320 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1326 = ((unint64_t)v1321 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1327 = *(_OWORD *)v1326;
                  v1328 = *(_OWORD *)(v1326 + 16);
                  *(_QWORD *)(v1325 + 32) = *(_QWORD *)(v1326 + 32);
                  *(_OWORD *)v1325 = v1327;
                  *(_OWORD *)(v1325 + 16) = v1328;
                  v1329 = (v1757 + v1325) & v1697;
                  v1330 = (v1757 + v1326) & v1697;
                  if (v1638 < 0x7FFFFFFF)
                  {
                    v1331 = *(_QWORD *)(((v1757 + v1326) & v1697) + 0x10);
                    if (v1331 >= 0xFFFFFFFF)
                      LODWORD(v1331) = -1;
                    v1332 = ~v1750;
                    if ((int)v1331 - 1 < 0)
                    {
                      v1333 = (const void *)(v1330 + 8);
                      v1334 = (const void *)((v995 + v1330) & v1692);
                      goto LABEL_1957;
                    }
LABEL_1959:
                    v1336 = v1718;
                    memcpy((void *)v1329, (const void *)v1330, v1718);
                    goto LABEL_1962;
                  }
                  v1332 = ~v1750;
                  v1334 = (const void *)((v995 + v1330) & v1692);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v1334, v1632, v1644) > 1)
                    goto LABEL_1959;
                  v1333 = (const void *)(v1330 + 8);
LABEL_1957:
                  *(_BYTE *)v1329 = *(_BYTE *)v1330;
                  memcpy((void *)(v1329 + 8), v1333, 0x69uLL);
                  v1335 = (void *)((v995 + v1329) & v1332);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v1334, 1, v1644))
                  {
                    memcpy(v1335, v1334, v1716);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1626 + 32))(v1335, v1334, v1644);
                    __swift_storeEnumTagSinglePayload((uint64_t)v1335, 0, 1, v1644);
                  }
                  v1336 = v1718;
LABEL_1962:
                  *(_OWORD *)(((v1329 | 7) + v1336) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((v1330 | 7) + v1336) & 0xFFFFFFFFFFFFF8);
                  v502 = 45;
                  v454 = v1594;
                  v513 = v1645;
LABEL_1963:
                  v451 = v1706;
LABEL_1964:
                  v450 = (uint64_t)v570;
LABEL_2171:
                  *((_BYTE *)v496 + v451) = v502;
                  *(_QWORD *)(((unint64_t)v496 + v513) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v513 + v450) & 0xFFFFFFFFFFFFF8);
                  *((_BYTE *)v588 + v454) = 1;
LABEL_2172:
                  a3 = v1695;
LABEL_2173:
                  v1764 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
                  v1463 = *(_QWORD *)(sub_21D7C4668() - 8);
                  v1464 = *(unsigned __int8 *)(v1463 + 80);
                  v1762 = v1464 + 16;
                  v1465 = *(_DWORD *)(v1463 + 84);
                  v1466 = *(_QWORD *)(v1463 + 64);
                  if (!v1465)
                    ++v1466;
                  v1467 = ((v1464 + 16) & ~v1464) + v1466;
                  v1770 = v1464 | 7;
                  v1772 = v1466;
                  v1468 = *(_QWORD *)(sub_21D7BF754() - 8);
                  v1469 = *(unsigned __int8 *)(v1468 + 80);
                  v1470 = v1469 | 7;
                  v1471 = v1464 | 7 | v1469;
                  v1472 = *(_QWORD *)(sub_21D7C3840() - 8);
                  v1473 = *(unsigned __int8 *)(v1472 + 80);
                  v1474 = *(_QWORD *)(sub_21D7C3804() - 8);
                  v1475 = *(_DWORD *)(v1474 + 84);
                  v1476 = *(_DWORD *)(v1474 + 80);
                  v1477 = *(_DWORD *)(v1474 + 80) | v1473;
                  v1478 = v1471 | v1477;
                  v1756 = v1464;
                  v1758 = v1464 + 40;
                  v1479 = (v1464 + 40) & ~v1464;
                  v1480 = (v1469 + 113) & ~v1469;
                  v1481 = *(_QWORD *)(v1468 + 64);
                  v1753 = *(_QWORD *)(v1474 + 64);
                  v1482 = ((*(_QWORD *)(v1472 + 64) + v1476) & ~v1476) + v1753;
                  if (!*(_DWORD *)(v1468 + 84))
                    ++v1481;
                  v1738 = v1481;
                  v1740 = v1479 + v1772;
                  v1744 = (v1479 + v1772 + 7) & 0xFFFFFFFFFFFFFFF8;
                  v1775 = v1469 + 40;
                  v1730 = v1481 + v1480;
                  if (!(v1475 | *(_DWORD *)(v1472 + 84)))
                    ++v1482;
                  v1728 = v1482;
                  v1725 = v1482 + 1;
                  v1483 = v1482 + 1 + ((v1477 + 160) & ~v1477);
                  if (v1481
                     + v1480
                     + ((v1469 + 40 + ((((v1744 + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v1470) > v1483)
                    v1483 = v1481
                          + v1480
                          + ((v1469 + 40 + ((((v1744 + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v1470);
                  if (v1483 <= 0x30)
                    v1483 = 48;
                  v1736 = v1483 + ((v1478 + 1) & ~v1478) + 1;
                  v1484 = *(_QWORD *)(sub_21D7C3F6C() - 8);
                  v1485 = *(unsigned __int8 *)(v1484 + 80);
                  v1486 = ((v1485 | 7)
                         + ((((v1467 + (v1471 | v1477)) & ~(v1471 | v1477)) + v1736 + 11) & 0xFFFFFFFFFFFFFFF8)
                         + 58) & ~(v1485 | 7);
                  v1487 = *(_DWORD *)(v1484 + 84) == 0;
                  v1488 = (v1485 + 16) & ~v1485;
                  v1489 = *(_QWORD *)(v1484 + 64);
                  if (v1487)
                    ++v1489;
                  v1490 = v1489 + v1488;
                  v1491 = *(_QWORD *)(sub_21D7C4314() - 8);
                  v1492 = *(unsigned __int8 *)(v1491 + 80);
                  v1721 = v1492 | 7;
                  v1723 = v1476 | 7;
                  v1493 = *(_QWORD *)(sub_21D7BF964() - 8);
                  v1494 = *(unsigned __int8 *)(v1493 + 80);
                  v1760 = (v1490 + (v1478 | v1476 | v1492 | v1494) + v1486) & ~(v1478 | v1476 | v1492 | v1494);
                  v1751 = v1772 + 7;
                  v1495 = (v1772 + 7) & 0xFFFFFFFFFFFFFFF8;
                  v1496 = (v1495 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1497 = v1753 + ((v1476 + 8) & ~v1476);
                  v1498 = *(_QWORD *)(v1493 + 64) + ((v1725 + v1494 + ((v1496 + 16 + v1477) & ~v1477)) & ~v1494);
                  v1499 = (v1496 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v1500 = ((v1492 + 65) & ~v1492) + *(_QWORD *)(v1491 + 64);
                  v1501 = (((((v1499 + 15) & 0xFFFFFFFFFFFFFFF8) + v1721 + 16) & ~v1721) + v1500) & 0xFFFFFFFFFFFFFFF8;
                  v1754 = v1477 + 16;
                  v1502 = v1728 + v1723;
                  v1749 = v1497;
                  v1503 = v1497 + v1470;
                  v1746 = (v1496 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1504 = v1746 + v1770 + 16;
                  v1732 = v1746 + 24;
                  v1505 = v1469 + 8;
                  v1506 = v1730 + ((v1469 + 8) & ~v1470);
                  if (v1506 <= v1746
                              + 24
                              + ((v1504
                                + ((v1504
                                  + ((v1730
                                    + v1770
                                    + ((v1497
                                      + v1470
                                      + ((v1728 + v1723 + ((v1477 + 16 + ((v1501 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v1477)) & ~v1723)) & ~v1470)) & ~v1770)) & ~v1770)) & ~v1770))
                    v1507 = v1746
                          + 24
                          + ((v1504
                            + ((v1504
                              + ((v1730
                                + v1770
                                + ((v1497
                                  + v1470
                                  + ((v1728 + v1723 + ((v1477 + 16 + ((v1501 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v1477)) & ~v1723)) & ~v1470)) & ~v1770)) & ~v1770)) & ~v1770);
                  else
                    v1507 = v1730 + ((v1469 + 8) & ~v1470);
                  v1508 = v1730 + v1477;
                  v1509 = ((v1502
                          + ((v1730 + v1477 + ((v1775 + ((v1498 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v1470)) & ~v1477)) & ~v1723)
                        + v1497;
                  if (v1507 <= v1509)
                    v1507 = v1509;
                  v1510 = v1728 + 7;
                  v1511 = ((((v1728
                            + 7
                            + ((v1508 + ((v1470 + ((v1499 + 47) & 0xFFFFFFFFFFFFFFF8) + 41) & ~v1470)) & ~v1477)) & 0xFFFFFFFFFFFFFFF8)
                          + 47) & 0xFFFFFFFFFFFFFFF8)
                        + 16;
                  if (v1507 <= v1511)
                    v1507 = ((((v1728
                              + 7
                              + ((v1508 + ((v1470 + ((v1499 + 47) & 0xFFFFFFFFFFFFFFF8) + 41) & ~v1470)) & ~v1477)) & 0xFFFFFFFFFFFFFFF8)
                            + 47) & 0xFFFFFFFFFFFFFFF8)
                          + 16;
                  v1512 = v1495 + 40;
                  v1513 = v1478 + v1495 + 40;
                  v1514 = (v1513 | v1478) + v1511;
                  v1515 = v1513 & ~v1478;
                  v1516 = ((v1478 + ((v1736 + (v1514 & ~v1478) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v1478) + v1736;
                  if (v1507 > v1516)
                    v1516 = v1507;
                  v1517 = (v1730 + 7 + ((v1512 + v1469) & ~v1470)) & 0xFFFFFFFFFFFFFFF8;
                  if (v1516 <= ((((((v1517 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
                              + 8)
                    v1516 = ((((((v1517 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
                          + 8;
                  v1518 = ((v1503
                          + ((v1502
                            + ((v1725 + v1477 + ((((v1496 + 16 + v1469) & ~v1469) + v1477 + v1738) & ~v1477)) & ~v1477)) & ~v1723)) & ~v1470)
                        + v1730;
                  if (v1516 > v1518)
                    v1518 = v1516;
                  if (v1518 <= (((((v1740 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                              + 16)
                    v1518 = (((((v1740 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                          + 16;
                  if (v1518 <= ((v1500 + ((v1512 + v1492) & ~v1721) + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
                    v1518 = ((v1500 + ((v1512 + v1492) & ~v1721) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
                  v1519 = v1730 + ((v1744 + v1470 + 17) & ~v1470);
                  if (v1518 <= v1519 + 1)
                    v1520 = v1519 + 1;
                  else
                    v1520 = v1518;
                  v1521 = (v1744 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v1522 = (((v1521 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
                  if (v1520 <= ((((v1522 + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 41)
                    v1520 = ((((v1522 + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 41;
                  if (v1520 <= ((v1728
                                + v1477
                                + ((v1477
                                  + ((((((v1522 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                                  + 40) & ~v1477)) & ~v1477)
                              + v1728)
                    v1520 = ((v1728
                            + v1477
                            + ((v1477
                              + ((((((v1522 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                              + 40) & ~v1477)) & ~v1477)
                          + v1728;
                  v1523 = (v1499 + 23) & 0xFFFFFFFFFFFFFFF8;
                  if (v1520 <= v1523 + 8)
                    v1520 = v1523 + 8;
                  v1524 = ((v1523 + 47) & 0xFFFFFFFFFFFFFFF8) + 40;
                  v1525 = (v1510 + v1515 + ((v1508 + ((v1524 + v1470) & ~v1470)) & ~v1477)) & 0xFFFFFFFFFFFFFFF8;
                  if (v1520 <= ((v1505 + v1525) & ~v1470) + v1730)
                    v1526 = ((v1505 + v1525) & ~v1470) + v1730;
                  else
                    v1526 = v1520;
                  v1527 = (v1504
                         + ((v1504
                           + ((v1730 + v1770 + ((v1503 + ((v1502 + ((v1477 + v1501 + 24) & ~v1477)) & ~v1723)) & ~v1470)) & ~v1770)) & ~v1770)) & ~v1770;
                  if (v1526 <= v1496 + 17)
                    v1526 = v1496 + 17;
                  if (v1526 <= v1732 + v1527)
                    v1526 = v1732 + v1527;
                  if (v1526 <= v1506)
                    v1526 = v1730 + ((v1469 + 8) & ~v1470);
                  v1528 = (v1496 + 15) & 0xFFFFFFFFFFFFFFF8;
                  if (v1526 <= v1528 + 16)
                    v1526 = v1528 + 16;
                  if (v1526 <= ((v1740 + 9) & 0xFFFFFFFFFFFFFFF8) + 17)
                    v1526 = ((v1740 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
                  if (v1526 <= ((v1756 + 80) & (unint64_t)~v1756) + v1772)
                    v1526 = ((v1756 + 80) & ~v1756) + v1772;
                  if (v1526 <= ((v1756 + 56) & (unint64_t)~v1756) + v1772)
                    v1526 = ((v1756 + 56) & ~v1756) + v1772;
                  v1529 = (v1758 + (v1510 & 0xFFFFFFFFFFFFFFF8)) & ~v1756;
                  if (v1526 <= ((((v1751 + v1529) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16)
                    v1526 = ((((v1751 + v1529) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
                  v1530 = (v1517 + 23) & 0xFFFFFFFFFFFFFFF8;
                  if (v1526 <= ((v1477 + v1530 + 18) & ~v1477) + v1728)
                    v1526 = ((v1477 + v1530 + 18) & ~v1477) + v1728;
                  v1531 = v1477 + 8;
                  v1532 = ((v1510
                          + ((v1477
                            + 8
                            + ((((((((((v1530 + 25) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                + 23) & 0xFFFFFFFFFFFFFFF8)
                              + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v1477)) & 0xFFFFFFFFFFFFFFF8)
                        + 16;
                  if (v1526 <= v1532)
                    v1526 = v1532;
                  if (v1526 <= v1499 + 40)
                    v1526 = v1499 + 40;
                  if (v1526 <= v1528 + 8)
                    v1526 = v1528 + 8;
                  if (v1526 <= v1524)
                    v1526 = v1524;
                  if (v1526 <= v1496 + 8)
                    v1526 = v1496 + 8;
                  if (v1526 <= v1744 + 8)
                    v1526 = v1744 + 8;
                  if (v1526 <= ((v1744 + 15) & 0xFFFFFFFFFFFFFFF8) + 8)
                    v1526 = ((v1744 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
                  if (v1526 <= v1740)
                    v1526 = v1740;
                  v1533 = (((v1746 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
                  if (v1526 <= ((v1730
                                + 7
                                + ((v1775
                                  + ((((v1749
                                      + ((v1749
                                        + v1723
                                        + ((v1502
                                          + ((v1728
                                            + v1477
                                            + ((v1531
                                              + ((((v1533 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v1477)) & ~v1477)) & ~v1723)) & ~v1723)
                                      + 9) & 0xFFFFFFFFFFFFFFF8)
                                    + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v1470)) & 0xFFFFFFFFFFFFFFF8)
                              + 16)
                    v1526 = ((v1730
                            + 7
                            + ((v1775
                              + ((((v1749
                                  + ((v1749
                                    + v1723
                                    + ((v1502
                                      + ((v1728
                                        + v1477
                                        + ((v1531 + ((((v1533 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v1477)) & ~v1477)) & ~v1723)) & ~v1723)
                                  + 9) & 0xFFFFFFFFFFFFFFF8)
                                + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v1470)) & 0xFFFFFFFFFFFFFFF8)
                          + 16;
                  v1534 = ((v1470
                          + v1496
                          + 17
                          + ((v1762 + ((((v1521 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v1770)
                          + 23) & ~v1470)
                        + v1730;
                  if (v1526 > v1534)
                    v1534 = v1526;
                  if (v1534 <= ((v1728
                                + v1470
                                + ((v1754
                                  + ((v1510
                                    + ((v1477
                                      + ((((v1510 + ((v1500 + v1477 + ((v1533 + v1721 + 8) & ~v1721)) & ~v1477)) & 0xFFFFFFFFFFFFFFF8)
                                        + 23) & 0xFFFFFFFFFFFFFFF8)
                                      + 9) & ~v1477)) & 0xFFFFFFFFFFFFFFF8)) & ~v1477)) & ~v1470)
                              + v1730)
                    v1534 = ((v1728
                            + v1470
                            + ((v1754
                              + ((v1510
                                + ((v1477
                                  + ((((v1510 + ((v1500 + v1477 + ((v1533 + v1721 + 8) & ~v1721)) & ~v1477)) & 0xFFFFFFFFFFFFFFF8)
                                    + 23) & 0xFFFFFFFFFFFFFFF8)
                                  + 9) & ~v1477)) & 0xFFFFFFFFFFFFFFF8)) & ~v1477)) & ~v1470)
                          + v1730;
                  if (v1534 <= 8)
                    v1534 = 8;
                  v1535 = ((v1760 + v1534 + 8) & 0xFFFFFFFFFFFFFFF8) + 8;
                  if (v1535 <= v1764)
                    v1535 = v1764;
                  if (v1535 <= 8)
                    v1535 = 8;
                  v1536 = v1535 + 8;
                  v1537 = (uint64_t *)(((unint64_t)a1 + v1536) & 0xFFFFFFFFFFFFFFF8);
                  v1538 = (unint64_t *)(((unint64_t)a2 + v1536) & 0xFFFFFFFFFFFFFFF8);
                  if ((unint64_t)*v1537 >= 0xFFFFFFFF)
                    LODWORD(v1539) = -1;
                  else
                    v1539 = *v1537;
                  v1540 = *v1538;
                  if ((int)v1539 - 1 < 0)
                  {
                    LODWORD(v1541) = -1;
                    if (v1540 < 0xFFFFFFFF)
                      v1541 = *v1538;
                    if ((int)v1541 - 1 < 0)
                    {
                      *v1537 = v1540;
                      swift_bridgeObjectRelease();
                      return a1;
                    }
                    swift_bridgeObjectRelease();
                    v1540 = *v1538;
                  }
                  *v1537 = v1540;
                  return a1;
                case 0x2E:
                  v496 = __dstb;
                  *__dstb = *(_QWORD *)v450;
                  v502 = 46;
                  goto LABEL_1023;
                case 0x2F:
                  v496 = __dstb;
                  *__dstb = *(_QWORD *)v450;
                  v502 = 47;
                  goto LABEL_1023;
                case 0x30:
                  v496 = __dstb;
                  *__dstb = *(_QWORD *)v450;
                  v502 = 48;
                  goto LABEL_1023;
                case 0x31:
                  v496 = __dstb;
                  *__dstb = *(_QWORD *)v450;
                  v502 = 49;
                  goto LABEL_1023;
                case 0x32:
                  v580 = *(_OWORD *)v450;
                  v581 = *(_OWORD *)(v450 + 16);
                  __dstb[4] = *(_QWORD *)(v450 + 32);
                  *(_OWORD *)__dstb = v580;
                  *((_OWORD *)__dstb + 1) = v581;
                  v582 = (void *)(((unint64_t)__dstb + v1724) & v1708);
                  v1768 = v450;
                  v583 = (const void *)((v1724 + v450) & v1708);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v583, 1, v429))
                  {
                    memcpy(v582, v583, v1745);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1680 + 32))(v582, v583, v429);
                    __swift_storeEnumTagSinglePayload((uint64_t)v582, 0, 1, v429);
                  }
                  v908 = v1735;
                  v909 = (_OWORD *)(((unint64_t)v582 + v1739) & 0xFFFFFFFFFFFFFFF8);
                  v910 = (_OWORD *)(((unint64_t)v583 + v1739) & 0xFFFFFFFFFFFFFFF8);
                  *v909 = *v910;
                  v911 = ((unint64_t)v909 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v912 = ((unint64_t)v910 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v913 = *(_OWORD *)v912;
                  v914 = *(_OWORD *)(v912 + 16);
                  *(_QWORD *)(v911 + 32) = *(_QWORD *)(v912 + 32);
                  *(_OWORD *)v911 = v913;
                  *(_OWORD *)(v911 + 16) = v914;
                  v915 = (_QWORD *)((v911 + 47) & 0xFFFFFFFFFFFFF8);
                  v916 = (_QWORD *)((v912 + 47) & 0xFFFFFFFFFFFFF8);
                  *v915 = *v916;
                  v917 = (_OWORD *)(((unint64_t)v915 + 15) & 0xFFFFFFFFFFFFFFF8);
                  v918 = (_OWORD *)(((unint64_t)v916 + 15) & 0xFFFFFFFFFFFFFFF8);
                  *v917 = *v918;
                  v919 = (char *)(((unint64_t)v917 + v1713) & v1694);
                  v920 = (char *)(((unint64_t)v918 + v1713) & v1694);
                  if (v1630 < 0x7FFFFFFF)
                  {
                    v921 = v1642;
                    v496 = __dstb;
                    if (*(_QWORD *)(((unint64_t)&v920[v1739] & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                      goto LABEL_1252;
                  }
                  else
                  {
                    v921 = v1642;
                    v496 = __dstb;
                    if (__swift_getEnumTagSinglePayload((uint64_t)v920, v1719, v429) >= 2)
                    {
LABEL_1252:
                      memcpy(v919, v920, v1735);
                      goto LABEL_1389;
                    }
                  }
                  if (__swift_getEnumTagSinglePayload((uint64_t)v920, 1, v1688))
                  {
                    memcpy(v919, v920, v1745);
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(v1680 + 32))(v919, v920, v1688);
                    __swift_storeEnumTagSinglePayload((uint64_t)v919, 0, 1, v1688);
                  }
                  v1026 = (unint64_t)&v919[v1739] & 0xFFFFFFFFFFFFFFF8;
                  v1027 = (unint64_t)&v920[v1739] & 0xFFFFFFFFFFFFFFF8;
                  v1028 = *(_OWORD *)v1027;
                  v1029 = *(_OWORD *)(v1027 + 16);
                  *(_QWORD *)(v1026 + 32) = *(_QWORD *)(v1027 + 32);
                  *(_OWORD *)v1026 = v1028;
                  *(_OWORD *)(v1026 + 16) = v1029;
                  v1030 = (v1026 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1031 = (v1027 + 47) & 0xFFFFFFFFFFFFFFF8;
                  *(_OWORD *)v1030 = *(_OWORD *)v1031;
                  *(_BYTE *)(v1030 + 16) = *(_BYTE *)(v1031 + 16);
                  if (v1719)
                    v908 = ((((v1674 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 17;
LABEL_1389:
                  *(_OWORD *)&v919[v908 + 7] = *(_OWORD *)&v920[v908 + 7];
                  v1032 = (_BYTE *)((unint64_t)&v919[v908 + v1609] & v1697);
                  v1033 = (_BYTE *)((unint64_t)&v920[v908 + v1609] & v1697);
                  if (v1638 >= 0x7FFFFFFF)
                  {
                    v1035 = ~v1750;
                    v1037 = (unint64_t)&v1033[v921] & v1692;
                    v588 = a1;
                    if (__swift_getEnumTagSinglePayload(v1037, v1632, v1644) <= 1)
                    {
                      v1036 = v1033 + 8;
                      goto LABEL_1396;
                    }
                  }
                  else
                  {
                    v1034 = *(_QWORD *)(((unint64_t)&v920[v908 + v1609] & v1697) + 0x10);
                    if (v1034 >= 0xFFFFFFFF)
                      LODWORD(v1034) = -1;
                    v1035 = ~v1750;
                    v588 = a1;
                    if ((int)v1034 - 1 < 0)
                    {
                      v1036 = v1033 + 8;
                      v1037 = (unint64_t)&v1033[v921] & v1692;
LABEL_1396:
                      *v1032 = *v1033;
                      memcpy(v1032 + 8, v1036, 0x69uLL);
                      v1038 = (unint64_t)&v1032[v921] & v1035;
                      if (!__swift_getEnumTagSinglePayload(v1037, 1, v1644))
                      {
                        (*(void (**)(uint64_t, uint64_t, uint64_t))(v1626 + 32))(v1038, v1037, v1644);
                        __swift_storeEnumTagSinglePayload(v1038, 0, 1, v1644);
                        goto LABEL_1400;
                      }
                      v1039 = (void *)v1038;
                      v1040 = (const void *)v1037;
                      v1041 = v1716;
LABEL_1399:
                      memcpy(v1039, v1040, v1041);
LABEL_1400:
                      v502 = 50;
                      goto LABEL_1999;
                    }
                  }
                  v1039 = v1032;
                  v1040 = v1033;
                  v1041 = v1718;
                  goto LABEL_1399;
                case 0x33:
                  v584 = (const void *)v450;
                  v585 = v429;
                  v586 = __swift_getEnumTagSinglePayload(v450, 1, v429);
                  v587 = v419;
                  v496 = __dstb;
                  if (v586)
                  {
                    memcpy(__dstb, v584, v1745);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, const void *, uint64_t))(v1680 + 32))(__dstb, v584, v585);
                    __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v585);
                  }
                  v922 = ((unint64_t)__dstb + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v1768 = (uint64_t)v584;
                  v923 = ((unint64_t)v584 + v1739) & 0xFFFFFFFFFFFFFFF8;
                  v924 = *(_OWORD *)v923;
                  v925 = *(_OWORD *)(v923 + 16);
                  *(_QWORD *)(v922 + 32) = *(_QWORD *)(v923 + 32);
                  *(_OWORD *)v922 = v924;
                  *(_OWORD *)(v922 + 16) = v925;
                  v926 = (v922 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v927 = (v923 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v928 = *(_OWORD *)v927;
                  v929 = *(_OWORD *)(v927 + 16);
                  *(_QWORD *)(v926 + 32) = *(_QWORD *)(v927 + 32);
                  *(_OWORD *)v926 = v928;
                  *(_OWORD *)(v926 + 16) = v929;
                  v930 = (_OWORD *)((v926 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v931 = (_OWORD *)((v927 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v930 = *v931;
                  v932 = (_OWORD *)(((unint64_t)v930 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v933 = (_OWORD *)(((unint64_t)v931 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v932 = *v933;
                  v934 = (_QWORD *)(((unint64_t)v932 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v935 = (_QWORD *)(((unint64_t)v933 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v934 = *v935;
                  v936 = (_OWORD *)(((unint64_t)v934 + v1599) & v1763);
                  v937 = (_OWORD *)(((unint64_t)v935 + v1599) & v1763);
                  if (v434 > 0x7FFFFFFE)
                  {
                    v943 = v434;
                    v941 = (_OWORD *)(((unint64_t)v937 + 23) & 0xFFFFFFFFFFFFFFF8);
                    v942 = ((unint64_t)v941 + 23) & 0xFFFFFFFFFFFFFFF8;
                    v939 = v1642;
                    v940 = v1637;
                    if (!__swift_getEnumTagSinglePayload((v1717 + v942 + 33) & v1690, v943, v1623))
                      goto LABEL_1264;
                  }
                  else
                  {
                    v938 = *(_QWORD *)((((unint64_t)v935 + v1599) & v1763) + 8);
                    if (v938 >= 0xFFFFFFFF)
                      LODWORD(v938) = -1;
                    v939 = v1642;
                    v940 = v1637;
                    if ((v938 + 1) <= 1)
                    {
                      v941 = (_OWORD *)(((unint64_t)v937 + 23) & 0xFFFFFFFFFFFFFFF8);
                      v942 = ((unint64_t)v941 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_1264:
                      *v936 = *v937;
                      v944 = (_OWORD *)(((unint64_t)v936 + 23) & 0xFFFFFFFFFFFFFFF8);
                      *v944 = *v941;
                      v945 = ((unint64_t)v944 + 23) & 0xFFFFFFFFFFFFFFF8;
                      *(_OWORD *)v945 = *(_OWORD *)v942;
                      *(_BYTE *)(v945 + 16) = *(_BYTE *)(v942 + 16);
                      v946 = ((unint64_t)v944 + 47) & 0xFFFFFFFFFFFFFFF8;
                      v947 = ((unint64_t)v941 + 47) & 0xFFFFFFFFFFFFFFF8;
                      *(_QWORD *)v946 = *(_QWORD *)v947;
                      *(_BYTE *)(v946 + 8) = *(_BYTE *)(v947 + 8);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1712 + 32))((v1717 + 9 + v946) & v1690, (v1717 + 9 + v947) & v1690, v1623);
LABEL_1265:
                      v948 = (void *)(((unint64_t)v936 + v1604) & v1592);
                      v949 = (_BYTE *)(((unint64_t)v937 + v1604) & v1592);
                      if (v1731)
                      {
                        v950 = v1636;
                        if (v1636 >= v940)
                        {
                          v951 = (uint64_t)v949;
                          v952 = v1639;
                        }
                        else
                        {
                          v951 = (unint64_t)&v949[v1640] & v1590;
                          v950 = v940;
                          v952 = v1643;
                        }
                        v1014 = __swift_getEnumTagSinglePayload(v951, v950, v952);
                      }
                      else
                      {
                        if (!v949[v1722])
                          goto LABEL_1909;
                        v998 = (v949[v1722] - 1) << v419;
                        if (v1722 > 3)
                          v998 = 0;
                        if ((_DWORD)v1722)
                        {
                          if (v1722 <= 3)
                            v999 = v1722;
                          else
                            v999 = 4;
                          __asm { BR              X11 }
                        }
                        v1014 = v998 + 1;
                      }
                      if (v1014)
                      {
                        memcpy(v948, v949, v1720);
                        goto LABEL_1911;
                      }
LABEL_1909:
                      (*(void (**)(void *, _BYTE *, uint64_t))(v1634 + 32))(v948, v949, v1639);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1635 + 32))(((unint64_t)v948 + v1640) & v1590, (unint64_t)&v949[v1640] & v1590, v1643);
                      if (!v1731)
                        *((_BYTE *)v948 + v1722) = 0;
LABEL_1911:
                      v1299 = (_OWORD *)(((unint64_t)v948 + v1627) & 0xFFFFFFFFFFFFFFF8);
                      v1300 = (_OWORD *)((unint64_t)&v949[v1627] & 0xFFFFFFFFFFFFFFF8);
                      *v1299 = *v1300;
                      v1301 = ((unint64_t)v1299 + 23) & 0xFFFFFFFFFFFFFFF8;
                      v1302 = ((unint64_t)v1300 + 23) & 0xFFFFFFFFFFFFFFF8;
                      *(_QWORD *)v1301 = *(_QWORD *)v1302;
                      *(_BYTE *)(v1301 + 8) = *(_BYTE *)(v1302 + 8);
                      v1303 = (void *)((v1607 + v1301) & v1592);
                      v1304 = (_BYTE *)((v1607 + v1302) & v1592);
                      if (v1731)
                      {
                        v1305 = v1636;
                        if (v1636 >= v940)
                        {
                          v1306 = (v1607 + v1302) & v1592;
                          v1307 = v1639;
                        }
                        else
                        {
                          v1306 = (unint64_t)&v1304[v1640] & v1590;
                          v1305 = v940;
                          v1307 = v1643;
                        }
                        v1310 = __swift_getEnumTagSinglePayload(v1306, v1305, v1307);
                      }
                      else
                      {
                        if (!v1304[v1722])
                          goto LABEL_1967;
                        v1308 = (v1304[v1722] - 1) << v419;
                        if (v1722 > 3)
                          v1308 = 0;
                        if ((_DWORD)v1722)
                        {
                          if (v1722 <= 3)
                            v1309 = v1722;
                          else
                            v1309 = 4;
                          __asm { BR              X11 }
                        }
                        v1310 = v1308 + 1;
                      }
                      if (v1310)
                      {
                        memcpy(v1303, v1304, v1720);
                        goto LABEL_1969;
                      }
LABEL_1967:
                      (*(void (**)(void *, _BYTE *, uint64_t))(v1634 + 32))(v1303, v1304, v1639);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1635 + 32))(((unint64_t)v1303 + v1640) & v1590, (unint64_t)&v1304[v1640] & v1590, v1643);
                      if (!v1731)
                        *((_BYTE *)v1303 + v1722) = 0;
LABEL_1969:
                      v1337 = (_OWORD *)(((unint64_t)v1303 + v1627) & 0xFFFFFFFFFFFFFFF8);
                      v1338 = (_OWORD *)((unint64_t)&v1304[v1627] & 0xFFFFFFFFFFFFFFF8);
                      *v1337 = *v1338;
                      v1339 = (void *)(((unint64_t)v1337 + v1737) & v1592);
                      v1340 = (_BYTE *)(((unint64_t)v1338 + v1737) & v1592);
                      if (v1731)
                      {
                        v1341 = v1636;
                        if (v1636 >= v940)
                        {
                          v1342 = ((unint64_t)v1338 + v1737) & v1592;
                          v1343 = v1639;
                        }
                        else
                        {
                          v1342 = (unint64_t)&v1340[v1640] & v1590;
                          v1341 = v940;
                          v1343 = v1643;
                        }
                        v1346 = __swift_getEnumTagSinglePayload(v1342, v1341, v1343);
                        v588 = a1;
                      }
                      else
                      {
                        v588 = a1;
                        if (!v1340[v1722])
                          goto LABEL_1985;
                        v1344 = (v1340[v1722] - 1) << v587;
                        if (v1722 > 3)
                          v1344 = 0;
                        if ((_DWORD)v1722)
                        {
                          if (v1722 <= 3)
                            v1345 = v1722;
                          else
                            v1345 = 4;
                          __asm { BR              X11 }
                        }
                        v1346 = v1344 + 1;
                      }
                      if (v1346)
                      {
                        memcpy(v1339, v1340, v1720);
                        goto LABEL_1987;
                      }
LABEL_1985:
                      (*(void (**)(void *, _BYTE *, uint64_t))(v1634 + 32))(v1339, v1340, v1639);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1635 + 32))(((unint64_t)v1339 + v1640) & v1590, (unint64_t)&v1340[v1640] & v1590, v1643);
                      if (!v1731)
                        *((_BYTE *)v1339 + v1722) = 0;
LABEL_1987:
                      v1347 = (_BYTE *)(((unint64_t)v1339 + v1612) & v1697);
                      v1348 = (_BYTE *)((unint64_t)&v1340[v1612] & v1697);
                      if (v1638 >= 0x7FFFFFFF)
                      {
                        v1352 = (unint64_t)&v1348[v939] & v1692;
                        if (__swift_getEnumTagSinglePayload(v1352, v1632, v1644) <= 1)
                        {
                          v1350 = v1348 + 8;
                          v1351 = ~v1750;
                          goto LABEL_1994;
                        }
                      }
                      else
                      {
                        v1349 = *(_QWORD *)(((unint64_t)&v1340[v1612] & v1697) + 0x10);
                        if (v1349 >= 0xFFFFFFFF)
                          LODWORD(v1349) = -1;
                        if ((int)v1349 - 1 < 0)
                        {
                          v1350 = v1348 + 8;
                          v1351 = ~v1750;
                          v1352 = (unint64_t)&v1348[v939] & v1692;
LABEL_1994:
                          *v1347 = *v1348;
                          memcpy(v1347 + 8, v1350, 0x69uLL);
                          v1353 = (unint64_t)&v1347[v939] & v1351;
                          if (!__swift_getEnumTagSinglePayload(v1352, 1, v1644))
                          {
                            (*(void (**)(uint64_t, uint64_t, uint64_t))(v1626 + 32))(v1353, v1352, v1644);
                            __swift_storeEnumTagSinglePayload(v1353, 0, 1, v1644);
                            goto LABEL_1998;
                          }
                          v1354 = (void *)v1353;
                          v1355 = (const void *)v1352;
                          v1356 = v1716;
LABEL_1997:
                          memcpy(v1354, v1355, v1356);
LABEL_1998:
                          v502 = 51;
                          goto LABEL_1999;
                        }
                      }
                      v1354 = v1347;
                      v1355 = v1348;
                      v1356 = v1718;
                      goto LABEL_1997;
                    }
                  }
                  memcpy(v936, v937, v1761);
                  goto LABEL_1265;
                case 0x34:
                  v496 = __dstb;
                  *__dstb = *(_QWORD *)v450;
                  v502 = 52;
LABEL_1023:
                  v513 = v1645;
                  goto LABEL_1024;
                default:
                  if (v1706 <= 3)
                    v453 = v1706;
                  else
                    v453 = 4;
                  __asm { BR              X12 }
                  return result;
              }
            case 2:
              *(_QWORD *)v92 = *(_QWORD *)v99;
              v414 = 2;
              goto LABEL_883;
            case 3:
              *(_QWORD *)v92 = *(_QWORD *)v99;
              v414 = 3;
LABEL_883:
              *((_BYTE *)v92 + v90) = v414;
              goto LABEL_2172;
            default:
              memcpy(v92, v99, v90 + 1);
              goto LABEL_2172;
          }
        case 0x18:
          v123 = ~v1752;
          v124 = v88;
          v125 = a1;
          if (!__swift_getEnumTagSinglePayload(v121, 1, v1688))
            (*(void (**)(unint64_t, uint64_t))(v1680 + 8))(v121, v1688);
          __swift_destroy_boxed_opaque_existential_1((v1739 + v121) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          goto LABEL_798;
        case 0x1D:
          v123 = ~v1752;
          v124 = v88;
          v125 = a1;
          __swift_destroy_boxed_opaque_existential_1(v121);
          v192 = (v1724 + v121) & v1708;
          if (!__swift_getEnumTagSinglePayload(v192, 1, v1688))
            (*(void (**)(uint64_t, uint64_t))(v1680 + 8))(v192, v1688);
          goto LABEL_798;
        case 0x1E:
          v123 = ~v1752;
          v124 = v88;
          v125 = a1;
          __swift_destroy_boxed_opaque_existential_1(v121);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v193 = (v1713 + ((((v121 + 51) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v1708;
          v194 = v193;
          v195 = v1688;
          goto LABEL_323;
        case 0x20:
          v123 = ~v1752;
          v124 = v88;
          v125 = a1;
          swift_bridgeObjectRelease();
          v121 = (v121 + 23) & 0xFFFFFFFFFFFFFFF8;
          goto LABEL_322;
        case 0x21:
          v123 = ~v1752;
          if (v1731)
          {
            v124 = v88;
            v196 = v1637;
            v197 = v1589;
            if (v1636 >= v1637)
            {
              v198 = v121;
              v196 = v1636;
              v199 = v1639;
            }
            else
            {
              v198 = (v1640 + v121) & v1589;
              v199 = v1643;
            }
            v284 = __swift_getEnumTagSinglePayload(v198, v196, v199);
          }
          else
          {
            v124 = v88;
            v197 = v1589;
            if (!*(_BYTE *)(v121 + v1722))
              goto LABEL_792;
            v268 = (*(unsigned __int8 *)(v121 + v1722) - 1) << v1584;
            if (v1722 > 3)
              v268 = 0;
            if ((_DWORD)v1722)
            {
              if (v1722 <= 3)
                v269 = v1722;
              else
                v269 = 4;
              __asm { BR              X11 }
            }
            v284 = v268 + 1;
          }
          if (v284)
            goto LABEL_793;
LABEL_792:
          (*(void (**)(unint64_t, uint64_t))(v1634 + 8))(v121, v1639);
          (*(void (**)(unint64_t, uint64_t))(v1635 + 8))((v1640 + v121) & v197, v1643);
LABEL_793:
          v125 = a1;
          v404 = (v1627 + v121) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v404);
          v405 = (v1724 + v404) & v1708;
          if (!__swift_getEnumTagSinglePayload(v405, 1, v1688))
            (*(void (**)(uint64_t, uint64_t))(v1680 + 8))(v405, v1688);
LABEL_320:
          swift_bridgeObjectRelease();
          goto LABEL_798;
        case 0x22:
          v123 = ~v1752;
          v124 = v88;
          if (!__swift_getEnumTagSinglePayload(v121, 1, v1688))
            (*(void (**)(unint64_t, uint64_t))(v1680 + 8))(v121, v1688);
          v125 = a1;
          v200 = (v1739 + v121) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v200);
          v201 = (v1757 + v200) & v1697;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!__swift_getEnumTagSinglePayload((v1642 + v201) & v1692, 1, v1644))
            (*(void (**)(unint64_t, uint64_t))(v1626 + 8))((v1642 + v201) & v1692, v1644);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v202 = (v1602 + ((((v1715 + v201) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v1591;
          if (v1731)
          {
            v203 = v1636;
            if (v1636 >= v1637)
              goto LABEL_2140;
            v204 = (v1640 + v202) & v1589;
            v203 = v1637;
            goto LABEL_675;
          }
          if (*(_BYTE *)(v202 + v1722))
          {
            v270 = (*(unsigned __int8 *)(v202 + v1722) - 1) << v1584;
            if (v1722 > 3)
              v270 = 0;
            if ((_DWORD)v1722)
            {
              if (v1722 <= 3)
                v271 = v1722;
              else
                v271 = 4;
              __asm { BR              X11 }
            }
LABEL_684:
            if (v270 != -1)
              goto LABEL_799;
          }
          goto LABEL_2142;
        case 0x23:
          if (!__swift_getEnumTagSinglePayload(v121, 1, v1688))
            (*(void (**)(unint64_t, uint64_t))(v1680 + 8))(v121, v1688);
          v123 = ~v1752;
          v205 = (v1739 + v121) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v205);
          v206 = (v1757 + v205) & v1697;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!__swift_getEnumTagSinglePayload((v1642 + v206) & v1692, 1, v1644))
            (*(void (**)(unint64_t, uint64_t))(v1626 + 8))((v1642 + v206) & v1692, v1644);
          v124 = v88;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v207 = (((((((((((((v1715 + v206) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 25) & 0xFFFFFFFFFFFFFFF8)
                      + 23) & 0xFFFFFFFFFFFFFFF8)
                    + 23) & 0xFFFFFFFFFFFFFFF8)
                  + 23) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          v208 = (v1628 + v207) & v1591;
          if (v1731)
          {
            v125 = a1;
            v209 = v1636;
            if (v1636 >= v1637)
            {
              v210 = (v1628 + v207) & v1591;
              v211 = v1639;
            }
            else
            {
              v210 = (v1640 + v208) & v1589;
              v209 = v1637;
              v211 = v1643;
            }
            v285 = __swift_getEnumTagSinglePayload(v210, v209, v211);
          }
          else
          {
            v125 = a1;
            if (!*(_BYTE *)(v208 + v1722))
              goto LABEL_797;
            v272 = (*(unsigned __int8 *)(v208 + v1722) - 1) << v1584;
            if (v1722 > 3)
              v272 = 0;
            if ((_DWORD)v1722)
            {
              if (v1722 <= 3)
                v273 = v1722;
              else
                v273 = 4;
              __asm { BR              X11 }
            }
            v285 = v272 + 1;
          }
          if (v285)
            goto LABEL_798;
LABEL_797:
          (*(void (**)(unint64_t, uint64_t))(v1634 + 8))(v208, v1639);
          (*(void (**)(unint64_t, uint64_t))(v1635 + 8))((v1640 + v208) & v1589, v1643);
          goto LABEL_798;
        case 0x24:
          v123 = ~v1752;
          v124 = v88;
          v125 = a1;
          if (!__swift_getEnumTagSinglePayload(v121, 1, v1688))
            (*(void (**)(unint64_t, uint64_t))(v1680 + 8))(v121, v1688);
          v212 = (v1739 + v121) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v212);
          swift_bridgeObjectRelease();
          v213 = ((v212 + 47) & 0xFFFFFFFFFFFFFFF8) + 23;
          goto LABEL_310;
        case 0x25:
          v123 = ~v1752;
          v124 = v88;
          v125 = a1;
          if (!__swift_getEnumTagSinglePayload(v121, 1, v1688))
            (*(void (**)(unint64_t, uint64_t))(v1680 + 8))(v121, v1688);
          goto LABEL_303;
        case 0x26:
          v123 = ~v1752;
          v124 = v88;
          v125 = a1;
          if (!__swift_getEnumTagSinglePayload(v121, 1, v1688))
            (*(void (**)(unint64_t, uint64_t))(v1680 + 8))(v121, v1688);
          v214 = (v1739 + v121) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v214);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v172 = ((((v214 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23;
LABEL_307:
          v215 = v172 & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)((v172 & 0xFFFFFFFFFFFFFFF8) + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v215);
          v213 = v215 + 47;
LABEL_310:
          if (*(_QWORD *)((v213 & 0xFFFFFFFFFFFFFFF8) + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v213 & 0xFFFFFFFFFFFFFFF8);
          goto LABEL_799;
        case 0x27:
          v123 = ~v1752;
          v124 = v88;
          v125 = a1;
          if (!__swift_getEnumTagSinglePayload(v121, 1, v1688))
            (*(void (**)(unint64_t, uint64_t))(v1680 + 8))(v121, v1688);
LABEL_303:
          __swift_destroy_boxed_opaque_existential_1((v1739 + v121) & 0xFFFFFFFFFFFFFFF8);
          goto LABEL_798;
        case 0x28:
          v123 = ~v1752;
          v124 = v88;
          v125 = a1;
          __swift_destroy_boxed_opaque_existential_1(v121);
          v216 = (v1724 + v121) & v1708;
          if (!__swift_getEnumTagSinglePayload(v216, 1, v1688))
            (*(void (**)(uint64_t, uint64_t))(v1680 + 8))(v216, v1688);
          goto LABEL_798;
        case 0x29:
          v123 = ~v1752;
          v124 = v88;
          v125 = a1;
          __swift_destroy_boxed_opaque_existential_1(v121);
          v217 = (v1724 + v121) & v1708;
          if (!__swift_getEnumTagSinglePayload(v217, 1, v1688))
            (*(void (**)(uint64_t, uint64_t))(v1680 + 8))(v217, v1688);
          goto LABEL_320;
        case 0x2B:
          v123 = ~v1752;
          v124 = v88;
          v125 = a1;
LABEL_322:
          __swift_destroy_boxed_opaque_existential_1(v121);
          v193 = (v1724 + v121) & v1708;
          v194 = v193;
          v195 = v1688;
LABEL_323:
          if (!__swift_getEnumTagSinglePayload(v194, 1, v195))
            (*(void (**)(unint64_t, uint64_t))(v1680 + 8))(v193, v1688);
          goto LABEL_799;
        case 0x2D:
          if (!__swift_getEnumTagSinglePayload(v121, 1, v1688))
            (*(void (**)(unint64_t, uint64_t))(v1680 + 8))(v121, v1688);
          v218 = (v1739 + v121) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v218);
          v219 = (v218 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v219 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v219);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v220 = (((((((v219 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v221 = (v1628 + ((v220 + 47) & 0xFFFFFFFFFFFFFFF8)) & v1591;
          if (v1731)
          {
            v222 = v1637;
            if (v1636 >= v1637)
            {
              v223 = (v1628 + ((v220 + 47) & 0xFFFFFFFFFFFFFFF8)) & v1591;
              v222 = v1636;
              v224 = v1639;
            }
            else
            {
              v223 = (v1640 + v221) & v1589;
              v224 = v1643;
            }
            v286 = __swift_getEnumTagSinglePayload(v223, v222, v224);
          }
          else
          {
            if (!*(_BYTE *)(v221 + v1722))
              goto LABEL_687;
            v274 = (*(unsigned __int8 *)(v221 + v1722) - 1) << v1584;
            if (v1722 > 3)
              v274 = 0;
            if ((_DWORD)v1722)
            {
              if (v1722 <= 3)
                v275 = v1722;
              else
                v275 = 4;
              __asm { BR              X11 }
            }
            v286 = v274 + 1;
          }
          if (v286)
            goto LABEL_688;
LABEL_687:
          (*(void (**)(unint64_t, uint64_t))(v1634 + 8))(v221, v1639);
          (*(void (**)(unint64_t, uint64_t))(v1635 + 8))((v1640 + v221) & v1589, v1643);
LABEL_688:
          v360 = (v1622 + v221) & v1591;
          if (v1731)
          {
            v361 = v1637;
            if (v1636 >= v1637)
            {
              v362 = v360;
              v361 = v1636;
              v363 = v1639;
            }
            else
            {
              v362 = (v1640 + v360) & v1589;
              v363 = v1643;
            }
            v366 = __swift_getEnumTagSinglePayload(v362, v361, v363);
          }
          else
          {
            if (!*(_BYTE *)(v360 + v1722))
              goto LABEL_744;
            v364 = (*(unsigned __int8 *)(v360 + v1722) - 1) << v1584;
            if (v1722 > 3)
              v364 = 0;
            if ((_DWORD)v1722)
            {
              if (v1722 <= 3)
                v365 = v1722;
              else
                v365 = 4;
              __asm { BR              X11 }
            }
            v366 = v364 + 1;
          }
          if (v366)
            goto LABEL_745;
LABEL_744:
          (*(void (**)(unint64_t, uint64_t))(v1634 + 8))(v360, v1639);
          (*(void (**)(unint64_t, uint64_t))(v1635 + 8))((v1640 + v360) & v1589, v1643);
LABEL_745:
          v383 = (uint64_t *)((v1678 + v360) & v1774);
          if ((v1637 & 0x80000000) != 0)
          {
            v386 = v1589;
            v385 = __swift_getEnumTagSinglePayload(((unint64_t)v383 + v1625) & v1589, v1637, v1643);
          }
          else
          {
            v384 = *v383;
            if ((unint64_t)*v383 >= 0xFFFFFFFF)
              LODWORD(v384) = -1;
            v385 = v384 + 1;
            v386 = v1589;
          }
          if (!v385)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v1635 + 8))(((unint64_t)v383 + v1625) & v386, v1643);
          }
          v387 = (uint64_t *)(((unint64_t)v383 + v1610) & v1774);
          if ((v1637 & 0x80000000) != 0)
          {
            v389 = __swift_getEnumTagSinglePayload(((unint64_t)v387 + v1625) & v386, v1637, v1643);
          }
          else
          {
            v388 = *v387;
            if ((unint64_t)*v387 >= 0xFFFFFFFF)
              LODWORD(v388) = -1;
            v389 = v388 + 1;
          }
          v390 = v1714 + 9;
          v123 = ~v1752;
          if (!v389)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v1635 + 8))(((unint64_t)v387 + v1625) & v386, v1643);
            v390 = v1714 + 9;
          }
          v124 = v88;
          v391 = ((unint64_t)v387 + v390) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v392 = (v391 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v392 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1((v391 + 47) & 0xFFFFFFFFFFFFFFF8);
          v125 = a1;
          v393 = (v1757 + v392) & v1697;
          if (v1638 >= 0x7FFFFFFF)
          {
            v395 = (v1642 + v393) & v1692;
            if (__swift_getEnumTagSinglePayload(v395, v1632, v1644) > 1)
              goto LABEL_798;
          }
          else
          {
            v394 = *(_QWORD *)(((v1757 + v392) & v1697) + 0x10);
            if (v394 >= 0xFFFFFFFF)
              LODWORD(v394) = -1;
            if ((int)v394 - 1 >= 0)
              goto LABEL_798;
            v395 = (v1642 + v393) & v1692;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!__swift_getEnumTagSinglePayload(v395, 1, v1644))
            (*(void (**)(uint64_t, uint64_t))(v1626 + 8))(v395, v1644);
          goto LABEL_798;
        case 0x32:
          __swift_destroy_boxed_opaque_existential_1(v121);
          v225 = (v1724 + v121) & v1708;
          if (!__swift_getEnumTagSinglePayload(v225, 1, v1688))
            (*(void (**)(uint64_t, uint64_t))(v1680 + 8))(v225, v1688);
          v123 = ~v1752;
          v226 = (v1739 + v225) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          v227 = (v226 + 23) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v227 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1((v226 + 23) & 0xFFFFFFFFFFFFFFF8);
          v124 = v88;
          swift_bridgeObjectRelease();
          v228 = (((v227 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          v229 = (v1713 + v228) & v1694;
          v125 = a1;
          if (v1630 < 0x7FFFFFFF)
          {
            v232 = v1642;
            v231 = v1688;
            if (*(_QWORD *)(((v1739 + v229) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
              goto LABEL_391;
          }
          else
          {
            v230 = (v1713 + v228) & v1694;
            v231 = v1688;
            v232 = v1642;
            if (__swift_getEnumTagSinglePayload(v230, v1719, v1688) >= 2)
              goto LABEL_391;
          }
          if (!__swift_getEnumTagSinglePayload(v229, 1, v231))
            (*(void (**)(uint64_t, uint64_t))(v1680 + 8))(v229, v231);
          __swift_destroy_boxed_opaque_existential_1((v1739 + v229) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
LABEL_391:
          v254 = (uint64_t *)(v229 + v1735);
          swift_bridgeObjectRelease();
          v255 = v1755 + 23;
LABEL_742:
          v382 = (size_t)v254 + v255;
          goto LABEL_789;
        case 0x33:
          v123 = ~v1752;
          v124 = v88;
          if (!__swift_getEnumTagSinglePayload(v121, 1, v1688))
            (*(void (**)(unint64_t, uint64_t))(v1680 + 8))(v121, v1688);
          v125 = a1;
          v233 = (v1739 + v121) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v233);
          v234 = (v233 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v234 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v234);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v235 = (v1599
                + ((((((v234 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v1763;
          if (v1587 > 0x7FFFFFFE)
          {
            v237 = (v235 + 23) & 0xFFFFFFFFFFFFFFF8;
            v232 = v1642;
            if (__swift_getEnumTagSinglePayload((v1717 + ((v237 + 23) & 0xFFFFFFFFFFFFFFF8) + 33) & v1690, v1587, v1623))goto LABEL_394;
            goto LABEL_393;
          }
          LODWORD(v236) = -1;
          if (*(_QWORD *)(((v1599
                           + ((((((v234 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v1763)
                         + 8) < 0xFFFFFFFFuLL)
            v236 = *(_QWORD *)(((v1599
                               + ((((((v234 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v1763)
                             + 8);
          v232 = v1642;
          if ((v236 + 1) <= 1)
          {
            v237 = (v235 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_393:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v256 = (id *)((v237 + 47) & 0xFFFFFFFFFFFFFFF8);

            (*(void (**)(unint64_t, uint64_t))(v1712 + 8))(((unint64_t)v256 + v1717 + 9) & v1690, v1623);
          }
LABEL_394:
          v257 = (v1604 + v235) & v1591;
          if (v1731)
          {
            v258 = v1636;
            if (v1636 >= v1637)
            {
              v259 = (v1604 + v235) & v1591;
              v260 = v1639;
            }
            else
            {
              v259 = (v1640 + v257) & v1589;
              v258 = v1637;
              v260 = v1643;
            }
            v288 = __swift_getEnumTagSinglePayload(v259, v258, v260);
          }
          else
          {
            if (!*(_BYTE *)(v257 + v1722))
            {
LABEL_708:
              (*(void (**)(unint64_t, uint64_t))(v1634 + 8))(v257, v1639);
              (*(void (**)(unint64_t, uint64_t))(v1635 + 8))((v1640 + v257) & v1589, v1643);
LABEL_709:
              swift_bridgeObjectRelease();
              v367 = (((v1627 + v257) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
              swift_bridgeObjectRelease();
              v368 = (v1607 + v367) & v1591;
              if (v1731)
              {
                v369 = v1636;
                if (v1636 >= v1637)
                {
                  v370 = (v1607 + v367) & v1591;
                  v371 = v1639;
                }
                else
                {
                  v370 = (v1640 + v368) & v1589;
                  v369 = v1637;
                  v371 = v1643;
                }
                v374 = __swift_getEnumTagSinglePayload(v370, v369, v371);
              }
              else
              {
                if (!*(_BYTE *)(v368 + v1722))
                {
LABEL_771:
                  (*(void (**)(unint64_t, uint64_t))(v1634 + 8))(v368, v1639);
                  (*(void (**)(unint64_t, uint64_t))(v1635 + 8))((v1640 + v368) & v1589, v1643);
LABEL_772:
                  v396 = (v1627 + v368) & 0xFFFFFFFFFFFFFFF8;
                  swift_bridgeObjectRelease();
                  v397 = (v1737 + v396) & v1591;
                  if (v1731)
                  {
                    v398 = v1636;
                    if (v1636 >= v1637)
                    {
                      v399 = (v1737 + v396) & v1591;
                      v400 = v1639;
                    }
                    else
                    {
                      v399 = (v1640 + v397) & v1589;
                      v398 = v1637;
                      v400 = v1643;
                    }
                    v403 = __swift_getEnumTagSinglePayload(v399, v398, v400);
                  }
                  else
                  {
                    if (!*(_BYTE *)(v397 + v1722))
                    {
LABEL_787:
                      (*(void (**)(unint64_t, uint64_t))(v1634 + 8))(v397, v1639);
                      (*(void (**)(unint64_t, uint64_t))(v1635 + 8))((v1640 + v397) & v1589, v1643);
LABEL_788:
                      v382 = v1612 + v397;
LABEL_789:
                      v167 = v382 & v1697;
                      if (v1638 < 0x7FFFFFFF)
                        goto LABEL_2050;
                      v168 = v232 + v167;
LABEL_2055:
                      v126 = v168 & v1692;
                      if (__swift_getEnumTagSinglePayload(v168 & v1692, v1632, v1644) <= 1)
                      {
LABEL_2056:
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
LABEL_2057:
                        if (!__swift_getEnumTagSinglePayload(v126, 1, v1644))
                          (*(void (**)(uint64_t, uint64_t))(v1626 + 8))(v126, v1644);
                        goto LABEL_799;
                      }
                      goto LABEL_799;
                    }
                    v401 = (*(unsigned __int8 *)(v397 + v1722) - 1) << v1584;
                    if (v1722 > 3)
                      v401 = 0;
                    if ((_DWORD)v1722)
                    {
                      if (v1722 <= 3)
                        v402 = v1722;
                      else
                        v402 = 4;
                      __asm { BR              X11 }
                    }
                    v403 = v401 + 1;
                  }
                  if (v403)
                    goto LABEL_788;
                  goto LABEL_787;
                }
                v372 = (*(unsigned __int8 *)(v368 + v1722) - 1) << v1584;
                if (v1722 > 3)
                  v372 = 0;
                if ((_DWORD)v1722)
                {
                  if (v1722 <= 3)
                    v373 = v1722;
                  else
                    v373 = 4;
                  __asm { BR              X11 }
                }
                v374 = v372 + 1;
              }
              if (v374)
                goto LABEL_772;
              goto LABEL_771;
            }
            v279 = (*(unsigned __int8 *)(v257 + v1722) - 1) << v1584;
            if (v1722 > 3)
              v279 = 0;
            if ((_DWORD)v1722)
            {
              if (v1722 <= 3)
                v280 = v1722;
              else
                v280 = 4;
              __asm { BR              X11 }
            }
            v288 = v279 + 1;
          }
          if (v288)
            goto LABEL_709;
          goto LABEL_708;
        default:
          if (v1706 <= 3)
            v122 = v1706;
          else
            v122 = 4;
          __asm { BR              X12 }
          return result;
      }
    case 2:
    case 3:
      goto LABEL_120;
    default:
      goto LABEL_871;
  }
}

