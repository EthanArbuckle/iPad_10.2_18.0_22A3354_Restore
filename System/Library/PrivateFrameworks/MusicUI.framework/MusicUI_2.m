uint64_t sub_21CED0D18(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unsigned int v78;
  int v79;
  int v80;
  int v81;
  int v83;
  unint64_t v84;
  int v85;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;

  v105 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  v3 = *(_QWORD *)(sub_21D7C4668() - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v103 = v4 + 16;
  v5 = *(_DWORD *)(v3 + 84);
  v6 = *(_QWORD *)(v3 + 64);
  if (v5)
    v7 = v6;
  else
    v7 = v6 + 1;
  v108 = v7;
  v106 = v4 | 7;
  v8 = *(_QWORD *)(sub_21D7BF754() - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v9 | 7;
  v11 = *(_QWORD *)(sub_21D7C3840() - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(sub_21D7C3804() - 8);
  v14 = *(_DWORD *)(v13 + 84);
  v15 = *(_DWORD *)(v13 + 80);
  v16 = *(_DWORD *)(v13 + 80) | v12;
  v17 = v4 | 7 | v9 | v16;
  v100 = v4;
  v101 = v4 + 40;
  v18 = (v4 + 40) & ~v4;
  v19 = (v9 + 113) & ~v9;
  v20 = *(_QWORD *)(v8 + 64);
  v98 = *(_QWORD *)(v13 + 64);
  v21 = ((*(_QWORD *)(v11 + 64) + v15) & ~v15) + v98;
  if (!*(_DWORD *)(v8 + 84))
    ++v20;
  v93 = v20;
  v94 = v18 + v7;
  v95 = (v18 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v109 = v9 + 40;
  if (!(v14 | *(_DWORD *)(v11 + 84)))
    ++v21;
  v88 = v21;
  v89 = v20 + v19;
  v87 = v21 + 1;
  v22 = v21 + 1 + ((v16 + 160) & ~v16);
  if (v20 + v19 + ((v9 + 40 + ((((v95 + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v10) > v22)
    v22 = v20 + v19 + ((v9 + 40 + ((((v95 + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v10);
  if (v22 <= 0x30)
    v22 = 48;
  v92 = v22 + ((v17 + 1) & ~v17) + 1;
  v23 = *(_QWORD *)(sub_21D7C3F6C() - 8);
  v24 = *(unsigned __int8 *)(v23 + 80);
  v25 = ((v24 | 7) + ((((((v4 + 16) & ~v4) + v7 + v17) & ~v17) + v92 + 11) & 0xFFFFFFFFFFFFFFF8) + 58) & ~(v24 | 7);
  v26 = *(_DWORD *)(v23 + 84) == 0;
  v27 = (v24 + 16) & ~v24;
  v28 = *(_QWORD *)(v23 + 64);
  if (v26)
    ++v28;
  v29 = v28 + v27;
  v30 = *(_QWORD *)(sub_21D7C4314() - 8);
  v31 = *(unsigned __int8 *)(v30 + 80);
  v107 = v31 | 7;
  v32 = v15 | 7;
  v33 = *(_QWORD *)(sub_21D7BF964() - 8);
  v34 = *(unsigned __int8 *)(v33 + 80);
  v102 = (v29 + (v17 | v15 | v31 | v34) + v25) & ~(v17 | v15 | v31 | v34);
  v97 = v108 + 7;
  v35 = (v108 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 47) & 0xFFFFFFFFFFFFFFF8;
  v37 = v98 + ((v15 + 8) & ~v15);
  v38 = (v36 + 23) & 0xFFFFFFFFFFFFFFF8;
  v39 = *(_QWORD *)(v33 + 64) + ((v87 + v34 + ((v36 + 16 + v16) & ~v16)) & ~v34);
  v40 = ((v31 + 65) & ~v31) + *(_QWORD *)(v30 + 64);
  v41 = (((((v38 + 15) & 0xFFFFFFFFFFFFFFF8) + v107 + 16) & ~v107) + v40) & 0xFFFFFFFFFFFFFFF8;
  v99 = v16 + 16;
  v42 = v88 + v32;
  v43 = v37 + v10;
  v91 = v89 + v106;
  v96 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v44 = v96 + v106 + 16;
  v90 = v96 + 24;
  v45 = v9 + 8;
  v46 = v89 + ((v9 + 8) & ~v10);
  if (v46 <= v96
            + 24
            + ((v44
              + ((v44
                + ((v89
                  + v106
                  + ((v37 + v10 + ((v88 + v32 + ((v16 + 16 + ((v41 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & ~v32)) & ~v10)) & ~v106)) & ~v106)) & ~v106))
    v47 = v96
        + 24
        + ((v44
          + ((v44
            + ((v89
              + v106
              + ((v37 + v10 + ((v88 + v32 + ((v16 + 16 + ((v41 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & ~v32)) & ~v10)) & ~v106)) & ~v106)) & ~v106);
  else
    v47 = v89 + ((v9 + 8) & ~v10);
  v48 = v89 + v16;
  v49 = ((v42 + ((v89 + v16 + ((v109 + ((v39 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v10)) & ~v16)) & ~v32) + v37;
  if (v47 <= v49)
    v47 = v49;
  v50 = v88 + 7;
  v51 = ((((v88 + 7 + ((v48 + ((v10 + ((v38 + 47) & 0xFFFFFFFFFFFFFFF8) + 41) & ~v10)) & ~v16)) & 0xFFFFFFFFFFFFFFF8)
        + 47) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v47 <= v51)
    v47 = ((((v88 + 7 + ((v48 + ((v10 + ((v38 + 47) & 0xFFFFFFFFFFFFFFF8) + 41) & ~v10)) & ~v16)) & 0xFFFFFFFFFFFFFFF8)
          + 47) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  v52 = v35 + 40;
  v53 = v17 + v35 + 40;
  v54 = (v53 | v17) + v51;
  v55 = v53 & ~v17;
  v56 = ((v17 + ((v92 + (v54 & ~v17) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v17) + v92;
  if (v47 > v56)
    v56 = v47;
  v57 = (v89 + 7 + ((v52 + v9) & ~v10)) & 0xFFFFFFFFFFFFFFF8;
  if (v56 <= ((((((v57 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8)
    v56 = ((((((v57 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
  v58 = ((v43 + ((v42 + ((v87 + v16 + ((((v36 + 16 + v9) & ~v9) + v16 + v93) & ~v16)) & ~v16)) & ~v32)) & ~v10) + v89;
  if (v56 > v58)
    v58 = v56;
  if (v58 <= (((((v94 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16)
    v58 = (((((v94 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v58 <= ((v40 + ((v52 + v31) & ~v107) + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
    v58 = ((v40 + ((v52 + v31) & ~v107) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v59 = v89 + ((v95 + v10 + 17) & ~v10);
  if (v58 <= v59 + 1)
    v60 = v59 + 1;
  else
    v60 = v58;
  v61 = (v95 + 23) & 0xFFFFFFFFFFFFFFF8;
  v62 = (((v61 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  if (v60 <= ((((v62 + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 41)
    v60 = ((((v62 + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 41;
  v63 = (v16 + ((((((v62 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 40) & ~v16;
  v64 = v88 + v16;
  v65 = ((v88 + v16 + v63) & ~v16) + v88;
  if (v60 <= v65)
    v60 = v65;
  v66 = (v38 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (v60 <= v66 + 8)
    v60 = v66 + 8;
  v67 = ((v66 + 47) & 0xFFFFFFFFFFFFFFF8) + 40;
  v68 = ((v45 + ((v50 + v55 + ((v48 + ((v67 + v10) & ~v10)) & ~v16)) & 0xFFFFFFFFFFFFFFF8)) & ~v10) + v89;
  if (v60 <= v68)
    v69 = v68;
  else
    v69 = v60;
  if (v69 <= v36 + 17)
    v69 = v36 + 17;
  if (v69 <= v90
            + ((v44 + ((v44 + ((v91 + ((v43 + ((v42 + ((v16 + v41 + 24) & ~v16)) & ~v32)) & ~v10)) & ~v106)) & ~v106)) & ~v106))
    v69 = v90
        + ((v44 + ((v44 + ((v91 + ((v43 + ((v42 + ((v16 + v41 + 24) & ~v16)) & ~v32)) & ~v10)) & ~v106)) & ~v106)) & ~v106);
  if (v69 <= v46)
    v69 = v46;
  v70 = (v36 + 15) & 0xFFFFFFFFFFFFFFF8;
  if (v69 <= v70 + 16)
    v69 = v70 + 16;
  if (v69 <= ((v94 + 9) & 0xFFFFFFFFFFFFFFF8) + 17)
    v69 = ((v94 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
  if (v69 <= ((v100 + 80) & (unint64_t)~v100) + v108)
    v69 = ((v100 + 80) & ~v100) + v108;
  if (v69 <= ((v100 + 56) & (unint64_t)~v100) + v108)
    v69 = ((v100 + 56) & ~v100) + v108;
  if (v69 <= ((((v97 + ((v101 + (v50 & 0xFFFFFFFFFFFFFFF8)) & ~v100)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
            + 16)
    v69 = ((((v97 + ((v101 + (v50 & 0xFFFFFFFFFFFFFFF8)) & ~v100)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  v71 = (v57 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (v69 <= ((v16 + v71 + 18) & ~v16) + v88)
    v69 = ((v16 + v71 + 18) & ~v16) + v88;
  v72 = ((v50
        + ((v16
          + 8
          + ((((((((((v71 + 25) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v69 <= v72)
    v69 = v72;
  if (v69 <= v38 + 40)
    v69 = v38 + 40;
  if (v69 <= v70 + 8)
    v69 = v70 + 8;
  if (v69 <= v67)
    v69 = v67;
  if (v69 <= v36 + 8)
    v69 = v36 + 8;
  if (v69 <= v95 + 8)
    v69 = v95 + 8;
  if (v69 <= ((v95 + 15) & 0xFFFFFFFFFFFFFFF8) + 8)
    v69 = ((v95 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v69 <= v94)
    v69 = v94;
  v73 = (((v96 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  if (v69 <= ((v89
              + 7
              + ((v109
                + ((((v37
                    + ((v37
                      + v32
                      + ((v42
                        + ((v64
                          + ((v16 + 8 + ((((v73 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & ~v16)) & ~v32)) & ~v32)
                    + 9) & 0xFFFFFFFFFFFFFFF8)
                  + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v10)) & 0xFFFFFFFFFFFFFFF8)
            + 16)
    v69 = ((v89
          + 7
          + ((v109
            + ((((v37
                + ((v37
                  + v32
                  + ((v42
                    + ((v64 + ((v16 + 8 + ((((v73 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & ~v16)) & ~v32)) & ~v32)
                + 9) & 0xFFFFFFFFFFFFFFF8)
              + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v10)) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  v74 = ((v10 + v36 + 17 + ((v103 + ((((v61 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v106) + 23) & ~v10)
      + v89;
  if (v69 > v74)
    v74 = v69;
  if (v74 <= ((v88
              + v10
              + ((v99
                + ((v50
                  + ((v16
                    + ((((v50 + ((v40 + v16 + ((v73 + v107 + 8) & ~v107)) & ~v16)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                    + 9) & ~v16)) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & ~v10)
            + v89)
    v74 = ((v88
          + v10
          + ((v99
            + ((v50
              + ((v16
                + ((((v50 + ((v40 + v16 + ((v73 + v107 + 8) & ~v107)) & ~v16)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 9) & ~v16)) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & ~v10)
        + v89;
  if (v74 <= 8)
    v74 = 8;
  v75 = ((v102 + v74 + 8) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v75 <= v105)
    v75 = v105;
  if (v75 <= 8)
    v75 = 8;
  if (!a2)
    return 0;
  if (a2 <= 0x7FFFFFFD)
    goto LABEL_109;
  v76 = (v75 & 0xFFFFFFFFFFFFFFF8) + 16;
  v77 = v76 & 0xFFFFFFF8;
  v78 = a2 - 2147483644;
  if ((v76 & 0xFFFFFFF8) != 0)
    v78 = 2;
  if (v78 >= 0x10000)
    v79 = 4;
  else
    v79 = 2;
  if (v78 < 0x100)
    v80 = 1;
  else
    v80 = v79;
  if (v80 == 4)
  {
    v81 = *(_DWORD *)((char *)a1 + v76);
    if (v81)
      goto LABEL_105;
LABEL_109:
    v84 = *(_QWORD *)(((unint64_t)a1 + v75 + 8) & 0xFFFFFFFFFFFFF8);
    if (v84 >= 0xFFFFFFFF)
      LODWORD(v84) = -1;
    v85 = v84 - 1;
    if (v85 < 0)
      v85 = -1;
    if ((v85 + 1) >= 2)
      return v85;
    else
      return 0;
  }
  if (v80 != 2)
  {
    v81 = *((unsigned __int8 *)a1 + v76);
    if (v81)
      goto LABEL_105;
    goto LABEL_109;
  }
  v81 = *(unsigned __int16 *)((char *)a1 + v76);
  if (!v81)
    goto LABEL_109;
LABEL_105:
  v83 = v81 - 1;
  if (v77)
  {
    v83 = 0;
    LODWORD(v77) = *a1;
  }
  return (v77 | v83) + 2147483646;
}

void sub_21CED1698(_DWORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unsigned int v80;
  int v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v103;
  unint64_t v104;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;

  v104 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  v4 = *(_QWORD *)(sub_21D7C4668() - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v103 = v5 + 16;
  v6 = *(_DWORD *)(v4 + 84);
  v7 = *(_QWORD *)(v4 + 64);
  if (!v6)
    ++v7;
  v8 = ((v5 + 16) & ~v5) + v7;
  v9 = v7;
  v107 = v5 | 7;
  v10 = *(_QWORD *)(sub_21D7BF754() - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v11 | 7;
  v13 = *(_QWORD *)(sub_21D7C3840() - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(sub_21D7C3804() - 8);
  v16 = *(_DWORD *)(v15 + 84);
  v17 = *(_DWORD *)(v15 + 80);
  v18 = *(_DWORD *)(v15 + 80) | v14;
  v19 = v5 | 7 | v11 | v18;
  v99 = v5;
  v100 = v5 + 40;
  v20 = (v5 + 40) & ~v5;
  v21 = (v11 + 113) & ~v11;
  v22 = *(_QWORD *)(v10 + 64);
  v98 = *(_QWORD *)(v15 + 64);
  v23 = ((*(_QWORD *)(v13 + 64) + v17) & ~v17) + v98;
  if (!*(_DWORD *)(v10 + 84))
    ++v22;
  v90 = v22;
  v91 = v20 + v9;
  v24 = v9;
  v95 = v9;
  v93 = (v20 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v109 = v11 + 40;
  if (!(v16 | *(_DWORD *)(v13 + 84)))
    ++v23;
  v85 = v23;
  v86 = v22 + v21;
  v84 = v23 + 1;
  v25 = v23 + 1 + ((v18 + 160) & ~v18);
  if (v22 + v21 + ((v11 + 40 + ((((v93 + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v12) > v25)
    v25 = v22 + v21 + ((v11 + 40 + ((((v93 + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v12);
  if (v25 <= 0x30)
    v25 = 48;
  v89 = v25 + ((v19 + 1) & ~v19) + 1;
  v26 = *(_QWORD *)(sub_21D7C3F6C() - 8);
  v27 = *(unsigned __int8 *)(v26 + 80);
  v28 = ((v27 | 7) + ((((v8 + v19) & ~v19) + v89 + 11) & 0xFFFFFFFFFFFFFFF8) + 58) & ~(v27 | 7);
  v29 = *(_DWORD *)(v26 + 84) == 0;
  v30 = (v27 + 16) & ~v27;
  v31 = *(_QWORD *)(v26 + 64);
  if (v29)
    ++v31;
  v32 = v31 + v30;
  v33 = *(_QWORD *)(sub_21D7C4314() - 8);
  v34 = *(unsigned __int8 *)(v33 + 80);
  v108 = v34 | 7;
  v83 = v17 | 7;
  v35 = *(_QWORD *)(sub_21D7BF964() - 8);
  v36 = *(unsigned __int8 *)(v35 + 80);
  v101 = (v32 + (v19 | v17 | v34 | v36) + v28) & ~(v19 | v17 | v34 | v36);
  v37 = ((v34 + 65) & ~v34) + *(_QWORD *)(v33 + 64);
  v97 = v24 + 7;
  v38 = (v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 47) & 0xFFFFFFFFFFFFFFF8;
  v40 = v98 + ((v17 + 8) & ~v17);
  v41 = *(_QWORD *)(v35 + 64) + ((v84 + v36 + ((v39 + 16 + v18) & ~v18)) & ~v36);
  v92 = v37;
  v88 = (((((((v39 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v108 + 16) & ~v108) + v37) & 0xFFFFFFFFFFFFFFF8;
  v42 = v85 + (v17 | 7);
  v96 = v40;
  v43 = v40 + v12;
  v87 = v86 + v107;
  v94 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v44 = v94 + v107 + 16;
  v45 = v94 + 24;
  v46 = v11 + 8;
  v47 = v86 + ((v11 + 8) & ~v12);
  if (v47 <= v94
            + 24
            + ((v44
              + ((v44
                + ((v86
                  + v107
                  + ((v40 + v12 + ((v85 + v83 + ((v18 + 16 + ((v88 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v18)) & ~v83)) & ~v12)) & ~v107)) & ~v107)) & ~v107))
    v48 = v94
        + 24
        + ((v44
          + ((v44
            + ((v86
              + v107
              + ((v40 + v12 + ((v85 + v83 + ((v18 + 16 + ((v88 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v18)) & ~v83)) & ~v12)) & ~v107)) & ~v107)) & ~v107);
  else
    v48 = v86 + ((v11 + 8) & ~v12);
  v49 = v86 + v18;
  v50 = ((v42 + ((v86 + v18 + ((v109 + ((v41 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v12)) & ~v18)) & ~v83) + v40;
  if (v48 <= v50)
    v48 = v50;
  v51 = (v39 + 23) & 0xFFFFFFFFFFFFFFF8;
  v52 = v85 + 7;
  v53 = ((((v85 + 7 + ((v49 + ((v12 + ((v51 + 47) & 0xFFFFFFFFFFFFFFF8) + 41) & ~v12)) & ~v18)) & 0xFFFFFFFFFFFFFFF8)
        + 47) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v48 <= v53)
    v48 = ((((v85
            + 7
            + ((v49 + ((v12 + ((((v39 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 41) & ~v12)) & ~v18)) & 0xFFFFFFFFFFFFFFF8)
          + 47) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  v54 = v38 + 40;
  v55 = v19 + v38 + 40;
  v56 = (v55 | v19) + v53;
  v57 = v55 & ~v19;
  v58 = ((v19 + ((v89 + (v56 & ~v19) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v19) + v89;
  if (v48 > v58)
    v58 = v48;
  v59 = (v86 + 7 + ((v54 + v11) & ~v12)) & 0xFFFFFFFFFFFFFFF8;
  if (v58 <= ((((((v59 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8)
    v58 = ((((((v59 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
  v60 = ((v43 + ((v42 + ((v84 + v18 + ((((v39 + 16 + v11) & ~v11) + v18 + v90) & ~v18)) & ~v18)) & ~v83)) & ~v12) + v86;
  if (v58 > v60)
    v60 = v58;
  if (v60 <= (((((v91 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16)
    v60 = (((((v91 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v60 <= ((v37 + ((v54 + v34) & ~v108) + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
    v60 = ((v37 + ((v54 + v34) & ~v108) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v61 = v86 + ((v93 + v12 + 17) & ~v12);
  if (v60 <= v61 + 1)
    v62 = v61 + 1;
  else
    v62 = v60;
  v63 = (v93 + 23) & 0xFFFFFFFFFFFFFFF8;
  v64 = (((v63 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v65 = ((((v64 + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 41;
  if (v62 > v65)
    v65 = v62;
  v66 = v85 + v18;
  v67 = ((v85
        + v18
        + ((v18
          + ((((((v64 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
          + 40) & ~v18)) & ~v18)
      + v85;
  if (v65 > v67)
    v67 = v65;
  v68 = (v51 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (v67 <= v68 + 8)
    v67 = v68 + 8;
  v69 = ((v68 + 47) & 0xFFFFFFFFFFFFFFF8) + 40;
  v70 = ((v46 + ((v52 + v57 + ((v49 + ((v69 + v12) & ~v12)) & ~v18)) & 0xFFFFFFFFFFFFFFF8)) & ~v12) + v86;
  if (v67 <= v70)
    v71 = v70;
  else
    v71 = v67;
  if (v71 <= v39 + 17)
    v71 = v39 + 17;
  if (v71 <= v45
            + ((v44 + ((v44 + ((v87 + ((v43 + ((v42 + ((v18 + v88 + 24) & ~v18)) & ~v83)) & ~v12)) & ~v107)) & ~v107)) & ~v107))
    v71 = v45
        + ((v44 + ((v44 + ((v87 + ((v43 + ((v42 + ((v18 + v88 + 24) & ~v18)) & ~v83)) & ~v12)) & ~v107)) & ~v107)) & ~v107);
  if (v71 <= v47)
    v71 = v47;
  v72 = (v39 + 15) & 0xFFFFFFFFFFFFFFF8;
  if (v71 <= v72 + 16)
    v71 = v72 + 16;
  if (v71 <= ((v91 + 9) & 0xFFFFFFFFFFFFFFF8) + 17)
    v71 = ((v91 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
  if (v71 <= ((v99 + 80) & (unint64_t)~v99) + v95)
    v71 = ((v99 + 80) & ~v99) + v95;
  if (v71 <= ((v99 + 56) & (unint64_t)~v99) + v95)
    v71 = ((v99 + 56) & ~v99) + v95;
  v73 = (v100 + (v52 & 0xFFFFFFFFFFFFFFF8)) & ~v99;
  if (v71 <= ((((v97 + v73) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16)
    v71 = ((((v97 + v73) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v74 = (v59 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (v71 <= ((v18 + v74 + 18) & ~v18) + v85)
    v71 = ((v18 + v74 + 18) & ~v18) + v85;
  v75 = v18 + 8;
  v76 = ((v52
        + ((v18
          + 8
          + ((((((((((v74 + 25) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v18)) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v71 <= v76)
    v71 = v76;
  if (v71 <= v51 + 40)
    v71 = v51 + 40;
  if (v71 <= v72 + 8)
    v71 = v72 + 8;
  if (v71 <= v69)
    v71 = v69;
  if (v71 <= v39 + 8)
    v71 = v39 + 8;
  if (v71 <= v93 + 8)
    v71 = v93 + 8;
  if (v71 <= ((v93 + 15) & 0xFFFFFFFFFFFFFFF8) + 8)
    v71 = ((v93 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v71 <= v91)
    v71 = v91;
  v77 = (((v94 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  if (v71 <= ((v86
              + 7
              + ((v109
                + ((((v96
                    + ((v96
                      + v83
                      + ((v42
                        + ((v66 + ((v75 + ((((v77 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v18)) & ~v18)) & ~v83)) & ~v83)
                    + 9) & 0xFFFFFFFFFFFFFFF8)
                  + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v12)) & 0xFFFFFFFFFFFFFFF8)
            + 16)
    v71 = ((v86
          + 7
          + ((v109
            + ((((v96
                + ((v96
                  + v83
                  + ((v42
                    + ((v66 + ((v75 + ((((v77 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v18)) & ~v18)) & ~v83)) & ~v83)
                + 9) & 0xFFFFFFFFFFFFFFF8)
              + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v12)) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  v78 = ((v12 + v39 + 17 + ((v103 + ((((v63 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v107) + 23) & ~v12)
      + v86;
  if (v71 > v78)
    v78 = v71;
  if (v78 <= ((v85
              + v12
              + ((v18
                + 16
                + ((v52
                  + ((v18
                    + ((((v52 + ((v92 + v18 + ((v77 + v108 + 8) & ~v108)) & ~v18)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                    + 9) & ~v18)) & 0xFFFFFFFFFFFFFFF8)) & ~v18)) & ~v12)
            + v86)
    v78 = ((v85
          + v12
          + ((v18
            + 16
            + ((v52
              + ((v18
                + ((((v52 + ((v92 + v18 + ((v77 + v108 + 8) & ~v108)) & ~v18)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 9) & ~v18)) & 0xFFFFFFFFFFFFFFF8)) & ~v18)) & ~v12)
        + v86;
  if (v78 <= 8)
    v78 = 8;
  v79 = ((v101 + v78 + 8) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v79 <= v104)
    v79 = v104;
  if (v79 <= 8)
    v79 = 8;
  if (a3 <= 0x7FFFFFFD)
  {
    v82 = 0;
  }
  else
  {
    v80 = a3 - 2147483644;
    if ((v79 & 0xFFFFFFF8) != 0xFFFFFFF0)
      v80 = 2;
    if (v80 >= 0x10000)
      v81 = 4;
    else
      v81 = 2;
    if (v80 < 0x100)
      v82 = 1;
    else
      v82 = v81;
  }
  if (a2 <= 0x7FFFFFFD)
    __asm { BR              X11 }
  if ((v79 & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    bzero(a1, (v79 & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = a2 - 2147483646;
  }
  __asm { BR              X10 }
}

void sub_21CED1FFC()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + v1) = v0;
}

void sub_21CED2004()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v2 + v1) = 0;
  if (v0)
    JUMPOUT(0x21CED200CLL);
}

void sub_21CED2024(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v3 + v2) = 0;
  if (v1)
    *(_QWORD *)((v3 + a1 + 8) & 0xFFFFFFFFFFFFF8) = (v1 + 1);
}

void sub_21CED2030()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v2 + v1) = v0;
}

uint64_t type metadata accessor for PageChangeInstruction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PageChangeInstruction);
}

uint64_t type metadata accessor for PageChangeInstruction.Instruction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PageChangeInstruction.Instruction);
}

uint64_t sub_21CED2078()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = _s7SectionVMa(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

_QWORD *sub_21CED210C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  size_t v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  size_t v26;
  size_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  size_t v35;
  size_t v36;
  unsigned int v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unsigned int v41;
  unsigned int v42;
  unint64_t v43;
  uint64_t v44;
  size_t v45;
  unint64_t v46;
  uint64_t v47;
  size_t v48;
  size_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  size_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  size_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  size_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  size_t v85;
  size_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  unint64_t v98;
  uint64_t v99;
  void *v100;
  const void *v101;
  size_t v102;
  char v103;
  uint64_t v104;
  _BYTE *v105;
  unsigned __int8 *v106;
  unsigned int v107;
  _QWORD *v108;
  _QWORD *v109;
  unsigned int v110;
  size_t v111;
  uint64_t v112;
  void *v113;
  const void *v114;
  const void *v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  _QWORD *v119;
  unint64_t v120;
  unint64_t v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  unint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  _QWORD *v128;
  unint64_t v129;
  unint64_t v130;
  unint64_t v131;
  __int128 v132;
  __int128 v133;
  _QWORD *v134;
  _QWORD *v135;
  unint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  const void *v140;
  uint64_t v141;
  void *v142;
  __int128 v143;
  __int128 v144;
  unint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  __int128 v148;
  __int128 v149;
  _QWORD *v150;
  _QWORD *v151;
  _QWORD *v152;
  _QWORD *v153;
  void *v154;
  unsigned __int8 *v155;
  const void *v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  int v161;
  int v162;
  int v163;
  int EnumTagSinglePayload;
  uint64_t v165;
  _BYTE *v166;
  size_t v167;
  unsigned __int8 *v168;
  unint64_t v169;
  unint64_t v170;
  unint64_t v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  _QWORD *v178;
  _QWORD *v179;
  size_t v180;
  uint64_t v181;
  uint64_t v182;
  unsigned int v183;
  uint64_t v184;
  void *v185;
  const void *v186;
  size_t v187;
  uint64_t v188;
  _QWORD *v189;
  _QWORD *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  void *v197;
  const void *v198;
  _BYTE *v199;
  char v200;
  uint64_t v201;
  void *v202;
  const void *v203;
  size_t v204;
  uint64_t v205;
  uint64_t v206;
  void *v207;
  const void *v208;
  uint64_t v209;
  void *v210;
  const void *v211;
  uint64_t v212;
  void *v213;
  const void *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  void *v218;
  const void *v219;
  uint64_t v220;
  char *v221;
  const void *v222;
  size_t v223;
  uint64_t v224;
  _QWORD *v225;
  _QWORD *v226;
  _QWORD *v227;
  _QWORD *v228;
  void *v229;
  const void *v230;
  unint64_t v231;
  unint64_t v232;
  uint64_t v233;
  void (*v234)(unint64_t, unint64_t, uint64_t);
  void *v235;
  const void *v236;
  uint64_t v237;
  unint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  void *v242;
  const void *v243;
  uint64_t v244;
  void *v245;
  const void *v246;
  uint64_t v247;
  void *v248;
  const void *v249;
  uint64_t v250;
  uint64_t v251;
  void *v252;
  const void *v253;
  uint64_t v254;
  unint64_t v255;
  unint64_t v256;
  uint64_t v257;
  _QWORD *v258;
  _QWORD *v259;
  _QWORD *v260;
  _QWORD *v261;
  _QWORD *v262;
  _QWORD *v263;
  _QWORD *v264;
  _QWORD *v265;
  unint64_t v266;
  uint64_t v267;
  _QWORD *v268;
  unint64_t v269;
  size_t v270;
  uint64_t v271;
  char v272;
  unint64_t v273;
  unsigned int v274;
  unint64_t v275;
  unint64_t v276;
  uint64_t v277;
  _QWORD *v278;
  _QWORD *v279;
  void *v280;
  _BYTE *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  unint64_t v285;
  unint64_t v286;
  uint64_t v287;
  _QWORD *v288;
  _QWORD *v289;
  _QWORD *v290;
  _QWORD *v291;
  unint64_t v292;
  unint64_t v293;
  unint64_t v294;
  unint64_t v295;
  unint64_t v296;
  __int128 v297;
  __int128 v298;
  unint64_t v299;
  unsigned int v300;
  _QWORD *v301;
  _QWORD *v302;
  _QWORD *v303;
  unint64_t v304;
  uint64_t v305;
  _BYTE *v306;
  char *v307;
  uint64_t v308;
  uint64_t v309;
  const void *v310;
  uint64_t v311;
  void *v312;
  size_t v313;
  unint64_t v314;
  unint64_t v315;
  uint64_t v316;
  void *v317;
  const void *v318;
  uint64_t v319;
  unint64_t v320;
  unint64_t v321;
  unint64_t v322;
  uint64_t v323;
  unint64_t v324;
  unint64_t v325;
  unint64_t v326;
  _QWORD *v327;
  char *v328;
  uint64_t v329;
  uint64_t v330;
  const void *v331;
  uint64_t v332;
  void *v333;
  size_t v334;
  unint64_t v335;
  unint64_t v336;
  uint64_t v337;
  _QWORD *v338;
  _QWORD *v339;
  void *v340;
  const void *v341;
  unint64_t v342;
  unint64_t v343;
  _QWORD *v344;
  _QWORD *v345;
  _QWORD *v346;
  _QWORD *v347;
  char v348;
  unint64_t v349;
  unint64_t v350;
  uint64_t v351;
  _QWORD *v352;
  _QWORD *v353;
  unint64_t v354;
  _QWORD *v355;
  unint64_t v356;
  unint64_t v357;
  unint64_t v358;
  _QWORD *v359;
  _QWORD *v360;
  unint64_t v361;
  _QWORD *v362;
  char *v363;
  uint64_t v364;
  uint64_t v365;
  const void *v366;
  uint64_t v367;
  void *v368;
  size_t v369;
  _QWORD *v370;
  _QWORD *v371;
  _QWORD *v372;
  _QWORD *v373;
  _QWORD *v374;
  _QWORD *v375;
  unint64_t v376;
  unint64_t v377;
  unint64_t v378;
  __int128 v379;
  __int128 v380;
  unint64_t v381;
  unint64_t v382;
  unint64_t v383;
  __int128 v384;
  __int128 v385;
  unint64_t v386;
  unint64_t v387;
  unint64_t v388;
  __int128 v389;
  __int128 v390;
  char v391;
  _QWORD *v392;
  _QWORD *v393;
  _QWORD *v394;
  _QWORD *v395;
  _QWORD *v396;
  _QWORD *v397;
  _QWORD *v398;
  _QWORD *v399;
  unint64_t v400;
  unint64_t v401;
  unint64_t v402;
  __int128 v403;
  __int128 v404;
  unint64_t v405;
  unint64_t v406;
  unint64_t v407;
  __int128 v408;
  __int128 v409;
  unint64_t v410;
  unint64_t v411;
  unint64_t v412;
  __int128 v413;
  __int128 v414;
  void *v415;
  _BYTE *v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  unint64_t v420;
  unint64_t v421;
  uint64_t v422;
  _QWORD *v423;
  _QWORD *v424;
  _QWORD *v425;
  _QWORD *v426;
  _QWORD *v427;
  unint64_t v428;
  unint64_t v429;
  uint64_t v430;
  void *v431;
  const void *v432;
  unint64_t v433;
  unsigned int v434;
  uint64_t v435;
  unint64_t v436;
  unint64_t v437;
  unint64_t v438;
  uint64_t v439;
  unint64_t v440;
  unint64_t v441;
  char v442;
  unint64_t v443;
  unint64_t v444;
  uint64_t v445;
  _QWORD *v446;
  _QWORD *v447;
  _QWORD *v448;
  _QWORD *v449;
  _QWORD *v450;
  _QWORD *v451;
  _QWORD *v452;
  _QWORD *v453;
  unint64_t v454;
  uint64_t v455;
  _QWORD *v456;
  unint64_t v457;
  size_t v458;
  unint64_t v459;
  unint64_t v460;
  uint64_t v461;
  _QWORD *v462;
  _QWORD *v463;
  _QWORD *v464;
  _QWORD *v465;
  char v466;
  char *v467;
  unint64_t v468;
  unint64_t v469;
  uint64_t v470;
  int v471;
  int v472;
  unint64_t v473;
  unint64_t v474;
  uint64_t v475;
  unint64_t v476;
  unint64_t v477;
  uint64_t v478;
  void *v479;
  const void *v480;
  unint64_t v481;
  unint64_t v482;
  uint64_t v483;
  unint64_t v484;
  unint64_t v485;
  uint64_t v486;
  void *v487;
  const void *v488;
  unint64_t v489;
  unint64_t v490;
  uint64_t v491;
  _QWORD *v492;
  _QWORD *v493;
  unint64_t v494;
  unint64_t v495;
  unint64_t v496;
  __int128 v497;
  __int128 v498;
  unint64_t v499;
  unint64_t v500;
  uint64_t v501;
  _QWORD *v502;
  _QWORD *v503;
  unint64_t v504;
  unint64_t v505;
  uint64_t v506;
  _QWORD *v507;
  _QWORD *v508;
  _QWORD *v509;
  _QWORD *v510;
  unint64_t v511;
  unint64_t v512;
  unint64_t v513;
  __int128 v514;
  __int128 v515;
  unint64_t v516;
  unint64_t v517;
  unint64_t v518;
  __int128 v519;
  __int128 v520;
  unint64_t v521;
  unint64_t v522;
  uint64_t v523;
  _QWORD *v524;
  _QWORD *v525;
  char v526;
  unint64_t v527;
  unint64_t v528;
  uint64_t v529;
  unint64_t v530;
  unint64_t v531;
  unint64_t v532;
  __int128 v533;
  __int128 v534;
  _QWORD *v535;
  _QWORD *v536;
  _QWORD *v537;
  _QWORD *v538;
  _QWORD *v539;
  _QWORD *v540;
  _QWORD *v541;
  _QWORD *v542;
  unint64_t v543;
  unint64_t v544;
  _QWORD *v545;
  _QWORD *v546;
  void *v547;
  _BYTE *v548;
  uint64_t v549;
  size_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  _QWORD *v554;
  _QWORD *v555;
  unint64_t v556;
  unint64_t v557;
  unint64_t v558;
  __int128 v559;
  __int128 v560;
  _QWORD *v561;
  _QWORD *v562;
  _QWORD *v563;
  _QWORD *v564;
  char *v565;
  char *v566;
  _QWORD *v567;
  unint64_t v568;
  uint64_t v569;
  unint64_t v570;
  unint64_t v571;
  uint64_t v572;
  unint64_t v573;
  unint64_t v574;
  unint64_t v575;
  __int128 v576;
  __int128 v577;
  _QWORD *v578;
  _QWORD *v579;
  _QWORD *v580;
  _QWORD *v581;
  _QWORD *v582;
  _QWORD *v583;
  _QWORD *v584;
  _QWORD *v585;
  unint64_t v586;
  _QWORD *v587;
  unint64_t v588;
  _QWORD *v589;
  unint64_t v590;
  unint64_t v591;
  unint64_t v592;
  void *v593;
  uint64_t v594;
  uint64_t v595;
  void (*v596)(uint64_t, uint64_t, uint64_t);
  id v597;
  void *v598;
  _BYTE *v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  int v603;
  int v604;
  void *v605;
  _BYTE *v606;
  uint64_t v607;
  uint64_t v608;
  uint64_t v609;
  int v610;
  int v611;
  _QWORD *v612;
  _QWORD *v613;
  unint64_t v614;
  unint64_t v615;
  void *v616;
  _BYTE *v617;
  uint64_t v618;
  unint64_t v619;
  uint64_t v620;
  uint64_t v621;
  _QWORD *v622;
  _QWORD *v623;
  unint64_t v624;
  unint64_t v625;
  _QWORD *v626;
  _QWORD *v627;
  _QWORD *v628;
  _QWORD *v629;
  _QWORD *v630;
  _QWORD *v631;
  _QWORD *v632;
  _QWORD *v633;
  _QWORD *v634;
  _QWORD *v635;
  void *v636;
  _BYTE *v637;
  uint64_t v638;
  unint64_t v639;
  uint64_t v640;
  uint64_t v641;
  int v642;
  int v643;
  int v644;
  int v645;
  int v646;
  int v647;
  int v648;
  int v649;
  uint64_t v650;
  int v651;
  int v652;
  int v653;
  int v654;
  int v655;
  int v656;
  int v657;
  int v658;
  int v659;
  int v660;
  unint64_t v661;
  unint64_t v662;
  int v663;
  unsigned int v664;
  unint64_t v665;
  unint64_t v666;
  int v667;
  unsigned int v668;
  _QWORD *v669;
  unint64_t v670;
  unint64_t v671;
  unint64_t v672;
  void *v673;
  uint64_t v674;
  uint64_t v675;
  void (*v676)(uint64_t, uint64_t, uint64_t);
  id v677;
  unint64_t v678;
  unint64_t v679;
  _QWORD *v680;
  _QWORD *v681;
  void *v682;
  _BYTE *v683;
  uint64_t v684;
  uint64_t v685;
  uint64_t v686;
  uint64_t v687;
  uint64_t v688;
  int v689;
  int v690;
  int v691;
  _QWORD *v692;
  unint64_t v693;
  unint64_t v694;
  unint64_t v695;
  void *v696;
  uint64_t v697;
  uint64_t v698;
  void (*v699)(uint64_t, uint64_t, uint64_t);
  id v700;
  char v701;
  _QWORD *v702;
  unint64_t v703;
  unint64_t v704;
  unint64_t v705;
  void *v706;
  uint64_t v707;
  uint64_t v708;
  void (*v709)(uint64_t, uint64_t, uint64_t);
  id v710;
  unint64_t v711;
  unint64_t v712;
  void *v713;
  _BYTE *v714;
  uint64_t v715;
  uint64_t v716;
  uint64_t v717;
  uint64_t v718;
  uint64_t v719;
  int v720;
  int v721;
  int v722;
  unint64_t v723;
  unint64_t v724;
  uint64_t v725;
  unint64_t v726;
  unint64_t v727;
  char *v728;
  char *v729;
  _QWORD *v730;
  _QWORD *v731;
  unint64_t v732;
  char *v733;
  uint64_t v734;
  uint64_t v735;
  const void *v736;
  uint64_t v737;
  void *v738;
  void *v739;
  unint64_t v740;
  _BYTE *v741;
  uint64_t v742;
  uint64_t v743;
  uint64_t v744;
  int v745;
  int v746;
  int v747;
  _QWORD *v748;
  _QWORD *v749;
  _QWORD *v750;
  _QWORD *v751;
  unint64_t v752;
  unint64_t v753;
  unint64_t v754;
  __int128 v755;
  uint64_t v756;
  uint64_t v757;
  uint64_t v758;
  uint64_t v759;
  uint64_t v760;
  uint64_t v761;
  unsigned int v762;
  uint64_t v763;
  _QWORD *v764;
  const void *v765;
  unint64_t v766;
  unint64_t v767;
  uint64_t v768;
  _QWORD *v769;
  _QWORD *v770;
  _QWORD *v771;
  _QWORD *v772;
  unint64_t v773;
  unint64_t v774;
  unint64_t v775;
  unint64_t v776;
  unint64_t v777;
  __int128 v778;
  __int128 v779;
  unint64_t v780;
  _QWORD *v781;
  _QWORD *v782;
  unint64_t v783;
  size_t v784;
  _QWORD *v785;
  char *v786;
  uint64_t v787;
  uint64_t v788;
  const void *v789;
  uint64_t v790;
  void *v791;
  void *v792;
  _BYTE *v793;
  uint64_t v794;
  uint64_t v795;
  uint64_t v796;
  int v797;
  int v798;
  int v799;
  unsigned int v800;
  const void *v801;
  unint64_t v802;
  unint64_t v803;
  uint64_t v804;
  _QWORD *v805;
  _QWORD *v806;
  _QWORD *v807;
  _QWORD *v808;
  unint64_t v809;
  unint64_t v810;
  unint64_t v811;
  __int128 v812;
  __int128 v813;
  size_t v814;
  unint64_t v815;
  unint64_t v816;
  unint64_t v817;
  __int128 v818;
  __int128 v819;
  _QWORD *v820;
  _QWORD *v821;
  unint64_t v822;
  char *v823;
  uint64_t v824;
  uint64_t v825;
  const void *v826;
  uint64_t v827;
  void *v828;
  void *v829;
  _BYTE *v830;
  uint64_t v831;
  uint64_t v832;
  uint64_t v833;
  int v834;
  int v835;
  int v836;
  unint64_t v837;
  unint64_t v838;
  uint64_t v839;
  void *v840;
  const void *v841;
  _QWORD *v842;
  _QWORD *v843;
  _QWORD *v844;
  _QWORD *v845;
  uint64_t v846;
  uint64_t v847;
  unint64_t v848;
  unint64_t v849;
  unint64_t v850;
  __int128 v851;
  __int128 v852;
  _QWORD *v853;
  _QWORD *v854;
  unint64_t v855;
  size_t v856;
  char *v857;
  uint64_t v858;
  uint64_t v859;
  const void *v860;
  uint64_t v861;
  void *v862;
  size_t v863;
  void *v864;
  _BYTE *v865;
  uint64_t v866;
  uint64_t v867;
  uint64_t v868;
  int v869;
  int v870;
  int v871;
  char *v872;
  void *v873;
  _BYTE *v874;
  uint64_t v875;
  uint64_t v876;
  uint64_t v877;
  int v878;
  int v879;
  int v880;
  _QWORD *v881;
  _QWORD *v882;
  _QWORD *v883;
  uint64_t *v884;
  uint64_t v885;
  int v886;
  uint64_t v887;
  size_t v888;
  void (*v889)(unint64_t, unint64_t, uint64_t);
  _BYTE *v890;
  _QWORD *v891;
  unint64_t v892;
  _QWORD *v893;
  uint64_t v894;
  const void *v895;
  uint64_t v896;
  uint64_t v897;
  void *v898;
  size_t v899;
  unint64_t v900;
  void *v901;
  unint64_t v902;
  const void *v903;
  unint64_t v904;
  unint64_t v905;
  unint64_t v906;
  uint64_t v907;
  unint64_t v908;
  unint64_t v909;
  unint64_t v910;
  __int128 v911;
  __int128 v912;
  _QWORD *v913;
  _QWORD *v914;
  unint64_t v915;
  void *v916;
  unint64_t v917;
  const void *v918;
  unint64_t v919;
  unint64_t v920;
  unint64_t v921;
  uint64_t v922;
  unint64_t v923;
  unint64_t v924;
  unint64_t v925;
  __int128 v926;
  __int128 v927;
  _QWORD *v928;
  _QWORD *v929;
  char *v930;
  char *v931;
  uint64_t v932;
  unsigned int v933;
  _QWORD *v934;
  unint64_t v935;
  size_t v936;
  size_t v937;
  unint64_t v938;
  unint64_t v939;
  uint64_t v940;
  unint64_t v941;
  unint64_t v942;
  unint64_t v943;
  __int128 v944;
  __int128 v945;
  _QWORD *v946;
  _QWORD *v947;
  unint64_t v948;
  unint64_t v949;
  unint64_t v950;
  unint64_t v951;
  __int128 v952;
  __int128 v953;
  _QWORD *v954;
  _QWORD *v955;
  _QWORD *v956;
  uint64_t *v957;
  uint64_t v958;
  int v959;
  void (*v960)(unint64_t, unint64_t, uint64_t);
  _QWORD *v961;
  uint64_t *v962;
  uint64_t v963;
  int v964;
  void (*v965)(unint64_t, unint64_t, uint64_t);
  _QWORD *v966;
  _QWORD *v967;
  unint64_t v968;
  _BYTE *v969;
  char *v970;
  uint64_t v971;
  uint64_t v972;
  const void *v973;
  uint64_t v974;
  void *v975;
  void *v976;
  _BYTE *v977;
  uint64_t v978;
  uint64_t v979;
  uint64_t v980;
  int v981;
  int v982;
  int v983;
  void *v984;
  _BYTE *v985;
  uint64_t v986;
  uint64_t v987;
  uint64_t v988;
  uint64_t v989;
  int v990;
  int v991;
  int v992;
  _QWORD *v993;
  _QWORD *v994;
  unint64_t v995;
  unint64_t v996;
  void *v997;
  _BYTE *v998;
  uint64_t v999;
  uint64_t v1000;
  uint64_t v1001;
  int v1002;
  int v1003;
  int v1004;
  _QWORD *v1005;
  uint64_t *v1006;
  uint64_t v1007;
  int v1008;
  uint64_t v1009;
  size_t v1010;
  void (*v1011)(unint64_t, unint64_t, uint64_t);
  _BYTE *v1012;
  _QWORD *v1013;
  unint64_t v1014;
  char *v1015;
  uint64_t v1016;
  const void *v1017;
  uint64_t v1018;
  uint64_t v1019;
  void *v1020;
  size_t v1021;
  unint64_t v1022;
  void *v1023;
  unint64_t v1024;
  const void *v1025;
  unint64_t v1026;
  unint64_t v1027;
  unint64_t v1028;
  uint64_t v1029;
  unint64_t v1030;
  unint64_t v1031;
  unint64_t v1032;
  __int128 v1033;
  __int128 v1034;
  _QWORD *v1035;
  _QWORD *v1036;
  unint64_t v1037;
  void *v1038;
  unint64_t v1039;
  const void *v1040;
  unint64_t v1041;
  unint64_t v1042;
  unint64_t v1043;
  uint64_t v1044;
  unint64_t v1045;
  unint64_t v1046;
  unint64_t v1047;
  __int128 v1048;
  __int128 v1049;
  _QWORD *v1050;
  _QWORD *v1051;
  char *v1052;
  char *v1053;
  uint64_t v1054;
  unsigned int v1055;
  unint64_t v1056;
  size_t v1057;
  size_t v1058;
  unint64_t v1059;
  unint64_t v1060;
  uint64_t v1061;
  unint64_t v1062;
  unint64_t v1063;
  unint64_t v1064;
  __int128 v1065;
  __int128 v1066;
  _QWORD *v1067;
  _QWORD *v1068;
  unint64_t v1069;
  _QWORD *v1070;
  uint64_t *v1071;
  uint64_t v1072;
  int v1073;
  void (*v1074)(unint64_t, unint64_t, uint64_t);
  unint64_t v1075;
  unint64_t v1076;
  _QWORD *v1077;
  uint64_t *v1078;
  uint64_t v1079;
  int v1080;
  void (*v1081)(unint64_t, unint64_t, uint64_t);
  _BYTE *v1082;
  _QWORD *v1083;
  _QWORD *v1084;
  unint64_t v1085;
  unint64_t v1086;
  unint64_t v1087;
  unint64_t v1088;
  unint64_t v1089;
  __int128 v1090;
  __int128 v1091;
  unint64_t v1092;
  unint64_t v1093;
  unint64_t v1094;
  _BYTE *v1095;
  char *v1096;
  uint64_t v1097;
  uint64_t v1098;
  const void *v1099;
  uint64_t v1100;
  void *v1101;
  size_t v1102;
  _QWORD *v1103;
  _QWORD *v1104;
  _QWORD *v1105;
  _QWORD *v1106;
  void *v1107;
  _BYTE *v1108;
  uint64_t v1109;
  uint64_t v1110;
  uint64_t v1111;
  int v1112;
  int v1113;
  int v1114;
  _QWORD *v1115;
  _QWORD *v1116;
  unint64_t v1117;
  char *v1118;
  uint64_t v1119;
  uint64_t v1120;
  const void *v1121;
  uint64_t v1122;
  void *v1123;
  unint64_t v1124;
  unint64_t v1125;
  unint64_t v1126;
  __int128 v1127;
  __int128 v1128;
  _QWORD *v1129;
  _QWORD *v1130;
  _BYTE *v1131;
  unsigned __int8 *v1132;
  unsigned int v1133;
  _QWORD *v1134;
  _QWORD *v1135;
  unsigned int v1136;
  uint64_t v1137;
  void *v1138;
  const void *v1139;
  void *v1140;
  const void *v1141;
  size_t v1142;
  uint64_t v1143;
  size_t v1144;
  uint64_t v1145;
  _QWORD *v1146;
  _QWORD *v1147;
  _BYTE *v1148;
  unsigned __int8 *v1149;
  unsigned int v1150;
  uint64_t v1151;
  _QWORD *v1152;
  unint64_t v1153;
  unsigned int v1154;
  uint64_t v1155;
  void *v1156;
  const void *v1157;
  _BYTE *v1158;
  void *v1159;
  const void *v1160;
  size_t v1161;
  _QWORD *v1162;
  uint64_t v1163;
  uint64_t v1164;
  _QWORD *v1165;
  _QWORD *v1166;
  unint64_t v1167;
  unint64_t v1168;
  unint64_t v1169;
  unint64_t v1170;
  unint64_t v1171;
  unint64_t v1172;
  uint64_t v1173;
  _QWORD *v1174;
  _QWORD *v1175;
  unint64_t v1176;
  unint64_t v1177;
  unint64_t v1178;
  __int128 v1179;
  __int128 v1180;
  _BYTE *v1181;
  _QWORD *v1182;
  unint64_t v1183;
  char *v1184;
  uint64_t v1185;
  uint64_t v1186;
  uint64_t v1187;
  void *v1188;
  const void *v1189;
  size_t v1190;
  _QWORD *v1191;
  _QWORD *v1192;
  unint64_t v1193;
  unint64_t v1194;
  unint64_t v1195;
  unint64_t v1196;
  unint64_t v1197;
  unint64_t v1198;
  uint64_t v1199;
  _QWORD *v1200;
  _QWORD *v1201;
  unint64_t v1202;
  unint64_t v1203;
  unint64_t v1204;
  __int128 v1205;
  __int128 v1206;
  _QWORD *v1207;
  _QWORD *v1208;
  unint64_t v1209;
  char *v1210;
  const void *v1211;
  uint64_t v1212;
  void *v1213;
  _QWORD *v1214;
  _QWORD *v1215;
  _QWORD *v1216;
  _QWORD *v1217;
  unint64_t v1218;
  _QWORD *v1219;
  char *v1220;
  uint64_t v1221;
  uint64_t v1222;
  const void *v1223;
  uint64_t v1224;
  void *v1225;
  _QWORD *v1226;
  unint64_t v1227;
  uint64_t v1228;
  _QWORD *result;
  __int128 v1230;
  __int128 v1231;
  unint64_t v1232;
  _QWORD *v1233;
  uint64_t v1234;
  __int128 v1235;
  __int128 v1236;
  unint64_t v1237;
  _QWORD *v1238;
  uint64_t v1239;
  __int128 v1240;
  __int128 v1241;
  _QWORD *v1242;
  _QWORD *v1243;
  _QWORD *v1244;
  _QWORD *v1245;
  void *v1246;
  _BYTE *v1247;
  uint64_t v1248;
  uint64_t v1249;
  uint64_t v1250;
  unint64_t v1251;
  _QWORD *v1252;
  int v1253;
  int v1254;
  int v1255;
  __int128 v1256;
  __int128 v1257;
  unsigned int v1258;
  _QWORD *v1259;
  _QWORD *v1260;
  _QWORD *v1261;
  _QWORD *v1262;
  void *v1263;
  _BYTE *v1264;
  uint64_t v1265;
  uint64_t v1266;
  uint64_t v1267;
  _QWORD *v1268;
  int v1269;
  int v1270;
  int v1271;
  size_t v1272;
  size_t v1273;
  unint64_t v1274;
  unint64_t v1275;
  unint64_t v1276;
  unint64_t v1277;
  unint64_t v1278;
  unint64_t v1279;
  unint64_t v1280;
  unint64_t v1281;
  unint64_t v1282;
  unint64_t v1283;
  uint64_t v1284;
  size_t v1285;
  size_t v1286;
  int v1287;
  uint64_t v1288;
  uint64_t v1289;
  uint64_t v1290;
  uint64_t v1291;
  uint64_t v1292;
  uint64_t v1293;
  size_t v1294;
  size_t v1295;
  uint64_t v1296;
  uint64_t v1297;
  uint64_t v1298;
  uint64_t v1299;
  size_t v1300;
  uint64_t v1301;
  unint64_t v1302;
  uint64_t v1303;
  size_t v1304;
  unsigned int v1305;
  unint64_t v1306;
  unint64_t v1307;
  unint64_t v1308;
  unint64_t v1309;
  unint64_t v1310;
  unint64_t v1311;
  unint64_t v1312;
  unint64_t v1313;
  unint64_t v1314;
  unint64_t v1315;
  unint64_t v1316;
  unint64_t v1317;
  unint64_t v1318;
  size_t v1319;
  size_t v1320;
  uint64_t v1321;
  uint64_t v1322;
  uint64_t v1323;
  uint64_t v1324;
  size_t v1325;
  unint64_t v1326;
  unsigned int v1327;
  unsigned int v1328;
  uint64_t v1329;
  uint64_t v1330;
  uint64_t v1331;
  size_t __n;
  unsigned int v1333;
  size_t v1334;
  unsigned int v1335;
  uint64_t v1336;
  uint64_t v1337;
  unsigned int v1338;
  uint64_t v1339;
  uint64_t v1340;
  uint64_t v1341;
  uint64_t v1342;
  uint64_t v1343;
  uint64_t v1344;
  unint64_t v1345;
  uint64_t v1346;
  uint64_t v1347;
  unint64_t v1348;
  uint64_t v1349;
  unsigned int v1350;
  size_t v1351;
  uint64_t v1352;
  size_t v1353;
  unint64_t v1354;
  uint64_t v1355;
  uint64_t v1356;
  uint64_t v1357;
  uint64_t v1358;
  int v1359;
  unint64_t v1360;
  int v1361;
  unsigned int v1362;
  int v1363;
  char v1364;
  int v1365;
  unsigned __int8 *v1366;
  uint64_t v1367;
  unint64_t v1368;
  unint64_t v1369;
  unint64_t v1370;
  uint64_t v1371;
  unint64_t v1372;
  unint64_t v1373;
  unint64_t v1374;
  uint64_t v1375;
  unint64_t v1376;
  size_t v1377;
  unint64_t v1378;
  size_t v1379;
  unint64_t v1380;
  uint64_t v1381;
  uint64_t v1382;
  uint64_t v1383;
  unint64_t v1384;
  uint64_t v1385;
  uint64_t v1386;
  uint64_t v1387;
  uint64_t v1388;
  size_t v1389;
  size_t v1390;
  unint64_t v1391;
  unint64_t v1392;
  unint64_t v1393;
  int v1394;
  size_t v1395;
  size_t v1396;
  size_t v1397;
  uint64_t v1398;
  unsigned int v1399;
  unint64_t v1400;
  size_t v1401;
  size_t v1402;
  uint64_t v1403;
  size_t v1404;
  unsigned int v1405;
  size_t v1406;
  uint64_t v1407;
  _QWORD *v1408;
  _QWORD *v1409;
  _QWORD *v1410;
  _QWORD *v1411;
  _QWORD *v1412;
  _QWORD *v1413;
  _QWORD *v1414;
  _BYTE *v1415;
  uint64_t v1416;
  uint64_t v1417;
  uint64_t v1418;
  uint64_t v1419;
  uint64_t v1420;
  size_t v1422;
  uint64_t v1424;
  int v1425;
  uint64_t v1426;
  int v1427;
  uint64_t v1428;
  uint64_t v1429;
  uint64_t v1430;
  uint64_t v1431;
  uint64_t v1432;
  uint64_t v1433;
  unint64_t v1434;
  void *v1435;
  size_t v1436;
  const void *v1437;
  const void *v1438;
  uint64_t v1439;
  size_t v1440;
  uint64_t v1441;
  uint64_t v1442;
  _QWORD *v1443;
  _QWORD *v1444;
  _QWORD *v1445;
  _QWORD *v1446;
  _QWORD *v1447;
  _QWORD *v1448;
  _QWORD *v1449;
  _QWORD *v1450;
  _QWORD *v1451;
  _QWORD *v1452;
  _QWORD *v1453;
  _QWORD *v1454;
  _QWORD *v1455;
  unint64_t v1456;
  uint64_t v1457;
  uint64_t v1458;
  uint64_t v1459;

  v1386 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v1384 = *(_QWORD *)(v1386 + 64);
  v1356 = sub_21D7C4668();
  v3 = *(_QWORD *)(v1356 - 8);
  v1399 = *(_DWORD *)(v3 + 84);
  v1365 = *(_DWORD *)(v3 + 80);
  v1388 = v1365 + 16;
  v1343 = v3;
  v4 = *(_QWORD *)(v3 + 64);
  v1353 = v4;
  if (v1399)
    v5 = v4;
  else
    v5 = v4 + 1;
  v1440 = v5;
  v1417 = v1365 | 7;
  v1340 = sub_21D7BF754();
  v6 = *(_QWORD *)(v1340 - 8);
  v1427 = *(_DWORD *)(v6 + 80);
  v1418 = v1427 | 7;
  v1382 = v1417 | v1427;
  v1336 = sub_21D7C3840();
  v7 = *(_QWORD *)(v1336 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v1341 = sub_21D7C3804();
  v9 = *(_QWORD *)(v1341 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10;
  v1363 = v10 | v8;
  v12 = (v10 | v8);
  v13 = v1382 | v12;
  v1419 = v1365;
  v1403 = v1365 + 40;
  v14 = *(_DWORD *)(v6 + 84);
  if (v14)
    v15 = v14 - 1;
  else
    v15 = 0;
  v1335 = v15;
  if (v15 <= 0x7FFFFFFE)
    v16 = 2147483646;
  else
    v16 = v15;
  v1394 = v16;
  v1338 = *(_DWORD *)(v9 + 84);
  v1333 = *(_DWORD *)(v7 + 84);
  if (v1338 <= v1333)
    v17 = *(_DWORD *)(v7 + 84);
  else
    v17 = *(_DWORD *)(v9 + 84);
  v1405 = v17;
  v1327 = *(_DWORD *)(v6 + 84);
  v1339 = v1427 + 113;
  v18 = v1339 & ~(unint64_t)v1427;
  v1416 = v1427;
  v1324 = v6;
  v1330 = v7;
  v1331 = *(_QWORD *)(v1341 - 8);
  v1337 = *(_QWORD *)(v7 + 64) + v10;
  v1396 = *(_QWORD *)(v9 + 64);
  if (v14)
    v19 = *(_QWORD *)(v6 + 64);
  else
    v19 = *(_QWORD *)(v6 + 64) + 1;
  v1401 = v19;
  v1342 = v13 + 1;
  v1434 = ((v1365 + 40) & ~(unint64_t)v1365) + v5;
  v1456 = (v1434 + 7) & 0xFFFFFFFFFFFFFFF8;
  v1439 = v1427 + 40;
  v1402 = v19 + v18;
  v20 = v19
      + v18
      + ((v1439 + ((((v1456 + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~(v1427 | 7));
  v1354 = (v1337 & ~(unint64_t)v10) + v1396;
  if (v17)
    v21 = (v1337 & ~(unint64_t)v10) + v1396;
  else
    v21 = (v1337 & ~(unint64_t)v10) + v1396 + 1;
  v1404 = v21;
  v22 = v21 + 1;
  v23 = v21 + 1 + ((v12 + 160) & ~v12);
  if (v20 <= v23)
    v20 = v23;
  if (v20 <= 0x30)
    v20 = 48;
  v1345 = v20;
  __n = v20 + 1;
  v1422 = v20 + 1 + ((v13 + 1) & ~v13);
  v1344 = sub_21D7C3F6C();
  v24 = *(_QWORD *)(v1344 - 8);
  v1361 = *(_DWORD *)(v24 + 80);
  v1407 = v1361;
  v1349 = (v1361 | 7) + 58;
  v1346 = v1361 | 7;
  v25 = (v1349
       + (((((v1382 | v12) + v5 + ((v1365 + 16) & ~(unint64_t)v1365)) & ~(v1382 | v12))
         + v1422
         + 11) & 0xFFFFFFFFFFFFFFF8)) & ~v1346;
  v1350 = *(_DWORD *)(v24 + 84);
  v1355 = v1361 + 16;
  v1329 = v24;
  v26 = *(_QWORD *)(v24 + 64);
  if (!v1350)
    ++v26;
  v1334 = v26;
  v27 = ((v1361 + 16) & ~(unint64_t)v1361) + v26;
  v1321 = sub_21D7C4314();
  v28 = *(_QWORD *)(v1321 - 8);
  v29 = *(_DWORD *)(v28 + 80);
  v1425 = v29;
  v30 = v11 | 7;
  v1299 = sub_21D7BF964();
  v31 = *(_QWORD *)(v1299 - 8);
  v32 = *(_DWORD *)(v31 + 80);
  v1442 = v13 | v11 | v29 | v32;
  v1351 = v27;
  v1392 = v25 + v27 + v1442;
  v1420 = v29;
  v1358 = v28;
  v1436 = *(_QWORD *)(v28 + 64) + ((v1420 + 65) & ~v1420);
  v1406 = v1440 + 7;
  v33 = (((v1440 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
  v34 = (v33 + 23) & 0xFFFFFFFFFFFFFFF8;
  v1368 = v34;
  v1322 = v29 + 16;
  v1400 = v29 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v35 = v1436 + ((v1322 + ((v34 + 15) & 0xFFFFFFFFFFFFFFF8)) & v1400);
  v1380 = v35 & 0xFFFFFFFFFFFFFFF8;
  v1398 = v12 + 16;
  v1347 = v11;
  v1323 = v11 + 8;
  v36 = v1396 + ((v11 + 8) & ~v11);
  if (v1399)
    v37 = v1399 - 1;
  else
    v37 = 0;
  v38 = v33 + 16;
  v39 = (((v1440 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
  v40 = v22 + ((v33 + 16 + v12) & ~v12);
  v1328 = v37;
  v1287 = v1394 - 1;
  if (v37 <= v1394 - 1)
    v37 = v1394 - 1;
  if (v37 <= 0x7FFFFFFF)
    v37 = 0x7FFFFFFF;
  v41 = v1405 - 1;
  if (!v1405)
    v41 = 0;
  if (v41 <= v37)
    v42 = v37;
  else
    v42 = v41;
  v1305 = v42;
  v43 = (v1456 + 23) & 0xFFFFFFFFFFFFFFF8;
  v1374 = (((v1440 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
  v1395 = v39 + 17;
  v44 = v1427 | 7;
  v1376 = v1418
        + 23
        + v39
        + 17
        + ((v1388 + ((((v43 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v1417);
  v45 = v1404 + v30;
  v46 = (v1404 + v30 + ((v12 + 16 + (((v35 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v12)) & ~v30;
  v47 = v30;
  v48 = v36;
  v1397 = v36;
  v49 = v36 + v1418;
  v1390 = v1402 + v1417;
  v1378 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v1326 = v1378 + 16;
  v50 = v1378 + 16 + v1417;
  v1391 = v1378 + 24;
  v51 = v1378 + 24 + ((v50 + ((v50 + ((v1402 + v1417 + ((v36 + v44 + v46) & ~v44)) & ~v1417)) & ~v1417)) & ~v1417);
  v1359 = *(_DWORD *)(v31 + 80);
  v1352 = v1359;
  v1297 = *(_QWORD *)(v31 + 64) + 7;
  v1298 = *(_QWORD *)(v1299 - 8);
  v52 = v47;
  v53 = ((v45
        + ((v1402 + v12 + ((v1439 + ((v1297 + ((v40 + v1359) & ~v32)) & 0xFFFFFFFFFFFFFFF8)) & ~v1418)) & ~v12)) & ~v47)
      + v48;
  v54 = (v1402 + v12 + ((v44 + 41 + ((v34 + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v44)) & ~v12;
  v55 = v1404 + 7;
  v56 = ((((v1404 + 7 + v54) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 16;
  v57 = ((v1440 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
  v58 = (v13 + v57) & ~v13;
  v1302 = v56 + v13;
  v1303 = v1418 + 41;
  v1288 = v13 + 8;
  v1357 = v1382 | v12;
  v1389 = v1402 + 7;
  v59 = (v1402 + 7 + ((v57 + v1427) & ~v1418)) & 0xFFFFFFFFFFFFFFF8;
  v1294 = v1401 + v12;
  v60 = v1404 + v12;
  v61 = v52;
  v62 = ((v49
        + ((v45
          + ((v1404
            + v12
            + ((v1401 + v12 + ((v38 + v1427) & ~(unint64_t)v1427)) & ~v12)
            + 1) & ~v12)) & ~v52)) & ~v1418)
      + v1402;
  v63 = ((v1436 + 7 + ((v57 + v29) & (v29 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8))) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v1292 = v1418 + 17;
  v64 = v1402 + ((v1418 + 17 + v1456) & ~v1418);
  v1318 = v53;
  v1319 = v1402 + ((v1427 + 8) & ~v1418);
  if (v1319 <= v51)
    v65 = v51;
  else
    v65 = v1402 + ((v1427 + 8) & ~v1418);
  if (v65 <= v53)
    v65 = v53;
  v1320 = v56;
  if (v65 <= v56)
    v65 = v56;
  v1315 = ((((((v59 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
  v1316 = ((v13 + 8 + ((v1422 + 7 + ((v56 + v13 + v58) & ~v13)) & 0xFFFFFFFFFFFFFFF8)) & ~v13) + v1422;
  if (v65 <= v1316)
    v65 = ((v13 + 8 + ((v1422 + 7 + ((v56 + v13 + v58) & ~v13)) & 0xFFFFFFFFFFFFFFF8)) & ~v13) + v1422;
  if (v65 <= ((((((v59 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8)
    v65 = ((((((v59 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
  v1312 = v62;
  v1313 = (((((v1434 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v65 <= v62)
    v65 = v62;
  if (v65 <= (((((v1434 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16)
    v65 = (((((v1434 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v1314 = v63;
  if (v65 <= v63)
    v65 = v63;
  v1311 = v64 + 1;
  if (v65 <= v64 + 1)
    v66 = v64 + 1;
  else
    v66 = v65;
  v1372 = v66;
  v1370 = v1392 & ~v1442;
  v67 = (((v43 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v68 = ((((v67 + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 41;
  v1290 = v12 + 40;
  v69 = ((v60
        + ((v12
          + 40
          + ((((((v67 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v12)) & ~v12)
      + v1404;
  v70 = (v1368 + 23) & 0xFFFFFFFFFFFFFFF8;
  v71 = v70 + 8;
  v1393 = ((v70 + 47) & 0xFFFFFFFFFFFFFFF8) + 40;
  v1285 = v1402 + v12;
  v1286 = ((v1402 + v12 + ((v1393 + v1418) & ~v1418)) & ~v12) + v1404;
  v1300 = v1286 + 7;
  v1301 = v1427 + 8;
  v72 = ((v1301 + ((v1286 + 7 + v58) & 0xFFFFFFFFFFFFFFF8)) & ~v1418) + v1402;
  v1296 = v12 + 24;
  v1325 = v49;
  v1317 = v1378 + 16 + v1417;
  v73 = v1391
      + ((v50 + ((v50 + ((v1390 + ((v49 + ((v45 + ((v12 + 24 + v1380) & ~v12)) & ~v61)) & ~v1418)) & ~v1417)) & ~v1417)) & ~v1417);
  v74 = (v1374 + 15) & 0xFFFFFFFFFFFFFFF8;
  v75 = v1365;
  v76 = ((v75 + 80) & ~v75) + v1440;
  v77 = ((v75 + 56) & ~v75) + v1440;
  v78 = (v59 + 23) & 0xFFFFFFFFFFFFFFF8;
  v1293 = v12 + 18;
  v79 = ((v55
        + ((v12
          + 8
          + ((((((((((v78 + 25) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v12)) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v80 = v1368 + 40;
  v81 = v1374 + 8;
  v82 = v1456 + 8;
  v83 = ((v1456 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  v84 = (((v1378 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v1375 = v12 + 8;
  v1304 = v1404 + v12;
  v1379 = v45;
  v85 = v45 + ((v60 + ((v12 + 8 + ((((v84 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v12)) & ~v12);
  v86 = v1397 + v61;
  v1381 = v61;
  v87 = (v1376 & ~v1418) + v1402;
  v1289 = v1420 + 8;
  v1295 = v1436 + v12;
  v1291 = v12 + 9;
  v1377 = v1404 + 7;
  v1457 = v12;
  v88 = ((v1404
        + v1418
        + ((v1398
          + ((v55
            + ((v12
              + 9
              + ((((v55 + ((v1436 + v12 + ((v1420 + 8 + v84) & v1400)) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v12)) & 0xFFFFFFFFFFFFFFF8)) & ~v12)) & ~v1418)
      + v1402;
  v1309 = v73;
  v1310 = v68;
  if (v1372 <= v68)
    v89 = v68;
  else
    v89 = v1372;
  v1307 = v72;
  v1308 = v69;
  if (v89 <= v69)
    v89 = v69;
  v1369 = v71;
  if (v89 <= v71)
    v89 = v71;
  if (v89 <= v72)
    v89 = v72;
  if (v89 <= v1395)
    v89 = v1395;
  if (v89 <= v73)
    v89 = v73;
  v1306 = v74 + 16;
  if (v89 <= v74 + 16)
    v89 = v74 + 16;
  v1373 = ((v1434 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
  if (v89 <= v1373)
    v89 = ((v1434 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
  if (v89 <= v76)
    v89 = v76;
  if (v89 <= v77)
    v89 = v77;
  if (v89 <= ((((v1406 + ((v1403 + (v55 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v1365)) & 0xFFFFFFFFFFFFFFF8)
              + 23) & 0xFFFFFFFFFFFFFFF8)
            + 16)
    v89 = ((((v1406 + ((v1403 + (v55 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v1365)) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  if (v89 <= ((v12 + 18 + v78) & ~v12) + v1404)
    v89 = ((v12 + 18 + v78) & ~v12) + v1404;
  if (v89 <= v79)
    v89 = ((v55
          + ((v12
            + 8
            + ((((((((((v78 + 25) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8)
              + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v12)) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  if (v89 <= v80)
    v89 = v80;
  if (v89 <= v74 + 8)
    v89 = v74 + 8;
  if (v89 <= v1393)
    v89 = v1393;
  if (v89 <= v81)
    v89 = v81;
  if (v89 <= v82)
    v89 = v82;
  if (v89 <= v83)
    v89 = v83;
  if (v89 <= v1434)
    v89 = v1434;
  if (v89 <= ((v1389
              + ((v1439
                + ((((v1397 + ((v1397 + v61 + (v85 & ~v61)) & ~v61) + 9) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v1418)) & 0xFFFFFFFFFFFFFFF8)
            + 16)
    v89 = ((v1389
          + ((v1439
            + ((((v1397 + ((v1397 + v61 + (v85 & ~v61)) & ~v61) + 9) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v1418)) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  if (v89 <= v87)
    v89 = v87;
  if (v89 <= v88)
    v89 = v88;
  if (v89 <= 8)
    v90 = 8;
  else
    v90 = v89;
  v91 = ((v90 + 8 + v1370) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v91 <= v1384)
    v91 = v1384;
  if (v91 <= 8)
    v92 = 8;
  else
    v92 = v91;
  v93 = v1442 | v1382 | v1361 | *(_DWORD *)(v1386 + 80) & 0xF8u;
  if (v93 != 7
    || ((v1427 | v1365 | v1363 | v1361 | v1425 | v1359 | *(_DWORD *)(v1386 + 80)) & 0x100000) != 0
    || (unint64_t)(v92 + 1) > 0x18)
  {
    v96 = *a2;
    *a1 = *a2;
    v97 = (_QWORD *)(v96 + ((v93 + 16) & ~v93));
    swift_retain();
    return v97;
  }
  v1284 = v90;
  v94 = a2;
  if (*((unsigned __int8 *)a2 + v92) >= 4u)
  {
    if (v92 <= 3)
      v95 = v92;
    else
      v95 = 4;
    __asm { BR              X12 }
  }
  switch(*((_BYTE *)a2 + v92))
  {
    case 0:
      v97 = a1;
      (*(void (**)(_QWORD *))(v1386 + 16))(a1);
      *((_BYTE *)a1 + v92) = 0;
      return v97;
    case 1:
      v1362 = *(_DWORD *)(v1358 + 84);
      v1272 = v86;
      v1274 = v76;
      v1275 = ((((v1406 + ((v1403 + (v55 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v1365)) & 0xFFFFFFFFFFFFFFF8)
              + 23) & 0xFFFFFFFFFFFFFFF8)
            + 16;
      v1276 = v77;
      v1277 = v80;
      v1278 = ((v12 + 18 + v78) & ~v12) + v1404;
      v1279 = v74 + 8;
      v1280 = v88;
      v1281 = v81;
      v1282 = ((v1389
              + ((v1439
                + ((((v1397 + ((v1397 + v1381 + (v85 & ~v1381)) & ~v1381) + 9) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v1418)) & 0xFFFFFFFFFFFFFFF8)
            + 16;
      v1283 = v87;
      v1348 = v82;
      v1360 = v83;
      v1424 = v90 + 8;
      v98 = ~(unint64_t)v1365;
      v1428 = ~v13;
      v99 = v94[1];
      *a1 = *v94;
      a1[1] = v99;
      v100 = (void *)(((unint64_t)a1 + v1365 + 16) & v98);
      v101 = (const void *)(((unint64_t)v94 + v1365 + 16) & v98);
      sub_21D7C4C20();
      v1273 = v1404 + v1418;
      if (__swift_getEnumTagSinglePayload((uint64_t)v101, 1, v1356))
      {
        v102 = v1440;
        memcpy(v100, v101, v1440);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v100, v101, v1356);
        __swift_storeEnumTagSinglePayload((uint64_t)v100, 0, 1, v1356);
        v102 = v1440;
      }
      v104 = ~v1418;
      v1383 = ~v1416;
      v1387 = ~v12;
      v1385 = ~v1347;
      v105 = (_BYTE *)(((unint64_t)v100 + v102 + v1357) & v1428);
      v106 = (unsigned __int8 *)(((unint64_t)v101 + v102 + v1357) & v1428);
      v107 = *v106;
      v1364 = 8 * v1354;
      v1426 = v92;
      v1371 = ~v1418;
      if (v107 > 2)
      {
        v115 = (const void *)(((unint64_t)v101 + v102 + v1357) & v1428);
        v111 = v1422;
        memcpy((void *)(((unint64_t)v100 + v102 + v1357) & v1428), v115, v1422);
        v116 = v1346;
        goto LABEL_183;
      }
      *v105 = v107;
      v108 = (_QWORD *)((unint64_t)&v105[v1342] & v1428);
      v1366 = (unsigned __int8 *)(((unint64_t)v101 + v102 + v1357) & v1428);
      v109 = (_QWORD *)((unint64_t)&v106[v1342] & v1428);
      v110 = *((unsigned __int8 *)v109 + v1345);
      v111 = v1422;
      if (v110 > 2)
      {
        memcpy((void *)((unint64_t)&v105[v1342] & v1428), v109, __n);
LABEL_181:
        v116 = v1346;
        goto LABEL_182;
      }
      if (v110 != 2)
      {
        if (v110 != 1)
        {
          *v108 = *v109;
          *(_QWORD *)(((unint64_t)&v105[v1342] & v1428) + 8) = v109[1];
          *(_QWORD *)(((unint64_t)&v105[v1342] & v1428) + 0x10) = v109[2];
          *(_QWORD *)(((unint64_t)&v105[v1342] & v1428) + 0x18) = v109[3];
          *(_QWORD *)(((unint64_t)&v105[v1342] & v1428) + 0x20) = v109[4];
          *(_QWORD *)(((unint64_t)&v105[v1342] & v1428) + 0x28) = v109[5];
          *((_BYTE *)v108 + v1345) = 0;
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          v116 = v1346;
          v111 = v1422;
LABEL_182:
          v106 = v1366;
          goto LABEL_183;
        }
        v112 = v109[3];
        *(_QWORD *)(((unint64_t)&v105[v1342] & v1428) + 0x18) = v112;
        *(_QWORD *)(((unint64_t)&v105[v1342] & v1428) + 0x20) = v109[4];
        (**(void (***)(_QWORD *, _QWORD *))(v112 - 8))(v108, v109);
        v113 = (void *)(((unint64_t)v108 + v1403) & v98);
        v114 = (const void *)(((unint64_t)v109 + v1403) & v98);
        if (__swift_getEnumTagSinglePayload((uint64_t)v114, 1, v1356))
        {
          memcpy(v113, v114, v1440);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v113, v114, v1356);
          __swift_storeEnumTagSinglePayload((uint64_t)v113, 0, 1, v1356);
        }
        v118 = (_QWORD *)(((unint64_t)v113 + v1406) & 0xFFFFFFFFFFFFFFF8);
        v119 = (_QWORD *)(((unint64_t)v114 + v1406) & 0xFFFFFFFFFFFFFFF8);
        *v118 = *v119;
        v118[1] = v119[1];
        v120 = ((unint64_t)v118 + 23) & 0xFFFFFFFFFFFFFFF8;
        v121 = ((unint64_t)v119 + 23) & 0xFFFFFFFFFFFFFFF8;
        *(_QWORD *)v120 = *(_QWORD *)v121;
        *(_BYTE *)(v120 + 8) = *(_BYTE *)(v121 + 8);
        v122 = ((unint64_t)v118 + 39) & 0xFFFFFFFFFFFFFFF8;
        v123 = ((unint64_t)v119 + 39) & 0xFFFFFFFFFFFFFFF8;
        *(_QWORD *)v122 = *(_QWORD *)v123;
        *(_BYTE *)(v122 + 8) = *(_BYTE *)(v123 + 8);
        v124 = ((unint64_t)v118 + 55) & 0xFFFFFFFFFFFFFFF8;
        v125 = ((unint64_t)v119 + 55) & 0xFFFFFFFFFFFFFFF8;
        v126 = *(_QWORD *)v125;
        *(_BYTE *)(v124 + 8) = *(_BYTE *)(v125 + 8);
        *(_QWORD *)v124 = v126;
        v127 = (_QWORD *)(((unint64_t)v118 + 71) & 0xFFFFFFFFFFFFFFF8);
        v128 = (_QWORD *)(((unint64_t)v119 + 71) & 0xFFFFFFFFFFFFFFF8);
        *v127 = *v128;
        v127[1] = v128[1];
        v129 = ((unint64_t)v127 + 23) & 0xFFFFFFFFFFFFFFF8;
        v130 = ((unint64_t)v128 + 23) & 0xFFFFFFFFFFFFFFF8;
        v131 = *(_QWORD *)(v130 + 24);
        sub_21D7C4C20();
        sub_21D7C4C20();
        sub_21D7C4C20();
        sub_21D7C4C20();
        if (v131 < 0xFFFFFFFF)
        {
          v132 = *(_OWORD *)v130;
          v133 = *(_OWORD *)(v130 + 16);
          *(_QWORD *)(v129 + 32) = *(_QWORD *)(v130 + 32);
          *(_OWORD *)v129 = v132;
          *(_OWORD *)(v129 + 16) = v133;
        }
        else
        {
          *(_QWORD *)(v129 + 24) = v131;
          *(_QWORD *)(v129 + 32) = *(_QWORD *)(v130 + 32);
          (**(void (***)(unint64_t, unint64_t, unint64_t))(v131 - 8))(v129, v130, v131);
        }
        v134 = (_QWORD *)((v1439 + v129) & v104);
        v135 = (_QWORD *)((v1439 + v130) & v104);
        if (v1335 >= 0x7FFFFFFF)
        {
          v140 = (const void *)(((unint64_t)v135 + v1339) & v1383);
          v111 = v1422;
          if (__swift_getEnumTagSinglePayload((uint64_t)v140, v1327, v1340) <= 1)
          {
            v137 = (char *)(v135 + 1);
            v138 = v1339;
            v139 = ~v1416;
            goto LABEL_154;
          }
        }
        else
        {
          v136 = *(_QWORD *)(((v1439 + v130) & v104) + 0x10);
          if (v136 >= 0xFFFFFFFF)
            LODWORD(v136) = -1;
          v111 = v1422;
          if ((int)v136 - 1 < 0)
          {
            v137 = (char *)(v135 + 1);
            v138 = v1339;
            v139 = ~v1416;
            v140 = (const void *)(((unint64_t)v135 + v1339) & v1383);
LABEL_154:
            *(_BYTE *)v134 = *(_BYTE *)v135;
            v134[1] = v135[1];
            v134[2] = *((_QWORD *)v137 + 1);
            v134[3] = *((_QWORD *)v137 + 2);
            v134[4] = *((_QWORD *)v137 + 3);
            v134[5] = *((_QWORD *)v137 + 4);
            v134[6] = *((_QWORD *)v137 + 5);
            v134[7] = *((_QWORD *)v137 + 6);
            v134[8] = *((_QWORD *)v137 + 7);
            v134[9] = *((_QWORD *)v137 + 8);
            v134[10] = *((_QWORD *)v137 + 9);
            v134[11] = *((_QWORD *)v137 + 10);
            v134[12] = *((_QWORD *)v137 + 11);
            v141 = *((_QWORD *)v137 + 12);
            *((_BYTE *)v134 + 112) = v137[104];
            v134[13] = v141;
            v142 = (void *)(((unint64_t)v134 + v138) & v139);
            sub_21D7C4C20();
            sub_21D7C4C20();
            sub_21D7C4C20();
            sub_21D7C4C20();
            sub_21D7C4C20();
            sub_21D7C4C20();
            if (__swift_getEnumTagSinglePayload((uint64_t)v140, 1, v1340))
            {
              memcpy(v142, v140, v1401);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v1324 + 16))(v142, v140, v1340);
              __swift_storeEnumTagSinglePayload((uint64_t)v142, 0, 1, v1340);
            }
            v111 = v1422;
            goto LABEL_180;
          }
        }
        memcpy(v134, v135, v1402);
LABEL_180:
        *((_BYTE *)v108 + v1345) = 1;
        goto LABEL_181;
      }
      if (v109[1] < 0xFFFFFFFFuLL)
      {
        memcpy((void *)((unint64_t)&v105[v1342] & v1428), v109, 0x48uLL);
      }
      else
      {
        *v108 = *v109;
        *(_QWORD *)(((unint64_t)&v105[v1342] & v1428) + 8) = v109[1];
        *(_QWORD *)(((unint64_t)&v105[v1342] & v1428) + 0x10) = v109[2];
        *(_QWORD *)(((unint64_t)&v105[v1342] & v1428) + 0x18) = v109[3];
        v117 = v109[7];
        sub_21D7C4C20();
        sub_21D7C4C20();
        if (v117)
        {
          *(_QWORD *)(((unint64_t)&v105[v1342] & v1428) + 0x38) = v117;
          *(_QWORD *)(((unint64_t)&v105[v1342] & v1428) + 0x40) = v109[8];
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v117 - 8))((uint64_t)(v108 + 4), (uint64_t)(v109 + 4), v117);
        }
        else
        {
          v143 = *((_OWORD *)v109 + 2);
          v144 = *((_OWORD *)v109 + 3);
          *(_QWORD *)(((unint64_t)&v105[v1342] & v1428) + 0x40) = v109[8];
          *(_OWORD *)(((unint64_t)&v105[v1342] & v1428) + 0x20) = v143;
          *(_OWORD *)(((unint64_t)&v105[v1342] & v1428) + 0x30) = v144;
        }
        v111 = v1422;
      }
      v145 = ((unint64_t)v108 + 79) & 0xFFFFFFFFFFFFFFF8;
      v146 = (_QWORD *)(((unint64_t)v109 + 79) & 0xFFFFFFFFFFFFFFF8);
      if (v146[1] < 0xFFFFFFFFuLL)
      {
        memcpy((void *)(((unint64_t)v108 + 79) & 0xFFFFFFFFFFFFFFF8), v146, 0x48uLL);
      }
      else
      {
        *(_QWORD *)v145 = *v146;
        *(_QWORD *)(v145 + 8) = v146[1];
        *(_QWORD *)(v145 + 16) = v146[2];
        *(_QWORD *)(v145 + 24) = v146[3];
        v147 = v146[7];
        sub_21D7C4C20();
        sub_21D7C4C20();
        if (v147)
        {
          *(_QWORD *)(v145 + 56) = v147;
          *(_QWORD *)(v145 + 64) = v146[8];
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v147 - 8))(v145 + 32, (uint64_t)(v146 + 4), v147);
        }
        else
        {
          v148 = *((_OWORD *)v146 + 2);
          v149 = *((_OWORD *)v146 + 3);
          *(_QWORD *)(v145 + 64) = v146[8];
          *(_OWORD *)(v145 + 32) = v148;
          *(_OWORD *)(v145 + 48) = v149;
        }
        v111 = v1422;
      }
      v150 = (_QWORD *)((v145 + 79) & 0xFFFFFFFFFFFFF8);
      v151 = (_QWORD *)(((unint64_t)v146 + 79) & 0xFFFFFFFFFFFFFFF8);
      *v150 = *v151;
      v152 = (_QWORD *)(((unint64_t)v150 + 15) & 0xFFFFFFFFFFFFFFF8);
      v153 = (_QWORD *)(((unint64_t)v151 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v152 = *v153;
      v154 = (void *)(((unint64_t)v152 + v1375) & v1387);
      v155 = (unsigned __int8 *)(((unint64_t)v153 + v1375) & v1387);
      sub_21D7C4C20();
      sub_21D7C4C20();
      if (v1405)
      {
        v156 = v155;
        v157 = v1338;
        v158 = v1354;
        v116 = v1346;
        v106 = v1366;
        if (v1333 >= v1338)
        {
          v159 = (uint64_t)v156;
          v157 = v1333;
          v160 = v1336;
        }
        else
        {
          v159 = ((unint64_t)v156 + v1337) & v1385;
          v160 = v1341;
        }
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v159, v157, v160);
      }
      else
      {
        v158 = v1354;
        v156 = v155;
        v161 = v155[v1354];
        v116 = v1346;
        v106 = v1366;
        if (!v161)
          goto LABEL_662;
        v162 = (v161 - 1) << v1364;
        if (v1354 > 3)
          v162 = 0;
        if ((_DWORD)v1354)
        {
          if (v1354 <= 3)
            v163 = v1354;
          else
            v163 = 4;
          __asm { BR              X11 }
        }
        EnumTagSinglePayload = v162 + 1;
      }
      if (EnumTagSinglePayload)
      {
        memcpy(v154, v156, v1404);
        goto LABEL_664;
      }
LABEL_662:
      (*(void (**)(void *, const void *, uint64_t))(v1330 + 16))(v154, v156, v1336);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1331 + 16))(((unint64_t)v154 + v1337) & v1385, ((unint64_t)v156 + v1337) & v1385, v1341);
      if (!v1405)
        *((_BYTE *)v154 + v158) = 0;
LABEL_664:
      *((_BYTE *)v154 + v1404) = *((_BYTE *)v156 + v1404);
      *(_BYTE *)(((unint64_t)&v105[v1342] & v1428) + v1345) = 2;
LABEL_183:
      v165 = ~v116;
      v166 = &v105[v111];
      v167 = v111;
      v168 = &v106[v111];
      *(_WORD *)v166 = *(_WORD *)&v106[v111];
      v166[2] = v106[v111 + 2];
      v166[3] = v106[v111 + 3];
      v169 = (unint64_t)&v105[v111 + 11] & 0xFFFFFFFFFFFFFFF8;
      v170 = (unint64_t)(v168 + 11) & 0xFFFFFFFFFFFFFFF8;
      v171 = *(_QWORD *)(v170 + 24);
      v1367 = ~v1419;
      if (v171 < 0xFFFFFFFF)
      {
        v172 = *(_OWORD *)v170;
        v173 = *(_OWORD *)(v170 + 16);
        v174 = *(_OWORD *)(v170 + 32);
        *(_OWORD *)(v169 + 41) = *(_OWORD *)(v170 + 41);
        *(_OWORD *)(v169 + 16) = v173;
        *(_OWORD *)(v169 + 32) = v174;
        *(_OWORD *)v169 = v172;
      }
      else
      {
        *(_QWORD *)(v169 + 24) = v171;
        *(_QWORD *)(v169 + 32) = *(_QWORD *)(v170 + 32);
        (**(void (***)(unint64_t, unint64_t))(v171 - 8))(v169, (unint64_t)(v168 + 11) & 0xFFFFFFFFFFFFFFF8);
        *(_QWORD *)(v169 + 40) = *(_QWORD *)(v170 + 40);
        *(_QWORD *)(v169 + 48) = *(_QWORD *)(v170 + 48);
        *(_BYTE *)(v169 + 56) = *(_BYTE *)(v170 + 56);
        sub_21D7C4C20();
      }
      v175 = v1355;
      v176 = ~v1407;
      v177 = ~v1442;
      *(_BYTE *)(v169 + 57) = *(_BYTE *)(v170 + 57);
      v178 = (_QWORD *)((v1349 + v169) & v165);
      v179 = (_QWORD *)((v1349 + v170) & v165);
      if (v1350 >= 0x80000001)
      {
        v181 = ((unint64_t)v179 + v1355) & v176;
        v182 = v1344;
        v183 = __swift_getEnumTagSinglePayload(v181, v1350, v1344);
        v175 = v1355;
        v180 = v1351;
        if (v183 < 2)
          goto LABEL_190;
LABEL_192:
        v185 = v178;
        v186 = v179;
        v187 = v180;
        goto LABEL_193;
      }
      v180 = v1351;
      if (v179[1] < 0xFFFFFFFFuLL)
        goto LABEL_192;
      v181 = ((unint64_t)v179 + v1355) & v176;
      v182 = v1344;
LABEL_190:
      *v178 = *v179;
      v178[1] = v179[1];
      v184 = ((unint64_t)v178 + v175) & v176;
      sub_21D7C4C20();
      if (__swift_getEnumTagSinglePayload(v181, 1, v182))
      {
        v185 = (void *)v184;
        v186 = (const void *)v181;
        v187 = v1334;
LABEL_193:
        memcpy(v185, v186, v187);
        goto LABEL_194;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v1329 + 16))(v184, v181, v182);
      __swift_storeEnumTagSinglePayload(v184, 0, 1, v182);
LABEL_194:
      v188 = v1284;
      v189 = (_QWORD *)(((unint64_t)v178 + v1442 + v180) & v177);
      v190 = (_QWORD *)(((unint64_t)v179 + v1442 + v180) & v177);
      v192 = ~v1420;
      v193 = ~v1352;
      switch(*((_BYTE *)v190 + v1284))
      {
        case 0:
          v1458 = ~v1417;
          v1429 = ~v1381;
          if (__swift_getEnumTagSinglePayload((uint64_t)v190, 1, v1356))
          {
            memcpy(v189, v190, v1440);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1343 + 16))(v189, v190, v1356);
            __swift_storeEnumTagSinglePayload((uint64_t)v189, 0, 1, v1356);
          }
          v255 = ((unint64_t)v189 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v256 = ((unint64_t)v190 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v257 = *(_QWORD *)(v256 + 24);
          *(_QWORD *)(v255 + 24) = v257;
          *(_QWORD *)(v255 + 32) = *(_QWORD *)(v256 + 32);
          (**(void (***)(unint64_t, unint64_t))(v257 - 8))(v255, v256);
          v258 = (_QWORD *)((v255 + 47) & 0xFFFFFFFFFFFFFFF8);
          v259 = (_QWORD *)((v256 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v258 = *v259;
          v258[1] = v259[1];
          v260 = (_QWORD *)(((unint64_t)v258 + 23) & 0xFFFFFFFFFFFFF8);
          v261 = (_QWORD *)(((unint64_t)v259 + 23) & 0xFFFFFFFFFFFFF8);
          *v260 = *v261;
          v262 = (_QWORD *)(((unint64_t)v260 + 15) & 0xFFFFFFFFFFFFFFF8);
          v263 = (_QWORD *)(((unint64_t)v261 + 15) & 0xFFFFFFFFFFFFFFF8);
          *v262 = *v263;
          v262[1] = v263[1];
          v264 = (_QWORD *)(((unint64_t)v262 + v1322) & v1400);
          v265 = (_QWORD *)(((unint64_t)v263 + v1322) & v1400);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v1362 > 0x7FFFFFFE)
          {
            v268 = (_QWORD *)(((unint64_t)v265 + 23) & 0xFFFFFFFFFFFFFFF8);
            v269 = ((unint64_t)v268 + 23) & 0xFFFFFFFFFFFFFFF8;
            v267 = v1339;
            if (!__swift_getEnumTagSinglePayload((v1420 + v269 + 33) & v192, v1362, v1321))
            {
              v1443 = v190;
              goto LABEL_587;
            }
LABEL_299:
            v270 = v1436;
            memcpy(v264, v265, v1436);
            goto LABEL_588;
          }
          v266 = v265[1];
          if (v266 >= 0xFFFFFFFF)
            LODWORD(v266) = -1;
          v267 = v1339;
          if ((v266 + 1) > 1)
            goto LABEL_299;
          v1443 = v190;
          v268 = (_QWORD *)(((unint64_t)v265 + 23) & 0xFFFFFFFFFFFFFFF8);
          v269 = ((unint64_t)v268 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_587:
          *v264 = *v265;
          v264[1] = v265[1];
          v669 = (_QWORD *)(((unint64_t)v264 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v669 = *v268;
          v669[1] = v268[1];
          v670 = ((unint64_t)v669 + 23) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v670 = *(_QWORD *)v269;
          *(_QWORD *)(v670 + 8) = *(_QWORD *)(v269 + 8);
          *(_BYTE *)(v670 + 16) = *(_BYTE *)(v269 + 16);
          v671 = ((unint64_t)v669 + 47) & 0xFFFFFFFFFFFFFFF8;
          v672 = ((unint64_t)v268 + 47) & 0xFFFFFFFFFFFFFFF8;
          v673 = *(void **)v672;
          *(_QWORD *)v671 = *(_QWORD *)v672;
          *(_BYTE *)(v671 + 8) = *(_BYTE *)(v672 + 8);
          v674 = (v1420 + 9 + v671) & v192;
          v675 = (v1420 + 9 + v672) & v192;
          v676 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1358 + 16);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          v677 = v673;
          v676(v674, v675, v1321);
          v190 = v1443;
          v267 = v1339;
          v270 = v1436;
LABEL_588:
          *((_BYTE *)v264 + v270) = *((_BYTE *)v265 + v270);
          v678 = ((unint64_t)v264 + v270) & 0xFFFFFFFFFFFFFFF8;
          v679 = ((unint64_t)v265 + v270) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)(v678 + 8) = *(_QWORD *)(v679 + 8);
          v680 = (_QWORD *)((v678 + 23) & 0xFFFFFFFFFFFFFFF8);
          v681 = (_QWORD *)((v679 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v680 = *v681;
          v680[1] = v681[1];
          v682 = (void *)(((unint64_t)v680 + v1398) & v1387);
          v683 = (_BYTE *)(((unint64_t)v681 + v1398) & v1387);
          sub_21D7C4C20();
          sub_21D7C4C20();
          v684 = v1356;
          v685 = v1399;
          if (v1405)
          {
            v686 = v1333;
            if (v1333 >= v1338)
            {
              v687 = (uint64_t)v683;
              v688 = v1336;
            }
            else
            {
              v687 = (unint64_t)&v683[v1337] & v1385;
              v686 = v1338;
              v688 = v1341;
            }
            v691 = __swift_getEnumTagSinglePayload(v687, v686, v688);
          }
          else
          {
            if (!v683[v1354])
              goto LABEL_827;
            v689 = (v683[v1354] - 1) << v1364;
            if (v1354 > 3)
              v689 = 0;
            if ((_DWORD)v1354)
            {
              if (v1354 <= 3)
                v690 = v1354;
              else
                v690 = 4;
              __asm { BR              X11 }
            }
            v691 = v689 + 1;
          }
          if (v691)
          {
            memcpy(v682, v683, v1404);
            goto LABEL_829;
          }
LABEL_827:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1330 + 16))(v682, v683, v1336);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1331 + 16))(((unint64_t)v682 + v1337) & v1385, (unint64_t)&v683[v1337] & v1385, v1341);
          if (!v1405)
            *((_BYTE *)v682 + v1354) = 0;
LABEL_829:
          v883 = (_QWORD *)(((unint64_t)v682 + v1379) & v1429);
          v884 = (uint64_t *)((unint64_t)&v683[v1379] & v1429);
          if ((v1338 & 0x80000000) != 0)
          {
            v886 = __swift_getEnumTagSinglePayload(((unint64_t)v884 + v1323) & v1385, v1338, v1341);
          }
          else
          {
            v885 = *v884;
            if ((unint64_t)*v884 >= 0xFFFFFFFF)
              LODWORD(v885) = -1;
            v886 = v885 + 1;
          }
          v887 = ~v1418;
          v888 = v1440;
          if (v886)
          {
            memcpy(v883, v884, v1397);
          }
          else
          {
            *v883 = *v884;
            v889 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1331 + 16);
            sub_21D7C4C20();
            v267 = v1339;
            v889(((unint64_t)v883 + v1323) & v1385, ((unint64_t)v884 + v1323) & v1385, v1341);
            v887 = ~v1418;
            v888 = v1440;
            v685 = v1399;
          }
          v890 = (_BYTE *)(((unint64_t)v883 + v1325) & v887);
          v891 = (_QWORD *)(((unint64_t)v884 + v1325) & v887);
          if (v1335 >= 0x7FFFFFFF)
          {
            if (__swift_getEnumTagSinglePayload(((unint64_t)v891 + v267) & v1383, v1327, v1340) <= 1)
            {
              v1453 = v190;
              v893 = v891 + 1;
              v896 = v267;
              v894 = ~v1416;
              v895 = (const void *)(((unint64_t)v891 + v267) & v1383);
              goto LABEL_844;
            }
LABEL_846:
            v899 = v1402;
            memcpy(v890, v891, v1402);
            goto LABEL_849;
          }
          v892 = v891[2];
          if (v892 >= 0xFFFFFFFF)
            LODWORD(v892) = -1;
          if ((int)v892 - 1 >= 0)
            goto LABEL_846;
          v1453 = v190;
          v893 = v891 + 1;
          v894 = ~v1416;
          v895 = (const void *)(((unint64_t)v891 + v267) & v1383);
          v896 = v267;
LABEL_844:
          *v890 = *(_BYTE *)v891;
          *(_QWORD *)((((unint64_t)v883 + v1325) & v887) + 8) = v891[1];
          *(_QWORD *)((((unint64_t)v883 + v1325) & v887) + 0x10) = v893[1];
          *(_QWORD *)((((unint64_t)v883 + v1325) & v887) + 0x18) = v893[2];
          *(_QWORD *)((((unint64_t)v883 + v1325) & v887) + 0x20) = v893[3];
          *(_QWORD *)((((unint64_t)v883 + v1325) & v887) + 0x28) = v893[4];
          *(_QWORD *)((((unint64_t)v883 + v1325) & v887) + 0x30) = v893[5];
          *(_QWORD *)((((unint64_t)v883 + v1325) & v887) + 0x38) = v893[6];
          *(_QWORD *)((((unint64_t)v883 + v1325) & v887) + 0x40) = v893[7];
          *(_QWORD *)((((unint64_t)v883 + v1325) & v887) + 0x48) = v893[8];
          *(_QWORD *)((((unint64_t)v883 + v1325) & v887) + 0x50) = v893[9];
          *(_QWORD *)((((unint64_t)v883 + v1325) & v887) + 0x58) = v893[10];
          *(_QWORD *)((((unint64_t)v883 + v1325) & v887) + 0x60) = v893[11];
          v897 = v893[12];
          *(_BYTE *)((((unint64_t)v883 + v1325) & v887) + 0x70) = *((_BYTE *)v893 + 104);
          *(_QWORD *)((((unint64_t)v883 + v1325) & v887) + 0x68) = v897;
          v898 = (void *)((unint64_t)&v890[v896] & v894);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (__swift_getEnumTagSinglePayload((uint64_t)v895, 1, v1340))
          {
            memcpy(v898, v895, v1401);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1324 + 16))(v898, v895, v1340);
            __swift_storeEnumTagSinglePayload((uint64_t)v898, 0, 1, v1340);
          }
          v888 = v1440;
          v190 = v1453;
          v899 = v1402;
          v684 = v1356;
          v685 = v1399;
LABEL_849:
          v900 = (unint64_t)&v890[v1417 + v899];
          v901 = (void *)(v900 & v1458);
          v902 = (unint64_t)v891 + v1417 + v899;
          v903 = (const void *)(v902 & v1458);
          if (v1328 < 0x7FFFFFFF)
          {
            if (*(_QWORD *)((((unint64_t)v903 + v1406) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
              goto LABEL_851;
          }
          else if (__swift_getEnumTagSinglePayload(v902 & v1458, v685, v684) >= 2)
          {
LABEL_851:
            memcpy(v901, v903, v1326);
            v904 = v1326;
            goto LABEL_861;
          }
          if (__swift_getEnumTagSinglePayload((uint64_t)v903, 1, v684))
          {
            memcpy(v901, v903, v888);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v901, v903, v684);
            __swift_storeEnumTagSinglePayload((uint64_t)v901, 0, 1, v684);
          }
          v905 = ((unint64_t)v901 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v906 = ((unint64_t)v903 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v907 = *(_QWORD *)(v906 + 24);
          *(_QWORD *)(v905 + 24) = v907;
          *(_QWORD *)(v905 + 32) = *(_QWORD *)(v906 + 32);
          (**(void (***)(unint64_t, unint64_t))(v907 - 8))(v905, v906);
          v908 = (v905 + 47) & 0xFFFFFFFFFFFFFFF8;
          v909 = (v906 + 47) & 0xFFFFFFFFFFFFFFF8;
          v910 = *(_QWORD *)(v909 + 24);
          if (v910 < 0xFFFFFFFF)
          {
            v911 = *(_OWORD *)v909;
            v912 = *(_OWORD *)(v909 + 16);
            *(_QWORD *)(v908 + 32) = *(_QWORD *)(v909 + 32);
            *(_OWORD *)v908 = v911;
            *(_OWORD *)(v908 + 16) = v912;
          }
          else
          {
            *(_QWORD *)(v908 + 24) = v910;
            *(_QWORD *)(v908 + 32) = *(_QWORD *)(v909 + 32);
            (**(void (***)(unint64_t, unint64_t))(v910 - 8))(v908, (v906 + 47) & 0xFFFFFFFFFFFFFFF8);
          }
          v913 = (_QWORD *)((v908 + 47) & 0xFFFFFFFFFFFFFFF8);
          v914 = (_QWORD *)((v909 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v913 = *v914;
          v913[1] = v914[1];
          sub_21D7C4C20();
          v904 = v1326;
          if ((_DWORD)v685)
            v904 = ((((((v1353 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                 + 16;
LABEL_861:
          v915 = (v900 | v1419) + v904;
          v916 = (void *)(v915 & v1458);
          v917 = (v902 | v1419) + v904;
          v918 = (const void *)(v917 & v1458);
          if (v1328 < 0x7FFFFFFF)
          {
            if (*(_QWORD *)((((unint64_t)v918 + v1406) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
              goto LABEL_863;
          }
          else if (__swift_getEnumTagSinglePayload(v917 & v1458, v685, v684) >= 2)
          {
LABEL_863:
            memcpy(v916, v918, v1326);
            v919 = v1326;
            goto LABEL_873;
          }
          if (__swift_getEnumTagSinglePayload((uint64_t)v918, 1, v684))
          {
            memcpy(v916, v918, v888);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v916, v918, v684);
            __swift_storeEnumTagSinglePayload((uint64_t)v916, 0, 1, v684);
          }
          v920 = ((unint64_t)v916 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v921 = ((unint64_t)v918 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v922 = *(_QWORD *)(v921 + 24);
          *(_QWORD *)(v920 + 24) = v922;
          *(_QWORD *)(v920 + 32) = *(_QWORD *)(v921 + 32);
          (**(void (***)(unint64_t, unint64_t))(v922 - 8))(v920, v921);
          v923 = (v920 + 47) & 0xFFFFFFFFFFFFFFF8;
          v924 = (v921 + 47) & 0xFFFFFFFFFFFFFFF8;
          v925 = *(_QWORD *)(v924 + 24);
          if (v925 < 0xFFFFFFFF)
          {
            v926 = *(_OWORD *)v924;
            v927 = *(_OWORD *)(v924 + 16);
            *(_QWORD *)(v923 + 32) = *(_QWORD *)(v924 + 32);
            *(_OWORD *)v923 = v926;
            *(_OWORD *)(v923 + 16) = v927;
          }
          else
          {
            *(_QWORD *)(v923 + 24) = v925;
            *(_QWORD *)(v923 + 32) = *(_QWORD *)(v924 + 32);
            (**(void (***)(unint64_t, unint64_t))(v925 - 8))(v923, v924);
          }
          v928 = (_QWORD *)((v923 + 47) & 0xFFFFFFFFFFFFFFF8);
          v929 = (_QWORD *)((v924 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v928 = *v929;
          v928[1] = v929[1];
          sub_21D7C4C20();
          v919 = v1326;
          if ((_DWORD)v685)
            v919 = ((((((v1353 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                 + 16;
LABEL_873:
          v930 = (char *)(((v915 | v1419) + v919) & v1458);
          v931 = (char *)(((v917 | v1419) + v919) & v1458);
          if (v1328 < 0x7FFFFFFF)
          {
            v932 = v684;
            v934 = a1;
            v205 = v1426;
            if (*(_QWORD *)(((unint64_t)&v931[v1406] & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
            {
LABEL_875:
              memcpy(v930, v931, v1326);
              v935 = v1434;
              v936 = v1320;
              v937 = v1353 + 1;
              if (!(_DWORD)v685)
                goto LABEL_887;
              goto LABEL_886;
            }
          }
          else
          {
            v932 = v684;
            v933 = __swift_getEnumTagSinglePayload((uint64_t)v931, v685, v684);
            v934 = a1;
            v205 = v1426;
            if (v933 >= 2)
              goto LABEL_875;
          }
          if (__swift_getEnumTagSinglePayload((uint64_t)v931, 1, v932))
          {
            memcpy(v930, v931, v888);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v1343 + 16))(v930, v931, v932);
            __swift_storeEnumTagSinglePayload((uint64_t)v930, 0, 1, v932);
          }
          v938 = (unint64_t)&v930[v1406] & 0xFFFFFFFFFFFFFFF8;
          v939 = (unint64_t)&v931[v1406] & 0xFFFFFFFFFFFFFFF8;
          v940 = *(_QWORD *)(v939 + 24);
          *(_QWORD *)(v938 + 24) = v940;
          *(_QWORD *)(v938 + 32) = *(_QWORD *)(v939 + 32);
          (**(void (***)(unint64_t, unint64_t))(v940 - 8))(v938, v939);
          v941 = (v938 + 47) & 0xFFFFFFFFFFFFFFF8;
          v942 = (v939 + 47) & 0xFFFFFFFFFFFFFFF8;
          v943 = *(_QWORD *)(v942 + 24);
          v935 = v1434;
          v936 = v1320;
          if (v943 < 0xFFFFFFFF)
          {
            v944 = *(_OWORD *)v942;
            v945 = *(_OWORD *)(v942 + 16);
            *(_QWORD *)(v941 + 32) = *(_QWORD *)(v942 + 32);
            *(_OWORD *)v941 = v944;
            *(_OWORD *)(v941 + 16) = v945;
          }
          else
          {
            *(_QWORD *)(v941 + 24) = v943;
            *(_QWORD *)(v941 + 32) = *(_QWORD *)(v942 + 32);
            (**(void (***)(unint64_t, unint64_t))(v943 - 8))(v941, v942);
          }
          v946 = (_QWORD *)((v941 + 47) & 0xFFFFFFFFFFFFFFF8);
          v947 = (_QWORD *)((v942 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v946 = *v947;
          v946[1] = v947[1];
          sub_21D7C4C20();
          v934 = a1;
          v205 = v1426;
          v937 = v1353 + 1;
          if (!(_DWORD)v685)
            goto LABEL_887;
          v1326 = ((((((v1353 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                + 16;
LABEL_886:
          v937 = v1353;
LABEL_887:
          *(_QWORD *)&v930[v1326] = *(_QWORD *)&v931[v1326];
          v948 = v1391
               + ((v1317
                 + ((v1317
                   + ((v1390
                     + ((v1325
                       + ((v1379
                         + ((v1398
                           + ((((((v1322
                                 + ((((((((v937 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                   + 15) & 0xFFFFFFFFFFFFFFF8)) & v1400)
                               + v1436) & 0xFFFFFFFFFFFFFFF8)
                             + 23) & 0xFFFFFFFFFFFFFFF8)) & v1387)) & v1429)) & v1371)) & v1458)) & v1458)) & v1458);
          if (v1319 > v948)
            v948 = v1402 + ((v1416 + 8) & ~v1418);
          if (v948 <= v1318)
            v948 = v1318;
          if (v948 <= v936)
            v948 = v936;
          if (v948 <= v1316)
            v948 = v1316;
          if (v948 <= v1315)
            v948 = v1315;
          if (v948 <= v1312)
            v948 = v1312;
          if (v948 <= v1313)
            v948 = (((((v1434 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
          if (v948 <= v1314)
            v948 = v1314;
          if (v948 <= v1311)
            v948 = v1311;
          if (v948 <= v1310)
            v948 = v1310;
          if (v948 <= v1308)
            v948 = v1308;
          if (v948 <= v1369)
            v948 = v1369;
          if (v948 <= v1307)
            v948 = v1307;
          if (v948 <= v1395)
            v948 = v1395;
          if (v948 <= v1309)
            v948 = v1309;
          if (v948 <= v1319)
            v948 = v1402 + ((v1416 + 8) & ~v1418);
          if (v948 <= v1306)
            v948 = v1306;
          if (v948 <= v1373)
            v948 = ((v1434 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
          if (v948 <= v1274)
            v948 = v1274;
          if (v948 <= v1276)
            v948 = v1276;
          if (v948 <= v1275)
            v948 = v1275;
          if (v948 <= v1278)
            v948 = v1278;
          if (v948 <= v79)
            v948 = v79;
          if (v948 <= v1277)
            v948 = v1277;
          if (v948 <= v1279)
            v948 = v1279;
          if (v948 <= v1393)
            v948 = v1393;
          if (v948 <= v1281)
            v948 = v1281;
          if (v948 <= v1348)
            v948 = v1348;
          if (v948 <= v1360)
            v948 = v1360;
          if (v948 <= v935)
            v948 = v935;
          if (v948 <= v1282)
            v948 = v1282;
          if (v948 <= v1283)
            v948 = v1283;
          if (v948 <= v1280)
            v948 = v1280;
          if (v948 <= 8)
            v948 = 8;
          v199 = v189;
          *((_BYTE *)v189 + v948) = 0;
LABEL_1189:
          v254 = v1424;
          v97 = v934;
LABEL_1362:
          v1226 = (_QWORD *)((unint64_t)&v199[v254] & 0xFFFFFFFFFFFFFFF8);
          v1227 = *(_QWORD *)(((unint64_t)v190 + v254) & 0xFFFFFFFFFFFFF8);
          LODWORD(v1228) = -1;
          if (v1227 < 0xFFFFFFFF)
            v1228 = *(_QWORD *)(((unint64_t)v190 + v254) & 0xFFFFFFFFFFFFF8);
          if ((int)v1228 - 1 < 0)
            v1227 = sub_21D7C4C20();
          *v1226 = v1227;
          *((_BYTE *)v97 + v205) = 1;
          return v97;
        case 1:
          *v189 = *v190;
          v1408 = v189;
          v194 = ((unint64_t)v189 + v1418 + 8) & v1371;
          v195 = ((unint64_t)v190 + v1418 + 8) & v1371;
          *(_BYTE *)v194 = *(_BYTE *)v195;
          *(_QWORD *)(v194 + 8) = *(_QWORD *)(v195 + 8);
          *(_QWORD *)(v194 + 16) = *(_QWORD *)(v195 + 0x10);
          *(_QWORD *)(v194 + 24) = *(_QWORD *)(v195 + 0x18);
          *(_QWORD *)(v194 + 32) = *(_QWORD *)(v195 + 0x20);
          *(_QWORD *)(v194 + 40) = *(_QWORD *)(v195 + 0x28);
          *(_QWORD *)(v194 + 48) = *(_QWORD *)(v195 + 0x30);
          *(_QWORD *)(v194 + 56) = *(_QWORD *)(v195 + 0x38);
          *(_QWORD *)(v194 + 64) = *(_QWORD *)(v195 + 0x40);
          *(_QWORD *)(v194 + 72) = *(_QWORD *)(v195 + 0x48);
          *(_QWORD *)(v194 + 80) = *(_QWORD *)(v195 + 0x50);
          *(_QWORD *)(v194 + 88) = *(_QWORD *)(v195 + 0x58);
          *(_QWORD *)(v194 + 96) = *(_QWORD *)(v195 + 0x60);
          v196 = *(_QWORD *)(v195 + 0x68);
          *(_BYTE *)(v194 + 112) = *(_BYTE *)(v195 + 0x70);
          *(_QWORD *)(v194 + 104) = v196;
          v197 = (void *)((v1339 + v194) & v1383);
          v198 = (const void *)((v1339 + v195) & v1383);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (__swift_getEnumTagSinglePayload((uint64_t)v198, 1, v1340))
          {
            memcpy(v197, v198, v1401);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1324 + 16))(v197, v198, v1340);
            __swift_storeEnumTagSinglePayload((uint64_t)v197, 0, 1, v1340);
          }
          v97 = a1;
          v205 = v1426;
          v271 = v1284;
          v272 = 1;
          goto LABEL_410;
        case 2:
          v199 = v189;
          *v189 = *v190;
          v200 = 2;
          goto LABEL_289;
        case 3:
          v1430 = ~v1381;
          v199 = v189;
          if (__swift_getEnumTagSinglePayload((uint64_t)v190, 1, v1356))
          {
            memcpy(v189, v190, v1440);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1343 + 16))(v189, v190, v1356);
            __swift_storeEnumTagSinglePayload((uint64_t)v189, 0, 1, v1356);
          }
          v273 = v1354;
          v274 = v1405;
          v275 = (unint64_t)&v199[v1406] & 0xFFFFFFFFFFFFFFF8;
          v276 = ((unint64_t)v190 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v277 = *(_QWORD *)(v276 + 24);
          *(_QWORD *)(v275 + 24) = v277;
          *(_QWORD *)(v275 + 32) = *(_QWORD *)(v276 + 32);
          (**(void (***)(unint64_t, unint64_t))(v277 - 8))(v275, v276);
          v278 = (_QWORD *)((v275 + 47) & 0xFFFFFFFFFFFFFFF8);
          v279 = (_QWORD *)((v276 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v278 = *v279;
          v278[1] = v279[1];
          v280 = (void *)(((unint64_t)v278 + v1398) & v1387);
          v281 = (_BYTE *)(((unint64_t)v279 + v1398) & v1387);
          sub_21D7C4C20();
          if (v1405)
          {
            v282 = v1338;
            if (v1333 >= v1338)
            {
              v283 = (uint64_t)v281;
              v282 = v1333;
              v284 = v1336;
            }
            else
            {
              v283 = (unint64_t)&v281[v1337] & v1385;
              v284 = v1341;
            }
            v654 = __swift_getEnumTagSinglePayload(v283, v282, v284);
          }
          else
          {
            if (!v281[v1354])
              goto LABEL_766;
            v603 = (v281[v1354] - 1) << v1364;
            if (v1354 > 3)
              v603 = 0;
            if ((_DWORD)v1354)
            {
              if (v1354 <= 3)
                v604 = v1354;
              else
                v604 = 4;
              __asm { BR              X11 }
            }
            v654 = v603 + 1;
          }
          if (v654)
          {
            memcpy(v280, v281, v1404);
            goto LABEL_768;
          }
LABEL_766:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1330 + 16))(v280, v281, v1336);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1331 + 16))(((unint64_t)v280 + v1337) & v1385, (unint64_t)&v281[v1337] & v1385, v1341);
          if (!v1405)
            *((_BYTE *)v280 + v1354) = 0;
LABEL_768:
          *((_BYTE *)v280 + v1404) = v281[v1404];
          v846 = ((unint64_t)v280 + v1404 + v1352 + 1) & v193;
          v847 = (unint64_t)&v281[v1404 + 1 + v1352] & v193;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v1298 + 16))(v846, v847, v1299);
          v848 = (v1297 + v846) & 0xFFFFFFFFFFFFFFF8;
          v849 = (v1297 + v847) & 0xFFFFFFFFFFFFFFF8;
          v850 = *(_QWORD *)(v849 + 24);
          if (v850 < 0xFFFFFFFF)
          {
            v851 = *(_OWORD *)v849;
            v852 = *(_OWORD *)(v849 + 16);
            *(_QWORD *)(v848 + 32) = *(_QWORD *)(v849 + 32);
            *(_OWORD *)v848 = v851;
            *(_OWORD *)(v848 + 16) = v852;
          }
          else
          {
            *(_QWORD *)(v848 + 24) = v850;
            *(_QWORD *)(v848 + 32) = *(_QWORD *)(v849 + 32);
            (**(void (***)(unint64_t, unint64_t))(v850 - 8))(v848, v849);
          }
          v853 = (_QWORD *)((v1439 + v848) & v1371);
          v854 = (_QWORD *)((v1439 + v849) & v1371);
          if (v1335 >= 0x7FFFFFFF)
          {
            v860 = (const void *)(((unint64_t)v854 + v1339) & v1383);
            v856 = v1379;
            if (__swift_getEnumTagSinglePayload((uint64_t)v860, v1327, v1340) <= 1)
            {
              v1452 = v190;
              v1415 = v199;
              v857 = (char *)(v854 + 1);
              v858 = v1339;
              v859 = ~v1416;
              goto LABEL_778;
            }
          }
          else
          {
            v855 = *(_QWORD *)(((v1439 + v849) & v1371) + 0x10);
            if (v855 >= 0xFFFFFFFF)
              LODWORD(v855) = -1;
            v856 = v1379;
            if ((int)v855 - 1 < 0)
            {
              v1452 = v190;
              v1415 = v199;
              v857 = (char *)(v854 + 1);
              v858 = v1339;
              v859 = ~v1416;
              v860 = (const void *)(((unint64_t)v854 + v1339) & v1383);
LABEL_778:
              *(_BYTE *)v853 = *(_BYTE *)v854;
              v853[1] = v854[1];
              v853[2] = *((_QWORD *)v857 + 1);
              v853[3] = *((_QWORD *)v857 + 2);
              v853[4] = *((_QWORD *)v857 + 3);
              v853[5] = *((_QWORD *)v857 + 4);
              v853[6] = *((_QWORD *)v857 + 5);
              v853[7] = *((_QWORD *)v857 + 6);
              v853[8] = *((_QWORD *)v857 + 7);
              v853[9] = *((_QWORD *)v857 + 8);
              v853[10] = *((_QWORD *)v857 + 9);
              v853[11] = *((_QWORD *)v857 + 10);
              v853[12] = *((_QWORD *)v857 + 11);
              v861 = *((_QWORD *)v857 + 12);
              *((_BYTE *)v853 + 112) = v857[104];
              v853[13] = v861;
              v862 = (void *)(((unint64_t)v853 + v858) & v859);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              if (__swift_getEnumTagSinglePayload((uint64_t)v860, 1, v1340))
              {
                memcpy(v862, v860, v1401);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1324 + 16))(v862, v860, v1340);
                __swift_storeEnumTagSinglePayload((uint64_t)v862, 0, 1, v1340);
              }
              v199 = v1415;
              v190 = v1452;
              v188 = v1284;
              v863 = v1402;
              v273 = v1354;
              v274 = v1405;
LABEL_783:
              v864 = (void *)(((unint64_t)v853 + v1457 + v863) & v1387);
              v865 = (_BYTE *)(((unint64_t)v854 + v1457 + v863) & v1387);
              v205 = v1426;
              if (v274)
              {
                v866 = v1338;
                if (v1333 >= v1338)
                {
                  v867 = (uint64_t)v865;
                  v866 = v1333;
                  v868 = v1336;
                }
                else
                {
                  v867 = (unint64_t)&v865[v1337] & v1385;
                  v868 = v1341;
                }
                v871 = __swift_getEnumTagSinglePayload(v867, v866, v868);
              }
              else
              {
                if (!v865[v273])
                  goto LABEL_968;
                v869 = (v865[v273] - 1) << v1364;
                if (v273 > 3)
                  v869 = 0;
                if ((_DWORD)v273)
                {
                  if (v273 <= 3)
                    v870 = v273;
                  else
                    v870 = 4;
                  __asm { BR              X11 }
                }
                v871 = v869 + 1;
              }
              if (v871)
              {
                memcpy(v864, v865, v1404);
LABEL_970:
                v956 = (_QWORD *)(((unint64_t)v864 + v856) & v1430);
                v957 = (uint64_t *)((unint64_t)&v865[v856] & v1430);
                if ((v1338 & 0x80000000) != 0)
                {
                  v959 = __swift_getEnumTagSinglePayload(((unint64_t)v957 + v1323) & v1385, v1338, v1341);
                }
                else
                {
                  v958 = *v957;
                  if ((unint64_t)*v957 >= 0xFFFFFFFF)
                    LODWORD(v958) = -1;
                  v959 = v958 + 1;
                }
                v97 = a1;
                if (v959)
                {
                  memcpy(v956, v957, v1397);
                }
                else
                {
                  *v956 = *v957;
                  v960 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1331 + 16);
                  sub_21D7C4C20();
                  v960(((unint64_t)v956 + v1323) & v1385, ((unint64_t)v957 + v1323) & v1385, v1341);
                  v205 = v1426;
                }
                v526 = 3;
                goto LABEL_1360;
              }
LABEL_968:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1330 + 16))(v864, v865, v1336);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1331 + 16))(((unint64_t)v864 + v1337) & v1385, (unint64_t)&v865[v1337] & v1385, v1341);
              if (!v274)
                *((_BYTE *)v864 + v273) = 0;
              goto LABEL_970;
            }
          }
          v863 = v1402;
          memcpy(v853, v854, v1402);
          goto LABEL_783;
        case 4:
          if (__swift_getEnumTagSinglePayload((uint64_t)v190, 1, v1356))
          {
            memcpy(v189, v190, v1440);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1343 + 16))(v189, v190, v1356);
            __swift_storeEnumTagSinglePayload((uint64_t)v189, 0, 1, v1356);
          }
          v1410 = v189;
          v285 = ((unint64_t)v189 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v286 = ((unint64_t)v190 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v287 = *(_QWORD *)(v286 + 24);
          *(_QWORD *)(v285 + 24) = v287;
          *(_QWORD *)(v285 + 32) = *(_QWORD *)(v286 + 32);
          (**(void (***)(unint64_t, unint64_t))(v287 - 8))(v285, v286);
          v288 = (_QWORD *)((v285 + 47) & 0xFFFFFFFFFFFFFFF8);
          v289 = (_QWORD *)((v286 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v288 = *v289;
          v288[1] = v289[1];
          v290 = (_QWORD *)(((unint64_t)v288 + 23) & 0xFFFFFFFFFFFFFFF8);
          v291 = (_QWORD *)(((unint64_t)v289 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v290 = *v291;
          v290[1] = v291[1];
          v292 = ((unint64_t)v290 + 23) & 0xFFFFFFFFFFFFFFF8;
          v293 = ((unint64_t)v291 + 23) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v292 = *(_QWORD *)v293;
          *(_QWORD *)(v292 + 8) = *(_QWORD *)(v293 + 8);
          *(_BYTE *)(v292 + 16) = *(_BYTE *)(v293 + 16);
          v294 = ((unint64_t)v290 + 47) & 0xFFFFFFFFFFFFFFF8;
          v295 = ((unint64_t)v291 + 47) & 0xFFFFFFFFFFFFFFF8;
          v296 = *(_QWORD *)(v295 + 24);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v296 < 0xFFFFFFFF)
          {
            v297 = *(_OWORD *)v295;
            v298 = *(_OWORD *)(v295 + 16);
            *(_QWORD *)(v294 + 32) = *(_QWORD *)(v295 + 32);
            *(_OWORD *)v294 = v297;
            *(_OWORD *)(v294 + 16) = v298;
          }
          else
          {
            *(_QWORD *)(v294 + 24) = v296;
            *(_QWORD *)(v294 + 32) = *(_QWORD *)(v295 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v296 - 8))(v294, v295, v296);
          }
          v299 = v1354;
          v300 = v1405;
          *(_BYTE *)(v294 + 40) = *(_BYTE *)(v295 + 40);
          v301 = (_QWORD *)((v1303 + v294) & v1371);
          v302 = (_QWORD *)((v1303 + v295) & v1371);
          v303 = a1;
          v199 = v1410;
          if (v1335 >= 0x7FFFFFFF)
          {
            v310 = (const void *)(((unint64_t)v302 + v1339) & v1383);
            v305 = v1338;
            if (__swift_getEnumTagSinglePayload((uint64_t)v310, v1327, v1340) <= 1)
            {
              v1444 = v190;
              v306 = v1410;
              v307 = (char *)(v302 + 1);
              v308 = v1339;
              v309 = ~v1416;
              goto LABEL_317;
            }
          }
          else
          {
            v304 = *(_QWORD *)(((v1303 + v295) & v1371) + 0x10);
            if (v304 >= 0xFFFFFFFF)
              LODWORD(v304) = -1;
            v305 = v1338;
            if ((int)v304 - 1 < 0)
            {
              v1444 = v190;
              v306 = v1410;
              v307 = (char *)(v302 + 1);
              v308 = v1339;
              v309 = ~v1416;
              v310 = (const void *)(((unint64_t)v302 + v1339) & v1383);
LABEL_317:
              *(_BYTE *)v301 = *(_BYTE *)v302;
              v301[1] = v302[1];
              v301[2] = *((_QWORD *)v307 + 1);
              v301[3] = *((_QWORD *)v307 + 2);
              v301[4] = *((_QWORD *)v307 + 3);
              v301[5] = *((_QWORD *)v307 + 4);
              v301[6] = *((_QWORD *)v307 + 5);
              v301[7] = *((_QWORD *)v307 + 6);
              v301[8] = *((_QWORD *)v307 + 7);
              v301[9] = *((_QWORD *)v307 + 8);
              v301[10] = *((_QWORD *)v307 + 9);
              v301[11] = *((_QWORD *)v307 + 10);
              v301[12] = *((_QWORD *)v307 + 11);
              v311 = *((_QWORD *)v307 + 12);
              *((_BYTE *)v301 + 112) = v307[104];
              v301[13] = v311;
              v312 = (void *)(((unint64_t)v301 + v308) & v309);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              if (__swift_getEnumTagSinglePayload((uint64_t)v310, 1, v1340))
              {
                memcpy(v312, v310, v1401);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1324 + 16))(v312, v310, v1340);
                __swift_storeEnumTagSinglePayload((uint64_t)v312, 0, 1, v1340);
              }
              v303 = a1;
              v199 = v306;
              v190 = v1444;
              v188 = v1284;
              v313 = v1402;
              v299 = v1354;
              v300 = v1405;
              v305 = v1338;
LABEL_634:
              v739 = (void *)(((unint64_t)v301 + v1457 + v313) & v1387);
              v740 = (unint64_t)v302 + v1457 + v313;
              v741 = (_BYTE *)(v740 & v1387);
              v205 = v1426;
              if (v300)
              {
                v742 = v1333;
                if (v1333 >= v305)
                {
                  v743 = v740 & v1387;
                  v744 = v1336;
                }
                else
                {
                  v743 = (unint64_t)&v741[v1337] & v1385;
                  v742 = v305;
                  v744 = v1341;
                }
                v747 = __swift_getEnumTagSinglePayload(v743, v742, v744);
                v97 = v303;
              }
              else
              {
                v97 = v303;
                if (!v741[v299])
                  goto LABEL_958;
                v745 = (v741[v299] - 1) << v1364;
                if (v299 > 3)
                  v745 = 0;
                if ((_DWORD)v299)
                {
                  if (v299 <= 3)
                    v746 = v299;
                  else
                    v746 = 4;
                  __asm { BR              X11 }
                }
                v747 = v745 + 1;
              }
              if (v747)
              {
                memcpy(v739, v741, v1404);
LABEL_960:
                v949 = ((unint64_t)v739 + v1377) & 0xFFFFFFFFFFFFFFF8;
                v950 = (unint64_t)&v741[v1377] & 0xFFFFFFFFFFFFFFF8;
                v951 = *(_QWORD *)(v950 + 24);
                if (v951 < 0xFFFFFFFF)
                {
                  v952 = *(_OWORD *)v950;
                  v953 = *(_OWORD *)(v950 + 16);
                  *(_QWORD *)(v949 + 32) = *(_QWORD *)(v950 + 32);
                  *(_OWORD *)v949 = v952;
                  *(_OWORD *)(v949 + 16) = v953;
                }
                else
                {
                  *(_QWORD *)(v949 + 24) = v951;
                  *(_QWORD *)(v949 + 32) = *(_QWORD *)(v950 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v951 - 8))(v949, v950);
                }
                v954 = (_QWORD *)((v949 + 47) & 0xFFFFFFFFFFFFFFF8);
                v955 = (_QWORD *)((v950 + 47) & 0xFFFFFFFFFFFFFFF8);
                *v954 = *v955;
                v954[1] = v955[1];
                v442 = 4;
LABEL_964:
                v199[v188] = v442;
LABEL_965:
                sub_21D7C4C20();
                goto LABEL_1361;
              }
LABEL_958:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1330 + 16))(v739, v741, v1336);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1331 + 16))(((unint64_t)v739 + v1337) & v1385, (unint64_t)&v741[v1337] & v1385, v1341);
              if (!v300)
                *((_BYTE *)v739 + v299) = 0;
              goto LABEL_960;
            }
          }
          v313 = v1402;
          memcpy(v301, v302, v1402);
          goto LABEL_634;
        case 5:
          if (__swift_getEnumTagSinglePayload((uint64_t)v190, 1, v1356))
          {
            memcpy(v189, v190, v1440);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1343 + 16))(v189, v190, v1356);
            __swift_storeEnumTagSinglePayload((uint64_t)v189, 0, 1, v1356);
          }
          v314 = ((unint64_t)v189 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v315 = ((unint64_t)v190 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v316 = *(_QWORD *)(v315 + 24);
          *(_QWORD *)(v314 + 24) = v316;
          *(_QWORD *)(v314 + 32) = *(_QWORD *)(v315 + 32);
          (**(void (***)(unint64_t, unint64_t))(v316 - 8))(v314, v315);
          v317 = (void *)((v1357 + 40 + v314) & v1428);
          v318 = (const void *)((v1357 + 40 + v315) & v1428);
          if (v1328 == v1305)
          {
            v319 = v1340;
            if (v1399 >= 2
              && __swift_getEnumTagSinglePayload((v1357 + 40 + v315) & v1428, v1399, v1356) >= 2)
            {
              goto LABEL_1270;
            }
            goto LABEL_685;
          }
          v320 = ((unint64_t)v318 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v319 = v1340;
          if (v1305 == 0x7FFFFFFF)
          {
            if (*(_QWORD *)(v320 + 24) >= 0xFFFFFFFFuLL)
              goto LABEL_685;
          }
          else
          {
            v661 = (v1418
                  + ((((((v320 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                  + 65) & v1371;
            if (v1287 != v1305)
            {
              if (v1405 >= 2)
              {
                v756 = (v1285 + v661) & v1387;
                v757 = v1338;
                if (v1333 >= v1338)
                {
                  v757 = v1333;
                  v758 = v1336;
                }
                else
                {
                  v756 = (v1337 + v756) & v1385;
                  v758 = v1341;
                }
                v188 = v1284;
                v319 = v1340;
                v167 = v1422;
                if (__swift_getEnumTagSinglePayload(v756, v757, v758) >= 2)
                  goto LABEL_1270;
              }
              goto LABEL_685;
            }
            if (v1335 > 0x7FFFFFFE)
            {
              v762 = __swift_getEnumTagSinglePayload((v1339 + v661) & v1383, v1327, v1340);
              if (v762 < 2)
                goto LABEL_685;
              v664 = v762 - 1;
            }
            else
            {
              v662 = *(_QWORD *)(v661 + 16);
              if (v662 >= 0xFFFFFFFF)
                LODWORD(v662) = -1;
              v663 = v662 - 1;
              if (v663 < 0)
                v663 = -1;
              v664 = v663 + 1;
            }
            if (v664 < 2)
            {
LABEL_685:
              v763 = v319;
              v764 = v189;
              if (__swift_getEnumTagSinglePayload((uint64_t)v318, 1, v1356))
              {
                memcpy(v317, v318, v1440);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v317, v318, v1356);
                __swift_storeEnumTagSinglePayload((uint64_t)v317, 0, 1, v1356);
              }
              v765 = v318;
              v766 = ((unint64_t)v317 + v1406) & 0xFFFFFFFFFFFFFFF8;
              v1437 = v765;
              v767 = ((unint64_t)v765 + v1406) & 0xFFFFFFFFFFFFFFF8;
              v768 = *(_QWORD *)(v767 + 24);
              *(_QWORD *)(v766 + 24) = v768;
              *(_QWORD *)(v766 + 32) = *(_QWORD *)(v767 + 32);
              (**(void (***)(unint64_t, unint64_t))(v768 - 8))(v766, v767);
              v769 = (_QWORD *)((v766 + 47) & 0xFFFFFFFFFFFFFFF8);
              v770 = (_QWORD *)((v767 + 47) & 0xFFFFFFFFFFFFFFF8);
              *v769 = *v770;
              v769[1] = v770[1];
              v771 = (_QWORD *)(((unint64_t)v769 + 23) & 0xFFFFFFFFFFFFFFF8);
              v772 = (_QWORD *)(((unint64_t)v770 + 23) & 0xFFFFFFFFFFFFFFF8);
              *v771 = *v772;
              v771[1] = v772[1];
              v773 = ((unint64_t)v771 + 23) & 0xFFFFFFFFFFFFFFF8;
              v774 = ((unint64_t)v772 + 23) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)v773 = *(_QWORD *)v774;
              *(_QWORD *)(v773 + 8) = *(_QWORD *)(v774 + 8);
              *(_BYTE *)(v773 + 16) = *(_BYTE *)(v774 + 16);
              v775 = ((unint64_t)v771 + 47) & 0xFFFFFFFFFFFFFFF8;
              v776 = ((unint64_t)v772 + 47) & 0xFFFFFFFFFFFFFFF8;
              v777 = *(_QWORD *)(v776 + 24);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              if (v777 < 0xFFFFFFFF)
              {
                v778 = *(_OWORD *)v776;
                v779 = *(_OWORD *)(v776 + 16);
                *(_QWORD *)(v775 + 32) = *(_QWORD *)(v776 + 32);
                *(_OWORD *)v775 = v778;
                *(_OWORD *)(v775 + 16) = v779;
              }
              else
              {
                *(_QWORD *)(v775 + 24) = v777;
                *(_QWORD *)(v775 + 32) = *(_QWORD *)(v776 + 32);
                (**(void (***)(unint64_t, unint64_t, unint64_t))(v777 - 8))(v775, v776, v777);
              }
              v780 = v1354;
              *(_BYTE *)(v775 + 40) = *(_BYTE *)(v776 + 40);
              v781 = (_QWORD *)((v1303 + v775) & v1371);
              v782 = (_QWORD *)((v1303 + v776) & v1371);
              if (v1335 >= 0x7FFFFFFF)
              {
                v789 = (const void *)(((unint64_t)v782 + v1339) & v1383);
                v784 = v1402;
                if (__swift_getEnumTagSinglePayload((uint64_t)v789, v1327, v763) <= 1)
                {
                  v1435 = v317;
                  v1450 = v190;
                  v785 = v764;
                  v786 = (char *)(v782 + 1);
                  v787 = v1339;
                  v788 = ~v1416;
                  goto LABEL_698;
                }
              }
              else
              {
                v783 = *(_QWORD *)(((v1303 + v776) & v1371) + 0x10);
                if (v783 >= 0xFFFFFFFF)
                  LODWORD(v783) = -1;
                v784 = v1402;
                if ((int)v783 - 1 < 0)
                {
                  v1435 = v317;
                  v1450 = v190;
                  v785 = v764;
                  v786 = (char *)(v782 + 1);
                  v787 = v1339;
                  v788 = ~v1416;
                  v789 = (const void *)(((unint64_t)v782 + v1339) & v1383);
LABEL_698:
                  *(_BYTE *)v781 = *(_BYTE *)v782;
                  v781[1] = v782[1];
                  v781[2] = *((_QWORD *)v786 + 1);
                  v781[3] = *((_QWORD *)v786 + 2);
                  v781[4] = *((_QWORD *)v786 + 3);
                  v781[5] = *((_QWORD *)v786 + 4);
                  v781[6] = *((_QWORD *)v786 + 5);
                  v781[7] = *((_QWORD *)v786 + 6);
                  v781[8] = *((_QWORD *)v786 + 7);
                  v781[9] = *((_QWORD *)v786 + 8);
                  v781[10] = *((_QWORD *)v786 + 9);
                  v781[11] = *((_QWORD *)v786 + 10);
                  v781[12] = *((_QWORD *)v786 + 11);
                  v790 = *((_QWORD *)v786 + 12);
                  *((_BYTE *)v781 + 112) = v786[104];
                  v781[13] = v790;
                  v791 = (void *)(((unint64_t)v781 + v787) & v788);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (__swift_getEnumTagSinglePayload((uint64_t)v789, 1, v1340))
                  {
                    memcpy(v791, v789, v1401);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1324 + 16))(v791, v789, v1340);
                    __swift_storeEnumTagSinglePayload((uint64_t)v791, 0, 1, v1340);
                  }
                  v764 = v785;
                  v190 = v1450;
                  v188 = v1284;
                  v784 = v1402;
                  v780 = v1354;
                  v317 = v1435;
LABEL_703:
                  v792 = (void *)(((unint64_t)v781 + v1457 + v784) & v1387);
                  v793 = (_BYTE *)(((unint64_t)v782 + v1457 + v784) & v1387);
                  if (v1405)
                  {
                    v794 = v1338;
                    if (v1333 >= v1338)
                    {
                      v795 = (uint64_t)v793;
                      v794 = v1333;
                      v796 = v1336;
                    }
                    else
                    {
                      v795 = (unint64_t)&v793[v1337] & v1385;
                      v796 = v1341;
                    }
                    v799 = __swift_getEnumTagSinglePayload(v795, v794, v796);
                  }
                  else
                  {
                    if (!v793[v780])
                      goto LABEL_1276;
                    v797 = (v793[v780] - 1) << v1364;
                    if (v780 > 3)
                      v797 = 0;
                    if ((_DWORD)v780)
                    {
                      if (v780 <= 3)
                        v798 = v780;
                      else
                        v798 = 4;
                      __asm { BR              X11 }
                    }
                    v799 = v797 + 1;
                  }
                  if (v799)
                  {
                    memcpy(v792, v793, v1404);
LABEL_1278:
                    v1124 = ((unint64_t)v792 + v1377) & 0xFFFFFFFFFFFFFFF8;
                    v1125 = (unint64_t)&v793[v1377] & 0xFFFFFFFFFFFFFFF8;
                    v1126 = *(_QWORD *)(v1125 + 24);
                    if (v1126 < 0xFFFFFFFF)
                    {
                      v1127 = *(_OWORD *)v1125;
                      v1128 = *(_OWORD *)(v1125 + 16);
                      *(_QWORD *)(v1124 + 32) = *(_QWORD *)(v1125 + 32);
                      *(_OWORD *)v1124 = v1127;
                      *(_OWORD *)(v1124 + 16) = v1128;
                    }
                    else
                    {
                      *(_QWORD *)(v1124 + 24) = v1126;
                      *(_QWORD *)(v1124 + 32) = *(_QWORD *)(v1125 + 32);
                      (**(void (***)(unint64_t, unint64_t))(v1126 - 8))(v1124, v1125);
                    }
                    v1129 = (_QWORD *)((v1124 + 47) & 0xFFFFFFFFFFFFFFF8);
                    v1130 = (_QWORD *)((v1125 + 47) & 0xFFFFFFFFFFFFFFF8);
                    *v1129 = *v1130;
                    v1129[1] = v1130[1];
                    sub_21D7C4C20();
                    v97 = a1;
                    v167 = v1422;
                    v318 = v1437;
LABEL_1282:
                    v1131 = (_BYTE *)(((unint64_t)v317 + v1302) & v1428);
                    v1132 = (unsigned __int8 *)(((unint64_t)v318 + v1302) & v1428);
                    v1133 = *v1132;
                    if (v1133 > 2)
                    {
                      v1140 = (void *)(((unint64_t)v317 + v1302) & v1428);
                      v1141 = (const void *)(((unint64_t)v318 + v1302) & v1428);
                      v1142 = v167;
                    }
                    else
                    {
                      *v1131 = v1133;
                      v1134 = (_QWORD *)((unint64_t)&v1131[v1342] & v1428);
                      v1135 = (_QWORD *)((unint64_t)&v1132[v1342] & v1428);
                      v1136 = *((unsigned __int8 *)v1135 + v1345);
                      if (v1136 <= 2)
                      {
                        v199 = v764;
                        if (v1136 != 2)
                        {
                          if (v1136 != 1)
                          {
                            *v1134 = *v1135;
                            *(_QWORD *)(((unint64_t)&v1131[v1342] & v1428) + 8) = *(_QWORD *)(((unint64_t)&v1132[v1342] & v1428) + 8);
                            *(_QWORD *)(((unint64_t)&v1131[v1342] & v1428) + 0x10) = *(_QWORD *)(((unint64_t)&v1132[v1342] & v1428) + 0x10);
                            *(_QWORD *)(((unint64_t)&v1131[v1342] & v1428) + 0x18) = *(_QWORD *)(((unint64_t)&v1132[v1342] & v1428) + 0x18);
                            *(_QWORD *)(((unint64_t)&v1131[v1342] & v1428) + 0x20) = *(_QWORD *)(((unint64_t)&v1132[v1342] & v1428) + 0x20);
                            *(_QWORD *)(((unint64_t)&v1131[v1342] & v1428) + 0x28) = *(_QWORD *)(((unint64_t)&v1132[v1342] & v1428) + 0x28);
                            *((_BYTE *)v1134 + v1345) = 0;
                            sub_21D7C4C20();
                            sub_21D7C4C20();
                            sub_21D7C4C20();
LABEL_1328:
                            v1144 = v1422 + 7;
                            v1145 = v1288;
                            v1143 = ~v1357;
                            goto LABEL_1291;
                          }
                          v1137 = *(_QWORD *)(((unint64_t)&v1132[v1342] & v1428) + 0x18);
                          *(_QWORD *)(((unint64_t)&v1131[v1342] & v1428) + 0x18) = v1137;
                          *(_QWORD *)(((unint64_t)&v1131[v1342] & v1428) + 0x20) = *(_QWORD *)(((unint64_t)&v1132[v1342] & v1428) + 0x20);
                          (**(void (***)(_QWORD *, _QWORD *))(v1137 - 8))(v1134, v1135);
                          v1138 = (void *)(((unint64_t)v1134 + v1403) & v1367);
                          v1139 = (const void *)(((unint64_t)v1135 + v1403) & v1367);
                          if (__swift_getEnumTagSinglePayload((uint64_t)v1139, 1, v1356))
                          {
                            memcpy(v1138, v1139, v1440);
                          }
                          else
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v1138, v1139, v1356);
                            __swift_storeEnumTagSinglePayload((uint64_t)v1138, 0, 1, v1356);
                          }
                          v1165 = (_QWORD *)(((unint64_t)v1138 + v1406) & 0xFFFFFFFFFFFFFFF8);
                          v1166 = (_QWORD *)(((unint64_t)v1139 + v1406) & 0xFFFFFFFFFFFFFFF8);
                          *v1165 = *v1166;
                          v1165[1] = v1166[1];
                          v1167 = ((unint64_t)v1165 + 23) & 0xFFFFFFFFFFFFFFF8;
                          v1168 = ((unint64_t)v1166 + 23) & 0xFFFFFFFFFFFFFFF8;
                          *(_QWORD *)v1167 = *(_QWORD *)v1168;
                          *(_BYTE *)(v1167 + 8) = *(_BYTE *)(v1168 + 8);
                          v1169 = ((unint64_t)v1165 + 39) & 0xFFFFFFFFFFFFFFF8;
                          v1170 = ((unint64_t)v1166 + 39) & 0xFFFFFFFFFFFFFFF8;
                          *(_QWORD *)v1169 = *(_QWORD *)v1170;
                          *(_BYTE *)(v1169 + 8) = *(_BYTE *)(v1170 + 8);
                          v1171 = ((unint64_t)v1165 + 55) & 0xFFFFFFFFFFFFFFF8;
                          v1172 = ((unint64_t)v1166 + 55) & 0xFFFFFFFFFFFFFFF8;
                          v1173 = *(_QWORD *)v1172;
                          *(_BYTE *)(v1171 + 8) = *(_BYTE *)(v1172 + 8);
                          *(_QWORD *)v1171 = v1173;
                          v1174 = (_QWORD *)(((unint64_t)v1165 + 71) & 0xFFFFFFFFFFFFFFF8);
                          v1175 = (_QWORD *)(((unint64_t)v1166 + 71) & 0xFFFFFFFFFFFFFFF8);
                          *v1174 = *v1175;
                          v1174[1] = v1175[1];
                          v1176 = ((unint64_t)v1174 + 23) & 0xFFFFFFFFFFFFFFF8;
                          v1177 = ((unint64_t)v1175 + 23) & 0xFFFFFFFFFFFFFFF8;
                          v1178 = *(_QWORD *)(v1177 + 24);
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          if (v1178 < 0xFFFFFFFF)
                          {
                            v1179 = *(_OWORD *)v1177;
                            v1180 = *(_OWORD *)(v1177 + 16);
                            *(_QWORD *)(v1176 + 32) = *(_QWORD *)(v1177 + 32);
                            *(_OWORD *)v1176 = v1179;
                            *(_OWORD *)(v1176 + 16) = v1180;
                          }
                          else
                          {
                            *(_QWORD *)(v1176 + 24) = v1178;
                            *(_QWORD *)(v1176 + 32) = *(_QWORD *)(v1177 + 32);
                            (**(void (***)(unint64_t, unint64_t, unint64_t))(v1178 - 8))(v1176, v1177, v1178);
                          }
                          v1181 = (_BYTE *)((v1439 + v1176) & v1371);
                          v1182 = (_QWORD *)((v1439 + v1177) & v1371);
                          if (v1335 >= 0x7FFFFFFF)
                          {
                            v1185 = ((unint64_t)v1182 + v1339) & v1383;
                            if (__swift_getEnumTagSinglePayload(v1185, v1327, v1340) <= 1)
                            {
                              v1184 = (char *)(v1182 + 1);
                              goto LABEL_1323;
                            }
                          }
                          else
                          {
                            v1183 = v1182[2];
                            if (v1183 >= 0xFFFFFFFF)
                              LODWORD(v1183) = -1;
                            if ((int)v1183 - 1 < 0)
                            {
                              v1184 = (char *)(v1182 + 1);
                              v1185 = ((unint64_t)v1182 + v1339) & v1383;
LABEL_1323:
                              *v1181 = *(_BYTE *)v1182;
                              *(_QWORD *)(((v1439 + v1176) & v1371) + 8) = v1182[1];
                              *(_QWORD *)(((v1439 + v1176) & v1371) + 0x10) = *((_QWORD *)v1184 + 1);
                              *(_QWORD *)(((v1439 + v1176) & v1371) + 0x18) = *((_QWORD *)v1184 + 2);
                              *(_QWORD *)(((v1439 + v1176) & v1371) + 0x20) = *((_QWORD *)v1184 + 3);
                              *(_QWORD *)(((v1439 + v1176) & v1371) + 0x28) = *((_QWORD *)v1184 + 4);
                              *(_QWORD *)(((v1439 + v1176) & v1371) + 0x30) = *((_QWORD *)v1184 + 5);
                              *(_QWORD *)(((v1439 + v1176) & v1371) + 0x38) = *((_QWORD *)v1184 + 6);
                              *(_QWORD *)(((v1439 + v1176) & v1371) + 0x40) = *((_QWORD *)v1184 + 7);
                              *(_QWORD *)(((v1439 + v1176) & v1371) + 0x48) = *((_QWORD *)v1184 + 8);
                              *(_QWORD *)(((v1439 + v1176) & v1371) + 0x50) = *((_QWORD *)v1184 + 9);
                              *(_QWORD *)(((v1439 + v1176) & v1371) + 0x58) = *((_QWORD *)v1184 + 10);
                              *(_QWORD *)(((v1439 + v1176) & v1371) + 0x60) = *((_QWORD *)v1184 + 11);
                              v1186 = *((_QWORD *)v1184 + 12);
                              *(_BYTE *)(((v1439 + v1176) & v1371) + 0x70) = v1184[104];
                              *(_QWORD *)(((v1439 + v1176) & v1371) + 0x68) = v1186;
                              v1187 = (unint64_t)&v1181[v1339] & v1383;
                              sub_21D7C4C20();
                              sub_21D7C4C20();
                              sub_21D7C4C20();
                              sub_21D7C4C20();
                              sub_21D7C4C20();
                              sub_21D7C4C20();
                              if (!__swift_getEnumTagSinglePayload(v1185, 1, v1340))
                              {
                                (*(void (**)(uint64_t, uint64_t, uint64_t))(v1324 + 16))(v1187, v1185, v1340);
                                __swift_storeEnumTagSinglePayload(v1187, 0, 1, v1340);
                                goto LABEL_1327;
                              }
                              v1188 = (void *)v1187;
                              v1189 = (const void *)v1185;
                              v1190 = v1401;
LABEL_1326:
                              memcpy(v1188, v1189, v1190);
LABEL_1327:
                              v97 = a1;
                              *((_BYTE *)v1134 + v1345) = 1;
                              v188 = v1284;
                              goto LABEL_1328;
                            }
                          }
                          v1188 = (void *)((v1439 + v1176) & v1371);
                          v1189 = v1182;
                          v1190 = v1402;
                          goto LABEL_1326;
                        }
                        v1162 = v190;
                        if (*(_QWORD *)(((unint64_t)&v1132[v1342] & v1428) + 8) < 0xFFFFFFFFuLL)
                        {
                          memcpy((void *)((unint64_t)&v1131[v1342] & v1428), (const void *)((unint64_t)&v1132[v1342] & v1428), 0x48uLL);
                        }
                        else
                        {
                          *v1134 = *v1135;
                          *(_QWORD *)(((unint64_t)&v1131[v1342] & v1428) + 8) = *(_QWORD *)(((unint64_t)&v1132[v1342] & v1428)
                                                                                                 + 8);
                          *(_QWORD *)(((unint64_t)&v1131[v1342] & v1428) + 0x10) = *(_QWORD *)(((unint64_t)&v1132[v1342] & v1428) + 0x10);
                          *(_QWORD *)(((unint64_t)&v1131[v1342] & v1428) + 0x18) = *(_QWORD *)(((unint64_t)&v1132[v1342] & v1428) + 0x18);
                          v1163 = *(_QWORD *)(((unint64_t)&v1132[v1342] & v1428) + 0x38);
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          if (v1163)
                          {
                            *(_QWORD *)(((unint64_t)&v1131[v1342] & v1428) + 0x38) = v1163;
                            *(_QWORD *)(((unint64_t)&v1131[v1342] & v1428) + 0x40) = *(_QWORD *)(((unint64_t)&v1132[v1342] & v1428) + 0x40);
                            (**(void (***)(uint64_t, uint64_t, uint64_t))(v1163 - 8))((uint64_t)(v1134 + 4), (uint64_t)(v1135 + 4), v1163);
                          }
                          else
                          {
                            v1230 = *(_OWORD *)(((unint64_t)&v1132[v1342] & v1428) + 0x20);
                            v1231 = *(_OWORD *)(((unint64_t)&v1132[v1342] & v1428) + 0x30);
                            *(_QWORD *)(((unint64_t)&v1131[v1342] & v1428) + 0x40) = *(_QWORD *)(((unint64_t)&v1132[v1342] & v1428) + 0x40);
                            *(_OWORD *)(((unint64_t)&v1131[v1342] & v1428) + 0x20) = v1230;
                            *(_OWORD *)(((unint64_t)&v1131[v1342] & v1428) + 0x30) = v1231;
                          }
                        }
                        v1232 = ((unint64_t)v1134 + 79) & 0xFFFFFFFFFFFFFFF8;
                        v1233 = (_QWORD *)(((unint64_t)v1135 + 79) & 0xFFFFFFFFFFFFFFF8);
                        if (v1233[1] < 0xFFFFFFFFuLL)
                        {
                          memcpy((void *)(((unint64_t)v1134 + 79) & 0xFFFFFFFFFFFFFFF8), v1233, 0x48uLL);
                        }
                        else
                        {
                          *(_QWORD *)v1232 = *v1233;
                          *(_QWORD *)(v1232 + 8) = v1233[1];
                          *(_QWORD *)(v1232 + 16) = v1233[2];
                          *(_QWORD *)(v1232 + 24) = v1233[3];
                          v1234 = v1233[7];
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          if (v1234)
                          {
                            *(_QWORD *)(v1232 + 56) = v1234;
                            *(_QWORD *)(v1232 + 64) = v1233[8];
                            (**(void (***)(uint64_t, uint64_t, uint64_t))(v1234 - 8))(v1232 + 32, (uint64_t)(v1233 + 4), v1234);
                          }
                          else
                          {
                            v1240 = *((_OWORD *)v1233 + 2);
                            v1241 = *((_OWORD *)v1233 + 3);
                            *(_QWORD *)(v1232 + 64) = v1233[8];
                            *(_OWORD *)(v1232 + 32) = v1240;
                            *(_OWORD *)(v1232 + 48) = v1241;
                          }
                        }
                        v1242 = (_QWORD *)((v1232 + 79) & 0xFFFFFFFFFFFFF8);
                        v1243 = (_QWORD *)(((unint64_t)v1233 + 79) & 0xFFFFFFFFFFFFFFF8);
                        *v1242 = *v1243;
                        v1244 = (_QWORD *)(((unint64_t)v1242 + 15) & 0xFFFFFFFFFFFFFFF8);
                        v1245 = (_QWORD *)(((unint64_t)v1243 + 15) & 0xFFFFFFFFFFFFFFF8);
                        *v1244 = *v1245;
                        v1246 = (void *)(((unint64_t)v1244 + v1375) & v1387);
                        v1247 = (_BYTE *)(((unint64_t)v1245 + v1375) & v1387);
                        sub_21D7C4C20();
                        sub_21D7C4C20();
                        if (v1405)
                        {
                          if (v1333 >= v1338)
                          {
                            v1248 = (uint64_t)v1247;
                            v1249 = v1333;
                            v1250 = v1336;
                          }
                          else
                          {
                            v1248 = (unint64_t)&v1247[v1337] & v1385;
                            v1249 = v1338;
                            v1250 = v1341;
                          }
                          v1255 = __swift_getEnumTagSinglePayload(v1248, v1249, v1250);
                          v1252 = a1;
                          v199 = v764;
                        }
                        else
                        {
                          v1251 = v1354;
                          v1252 = a1;
                          v199 = v764;
                          v190 = v1162;
                          if (!v1247[v1354])
                            goto LABEL_1413;
                          v1253 = (v1247[v1354] - 1) << v1364;
                          if (v1354 > 3)
                            v1253 = 0;
                          if ((_DWORD)v1354)
                          {
                            if (v1354 <= 3)
                              v1254 = v1354;
                            else
                              v1254 = 4;
                            __asm { BR              X11 }
                          }
                          v1255 = v1253 + 1;
                          v1252 = a1;
                        }
                        v190 = v1162;
                        v1251 = v1354;
                        if (v1255)
                        {
                          memcpy(v1246, v1247, v1404);
LABEL_1415:
                          *((_BYTE *)v1246 + v1404) = v1247[v1404];
                          *(_BYTE *)(((unint64_t)&v1131[v1342] & v1428) + v1345) = 2;
                          v188 = v1284;
                          v1144 = v1422 + 7;
                          v1145 = v1288;
                          v1143 = ~v1357;
                          v97 = v1252;
LABEL_1291:
                          v1146 = (_QWORD *)((unint64_t)&v1131[v1144] & 0xFFFFFFFFFFFFFFF8);
                          v1147 = (_QWORD *)((unint64_t)&v1132[v1144] & 0xFFFFFFFFFFFFFFF8);
                          *v1146 = *v1147;
                          v1148 = (_BYTE *)(((unint64_t)v1146 + v1145) & v1143);
                          v1149 = (unsigned __int8 *)(((unint64_t)v1147 + v1145) & v1143);
                          v1150 = *v1149;
                          v1151 = v1143;
                          sub_21D7C4C20();
                          if (v1150 > 2)
                          {
                            v1159 = v1148;
                            v1160 = v1149;
                            v1161 = v1422;
                          }
                          else
                          {
                            *v1148 = v1150;
                            v1152 = (_QWORD *)((unint64_t)&v1148[v1342] & v1151);
                            v1153 = (unint64_t)&v1149[v1342] & v1151;
                            v1154 = *(unsigned __int8 *)(v1153 + v1345);
                            if (v1154 <= 2)
                            {
                              if (v1154 != 2)
                              {
                                if (v1154 != 1)
                                {
                                  *v1152 = *(_QWORD *)v1153;
                                  v1152[1] = *(_QWORD *)(((unint64_t)&v1149[v1342] & v1151) + 8);
                                  v1152[2] = *(_QWORD *)(((unint64_t)&v1149[v1342] & v1151) + 0x10);
                                  v1152[3] = *(_QWORD *)(((unint64_t)&v1149[v1342] & v1151) + 0x18);
                                  v1152[4] = *(_QWORD *)(((unint64_t)&v1149[v1342] & v1151) + 0x20);
                                  v1152[5] = *(_QWORD *)(((unint64_t)&v1149[v1342] & v1151) + 0x28);
                                  *((_BYTE *)v1152 + v1345) = 0;
                                  sub_21D7C4C20();
                                  sub_21D7C4C20();
                                  sub_21D7C4C20();
                                  goto LABEL_1300;
                                }
                                v1155 = *(_QWORD *)(((unint64_t)&v1149[v1342] & v1151) + 0x18);
                                v1152[3] = v1155;
                                v1152[4] = *(_QWORD *)(((unint64_t)&v1149[v1342] & v1151) + 0x20);
                                (**(void (***)(_QWORD *, unint64_t))(v1155 - 8))(v1152, v1153);
                                v1156 = (void *)(((unint64_t)v1152 + v1403) & v1367);
                                v1157 = (const void *)((v1403 + v1153) & v1367);
                                v1158 = v199;
                                if (__swift_getEnumTagSinglePayload((uint64_t)v1157, 1, v1356))
                                {
                                  memcpy(v1156, v1157, v1440);
                                }
                                else
                                {
                                  (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v1156, v1157, v1356);
                                  __swift_storeEnumTagSinglePayload((uint64_t)v1156, 0, 1, v1356);
                                }
                                v1191 = (_QWORD *)(((unint64_t)v1156 + v1406) & 0xFFFFFFFFFFFFFFF8);
                                v1192 = (_QWORD *)(((unint64_t)v1157 + v1406) & 0xFFFFFFFFFFFFFFF8);
                                *v1191 = *v1192;
                                v1191[1] = v1192[1];
                                v1193 = ((unint64_t)v1191 + 23) & 0xFFFFFFFFFFFFFFF8;
                                v1194 = ((unint64_t)v1192 + 23) & 0xFFFFFFFFFFFFFFF8;
                                *(_QWORD *)v1193 = *(_QWORD *)v1194;
                                *(_BYTE *)(v1193 + 8) = *(_BYTE *)(v1194 + 8);
                                v1195 = ((unint64_t)v1191 + 39) & 0xFFFFFFFFFFFFFFF8;
                                v1196 = ((unint64_t)v1192 + 39) & 0xFFFFFFFFFFFFFFF8;
                                *(_QWORD *)v1195 = *(_QWORD *)v1196;
                                *(_BYTE *)(v1195 + 8) = *(_BYTE *)(v1196 + 8);
                                v1197 = ((unint64_t)v1191 + 55) & 0xFFFFFFFFFFFFFFF8;
                                v1198 = ((unint64_t)v1192 + 55) & 0xFFFFFFFFFFFFFFF8;
                                v1199 = *(_QWORD *)v1198;
                                *(_BYTE *)(v1197 + 8) = *(_BYTE *)(v1198 + 8);
                                *(_QWORD *)v1197 = v1199;
                                v1200 = (_QWORD *)(((unint64_t)v1191 + 71) & 0xFFFFFFFFFFFFFFF8);
                                v1201 = (_QWORD *)(((unint64_t)v1192 + 71) & 0xFFFFFFFFFFFFFFF8);
                                *v1200 = *v1201;
                                v1200[1] = v1201[1];
                                v1202 = ((unint64_t)v1200 + 23) & 0xFFFFFFFFFFFFFFF8;
                                v1203 = ((unint64_t)v1201 + 23) & 0xFFFFFFFFFFFFFFF8;
                                v1204 = *(_QWORD *)(v1203 + 24);
                                sub_21D7C4C20();
                                sub_21D7C4C20();
                                sub_21D7C4C20();
                                sub_21D7C4C20();
                                if (v1204 < 0xFFFFFFFF)
                                {
                                  v1205 = *(_OWORD *)v1203;
                                  v1206 = *(_OWORD *)(v1203 + 16);
                                  *(_QWORD *)(v1202 + 32) = *(_QWORD *)(v1203 + 32);
                                  *(_OWORD *)v1202 = v1205;
                                  *(_OWORD *)(v1202 + 16) = v1206;
                                }
                                else
                                {
                                  *(_QWORD *)(v1202 + 24) = v1204;
                                  *(_QWORD *)(v1202 + 32) = *(_QWORD *)(v1203 + 32);
                                  (**(void (***)(unint64_t, unint64_t, unint64_t))(v1204 - 8))(v1202, v1203, v1204);
                                }
                                v1207 = (_QWORD *)((v1439 + v1202) & v1371);
                                v1208 = (_QWORD *)((v1439 + v1203) & v1371);
                                if (v1335 >= 0x7FFFFFFF)
                                {
                                  v1211 = (const void *)(((unint64_t)v1208 + v1339) & v1383);
                                  if (__swift_getEnumTagSinglePayload((uint64_t)v1211, v1327, v1340) <= 1)
                                  {
                                    v1210 = (char *)(v1208 + 1);
                                    goto LABEL_1340;
                                  }
                                }
                                else
                                {
                                  v1209 = v1208[2];
                                  if (v1209 >= 0xFFFFFFFF)
                                    LODWORD(v1209) = -1;
                                  if ((int)v1209 - 1 < 0)
                                  {
                                    v1210 = (char *)(v1208 + 1);
                                    v1211 = (const void *)(((unint64_t)v1208 + v1339) & v1383);
LABEL_1340:
                                    *(_BYTE *)v1207 = *(_BYTE *)v1208;
                                    v1207[1] = v1208[1];
                                    v1207[2] = *((_QWORD *)v1210 + 1);
                                    v1207[3] = *((_QWORD *)v1210 + 2);
                                    v1207[4] = *((_QWORD *)v1210 + 3);
                                    v1207[5] = *((_QWORD *)v1210 + 4);
                                    v1207[6] = *((_QWORD *)v1210 + 5);
                                    v1207[7] = *((_QWORD *)v1210 + 6);
                                    v1207[8] = *((_QWORD *)v1210 + 7);
                                    v1207[9] = *((_QWORD *)v1210 + 8);
                                    v1207[10] = *((_QWORD *)v1210 + 9);
                                    v1207[11] = *((_QWORD *)v1210 + 10);
                                    v1207[12] = *((_QWORD *)v1210 + 11);
                                    v1212 = *((_QWORD *)v1210 + 12);
                                    *((_BYTE *)v1207 + 112) = v1210[104];
                                    v1207[13] = v1212;
                                    v1213 = (void *)(((unint64_t)v1207 + v1339) & v1383);
                                    sub_21D7C4C20();
                                    sub_21D7C4C20();
                                    sub_21D7C4C20();
                                    sub_21D7C4C20();
                                    sub_21D7C4C20();
                                    sub_21D7C4C20();
                                    if (__swift_getEnumTagSinglePayload((uint64_t)v1211, 1, v1340))
                                    {
                                      memcpy(v1213, v1211, v1401);
                                    }
                                    else
                                    {
                                      (*(void (**)(void *, const void *, uint64_t))(v1324 + 16))(v1213, v1211, v1340);
                                      __swift_storeEnumTagSinglePayload((uint64_t)v1213, 0, 1, v1340);
                                    }
                                    v199 = v1158;
                                    v188 = v1284;
                                    goto LABEL_1409;
                                  }
                                }
                                memcpy(v1207, v1208, v1402);
                                v199 = v1158;
LABEL_1409:
                                *((_BYTE *)v1152 + v1345) = 1;
                                v97 = a1;
                                goto LABEL_1300;
                              }
                              if (*(_QWORD *)(((unint64_t)&v1149[v1342] & v1151) + 8) < 0xFFFFFFFFuLL)
                              {
                                memcpy(v1152, (const void *)((unint64_t)&v1149[v1342] & v1151), 0x48uLL);
                              }
                              else
                              {
                                *v1152 = *(_QWORD *)v1153;
                                v1152[1] = *(_QWORD *)(((unint64_t)&v1149[v1342] & v1151) + 8);
                                v1152[2] = *(_QWORD *)(((unint64_t)&v1149[v1342] & v1151) + 0x10);
                                v1152[3] = *(_QWORD *)(((unint64_t)&v1149[v1342] & v1151) + 0x18);
                                v1164 = *(_QWORD *)(((unint64_t)&v1149[v1342] & v1151) + 0x38);
                                sub_21D7C4C20();
                                sub_21D7C4C20();
                                if (v1164)
                                {
                                  v1152[7] = v1164;
                                  v1152[8] = *(_QWORD *)(v1153 + 64);
                                  (**(void (***)(uint64_t, uint64_t, uint64_t))(v1164 - 8))((uint64_t)(v1152 + 4), v1153 + 32, v1164);
                                }
                                else
                                {
                                  v1235 = *(_OWORD *)(v1153 + 32);
                                  v1236 = *(_OWORD *)(v1153 + 48);
                                  v1152[8] = *(_QWORD *)(v1153 + 64);
                                  *((_OWORD *)v1152 + 2) = v1235;
                                  *((_OWORD *)v1152 + 3) = v1236;
                                }
                              }
                              v1237 = ((unint64_t)v1152 + 79) & 0xFFFFFFFFFFFFFFF8;
                              v1238 = (_QWORD *)((v1153 + 79) & 0xFFFFFFFFFFFFFFF8);
                              if (v1238[1] < 0xFFFFFFFFuLL)
                              {
                                memcpy((void *)(((unint64_t)v1152 + 79) & 0xFFFFFFFFFFFFFFF8), v1238, 0x48uLL);
                              }
                              else
                              {
                                *(_QWORD *)v1237 = *v1238;
                                *(_QWORD *)(v1237 + 8) = v1238[1];
                                *(_QWORD *)(v1237 + 16) = v1238[2];
                                *(_QWORD *)(v1237 + 24) = v1238[3];
                                v1239 = v1238[7];
                                sub_21D7C4C20();
                                sub_21D7C4C20();
                                if (v1239)
                                {
                                  *(_QWORD *)(v1237 + 56) = v1239;
                                  *(_QWORD *)(v1237 + 64) = v1238[8];
                                  (**(void (***)(uint64_t, uint64_t, uint64_t))(v1239 - 8))(v1237 + 32, (uint64_t)(v1238 + 4), v1239);
                                }
                                else
                                {
                                  v1256 = *((_OWORD *)v1238 + 2);
                                  v1257 = *((_OWORD *)v1238 + 3);
                                  *(_QWORD *)(v1237 + 64) = v1238[8];
                                  *(_OWORD *)(v1237 + 32) = v1256;
                                  *(_OWORD *)(v1237 + 48) = v1257;
                                }
                              }
                              v1258 = v1405;
                              v1259 = (_QWORD *)((v1237 + 79) & 0xFFFFFFFFFFFFF8);
                              v1260 = (_QWORD *)(((unint64_t)v1238 + 79) & 0xFFFFFFFFFFFFFFF8);
                              *v1259 = *v1260;
                              v1261 = (_QWORD *)(((unint64_t)v1259 + 15) & 0xFFFFFFFFFFFFFFF8);
                              v1262 = (_QWORD *)(((unint64_t)v1260 + 15) & 0xFFFFFFFFFFFFFFF8);
                              *v1261 = *v1262;
                              v1263 = (void *)(((unint64_t)v1261 + v1375) & v1387);
                              v1264 = (_BYTE *)(((unint64_t)v1262 + v1375) & v1387);
                              sub_21D7C4C20();
                              sub_21D7C4C20();
                              if (v1405)
                              {
                                v1265 = v1338;
                                if (v1333 >= v1338)
                                {
                                  v1266 = (uint64_t)v1264;
                                  v1265 = v1333;
                                  v1267 = v1336;
                                }
                                else
                                {
                                  v1266 = (unint64_t)&v1264[v1337] & v1385;
                                  v1267 = v1341;
                                }
                                v1271 = __swift_getEnumTagSinglePayload(v1266, v1265, v1267);
                                v1268 = a1;
                                v188 = v1284;
                              }
                              else
                              {
                                v1268 = a1;
                                v188 = v1284;
                                if (!v1264[v1354])
                                  goto LABEL_1419;
                                v1269 = (v1264[v1354] - 1) << v1364;
                                if (v1354 > 3)
                                  v1269 = 0;
                                if ((_DWORD)v1354)
                                {
                                  if (v1354 <= 3)
                                    v1270 = v1354;
                                  else
                                    v1270 = 4;
                                  __asm { BR              X11 }
                                }
                                v1271 = v1269 + 1;
                                v1268 = a1;
                                v188 = v1284;
                                v1258 = 0;
                              }
                              if (v1271)
                              {
                                memcpy(v1263, v1264, v1404);
                                v97 = v1268;
LABEL_1421:
                                *((_BYTE *)v1263 + v1404) = v1264[v1404];
                                *((_BYTE *)v1152 + v1345) = 2;
LABEL_1300:
                                v254 = v1424;
                                v205 = v1426;
                                v391 = 5;
LABEL_1301:
                                v199[v188] = v391;
                                goto LABEL_1362;
                              }
LABEL_1419:
                              (*(void (**)(void *, _BYTE *, uint64_t))(v1330 + 16))(v1263, v1264, v1336);
                              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1331 + 16))(((unint64_t)v1263 + v1337) & v1385, (unint64_t)&v1264[v1337] & v1385, v1341);
                              v97 = v1268;
                              if (!v1258)
                                *((_BYTE *)v1263 + v1354) = 0;
                              goto LABEL_1421;
                            }
                            v1159 = v1152;
                            v1160 = (const void *)((unint64_t)&v1149[v1342] & v1151);
                            v1161 = __n;
                          }
                          memcpy(v1159, v1160, v1161);
                          goto LABEL_1300;
                        }
LABEL_1413:
                        (*(void (**)(void *, _BYTE *, uint64_t))(v1330 + 16))(v1246, v1247, v1336);
                        (*(void (**)(unint64_t, unint64_t, uint64_t))(v1331 + 16))(((unint64_t)v1246 + v1337) & v1385, (unint64_t)&v1247[v1337] & v1385, v1341);
                        if (!v1405)
                          *((_BYTE *)v1246 + v1251) = 0;
                        goto LABEL_1415;
                      }
                      v1140 = (void *)((unint64_t)&v1131[v1342] & v1428);
                      v1141 = (const void *)((unint64_t)&v1132[v1342] & v1428);
                      v1142 = __n;
                    }
                    memcpy(v1140, v1141, v1142);
                    v1143 = ~v1357;
                    v199 = v764;
                    v1144 = v1422 + 7;
                    v1145 = v1288;
                    goto LABEL_1291;
                  }
LABEL_1276:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1330 + 16))(v792, v793, v1336);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1331 + 16))(((unint64_t)v792 + v1337) & v1385, (unint64_t)&v793[v1337] & v1385, v1341);
                  if (!v1405)
                    *((_BYTE *)v792 + v780) = 0;
                  goto LABEL_1278;
                }
              }
              memcpy(v781, v782, v784);
              goto LABEL_703;
            }
          }
LABEL_1270:
          v764 = v189;
          memcpy(v317, v318, v1320);
          v97 = a1;
          goto LABEL_1282;
        case 6:
          v199 = v189;
          *v189 = *v190;
          v200 = 6;
          goto LABEL_289;
        case 7:
          v199 = v189;
          *v189 = *v190;
          v200 = 7;
          goto LABEL_289;
        case 8:
          v199 = v189;
          if (__swift_getEnumTagSinglePayload((uint64_t)v190, 1, v1356))
          {
            memcpy(v189, v190, v1440);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1343 + 16))(v189, v190, v1356);
            __swift_storeEnumTagSinglePayload((uint64_t)v189, 0, 1, v1356);
          }
          v321 = ((unint64_t)v189 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v322 = ((unint64_t)v190 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v323 = *(_QWORD *)(v322 + 24);
          *(_QWORD *)(v321 + 24) = v323;
          *(_QWORD *)(v321 + 32) = *(_QWORD *)(v322 + 32);
          (**(void (***)(unint64_t, unint64_t))(v323 - 8))(v321, v322);
          v324 = (v1439 + v321) & v1371;
          v325 = (v1439 + v322) & v1371;
          v97 = a1;
          if (v1335 >= 0x7FFFFFFF)
          {
            v331 = (const void *)((v1339 + v325) & v1383);
            if (__swift_getEnumTagSinglePayload((uint64_t)v331, v1327, v1340) <= 1)
            {
              v1445 = v190;
              v327 = v189;
              v328 = (char *)(v325 + 8);
              v329 = v1339;
              v330 = ~v1416;
LABEL_336:
              *(_BYTE *)v324 = *(_BYTE *)v325;
              *(_QWORD *)(v324 + 8) = *(_QWORD *)(v325 + 8);
              *(_QWORD *)(v324 + 16) = *((_QWORD *)v328 + 1);
              *(_QWORD *)(v324 + 24) = *((_QWORD *)v328 + 2);
              *(_QWORD *)(v324 + 32) = *((_QWORD *)v328 + 3);
              *(_QWORD *)(v324 + 40) = *((_QWORD *)v328 + 4);
              *(_QWORD *)(v324 + 48) = *((_QWORD *)v328 + 5);
              *(_QWORD *)(v324 + 56) = *((_QWORD *)v328 + 6);
              *(_QWORD *)(v324 + 64) = *((_QWORD *)v328 + 7);
              *(_QWORD *)(v324 + 72) = *((_QWORD *)v328 + 8);
              *(_QWORD *)(v324 + 80) = *((_QWORD *)v328 + 9);
              *(_QWORD *)(v324 + 88) = *((_QWORD *)v328 + 10);
              *(_QWORD *)(v324 + 96) = *((_QWORD *)v328 + 11);
              v332 = *((_QWORD *)v328 + 12);
              *(_BYTE *)(v324 + 112) = v328[104];
              *(_QWORD *)(v324 + 104) = v332;
              v333 = (void *)((v329 + v324) & v330);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              if (__swift_getEnumTagSinglePayload((uint64_t)v331, 1, v1340))
              {
                memcpy(v333, v331, v1401);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1324 + 16))(v333, v331, v1340);
                __swift_storeEnumTagSinglePayload((uint64_t)v333, 0, 1, v1340);
              }
              v97 = a1;
              v199 = v327;
              v190 = v1445;
              v188 = v1284;
              v334 = v1402;
LABEL_649:
              v748 = (_QWORD *)(((v324 | 7) + v334) & 0xFFFFFFFFFFFFF8);
              v749 = (_QWORD *)(((v325 | 7) + v334) & 0xFFFFFFFFFFFFFFF8);
              *v748 = *v749;
              v750 = (_QWORD *)(((unint64_t)v748 + 15) & 0xFFFFFFFFFFFFFFF8);
              v751 = (_QWORD *)(((unint64_t)v749 + 15) & 0xFFFFFFFFFFFFFFF8);
              *v750 = *v751;
              v750[1] = v751[1];
              v752 = ((unint64_t)v750 + 23) & 0xFFFFFFFFFFFFFFF8;
              v753 = ((unint64_t)v751 + 23) & 0xFFFFFFFFFFFFFFF8;
              v754 = *(_QWORD *)(v753 + 8);
              sub_21D7C4C20();
              if (v754 < 0xFFFFFFFF)
              {
                v755 = *(_OWORD *)v753;
                *(_QWORD *)(v752 + 16) = *(_QWORD *)(v753 + 16);
                *(_OWORD *)v752 = v755;
              }
              else
              {
                *(_QWORD *)v752 = *(_QWORD *)v753;
                *(_QWORD *)(v752 + 8) = *(_QWORD *)(v753 + 8);
                *(_QWORD *)(v752 + 16) = *(_QWORD *)(v753 + 16);
                sub_21D7C4C20();
                sub_21D7C4C20();
              }
              *(_QWORD *)((v752 + 31) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v753 + 31) & 0xFFFFFFFFFFFFF8);
              v701 = 8;
LABEL_653:
              v199[v188] = v701;
LABEL_1231:
              sub_21D7C4C20();
LABEL_1232:
              v254 = v1424;
              v205 = v1426;
              goto LABEL_1362;
            }
          }
          else
          {
            v326 = *(_QWORD *)(v325 + 16);
            if (v326 >= 0xFFFFFFFF)
              LODWORD(v326) = -1;
            if ((int)v326 - 1 < 0)
            {
              v1445 = v190;
              v327 = v189;
              v328 = (char *)(v325 + 8);
              v329 = v1339;
              v330 = ~v1416;
              v331 = (const void *)((v1339 + v325) & v1383);
              goto LABEL_336;
            }
          }
          v334 = v1402;
          memcpy((void *)v324, (const void *)v325, v1402);
          goto LABEL_649;
        case 9:
          v1431 = ~v1381;
          v199 = v189;
          if (__swift_getEnumTagSinglePayload((uint64_t)v190, 1, v1356))
          {
            memcpy(v189, v190, v1440);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1343 + 16))(v189, v190, v1356);
            __swift_storeEnumTagSinglePayload((uint64_t)v189, 0, 1, v1356);
          }
          v335 = ((unint64_t)v189 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v336 = ((unint64_t)v190 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v337 = *(_QWORD *)(v336 + 24);
          *(_QWORD *)(v335 + 24) = v337;
          *(_QWORD *)(v335 + 32) = *(_QWORD *)(v336 + 32);
          (**(void (***)(unint64_t, unint64_t))(v337 - 8))(v335, v336);
          v338 = (_QWORD *)((v335 + 47) & 0xFFFFFFFFFFFFFFF8);
          v339 = (_QWORD *)((v336 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v338 = *v339;
          v338[1] = v339[1];
          v340 = (void *)(((unint64_t)v338 + v1416 + 16) & v1383);
          v341 = (const void *)(((unint64_t)v339 + v1416 + 16) & v1383);
          sub_21D7C4C20();
          if (__swift_getEnumTagSinglePayload((uint64_t)v341, 1, v1340))
          {
            memcpy(v340, v341, v1401);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1324 + 16))(v340, v341, v1340);
            __swift_storeEnumTagSinglePayload((uint64_t)v340, 0, 1, v1340);
          }
          v605 = (void *)(((unint64_t)v340 + v1294) & v1387);
          v606 = (_BYTE *)(((unint64_t)v341 + v1294) & v1387);
          if (v1405)
          {
            v607 = v1338;
            if (v1333 >= v1338)
            {
              v608 = (uint64_t)v606;
              v607 = v1333;
              v609 = v1336;
            }
            else
            {
              v608 = (unint64_t)&v606[v1337] & v1385;
              v609 = v1341;
            }
            v658 = __swift_getEnumTagSinglePayload(v608, v607, v609);
          }
          else
          {
            if (!v606[v1354])
              goto LABEL_799;
            v646 = (v606[v1354] - 1) << v1364;
            if (v1354 > 3)
              v646 = 0;
            if ((_DWORD)v1354)
            {
              if (v1354 <= 3)
                v647 = v1354;
              else
                v647 = 4;
              __asm { BR              X11 }
            }
            v658 = v646 + 1;
          }
          if (v658)
          {
            memcpy(v605, v606, v1404);
            goto LABEL_801;
          }
LABEL_799:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1330 + 16))(v605, v606, v1336);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1331 + 16))(((unint64_t)v605 + v1337) & v1385, (unint64_t)&v606[v1337] & v1385, v1341);
          if (!v1405)
            *((_BYTE *)v605 + v1354) = 0;
LABEL_801:
          v872 = &v606[v1404];
          *((_BYTE *)v605 + v1404) = v606[v1404];
          v873 = (void *)(((unint64_t)v605 + v1404 + v1457 + 1) & v1387);
          v874 = (_BYTE *)((unint64_t)&v606[v1404 + 1 + v1457] & v1387);
          if (v1405)
          {
            v875 = v1338;
            if (v1333 >= v1338)
            {
              v876 = (unint64_t)&v872[v1457 + 1] & v1387;
              v875 = v1333;
              v877 = v1336;
            }
            else
            {
              v876 = (unint64_t)&v874[v1337] & v1385;
              v877 = v1341;
            }
            v880 = __swift_getEnumTagSinglePayload(v876, v875, v877);
          }
          else
          {
            if (!v874[v1354])
              goto LABEL_981;
            v878 = (v874[v1354] - 1) << v1364;
            if (v1354 > 3)
              v878 = 0;
            if ((_DWORD)v1354)
            {
              if (v1354 <= 3)
                v879 = v1354;
              else
                v879 = 4;
              __asm { BR              X11 }
            }
            v880 = v878 + 1;
          }
          if (v880)
          {
            memcpy(v873, v874, v1404);
            goto LABEL_983;
          }
LABEL_981:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1330 + 16))(v873, v874, v1336);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1331 + 16))(((unint64_t)v873 + v1337) & v1385, (unint64_t)&v874[v1337] & v1385, v1341);
          if (!v1405)
            *((_BYTE *)v873 + v1354) = 0;
LABEL_983:
          v961 = (_QWORD *)(((unint64_t)v873 + v1379) & v1431);
          v962 = (uint64_t *)((unint64_t)&v874[v1379] & v1431);
          if ((v1338 & 0x80000000) != 0)
          {
            v964 = __swift_getEnumTagSinglePayload(((unint64_t)v962 + v1323) & v1385, v1338, v1341);
          }
          else
          {
            v963 = *v962;
            if ((unint64_t)*v962 >= 0xFFFFFFFF)
              LODWORD(v963) = -1;
            v964 = v963 + 1;
          }
          v97 = a1;
          if (v964)
          {
            memcpy(v961, v962, v1397);
          }
          else
          {
            *v961 = *v962;
            v965 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1331 + 16);
            sub_21D7C4C20();
            v97 = a1;
            v965(((unint64_t)v961 + v1323) & v1385, ((unint64_t)v962 + v1323) & v1385, v1341);
          }
          v966 = (_QWORD *)(((unint64_t)v961 + v1325) & v1371);
          v967 = (_QWORD *)(((unint64_t)v962 + v1325) & v1371);
          if (v1335 >= 0x7FFFFFFF)
          {
            v973 = (const void *)(((unint64_t)v967 + v1339) & v1383);
            if (__swift_getEnumTagSinglePayload((uint64_t)v973, v1327, v1340) <= 1)
            {
              v969 = v199;
              v970 = (char *)(v967 + 1);
              v971 = v1339;
              v972 = ~v1416;
LABEL_998:
              *(_BYTE *)v966 = *(_BYTE *)v967;
              v966[1] = v967[1];
              v966[2] = *((_QWORD *)v970 + 1);
              v966[3] = *((_QWORD *)v970 + 2);
              v966[4] = *((_QWORD *)v970 + 3);
              v966[5] = *((_QWORD *)v970 + 4);
              v966[6] = *((_QWORD *)v970 + 5);
              v966[7] = *((_QWORD *)v970 + 6);
              v966[8] = *((_QWORD *)v970 + 7);
              v966[9] = *((_QWORD *)v970 + 8);
              v966[10] = *((_QWORD *)v970 + 9);
              v966[11] = *((_QWORD *)v970 + 10);
              v966[12] = *((_QWORD *)v970 + 11);
              v974 = *((_QWORD *)v970 + 12);
              *((_BYTE *)v966 + 112) = v970[104];
              v966[13] = v974;
              v975 = (void *)(((unint64_t)v966 + v971) & v972);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              if (__swift_getEnumTagSinglePayload((uint64_t)v973, 1, v1340))
              {
                memcpy(v975, v973, v1401);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1324 + 16))(v975, v973, v1340);
                __swift_storeEnumTagSinglePayload((uint64_t)v975, 0, 1, v1340);
              }
              v205 = v1426;
              v188 = v1284;
              v199 = v969;
              v97 = a1;
LABEL_1003:
              v526 = 9;
              goto LABEL_1360;
            }
          }
          else
          {
            v968 = *(_QWORD *)((((unint64_t)v962 + v1325) & v1371) + 0x10);
            if (v968 >= 0xFFFFFFFF)
              LODWORD(v968) = -1;
            if ((int)v968 - 1 < 0)
            {
              v969 = v199;
              v970 = (char *)(v967 + 1);
              v971 = v1339;
              v972 = ~v1416;
              v973 = (const void *)(((unint64_t)v967 + v1339) & v1383);
              goto LABEL_998;
            }
          }
          memcpy(v966, v967, v1402);
          v205 = v1426;
          goto LABEL_1003;
        case 0xA:
          v201 = v190[3];
          v199 = v189;
          v189[3] = v201;
          v189[4] = v190[4];
          (**(void (***)(_QWORD *, _QWORD *))(v201 - 8))(v189, v190);
          v202 = (void *)(((unint64_t)v189 + v1403) & v1367);
          v203 = (const void *)(((unint64_t)v190 + v1403) & v1367);
          if (__swift_getEnumTagSinglePayload((uint64_t)v203, 1, v1356))
          {
            v204 = v1440;
            memcpy(v202, v203, v1440);
            v205 = v1426;
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v202, v203, v1356);
            __swift_storeEnumTagSinglePayload((uint64_t)v202, 0, 1, v1356);
            v205 = v1426;
            v204 = v1440;
          }
          v97 = a1;
          *((_BYTE *)v202 + v204) = *((_BYTE *)v203 + v204);
          v342 = ((unint64_t)v202 + v204) & 0xFFFFFFFFFFFFFFF8;
          v343 = ((unint64_t)v203 + v204) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)(v342 + 8) = *(_QWORD *)(v343 + 8);
          *(_QWORD *)(v342 + 16) = *(_QWORD *)(v343 + 16);
          v344 = (_QWORD *)((v342 + 31) & 0xFFFFFFFFFFFFFFF8);
          v345 = (_QWORD *)((v343 + 31) & 0xFFFFFFFFFFFFFFF8);
          *v344 = *v345;
          v344[1] = v345[1];
          v346 = (_QWORD *)(((unint64_t)v344 + 23) & 0xFFFFFFFFFFFFFFF8);
          v347 = (_QWORD *)(((unint64_t)v345 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v346 = *v347;
          v346[1] = v347[1];
          v348 = 10;
          goto LABEL_389;
        case 0xB:
          v199 = v189;
          *v189 = *v190;
          v200 = 11;
          goto LABEL_289;
        case 0xC:
          v199 = v189;
          if (__swift_getEnumTagSinglePayload((uint64_t)v190, 1, v1356))
          {
            memcpy(v189, v190, v1440);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1343 + 16))(v189, v190, v1356);
            __swift_storeEnumTagSinglePayload((uint64_t)v189, 0, 1, v1356);
          }
          v349 = ((unint64_t)v189 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v350 = ((unint64_t)v190 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v351 = *(_QWORD *)(v350 + 24);
          *(_QWORD *)(v349 + 24) = v351;
          *(_QWORD *)(v349 + 32) = *(_QWORD *)(v350 + 32);
          (**(void (***)(unint64_t, unint64_t))(v351 - 8))(v349, v350);
          v352 = (_QWORD *)((v1420 + 40 + v349) & v1400);
          v353 = (_QWORD *)((v1420 + 40 + v350) & v1400);
          if (v1362 > 0x7FFFFFFE)
          {
            v355 = (_QWORD *)(((unint64_t)v353 + 23) & 0xFFFFFFFFFFFFFFF8);
            v356 = ((unint64_t)v355 + 23) & 0xFFFFFFFFFFFFFFF8;
            if (!__swift_getEnumTagSinglePayload((v1420 + v356 + 33) & v192, v1362, v1321))
            {
              v1411 = v199;
LABEL_602:
              *v352 = *v353;
              v352[1] = v353[1];
              v692 = (_QWORD *)(((unint64_t)v352 + 23) & 0xFFFFFFFFFFFFFFF8);
              *v692 = *v355;
              v692[1] = v355[1];
              v693 = ((unint64_t)v692 + 23) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)v693 = *(_QWORD *)v356;
              *(_QWORD *)(v693 + 8) = *(_QWORD *)(v356 + 8);
              *(_BYTE *)(v693 + 16) = *(_BYTE *)(v356 + 16);
              v694 = ((unint64_t)v692 + 47) & 0xFFFFFFFFFFFFFFF8;
              v695 = ((unint64_t)v355 + 47) & 0xFFFFFFFFFFFFFFF8;
              v696 = *(void **)v695;
              *(_QWORD *)v694 = *(_QWORD *)v695;
              *(_BYTE *)(v694 + 8) = *(_BYTE *)(v695 + 8);
              v697 = (v1420 + 9 + v694) & v192;
              v698 = (v1420 + 9 + v695) & v192;
              v699 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1358 + 16);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              v700 = v696;
              v699(v697, v698, v1321);
              v97 = a1;
              v188 = v1284;
              v199 = v1411;
LABEL_603:
              *(_QWORD *)(((unint64_t)v352 + v1436 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v353
                                                                                                  + v1436
                                                                                                  + 7) & 0xFFFFFFFFFFFFF8);
              v701 = 12;
              goto LABEL_653;
            }
          }
          else
          {
            v354 = v353[1];
            if (v354 >= 0xFFFFFFFF)
              LODWORD(v354) = -1;
            if ((v354 + 1) <= 1)
            {
              v1411 = v189;
              v355 = (_QWORD *)(((unint64_t)v353 + 23) & 0xFFFFFFFFFFFFFFF8);
              v356 = ((unint64_t)v355 + 23) & 0xFFFFFFFFFFFFFFF8;
              goto LABEL_602;
            }
          }
          memcpy(v352, v353, v1436);
          v97 = a1;
          goto LABEL_603;
        case 0xD:
          v206 = v190[3];
          v199 = v189;
          v189[3] = v206;
          v189[4] = v190[4];
          (**(void (***)(_QWORD *, _QWORD *))(v206 - 8))(v189, v190);
          v207 = (void *)(((unint64_t)v189 + v1403) & v1367);
          v208 = (const void *)(((unint64_t)v190 + v1403) & v1367);
          if (__swift_getEnumTagSinglePayload((uint64_t)v208, 1, v1356))
          {
            memcpy(v207, v208, v1440);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v207, v208, v1356);
            __swift_storeEnumTagSinglePayload((uint64_t)v207, 0, 1, v1356);
          }
          v357 = ((unint64_t)v207 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v358 = ((unint64_t)v208 + v1406) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v357 = *(_QWORD *)v358;
          *(_QWORD *)(v357 + 8) = *(_QWORD *)(v358 + 8);
          *(_BYTE *)(v357 + 16) = *(_BYTE *)(v358 + 16);
          v359 = (_QWORD *)((v1292 + v357) & v1371);
          v360 = (_QWORD *)((v1292 + v358) & v1371);
          sub_21D7C4C20();
          v97 = a1;
          if (v1335 >= 0x7FFFFFFF)
          {
            v366 = (const void *)(((unint64_t)v360 + v1339) & v1383);
            if (__swift_getEnumTagSinglePayload((uint64_t)v366, v1327, v1340) <= 1)
            {
              v1446 = v190;
              v362 = v189;
              v363 = (char *)(v360 + 1);
              v364 = v1339;
              v365 = ~v1416;
LABEL_360:
              *(_BYTE *)v359 = *(_BYTE *)v360;
              v359[1] = v360[1];
              v359[2] = *((_QWORD *)v363 + 1);
              v359[3] = *((_QWORD *)v363 + 2);
              v359[4] = *((_QWORD *)v363 + 3);
              v359[5] = *((_QWORD *)v363 + 4);
              v359[6] = *((_QWORD *)v363 + 5);
              v359[7] = *((_QWORD *)v363 + 6);
              v359[8] = *((_QWORD *)v363 + 7);
              v359[9] = *((_QWORD *)v363 + 8);
              v359[10] = *((_QWORD *)v363 + 9);
              v359[11] = *((_QWORD *)v363 + 10);
              v359[12] = *((_QWORD *)v363 + 11);
              v367 = *((_QWORD *)v363 + 12);
              *((_BYTE *)v359 + 112) = v363[104];
              v359[13] = v367;
              v368 = (void *)(((unint64_t)v359 + v364) & v365);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              if (__swift_getEnumTagSinglePayload((uint64_t)v366, 1, v1340))
              {
                memcpy(v368, v366, v1401);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1324 + 16))(v368, v366, v1340);
                __swift_storeEnumTagSinglePayload((uint64_t)v368, 0, 1, v1340);
              }
              v97 = a1;
              v199 = v362;
              v190 = v1446;
              v188 = v1284;
              v369 = v1402;
LABEL_656:
              *((_BYTE *)v359 + v369) = *((_BYTE *)v360 + v369);
              v199[v188] = 13;
              goto LABEL_1232;
            }
          }
          else
          {
            v361 = v360[2];
            if (v361 >= 0xFFFFFFFF)
              LODWORD(v361) = -1;
            if ((int)v361 - 1 < 0)
            {
              v1446 = v190;
              v362 = v189;
              v363 = (char *)(v360 + 1);
              v364 = v1339;
              v365 = ~v1416;
              v366 = (const void *)(((unint64_t)v360 + v1339) & v1383);
              goto LABEL_360;
            }
          }
          v369 = v1402;
          memcpy(v359, v360, v1402);
          goto LABEL_656;
        case 0xE:
          v199 = v189;
          *v189 = *v190;
          v200 = 14;
          goto LABEL_289;
        case 0xF:
          v199 = v189;
          *v189 = *v190;
          v200 = 15;
          goto LABEL_289;
        case 0x10:
          v209 = v190[3];
          v189[3] = v209;
          v189[4] = v190[4];
          (**(void (***)(_QWORD *, _QWORD *))(v209 - 8))(v189, v190);
          v210 = (void *)(((unint64_t)v189 + v1403) & v1367);
          v211 = (const void *)(((unint64_t)v190 + v1403) & v1367);
          if (__swift_getEnumTagSinglePayload((uint64_t)v211, 1, v1356))
          {
            memcpy(v210, v211, v1440);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v210, v211, v1356);
            __swift_storeEnumTagSinglePayload((uint64_t)v210, 0, 1, v1356);
          }
          v370 = (_QWORD *)(((unint64_t)v210 + v1406) & 0xFFFFFFFFFFFFFFF8);
          v371 = (_QWORD *)(((unint64_t)v211 + v1406) & 0xFFFFFFFFFFFFFFF8);
          *v370 = *v371;
          v370[1] = v371[1];
          v372 = (_QWORD *)(((unint64_t)v370 + 23) & 0xFFFFFFFFFFFFFFF8);
          v373 = (_QWORD *)(((unint64_t)v371 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v372 = *v373;
          v372[1] = v373[1];
          v374 = (_QWORD *)(((unint64_t)v372 + 23) & 0xFFFFFFFFFFFFFFF8);
          v375 = (_QWORD *)(((unint64_t)v373 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v374 = *v375;
          v374[1] = v375[1];
          v376 = ((unint64_t)v374 + 23) & 0xFFFFFFFFFFFFFFF8;
          v377 = ((unint64_t)v375 + 23) & 0xFFFFFFFFFFFFFFF8;
          v378 = *(_QWORD *)(v377 + 24);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v378 < 0xFFFFFFFF)
          {
            v379 = *(_OWORD *)v377;
            v380 = *(_OWORD *)(v377 + 16);
            *(_QWORD *)(v376 + 32) = *(_QWORD *)(v377 + 32);
            *(_OWORD *)v376 = v379;
            *(_OWORD *)(v376 + 16) = v380;
          }
          else
          {
            *(_QWORD *)(v376 + 24) = v378;
            *(_QWORD *)(v376 + 32) = *(_QWORD *)(v377 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v378 - 8))(v376, v377, v378);
          }
          v205 = v1426;
          v381 = (v376 + 47) & 0xFFFFFFFFFFFFFFF8;
          v382 = (v377 + 47) & 0xFFFFFFFFFFFFFFF8;
          v383 = *(_QWORD *)(v382 + 24);
          v97 = a1;
          v199 = v189;
          if (v383 < 0xFFFFFFFF)
          {
            v384 = *(_OWORD *)v382;
            v385 = *(_OWORD *)(v382 + 16);
            *(_QWORD *)(v381 + 32) = *(_QWORD *)(v382 + 32);
            *(_OWORD *)v381 = v384;
            *(_OWORD *)(v381 + 16) = v385;
          }
          else
          {
            *(_QWORD *)(v381 + 24) = v383;
            *(_QWORD *)(v381 + 32) = *(_QWORD *)(v382 + 32);
            (**(void (***)(unint64_t, unint64_t))(v383 - 8))(v381, v382);
          }
          v386 = (v381 + 47) & 0xFFFFFFFFFFFFFFF8;
          v387 = (v382 + 47) & 0xFFFFFFFFFFFFFFF8;
          v388 = *(_QWORD *)(v387 + 24);
          if (v388 < 0xFFFFFFFF)
          {
            v389 = *(_OWORD *)v387;
            v390 = *(_OWORD *)(v387 + 16);
            *(_QWORD *)(v386 + 32) = *(_QWORD *)(v387 + 32);
            *(_OWORD *)v386 = v389;
            *(_OWORD *)(v386 + 16) = v390;
          }
          else
          {
            *(_QWORD *)(v386 + 24) = v388;
            *(_QWORD *)(v386 + 32) = *(_QWORD *)(v387 + 32);
            (**(void (***)(unint64_t, unint64_t))(v388 - 8))(v386, v387);
          }
          v254 = v1424;
          *(_BYTE *)(v386 + 40) = *(_BYTE *)(v387 + 40);
          v391 = 16;
          goto LABEL_1301;
        case 0x11:
          v212 = v190[3];
          v189[3] = v212;
          v189[4] = v190[4];
          (**(void (***)(_QWORD *, _QWORD *))(v212 - 8))(v189, v190);
          v213 = (void *)(((unint64_t)v189 + v1403) & v1367);
          v214 = (const void *)(((unint64_t)v190 + v1403) & v1367);
          if (__swift_getEnumTagSinglePayload((uint64_t)v214, 1, v1356))
          {
            memcpy(v213, v214, v1440);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v213, v214, v1356);
            __swift_storeEnumTagSinglePayload((uint64_t)v213, 0, 1, v1356);
          }
          v392 = (_QWORD *)(((unint64_t)v213 + v1406) & 0xFFFFFFFFFFFFFFF8);
          v393 = (_QWORD *)(((unint64_t)v214 + v1406) & 0xFFFFFFFFFFFFFFF8);
          *v392 = *v393;
          v392[1] = v393[1];
          v394 = (_QWORD *)(((unint64_t)v392 + 23) & 0xFFFFFFFFFFFFFFF8);
          v395 = (_QWORD *)(((unint64_t)v393 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v394 = *v395;
          v394[1] = v395[1];
          v396 = (_QWORD *)(((unint64_t)v394 + 23) & 0xFFFFFFFFFFFFFFF8);
          v397 = (_QWORD *)(((unint64_t)v395 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v396 = *v397;
          v396[1] = v397[1];
          v398 = (_QWORD *)(((unint64_t)v396 + 23) & 0xFFFFFFFFFFFFFFF8);
          v399 = (_QWORD *)(((unint64_t)v397 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v398 = *v399;
          v398[1] = v399[1];
          v400 = ((unint64_t)v398 + 23) & 0xFFFFFFFFFFFFFFF8;
          v401 = ((unint64_t)v399 + 23) & 0xFFFFFFFFFFFFFFF8;
          v402 = *(_QWORD *)(v401 + 24);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v402 < 0xFFFFFFFF)
          {
            v403 = *(_OWORD *)v401;
            v404 = *(_OWORD *)(v401 + 16);
            *(_QWORD *)(v400 + 32) = *(_QWORD *)(v401 + 32);
            *(_OWORD *)v400 = v403;
            *(_OWORD *)(v400 + 16) = v404;
          }
          else
          {
            *(_QWORD *)(v400 + 24) = v402;
            *(_QWORD *)(v400 + 32) = *(_QWORD *)(v401 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v402 - 8))(v400, v401, v402);
          }
          v405 = (v400 + 47) & 0xFFFFFFFFFFFFFFF8;
          v406 = (v401 + 47) & 0xFFFFFFFFFFFFFFF8;
          v407 = *(_QWORD *)(v406 + 24);
          v199 = v189;
          if (v407 < 0xFFFFFFFF)
          {
            v408 = *(_OWORD *)v406;
            v409 = *(_OWORD *)(v406 + 16);
            *(_QWORD *)(v405 + 32) = *(_QWORD *)(v406 + 32);
            *(_OWORD *)v405 = v408;
            *(_OWORD *)(v405 + 16) = v409;
          }
          else
          {
            *(_QWORD *)(v405 + 24) = v407;
            *(_QWORD *)(v405 + 32) = *(_QWORD *)(v406 + 32);
            (**(void (***)(unint64_t, unint64_t))(v407 - 8))(v405, (v401 + 47) & 0xFFFFFFFFFFFFFFF8);
          }
          v188 = v1284;
          v410 = (v405 + 47) & 0xFFFFFFFFFFFFFFF8;
          v411 = (v406 + 47) & 0xFFFFFFFFFFFFFFF8;
          v412 = *(_QWORD *)(v411 + 24);
          v97 = a1;
          if (v412 < 0xFFFFFFFF)
          {
            v413 = *(_OWORD *)v411;
            v414 = *(_OWORD *)(v411 + 16);
            *(_QWORD *)(v410 + 32) = *(_QWORD *)(v411 + 32);
            *(_OWORD *)v410 = v413;
            *(_OWORD *)(v410 + 16) = v414;
          }
          else
          {
            *(_QWORD *)(v410 + 24) = v412;
            *(_QWORD *)(v410 + 32) = *(_QWORD *)(v411 + 32);
            (**(void (***)(unint64_t, unint64_t))(v412 - 8))(v410, v411);
          }
          v415 = (void *)((v1290 + v410) & v1387);
          v416 = (_BYTE *)((v1290 + v411) & v1387);
          if (v1405)
          {
            v417 = v1338;
            if (v1333 >= v1338)
            {
              v418 = (uint64_t)v416;
              v417 = v1333;
              v419 = v1336;
            }
            else
            {
              v418 = (unint64_t)&v416[v1337] & v1385;
              v419 = v1341;
            }
            v655 = __swift_getEnumTagSinglePayload(v418, v417, v419);
          }
          else
          {
            if (!v416[v1354])
              goto LABEL_1006;
            v610 = (v416[v1354] - 1) << v1364;
            if (v1354 > 3)
              v610 = 0;
            if ((_DWORD)v1354)
            {
              if (v1354 <= 3)
                v611 = v1354;
              else
                v611 = 4;
              __asm { BR              X11 }
            }
            v655 = v610 + 1;
          }
          if (v655)
          {
            memcpy(v415, v416, v1404);
            goto LABEL_1008;
          }
LABEL_1006:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1330 + 16))(v415, v416, v1336);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1331 + 16))(((unint64_t)v415 + v1337) & v1385, (unint64_t)&v416[v1337] & v1385, v1341);
          if (!v1405)
            *((_BYTE *)v415 + v1354) = 0;
LABEL_1008:
          v976 = (void *)(((unint64_t)v415 + v1304) & v1387);
          v977 = (_BYTE *)((unint64_t)&v416[v1304] & v1387);
          if (v1405)
          {
            v978 = v1338;
            if (v1333 >= v1338)
            {
              v979 = (unint64_t)&v416[v1304] & v1387;
              v978 = v1333;
              v980 = v1336;
            }
            else
            {
              v979 = (unint64_t)&v977[v1337] & v1385;
              v980 = v1341;
            }
            v983 = __swift_getEnumTagSinglePayload(v979, v978, v980);
            v205 = v1426;
          }
          else
          {
            v205 = v1426;
            if (!v977[v1354])
              goto LABEL_1192;
            v981 = (v977[v1354] - 1) << v1364;
            if (v1354 > 3)
              v981 = 0;
            if ((_DWORD)v1354)
            {
              if (v1354 <= 3)
                v982 = v1354;
              else
                v982 = 4;
              __asm { BR              X11 }
            }
            v983 = v981 + 1;
          }
          if (v983)
          {
            memcpy(v976, v977, v1404);
            goto LABEL_1194;
          }
LABEL_1192:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1330 + 16))(v976, v977, v1336);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1331 + 16))(((unint64_t)v976 + v1337) & v1385, (unint64_t)&v977[v1337] & v1385, v1341);
          if (!v1405)
            *((_BYTE *)v976 + v1354) = 0;
LABEL_1194:
          v526 = 17;
          goto LABEL_1360;
        case 0x12:
          v199 = v189;
          *v189 = *v190;
          v200 = 18;
          goto LABEL_289;
        case 0x13:
          v199 = v189;
          if (__swift_getEnumTagSinglePayload((uint64_t)v190, 1, v1356))
          {
            memcpy(v189, v190, v1440);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1343 + 16))(v189, v190, v1356);
            __swift_storeEnumTagSinglePayload((uint64_t)v189, 0, 1, v1356);
          }
          v205 = v1426;
          v97 = a1;
          v420 = ((unint64_t)v189 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v421 = ((unint64_t)v190 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v422 = *(_QWORD *)(v421 + 24);
          *(_QWORD *)(v420 + 24) = v422;
          *(_QWORD *)(v420 + 32) = *(_QWORD *)(v421 + 32);
          (**(void (***)(unint64_t, unint64_t))(v422 - 8))(v420, v421);
          v423 = (_QWORD *)((v420 + 47) & 0xFFFFFFFFFFFFFFF8);
          v424 = (_QWORD *)((v421 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v423 = *v424;
          v423[1] = v424[1];
          v425 = (_QWORD *)(((unint64_t)v423 + 23) & 0xFFFFFFFFFFFFFFF8);
          v426 = (_QWORD *)(((unint64_t)v424 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v425 = *v426;
          v425[1] = v426[1];
          *(_QWORD *)(((unint64_t)v425 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v426 + 23) & 0xFFFFFFFFFFFFF8);
          v348 = 19;
LABEL_389:
          v199[v1284] = v348;
          sub_21D7C4C20();
          sub_21D7C4C20();
          goto LABEL_965;
        case 0x14:
          if (__swift_getEnumTagSinglePayload((uint64_t)v190, 1, v1356))
          {
            memcpy(v189, v190, v1440);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1343 + 16))(v189, v190, v1356);
            __swift_storeEnumTagSinglePayload((uint64_t)v189, 0, 1, v1356);
          }
          v427 = v189;
          v428 = ((unint64_t)v189 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v429 = ((unint64_t)v190 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v430 = *(_QWORD *)(v429 + 24);
          *(_QWORD *)(v428 + 24) = v430;
          *(_QWORD *)(v428 + 32) = *(_QWORD *)(v429 + 32);
          (**(void (***)(unint64_t, unint64_t))(v430 - 8))(v428, v429);
          v431 = (void *)((v1357 + 40 + v428) & v1428);
          v432 = (const void *)((v1357 + 40 + v429) & v1428);
          v433 = v1354;
          v434 = v1405;
          if (v1328 == v1305)
          {
            v435 = ~v1418;
            if (v1399 >= 2 && __swift_getEnumTagSinglePayload((uint64_t)v432, v1399, v1356) >= 2)
              goto LABEL_1273;
            goto LABEL_719;
          }
          v436 = ((unint64_t)v432 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v435 = ~v1418;
          if (v1305 == 0x7FFFFFFF)
          {
            if (*(_QWORD *)(v436 + 24) >= 0xFFFFFFFFuLL)
              goto LABEL_719;
          }
          else
          {
            v665 = (v1439
                  + ((((((((v436 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                    + 47) & 0xFFFFFFFFFFFFFFF8)) & v1371;
            if (v1287 != v1305)
            {
              if (v1405 >= 2)
              {
                v759 = (v1285 + v665) & v1387;
                v760 = v1338;
                if (v1333 >= v1338)
                {
                  v760 = v1333;
                  v761 = v1336;
                }
                else
                {
                  v759 = (v1337 + v759) & v1385;
                  v761 = v1341;
                }
                v188 = v1284;
                v433 = v1354;
                v434 = v1405;
                if (__swift_getEnumTagSinglePayload(v759, v760, v761) >= 2)
                  goto LABEL_1273;
              }
              goto LABEL_719;
            }
            if (v1335 > 0x7FFFFFFE)
            {
              v800 = __swift_getEnumTagSinglePayload((v1339 + v665) & v1383, v1327, v1340);
              if (v800 < 2)
                goto LABEL_719;
              v668 = v800 - 1;
            }
            else
            {
              v666 = *(_QWORD *)(v665 + 16);
              if (v666 >= 0xFFFFFFFF)
                LODWORD(v666) = -1;
              v667 = v666 - 1;
              if (v667 < 0)
                v667 = -1;
              v668 = v667 + 1;
            }
            if (v668 < 2)
            {
LABEL_719:
              if (__swift_getEnumTagSinglePayload((uint64_t)v432, 1, v1356))
              {
                memcpy(v431, v432, v1440);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v431, v432, v1356);
                __swift_storeEnumTagSinglePayload((uint64_t)v431, 0, 1, v1356);
              }
              v801 = v432;
              v1441 = (v1357 + 40 + v428) & v1428;
              v802 = ((unint64_t)v431 + v1406) & 0xFFFFFFFFFFFFFFF8;
              v1438 = v801;
              v803 = ((unint64_t)v801 + v1406) & 0xFFFFFFFFFFFFFFF8;
              v804 = *(_QWORD *)(v803 + 24);
              *(_QWORD *)(v802 + 24) = v804;
              *(_QWORD *)(v802 + 32) = *(_QWORD *)(v803 + 32);
              (**(void (***)(unint64_t, unint64_t))(v804 - 8))(v802, v803);
              v805 = (_QWORD *)((v802 + 47) & 0xFFFFFFFFFFFFFFF8);
              v806 = (_QWORD *)((v803 + 47) & 0xFFFFFFFFFFFFFFF8);
              *v805 = *v806;
              v805[1] = v806[1];
              v807 = (_QWORD *)(((unint64_t)v805 + 23) & 0xFFFFFFFFFFFFFFF8);
              v808 = (_QWORD *)(((unint64_t)v806 + 23) & 0xFFFFFFFFFFFFFFF8);
              *v807 = *v808;
              v807[1] = v808[1];
              v809 = ((unint64_t)v807 + 23) & 0xFFFFFFFFFFFFFFF8;
              v810 = ((unint64_t)v808 + 23) & 0xFFFFFFFFFFFFFFF8;
              v811 = *(_QWORD *)(v810 + 24);
              sub_21D7C4C20();
              sub_21D7C4C20();
              if (v811 < 0xFFFFFFFF)
              {
                v812 = *(_OWORD *)v810;
                v813 = *(_OWORD *)(v810 + 16);
                *(_QWORD *)(v809 + 32) = *(_QWORD *)(v810 + 32);
                *(_OWORD *)v809 = v812;
                *(_OWORD *)(v809 + 16) = v813;
              }
              else
              {
                *(_QWORD *)(v809 + 24) = v811;
                *(_QWORD *)(v809 + 32) = *(_QWORD *)(v810 + 32);
                (**(void (***)(unint64_t, unint64_t, unint64_t))(v811 - 8))(v809, v810, v811);
              }
              v814 = v1402;
              v815 = (v809 + 47) & 0xFFFFFFFFFFFFFFF8;
              v816 = (v810 + 47) & 0xFFFFFFFFFFFFFFF8;
              v817 = *(_QWORD *)(v816 + 24);
              if (v817 < 0xFFFFFFFF)
              {
                v818 = *(_OWORD *)v816;
                v819 = *(_OWORD *)(v816 + 16);
                *(_QWORD *)(v815 + 32) = *(_QWORD *)(v816 + 32);
                *(_OWORD *)v815 = v818;
                *(_OWORD *)(v815 + 16) = v819;
              }
              else
              {
                *(_QWORD *)(v815 + 24) = v817;
                *(_QWORD *)(v815 + 32) = *(_QWORD *)(v816 + 32);
                (**(void (***)(unint64_t, unint64_t))(v817 - 8))(v815, (v810 + 47) & 0xFFFFFFFFFFFFFFF8);
              }
              v820 = (_QWORD *)((v1439 + v815) & v435);
              v821 = (_QWORD *)((v1439 + v816) & v435);
              if (v1335 >= 0x7FFFFFFF)
              {
                v826 = (const void *)(((unint64_t)v821 + v1339) & v1383);
                if (__swift_getEnumTagSinglePayload((uint64_t)v826, v1327, v1340) <= 1)
                {
                  v1451 = v190;
                  v823 = (char *)(v821 + 1);
                  v824 = v1339;
                  v825 = ~v1416;
                  goto LABEL_735;
                }
              }
              else
              {
                v822 = *(_QWORD *)(((v1439 + v816) & v435) + 0x10);
                if (v822 >= 0xFFFFFFFF)
                  LODWORD(v822) = -1;
                if ((int)v822 - 1 < 0)
                {
                  v1451 = v190;
                  v823 = (char *)(v821 + 1);
                  v824 = v1339;
                  v825 = ~v1416;
                  v826 = (const void *)(((unint64_t)v821 + v1339) & v1383);
LABEL_735:
                  *(_BYTE *)v820 = *(_BYTE *)v821;
                  v820[1] = v821[1];
                  v820[2] = *((_QWORD *)v823 + 1);
                  v820[3] = *((_QWORD *)v823 + 2);
                  v820[4] = *((_QWORD *)v823 + 3);
                  v820[5] = *((_QWORD *)v823 + 4);
                  v820[6] = *((_QWORD *)v823 + 5);
                  v820[7] = *((_QWORD *)v823 + 6);
                  v820[8] = *((_QWORD *)v823 + 7);
                  v820[9] = *((_QWORD *)v823 + 8);
                  v820[10] = *((_QWORD *)v823 + 9);
                  v820[11] = *((_QWORD *)v823 + 10);
                  v820[12] = *((_QWORD *)v823 + 11);
                  v827 = *((_QWORD *)v823 + 12);
                  *((_BYTE *)v820 + 112) = v823[104];
                  v820[13] = v827;
                  v828 = (void *)(((unint64_t)v820 + v824) & v825);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (__swift_getEnumTagSinglePayload((uint64_t)v826, 1, v1340))
                  {
                    memcpy(v828, v826, v1401);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1324 + 16))(v828, v826, v1340);
                    __swift_storeEnumTagSinglePayload((uint64_t)v828, 0, 1, v1340);
                  }
                  v190 = v1451;
                  v188 = v1284;
                  v814 = v1402;
                  v433 = v1354;
                  v434 = v1405;
LABEL_740:
                  v829 = (void *)(((unint64_t)v820 + v1457 + v814) & v1387);
                  v830 = (_BYTE *)(((unint64_t)v821 + v1457 + v814) & v1387);
                  v431 = (void *)v1441;
                  if (v434)
                  {
                    v831 = v1338;
                    if (v1333 >= v1338)
                    {
                      v832 = (uint64_t)v830;
                      v831 = v1333;
                      v833 = v1336;
                    }
                    else
                    {
                      v832 = (unint64_t)&v830[v1337] & v1385;
                      v833 = v1341;
                    }
                    v836 = __swift_getEnumTagSinglePayload(v832, v831, v833);
                  }
                  else
                  {
                    if (!v830[v433])
                      goto LABEL_1345;
                    v834 = (v830[v433] - 1) << v1364;
                    if (v433 > 3)
                      v834 = 0;
                    if ((_DWORD)v433)
                    {
                      if (v433 <= 3)
                        v835 = v433;
                      else
                        v835 = 4;
                      __asm { BR              X11 }
                    }
                    v836 = v834 + 1;
                  }
                  if (v836)
                  {
                    memcpy(v829, v830, v1404);
                    v432 = v1438;
                    goto LABEL_1347;
                  }
LABEL_1345:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1330 + 16))(v829, v830, v1336);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1331 + 16))(((unint64_t)v829 + v1337) & v1385, (unint64_t)&v830[v1337] & v1385, v1341);
                  v432 = v1438;
                  if (!v434)
                    *((_BYTE *)v829 + v433) = 0;
LABEL_1347:
                  v1214 = (_QWORD *)(((unint64_t)v431 + v1300) & 0xFFFFFFFFFFFFFFF8);
                  v1215 = (_QWORD *)(((unint64_t)v432 + v1300) & 0xFFFFFFFFFFFFFFF8);
                  *v1214 = *v1215;
                  v1216 = (_QWORD *)(((unint64_t)v1214 + v1301) & v435);
                  v1217 = (_QWORD *)(((unint64_t)v1215 + v1301) & v435);
                  sub_21D7C4C20();
                  if (v1335 >= 0x7FFFFFFF)
                  {
                    v1223 = (const void *)(((unint64_t)v1217 + v1339) & v1383);
                    v1219 = a1;
                    v199 = v427;
                    if (__swift_getEnumTagSinglePayload((uint64_t)v1223, v1327, v1340) <= 1)
                    {
                      v1220 = (char *)(v1217 + 1);
                      v1221 = v1339;
                      v1222 = ~v1416;
                      goto LABEL_1354;
                    }
                  }
                  else
                  {
                    v1218 = v1217[2];
                    if (v1218 >= 0xFFFFFFFF)
                      LODWORD(v1218) = -1;
                    v1219 = a1;
                    v199 = v427;
                    if ((int)v1218 - 1 < 0)
                    {
                      v1220 = (char *)(v1217 + 1);
                      v1221 = v1339;
                      v1222 = ~v1416;
                      v1223 = (const void *)(((unint64_t)v1217 + v1339) & v1383);
LABEL_1354:
                      *(_BYTE *)v1216 = *(_BYTE *)v1217;
                      v1216[1] = v1217[1];
                      v1216[2] = *((_QWORD *)v1220 + 1);
                      v1216[3] = *((_QWORD *)v1220 + 2);
                      v1216[4] = *((_QWORD *)v1220 + 3);
                      v1216[5] = *((_QWORD *)v1220 + 4);
                      v1216[6] = *((_QWORD *)v1220 + 5);
                      v1216[7] = *((_QWORD *)v1220 + 6);
                      v1216[8] = *((_QWORD *)v1220 + 7);
                      v1216[9] = *((_QWORD *)v1220 + 8);
                      v1216[10] = *((_QWORD *)v1220 + 9);
                      v1216[11] = *((_QWORD *)v1220 + 10);
                      v1216[12] = *((_QWORD *)v1220 + 11);
                      v1224 = *((_QWORD *)v1220 + 12);
                      *((_BYTE *)v1216 + 112) = v1220[104];
                      v1216[13] = v1224;
                      v1225 = (void *)(((unint64_t)v1216 + v1221) & v1222);
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      if (__swift_getEnumTagSinglePayload((uint64_t)v1223, 1, v1340))
                      {
                        memcpy(v1225, v1223, v1401);
                      }
                      else
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v1324 + 16))(v1225, v1223, v1340);
                        __swift_storeEnumTagSinglePayload((uint64_t)v1225, 0, 1, v1340);
                      }
                      v97 = a1;
                      v205 = v1426;
                      v188 = v1284;
                      v199 = v427;
                      goto LABEL_1359;
                    }
                  }
                  memcpy(v1216, v1217, v1402);
                  v205 = v1426;
                  v97 = v1219;
LABEL_1359:
                  v526 = 20;
                  goto LABEL_1360;
                }
              }
              memcpy(v820, v821, v1402);
              goto LABEL_740;
            }
          }
LABEL_1273:
          memcpy(v431, v432, v1286);
          goto LABEL_1347;
        case 0x15:
          v199 = v189;
          if (__swift_getEnumTagSinglePayload((uint64_t)v190, 1, v1356))
          {
            memcpy(v189, v190, v1440);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1343 + 16))(v189, v190, v1356);
            __swift_storeEnumTagSinglePayload((uint64_t)v189, 0, 1, v1356);
          }
          v205 = v1426;
          v97 = a1;
          v437 = ((unint64_t)v189 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v438 = ((unint64_t)v190 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v439 = *(_QWORD *)(v438 + 24);
          *(_QWORD *)(v437 + 24) = v439;
          *(_QWORD *)(v437 + 32) = *(_QWORD *)(v438 + 32);
          (**(void (***)(unint64_t, unint64_t))(v439 - 8))(v437, v438);
          v440 = (v437 + 47) & 0xFFFFFFFFFFFFFFF8;
          v441 = (v438 + 47) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v440 = *(_QWORD *)v441;
          *(_QWORD *)(v440 + 8) = *(_QWORD *)(v441 + 8);
          *(_BYTE *)(v440 + 16) = *(_BYTE *)(v441 + 16);
          v442 = 21;
          goto LABEL_964;
        case 0x16:
          v1459 = ~v1417;
          v1432 = ~v1381;
          if (__swift_getEnumTagSinglePayload((uint64_t)v190, 1, v1356))
          {
            memcpy(v189, v190, v1440);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1343 + 16))(v189, v190, v1356);
            __swift_storeEnumTagSinglePayload((uint64_t)v189, 0, 1, v1356);
          }
          v443 = ((unint64_t)v189 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v444 = ((unint64_t)v190 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v445 = *(_QWORD *)(v444 + 24);
          *(_QWORD *)(v443 + 24) = v445;
          *(_QWORD *)(v443 + 32) = *(_QWORD *)(v444 + 32);
          (**(void (***)(unint64_t, unint64_t))(v445 - 8))(v443, v444);
          v446 = (_QWORD *)((v443 + 47) & 0xFFFFFFFFFFFFFFF8);
          v447 = (_QWORD *)((v444 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v446 = *v447;
          v446[1] = v447[1];
          v448 = (_QWORD *)(((unint64_t)v446 + 23) & 0xFFFFFFFFFFFFF8);
          v449 = (_QWORD *)(((unint64_t)v447 + 23) & 0xFFFFFFFFFFFFF8);
          *v448 = *v449;
          v450 = (_QWORD *)(((unint64_t)v448 + 15) & 0xFFFFFFFFFFFFFFF8);
          v451 = (_QWORD *)(((unint64_t)v449 + 15) & 0xFFFFFFFFFFFFFFF8);
          *v450 = *v451;
          v450[1] = v451[1];
          v452 = (_QWORD *)(((unint64_t)v450 + v1322) & v1400);
          v453 = (_QWORD *)(((unint64_t)v451 + v1322) & v1400);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v1362 > 0x7FFFFFFE)
          {
            v456 = (_QWORD *)(((unint64_t)v453 + 23) & 0xFFFFFFFFFFFFFFF8);
            v457 = ((unint64_t)v456 + 23) & 0xFFFFFFFFFFFFFFF8;
            v455 = v1339;
            if (!__swift_getEnumTagSinglePayload((v1420 + v457 + 33) & v192, v1362, v1321))
            {
              v1447 = v190;
              goto LABEL_605;
            }
          }
          else
          {
            v454 = v453[1];
            if (v454 >= 0xFFFFFFFF)
              LODWORD(v454) = -1;
            v455 = v1339;
            if ((v454 + 1) <= 1)
            {
              v1447 = v190;
              v456 = (_QWORD *)(((unint64_t)v453 + 23) & 0xFFFFFFFFFFFFFFF8);
              v457 = ((unint64_t)v456 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_605:
              *v452 = *v453;
              v452[1] = v453[1];
              v702 = (_QWORD *)(((unint64_t)v452 + 23) & 0xFFFFFFFFFFFFFFF8);
              *v702 = *v456;
              v702[1] = v456[1];
              v703 = ((unint64_t)v702 + 23) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)v703 = *(_QWORD *)v457;
              *(_QWORD *)(v703 + 8) = *(_QWORD *)(v457 + 8);
              *(_BYTE *)(v703 + 16) = *(_BYTE *)(v457 + 16);
              v704 = ((unint64_t)v702 + 47) & 0xFFFFFFFFFFFFFFF8;
              v705 = ((unint64_t)v456 + 47) & 0xFFFFFFFFFFFFFFF8;
              v706 = *(void **)v705;
              *(_QWORD *)v704 = *(_QWORD *)v705;
              *(_BYTE *)(v704 + 8) = *(_BYTE *)(v705 + 8);
              v707 = (v1420 + 9 + v704) & v192;
              v708 = (v1420 + 9 + v705) & v192;
              v709 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1358 + 16);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              v710 = v706;
              v709(v707, v708, v1321);
              v190 = v1447;
              v455 = v1339;
              v458 = v1436;
LABEL_606:
              *((_BYTE *)v452 + v458) = *((_BYTE *)v453 + v458);
              v711 = ((unint64_t)v452 + v458) & 0xFFFFFFFFFFFFFFF8;
              v712 = ((unint64_t)v453 + v458) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)(v711 + 8) = *(_QWORD *)(v712 + 8);
              *(_QWORD *)(v711 + 16) = *(_QWORD *)(v712 + 16);
              v713 = (void *)((v1296 + v711) & v1387);
              v714 = (_BYTE *)((v1296 + v712) & v1387);
              sub_21D7C4C20();
              v715 = v1356;
              v716 = v1399;
              if (v1405)
              {
                v717 = v1333;
                if (v1333 >= v1338)
                {
                  v718 = (uint64_t)v714;
                  v719 = v1336;
                }
                else
                {
                  v718 = (unint64_t)&v714[v1337] & v1385;
                  v717 = v1338;
                  v719 = v1341;
                }
                v722 = __swift_getEnumTagSinglePayload(v718, v717, v719);
              }
              else
              {
                if (!v714[v1354])
                  goto LABEL_1060;
                v720 = (v714[v1354] - 1) << v1364;
                if (v1354 > 3)
                  v720 = 0;
                if ((_DWORD)v1354)
                {
                  if (v1354 <= 3)
                    v721 = v1354;
                  else
                    v721 = 4;
                  __asm { BR              X11 }
                }
                v722 = v720 + 1;
              }
              if (v722)
              {
                memcpy(v713, v714, v1404);
                goto LABEL_1062;
              }
LABEL_1060:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1330 + 16))(v713, v714, v1336);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1331 + 16))(((unint64_t)v713 + v1337) & v1385, (unint64_t)&v714[v1337] & v1385, v1341);
              if (!v1405)
                *((_BYTE *)v713 + v1354) = 0;
LABEL_1062:
              v1005 = (_QWORD *)(((unint64_t)v713 + v1379) & v1432);
              v1006 = (uint64_t *)((unint64_t)&v714[v1379] & v1432);
              if ((v1338 & 0x80000000) != 0)
              {
                v1008 = __swift_getEnumTagSinglePayload(((unint64_t)v1006 + v1323) & v1385, v1338, v1341);
              }
              else
              {
                v1007 = *v1006;
                if ((unint64_t)*v1006 >= 0xFFFFFFFF)
                  LODWORD(v1007) = -1;
                v1008 = v1007 + 1;
              }
              v1009 = ~v1418;
              v1010 = v1440;
              if (v1008)
              {
                memcpy(v1005, v1006, v1397);
              }
              else
              {
                *v1005 = *v1006;
                v1011 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1331 + 16);
                sub_21D7C4C20();
                v455 = v1339;
                v1011(((unint64_t)v1005 + v1323) & v1385, ((unint64_t)v1006 + v1323) & v1385, v1341);
                v1009 = ~v1418;
                v1010 = v1440;
                v716 = v1399;
              }
              v1012 = (_BYTE *)(((unint64_t)v1005 + v1325) & v1009);
              v1013 = (_QWORD *)(((unint64_t)v1006 + v1325) & v1009);
              if (v1335 >= 0x7FFFFFFF)
              {
                if (__swift_getEnumTagSinglePayload(((unint64_t)v1013 + v455) & v1383, v1327, v1340) <= 1)
                {
                  v1454 = v190;
                  v1015 = (char *)(v1013 + 1);
                  v1018 = v455;
                  v1016 = ~v1416;
                  v1017 = (const void *)(((unint64_t)v1013 + v455) & v1383);
                  goto LABEL_1077;
                }
              }
              else
              {
                v1014 = v1013[2];
                if (v1014 >= 0xFFFFFFFF)
                  LODWORD(v1014) = -1;
                if ((int)v1014 - 1 < 0)
                {
                  v1454 = v190;
                  v1015 = (char *)(v1013 + 1);
                  v1016 = ~v1416;
                  v1017 = (const void *)(((unint64_t)v1013 + v455) & v1383);
                  v1018 = v455;
LABEL_1077:
                  *v1012 = *(_BYTE *)v1013;
                  *(_QWORD *)((((unint64_t)v1005 + v1325) & v1009) + 8) = v1013[1];
                  *(_QWORD *)((((unint64_t)v1005 + v1325) & v1009) + 0x10) = *((_QWORD *)v1015 + 1);
                  *(_QWORD *)((((unint64_t)v1005 + v1325) & v1009) + 0x18) = *((_QWORD *)v1015 + 2);
                  *(_QWORD *)((((unint64_t)v1005 + v1325) & v1009) + 0x20) = *((_QWORD *)v1015 + 3);
                  *(_QWORD *)((((unint64_t)v1005 + v1325) & v1009) + 0x28) = *((_QWORD *)v1015 + 4);
                  *(_QWORD *)((((unint64_t)v1005 + v1325) & v1009) + 0x30) = *((_QWORD *)v1015 + 5);
                  *(_QWORD *)((((unint64_t)v1005 + v1325) & v1009) + 0x38) = *((_QWORD *)v1015 + 6);
                  *(_QWORD *)((((unint64_t)v1005 + v1325) & v1009) + 0x40) = *((_QWORD *)v1015 + 7);
                  *(_QWORD *)((((unint64_t)v1005 + v1325) & v1009) + 0x48) = *((_QWORD *)v1015 + 8);
                  *(_QWORD *)((((unint64_t)v1005 + v1325) & v1009) + 0x50) = *((_QWORD *)v1015 + 9);
                  *(_QWORD *)((((unint64_t)v1005 + v1325) & v1009) + 0x58) = *((_QWORD *)v1015 + 10);
                  *(_QWORD *)((((unint64_t)v1005 + v1325) & v1009) + 0x60) = *((_QWORD *)v1015 + 11);
                  v1019 = *((_QWORD *)v1015 + 12);
                  *(_BYTE *)((((unint64_t)v1005 + v1325) & v1009) + 0x70) = v1015[104];
                  *(_QWORD *)((((unint64_t)v1005 + v1325) & v1009) + 0x68) = v1019;
                  v1020 = (void *)((unint64_t)&v1012[v1018] & v1016);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (__swift_getEnumTagSinglePayload((uint64_t)v1017, 1, v1340))
                  {
                    memcpy(v1020, v1017, v1401);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1324 + 16))(v1020, v1017, v1340);
                    __swift_storeEnumTagSinglePayload((uint64_t)v1020, 0, 1, v1340);
                  }
                  v1010 = v1440;
                  v190 = v1454;
                  v1021 = v1402;
                  v715 = v1356;
                  v716 = v1399;
LABEL_1082:
                  v1022 = (unint64_t)&v1012[v1417 + v1021];
                  v1023 = (void *)(v1022 & v1459);
                  v1024 = (unint64_t)v1013 + v1417 + v1021;
                  v1025 = (const void *)(v1024 & v1459);
                  if (v1328 < 0x7FFFFFFF)
                  {
                    if (*(_QWORD *)((((unint64_t)v1025 + v1406) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                      goto LABEL_1084;
                  }
                  else if (__swift_getEnumTagSinglePayload(v1024 & v1459, v716, v715) >= 2)
                  {
LABEL_1084:
                    memcpy(v1023, v1025, v1326);
                    v1026 = v1326;
                    goto LABEL_1094;
                  }
                  if (__swift_getEnumTagSinglePayload((uint64_t)v1025, 1, v715))
                  {
                    memcpy(v1023, v1025, v1010);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v1023, v1025, v715);
                    __swift_storeEnumTagSinglePayload((uint64_t)v1023, 0, 1, v715);
                  }
                  v1027 = ((unint64_t)v1023 + v1406) & 0xFFFFFFFFFFFFFFF8;
                  v1028 = ((unint64_t)v1025 + v1406) & 0xFFFFFFFFFFFFFFF8;
                  v1029 = *(_QWORD *)(v1028 + 24);
                  *(_QWORD *)(v1027 + 24) = v1029;
                  *(_QWORD *)(v1027 + 32) = *(_QWORD *)(v1028 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v1029 - 8))(v1027, v1028);
                  v1030 = (v1027 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1031 = (v1028 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1032 = *(_QWORD *)(v1031 + 24);
                  if (v1032 < 0xFFFFFFFF)
                  {
                    v1033 = *(_OWORD *)v1031;
                    v1034 = *(_OWORD *)(v1031 + 16);
                    *(_QWORD *)(v1030 + 32) = *(_QWORD *)(v1031 + 32);
                    *(_OWORD *)v1030 = v1033;
                    *(_OWORD *)(v1030 + 16) = v1034;
                  }
                  else
                  {
                    *(_QWORD *)(v1030 + 24) = v1032;
                    *(_QWORD *)(v1030 + 32) = *(_QWORD *)(v1031 + 32);
                    (**(void (***)(unint64_t, unint64_t))(v1032 - 8))(v1030, (v1028 + 47) & 0xFFFFFFFFFFFFFFF8);
                  }
                  v1035 = (_QWORD *)((v1030 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v1036 = (_QWORD *)((v1031 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v1035 = *v1036;
                  v1035[1] = v1036[1];
                  sub_21D7C4C20();
                  v1026 = v1326;
                  if ((_DWORD)v716)
                    v1026 = ((((((v1353 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                          + 16;
LABEL_1094:
                  v1037 = (v1022 | v1419) + v1026;
                  v1038 = (void *)(v1037 & v1459);
                  v1039 = (v1024 | v1419) + v1026;
                  v1040 = (const void *)(v1039 & v1459);
                  if (v1328 < 0x7FFFFFFF)
                  {
                    if (*(_QWORD *)((((unint64_t)v1040 + v1406) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                      goto LABEL_1096;
                  }
                  else if (__swift_getEnumTagSinglePayload(v1039 & v1459, v716, v715) >= 2)
                  {
LABEL_1096:
                    memcpy(v1038, v1040, v1326);
                    v1041 = v1326;
                    goto LABEL_1106;
                  }
                  if (__swift_getEnumTagSinglePayload((uint64_t)v1040, 1, v715))
                  {
                    memcpy(v1038, v1040, v1010);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v1038, v1040, v715);
                    __swift_storeEnumTagSinglePayload((uint64_t)v1038, 0, 1, v715);
                  }
                  v1042 = ((unint64_t)v1038 + v1406) & 0xFFFFFFFFFFFFFFF8;
                  v1043 = ((unint64_t)v1040 + v1406) & 0xFFFFFFFFFFFFFFF8;
                  v1044 = *(_QWORD *)(v1043 + 24);
                  *(_QWORD *)(v1042 + 24) = v1044;
                  *(_QWORD *)(v1042 + 32) = *(_QWORD *)(v1043 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v1044 - 8))(v1042, v1043);
                  v1045 = (v1042 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1046 = (v1043 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1047 = *(_QWORD *)(v1046 + 24);
                  if (v1047 < 0xFFFFFFFF)
                  {
                    v1048 = *(_OWORD *)v1046;
                    v1049 = *(_OWORD *)(v1046 + 16);
                    *(_QWORD *)(v1045 + 32) = *(_QWORD *)(v1046 + 32);
                    *(_OWORD *)v1045 = v1048;
                    *(_OWORD *)(v1045 + 16) = v1049;
                  }
                  else
                  {
                    *(_QWORD *)(v1045 + 24) = v1047;
                    *(_QWORD *)(v1045 + 32) = *(_QWORD *)(v1046 + 32);
                    (**(void (***)(unint64_t, unint64_t))(v1047 - 8))(v1045, v1046);
                  }
                  v1050 = (_QWORD *)((v1045 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v1051 = (_QWORD *)((v1046 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v1050 = *v1051;
                  v1050[1] = v1051[1];
                  sub_21D7C4C20();
                  v1041 = v1326;
                  if ((_DWORD)v716)
                    v1041 = ((((((v1353 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                          + 16;
LABEL_1106:
                  v1052 = (char *)(((v1037 | v1419) + v1041) & v1459);
                  v1053 = (char *)(((v1039 | v1419) + v1041) & v1459);
                  if (v1328 < 0x7FFFFFFF)
                  {
                    v1054 = v715;
                    v934 = a1;
                    v205 = v1426;
                    if (*(_QWORD *)(((unint64_t)&v1053[v1406] & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                    {
LABEL_1108:
                      memcpy(v1052, v1053, v1326);
                      v1056 = v1434;
                      v1057 = v1320;
                      v1058 = v1353 + 1;
                      if (!(_DWORD)v716)
                        goto LABEL_1120;
                      goto LABEL_1119;
                    }
                  }
                  else
                  {
                    v1054 = v715;
                    v1055 = __swift_getEnumTagSinglePayload((uint64_t)v1053, v716, v715);
                    v934 = a1;
                    v205 = v1426;
                    if (v1055 >= 2)
                      goto LABEL_1108;
                  }
                  if (__swift_getEnumTagSinglePayload((uint64_t)v1053, 1, v1054))
                  {
                    memcpy(v1052, v1053, v1010);
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(v1343 + 16))(v1052, v1053, v1054);
                    __swift_storeEnumTagSinglePayload((uint64_t)v1052, 0, 1, v1054);
                  }
                  v1059 = (unint64_t)&v1052[v1406] & 0xFFFFFFFFFFFFFFF8;
                  v1060 = (unint64_t)&v1053[v1406] & 0xFFFFFFFFFFFFFFF8;
                  v1061 = *(_QWORD *)(v1060 + 24);
                  *(_QWORD *)(v1059 + 24) = v1061;
                  *(_QWORD *)(v1059 + 32) = *(_QWORD *)(v1060 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v1061 - 8))(v1059, v1060);
                  v1062 = (v1059 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1063 = (v1060 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1064 = *(_QWORD *)(v1063 + 24);
                  v1056 = v1434;
                  v1057 = v1320;
                  if (v1064 < 0xFFFFFFFF)
                  {
                    v1065 = *(_OWORD *)v1063;
                    v1066 = *(_OWORD *)(v1063 + 16);
                    *(_QWORD *)(v1062 + 32) = *(_QWORD *)(v1063 + 32);
                    *(_OWORD *)v1062 = v1065;
                    *(_OWORD *)(v1062 + 16) = v1066;
                  }
                  else
                  {
                    *(_QWORD *)(v1062 + 24) = v1064;
                    *(_QWORD *)(v1062 + 32) = *(_QWORD *)(v1063 + 32);
                    (**(void (***)(unint64_t, unint64_t))(v1064 - 8))(v1062, v1063);
                  }
                  v1067 = (_QWORD *)((v1062 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v1068 = (_QWORD *)((v1063 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v1067 = *v1068;
                  v1067[1] = v1068[1];
                  sub_21D7C4C20();
                  v934 = a1;
                  v205 = v1426;
                  v1058 = v1353 + 1;
                  if (!(_DWORD)v716)
                    goto LABEL_1120;
                  v1326 = ((((((v1353 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                        + 16;
LABEL_1119:
                  v1058 = v1353;
LABEL_1120:
                  *(_QWORD *)&v1052[v1326] = *(_QWORD *)&v1053[v1326];
                  v1069 = v1391
                        + ((v1317
                          + ((v1317
                            + ((v1390
                              + ((v1325
                                + ((v1379
                                  + ((v1398
                                    + ((((((v1322
                                          + ((((((((v1058 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                            + 15) & 0xFFFFFFFFFFFFFFF8)) & v1400)
                                        + v1436) & 0xFFFFFFFFFFFFFFF8)
                                      + 23) & 0xFFFFFFFFFFFFFFF8)) & v1387)) & v1432)) & v1371)) & v1459)) & v1459)) & v1459);
                  if (v1319 > v1069)
                    v1069 = v1402 + ((v1416 + 8) & ~v1418);
                  if (v1069 <= v1318)
                    v1069 = v1318;
                  if (v1069 <= v1057)
                    v1069 = v1057;
                  if (v1069 <= v1316)
                    v1069 = v1316;
                  if (v1069 <= v1315)
                    v1069 = v1315;
                  if (v1069 <= v1312)
                    v1069 = v1312;
                  if (v1069 <= v1313)
                    v1069 = (((((v1434 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                          + 16;
                  if (v1069 <= v1314)
                    v1069 = v1314;
                  if (v1069 <= v1311)
                    v1069 = v1311;
                  if (v1069 <= v1310)
                    v1069 = v1310;
                  if (v1069 <= v1308)
                    v1069 = v1308;
                  if (v1069 <= v1369)
                    v1069 = v1369;
                  if (v1069 <= v1307)
                    v1069 = v1307;
                  if (v1069 <= v1395)
                    v1069 = v1395;
                  if (v1069 <= v1309)
                    v1069 = v1309;
                  if (v1069 <= v1319)
                    v1069 = v1402 + ((v1416 + 8) & ~v1418);
                  if (v1069 <= v1306)
                    v1069 = v1306;
                  if (v1069 <= v1373)
                    v1069 = ((v1434 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
                  if (v1069 <= v1274)
                    v1069 = v1274;
                  if (v1069 <= v1276)
                    v1069 = v1276;
                  if (v1069 <= v1275)
                    v1069 = v1275;
                  if (v1069 <= v1278)
                    v1069 = v1278;
                  if (v1069 <= v79)
                    v1069 = v79;
                  if (v1069 <= v1277)
                    v1069 = v1277;
                  if (v1069 <= v1279)
                    v1069 = v1279;
                  if (v1069 <= v1393)
                    v1069 = v1393;
                  if (v1069 <= v1281)
                    v1069 = v1281;
                  if (v1069 <= v1348)
                    v1069 = v1348;
                  if (v1069 <= v1360)
                    v1069 = v1360;
                  if (v1069 <= v1056)
                    v1069 = v1056;
                  if (v1069 <= v1282)
                    v1069 = v1282;
                  if (v1069 <= v1283)
                    v1069 = v1283;
                  if (v1069 <= v1280)
                    v1069 = v1280;
                  if (v1069 <= 8)
                    v1069 = 8;
                  v199 = v189;
                  *((_BYTE *)v189 + v1069) = 22;
                  goto LABEL_1189;
                }
              }
              v1021 = v1402;
              memcpy(v1012, v1013, v1402);
              goto LABEL_1082;
            }
          }
          v458 = v1436;
          memcpy(v452, v453, v1436);
          goto LABEL_606;
        case 0x17:
          *v189 = *v190;
          v1408 = v189;
          v215 = ((unint64_t)v189 + v1418 + 8) & v1371;
          v216 = ((unint64_t)v190 + v1418 + 8) & v1371;
          *(_BYTE *)v215 = *(_BYTE *)v216;
          *(_QWORD *)(v215 + 8) = *(_QWORD *)(v216 + 8);
          *(_QWORD *)(v215 + 16) = *(_QWORD *)(v216 + 0x10);
          *(_QWORD *)(v215 + 24) = *(_QWORD *)(v216 + 0x18);
          *(_QWORD *)(v215 + 32) = *(_QWORD *)(v216 + 0x20);
          *(_QWORD *)(v215 + 40) = *(_QWORD *)(v216 + 0x28);
          *(_QWORD *)(v215 + 48) = *(_QWORD *)(v216 + 0x30);
          *(_QWORD *)(v215 + 56) = *(_QWORD *)(v216 + 0x38);
          *(_QWORD *)(v215 + 64) = *(_QWORD *)(v216 + 0x40);
          *(_QWORD *)(v215 + 72) = *(_QWORD *)(v216 + 0x48);
          *(_QWORD *)(v215 + 80) = *(_QWORD *)(v216 + 0x50);
          *(_QWORD *)(v215 + 88) = *(_QWORD *)(v216 + 0x58);
          *(_QWORD *)(v215 + 96) = *(_QWORD *)(v216 + 0x60);
          v217 = *(_QWORD *)(v216 + 0x68);
          *(_BYTE *)(v215 + 112) = *(_BYTE *)(v216 + 0x70);
          *(_QWORD *)(v215 + 104) = v217;
          v218 = (void *)((v1339 + v215) & v1383);
          v219 = (const void *)((v1339 + v216) & v1383);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (__swift_getEnumTagSinglePayload((uint64_t)v219, 1, v1340))
          {
            memcpy(v218, v219, v1401);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1324 + 16))(v218, v219, v1340);
            __swift_storeEnumTagSinglePayload((uint64_t)v218, 0, 1, v1340);
          }
          v97 = a1;
          v205 = v1426;
          v271 = v1284;
          v272 = 23;
LABEL_410:
          v199 = v1408;
          *((_BYTE *)v1408 + v271) = v272;
          goto LABEL_1361;
        case 0x18:
          v199 = v189;
          if (__swift_getEnumTagSinglePayload((uint64_t)v190, 1, v1356))
          {
            memcpy(v189, v190, v1440);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1343 + 16))(v189, v190, v1356);
            __swift_storeEnumTagSinglePayload((uint64_t)v189, 0, 1, v1356);
          }
          v205 = v1426;
          v97 = a1;
          v459 = ((unint64_t)v189 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v460 = ((unint64_t)v190 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v461 = *(_QWORD *)(v460 + 24);
          *(_QWORD *)(v459 + 24) = v461;
          *(_QWORD *)(v459 + 32) = *(_QWORD *)(v460 + 32);
          (**(void (***)(unint64_t, unint64_t))(v461 - 8))(v459, v460);
          v462 = (_QWORD *)((v460 + 47) & 0xFFFFFFFFFFFFF8);
          v463 = (_QWORD *)((v459 + 47) & 0xFFFFFFFFFFFFF8);
          *v463 = *v462;
          v464 = (_QWORD *)(((unint64_t)v463 + 15) & 0xFFFFFFFFFFFFFFF8);
          v465 = (_QWORD *)(((unint64_t)v462 + 15) & 0xFFFFFFFFFFFFFFF8);
          *v464 = *v465;
          v464[1] = v465[1];
          v466 = 24;
          goto LABEL_763;
        case 0x19:
          v199 = v189;
          *v189 = *v190;
          v200 = 25;
          goto LABEL_289;
        case 0x1A:
          v199 = v189;
          *v189 = *v190;
          v200 = 26;
          goto LABEL_289;
        case 0x1B:
          v199 = v189;
          *v189 = *v190;
          v200 = 27;
          goto LABEL_289;
        case 0x1C:
          v199 = v189;
          *v189 = *v190;
          v200 = 28;
          goto LABEL_289;
        case 0x1D:
          v220 = v190[3];
          v199 = v189;
          v189[3] = v220;
          v189[4] = v190[4];
          (**(void (***)(_QWORD *, _QWORD *))(v220 - 8))(v189, v190);
          v221 = (char *)(((unint64_t)v189 + v1403) & v1367);
          v222 = (const void *)(((unint64_t)v190 + v1403) & v1367);
          if (__swift_getEnumTagSinglePayload((uint64_t)v222, 1, v1356))
          {
            v223 = v1440;
            memcpy(v221, v222, v1440);
            v205 = v1426;
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(v1343 + 16))(v221, v222, v1356);
            __swift_storeEnumTagSinglePayload((uint64_t)v221, 0, 1, v1356);
            v205 = v1426;
            v223 = v1440;
          }
          v97 = a1;
          v467 = &v221[v223];
          *v467 = *((_BYTE *)v222 + v223);
          v467[1] = *((_BYTE *)v222 + v223 + 1);
          v468 = (unint64_t)&v221[v223 + 9] & 0xFFFFFFFFFFFFFFF8;
          v469 = ((unint64_t)v222 + v223 + 9) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v468 = *(_QWORD *)v469;
          *(_QWORD *)(v468 + 8) = *(_QWORD *)(v469 + 8);
          *(_BYTE *)(v468 + 16) = *(_BYTE *)(v469 + 16);
          v442 = 29;
          goto LABEL_964;
        case 0x1E:
          v224 = v190[3];
          v189[3] = v224;
          v189[4] = v190[4];
          (**(void (***)(_QWORD *, _QWORD *))(v224 - 8))(v189, v190);
          *((_BYTE *)v189 + 40) = *((_BYTE *)v190 + 40);
          *((_BYTE *)v189 + 41) = *((_BYTE *)v190 + 41);
          *((_BYTE *)v189 + 42) = *((_BYTE *)v190 + 42);
          *((_BYTE *)v189 + 43) = *((_BYTE *)v190 + 43);
          v225 = (_QWORD *)(((unint64_t)v189 + 51) & 0xFFFFFFFFFFFFFFF8);
          v226 = (_QWORD *)(((unint64_t)v190 + 51) & 0xFFFFFFFFFFFFFFF8);
          *v225 = *v226;
          v225[1] = v226[1];
          v227 = (_QWORD *)(((unint64_t)v225 + 23) & 0xFFFFFFFFFFFFFFF8);
          v228 = (_QWORD *)(((unint64_t)v226 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v227 = *v228;
          v227[1] = v228[1];
          v229 = (void *)(((unint64_t)v227 + v1388) & v1367);
          v230 = (const void *)(((unint64_t)v228 + v1388) & v1367);
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (__swift_getEnumTagSinglePayload((uint64_t)v230, 1, v1356))
          {
            memcpy(v229, v230, v1440);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v229, v230, v1356);
            __swift_storeEnumTagSinglePayload((uint64_t)v229, 0, 1, v1356);
          }
          v254 = v1424;
          v205 = v1426;
          v199 = v189;
          *((_BYTE *)v189 + v1284) = 30;
          goto LABEL_290;
        case 0x1F:
          v199 = v189;
          *v189 = *v190;
          v200 = 31;
          goto LABEL_289;
        case 0x20:
          *v189 = *v190;
          v189[1] = v190[1];
          v231 = ((unint64_t)v189 + 23) & 0xFFFFFFFFFFFFFFF8;
          v232 = ((unint64_t)v190 + 23) & 0xFFFFFFFFFFFFFFF8;
          v233 = *(_QWORD *)(v232 + 24);
          *(_QWORD *)(v231 + 24) = v233;
          *(_QWORD *)(v231 + 32) = *(_QWORD *)(v232 + 32);
          v234 = **(void (***)(unint64_t, unint64_t, uint64_t))(v233 - 8);
          sub_21D7C4C20();
          v234(v231, v232, v233);
          v235 = (void *)((v1403 + v231) & v1367);
          v236 = (const void *)((v1403 + v232) & v1367);
          if (__swift_getEnumTagSinglePayload((uint64_t)v236, 1, v1356))
          {
            memcpy(v235, v236, v1440);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v235, v236, v1356);
            __swift_storeEnumTagSinglePayload((uint64_t)v235, 0, 1, v1356);
          }
          v97 = a1;
          v254 = v1424;
          v205 = v1426;
          v199 = v189;
          *((_BYTE *)v189 + v1284) = 32;
          goto LABEL_1362;
        case 0x21:
          if (v1405)
          {
            v237 = v1338;
            v238 = v1354;
            if (v1333 >= v1338)
            {
              v239 = (uint64_t)v190;
              v237 = v1333;
              v240 = v1336;
            }
            else
            {
              v239 = ((unint64_t)v190 + v1337) & v1385;
              v240 = v1341;
            }
            v653 = __swift_getEnumTagSinglePayload(v239, v237, v240);
            v470 = v1356;
            v199 = v189;
          }
          else
          {
            v238 = v1354;
            v470 = v1356;
            v199 = v189;
            if (!*((_BYTE *)v190 + v1354))
              goto LABEL_757;
            v471 = (*((unsigned __int8 *)v190 + v1354) - 1) << v1364;
            if (v1354 > 3)
              v471 = 0;
            if ((_DWORD)v1354)
            {
              if (v1354 <= 3)
                v472 = v1354;
              else
                v472 = 4;
              __asm { BR              X11 }
            }
            v653 = v471 + 1;
          }
          if (v653)
          {
            memcpy(v199, v190, v1404);
            goto LABEL_759;
          }
LABEL_757:
          (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v1330 + 16))(v199, v190, v1336);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1331 + 16))((unint64_t)&v199[v1337] & v1385, ((unint64_t)v190 + v1337) & v1385, v1341);
          if (!v1405)
            v199[v238] = 0;
LABEL_759:
          v837 = (unint64_t)&v199[v1377] & 0xFFFFFFFFFFFFFFF8;
          v838 = ((unint64_t)v190 + v1377) & 0xFFFFFFFFFFFFFFF8;
          v839 = *(_QWORD *)(v838 + 24);
          *(_QWORD *)(v837 + 24) = v839;
          *(_QWORD *)(v837 + 32) = *(_QWORD *)(v838 + 32);
          (**(void (***)(unint64_t, unint64_t))(v839 - 8))(v837, v838);
          v840 = (void *)((v1403 + v837) & v1367);
          v841 = (const void *)((v1403 + v838) & v1367);
          v205 = v1426;
          v97 = a1;
          if (__swift_getEnumTagSinglePayload((uint64_t)v841, 1, v470))
          {
            memcpy(v840, v841, v1440);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v840, v841, v470);
            __swift_storeEnumTagSinglePayload((uint64_t)v840, 0, 1, v470);
          }
          v842 = (_QWORD *)(((unint64_t)v840 + v1406) & 0xFFFFFFFFFFFFFFF8);
          v843 = (_QWORD *)(((unint64_t)v841 + v1406) & 0xFFFFFFFFFFFFFFF8);
          *v842 = *v843;
          v842[1] = v843[1];
          v844 = (_QWORD *)(((unint64_t)v842 + 23) & 0xFFFFFFFFFFFFFFF8);
          v845 = (_QWORD *)(((unint64_t)v843 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v844 = *v845;
          v844[1] = v845[1];
          v466 = 33;
LABEL_763:
          v199[v1284] = v466;
          sub_21D7C4C20();
          goto LABEL_965;
        case 0x22:
          if (__swift_getEnumTagSinglePayload((uint64_t)v190, 1, v1356))
          {
            memcpy(v189, v190, v1440);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1343 + 16))(v189, v190, v1356);
            __swift_storeEnumTagSinglePayload((uint64_t)v189, 0, 1, v1356);
          }
          v473 = ((unint64_t)v189 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v1448 = v190;
          v474 = ((unint64_t)v190 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v475 = *(_QWORD *)(v474 + 24);
          *(_QWORD *)(v473 + 24) = v475;
          *(_QWORD *)(v473 + 32) = *(_QWORD *)(v474 + 32);
          (**(void (***)(unint64_t, unint64_t))(v475 - 8))(v473, v474);
          v476 = (v1439 + v473) & v1371;
          v477 = (v1439 + v474) & v1371;
          *(_BYTE *)v476 = *(_BYTE *)v477;
          *(_QWORD *)(v476 + 8) = *(_QWORD *)(v477 + 8);
          *(_QWORD *)(v476 + 16) = *(_QWORD *)(v477 + 0x10);
          *(_QWORD *)(v476 + 24) = *(_QWORD *)(v477 + 0x18);
          *(_QWORD *)(v476 + 32) = *(_QWORD *)(v477 + 0x20);
          *(_QWORD *)(v476 + 40) = *(_QWORD *)(v477 + 0x28);
          *(_QWORD *)(v476 + 48) = *(_QWORD *)(v477 + 0x30);
          *(_QWORD *)(v476 + 56) = *(_QWORD *)(v477 + 0x38);
          *(_QWORD *)(v476 + 64) = *(_QWORD *)(v477 + 0x40);
          *(_QWORD *)(v476 + 72) = *(_QWORD *)(v477 + 0x48);
          *(_QWORD *)(v476 + 80) = *(_QWORD *)(v477 + 0x50);
          *(_QWORD *)(v476 + 88) = *(_QWORD *)(v477 + 0x58);
          *(_QWORD *)(v476 + 96) = *(_QWORD *)(v477 + 0x60);
          v478 = *(_QWORD *)(v477 + 0x68);
          *(_BYTE *)(v476 + 112) = *(_BYTE *)(v477 + 0x70);
          *(_QWORD *)(v476 + 104) = v478;
          v479 = (void *)((v1339 + v476) & v1383);
          v480 = (const void *)((v1339 + v477) & v1383);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (__swift_getEnumTagSinglePayload((uint64_t)v480, 1, v1340))
          {
            memcpy(v479, v480, v1401);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1324 + 16))(v479, v480, v1340);
            __swift_storeEnumTagSinglePayload((uint64_t)v479, 0, 1, v1340);
          }
          v612 = (_QWORD *)((v1389 + v476) & 0xFFFFFFFFFFFFFFF8);
          v613 = (_QWORD *)((v1389 + v477) & 0xFFFFFFFFFFFFFFF8);
          *v612 = *v613;
          v612[1] = v613[1];
          v614 = ((unint64_t)v612 + 23) & 0xFFFFFFFFFFFFFFF8;
          v615 = ((unint64_t)v613 + 23) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v614 = *(_QWORD *)v615;
          *(_QWORD *)(v614 + 8) = *(_QWORD *)(v615 + 8);
          *(_BYTE *)(v614 + 16) = *(_BYTE *)(v615 + 16);
          *(_BYTE *)(v614 + 17) = *(_BYTE *)(v615 + 17);
          v616 = (void *)((v1293 + v614) & v1387);
          v617 = (_BYTE *)((v1293 + v615) & v1387);
          sub_21D7C4C20();
          sub_21D7C4C20();
          v97 = a1;
          v199 = v189;
          if (v1405)
          {
            v618 = v1338;
            v619 = v1354;
            if (v1333 >= v1338)
            {
              v620 = (uint64_t)v617;
              v618 = v1333;
              v621 = v1336;
            }
            else
            {
              v620 = (unint64_t)&v617[v1337] & v1385;
              v621 = v1341;
            }
            v659 = __swift_getEnumTagSinglePayload(v620, v618, v621);
            v205 = v1426;
            v190 = v1448;
          }
          else
          {
            v619 = v1354;
            v205 = v1426;
            v190 = v1448;
            if (!v617[v1354])
              goto LABEL_817;
            v648 = (v617[v1354] - 1) << v1364;
            if (v1354 > 3)
              v648 = 0;
            if ((_DWORD)v1354)
            {
              if (v1354 <= 3)
                v649 = v1354;
              else
                v649 = 4;
              __asm { BR              X11 }
            }
            v659 = v648 + 1;
          }
          if (v659)
          {
            memcpy(v616, v617, v1404);
            goto LABEL_819;
          }
LABEL_817:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1330 + 16))(v616, v617, v1336);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1331 + 16))(((unint64_t)v616 + v1337) & v1385, (unint64_t)&v617[v1337] & v1385, v1341);
          if (!v1405)
            *((_BYTE *)v616 + v619) = 0;
LABEL_819:
          *((_BYTE *)v189 + v1284) = 34;
          goto LABEL_1361;
        case 0x23:
          if (__swift_getEnumTagSinglePayload((uint64_t)v190, 1, v1356))
          {
            memcpy(v189, v190, v1440);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1343 + 16))(v189, v190, v1356);
            __swift_storeEnumTagSinglePayload((uint64_t)v189, 0, 1, v1356);
          }
          v1412 = v189;
          v481 = ((unint64_t)v189 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v1449 = v190;
          v482 = ((unint64_t)v190 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v483 = *(_QWORD *)(v482 + 24);
          *(_QWORD *)(v481 + 24) = v483;
          *(_QWORD *)(v481 + 32) = *(_QWORD *)(v482 + 32);
          (**(void (***)(unint64_t, unint64_t))(v483 - 8))(v481, v482);
          v484 = (v1439 + v481) & v1371;
          v485 = (v1439 + v482) & v1371;
          *(_BYTE *)v484 = *(_BYTE *)v485;
          *(_QWORD *)(v484 + 8) = *(_QWORD *)(v485 + 8);
          *(_QWORD *)(v484 + 16) = *(_QWORD *)(v485 + 0x10);
          *(_QWORD *)(v484 + 24) = *(_QWORD *)(v485 + 0x18);
          *(_QWORD *)(v484 + 32) = *(_QWORD *)(v485 + 0x20);
          *(_QWORD *)(v484 + 40) = *(_QWORD *)(v485 + 0x28);
          *(_QWORD *)(v484 + 48) = *(_QWORD *)(v485 + 0x30);
          *(_QWORD *)(v484 + 56) = *(_QWORD *)(v485 + 0x38);
          *(_QWORD *)(v484 + 64) = *(_QWORD *)(v485 + 0x40);
          *(_QWORD *)(v484 + 72) = *(_QWORD *)(v485 + 0x48);
          *(_QWORD *)(v484 + 80) = *(_QWORD *)(v485 + 0x50);
          *(_QWORD *)(v484 + 88) = *(_QWORD *)(v485 + 0x58);
          *(_QWORD *)(v484 + 96) = *(_QWORD *)(v485 + 0x60);
          v486 = *(_QWORD *)(v485 + 0x68);
          *(_BYTE *)(v484 + 112) = *(_BYTE *)(v485 + 0x70);
          *(_QWORD *)(v484 + 104) = v486;
          v487 = (void *)((v1339 + v484) & v1383);
          v488 = (const void *)((v1339 + v485) & v1383);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (__swift_getEnumTagSinglePayload((uint64_t)v488, 1, v1340))
          {
            memcpy(v487, v488, v1401);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1324 + 16))(v487, v488, v1340);
            __swift_storeEnumTagSinglePayload((uint64_t)v487, 0, 1, v1340);
          }
          v622 = (_QWORD *)((v1389 + v484) & 0xFFFFFFFFFFFFFFF8);
          v623 = (_QWORD *)((v1389 + v485) & 0xFFFFFFFFFFFFFFF8);
          *v622 = *v623;
          v622[1] = v623[1];
          v624 = ((unint64_t)v622 + 23) & 0xFFFFFFFFFFFFFFF8;
          v625 = ((unint64_t)v623 + 23) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v624 = *(_QWORD *)v625;
          *(_QWORD *)(v624 + 8) = *(_QWORD *)(v625 + 8);
          *(_BYTE *)(v624 + 16) = *(_BYTE *)(v625 + 16);
          *(_BYTE *)(v624 + 17) = *(_BYTE *)(v625 + 17);
          v626 = (_QWORD *)((v624 + 25) & 0xFFFFFFFFFFFFFFF8);
          v627 = (_QWORD *)((v625 + 25) & 0xFFFFFFFFFFFFFFF8);
          *v626 = *v627;
          v626[1] = v627[1];
          v628 = (_QWORD *)(((unint64_t)v626 + 23) & 0xFFFFFFFFFFFFFFF8);
          v629 = (_QWORD *)(((unint64_t)v627 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v628 = *v629;
          v628[1] = v629[1];
          v630 = (_QWORD *)(((unint64_t)v628 + 23) & 0xFFFFFFFFFFFFFFF8);
          v631 = (_QWORD *)(((unint64_t)v629 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v630 = *v631;
          v630[1] = v631[1];
          v632 = (_QWORD *)(((unint64_t)v630 + 23) & 0xFFFFFFFFFFFFFFF8);
          v633 = (_QWORD *)(((unint64_t)v631 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v632 = *v633;
          v632[1] = v633[1];
          v634 = (_QWORD *)(((unint64_t)v632 + 23) & 0xFFFFFFFFFFFFFFF8);
          v635 = (_QWORD *)(((unint64_t)v633 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v634 = *v635;
          v636 = (void *)(((unint64_t)v634 + v1375) & v1387);
          v637 = (_BYTE *)(((unint64_t)v635 + v1375) & v1387);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v1405)
          {
            v638 = v1338;
            v639 = v1354;
            if (v1333 >= v1338)
            {
              v640 = (uint64_t)v637;
              v638 = v1333;
              v641 = v1336;
            }
            else
            {
              v640 = (unint64_t)&v637[v1337] & v1385;
              v641 = v1341;
            }
            v660 = __swift_getEnumTagSinglePayload(v640, v638, v641);
            v97 = a1;
            v205 = v1426;
            v190 = v1449;
            v650 = v1284;
            v199 = v1412;
          }
          else
          {
            v639 = v1354;
            v97 = a1;
            v205 = v1426;
            v190 = v1449;
            v650 = v1284;
            v199 = v1412;
            if (!v637[v1354])
              goto LABEL_822;
            v651 = (v637[v1354] - 1) << v1364;
            if (v1354 > 3)
              v651 = 0;
            if ((_DWORD)v1354)
            {
              if (v1354 <= 3)
                v652 = v1354;
              else
                v652 = 4;
              __asm { BR              X11 }
            }
            v660 = v651 + 1;
          }
          if (v660)
          {
            memcpy(v636, v637, v1404);
            goto LABEL_824;
          }
LABEL_822:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1330 + 16))(v636, v637, v1336);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1331 + 16))(((unint64_t)v636 + v1337) & v1385, (unint64_t)&v637[v1337] & v1385, v1341);
          if (!v1405)
            *((_BYTE *)v636 + v639) = 0;
LABEL_824:
          v881 = (_QWORD *)(((unint64_t)v636 + v1377) & 0xFFFFFFFFFFFFFFF8);
          v882 = (_QWORD *)((unint64_t)&v637[v1377] & 0xFFFFFFFFFFFFFFF8);
          *v881 = *v882;
          v881[1] = v882[1];
          v199[v650] = 35;
          goto LABEL_965;
        case 0x24:
          v199 = v189;
          if (__swift_getEnumTagSinglePayload((uint64_t)v190, 1, v1356))
          {
            memcpy(v189, v190, v1440);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1343 + 16))(v189, v190, v1356);
            __swift_storeEnumTagSinglePayload((uint64_t)v189, 0, 1, v1356);
          }
          v489 = ((unint64_t)v189 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v490 = ((unint64_t)v190 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v491 = *(_QWORD *)(v490 + 24);
          *(_QWORD *)(v489 + 24) = v491;
          *(_QWORD *)(v489 + 32) = *(_QWORD *)(v490 + 32);
          (**(void (***)(unint64_t, unint64_t))(v491 - 8))(v489, v490);
          v492 = (_QWORD *)((v489 + 47) & 0xFFFFFFFFFFFFFFF8);
          v493 = (_QWORD *)((v490 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v492 = *v493;
          v492[1] = v493[1];
          v494 = ((unint64_t)v492 + 23) & 0xFFFFFFFFFFFFFFF8;
          v495 = ((unint64_t)v493 + 23) & 0xFFFFFFFFFFFFFFF8;
          v496 = *(_QWORD *)(v495 + 24);
          sub_21D7C4C20();
          v97 = a1;
          if (v496 < 0xFFFFFFFF)
          {
            v497 = *(_OWORD *)v495;
            v498 = *(_OWORD *)(v495 + 16);
            *(_QWORD *)(v494 + 32) = *(_QWORD *)(v495 + 32);
            *(_OWORD *)v494 = v497;
            *(_OWORD *)(v494 + 16) = v498;
          }
          else
          {
            *(_QWORD *)(v494 + 24) = v496;
            *(_QWORD *)(v494 + 32) = *(_QWORD *)(v495 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v496 - 8))(v494, v495, v496);
          }
          v254 = v1424;
          v205 = v1426;
          v391 = 36;
          goto LABEL_1301;
        case 0x25:
          v199 = v189;
          if (__swift_getEnumTagSinglePayload((uint64_t)v190, 1, v1356))
          {
            memcpy(v189, v190, v1440);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1343 + 16))(v189, v190, v1356);
            __swift_storeEnumTagSinglePayload((uint64_t)v189, 0, 1, v1356);
          }
          v205 = v1426;
          v97 = a1;
          v499 = ((unint64_t)v189 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v500 = ((unint64_t)v190 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v501 = *(_QWORD *)(v500 + 24);
          *(_QWORD *)(v499 + 24) = v501;
          *(_QWORD *)(v499 + 32) = *(_QWORD *)(v500 + 32);
          (**(void (***)(unint64_t, unint64_t))(v501 - 8))(v499, v500);
          v502 = (_QWORD *)((v499 + 47) & 0xFFFFFFFFFFFFF8);
          v503 = (_QWORD *)((v500 + 47) & 0xFFFFFFFFFFFFF8);
          *v502 = *v503;
          *(_QWORD *)(((unint64_t)v502 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v503 + 15) & 0xFFFFFFFFFFFFF8);
          v442 = 37;
          goto LABEL_964;
        case 0x26:
          if (__swift_getEnumTagSinglePayload((uint64_t)v190, 1, v1356))
          {
            memcpy(v189, v190, v1440);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1343 + 16))(v189, v190, v1356);
            __swift_storeEnumTagSinglePayload((uint64_t)v189, 0, 1, v1356);
          }
          v504 = ((unint64_t)v189 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v505 = ((unint64_t)v190 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v506 = *(_QWORD *)(v505 + 24);
          *(_QWORD *)(v504 + 24) = v506;
          *(_QWORD *)(v504 + 32) = *(_QWORD *)(v505 + 32);
          (**(void (***)(unint64_t, unint64_t))(v506 - 8))(v504, v505);
          v507 = (_QWORD *)((v504 + 47) & 0xFFFFFFFFFFFFFFF8);
          v508 = (_QWORD *)((v505 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v507 = *v508;
          v507[1] = v508[1];
          v509 = (_QWORD *)(((unint64_t)v507 + 23) & 0xFFFFFFFFFFFFFFF8);
          v510 = (_QWORD *)(((unint64_t)v508 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v509 = *v510;
          v509[1] = v510[1];
          v511 = ((unint64_t)v509 + 23) & 0xFFFFFFFFFFFFFFF8;
          v512 = ((unint64_t)v510 + 23) & 0xFFFFFFFFFFFFFFF8;
          v513 = *(_QWORD *)(v512 + 24);
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v513 < 0xFFFFFFFF)
          {
            v514 = *(_OWORD *)v512;
            v515 = *(_OWORD *)(v512 + 16);
            *(_QWORD *)(v511 + 32) = *(_QWORD *)(v512 + 32);
            *(_OWORD *)v511 = v514;
            *(_OWORD *)(v511 + 16) = v515;
          }
          else
          {
            *(_QWORD *)(v511 + 24) = v513;
            *(_QWORD *)(v511 + 32) = *(_QWORD *)(v512 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v513 - 8))(v511, v512, v513);
          }
          v97 = a1;
          v205 = v1426;
          v516 = (v511 + 47) & 0xFFFFFFFFFFFFFFF8;
          v517 = (v512 + 47) & 0xFFFFFFFFFFFFFFF8;
          v518 = *(_QWORD *)(v517 + 24);
          v199 = v189;
          if (v518 < 0xFFFFFFFF)
          {
            v519 = *(_OWORD *)v517;
            v520 = *(_OWORD *)(v517 + 16);
            *(_QWORD *)(v516 + 32) = *(_QWORD *)(v517 + 32);
            *(_OWORD *)v516 = v519;
            *(_OWORD *)(v516 + 16) = v520;
          }
          else
          {
            *(_QWORD *)(v516 + 24) = v518;
            *(_QWORD *)(v516 + 32) = *(_QWORD *)(v517 + 32);
            (**(void (***)(void))(v518 - 8))();
          }
          v254 = v1424;
          v391 = 38;
          goto LABEL_1301;
        case 0x27:
          v199 = v189;
          if (__swift_getEnumTagSinglePayload((uint64_t)v190, 1, v1356))
          {
            memcpy(v189, v190, v1440);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1343 + 16))(v189, v190, v1356);
            __swift_storeEnumTagSinglePayload((uint64_t)v189, 0, 1, v1356);
          }
          v205 = v1426;
          v97 = a1;
          v521 = ((unint64_t)v189 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v522 = ((unint64_t)v190 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v523 = *(_QWORD *)(v522 + 24);
          *(_QWORD *)(v521 + 24) = v523;
          *(_QWORD *)(v521 + 32) = *(_QWORD *)(v522 + 32);
          (**(void (***)(unint64_t, unint64_t))(v523 - 8))(v521, v522);
          *(_QWORD *)((v521 + 47) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v522 + 47) & 0xFFFFFFFFFFFFF8);
          v442 = 39;
          goto LABEL_964;
        case 0x28:
          v241 = v190[3];
          v199 = v189;
          v189[3] = v241;
          v189[4] = v190[4];
          (**(void (***)(_QWORD *, _QWORD *))(v241 - 8))(v189, v190);
          v242 = (void *)(((unint64_t)v189 + v1403) & v1367);
          v243 = (const void *)(((unint64_t)v190 + v1403) & v1367);
          if (__swift_getEnumTagSinglePayload((uint64_t)v243, 1, v1356))
          {
            memcpy(v242, v243, v1440);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v242, v243, v1356);
            __swift_storeEnumTagSinglePayload((uint64_t)v242, 0, 1, v1356);
          }
          v205 = v1426;
          v97 = a1;
          *(_QWORD *)(((unint64_t)v242 + v1406) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v243
                                                                                          + v1406) & 0xFFFFFFFFFFFFF8);
          v442 = 40;
          goto LABEL_964;
        case 0x29:
          v244 = v190[3];
          v199 = v189;
          v189[3] = v244;
          v189[4] = v190[4];
          (**(void (***)(_QWORD *, _QWORD *))(v244 - 8))(v189, v190);
          v245 = (void *)(((unint64_t)v189 + v1403) & v1367);
          v246 = (const void *)(((unint64_t)v190 + v1403) & v1367);
          if (__swift_getEnumTagSinglePayload((uint64_t)v246, 1, v1356))
          {
            memcpy(v245, v246, v1440);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v245, v246, v1356);
            __swift_storeEnumTagSinglePayload((uint64_t)v245, 0, 1, v1356);
          }
          v205 = v1426;
          v97 = a1;
          v524 = (_QWORD *)(((unint64_t)v245 + v1406) & 0xFFFFFFFFFFFFF8);
          v525 = (_QWORD *)(((unint64_t)v246 + v1406) & 0xFFFFFFFFFFFFFFF8);
          *v524 = *v525;
          *(_QWORD *)(((unint64_t)v524 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v525 + 15) & 0xFFFFFFFFFFFFF8);
          v466 = 41;
          goto LABEL_763;
        case 0x2A:
          v199 = v189;
          *v189 = *v190;
          v200 = 42;
          goto LABEL_289;
        case 0x2B:
          v247 = v190[3];
          v199 = v189;
          v189[3] = v247;
          v189[4] = v190[4];
          (**(void (***)(_QWORD *, _QWORD *))(v247 - 8))(v189, v190);
          v248 = (void *)(((unint64_t)v189 + v1403) & v1367);
          v249 = (const void *)(((unint64_t)v190 + v1403) & v1367);
          if (__swift_getEnumTagSinglePayload((uint64_t)v249, 1, v1356))
          {
            memcpy(v248, v249, v1440);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v248, v249, v1356);
            __swift_storeEnumTagSinglePayload((uint64_t)v248, 0, 1, v1356);
          }
          v205 = v1426;
          v97 = a1;
          v526 = 43;
          goto LABEL_1360;
        case 0x2C:
          v199 = v189;
          *v189 = *v190;
          v200 = 44;
          goto LABEL_289;
        case 0x2D:
          v1433 = ~v1381;
          if (__swift_getEnumTagSinglePayload((uint64_t)v190, 1, v1356))
          {
            memcpy(v189, v190, v1440);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1343 + 16))(v189, v190, v1356);
            __swift_storeEnumTagSinglePayload((uint64_t)v189, 0, 1, v1356);
          }
          v527 = ((unint64_t)v189 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v528 = ((unint64_t)v190 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v529 = *(_QWORD *)(v528 + 24);
          *(_QWORD *)(v527 + 24) = v529;
          *(_QWORD *)(v527 + 32) = *(_QWORD *)(v528 + 32);
          (**(void (***)(unint64_t, unint64_t))(v529 - 8))(v527, v528);
          v530 = (v527 + 47) & 0xFFFFFFFFFFFFFFF8;
          v531 = (v528 + 47) & 0xFFFFFFFFFFFFFFF8;
          v532 = *(_QWORD *)(v531 + 24);
          v1413 = v189;
          if (v532 < 0xFFFFFFFF)
          {
            v533 = *(_OWORD *)v531;
            v534 = *(_OWORD *)(v531 + 16);
            *(_QWORD *)(v530 + 32) = *(_QWORD *)(v531 + 32);
            *(_OWORD *)v530 = v533;
            *(_OWORD *)(v530 + 16) = v534;
          }
          else
          {
            *(_QWORD *)(v530 + 24) = v532;
            *(_QWORD *)(v530 + 32) = *(_QWORD *)(v531 + 32);
            (**(void (***)(unint64_t, unint64_t))(v532 - 8))(v530, v531);
          }
          v535 = (_QWORD *)((v530 + 47) & 0xFFFFFFFFFFFFFFF8);
          v536 = (_QWORD *)((v531 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v535 = *v536;
          v535[1] = v536[1];
          v537 = (_QWORD *)(((unint64_t)v535 + 23) & 0xFFFFFFFFFFFFFFF8);
          v538 = (_QWORD *)(((unint64_t)v536 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v537 = *v538;
          v537[1] = v538[1];
          v539 = (_QWORD *)(((unint64_t)v537 + 23) & 0xFFFFFFFFFFFFFFF8);
          v540 = (_QWORD *)(((unint64_t)v538 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v539 = *v540;
          v539[1] = v540[1];
          v541 = (_QWORD *)(((unint64_t)v539 + 23) & 0xFFFFFFFFFFFFFFF8);
          v542 = (_QWORD *)(((unint64_t)v540 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v541 = *v542;
          v541[1] = v542[1];
          v543 = ((unint64_t)v541 + 23) & 0xFFFFFFFFFFFFFFF8;
          v544 = ((unint64_t)v542 + 23) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v543 = *(_QWORD *)v544;
          *(_QWORD *)(v543 + 8) = *(_QWORD *)(v544 + 8);
          *(_BYTE *)(v543 + 16) = *(_BYTE *)(v544 + 16);
          v545 = (_QWORD *)(((unint64_t)v541 + 47) & 0xFFFFFFFFFFFFFFF8);
          v546 = (_QWORD *)(((unint64_t)v542 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v545 = *v546;
          v547 = (void *)(((unint64_t)v545 + v1375) & v1387);
          v548 = (_BYTE *)(((unint64_t)v546 + v1375) & v1387);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v1405)
          {
            v549 = v1338;
            v550 = v1397;
            v551 = v1323;
            if (v1333 >= v1338)
            {
              v552 = (uint64_t)v548;
              v549 = v1333;
              v553 = v1336;
            }
            else
            {
              v552 = (unint64_t)&v548[v1337] & v1385;
              v553 = v1341;
            }
            v656 = __swift_getEnumTagSinglePayload(v552, v549, v553);
          }
          else
          {
            v550 = v1397;
            v551 = v1323;
            if (!v548[v1354])
              goto LABEL_1024;
            v642 = (v548[v1354] - 1) << v1364;
            if (v1354 > 3)
              v642 = 0;
            if ((_DWORD)v1354)
            {
              if (v1354 <= 3)
                v643 = v1354;
              else
                v643 = 4;
              __asm { BR              X11 }
            }
            v656 = v642 + 1;
          }
          if (v656)
          {
            memcpy(v547, v548, v1404);
            goto LABEL_1026;
          }
LABEL_1024:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1330 + 16))(v547, v548, v1336);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1331 + 16))(((unint64_t)v547 + v1337) & v1385, (unint64_t)&v548[v1337] & v1385, v1341);
          if (!v1405)
            *((_BYTE *)v547 + v1354) = 0;
LABEL_1026:
          v984 = (void *)(((unint64_t)v547 + v1304) & v1387);
          v985 = (_BYTE *)((unint64_t)&v548[v1304] & v1387);
          if (v1405)
          {
            v986 = v1338;
            v987 = v1284;
            if (v1333 >= v1338)
            {
              v988 = (unint64_t)&v548[v1304] & v1387;
              v986 = v1333;
              v989 = v1336;
            }
            else
            {
              v988 = (unint64_t)&v985[v1337] & v1385;
              v989 = v1341;
            }
            v992 = __swift_getEnumTagSinglePayload(v988, v986, v989);
          }
          else
          {
            v987 = v1284;
            if (!v985[v1354])
              goto LABEL_1197;
            v990 = (v985[v1354] - 1) << v1364;
            if (v1354 > 3)
              v990 = 0;
            if ((_DWORD)v1354)
            {
              if (v1354 <= 3)
                v991 = v1354;
              else
                v991 = 4;
              __asm { BR              X11 }
            }
            v992 = v990 + 1;
          }
          if (v992)
          {
            memcpy(v984, v985, v1404);
            goto LABEL_1199;
          }
LABEL_1197:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1330 + 16))(v984, v985, v1336);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1331 + 16))(((unint64_t)v984 + v1337) & v1385, (unint64_t)&v985[v1337] & v1385, v1341);
          if (!v1405)
            *((_BYTE *)v984 + v1354) = 0;
LABEL_1199:
          v1070 = (_QWORD *)(((unint64_t)v984 + v1379) & v1433);
          v1071 = (uint64_t *)((unint64_t)&v985[v1379] & v1433);
          if ((v1338 & 0x80000000) != 0)
          {
            v1073 = __swift_getEnumTagSinglePayload(((unint64_t)v1071 + v551) & v1385, v1338, v1341);
          }
          else
          {
            v1072 = *v1071;
            if ((unint64_t)*v1071 >= 0xFFFFFFFF)
              LODWORD(v1072) = -1;
            v1073 = v1072 + 1;
          }
          if (v1073)
          {
            memcpy(v1070, v1071, v550);
          }
          else
          {
            *v1070 = *v1071;
            v1074 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1331 + 16);
            sub_21D7C4C20();
            v1075 = ((unint64_t)v1070 + v551) & v1385;
            v550 = v1397;
            v1076 = ((unint64_t)v1071 + v551) & v1385;
            v551 = v1323;
            v1074(v1075, v1076, v1341);
          }
          v1077 = (_QWORD *)(((unint64_t)v1070 + v1272) & v1433);
          v1078 = (uint64_t *)(((unint64_t)v1071 + v1272) & v1433);
          if ((v1338 & 0x80000000) != 0)
          {
            v1080 = __swift_getEnumTagSinglePayload(((unint64_t)v1078 + v551) & v1385, v1338, v1341);
          }
          else
          {
            v1079 = *v1078;
            if ((unint64_t)*v1078 >= 0xFFFFFFFF)
              LODWORD(v1079) = -1;
            v1080 = v1079 + 1;
          }
          if (v1080)
          {
            memcpy(v1077, v1078, v550);
          }
          else
          {
            *v1077 = *v1078;
            v1081 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1331 + 16);
            sub_21D7C4C20();
            v550 = v1397;
            v1081(((unint64_t)v1077 + v551) & v1385, ((unint64_t)v1078 + v551) & v1385, v1341);
          }
          v1082 = (char *)v1077 + v550;
          *v1082 = *((_BYTE *)v1078 + v550);
          v1082[1] = *((_BYTE *)v1078 + v550 + 1);
          v1083 = (_QWORD *)(((unint64_t)v1077 + v550 + 9) & 0xFFFFFFFFFFFFFFF8);
          v1084 = (_QWORD *)(((unint64_t)v1078 + v550 + 9) & 0xFFFFFFFFFFFFFFF8);
          *v1083 = *v1084;
          v1083[1] = v1084[1];
          v1085 = ((unint64_t)v1083 + 23) & 0xFFFFFFFFFFFFFFF8;
          v1086 = ((unint64_t)v1084 + 23) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v1085 = *(_QWORD *)v1086;
          *(_QWORD *)(v1085 + 8) = *(_QWORD *)(v1086 + 8);
          *(_BYTE *)(v1085 + 16) = *(_BYTE *)(v1086 + 16);
          v1087 = ((unint64_t)v1083 + 47) & 0xFFFFFFFFFFFFFFF8;
          v1088 = ((unint64_t)v1084 + 47) & 0xFFFFFFFFFFFFFFF8;
          v1089 = *(_QWORD *)(v1088 + 24);
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v1089 < 0xFFFFFFFF)
          {
            v1090 = *(_OWORD *)v1088;
            v1091 = *(_OWORD *)(v1088 + 16);
            *(_QWORD *)(v1087 + 32) = *(_QWORD *)(v1088 + 32);
            *(_OWORD *)v1087 = v1090;
            *(_OWORD *)(v1087 + 16) = v1091;
          }
          else
          {
            *(_QWORD *)(v1087 + 24) = v1089;
            *(_QWORD *)(v1087 + 32) = *(_QWORD *)(v1088 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v1089 - 8))(v1087, v1088, v1089);
          }
          v97 = a1;
          v199 = v1413;
          v1092 = (v1439 + v1087) & v1371;
          v1093 = (v1439 + v1088) & v1371;
          if (v1335 >= 0x7FFFFFFF)
          {
            v1099 = (const void *)((v1339 + v1093) & v1383);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1099, v1327, v1340) <= 1)
            {
              v1455 = v190;
              v1095 = v1413;
              v1096 = (char *)(v1093 + 8);
              v1097 = v1339;
              v1098 = ~v1416;
LABEL_1225:
              *(_BYTE *)v1092 = *(_BYTE *)v1093;
              *(_QWORD *)(v1092 + 8) = *(_QWORD *)(v1093 + 8);
              *(_QWORD *)(v1092 + 16) = *((_QWORD *)v1096 + 1);
              *(_QWORD *)(v1092 + 24) = *((_QWORD *)v1096 + 2);
              *(_QWORD *)(v1092 + 32) = *((_QWORD *)v1096 + 3);
              *(_QWORD *)(v1092 + 40) = *((_QWORD *)v1096 + 4);
              *(_QWORD *)(v1092 + 48) = *((_QWORD *)v1096 + 5);
              *(_QWORD *)(v1092 + 56) = *((_QWORD *)v1096 + 6);
              *(_QWORD *)(v1092 + 64) = *((_QWORD *)v1096 + 7);
              *(_QWORD *)(v1092 + 72) = *((_QWORD *)v1096 + 8);
              *(_QWORD *)(v1092 + 80) = *((_QWORD *)v1096 + 9);
              *(_QWORD *)(v1092 + 88) = *((_QWORD *)v1096 + 10);
              *(_QWORD *)(v1092 + 96) = *((_QWORD *)v1096 + 11);
              v1100 = *((_QWORD *)v1096 + 12);
              *(_BYTE *)(v1092 + 112) = v1096[104];
              *(_QWORD *)(v1092 + 104) = v1100;
              v1101 = (void *)((v1097 + v1092) & v1098);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1099, 1, v1340))
              {
                memcpy(v1101, v1099, v1401);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1324 + 16))(v1101, v1099, v1340);
                __swift_storeEnumTagSinglePayload((uint64_t)v1101, 0, 1, v1340);
              }
              v97 = a1;
              v199 = v1095;
              v190 = v1455;
              v987 = v1284;
              v1102 = v1402;
LABEL_1230:
              v1103 = (_QWORD *)(((v1092 | 7) + v1102) & 0xFFFFFFFFFFFFFFF8);
              v1104 = (_QWORD *)(((v1093 | 7) + v1102) & 0xFFFFFFFFFFFFFFF8);
              *v1103 = *v1104;
              v1103[1] = v1104[1];
              v199[v987] = 45;
              goto LABEL_1231;
            }
          }
          else
          {
            v1094 = *(_QWORD *)(v1093 + 16);
            if (v1094 >= 0xFFFFFFFF)
              LODWORD(v1094) = -1;
            if ((int)v1094 - 1 < 0)
            {
              v1455 = v190;
              v1095 = v1413;
              v1096 = (char *)(v1093 + 8);
              v1097 = v1339;
              v1098 = ~v1416;
              v1099 = (const void *)((v1339 + v1093) & v1383);
              goto LABEL_1225;
            }
          }
          v1102 = v1402;
          memcpy((void *)v1092, (const void *)v1093, v1402);
          goto LABEL_1230;
        case 0x2E:
          v199 = v189;
          *v189 = *v190;
          v200 = 46;
          goto LABEL_289;
        case 0x2F:
          v199 = v189;
          *v189 = *v190;
          v200 = 47;
          goto LABEL_289;
        case 0x30:
          v199 = v189;
          *v189 = *v190;
          v200 = 48;
          goto LABEL_289;
        case 0x31:
          v199 = v189;
          *v189 = *v190;
          v200 = 49;
          goto LABEL_289;
        case 0x32:
          v250 = ~v1417;
          v251 = v190[3];
          v1409 = v189;
          v189[3] = v251;
          v189[4] = v190[4];
          (**(void (***)(_QWORD *, _QWORD *))(v251 - 8))(v189, v190);
          v252 = (void *)(((unint64_t)v189 + v1403) & v1367);
          v253 = (const void *)(((unint64_t)v190 + v1403) & v1367);
          if (__swift_getEnumTagSinglePayload((uint64_t)v253, 1, v1356))
          {
            memcpy(v252, v253, v1440);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v252, v253, v1356);
            __swift_storeEnumTagSinglePayload((uint64_t)v252, 0, 1, v1356);
          }
          v554 = (_QWORD *)(((unint64_t)v252 + v1406) & 0xFFFFFFFFFFFFFFF8);
          v555 = (_QWORD *)(((unint64_t)v253 + v1406) & 0xFFFFFFFFFFFFFFF8);
          *v554 = *v555;
          v554[1] = v555[1];
          v556 = ((unint64_t)v554 + 23) & 0xFFFFFFFFFFFFFFF8;
          v557 = ((unint64_t)v555 + 23) & 0xFFFFFFFFFFFFFFF8;
          v558 = *(_QWORD *)(v557 + 24);
          sub_21D7C4C20();
          if (v558 < 0xFFFFFFFF)
          {
            v559 = *(_OWORD *)v557;
            v560 = *(_OWORD *)(v557 + 16);
            *(_QWORD *)(v556 + 32) = *(_QWORD *)(v557 + 32);
            *(_OWORD *)v556 = v559;
            *(_OWORD *)(v556 + 16) = v560;
          }
          else
          {
            *(_QWORD *)(v556 + 24) = v558;
            *(_QWORD *)(v556 + 32) = *(_QWORD *)(v557 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v558 - 8))(v556, v557, v558);
          }
          v561 = (_QWORD *)((v556 + 47) & 0xFFFFFFFFFFFFF8);
          v562 = (_QWORD *)((v557 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v561 = *v562;
          v563 = (_QWORD *)(((unint64_t)v561 + 15) & 0xFFFFFFFFFFFFFFF8);
          v564 = (_QWORD *)(((unint64_t)v562 + 15) & 0xFFFFFFFFFFFFFFF8);
          *v563 = *v564;
          v563[1] = v564[1];
          v565 = (char *)(((unint64_t)v563 + v1388) & v250);
          v566 = (char *)(((unint64_t)v564 + v1388) & v250);
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v1328 < 0x7FFFFFFF)
          {
            v199 = v189;
            v567 = a1;
            if (*(_QWORD *)(((unint64_t)&v566[v1406] & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
              goto LABEL_469;
          }
          else
          {
            v567 = a1;
            v199 = v189;
            if (__swift_getEnumTagSinglePayload((uint64_t)v566, v1399, v1356) >= 2)
            {
LABEL_469:
              v568 = v1395;
              memcpy(v565, v566, v1395);
              v569 = v1418 + 23;
              v97 = v567;
              goto LABEL_622;
            }
          }
          if (__swift_getEnumTagSinglePayload((uint64_t)v566, 1, v1356))
          {
            memcpy(v565, v566, v1440);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v1343 + 16))(v565, v566, v1356);
            __swift_storeEnumTagSinglePayload((uint64_t)v565, 0, 1, v1356);
          }
          v569 = v1418 + 23;
          v723 = (unint64_t)&v565[v1406] & 0xFFFFFFFFFFFFFFF8;
          v724 = (unint64_t)&v566[v1406] & 0xFFFFFFFFFFFFFFF8;
          v725 = *(_QWORD *)(v724 + 24);
          *(_QWORD *)(v723 + 24) = v725;
          *(_QWORD *)(v723 + 32) = *(_QWORD *)(v724 + 32);
          (**(void (***)(unint64_t, unint64_t))(v725 - 8))(v723, v724);
          v726 = (v723 + 47) & 0xFFFFFFFFFFFFFFF8;
          v727 = (v724 + 47) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v726 = *(_QWORD *)v727;
          *(_QWORD *)(v726 + 8) = *(_QWORD *)(v727 + 8);
          *(_BYTE *)(v726 + 16) = *(_BYTE *)(v727 + 16);
          sub_21D7C4C20();
          v97 = a1;
          v568 = v1395;
          v199 = v1409;
          if (v1399)
            v568 = ((((v1353 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 17;
LABEL_622:
          v728 = &v565[v568];
          v729 = &v566[v568];
          *(_QWORD *)(v728 + 7) = *(_QWORD *)&v566[v568 + 7];
          *(_QWORD *)(v728 + 15) = *(_QWORD *)&v566[v568 + 15];
          v730 = (_QWORD *)((unint64_t)&v565[v568 + v569] & v1371);
          v731 = (_QWORD *)((unint64_t)&v729[v569] & v1371);
          sub_21D7C4C20();
          if (v1335 >= 0x7FFFFFFF)
          {
            v736 = (const void *)(((unint64_t)v731 + v1339) & v1383);
            if (__swift_getEnumTagSinglePayload((uint64_t)v736, v1327, v1340) <= 1)
            {
              v733 = (char *)(v731 + 1);
              v734 = v1339;
              v735 = ~v1416;
              goto LABEL_629;
            }
          }
          else
          {
            v732 = v731[2];
            if (v732 >= 0xFFFFFFFF)
              LODWORD(v732) = -1;
            if ((int)v732 - 1 < 0)
            {
              v733 = (char *)(v731 + 1);
              v734 = v1339;
              v735 = ~v1416;
              v736 = (const void *)(((unint64_t)v731 + v1339) & v1383);
LABEL_629:
              *(_BYTE *)v730 = *(_BYTE *)v731;
              v730[1] = v731[1];
              v730[2] = *((_QWORD *)v733 + 1);
              v730[3] = *((_QWORD *)v733 + 2);
              v730[4] = *((_QWORD *)v733 + 3);
              v730[5] = *((_QWORD *)v733 + 4);
              v730[6] = *((_QWORD *)v733 + 5);
              v730[7] = *((_QWORD *)v733 + 6);
              v730[8] = *((_QWORD *)v733 + 7);
              v730[9] = *((_QWORD *)v733 + 8);
              v730[10] = *((_QWORD *)v733 + 9);
              v730[11] = *((_QWORD *)v733 + 10);
              v730[12] = *((_QWORD *)v733 + 11);
              v737 = *((_QWORD *)v733 + 12);
              *((_BYTE *)v730 + 112) = v733[104];
              v730[13] = v737;
              v738 = (void *)(((unint64_t)v730 + v734) & v735);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              if (__swift_getEnumTagSinglePayload((uint64_t)v736, 1, v1340))
              {
                memcpy(v738, v736, v1401);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1324 + 16))(v738, v736, v1340);
                __swift_storeEnumTagSinglePayload((uint64_t)v738, 0, 1, v1340);
              }
              v97 = a1;
              v205 = v1426;
              v188 = v1284;
              v199 = v1409;
              goto LABEL_659;
            }
          }
          memcpy(v730, v731, v1402);
          v205 = v1426;
LABEL_659:
          v526 = 50;
LABEL_1360:
          v199[v188] = v526;
LABEL_1361:
          v254 = v1424;
          goto LABEL_1362;
        case 0x33:
          if (__swift_getEnumTagSinglePayload((uint64_t)v190, 1, v1356))
          {
            memcpy(v189, v190, v1440);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1343 + 16))(v189, v190, v1356);
            __swift_storeEnumTagSinglePayload((uint64_t)v189, 0, 1, v1356);
          }
          v570 = ((unint64_t)v189 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v571 = ((unint64_t)v190 + v1406) & 0xFFFFFFFFFFFFFFF8;
          v572 = *(_QWORD *)(v571 + 24);
          *(_QWORD *)(v570 + 24) = v572;
          *(_QWORD *)(v570 + 32) = *(_QWORD *)(v571 + 32);
          (**(void (***)(unint64_t, unint64_t))(v572 - 8))(v570, v571);
          v573 = (v570 + 47) & 0xFFFFFFFFFFFFFFF8;
          v574 = (v571 + 47) & 0xFFFFFFFFFFFFFFF8;
          v575 = *(_QWORD *)(v574 + 24);
          v1414 = v189;
          if (v575 < 0xFFFFFFFF)
          {
            v576 = *(_OWORD *)v574;
            v577 = *(_OWORD *)(v574 + 16);
            *(_QWORD *)(v573 + 32) = *(_QWORD *)(v574 + 32);
            *(_OWORD *)v573 = v576;
            *(_OWORD *)(v573 + 16) = v577;
          }
          else
          {
            *(_QWORD *)(v573 + 24) = v575;
            *(_QWORD *)(v573 + 32) = *(_QWORD *)(v574 + 32);
            (**(void (***)(unint64_t, unint64_t))(v575 - 8))(v573, v574);
          }
          v578 = (_QWORD *)((v573 + 47) & 0xFFFFFFFFFFFFFFF8);
          v579 = (_QWORD *)((v574 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v578 = *v579;
          v578[1] = v579[1];
          v580 = (_QWORD *)(((unint64_t)v578 + 23) & 0xFFFFFFFFFFFFFFF8);
          v581 = (_QWORD *)(((unint64_t)v579 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v580 = *v581;
          v580[1] = v581[1];
          v582 = (_QWORD *)(((unint64_t)v580 + 23) & 0xFFFFFFFFFFFFFFF8);
          v583 = (_QWORD *)(((unint64_t)v581 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v582 = *v583;
          v584 = (_QWORD *)(((unint64_t)v582 + v1289) & v1400);
          v585 = (_QWORD *)(((unint64_t)v583 + v1289) & v1400);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v1362 > 0x7FFFFFFE)
          {
            v587 = (_QWORD *)(((unint64_t)v585 + 23) & 0xFFFFFFFFFFFFFFF8);
            v588 = ((unint64_t)v587 + 23) & 0xFFFFFFFFFFFFFFF8;
            if (!__swift_getEnumTagSinglePayload((v1420 + v588 + 33) & v192, v1362, v1321))
              goto LABEL_484;
          }
          else
          {
            v586 = v585[1];
            if (v586 >= 0xFFFFFFFF)
              LODWORD(v586) = -1;
            if ((v586 + 1) <= 1)
            {
              v587 = (_QWORD *)(((unint64_t)v585 + 23) & 0xFFFFFFFFFFFFFFF8);
              v588 = ((unint64_t)v587 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_484:
              *v584 = *v585;
              v584[1] = v585[1];
              v589 = (_QWORD *)(((unint64_t)v584 + 23) & 0xFFFFFFFFFFFFFFF8);
              *v589 = *v587;
              v589[1] = v587[1];
              v590 = ((unint64_t)v589 + 23) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)v590 = *(_QWORD *)v588;
              *(_QWORD *)(v590 + 8) = *(_QWORD *)(v588 + 8);
              *(_BYTE *)(v590 + 16) = *(_BYTE *)(v588 + 16);
              v591 = ((unint64_t)v589 + 47) & 0xFFFFFFFFFFFFFFF8;
              v592 = ((unint64_t)v587 + 47) & 0xFFFFFFFFFFFFFFF8;
              v593 = *(void **)v592;
              *(_QWORD *)v591 = *(_QWORD *)v592;
              *(_BYTE *)(v591 + 8) = *(_BYTE *)(v592 + 8);
              v594 = (v1420 + 9 + v591) & v192;
              v595 = (v1420 + 9 + v592) & v192;
              v596 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1358 + 16);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              v597 = v593;
              v596(v594, v595, v1321);
              v188 = v1284;
LABEL_485:
              v598 = (void *)(((unint64_t)v584 + v1295) & v1387);
              v599 = (_BYTE *)(((unint64_t)v585 + v1295) & v1387);
              v199 = v1414;
              if (v1405)
              {
                v600 = v1333;
                if (v1333 >= v1338)
                {
                  v601 = (uint64_t)v599;
                  v602 = v1336;
                }
                else
                {
                  v601 = (unint64_t)&v599[v1337] & v1385;
                  v600 = v1338;
                  v602 = v1341;
                }
                v657 = __swift_getEnumTagSinglePayload(v601, v600, v602);
              }
              else
              {
                if (!v599[v1354])
                  goto LABEL_1042;
                v644 = (v599[v1354] - 1) << v1364;
                if (v1354 > 3)
                  v644 = 0;
                if ((_DWORD)v1354)
                {
                  if (v1354 <= 3)
                    v645 = v1354;
                  else
                    v645 = 4;
                  __asm { BR              X11 }
                }
                v657 = v644 + 1;
              }
              if (v657)
              {
                memcpy(v598, v599, v1404);
                goto LABEL_1044;
              }
LABEL_1042:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1330 + 16))(v598, v599, v1336);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1331 + 16))(((unint64_t)v598 + v1337) & v1385, (unint64_t)&v599[v1337] & v1385, v1341);
              if (!v1405)
                *((_BYTE *)v598 + v1354) = 0;
LABEL_1044:
              v993 = (_QWORD *)(((unint64_t)v598 + v1377) & 0xFFFFFFFFFFFFFFF8);
              v994 = (_QWORD *)((unint64_t)&v599[v1377] & 0xFFFFFFFFFFFFFFF8);
              *v993 = *v994;
              v993[1] = v994[1];
              v995 = ((unint64_t)v993 + 23) & 0xFFFFFFFFFFFFFFF8;
              v996 = ((unint64_t)v994 + 23) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)v995 = *(_QWORD *)v996;
              *(_BYTE *)(v995 + 8) = *(_BYTE *)(v996 + 8);
              v997 = (void *)((v1291 + v995) & v1387);
              v998 = (_BYTE *)((v1291 + v996) & v1387);
              sub_21D7C4C20();
              sub_21D7C4C20();
              if (v1405)
              {
                v999 = v1333;
                if (v1333 >= v1338)
                {
                  v1000 = (uint64_t)v998;
                  v1001 = v1336;
                }
                else
                {
                  v1000 = (unint64_t)&v998[v1337] & v1385;
                  v999 = v1338;
                  v1001 = v1341;
                }
                v1004 = __swift_getEnumTagSinglePayload(v1000, v999, v1001);
              }
              else
              {
                if (!v998[v1354])
                  goto LABEL_1235;
                v1002 = (v998[v1354] - 1) << v1364;
                if (v1354 > 3)
                  v1002 = 0;
                if ((_DWORD)v1354)
                {
                  if (v1354 <= 3)
                    v1003 = v1354;
                  else
                    v1003 = 4;
                  __asm { BR              X11 }
                }
                v1004 = v1002 + 1;
              }
              if (v1004)
              {
                memcpy(v997, v998, v1404);
                goto LABEL_1237;
              }
LABEL_1235:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1330 + 16))(v997, v998, v1336);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1331 + 16))(((unint64_t)v997 + v1337) & v1385, (unint64_t)&v998[v1337] & v1385, v1341);
              if (!v1405)
                *((_BYTE *)v997 + v1354) = 0;
LABEL_1237:
              v1105 = (_QWORD *)(((unint64_t)v997 + v1377) & 0xFFFFFFFFFFFFFFF8);
              v1106 = (_QWORD *)((unint64_t)&v998[v1377] & 0xFFFFFFFFFFFFFFF8);
              *v1105 = *v1106;
              v1105[1] = v1106[1];
              v1107 = (void *)(((unint64_t)v1105 + v1398) & v1387);
              v1108 = (_BYTE *)(((unint64_t)v1106 + v1398) & v1387);
              sub_21D7C4C20();
              if (v1405)
              {
                v1109 = v1333;
                if (v1333 >= v1338)
                {
                  v1110 = (uint64_t)v1108;
                  v1111 = v1336;
                }
                else
                {
                  v1110 = (unint64_t)&v1108[v1337] & v1385;
                  v1109 = v1338;
                  v1111 = v1341;
                }
                v1114 = __swift_getEnumTagSinglePayload(v1110, v1109, v1111);
                v97 = a1;
              }
              else
              {
                v97 = a1;
                if (!v1108[v1354])
                  goto LABEL_1253;
                v1112 = (v1108[v1354] - 1) << v1364;
                if (v1354 > 3)
                  v1112 = 0;
                if ((_DWORD)v1354)
                {
                  if (v1354 <= 3)
                    v1113 = v1354;
                  else
                    v1113 = 4;
                  __asm { BR              X11 }
                }
                v1114 = v1112 + 1;
              }
              if (v1114)
              {
                memcpy(v1107, v1108, v1404);
                goto LABEL_1255;
              }
LABEL_1253:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1330 + 16))(v1107, v1108, v1336);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1331 + 16))(((unint64_t)v1107 + v1337) & v1385, (unint64_t)&v1108[v1337] & v1385, v1341);
              if (!v1405)
                *((_BYTE *)v1107 + v1354) = 0;
LABEL_1255:
              v1115 = (_QWORD *)(((unint64_t)v1107 + v1273) & v1371);
              v1116 = (_QWORD *)((unint64_t)&v1108[v1273] & v1371);
              if (v1335 >= 0x7FFFFFFF)
              {
                v1121 = (const void *)(((unint64_t)v1116 + v1339) & v1383);
                if (__swift_getEnumTagSinglePayload((uint64_t)v1121, v1327, v1340) <= 1)
                {
                  v1118 = (char *)(v1116 + 1);
                  v1119 = v1339;
                  v1120 = ~v1416;
                  goto LABEL_1262;
                }
              }
              else
              {
                v1117 = v1116[2];
                if (v1117 >= 0xFFFFFFFF)
                  LODWORD(v1117) = -1;
                if ((int)v1117 - 1 < 0)
                {
                  v1118 = (char *)(v1116 + 1);
                  v1119 = v1339;
                  v1120 = ~v1416;
                  v1121 = (const void *)(((unint64_t)v1116 + v1339) & v1383);
LABEL_1262:
                  *(_BYTE *)v1115 = *(_BYTE *)v1116;
                  v1115[1] = v1116[1];
                  v1115[2] = *((_QWORD *)v1118 + 1);
                  v1115[3] = *((_QWORD *)v1118 + 2);
                  v1115[4] = *((_QWORD *)v1118 + 3);
                  v1115[5] = *((_QWORD *)v1118 + 4);
                  v1115[6] = *((_QWORD *)v1118 + 5);
                  v1115[7] = *((_QWORD *)v1118 + 6);
                  v1115[8] = *((_QWORD *)v1118 + 7);
                  v1115[9] = *((_QWORD *)v1118 + 8);
                  v1115[10] = *((_QWORD *)v1118 + 9);
                  v1115[11] = *((_QWORD *)v1118 + 10);
                  v1115[12] = *((_QWORD *)v1118 + 11);
                  v1122 = *((_QWORD *)v1118 + 12);
                  *((_BYTE *)v1115 + 112) = v1118[104];
                  v1115[13] = v1122;
                  v1123 = (void *)(((unint64_t)v1115 + v1119) & v1120);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (__swift_getEnumTagSinglePayload((uint64_t)v1121, 1, v1340))
                  {
                    memcpy(v1123, v1121, v1401);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1324 + 16))(v1123, v1121, v1340);
                    __swift_storeEnumTagSinglePayload((uint64_t)v1123, 0, 1, v1340);
                  }
                  v97 = a1;
                  v205 = v1426;
                  v188 = v1284;
                  v199 = v1414;
                  goto LABEL_1267;
                }
              }
              memcpy(v1115, v1116, v1402);
              v205 = v1426;
LABEL_1267:
              v526 = 51;
              goto LABEL_1360;
            }
          }
          memcpy(v584, v585, v1436);
          goto LABEL_485;
        case 0x34:
          v199 = v189;
          *v189 = *v190;
          v200 = 52;
LABEL_289:
          *((_BYTE *)v189 + v1284) = v200;
          sub_21D7C4C20();
          v254 = v1424;
          v205 = v1426;
LABEL_290:
          v97 = a1;
          goto LABEL_1362;
        default:
          if (v1284 <= 3)
            v191 = v1284;
          else
            v191 = 4;
          __asm { BR              X12 }
          return result;
      }
    case 2:
      v97 = a1;
      *a1 = *a2;
      v103 = 2;
      goto LABEL_128;
    case 3:
      v97 = a1;
      *a1 = *a2;
      v103 = 3;
LABEL_128:
      *((_BYTE *)a1 + v92) = v103;
      sub_21D7C4C20();
      return v97;
    default:
      v97 = a1;
      memcpy(a1, a2, v92 + 1);
      return v97;
  }
}

unint64_t sub_21CEDC5EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unsigned int v38;
  unint64_t v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t result;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unsigned __int8 *v94;
  unint64_t v95;
  unsigned int v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  int v110;
  int EnumTagSinglePayload;
  unint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  unint64_t v124;
  unint64_t v125;
  uint64_t v126;
  BOOL v127;
  unint64_t v128;
  unint64_t v129;
  unint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  unint64_t v142;
  unint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  unint64_t v149;
  unint64_t v150;
  unint64_t v151;
  uint64_t v152;
  unint64_t v153;
  unint64_t v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  unint64_t v167;
  unint64_t v168;
  uint64_t v169;
  unint64_t v170;
  unint64_t v171;
  unint64_t v172;
  unint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  unint64_t v184;
  uint64_t v185;
  unint64_t v186;
  unint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;
  unint64_t v196;
  unint64_t v197;
  _QWORD *v198;
  uint64_t v199;
  unint64_t v200;
  uint64_t v201;
  unint64_t v202;
  unint64_t v203;
  unint64_t v204;
  unint64_t v205;
  uint64_t v206;
  unint64_t v207;
  uint64_t v208;
  unint64_t v209;
  unint64_t v210;
  unint64_t v211;
  unint64_t v212;
  uint64_t v213;
  uint64_t v214;
  unint64_t v215;
  int v216;
  uint64_t v217;
  unint64_t v218;
  unint64_t v219;
  unint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  unint64_t v224;
  uint64_t v225;
  unint64_t v226;
  unint64_t v227;
  unint64_t v228;
  unint64_t v229;
  unint64_t v230;
  unint64_t v231;
  uint64_t v232;
  unint64_t v233;
  int v234;
  id *v235;
  unint64_t v236;
  unint64_t v237;
  int v238;
  uint64_t v239;
  int v240;
  int v241;
  unint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  unint64_t v246;
  id *v247;
  unint64_t v248;
  int v249;
  id *v250;
  unint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  int v255;
  unint64_t v256;
  uint64_t v257;
  unint64_t v258;
  id *v259;
  unint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  int v265;
  int v266;
  int v267;
  int v268;
  int v269;
  int v270;
  int v271;
  int v272;
  int v273;
  int v274;
  int v275;
  int v276;
  int v277;
  int v278;
  int v279;
  int v280;
  int v281;
  int v282;
  int v283;
  int v284;
  int v285;
  int v286;
  int v287;
  int v288;
  int v289;
  int v290;
  int v291;
  int v292;
  unint64_t v293;
  unint64_t v294;
  int v295;
  unsigned int v296;
  unint64_t v297;
  unint64_t v298;
  int v299;
  unsigned int v300;
  uint64_t *v301;
  uint64_t v302;
  int v303;
  unint64_t v304;
  unint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  unsigned int v309;
  uint64_t v310;
  uint64_t v311;
  unint64_t v312;
  unint64_t v313;
  unsigned int v314;
  unint64_t v315;
  unint64_t v316;
  unint64_t v317;
  uint64_t v318;
  unint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  int v324;
  int v325;
  int v326;
  unsigned int v327;
  unint64_t v328;
  unint64_t v329;
  unint64_t v330;
  unint64_t v331;
  uint64_t v332;
  unint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  int v337;
  int v338;
  int v339;
  unint64_t v340;
  unint64_t v341;
  unint64_t v342;
  unint64_t v343;
  uint64_t v344;
  unint64_t v345;
  int v346;
  uint64_t v347;
  int v348;
  int v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  int v354;
  int v355;
  int v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  int v362;
  int v363;
  int v364;
  unint64_t v365;
  unint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  int v370;
  int v371;
  int v372;
  uint64_t v373;
  int v374;
  uint64_t v375;
  uint64_t *v376;
  uint64_t v377;
  int v378;
  uint64_t v379;
  unint64_t v380;
  unint64_t v381;
  unint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  int v386;
  int v387;
  int v388;
  unint64_t v389;
  unint64_t v390;
  uint64_t v391;
  unint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  int v396;
  int v397;
  int v398;
  uint64_t *v399;
  uint64_t v400;
  int v401;
  uint64_t *v402;
  uint64_t v403;
  int v404;
  unint64_t v405;
  unint64_t v406;
  unint64_t v407;
  uint64_t v408;
  unint64_t v409;
  uint64_t v410;
  unsigned __int8 *v411;
  unint64_t v412;
  unsigned int v413;
  uint64_t v414;
  unint64_t v415;
  unint64_t v416;
  unint64_t v417;
  uint64_t v418;
  unint64_t v419;
  unint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  int v424;
  int v425;
  int v426;
  unint64_t v427;
  unint64_t v428;
  unint64_t v429;
  unsigned __int8 *v430;
  uint64_t v431;
  unsigned int v432;
  uint64_t v433;
  unint64_t v434;
  unint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  int v439;
  int v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  unsigned int v446;
  char v447;
  uint64_t v448;
  uint64_t v449;
  unint64_t v450;
  unint64_t v451;
  unint64_t v452;
  unint64_t v453;
  unint64_t v454;
  int v455;
  unint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  unint64_t v472;
  uint64_t v473;
  uint64_t v474;
  unsigned int v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  unsigned int v483;
  unsigned int v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  unsigned int v488;
  uint64_t v489;
  unsigned int v490;
  uint64_t v491;
  uint64_t v492;
  unsigned int v493;
  uint64_t v494;
  uint64_t v495;
  unint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  unint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  unsigned int v508;
  uint64_t v509;
  uint64_t v510;
  unint64_t v511;
  unint64_t v512;
  unint64_t v513;
  unint64_t v514;
  unint64_t v515;
  unint64_t v516;
  unint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  unint64_t v523;
  uint64_t v524;
  unint64_t v525;
  unint64_t v526;
  unint64_t v527;
  unint64_t v528;
  unint64_t v529;
  unint64_t v530;
  unint64_t v531;
  unint64_t v532;
  unint64_t v533;
  unint64_t v534;
  unint64_t v535;
  uint64_t v536;
  unint64_t v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  unint64_t v541;
  unint64_t v542;
  uint64_t v543;
  unint64_t v544;
  unint64_t v545;
  unint64_t v546;
  uint64_t v547;
  unint64_t v548;
  unint64_t v549;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  unsigned int v555;
  uint64_t v556;
  unsigned int v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  uint64_t v562;
  unint64_t v563;
  uint64_t v564;
  uint64_t v565;
  unint64_t v566;
  unint64_t v567;
  unint64_t v568;
  uint64_t v569;
  unint64_t v570;
  uint64_t v571;
  unint64_t v572;
  uint64_t v573;
  unint64_t v574;
  int v575;
  unint64_t v576;
  uint64_t v577;
  uint64_t v578;
  uint64_t v579;
  uint64_t v580;
  unint64_t v581;
  unint64_t v582;
  unint64_t v583;
  unint64_t v584;
  unint64_t v585;
  uint64_t v586;
  uint64_t v587;
  uint64_t v588;

  v504 = *(_QWORD *)(a2 + 16);
  v502 = *(_QWORD *)(v504 - 8);
  v548 = *(_QWORD *)(v502 + 64);
  v522 = sub_21D7C4668();
  v2 = *(_QWORD *)(v522 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v553 = v3 + 16;
  v555 = *(_DWORD *)(v2 + 84);
  v498 = v2;
  v4 = *(_QWORD *)(v2 + 64);
  v477 = v4;
  if (!v555)
    ++v4;
  v588 = v4;
  v565 = v3 | 7;
  v495 = sub_21D7BF754();
  v5 = *(_QWORD *)(v495 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v580 = v6 | 7;
  v492 = sub_21D7C3840();
  v7 = *(_QWORD *)(v492 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v494 = sub_21D7C3804();
  v9 = *(_QWORD *)(v494 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10;
  v12 = v10 | v8;
  v13 = v3 | 7 | v6 | v12;
  v559 = v3;
  v556 = v3 + 40;
  v14 = *(_DWORD *)(v5 + 84);
  if (v14)
    v15 = v14 - 1;
  else
    v15 = 0;
  v490 = v15;
  if (v15 <= 0x7FFFFFFE)
    v16 = 2147483646;
  else
    v16 = v15;
  v575 = v16;
  v493 = *(_DWORD *)(v9 + 84);
  v488 = *(_DWORD *)(v7 + 84);
  if (v493 <= v488)
    v17 = *(_DWORD *)(v7 + 84);
  else
    v17 = *(_DWORD *)(v9 + 84);
  v557 = v17;
  v484 = *(_DWORD *)(v5 + 84);
  v489 = v6 + 113;
  v18 = (v6 + 113) & ~v6;
  v578 = v6;
  v481 = v5;
  v486 = v7;
  v487 = *(_QWORD *)(v494 - 8);
  v491 = *(_QWORD *)(v7 + 64) + v10;
  v571 = *(_QWORD *)(v9 + 64);
  if (v14)
    v19 = *(_QWORD *)(v5 + 64);
  else
    v19 = *(_QWORD *)(v5 + 64) + 1;
  v573 = v19;
  v497 = v13 + 1;
  v20 = (v13 + 1) & ~v13;
  v566 = ((v3 + 40) & ~v3) + v588;
  v585 = (v566 + 7) & 0xFFFFFFFFFFFFFFF8;
  v587 = v6 + 40;
  v540 = v19 + v18;
  v21 = v19 + v18 + ((v6 + 40 + ((((v585 + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~(v6 | 7));
  v521 = (v491 & ~v11) + v571;
  if (v17)
    v22 = (v491 & ~v11) + v571;
  else
    v22 = (v491 & ~v11) + v571 + 1;
  v569 = v22;
  v23 = v22 + 1;
  v24 = v22 + 1 + ((v12 + 160) & ~v12);
  if (v21 <= v24)
    v21 = v24;
  if (v21 <= 0x30)
    v21 = 48;
  v496 = v21;
  v544 = v21 + v20;
  v561 = v21 + v20 + 1;
  v510 = sub_21D7C3F6C();
  v25 = *(_QWORD *)(v510 - 8);
  v26 = *(unsigned __int8 *)(v25 + 80);
  v505 = v26 | 7;
  v506 = (v26 | 7) + 58;
  v27 = (v506 + ((v561 + ((v13 + v588 + ((v3 + 16) & ~v3)) & ~v13) + 11) & 0xFFFFFFFFFFFFFFF8)) & ~(v26 | 7);
  v508 = *(_DWORD *)(v25 + 84);
  v499 = v26 + 16;
  v507 = v26;
  v485 = v25;
  v28 = *(_QWORD *)(v25 + 64);
  if (!v508)
    ++v28;
  v29 = v28 + ((v26 + 16) & ~v26);
  v479 = sub_21D7C4314();
  v30 = *(_QWORD *)(v479 - 8);
  v31 = *(_DWORD *)(v30 + 80);
  v547 = v30;
  v564 = v11 | 7;
  v470 = sub_21D7BF964();
  v552 = *(_QWORD *)(v470 - 8);
  v577 = *(unsigned __int8 *)(v552 + 80);
  v562 = v13 | v11 | v31 | v577;
  v509 = v29;
  v542 = v562 + v29 + v27;
  v32 = v31 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v33 = *(_QWORD *)(v30 + 64) + ((v31 + 65) & ~(unint64_t)v31);
  v558 = v588 + 7;
  v34 = (v588 + 7) & 0xFFFFFFFFFFFFFFF8;
  v35 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  v480 = v11 + 8;
  v500 = v11;
  v37 = v571 + ((v11 + 8) & ~v11);
  if (v555)
    v38 = v555 - 1;
  else
    v38 = 0;
  v39 = v35 + 16;
  v471 = v23;
  v538 = v23 + *(unsigned __int8 *)(v552 + 80) + ((v35 + 16 + v12) & ~v12);
  v483 = v38;
  v455 = v575 - 1;
  if (v38 <= v575 - 1)
    v40 = v575 - 1;
  else
    v40 = v38;
  if (v40 <= 0x7FFFFFFF)
    v40 = 0x7FFFFFFF;
  v41 = v557 - 1;
  if (!v557)
    v41 = 0;
  if (v41 <= v40)
    v42 = v40;
  else
    v42 = v41;
  v475 = v42;
  v43 = (v585 + 23) & 0xFFFFFFFFFFFFFFF8;
  v537 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  v576 = v35 + 17;
  v44 = v6 | 7;
  v464 = v580 + 23;
  v45 = v580 + 23 + v35 + 17 + ((v553 + ((((v43 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v565);
  v518 = v31 + 16;
  v584 = *(_QWORD *)(v30 + 64) + ((v31 + 65) & ~(unint64_t)v31);
  v535 = (v33 + ((v518 + ((v36 + 15) & 0xFFFFFFFFFFFFFFF8)) & v32)) & 0xFFFFFFFFFFFFFFF8;
  v46 = v564;
  v47 = v569;
  v48 = v569 + v564;
  v49 = (v37 + v44 + ((v569 + v46 + ((v12 + 16 + ((v535 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v12)) & ~v46)) & ~v44;
  v50 = (v537 + 47) & 0xFFFFFFFFFFFFFFF8;
  v51 = v540 + ((v6 + 8) & ~v580);
  v52 = v34 + 40;
  v579 = v13;
  v53 = (v13 + v52) & ~v13;
  v554 = v540 + 7;
  v54 = (v540 + 7 + ((v52 + v6) & ~v580)) & 0xFFFFFFFFFFFFFFF8;
  v458 = v573 + v12;
  v55 = v569 + v12;
  v465 = v569 + v12 + 1;
  v56 = ((v37 + v580 + ((v569 + v46 + ((v465 + ((v573 + v12 + ((v39 + v6) & ~v6)) & ~v12)) & ~v12)) & ~v46)) & ~v580)
      + v540;
  v529 = v540 + ((v44 + 17 + v585) & ~v44);
  v531 = (((v43 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v461 = v12 + 40;
  v567 = ((v47
         + v12
         + ((v12
           + 40
           + ((((((v531 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v12)) & ~v12)
       + v47;
  v523 = v36;
  v57 = (v36 + 23) & 0xFFFFFFFFFFFFFFF8;
  v574 = ((v57 + 47) & 0xFFFFFFFFFFFFFFF8) + 40;
  v58 = v569 + 7;
  v467 = v569 + 7 + ((v540 + v12 + ((v574 + v44) & ~v44)) & ~v12);
  v468 = v6 + 8;
  v59 = ((v6 + 8 + ((v467 + v53) & 0xFFFFFFFFFFFFFFF8)) & ~v580) + v540;
  v527 = (v54 + 23) & 0xFFFFFFFFFFFFFFF8;
  v460 = v12 + 18;
  v568 = ((v12 + 18 + v527) & ~v12) + v569;
  v533 = (((v50 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v572 = (v45 & ~v580) + v540;
  v520 = v31;
  v457 = v31 + 8;
  v463 = v33 + v12;
  v466 = v12 + 9;
  v519 = v12 + 16;
  v469 = v569 + v580;
  v570 = ((v569
         + v44
         + ((v12
           + 16
           + ((v47
             + 7
             + ((v12
               + 9
               + ((((v47 + 7 + ((v33 + v12 + ((v457 + v533) & v32)) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v12)) & 0xFFFFFFFFFFFFFFF8)) & ~v12)) & ~v44)
       + v540;
  v60 = v540 + v565;
  v61 = v50 + v565 + 16;
  v62 = v50 + 24;
  v63 = v50 + 24 + ((v61 + ((v61 + ((v540 + v565 + v49) & ~v565)) & ~v565)) & ~v565);
  v462 = *(_QWORD *)(v552 + 64) + 7;
  v64 = ((v48 + ((v540 + v12 + ((v587 + ((v462 + (v538 & ~v577)) & 0xFFFFFFFFFFFFFFF8)) & ~v580)) & ~v12)) & ~v564)
      + v37;
  v474 = v580 + 41;
  v478 = v540 + v12;
  v65 = ((((v58 + ((v540 + v12 + ((v44 + 41 + ((v36 + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v44)) & ~v12)) & 0xFFFFFFFFFFFFFFF8)
        + 47) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v456 = v65 + v13;
  v472 = v544 + 8;
  v473 = v13 + 8;
  v66 = ((v13 + 8 + ((v544 + 8 + ((v65 + v13 + v53) & ~v13)) & 0xFFFFFFFFFFFFFFF8)) & ~v13) + v561;
  v541 = v31 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v526 = v51;
  if (v51 <= v63)
    v67 = v63;
  else
    v67 = v51;
  v516 = v64;
  if (v67 <= v64)
    v67 = v64;
  v515 = v65;
  if (v67 <= v65)
    v67 = v65;
  v514 = v66;
  if (v67 <= v66)
    v67 = v66;
  v512 = ((((((v54 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v67 <= v512)
    v67 = ((((((v54 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
  v517 = v56;
  if (v67 <= v56)
    v67 = v56;
  if (v67 <= (((((v566 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16)
    v67 = (((((v566 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v513 = ((v33 + 7 + ((v52 + v31) & v32)) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v67 <= v513)
    v67 = ((v33 + 7 + ((v52 + v31) & v32)) & 0xFFFFFFFFFFFFFFF8) + 8;
  v511 = v529 + 1;
  if (v67 <= v529 + 1)
    v67 = v529 + 1;
  v545 = v542 & ~v562;
  v68 = ((((v531 + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 41;
  v459 = v12 + 24;
  v69 = (v48 + ((v12 + 24 + v535) & ~v12)) & ~v564;
  v536 = v37 + v580;
  v70 = v48;
  v539 = v60;
  v543 = v61;
  v532 = v62;
  v71 = v62 + ((v61 + ((v61 + ((v60 + ((v37 + v580 + v69) & ~v580)) & ~v565)) & ~v565)) & ~v565);
  v72 = (v537 + 15) & 0xFFFFFFFFFFFFFFF8;
  v73 = v559;
  v74 = ((v73 + 80) & ~v73) + v588;
  v75 = ((v73 + 56) & ~v73) + v588;
  v76 = ((((v558 + ((v556 + (v58 & 0xFFFFFFFFFFFFFFF8)) & ~v559)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v482 = v58;
  v77 = ((v58
        + ((v12
          + 8
          + ((((((((((v527 + 25) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v12)) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v78 = v523 + 40;
  v79 = v585 + 8;
  v80 = v57 + 8;
  v81 = ((v585 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  v524 = v12 + 8;
  v476 = v55;
  result = v572;
  v586 = v70;
  v83 = v37 + v564;
  v84 = v37 + 9;
  v85 = ((v554
        + ((v587
          + ((((v37
              + 9
              + ((v37
                + v564
                + ((v70
                  + ((v55 + ((v12 + 8 + ((((v533 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v12)) & ~v12)) & ~v564)) & ~v564)) & 0xFFFFFFFFFFFFFFF8)
            + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v580)) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v528 = v68;
  if (v67 <= v68)
    v86 = v68;
  else
    v86 = v67;
  if (v86 <= v567)
    v86 = v567;
  if (v86 <= v80)
    v86 = v80;
  if (v86 <= v59)
    v86 = v59;
  v87 = v71;
  if (v86 <= v576)
    v86 = v576;
  if (v86 <= v71)
    v86 = v71;
  v525 = v72 + 16;
  if (v86 <= v72 + 16)
    v86 = v72 + 16;
  if (v86 <= ((v566 + 9) & 0xFFFFFFFFFFFFFFF8) + 17)
    v86 = ((v566 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
  if (v86 <= v74)
    v86 = v74;
  if (v86 <= v75)
    v86 = v75;
  if (v86 <= v76)
    v86 = v76;
  if (v86 <= v568)
    v86 = v568;
  v530 = v77;
  if (v86 <= v77)
    v86 = v77;
  v534 = v78;
  if (v86 <= v78)
    v86 = v78;
  v88 = v85;
  if (v86 <= v72 + 8)
    v86 = v72 + 8;
  if (v86 <= v574)
    v86 = v574;
  if (v86 <= v537 + 8)
    v86 = v537 + 8;
  if (v86 <= v79)
    v86 = v79;
  if (v86 <= v81)
    v86 = v81;
  if (v86 <= v566)
    v86 = v566;
  if (v86 <= v85)
    v86 = v85;
  if (v86 <= v572)
    v86 = v572;
  if (v86 <= v570)
    v86 = v570;
  if (v86 <= 8)
    v89 = 8;
  else
    v89 = v86;
  v90 = ((v545 + v89 + 8) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v90 <= v548)
    v90 = v548;
  if (v90 <= 8)
    v90 = 8;
  if (*(unsigned __int8 *)(a1 + v90) >= 4u)
  {
    if (v90 <= 3)
      v91 = v90;
    else
      v91 = 4;
    __asm { BR              X13 }
  }
  switch(*(_BYTE *)(a1 + v90))
  {
    case 0:
      return (*(uint64_t (**)(uint64_t, uint64_t))(v502 + 8))(a1, v504);
    case 1:
      v450 = v87;
      v451 = v72 + 8;
      v446 = *(_DWORD *)(v547 + 84);
      v444 = v83;
      v445 = v84;
      v454 = v81;
      v452 = v80;
      v453 = v76;
      v503 = v74;
      v546 = v75;
      v549 = v79;
      swift_bridgeObjectRelease();
      v448 = ~v559;
      v92 = (a1 + v559 + 16) & ~v559;
      if (!__swift_getEnumTagSinglePayload(v92, 1, v522))
        (*(void (**)(uint64_t, uint64_t))(v498 + 8))(v92, v522);
      v551 = ~v580;
      v449 = ~v6;
      v560 = ~v12;
      v93 = ~v500;
      v501 = ~v579;
      v94 = (unsigned __int8 *)((v92 + v588 + v579) & ~v579);
      v447 = 8 * v521;
      if (*v94 > 2u)
        goto LABEL_159;
      v95 = (unint64_t)&v94[v497] & v501;
      v96 = *(unsigned __int8 *)(v95 + v496);
      if (v96 > 2)
        goto LABEL_159;
      if (v96 == 2)
      {
        if (*(_QWORD *)(((unint64_t)&v94[v497] & v501) + 8) >= 0xFFFFFFFFuLL)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(((unint64_t)&v94[v497] & v501) + 0x38))
            __swift_destroy_boxed_opaque_existential_1(v95 + 32);
        }
        v103 = (v95 + 79) & 0xFFFFFFFFFFFFFFF8;
        if (*(_QWORD *)(v103 + 8) >= 0xFFFFFFFFuLL)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(v103 + 56))
            __swift_destroy_boxed_opaque_existential_1(v103 + 32);
        }
        swift_bridgeObjectRelease();
        v104 = (((v103 + 79) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
        swift_bridgeObjectRelease();
        v105 = (v524 + v104) & v560;
        if (v557)
        {
          v106 = v493;
          if (v488 >= v493)
          {
            v107 = (v524 + v104) & v560;
            v106 = v488;
            v108 = v492;
          }
          else
          {
            v107 = (v491 + v105) & v93;
            v108 = v494;
          }
          EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v107, v106, v108);
        }
        else
        {
          if (!*(_BYTE *)(v105 + v521))
          {
LABEL_158:
            (*(void (**)(unint64_t, uint64_t))(v486 + 8))(v105, v492);
            (*(void (**)(unint64_t, uint64_t))(v487 + 8))((v491 + v105) & v93, v494);
            goto LABEL_159;
          }
          v109 = (*(unsigned __int8 *)(v105 + v521) - 1) << v447;
          if (v521 > 3)
            v109 = 0;
          if ((_DWORD)v521)
          {
            if (v521 <= 3)
              v110 = v521;
            else
              v110 = 4;
            __asm { BR              X11 }
          }
          EnumTagSinglePayload = v109 + 1;
        }
        if (EnumTagSinglePayload)
          goto LABEL_159;
        goto LABEL_158;
      }
      if (v96 != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_159;
      }
      __swift_destroy_boxed_opaque_existential_1((unint64_t)&v94[v497] & v501);
      v97 = (v556 + v95) & v448;
      if (!__swift_getEnumTagSinglePayload(v97, 1, v522))
        (*(void (**)(uint64_t, uint64_t))(v498 + 8))(v97, v522);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v98 = (((v558 + v97) & 0xFFFFFFFFFFFFFFF8) + 71) & 0xFFFFFFFFFFFFFFF8;
      swift_bridgeObjectRelease();
      v99 = (v98 + 23) & 0xFFFFFFFFFFFFFFF8;
      if (*(_QWORD *)(v99 + 24) >= 0xFFFFFFFFuLL)
        __swift_destroy_boxed_opaque_existential_1((v98 + 23) & 0xFFFFFFFFFFFFFFF8);
      v100 = (v587 + v99) & v551;
      if (v490 >= 0x7FFFFFFF)
      {
        v102 = (v489 + v100) & v449;
        if (__swift_getEnumTagSinglePayload(v102, v484, v495) > 1)
          goto LABEL_159;
        goto LABEL_144;
      }
      v101 = *(_QWORD *)(((v587 + v99) & v551) + 0x10);
      if (v101 >= 0xFFFFFFFF)
        LODWORD(v101) = -1;
      if ((int)v101 - 1 < 0)
      {
        v102 = (v489 + v100) & v449;
LABEL_144:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!__swift_getEnumTagSinglePayload(v102, 1, v495))
          (*(void (**)(uint64_t, uint64_t))(v481 + 8))(v102, v495);
      }
LABEL_159:
      v112 = (unint64_t)&v94[v561 + 11] & 0xFFFFFFFFFFFFFFF8;
      if (*(_QWORD *)(v112 + 24) >= 0xFFFFFFFFuLL)
      {
        __swift_destroy_boxed_opaque_existential_1((unint64_t)&v94[v561 + 11] & 0xFFFFFFFFFFFFFFF8);
        swift_bridgeObjectRelease();
      }
      v113 = ~v507;
      v114 = (v506 + v112) & ~v505;
      if (v508 >= 0x80000001)
      {
        v115 = (v499 + v114) & v113;
        if (__swift_getEnumTagSinglePayload(v115, v508, v510) <= 1)
        {
LABEL_165:
          swift_bridgeObjectRelease();
          if (!__swift_getEnumTagSinglePayload(v115, 1, v510))
            (*(void (**)(uint64_t, uint64_t))(v485 + 8))(v115, v510);
        }
      }
      else if (*(_QWORD *)(((v506 + v112) & ~v505) + 8) >= 0xFFFFFFFFuLL)
      {
        v115 = (v499 + v114) & v113;
        goto LABEL_165;
      }
      v116 = (v114 + v509 + v562) & ~v562;
      v118 = v536;
      v119 = ~v520;
      v120 = ~v564;
      v121 = ~v565;
      v563 = v116;
      switch(*(_BYTE *)(v116 + v89))
      {
        case 0:
          if (!__swift_getEnumTagSinglePayload(v116, 1, v522))
            (*(void (**)(unint64_t, uint64_t))(v498 + 8))(v116, v522);
          v581 = v88;
          v124 = (v558 + v116) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v124);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v125 = (v518
                + ((((((v124 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v541;
          if (v446 > 0x7FFFFFFE)
          {
            v129 = (v125 + 23) & 0xFFFFFFFFFFFFFFF8;
            v234 = __swift_getEnumTagSinglePayload((v520 + ((v129 + 23) & 0xFFFFFFFFFFFFFFF8) + 33) & v119, v446, v479);
            v128 = v584;
            if (v234)
              goto LABEL_417;
            goto LABEL_416;
          }
          LODWORD(v126) = -1;
          if (*(_QWORD *)(v125 + 8) < 0xFFFFFFFFuLL)
            v126 = *(_QWORD *)(v125 + 8);
          v127 = (v126 + 1) > 1;
          v128 = v584;
          if (!v127)
          {
            v129 = (v125 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_416:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v235 = (id *)((v129 + 47) & 0xFFFFFFFFFFFFFFF8);

            (*(void (**)(unint64_t, uint64_t))(v547 + 8))(((unint64_t)v235 + v520 + 9) & v119, v479);
            v128 = v584;
          }
LABEL_417:
          v236 = (v125 + v128) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v237 = (v519 + ((v236 + 23) & 0xFFFFFFFFFFFFFFF8)) & v560;
          if (v557)
            goto LABEL_450;
          v238 = v521;
          v123 = v576;
          v239 = v543;
          if (!*(_BYTE *)(v237 + v521))
            goto LABEL_591;
          v240 = (*(unsigned __int8 *)(v237 + v521) - 1) << v447;
          if (v521 > 3)
            v240 = 0;
          if ((_DWORD)v521)
          {
            if (v521 <= 3)
              v241 = v521;
            else
              v241 = 4;
            __asm { BR              X11 }
          }
          goto LABEL_589;
        case 1:
        case 0x17:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v122 = (v489 + ((v580 + v116 + 8) & v551)) & v449;
          v123 = v576;
          if (!__swift_getEnumTagSinglePayload(v122, 1, v495))
            goto LABEL_945;
          goto LABEL_316;
        case 2:
        case 6:
        case 7:
        case 0xB:
        case 0xE:
        case 0xF:
        case 0x12:
        case 0x19:
        case 0x1A:
        case 0x1B:
        case 0x1C:
        case 0x1F:
        case 0x2A:
        case 0x2C:
        case 0x2E:
        case 0x2F:
        case 0x30:
        case 0x31:
        case 0x34:
          goto LABEL_315;
        case 3:
          v441 = v93;
          v582 = v88;
          if (!__swift_getEnumTagSinglePayload(v116, 1, v522))
            (*(void (**)(unint64_t, uint64_t))(v498 + 8))(v116, v522);
          __swift_destroy_boxed_opaque_existential_1((v558 + v116) & 0xFFFFFFFFFFFFFFF8);
          v130 = (((v558 + v116) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          v131 = (v519 + v130) & v560;
          if (v557)
          {
            v132 = v493;
            if (v488 >= v493)
            {
              v133 = (v519 + v130) & v560;
              v132 = v488;
              v134 = v492;
            }
            else
            {
              v133 = (v491 + v131) & v93;
              v134 = v494;
            }
            v284 = __swift_getEnumTagSinglePayload(v133, v132, v134);
            v123 = v576;
          }
          else
          {
            v123 = v576;
            if (!*(_BYTE *)(v131 + v521))
              goto LABEL_696;
            v265 = (*(unsigned __int8 *)(v131 + v521) - 1) << v447;
            if (v521 > 3)
              v265 = 0;
            if ((_DWORD)v521)
            {
              if (v521 <= 3)
                v266 = v521;
              else
                v266 = 4;
              __asm { BR              X11 }
            }
            v284 = v265 + 1;
          }
          if (v284)
            goto LABEL_697;
LABEL_696:
          (*(void (**)(unint64_t, uint64_t))(v486 + 8))(v131, v492);
          (*(void (**)(unint64_t, uint64_t))(v487 + 8))((v491 + v131) & v93, v494);
LABEL_697:
          v340 = (v471 + v577 + v131) & ~v577;
          (*(void (**)(unint64_t, uint64_t))(v552 + 8))(v340, v470);
          v341 = (v462 + v340) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v341 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1((v462 + v340) & 0xFFFFFFFFFFFFFFF8);
          v342 = (v587 + v341) & v551;
          if (v490 >= 0x7FFFFFFF)
          {
            v344 = (v489 + v342) & v449;
            if (__swift_getEnumTagSinglePayload(v344, v484, v495) > 1)
              goto LABEL_707;
            goto LABEL_705;
          }
          v343 = *(_QWORD *)(((v587 + v341) & v551) + 0x10);
          if (v343 >= 0xFFFFFFFF)
            LODWORD(v343) = -1;
          if ((int)v343 - 1 < 0)
          {
            v344 = (v489 + v342) & v449;
LABEL_705:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!__swift_getEnumTagSinglePayload(v344, 1, v495))
              (*(void (**)(uint64_t, uint64_t))(v481 + 8))(v344, v495);
          }
LABEL_707:
          v345 = (v478 + v342) & v560;
          if (v557)
          {
            if (v488 >= v493)
              v346 = __swift_getEnumTagSinglePayload((v478 + v342) & v560, v488, v492);
            else
              v346 = __swift_getEnumTagSinglePayload((v491 + v345) & v93, v493, v494);
            v88 = v582;
            v347 = ~v564;
          }
          else
          {
            v88 = v582;
            v347 = ~v564;
            if (!*(_BYTE *)(v345 + v521))
              goto LABEL_780;
            v348 = (*(unsigned __int8 *)(v345 + v521) - 1) << v447;
            if (v521 > 3)
              v348 = 0;
            if ((_DWORD)v521)
            {
              if (v521 <= 3)
                v349 = v521;
              else
                v349 = 4;
              __asm { BR              X11 }
            }
            v346 = v348 + 1;
          }
          if (v346)
            goto LABEL_781;
LABEL_780:
          (*(void (**)(unint64_t, uint64_t))(v486 + 8))(v345, v492);
          (*(void (**)(unint64_t, uint64_t))(v487 + 8))((v491 + v345) & v93, v494);
LABEL_781:
          v198 = (_QWORD *)((v586 + v345) & v347);
          if ((v493 & 0x80000000) != 0)
          {
            v374 = __swift_getEnumTagSinglePayload(((unint64_t)v198 + v480) & v93, v493, v494);
          }
          else
          {
            v373 = *v198;
            if (*v198 >= 0xFFFFFFFFuLL)
              LODWORD(v373) = -1;
            v374 = v373 + 1;
          }
          if (v374)
            goto LABEL_316;
          swift_bridgeObjectRelease();
          v375 = v480;
          goto LABEL_844;
        case 4:
          v442 = v93;
          if (!__swift_getEnumTagSinglePayload(v116, 1, v522))
            (*(void (**)(unint64_t, uint64_t))(v498 + 8))(v116, v522);
          v135 = v88;
          v136 = (v558 + v116) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v136);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v137 = (((((v136 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v137 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v137);
          v138 = (v474 + v137) & v551;
          v139 = v482;
          if (v490 >= 0x7FFFFFFF)
          {
            v141 = (v489 + v138) & v449;
            v123 = v576;
            if (__swift_getEnumTagSinglePayload(v141, v484, v495) > 1)
              goto LABEL_429;
            goto LABEL_427;
          }
          v140 = *(_QWORD *)(((v474 + v137) & v551) + 0x10);
          if (v140 >= 0xFFFFFFFF)
            LODWORD(v140) = -1;
          v123 = v576;
          if ((int)v140 - 1 < 0)
          {
            v141 = (v489 + v138) & v449;
LABEL_427:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v139 = v482;
            if (!__swift_getEnumTagSinglePayload(v141, 1, v495))
              (*(void (**)(uint64_t, uint64_t))(v481 + 8))(v141, v495);
          }
LABEL_429:
          v242 = (v478 + v138) & v560;
          if (v557)
          {
            v243 = v488;
            if (v488 >= v493)
            {
              v244 = (v478 + v138) & v560;
              v245 = v492;
            }
            else
            {
              v243 = v493;
              v244 = (v491 + v242) & v442;
              v245 = v494;
            }
            v291 = __swift_getEnumTagSinglePayload(v244, v243, v245);
            v88 = v135;
          }
          else
          {
            v88 = v135;
            if (!*(_BYTE *)(v242 + v521))
              goto LABEL_758;
            v279 = (*(unsigned __int8 *)(v242 + v521) - 1) << v447;
            if (v521 > 3)
              v279 = 0;
            if ((_DWORD)v521)
            {
              if (v521 <= 3)
                v280 = v521;
              else
                v280 = 4;
              __asm { BR              X11 }
            }
            v291 = v279 + 1;
          }
          if (v291)
            goto LABEL_759;
LABEL_758:
          (*(void (**)(unint64_t, uint64_t))(v486 + 8))(v242, v492);
          (*(void (**)(unint64_t, uint64_t))(v487 + 8))((v491 + v242) & v442, v494);
LABEL_759:
          v365 = (v139 + v242) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v365 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v365);
          goto LABEL_840;
        case 5:
          if (!__swift_getEnumTagSinglePayload(v116, 1, v522))
            (*(void (**)(unint64_t, uint64_t))(v498 + 8))(v116, v522);
          __swift_destroy_boxed_opaque_existential_1((v558 + v116) & 0xFFFFFFFFFFFFFFF8);
          v142 = (v579 + ((v558 + v116) & 0xFFFFFFFFFFFFFFF8) + 40) & v501;
          v441 = v93;
          if (v483 == v475)
          {
            v143 = v88;
            v144 = v555;
            v123 = v576;
            v145 = v456;
            if (v555 < 2)
              goto LABEL_639;
            v146 = v142;
            v147 = v522;
LABEL_201:
            if (__swift_getEnumTagSinglePayload(v146, v144, v147) >= 2)
              goto LABEL_899;
            goto LABEL_639;
          }
          v246 = (v558 + v142) & 0xFFFFFFFFFFFFFFF8;
          if (v475 == 0x7FFFFFFF)
          {
            v143 = v88;
            v123 = v576;
            v145 = v456;
            if (*(_QWORD *)(v246 + 24) < 0xFFFFFFFFuLL)
              goto LABEL_899;
          }
          else
          {
            v293 = (v580
                  + ((((((v246 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                  + 65) & v551;
            v123 = v576;
            v143 = v88;
            if (v455 != v475)
            {
              v145 = v456;
              if (v557 < 2)
                goto LABEL_639;
              v146 = (v478 + v293) & v560;
              v144 = v488;
              if (v488 >= v493)
              {
                v147 = v492;
              }
              else
              {
                v146 = (v491 + v146) & v441;
                v144 = v493;
                v147 = v494;
              }
              goto LABEL_201;
            }
            v145 = v456;
            if (v490 > 0x7FFFFFFE)
            {
              v314 = __swift_getEnumTagSinglePayload((v489 + v293) & v449, v484, v495);
              if (v314 < 2)
                goto LABEL_639;
              v296 = v314 - 1;
            }
            else
            {
              v294 = *(_QWORD *)(v293 + 16);
              if (v294 >= 0xFFFFFFFF)
                LODWORD(v294) = -1;
              v295 = v294 - 1;
              if (v295 < 0)
                v295 = -1;
              v296 = v295 + 1;
            }
            if (v296 >= 2)
              goto LABEL_899;
          }
LABEL_639:
          if (!__swift_getEnumTagSinglePayload(v142, 1, v522))
            (*(void (**)(unint64_t, uint64_t))(v498 + 8))(v142, v522);
          __swift_destroy_boxed_opaque_existential_1((v558 + v142) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v315 = (((((((v558 + v142) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v315 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v315);
          v316 = (v474 + v315) & v551;
          if (v490 >= 0x7FFFFFFF)
          {
            v318 = (v489 + v316) & v449;
            if (__swift_getEnumTagSinglePayload(v318, v484, v495) > 1)
              goto LABEL_651;
            goto LABEL_649;
          }
          v317 = *(_QWORD *)(((v474 + v315) & v551) + 0x10);
          if (v317 >= 0xFFFFFFFF)
            LODWORD(v317) = -1;
          if ((int)v317 - 1 < 0)
          {
            v318 = (v489 + v316) & v449;
LABEL_649:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!__swift_getEnumTagSinglePayload(v318, 1, v495))
              (*(void (**)(uint64_t, uint64_t))(v481 + 8))(v318, v495);
          }
LABEL_651:
          v319 = (v478 + v316) & v560;
          if (v557)
          {
            v320 = v493;
            if (v488 >= v493)
            {
              v321 = (v478 + v316) & v560;
              v320 = v488;
              v322 = v492;
            }
            else
            {
              v321 = (v491 + v319) & v441;
              v322 = v494;
            }
            v326 = __swift_getEnumTagSinglePayload(v321, v320, v322);
            v323 = v482;
          }
          else
          {
            v323 = v482;
            if (!*(_BYTE *)(v319 + v521))
              goto LABEL_895;
            v324 = (*(unsigned __int8 *)(v319 + v521) - 1) << v447;
            if (v521 > 3)
              v324 = 0;
            if ((_DWORD)v521)
            {
              if (v521 <= 3)
                v325 = v521;
              else
                v325 = 4;
              __asm { BR              X11 }
            }
            v326 = v324 + 1;
          }
          if (v326)
            goto LABEL_896;
LABEL_895:
          (*(void (**)(unint64_t, uint64_t))(v486 + 8))(v319, v492);
          (*(void (**)(unint64_t, uint64_t))(v487 + 8))((v491 + v319) & v441, v494);
LABEL_896:
          v409 = (v323 + v319) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v409 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v409);
          swift_bridgeObjectRelease();
LABEL_899:
          v410 = ~v579;
          v411 = (unsigned __int8 *)((v145 + v142) & v501);
          if (*v411 > 2u)
            goto LABEL_949;
          v412 = (unint64_t)&v411[v497] & v501;
          v413 = *(unsigned __int8 *)(v412 + v496);
          if (v413 > 2)
            goto LABEL_949;
          if (v413 != 2)
          {
            if (v413 != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v410 = ~v579;
              goto LABEL_949;
            }
            __swift_destroy_boxed_opaque_existential_1((unint64_t)&v411[v497] & v501);
            v414 = (v556 + v412) & v448;
            if (!__swift_getEnumTagSinglePayload(v414, 1, v522))
              (*(void (**)(uint64_t, uint64_t))(v498 + 8))(v414, v522);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v415 = (((((v558 + v414) & 0xFFFFFFFFFFFFFFF8) + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
            if (*(_QWORD *)(v415 + 24) >= 0xFFFFFFFFuLL)
              __swift_destroy_boxed_opaque_existential_1(v415);
            v416 = (v587 + v415) & v551;
            if (v490 >= 0x7FFFFFFF)
            {
              v418 = (v489 + v416) & v449;
              v410 = ~v579;
              if (__swift_getEnumTagSinglePayload(v418, v484, v495) > 1)
                goto LABEL_949;
            }
            else
            {
              v417 = *(_QWORD *)(((v587 + v415) & v551) + 0x10);
              if (v417 >= 0xFFFFFFFF)
                LODWORD(v417) = -1;
              v410 = ~v579;
              if ((int)v417 - 1 >= 0)
              {
LABEL_949:
                swift_bridgeObjectRelease();
                v430 = (unsigned __int8 *)((v473 + ((unint64_t)&v411[v472] & 0xFFFFFFFFFFFFFFF8)) & v410);
                v118 = v536;
                v88 = v143;
                if (*v430 > 2u)
                  goto LABEL_316;
                v431 = (unint64_t)&v430[v497] & v501;
                v432 = *(unsigned __int8 *)(v431 + v496);
                if (v432 > 2)
                  goto LABEL_316;
                if (v432 != 2)
                {
                  if (v432 != 1)
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
LABEL_840:
                    swift_bridgeObjectRelease();
                    goto LABEL_316;
                  }
                  __swift_destroy_boxed_opaque_existential_1(v431);
                  v433 = (v556 + v431) & v448;
                  if (!__swift_getEnumTagSinglePayload(v433, 1, v522))
                    (*(void (**)(uint64_t, uint64_t))(v498 + 8))(v433, v522);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v434 = (((((v558 + v433) & 0xFFFFFFFFFFFFFFF8) + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
                  if (*(_QWORD *)(v434 + 24) >= 0xFFFFFFFFuLL)
                    __swift_destroy_boxed_opaque_existential_1(v434);
                  v379 = v587 + v434;
LABEL_799:
                  v165 = v379 & v551;
                  if (v490 >= 0x7FFFFFFF)
                  {
LABEL_230:
                    v122 = (v489 + v165) & v449;
                    if (__swift_getEnumTagSinglePayload(v122, v484, v495) > 1)
                      goto LABEL_316;
                    v583 = v88;
                    goto LABEL_832;
                  }
LABEL_800:
                  v380 = *(_QWORD *)(v165 + 16);
                  if (v380 >= 0xFFFFFFFF)
                    LODWORD(v380) = -1;
                  if ((int)v380 - 1 >= 0)
                    goto LABEL_316;
                  v583 = v88;
                  goto LABEL_830;
                }
                if (*(_QWORD *)(v431 + 8) >= 0xFFFFFFFFuLL)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (*(_QWORD *)(v431 + 56))
                    __swift_destroy_boxed_opaque_existential_1(v431 + 32);
                }
                v435 = (v431 + 79) & 0xFFFFFFFFFFFFFFF8;
                if (*(_QWORD *)(v435 + 8) >= 0xFFFFFFFFuLL)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (*(_QWORD *)(v435 + 56))
                    __swift_destroy_boxed_opaque_existential_1(v435 + 32);
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v198 = (_QWORD *)((v524 + ((((v435 + 79) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v560);
                if (v557)
                {
                  v436 = v493;
                  if (v488 >= v493)
                  {
                    v437 = (uint64_t)v198;
                    v436 = v488;
                    v438 = v492;
                  }
                  else
                  {
                    v437 = ((unint64_t)v198 + v491) & v441;
                    v438 = v494;
                  }
                  v288 = __swift_getEnumTagSinglePayload(v437, v436, v438);
                }
                else
                {
                  if (!*((_BYTE *)v198 + v521))
                    goto LABEL_843;
                  v439 = (*((unsigned __int8 *)v198 + v521) - 1) << v447;
                  if (v521 > 3)
                    v439 = 0;
                  if ((_DWORD)v521)
                  {
                    if (v521 <= 3)
                      v440 = v521;
                    else
                      v440 = 4;
                    __asm { BR              X11 }
                  }
                  v288 = v439 + 1;
                  v123 = v576;
                  v118 = v536;
                }
LABEL_842:
                if (v288)
                  goto LABEL_316;
LABEL_843:
                (*(void (**)(_QWORD *, uint64_t))(v486 + 8))(v198, v492);
                v375 = v491;
LABEL_844:
                v381 = ((unint64_t)v198 + v375) & v441;
LABEL_845:
                (*(void (**)(unint64_t, uint64_t))(v487 + 8))(v381, v494);
                goto LABEL_316;
              }
              v418 = (v489 + v416) & v449;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v410 = ~v579;
            if (!__swift_getEnumTagSinglePayload(v418, 1, v495))
              (*(void (**)(uint64_t, uint64_t))(v481 + 8))(v418, v495);
            goto LABEL_949;
          }
          if (*(_QWORD *)(((unint64_t)&v411[v497] & v501) + 8) >= 0xFFFFFFFFuLL)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(_QWORD *)(((unint64_t)&v411[v497] & v501) + 0x38))
              __swift_destroy_boxed_opaque_existential_1(v412 + 32);
          }
          v419 = (v412 + 79) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v419 + 8) >= 0xFFFFFFFFuLL)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(_QWORD *)(v419 + 56))
              __swift_destroy_boxed_opaque_existential_1(v419 + 32);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v420 = (v524 + ((((v419 + 79) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v560;
          if (v557)
          {
            v421 = v488;
            if (v488 >= v493)
            {
              v422 = v420;
              v423 = v492;
            }
            else
            {
              v422 = (v491 + v420) & v441;
              v421 = v493;
              v423 = v494;
            }
            v426 = __swift_getEnumTagSinglePayload(v422, v421, v423);
          }
          else
          {
            v410 = ~v579;
            if (!*(_BYTE *)(v420 + v521))
            {
LABEL_948:
              (*(void (**)(unint64_t, uint64_t))(v486 + 8))(v420, v492);
              (*(void (**)(unint64_t, uint64_t))(v487 + 8))((v491 + v420) & v441, v494);
              goto LABEL_949;
            }
            v424 = (*(unsigned __int8 *)(v420 + v521) - 1) << v447;
            if (v521 > 3)
              v424 = 0;
            if ((_DWORD)v521)
            {
              if (v521 <= 3)
                v425 = v521;
              else
                v425 = 4;
              __asm { BR              X11 }
            }
            v426 = v424 + 1;
            v123 = v576;
          }
          v410 = ~v579;
          if (v426)
            goto LABEL_949;
          goto LABEL_948;
        case 8:
          v148 = v88;
          if (!__swift_getEnumTagSinglePayload(v116, 1, v522))
            (*(void (**)(unint64_t, uint64_t))(v498 + 8))(v116, v522);
          v149 = (v558 + v116) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v149);
          v150 = (v587 + v149) & v551;
          if (v490 >= 0x7FFFFFFF)
          {
            v152 = (v489 + v150) & v449;
            v123 = v576;
            if (__swift_getEnumTagSinglePayload(v152, v484, v495) > 1)
              goto LABEL_438;
            goto LABEL_436;
          }
          v151 = *(_QWORD *)(((v587 + v149) & v551) + 0x10);
          if (v151 >= 0xFFFFFFFF)
            LODWORD(v151) = -1;
          v123 = v576;
          if ((int)v151 - 1 < 0)
          {
            v152 = (v489 + v150) & v449;
LABEL_436:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!__swift_getEnumTagSinglePayload(v152, 1, v495))
              (*(void (**)(uint64_t, uint64_t))(v481 + 8))(v152, v495);
          }
LABEL_438:
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(((((((v554 + v150) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                         + 8) >= 0xFFFFFFFFuLL)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          goto LABEL_889;
        case 9:
          if (!__swift_getEnumTagSinglePayload(v116, 1, v522))
            (*(void (**)(unint64_t, uint64_t))(v498 + 8))(v116, v522);
          v153 = (v558 + v116) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v153);
          swift_bridgeObjectRelease();
          v154 = (v578 + ((v153 + 47) & 0xFFFFFFFFFFFFFFF8) + 16) & v449;
          if (!__swift_getEnumTagSinglePayload(v154, 1, v495))
            (*(void (**)(unint64_t, uint64_t))(v481 + 8))(v154, v495);
          v155 = (v458 + v154) & v560;
          if (v557)
          {
            v156 = v493;
            if (v488 >= v493)
            {
              v157 = v155;
              v156 = v488;
              v158 = v492;
            }
            else
            {
              v157 = (v491 + v155) & v93;
              v158 = v494;
            }
            v285 = __swift_getEnumTagSinglePayload(v157, v156, v158);
            v123 = v576;
          }
          else
          {
            v123 = v576;
            if (!*(_BYTE *)(v155 + v521))
              goto LABEL_722;
            v267 = (*(unsigned __int8 *)(v155 + v521) - 1) << v447;
            if (v521 > 3)
              v267 = 0;
            if ((_DWORD)v521)
            {
              if (v521 <= 3)
                v268 = v521;
              else
                v268 = 4;
              __asm { BR              X11 }
            }
            v285 = v267 + 1;
          }
          if (v285)
            goto LABEL_723;
LABEL_722:
          (*(void (**)(unint64_t, uint64_t))(v486 + 8))(v155, v492);
          (*(void (**)(unint64_t, uint64_t))(v487 + 8))((v491 + v155) & v93, v494);
LABEL_723:
          v350 = (v465 + v155) & v560;
          if (v557)
          {
            v351 = v493;
            if (v488 >= v493)
            {
              v352 = v350;
              v351 = v488;
              v353 = v492;
            }
            else
            {
              v352 = (v491 + v350) & v93;
              v353 = v494;
            }
            v356 = __swift_getEnumTagSinglePayload(v352, v351, v353);
          }
          else
          {
            if (!*(_BYTE *)(v350 + v521))
              goto LABEL_790;
            v354 = (*(unsigned __int8 *)(v350 + v521) - 1) << v447;
            if (v521 > 3)
              v354 = 0;
            if ((_DWORD)v521)
            {
              if (v521 <= 3)
                v355 = v521;
              else
                v355 = 4;
              __asm { BR              X11 }
            }
            v356 = v354 + 1;
          }
          if (v356)
            goto LABEL_791;
LABEL_790:
          (*(void (**)(uint64_t, uint64_t))(v486 + 8))(v350, v492);
          (*(void (**)(uint64_t, uint64_t))(v487 + 8))((v491 + v350) & v93, v494);
LABEL_791:
          v376 = (uint64_t *)((v586 + v350) & v120);
          if ((v493 & 0x80000000) != 0)
          {
            v378 = __swift_getEnumTagSinglePayload(((unint64_t)v376 + v480) & v93, v493, v494);
          }
          else
          {
            v377 = *v376;
            if ((unint64_t)*v376 >= 0xFFFFFFFF)
              LODWORD(v377) = -1;
            v378 = v377 + 1;
          }
          if (!v378)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v487 + 8))(((unint64_t)v376 + v480) & v93, v494);
          }
          v379 = (uint64_t)v376 + v536;
          goto LABEL_799;
        case 0xA:
          __swift_destroy_boxed_opaque_existential_1(v116);
          v159 = (v556 + v116) & v448;
          if (!__swift_getEnumTagSinglePayload(v159, 1, v522))
            (*(void (**)(uint64_t, uint64_t))(v498 + 8))(v159, v522);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_315;
        case 0xC:
          if (!__swift_getEnumTagSinglePayload(v116, 1, v522))
            (*(void (**)(unint64_t, uint64_t))(v498 + 8))(v116, v522);
          v148 = v88;
          v160 = (v558 + v116) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v160);
          v161 = (v520 + v160 + 40) & v541;
          if (v446 > 0x7FFFFFFE)
          {
            v163 = (v161 + 23) & 0xFFFFFFFFFFFFFFF8;
            if (__swift_getEnumTagSinglePayload((v520 + ((v163 + 23) & 0xFFFFFFFFFFFFFFF8) + 33) & v119, v446, v479))goto LABEL_443;
            goto LABEL_442;
          }
          LODWORD(v162) = -1;
          if (*(_QWORD *)(v161 + 8) < 0xFFFFFFFFuLL)
            v162 = *(_QWORD *)(v161 + 8);
          if ((v162 + 1) <= 1)
          {
            v163 = (v161 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_442:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v247 = (id *)((v163 + 47) & 0xFFFFFFFFFFFFFFF8);

            (*(void (**)(unint64_t, uint64_t))(v547 + 8))(((unint64_t)v247 + v520 + 9) & v119, v479);
          }
LABEL_443:
          swift_bridgeObjectRelease();
          v123 = v576;
          goto LABEL_890;
        case 0xD:
          __swift_destroy_boxed_opaque_existential_1(v116);
          v164 = (v556 + v116) & v448;
          if (!__swift_getEnumTagSinglePayload(v164, 1, v522))
            (*(void (**)(uint64_t, uint64_t))(v498 + 8))(v164, v522);
          swift_bridgeObjectRelease();
          v165 = (v580 + 17 + ((v558 + v164) & 0xFFFFFFFFFFFFFFF8)) & v551;
          v123 = v576;
          if (v490 >= 0x7FFFFFFF)
            goto LABEL_230;
          goto LABEL_800;
        case 0x10:
          __swift_destroy_boxed_opaque_existential_1(v116);
          v166 = (v556 + v116) & v448;
          if (!__swift_getEnumTagSinglePayload(v166, 1, v522))
            (*(void (**)(uint64_t, uint64_t))(v498 + 8))(v166, v522);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v167 = (((((((v558 + v166) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v167 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v167);
          v168 = v167 + 47;
          goto LABEL_306;
        case 0x11:
          __swift_destroy_boxed_opaque_existential_1(v116);
          v169 = (v556 + v116) & v448;
          if (!__swift_getEnumTagSinglePayload(v169, 1, v522))
            (*(void (**)(uint64_t, uint64_t))(v498 + 8))(v169, v522);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v170 = (((((((((v558 + v169) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                  + 23) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v170 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v170);
          v171 = (v170 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v171 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v171);
          v172 = (v171 + 47) & 0xFFFFFFFFFFFFFFF8;
          v123 = v576;
          if (*(_QWORD *)(v172 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v172);
          v173 = (v461 + v172) & v560;
          if (v557)
          {
            v174 = v493;
            if (v488 >= v493)
            {
              v175 = v173;
              v174 = v488;
              v176 = v492;
            }
            else
            {
              v175 = (v491 + v173) & v93;
              v176 = v494;
            }
            v286 = __swift_getEnumTagSinglePayload(v175, v174, v176);
          }
          else
          {
            if (!*(_BYTE *)(v173 + v521))
              goto LABEL_738;
            v269 = (*(unsigned __int8 *)(v173 + v521) - 1) << v447;
            if (v521 > 3)
              v269 = 0;
            if ((_DWORD)v521)
            {
              if (v521 <= 3)
                v270 = v521;
              else
                v270 = 4;
              __asm { BR              X11 }
            }
            v286 = v269 + 1;
          }
          if (v286)
            goto LABEL_739;
LABEL_738:
          (*(void (**)(unint64_t, uint64_t))(v486 + 8))(v173, v492);
          (*(void (**)(unint64_t, uint64_t))(v487 + 8))((v491 + v173) & v93, v494);
LABEL_739:
          v357 = (v476 + v173) & v560;
          if (v557)
          {
            v358 = v493;
            v359 = v93;
            if (v488 >= v493)
            {
              v360 = v357;
              v358 = v488;
              v361 = v492;
            }
            else
            {
              v360 = (v491 + v357) & v93;
              v361 = v494;
            }
            v364 = __swift_getEnumTagSinglePayload(v360, v358, v361);
          }
          else
          {
            v359 = v93;
            if (!*(_BYTE *)(v357 + v521))
              goto LABEL_806;
            v362 = (*(unsigned __int8 *)(v357 + v521) - 1) << v447;
            if (v521 > 3)
              v362 = 0;
            if ((_DWORD)v521)
            {
              if (v521 <= 3)
                v363 = v521;
              else
                v363 = 4;
              __asm { BR              X11 }
            }
            v364 = v362 + 1;
          }
          if (v364)
            goto LABEL_316;
LABEL_806:
          (*(void (**)(uint64_t, uint64_t))(v486 + 8))(v357, v492);
          v381 = (v491 + v357) & v359;
          goto LABEL_845;
        case 0x13:
          if (!__swift_getEnumTagSinglePayload(v116, 1, v522))
            (*(void (**)(unint64_t, uint64_t))(v498 + 8))(v116, v522);
          __swift_destroy_boxed_opaque_existential_1((v558 + v116) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_315;
        case 0x14:
          v177 = v88;
          if (!__swift_getEnumTagSinglePayload(v116, 1, v522))
            (*(void (**)(unint64_t, uint64_t))(v498 + 8))(v116, v522);
          __swift_destroy_boxed_opaque_existential_1((v558 + v116) & 0xFFFFFFFFFFFFFFF8);
          v178 = (v558 + v116) & 0xFFFFFFFFFFFFFFF8;
          v179 = (v579 + v178 + 40) & v501;
          if (v483 == v475)
          {
            v180 = v555;
            v123 = v576;
            if (v555 < 2)
              goto LABEL_667;
            v181 = (v579 + v178 + 40) & v501;
            v182 = v522;
LABEL_256:
            if (__swift_getEnumTagSinglePayload(v181, v180, v182) >= 2)
              goto LABEL_938;
            goto LABEL_667;
          }
          v248 = (v558 + v179) & 0xFFFFFFFFFFFFFFF8;
          if (v475 == 0x7FFFFFFF)
          {
            v123 = v576;
            if (*(_QWORD *)(v248 + 24) < 0xFFFFFFFFuLL)
              goto LABEL_938;
          }
          else
          {
            v297 = (v587
                  + ((((((((v248 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                    + 47) & 0xFFFFFFFFFFFFFFF8)) & v551;
            v123 = v576;
            if (v455 != v475)
            {
              if (v557 < 2)
                goto LABEL_667;
              v181 = (v478 + v297) & v560;
              v180 = v488;
              if (v488 >= v493)
              {
                v182 = v492;
              }
              else
              {
                v181 = (v491 + v181) & v93;
                v180 = v493;
                v182 = v494;
              }
              goto LABEL_256;
            }
            if (v490 > 0x7FFFFFFE)
            {
              v327 = __swift_getEnumTagSinglePayload((v489 + v297) & v449, v484, v495);
              if (v327 < 2)
                goto LABEL_667;
              v300 = v327 - 1;
            }
            else
            {
              v298 = *(_QWORD *)(v297 + 16);
              if (v298 >= 0xFFFFFFFF)
                LODWORD(v298) = -1;
              v299 = v298 - 1;
              if (v299 < 0)
                v299 = -1;
              v300 = v299 + 1;
            }
            if (v300 >= 2)
              goto LABEL_938;
          }
LABEL_667:
          if (!__swift_getEnumTagSinglePayload(v179, 1, v522))
            (*(void (**)(uint64_t, uint64_t))(v498 + 8))(v179, v522);
          __swift_destroy_boxed_opaque_existential_1((v558 + v179) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v328 = (((((((v558 + v179) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v328 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v328);
          v329 = (v328 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v329 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v329);
          v330 = (v587 + v329) & v551;
          if (v490 >= 0x7FFFFFFF)
          {
            v332 = (v489 + v330) & v449;
            if (__swift_getEnumTagSinglePayload(v332, v484, v495) > 1)
              goto LABEL_681;
          }
          else
          {
            v331 = *(_QWORD *)(((v587 + v329) & v551) + 0x10);
            if (v331 >= 0xFFFFFFFF)
              LODWORD(v331) = -1;
            if ((int)v331 - 1 >= 0)
            {
LABEL_681:
              v333 = (v478 + v330) & v560;
              if (v557)
              {
                v334 = v488;
                if (v488 >= v493)
                {
                  v335 = (v478 + v330) & v560;
                  v336 = v492;
                }
                else
                {
                  v334 = v493;
                  v335 = (v491 + v333) & v93;
                  v336 = v494;
                }
                v339 = __swift_getEnumTagSinglePayload(v335, v334, v336);
              }
              else
              {
                if (!*(_BYTE *)(v333 + v521))
                  goto LABEL_937;
                v337 = (*(unsigned __int8 *)(v333 + v521) - 1) << v447;
                if (v521 > 3)
                  v337 = 0;
                if ((_DWORD)v521)
                {
                  if (v521 <= 3)
                    v338 = v521;
                  else
                    v338 = 4;
                  __asm { BR              X11 }
                }
                v339 = v337 + 1;
              }
              if (v339)
              {
LABEL_938:
                v427 = (v467 + v179) & 0xFFFFFFFFFFFFFFF8;
                swift_bridgeObjectRelease();
                v428 = (v468 + v427) & v551;
                if (v490 >= 0x7FFFFFFF)
                {
                  v122 = (v489 + v428) & v449;
                  v88 = v177;
                  if (__swift_getEnumTagSinglePayload(v122, v484, v495) > 1)
                    goto LABEL_316;
                }
                else
                {
                  v429 = *(_QWORD *)(((v468 + v427) & v551) + 0x10);
                  if (v429 >= 0xFFFFFFFF)
                    LODWORD(v429) = -1;
                  v88 = v177;
                  if ((int)v429 - 1 >= 0)
                    goto LABEL_316;
                  v122 = (v489 + v428) & v449;
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v88 = v177;
                if (!__swift_getEnumTagSinglePayload(v122, 1, v495))
LABEL_945:
                  (*(void (**)(uint64_t, uint64_t))(v481 + 8))(v122, v495);
LABEL_316:
                v214 = v588;
                goto LABEL_317;
              }
LABEL_937:
              (*(void (**)(unint64_t, uint64_t))(v486 + 8))(v333, v492);
              (*(void (**)(unint64_t, uint64_t))(v487 + 8))((v491 + v333) & v93, v494);
              goto LABEL_938;
            }
            v332 = (v489 + v330) & v449;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v118 = v536;
          if (!__swift_getEnumTagSinglePayload(v332, 1, v495))
            (*(void (**)(uint64_t, uint64_t))(v481 + 8))(v332, v495);
          goto LABEL_681;
        case 0x15:
          if (!__swift_getEnumTagSinglePayload(v116, 1, v522))
            (*(void (**)(unint64_t, uint64_t))(v498 + 8))(v116, v522);
          goto LABEL_302;
        case 0x16:
          if (!__swift_getEnumTagSinglePayload(v116, 1, v522))
            (*(void (**)(unint64_t, uint64_t))(v498 + 8))(v116, v522);
          v581 = v88;
          v183 = (v558 + v116) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v183);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v184 = (v518
                + ((((((v183 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v541;
          if (v446 > 0x7FFFFFFE)
          {
            v187 = (v184 + 23) & 0xFFFFFFFFFFFFFFF8;
            v249 = __swift_getEnumTagSinglePayload((v520 + ((v187 + 23) & 0xFFFFFFFFFFFFFFF8) + 33) & v119, v446, v479);
            v186 = v584;
            if (v249)
              goto LABEL_449;
            goto LABEL_448;
          }
          LODWORD(v185) = -1;
          if (*(_QWORD *)(v184 + 8) < 0xFFFFFFFFuLL)
            v185 = *(_QWORD *)(v184 + 8);
          v127 = (v185 + 1) > 1;
          v186 = v584;
          if (!v127)
          {
            v187 = (v184 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_448:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v250 = (id *)((v187 + 47) & 0xFFFFFFFFFFFFFFF8);

            (*(void (**)(unint64_t, uint64_t))(v547 + 8))(((unint64_t)v250 + v520 + 9) & v119, v479);
            v186 = v584;
          }
LABEL_449:
          v251 = (v184 + v186) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          v237 = (v459 + v251) & v560;
          if (v557)
          {
LABEL_450:
            v252 = v493;
            v123 = v576;
            v239 = v543;
            if (v488 >= v493)
            {
              v253 = v237;
              v252 = v488;
              v254 = v492;
            }
            else
            {
              v253 = (v491 + v237) & v93;
              v254 = v494;
            }
            v255 = __swift_getEnumTagSinglePayload(v253, v252, v254);
          }
          else
          {
            v238 = v521;
            v123 = v576;
            v239 = v543;
            if (!*(_BYTE *)(v237 + v521))
              goto LABEL_591;
            v240 = (*(unsigned __int8 *)(v237 + v521) - 1) << v447;
            if (v521 > 3)
              v240 = 0;
            if ((_DWORD)v521)
            {
              if (v521 <= 3)
                v281 = v521;
              else
                v281 = 4;
              __asm { BR              X11 }
            }
LABEL_589:
            v255 = (v238 | v240) + 1;
          }
          if (v255)
            goto LABEL_592;
LABEL_591:
          (*(void (**)(unint64_t, uint64_t))(v486 + 8))(v237, v492);
          (*(void (**)(unint64_t, uint64_t))(v487 + 8))((v491 + v237) & v93, v494);
LABEL_592:
          v301 = (uint64_t *)((v586 + v237) & v120);
          if ((v493 & 0x80000000) != 0)
          {
            v303 = __swift_getEnumTagSinglePayload(((unint64_t)v301 + v480) & v93, v493, v494);
          }
          else
          {
            v302 = *v301;
            if ((unint64_t)*v301 >= 0xFFFFFFFF)
              LODWORD(v302) = -1;
            v303 = v302 + 1;
          }
          if (!v303)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v487 + 8))(((unint64_t)v301 + v480) & v93, v494);
          }
          v304 = ((unint64_t)v301 + v536) & v551;
          if (v490 >= 0x7FFFFFFF)
          {
            v307 = (v489 + v304) & v449;
            v306 = v588 + 7;
            if (__swift_getEnumTagSinglePayload(v307, v484, v495) > 1)
              goto LABEL_607;
            goto LABEL_605;
          }
          v305 = *(_QWORD *)((((unint64_t)v301 + v536) & v551) + 0x10);
          if (v305 >= 0xFFFFFFFF)
            LODWORD(v305) = -1;
          v306 = v588 + 7;
          if ((int)v305 - 1 < 0)
          {
            v307 = (v489 + v304) & v449;
LABEL_605:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v239 = v543;
            if (!__swift_getEnumTagSinglePayload(v307, 1, v495))
              (*(void (**)(uint64_t, uint64_t))(v481 + 8))(v307, v495);
          }
LABEL_607:
          v308 = (v539 + v304) & v121;
          if (v483 < 0x7FFFFFFF)
          {
            v88 = v581;
            if (*(_QWORD *)(((v306 + v308) & 0xFFFFFFFFFFFFF8) + 0x18) <= 0xFFFFFFFEuLL)
            {
              v310 = (v239 + v308) & v121;
              goto LABEL_619;
            }
          }
          else
          {
            v309 = __swift_getEnumTagSinglePayload((v539 + v304) & v121, v555, v522);
            v88 = v581;
            if (v309 >= 2)
            {
              v310 = (v239 + v308) & v121;
              goto LABEL_616;
            }
          }
          if (!__swift_getEnumTagSinglePayload(v308, 1, v522))
            (*(void (**)(uint64_t, uint64_t))(v498 + 8))(v308, v522);
          __swift_destroy_boxed_opaque_existential_1((v306 + v308) & 0xFFFFFFFFFFFFFFF8);
          if (*(_QWORD *)(((((v306 + v308) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1((((v306 + v308) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          v310 = (v239 + v308) & v121;
          v88 = v581;
          if (v483 >= 0x7FFFFFFF)
          {
LABEL_616:
            if (__swift_getEnumTagSinglePayload(v310, v555, v522) >= 2)
            {
              v311 = (v239 + v310) & v121;
              goto LABEL_625;
            }
            goto LABEL_620;
          }
LABEL_619:
          if (*(_QWORD *)(((v306 + v310) & 0xFFFFFFFFFFFFF8) + 0x18) <= 0xFFFFFFFEuLL)
          {
            v311 = (v239 + v310) & v121;
            goto LABEL_628;
          }
LABEL_620:
          if (!__swift_getEnumTagSinglePayload(v310, 1, v522))
            (*(void (**)(uint64_t, uint64_t))(v498 + 8))(v310, v522);
          __swift_destroy_boxed_opaque_existential_1((v306 + v310) & 0xFFFFFFFFFFFFFFF8);
          if (*(_QWORD *)(((((v306 + v310) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1((((v306 + v310) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          v311 = (v239 + v310) & v121;
          v88 = v581;
          if (v483 >= 0x7FFFFFFF)
          {
LABEL_625:
            if (__swift_getEnumTagSinglePayload(v311, v555, v522) >= 2)
              goto LABEL_634;
            goto LABEL_629;
          }
LABEL_628:
          if (*(_QWORD *)(((v306 + v311) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
            goto LABEL_634;
LABEL_629:
          if (!__swift_getEnumTagSinglePayload(v311, 1, v522))
            (*(void (**)(uint64_t, uint64_t))(v498 + 8))(v311, v522);
          v312 = (v306 + v311) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v312);
          v313 = (v312 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v313 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v313);
          swift_bridgeObjectRelease();
LABEL_634:
          v214 = v477;
          if (!v555)
            goto LABEL_316;
LABEL_317:
          v215 = v532
               + ((v543
                 + ((v543
                   + ((v539
                     + ((v118
                       + ((v586
                         + ((v519
                           + ((((((v518
                                 + ((((((((v214 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                   + 15) & 0xFFFFFFFFFFFFFFF8)) & v541)
                               + v584) & 0xFFFFFFFFFFFFFFF8)
                             + 23) & 0xFFFFFFFFFFFFFFF8)) & v560)) & v120)) & v551)) & v121)) & v121)) & v121);
          if (v526 > v215)
            v215 = v526;
          if (v215 <= v516)
            v215 = v516;
          if (v215 <= v515)
            v215 = v515;
          if (v215 <= v514)
            v215 = v514;
          if (v215 <= v512)
            v215 = v512;
          if (v215 <= v517)
            v215 = v517;
          if (v215 <= (((((v566 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                     + 16)
            v215 = (((((v566 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
          if (v215 <= v513)
            v215 = v513;
          if (v215 <= v511)
            v215 = v511;
          if (v215 <= v528)
            v215 = v528;
          if (v215 <= v567)
            v215 = v567;
          if (v215 <= v452)
            v215 = v452;
          if (v215 <= v59)
            v215 = v59;
          if (v215 <= v123)
            v215 = v123;
          if (v215 <= v450)
            v215 = v450;
          if (v215 <= v526)
            v215 = v526;
          if (v215 <= v525)
            v215 = v525;
          if (v215 <= ((v566 + 9) & 0xFFFFFFFFFFFFFFF8) + 17)
            v215 = ((v566 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
          if (v215 <= v503)
            v215 = v503;
          if (v215 <= v546)
            v215 = v546;
          if (v215 <= v453)
            v215 = v453;
          if (v215 <= v568)
            v215 = v568;
          if (v215 <= v530)
            v215 = v530;
          if (v215 <= v534)
            v215 = v534;
          if (v215 <= v451)
            v215 = v451;
          if (v215 <= v574)
            v215 = v574;
          if (v215 <= v537 + 8)
            v215 = v537 + 8;
          if (v215 <= v549)
            v215 = v549;
          if (v215 <= v454)
            v215 = v454;
          if (v215 <= v566)
            v215 = v566;
          if (v215 <= v88)
            v215 = v88;
          if (v215 <= v572)
            v215 = v572;
          if (v215 <= v570)
            v215 = v570;
          if (v215 <= 8)
            v215 = 8;
          result = *(_QWORD *)((v563 + v215 + 8) & 0xFFFFFFFFFFFFF8);
          v216 = -1;
          if (result < 0xFFFFFFFF)
            v216 = result;
          if (v216 - 1 < 0)
            return swift_bridgeObjectRelease();
          return result;
        case 0x18:
          if (!__swift_getEnumTagSinglePayload(v116, 1, v522))
            (*(void (**)(unint64_t, uint64_t))(v498 + 8))(v116, v522);
          __swift_destroy_boxed_opaque_existential_1((v558 + v116) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          goto LABEL_315;
        case 0x1D:
          __swift_destroy_boxed_opaque_existential_1(v116);
          v188 = (v556 + v116) & v448;
          if (!__swift_getEnumTagSinglePayload(v188, 1, v522))
            (*(void (**)(uint64_t, uint64_t))(v498 + 8))(v188, v522);
          goto LABEL_315;
        case 0x1E:
          __swift_destroy_boxed_opaque_existential_1(v116);
          swift_bridgeObjectRelease();
          v116 = (((v116 + 51) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          v189 = v553;
          goto LABEL_277;
        case 0x20:
          swift_bridgeObjectRelease();
          v116 = (v116 + 23) & 0xFFFFFFFFFFFFFFF8;
          goto LABEL_276;
        case 0x21:
          if (v557)
          {
            v191 = v493;
            v192 = v482;
            if (v488 >= v493)
            {
              v193 = v116;
              v191 = v488;
              v194 = v492;
            }
            else
            {
              v193 = (v491 + v116) & v93;
              v194 = v494;
            }
            v287 = __swift_getEnumTagSinglePayload(v193, v191, v194);
            v123 = v576;
          }
          else
          {
            v123 = v576;
            v192 = v482;
            if (!*(_BYTE *)(v116 + v521))
              goto LABEL_836;
            v271 = (*(unsigned __int8 *)(v116 + v521) - 1) << v447;
            if (v521 > 3)
              v271 = 0;
            if ((_DWORD)v521)
            {
              if (v521 <= 3)
                v272 = v521;
              else
                v272 = 4;
              __asm { BR              X11 }
            }
            v287 = v271 + 1;
          }
          if (v287)
            goto LABEL_837;
LABEL_836:
          (*(void (**)(unint64_t, uint64_t))(v486 + 8))(v116, v492);
          (*(void (**)(unint64_t, uint64_t))(v487 + 8))((v491 + v116) & v93, v494);
LABEL_837:
          v390 = (v192 + v116) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v390);
          v391 = (v556 + v390) & v448;
          if (!__swift_getEnumTagSinglePayload(v391, 1, v522))
            (*(void (**)(uint64_t, uint64_t))(v498 + 8))(v391, v522);
          swift_bridgeObjectRelease();
          goto LABEL_840;
        case 0x22:
          v441 = v93;
          v195 = v88;
          if (!__swift_getEnumTagSinglePayload(v116, 1, v522))
            (*(void (**)(unint64_t, uint64_t))(v498 + 8))(v116, v522);
          v196 = (v558 + v116) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v196);
          v197 = (v587 + v196) & v551;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!__swift_getEnumTagSinglePayload((v489 + v197) & v449, 1, v495))
            (*(void (**)(unint64_t, uint64_t))(v481 + 8))((v489 + v197) & v449, v495);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v198 = (_QWORD *)((v460 + ((((v554 + v197) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v560);
          v123 = v576;
          if (v557)
          {
            v199 = v488;
            if (v488 >= v493)
            {
              v200 = (v460 + ((((v554 + v197) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v560;
              v201 = v492;
            }
            else
            {
              v199 = v493;
              v200 = ((unint64_t)v198 + v491) & v441;
              v201 = v494;
            }
            v288 = __swift_getEnumTagSinglePayload(v200, v199, v201);
            v88 = v195;
          }
          else
          {
            v88 = v195;
            if (!*((_BYTE *)v198 + v521))
              goto LABEL_843;
            v273 = (*((unsigned __int8 *)v198 + v521) - 1) << v447;
            if (v521 > 3)
              v273 = 0;
            if ((_DWORD)v521)
            {
              if (v521 <= 3)
                v274 = v521;
              else
                v274 = 4;
              __asm { BR              X11 }
            }
            v288 = v273 + 1;
          }
          goto LABEL_842;
        case 0x23:
          v443 = v93;
          v202 = v88;
          if (!__swift_getEnumTagSinglePayload(v116, 1, v522))
            (*(void (**)(unint64_t, uint64_t))(v498 + 8))(v116, v522);
          v203 = (v558 + v116) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v203);
          v204 = (v587 + v203) & v551;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!__swift_getEnumTagSinglePayload((v489 + v204) & v449, 1, v495))
            (*(void (**)(unint64_t, uint64_t))(v481 + 8))((v489 + v204) & v449, v495);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v205 = (v524
                + ((((((((((((((v554 + v204) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 25) & 0xFFFFFFFFFFFFFFF8)
                        + 23) & 0xFFFFFFFFFFFFFFF8)
                      + 23) & 0xFFFFFFFFFFFFFFF8)
                    + 23) & 0xFFFFFFFFFFFFFFF8)
                  + 23) & 0xFFFFFFFFFFFFFFF8)) & v560;
          v123 = v576;
          if (v557)
          {
            v206 = v488;
            if (v488 >= v493)
            {
              v207 = (v524
                    + ((((((((((((((v554 + v204) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 25) & 0xFFFFFFFFFFFFFFF8)
                            + 23) & 0xFFFFFFFFFFFFFFF8)
                          + 23) & 0xFFFFFFFFFFFFFFF8)
                        + 23) & 0xFFFFFFFFFFFFFFF8)
                      + 23) & 0xFFFFFFFFFFFFFFF8)) & v560;
              v208 = v492;
            }
            else
            {
              v206 = v493;
              v207 = (v491 + v205) & v443;
              v208 = v494;
            }
            v289 = __swift_getEnumTagSinglePayload(v207, v206, v208);
            v88 = v202;
          }
          else
          {
            v88 = v202;
            if (!*(_BYTE *)(v205 + v521))
              goto LABEL_754;
            v275 = (*(unsigned __int8 *)(v205 + v521) - 1) << v447;
            if (v521 > 3)
              v275 = 0;
            if ((_DWORD)v521)
            {
              if (v521 <= 3)
                v276 = v521;
              else
                v276 = 4;
              __asm { BR              X11 }
            }
            v289 = v275 + 1;
          }
          if (v289)
            goto LABEL_840;
LABEL_754:
          (*(void (**)(unint64_t, uint64_t))(v486 + 8))(v205, v492);
          (*(void (**)(unint64_t, uint64_t))(v487 + 8))((v491 + v205) & v443, v494);
          goto LABEL_840;
        case 0x24:
          if (!__swift_getEnumTagSinglePayload(v116, 1, v522))
            (*(void (**)(unint64_t, uint64_t))(v498 + 8))(v116, v522);
          v209 = (v558 + v116) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v209);
          swift_bridgeObjectRelease();
          v210 = (((v209 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
          v123 = v576;
          if (*(_QWORD *)(v210 + 24) < 0xFFFFFFFFuLL)
            goto LABEL_316;
          goto LABEL_309;
        case 0x25:
          if (!__swift_getEnumTagSinglePayload(v116, 1, v522))
            (*(void (**)(unint64_t, uint64_t))(v498 + 8))(v116, v522);
          goto LABEL_302;
        case 0x26:
          if (!__swift_getEnumTagSinglePayload(v116, 1, v522))
            (*(void (**)(unint64_t, uint64_t))(v498 + 8))(v116, v522);
          v211 = (v558 + v116) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v211);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v168 = ((((v211 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23;
LABEL_306:
          v212 = v168 & 0xFFFFFFFFFFFFFFF8;
          v123 = v576;
          if (*(_QWORD *)((v168 & 0xFFFFFFFFFFFFFFF8) + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v212);
          v210 = (v212 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v210 + 24) >= 0xFFFFFFFFuLL)
LABEL_309:
            __swift_destroy_boxed_opaque_existential_1(v210);
          goto LABEL_316;
        case 0x27:
          if (!__swift_getEnumTagSinglePayload(v116, 1, v522))
            (*(void (**)(unint64_t, uint64_t))(v498 + 8))(v116, v522);
LABEL_302:
          __swift_destroy_boxed_opaque_existential_1((v558 + v116) & 0xFFFFFFFFFFFFFFF8);
          goto LABEL_315;
        case 0x28:
          __swift_destroy_boxed_opaque_existential_1(v116);
          v213 = (v556 + v116) & v448;
          if (!__swift_getEnumTagSinglePayload(v213, 1, v522))
            (*(void (**)(uint64_t, uint64_t))(v498 + 8))(v213, v522);
          goto LABEL_315;
        case 0x29:
          __swift_destroy_boxed_opaque_existential_1(v116);
          v217 = (v556 + v116) & v448;
          if (!__swift_getEnumTagSinglePayload(v217, 1, v522))
            (*(void (**)(uint64_t, uint64_t))(v498 + 8))(v217, v522);
          swift_bridgeObjectRelease();
LABEL_315:
          swift_bridgeObjectRelease();
          v123 = v576;
          goto LABEL_316;
        case 0x2B:
LABEL_276:
          __swift_destroy_boxed_opaque_existential_1(v116);
          v189 = v556;
LABEL_277:
          v190 = (v189 + v116) & v448;
          v123 = v576;
          if (!__swift_getEnumTagSinglePayload(v190, 1, v522))
            (*(void (**)(uint64_t, uint64_t))(v498 + 8))(v190, v522);
          goto LABEL_316;
        case 0x2D:
          if (!__swift_getEnumTagSinglePayload(v116, 1, v522))
            (*(void (**)(unint64_t, uint64_t))(v498 + 8))(v116, v522);
          v218 = (v558 + v116) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v218);
          v219 = (v218 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v219 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v219);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v220 = (v524
                + ((((((((((v219 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                    + 23) & 0xFFFFFFFFFFFFFFF8)
                  + 47) & 0xFFFFFFFFFFFFFFF8)) & v560;
          if (v557)
          {
            v221 = v493;
            if (v488 >= v493)
            {
              v222 = v220;
              v221 = v488;
              v223 = v492;
            }
            else
            {
              v222 = (v491 + v220) & v93;
              v223 = v494;
            }
            v290 = __swift_getEnumTagSinglePayload(v222, v221, v223);
            v123 = v576;
          }
          else
          {
            v123 = v576;
            if (!*(_BYTE *)(v220 + v521))
              goto LABEL_848;
            v277 = (*(unsigned __int8 *)(v220 + v521) - 1) << v447;
            if (v521 > 3)
              v277 = 0;
            if ((_DWORD)v521)
            {
              if (v521 <= 3)
                v278 = v521;
              else
                v278 = 4;
              __asm { BR              X11 }
            }
            v290 = v277 + 1;
          }
          if (v290)
            goto LABEL_849;
LABEL_848:
          (*(void (**)(unint64_t, uint64_t))(v486 + 8))(v220, v492);
          (*(void (**)(unint64_t, uint64_t))(v487 + 8))((v491 + v220) & v93, v494);
LABEL_849:
          v392 = (v476 + v220) & v560;
          if (v557)
          {
            v393 = v493;
            if (v488 >= v493)
            {
              v394 = v392;
              v393 = v488;
              v395 = v492;
            }
            else
            {
              v394 = (v491 + v392) & v93;
              v395 = v494;
            }
            v398 = __swift_getEnumTagSinglePayload(v394, v393, v395);
          }
          else
          {
            if (!*(_BYTE *)(v392 + v521))
              goto LABEL_864;
            v396 = (*(unsigned __int8 *)(v392 + v521) - 1) << v447;
            if (v521 > 3)
              v396 = 0;
            if ((_DWORD)v521)
            {
              if (v521 <= 3)
                v397 = v521;
              else
                v397 = 4;
              __asm { BR              X11 }
            }
            v398 = v396 + 1;
          }
          if (v398)
            goto LABEL_865;
LABEL_864:
          (*(void (**)(unint64_t, uint64_t))(v486 + 8))(v392, v492);
          (*(void (**)(unint64_t, uint64_t))(v487 + 8))((v491 + v392) & v93, v494);
LABEL_865:
          v399 = (uint64_t *)((v586 + v392) & v120);
          if ((v493 & 0x80000000) != 0)
          {
            v401 = __swift_getEnumTagSinglePayload(((unint64_t)v399 + v480) & v93, v493, v494);
          }
          else
          {
            v400 = *v399;
            if ((unint64_t)*v399 >= 0xFFFFFFFF)
              LODWORD(v400) = -1;
            v401 = v400 + 1;
          }
          if (!v401)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v487 + 8))(((unint64_t)v399 + v480) & v93, v494);
          }
          v402 = (uint64_t *)(((unint64_t)v399 + v444) & v120);
          if ((v493 & 0x80000000) != 0)
          {
            v404 = __swift_getEnumTagSinglePayload(((unint64_t)v402 + v480) & v93, v493, v494);
          }
          else
          {
            v403 = *v402;
            if ((unint64_t)*v402 >= 0xFFFFFFFF)
              LODWORD(v403) = -1;
            v404 = v403 + 1;
          }
          if (!v404)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v487 + 8))(((unint64_t)v402 + v480) & v93, v494);
          }
          v148 = v88;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v405 = ((((unint64_t)v402 + v445) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v405 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v405);
          v406 = (v587 + v405) & v551;
          if (v490 >= 0x7FFFFFFF)
          {
            v408 = (v489 + v406) & v449;
            if (__swift_getEnumTagSinglePayload(v408, v484, v495) > 1)
              goto LABEL_889;
          }
          else
          {
            v407 = *(_QWORD *)(((v587 + v405) & v551) + 0x10);
            if (v407 >= 0xFFFFFFFF)
              LODWORD(v407) = -1;
            if ((int)v407 - 1 >= 0)
            {
LABEL_889:
              swift_bridgeObjectRelease();
LABEL_890:
              v88 = v148;
              goto LABEL_316;
            }
            v408 = (v489 + v406) & v449;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!__swift_getEnumTagSinglePayload(v408, 1, v495))
            (*(void (**)(uint64_t, uint64_t))(v481 + 8))(v408, v495);
          goto LABEL_889;
        case 0x32:
          v224 = v88;
          __swift_destroy_boxed_opaque_existential_1(v116);
          v225 = (v556 + v116) & v448;
          if (!__swift_getEnumTagSinglePayload(v225, 1, v522))
            (*(void (**)(uint64_t, uint64_t))(v498 + 8))(v225, v522);
          v226 = (v558 + v225) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          v227 = (v226 + 23) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v227 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1((v226 + 23) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v228 = (v553 + ((((v227 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v121;
          v123 = v576;
          if (v483 < 0x7FFFFFFF)
          {
            v88 = v224;
            if (*(_QWORD *)(((v558 + v228) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
              goto LABEL_458;
          }
          else
          {
            v88 = v224;
            if (__swift_getEnumTagSinglePayload(v228, v555, v522) >= 2)
              goto LABEL_458;
          }
          if (!__swift_getEnumTagSinglePayload(v228, 1, v522))
            (*(void (**)(unint64_t, uint64_t))(v498 + 8))(v228, v522);
          __swift_destroy_boxed_opaque_existential_1((v558 + v228) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          v88 = v224;
LABEL_458:
          v256 = v228 + v576;
          swift_bridgeObjectRelease();
          v257 = (v464 + v256) & v551;
          if (v490 >= 0x7FFFFFFF)
          {
            v122 = (v489 + v257) & v449;
            if (__swift_getEnumTagSinglePayload(v122, v484, v495) > 1)
              goto LABEL_316;
          }
          else
          {
            v258 = *(_QWORD *)(((v464 + v256) & v551) + 0x10);
            if (v258 >= 0xFFFFFFFF)
              LODWORD(v258) = -1;
            if ((int)v258 - 1 >= 0)
              goto LABEL_316;
            v122 = (v489 + v257) & v449;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v88 = v224;
          if (__swift_getEnumTagSinglePayload(v122, 1, v495))
            goto LABEL_316;
          goto LABEL_945;
        case 0x33:
          if (!__swift_getEnumTagSinglePayload(v116, 1, v522))
            (*(void (**)(unint64_t, uint64_t))(v498 + 8))(v116, v522);
          v229 = (v558 + v116) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v229);
          v230 = (v229 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v230 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v230);
          v583 = v88;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v231 = (v457
                + ((((((v230 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v541;
          if (v446 > 0x7FFFFFFE)
          {
            v233 = (v231 + 23) & 0xFFFFFFFFFFFFFFF8;
            if (__swift_getEnumTagSinglePayload((v520 + ((v233 + 23) & 0xFFFFFFFFFFFFFFF8) + 33) & v119, v446, v479))goto LABEL_465;
            goto LABEL_464;
          }
          LODWORD(v232) = -1;
          if (*(_QWORD *)(v231 + 8) < 0xFFFFFFFFuLL)
            v232 = *(_QWORD *)(v231 + 8);
          if ((v232 + 1) <= 1)
          {
            v233 = (v231 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_464:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v259 = (id *)((v233 + 47) & 0xFFFFFFFFFFFFFFF8);

            (*(void (**)(unint64_t, uint64_t))(v547 + 8))(((unint64_t)v259 + v520 + 9) & v119, v479);
          }
LABEL_465:
          v260 = (v463 + v231) & v560;
          if (v557)
          {
            v261 = v493;
            v123 = v576;
            v262 = v482;
            if (v488 >= v493)
            {
              v263 = v260;
              v261 = v488;
              v264 = v492;
            }
            else
            {
              v263 = (v491 + v260) & v93;
              v264 = v494;
            }
            v292 = __swift_getEnumTagSinglePayload(v263, v261, v264);
            v88 = v583;
          }
          else
          {
            v123 = v576;
            v88 = v583;
            v262 = v482;
            if (!*(_BYTE *)(v260 + v521))
            {
LABEL_764:
              (*(void (**)(unint64_t, uint64_t))(v486 + 8))(v260, v492);
              (*(void (**)(unint64_t, uint64_t))(v487 + 8))((v491 + v260) & v93, v494);
LABEL_765:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v366 = (v466 + ((((v262 + v260) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v560;
              if (v557)
              {
                v367 = v493;
                if (v488 >= v493)
                {
                  v368 = v366;
                  v367 = v488;
                  v369 = v492;
                }
                else
                {
                  v368 = (v491 + v366) & v93;
                  v369 = v494;
                }
                v372 = __swift_getEnumTagSinglePayload(v368, v367, v369);
              }
              else
              {
                if (!*(_BYTE *)(v366 + v521))
                {
LABEL_809:
                  (*(void (**)(unint64_t, uint64_t))(v486 + 8))(v366, v492);
                  (*(void (**)(unint64_t, uint64_t))(v487 + 8))((v491 + v366) & v93, v494);
LABEL_810:
                  swift_bridgeObjectRelease();
                  v382 = (v519 + ((v262 + v366) & 0xFFFFFFFFFFFFFFF8)) & v560;
                  if (v557)
                  {
                    v383 = v493;
                    if (v488 >= v493)
                    {
                      v384 = v382;
                      v383 = v488;
                      v385 = v492;
                    }
                    else
                    {
                      v384 = (v491 + v382) & v93;
                      v385 = v494;
                    }
                    v388 = __swift_getEnumTagSinglePayload(v384, v383, v385);
                  }
                  else
                  {
                    if (!*(_BYTE *)(v382 + v521))
                      goto LABEL_825;
                    v386 = (*(unsigned __int8 *)(v382 + v521) - 1) << v447;
                    if (v521 > 3)
                      v386 = 0;
                    if ((_DWORD)v521)
                    {
                      if (v521 <= 3)
                        v387 = v521;
                      else
                        v387 = 4;
                      __asm { BR              X11 }
                    }
                    v388 = v386 + 1;
                  }
                  if (v388)
                  {
LABEL_826:
                    v165 = (v469 + v382) & v551;
                    if (v490 >= 0x7FFFFFFF)
                    {
                      v122 = (v489 + v165) & v449;
                      if (__swift_getEnumTagSinglePayload(v122, v484, v495) > 1)
                        goto LABEL_316;
                      goto LABEL_832;
                    }
                    v389 = *(_QWORD *)(((v469 + v382) & v551) + 0x10);
                    if (v389 >= 0xFFFFFFFF)
                      LODWORD(v389) = -1;
                    if ((int)v389 - 1 >= 0)
                      goto LABEL_316;
LABEL_830:
                    v122 = (v489 + v165) & v449;
LABEL_832:
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    v88 = v583;
                    if (!__swift_getEnumTagSinglePayload(v122, 1, v495))
                      goto LABEL_945;
                    goto LABEL_316;
                  }
LABEL_825:
                  (*(void (**)(unint64_t, uint64_t))(v486 + 8))(v382, v492);
                  (*(void (**)(unint64_t, uint64_t))(v487 + 8))((v491 + v382) & v93, v494);
                  goto LABEL_826;
                }
                v370 = (*(unsigned __int8 *)(v366 + v521) - 1) << v447;
                if (v521 > 3)
                  v370 = 0;
                if ((_DWORD)v521)
                {
                  if (v521 <= 3)
                    v371 = v521;
                  else
                    v371 = 4;
                  __asm { BR              X11 }
                }
                v372 = v370 + 1;
              }
              if (v372)
                goto LABEL_810;
              goto LABEL_809;
            }
            v282 = (*(unsigned __int8 *)(v260 + v521) - 1) << v447;
            if (v521 > 3)
              v282 = 0;
            if ((_DWORD)v521)
            {
              if (v521 <= 3)
                v283 = v521;
              else
                v283 = 4;
              __asm { BR              X11 }
            }
            v292 = v282 + 1;
          }
          if (v292)
            goto LABEL_765;
          goto LABEL_764;
        default:
          if (v89 <= 3)
            v117 = v89;
          else
            v117 = 4;
          __asm { BR              X12 }
          return result;
      }
    case 2:
    case 3:
      return swift_bridgeObjectRelease();
    default:
      return result;
  }
}

_QWORD *sub_21CEE199C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  size_t v28;
  size_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unsigned int v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unsigned int v43;
  unsigned int v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  size_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  size_t v57;
  unint64_t v58;
  unint64_t v59;
  size_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  const void *v96;
  size_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  _BYTE *v102;
  unsigned __int8 *v103;
  unsigned int v104;
  _QWORD *v105;
  __int128 *v106;
  unsigned int v107;
  uint64_t v108;
  void *v109;
  const void *v110;
  size_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  _QWORD *v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  _QWORD *v124;
  unint64_t v125;
  unint64_t v126;
  unint64_t v127;
  __int128 v128;
  __int128 v129;
  _QWORD *v130;
  _QWORD *v131;
  unint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  unsigned int EnumTagSinglePayload;
  uint64_t v137;
  void *v138;
  __int128 v139;
  __int128 v140;
  unint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  __int128 v145;
  __int128 v146;
  _QWORD *v147;
  _QWORD *v148;
  _QWORD *v149;
  _QWORD *v150;
  void *v151;
  unsigned __int8 *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  int v156;
  int v157;
  int v158;
  int v159;
  uint64_t v160;
  _BYTE *v161;
  unsigned __int8 *v162;
  unint64_t v163;
  unint64_t v164;
  unint64_t v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  _QWORD *v172;
  _QWORD *v173;
  uint64_t v174;
  const void *v175;
  unsigned int v176;
  void *v177;
  size_t v178;
  uint64_t v179;
  _QWORD *v180;
  int v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  _QWORD *v187;
  uint64_t v188;
  _QWORD *v189;
  unint64_t v190;
  uint64_t v191;
  void *v192;
  const void *v193;
  const void *v194;
  char v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  void *v199;
  const void *v200;
  size_t v201;
  uint64_t v202;
  uint64_t v203;
  void *v204;
  const void *v205;
  uint64_t v206;
  void *v207;
  const void *v208;
  uint64_t v209;
  void *v210;
  const void *v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  uint64_t v215;
  void *v216;
  const void *v217;
  uint64_t v218;
  char *v219;
  const void *v220;
  size_t v221;
  uint64_t v222;
  _QWORD *v223;
  _QWORD *v224;
  _QWORD *v225;
  _QWORD *v226;
  void *v227;
  const void *v228;
  unint64_t v229;
  unint64_t v230;
  uint64_t v231;
  void (*v232)(unint64_t, unint64_t, uint64_t);
  void *v233;
  const void *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  void *v240;
  const void *v241;
  uint64_t v242;
  void *v243;
  const void *v244;
  uint64_t v245;
  void *v246;
  const void *v247;
  uint64_t v248;
  uint64_t v249;
  void *v250;
  const void *v251;
  unint64_t v252;
  unint64_t v253;
  uint64_t v254;
  _QWORD *v255;
  _QWORD *v256;
  _QWORD *v257;
  _QWORD *v258;
  _QWORD *v259;
  _QWORD *v260;
  _QWORD *v261;
  _QWORD *v262;
  uint64_t v263;
  unint64_t v264;
  size_t v265;
  _QWORD *v266;
  unint64_t v267;
  int v268;
  size_t v269;
  _QWORD *v270;
  unint64_t v271;
  unint64_t v272;
  unint64_t v273;
  void *v274;
  uint64_t v275;
  uint64_t v276;
  void (*v277)(uint64_t, uint64_t, uint64_t);
  id v278;
  unint64_t v279;
  unint64_t v280;
  _QWORD *v281;
  _QWORD *v282;
  void *v283;
  _BYTE *v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  char v290;
  uint64_t v291;
  uint64_t v292;
  unint64_t v293;
  unint64_t v294;
  uint64_t v295;
  _QWORD *v296;
  _QWORD *v297;
  void *v298;
  _BYTE *v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  unint64_t v303;
  unint64_t v304;
  uint64_t v305;
  _QWORD *v306;
  _QWORD *v307;
  _QWORD *v308;
  _QWORD *v309;
  unint64_t v310;
  unint64_t v311;
  unint64_t v312;
  unint64_t v313;
  unint64_t v314;
  __int128 v315;
  __int128 v316;
  uint64_t v317;
  uint64_t v318;
  _QWORD *v319;
  _QWORD *v320;
  unint64_t v321;
  _QWORD *v322;
  char *v323;
  uint64_t v324;
  uint64_t v325;
  const void *v326;
  uint64_t v327;
  void *v328;
  size_t v329;
  unint64_t v330;
  unint64_t v331;
  uint64_t v332;
  uint64_t v333;
  unint64_t v334;
  uint64_t v335;
  const void *v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  void *v340;
  uint64_t v341;
  uint64_t v342;
  unint64_t v343;
  unint64_t v344;
  unint64_t v345;
  uint64_t v346;
  unint64_t v347;
  unint64_t v348;
  unint64_t v349;
  _QWORD *v350;
  char *v351;
  uint64_t v352;
  uint64_t v353;
  const void *v354;
  uint64_t v355;
  void *v356;
  size_t v357;
  unint64_t v358;
  unint64_t v359;
  uint64_t v360;
  _QWORD *v361;
  _QWORD *v362;
  void *v363;
  const void *v364;
  unint64_t v365;
  unint64_t v366;
  _QWORD *v367;
  _QWORD *v368;
  _QWORD *v369;
  _QWORD *v370;
  char v371;
  unint64_t v372;
  unint64_t v373;
  uint64_t v374;
  _QWORD *v375;
  _QWORD *v376;
  unint64_t v377;
  size_t v378;
  _QWORD *v379;
  unint64_t v380;
  uint64_t v381;
  int v382;
  unint64_t v383;
  unint64_t v384;
  _QWORD *v385;
  _QWORD *v386;
  unint64_t v387;
  _QWORD *v388;
  char *v389;
  uint64_t v390;
  uint64_t v391;
  const void *v392;
  uint64_t v393;
  void *v394;
  size_t v395;
  _QWORD *v396;
  _QWORD *v397;
  _QWORD *v398;
  _QWORD *v399;
  _QWORD *v400;
  _QWORD *v401;
  unint64_t v402;
  unint64_t v403;
  unint64_t v404;
  __int128 v405;
  __int128 v406;
  unint64_t v407;
  unint64_t v408;
  unint64_t v409;
  __int128 v410;
  __int128 v411;
  unint64_t v412;
  unint64_t v413;
  unint64_t v414;
  __int128 v415;
  __int128 v416;
  uint64_t v417;
  _QWORD *v418;
  _QWORD *v419;
  _QWORD *v420;
  _QWORD *v421;
  _QWORD *v422;
  _QWORD *v423;
  _QWORD *v424;
  _QWORD *v425;
  unint64_t v426;
  unint64_t v427;
  unint64_t v428;
  __int128 v429;
  __int128 v430;
  unint64_t v431;
  unint64_t v432;
  unint64_t v433;
  __int128 v434;
  __int128 v435;
  _QWORD *v436;
  unint64_t v437;
  unint64_t v438;
  unint64_t v439;
  __int128 v440;
  __int128 v441;
  void *v442;
  _BYTE *v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  unint64_t v447;
  unint64_t v448;
  uint64_t v449;
  _QWORD *v450;
  _QWORD *v451;
  _QWORD *v452;
  _QWORD *v453;
  unint64_t v454;
  unint64_t v455;
  uint64_t v456;
  void *v457;
  const void *v458;
  uint64_t v459;
  uint64_t v460;
  size_t v461;
  uint64_t v462;
  uint64_t v463;
  unint64_t v464;
  unint64_t v465;
  unint64_t v466;
  uint64_t v467;
  unint64_t v468;
  unint64_t v469;
  char v470;
  unint64_t v471;
  unint64_t v472;
  uint64_t v473;
  _QWORD *v474;
  _QWORD *v475;
  _QWORD *v476;
  _QWORD *v477;
  _QWORD *v478;
  _QWORD *v479;
  _QWORD *v480;
  _QWORD *v481;
  uint64_t v482;
  unint64_t v483;
  size_t v484;
  _QWORD *v485;
  unint64_t v486;
  int v487;
  unint64_t v488;
  _QWORD *v489;
  unint64_t v490;
  unint64_t v491;
  unint64_t v492;
  void *v493;
  uint64_t v494;
  uint64_t v495;
  void (*v496)(uint64_t, uint64_t, uint64_t);
  id v497;
  unint64_t v498;
  unint64_t v499;
  void *v500;
  _BYTE *v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  unint64_t v506;
  unint64_t v507;
  uint64_t v508;
  _QWORD *v509;
  _QWORD *v510;
  _QWORD *v511;
  _QWORD *v512;
  char v513;
  char *v514;
  unint64_t v515;
  unint64_t v516;
  char v517;
  uint64_t v518;
  int v519;
  int v520;
  unint64_t v521;
  unint64_t v522;
  uint64_t v523;
  unint64_t v524;
  unint64_t v525;
  uint64_t v526;
  void *v527;
  const void *v528;
  unint64_t v529;
  unint64_t v530;
  uint64_t v531;
  unint64_t v532;
  unint64_t v533;
  uint64_t v534;
  void *v535;
  const void *v536;
  unint64_t v537;
  unint64_t v538;
  uint64_t v539;
  _QWORD *v540;
  _QWORD *v541;
  unint64_t v542;
  unint64_t v543;
  unint64_t v544;
  __int128 v545;
  __int128 v546;
  unint64_t v547;
  unint64_t v548;
  uint64_t v549;
  _QWORD *v550;
  _QWORD *v551;
  unint64_t v552;
  unint64_t v553;
  uint64_t v554;
  _QWORD *v555;
  _QWORD *v556;
  _QWORD *v557;
  _QWORD *v558;
  unint64_t v559;
  unint64_t v560;
  unint64_t v561;
  __int128 v562;
  __int128 v563;
  unint64_t v564;
  unint64_t v565;
  unint64_t v566;
  __int128 v567;
  __int128 v568;
  char v569;
  unint64_t v570;
  unint64_t v571;
  uint64_t v572;
  _QWORD *v573;
  _QWORD *v574;
  unint64_t v575;
  unint64_t v576;
  uint64_t v577;
  unint64_t v578;
  unint64_t v579;
  unint64_t v580;
  __int128 v581;
  __int128 v582;
  _QWORD *v583;
  _QWORD *v584;
  _QWORD *v585;
  _QWORD *v586;
  _QWORD *v587;
  _QWORD *v588;
  _QWORD *v589;
  _QWORD *v590;
  unint64_t v591;
  unint64_t v592;
  _QWORD *v593;
  _QWORD *v594;
  void *v595;
  _BYTE *v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  _QWORD *v601;
  _QWORD *v602;
  unint64_t v603;
  unint64_t v604;
  unint64_t v605;
  __int128 v606;
  __int128 v607;
  _QWORD *v608;
  _QWORD *v609;
  _QWORD *v610;
  _QWORD *v611;
  char *v612;
  char *v613;
  uint64_t v614;
  unint64_t v615;
  unint64_t v616;
  unint64_t v617;
  uint64_t v618;
  unint64_t v619;
  unint64_t v620;
  unint64_t v621;
  __int128 v622;
  __int128 v623;
  uint64_t v624;
  _QWORD *v625;
  _QWORD *v626;
  _QWORD *v627;
  _QWORD *v628;
  _QWORD *v629;
  _QWORD *v630;
  _QWORD *v631;
  _QWORD *v632;
  unint64_t v633;
  size_t v634;
  _QWORD *v635;
  unint64_t v636;
  int v637;
  int v638;
  int v639;
  int v640;
  int v641;
  void *v642;
  _BYTE *v643;
  uint64_t v644;
  uint64_t v645;
  uint64_t v646;
  int v647;
  int v648;
  int v649;
  int v650;
  _QWORD *v651;
  _QWORD *v652;
  unint64_t v653;
  unint64_t v654;
  void *v655;
  _BYTE *v656;
  uint64_t v657;
  uint64_t v658;
  uint64_t v659;
  _QWORD *v660;
  _QWORD *v661;
  unint64_t v662;
  unint64_t v663;
  _QWORD *v664;
  _QWORD *v665;
  _QWORD *v666;
  _QWORD *v667;
  _QWORD *v668;
  _QWORD *v669;
  _QWORD *v670;
  _QWORD *v671;
  _QWORD *v672;
  _QWORD *v673;
  void *v674;
  _BYTE *v675;
  uint64_t v676;
  uint64_t v677;
  uint64_t v678;
  uint64_t v679;
  int v680;
  int v681;
  int v682;
  int v683;
  int v684;
  int v685;
  uint64_t v686;
  int v687;
  int v688;
  int v689;
  int v690;
  int v691;
  int v692;
  int v693;
  int v694;
  int v695;
  int v696;
  int v697;
  unint64_t v698;
  unint64_t v699;
  int v700;
  unsigned int v701;
  unint64_t v702;
  unint64_t v703;
  int v704;
  unsigned int v705;
  _QWORD *v706;
  unint64_t v707;
  unint64_t v708;
  unint64_t v709;
  void *v710;
  uint64_t v711;
  uint64_t v712;
  void (*v713)(uint64_t, uint64_t, uint64_t);
  id v714;
  unint64_t v715;
  unint64_t v716;
  uint64_t v717;
  unint64_t v718;
  unint64_t v719;
  char *v720;
  char *v721;
  _QWORD *v722;
  _QWORD *v723;
  unint64_t v724;
  _QWORD *v725;
  char *v726;
  uint64_t v727;
  uint64_t v728;
  const void *v729;
  uint64_t v730;
  void *v731;
  _QWORD *v732;
  unint64_t v733;
  unint64_t v734;
  unint64_t v735;
  void *v736;
  uint64_t v737;
  uint64_t v738;
  void (*v739)(uint64_t, uint64_t, uint64_t);
  id v740;
  void *v741;
  _BYTE *v742;
  uint64_t v743;
  uint64_t v744;
  uint64_t v745;
  int v746;
  int v747;
  int v748;
  void *v749;
  _BYTE *v750;
  uint64_t v751;
  uint64_t v752;
  uint64_t v753;
  int v754;
  int v755;
  int v756;
  _QWORD *v757;
  _QWORD *v758;
  _QWORD *v759;
  _QWORD *v760;
  unint64_t v761;
  unint64_t v762;
  unint64_t v763;
  __int128 v764;
  _BYTE *v765;
  unsigned int v766;
  size_t v767;
  unint64_t v768;
  unint64_t v769;
  uint64_t v770;
  _QWORD *v771;
  _QWORD *v772;
  _QWORD *v773;
  _QWORD *v774;
  unint64_t v775;
  unint64_t v776;
  unint64_t v777;
  unint64_t v778;
  unint64_t v779;
  __int128 v780;
  __int128 v781;
  _QWORD *v782;
  _QWORD *v783;
  unint64_t v784;
  size_t v785;
  char *v786;
  uint64_t v787;
  uint64_t v788;
  const void *v789;
  uint64_t v790;
  void *v791;
  void *v792;
  _BYTE *v793;
  uint64_t v794;
  uint64_t v795;
  uint64_t v796;
  int v797;
  int v798;
  int v799;
  unsigned int v800;
  uint64_t v801;
  uint64_t v802;
  size_t v803;
  unint64_t v804;
  unint64_t v805;
  uint64_t v806;
  _QWORD *v807;
  _QWORD *v808;
  _QWORD *v809;
  _QWORD *v810;
  unint64_t v811;
  unint64_t v812;
  unint64_t v813;
  __int128 v814;
  __int128 v815;
  uint64_t v816;
  unint64_t v817;
  unint64_t v818;
  unint64_t v819;
  __int128 v820;
  __int128 v821;
  _QWORD *v822;
  _QWORD *v823;
  unint64_t v824;
  char *v825;
  uint64_t v826;
  uint64_t v827;
  const void *v828;
  uint64_t v829;
  void *v830;
  void *v831;
  _BYTE *v832;
  uint64_t v833;
  uint64_t v834;
  uint64_t v835;
  int v836;
  int v837;
  int v838;
  unint64_t v839;
  unint64_t v840;
  uint64_t v841;
  void *v842;
  const void *v843;
  _QWORD *v844;
  _QWORD *v845;
  _QWORD *v846;
  _QWORD *v847;
  _QWORD *v848;
  uint64_t *v849;
  size_t v850;
  uint64_t v851;
  int v852;
  void (*v853)(unint64_t, unint64_t, uint64_t);
  _BYTE *v854;
  _QWORD *v855;
  unint64_t v856;
  _QWORD *v857;
  uint64_t v858;
  const void *v859;
  uint64_t v860;
  void *v861;
  size_t v862;
  unint64_t v863;
  unint64_t v864;
  unint64_t v865;
  unint64_t v866;
  unint64_t v867;
  unint64_t v868;
  uint64_t v869;
  unint64_t v870;
  unint64_t v871;
  unint64_t v872;
  __int128 v873;
  __int128 v874;
  _QWORD *v875;
  _QWORD *v876;
  unint64_t v877;
  unint64_t v878;
  unint64_t v879;
  unint64_t v880;
  size_t v881;
  unint64_t v882;
  unint64_t v883;
  uint64_t v884;
  unint64_t v885;
  unint64_t v886;
  unint64_t v887;
  __int128 v888;
  __int128 v889;
  _QWORD *v890;
  _QWORD *v891;
  char *v892;
  char *v893;
  uint64_t v894;
  unint64_t v895;
  unint64_t v896;
  unint64_t v897;
  unint64_t v898;
  size_t v899;
  unint64_t v900;
  unint64_t v901;
  unint64_t v902;
  unint64_t v903;
  unint64_t v904;
  unint64_t v905;
  unint64_t v906;
  unint64_t v907;
  unint64_t v908;
  unint64_t v909;
  size_t v910;
  unint64_t v911;
  unint64_t v912;
  uint64_t v913;
  unint64_t v914;
  unint64_t v915;
  unint64_t v916;
  __int128 v917;
  __int128 v918;
  _QWORD *v919;
  _QWORD *v920;
  unint64_t v921;
  uint64_t v922;
  unint64_t v923;
  unint64_t v924;
  unint64_t v925;
  __int128 v926;
  __int128 v927;
  _QWORD *v928;
  _QWORD *v929;
  unint64_t v930;
  char *v931;
  uint64_t v932;
  uint64_t v933;
  const void *v934;
  uint64_t v935;
  void *v936;
  size_t v937;
  void *v938;
  _BYTE *v939;
  uint64_t v940;
  uint64_t v941;
  uint64_t v942;
  int v943;
  int v944;
  int v945;
  char *v946;
  void *v947;
  _BYTE *v948;
  uint64_t v949;
  uint64_t v950;
  uint64_t v951;
  int v952;
  int v953;
  int v954;
  _QWORD *v955;
  _QWORD *v956;
  unint64_t v957;
  unint64_t v958;
  unint64_t v959;
  __int128 v960;
  __int128 v961;
  _QWORD *v962;
  _QWORD *v963;
  _QWORD *v964;
  uint64_t *v965;
  size_t v966;
  uint64_t v967;
  int v968;
  void (*v969)(unint64_t, unint64_t, uint64_t);
  _QWORD *v970;
  uint64_t *v971;
  size_t v972;
  uint64_t v973;
  int v974;
  void (*v975)(unint64_t, unint64_t, uint64_t);
  _QWORD *v976;
  _QWORD *v977;
  unint64_t v978;
  _QWORD *v979;
  char *v980;
  uint64_t v981;
  uint64_t v982;
  const void *v983;
  uint64_t v984;
  void *v985;
  void *v986;
  _BYTE *v987;
  uint64_t v988;
  uint64_t v989;
  uint64_t v990;
  int v991;
  int v992;
  int v993;
  _QWORD *v994;
  uint64_t *v995;
  size_t v996;
  uint64_t v997;
  int v998;
  void (*v999)(unint64_t, unint64_t, uint64_t);
  _BYTE *v1000;
  _QWORD *v1001;
  unint64_t v1002;
  char *v1003;
  uint64_t v1004;
  const void *v1005;
  uint64_t v1006;
  void *v1007;
  size_t v1008;
  unint64_t v1009;
  unint64_t v1010;
  unint64_t v1011;
  unint64_t v1012;
  unint64_t v1013;
  unint64_t v1014;
  uint64_t v1015;
  unint64_t v1016;
  unint64_t v1017;
  unint64_t v1018;
  __int128 v1019;
  __int128 v1020;
  _QWORD *v1021;
  _QWORD *v1022;
  unint64_t v1023;
  unint64_t v1024;
  unint64_t v1025;
  unint64_t v1026;
  size_t v1027;
  unint64_t v1028;
  unint64_t v1029;
  uint64_t v1030;
  unint64_t v1031;
  unint64_t v1032;
  unint64_t v1033;
  __int128 v1034;
  __int128 v1035;
  _QWORD *v1036;
  _QWORD *v1037;
  char *v1038;
  char *v1039;
  uint64_t v1040;
  unint64_t v1041;
  unint64_t v1042;
  unint64_t v1043;
  unint64_t v1044;
  size_t v1045;
  unint64_t v1046;
  unint64_t v1047;
  unint64_t v1048;
  unint64_t v1049;
  unint64_t v1050;
  unint64_t v1051;
  unint64_t v1052;
  unint64_t v1053;
  unint64_t v1054;
  unint64_t v1055;
  size_t v1056;
  unint64_t v1057;
  unint64_t v1058;
  uint64_t v1059;
  unint64_t v1060;
  unint64_t v1061;
  unint64_t v1062;
  __int128 v1063;
  __int128 v1064;
  _QWORD *v1065;
  _QWORD *v1066;
  unint64_t v1067;
  void *v1068;
  _BYTE *v1069;
  uint64_t v1070;
  uint64_t v1071;
  uint64_t v1072;
  uint64_t v1073;
  int v1074;
  int v1075;
  int v1076;
  _QWORD *v1077;
  _QWORD *v1078;
  unint64_t v1079;
  unint64_t v1080;
  void *v1081;
  _BYTE *v1082;
  uint64_t v1083;
  uint64_t v1084;
  uint64_t v1085;
  int v1086;
  int v1087;
  int v1088;
  _QWORD *v1089;
  uint64_t *v1090;
  size_t v1091;
  uint64_t v1092;
  int v1093;
  void (*v1094)(unint64_t, unint64_t, uint64_t);
  _QWORD *v1095;
  uint64_t *v1096;
  uint64_t v1097;
  int v1098;
  size_t v1099;
  void (*v1100)(unint64_t, unint64_t, uint64_t);
  _BYTE *v1101;
  _QWORD *v1102;
  _QWORD *v1103;
  unint64_t v1104;
  unint64_t v1105;
  unint64_t v1106;
  unint64_t v1107;
  unint64_t v1108;
  __int128 v1109;
  __int128 v1110;
  unint64_t v1111;
  unint64_t v1112;
  unint64_t v1113;
  _QWORD *v1114;
  char *v1115;
  uint64_t v1116;
  uint64_t v1117;
  const void *v1118;
  uint64_t v1119;
  void *v1120;
  size_t v1121;
  _QWORD *v1122;
  _QWORD *v1123;
  _QWORD *v1124;
  _QWORD *v1125;
  void *v1126;
  _BYTE *v1127;
  uint64_t v1128;
  uint64_t v1129;
  uint64_t v1130;
  int v1131;
  int v1132;
  int v1133;
  _QWORD *v1134;
  _QWORD *v1135;
  unint64_t v1136;
  _QWORD *v1137;
  _QWORD *v1138;
  char *v1139;
  uint64_t v1140;
  uint64_t v1141;
  const void *v1142;
  uint64_t v1143;
  void *v1144;
  unint64_t v1145;
  unint64_t v1146;
  unint64_t v1147;
  __int128 v1148;
  __int128 v1149;
  _QWORD *v1150;
  _QWORD *v1151;
  _BYTE *v1152;
  uint64_t v1153;
  unsigned __int8 *v1154;
  unsigned int v1155;
  unint64_t v1156;
  unint64_t v1157;
  unsigned int v1158;
  uint64_t v1159;
  void *v1160;
  const void *v1161;
  uint64_t v1162;
  _QWORD *v1163;
  _QWORD *v1164;
  unint64_t v1165;
  unint64_t v1166;
  unint64_t v1167;
  unint64_t v1168;
  unint64_t v1169;
  unint64_t v1170;
  uint64_t v1171;
  _QWORD *v1172;
  _QWORD *v1173;
  unint64_t v1174;
  unint64_t v1175;
  unint64_t v1176;
  __int128 v1177;
  __int128 v1178;
  _QWORD *v1179;
  _QWORD *v1180;
  unint64_t v1181;
  unint64_t v1182;
  char *v1183;
  const void *v1184;
  uint64_t v1185;
  void *v1186;
  _QWORD *v1187;
  _QWORD *v1188;
  _QWORD *v1189;
  _QWORD *v1190;
  unint64_t v1191;
  _QWORD *v1192;
  char *v1193;
  uint64_t v1194;
  uint64_t v1195;
  const void *v1196;
  uint64_t v1197;
  void *v1198;
  _QWORD *v1199;
  unint64_t v1200;
  uint64_t v1201;
  _QWORD *result;
  __int128 v1203;
  __int128 v1204;
  unint64_t v1205;
  _QWORD *v1206;
  uint64_t v1207;
  __int128 v1208;
  __int128 v1209;
  _QWORD *v1210;
  _QWORD *v1211;
  _QWORD *v1212;
  _QWORD *v1213;
  void *v1214;
  _BYTE *v1215;
  uint64_t v1216;
  uint64_t v1217;
  uint64_t v1218;
  int v1219;
  int v1220;
  int v1221;
  _QWORD *v1222;
  _QWORD *v1223;
  _BYTE *v1224;
  unsigned __int8 *v1225;
  unsigned int v1226;
  _QWORD *v1227;
  _QWORD *v1228;
  unsigned int v1229;
  uint64_t v1230;
  void *v1231;
  const void *v1232;
  void *v1233;
  const void *v1234;
  size_t v1235;
  uint64_t v1236;
  _QWORD *v1237;
  _QWORD *v1238;
  unint64_t v1239;
  unint64_t v1240;
  unint64_t v1241;
  unint64_t v1242;
  unint64_t v1243;
  unint64_t v1244;
  uint64_t v1245;
  _QWORD *v1246;
  _QWORD *v1247;
  unint64_t v1248;
  unint64_t v1249;
  unint64_t v1250;
  __int128 v1251;
  __int128 v1252;
  _QWORD *v1253;
  _QWORD *v1254;
  unint64_t v1255;
  _QWORD *v1256;
  char *v1257;
  const void *v1258;
  uint64_t v1259;
  void *v1260;
  __int128 v1261;
  __int128 v1262;
  unint64_t v1263;
  _QWORD *v1264;
  uint64_t v1265;
  __int128 v1266;
  __int128 v1267;
  _QWORD *v1268;
  _QWORD *v1269;
  _QWORD *v1270;
  _QWORD *v1271;
  void *v1272;
  _BYTE *v1273;
  uint64_t v1274;
  uint64_t v1275;
  uint64_t v1276;
  int v1277;
  int v1278;
  int v1279;
  const void *v1280;
  __int128 *__src;
  _BYTE *__srca;
  _QWORD *v1283;
  _QWORD *v1284;
  uint64_t v1285;
  uint64_t v1286;
  size_t v1287;
  unint64_t v1288;
  unint64_t v1289;
  unint64_t v1290;
  unint64_t v1291;
  unint64_t v1292;
  unint64_t v1293;
  unint64_t v1294;
  unint64_t v1295;
  unint64_t v1296;
  unint64_t v1297;
  uint64_t v1298;
  unsigned int v1299;
  char v1300;
  uint64_t v1301;
  uint64_t v1302;
  size_t v1303;
  size_t v1304;
  int v1305;
  size_t v1306;
  uint64_t v1307;
  uint64_t v1308;
  uint64_t v1309;
  uint64_t v1310;
  uint64_t v1311;
  uint64_t v1312;
  size_t v1313;
  uint64_t v1314;
  uint64_t v1315;
  uint64_t v1316;
  uint64_t v1317;
  size_t v1318;
  uint64_t v1319;
  uint64_t v1320;
  unint64_t v1321;
  uint64_t v1322;
  unint64_t v1323;
  unint64_t v1324;
  unint64_t v1325;
  unint64_t v1326;
  unint64_t v1327;
  unint64_t v1328;
  unint64_t v1329;
  unint64_t v1330;
  unint64_t v1331;
  unint64_t v1332;
  unint64_t v1333;
  unint64_t v1334;
  unint64_t v1335;
  unint64_t v1336;
  unsigned int v1337;
  size_t v1338;
  size_t v1339;
  uint64_t v1340;
  uint64_t v1341;
  uint64_t v1342;
  uint64_t v1343;
  uint64_t v1344;
  unint64_t v1345;
  unsigned int v1346;
  unsigned int v1347;
  uint64_t v1348;
  uint64_t v1349;
  uint64_t v1350;
  size_t __n;
  unsigned int v1352;
  size_t v1353;
  unsigned int v1354;
  uint64_t v1355;
  uint64_t v1356;
  unsigned int v1357;
  uint64_t v1358;
  uint64_t v1359;
  uint64_t v1360;
  uint64_t v1361;
  uint64_t v1362;
  unint64_t v1363;
  size_t v1364;
  uint64_t v1365;
  uint64_t v1366;
  _BYTE *v1367;
  uint64_t v1368;
  uint64_t v1369;
  uint64_t v1370;
  uint64_t v1371;
  uint64_t v1372;
  uint64_t v1373;
  uint64_t v1374;
  unsigned int v1375;
  uint64_t v1376;
  uint64_t v1377;
  size_t v1378;
  uint64_t v1379;
  uint64_t v1380;
  _QWORD *v1381;
  _QWORD *v1382;
  _QWORD *v1383;
  _QWORD *v1384;
  _QWORD *v1385;
  _QWORD *v1386;
  _QWORD *v1387;
  uint64_t v1388;
  unint64_t v1389;
  size_t v1390;
  unint64_t v1391;
  uint64_t v1392;
  unint64_t v1393;
  unint64_t v1394;
  unint64_t v1395;
  uint64_t v1396;
  unint64_t v1397;
  size_t v1398;
  unsigned __int8 *v1400;
  uint64_t v1401;
  unint64_t v1402;
  uint64_t v1403;
  uint64_t v1404;
  uint64_t v1405;
  size_t v1406;
  unint64_t v1407;
  unint64_t v1408;
  unint64_t v1409;
  unint64_t v1410;
  unint64_t v1411;
  unint64_t v1412;
  unint64_t v1413;
  int v1414;
  size_t v1415;
  unsigned int v1416;
  uint64_t v1417;
  size_t v1418;
  size_t v1419;
  uint64_t v1420;
  size_t v1421;
  size_t v1422;
  uint64_t v1423;
  size_t v1424;
  unsigned int v1425;
  size_t v1426;
  uint64_t v1428;
  size_t v1429;
  uint64_t v1430;
  uint64_t v1431;
  uint64_t v1432;
  uint64_t v1433;
  _QWORD *v1434;
  uint64_t v1435;
  unint64_t v1436;
  uint64_t v1437;
  unint64_t v1438;
  unint64_t v1439;
  unint64_t v1440;
  uint64_t v1441;
  uint64_t v1442;
  uint64_t v1443;
  uint64_t v1444;
  unint64_t v1445;
  const void *v1446;
  unint64_t v1447;
  size_t v1448;

  v1371 = *(_QWORD *)(a3 + 16);
  v1369 = *(_QWORD *)(v1371 - 8);
  v1402 = *(_QWORD *)(v1369 + 64);
  v1388 = sub_21D7C4668();
  v3 = *(_QWORD *)(v1388 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v1405 = v4 + 16;
  v1416 = *(_DWORD *)(v3 + 84);
  v1362 = v3;
  v5 = *(_QWORD *)(v3 + 64);
  v1378 = v5;
  if (!v1416)
    ++v5;
  v1448 = v5;
  v1430 = v4 | 7;
  v1358 = sub_21D7BF754();
  v6 = *(_QWORD *)(v1358 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = v7 | 7;
  v9 = v4 | 7 | v7;
  v1355 = sub_21D7C3840();
  v10 = *(_QWORD *)(v1355 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v1360 = sub_21D7C3804();
  v12 = *(_QWORD *)(v1360 - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v14 = v13;
  v15 = v13 | v11;
  v16 = v9 | v15;
  v1432 = v4;
  v1423 = v4 + 40;
  v17 = *(_DWORD *)(v6 + 84);
  if (v17)
    v18 = v17 - 1;
  else
    v18 = 0;
  v1354 = v18;
  if (v18 <= 0x7FFFFFFE)
    v19 = 2147483646;
  else
    v19 = v18;
  v1414 = v19;
  v1357 = *(_DWORD *)(v12 + 84);
  v1352 = *(_DWORD *)(v10 + 84);
  if (v1357 <= v1352)
    v20 = *(_DWORD *)(v10 + 84);
  else
    v20 = *(_DWORD *)(v12 + 84);
  v1425 = v20;
  v1346 = *(_DWORD *)(v6 + 84);
  v1359 = v7 + 113;
  v1428 = v7;
  v1343 = v6;
  v1349 = v10;
  v1356 = *(_QWORD *)(v10 + 64) + v13;
  v1350 = *(_QWORD *)(v1360 - 8);
  v1420 = *(_QWORD *)(v12 + 64);
  if (v17)
    v21 = *(_QWORD *)(v6 + 64);
  else
    v21 = *(_QWORD *)(v6 + 64) + 1;
  v1419 = v21;
  v1361 = v16 + 1;
  v1438 = ((v4 + 40) & ~v4) + v1448;
  v1435 = v9 | v15;
  v1436 = (v1438 + 7) & 0xFFFFFFFFFFFFFFF8;
  v1441 = v7 + 40;
  v1422 = v21 + ((v7 + 113) & ~v7);
  v22 = v1422 + ((v7 + 40 + ((((v1436 + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v8);
  v1379 = (v1356 & ~(unint64_t)v13) + v1420;
  if (v20)
    v23 = (v1356 & ~(unint64_t)v13) + v1420;
  else
    v23 = (v1356 & ~(unint64_t)v13) + v1420 + 1;
  v1424 = v23;
  v1412 = v23 + 1;
  v24 = v23 + 1 + ((v15 + 160) & ~v15);
  if (v22 <= v24)
    v22 = v24;
  if (v22 <= 0x30)
    v22 = 48;
  v1363 = v22;
  __n = v22 + 1;
  v1429 = v22 + 1 + ((v16 + 1) & ~v16);
  v1376 = sub_21D7C3F6C();
  v25 = *(_QWORD *)(v1376 - 8);
  v26 = *(unsigned __int8 *)(v25 + 80);
  v1374 = (v26 | 7) + 58;
  v1365 = v26 | 7;
  v27 = (v1374 + (((((v9 | v15) + v1448 + ((v4 + 16) & ~v4)) & ~(v9 | v15)) + v1429 + 11) & 0xFFFFFFFFFFFFFFF8)) & ~(v26 | 7);
  v1375 = *(_DWORD *)(v25 + 84);
  v1380 = v26 + 16;
  v1373 = v26;
  v1348 = v25;
  v28 = *(_QWORD *)(v25 + 64);
  if (!v1375)
    ++v28;
  v1353 = v28;
  v29 = ((v26 + 16) & ~v26) + v28;
  v1340 = sub_21D7C4314();
  v30 = *(_QWORD *)(v1340 - 8);
  v31 = *(_DWORD *)(v30 + 80);
  v1404 = v30;
  v1442 = v14 | 7;
  v1320 = sub_21D7BF964();
  v32 = *(_QWORD *)(v1320 - 8);
  v33 = *(unsigned __int8 *)(v32 + 80);
  v1433 = v16 | v14 | v31 | v33;
  v1364 = v29;
  v1408 = v27 + v29 + v1433;
  v34 = v31;
  v1431 = v31;
  v1439 = v31 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v1440 = *(_QWORD *)(v30 + 64) + ((v31 + 65) & ~(unint64_t)v31);
  v1426 = v1448 + 7;
  v35 = (v1448 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 47) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 23) & 0xFFFFFFFFFFFFFFF8;
  v1389 = v37;
  v1341 = v31 + 16;
  v1410 = (v1440 + ((v1341 + ((v37 + 15) & 0xFFFFFFFFFFFFFFF8)) & v1439)) & 0xFFFFFFFFFFFFFFF8;
  v1417 = v15 + 16;
  v1342 = v14 + 8;
  v1366 = v14;
  v38 = v1420 + ((v14 + 8) & ~v14);
  if (v1416)
    v39 = v1416 - 1;
  else
    v39 = 0;
  v40 = v36 + 16;
  v41 = (v35 + 47) & 0xFFFFFFFFFFFFFFF8;
  v42 = v1412 + v33 + ((v36 + 16 + v15) & ~v15);
  v43 = v1414 - 1;
  v1347 = v39;
  v1305 = v1414 - 1;
  if (v39 > v1414 - 1)
    v43 = v39;
  if (v43 <= 0x7FFFFFFF)
    v43 = 0x7FFFFFFF;
  v44 = v1425 - 1;
  if (!v1425)
    v44 = 0;
  if (v44 > v43)
    v43 = v44;
  v1337 = v43;
  v45 = (v1436 + 23) & 0xFFFFFFFFFFFFFFF8;
  v1395 = (v35 + 47) & 0xFFFFFFFFFFFFFFF8;
  v1415 = v41 + 17;
  v1310 = v8 + 23;
  v1397 = v8 + 23 + v41 + 17 + ((v1405 + ((((v45 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v1430);
  v1421 = v1420 + ((v14 + 8) & ~v14);
  v46 = v38 + v8;
  v1393 = (v41 + 47) & 0xFFFFFFFFFFFFFFF8;
  v1345 = v1393 + 16;
  v47 = v1393 + 16 + v1430;
  v1413 = v1393 + 24;
  v48 = v1393
      + 24
      + ((v47
        + ((v47
          + ((v1422
            + v1430
            + ((v38 + v8 + ((v1424 + v1442 + ((v15 + 16 + ((v1410 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & ~v1442)) & ~v8)) & ~v1430)) & ~v1430)) & ~v1430);
  v1377 = *(unsigned __int8 *)(v32 + 80);
  v1319 = *(_QWORD *)(v1320 - 8);
  v1316 = *(_QWORD *)(v32 + 64) + 7;
  v1418 = v1424 + v1442;
  v49 = ((v1424 + v1442 + ((v1422 + v15 + ((v1441 + ((v1316 + (v42 & ~v33)) & 0xFFFFFFFFFFFFFFF8)) & ~v8)) & ~v15)) & ~v1442)
      + v38;
  v1322 = v8 + 41;
  v50 = v1424 + 7;
  v51 = ((((v1424 + 7 + ((v1422 + v15 + ((v8 + 41 + ((v37 + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v8)) & ~v15)) & 0xFFFFFFFFFFFFFFF8)
        + 47) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v52 = v35 + 40;
  v53 = v9 | v15;
  v54 = (v53 + v52) & ~v53;
  v1321 = v51 + v1435;
  v1306 = v1429 + 7;
  v1307 = v1435 + 8;
  v55 = ((v53 + 8 + ((v1429 + 7 + ((v51 + v53 + v54) & ~v53)) & 0xFFFFFFFFFFFFFFF8)) & ~v53) + v1429;
  v1406 = v1422 + 7;
  v56 = (v1422 + 7 + ((v52 + v1428) & ~v8)) & 0xFFFFFFFFFFFFFFF8;
  v1313 = v1419 + v15;
  v57 = v1424 + v15;
  v58 = ((v46
        + ((v1424 + v1442 + ((v1424 + v15 + ((v1419 + v15 + ((v40 + v1428) & ~v1428)) & ~v15) + 1) & ~v15)) & ~v1442)) & ~v8)
      + v1422;
  v59 = ((v1440 + 7 + ((v52 + v34) & v1439)) & 0xFFFFFFFFFFFFFFF8) + 8;
  v1311 = v8 + 17;
  v60 = v1422 + ((v8 + 17 + v1436) & ~v8);
  v1338 = v1422 + ((v1428 + 8) & ~v8);
  v1339 = v51;
  if (v1338 <= v48)
    v61 = v48;
  else
    v61 = v1422 + ((v1428 + 8) & ~v8);
  v1336 = v49;
  if (v61 <= v49)
    v61 = v49;
  if (v61 <= v51)
    v61 = v51;
  v1333 = ((((((v56 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
  v1334 = v55;
  if (v61 <= v55)
    v61 = v55;
  if (v61 <= ((((((v56 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8)
    v61 = ((((((v56 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
  v1330 = v58;
  v1331 = (((((v1438 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v61 <= v58)
    v61 = v58;
  if (v61 <= (((((v1438 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16)
    v61 = (((((v1438 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v1332 = v59;
  if (v61 <= v59)
    v61 = v59;
  v1329 = v60 + 1;
  if (v61 <= v60 + 1)
    v62 = v60 + 1;
  else
    v62 = v61;
  v1391 = v1408 & ~v1433;
  v63 = (((v45 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v64 = ((((v63 + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 41;
  v1309 = v15 + 40;
  v65 = ((v57
        + ((v15
          + 40
          + ((((((v63 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & ~v15)
      + v1424;
  v66 = (v1389 + 23) & 0xFFFFFFFFFFFFFFF8;
  v67 = v66 + 8;
  v68 = ((v66 + 47) & 0xFFFFFFFFFFFFFFF8) + 40;
  v1303 = v1422 + v15;
  v1304 = ((v1422 + v15 + ((v68 + v8) & ~v8)) & ~v15) + v1424;
  v69 = ((v1428 + 8 + ((v1304 + 7 + v54) & 0xFFFFFFFFFFFFFFF8)) & ~v8) + v1422;
  v1315 = v15 + 24;
  v1344 = v46;
  v1335 = v1393 + 16 + v1430;
  v70 = v1413
      + ((v47
        + ((v47 + ((v1422 + v1430 + ((v46 + ((v1418 + ((v15 + 24 + v1410) & ~v15)) & ~v1442)) & ~v8)) & ~v1430)) & ~v1430)) & ~v1430);
  v71 = (v1395 + 15) & 0xFFFFFFFFFFFFFFF8;
  v72 = v1432;
  v1407 = ((v72 + 80) & ~v72) + v1448;
  v1411 = ((v72 + 56) & ~v72) + v1448;
  v1409 = ((((v1426 + ((v1423 + (v50 & 0xFFFFFFFFFFFFFFF8)) & ~v1432)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  v73 = (v56 + 23) & 0xFFFFFFFFFFFFFFF8;
  v1312 = v15 + 18;
  v74 = ((v15 + 18 + v73) & ~v15) + v1424;
  v75 = ((v50
        + ((v15
          + 8
          + ((((((((((v73 + 25) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v76 = v1389 + 40;
  v77 = v1395 + 8;
  v78 = v1436 + 8;
  v79 = ((v1436 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  v80 = (((v1393 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v1396 = v15 + 8;
  v1390 = v1424 + v15;
  v81 = v74;
  v1318 = v1421 + v1442;
  v82 = ((v1406
        + ((v1441
          + ((((v1421
              + ((v1421
                + v1442
                + ((v1418
                  + ((v57 + ((v15 + 8 + ((((v80 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & ~v15)) & ~v1442)) & ~v1442)
              + 9) & 0xFFFFFFFFFFFFFFF8)
            + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v8)) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v83 = (v1397 & ~v8) + v1422;
  v1308 = v1431 + 8;
  v1314 = v1440 + v15;
  v1317 = v15 + 9;
  v1398 = v1424 + 7;
  v1437 = v15;
  v84 = v1424
      + v8
      + ((v1417
        + ((v50
          + ((v15
            + 9
            + ((((v50 + ((v1440 + v15 + ((v1431 + 8 + v80) & v1439)) & ~v15)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & 0xFFFFFFFFFFFFFFF8)) & ~v15);
  v85 = v8;
  v86 = (v84 & ~v8) + v1422;
  v1327 = v64;
  v1328 = v67;
  if (v62 <= v64)
    v87 = v64;
  else
    v87 = v62;
  v1324 = v69;
  v1325 = v65;
  if (v87 <= v65)
    v87 = v65;
  if (v87 <= v67)
    v87 = v67;
  if (v87 <= v69)
    v87 = v69;
  if (v87 <= v1415)
    v87 = v1415;
  v1326 = v70;
  if (v87 <= v70)
    v87 = v70;
  v1394 = v71 + 16;
  if (v87 <= v71 + 16)
    v87 = v71 + 16;
  if (v87 <= ((v1438 + 9) & 0xFFFFFFFFFFFFFFF8) + 17)
    v87 = ((v1438 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
  if (v87 <= v1407)
    v87 = v1407;
  if (v87 <= v1411)
    v87 = v1411;
  if (v87 <= v1409)
    v87 = ((((v1426 + ((v1423 + (v50 & 0xFFFFFFFFFFFFFFF8)) & ~v1432)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  if (v87 <= v81)
    v87 = v81;
  v1323 = v75;
  if (v87 <= v75)
    v87 = v75;
  if (v87 <= v76)
    v87 = v76;
  if (v87 <= v71 + 8)
    v87 = v71 + 8;
  if (v87 <= v68)
    v87 = v68;
  if (v87 <= v77)
    v87 = v77;
  if (v87 <= v78)
    v87 = v78;
  if (v87 <= v79)
    v87 = v79;
  if (v87 <= v1438)
    v87 = v1438;
  if (v87 <= v82)
    v87 = v82;
  if (v87 <= v83)
    v87 = v83;
  if (v87 <= v86)
    v87 = v86;
  if (v87 <= 8)
    v88 = 8;
  else
    v88 = v87;
  v89 = ((v88 + 8 + v1391) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v89 <= v1402)
    v89 = v1402;
  if (v89 <= 8)
    v90 = 8;
  else
    v90 = v89;
  if (*((unsigned __int8 *)a2 + v90) >= 4u)
  {
    if (v90 <= 3)
      v91 = v90;
    else
      v91 = 4;
    __asm { BR              X12 }
  }
  switch(*((_BYTE *)a2 + v90))
  {
    case 0:
      v92 = a1;
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1369 + 16))(a1, a2, v1371);
      *((_BYTE *)a1 + v90) = 0;
      return v92;
    case 1:
      v1299 = *(_DWORD *)(v1404 + 84);
      v1287 = v1424 + v8;
      v1288 = v76;
      v1289 = v81;
      v1290 = v71 + 8;
      v1291 = v86;
      v1292 = v77;
      v1293 = v82;
      v1294 = v83;
      v1295 = v78;
      v1296 = v79;
      v1297 = v68;
      v1403 = v88;
      v1392 = v88 + 8;
      v93 = ~v1435;
      v94 = a2[1];
      *a1 = *a2;
      a1[1] = v94;
      v95 = (void *)(((unint64_t)a1 + v1432 + 16) & ~v1432);
      v1301 = ~v1432;
      v96 = (const void *)(((unint64_t)a2 + v1432 + 16) & ~v1432);
      sub_21D7C4C20();
      if (__swift_getEnumTagSinglePayload((uint64_t)v96, 1, v1388))
      {
        v97 = v1448;
        memcpy(v95, v96, v1448);
        v98 = v85;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v1362 + 16))(v95, v96, v1388);
        __swift_storeEnumTagSinglePayload((uint64_t)v95, 0, 1, v1388);
        v98 = v85;
        v97 = v1448;
      }
      v100 = ~v98;
      v101 = ~v1428;
      v1372 = ~v1437;
      v1370 = ~v1366;
      v102 = (_BYTE *)(((unint64_t)v95 + v97 + v1435) & v93);
      v103 = (unsigned __int8 *)(((unint64_t)v96 + v97 + v1435) & v93);
      v104 = *v103;
      v1300 = 8 * v1379;
      v1298 = ~v1435;
      if (v104 > 2)
      {
        v111 = v1429;
        memcpy((void *)(((unint64_t)v95 + v97 + v1435) & v93), v103, v1429);
        v112 = v1365;
        goto LABEL_175;
      }
      *v102 = v104;
      v105 = (_QWORD *)((unint64_t)&v102[v1361] & v93);
      v1400 = v103;
      v106 = (__int128 *)((unint64_t)&v103[v1361] & v93);
      v107 = *((unsigned __int8 *)v106 + v1363);
      if (v107 > 2)
      {
        memcpy((void *)((unint64_t)&v102[v1361] & v93), v106, __n);
        v111 = v1429;
        goto LABEL_174;
      }
      if (v107 != 2)
      {
        if (v107 == 1)
        {
          v108 = *((_QWORD *)v106 + 3);
          *(_QWORD *)(((unint64_t)&v102[v1361] & v93) + 0x18) = v108;
          *(_QWORD *)(((unint64_t)&v102[v1361] & v93) + 0x20) = *((_QWORD *)v106 + 4);
          (**(void (***)(_QWORD *, __int128 *))(v108 - 8))(v105, v106);
          v109 = (void *)(((unint64_t)v105 + v1423) & v1301);
          v110 = (const void *)(((unint64_t)v106 + v1423) & v1301);
          v1367 = v102;
          v1285 = v98;
          if (__swift_getEnumTagSinglePayload((uint64_t)v110, 1, v1388))
          {
            memcpy(v109, v110, v1448);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1362 + 16))(v109, v110, v1388);
            __swift_storeEnumTagSinglePayload((uint64_t)v109, 0, 1, v1388);
          }
          v114 = (_QWORD *)(((unint64_t)v109 + v1426) & 0xFFFFFFFFFFFFFFF8);
          v115 = (_QWORD *)(((unint64_t)v110 + v1426) & 0xFFFFFFFFFFFFFFF8);
          *v114 = *v115;
          v114[1] = v115[1];
          v116 = ((unint64_t)v114 + 23) & 0xFFFFFFFFFFFFFFF8;
          v117 = ((unint64_t)v115 + 23) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v116 = *(_QWORD *)v117;
          *(_BYTE *)(v116 + 8) = *(_BYTE *)(v117 + 8);
          v118 = ((unint64_t)v114 + 39) & 0xFFFFFFFFFFFFFFF8;
          v119 = ((unint64_t)v115 + 39) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v118 = *(_QWORD *)v119;
          *(_BYTE *)(v118 + 8) = *(_BYTE *)(v119 + 8);
          v120 = ((unint64_t)v114 + 55) & 0xFFFFFFFFFFFFFFF8;
          v121 = ((unint64_t)v115 + 55) & 0xFFFFFFFFFFFFFFF8;
          v122 = *(_QWORD *)v121;
          *(_BYTE *)(v120 + 8) = *(_BYTE *)(v121 + 8);
          *(_QWORD *)v120 = v122;
          v123 = (_QWORD *)(((unint64_t)v114 + 71) & 0xFFFFFFFFFFFFFFF8);
          v124 = (_QWORD *)(((unint64_t)v115 + 71) & 0xFFFFFFFFFFFFFFF8);
          *v123 = *v124;
          v123[1] = v124[1];
          v125 = ((unint64_t)v123 + 23) & 0xFFFFFFFFFFFFFFF8;
          v126 = ((unint64_t)v124 + 23) & 0xFFFFFFFFFFFFFFF8;
          v127 = *(_QWORD *)(v126 + 24);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          v111 = v1429;
          if (v127 < 0xFFFFFFFF)
          {
            v128 = *(_OWORD *)v126;
            v129 = *(_OWORD *)(v126 + 16);
            *(_QWORD *)(v125 + 32) = *(_QWORD *)(v126 + 32);
            *(_OWORD *)v125 = v128;
            *(_OWORD *)(v125 + 16) = v129;
          }
          else
          {
            *(_QWORD *)(v125 + 24) = v127;
            *(_QWORD *)(v125 + 32) = *(_QWORD *)(v126 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v127 - 8))(v125, v126, v127);
          }
          v98 = v1285;
          v130 = (_QWORD *)((v1441 + v125) & v100);
          v131 = (_QWORD *)((v1441 + v126) & v100);
          if (v1354 >= 0x7FFFFFFF)
          {
            v135 = ((unint64_t)v131 + v1359) & v101;
            EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v135, v1346, v1358);
            v131 = (_QWORD *)((v1441 + v126) & v100);
            v102 = v1367;
            if (EnumTagSinglePayload <= 1)
            {
              v1283 = v105;
              v133 = (char *)(v131 + 1);
              v134 = v1359;
              v1280 = (const void *)v135;
              goto LABEL_148;
            }
          }
          else
          {
            v132 = *(_QWORD *)(((v1441 + v126) & v100) + 0x10);
            if (v132 >= 0xFFFFFFFF)
              LODWORD(v132) = -1;
            v102 = v1367;
            if ((int)v132 - 1 < 0)
            {
              v1283 = v105;
              v133 = (char *)(v131 + 1);
              v134 = v1359;
              v1280 = (const void *)(((unint64_t)v131 + v1359) & v101);
LABEL_148:
              *(_BYTE *)v130 = *(_BYTE *)v131;
              v130[1] = v131[1];
              v130[2] = *((_QWORD *)v133 + 1);
              v130[3] = *((_QWORD *)v133 + 2);
              v130[4] = *((_QWORD *)v133 + 3);
              v130[5] = *((_QWORD *)v133 + 4);
              v130[6] = *((_QWORD *)v133 + 5);
              v130[7] = *((_QWORD *)v133 + 6);
              v130[8] = *((_QWORD *)v133 + 7);
              v130[9] = *((_QWORD *)v133 + 8);
              v130[10] = *((_QWORD *)v133 + 9);
              v130[11] = *((_QWORD *)v133 + 10);
              v130[12] = *((_QWORD *)v133 + 11);
              v137 = *((_QWORD *)v133 + 12);
              *((_BYTE *)v130 + 112) = v133[104];
              v130[13] = v137;
              v138 = (void *)(((unint64_t)v130 + v134) & v101);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1280, 1, v1358))
              {
                memcpy(v138, v1280, v1419);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v138, v1280, v1358);
                __swift_storeEnumTagSinglePayload((uint64_t)v138, 0, 1, v1358);
              }
              v102 = v1367;
              v105 = v1283;
              goto LABEL_173;
            }
          }
          memcpy(v130, v131, v1422);
LABEL_173:
          *((_BYTE *)v105 + v1363) = 1;
          goto LABEL_174;
        }
        v111 = v1429;
        *v105 = *(_QWORD *)v106;
        *(_QWORD *)(((unint64_t)&v102[v1361] & v93) + 8) = *((_QWORD *)v106 + 1);
        *(_QWORD *)(((unint64_t)&v102[v1361] & v93) + 0x10) = *((_QWORD *)v106 + 2);
        *(_QWORD *)(((unint64_t)&v102[v1361] & v93) + 0x18) = *((_QWORD *)v106 + 3);
        *(_QWORD *)(((unint64_t)&v102[v1361] & v93) + 0x20) = *((_QWORD *)v106 + 4);
        *(_QWORD *)(((unint64_t)&v102[v1361] & v93) + 0x28) = *((_QWORD *)v106 + 5);
        *((_BYTE *)v105 + v1363) = 0;
        sub_21D7C4C20();
        sub_21D7C4C20();
        sub_21D7C4C20();
LABEL_174:
        v112 = v1365;
        v103 = v1400;
        goto LABEL_175;
      }
      if (*((_QWORD *)v106 + 1) < 0xFFFFFFFFuLL)
      {
        memcpy((void *)((unint64_t)&v102[v1361] & v93), v106, 0x48uLL);
      }
      else
      {
        *v105 = *(_QWORD *)v106;
        *(_QWORD *)(((unint64_t)&v102[v1361] & v93) + 8) = *((_QWORD *)v106 + 1);
        *(_QWORD *)(((unint64_t)&v102[v1361] & v93) + 0x10) = *((_QWORD *)v106 + 2);
        *(_QWORD *)(((unint64_t)&v102[v1361] & v93) + 0x18) = *((_QWORD *)v106 + 3);
        __src = v106 + 2;
        v113 = *((_QWORD *)v106 + 7);
        sub_21D7C4C20();
        sub_21D7C4C20();
        if (v113)
        {
          *(_QWORD *)(((unint64_t)&v102[v1361] & v93) + 0x38) = v113;
          *(_QWORD *)(((unint64_t)&v102[v1361] & v93) + 0x40) = *((_QWORD *)v106 + 8);
          (**(void (***)(uint64_t, __int128 *, uint64_t))(v113 - 8))((uint64_t)(v105 + 4), __src, v113);
        }
        else
        {
          v139 = *__src;
          v140 = v106[3];
          *(_QWORD *)(((unint64_t)&v102[v1361] & v93) + 0x40) = *((_QWORD *)v106 + 8);
          *(_OWORD *)(((unint64_t)&v102[v1361] & v93) + 0x20) = v139;
          *(_OWORD *)(((unint64_t)&v102[v1361] & v93) + 0x30) = v140;
        }
      }
      v141 = ((unint64_t)v105 + 79) & 0xFFFFFFFFFFFFFFF8;
      v142 = (_QWORD *)(((unint64_t)v106 + 79) & 0xFFFFFFFFFFFFFFF8);
      v1284 = v105;
      v1286 = v98;
      if (v142[1] < 0xFFFFFFFFuLL)
      {
        memcpy((void *)(((unint64_t)v105 + 79) & 0xFFFFFFFFFFFFFFF8), v142, 0x48uLL);
        v144 = v1357;
      }
      else
      {
        *(_QWORD *)v141 = *v142;
        *(_QWORD *)(v141 + 8) = v142[1];
        *(_QWORD *)(v141 + 16) = v142[2];
        *(_QWORD *)(v141 + 24) = v142[3];
        v143 = v142[7];
        sub_21D7C4C20();
        sub_21D7C4C20();
        if (v143)
        {
          *(_QWORD *)(v141 + 56) = v143;
          *(_QWORD *)(v141 + 64) = v142[8];
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v143 - 8))(v141 + 32, (uint64_t)(v142 + 4), v143);
        }
        else
        {
          v145 = *((_OWORD *)v142 + 2);
          v146 = *((_OWORD *)v142 + 3);
          *(_QWORD *)(v141 + 64) = v142[8];
          *(_OWORD *)(v141 + 32) = v145;
          *(_OWORD *)(v141 + 48) = v146;
        }
        v144 = v1357;
      }
      v147 = (_QWORD *)((v141 + 79) & 0xFFFFFFFFFFFFF8);
      v148 = (_QWORD *)(((unint64_t)v142 + 79) & 0xFFFFFFFFFFFFFFF8);
      *v147 = *v148;
      v149 = (_QWORD *)(((unint64_t)v147 + 15) & 0xFFFFFFFFFFFFFFF8);
      v150 = (_QWORD *)(((unint64_t)v148 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v149 = *v150;
      v151 = (void *)(((unint64_t)v149 + v1396) & v1372);
      v152 = (unsigned __int8 *)(((unint64_t)v150 + v1396) & v1372);
      sub_21D7C4C20();
      sub_21D7C4C20();
      __srca = v152;
      if (v1425)
      {
        v153 = v1352;
        v112 = v1365;
        v103 = v1400;
        if (v1352 >= v144)
        {
          v154 = (uint64_t)__srca;
          v155 = v1355;
        }
        else
        {
          v154 = (unint64_t)&__srca[v1356] & v1370;
          v153 = v144;
          v155 = v1360;
        }
        v159 = __swift_getEnumTagSinglePayload(v154, v153, v155);
      }
      else
      {
        v156 = v152[v1379];
        v112 = v1365;
        v103 = v1400;
        if (!v156)
          goto LABEL_655;
        v157 = (v156 - 1) << v1300;
        if (v1379 > 3)
          v157 = 0;
        if ((_DWORD)v1379)
        {
          if (v1379 <= 3)
            v158 = v1379;
          else
            v158 = 4;
          __asm { BR              X11 }
        }
        v159 = v157 + 1;
      }
      if (v159)
      {
        v765 = __srca;
        memcpy(v151, __srca, v1424);
        goto LABEL_657;
      }
LABEL_655:
      v765 = __srca;
      (*(void (**)(void *, _BYTE *, uint64_t))(v1349 + 16))(v151, __srca, v1355);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1350 + 16))(((unint64_t)v151 + v1356) & v1370, (unint64_t)&__srca[v1356] & v1370, v1360);
      if (!v1425)
        *((_BYTE *)v151 + v1379) = 0;
LABEL_657:
      *((_BYTE *)v151 + v1424) = v765[v1424];
      v98 = v1286;
      *((_BYTE *)v1284 + v1363) = 2;
      v111 = v1429;
LABEL_175:
      v160 = ~v112;
      v161 = &v102[v111];
      v162 = &v103[v111];
      *(_WORD *)v161 = *(_WORD *)&v103[v111];
      v161[2] = v103[v111 + 2];
      v161[3] = v103[v111 + 3];
      v163 = (unint64_t)&v102[v111 + 11] & 0xFFFFFFFFFFFFFFF8;
      v164 = (unint64_t)(v162 + 11) & 0xFFFFFFFFFFFFFFF8;
      v165 = *(_QWORD *)(v164 + 24);
      v1368 = ~v1428;
      v1302 = v100;
      if (v165 < 0xFFFFFFFF)
      {
        v166 = *(_OWORD *)v164;
        v167 = *(_OWORD *)(v164 + 16);
        v168 = *(_OWORD *)(v164 + 32);
        *(_OWORD *)(v163 + 41) = *(_OWORD *)(v164 + 41);
        *(_OWORD *)(v163 + 16) = v167;
        *(_OWORD *)(v163 + 32) = v168;
        *(_OWORD *)v163 = v166;
      }
      else
      {
        *(_QWORD *)(v163 + 24) = v165;
        *(_QWORD *)(v163 + 32) = *(_QWORD *)(v164 + 32);
        (**(void (***)(unint64_t, unint64_t))(v165 - 8))(v163, (unint64_t)(v162 + 11) & 0xFFFFFFFFFFFFFFF8);
        *(_QWORD *)(v163 + 40) = *(_QWORD *)(v164 + 40);
        *(_QWORD *)(v163 + 48) = *(_QWORD *)(v164 + 48);
        *(_BYTE *)(v163 + 56) = *(_BYTE *)(v164 + 56);
        sub_21D7C4C20();
      }
      v169 = v1380;
      v170 = ~v1373;
      v171 = ~v1433;
      *(_BYTE *)(v163 + 57) = *(_BYTE *)(v164 + 57);
      v172 = (_QWORD *)((v1374 + v163) & v160);
      v173 = (_QWORD *)((v1374 + v164) & v160);
      if (v1375 < 0x80000001)
      {
        v174 = v1431;
        if (v173[1] >= 0xFFFFFFFFuLL)
        {
          v175 = (const void *)(((unint64_t)v173 + v1380) & v170);
          goto LABEL_182;
        }
LABEL_184:
        v178 = v1364;
        memcpy(v172, v173, v1364);
        v179 = v1403;
        goto LABEL_187;
      }
      v175 = (const void *)(((unint64_t)v173 + v1380) & v170);
      v176 = __swift_getEnumTagSinglePayload((uint64_t)v175, v1375, v1376);
      v169 = v1380;
      v174 = v1431;
      if (v176 >= 2)
        goto LABEL_184;
LABEL_182:
      *v172 = *v173;
      v172[1] = v173[1];
      v177 = (void *)(((unint64_t)v172 + v169) & v170);
      sub_21D7C4C20();
      if (__swift_getEnumTagSinglePayload((uint64_t)v175, 1, v1376))
      {
        memcpy(v177, v175, v1353);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v1348 + 16))(v177, v175, v1376);
        __swift_storeEnumTagSinglePayload((uint64_t)v177, 0, 1, v1376);
      }
      v179 = v1403;
      v178 = v1364;
LABEL_187:
      v180 = (_QWORD *)(((unint64_t)v172 + v1433 + v178) & v171);
      v181 = *(unsigned __int8 *)((((unint64_t)v173 + v1433 + v178) & v171) + v179);
      v1434 = (_QWORD *)(((unint64_t)v173 + v1433 + v178) & v171);
      v1401 = v90;
      v183 = ~v174;
      v184 = ~v1430;
      v185 = ~v1377;
      switch(v181)
      {
        case 0:
          v1443 = ~v1442;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1434, 1, v1388))
          {
            memcpy(v180, v1434, v1448);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1362 + 16))(v180, v1434, v1388);
            __swift_storeEnumTagSinglePayload((uint64_t)v180, 0, 1, v1388);
          }
          v252 = ((unint64_t)v180 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v253 = ((unint64_t)v1434 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v254 = *(_QWORD *)(v253 + 24);
          *(_QWORD *)(v252 + 24) = v254;
          *(_QWORD *)(v252 + 32) = *(_QWORD *)(v253 + 32);
          (**(void (***)(unint64_t, unint64_t))(v254 - 8))(v252, v253);
          v255 = (_QWORD *)((v252 + 47) & 0xFFFFFFFFFFFFFFF8);
          v256 = (_QWORD *)((v253 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v255 = *v256;
          v255[1] = v256[1];
          v257 = (_QWORD *)(((unint64_t)v255 + 23) & 0xFFFFFFFFFFFFF8);
          v258 = (_QWORD *)(((unint64_t)v256 + 23) & 0xFFFFFFFFFFFFF8);
          *v257 = *v258;
          v259 = (_QWORD *)(((unint64_t)v257 + 15) & 0xFFFFFFFFFFFFFFF8);
          v260 = (_QWORD *)(((unint64_t)v258 + 15) & 0xFFFFFFFFFFFFFFF8);
          *v259 = *v260;
          v259[1] = v260[1];
          v261 = (_QWORD *)(((unint64_t)v259 + v1341) & v1439);
          v262 = (_QWORD *)(((unint64_t)v260 + v1341) & v1439);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          v263 = ~v1428;
          if (v1299 > 0x7FFFFFFE)
          {
            v266 = (_QWORD *)(((unint64_t)v262 + 23) & 0xFFFFFFFFFFFFFFF8);
            v267 = ((unint64_t)v266 + 23) & 0xFFFFFFFFFFFFFFF8;
            v268 = __swift_getEnumTagSinglePayload((v1431 + v267 + 33) & v183, v1299, v1340);
            v265 = v1440;
            if (!v268)
              goto LABEL_292;
LABEL_291:
            v269 = v265;
            memcpy(v261, v262, v265);
            goto LABEL_293;
          }
          v264 = v262[1];
          if (v264 >= 0xFFFFFFFF)
            LODWORD(v264) = -1;
          v265 = v1440;
          if ((v264 + 1) > 1)
            goto LABEL_291;
          v266 = (_QWORD *)(((unint64_t)v262 + 23) & 0xFFFFFFFFFFFFFFF8);
          v267 = ((unint64_t)v266 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_292:
          *v261 = *v262;
          v261[1] = v262[1];
          v270 = (_QWORD *)(((unint64_t)v261 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v270 = *v266;
          v270[1] = v266[1];
          v271 = ((unint64_t)v270 + 23) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v271 = *(_QWORD *)v267;
          *(_QWORD *)(v271 + 8) = *(_QWORD *)(v267 + 8);
          *(_BYTE *)(v271 + 16) = *(_BYTE *)(v267 + 16);
          v272 = ((unint64_t)v270 + 47) & 0xFFFFFFFFFFFFFFF8;
          v273 = ((unint64_t)v266 + 47) & 0xFFFFFFFFFFFFFFF8;
          v274 = *(void **)v273;
          *(_QWORD *)v272 = *(_QWORD *)v273;
          *(_BYTE *)(v272 + 8) = *(_BYTE *)(v273 + 8);
          v275 = (v1431 + 9 + v272) & v183;
          v276 = (v1431 + 9 + v273) & v183;
          v277 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1404 + 16);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          v278 = v274;
          v277(v275, v276, v1340);
          v263 = ~v1428;
          v269 = v1440;
LABEL_293:
          *((_BYTE *)v261 + v269) = *((_BYTE *)v262 + v269);
          v279 = ((unint64_t)v261 + v269) & 0xFFFFFFFFFFFFFFF8;
          v280 = ((unint64_t)v262 + v269) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)(v279 + 8) = *(_QWORD *)(v280 + 8);
          v281 = (_QWORD *)((v279 + 23) & 0xFFFFFFFFFFFFFFF8);
          v282 = (_QWORD *)((v280 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v281 = *v282;
          v281[1] = v282[1];
          v283 = (void *)(((unint64_t)v281 + v1417) & v1372);
          v284 = (_BYTE *)(((unint64_t)v282 + v1417) & v1372);
          sub_21D7C4C20();
          sub_21D7C4C20();
          v285 = v1416;
          if (v1425)
          {
            v286 = v1352;
            if (v1352 >= v1357)
            {
              v287 = (uint64_t)v284;
              v288 = v1355;
            }
            else
            {
              v287 = (unint64_t)&v284[v1356] & v1370;
              v286 = v1357;
              v288 = v1360;
            }
            v690 = __swift_getEnumTagSinglePayload(v287, v286, v288);
          }
          else
          {
            if (!v284[v1379])
              goto LABEL_761;
            v638 = (v284[v1379] - 1) << v1300;
            if (v1379 > 3)
              v638 = 0;
            if ((_DWORD)v1379)
            {
              if (v1379 <= 3)
                v639 = v1379;
              else
                v639 = 4;
              __asm { BR              X11 }
            }
            v690 = v638 + 1;
          }
          if (v690)
          {
            memcpy(v283, v284, v1424);
            goto LABEL_763;
          }
LABEL_761:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1349 + 16))(v283, v284, v1355);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1350 + 16))(((unint64_t)v283 + v1356) & v1370, (unint64_t)&v284[v1356] & v1370, v1360);
          if (!v1425)
            *((_BYTE *)v283 + v1379) = 0;
LABEL_763:
          v848 = (_QWORD *)(((unint64_t)v283 + v1418) & v1443);
          v849 = (uint64_t *)((unint64_t)&v284[v1418] & v1443);
          v850 = v1421;
          if ((v1357 & 0x80000000) != 0)
          {
            v852 = __swift_getEnumTagSinglePayload(((unint64_t)v849 + v1342) & v1370, v1357, v1360);
            v850 = v1421;
          }
          else
          {
            v851 = *v849;
            if ((unint64_t)*v849 >= 0xFFFFFFFF)
              LODWORD(v851) = -1;
            v852 = v851 + 1;
          }
          if (v852)
          {
            memcpy(v848, v849, v850);
          }
          else
          {
            *v848 = *v849;
            v853 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1350 + 16);
            sub_21D7C4C20();
            v853(((unint64_t)v848 + v1342) & v1370, ((unint64_t)v849 + v1342) & v1370, v1360);
          }
          v854 = (_BYTE *)(((unint64_t)v848 + v1344) & v1302);
          v855 = (_QWORD *)(((unint64_t)v849 + v1344) & v1302);
          if (v1354 >= 0x7FFFFFFF)
          {
            v859 = (const void *)(((unint64_t)v855 + v1359) & v263);
            if (__swift_getEnumTagSinglePayload((uint64_t)v859, v1346, v1358) <= 1)
            {
              v857 = v855 + 1;
              v858 = v1359;
              goto LABEL_778;
            }
LABEL_780:
            v862 = v1422;
            memcpy(v854, v855, v1422);
            goto LABEL_783;
          }
          v856 = v855[2];
          if (v856 >= 0xFFFFFFFF)
            LODWORD(v856) = -1;
          if ((int)v856 - 1 >= 0)
            goto LABEL_780;
          v857 = v855 + 1;
          v858 = v1359;
          v859 = (const void *)(((unint64_t)v855 + v1359) & v263);
LABEL_778:
          *v854 = *(_BYTE *)v855;
          *(_QWORD *)((((unint64_t)v848 + v1344) & v1302) + 8) = v855[1];
          *(_QWORD *)((((unint64_t)v848 + v1344) & v1302) + 0x10) = v857[1];
          *(_QWORD *)((((unint64_t)v848 + v1344) & v1302) + 0x18) = v857[2];
          *(_QWORD *)((((unint64_t)v848 + v1344) & v1302) + 0x20) = v857[3];
          *(_QWORD *)((((unint64_t)v848 + v1344) & v1302) + 0x28) = v857[4];
          *(_QWORD *)((((unint64_t)v848 + v1344) & v1302) + 0x30) = v857[5];
          *(_QWORD *)((((unint64_t)v848 + v1344) & v1302) + 0x38) = v857[6];
          *(_QWORD *)((((unint64_t)v848 + v1344) & v1302) + 0x40) = v857[7];
          *(_QWORD *)((((unint64_t)v848 + v1344) & v1302) + 0x48) = v857[8];
          *(_QWORD *)((((unint64_t)v848 + v1344) & v1302) + 0x50) = v857[9];
          *(_QWORD *)((((unint64_t)v848 + v1344) & v1302) + 0x58) = v857[10];
          *(_QWORD *)((((unint64_t)v848 + v1344) & v1302) + 0x60) = v857[11];
          v860 = v857[12];
          *(_BYTE *)((((unint64_t)v848 + v1344) & v1302) + 0x70) = *((_BYTE *)v857 + 104);
          *(_QWORD *)((((unint64_t)v848 + v1344) & v1302) + 0x68) = v860;
          v861 = (void *)((unint64_t)&v854[v858] & v263);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (__swift_getEnumTagSinglePayload((uint64_t)v859, 1, v1358))
          {
            memcpy(v861, v859, v1419);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v861, v859, v1358);
            __swift_storeEnumTagSinglePayload((uint64_t)v861, 0, 1, v1358);
          }
          v862 = v1422;
          v285 = v1416;
LABEL_783:
          v863 = (unint64_t)&v854[v1430 + v862];
          v864 = (unint64_t)v855 + v1430 + v862;
          v865 = v864 & v184;
          v436 = v1434;
          if (v1347 < 0x7FFFFFFF)
          {
            if (*(_QWORD *)(((v1426 + v865) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
              goto LABEL_785;
          }
          else if (__swift_getEnumTagSinglePayload(v864 & v184, v285, v1388) >= 2)
          {
LABEL_785:
            memcpy((void *)(v863 & v184), (const void *)(v864 & v184), v1345);
            v866 = v1345;
            goto LABEL_795;
          }
          if (__swift_getEnumTagSinglePayload(v864 & v184, 1, v1388))
          {
            memcpy((void *)(v863 & v184), (const void *)(v864 & v184), v1448);
          }
          else
          {
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v1362 + 16))(v863 & v184, v864 & v184, v1388);
            __swift_storeEnumTagSinglePayload(v863 & v184, 0, 1, v1388);
          }
          v867 = (v1426 + (v863 & v184)) & 0xFFFFFFFFFFFFFFF8;
          v868 = (v1426 + v865) & 0xFFFFFFFFFFFFFFF8;
          v869 = *(_QWORD *)(v868 + 24);
          *(_QWORD *)(v867 + 24) = v869;
          *(_QWORD *)(v867 + 32) = *(_QWORD *)(v868 + 32);
          (**(void (***)(unint64_t, unint64_t))(v869 - 8))(v867, v868);
          v870 = (v867 + 47) & 0xFFFFFFFFFFFFFFF8;
          v871 = (v868 + 47) & 0xFFFFFFFFFFFFFFF8;
          v872 = *(_QWORD *)(v871 + 24);
          if (v872 < 0xFFFFFFFF)
          {
            v873 = *(_OWORD *)v871;
            v874 = *(_OWORD *)(v871 + 16);
            *(_QWORD *)(v870 + 32) = *(_QWORD *)(v871 + 32);
            *(_OWORD *)v870 = v873;
            *(_OWORD *)(v870 + 16) = v874;
          }
          else
          {
            *(_QWORD *)(v870 + 24) = v872;
            *(_QWORD *)(v870 + 32) = *(_QWORD *)(v871 + 32);
            (**(void (***)(unint64_t, unint64_t))(v872 - 8))(v870, (v868 + 47) & 0xFFFFFFFFFFFFFFF8);
          }
          v875 = (_QWORD *)((v870 + 47) & 0xFFFFFFFFFFFFFFF8);
          v876 = (_QWORD *)((v871 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v875 = *v876;
          v875[1] = v876[1];
          sub_21D7C4C20();
          v866 = v1345;
          if ((_DWORD)v285)
            v866 = ((((((v1378 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                 + 16;
LABEL_795:
          v877 = (v863 | v1432) + v866;
          v878 = (v864 | v1432) + v866;
          v879 = v878 & v184;
          if (v1347 < 0x7FFFFFFF)
          {
            if (*(_QWORD *)(((v1426 + v879) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
              goto LABEL_797;
          }
          else if (__swift_getEnumTagSinglePayload(v878 & v184, v285, v1388) >= 2)
          {
LABEL_797:
            memcpy((void *)(v877 & v184), (const void *)(v878 & v184), v1345);
            v880 = v1345;
            v881 = v1415;
            goto LABEL_807;
          }
          if (__swift_getEnumTagSinglePayload(v878 & v184, 1, v1388))
          {
            memcpy((void *)(v877 & v184), (const void *)(v878 & v184), v1448);
          }
          else
          {
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v1362 + 16))(v877 & v184, v878 & v184, v1388);
            __swift_storeEnumTagSinglePayload(v877 & v184, 0, 1, v1388);
          }
          v882 = (v1426 + (v877 & v184)) & 0xFFFFFFFFFFFFFFF8;
          v883 = (v1426 + v879) & 0xFFFFFFFFFFFFFFF8;
          v884 = *(_QWORD *)(v883 + 24);
          *(_QWORD *)(v882 + 24) = v884;
          *(_QWORD *)(v882 + 32) = *(_QWORD *)(v883 + 32);
          (**(void (***)(unint64_t, unint64_t))(v884 - 8))(v882, v883);
          v885 = (v882 + 47) & 0xFFFFFFFFFFFFFFF8;
          v886 = (v883 + 47) & 0xFFFFFFFFFFFFFFF8;
          v887 = *(_QWORD *)(v886 + 24);
          v881 = v1415;
          if (v887 < 0xFFFFFFFF)
          {
            v888 = *(_OWORD *)v886;
            v889 = *(_OWORD *)(v886 + 16);
            *(_QWORD *)(v885 + 32) = *(_QWORD *)(v886 + 32);
            *(_OWORD *)v885 = v888;
            *(_OWORD *)(v885 + 16) = v889;
          }
          else
          {
            *(_QWORD *)(v885 + 24) = v887;
            *(_QWORD *)(v885 + 32) = *(_QWORD *)(v886 + 32);
            (**(void (***)(unint64_t, unint64_t))(v887 - 8))(v885, v886);
          }
          v890 = (_QWORD *)((v885 + 47) & 0xFFFFFFFFFFFFFFF8);
          v891 = (_QWORD *)((v886 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v890 = *v891;
          v890[1] = v891[1];
          sub_21D7C4C20();
          v880 = v1345;
          if ((_DWORD)v285)
            v880 = ((((((v1378 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                 + 16;
LABEL_807:
          v892 = (char *)(((v877 | v1432) + v880) & v184);
          v893 = (char *)(((v878 | v1432) + v880) & v184);
          if (v1347 < 0x7FFFFFFF)
          {
            v202 = v1401;
            if (*(_QWORD *)(((unint64_t)&v893[v1426] & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
            {
LABEL_809:
              memcpy(v892, v893, v1345);
              v894 = v1344;
              v896 = v1335;
              v895 = v1336;
              v898 = v1333;
              v897 = v1334;
              v899 = v1422 + v1430;
              v900 = v1332;
              v902 = ((v1438 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
              v901 = v1330;
              v904 = v1323;
              v903 = v1324;
              v906 = v1328;
              v905 = v1329;
              v908 = v1326;
              v907 = v1327;
              v909 = v1325;
              v910 = v1378 + 1;
              if (!(_DWORD)v285)
                goto LABEL_821;
              goto LABEL_820;
            }
          }
          else
          {
            v202 = v1401;
            if (__swift_getEnumTagSinglePayload((uint64_t)v893, v285, v1388) >= 2)
              goto LABEL_809;
          }
          if (__swift_getEnumTagSinglePayload((uint64_t)v893, 1, v1388))
          {
            memcpy(v892, v893, v1448);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v1362 + 16))(v892, v893, v1388);
            __swift_storeEnumTagSinglePayload((uint64_t)v892, 0, 1, v1388);
          }
          v911 = (unint64_t)&v892[v1426] & 0xFFFFFFFFFFFFFFF8;
          v912 = (unint64_t)&v893[v1426] & 0xFFFFFFFFFFFFFFF8;
          v913 = *(_QWORD *)(v912 + 24);
          *(_QWORD *)(v911 + 24) = v913;
          *(_QWORD *)(v911 + 32) = *(_QWORD *)(v912 + 32);
          (**(void (***)(unint64_t, unint64_t))(v913 - 8))(v911, v912);
          v914 = (v911 + 47) & 0xFFFFFFFFFFFFFFF8;
          v915 = (v912 + 47) & 0xFFFFFFFFFFFFFFF8;
          v916 = *(_QWORD *)(v915 + 24);
          if (v916 < 0xFFFFFFFF)
          {
            v917 = *(_OWORD *)v915;
            v918 = *(_OWORD *)(v915 + 16);
            *(_QWORD *)(v914 + 32) = *(_QWORD *)(v915 + 32);
            *(_OWORD *)v914 = v917;
            *(_OWORD *)(v914 + 16) = v918;
          }
          else
          {
            *(_QWORD *)(v914 + 24) = v916;
            *(_QWORD *)(v914 + 32) = *(_QWORD *)(v915 + 32);
            (**(void (***)(unint64_t, unint64_t))(v916 - 8))(v914, v915);
          }
          v919 = (_QWORD *)((v914 + 47) & 0xFFFFFFFFFFFFFFF8);
          v920 = (_QWORD *)((v915 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v919 = *v920;
          v919[1] = v920[1];
          sub_21D7C4C20();
          v202 = v1401;
          v894 = v1344;
          v896 = v1335;
          v895 = v1336;
          v898 = v1333;
          v897 = v1334;
          v899 = v1422 + v1430;
          v900 = v1332;
          v902 = ((v1438 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
          v901 = v1330;
          v904 = v1323;
          v903 = v1324;
          v906 = v1328;
          v905 = v1329;
          v908 = v1326;
          v907 = v1327;
          v909 = v1325;
          v910 = v1378 + 1;
          if (!(_DWORD)v285)
            goto LABEL_821;
          v1345 = ((((((v1378 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                + 16;
LABEL_820:
          v910 = v1378;
LABEL_821:
          *(_QWORD *)&v892[v1345] = *(_QWORD *)&v893[v1345];
          v921 = v1413
               + ((v896
                 + ((v896
                   + ((v899
                     + ((v894
                       + ((v1418
                         + ((v1417
                           + ((((((v1341
                                 + ((((((((v910 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                   + 15) & 0xFFFFFFFFFFFFFFF8)) & v1439)
                               + v1440) & 0xFFFFFFFFFFFFFFF8)
                             + 23) & 0xFFFFFFFFFFFFFFF8)) & v1372)) & v1443)) & v1302)) & v184)) & v184)) & v184);
          if (v1338 > v921)
            v921 = v1338;
          if (v921 <= v895)
            v921 = v895;
          if (v921 <= v1339)
            v921 = v1339;
          if (v921 <= v897)
            v921 = v897;
          if (v921 <= v898)
            v921 = v898;
          if (v921 <= v901)
            v921 = v901;
          if (v921 <= v1331)
            v921 = (((((v1438 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
          if (v921 <= v900)
            v921 = v900;
          if (v921 <= v905)
            v921 = v905;
          if (v921 <= v907)
            v921 = v907;
          if (v921 <= v909)
            v921 = v909;
          if (v921 <= v906)
            v921 = v906;
          if (v921 <= v903)
            v921 = v903;
          if (v921 <= v881)
            v921 = v881;
          if (v921 <= v908)
            v921 = v908;
          if (v921 <= v1338)
            v921 = v1338;
          if (v921 <= v1394)
            v921 = v1394;
          if (v921 <= v902)
            v921 = v902;
          if (v921 <= v1407)
            v921 = v1407;
          if (v921 <= v1411)
            v921 = v1411;
          if (v921 <= v1409)
            v921 = v1409;
          if (v921 <= v1289)
            v921 = v1289;
          if (v921 <= v904)
            v921 = v904;
          if (v921 <= v1288)
            v921 = v1288;
          if (v921 <= v1290)
            v921 = v1290;
          if (v921 <= v1297)
            v921 = v1297;
          if (v921 <= v1292)
            v921 = v1292;
          if (v921 <= v1295)
            v921 = v1295;
          if (v921 <= v1296)
            v921 = v1296;
          if (v921 <= v1438)
            v921 = v1438;
          if (v921 <= v1293)
            v921 = v1293;
          if (v921 <= v1294)
            v921 = v1294;
          if (v921 <= v1291)
            v921 = v1291;
          if (v921 <= 8)
            v921 = 8;
          *((_BYTE *)v180 + v921) = 0;
LABEL_1187:
          v92 = a1;
          v417 = v1392;
          v194 = v436;
LABEL_1318:
          v1199 = (_QWORD *)(((unint64_t)v180 + v417) & 0xFFFFFFFFFFFFFFF8);
          v1200 = *(_QWORD *)(((unint64_t)v194 + v417) & 0xFFFFFFFFFFFFF8);
          LODWORD(v1201) = -1;
          if (v1200 < 0xFFFFFFFF)
            v1201 = *(_QWORD *)(((unint64_t)v194 + v417) & 0xFFFFFFFFFFFFF8);
          if ((int)v1201 - 1 < 0)
            v1200 = sub_21D7C4C20();
          *v1199 = v1200;
          *((_BYTE *)v92 + v202) = 1;
          return v92;
        case 1:
          *v180 = *v1434;
          v186 = v98 + 8;
          v187 = v180;
          v188 = ((unint64_t)v180 + v98 + 8) & v1302;
          v189 = v1434;
          v190 = ((unint64_t)v1434 + v186) & v1302;
          *(_BYTE *)v188 = *(_BYTE *)v190;
          *(_QWORD *)(v188 + 8) = *(_QWORD *)(v190 + 8);
          *(_QWORD *)(v188 + 16) = *(_QWORD *)(v190 + 16);
          *(_QWORD *)(v188 + 24) = *(_QWORD *)(v190 + 24);
          *(_QWORD *)(v188 + 32) = *(_QWORD *)(v190 + 32);
          *(_QWORD *)(v188 + 40) = *(_QWORD *)(v190 + 40);
          *(_QWORD *)(v188 + 48) = *(_QWORD *)(v190 + 48);
          *(_QWORD *)(v188 + 56) = *(_QWORD *)(v190 + 56);
          *(_QWORD *)(v188 + 64) = *(_QWORD *)(v190 + 64);
          *(_QWORD *)(v188 + 72) = *(_QWORD *)(v190 + 72);
          *(_QWORD *)(v188 + 80) = *(_QWORD *)(v190 + 80);
          *(_QWORD *)(v188 + 88) = *(_QWORD *)(v190 + 88);
          *(_QWORD *)(v188 + 96) = *(_QWORD *)(v190 + 96);
          v191 = *(_QWORD *)(v190 + 104);
          *(_BYTE *)(v188 + 112) = *(_BYTE *)(v190 + 112);
          *(_QWORD *)(v188 + 104) = v191;
          v192 = (void *)((v1359 + v188) & v1368);
          v193 = (const void *)((v1359 + v190) & v1368);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (__swift_getEnumTagSinglePayload((uint64_t)v193, 1, v1358))
          {
            memcpy(v192, v193, v1419);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v192, v193, v1358);
            __swift_storeEnumTagSinglePayload((uint64_t)v192, 0, 1, v1358);
          }
          v202 = v90;
          v289 = v1403;
          v290 = 1;
          goto LABEL_412;
        case 2:
          v194 = v1434;
          *v180 = *v1434;
          v195 = 2;
          goto LABEL_281;
        case 3:
          v196 = ~v1442;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1434, 1, v1388))
          {
            memcpy(v180, v1434, v1448);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1362 + 16))(v180, v1434, v1388);
            __swift_storeEnumTagSinglePayload((uint64_t)v180, 0, 1, v1388);
          }
          v291 = v1379;
          v292 = v1357;
          v293 = ((unint64_t)v180 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v294 = ((unint64_t)v1434 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v295 = *(_QWORD *)(v294 + 24);
          *(_QWORD *)(v293 + 24) = v295;
          *(_QWORD *)(v293 + 32) = *(_QWORD *)(v294 + 32);
          (**(void (***)(unint64_t, unint64_t))(v295 - 8))(v293, v294);
          v296 = (_QWORD *)((v293 + 47) & 0xFFFFFFFFFFFFFFF8);
          v297 = (_QWORD *)((v294 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v296 = *v297;
          v296[1] = v297[1];
          v298 = (void *)(((unint64_t)v296 + v1417) & v1372);
          v299 = (_BYTE *)(((unint64_t)v297 + v1417) & v1372);
          sub_21D7C4C20();
          if (v1425)
          {
            v300 = v1352;
            if (v1352 >= v1357)
            {
              v301 = (uint64_t)v299;
              v302 = v1355;
            }
            else
            {
              v301 = (unint64_t)&v299[v1356] & v1370;
              v300 = v1357;
              v302 = v1360;
            }
            v691 = __swift_getEnumTagSinglePayload(v301, v300, v302);
          }
          else
          {
            if (!v299[v1379])
              goto LABEL_892;
            v640 = (v299[v1379] - 1) << v1300;
            if (v1379 > 3)
              v640 = 0;
            if ((_DWORD)v1379)
            {
              if (v1379 <= 3)
                v641 = v1379;
              else
                v641 = 4;
              __asm { BR              X11 }
            }
            v691 = v640 + 1;
          }
          if (v691)
          {
            memcpy(v298, v299, v1424);
            goto LABEL_894;
          }
LABEL_892:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1349 + 16))(v298, v299, v1355);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1350 + 16))(((unint64_t)v298 + v1356) & v1370, (unint64_t)&v299[v1356] & v1370, v1360);
          if (!v1425)
            *((_BYTE *)v298 + v1379) = 0;
LABEL_894:
          *((_BYTE *)v298 + v1424) = v299[v1424];
          v922 = ((unint64_t)v298 + v1424 + v1377 + 1) & v185;
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v1319 + 16))(v922, (unint64_t)&v299[v1424 + 1 + v1377] & v185, v1320);
          v923 = (v1316 + v922) & 0xFFFFFFFFFFFFFFF8;
          v924 = (v1316 + ((unint64_t)&v299[v1424 + 1 + v1377] & v185)) & 0xFFFFFFFFFFFFFFF8;
          v925 = *(_QWORD *)(v924 + 24);
          if (v925 < 0xFFFFFFFF)
          {
            v926 = *(_OWORD *)v924;
            v927 = *(_OWORD *)(v924 + 16);
            *(_QWORD *)(v923 + 32) = *(_QWORD *)(v924 + 32);
            *(_OWORD *)v923 = v926;
            *(_OWORD *)(v923 + 16) = v927;
          }
          else
          {
            *(_QWORD *)(v923 + 24) = v925;
            *(_QWORD *)(v923 + 32) = *(_QWORD *)(v924 + 32);
            (**(void (***)(unint64_t, unint64_t))(v925 - 8))(v923, v924);
          }
          v202 = v90;
          v928 = (_QWORD *)((v1441 + v923) & v1302);
          v929 = (_QWORD *)((v1441 + v924) & v1302);
          if (v1354 >= 0x7FFFFFFF)
          {
            v934 = (const void *)(((unint64_t)v929 + v1359) & v1368);
            if (__swift_getEnumTagSinglePayload((uint64_t)v934, v1346, v1358) <= 1)
            {
              v1386 = v180;
              v931 = (char *)(v929 + 1);
              v932 = v1359;
              v933 = ~v1428;
              goto LABEL_904;
            }
          }
          else
          {
            v930 = *(_QWORD *)(((v1441 + v924) & v1302) + 0x10);
            if (v930 >= 0xFFFFFFFF)
              LODWORD(v930) = -1;
            if ((int)v930 - 1 < 0)
            {
              v1386 = v180;
              v931 = (char *)(v929 + 1);
              v932 = v1359;
              v933 = ~v1428;
              v934 = (const void *)(((unint64_t)v929 + v1359) & v1368);
LABEL_904:
              *(_BYTE *)v928 = *(_BYTE *)v929;
              v928[1] = v929[1];
              v928[2] = *((_QWORD *)v931 + 1);
              v928[3] = *((_QWORD *)v931 + 2);
              v928[4] = *((_QWORD *)v931 + 3);
              v928[5] = *((_QWORD *)v931 + 4);
              v928[6] = *((_QWORD *)v931 + 5);
              v928[7] = *((_QWORD *)v931 + 6);
              v928[8] = *((_QWORD *)v931 + 7);
              v928[9] = *((_QWORD *)v931 + 8);
              v928[10] = *((_QWORD *)v931 + 9);
              v928[11] = *((_QWORD *)v931 + 10);
              v928[12] = *((_QWORD *)v931 + 11);
              v935 = *((_QWORD *)v931 + 12);
              *((_BYTE *)v928 + 112) = v931[104];
              v928[13] = v935;
              v936 = (void *)(((unint64_t)v928 + v932) & v933);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              if (__swift_getEnumTagSinglePayload((uint64_t)v934, 1, v1358))
              {
                memcpy(v936, v934, v1419);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v936, v934, v1358);
                __swift_storeEnumTagSinglePayload((uint64_t)v936, 0, 1, v1358);
              }
              v202 = v90;
              v180 = v1386;
              v179 = v1403;
              v937 = v1422;
              v291 = v1379;
              v292 = v1357;
LABEL_909:
              v938 = (void *)(((unint64_t)v928 + v1437 + v937) & v1372);
              v939 = (_BYTE *)(((unint64_t)v929 + v1437 + v937) & v1372);
              if (v1425)
              {
                v940 = v1352;
                if (v1352 >= v292)
                {
                  v941 = (uint64_t)v939;
                  v942 = v1355;
                }
                else
                {
                  v941 = (unint64_t)&v939[v1356] & v1370;
                  v940 = v292;
                  v942 = v1360;
                }
                v945 = __swift_getEnumTagSinglePayload(v941, v940, v942);
              }
              else
              {
                if (!v939[v291])
                  goto LABEL_961;
                v943 = (v939[v291] - 1) << v1300;
                if (v291 > 3)
                  v943 = 0;
                if ((_DWORD)v291)
                {
                  if (v291 <= 3)
                    v944 = v291;
                  else
                    v944 = 4;
                  __asm { BR              X11 }
                }
                v945 = v943 + 1;
              }
              if (v945)
              {
                memcpy(v938, v939, v1424);
LABEL_963:
                v964 = (_QWORD *)(((unint64_t)v938 + v1418) & v196);
                v965 = (uint64_t *)((unint64_t)&v939[v1418] & v196);
                v966 = v1421;
                if ((v292 & 0x80000000) != 0)
                {
                  v968 = __swift_getEnumTagSinglePayload(((unint64_t)v965 + v1342) & v1370, v292, v1360);
                  v966 = v1421;
                }
                else
                {
                  v967 = *v965;
                  if ((unint64_t)*v965 >= 0xFFFFFFFF)
                    LODWORD(v967) = -1;
                  v968 = v967 + 1;
                }
                v194 = v1434;
                if (v968)
                {
                  memcpy(v964, v965, v966);
                }
                else
                {
                  *v964 = *v965;
                  v969 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1350 + 16);
                  sub_21D7C4C20();
                  v969(((unint64_t)v964 + v1342) & v1370, ((unint64_t)v965 + v1342) & v1370, v1360);
                }
                v517 = 3;
                goto LABEL_1315;
              }
LABEL_961:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1349 + 16))(v938, v939, v1355);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1350 + 16))(((unint64_t)v938 + v1356) & v1370, (unint64_t)&v939[v1356] & v1370, v1360);
              if (!v1425)
                *((_BYTE *)v938 + v291) = 0;
              goto LABEL_963;
            }
          }
          v937 = v1422;
          memcpy(v928, v929, v1422);
          goto LABEL_909;
        case 4:
          if (__swift_getEnumTagSinglePayload((uint64_t)v1434, 1, v1388))
          {
            memcpy(v180, v1434, v1448);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1362 + 16))(v180, v1434, v1388);
            __swift_storeEnumTagSinglePayload((uint64_t)v180, 0, 1, v1388);
          }
          v303 = ((unint64_t)v180 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v304 = ((unint64_t)v1434 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v305 = *(_QWORD *)(v304 + 24);
          *(_QWORD *)(v303 + 24) = v305;
          *(_QWORD *)(v303 + 32) = *(_QWORD *)(v304 + 32);
          (**(void (***)(unint64_t, unint64_t))(v305 - 8))(v303, v304);
          v306 = (_QWORD *)((v303 + 47) & 0xFFFFFFFFFFFFFFF8);
          v307 = (_QWORD *)((v304 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v306 = *v307;
          v306[1] = v307[1];
          v308 = (_QWORD *)(((unint64_t)v306 + 23) & 0xFFFFFFFFFFFFFFF8);
          v309 = (_QWORD *)(((unint64_t)v307 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v308 = *v309;
          v308[1] = v309[1];
          v310 = ((unint64_t)v308 + 23) & 0xFFFFFFFFFFFFFFF8;
          v311 = ((unint64_t)v309 + 23) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v310 = *(_QWORD *)v311;
          *(_QWORD *)(v310 + 8) = *(_QWORD *)(v311 + 8);
          *(_BYTE *)(v310 + 16) = *(_BYTE *)(v311 + 16);
          v312 = ((unint64_t)v308 + 47) & 0xFFFFFFFFFFFFFFF8;
          v313 = ((unint64_t)v309 + 47) & 0xFFFFFFFFFFFFFFF8;
          v314 = *(_QWORD *)(v313 + 24);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v314 < 0xFFFFFFFF)
          {
            v315 = *(_OWORD *)v313;
            v316 = *(_OWORD *)(v313 + 16);
            *(_QWORD *)(v312 + 32) = *(_QWORD *)(v313 + 32);
            *(_OWORD *)v312 = v315;
            *(_OWORD *)(v312 + 16) = v316;
          }
          else
          {
            *(_QWORD *)(v312 + 24) = v314;
            *(_QWORD *)(v312 + 32) = *(_QWORD *)(v313 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v314 - 8))(v312, v313, v314);
          }
          v202 = v90;
          v317 = v1379;
          v318 = v1357;
          *(_BYTE *)(v312 + 40) = *(_BYTE *)(v313 + 40);
          v319 = (_QWORD *)((v1322 + v312) & v1302);
          v320 = (_QWORD *)((v1322 + v313) & v1302);
          v179 = v1403;
          if (v1354 >= 0x7FFFFFFF)
          {
            v326 = (const void *)(((unint64_t)v320 + v1359) & v1368);
            if (__swift_getEnumTagSinglePayload((uint64_t)v326, v1346, v1358) <= 1)
            {
              v322 = v180;
              v323 = (char *)(v320 + 1);
              v324 = v1359;
              v325 = ~v1428;
              goto LABEL_313;
            }
          }
          else
          {
            v321 = *(_QWORD *)(((v1322 + v313) & v1302) + 0x10);
            if (v321 >= 0xFFFFFFFF)
              LODWORD(v321) = -1;
            if ((int)v321 - 1 < 0)
            {
              v322 = v180;
              v323 = (char *)(v320 + 1);
              v324 = v1359;
              v325 = ~v1428;
              v326 = (const void *)(((unint64_t)v320 + v1359) & v1368);
LABEL_313:
              *(_BYTE *)v319 = *(_BYTE *)v320;
              v319[1] = v320[1];
              v319[2] = *((_QWORD *)v323 + 1);
              v319[3] = *((_QWORD *)v323 + 2);
              v319[4] = *((_QWORD *)v323 + 3);
              v319[5] = *((_QWORD *)v323 + 4);
              v319[6] = *((_QWORD *)v323 + 5);
              v319[7] = *((_QWORD *)v323 + 6);
              v319[8] = *((_QWORD *)v323 + 7);
              v319[9] = *((_QWORD *)v323 + 8);
              v319[10] = *((_QWORD *)v323 + 9);
              v319[11] = *((_QWORD *)v323 + 10);
              v319[12] = *((_QWORD *)v323 + 11);
              v327 = *((_QWORD *)v323 + 12);
              *((_BYTE *)v319 + 112) = v323[104];
              v319[13] = v327;
              v328 = (void *)(((unint64_t)v319 + v324) & v325);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              if (__swift_getEnumTagSinglePayload((uint64_t)v326, 1, v1358))
              {
                memcpy(v328, v326, v1419);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v328, v326, v1358);
                __swift_storeEnumTagSinglePayload((uint64_t)v328, 0, 1, v1358);
              }
              v202 = v1401;
              v180 = v322;
              v179 = v1403;
              v329 = v1422;
              v317 = v1379;
              v318 = v1357;
LABEL_628:
              v749 = (void *)(((unint64_t)v319 + v1437 + v329) & v1372);
              v750 = (_BYTE *)(((unint64_t)v320 + v1437 + v329) & v1372);
              if (v1425)
              {
                v751 = v1352;
                if (v1352 >= v318)
                {
                  v752 = (uint64_t)v750;
                  v753 = v1355;
                }
                else
                {
                  v752 = (unint64_t)&v750[v1356] & v1370;
                  v751 = v318;
                  v753 = v1360;
                }
                v756 = __swift_getEnumTagSinglePayload(v752, v751, v753);
              }
              else
              {
                if (!v750[v317])
                  goto LABEL_953;
                v754 = (v750[v317] - 1) << v1300;
                if (v317 > 3)
                  v754 = 0;
                if ((_DWORD)v317)
                {
                  if (v317 <= 3)
                    v755 = v317;
                  else
                    v755 = 4;
                  __asm { BR              X11 }
                }
                v756 = v754 + 1;
              }
              if (v756)
              {
                memcpy(v749, v750, v1424);
LABEL_955:
                v957 = ((unint64_t)v749 + v1398) & 0xFFFFFFFFFFFFFFF8;
                v958 = (unint64_t)&v750[v1398] & 0xFFFFFFFFFFFFFFF8;
                v959 = *(_QWORD *)(v958 + 24);
                if (v959 < 0xFFFFFFFF)
                {
                  v960 = *(_OWORD *)v958;
                  v961 = *(_OWORD *)(v958 + 16);
                  *(_QWORD *)(v957 + 32) = *(_QWORD *)(v958 + 32);
                  *(_OWORD *)v957 = v960;
                  *(_OWORD *)(v957 + 16) = v961;
                }
                else
                {
                  *(_QWORD *)(v957 + 24) = v959;
                  *(_QWORD *)(v957 + 32) = *(_QWORD *)(v958 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v959 - 8))(v957, v958);
                }
                v194 = v1434;
                v962 = (_QWORD *)((v957 + 47) & 0xFFFFFFFFFFFFFFF8);
                v963 = (_QWORD *)((v958 + 47) & 0xFFFFFFFFFFFFFFF8);
                *v962 = *v963;
                v962[1] = v963[1];
                v470 = 4;
LABEL_1224:
                *((_BYTE *)v180 + v179) = v470;
LABEL_1225:
                sub_21D7C4C20();
                goto LABEL_1316;
              }
LABEL_953:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1349 + 16))(v749, v750, v1355);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1350 + 16))(((unint64_t)v749 + v1356) & v1370, (unint64_t)&v750[v1356] & v1370, v1360);
              if (!v1425)
                *((_BYTE *)v749 + v317) = 0;
              goto LABEL_955;
            }
          }
          v329 = v1422;
          memcpy(v319, v320, v1422);
          goto LABEL_628;
        case 5:
          if (__swift_getEnumTagSinglePayload((uint64_t)v1434, 1, v1388))
          {
            memcpy(v180, v1434, v1448);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1362 + 16))(v180, v1434, v1388);
            __swift_storeEnumTagSinglePayload((uint64_t)v180, 0, 1, v1388);
          }
          v330 = ((unint64_t)v180 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v331 = ((unint64_t)v1434 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v332 = *(_QWORD *)(v331 + 24);
          *(_QWORD *)(v330 + 24) = v332;
          *(_QWORD *)(v330 + 32) = *(_QWORD *)(v331 + 32);
          (**(void (***)(unint64_t, unint64_t))(v332 - 8))(v330, v331);
          v333 = (v1435 + 40 + v330) & v1298;
          v334 = v1435 + 40 + v331;
          v335 = ~v1435;
          v336 = (const void *)(v334 & v1298);
          v337 = v1379;
          v338 = v1357;
          v1445 = v334 & v1298;
          if (v1347 == v1337)
          {
            v339 = v1416;
            v202 = v90;
            v340 = (void *)v333;
            if (v1416 < 2)
              goto LABEL_678;
            v341 = v334 & v1298;
            v342 = v1388;
          }
          else
          {
            v343 = ((unint64_t)v336 + v1426) & 0xFFFFFFFFFFFFFFF8;
            v202 = v90;
            if (v1337 == 0x7FFFFFFF)
            {
              v340 = (void *)v333;
              if (*(_QWORD *)(v343 + 24) >= 0xFFFFFFFFuLL)
                goto LABEL_678;
              goto LABEL_680;
            }
            v698 = (v98
                  + ((((((v343 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                  + 65) & v1302;
            if (v1305 == v1337)
            {
              v340 = (void *)v333;
              if (v1354 > 0x7FFFFFFE)
              {
                v766 = __swift_getEnumTagSinglePayload((v1359 + v698) & v1368, v1346, v1358);
                if (v766 < 2)
                  goto LABEL_678;
                v701 = v766 - 1;
              }
              else
              {
                v699 = *(_QWORD *)(v698 + 16);
                if (v699 >= 0xFFFFFFFF)
                  LODWORD(v699) = -1;
                v700 = v699 - 1;
                if (v700 < 0)
                  v700 = -1;
                v701 = v700 + 1;
              }
              if (v701 < 2)
              {
LABEL_678:
                if (__swift_getEnumTagSinglePayload((uint64_t)v336, 1, v1388))
                {
                  memcpy(v340, v336, v1448);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v1362 + 16))(v340, v336, v1388);
                  __swift_storeEnumTagSinglePayload((uint64_t)v340, 0, 1, v1388);
                }
                v768 = ((unint64_t)v340 + v1426) & 0xFFFFFFFFFFFFFFF8;
                v769 = ((unint64_t)v336 + v1426) & 0xFFFFFFFFFFFFFFF8;
                v770 = *(_QWORD *)(v769 + 24);
                *(_QWORD *)(v768 + 24) = v770;
                *(_QWORD *)(v768 + 32) = *(_QWORD *)(v769 + 32);
                (**(void (***)(unint64_t, unint64_t))(v770 - 8))(v768, v769);
                v771 = (_QWORD *)((v768 + 47) & 0xFFFFFFFFFFFFFFF8);
                v772 = (_QWORD *)((v769 + 47) & 0xFFFFFFFFFFFFFFF8);
                *v771 = *v772;
                v771[1] = v772[1];
                v773 = (_QWORD *)(((unint64_t)v771 + 23) & 0xFFFFFFFFFFFFFFF8);
                v774 = (_QWORD *)(((unint64_t)v772 + 23) & 0xFFFFFFFFFFFFFFF8);
                *v773 = *v774;
                v773[1] = v774[1];
                v775 = ((unint64_t)v773 + 23) & 0xFFFFFFFFFFFFFFF8;
                v776 = ((unint64_t)v774 + 23) & 0xFFFFFFFFFFFFFFF8;
                *(_QWORD *)v775 = *(_QWORD *)v776;
                *(_QWORD *)(v775 + 8) = *(_QWORD *)(v776 + 8);
                *(_BYTE *)(v775 + 16) = *(_BYTE *)(v776 + 16);
                v777 = ((unint64_t)v773 + 47) & 0xFFFFFFFFFFFFFFF8;
                v778 = ((unint64_t)v774 + 47) & 0xFFFFFFFFFFFFFFF8;
                v779 = *(_QWORD *)(v778 + 24);
                sub_21D7C4C20();
                sub_21D7C4C20();
                sub_21D7C4C20();
                v767 = v1429;
                if (v779 < 0xFFFFFFFF)
                {
                  v780 = *(_OWORD *)v778;
                  v781 = *(_OWORD *)(v778 + 16);
                  *(_QWORD *)(v777 + 32) = *(_QWORD *)(v778 + 32);
                  *(_OWORD *)v777 = v780;
                  *(_OWORD *)(v777 + 16) = v781;
                }
                else
                {
                  *(_QWORD *)(v777 + 24) = v779;
                  *(_QWORD *)(v777 + 32) = *(_QWORD *)(v778 + 32);
                  (**(void (***)(unint64_t, unint64_t, unint64_t))(v779 - 8))(v777, v778, v779);
                }
                *(_BYTE *)(v777 + 40) = *(_BYTE *)(v778 + 40);
                v782 = (_QWORD *)((v1322 + v777) & v1302);
                v783 = (_QWORD *)((v1322 + v778) & v1302);
                v338 = v1357;
                if (v1354 >= 0x7FFFFFFF)
                {
                  v789 = (const void *)(((unint64_t)v783 + v1359) & v1368);
                  v785 = v1422;
                  v337 = v1379;
                  if (__swift_getEnumTagSinglePayload((uint64_t)v789, v1346, v1358) <= 1)
                  {
                    v1384 = v180;
                    v786 = (char *)(v783 + 1);
                    v787 = v1359;
                    v788 = ~v1428;
                    goto LABEL_692;
                  }
                }
                else
                {
                  v784 = *(_QWORD *)(((v1322 + v778) & v1302) + 0x10);
                  if (v784 >= 0xFFFFFFFF)
                    LODWORD(v784) = -1;
                  v785 = v1422;
                  v337 = v1379;
                  if ((int)v784 - 1 < 0)
                  {
                    v1384 = v180;
                    v786 = (char *)(v783 + 1);
                    v787 = v1359;
                    v788 = ~v1428;
                    v789 = (const void *)(((unint64_t)v783 + v1359) & v1368);
LABEL_692:
                    *(_BYTE *)v782 = *(_BYTE *)v783;
                    v782[1] = v783[1];
                    v782[2] = *((_QWORD *)v786 + 1);
                    v782[3] = *((_QWORD *)v786 + 2);
                    v782[4] = *((_QWORD *)v786 + 3);
                    v782[5] = *((_QWORD *)v786 + 4);
                    v782[6] = *((_QWORD *)v786 + 5);
                    v782[7] = *((_QWORD *)v786 + 6);
                    v782[8] = *((_QWORD *)v786 + 7);
                    v782[9] = *((_QWORD *)v786 + 8);
                    v782[10] = *((_QWORD *)v786 + 9);
                    v782[11] = *((_QWORD *)v786 + 10);
                    v782[12] = *((_QWORD *)v786 + 11);
                    v790 = *((_QWORD *)v786 + 12);
                    *((_BYTE *)v782 + 112) = v786[104];
                    v782[13] = v790;
                    v791 = (void *)(((unint64_t)v782 + v787) & v788);
                    sub_21D7C4C20();
                    sub_21D7C4C20();
                    sub_21D7C4C20();
                    sub_21D7C4C20();
                    sub_21D7C4C20();
                    sub_21D7C4C20();
                    if (__swift_getEnumTagSinglePayload((uint64_t)v789, 1, v1358))
                    {
                      memcpy(v791, v789, v1419);
                    }
                    else
                    {
                      (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v791, v789, v1358);
                      __swift_storeEnumTagSinglePayload((uint64_t)v791, 0, 1, v1358);
                    }
                    v180 = v1384;
                    v785 = v1422;
                    v337 = v1379;
                    v338 = v1357;
                    v767 = v1429;
                    v335 = ~v1435;
LABEL_697:
                    v792 = (void *)(((unint64_t)v782 + v1437 + v785) & v1372);
                    v793 = (_BYTE *)(((unint64_t)v783 + v1437 + v785) & v1372);
                    if (v1425)
                    {
                      v794 = v1352;
                      if (v1352 >= v338)
                      {
                        v795 = (uint64_t)v793;
                        v796 = v1355;
                      }
                      else
                      {
                        v795 = (unint64_t)&v793[v1356] & v1370;
                        v794 = v338;
                        v796 = v1360;
                      }
                      v799 = __swift_getEnumTagSinglePayload(v795, v794, v796);
                    }
                    else
                    {
                      if (!v793[v337])
                        goto LABEL_1265;
                      v797 = (v793[v337] - 1) << v1300;
                      if (v337 > 3)
                        v797 = 0;
                      if ((_DWORD)v337)
                      {
                        if (v337 <= 3)
                          v798 = v337;
                        else
                          v798 = 4;
                        __asm { BR              X11 }
                      }
                      v799 = v797 + 1;
                    }
                    if (v799)
                    {
                      memcpy(v792, v793, v1424);
LABEL_1267:
                      v1145 = ((unint64_t)v792 + v1398) & 0xFFFFFFFFFFFFFFF8;
                      v1146 = (unint64_t)&v793[v1398] & 0xFFFFFFFFFFFFFFF8;
                      v1147 = *(_QWORD *)(v1146 + 24);
                      if (v1147 < 0xFFFFFFFF)
                      {
                        v1148 = *(_OWORD *)v1146;
                        v1149 = *(_OWORD *)(v1146 + 16);
                        *(_QWORD *)(v1145 + 32) = *(_QWORD *)(v1146 + 32);
                        *(_OWORD *)v1145 = v1148;
                        *(_OWORD *)(v1145 + 16) = v1149;
                      }
                      else
                      {
                        *(_QWORD *)(v1145 + 24) = v1147;
                        *(_QWORD *)(v1145 + 32) = *(_QWORD *)(v1146 + 32);
                        (**(void (***)(unint64_t, unint64_t))(v1147 - 8))(v1145, v1146);
                      }
                      v1150 = (_QWORD *)((v1145 + 47) & 0xFFFFFFFFFFFFFFF8);
                      v1151 = (_QWORD *)((v1146 + 47) & 0xFFFFFFFFFFFFFFF8);
                      *v1150 = *v1151;
                      v1150[1] = v1151[1];
                      sub_21D7C4C20();
                      v202 = v1401;
                      v179 = v1403;
LABEL_1271:
                      v1152 = (_BYTE *)(((unint64_t)v340 + v1321) & v335);
                      v1153 = v335;
                      v1154 = (unsigned __int8 *)((v1321 + v1445) & v335);
                      v1155 = *v1154;
                      if (v1155 > 2)
                      {
                        memcpy(v1152, v1154, v767);
                        goto LABEL_1356;
                      }
                      *v1152 = v1155;
                      v1156 = (unint64_t)&v1152[v1361] & v1153;
                      v1157 = (unint64_t)&v1154[v1361] & v1153;
                      v1158 = *(unsigned __int8 *)(v1157 + v1363);
                      if (v1158 > 2)
                      {
                        memcpy((void *)((unint64_t)&v1152[v1361] & v1153), (const void *)((unint64_t)&v1154[v1361] & v1153), __n);
                        v179 = v1403;
                        goto LABEL_1356;
                      }
                      if (v1158 != 2)
                      {
                        if (v1158 == 1)
                        {
                          v1159 = *(_QWORD *)(((unint64_t)&v1154[v1361] & v1153) + 0x18);
                          *(_QWORD *)(((unint64_t)&v1152[v1361] & v1153) + 0x18) = v1159;
                          *(_QWORD *)(((unint64_t)&v1152[v1361] & v1153) + 0x20) = *(_QWORD *)(((unint64_t)&v1154[v1361] & v1153) + 0x20);
                          (**(void (***)(unint64_t, unint64_t))(v1159 - 8))(v1156, v1157);
                          v1160 = (void *)((v1423 + v1156) & v1301);
                          v1161 = (const void *)((v1423 + v1157) & v1301);
                          v1387 = v180;
                          if (__swift_getEnumTagSinglePayload((uint64_t)v1161, 1, v1388))
                          {
                            memcpy(v1160, v1161, v1448);
                          }
                          else
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v1362 + 16))(v1160, v1161, v1388);
                            __swift_storeEnumTagSinglePayload((uint64_t)v1160, 0, 1, v1388);
                          }
                          v1163 = (_QWORD *)(((unint64_t)v1160 + v1426) & 0xFFFFFFFFFFFFFFF8);
                          v1164 = (_QWORD *)(((unint64_t)v1161 + v1426) & 0xFFFFFFFFFFFFFFF8);
                          *v1163 = *v1164;
                          v1163[1] = v1164[1];
                          v1165 = ((unint64_t)v1163 + 23) & 0xFFFFFFFFFFFFFFF8;
                          v1166 = ((unint64_t)v1164 + 23) & 0xFFFFFFFFFFFFFFF8;
                          *(_QWORD *)v1165 = *(_QWORD *)v1166;
                          *(_BYTE *)(v1165 + 8) = *(_BYTE *)(v1166 + 8);
                          v1167 = ((unint64_t)v1163 + 39) & 0xFFFFFFFFFFFFFFF8;
                          v1168 = ((unint64_t)v1164 + 39) & 0xFFFFFFFFFFFFFFF8;
                          *(_QWORD *)v1167 = *(_QWORD *)v1168;
                          *(_BYTE *)(v1167 + 8) = *(_BYTE *)(v1168 + 8);
                          v1169 = ((unint64_t)v1163 + 55) & 0xFFFFFFFFFFFFFFF8;
                          v1170 = ((unint64_t)v1164 + 55) & 0xFFFFFFFFFFFFFFF8;
                          v1171 = *(_QWORD *)v1170;
                          *(_BYTE *)(v1169 + 8) = *(_BYTE *)(v1170 + 8);
                          *(_QWORD *)v1169 = v1171;
                          v1172 = (_QWORD *)(((unint64_t)v1163 + 71) & 0xFFFFFFFFFFFFFFF8);
                          v1173 = (_QWORD *)(((unint64_t)v1164 + 71) & 0xFFFFFFFFFFFFFFF8);
                          *v1172 = *v1173;
                          v1172[1] = v1173[1];
                          v1174 = ((unint64_t)v1172 + 23) & 0xFFFFFFFFFFFFFFF8;
                          v1175 = ((unint64_t)v1173 + 23) & 0xFFFFFFFFFFFFFFF8;
                          v1176 = *(_QWORD *)(v1175 + 24);
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          if (v1176 < 0xFFFFFFFF)
                          {
                            v1177 = *(_OWORD *)v1175;
                            v1178 = *(_OWORD *)(v1175 + 16);
                            *(_QWORD *)(v1174 + 32) = *(_QWORD *)(v1175 + 32);
                            *(_OWORD *)v1174 = v1177;
                            *(_OWORD *)(v1174 + 16) = v1178;
                          }
                          else
                          {
                            *(_QWORD *)(v1174 + 24) = v1176;
                            *(_QWORD *)(v1174 + 32) = *(_QWORD *)(v1175 + 32);
                            (**(void (***)(unint64_t, unint64_t, unint64_t))(v1176 - 8))(v1174, v1175, v1176);
                          }
                          v202 = v1401;
                          v338 = v1357;
                          v1179 = (_QWORD *)((v1441 + v1174) & v1302);
                          v1180 = (_QWORD *)((v1441 + v1175) & v1302);
                          v1181 = v1156;
                          if (v1354 >= 0x7FFFFFFF)
                          {
                            v1184 = (const void *)(((unint64_t)v1180 + v1359) & v1368);
                            v179 = v1403;
                            if (__swift_getEnumTagSinglePayload((uint64_t)v1184, v1346, v1358) <= 1)
                            {
                              v1183 = (char *)(v1180 + 1);
                              goto LABEL_1295;
                            }
                          }
                          else
                          {
                            v1182 = v1180[2];
                            if (v1182 >= 0xFFFFFFFF)
                              LODWORD(v1182) = -1;
                            v179 = v1403;
                            if ((int)v1182 - 1 < 0)
                            {
                              v1183 = (char *)(v1180 + 1);
                              v1184 = (const void *)(((unint64_t)v1180 + v1359) & v1368);
LABEL_1295:
                              *(_BYTE *)v1179 = *(_BYTE *)v1180;
                              v1179[1] = v1180[1];
                              v1179[2] = *((_QWORD *)v1183 + 1);
                              v1179[3] = *((_QWORD *)v1183 + 2);
                              v1179[4] = *((_QWORD *)v1183 + 3);
                              v1179[5] = *((_QWORD *)v1183 + 4);
                              v1179[6] = *((_QWORD *)v1183 + 5);
                              v1179[7] = *((_QWORD *)v1183 + 6);
                              v1179[8] = *((_QWORD *)v1183 + 7);
                              v1179[9] = *((_QWORD *)v1183 + 8);
                              v1179[10] = *((_QWORD *)v1183 + 9);
                              v1179[11] = *((_QWORD *)v1183 + 10);
                              v1179[12] = *((_QWORD *)v1183 + 11);
                              v1185 = *((_QWORD *)v1183 + 12);
                              *((_BYTE *)v1179 + 112) = v1183[104];
                              v1179[13] = v1185;
                              v1186 = (void *)(((unint64_t)v1179 + v1359) & v1368);
                              sub_21D7C4C20();
                              sub_21D7C4C20();
                              sub_21D7C4C20();
                              sub_21D7C4C20();
                              sub_21D7C4C20();
                              sub_21D7C4C20();
                              if (__swift_getEnumTagSinglePayload((uint64_t)v1184, 1, v1358))
                              {
                                memcpy(v1186, v1184, v1419);
                              }
                              else
                              {
                                (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v1186, v1184, v1358);
                                __swift_storeEnumTagSinglePayload((uint64_t)v1186, 0, 1, v1358);
                              }
                              v202 = v1401;
                              v180 = v1387;
                              v179 = v1403;
                              v338 = v1357;
                              v1181 = v1156;
                              goto LABEL_1347;
                            }
                          }
                          memcpy(v1179, v1180, v1422);
                          v180 = v1387;
LABEL_1347:
                          *(_BYTE *)(v1181 + v1363) = 1;
LABEL_1355:
                          v337 = v1379;
LABEL_1356:
                          v1222 = (_QWORD *)((unint64_t)&v1152[v1306] & 0xFFFFFFFFFFFFFFF8);
                          v1223 = (_QWORD *)((unint64_t)&v1154[v1306] & 0xFFFFFFFFFFFFFFF8);
                          *v1222 = *v1223;
                          v1224 = (_BYTE *)(((unint64_t)v1222 + v1307) & v1298);
                          v1225 = (unsigned __int8 *)(((unint64_t)v1223 + v1307) & v1298);
                          v1226 = *v1225;
                          sub_21D7C4C20();
                          if (v1226 > 2)
                          {
                            v1233 = v1224;
                            v1234 = v1225;
                            v1235 = v1429;
                          }
                          else
                          {
                            *v1224 = v1226;
                            v1227 = (_QWORD *)((unint64_t)&v1224[v1361] & v1298);
                            v1228 = (_QWORD *)((unint64_t)&v1225[v1361] & v1298);
                            v1229 = *((unsigned __int8 *)v1228 + v1363);
                            if (v1229 <= 2)
                            {
                              if (v1229 != 2)
                              {
                                if (v1229 != 1)
                                {
                                  v194 = v1434;
                                  *v1227 = *v1228;
                                  v1227[1] = *(_QWORD *)(((unint64_t)&v1225[v1361] & v1298) + 8);
                                  v1227[2] = *(_QWORD *)(((unint64_t)&v1225[v1361] & v1298) + 0x10);
                                  v1227[3] = *(_QWORD *)(((unint64_t)&v1225[v1361] & v1298) + 0x18);
                                  v1227[4] = *(_QWORD *)(((unint64_t)&v1225[v1361] & v1298) + 0x20);
                                  v1227[5] = *(_QWORD *)(((unint64_t)&v1225[v1361] & v1298) + 0x28);
                                  *((_BYTE *)v1227 + v1363) = 0;
                                  sub_21D7C4C20();
                                  sub_21D7C4C20();
                                  sub_21D7C4C20();
LABEL_1411:
                                  v92 = a1;
                                  v417 = v1392;
LABEL_1366:
                                  v569 = 5;
LABEL_1367:
                                  *((_BYTE *)v180 + v179) = v569;
                                  goto LABEL_1318;
                                }
                                v1230 = *(_QWORD *)(((unint64_t)&v1225[v1361] & v1298) + 0x18);
                                v1227[3] = v1230;
                                v1227[4] = *(_QWORD *)(((unint64_t)&v1225[v1361] & v1298) + 0x20);
                                (**(void (***)(_QWORD *, _QWORD *))(v1230 - 8))(v1227, v1228);
                                v1231 = (void *)(((unint64_t)v1227 + v1423) & v1301);
                                v1232 = (const void *)(((unint64_t)v1228 + v1423) & v1301);
                                if (__swift_getEnumTagSinglePayload((uint64_t)v1232, 1, v1388))
                                {
                                  memcpy(v1231, v1232, v1448);
                                }
                                else
                                {
                                  (*(void (**)(void *, const void *, uint64_t))(v1362 + 16))(v1231, v1232, v1388);
                                  __swift_storeEnumTagSinglePayload((uint64_t)v1231, 0, 1, v1388);
                                }
                                v1237 = (_QWORD *)(((unint64_t)v1231 + v1426) & 0xFFFFFFFFFFFFFFF8);
                                v1238 = (_QWORD *)(((unint64_t)v1232 + v1426) & 0xFFFFFFFFFFFFFFF8);
                                *v1237 = *v1238;
                                v1237[1] = v1238[1];
                                v1239 = ((unint64_t)v1237 + 23) & 0xFFFFFFFFFFFFFFF8;
                                v1240 = ((unint64_t)v1238 + 23) & 0xFFFFFFFFFFFFFFF8;
                                *(_QWORD *)v1239 = *(_QWORD *)v1240;
                                *(_BYTE *)(v1239 + 8) = *(_BYTE *)(v1240 + 8);
                                v1241 = ((unint64_t)v1237 + 39) & 0xFFFFFFFFFFFFFFF8;
                                v1242 = ((unint64_t)v1238 + 39) & 0xFFFFFFFFFFFFFFF8;
                                *(_QWORD *)v1241 = *(_QWORD *)v1242;
                                *(_BYTE *)(v1241 + 8) = *(_BYTE *)(v1242 + 8);
                                v1243 = ((unint64_t)v1237 + 55) & 0xFFFFFFFFFFFFFFF8;
                                v1244 = ((unint64_t)v1238 + 55) & 0xFFFFFFFFFFFFFFF8;
                                v1245 = *(_QWORD *)v1244;
                                *(_BYTE *)(v1243 + 8) = *(_BYTE *)(v1244 + 8);
                                *(_QWORD *)v1243 = v1245;
                                v1246 = (_QWORD *)(((unint64_t)v1237 + 71) & 0xFFFFFFFFFFFFFFF8);
                                v1247 = (_QWORD *)(((unint64_t)v1238 + 71) & 0xFFFFFFFFFFFFFFF8);
                                *v1246 = *v1247;
                                v1246[1] = v1247[1];
                                v1248 = ((unint64_t)v1246 + 23) & 0xFFFFFFFFFFFFFFF8;
                                v1249 = ((unint64_t)v1247 + 23) & 0xFFFFFFFFFFFFFFF8;
                                v1250 = *(_QWORD *)(v1249 + 24);
                                sub_21D7C4C20();
                                sub_21D7C4C20();
                                sub_21D7C4C20();
                                sub_21D7C4C20();
                                if (v1250 < 0xFFFFFFFF)
                                {
                                  v1251 = *(_OWORD *)v1249;
                                  v1252 = *(_OWORD *)(v1249 + 16);
                                  *(_QWORD *)(v1248 + 32) = *(_QWORD *)(v1249 + 32);
                                  *(_OWORD *)v1248 = v1251;
                                  *(_OWORD *)(v1248 + 16) = v1252;
                                }
                                else
                                {
                                  *(_QWORD *)(v1248 + 24) = v1250;
                                  *(_QWORD *)(v1248 + 32) = *(_QWORD *)(v1249 + 32);
                                  (**(void (***)(unint64_t, unint64_t, unint64_t))(v1250 - 8))(v1248, v1249, v1250);
                                }
                                v179 = v1403;
                                v1253 = (_QWORD *)((v1441 + v1248) & v1302);
                                v1254 = (_QWORD *)((v1441 + v1249) & v1302);
                                v194 = v1434;
                                if (v1354 >= 0x7FFFFFFF)
                                {
                                  v1258 = (const void *)(((unint64_t)v1254 + v1359) & v1368);
                                  if (__swift_getEnumTagSinglePayload((uint64_t)v1258, v1346, v1358) <= 1)
                                  {
                                    v1256 = v180;
                                    v1257 = (char *)(v1254 + 1);
                                    goto LABEL_1384;
                                  }
                                }
                                else
                                {
                                  v1255 = v1254[2];
                                  if (v1255 >= 0xFFFFFFFF)
                                    LODWORD(v1255) = -1;
                                  if ((int)v1255 - 1 < 0)
                                  {
                                    v1256 = v180;
                                    v1257 = (char *)(v1254 + 1);
                                    v1258 = (const void *)(((unint64_t)v1254 + v1359) & v1368);
LABEL_1384:
                                    *(_BYTE *)v1253 = *(_BYTE *)v1254;
                                    v1253[1] = v1254[1];
                                    v1253[2] = *((_QWORD *)v1257 + 1);
                                    v1253[3] = *((_QWORD *)v1257 + 2);
                                    v1253[4] = *((_QWORD *)v1257 + 3);
                                    v1253[5] = *((_QWORD *)v1257 + 4);
                                    v1253[6] = *((_QWORD *)v1257 + 5);
                                    v1253[7] = *((_QWORD *)v1257 + 6);
                                    v1253[8] = *((_QWORD *)v1257 + 7);
                                    v1253[9] = *((_QWORD *)v1257 + 8);
                                    v1253[10] = *((_QWORD *)v1257 + 9);
                                    v1253[11] = *((_QWORD *)v1257 + 10);
                                    v1253[12] = *((_QWORD *)v1257 + 11);
                                    v1259 = *((_QWORD *)v1257 + 12);
                                    *((_BYTE *)v1253 + 112) = v1257[104];
                                    v1253[13] = v1259;
                                    v1260 = (void *)(((unint64_t)v1253 + v1359) & v1368);
                                    sub_21D7C4C20();
                                    sub_21D7C4C20();
                                    sub_21D7C4C20();
                                    sub_21D7C4C20();
                                    sub_21D7C4C20();
                                    sub_21D7C4C20();
                                    if (__swift_getEnumTagSinglePayload((uint64_t)v1258, 1, v1358))
                                    {
                                      memcpy(v1260, v1258, v1419);
                                    }
                                    else
                                    {
                                      (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v1260, v1258, v1358);
                                      __swift_storeEnumTagSinglePayload((uint64_t)v1260, 0, 1, v1358);
                                    }
                                    v202 = v1401;
                                    v180 = v1256;
                                    v194 = v1434;
                                    v179 = v1403;
                                    goto LABEL_1410;
                                  }
                                }
                                memcpy(v1253, v1254, v1422);
                                v202 = v1401;
LABEL_1410:
                                *((_BYTE *)v1227 + v1363) = 1;
                                goto LABEL_1411;
                              }
                              if (*(_QWORD *)(((unint64_t)&v1225[v1361] & v1298) + 8) < 0xFFFFFFFFuLL)
                              {
                                memcpy(v1227, (const void *)((unint64_t)&v1225[v1361] & v1298), 0x48uLL);
                              }
                              else
                              {
                                *v1227 = *v1228;
                                v1227[1] = *(_QWORD *)(((unint64_t)&v1225[v1361] & v1298) + 8);
                                v1227[2] = *(_QWORD *)(((unint64_t)&v1225[v1361] & v1298) + 0x10);
                                v1227[3] = *(_QWORD *)(((unint64_t)&v1225[v1361] & v1298) + 0x18);
                                v1236 = *(_QWORD *)(((unint64_t)&v1225[v1361] & v1298) + 0x38);
                                sub_21D7C4C20();
                                sub_21D7C4C20();
                                if (v1236)
                                {
                                  v1227[7] = v1236;
                                  v1227[8] = *(_QWORD *)(((unint64_t)&v1225[v1361] & v1298) + 0x40);
                                  (**(void (***)(uint64_t, uint64_t, uint64_t))(v1236 - 8))((uint64_t)(v1227 + 4), (uint64_t)(v1228 + 4), v1236);
                                }
                                else
                                {
                                  v1261 = *(_OWORD *)(((unint64_t)&v1225[v1361] & v1298) + 0x20);
                                  v1262 = *(_OWORD *)(((unint64_t)&v1225[v1361] & v1298) + 0x30);
                                  v1227[8] = *(_QWORD *)(((unint64_t)&v1225[v1361] & v1298) + 0x40);
                                  *((_OWORD *)v1227 + 2) = v1261;
                                  *((_OWORD *)v1227 + 3) = v1262;
                                }
                                v179 = v1403;
                                v337 = v1379;
                              }
                              v1263 = ((unint64_t)v1227 + 79) & 0xFFFFFFFFFFFFFFF8;
                              v1264 = (_QWORD *)(((unint64_t)v1228 + 79) & 0xFFFFFFFFFFFFFFF8);
                              if (v1264[1] < 0xFFFFFFFFuLL)
                              {
                                memcpy((void *)(((unint64_t)v1227 + 79) & 0xFFFFFFFFFFFFFFF8), v1264, 0x48uLL);
                              }
                              else
                              {
                                *(_QWORD *)v1263 = *v1264;
                                *(_QWORD *)(v1263 + 8) = v1264[1];
                                *(_QWORD *)(v1263 + 16) = v1264[2];
                                *(_QWORD *)(v1263 + 24) = v1264[3];
                                v1265 = v1264[7];
                                sub_21D7C4C20();
                                sub_21D7C4C20();
                                if (v1265)
                                {
                                  *(_QWORD *)(v1263 + 56) = v1265;
                                  *(_QWORD *)(v1263 + 64) = v1264[8];
                                  (**(void (***)(uint64_t, uint64_t, uint64_t))(v1265 - 8))(v1263 + 32, (uint64_t)(v1264 + 4), v1265);
                                }
                                else
                                {
                                  v1266 = *((_OWORD *)v1264 + 2);
                                  v1267 = *((_OWORD *)v1264 + 3);
                                  *(_QWORD *)(v1263 + 64) = v1264[8];
                                  *(_OWORD *)(v1263 + 32) = v1266;
                                  *(_OWORD *)(v1263 + 48) = v1267;
                                }
                                v179 = v1403;
                                v337 = v1379;
                                v338 = v1357;
                              }
                              v1268 = (_QWORD *)((v1263 + 79) & 0xFFFFFFFFFFFFF8);
                              v1269 = (_QWORD *)(((unint64_t)v1264 + 79) & 0xFFFFFFFFFFFFFFF8);
                              *v1268 = *v1269;
                              v1270 = (_QWORD *)(((unint64_t)v1268 + 15) & 0xFFFFFFFFFFFFFFF8);
                              v1271 = (_QWORD *)(((unint64_t)v1269 + 15) & 0xFFFFFFFFFFFFFFF8);
                              *v1270 = *v1271;
                              v1272 = (void *)(((unint64_t)v1270 + v1396) & v1372);
                              v1273 = (_BYTE *)(((unint64_t)v1271 + v1396) & v1372);
                              sub_21D7C4C20();
                              sub_21D7C4C20();
                              if (v1425)
                              {
                                v1274 = v1352;
                                v202 = v1401;
                                if (v1352 >= v338)
                                {
                                  v1275 = (uint64_t)v1273;
                                  v1276 = v1355;
                                }
                                else
                                {
                                  v1275 = (unint64_t)&v1273[v1356] & v1370;
                                  v1274 = v338;
                                  v1276 = v1360;
                                }
                                v1279 = __swift_getEnumTagSinglePayload(v1275, v1274, v1276);
                              }
                              else
                              {
                                v202 = v1401;
                                if (!v1273[v337])
                                  goto LABEL_1415;
                                v1277 = (v1273[v337] - 1) << v1300;
                                if (v337 > 3)
                                  v1277 = 0;
                                if ((_DWORD)v337)
                                {
                                  if (v1379 <= 3)
                                    v1278 = v1379;
                                  else
                                    v1278 = 4;
                                  __asm { BR              X11 }
                                }
                                v1279 = v1277 + 1;
                                v202 = v1401;
                                v179 = v1403;
                                v337 = v1379;
                              }
                              if (v1279)
                              {
                                memcpy(v1272, v1273, v1424);
LABEL_1417:
                                *((_BYTE *)v1272 + v1424) = v1273[v1424];
                                *((_BYTE *)v1227 + v1363) = 2;
                                goto LABEL_1365;
                              }
LABEL_1415:
                              (*(void (**)(void *, _BYTE *, uint64_t))(v1349 + 16))(v1272, v1273, v1355);
                              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1350 + 16))(((unint64_t)v1272 + v1356) & v1370, (unint64_t)&v1273[v1356] & v1370, v1360);
                              if (!v1425)
                                *((_BYTE *)v1272 + v337) = 0;
                              goto LABEL_1417;
                            }
                            v1233 = v1227;
                            v1234 = (const void *)((unint64_t)&v1225[v1361] & v1298);
                            v1235 = __n;
                          }
                          memcpy(v1233, v1234, v1235);
LABEL_1365:
                          v92 = a1;
                          v417 = v1392;
                          v194 = v1434;
                          goto LABEL_1366;
                        }
                        *(_QWORD *)v1156 = *(_QWORD *)v1157;
                        *(_QWORD *)(((unint64_t)&v1152[v1361] & v1153) + 8) = *(_QWORD *)(((unint64_t)&v1154[v1361] & v1153)
                                                                                               + 8);
                        *(_QWORD *)(((unint64_t)&v1152[v1361] & v1153) + 0x10) = *(_QWORD *)(((unint64_t)&v1154[v1361] & v1153)
                                                                                                  + 0x10);
                        *(_QWORD *)(((unint64_t)&v1152[v1361] & v1153) + 0x18) = *(_QWORD *)(((unint64_t)&v1154[v1361] & v1153)
                                                                                                  + 0x18);
                        *(_QWORD *)(((unint64_t)&v1152[v1361] & v1153) + 0x20) = *(_QWORD *)(((unint64_t)&v1154[v1361] & v1153)
                                                                                                  + 0x20);
                        *(_QWORD *)(((unint64_t)&v1152[v1361] & v1153) + 0x28) = *(_QWORD *)(((unint64_t)&v1154[v1361] & v1153)
                                                                                                  + 0x28);
                        *(_BYTE *)(v1156 + v1363) = 0;
                        sub_21D7C4C20();
                        sub_21D7C4C20();
                        sub_21D7C4C20();
LABEL_1354:
                        v179 = v1403;
                        goto LABEL_1355;
                      }
                      if (*(_QWORD *)(((unint64_t)&v1154[v1361] & v1153) + 8) < 0xFFFFFFFFuLL)
                      {
                        memcpy((void *)((unint64_t)&v1152[v1361] & v1153), (const void *)((unint64_t)&v1154[v1361] & v1153), 0x48uLL);
                      }
                      else
                      {
                        *(_QWORD *)v1156 = *(_QWORD *)v1157;
                        *(_QWORD *)(((unint64_t)&v1152[v1361] & v1153) + 8) = *(_QWORD *)(((unint64_t)&v1154[v1361] & v1153)
                                                                                               + 8);
                        *(_QWORD *)(((unint64_t)&v1152[v1361] & v1153) + 0x10) = *(_QWORD *)(((unint64_t)&v1154[v1361] & v1153)
                                                                                                  + 0x10);
                        *(_QWORD *)(((unint64_t)&v1152[v1361] & v1153) + 0x18) = *(_QWORD *)(((unint64_t)&v1154[v1361] & v1153)
                                                                                                  + 0x18);
                        v1162 = *(_QWORD *)(((unint64_t)&v1154[v1361] & v1153) + 0x38);
                        sub_21D7C4C20();
                        sub_21D7C4C20();
                        if (v1162)
                        {
                          *(_QWORD *)(v1156 + 56) = v1162;
                          *(_QWORD *)(v1156 + 64) = *(_QWORD *)(v1157 + 64);
                          (**(void (***)(uint64_t, uint64_t, uint64_t))(v1162 - 8))(v1156 + 32, v1157 + 32, v1162);
                        }
                        else
                        {
                          v1203 = *(_OWORD *)(v1157 + 32);
                          v1204 = *(_OWORD *)(v1157 + 48);
                          *(_QWORD *)(v1156 + 64) = *(_QWORD *)(v1157 + 64);
                          *(_OWORD *)(v1156 + 32) = v1203;
                          *(_OWORD *)(v1156 + 48) = v1204;
                        }
                        v338 = v1357;
                      }
                      v1205 = (v1156 + 79) & 0xFFFFFFFFFFFFFFF8;
                      v1206 = (_QWORD *)((v1157 + 79) & 0xFFFFFFFFFFFFFFF8);
                      if (v1206[1] < 0xFFFFFFFFuLL)
                      {
                        memcpy((void *)((v1156 + 79) & 0xFFFFFFFFFFFFFFF8), v1206, 0x48uLL);
                      }
                      else
                      {
                        v1447 = v1156;
                        *(_QWORD *)v1205 = *v1206;
                        *(_QWORD *)(v1205 + 8) = v1206[1];
                        *(_QWORD *)(v1205 + 16) = v1206[2];
                        *(_QWORD *)(v1205 + 24) = v1206[3];
                        v1207 = v1206[7];
                        sub_21D7C4C20();
                        sub_21D7C4C20();
                        if (v1207)
                        {
                          *(_QWORD *)(v1205 + 56) = v1207;
                          *(_QWORD *)(v1205 + 64) = v1206[8];
                          (**(void (***)(uint64_t, uint64_t, uint64_t))(v1207 - 8))(v1205 + 32, (uint64_t)(v1206 + 4), v1207);
                        }
                        else
                        {
                          v1208 = *((_OWORD *)v1206 + 2);
                          v1209 = *((_OWORD *)v1206 + 3);
                          *(_QWORD *)(v1205 + 64) = v1206[8];
                          *(_OWORD *)(v1205 + 32) = v1208;
                          *(_OWORD *)(v1205 + 48) = v1209;
                        }
                        v338 = v1357;
                        v1156 = v1447;
                      }
                      v1210 = (_QWORD *)((v1205 + 79) & 0xFFFFFFFFFFFFF8);
                      v1211 = (_QWORD *)(((unint64_t)v1206 + 79) & 0xFFFFFFFFFFFFFFF8);
                      *v1210 = *v1211;
                      v1212 = (_QWORD *)(((unint64_t)v1210 + 15) & 0xFFFFFFFFFFFFFFF8);
                      v1213 = (_QWORD *)(((unint64_t)v1211 + 15) & 0xFFFFFFFFFFFFFFF8);
                      *v1212 = *v1213;
                      v1214 = (void *)(((unint64_t)v1212 + v1396) & v1372);
                      v1215 = (_BYTE *)(((unint64_t)v1213 + v1396) & v1372);
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      if (v1425)
                      {
                        v1216 = v1352;
                        v202 = v1401;
                        if (v1352 >= v338)
                        {
                          v1217 = (uint64_t)v1215;
                          v1218 = v1355;
                        }
                        else
                        {
                          v1217 = (unint64_t)&v1215[v1356] & v1370;
                          v1216 = v338;
                          v1218 = v1360;
                        }
                        v1221 = __swift_getEnumTagSinglePayload(v1217, v1216, v1218);
                      }
                      else
                      {
                        v202 = v1401;
                        if (!v1215[v1379])
                          goto LABEL_1351;
                        v1219 = (v1215[v1379] - 1) << v1300;
                        if (v1379 > 3)
                          v1219 = 0;
                        if ((_DWORD)v1379)
                        {
                          if (v1379 <= 3)
                            v1220 = v1379;
                          else
                            v1220 = 4;
                          __asm { BR              X11 }
                        }
                        v1221 = v1219 + 1;
                        v202 = v1401;
                        v338 = v1357;
                      }
                      if (v1221)
                      {
                        memcpy(v1214, v1215, v1424);
LABEL_1353:
                        *((_BYTE *)v1214 + v1424) = v1215[v1424];
                        *(_BYTE *)(v1156 + v1363) = 2;
                        goto LABEL_1354;
                      }
LABEL_1351:
                      (*(void (**)(void *, _BYTE *, uint64_t))(v1349 + 16))(v1214, v1215, v1355);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1350 + 16))(((unint64_t)v1214 + v1356) & v1370, (unint64_t)&v1215[v1356] & v1370, v1360);
                      if (!v1425)
                        *((_BYTE *)v1214 + v1379) = 0;
                      goto LABEL_1353;
                    }
LABEL_1265:
                    (*(void (**)(void *, _BYTE *, uint64_t))(v1349 + 16))(v792, v793, v1355);
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v1350 + 16))(((unint64_t)v792 + v1356) & v1370, (unint64_t)&v793[v1356] & v1370, v1360);
                    if (!v1425)
                      *((_BYTE *)v792 + v337) = 0;
                    goto LABEL_1267;
                  }
                }
                memcpy(v782, v783, v785);
                goto LABEL_697;
              }
LABEL_680:
              memcpy(v340, v336, v1339);
              v767 = v1429;
              goto LABEL_1271;
            }
            v340 = (void *)v333;
            if (v1425 < 2)
              goto LABEL_678;
            v341 = (v1303 + v698) & v1372;
            v339 = v1352;
            if (v1352 >= v1357)
            {
              v342 = v1355;
            }
            else
            {
              v341 = (v1356 + v341) & v1370;
              v339 = v1357;
              v342 = v1360;
            }
          }
          if (__swift_getEnumTagSinglePayload(v341, v339, v342) < 2)
            goto LABEL_678;
          goto LABEL_680;
        case 6:
          v194 = v1434;
          *v180 = *v1434;
          v195 = 6;
          goto LABEL_281;
        case 7:
          v194 = v1434;
          *v180 = *v1434;
          v195 = 7;
          goto LABEL_281;
        case 8:
          v194 = v1434;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1434, 1, v1388))
          {
            memcpy(v180, v1434, v1448);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1362 + 16))(v180, v1434, v1388);
            __swift_storeEnumTagSinglePayload((uint64_t)v180, 0, 1, v1388);
          }
          v344 = ((unint64_t)v180 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v345 = ((unint64_t)v1434 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v346 = *(_QWORD *)(v345 + 24);
          *(_QWORD *)(v344 + 24) = v346;
          *(_QWORD *)(v344 + 32) = *(_QWORD *)(v345 + 32);
          (**(void (***)(unint64_t, unint64_t))(v346 - 8))(v344, v345);
          v347 = (v1441 + v344) & v1302;
          v348 = (v1441 + v345) & v1302;
          if (v1354 >= 0x7FFFFFFF)
          {
            v354 = (const void *)((v1359 + v348) & v1368);
            v202 = v90;
            if (__swift_getEnumTagSinglePayload((uint64_t)v354, v1346, v1358) <= 1)
            {
              v350 = v180;
              v351 = (char *)(v348 + 8);
              v352 = v1359;
              v353 = ~v1428;
LABEL_333:
              *(_BYTE *)v347 = *(_BYTE *)v348;
              *(_QWORD *)(v347 + 8) = *(_QWORD *)(v348 + 8);
              *(_QWORD *)(v347 + 16) = *((_QWORD *)v351 + 1);
              *(_QWORD *)(v347 + 24) = *((_QWORD *)v351 + 2);
              *(_QWORD *)(v347 + 32) = *((_QWORD *)v351 + 3);
              *(_QWORD *)(v347 + 40) = *((_QWORD *)v351 + 4);
              *(_QWORD *)(v347 + 48) = *((_QWORD *)v351 + 5);
              *(_QWORD *)(v347 + 56) = *((_QWORD *)v351 + 6);
              *(_QWORD *)(v347 + 64) = *((_QWORD *)v351 + 7);
              *(_QWORD *)(v347 + 72) = *((_QWORD *)v351 + 8);
              *(_QWORD *)(v347 + 80) = *((_QWORD *)v351 + 9);
              *(_QWORD *)(v347 + 88) = *((_QWORD *)v351 + 10);
              *(_QWORD *)(v347 + 96) = *((_QWORD *)v351 + 11);
              v355 = *((_QWORD *)v351 + 12);
              *(_BYTE *)(v347 + 112) = v351[104];
              *(_QWORD *)(v347 + 104) = v355;
              v356 = (void *)((v352 + v347) & v353);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              if (__swift_getEnumTagSinglePayload((uint64_t)v354, 1, v1358))
              {
                memcpy(v356, v354, v1419);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v356, v354, v1358);
                __swift_storeEnumTagSinglePayload((uint64_t)v356, 0, 1, v1358);
              }
              v202 = v1401;
              v180 = v350;
              v194 = v1434;
              v179 = v1403;
              v357 = v1422;
LABEL_643:
              v757 = (_QWORD *)(((v347 | 7) + v357) & 0xFFFFFFFFFFFFF8);
              v758 = (_QWORD *)(((v348 | 7) + v357) & 0xFFFFFFFFFFFFFFF8);
              *v757 = *v758;
              v759 = (_QWORD *)(((unint64_t)v757 + 15) & 0xFFFFFFFFFFFFFFF8);
              v760 = (_QWORD *)(((unint64_t)v758 + 15) & 0xFFFFFFFFFFFFFFF8);
              *v759 = *v760;
              v759[1] = v760[1];
              v761 = ((unint64_t)v759 + 23) & 0xFFFFFFFFFFFFFFF8;
              v762 = ((unint64_t)v760 + 23) & 0xFFFFFFFFFFFFFFF8;
              v763 = *(_QWORD *)(v762 + 8);
              sub_21D7C4C20();
              if (v763 < 0xFFFFFFFF)
              {
                v764 = *(_OWORD *)v762;
                *(_QWORD *)(v761 + 16) = *(_QWORD *)(v762 + 16);
                *(_OWORD *)v761 = v764;
              }
              else
              {
                *(_QWORD *)v761 = *(_QWORD *)v762;
                *(_QWORD *)(v761 + 8) = *(_QWORD *)(v762 + 8);
                *(_QWORD *)(v761 + 16) = *(_QWORD *)(v762 + 16);
                sub_21D7C4C20();
                sub_21D7C4C20();
              }
              *(_QWORD *)((v761 + 31) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v762 + 31) & 0xFFFFFFFFFFFFF8);
              v470 = 8;
              goto LABEL_1224;
            }
          }
          else
          {
            v349 = *(_QWORD *)(v348 + 16);
            if (v349 >= 0xFFFFFFFF)
              LODWORD(v349) = -1;
            v202 = v90;
            if ((int)v349 - 1 < 0)
            {
              v350 = v180;
              v351 = (char *)(v348 + 8);
              v352 = v1359;
              v353 = ~v1428;
              v354 = (const void *)((v1359 + v348) & v1368);
              goto LABEL_333;
            }
          }
          v357 = v1422;
          memcpy((void *)v347, (const void *)v348, v1422);
          goto LABEL_643;
        case 9:
          v197 = ~v1442;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1434, 1, v1388))
          {
            memcpy(v180, v1434, v1448);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1362 + 16))(v180, v1434, v1388);
            __swift_storeEnumTagSinglePayload((uint64_t)v180, 0, 1, v1388);
          }
          v358 = ((unint64_t)v180 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v359 = ((unint64_t)v1434 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v360 = *(_QWORD *)(v359 + 24);
          *(_QWORD *)(v358 + 24) = v360;
          *(_QWORD *)(v358 + 32) = *(_QWORD *)(v359 + 32);
          (**(void (***)(unint64_t, unint64_t))(v360 - 8))(v358, v359);
          v361 = (_QWORD *)((v358 + 47) & 0xFFFFFFFFFFFFFFF8);
          v362 = (_QWORD *)((v359 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v361 = *v362;
          v361[1] = v362[1];
          v363 = (void *)(((unint64_t)v361 + v1428 + 16) & v1368);
          v364 = (const void *)(((unint64_t)v362 + v1428 + 16) & v1368);
          sub_21D7C4C20();
          if (__swift_getEnumTagSinglePayload((uint64_t)v364, 1, v1358))
          {
            memcpy(v363, v364, v1419);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v363, v364, v1358);
            __swift_storeEnumTagSinglePayload((uint64_t)v363, 0, 1, v1358);
          }
          v202 = v90;
          v642 = (void *)(((unint64_t)v363 + v1313) & v1372);
          v643 = (_BYTE *)(((unint64_t)v364 + v1313) & v1372);
          if (v1425)
          {
            v644 = v1352;
            if (v1352 >= v1357)
            {
              v645 = (uint64_t)v643;
              v646 = v1355;
            }
            else
            {
              v645 = (unint64_t)&v643[v1356] & v1370;
              v644 = v1357;
              v646 = v1360;
            }
            v695 = __swift_getEnumTagSinglePayload(v645, v644, v646);
          }
          else
          {
            if (!v643[v1379])
              goto LABEL_925;
            v682 = (v643[v1379] - 1) << v1300;
            if (v1379 > 3)
              v682 = 0;
            if ((_DWORD)v1379)
            {
              if (v1379 <= 3)
                v683 = v1379;
              else
                v683 = 4;
              __asm { BR              X11 }
            }
            v695 = v682 + 1;
          }
          if (v695)
          {
            memcpy(v642, v643, v1424);
            goto LABEL_927;
          }
LABEL_925:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1349 + 16))(v642, v643, v1355);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1350 + 16))(((unint64_t)v642 + v1356) & v1370, (unint64_t)&v643[v1356] & v1370, v1360);
          if (!v1425)
            *((_BYTE *)v642 + v1379) = 0;
LABEL_927:
          v946 = &v643[v1424];
          *((_BYTE *)v642 + v1424) = v643[v1424];
          v947 = (void *)(((unint64_t)v642 + v1424 + v1437 + 1) & v1372);
          v948 = (_BYTE *)((unint64_t)&v643[v1424 + 1 + v1437] & v1372);
          if (v1425)
          {
            v949 = v1352;
            if (v1352 >= v1357)
            {
              v950 = (unint64_t)&v946[v1437 + 1] & v1372;
              v951 = v1355;
            }
            else
            {
              v950 = (unint64_t)&v948[v1356] & v1370;
              v949 = v1357;
              v951 = v1360;
            }
            v954 = __swift_getEnumTagSinglePayload(v950, v949, v951);
          }
          else
          {
            if (!v948[v1379])
              goto LABEL_974;
            v952 = (v948[v1379] - 1) << v1300;
            if (v1379 > 3)
              v952 = 0;
            if ((_DWORD)v1379)
            {
              if (v1379 <= 3)
                v953 = v1379;
              else
                v953 = 4;
              __asm { BR              X11 }
            }
            v954 = v952 + 1;
          }
          if (v954)
          {
            memcpy(v947, v948, v1424);
            goto LABEL_976;
          }
LABEL_974:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1349 + 16))(v947, v948, v1355);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1350 + 16))(((unint64_t)v947 + v1356) & v1370, (unint64_t)&v948[v1356] & v1370, v1360);
          if (!v1425)
            *((_BYTE *)v947 + v1379) = 0;
LABEL_976:
          v970 = (_QWORD *)(((unint64_t)v947 + v1418) & v197);
          v971 = (uint64_t *)((unint64_t)&v948[v1418] & v197);
          v972 = v1421;
          if ((v1357 & 0x80000000) != 0)
          {
            v974 = __swift_getEnumTagSinglePayload(((unint64_t)v971 + v1342) & v1370, v1357, v1360);
            v972 = v1421;
          }
          else
          {
            v973 = *v971;
            if ((unint64_t)*v971 >= 0xFFFFFFFF)
              LODWORD(v973) = -1;
            v974 = v973 + 1;
          }
          v194 = v1434;
          if (v974)
          {
            memcpy(v970, v971, v972);
          }
          else
          {
            *v970 = *v971;
            v975 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1350 + 16);
            sub_21D7C4C20();
            v202 = v90;
            v975(((unint64_t)v970 + v1342) & v1370, ((unint64_t)v971 + v1342) & v1370, v1360);
            v179 = v1403;
          }
          v976 = (_QWORD *)(((unint64_t)v970 + v1344) & v1302);
          v977 = (_QWORD *)(((unint64_t)v971 + v1344) & v1302);
          if (v1354 >= 0x7FFFFFFF)
          {
            v983 = (const void *)(((unint64_t)v977 + v1359) & v1368);
            if (__swift_getEnumTagSinglePayload((uint64_t)v983, v1346, v1358) <= 1)
            {
              v979 = v1434;
              v980 = (char *)(v977 + 1);
              v981 = v1359;
              v982 = ~v1428;
LABEL_991:
              *(_BYTE *)v976 = *(_BYTE *)v977;
              v976[1] = v977[1];
              v976[2] = *((_QWORD *)v980 + 1);
              v976[3] = *((_QWORD *)v980 + 2);
              v976[4] = *((_QWORD *)v980 + 3);
              v976[5] = *((_QWORD *)v980 + 4);
              v976[6] = *((_QWORD *)v980 + 5);
              v976[7] = *((_QWORD *)v980 + 6);
              v976[8] = *((_QWORD *)v980 + 7);
              v976[9] = *((_QWORD *)v980 + 8);
              v976[10] = *((_QWORD *)v980 + 9);
              v976[11] = *((_QWORD *)v980 + 10);
              v976[12] = *((_QWORD *)v980 + 11);
              v984 = *((_QWORD *)v980 + 12);
              *((_BYTE *)v976 + 112) = v980[104];
              v976[13] = v984;
              v985 = (void *)(((unint64_t)v976 + v981) & v982);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              if (__swift_getEnumTagSinglePayload((uint64_t)v983, 1, v1358))
              {
                memcpy(v985, v983, v1419);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v985, v983, v1358);
                __swift_storeEnumTagSinglePayload((uint64_t)v985, 0, 1, v1358);
              }
              v202 = v90;
              v194 = v979;
              v179 = v1403;
LABEL_996:
              v517 = 9;
              goto LABEL_1315;
            }
          }
          else
          {
            v978 = *(_QWORD *)((((unint64_t)v971 + v1344) & v1302) + 0x10);
            if (v978 >= 0xFFFFFFFF)
              LODWORD(v978) = -1;
            if ((int)v978 - 1 < 0)
            {
              v979 = v1434;
              v980 = (char *)(v977 + 1);
              v981 = v1359;
              v982 = ~v1428;
              v983 = (const void *)(((unint64_t)v977 + v1359) & v1368);
              goto LABEL_991;
            }
          }
          memcpy(v976, v977, v1422);
          goto LABEL_996;
        case 10:
          v194 = v1434;
          v198 = v1434[3];
          v180[3] = v198;
          v180[4] = v1434[4];
          (**(void (***)(_QWORD *, _QWORD *))(v198 - 8))(v180, v1434);
          v199 = (void *)(((unint64_t)v180 + v1423) & v1301);
          v200 = (const void *)(((unint64_t)v1434 + v1423) & v1301);
          if (__swift_getEnumTagSinglePayload((uint64_t)v200, 1, v1388))
          {
            v201 = v1448;
            memcpy(v199, v200, v1448);
            v202 = v90;
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1362 + 16))(v199, v200, v1388);
            __swift_storeEnumTagSinglePayload((uint64_t)v199, 0, 1, v1388);
            v202 = v90;
            v201 = v1448;
          }
          *((_BYTE *)v199 + v201) = *((_BYTE *)v200 + v201);
          v365 = ((unint64_t)v199 + v201) & 0xFFFFFFFFFFFFFFF8;
          v366 = ((unint64_t)v200 + v201) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)(v365 + 8) = *(_QWORD *)(v366 + 8);
          *(_QWORD *)(v365 + 16) = *(_QWORD *)(v366 + 16);
          v367 = (_QWORD *)((v365 + 31) & 0xFFFFFFFFFFFFFFF8);
          v368 = (_QWORD *)((v366 + 31) & 0xFFFFFFFFFFFFFFF8);
          *v367 = *v368;
          v367[1] = v368[1];
          v369 = (_QWORD *)(((unint64_t)v367 + 23) & 0xFFFFFFFFFFFFFFF8);
          v370 = (_QWORD *)(((unint64_t)v368 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v369 = *v370;
          v369[1] = v370[1];
          v371 = 10;
          goto LABEL_386;
        case 11:
          v194 = v1434;
          *v180 = *v1434;
          v195 = 11;
          goto LABEL_281;
        case 12:
          v194 = v1434;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1434, 1, v1388))
          {
            memcpy(v180, v1434, v1448);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1362 + 16))(v180, v1434, v1388);
            __swift_storeEnumTagSinglePayload((uint64_t)v180, 0, 1, v1388);
          }
          v372 = ((unint64_t)v180 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v373 = ((unint64_t)v1434 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v374 = *(_QWORD *)(v373 + 24);
          *(_QWORD *)(v372 + 24) = v374;
          *(_QWORD *)(v372 + 32) = *(_QWORD *)(v373 + 32);
          (**(void (***)(unint64_t, unint64_t))(v374 - 8))(v372, v373);
          v375 = (_QWORD *)((v174 + 40 + v372) & v1439);
          v376 = (_QWORD *)((v174 + 40 + v373) & v1439);
          if (v1299 > 0x7FFFFFFE)
          {
            v381 = v174;
            v379 = (_QWORD *)(((unint64_t)v376 + 23) & 0xFFFFFFFFFFFFFFF8);
            v380 = ((unint64_t)v379 + 23) & 0xFFFFFFFFFFFFFFF8;
            v382 = __swift_getEnumTagSinglePayload((v381 + v380 + 33) & v183, v1299, v1340);
            v202 = v90;
            v378 = v1440;
            if (!v382)
            {
              v1381 = v180;
LABEL_596:
              *v375 = *v376;
              v375[1] = v376[1];
              v706 = (_QWORD *)(((unint64_t)v375 + 23) & 0xFFFFFFFFFFFFFFF8);
              *v706 = *v379;
              v706[1] = v379[1];
              v707 = ((unint64_t)v706 + 23) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)v707 = *(_QWORD *)v380;
              *(_QWORD *)(v707 + 8) = *(_QWORD *)(v380 + 8);
              *(_BYTE *)(v707 + 16) = *(_BYTE *)(v380 + 16);
              v708 = ((unint64_t)v706 + 47) & 0xFFFFFFFFFFFFFFF8;
              v709 = ((unint64_t)v379 + 47) & 0xFFFFFFFFFFFFFFF8;
              v710 = *(void **)v709;
              *(_QWORD *)v708 = *(_QWORD *)v709;
              *(_BYTE *)(v708 + 8) = *(_BYTE *)(v709 + 8);
              v711 = (v1431 + 9 + v708) & v183;
              v712 = (v1431 + 9 + v709) & v183;
              v713 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1404 + 16);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              v714 = v710;
              v713(v711, v712, v1340);
              v202 = v90;
              v180 = v1381;
              v194 = v1434;
LABEL_597:
              *(_QWORD *)(((unint64_t)v375 + v1440 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v376
                                                                                                  + v1440
                                                                                                  + 7) & 0xFFFFFFFFFFFFF8);
              *((_BYTE *)v180 + v1403) = 12;
              goto LABEL_1225;
            }
          }
          else
          {
            v377 = v376[1];
            if (v377 >= 0xFFFFFFFF)
              LODWORD(v377) = -1;
            v202 = v90;
            v378 = v1440;
            if ((v377 + 1) <= 1)
            {
              v1381 = v180;
              v379 = (_QWORD *)(((unint64_t)v376 + 23) & 0xFFFFFFFFFFFFFFF8);
              v380 = ((unint64_t)v379 + 23) & 0xFFFFFFFFFFFFFFF8;
              goto LABEL_596;
            }
          }
          memcpy(v375, v376, v378);
          goto LABEL_597;
        case 13:
          v194 = v1434;
          v203 = v1434[3];
          v180[3] = v203;
          v180[4] = v1434[4];
          (**(void (***)(_QWORD *, _QWORD *))(v203 - 8))(v180, v1434);
          v204 = (void *)(((unint64_t)v180 + v1423) & v1301);
          v205 = (const void *)(((unint64_t)v1434 + v1423) & v1301);
          if (__swift_getEnumTagSinglePayload((uint64_t)v205, 1, v1388))
          {
            memcpy(v204, v205, v1448);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1362 + 16))(v204, v205, v1388);
            __swift_storeEnumTagSinglePayload((uint64_t)v204, 0, 1, v1388);
          }
          v383 = ((unint64_t)v204 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v384 = ((unint64_t)v205 + v1426) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v383 = *(_QWORD *)v384;
          *(_QWORD *)(v383 + 8) = *(_QWORD *)(v384 + 8);
          *(_BYTE *)(v383 + 16) = *(_BYTE *)(v384 + 16);
          v385 = (_QWORD *)((v1311 + v383) & v1302);
          v386 = (_QWORD *)((v1311 + v384) & v1302);
          sub_21D7C4C20();
          if (v1354 >= 0x7FFFFFFF)
          {
            v392 = (const void *)(((unint64_t)v386 + v1359) & v1368);
            v202 = v90;
            if (__swift_getEnumTagSinglePayload((uint64_t)v392, v1346, v1358) <= 1)
            {
              v388 = v180;
              v389 = (char *)(v386 + 1);
              v390 = v1359;
              v391 = ~v1428;
LABEL_357:
              *(_BYTE *)v385 = *(_BYTE *)v386;
              v385[1] = v386[1];
              v385[2] = *((_QWORD *)v389 + 1);
              v385[3] = *((_QWORD *)v389 + 2);
              v385[4] = *((_QWORD *)v389 + 3);
              v385[5] = *((_QWORD *)v389 + 4);
              v385[6] = *((_QWORD *)v389 + 5);
              v385[7] = *((_QWORD *)v389 + 6);
              v385[8] = *((_QWORD *)v389 + 7);
              v385[9] = *((_QWORD *)v389 + 8);
              v385[10] = *((_QWORD *)v389 + 9);
              v385[11] = *((_QWORD *)v389 + 10);
              v385[12] = *((_QWORD *)v389 + 11);
              v393 = *((_QWORD *)v389 + 12);
              *((_BYTE *)v385 + 112) = v389[104];
              v385[13] = v393;
              v394 = (void *)(((unint64_t)v385 + v390) & v391);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              if (__swift_getEnumTagSinglePayload((uint64_t)v392, 1, v1358))
              {
                memcpy(v394, v392, v1419);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v394, v392, v1358);
                __swift_storeEnumTagSinglePayload((uint64_t)v394, 0, 1, v1358);
              }
              v202 = v1401;
              v180 = v388;
              v194 = v1434;
              v179 = v1403;
              v395 = v1422;
LABEL_649:
              *((_BYTE *)v385 + v395) = *((_BYTE *)v386 + v395);
              v517 = 13;
              goto LABEL_1315;
            }
          }
          else
          {
            v387 = v386[2];
            if (v387 >= 0xFFFFFFFF)
              LODWORD(v387) = -1;
            v202 = v90;
            if ((int)v387 - 1 < 0)
            {
              v388 = v180;
              v389 = (char *)(v386 + 1);
              v390 = v1359;
              v391 = ~v1428;
              v392 = (const void *)(((unint64_t)v386 + v1359) & v1368);
              goto LABEL_357;
            }
          }
          v395 = v1422;
          memcpy(v385, v386, v1422);
          goto LABEL_649;
        case 14:
          v194 = v1434;
          *v180 = *v1434;
          v195 = 14;
          goto LABEL_281;
        case 15:
          v194 = v1434;
          *v180 = *v1434;
          v195 = 15;
          goto LABEL_281;
        case 16:
          v194 = v1434;
          v206 = v1434[3];
          v180[3] = v206;
          v180[4] = v1434[4];
          (**(void (***)(_QWORD *, _QWORD *))(v206 - 8))(v180, v1434);
          v207 = (void *)(((unint64_t)v180 + v1423) & v1301);
          v208 = (const void *)(((unint64_t)v1434 + v1423) & v1301);
          if (__swift_getEnumTagSinglePayload((uint64_t)v208, 1, v1388))
          {
            memcpy(v207, v208, v1448);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1362 + 16))(v207, v208, v1388);
            __swift_storeEnumTagSinglePayload((uint64_t)v207, 0, 1, v1388);
          }
          v396 = (_QWORD *)(((unint64_t)v207 + v1426) & 0xFFFFFFFFFFFFFFF8);
          v397 = (_QWORD *)(((unint64_t)v208 + v1426) & 0xFFFFFFFFFFFFFFF8);
          *v396 = *v397;
          v396[1] = v397[1];
          v398 = (_QWORD *)(((unint64_t)v396 + 23) & 0xFFFFFFFFFFFFFFF8);
          v399 = (_QWORD *)(((unint64_t)v397 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v398 = *v399;
          v398[1] = v399[1];
          v400 = (_QWORD *)(((unint64_t)v398 + 23) & 0xFFFFFFFFFFFFFFF8);
          v401 = (_QWORD *)(((unint64_t)v399 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v400 = *v401;
          v400[1] = v401[1];
          v402 = ((unint64_t)v400 + 23) & 0xFFFFFFFFFFFFFFF8;
          v403 = ((unint64_t)v401 + 23) & 0xFFFFFFFFFFFFFFF8;
          v404 = *(_QWORD *)(v403 + 24);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v404 < 0xFFFFFFFF)
          {
            v405 = *(_OWORD *)v403;
            v406 = *(_OWORD *)(v403 + 16);
            *(_QWORD *)(v402 + 32) = *(_QWORD *)(v403 + 32);
            *(_OWORD *)v402 = v405;
            *(_OWORD *)(v402 + 16) = v406;
          }
          else
          {
            *(_QWORD *)(v402 + 24) = v404;
            *(_QWORD *)(v402 + 32) = *(_QWORD *)(v403 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v404 - 8))(v402, v403, v404);
          }
          v202 = v90;
          v407 = (v402 + 47) & 0xFFFFFFFFFFFFFFF8;
          v408 = (v403 + 47) & 0xFFFFFFFFFFFFFFF8;
          v409 = *(_QWORD *)(v408 + 24);
          if (v409 < 0xFFFFFFFF)
          {
            v410 = *(_OWORD *)v408;
            v411 = *(_OWORD *)(v408 + 16);
            *(_QWORD *)(v407 + 32) = *(_QWORD *)(v408 + 32);
            *(_OWORD *)v407 = v410;
            *(_OWORD *)(v407 + 16) = v411;
          }
          else
          {
            *(_QWORD *)(v407 + 24) = v409;
            *(_QWORD *)(v407 + 32) = *(_QWORD *)(v408 + 32);
            (**(void (***)(unint64_t, unint64_t))(v409 - 8))(v407, v408);
          }
          v412 = (v407 + 47) & 0xFFFFFFFFFFFFFFF8;
          v413 = (v408 + 47) & 0xFFFFFFFFFFFFFFF8;
          v414 = *(_QWORD *)(v413 + 24);
          if (v414 < 0xFFFFFFFF)
          {
            v415 = *(_OWORD *)v413;
            v416 = *(_OWORD *)(v413 + 16);
            *(_QWORD *)(v412 + 32) = *(_QWORD *)(v413 + 32);
            *(_OWORD *)v412 = v415;
            *(_OWORD *)(v412 + 16) = v416;
          }
          else
          {
            *(_QWORD *)(v412 + 24) = v414;
            *(_QWORD *)(v412 + 32) = *(_QWORD *)(v413 + 32);
            (**(void (***)(unint64_t, unint64_t))(v414 - 8))(v412, v413);
          }
          v417 = v1392;
          *(_BYTE *)(v412 + 40) = *(_BYTE *)(v413 + 40);
          *((_BYTE *)v180 + v1403) = 16;
          goto LABEL_440;
        case 17:
          v209 = v1434[3];
          v180[3] = v209;
          v180[4] = v1434[4];
          (**(void (***)(_QWORD *, _QWORD *))(v209 - 8))(v180, v1434);
          v210 = (void *)(((unint64_t)v180 + v1423) & v1301);
          v211 = (const void *)(((unint64_t)v1434 + v1423) & v1301);
          if (__swift_getEnumTagSinglePayload((uint64_t)v211, 1, v1388))
          {
            memcpy(v210, v211, v1448);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1362 + 16))(v210, v211, v1388);
            __swift_storeEnumTagSinglePayload((uint64_t)v210, 0, 1, v1388);
          }
          v418 = (_QWORD *)(((unint64_t)v210 + v1426) & 0xFFFFFFFFFFFFFFF8);
          v419 = (_QWORD *)(((unint64_t)v211 + v1426) & 0xFFFFFFFFFFFFFFF8);
          *v418 = *v419;
          v418[1] = v419[1];
          v420 = (_QWORD *)(((unint64_t)v418 + 23) & 0xFFFFFFFFFFFFFFF8);
          v421 = (_QWORD *)(((unint64_t)v419 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v420 = *v421;
          v420[1] = v421[1];
          v422 = (_QWORD *)(((unint64_t)v420 + 23) & 0xFFFFFFFFFFFFFFF8);
          v423 = (_QWORD *)(((unint64_t)v421 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v422 = *v423;
          v422[1] = v423[1];
          v424 = (_QWORD *)(((unint64_t)v422 + 23) & 0xFFFFFFFFFFFFFFF8);
          v425 = (_QWORD *)(((unint64_t)v423 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v424 = *v425;
          v424[1] = v425[1];
          v426 = ((unint64_t)v424 + 23) & 0xFFFFFFFFFFFFFFF8;
          v427 = ((unint64_t)v425 + 23) & 0xFFFFFFFFFFFFFFF8;
          v428 = *(_QWORD *)(v427 + 24);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v428 < 0xFFFFFFFF)
          {
            v429 = *(_OWORD *)v427;
            v430 = *(_OWORD *)(v427 + 16);
            *(_QWORD *)(v426 + 32) = *(_QWORD *)(v427 + 32);
            *(_OWORD *)v426 = v429;
            *(_OWORD *)(v426 + 16) = v430;
          }
          else
          {
            *(_QWORD *)(v426 + 24) = v428;
            *(_QWORD *)(v426 + 32) = *(_QWORD *)(v427 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v428 - 8))(v426, v427, v428);
          }
          v202 = v1401;
          v431 = (v426 + 47) & 0xFFFFFFFFFFFFFFF8;
          v432 = (v427 + 47) & 0xFFFFFFFFFFFFFFF8;
          v433 = *(_QWORD *)(v432 + 24);
          if (v433 < 0xFFFFFFFF)
          {
            v434 = *(_OWORD *)v432;
            v435 = *(_OWORD *)(v432 + 16);
            *(_QWORD *)(v431 + 32) = *(_QWORD *)(v432 + 32);
            *(_OWORD *)v431 = v434;
            *(_OWORD *)(v431 + 16) = v435;
          }
          else
          {
            *(_QWORD *)(v431 + 24) = v433;
            *(_QWORD *)(v431 + 32) = *(_QWORD *)(v432 + 32);
            (**(void (***)(unint64_t, unint64_t))(v433 - 8))(v431, (v427 + 47) & 0xFFFFFFFFFFFFFFF8);
          }
          v436 = v1434;
          v437 = (v431 + 47) & 0xFFFFFFFFFFFFFFF8;
          v438 = (v432 + 47) & 0xFFFFFFFFFFFFFFF8;
          v439 = *(_QWORD *)(v438 + 24);
          if (v439 < 0xFFFFFFFF)
          {
            v440 = *(_OWORD *)v438;
            v441 = *(_OWORD *)(v438 + 16);
            *(_QWORD *)(v437 + 32) = *(_QWORD *)(v438 + 32);
            *(_OWORD *)v437 = v440;
            *(_OWORD *)(v437 + 16) = v441;
          }
          else
          {
            *(_QWORD *)(v437 + 24) = v439;
            *(_QWORD *)(v437 + 32) = *(_QWORD *)(v438 + 32);
            (**(void (***)(unint64_t, unint64_t))(v439 - 8))(v437, v438);
          }
          v442 = (void *)((v1309 + v437) & v1372);
          v443 = (_BYTE *)((v1309 + v438) & v1372);
          if (v1425)
          {
            v444 = v1352;
            if (v1352 >= v1357)
            {
              v445 = (uint64_t)v443;
              v446 = v1355;
            }
            else
            {
              v445 = (unint64_t)&v443[v1356] & v1370;
              v444 = v1357;
              v446 = v1360;
            }
            v692 = __swift_getEnumTagSinglePayload(v445, v444, v446);
          }
          else
          {
            if (!v443[v1379])
              goto LABEL_999;
            v647 = (v443[v1379] - 1) << v1300;
            if (v1379 > 3)
              v647 = 0;
            if ((_DWORD)v1379)
            {
              if (v1379 <= 3)
                v648 = v1379;
              else
                v648 = 4;
              __asm { BR              X11 }
            }
            v692 = v647 + 1;
          }
          if (v692)
          {
            memcpy(v442, v443, v1424);
            goto LABEL_1001;
          }
LABEL_999:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1349 + 16))(v442, v443, v1355);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1350 + 16))(((unint64_t)v442 + v1356) & v1370, (unint64_t)&v443[v1356] & v1370, v1360);
          if (!v1425)
            *((_BYTE *)v442 + v1379) = 0;
LABEL_1001:
          v986 = (void *)(((unint64_t)v442 + v1390) & v1372);
          v987 = (_BYTE *)((unint64_t)&v443[v1390] & v1372);
          if (v1425)
          {
            v988 = v1352;
            if (v1352 >= v1357)
            {
              v989 = (unint64_t)&v443[v1390] & v1372;
              v990 = v1355;
            }
            else
            {
              v989 = (unint64_t)&v987[v1356] & v1370;
              v988 = v1357;
              v990 = v1360;
            }
            v993 = __swift_getEnumTagSinglePayload(v989, v988, v990);
          }
          else
          {
            if (!v987[v1379])
              goto LABEL_1184;
            v991 = (v987[v1379] - 1) << v1300;
            if (v1379 > 3)
              v991 = 0;
            if ((_DWORD)v1379)
            {
              if (v1379 <= 3)
                v992 = v1379;
              else
                v992 = 4;
              __asm { BR              X11 }
            }
            v993 = v991 + 1;
          }
          if (v993)
          {
            memcpy(v986, v987, v1424);
            goto LABEL_1186;
          }
LABEL_1184:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1349 + 16))(v986, v987, v1355);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1350 + 16))(((unint64_t)v986 + v1356) & v1370, (unint64_t)&v987[v1356] & v1370, v1360);
          if (!v1425)
            *((_BYTE *)v986 + v1379) = 0;
LABEL_1186:
          *((_BYTE *)v180 + v1403) = 17;
          goto LABEL_1187;
        case 18:
          v194 = v1434;
          *v180 = *v1434;
          v195 = 18;
          goto LABEL_281;
        case 19:
          v194 = v1434;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1434, 1, v1388))
          {
            memcpy(v180, v1434, v1448);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1362 + 16))(v180, v1434, v1388);
            __swift_storeEnumTagSinglePayload((uint64_t)v180, 0, 1, v1388);
          }
          v202 = v90;
          v447 = ((unint64_t)v180 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v448 = ((unint64_t)v1434 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v449 = *(_QWORD *)(v448 + 24);
          *(_QWORD *)(v447 + 24) = v449;
          *(_QWORD *)(v447 + 32) = *(_QWORD *)(v448 + 32);
          (**(void (***)(unint64_t, unint64_t))(v449 - 8))(v447, v448);
          v450 = (_QWORD *)((v447 + 47) & 0xFFFFFFFFFFFFFFF8);
          v451 = (_QWORD *)((v448 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v450 = *v451;
          v450[1] = v451[1];
          v452 = (_QWORD *)(((unint64_t)v450 + 23) & 0xFFFFFFFFFFFFFFF8);
          v453 = (_QWORD *)(((unint64_t)v451 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v452 = *v453;
          v452[1] = v453[1];
          *(_QWORD *)(((unint64_t)v452 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v453 + 23) & 0xFFFFFFFFFFFFF8);
          v371 = 19;
LABEL_386:
          *((_BYTE *)v180 + v179) = v371;
          sub_21D7C4C20();
          sub_21D7C4C20();
          goto LABEL_1225;
        case 20:
          if (__swift_getEnumTagSinglePayload((uint64_t)v1434, 1, v1388))
          {
            memcpy(v180, v1434, v1448);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1362 + 16))(v180, v1434, v1388);
            __swift_storeEnumTagSinglePayload((uint64_t)v180, 0, 1, v1388);
          }
          v454 = ((unint64_t)v180 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v455 = ((unint64_t)v1434 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v456 = *(_QWORD *)(v455 + 24);
          *(_QWORD *)(v454 + 24) = v456;
          *(_QWORD *)(v454 + 32) = *(_QWORD *)(v455 + 32);
          (**(void (***)(unint64_t, unint64_t))(v456 - 8))(v454, v455);
          v457 = (void *)((v1435 + 40 + v454) & v1298);
          v458 = (const void *)((v1435 + 40 + v455) & v1298);
          v459 = v1357;
          v1446 = v458;
          if (v1347 == v1337)
          {
            v460 = v1416;
            v461 = v1422;
            if (v1416 < 2)
              goto LABEL_713;
            v462 = (uint64_t)v458;
            v463 = v1388;
          }
          else
          {
            v464 = ((unint64_t)v458 + v1426) & 0xFFFFFFFFFFFFFFF8;
            v461 = v1422;
            if (v1337 == 0x7FFFFFFF)
            {
              if (*(_QWORD *)(v464 + 24) >= 0xFFFFFFFFuLL)
                goto LABEL_713;
              goto LABEL_715;
            }
            v702 = (v1441
                  + ((((((((v464 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                    + 47) & 0xFFFFFFFFFFFFFFF8)) & v1302;
            if (v1305 == v1337)
            {
              if (v1354 > 0x7FFFFFFE)
              {
                v800 = __swift_getEnumTagSinglePayload((v1359 + v702) & v1368, v1346, v1358);
                if (v800 < 2)
                  goto LABEL_713;
                v705 = v800 - 1;
              }
              else
              {
                v703 = *(_QWORD *)(v702 + 16);
                if (v703 >= 0xFFFFFFFF)
                  LODWORD(v703) = -1;
                v704 = v703 - 1;
                if (v704 < 0)
                  v704 = -1;
                v705 = v704 + 1;
              }
              if (v705 < 2)
              {
LABEL_713:
                if (__swift_getEnumTagSinglePayload((uint64_t)v458, 1, v1388))
                {
                  memcpy(v457, v458, v1448);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v1362 + 16))(v457, v458, v1388);
                  __swift_storeEnumTagSinglePayload((uint64_t)v457, 0, 1, v1388);
                }
                v804 = ((unint64_t)v457 + v1426) & 0xFFFFFFFFFFFFFFF8;
                v805 = ((unint64_t)v458 + v1426) & 0xFFFFFFFFFFFFFFF8;
                v806 = *(_QWORD *)(v805 + 24);
                *(_QWORD *)(v804 + 24) = v806;
                *(_QWORD *)(v804 + 32) = *(_QWORD *)(v805 + 32);
                (**(void (***)(unint64_t, unint64_t))(v806 - 8))(v804, v805);
                v807 = (_QWORD *)((v804 + 47) & 0xFFFFFFFFFFFFFFF8);
                v808 = (_QWORD *)((v805 + 47) & 0xFFFFFFFFFFFFFFF8);
                *v807 = *v808;
                v807[1] = v808[1];
                v809 = (_QWORD *)(((unint64_t)v807 + 23) & 0xFFFFFFFFFFFFFFF8);
                v810 = (_QWORD *)(((unint64_t)v808 + 23) & 0xFFFFFFFFFFFFFFF8);
                *v809 = *v810;
                v809[1] = v810[1];
                v811 = ((unint64_t)v809 + 23) & 0xFFFFFFFFFFFFFFF8;
                v812 = ((unint64_t)v810 + 23) & 0xFFFFFFFFFFFFFFF8;
                v813 = *(_QWORD *)(v812 + 24);
                sub_21D7C4C20();
                sub_21D7C4C20();
                if (v813 < 0xFFFFFFFF)
                {
                  v814 = *(_OWORD *)v812;
                  v815 = *(_OWORD *)(v812 + 16);
                  *(_QWORD *)(v811 + 32) = *(_QWORD *)(v812 + 32);
                  *(_OWORD *)v811 = v814;
                  *(_OWORD *)(v811 + 16) = v815;
                }
                else
                {
                  *(_QWORD *)(v811 + 24) = v813;
                  *(_QWORD *)(v811 + 32) = *(_QWORD *)(v812 + 32);
                  (**(void (***)(unint64_t, unint64_t, unint64_t))(v813 - 8))(v811, v812, v813);
                }
                v816 = v1379;
                v817 = (v811 + 47) & 0xFFFFFFFFFFFFFFF8;
                v818 = (v812 + 47) & 0xFFFFFFFFFFFFFFF8;
                v819 = *(_QWORD *)(v818 + 24);
                if (v819 < 0xFFFFFFFF)
                {
                  v820 = *(_OWORD *)v818;
                  v821 = *(_OWORD *)(v818 + 16);
                  *(_QWORD *)(v817 + 32) = *(_QWORD *)(v818 + 32);
                  *(_OWORD *)v817 = v820;
                  *(_OWORD *)(v817 + 16) = v821;
                }
                else
                {
                  *(_QWORD *)(v817 + 24) = v819;
                  *(_QWORD *)(v817 + 32) = *(_QWORD *)(v818 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v819 - 8))(v817, (v812 + 47) & 0xFFFFFFFFFFFFFFF8);
                }
                v822 = (_QWORD *)((v1441 + v817) & v1302);
                v823 = (_QWORD *)((v1441 + v818) & v1302);
                if (v1354 >= 0x7FFFFFFF)
                {
                  v828 = (const void *)(((unint64_t)v823 + v1359) & v1368);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v828, v1346, v1358) <= 1)
                  {
                    v1385 = v180;
                    v825 = (char *)(v823 + 1);
                    v826 = v1359;
                    v827 = ~v1428;
                    goto LABEL_730;
                  }
                }
                else
                {
                  v824 = *(_QWORD *)(((v1441 + v818) & v1302) + 0x10);
                  if (v824 >= 0xFFFFFFFF)
                    LODWORD(v824) = -1;
                  if ((int)v824 - 1 < 0)
                  {
                    v1385 = v180;
                    v825 = (char *)(v823 + 1);
                    v826 = v1359;
                    v827 = ~v1428;
                    v828 = (const void *)(((unint64_t)v823 + v1359) & v1368);
LABEL_730:
                    *(_BYTE *)v822 = *(_BYTE *)v823;
                    v822[1] = v823[1];
                    v822[2] = *((_QWORD *)v825 + 1);
                    v822[3] = *((_QWORD *)v825 + 2);
                    v822[4] = *((_QWORD *)v825 + 3);
                    v822[5] = *((_QWORD *)v825 + 4);
                    v822[6] = *((_QWORD *)v825 + 5);
                    v822[7] = *((_QWORD *)v825 + 6);
                    v822[8] = *((_QWORD *)v825 + 7);
                    v822[9] = *((_QWORD *)v825 + 8);
                    v822[10] = *((_QWORD *)v825 + 9);
                    v822[11] = *((_QWORD *)v825 + 10);
                    v822[12] = *((_QWORD *)v825 + 11);
                    v829 = *((_QWORD *)v825 + 12);
                    *((_BYTE *)v822 + 112) = v825[104];
                    v822[13] = v829;
                    v830 = (void *)(((unint64_t)v822 + v826) & v827);
                    sub_21D7C4C20();
                    sub_21D7C4C20();
                    sub_21D7C4C20();
                    sub_21D7C4C20();
                    sub_21D7C4C20();
                    sub_21D7C4C20();
                    if (__swift_getEnumTagSinglePayload((uint64_t)v828, 1, v1358))
                    {
                      memcpy(v830, v828, v1419);
                    }
                    else
                    {
                      (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v830, v828, v1358);
                      __swift_storeEnumTagSinglePayload((uint64_t)v830, 0, 1, v1358);
                    }
                    v180 = v1385;
                    v461 = v1422;
                    v816 = v1379;
                    v459 = v1357;
LABEL_735:
                    v831 = (void *)(((unint64_t)v822 + v1437 + v461) & v1372);
                    v832 = (_BYTE *)(((unint64_t)v823 + v1437 + v461) & v1372);
                    v179 = v1403;
                    if (v1425)
                    {
                      v833 = v1352;
                      v801 = v1359;
                      if (v1352 >= v459)
                      {
                        v834 = (uint64_t)v832;
                        v835 = v1355;
                      }
                      else
                      {
                        v834 = (unint64_t)&v832[v1356] & v1370;
                        v833 = v459;
                        v835 = v1360;
                      }
                      v838 = __swift_getEnumTagSinglePayload(v834, v833, v835);
                      v803 = v1304 + 7;
                      v802 = v1428 + 8;
                    }
                    else
                    {
                      v801 = v1359;
                      v803 = v1304 + 7;
                      v802 = v1428 + 8;
                      if (!v832[v816])
                        goto LABEL_1300;
                      v836 = (v832[v816] - 1) << v1300;
                      if (v816 > 3)
                        v836 = 0;
                      if ((_DWORD)v816)
                      {
                        if (v816 <= 3)
                          v837 = v816;
                        else
                          v837 = 4;
                        __asm { BR              X11 }
                      }
                      v838 = v836 + 1;
                    }
                    if (v838)
                    {
                      memcpy(v831, v832, v1424);
                      goto LABEL_1302;
                    }
LABEL_1300:
                    (*(void (**)(void *, _BYTE *, uint64_t))(v1349 + 16))(v831, v832, v1355);
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v1350 + 16))(((unint64_t)v831 + v1356) & v1370, (unint64_t)&v832[v1356] & v1370, v1360);
                    if (!v1425)
                      *((_BYTE *)v831 + v816) = 0;
LABEL_1302:
                    v1187 = (_QWORD *)(((unint64_t)v457 + v803) & 0xFFFFFFFFFFFFFFF8);
                    v1188 = (_QWORD *)(((unint64_t)v1446 + v803) & 0xFFFFFFFFFFFFFFF8);
                    *v1187 = *v1188;
                    v1189 = (_QWORD *)(((unint64_t)v1187 + v802) & v1302);
                    v1190 = (_QWORD *)(((unint64_t)v1188 + v802) & v1302);
                    sub_21D7C4C20();
                    if (v1354 >= 0x7FFFFFFF)
                    {
                      v1196 = (const void *)(((unint64_t)v1190 + v801) & v1368);
                      v202 = v90;
                      v194 = v1434;
                      if (__swift_getEnumTagSinglePayload((uint64_t)v1196, v1346, v1358) <= 1)
                      {
                        v1192 = v1434;
                        v1193 = (char *)(v1190 + 1);
                        v1194 = v1359;
                        v1195 = ~v1428;
                        goto LABEL_1309;
                      }
                    }
                    else
                    {
                      v1191 = v1190[2];
                      if (v1191 >= 0xFFFFFFFF)
                        LODWORD(v1191) = -1;
                      v202 = v90;
                      v194 = v1434;
                      if ((int)v1191 - 1 < 0)
                      {
                        v1192 = v1434;
                        v1193 = (char *)(v1190 + 1);
                        v1194 = v1359;
                        v1195 = ~v1428;
                        v1196 = (const void *)(((unint64_t)v1190 + v1359) & v1368);
LABEL_1309:
                        *(_BYTE *)v1189 = *(_BYTE *)v1190;
                        v1189[1] = v1190[1];
                        v1189[2] = *((_QWORD *)v1193 + 1);
                        v1189[3] = *((_QWORD *)v1193 + 2);
                        v1189[4] = *((_QWORD *)v1193 + 3);
                        v1189[5] = *((_QWORD *)v1193 + 4);
                        v1189[6] = *((_QWORD *)v1193 + 5);
                        v1189[7] = *((_QWORD *)v1193 + 6);
                        v1189[8] = *((_QWORD *)v1193 + 7);
                        v1189[9] = *((_QWORD *)v1193 + 8);
                        v1189[10] = *((_QWORD *)v1193 + 9);
                        v1189[11] = *((_QWORD *)v1193 + 10);
                        v1189[12] = *((_QWORD *)v1193 + 11);
                        v1197 = *((_QWORD *)v1193 + 12);
                        *((_BYTE *)v1189 + 112) = v1193[104];
                        v1189[13] = v1197;
                        v1198 = (void *)(((unint64_t)v1189 + v1194) & v1195);
                        sub_21D7C4C20();
                        sub_21D7C4C20();
                        sub_21D7C4C20();
                        sub_21D7C4C20();
                        sub_21D7C4C20();
                        sub_21D7C4C20();
                        if (__swift_getEnumTagSinglePayload((uint64_t)v1196, 1, v1358))
                        {
                          memcpy(v1198, v1196, v1419);
                        }
                        else
                        {
                          (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v1198, v1196, v1358);
                          __swift_storeEnumTagSinglePayload((uint64_t)v1198, 0, 1, v1358);
                        }
                        v202 = v90;
                        v194 = v1192;
                        v179 = v1403;
                        goto LABEL_1314;
                      }
                    }
                    memcpy(v1189, v1190, v1422);
LABEL_1314:
                    v517 = 20;
                    goto LABEL_1315;
                  }
                }
                memcpy(v822, v823, v461);
                goto LABEL_735;
              }
LABEL_715:
              memcpy(v457, v458, v1304);
              v801 = v1359;
              v803 = v1304 + 7;
              v802 = v1428 + 8;
              goto LABEL_1302;
            }
            if (v1425 < 2)
              goto LABEL_713;
            v462 = (v1303 + v702) & v1372;
            v460 = v1352;
            if (v1352 >= v1357)
            {
              v463 = v1355;
            }
            else
            {
              v462 = (v1356 + v462) & v1370;
              v460 = v1357;
              v463 = v1360;
            }
          }
          if (__swift_getEnumTagSinglePayload(v462, v460, v463) < 2)
            goto LABEL_713;
          goto LABEL_715;
        case 21:
          v194 = v1434;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1434, 1, v1388))
          {
            memcpy(v180, v1434, v1448);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1362 + 16))(v180, v1434, v1388);
            __swift_storeEnumTagSinglePayload((uint64_t)v180, 0, 1, v1388);
          }
          v202 = v90;
          v465 = ((unint64_t)v180 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v466 = ((unint64_t)v1434 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v467 = *(_QWORD *)(v466 + 24);
          *(_QWORD *)(v465 + 24) = v467;
          *(_QWORD *)(v465 + 32) = *(_QWORD *)(v466 + 32);
          (**(void (***)(unint64_t, unint64_t))(v467 - 8))(v465, v466);
          v468 = (v465 + 47) & 0xFFFFFFFFFFFFFFF8;
          v469 = (v466 + 47) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v468 = *(_QWORD *)v469;
          *(_QWORD *)(v468 + 8) = *(_QWORD *)(v469 + 8);
          *(_BYTE *)(v468 + 16) = *(_BYTE *)(v469 + 16);
          v470 = 21;
          goto LABEL_1224;
        case 22:
          v1444 = ~v1442;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1434, 1, v1388))
          {
            memcpy(v180, v1434, v1448);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1362 + 16))(v180, v1434, v1388);
            __swift_storeEnumTagSinglePayload((uint64_t)v180, 0, 1, v1388);
          }
          v471 = ((unint64_t)v180 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v472 = ((unint64_t)v1434 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v473 = *(_QWORD *)(v472 + 24);
          *(_QWORD *)(v471 + 24) = v473;
          *(_QWORD *)(v471 + 32) = *(_QWORD *)(v472 + 32);
          (**(void (***)(unint64_t, unint64_t))(v473 - 8))(v471, v472);
          v474 = (_QWORD *)((v471 + 47) & 0xFFFFFFFFFFFFFFF8);
          v475 = (_QWORD *)((v472 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v474 = *v475;
          v474[1] = v475[1];
          v476 = (_QWORD *)(((unint64_t)v474 + 23) & 0xFFFFFFFFFFFFF8);
          v477 = (_QWORD *)(((unint64_t)v475 + 23) & 0xFFFFFFFFFFFFF8);
          *v476 = *v477;
          v478 = (_QWORD *)(((unint64_t)v476 + 15) & 0xFFFFFFFFFFFFFFF8);
          v479 = (_QWORD *)(((unint64_t)v477 + 15) & 0xFFFFFFFFFFFFFFF8);
          *v478 = *v479;
          v478[1] = v479[1];
          v480 = (_QWORD *)(((unint64_t)v478 + v1341) & v1439);
          v481 = (_QWORD *)(((unint64_t)v479 + v1341) & v1439);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          v482 = ~v1428;
          if (v1299 > 0x7FFFFFFE)
          {
            v485 = (_QWORD *)(((unint64_t)v481 + 23) & 0xFFFFFFFFFFFFFFF8);
            v486 = ((unint64_t)v485 + 23) & 0xFFFFFFFFFFFFFFF8;
            v487 = __swift_getEnumTagSinglePayload((v1431 + v486 + 33) & v183, v1299, v1340);
            v484 = v1440;
            if (!v487)
              goto LABEL_406;
          }
          else
          {
            v483 = v481[1];
            if (v483 >= 0xFFFFFFFF)
              LODWORD(v483) = -1;
            v484 = v1440;
            if ((v483 + 1) <= 1)
            {
              v485 = (_QWORD *)(((unint64_t)v481 + 23) & 0xFFFFFFFFFFFFFFF8);
              v486 = ((unint64_t)v485 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_406:
              *v480 = *v481;
              v480[1] = v481[1];
              v489 = (_QWORD *)(((unint64_t)v480 + 23) & 0xFFFFFFFFFFFFFFF8);
              *v489 = *v485;
              v489[1] = v485[1];
              v490 = ((unint64_t)v489 + 23) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)v490 = *(_QWORD *)v486;
              *(_QWORD *)(v490 + 8) = *(_QWORD *)(v486 + 8);
              *(_BYTE *)(v490 + 16) = *(_BYTE *)(v486 + 16);
              v491 = ((unint64_t)v489 + 47) & 0xFFFFFFFFFFFFFFF8;
              v492 = ((unint64_t)v485 + 47) & 0xFFFFFFFFFFFFFFF8;
              v493 = *(void **)v492;
              *(_QWORD *)v491 = *(_QWORD *)v492;
              *(_BYTE *)(v491 + 8) = *(_BYTE *)(v492 + 8);
              v494 = (v1431 + 9 + v491) & v183;
              v495 = (v1431 + 9 + v492) & v183;
              v496 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1404 + 16);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              v497 = v493;
              v496(v494, v495, v1340);
              v482 = ~v1428;
              v488 = v1440;
LABEL_407:
              *((_BYTE *)v480 + v488) = *((_BYTE *)v481 + v488);
              v498 = ((unint64_t)v480 + v488) & 0xFFFFFFFFFFFFFFF8;
              v499 = ((unint64_t)v481 + v488) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)(v498 + 8) = *(_QWORD *)(v499 + 8);
              *(_QWORD *)(v498 + 16) = *(_QWORD *)(v499 + 16);
              v500 = (void *)((v1315 + v498) & v1372);
              v501 = (_BYTE *)((v1315 + v499) & v1372);
              sub_21D7C4C20();
              v502 = v1416;
              if (v1425)
              {
                v503 = v1352;
                if (v1352 >= v1357)
                {
                  v504 = (uint64_t)v501;
                  v505 = v1355;
                }
                else
                {
                  v504 = (unint64_t)&v501[v1356] & v1370;
                  v503 = v1357;
                  v505 = v1360;
                }
                v693 = __swift_getEnumTagSinglePayload(v504, v503, v505);
              }
              else
              {
                if (!v501[v1379])
                  goto LABEL_1017;
                v649 = (v501[v1379] - 1) << v1300;
                if (v1379 > 3)
                  v649 = 0;
                if ((_DWORD)v1379)
                {
                  if (v1379 <= 3)
                    v650 = v1379;
                  else
                    v650 = 4;
                  __asm { BR              X11 }
                }
                v693 = v649 + 1;
              }
              if (v693)
              {
                memcpy(v500, v501, v1424);
                goto LABEL_1019;
              }
LABEL_1017:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1349 + 16))(v500, v501, v1355);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1350 + 16))(((unint64_t)v500 + v1356) & v1370, (unint64_t)&v501[v1356] & v1370, v1360);
              if (!v1425)
                *((_BYTE *)v500 + v1379) = 0;
LABEL_1019:
              v994 = (_QWORD *)(((unint64_t)v500 + v1418) & v1444);
              v995 = (uint64_t *)((unint64_t)&v501[v1418] & v1444);
              v996 = v1421;
              if ((v1357 & 0x80000000) != 0)
              {
                v998 = __swift_getEnumTagSinglePayload(((unint64_t)v995 + v1342) & v1370, v1357, v1360);
                v996 = v1421;
              }
              else
              {
                v997 = *v995;
                if ((unint64_t)*v995 >= 0xFFFFFFFF)
                  LODWORD(v997) = -1;
                v998 = v997 + 1;
              }
              if (v998)
              {
                memcpy(v994, v995, v996);
              }
              else
              {
                *v994 = *v995;
                v999 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1350 + 16);
                sub_21D7C4C20();
                v999(((unint64_t)v994 + v1342) & v1370, ((unint64_t)v995 + v1342) & v1370, v1360);
              }
              v1000 = (_BYTE *)(((unint64_t)v994 + v1344) & v1302);
              v1001 = (_QWORD *)(((unint64_t)v995 + v1344) & v1302);
              if (v1354 >= 0x7FFFFFFF)
              {
                v1005 = (const void *)(((unint64_t)v1001 + v1359) & v482);
                if (__swift_getEnumTagSinglePayload((uint64_t)v1005, v1346, v1358) <= 1)
                {
                  v1003 = (char *)(v1001 + 1);
                  v1004 = v1359;
                  goto LABEL_1034;
                }
              }
              else
              {
                v1002 = v1001[2];
                if (v1002 >= 0xFFFFFFFF)
                  LODWORD(v1002) = -1;
                if ((int)v1002 - 1 < 0)
                {
                  v1003 = (char *)(v1001 + 1);
                  v1004 = v1359;
                  v1005 = (const void *)(((unint64_t)v1001 + v1359) & v482);
LABEL_1034:
                  *v1000 = *(_BYTE *)v1001;
                  *(_QWORD *)((((unint64_t)v994 + v1344) & v1302) + 8) = v1001[1];
                  *(_QWORD *)((((unint64_t)v994 + v1344) & v1302) + 0x10) = *((_QWORD *)v1003 + 1);
                  *(_QWORD *)((((unint64_t)v994 + v1344) & v1302) + 0x18) = *((_QWORD *)v1003 + 2);
                  *(_QWORD *)((((unint64_t)v994 + v1344) & v1302) + 0x20) = *((_QWORD *)v1003 + 3);
                  *(_QWORD *)((((unint64_t)v994 + v1344) & v1302) + 0x28) = *((_QWORD *)v1003 + 4);
                  *(_QWORD *)((((unint64_t)v994 + v1344) & v1302) + 0x30) = *((_QWORD *)v1003 + 5);
                  *(_QWORD *)((((unint64_t)v994 + v1344) & v1302) + 0x38) = *((_QWORD *)v1003 + 6);
                  *(_QWORD *)((((unint64_t)v994 + v1344) & v1302) + 0x40) = *((_QWORD *)v1003 + 7);
                  *(_QWORD *)((((unint64_t)v994 + v1344) & v1302) + 0x48) = *((_QWORD *)v1003 + 8);
                  *(_QWORD *)((((unint64_t)v994 + v1344) & v1302) + 0x50) = *((_QWORD *)v1003 + 9);
                  *(_QWORD *)((((unint64_t)v994 + v1344) & v1302) + 0x58) = *((_QWORD *)v1003 + 10);
                  *(_QWORD *)((((unint64_t)v994 + v1344) & v1302) + 0x60) = *((_QWORD *)v1003 + 11);
                  v1006 = *((_QWORD *)v1003 + 12);
                  *(_BYTE *)((((unint64_t)v994 + v1344) & v1302) + 0x70) = v1003[104];
                  *(_QWORD *)((((unint64_t)v994 + v1344) & v1302) + 0x68) = v1006;
                  v1007 = (void *)((unint64_t)&v1000[v1004] & v482);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (__swift_getEnumTagSinglePayload((uint64_t)v1005, 1, v1358))
                  {
                    memcpy(v1007, v1005, v1419);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v1007, v1005, v1358);
                    __swift_storeEnumTagSinglePayload((uint64_t)v1007, 0, 1, v1358);
                  }
                  v1008 = v1422;
                  v502 = v1416;
LABEL_1039:
                  v1009 = (unint64_t)&v1000[v1430 + v1008];
                  v1010 = (unint64_t)v1001 + v1430 + v1008;
                  v1011 = v1010 & v184;
                  v436 = v1434;
                  if (v1347 < 0x7FFFFFFF)
                  {
                    if (*(_QWORD *)(((v1426 + v1011) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                      goto LABEL_1041;
                  }
                  else if (__swift_getEnumTagSinglePayload(v1010 & v184, v502, v1388) >= 2)
                  {
LABEL_1041:
                    memcpy((void *)(v1009 & v184), (const void *)(v1010 & v184), v1345);
                    v1012 = v1345;
                    goto LABEL_1051;
                  }
                  if (__swift_getEnumTagSinglePayload(v1010 & v184, 1, v1388))
                  {
                    memcpy((void *)(v1009 & v184), (const void *)(v1010 & v184), v1448);
                  }
                  else
                  {
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v1362 + 16))(v1009 & v184, v1010 & v184, v1388);
                    __swift_storeEnumTagSinglePayload(v1009 & v184, 0, 1, v1388);
                  }
                  v1013 = (v1426 + (v1009 & v184)) & 0xFFFFFFFFFFFFFFF8;
                  v1014 = (v1426 + v1011) & 0xFFFFFFFFFFFFFFF8;
                  v1015 = *(_QWORD *)(v1014 + 24);
                  *(_QWORD *)(v1013 + 24) = v1015;
                  *(_QWORD *)(v1013 + 32) = *(_QWORD *)(v1014 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v1015 - 8))(v1013, v1014);
                  v1016 = (v1013 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1017 = (v1014 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1018 = *(_QWORD *)(v1017 + 24);
                  if (v1018 < 0xFFFFFFFF)
                  {
                    v1019 = *(_OWORD *)v1017;
                    v1020 = *(_OWORD *)(v1017 + 16);
                    *(_QWORD *)(v1016 + 32) = *(_QWORD *)(v1017 + 32);
                    *(_OWORD *)v1016 = v1019;
                    *(_OWORD *)(v1016 + 16) = v1020;
                  }
                  else
                  {
                    *(_QWORD *)(v1016 + 24) = v1018;
                    *(_QWORD *)(v1016 + 32) = *(_QWORD *)(v1017 + 32);
                    (**(void (***)(unint64_t, unint64_t))(v1018 - 8))(v1016, (v1014 + 47) & 0xFFFFFFFFFFFFFFF8);
                  }
                  v1021 = (_QWORD *)((v1016 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v1022 = (_QWORD *)((v1017 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v1021 = *v1022;
                  v1021[1] = v1022[1];
                  sub_21D7C4C20();
                  v1012 = v1345;
                  if ((_DWORD)v502)
                    v1012 = ((((((v1378 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                          + 16;
LABEL_1051:
                  v1023 = (v1009 | v1432) + v1012;
                  v1024 = (v1010 | v1432) + v1012;
                  v1025 = v1024 & v184;
                  if (v1347 < 0x7FFFFFFF)
                  {
                    if (*(_QWORD *)(((v1426 + v1025) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                      goto LABEL_1053;
                  }
                  else if (__swift_getEnumTagSinglePayload(v1024 & v184, v502, v1388) >= 2)
                  {
LABEL_1053:
                    memcpy((void *)(v1023 & v184), (const void *)(v1024 & v184), v1345);
                    v1026 = v1345;
                    v1027 = v1415;
                    goto LABEL_1063;
                  }
                  if (__swift_getEnumTagSinglePayload(v1024 & v184, 1, v1388))
                  {
                    memcpy((void *)(v1023 & v184), (const void *)(v1024 & v184), v1448);
                  }
                  else
                  {
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v1362 + 16))(v1023 & v184, v1024 & v184, v1388);
                    __swift_storeEnumTagSinglePayload(v1023 & v184, 0, 1, v1388);
                  }
                  v1028 = (v1426 + (v1023 & v184)) & 0xFFFFFFFFFFFFFFF8;
                  v1029 = (v1426 + v1025) & 0xFFFFFFFFFFFFFFF8;
                  v1030 = *(_QWORD *)(v1029 + 24);
                  *(_QWORD *)(v1028 + 24) = v1030;
                  *(_QWORD *)(v1028 + 32) = *(_QWORD *)(v1029 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v1030 - 8))(v1028, v1029);
                  v1031 = (v1028 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1032 = (v1029 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1033 = *(_QWORD *)(v1032 + 24);
                  v1027 = v1415;
                  if (v1033 < 0xFFFFFFFF)
                  {
                    v1034 = *(_OWORD *)v1032;
                    v1035 = *(_OWORD *)(v1032 + 16);
                    *(_QWORD *)(v1031 + 32) = *(_QWORD *)(v1032 + 32);
                    *(_OWORD *)v1031 = v1034;
                    *(_OWORD *)(v1031 + 16) = v1035;
                  }
                  else
                  {
                    *(_QWORD *)(v1031 + 24) = v1033;
                    *(_QWORD *)(v1031 + 32) = *(_QWORD *)(v1032 + 32);
                    (**(void (***)(unint64_t, unint64_t))(v1033 - 8))(v1031, v1032);
                  }
                  v1036 = (_QWORD *)((v1031 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v1037 = (_QWORD *)((v1032 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v1036 = *v1037;
                  v1036[1] = v1037[1];
                  sub_21D7C4C20();
                  v1026 = v1345;
                  if ((_DWORD)v502)
                    v1026 = ((((((v1378 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                          + 16;
LABEL_1063:
                  v1038 = (char *)(((v1023 | v1432) + v1026) & v184);
                  v1039 = (char *)(((v1024 | v1432) + v1026) & v184);
                  if (v1347 < 0x7FFFFFFF)
                  {
                    v202 = v1401;
                    if (*(_QWORD *)(((unint64_t)&v1039[v1426] & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                    {
LABEL_1065:
                      memcpy(v1038, v1039, v1345);
                      v1040 = v1344;
                      v1042 = v1335;
                      v1041 = v1336;
                      v1044 = v1333;
                      v1043 = v1334;
                      v1045 = v1422 + v1430;
                      v1046 = v1332;
                      v1048 = ((v1438 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
                      v1047 = v1330;
                      v1050 = v1323;
                      v1049 = v1324;
                      v1052 = v1328;
                      v1051 = v1329;
                      v1054 = v1326;
                      v1053 = v1327;
                      v1055 = v1325;
                      v1056 = v1378 + 1;
                      if (!(_DWORD)v502)
                        goto LABEL_1077;
                      goto LABEL_1076;
                    }
                  }
                  else
                  {
                    v202 = v1401;
                    if (__swift_getEnumTagSinglePayload((uint64_t)v1039, v502, v1388) >= 2)
                      goto LABEL_1065;
                  }
                  if (__swift_getEnumTagSinglePayload((uint64_t)v1039, 1, v1388))
                  {
                    memcpy(v1038, v1039, v1448);
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(v1362 + 16))(v1038, v1039, v1388);
                    __swift_storeEnumTagSinglePayload((uint64_t)v1038, 0, 1, v1388);
                  }
                  v1057 = (unint64_t)&v1038[v1426] & 0xFFFFFFFFFFFFFFF8;
                  v1058 = (unint64_t)&v1039[v1426] & 0xFFFFFFFFFFFFFFF8;
                  v1059 = *(_QWORD *)(v1058 + 24);
                  *(_QWORD *)(v1057 + 24) = v1059;
                  *(_QWORD *)(v1057 + 32) = *(_QWORD *)(v1058 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v1059 - 8))(v1057, v1058);
                  v1060 = (v1057 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1061 = (v1058 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1062 = *(_QWORD *)(v1061 + 24);
                  if (v1062 < 0xFFFFFFFF)
                  {
                    v1063 = *(_OWORD *)v1061;
                    v1064 = *(_OWORD *)(v1061 + 16);
                    *(_QWORD *)(v1060 + 32) = *(_QWORD *)(v1061 + 32);
                    *(_OWORD *)v1060 = v1063;
                    *(_OWORD *)(v1060 + 16) = v1064;
                  }
                  else
                  {
                    *(_QWORD *)(v1060 + 24) = v1062;
                    *(_QWORD *)(v1060 + 32) = *(_QWORD *)(v1061 + 32);
                    (**(void (***)(unint64_t, unint64_t))(v1062 - 8))(v1060, v1061);
                  }
                  v1065 = (_QWORD *)((v1060 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v1066 = (_QWORD *)((v1061 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v1065 = *v1066;
                  v1065[1] = v1066[1];
                  sub_21D7C4C20();
                  v202 = v1401;
                  v1040 = v1344;
                  v1042 = v1335;
                  v1041 = v1336;
                  v1044 = v1333;
                  v1043 = v1334;
                  v1045 = v1422 + v1430;
                  v1046 = v1332;
                  v1048 = ((v1438 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
                  v1047 = v1330;
                  v1050 = v1323;
                  v1049 = v1324;
                  v1052 = v1328;
                  v1051 = v1329;
                  v1054 = v1326;
                  v1053 = v1327;
                  v1055 = v1325;
                  v1056 = v1378 + 1;
                  if (!(_DWORD)v502)
                    goto LABEL_1077;
                  v1345 = ((((((v1378 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                        + 16;
LABEL_1076:
                  v1056 = v1378;
LABEL_1077:
                  *(_QWORD *)&v1038[v1345] = *(_QWORD *)&v1039[v1345];
                  v1067 = v1413
                        + ((v1042
                          + ((v1042
                            + ((v1045
                              + ((v1040
                                + ((v1418
                                  + ((v1417
                                    + ((((((v1341
                                          + ((((((((v1056 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                            + 15) & 0xFFFFFFFFFFFFFFF8)) & v1439)
                                        + v1440) & 0xFFFFFFFFFFFFFFF8)
                                      + 23) & 0xFFFFFFFFFFFFFFF8)) & v1372)) & v1444)) & v1302)) & v184)) & v184)) & v184);
                  if (v1338 > v1067)
                    v1067 = v1338;
                  if (v1067 <= v1041)
                    v1067 = v1041;
                  if (v1067 <= v1339)
                    v1067 = v1339;
                  if (v1067 <= v1043)
                    v1067 = v1043;
                  if (v1067 <= v1044)
                    v1067 = v1044;
                  if (v1067 <= v1047)
                    v1067 = v1047;
                  if (v1067 <= v1331)
                    v1067 = (((((v1438 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                          + 16;
                  if (v1067 <= v1046)
                    v1067 = v1046;
                  if (v1067 <= v1051)
                    v1067 = v1051;
                  if (v1067 <= v1053)
                    v1067 = v1053;
                  if (v1067 <= v1055)
                    v1067 = v1055;
                  if (v1067 <= v1052)
                    v1067 = v1052;
                  if (v1067 <= v1049)
                    v1067 = v1049;
                  if (v1067 <= v1027)
                    v1067 = v1027;
                  if (v1067 <= v1054)
                    v1067 = v1054;
                  if (v1067 <= v1338)
                    v1067 = v1338;
                  if (v1067 <= v1394)
                    v1067 = v1394;
                  if (v1067 <= v1048)
                    v1067 = v1048;
                  if (v1067 <= v1407)
                    v1067 = v1407;
                  if (v1067 <= v1411)
                    v1067 = v1411;
                  if (v1067 <= v1409)
                    v1067 = v1409;
                  if (v1067 <= v1289)
                    v1067 = v1289;
                  if (v1067 <= v1050)
                    v1067 = v1050;
                  if (v1067 <= v1288)
                    v1067 = v1288;
                  if (v1067 <= v1290)
                    v1067 = v1290;
                  if (v1067 <= v1297)
                    v1067 = v1297;
                  if (v1067 <= v1292)
                    v1067 = v1292;
                  if (v1067 <= v1295)
                    v1067 = v1295;
                  if (v1067 <= v1296)
                    v1067 = v1296;
                  if (v1067 <= v1438)
                    v1067 = v1438;
                  if (v1067 <= v1293)
                    v1067 = v1293;
                  if (v1067 <= v1294)
                    v1067 = v1294;
                  if (v1067 <= v1291)
                    v1067 = v1291;
                  if (v1067 <= 8)
                    v1067 = 8;
                  *((_BYTE *)v180 + v1067) = 22;
                  goto LABEL_1187;
                }
              }
              v1008 = v1422;
              memcpy(v1000, v1001, v1422);
              goto LABEL_1039;
            }
          }
          v488 = v484;
          memcpy(v480, v481, v484);
          goto LABEL_407;
        case 23:
          *v180 = *v1434;
          v212 = v98 + 8;
          v187 = v180;
          v213 = ((unint64_t)v180 + v98 + 8) & v1302;
          v189 = v1434;
          v214 = ((unint64_t)v1434 + v212) & v1302;
          *(_BYTE *)v213 = *(_BYTE *)v214;
          *(_QWORD *)(v213 + 8) = *(_QWORD *)(v214 + 8);
          *(_QWORD *)(v213 + 16) = *(_QWORD *)(v214 + 16);
          *(_QWORD *)(v213 + 24) = *(_QWORD *)(v214 + 24);
          *(_QWORD *)(v213 + 32) = *(_QWORD *)(v214 + 32);
          *(_QWORD *)(v213 + 40) = *(_QWORD *)(v214 + 40);
          *(_QWORD *)(v213 + 48) = *(_QWORD *)(v214 + 48);
          *(_QWORD *)(v213 + 56) = *(_QWORD *)(v214 + 56);
          *(_QWORD *)(v213 + 64) = *(_QWORD *)(v214 + 64);
          *(_QWORD *)(v213 + 72) = *(_QWORD *)(v214 + 72);
          *(_QWORD *)(v213 + 80) = *(_QWORD *)(v214 + 80);
          *(_QWORD *)(v213 + 88) = *(_QWORD *)(v214 + 88);
          *(_QWORD *)(v213 + 96) = *(_QWORD *)(v214 + 96);
          v215 = *(_QWORD *)(v214 + 104);
          *(_BYTE *)(v213 + 112) = *(_BYTE *)(v214 + 112);
          *(_QWORD *)(v213 + 104) = v215;
          v216 = (void *)((v1359 + v213) & v1368);
          v217 = (const void *)((v1359 + v214) & v1368);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (__swift_getEnumTagSinglePayload((uint64_t)v217, 1, v1358))
          {
            memcpy(v216, v217, v1419);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v216, v217, v1358);
            __swift_storeEnumTagSinglePayload((uint64_t)v216, 0, 1, v1358);
          }
          v202 = v90;
          v289 = v1403;
          v290 = 23;
LABEL_412:
          v180 = v187;
          *((_BYTE *)v187 + v289) = v290;
          v92 = a1;
          v417 = v1392;
          v194 = v189;
          goto LABEL_1318;
        case 24:
          v194 = v1434;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1434, 1, v1388))
          {
            memcpy(v180, v1434, v1448);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1362 + 16))(v180, v1434, v1388);
            __swift_storeEnumTagSinglePayload((uint64_t)v180, 0, 1, v1388);
          }
          v202 = v90;
          v506 = ((unint64_t)v180 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v507 = ((unint64_t)v1434 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v508 = *(_QWORD *)(v507 + 24);
          *(_QWORD *)(v506 + 24) = v508;
          *(_QWORD *)(v506 + 32) = *(_QWORD *)(v507 + 32);
          (**(void (***)(unint64_t, unint64_t))(v508 - 8))(v506, v507);
          v509 = (_QWORD *)((v507 + 47) & 0xFFFFFFFFFFFFF8);
          v510 = (_QWORD *)((v506 + 47) & 0xFFFFFFFFFFFFF8);
          *v510 = *v509;
          v511 = (_QWORD *)(((unint64_t)v510 + 15) & 0xFFFFFFFFFFFFFFF8);
          v512 = (_QWORD *)(((unint64_t)v509 + 15) & 0xFFFFFFFFFFFFFFF8);
          *v511 = *v512;
          v511[1] = v512[1];
          v513 = 24;
          goto LABEL_758;
        case 25:
          v194 = v1434;
          *v180 = *v1434;
          v195 = 25;
          goto LABEL_281;
        case 26:
          v194 = v1434;
          *v180 = *v1434;
          v195 = 26;
          goto LABEL_281;
        case 27:
          v194 = v1434;
          *v180 = *v1434;
          v195 = 27;
          goto LABEL_281;
        case 28:
          v194 = v1434;
          *v180 = *v1434;
          v195 = 28;
          goto LABEL_281;
        case 29:
          v194 = v1434;
          v218 = v1434[3];
          v180[3] = v218;
          v180[4] = v1434[4];
          (**(void (***)(_QWORD *, _QWORD *))(v218 - 8))(v180, v1434);
          v219 = (char *)(((unint64_t)v180 + v1423) & v1301);
          v220 = (const void *)(((unint64_t)v1434 + v1423) & v1301);
          if (__swift_getEnumTagSinglePayload((uint64_t)v220, 1, v1388))
          {
            v221 = v1448;
            memcpy(v219, v220, v1448);
            v202 = v90;
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(v1362 + 16))(v219, v220, v1388);
            __swift_storeEnumTagSinglePayload((uint64_t)v219, 0, 1, v1388);
            v202 = v90;
            v221 = v1448;
          }
          v514 = &v219[v221];
          *v514 = *((_BYTE *)v220 + v221);
          v514[1] = *((_BYTE *)v220 + v221 + 1);
          v515 = (unint64_t)&v219[v221 + 9] & 0xFFFFFFFFFFFFFFF8;
          v516 = ((unint64_t)v220 + v221 + 9) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v515 = *(_QWORD *)v516;
          *(_QWORD *)(v515 + 8) = *(_QWORD *)(v516 + 8);
          *(_BYTE *)(v515 + 16) = *(_BYTE *)(v516 + 16);
          v470 = 29;
          goto LABEL_1224;
        case 30:
          v194 = v1434;
          v222 = v1434[3];
          v180[3] = v222;
          v180[4] = v1434[4];
          (**(void (***)(_QWORD *, _QWORD *))(v222 - 8))(v180, v1434);
          *((_BYTE *)v180 + 40) = *((_BYTE *)v1434 + 40);
          *((_BYTE *)v180 + 41) = *((_BYTE *)v1434 + 41);
          *((_BYTE *)v180 + 42) = *((_BYTE *)v1434 + 42);
          *((_BYTE *)v180 + 43) = *((_BYTE *)v1434 + 43);
          v223 = (_QWORD *)(((unint64_t)v180 + 51) & 0xFFFFFFFFFFFFFFF8);
          v224 = (_QWORD *)(((unint64_t)v1434 + 51) & 0xFFFFFFFFFFFFFFF8);
          *v223 = *v224;
          v223[1] = v224[1];
          v225 = (_QWORD *)(((unint64_t)v223 + 23) & 0xFFFFFFFFFFFFFFF8);
          v226 = (_QWORD *)(((unint64_t)v224 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v225 = *v226;
          v225[1] = v226[1];
          v227 = (void *)(((unint64_t)v225 + v1405) & v1301);
          v228 = (const void *)(((unint64_t)v226 + v1405) & v1301);
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (__swift_getEnumTagSinglePayload((uint64_t)v228, 1, v1388))
          {
            memcpy(v227, v228, v1448);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1362 + 16))(v227, v228, v1388);
            __swift_storeEnumTagSinglePayload((uint64_t)v227, 0, 1, v1388);
          }
          *((_BYTE *)v180 + v179) = 30;
          goto LABEL_282;
        case 31:
          v194 = v1434;
          *v180 = *v1434;
          v195 = 31;
          goto LABEL_281;
        case 32:
          v194 = v1434;
          *v180 = *v1434;
          v180[1] = v1434[1];
          v229 = ((unint64_t)v180 + 23) & 0xFFFFFFFFFFFFFFF8;
          v230 = ((unint64_t)v1434 + 23) & 0xFFFFFFFFFFFFFFF8;
          v231 = *(_QWORD *)(v230 + 24);
          *(_QWORD *)(v229 + 24) = v231;
          *(_QWORD *)(v229 + 32) = *(_QWORD *)(v230 + 32);
          v232 = **(void (***)(unint64_t, unint64_t, uint64_t))(v231 - 8);
          sub_21D7C4C20();
          v232(v229, v230, v231);
          v233 = (void *)((v1423 + v229) & v1301);
          v234 = (const void *)((v1423 + v230) & v1301);
          if (__swift_getEnumTagSinglePayload((uint64_t)v234, 1, v1388))
          {
            memcpy(v233, v234, v1448);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1362 + 16))(v233, v234, v1388);
            __swift_storeEnumTagSinglePayload((uint64_t)v233, 0, 1, v1388);
          }
          v202 = v90;
          v517 = 32;
          goto LABEL_1315;
        case 33:
          if (v1425)
          {
            v235 = v1357;
            v236 = v1379;
            v194 = v1434;
            if (v1352 >= v1357)
            {
              v237 = (uint64_t)v1434;
              v235 = v1352;
              v238 = v1355;
            }
            else
            {
              v237 = ((unint64_t)v1434 + v1356) & v1370;
              v238 = v1360;
            }
            v689 = __swift_getEnumTagSinglePayload(v237, v235, v238);
            v518 = v1388;
          }
          else
          {
            v236 = v1379;
            v194 = v1434;
            v518 = v1388;
            if (!*((_BYTE *)v1434 + v1379))
              goto LABEL_752;
            v519 = (*((unsigned __int8 *)v1434 + v1379) - 1) << v1300;
            if (v1379 > 3)
              v519 = 0;
            if ((_DWORD)v1379)
            {
              if (v1379 <= 3)
                v520 = v1379;
              else
                v520 = 4;
              __asm { BR              X11 }
            }
            v689 = v519 + 1;
          }
          if (v689)
          {
            memcpy(v180, v194, v1424);
            goto LABEL_754;
          }
LABEL_752:
          (*(void (**)(_QWORD *, const void *, uint64_t))(v1349 + 16))(v180, v194, v1355);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1350 + 16))(((unint64_t)v180 + v1356) & v1370, ((unint64_t)v194 + v1356) & v1370, v1360);
          if (!v1425)
            *((_BYTE *)v180 + v236) = 0;
LABEL_754:
          v839 = ((unint64_t)v180 + v1398) & 0xFFFFFFFFFFFFFFF8;
          v840 = ((unint64_t)v194 + v1398) & 0xFFFFFFFFFFFFFFF8;
          v841 = *(_QWORD *)(v840 + 24);
          *(_QWORD *)(v839 + 24) = v841;
          *(_QWORD *)(v839 + 32) = *(_QWORD *)(v840 + 32);
          (**(void (***)(unint64_t, unint64_t))(v841 - 8))(v839, v840);
          v842 = (void *)((v1423 + v839) & v1301);
          v843 = (const void *)((v1423 + v840) & v1301);
          v202 = v90;
          if (__swift_getEnumTagSinglePayload((uint64_t)v843, 1, v518))
          {
            memcpy(v842, v843, v1448);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1362 + 16))(v842, v843, v518);
            __swift_storeEnumTagSinglePayload((uint64_t)v842, 0, 1, v518);
          }
          v844 = (_QWORD *)(((unint64_t)v842 + v1426) & 0xFFFFFFFFFFFFFFF8);
          v845 = (_QWORD *)(((unint64_t)v843 + v1426) & 0xFFFFFFFFFFFFFFF8);
          *v844 = *v845;
          v844[1] = v845[1];
          v846 = (_QWORD *)(((unint64_t)v844 + 23) & 0xFFFFFFFFFFFFFFF8);
          v847 = (_QWORD *)(((unint64_t)v845 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v846 = *v847;
          v846[1] = v847[1];
          v513 = 33;
LABEL_758:
          *((_BYTE *)v180 + v179) = v513;
          sub_21D7C4C20();
          goto LABEL_1225;
        case 34:
          if (__swift_getEnumTagSinglePayload((uint64_t)v1434, 1, v1388))
          {
            memcpy(v180, v1434, v1448);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1362 + 16))(v180, v1434, v1388);
            __swift_storeEnumTagSinglePayload((uint64_t)v180, 0, 1, v1388);
          }
          v1382 = v180;
          v521 = ((unint64_t)v180 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v522 = ((unint64_t)v1434 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v523 = *(_QWORD *)(v522 + 24);
          *(_QWORD *)(v521 + 24) = v523;
          *(_QWORD *)(v521 + 32) = *(_QWORD *)(v522 + 32);
          (**(void (***)(unint64_t, unint64_t))(v523 - 8))(v521, v522);
          v524 = (v1441 + v521) & v1302;
          v525 = (v1441 + v522) & v1302;
          *(_BYTE *)v524 = *(_BYTE *)v525;
          *(_QWORD *)(v524 + 8) = *(_QWORD *)(v525 + 8);
          *(_QWORD *)(v524 + 16) = *(_QWORD *)(v525 + 0x10);
          *(_QWORD *)(v524 + 24) = *(_QWORD *)(v525 + 0x18);
          *(_QWORD *)(v524 + 32) = *(_QWORD *)(v525 + 0x20);
          *(_QWORD *)(v524 + 40) = *(_QWORD *)(v525 + 0x28);
          *(_QWORD *)(v524 + 48) = *(_QWORD *)(v525 + 0x30);
          *(_QWORD *)(v524 + 56) = *(_QWORD *)(v525 + 0x38);
          *(_QWORD *)(v524 + 64) = *(_QWORD *)(v525 + 0x40);
          *(_QWORD *)(v524 + 72) = *(_QWORD *)(v525 + 0x48);
          *(_QWORD *)(v524 + 80) = *(_QWORD *)(v525 + 0x50);
          *(_QWORD *)(v524 + 88) = *(_QWORD *)(v525 + 0x58);
          *(_QWORD *)(v524 + 96) = *(_QWORD *)(v525 + 0x60);
          v526 = *(_QWORD *)(v525 + 0x68);
          *(_BYTE *)(v524 + 112) = *(_BYTE *)(v525 + 0x70);
          *(_QWORD *)(v524 + 104) = v526;
          v527 = (void *)((v1359 + v524) & v1368);
          v528 = (const void *)((v1359 + v525) & v1368);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (__swift_getEnumTagSinglePayload((uint64_t)v528, 1, v1358))
          {
            memcpy(v527, v528, v1419);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v527, v528, v1358);
            __swift_storeEnumTagSinglePayload((uint64_t)v527, 0, 1, v1358);
          }
          v202 = v90;
          v651 = (_QWORD *)((v1406 + v524) & 0xFFFFFFFFFFFFFFF8);
          v652 = (_QWORD *)((v1406 + v525) & 0xFFFFFFFFFFFFFFF8);
          *v651 = *v652;
          v651[1] = v652[1];
          v653 = ((unint64_t)v651 + 23) & 0xFFFFFFFFFFFFFFF8;
          v654 = ((unint64_t)v652 + 23) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v653 = *(_QWORD *)v654;
          *(_QWORD *)(v653 + 8) = *(_QWORD *)(v654 + 8);
          *(_BYTE *)(v653 + 16) = *(_BYTE *)(v654 + 16);
          *(_BYTE *)(v653 + 17) = *(_BYTE *)(v654 + 17);
          v655 = (void *)((v1312 + v653) & v1372);
          v656 = (_BYTE *)((v1312 + v654) & v1372);
          sub_21D7C4C20();
          sub_21D7C4C20();
          v194 = v1434;
          if (v1425)
          {
            v657 = v1357;
            if (v1352 >= v1357)
            {
              v658 = (uint64_t)v656;
              v657 = v1352;
              v659 = v1355;
            }
            else
            {
              v658 = (unint64_t)&v656[v1356] & v1370;
              v659 = v1360;
            }
            v696 = __swift_getEnumTagSinglePayload(v658, v657, v659);
            v180 = v1382;
          }
          else
          {
            v180 = v1382;
            if (!v656[v1379])
              goto LABEL_943;
            v684 = (v656[v1379] - 1) << v1300;
            if (v1379 > 3)
              v684 = 0;
            if ((_DWORD)v1379)
            {
              if (v1379 <= 3)
                v685 = v1379;
              else
                v685 = 4;
              __asm { BR              X11 }
            }
            v696 = v684 + 1;
          }
          if (v696)
          {
            memcpy(v655, v656, v1424);
            goto LABEL_945;
          }
LABEL_943:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1349 + 16))(v655, v656, v1355);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1350 + 16))(((unint64_t)v655 + v1356) & v1370, (unint64_t)&v656[v1356] & v1370, v1360);
          if (!v1425)
            *((_BYTE *)v655 + v1379) = 0;
LABEL_945:
          *((_BYTE *)v180 + v1403) = 34;
          goto LABEL_1316;
        case 35:
          if (__swift_getEnumTagSinglePayload((uint64_t)v1434, 1, v1388))
          {
            memcpy(v180, v1434, v1448);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1362 + 16))(v180, v1434, v1388);
            __swift_storeEnumTagSinglePayload((uint64_t)v180, 0, 1, v1388);
          }
          v529 = ((unint64_t)v180 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v530 = ((unint64_t)v1434 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v531 = *(_QWORD *)(v530 + 24);
          *(_QWORD *)(v529 + 24) = v531;
          *(_QWORD *)(v529 + 32) = *(_QWORD *)(v530 + 32);
          (**(void (***)(unint64_t, unint64_t))(v531 - 8))(v529, v530);
          v532 = (v1441 + v529) & v1302;
          v533 = (v1441 + v530) & v1302;
          *(_BYTE *)v532 = *(_BYTE *)v533;
          *(_QWORD *)(v532 + 8) = *(_QWORD *)(v533 + 8);
          *(_QWORD *)(v532 + 16) = *(_QWORD *)(v533 + 0x10);
          *(_QWORD *)(v532 + 24) = *(_QWORD *)(v533 + 0x18);
          *(_QWORD *)(v532 + 32) = *(_QWORD *)(v533 + 0x20);
          *(_QWORD *)(v532 + 40) = *(_QWORD *)(v533 + 0x28);
          *(_QWORD *)(v532 + 48) = *(_QWORD *)(v533 + 0x30);
          *(_QWORD *)(v532 + 56) = *(_QWORD *)(v533 + 0x38);
          *(_QWORD *)(v532 + 64) = *(_QWORD *)(v533 + 0x40);
          *(_QWORD *)(v532 + 72) = *(_QWORD *)(v533 + 0x48);
          *(_QWORD *)(v532 + 80) = *(_QWORD *)(v533 + 0x50);
          *(_QWORD *)(v532 + 88) = *(_QWORD *)(v533 + 0x58);
          *(_QWORD *)(v532 + 96) = *(_QWORD *)(v533 + 0x60);
          v534 = *(_QWORD *)(v533 + 0x68);
          *(_BYTE *)(v532 + 112) = *(_BYTE *)(v533 + 0x70);
          *(_QWORD *)(v532 + 104) = v534;
          v535 = (void *)((v1359 + v532) & v1368);
          v536 = (const void *)((v1359 + v533) & v1368);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (__swift_getEnumTagSinglePayload((uint64_t)v536, 1, v1358))
          {
            memcpy(v535, v536, v1419);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v535, v536, v1358);
            __swift_storeEnumTagSinglePayload((uint64_t)v535, 0, 1, v1358);
          }
          v660 = (_QWORD *)((v1406 + v532) & 0xFFFFFFFFFFFFFFF8);
          v661 = (_QWORD *)((v1406 + v533) & 0xFFFFFFFFFFFFFFF8);
          *v660 = *v661;
          v660[1] = v661[1];
          v662 = ((unint64_t)v660 + 23) & 0xFFFFFFFFFFFFFFF8;
          v663 = ((unint64_t)v661 + 23) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v662 = *(_QWORD *)v663;
          *(_QWORD *)(v662 + 8) = *(_QWORD *)(v663 + 8);
          *(_BYTE *)(v662 + 16) = *(_BYTE *)(v663 + 16);
          *(_BYTE *)(v662 + 17) = *(_BYTE *)(v663 + 17);
          v664 = (_QWORD *)((v662 + 25) & 0xFFFFFFFFFFFFFFF8);
          v665 = (_QWORD *)((v663 + 25) & 0xFFFFFFFFFFFFFFF8);
          *v664 = *v665;
          v664[1] = v665[1];
          v666 = (_QWORD *)(((unint64_t)v664 + 23) & 0xFFFFFFFFFFFFFFF8);
          v667 = (_QWORD *)(((unint64_t)v665 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v666 = *v667;
          v666[1] = v667[1];
          v668 = (_QWORD *)(((unint64_t)v666 + 23) & 0xFFFFFFFFFFFFFFF8);
          v669 = (_QWORD *)(((unint64_t)v667 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v668 = *v669;
          v668[1] = v669[1];
          v670 = (_QWORD *)(((unint64_t)v668 + 23) & 0xFFFFFFFFFFFFFFF8);
          v671 = (_QWORD *)(((unint64_t)v669 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v670 = *v671;
          v670[1] = v671[1];
          v672 = (_QWORD *)(((unint64_t)v670 + 23) & 0xFFFFFFFFFFFFFFF8);
          v673 = (_QWORD *)(((unint64_t)v671 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v672 = *v673;
          v674 = (void *)(((unint64_t)v672 + v1396) & v1372);
          v675 = (_BYTE *)(((unint64_t)v673 + v1396) & v1372);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v1425)
          {
            v676 = v1357;
            v677 = v1379;
            if (v1352 >= v1357)
            {
              v678 = (uint64_t)v675;
              v676 = v1352;
              v679 = v1355;
            }
            else
            {
              v678 = (unint64_t)&v675[v1356] & v1370;
              v679 = v1360;
            }
            v697 = __swift_getEnumTagSinglePayload(v678, v676, v679);
            v202 = v1401;
            v194 = v1434;
            v686 = v1403;
          }
          else
          {
            v677 = v1379;
            v202 = v1401;
            v194 = v1434;
            v686 = v1403;
            if (!v675[v1379])
              goto LABEL_948;
            v687 = (v675[v1379] - 1) << v1300;
            if (v1379 > 3)
              v687 = 0;
            if ((_DWORD)v1379)
            {
              if (v1379 <= 3)
                v688 = v1379;
              else
                v688 = 4;
              __asm { BR              X11 }
            }
            v697 = v687 + 1;
          }
          if (v697)
          {
            memcpy(v674, v675, v1424);
            goto LABEL_950;
          }
LABEL_948:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1349 + 16))(v674, v675, v1355);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1350 + 16))(((unint64_t)v674 + v1356) & v1370, (unint64_t)&v675[v1356] & v1370, v1360);
          if (!v1425)
            *((_BYTE *)v674 + v677) = 0;
LABEL_950:
          v955 = (_QWORD *)(((unint64_t)v674 + v1398) & 0xFFFFFFFFFFFFFFF8);
          v956 = (_QWORD *)((unint64_t)&v675[v1398] & 0xFFFFFFFFFFFFFFF8);
          *v955 = *v956;
          v955[1] = v956[1];
          *((_BYTE *)v180 + v686) = 35;
          goto LABEL_1225;
        case 36:
          v194 = v1434;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1434, 1, v1388))
          {
            memcpy(v180, v1434, v1448);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1362 + 16))(v180, v1434, v1388);
            __swift_storeEnumTagSinglePayload((uint64_t)v180, 0, 1, v1388);
          }
          v537 = ((unint64_t)v180 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v538 = ((unint64_t)v1434 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v539 = *(_QWORD *)(v538 + 24);
          *(_QWORD *)(v537 + 24) = v539;
          *(_QWORD *)(v537 + 32) = *(_QWORD *)(v538 + 32);
          (**(void (***)(unint64_t, unint64_t))(v539 - 8))(v537, v538);
          v540 = (_QWORD *)((v537 + 47) & 0xFFFFFFFFFFFFFFF8);
          v541 = (_QWORD *)((v538 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v540 = *v541;
          v540[1] = v541[1];
          v542 = ((unint64_t)v540 + 23) & 0xFFFFFFFFFFFFFFF8;
          v543 = ((unint64_t)v541 + 23) & 0xFFFFFFFFFFFFFFF8;
          v544 = *(_QWORD *)(v543 + 24);
          sub_21D7C4C20();
          v202 = v90;
          if (v544 < 0xFFFFFFFF)
          {
            v545 = *(_OWORD *)v543;
            v546 = *(_OWORD *)(v543 + 16);
            *(_QWORD *)(v542 + 32) = *(_QWORD *)(v543 + 32);
            *(_OWORD *)v542 = v545;
            *(_OWORD *)(v542 + 16) = v546;
          }
          else
          {
            *(_QWORD *)(v542 + 24) = v544;
            *(_QWORD *)(v542 + 32) = *(_QWORD *)(v543 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v544 - 8))(v542, v543, v544);
          }
          v417 = v1392;
          *((_BYTE *)v180 + v179) = 36;
LABEL_440:
          v92 = a1;
          goto LABEL_1318;
        case 37:
          v194 = v1434;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1434, 1, v1388))
          {
            memcpy(v180, v1434, v1448);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1362 + 16))(v180, v1434, v1388);
            __swift_storeEnumTagSinglePayload((uint64_t)v180, 0, 1, v1388);
          }
          v202 = v90;
          v547 = ((unint64_t)v180 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v548 = ((unint64_t)v1434 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v549 = *(_QWORD *)(v548 + 24);
          *(_QWORD *)(v547 + 24) = v549;
          *(_QWORD *)(v547 + 32) = *(_QWORD *)(v548 + 32);
          (**(void (***)(unint64_t, unint64_t))(v549 - 8))(v547, v548);
          v550 = (_QWORD *)((v547 + 47) & 0xFFFFFFFFFFFFF8);
          v551 = (_QWORD *)((v548 + 47) & 0xFFFFFFFFFFFFF8);
          *v550 = *v551;
          *(_QWORD *)(((unint64_t)v550 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v551 + 15) & 0xFFFFFFFFFFFFF8);
          v470 = 37;
          goto LABEL_1224;
        case 38:
          v194 = v1434;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1434, 1, v1388))
          {
            memcpy(v180, v1434, v1448);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1362 + 16))(v180, v1434, v1388);
            __swift_storeEnumTagSinglePayload((uint64_t)v180, 0, 1, v1388);
          }
          v552 = ((unint64_t)v180 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v553 = ((unint64_t)v1434 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v554 = *(_QWORD *)(v553 + 24);
          *(_QWORD *)(v552 + 24) = v554;
          *(_QWORD *)(v552 + 32) = *(_QWORD *)(v553 + 32);
          (**(void (***)(unint64_t, unint64_t))(v554 - 8))(v552, v553);
          v555 = (_QWORD *)((v552 + 47) & 0xFFFFFFFFFFFFFFF8);
          v556 = (_QWORD *)((v553 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v555 = *v556;
          v555[1] = v556[1];
          v557 = (_QWORD *)(((unint64_t)v555 + 23) & 0xFFFFFFFFFFFFFFF8);
          v558 = (_QWORD *)(((unint64_t)v556 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v557 = *v558;
          v557[1] = v558[1];
          v559 = ((unint64_t)v557 + 23) & 0xFFFFFFFFFFFFFFF8;
          v560 = ((unint64_t)v558 + 23) & 0xFFFFFFFFFFFFFFF8;
          v561 = *(_QWORD *)(v560 + 24);
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v561 < 0xFFFFFFFF)
          {
            v562 = *(_OWORD *)v560;
            v563 = *(_OWORD *)(v560 + 16);
            *(_QWORD *)(v559 + 32) = *(_QWORD *)(v560 + 32);
            *(_OWORD *)v559 = v562;
            *(_OWORD *)(v559 + 16) = v563;
          }
          else
          {
            *(_QWORD *)(v559 + 24) = v561;
            *(_QWORD *)(v559 + 32) = *(_QWORD *)(v560 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v561 - 8))(v559, v560, v561);
          }
          v202 = v90;
          v564 = (v559 + 47) & 0xFFFFFFFFFFFFFFF8;
          v565 = (v560 + 47) & 0xFFFFFFFFFFFFFFF8;
          v566 = *(_QWORD *)(v565 + 24);
          if (v566 < 0xFFFFFFFF)
          {
            v567 = *(_OWORD *)v565;
            v568 = *(_OWORD *)(v565 + 16);
            *(_QWORD *)(v564 + 32) = *(_QWORD *)(v565 + 32);
            *(_OWORD *)v564 = v567;
            *(_OWORD *)(v564 + 16) = v568;
          }
          else
          {
            *(_QWORD *)(v564 + 24) = v566;
            *(_QWORD *)(v564 + 32) = *(_QWORD *)(v565 + 32);
            (**(void (***)(void))(v566 - 8))();
          }
          v92 = a1;
          v417 = v1392;
          v569 = 38;
          goto LABEL_1367;
        case 39:
          v194 = v1434;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1434, 1, v1388))
          {
            memcpy(v180, v1434, v1448);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1362 + 16))(v180, v1434, v1388);
            __swift_storeEnumTagSinglePayload((uint64_t)v180, 0, 1, v1388);
          }
          v202 = v90;
          v570 = ((unint64_t)v180 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v571 = ((unint64_t)v1434 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v572 = *(_QWORD *)(v571 + 24);
          *(_QWORD *)(v570 + 24) = v572;
          *(_QWORD *)(v570 + 32) = *(_QWORD *)(v571 + 32);
          (**(void (***)(unint64_t, unint64_t))(v572 - 8))(v570, v571);
          *(_QWORD *)((v570 + 47) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v571 + 47) & 0xFFFFFFFFFFFFF8);
          v470 = 39;
          goto LABEL_1224;
        case 40:
          v194 = v1434;
          v239 = v1434[3];
          v180[3] = v239;
          v180[4] = v1434[4];
          (**(void (***)(_QWORD *, _QWORD *))(v239 - 8))(v180, v1434);
          v240 = (void *)(((unint64_t)v180 + v1423) & v1301);
          v241 = (const void *)(((unint64_t)v1434 + v1423) & v1301);
          if (__swift_getEnumTagSinglePayload((uint64_t)v241, 1, v1388))
          {
            memcpy(v240, v241, v1448);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1362 + 16))(v240, v241, v1388);
            __swift_storeEnumTagSinglePayload((uint64_t)v240, 0, 1, v1388);
          }
          v202 = v90;
          *(_QWORD *)(((unint64_t)v240 + v1426) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v241
                                                                                          + v1426) & 0xFFFFFFFFFFFFF8);
          v470 = 40;
          goto LABEL_1224;
        case 41:
          v194 = v1434;
          v242 = v1434[3];
          v180[3] = v242;
          v180[4] = v1434[4];
          (**(void (***)(_QWORD *, _QWORD *))(v242 - 8))(v180, v1434);
          v243 = (void *)(((unint64_t)v180 + v1423) & v1301);
          v244 = (const void *)(((unint64_t)v1434 + v1423) & v1301);
          if (__swift_getEnumTagSinglePayload((uint64_t)v244, 1, v1388))
          {
            memcpy(v243, v244, v1448);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1362 + 16))(v243, v244, v1388);
            __swift_storeEnumTagSinglePayload((uint64_t)v243, 0, 1, v1388);
          }
          v202 = v90;
          v573 = (_QWORD *)(((unint64_t)v243 + v1426) & 0xFFFFFFFFFFFFF8);
          v574 = (_QWORD *)(((unint64_t)v244 + v1426) & 0xFFFFFFFFFFFFFFF8);
          *v573 = *v574;
          *(_QWORD *)(((unint64_t)v573 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v574 + 15) & 0xFFFFFFFFFFFFF8);
          v513 = 41;
          goto LABEL_758;
        case 42:
          v194 = v1434;
          *v180 = *v1434;
          v195 = 42;
          goto LABEL_281;
        case 43:
          v194 = v1434;
          v245 = v1434[3];
          v180[3] = v245;
          v180[4] = v1434[4];
          (**(void (***)(_QWORD *, _QWORD *))(v245 - 8))(v180, v1434);
          v246 = (void *)(((unint64_t)v180 + v1423) & v1301);
          v247 = (const void *)(((unint64_t)v1434 + v1423) & v1301);
          if (__swift_getEnumTagSinglePayload((uint64_t)v247, 1, v1388))
          {
            memcpy(v246, v247, v1448);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1362 + 16))(v246, v247, v1388);
            __swift_storeEnumTagSinglePayload((uint64_t)v246, 0, 1, v1388);
          }
          v202 = v90;
          v517 = 43;
          goto LABEL_1315;
        case 44:
          v194 = v1434;
          *v180 = *v1434;
          v195 = 44;
          goto LABEL_281;
        case 45:
          v248 = ~v1442;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1434, 1, v1388))
          {
            memcpy(v180, v1434, v1448);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1362 + 16))(v180, v1434, v1388);
            __swift_storeEnumTagSinglePayload((uint64_t)v180, 0, 1, v1388);
          }
          v575 = ((unint64_t)v180 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v576 = ((unint64_t)v1434 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v577 = *(_QWORD *)(v576 + 24);
          *(_QWORD *)(v575 + 24) = v577;
          *(_QWORD *)(v575 + 32) = *(_QWORD *)(v576 + 32);
          (**(void (***)(unint64_t, unint64_t))(v577 - 8))(v575, v576);
          v578 = (v575 + 47) & 0xFFFFFFFFFFFFFFF8;
          v579 = (v576 + 47) & 0xFFFFFFFFFFFFFFF8;
          v580 = *(_QWORD *)(v579 + 24);
          if (v580 < 0xFFFFFFFF)
          {
            v581 = *(_OWORD *)v579;
            v582 = *(_OWORD *)(v579 + 16);
            *(_QWORD *)(v578 + 32) = *(_QWORD *)(v579 + 32);
            *(_OWORD *)v578 = v581;
            *(_OWORD *)(v578 + 16) = v582;
          }
          else
          {
            *(_QWORD *)(v578 + 24) = v580;
            *(_QWORD *)(v578 + 32) = *(_QWORD *)(v579 + 32);
            (**(void (***)(unint64_t, unint64_t))(v580 - 8))(v578, v579);
          }
          v583 = (_QWORD *)((v578 + 47) & 0xFFFFFFFFFFFFFFF8);
          v584 = (_QWORD *)((v579 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v583 = *v584;
          v583[1] = v584[1];
          v585 = (_QWORD *)(((unint64_t)v583 + 23) & 0xFFFFFFFFFFFFFFF8);
          v586 = (_QWORD *)(((unint64_t)v584 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v585 = *v586;
          v585[1] = v586[1];
          v587 = (_QWORD *)(((unint64_t)v585 + 23) & 0xFFFFFFFFFFFFFFF8);
          v588 = (_QWORD *)(((unint64_t)v586 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v587 = *v588;
          v587[1] = v588[1];
          v589 = (_QWORD *)(((unint64_t)v587 + 23) & 0xFFFFFFFFFFFFFFF8);
          v590 = (_QWORD *)(((unint64_t)v588 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v589 = *v590;
          v589[1] = v590[1];
          v591 = ((unint64_t)v589 + 23) & 0xFFFFFFFFFFFFFFF8;
          v592 = ((unint64_t)v590 + 23) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v591 = *(_QWORD *)v592;
          *(_QWORD *)(v591 + 8) = *(_QWORD *)(v592 + 8);
          *(_BYTE *)(v591 + 16) = *(_BYTE *)(v592 + 16);
          v593 = (_QWORD *)(((unint64_t)v589 + 47) & 0xFFFFFFFFFFFFFFF8);
          v594 = (_QWORD *)(((unint64_t)v590 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v593 = *v594;
          v595 = (void *)(((unint64_t)v593 + v1396) & v1372);
          v596 = (_BYTE *)(((unint64_t)v594 + v1396) & v1372);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v1425)
          {
            v597 = v1357;
            v598 = v1379;
            if (v1352 >= v1357)
            {
              v599 = (uint64_t)v596;
              v597 = v1352;
              v600 = v1355;
            }
            else
            {
              v599 = (unint64_t)&v596[v1356] & v1370;
              v600 = v1360;
            }
            v694 = __swift_getEnumTagSinglePayload(v599, v597, v600);
            v179 = v1403;
          }
          else
          {
            v598 = v1379;
            v179 = v1403;
            if (!v596[v1379])
              goto LABEL_1148;
            v680 = (v596[v1379] - 1) << v1300;
            if (v1379 > 3)
              v680 = 0;
            if ((_DWORD)v1379)
            {
              if (v1379 <= 3)
                v681 = v1379;
              else
                v681 = 4;
              __asm { BR              X11 }
            }
            v694 = v680 + 1;
          }
          if (v694)
          {
            memcpy(v595, v596, v1424);
            goto LABEL_1150;
          }
LABEL_1148:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1349 + 16))(v595, v596, v1355);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1350 + 16))(((unint64_t)v595 + v1356) & v1370, (unint64_t)&v596[v1356] & v1370, v1360);
          if (!v1425)
            *((_BYTE *)v595 + v598) = 0;
LABEL_1150:
          v1068 = (void *)(((unint64_t)v595 + v1390) & v1372);
          v1069 = (_BYTE *)((unint64_t)&v596[v1390] & v1372);
          if (v1425)
          {
            v1070 = v1357;
            v1071 = v1352;
            if (v1352 >= v1357)
            {
              v1072 = (unint64_t)&v596[v1390] & v1372;
              v1073 = v1355;
            }
            else
            {
              v1072 = (unint64_t)&v1069[v1356] & v1370;
              v1071 = v1357;
              v1073 = v1360;
            }
            v1076 = __swift_getEnumTagSinglePayload(v1072, v1071, v1073);
          }
          else
          {
            v1070 = v1357;
            if (!v1069[v598])
              goto LABEL_1190;
            v1074 = (v1069[v598] - 1) << v1300;
            if (v598 > 3)
              v1074 = 0;
            if ((_DWORD)v598)
            {
              if (v598 <= 3)
                v1075 = v598;
              else
                v1075 = 4;
              __asm { BR              X11 }
            }
            v1076 = v1074 + 1;
          }
          if (v1076)
          {
            memcpy(v1068, v1069, v1424);
            goto LABEL_1192;
          }
LABEL_1190:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1349 + 16))(v1068, v1069, v1355);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1350 + 16))(((unint64_t)v1068 + v1356) & v1370, (unint64_t)&v1069[v1356] & v1370, v1360);
          if (!v1425)
            *((_BYTE *)v1068 + v598) = 0;
LABEL_1192:
          v1089 = (_QWORD *)(((unint64_t)v1068 + v1418) & v248);
          v1090 = (uint64_t *)((unint64_t)&v1069[v1418] & v248);
          v1091 = v1421;
          if ((v1070 & 0x80000000) != 0)
          {
            v1093 = __swift_getEnumTagSinglePayload(((unint64_t)v1090 + v1342) & v1370, v1070, v1360);
            v1091 = v1421;
          }
          else
          {
            v1092 = *v1090;
            if ((unint64_t)*v1090 >= 0xFFFFFFFF)
              LODWORD(v1092) = -1;
            v1093 = v1092 + 1;
          }
          if (v1093)
          {
            memcpy(v1089, v1090, v1091);
          }
          else
          {
            *v1089 = *v1090;
            v1094 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1350 + 16);
            sub_21D7C4C20();
            v1094(((unint64_t)v1089 + v1342) & v1370, ((unint64_t)v1090 + v1342) & v1370, v1360);
            v179 = v1403;
          }
          v1095 = (_QWORD *)(((unint64_t)v1089 + v1318) & v248);
          v1096 = (uint64_t *)(((unint64_t)v1090 + v1318) & v248);
          if ((v1070 & 0x80000000) != 0)
          {
            v1098 = __swift_getEnumTagSinglePayload(((unint64_t)v1096 + v1342) & v1370, v1070, v1360);
          }
          else
          {
            v1097 = *v1096;
            if ((unint64_t)*v1096 >= 0xFFFFFFFF)
              LODWORD(v1097) = -1;
            v1098 = v1097 + 1;
          }
          if (v1098)
          {
            v1099 = v1421;
            memcpy(v1095, v1096, v1421);
          }
          else
          {
            *v1095 = *v1096;
            v1100 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1350 + 16);
            v1099 = v1421;
            sub_21D7C4C20();
            v1100(((unint64_t)v1095 + v1342) & v1370, ((unint64_t)v1096 + v1342) & v1370, v1360);
            v179 = v1403;
          }
          v1101 = (char *)v1095 + v1099;
          *v1101 = *((_BYTE *)v1096 + v1099);
          v1101[1] = *((_BYTE *)v1096 + v1099 + 1);
          v1102 = (_QWORD *)(((unint64_t)v1095 + v1099 + 9) & 0xFFFFFFFFFFFFFFF8);
          v1103 = (_QWORD *)(((unint64_t)v1096 + v1099 + 9) & 0xFFFFFFFFFFFFFFF8);
          *v1102 = *v1103;
          v1102[1] = v1103[1];
          v1104 = ((unint64_t)v1102 + 23) & 0xFFFFFFFFFFFFFFF8;
          v1105 = ((unint64_t)v1103 + 23) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v1104 = *(_QWORD *)v1105;
          *(_QWORD *)(v1104 + 8) = *(_QWORD *)(v1105 + 8);
          *(_BYTE *)(v1104 + 16) = *(_BYTE *)(v1105 + 16);
          v1106 = ((unint64_t)v1102 + 47) & 0xFFFFFFFFFFFFFFF8;
          v1107 = ((unint64_t)v1103 + 47) & 0xFFFFFFFFFFFFFFF8;
          v1108 = *(_QWORD *)(v1107 + 24);
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v1108 < 0xFFFFFFFF)
          {
            v1109 = *(_OWORD *)v1107;
            v1110 = *(_OWORD *)(v1107 + 16);
            *(_QWORD *)(v1106 + 32) = *(_QWORD *)(v1107 + 32);
            *(_OWORD *)v1106 = v1109;
            *(_OWORD *)(v1106 + 16) = v1110;
          }
          else
          {
            *(_QWORD *)(v1106 + 24) = v1108;
            *(_QWORD *)(v1106 + 32) = *(_QWORD *)(v1107 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v1108 - 8))(v1106, v1107, v1108);
          }
          v202 = v1401;
          v194 = v1434;
          v1111 = (v1441 + v1106) & v1302;
          v1112 = (v1441 + v1107) & v1302;
          if (v1354 >= 0x7FFFFFFF)
          {
            v1118 = (const void *)((v1359 + v1112) & v1368);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1118, v1346, v1358) <= 1)
            {
              v1114 = v180;
              v1115 = (char *)(v1112 + 8);
              v1116 = v1359;
              v1117 = ~v1428;
LABEL_1218:
              *(_BYTE *)v1111 = *(_BYTE *)v1112;
              *(_QWORD *)(v1111 + 8) = *(_QWORD *)(v1112 + 8);
              *(_QWORD *)(v1111 + 16) = *((_QWORD *)v1115 + 1);
              *(_QWORD *)(v1111 + 24) = *((_QWORD *)v1115 + 2);
              *(_QWORD *)(v1111 + 32) = *((_QWORD *)v1115 + 3);
              *(_QWORD *)(v1111 + 40) = *((_QWORD *)v1115 + 4);
              *(_QWORD *)(v1111 + 48) = *((_QWORD *)v1115 + 5);
              *(_QWORD *)(v1111 + 56) = *((_QWORD *)v1115 + 6);
              *(_QWORD *)(v1111 + 64) = *((_QWORD *)v1115 + 7);
              *(_QWORD *)(v1111 + 72) = *((_QWORD *)v1115 + 8);
              *(_QWORD *)(v1111 + 80) = *((_QWORD *)v1115 + 9);
              *(_QWORD *)(v1111 + 88) = *((_QWORD *)v1115 + 10);
              *(_QWORD *)(v1111 + 96) = *((_QWORD *)v1115 + 11);
              v1119 = *((_QWORD *)v1115 + 12);
              *(_BYTE *)(v1111 + 112) = v1115[104];
              *(_QWORD *)(v1111 + 104) = v1119;
              v1120 = (void *)((v1116 + v1111) & v1117);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1118, 1, v1358))
              {
                memcpy(v1120, v1118, v1419);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v1120, v1118, v1358);
                __swift_storeEnumTagSinglePayload((uint64_t)v1120, 0, 1, v1358);
              }
              v202 = v1401;
              v180 = v1114;
              v194 = v1434;
              v179 = v1403;
              v1121 = v1422;
LABEL_1223:
              v1122 = (_QWORD *)(((v1111 | 7) + v1121) & 0xFFFFFFFFFFFFFFF8);
              v1123 = (_QWORD *)(((v1112 | 7) + v1121) & 0xFFFFFFFFFFFFFFF8);
              *v1122 = *v1123;
              v1122[1] = v1123[1];
              v470 = 45;
              goto LABEL_1224;
            }
          }
          else
          {
            v1113 = *(_QWORD *)(v1112 + 16);
            if (v1113 >= 0xFFFFFFFF)
              LODWORD(v1113) = -1;
            if ((int)v1113 - 1 < 0)
            {
              v1114 = v180;
              v1115 = (char *)(v1112 + 8);
              v1116 = v1359;
              v1117 = ~v1428;
              v1118 = (const void *)((v1359 + v1112) & v1368);
              goto LABEL_1218;
            }
          }
          v1121 = v1422;
          memcpy((void *)v1111, (const void *)v1112, v1422);
          goto LABEL_1223;
        case 46:
          v194 = v1434;
          *v180 = *v1434;
          v195 = 46;
          goto LABEL_281;
        case 47:
          v194 = v1434;
          *v180 = *v1434;
          v195 = 47;
          goto LABEL_281;
        case 48:
          v194 = v1434;
          *v180 = *v1434;
          v195 = 48;
          goto LABEL_281;
        case 49:
          v194 = v1434;
          *v180 = *v1434;
          v195 = 49;
          goto LABEL_281;
        case 50:
          v249 = v1434[3];
          v180[3] = v249;
          v180[4] = v1434[4];
          (**(void (***)(_QWORD *, _QWORD *))(v249 - 8))(v180, v1434);
          v250 = (void *)(((unint64_t)v180 + v1423) & v1301);
          v251 = (const void *)(((unint64_t)v1434 + v1423) & v1301);
          if (__swift_getEnumTagSinglePayload((uint64_t)v251, 1, v1388))
          {
            memcpy(v250, v251, v1448);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1362 + 16))(v250, v251, v1388);
            __swift_storeEnumTagSinglePayload((uint64_t)v250, 0, 1, v1388);
          }
          v601 = (_QWORD *)(((unint64_t)v250 + v1426) & 0xFFFFFFFFFFFFFFF8);
          v602 = (_QWORD *)(((unint64_t)v251 + v1426) & 0xFFFFFFFFFFFFFFF8);
          *v601 = *v602;
          v601[1] = v602[1];
          v603 = ((unint64_t)v601 + 23) & 0xFFFFFFFFFFFFFFF8;
          v604 = ((unint64_t)v602 + 23) & 0xFFFFFFFFFFFFFFF8;
          v605 = *(_QWORD *)(v604 + 24);
          sub_21D7C4C20();
          if (v605 < 0xFFFFFFFF)
          {
            v606 = *(_OWORD *)v604;
            v607 = *(_OWORD *)(v604 + 16);
            *(_QWORD *)(v603 + 32) = *(_QWORD *)(v604 + 32);
            *(_OWORD *)v603 = v606;
            *(_OWORD *)(v603 + 16) = v607;
          }
          else
          {
            *(_QWORD *)(v603 + 24) = v605;
            *(_QWORD *)(v603 + 32) = *(_QWORD *)(v604 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v605 - 8))(v603, v604, v605);
          }
          v608 = (_QWORD *)((v603 + 47) & 0xFFFFFFFFFFFFF8);
          v609 = (_QWORD *)((v604 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v608 = *v609;
          v610 = (_QWORD *)(((unint64_t)v608 + 15) & 0xFFFFFFFFFFFFFFF8);
          v611 = (_QWORD *)(((unint64_t)v609 + 15) & 0xFFFFFFFFFFFFFFF8);
          *v610 = *v611;
          v610[1] = v611[1];
          v612 = (char *)(((unint64_t)v610 + v1405) & v184);
          v613 = (char *)(((unint64_t)v611 + v1405) & v184);
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v1347 < 0x7FFFFFFF)
          {
            v202 = v90;
            v614 = v1310;
            if (*(_QWORD *)(((unint64_t)&v613[v1426] & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
              goto LABEL_472;
          }
          else
          {
            v202 = v90;
            v614 = v1310;
            if (__swift_getEnumTagSinglePayload((uint64_t)v613, v1416, v1388) >= 2)
            {
LABEL_472:
              v615 = v1415;
              memcpy(v612, v613, v1415);
              goto LABEL_601;
            }
          }
          if (__swift_getEnumTagSinglePayload((uint64_t)v613, 1, v1388))
          {
            memcpy(v612, v613, v1448);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v1362 + 16))(v612, v613, v1388);
            __swift_storeEnumTagSinglePayload((uint64_t)v612, 0, 1, v1388);
          }
          v715 = (unint64_t)&v612[v1426] & 0xFFFFFFFFFFFFFFF8;
          v716 = (unint64_t)&v613[v1426] & 0xFFFFFFFFFFFFFFF8;
          v717 = *(_QWORD *)(v716 + 24);
          *(_QWORD *)(v715 + 24) = v717;
          *(_QWORD *)(v715 + 32) = *(_QWORD *)(v716 + 32);
          (**(void (***)(unint64_t, unint64_t))(v717 - 8))(v715, v716);
          v718 = (v715 + 47) & 0xFFFFFFFFFFFFFFF8;
          v719 = (v716 + 47) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v718 = *(_QWORD *)v719;
          *(_QWORD *)(v718 + 8) = *(_QWORD *)(v719 + 8);
          *(_BYTE *)(v718 + 16) = *(_BYTE *)(v719 + 16);
          sub_21D7C4C20();
          v202 = v90;
          v615 = v1415;
          if (v1416)
            v615 = ((((v1378 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 17;
LABEL_601:
          v720 = &v612[v615];
          v721 = &v613[v615];
          *(_QWORD *)(v720 + 7) = *(_QWORD *)&v613[v615 + 7];
          *(_QWORD *)(v720 + 15) = *(_QWORD *)&v613[v615 + 15];
          v722 = (_QWORD *)((unint64_t)&v612[v615 + v614] & v1302);
          v723 = (_QWORD *)((unint64_t)&v721[v614] & v1302);
          sub_21D7C4C20();
          if (v1354 >= 0x7FFFFFFF)
          {
            v729 = (const void *)(((unint64_t)v723 + v1359) & v1368);
            v179 = v1403;
            v194 = v1434;
            if (__swift_getEnumTagSinglePayload((uint64_t)v729, v1346, v1358) <= 1)
            {
              v725 = v1434;
              v726 = (char *)(v723 + 1);
              v727 = v1359;
              v728 = ~v1428;
              goto LABEL_608;
            }
          }
          else
          {
            v724 = v723[2];
            if (v724 >= 0xFFFFFFFF)
              LODWORD(v724) = -1;
            v179 = v1403;
            v194 = v1434;
            if ((int)v724 - 1 < 0)
            {
              v725 = v1434;
              v726 = (char *)(v723 + 1);
              v727 = v1359;
              v728 = ~v1428;
              v729 = (const void *)(((unint64_t)v723 + v1359) & v1368);
LABEL_608:
              *(_BYTE *)v722 = *(_BYTE *)v723;
              v722[1] = v723[1];
              v722[2] = *((_QWORD *)v726 + 1);
              v722[3] = *((_QWORD *)v726 + 2);
              v722[4] = *((_QWORD *)v726 + 3);
              v722[5] = *((_QWORD *)v726 + 4);
              v722[6] = *((_QWORD *)v726 + 5);
              v722[7] = *((_QWORD *)v726 + 6);
              v722[8] = *((_QWORD *)v726 + 7);
              v722[9] = *((_QWORD *)v726 + 8);
              v722[10] = *((_QWORD *)v726 + 9);
              v722[11] = *((_QWORD *)v726 + 10);
              v722[12] = *((_QWORD *)v726 + 11);
              v730 = *((_QWORD *)v726 + 12);
              *((_BYTE *)v722 + 112) = v726[104];
              v722[13] = v730;
              v731 = (void *)(((unint64_t)v722 + v727) & v728);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              if (__swift_getEnumTagSinglePayload((uint64_t)v729, 1, v1358))
              {
                memcpy(v731, v729, v1419);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v731, v729, v1358);
                __swift_storeEnumTagSinglePayload((uint64_t)v731, 0, 1, v1358);
              }
              v202 = v90;
              v194 = v725;
              v179 = v1403;
              goto LABEL_652;
            }
          }
          memcpy(v722, v723, v1422);
LABEL_652:
          v517 = 50;
LABEL_1315:
          *((_BYTE *)v180 + v179) = v517;
LABEL_1316:
          v92 = a1;
LABEL_1317:
          v417 = v1392;
          goto LABEL_1318;
        case 51:
          if (__swift_getEnumTagSinglePayload((uint64_t)v1434, 1, v1388))
          {
            memcpy(v180, v1434, v1448);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1362 + 16))(v180, v1434, v1388);
            __swift_storeEnumTagSinglePayload((uint64_t)v180, 0, 1, v1388);
          }
          v616 = ((unint64_t)v180 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v617 = ((unint64_t)v1434 + v1426) & 0xFFFFFFFFFFFFFFF8;
          v618 = *(_QWORD *)(v617 + 24);
          *(_QWORD *)(v616 + 24) = v618;
          *(_QWORD *)(v616 + 32) = *(_QWORD *)(v617 + 32);
          (**(void (***)(unint64_t, unint64_t))(v618 - 8))(v616, v617);
          v619 = (v616 + 47) & 0xFFFFFFFFFFFFFFF8;
          v620 = (v617 + 47) & 0xFFFFFFFFFFFFFFF8;
          v621 = *(_QWORD *)(v620 + 24);
          if (v621 < 0xFFFFFFFF)
          {
            v622 = *(_OWORD *)v620;
            v623 = *(_OWORD *)(v620 + 16);
            *(_QWORD *)(v619 + 32) = *(_QWORD *)(v620 + 32);
            *(_OWORD *)v619 = v622;
            *(_OWORD *)(v619 + 16) = v623;
          }
          else
          {
            *(_QWORD *)(v619 + 24) = v621;
            *(_QWORD *)(v619 + 32) = *(_QWORD *)(v620 + 32);
            (**(void (***)(unint64_t, unint64_t))(v621 - 8))(v619, v620);
          }
          v624 = v1379;
          v625 = (_QWORD *)((v619 + 47) & 0xFFFFFFFFFFFFFFF8);
          v626 = (_QWORD *)((v620 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v625 = *v626;
          v625[1] = v626[1];
          v627 = (_QWORD *)(((unint64_t)v625 + 23) & 0xFFFFFFFFFFFFFFF8);
          v628 = (_QWORD *)(((unint64_t)v626 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v627 = *v628;
          v627[1] = v628[1];
          v629 = (_QWORD *)(((unint64_t)v627 + 23) & 0xFFFFFFFFFFFFFFF8);
          v630 = (_QWORD *)(((unint64_t)v628 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v629 = *v630;
          v631 = (_QWORD *)(((unint64_t)v629 + v1308) & v1439);
          v632 = (_QWORD *)(((unint64_t)v630 + v1308) & v1439);
          sub_21D7C4C20();
          sub_21D7C4C20();
          sub_21D7C4C20();
          if (v1299 > 0x7FFFFFFE)
          {
            v635 = (_QWORD *)(((unint64_t)v632 + 23) & 0xFFFFFFFFFFFFFFF8);
            v636 = ((unint64_t)v635 + 23) & 0xFFFFFFFFFFFFFFF8;
            v637 = __swift_getEnumTagSinglePayload((v1431 + v636 + 33) & v183, v1299, v1340);
            v202 = v90;
            v634 = v1440;
            if (!v637)
            {
              v1383 = v180;
              goto LABEL_612;
            }
          }
          else
          {
            v633 = v632[1];
            if (v633 >= 0xFFFFFFFF)
              LODWORD(v633) = -1;
            v202 = v90;
            v634 = v1440;
            if ((v633 + 1) <= 1)
            {
              v1383 = v180;
              v635 = (_QWORD *)(((unint64_t)v632 + 23) & 0xFFFFFFFFFFFFFFF8);
              v636 = ((unint64_t)v635 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_612:
              *v631 = *v632;
              v631[1] = v632[1];
              v732 = (_QWORD *)(((unint64_t)v631 + 23) & 0xFFFFFFFFFFFFFFF8);
              *v732 = *v635;
              v732[1] = v635[1];
              v733 = ((unint64_t)v732 + 23) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)v733 = *(_QWORD *)v636;
              *(_QWORD *)(v733 + 8) = *(_QWORD *)(v636 + 8);
              *(_BYTE *)(v733 + 16) = *(_BYTE *)(v636 + 16);
              v734 = ((unint64_t)v732 + 47) & 0xFFFFFFFFFFFFFFF8;
              v735 = ((unint64_t)v635 + 47) & 0xFFFFFFFFFFFFFFF8;
              v736 = *(void **)v735;
              *(_QWORD *)v734 = *(_QWORD *)v735;
              *(_BYTE *)(v734 + 8) = *(_BYTE *)(v735 + 8);
              v737 = (v1431 + 9 + v734) & v183;
              v738 = (v1431 + 9 + v735) & v183;
              v739 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1404 + 16);
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              v740 = v736;
              v739(v737, v738, v1340);
              v202 = v90;
              v180 = v1383;
              v624 = v1379;
LABEL_613:
              v741 = (void *)(((unint64_t)v631 + v1314) & v1372);
              v742 = (_BYTE *)(((unint64_t)v632 + v1314) & v1372);
              v179 = v1403;
              if (v1425)
              {
                v743 = v1352;
                if (v1352 >= v1357)
                {
                  v744 = (uint64_t)v742;
                  v745 = v1355;
                }
                else
                {
                  v744 = (unint64_t)&v742[v1356] & v1370;
                  v743 = v1357;
                  v745 = v1360;
                }
                v748 = __swift_getEnumTagSinglePayload(v744, v743, v745);
              }
              else
              {
                if (!v742[v624])
                  goto LABEL_1166;
                v746 = (v742[v624] - 1) << v1300;
                if (v624 > 3)
                  v746 = 0;
                if ((_DWORD)v624)
                {
                  if (v624 <= 3)
                    v747 = v624;
                  else
                    v747 = 4;
                  __asm { BR              X11 }
                }
                v748 = v746 + 1;
              }
              if (v748)
              {
                memcpy(v741, v742, v1424);
                goto LABEL_1168;
              }
LABEL_1166:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1349 + 16))(v741, v742, v1355);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1350 + 16))(((unint64_t)v741 + v1356) & v1370, (unint64_t)&v742[v1356] & v1370, v1360);
              if (!v1425)
                *((_BYTE *)v741 + v624) = 0;
LABEL_1168:
              v1077 = (_QWORD *)(((unint64_t)v741 + v1398) & 0xFFFFFFFFFFFFFFF8);
              v1078 = (_QWORD *)((unint64_t)&v742[v1398] & 0xFFFFFFFFFFFFFFF8);
              *v1077 = *v1078;
              v1077[1] = v1078[1];
              v1079 = ((unint64_t)v1077 + 23) & 0xFFFFFFFFFFFFFFF8;
              v1080 = ((unint64_t)v1078 + 23) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)v1079 = *(_QWORD *)v1080;
              *(_BYTE *)(v1079 + 8) = *(_BYTE *)(v1080 + 8);
              v1081 = (void *)((v1317 + v1079) & v1372);
              v1082 = (_BYTE *)((v1317 + v1080) & v1372);
              sub_21D7C4C20();
              sub_21D7C4C20();
              if (v1425)
              {
                v1083 = v1352;
                if (v1352 >= v1357)
                {
                  v1084 = (uint64_t)v1082;
                  v1085 = v1355;
                }
                else
                {
                  v1084 = (unint64_t)&v1082[v1356] & v1370;
                  v1083 = v1357;
                  v1085 = v1360;
                }
                v1088 = __swift_getEnumTagSinglePayload(v1084, v1083, v1085);
              }
              else
              {
                if (!v1082[v624])
                  goto LABEL_1228;
                v1086 = (v1082[v624] - 1) << v1300;
                if (v624 > 3)
                  v1086 = 0;
                if ((_DWORD)v624)
                {
                  if (v624 <= 3)
                    v1087 = v624;
                  else
                    v1087 = 4;
                  __asm { BR              X11 }
                }
                v1088 = v1086 + 1;
              }
              if (v1088)
              {
                memcpy(v1081, v1082, v1424);
                goto LABEL_1230;
              }
LABEL_1228:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1349 + 16))(v1081, v1082, v1355);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1350 + 16))(((unint64_t)v1081 + v1356) & v1370, (unint64_t)&v1082[v1356] & v1370, v1360);
              if (!v1425)
                *((_BYTE *)v1081 + v624) = 0;
LABEL_1230:
              v1124 = (_QWORD *)(((unint64_t)v1081 + v1398) & 0xFFFFFFFFFFFFFFF8);
              v1125 = (_QWORD *)((unint64_t)&v1082[v1398] & 0xFFFFFFFFFFFFFFF8);
              *v1124 = *v1125;
              v1124[1] = v1125[1];
              v1126 = (void *)(((unint64_t)v1124 + v1417) & v1372);
              v1127 = (_BYTE *)(((unint64_t)v1125 + v1417) & v1372);
              sub_21D7C4C20();
              if (v1425)
              {
                v1128 = v1352;
                if (v1352 >= v1357)
                {
                  v1129 = (uint64_t)v1127;
                  v1130 = v1355;
                }
                else
                {
                  v1129 = (unint64_t)&v1127[v1356] & v1370;
                  v1128 = v1357;
                  v1130 = v1360;
                }
                v1133 = __swift_getEnumTagSinglePayload(v1129, v1128, v1130);
              }
              else
              {
                if (!v1127[v624])
                  goto LABEL_1246;
                v1131 = (v1127[v624] - 1) << v1300;
                if (v624 > 3)
                  v1131 = 0;
                if ((_DWORD)v624)
                {
                  if (v624 <= 3)
                    v1132 = v624;
                  else
                    v1132 = 4;
                  __asm { BR              X11 }
                }
                v1133 = v1131 + 1;
              }
              if (v1133)
              {
                memcpy(v1126, v1127, v1424);
                goto LABEL_1248;
              }
LABEL_1246:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1349 + 16))(v1126, v1127, v1355);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1350 + 16))(((unint64_t)v1126 + v1356) & v1370, (unint64_t)&v1127[v1356] & v1370, v1360);
              if (!v1425)
                *((_BYTE *)v1126 + v624) = 0;
LABEL_1248:
              v1134 = (_QWORD *)(((unint64_t)v1126 + v1287) & v1302);
              v1135 = (_QWORD *)((unint64_t)&v1127[v1287] & v1302);
              if (v1354 >= 0x7FFFFFFF)
              {
                v1142 = (const void *)(((unint64_t)v1135 + v1359) & v1368);
                v194 = v1434;
                if (__swift_getEnumTagSinglePayload((uint64_t)v1142, v1346, v1358) <= 1)
                {
                  v1137 = v1434;
                  v1138 = v180;
                  v1139 = (char *)(v1135 + 1);
                  v1140 = v1359;
                  v1141 = ~v1428;
                  goto LABEL_1255;
                }
              }
              else
              {
                v1136 = v1135[2];
                if (v1136 >= 0xFFFFFFFF)
                  LODWORD(v1136) = -1;
                v194 = v1434;
                if ((int)v1136 - 1 < 0)
                {
                  v1137 = v1434;
                  v1138 = v180;
                  v1139 = (char *)(v1135 + 1);
                  v1140 = v1359;
                  v1141 = ~v1428;
                  v1142 = (const void *)(((unint64_t)v1135 + v1359) & v1368);
LABEL_1255:
                  *(_BYTE *)v1134 = *(_BYTE *)v1135;
                  v1134[1] = v1135[1];
                  v1134[2] = *((_QWORD *)v1139 + 1);
                  v1134[3] = *((_QWORD *)v1139 + 2);
                  v1134[4] = *((_QWORD *)v1139 + 3);
                  v1134[5] = *((_QWORD *)v1139 + 4);
                  v1134[6] = *((_QWORD *)v1139 + 5);
                  v1134[7] = *((_QWORD *)v1139 + 6);
                  v1134[8] = *((_QWORD *)v1139 + 7);
                  v1134[9] = *((_QWORD *)v1139 + 8);
                  v1134[10] = *((_QWORD *)v1139 + 9);
                  v1134[11] = *((_QWORD *)v1139 + 10);
                  v1134[12] = *((_QWORD *)v1139 + 11);
                  v1143 = *((_QWORD *)v1139 + 12);
                  *((_BYTE *)v1134 + 112) = v1139[104];
                  v1134[13] = v1143;
                  v1144 = (void *)(((unint64_t)v1134 + v1140) & v1141);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (__swift_getEnumTagSinglePayload((uint64_t)v1142, 1, v1358))
                  {
                    memcpy(v1144, v1142, v1419);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1343 + 16))(v1144, v1142, v1358);
                    __swift_storeEnumTagSinglePayload((uint64_t)v1144, 0, 1, v1358);
                  }
                  v202 = v90;
                  v180 = v1138;
                  v194 = v1137;
                  v179 = v1403;
                  goto LABEL_1260;
                }
              }
              memcpy(v1134, v1135, v1422);
LABEL_1260:
              v517 = 51;
              goto LABEL_1315;
            }
          }
          memcpy(v631, v632, v634);
          goto LABEL_613;
        case 52:
          v194 = v1434;
          *v180 = *v1434;
          v195 = 52;
LABEL_281:
          *((_BYTE *)v180 + v179) = v195;
          sub_21D7C4C20();
LABEL_282:
          v92 = a1;
          v202 = v90;
          goto LABEL_1317;
        default:
          if (v179 <= 3)
            v182 = v179;
          else
            v182 = 4;
          __asm { BR              X12 }
          return result;
      }
    case 2:
      v92 = a1;
      *a1 = *a2;
      v99 = 2;
      goto LABEL_122;
    case 3:
      v92 = a1;
      *a1 = *a2;
      v99 = 3;
LABEL_122:
      *((_BYTE *)v92 + v90) = v99;
      sub_21D7C4C20();
      return v92;
    default:
      v92 = a1;
      memcpy(a1, a2, v90 + 1);
      return v92;
  }
}

_QWORD *sub_21CEEBD48(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  unsigned int v19;
  int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  int v30;
  int v31;
  size_t v32;
  size_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unsigned int v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  size_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  size_t v62;
  unint64_t v63;
  size_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unsigned __int8 *v99;
  unint64_t v100;
  unsigned int v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  int v114;
  int EnumTagSinglePayload;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  size_t v121;
  size_t v122;
  void (*v123)(uint64_t, uint64_t);
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  unint64_t v157;
  uint64_t v158;
  unint64_t v159;
  unint64_t v160;
  uint64_t v161;
  unint64_t v162;
  unint64_t v163;
  unint64_t v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  uint64_t v176;
  unint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  unint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  unint64_t v191;
  unint64_t v192;
  unint64_t v193;
  unint64_t v194;
  uint64_t v195;
  unint64_t v196;
  uint64_t v197;
  unint64_t v198;
  unint64_t v199;
  size_t v200;
  size_t v201;
  unint64_t v202;
  unint64_t v203;
  int v204;
  uint64_t v205;
  void *v206;
  char *v207;
  uint64_t v208;
  size_t v209;
  char v210;
  char *v211;
  _BYTE *v212;
  unsigned __int8 *v213;
  unsigned int v214;
  uint64_t v215;
  unint64_t v216;
  _QWORD *v217;
  _QWORD *v218;
  unsigned int v219;
  size_t v220;
  uint64_t v221;
  void *v222;
  const void *v223;
  _QWORD *v224;
  uint64_t v225;
  void *v226;
  _QWORD *v227;
  _QWORD *v228;
  unint64_t v229;
  unint64_t v230;
  unint64_t v231;
  unint64_t v232;
  unint64_t v233;
  unint64_t v234;
  uint64_t v235;
  _QWORD *v236;
  _QWORD *v237;
  unint64_t v238;
  unint64_t v239;
  unint64_t v240;
  __int128 v241;
  __int128 v242;
  _QWORD *v243;
  _BYTE *v244;
  unint64_t v245;
  _BYTE *v246;
  uint64_t v247;
  uint64_t v248;
  const void *v249;
  uint64_t v250;
  void *v251;
  unint64_t v252;
  unint64_t v253;
  unint64_t v254;
  uint64_t v255;
  unint64_t v256;
  uint64_t v257;
  uint64_t v258;
  unint64_t v259;
  unint64_t v260;
  uint64_t v261;
  unsigned int v262;
  unint64_t v263;
  unint64_t v264;
  uint64_t v265;
  uint64_t v266;
  unint64_t v267;
  __int128 v268;
  __int128 v269;
  unint64_t v270;
  _QWORD *v271;
  uint64_t v272;
  __int128 v273;
  __int128 v274;
  _QWORD *v275;
  _QWORD *v276;
  _QWORD *v277;
  _QWORD *v278;
  void *v279;
  _BYTE *v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  int v284;
  int v285;
  int v286;
  id *v287;
  unint64_t v288;
  int v289;
  int v290;
  size_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  unint64_t v295;
  id *v296;
  unint64_t v297;
  id *v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  int v302;
  size_t v303;
  int v304;
  id *v305;
  unint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  int v310;
  int v311;
  uint64_t v312;
  int v313;
  int v314;
  int v315;
  int v316;
  int v317;
  int v318;
  int v319;
  int v320;
  int v321;
  int v322;
  uint64_t v323;
  uint64_t v324;
  int v325;
  int v326;
  int v327;
  int v328;
  int v329;
  int v330;
  int v331;
  int v332;
  int v333;
  int v334;
  int v335;
  int v336;
  int v337;
  int v338;
  int v339;
  unint64_t v340;
  unint64_t v341;
  int v342;
  unsigned int v343;
  unint64_t v344;
  unint64_t v345;
  int v346;
  unsigned int v347;
  _BYTE *v348;
  unsigned __int8 *v349;
  unint64_t v350;
  unint64_t v351;
  unint64_t v352;
  __int128 v353;
  __int128 v354;
  __int128 v355;
  _QWORD *v356;
  _QWORD *v357;
  uint64_t v358;
  uint64_t v359;
  const void *v360;
  void *v361;
  unint64_t v362;
  size_t v363;
  size_t v364;
  _QWORD *v365;
  _QWORD *v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  void *v371;
  const void *v372;
  char v373;
  uint64_t v374;
  void *v375;
  const void *v376;
  uint64_t v377;
  void *v378;
  const void *v379;
  uint64_t v380;
  void *v381;
  const void *v382;
  unint64_t v383;
  uint64_t v384;
  void *v385;
  const void *v386;
  unint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  void *v391;
  const void *v392;
  uint64_t v393;
  char *v394;
  const void *v395;
  uint64_t v396;
  _QWORD *v397;
  _QWORD *v398;
  _QWORD *v399;
  _QWORD *v400;
  void *v401;
  const void *v402;
  unint64_t v403;
  uint64_t v404;
  unint64_t v405;
  unint64_t v406;
  uint64_t v407;
  void (*v408)(unint64_t, unint64_t, uint64_t);
  void *v409;
  const void *v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  void *v416;
  const void *v417;
  uint64_t v418;
  void *v419;
  const void *v420;
  uint64_t v421;
  void *v422;
  uint64_t v423;
  const void *v424;
  uint64_t v425;
  void *v426;
  const void *v427;
  uint64_t v428;
  uint64_t v429;
  unint64_t v430;
  unint64_t v431;
  uint64_t v432;
  _QWORD *v433;
  _QWORD *v434;
  _QWORD *v435;
  _QWORD *v436;
  _QWORD *v437;
  _QWORD *v438;
  _QWORD *v439;
  _QWORD *v440;
  unint64_t v441;
  _QWORD *v442;
  unint64_t v443;
  size_t v444;
  _QWORD *v445;
  unint64_t v446;
  unint64_t v447;
  unint64_t v448;
  void *v449;
  uint64_t v450;
  uint64_t v451;
  void (*v452)(uint64_t, uint64_t, uint64_t);
  id v453;
  unint64_t v454;
  unint64_t v455;
  _QWORD *v456;
  _QWORD *v457;
  void *v458;
  _BYTE *v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  char v463;
  unint64_t v464;
  unint64_t v465;
  uint64_t v466;
  _QWORD *v467;
  _QWORD *v468;
  void *v469;
  _BYTE *v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  unint64_t v474;
  unint64_t v475;
  uint64_t v476;
  _QWORD *v477;
  _QWORD *v478;
  _QWORD *v479;
  _QWORD *v480;
  unint64_t v481;
  unint64_t v482;
  unint64_t v483;
  unint64_t v484;
  unint64_t v485;
  __int128 v486;
  __int128 v487;
  _QWORD *v488;
  _QWORD *v489;
  unint64_t v490;
  char *v491;
  uint64_t v492;
  const void *v493;
  uint64_t v494;
  void *v495;
  size_t v496;
  unint64_t v497;
  unint64_t v498;
  uint64_t v499;
  void *v500;
  const void *v501;
  uint64_t v502;
  uint64_t v503;
  size_t v504;
  uint64_t v505;
  uint64_t v506;
  unint64_t v507;
  unint64_t v508;
  unint64_t v509;
  uint64_t v510;
  unint64_t v511;
  unint64_t v512;
  unint64_t v513;
  uint64_t v514;
  char *v515;
  uint64_t v516;
  const void *v517;
  uint64_t v518;
  void *v519;
  size_t v520;
  unint64_t v521;
  unint64_t v522;
  uint64_t v523;
  _QWORD *v524;
  _QWORD *v525;
  void *v526;
  const void *v527;
  unint64_t v528;
  unint64_t v529;
  _QWORD *v530;
  _QWORD *v531;
  _QWORD *v532;
  _QWORD *v533;
  unint64_t v534;
  unint64_t v535;
  uint64_t v536;
  _QWORD *v537;
  _QWORD *v538;
  unint64_t v539;
  unint64_t v540;
  uint64_t v541;
  _QWORD *v542;
  unint64_t v543;
  unint64_t v544;
  unint64_t v545;
  _QWORD *v546;
  _QWORD *v547;
  unint64_t v548;
  char *v549;
  uint64_t v550;
  const void *v551;
  uint64_t v552;
  void *v553;
  size_t v554;
  _QWORD *v555;
  _QWORD *v556;
  _QWORD *v557;
  _QWORD *v558;
  _QWORD *v559;
  _QWORD *v560;
  unint64_t v561;
  unint64_t v562;
  unint64_t v563;
  __int128 v564;
  __int128 v565;
  unint64_t v566;
  unint64_t v567;
  unint64_t v568;
  __int128 v569;
  __int128 v570;
  unint64_t v571;
  unint64_t v572;
  unint64_t v573;
  __int128 v574;
  __int128 v575;
  char v576;
  _QWORD *v577;
  _QWORD *v578;
  _QWORD *v579;
  _QWORD *v580;
  _QWORD *v581;
  _QWORD *v582;
  _QWORD *v583;
  _QWORD *v584;
  unint64_t v585;
  unint64_t v586;
  unint64_t v587;
  __int128 v588;
  __int128 v589;
  unint64_t v590;
  unint64_t v591;
  unint64_t v592;
  __int128 v593;
  __int128 v594;
  unint64_t v595;
  unint64_t v596;
  unint64_t v597;
  __int128 v598;
  __int128 v599;
  uint64_t v600;
  void *v601;
  _BYTE *v602;
  uint64_t v603;
  uint64_t v604;
  unint64_t v605;
  unint64_t v606;
  uint64_t v607;
  _QWORD *v608;
  _QWORD *v609;
  _QWORD *v610;
  _QWORD *v611;
  unint64_t v612;
  unint64_t v613;
  uint64_t v614;
  void *v615;
  const void *v616;
  uint64_t v617;
  uint64_t v618;
  uint64_t v619;
  uint64_t v620;
  uint64_t v621;
  unint64_t v622;
  unint64_t v623;
  unint64_t v624;
  uint64_t v625;
  unint64_t v626;
  unint64_t v627;
  char v628;
  uint64_t v629;
  unint64_t v630;
  unint64_t v631;
  uint64_t v632;
  _QWORD *v633;
  _QWORD *v634;
  _QWORD *v635;
  _QWORD *v636;
  _QWORD *v637;
  _QWORD *v638;
  _QWORD *v639;
  _QWORD *v640;
  unint64_t v641;
  _QWORD *v642;
  unint64_t v643;
  size_t v644;
  _QWORD *v645;
  unint64_t v646;
  unint64_t v647;
  unint64_t v648;
  void *v649;
  uint64_t v650;
  uint64_t v651;
  void (*v652)(uint64_t, uint64_t, uint64_t);
  id v653;
  unint64_t v654;
  unint64_t v655;
  void *v656;
  _BYTE *v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  unint64_t v661;
  unint64_t v662;
  uint64_t v663;
  _QWORD *v664;
  _QWORD *v665;
  _QWORD *v666;
  _QWORD *v667;
  char *v668;
  unint64_t v669;
  unint64_t v670;
  char v671;
  unint64_t v672;
  uint64_t v673;
  int v674;
  int v675;
  unint64_t v676;
  unint64_t v677;
  uint64_t v678;
  unint64_t v679;
  unint64_t v680;
  uint64_t v681;
  void *v682;
  const void *v683;
  unint64_t v684;
  unint64_t v685;
  uint64_t v686;
  unint64_t v687;
  unint64_t v688;
  uint64_t v689;
  void *v690;
  const void *v691;
  unint64_t v692;
  unint64_t v693;
  uint64_t v694;
  _QWORD *v695;
  _QWORD *v696;
  unint64_t v697;
  unint64_t v698;
  unint64_t v699;
  __int128 v700;
  __int128 v701;
  unint64_t v702;
  unint64_t v703;
  uint64_t v704;
  _QWORD *v705;
  _QWORD *v706;
  unint64_t v707;
  unint64_t v708;
  uint64_t v709;
  _QWORD *v710;
  _QWORD *v711;
  _QWORD *v712;
  _QWORD *v713;
  unint64_t v714;
  unint64_t v715;
  unint64_t v716;
  __int128 v717;
  __int128 v718;
  unint64_t v719;
  unint64_t v720;
  unint64_t v721;
  __int128 v722;
  __int128 v723;
  unint64_t v724;
  unint64_t v725;
  uint64_t v726;
  _QWORD *v727;
  _QWORD *v728;
  char v729;
  unint64_t v730;
  unint64_t v731;
  uint64_t v732;
  unint64_t v733;
  unint64_t v734;
  unint64_t v735;
  __int128 v736;
  __int128 v737;
  _QWORD *v738;
  _QWORD *v739;
  _QWORD *v740;
  _QWORD *v741;
  _QWORD *v742;
  _QWORD *v743;
  _QWORD *v744;
  _QWORD *v745;
  unint64_t v746;
  unint64_t v747;
  _QWORD *v748;
  _QWORD *v749;
  void *v750;
  _BYTE *v751;
  uint64_t v752;
  uint64_t v753;
  uint64_t v754;
  uint64_t v755;
  uint64_t v756;
  _QWORD *v757;
  _QWORD *v758;
  unint64_t v759;
  unint64_t v760;
  unint64_t v761;
  __int128 v762;
  __int128 v763;
  _QWORD *v764;
  _QWORD *v765;
  _QWORD *v766;
  _QWORD *v767;
  char *v768;
  char *v769;
  uint64_t v770;
  unint64_t v771;
  unint64_t v772;
  unint64_t v773;
  unint64_t v774;
  uint64_t v775;
  unint64_t v776;
  unint64_t v777;
  unint64_t v778;
  __int128 v779;
  __int128 v780;
  _QWORD *v781;
  _QWORD *v782;
  _QWORD *v783;
  _QWORD *v784;
  _QWORD *v785;
  _QWORD *v786;
  _QWORD *v787;
  _QWORD *v788;
  _QWORD *v789;
  unint64_t v790;
  uint64_t v791;
  _QWORD *v792;
  unint64_t v793;
  int v794;
  int v795;
  int v796;
  int v797;
  void *v798;
  _BYTE *v799;
  uint64_t v800;
  uint64_t v801;
  uint64_t v802;
  int v803;
  int v804;
  int v805;
  int v806;
  _QWORD *v807;
  _QWORD *v808;
  unint64_t v809;
  unint64_t v810;
  void *v811;
  _BYTE *v812;
  uint64_t v813;
  uint64_t v814;
  uint64_t v815;
  _QWORD *v816;
  _QWORD *v817;
  unint64_t v818;
  unint64_t v819;
  _QWORD *v820;
  _QWORD *v821;
  _QWORD *v822;
  _QWORD *v823;
  _QWORD *v824;
  _QWORD *v825;
  _QWORD *v826;
  _QWORD *v827;
  _QWORD *v828;
  _QWORD *v829;
  void *v830;
  _BYTE *v831;
  uint64_t v832;
  uint64_t v833;
  uint64_t v834;
  uint64_t v835;
  int v836;
  int v837;
  int v838;
  int v839;
  int v840;
  int v841;
  int v842;
  int v843;
  int v844;
  int v845;
  int v846;
  int v847;
  int v848;
  int v849;
  int v850;
  int v851;
  int v852;
  unint64_t v853;
  unint64_t v854;
  int v855;
  unsigned int v856;
  unint64_t v857;
  unint64_t v858;
  int v859;
  unsigned int v860;
  _QWORD *v861;
  unint64_t v862;
  unint64_t v863;
  unint64_t v864;
  void *v865;
  uint64_t v866;
  uint64_t v867;
  void (*v868)(uint64_t, uint64_t, uint64_t);
  id v869;
  unint64_t v870;
  unint64_t v871;
  uint64_t v872;
  unint64_t v873;
  unint64_t v874;
  char *v875;
  char *v876;
  _QWORD *v877;
  _QWORD *v878;
  unint64_t v879;
  char *v880;
  uint64_t v881;
  uint64_t v882;
  uint64_t v883;
  uint64_t v884;
  void *v885;
  const void *v886;
  size_t v887;
  _QWORD *v888;
  unint64_t v889;
  unint64_t v890;
  unint64_t v891;
  void *v892;
  uint64_t v893;
  uint64_t v894;
  void (*v895)(uint64_t, uint64_t, uint64_t);
  id v896;
  void *v897;
  _BYTE *v898;
  uint64_t v899;
  uint64_t v900;
  uint64_t v901;
  int v902;
  int v903;
  int v904;
  void *v905;
  _BYTE *v906;
  uint64_t v907;
  uint64_t v908;
  uint64_t v909;
  int v910;
  int v911;
  int v912;
  _QWORD *v913;
  _QWORD *v914;
  _QWORD *v915;
  _QWORD *v916;
  unint64_t v917;
  unint64_t v918;
  unint64_t v919;
  __int128 v920;
  uint64_t *v921;
  uint64_t v922;
  int v923;
  uint64_t v924;
  uint64_t v925;
  unint64_t v926;
  unint64_t v927;
  uint64_t v928;
  uint64_t v929;
  uint64_t v930;
  uint64_t v931;
  uint64_t v932;
  uint64_t v933;
  unint64_t v934;
  uint64_t v935;
  unint64_t v936;
  unint64_t v937;
  unsigned int v938;
  unint64_t v939;
  unint64_t v940;
  unint64_t v941;
  uint64_t v942;
  size_t v943;
  uint64_t v944;
  uint64_t v945;
  uint64_t v946;
  int v947;
  int v948;
  int v949;
  unsigned int v950;
  unint64_t v951;
  unint64_t v952;
  unint64_t v953;
  unint64_t v954;
  uint64_t v955;
  size_t v956;
  uint64_t v957;
  uint64_t v958;
  uint64_t v959;
  int v960;
  int v961;
  int v962;
  unsigned int v963;
  const void *v964;
  size_t v965;
  unint64_t v966;
  unint64_t v967;
  uint64_t v968;
  _QWORD *v969;
  _QWORD *v970;
  _QWORD *v971;
  _QWORD *v972;
  unint64_t v973;
  unint64_t v974;
  unint64_t v975;
  unint64_t v976;
  unint64_t v977;
  __int128 v978;
  __int128 v979;
  _QWORD *v980;
  _QWORD *v981;
  _QWORD *v982;
  unint64_t v983;
  uint64_t v984;
  uint64_t v985;
  uint64_t v986;
  char *v987;
  uint64_t v988;
  const void *v989;
  uint64_t v990;
  void *v991;
  size_t v992;
  void *v993;
  _BYTE *v994;
  uint64_t v995;
  uint64_t v996;
  uint64_t v997;
  int v998;
  int v999;
  int v1000;
  unsigned int v1001;
  void *v1002;
  const void *v1003;
  size_t v1004;
  unint64_t v1005;
  unint64_t v1006;
  uint64_t v1007;
  _QWORD *v1008;
  _QWORD *v1009;
  _QWORD *v1010;
  _QWORD *v1011;
  unint64_t v1012;
  unint64_t v1013;
  unint64_t v1014;
  __int128 v1015;
  __int128 v1016;
  uint64_t v1017;
  unint64_t v1018;
  unint64_t v1019;
  unint64_t v1020;
  __int128 v1021;
  __int128 v1022;
  _QWORD *v1023;
  _QWORD *v1024;
  unint64_t v1025;
  char *v1026;
  uint64_t v1027;
  uint64_t v1028;
  const void *v1029;
  uint64_t v1030;
  void *v1031;
  size_t v1032;
  void *v1033;
  _BYTE *v1034;
  uint64_t v1035;
  uint64_t v1036;
  uint64_t v1037;
  int v1038;
  int v1039;
  int v1040;
  unint64_t v1041;
  unint64_t v1042;
  unint64_t v1043;
  uint64_t v1044;
  size_t v1045;
  uint64_t v1046;
  uint64_t v1047;
  uint64_t v1048;
  int v1049;
  int v1050;
  int v1051;
  uint64_t v1052;
  uint64_t v1053;
  uint64_t v1054;
  int v1055;
  int v1056;
  int v1057;
  uint64_t v1058;
  uint64_t v1059;
  int v1060;
  uint64_t v1061;
  unint64_t v1062;
  uint64_t v1063;
  uint64_t v1064;
  int v1065;
  int v1066;
  int v1067;
  unint64_t v1068;
  unint64_t v1069;
  uint64_t v1070;
  uint64_t v1071;
  uint64_t v1072;
  int v1073;
  int v1074;
  int v1075;
  unint64_t v1076;
  unint64_t v1077;
  uint64_t v1078;
  void *v1079;
  const void *v1080;
  _QWORD *v1081;
  _QWORD *v1082;
  _QWORD *v1083;
  _QWORD *v1084;
  _QWORD *v1085;
  uint64_t *v1086;
  uint64_t v1087;
  int v1088;
  uint64_t v1089;
  uint64_t v1090;
  size_t v1091;
  void (*v1092)(unint64_t, unint64_t, uint64_t);
  _BYTE *v1093;
  _QWORD *v1094;
  unint64_t v1095;
  _QWORD *v1096;
  uint64_t v1097;
  uint64_t v1098;
  const void *v1099;
  uint64_t v1100;
  void *v1101;
  size_t v1102;
  unint64_t v1103;
  void *v1104;
  unint64_t v1105;
  const void *v1106;
  uint64_t v1107;
  unint64_t v1108;
  unint64_t v1109;
  unint64_t v1110;
  uint64_t v1111;
  unint64_t v1112;
  unint64_t v1113;
  unint64_t v1114;
  __int128 v1115;
  __int128 v1116;
  _QWORD *v1117;
  _QWORD *v1118;
  unint64_t v1119;
  unint64_t v1120;
  unint64_t v1121;
  unint64_t v1122;
  unint64_t v1123;
  unint64_t v1124;
  uint64_t v1125;
  unint64_t v1126;
  unint64_t v1127;
  unint64_t v1128;
  __int128 v1129;
  __int128 v1130;
  _QWORD *v1131;
  _QWORD *v1132;
  char *v1133;
  char *v1134;
  unint64_t v1135;
  unint64_t v1136;
  unint64_t v1137;
  uint64_t v1138;
  unint64_t v1139;
  unint64_t v1140;
  unint64_t v1141;
  __int128 v1142;
  __int128 v1143;
  _QWORD *v1144;
  _QWORD *v1145;
  unint64_t v1146;
  uint64_t v1147;
  unint64_t v1148;
  unint64_t v1149;
  unint64_t v1150;
  __int128 v1151;
  __int128 v1152;
  _QWORD *v1153;
  _QWORD *v1154;
  unint64_t v1155;
  char *v1156;
  uint64_t v1157;
  const void *v1158;
  uint64_t v1159;
  void *v1160;
  size_t v1161;
  void *v1162;
  _BYTE *v1163;
  uint64_t v1164;
  size_t v1165;
  uint64_t v1166;
  uint64_t v1167;
  int v1168;
  int v1169;
  int v1170;
  char *v1171;
  void *v1172;
  _BYTE *v1173;
  uint64_t v1174;
  uint64_t v1175;
  uint64_t v1176;
  int v1177;
  int v1178;
  int v1179;
  _QWORD *v1180;
  _QWORD *v1181;
  unint64_t v1182;
  unint64_t v1183;
  unint64_t v1184;
  __int128 v1185;
  __int128 v1186;
  _QWORD *v1187;
  _QWORD *v1188;
  uint64_t *v1189;
  uint64_t v1190;
  int v1191;
  uint64_t *v1192;
  uint64_t v1193;
  int v1194;
  uint64_t v1195;
  uint64_t v1196;
  uint64_t *v1197;
  uint64_t v1198;
  int v1199;
  uint64_t v1200;
  uint64_t v1201;
  uint64_t *v1202;
  uint64_t v1203;
  int v1204;
  unint64_t v1205;
  unint64_t v1206;
  unint64_t v1207;
  uint64_t v1208;
  unint64_t v1209;
  unint64_t v1210;
  uint64_t v1211;
  uint64_t v1212;
  uint64_t v1213;
  int v1214;
  int v1215;
  int v1216;
  _QWORD *v1217;
  uint64_t *v1218;
  uint64_t v1219;
  int v1220;
  unint64_t v1221;
  void (*v1222)(unint64_t, unint64_t, uint64_t);
  unint64_t v1223;
  _QWORD *v1224;
  uint64_t *v1225;
  uint64_t v1226;
  int v1227;
  uint64_t v1228;
  uint64_t v1229;
  void (*v1230)(unint64_t, unint64_t, uint64_t);
  _QWORD *v1231;
  _QWORD *v1232;
  unint64_t v1233;
  char *v1234;
  uint64_t v1235;
  uint64_t v1236;
  uint64_t v1237;
  uint64_t v1238;
  void *v1239;
  const void *v1240;
  size_t v1241;
  uint64_t v1242;
  unint64_t v1243;
  void *v1244;
  _BYTE *v1245;
  uint64_t v1246;
  uint64_t v1247;
  uint64_t v1248;
  int v1249;
  int v1250;
  int v1251;
  _QWORD *v1252;
  uint64_t *v1253;
  uint64_t v1254;
  int v1255;
  uint64_t v1256;
  uint64_t v1257;
  size_t v1258;
  void (*v1259)(unint64_t, unint64_t, uint64_t);
  _QWORD *v1260;
  _QWORD *v1261;
  unint64_t v1262;
  char *v1263;
  uint64_t v1264;
  uint64_t v1265;
  const void *v1266;
  uint64_t v1267;
  void *v1268;
  size_t v1269;
  unint64_t v1270;
  void *v1271;
  unint64_t v1272;
  const void *v1273;
  uint64_t v1274;
  unint64_t v1275;
  unint64_t v1276;
  unint64_t v1277;
  uint64_t v1278;
  unint64_t v1279;
  unint64_t v1280;
  unint64_t v1281;
  __int128 v1282;
  __int128 v1283;
  _QWORD *v1284;
  _QWORD *v1285;
  unint64_t v1286;
  unint64_t v1287;
  unint64_t v1288;
  unint64_t v1289;
  unint64_t v1290;
  unint64_t v1291;
  uint64_t v1292;
  unint64_t v1293;
  unint64_t v1294;
  unint64_t v1295;
  __int128 v1296;
  __int128 v1297;
  _QWORD *v1298;
  _QWORD *v1299;
  char *v1300;
  char *v1301;
  unint64_t v1302;
  unint64_t v1303;
  unint64_t v1304;
  uint64_t v1305;
  unint64_t v1306;
  unint64_t v1307;
  unint64_t v1308;
  __int128 v1309;
  __int128 v1310;
  _QWORD *v1311;
  _QWORD *v1312;
  unint64_t v1313;
  void *v1314;
  _BYTE *v1315;
  uint64_t v1316;
  uint64_t v1317;
  uint64_t v1318;
  int v1319;
  int v1320;
  int v1321;
  _QWORD *v1322;
  _QWORD *v1323;
  unint64_t v1324;
  unint64_t v1325;
  void *v1326;
  _BYTE *v1327;
  uint64_t v1328;
  uint64_t v1329;
  uint64_t v1330;
  int v1331;
  int v1332;
  int v1333;
  _QWORD *v1334;
  uint64_t *v1335;
  uint64_t v1336;
  int v1337;
  size_t v1338;
  _QWORD *v1339;
  void (*v1340)(unint64_t, unint64_t, uint64_t);
  _QWORD *v1341;
  uint64_t *v1342;
  uint64_t v1343;
  int v1344;
  _QWORD *v1345;
  void (*v1346)(unint64_t, unint64_t, uint64_t);
  _BYTE *v1347;
  _QWORD *v1348;
  _QWORD *v1349;
  unint64_t v1350;
  unint64_t v1351;
  unint64_t v1352;
  unint64_t v1353;
  unint64_t v1354;
  __int128 v1355;
  __int128 v1356;
  unint64_t v1357;
  unint64_t v1358;
  unint64_t v1359;
  char *v1360;
  uint64_t v1361;
  const void *v1362;
  uint64_t v1363;
  void *v1364;
  size_t v1365;
  _QWORD *v1366;
  _QWORD *v1367;
  _QWORD *v1368;
  _QWORD *v1369;
  void *v1370;
  _BYTE *v1371;
  uint64_t v1372;
  uint64_t v1373;
  uint64_t v1374;
  int v1375;
  int v1376;
  int v1377;
  _QWORD *v1378;
  _QWORD *v1379;
  unint64_t v1380;
  uint64_t v1381;
  char *v1382;
  uint64_t v1383;
  const void *v1384;
  uint64_t v1385;
  void *v1386;
  uint64_t v1387;
  unsigned __int8 *v1388;
  unint64_t v1389;
  unsigned int v1390;
  uint64_t v1391;
  uint64_t v1392;
  unint64_t v1393;
  unint64_t v1394;
  unint64_t v1395;
  uint64_t v1396;
  unint64_t v1397;
  unint64_t v1398;
  unint64_t v1399;
  uint64_t v1400;
  uint64_t v1401;
  uint64_t v1402;
  int v1403;
  int v1404;
  int v1405;
  unint64_t v1406;
  unint64_t v1407;
  unint64_t v1408;
  unint64_t v1409;
  __int128 v1410;
  __int128 v1411;
  _QWORD *v1412;
  _QWORD *v1413;
  _BYTE *v1414;
  unsigned __int8 *v1415;
  unsigned int v1416;
  _QWORD *v1417;
  _QWORD *v1418;
  unsigned int v1419;
  uint64_t v1420;
  void *v1421;
  const void *v1422;
  uint64_t v1423;
  _QWORD *v1424;
  _QWORD *v1425;
  unint64_t v1426;
  unint64_t v1427;
  unint64_t v1428;
  unint64_t v1429;
  unint64_t v1430;
  unint64_t v1431;
  uint64_t v1432;
  _QWORD *v1433;
  _QWORD *v1434;
  unint64_t v1435;
  unint64_t v1436;
  unint64_t v1437;
  __int128 v1438;
  __int128 v1439;
  _BYTE *v1440;
  _QWORD *v1441;
  unint64_t v1442;
  char *v1443;
  uint64_t v1444;
  uint64_t v1445;
  uint64_t v1446;
  void *v1447;
  const void *v1448;
  size_t v1449;
  _QWORD *v1450;
  _QWORD *v1451;
  uint64_t v1452;
  _QWORD *v1453;
  _QWORD *v1454;
  unint64_t v1455;
  uint64_t v1456;
  char *v1457;
  uint64_t v1458;
  const void *v1459;
  uint64_t v1460;
  void *v1461;
  unint64_t v1462;
  uint64_t v1463;
  _QWORD *result;
  __int128 v1465;
  __int128 v1466;
  unint64_t v1467;
  _QWORD *v1468;
  uint64_t v1469;
  __int128 v1470;
  __int128 v1471;
  _QWORD *v1472;
  _QWORD *v1473;
  _QWORD *v1474;
  _QWORD *v1475;
  void *v1476;
  _BYTE *v1477;
  uint64_t v1478;
  uint64_t v1479;
  uint64_t v1480;
  int v1481;
  int v1482;
  int v1483;
  unsigned __int8 *v1484;
  uint64_t v1485;
  unsigned int v1486;
  uint64_t v1487;
  unint64_t v1488;
  unint64_t v1489;
  int v1490;
  int v1491;
  _QWORD *v1492;
  _QWORD *v1493;
  _BYTE *v1494;
  unsigned __int8 *v1495;
  unsigned int v1496;
  _QWORD *v1497;
  _QWORD *v1498;
  unsigned int v1499;
  uint64_t v1500;
  void *v1501;
  const void *v1502;
  unint64_t v1503;
  void *v1504;
  const void *v1505;
  size_t v1506;
  _QWORD *v1507;
  uint64_t v1508;
  _QWORD *v1509;
  _QWORD *v1510;
  unint64_t v1511;
  unint64_t v1512;
  unint64_t v1513;
  unint64_t v1514;
  unint64_t v1515;
  unint64_t v1516;
  uint64_t v1517;
  _QWORD *v1518;
  _QWORD *v1519;
  unint64_t v1520;
  unint64_t v1521;
  unint64_t v1522;
  __int128 v1523;
  __int128 v1524;
  _QWORD *v1525;
  _QWORD *v1526;
  unint64_t v1527;
  char *v1528;
  uint64_t v1529;
  uint64_t v1530;
  uint64_t v1531;
  void *v1532;
  const void *v1533;
  size_t v1534;
  __int128 v1535;
  __int128 v1536;
  unint64_t v1537;
  _QWORD *v1538;
  uint64_t v1539;
  __int128 v1540;
  __int128 v1541;
  _QWORD *v1542;
  _QWORD *v1543;
  _QWORD *v1544;
  _QWORD *v1545;
  void *v1546;
  _BYTE *v1547;
  uint64_t v1548;
  uint64_t v1549;
  uint64_t v1550;
  int v1551;
  int v1552;
  int v1553;
  size_t v1554;
  uint64_t v1555;
  unint64_t v1556;
  unint64_t v1557;
  unint64_t v1558;
  unint64_t v1559;
  unint64_t v1560;
  unint64_t v1561;
  unint64_t v1562;
  unint64_t v1563;
  unint64_t v1564;
  unint64_t v1565;
  unint64_t v1566;
  uint64_t v1567;
  uint64_t v1568;
  uint64_t v1569;
  uint64_t v1570;
  uint64_t v1571;
  uint64_t v1572;
  uint64_t v1573;
  uint64_t v1574;
  uint64_t v1575;
  uint64_t v1576;
  size_t v1577;
  int v1578;
  uint64_t v1579;
  uint64_t v1580;
  uint64_t v1581;
  uint64_t v1582;
  size_t v1583;
  size_t v1584;
  uint64_t v1585;
  uint64_t v1586;
  uint64_t v1587;
  uint64_t v1588;
  uint64_t v1589;
  size_t v1590;
  uint64_t v1591;
  uint64_t v1592;
  size_t v1593;
  size_t v1594;
  uint64_t v1595;
  unint64_t v1596;
  size_t v1597;
  uint64_t v1598;
  uint64_t v1599;
  size_t v1600;
  unsigned int v1601;
  size_t v1602;
  uint64_t v1603;
  unint64_t v1604;
  unsigned int v1605;
  uint64_t v1606;
  uint64_t v1607;
  size_t v1608;
  uint64_t v1609;
  size_t __n;
  unsigned int v1611;
  size_t v1612;
  unsigned int v1613;
  uint64_t v1614;
  uint64_t v1615;
  uint64_t v1616;
  unsigned int v1617;
  unsigned int v1618;
  uint64_t v1619;
  uint64_t v1620;
  uint64_t v1621;
  unsigned int v1622;
  uint64_t v1623;
  unsigned int v1624;
  uint64_t v1625;
  uint64_t v1626;
  unint64_t v1627;
  unint64_t v1628;
  unint64_t v1629;
  unint64_t v1630;
  unint64_t v1631;
  unint64_t v1632;
  unint64_t v1633;
  unint64_t v1634;
  unint64_t v1635;
  unint64_t v1636;
  unint64_t v1637;
  unint64_t v1638;
  unint64_t v1639;
  unint64_t v1640;
  unint64_t v1641;
  unint64_t v1642;
  unint64_t v1643;
  unint64_t v1644;
  unint64_t v1645;
  unint64_t v1646;
  unint64_t v1647;
  unint64_t v1648;
  unint64_t v1649;
  unint64_t v1650;
  unint64_t v1651;
  unint64_t v1652;
  unint64_t v1653;
  size_t v1654;
  size_t v1655;
  size_t v1656;
  unint64_t v1657;
  uint64_t v1658;
  uint64_t v1659;
  unint64_t v1660;
  uint64_t v1661;
  uint64_t v1662;
  uint64_t v1663;
  size_t v1664;
  uint64_t v1665;
  uint64_t v1666;
  int v1667;
  uint64_t v1668;
  uint64_t v1669;
  uint64_t v1670;
  uint64_t v1671;
  uint64_t v1672;
  uint64_t v1673;
  uint64_t v1674;
  char v1675;
  unint64_t v1676;
  unint64_t v1677;
  unint64_t v1678;
  unint64_t v1679;
  unint64_t v1680;
  unint64_t v1681;
  uint64_t v1682;
  unint64_t v1683;
  uint64_t v1684;
  unint64_t v1685;
  uint64_t v1686;
  unint64_t v1687;
  unint64_t v1688;
  unint64_t v1689;
  uint64_t v1690;
  unint64_t v1691;
  uint64_t v1692;
  unint64_t v1694;
  unint64_t v1695;
  _QWORD *v1696;
  _QWORD *v1697;
  _QWORD *v1698;
  _QWORD *v1699;
  _QWORD *v1700;
  _QWORD *v1701;
  _QWORD *v1702;
  _QWORD *v1703;
  _QWORD *v1704;
  _QWORD *v1705;
  _QWORD *v1706;
  _QWORD *v1707;
  uint64_t v1708;
  uint64_t v1709;
  uint64_t v1710;
  unint64_t v1711;
  uint64_t v1712;
  size_t v1713;
  unsigned __int8 v1714;
  size_t v1715;
  size_t v1716;
  uint64_t v1717;
  size_t v1718;
  unsigned int v1719;
  uint64_t v1720;
  uint64_t v1721;
  _QWORD *v1722;
  size_t v1723;
  unsigned int v1724;
  uint64_t v1725;
  uint64_t v1726;
  size_t v1727;
  size_t v1728;
  int v1729;
  uint64_t v1730;
  size_t v1731;
  unint64_t v1732;
  uint64_t v1733;
  uint64_t v1734;
  uint64_t v1735;
  size_t v1736;
  uint64_t v1737;
  unint64_t v1738;
  size_t v1739;
  unint64_t v1740;
  uint64_t v1741;
  _QWORD *v1742;
  _QWORD *v1743;
  _QWORD *v1744;
  _QWORD *v1745;
  _QWORD *v1746;
  _QWORD *v1747;
  _QWORD *v1748;
  _QWORD *v1749;
  _QWORD *v1750;
  _QWORD *v1751;
  _QWORD *v1752;
  uint64_t v1753;
  const void *v1754;
  size_t v1755;
  void *v1756;
  uint64_t v1757;
  uint64_t v1758;
  void *v1759;

  v3 = a1;
  if (a1 == a2)
    return v3;
  v1666 = *(_QWORD *)(a3 + 16);
  v1665 = *(_QWORD *)(v1666 - 8);
  v1691 = *(_QWORD *)(v1665 + 64);
  v1669 = sub_21D7C4668();
  v4 = *(_QWORD *)(v1669 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v1710 = v5 + 16;
  v1719 = *(_DWORD *)(v4 + 84);
  v1661 = v4;
  v6 = *(_QWORD *)(v4 + 64);
  v1656 = v6;
  if (!v1719)
    ++v6;
  v1755 = v6;
  v1735 = v5 | 7;
  v1625 = sub_21D7BF754();
  v7 = *(_QWORD *)(v1625 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = v8 | 7;
  v10 = v5 | 7 | v8;
  v1619 = sub_21D7C3840();
  v11 = *(_QWORD *)(v1619 - 8);
  v1722 = v3;
  v12 = *(unsigned __int8 *)(v11 + 80);
  v1623 = sub_21D7C3804();
  v13 = *(_QWORD *)(v1623 - 8);
  v14 = *(_DWORD *)(v13 + 80);
  v15 = v14;
  v16 = v14 | v12;
  v17 = v10 | v16;
  v1753 = v5;
  v1721 = v5 + 40;
  v18 = *(_DWORD *)(v7 + 84);
  if (v18)
    v19 = v18 - 1;
  else
    v19 = 0;
  v1618 = v19;
  if (v19 <= 0x7FFFFFFE)
    v20 = 2147483646;
  else
    v20 = v19;
  v1729 = v20;
  v1624 = *(_DWORD *)(v13 + 84);
  v1617 = *(_DWORD *)(v11 + 84);
  if (v1624 <= v1617)
    v21 = *(_DWORD *)(v11 + 84);
  else
    v21 = *(_DWORD *)(v13 + 84);
  v1724 = v21;
  v1613 = *(_DWORD *)(v7 + 84);
  v1621 = v8 + 113;
  v22 = (v8 + 113) & ~v8;
  v1734 = v8;
  v1607 = v7;
  v1615 = v11;
  v1616 = *(_QWORD *)(v1623 - 8);
  v1620 = *(_QWORD *)(v11 + 64) + v14;
  v1726 = *(_QWORD *)(v13 + 64);
  if (v18)
    v23 = *(_QWORD *)(v7 + 64);
  else
    v23 = *(_QWORD *)(v7 + 64) + 1;
  v1716 = v23;
  v1626 = v17 + 1;
  v1738 = ((v5 + 40) & ~v5) + v1755;
  v1732 = (v1738 + 7) & 0xFFFFFFFFFFFFFFF8;
  v1737 = v8 + 40;
  v1718 = v23 + v22;
  v24 = v23 + v22 + ((v8 + 40 + ((((v1732 + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v9);
  v1720 = (v1620 & ~(unint64_t)v14) + v1726;
  if (v21)
    v25 = (v1620 & ~(unint64_t)v14) + v1726;
  else
    v25 = (v1620 & ~(unint64_t)v14) + v1726 + 1;
  v1736 = v25;
  v1694 = v25 + 1;
  v26 = v25 + 1 + ((v16 + 160) & ~v16);
  if (v24 <= v26)
    v24 = v26;
  if (v24 <= 0x30)
    v24 = 48;
  v1660 = v24;
  __n = v24 + 1;
  v1731 = v24 + 1 + ((v17 + 1) & ~v17);
  v1663 = sub_21D7C3F6C();
  v27 = *(_QWORD *)(v1663 - 8);
  v28 = *(unsigned __int8 *)(v27 + 80);
  v1668 = (v28 | 7) + 58;
  v1670 = v28 | 7;
  v29 = (v1668 + ((v1731 + (((v10 | v16) + v1755 + ((v5 + 16) & ~v5)) & ~(v10 | v16)) + 11) & 0xFFFFFFFFFFFFFFF8)) & ~(v28 | 7);
  v30 = *(_DWORD *)(v27 + 84);
  v31 = v30 - 1;
  if (!v30)
    v31 = 0;
  v1667 = v31;
  v1622 = *(_DWORD *)(v27 + 84);
  v1662 = v28 + 16;
  v1672 = *(unsigned __int8 *)(v27 + 80);
  v1614 = *(_QWORD *)(v1663 - 8);
  v32 = *(_QWORD *)(v27 + 64);
  if (!v30)
    ++v32;
  v1612 = v32;
  v33 = ((v28 + 16) & ~v28) + v32;
  v1603 = sub_21D7C4314();
  v34 = *(_DWORD *)(*(_QWORD *)(v1603 - 8) + 80);
  v35 = *(_QWORD *)(v1603 - 8);
  v1709 = v35;
  v1714 = v34;
  v1757 = v15 | 7;
  v1592 = sub_21D7BF964();
  v36 = *(_QWORD *)(v1592 - 8);
  v37 = *(unsigned __int8 *)(v36 + 80);
  v1741 = v17 | v15 | v34 | v37;
  v1664 = v33;
  v1711 = v1741 + v33 + v29;
  v1740 = v34 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v1717 = v34;
  v1739 = *(_QWORD *)(v35 + 64) + ((v34 + 65) & ~(unint64_t)v34);
  v1728 = v1755 + 7;
  v38 = (v1755 + 7) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 47) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v39 + 23) & 0xFFFFFFFFFFFFFFF8;
  v1678 = v40;
  v1658 = v34 + 16;
  v1689 = (v1739 + ((v1658 + ((v40 + 15) & 0xFFFFFFFFFFFFFFF8)) & v1740)) & 0xFFFFFFFFFFFFFFF8;
  v1725 = v16 + 16;
  v1606 = v15 + 8;
  v1674 = v15;
  v41 = v1726 + ((v15 + 8) & ~v15);
  if (v1719)
    v42 = v1719 - 1;
  else
    v42 = 0;
  v43 = v39 + 16;
  v44 = (v38 + 47) & 0xFFFFFFFFFFFFFFF8;
  v45 = v1694 + v37 + ((v39 + 16 + v16) & ~v16);
  v1611 = v42;
  v1578 = v1729 - 1;
  if (v42 <= v1729 - 1)
    v46 = v1729 - 1;
  else
    v46 = v42;
  if (v46 <= 0x7FFFFFFF)
    v46 = 0x7FFFFFFF;
  v47 = v1724 - 1;
  if (!v1724)
    v47 = 0;
  if (v47 <= v46)
    v48 = v46;
  else
    v48 = v47;
  v1601 = v48;
  v49 = (v1732 + 23) & 0xFFFFFFFFFFFFFFF8;
  v1685 = (v38 + 47) & 0xFFFFFFFFFFFFFFF8;
  v1723 = v44 + 17;
  v1589 = v9 + 23;
  v1687 = v9 + 23 + v44 + 17 + ((v1710 + ((((v49 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v1735);
  v1713 = v1726 + ((v15 + 8) & ~v15);
  v50 = v41 + v9;
  v1683 = (v44 + 47) & 0xFFFFFFFFFFFFFFF8;
  v1604 = v1683 + 16;
  v51 = v1683 + 16 + v1735;
  v52 = v1683
      + 24
      + ((v51
        + ((v51
          + ((v1718
            + v1735
            + ((v41 + v9 + ((v1736 + v1757 + ((v16 + 16 + ((v1689 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & ~v1757)) & ~v9)) & ~v1735)) & ~v1735)) & ~v1735);
  v53 = v1718 + ((v1734 + 8) & ~v9);
  v1708 = *(unsigned __int8 *)(v36 + 80);
  v1591 = *(_QWORD *)(v1592 - 8);
  v1587 = *(_QWORD *)(v36 + 64) + 7;
  v1727 = v1736 + v1757;
  v54 = ((v1736 + v1757 + ((v1718 + v16 + ((v1737 + ((v1587 + (v45 & ~v37)) & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & ~v16)) & ~v1757)
      + v41;
  v1599 = v9 + 41;
  v55 = v1736 + 7;
  v56 = ((((v1736 + 7 + ((v1718 + v16 + ((v9 + 41 + ((v40 + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & ~v16)) & 0xFFFFFFFFFFFFFFF8)
        + 47) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v57 = v38 + 40;
  v58 = v17;
  v59 = (v17 + v57) & ~v17;
  v1596 = v56 + v58;
  v1597 = v1731 + 7;
  v1598 = v58 + 8;
  v1730 = v58;
  v60 = ((v58 + 8 + ((v1731 + 7 + ((v56 + v58 + v59) & ~v58)) & 0xFFFFFFFFFFFFFFF8)) & ~v58) + v1731;
  v61 = v57 + v1714;
  v1715 = v1718 + 7;
  v1679 = (v1718 + 7 + ((v57 + v1734) & ~v9)) & 0xFFFFFFFFFFFFFFF8;
  v1583 = v1716 + v16;
  v62 = v1736 + v16;
  v1579 = v1736 + v16 + 1;
  v63 = ((v1739 + 7 + (v61 & v1740)) & 0xFFFFFFFFFFFFFFF8) + 8;
  v1581 = v9 + 17;
  v64 = v1718 + ((v9 + 17 + v1732) & ~v9);
  v1653 = v53;
  if (v53 <= v52)
    v53 = v52;
  v1651 = v54;
  if (v53 <= v54)
    v53 = v54;
  v1654 = v56;
  if (v53 <= v56)
    v53 = v56;
  v1647 = v60;
  if (v53 <= v60)
    v53 = v60;
  v1645 = ((((((v1679 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v53 <= v1645)
    v53 = ((((((v1679 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
  v1642 = ((v50 + ((v1736 + v1757 + ((v1579 + ((v1716 + v16 + ((v43 + v1734) & ~v1734)) & ~v16)) & ~v16)) & ~v1757)) & ~v9)
        + v1718;
  if (v53 <= v1642)
    v53 = ((v50 + ((v1736 + v1757 + ((v1579 + ((v1716 + v16 + ((v43 + v1734) & ~v1734)) & ~v16)) & ~v16)) & ~v1757)) & ~v9)
        + v1718;
  v1643 = (((((v1738 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v53 <= v1643)
    v53 = (((((v1738 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v1644 = v63;
  if (v53 <= v63)
    v53 = v63;
  v1633 = v64 + 1;
  if (v53 <= v64 + 1)
    v65 = v64 + 1;
  else
    v65 = v53;
  v1676 = v65;
  v1681 = v1711 & ~v1741;
  v66 = (((v49 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v67 = ((((v66 + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 41;
  v1586 = v16 + 40;
  v68 = ((v62
        + ((v16
          + 40
          + ((((((v66 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & ~v16)
      + v1736;
  v69 = (v1678 + 23) & 0xFFFFFFFFFFFFFFF8;
  v70 = v69 + 8;
  v71 = ((v69 + 47) & 0xFFFFFFFFFFFFFFF8) + 40;
  v1600 = v1718 + v16;
  v1577 = ((v1718 + v16 + ((v71 + v9) & ~v9)) & ~v16) + v1736;
  v1594 = v1577 + 7;
  v1595 = v1734 + 8;
  v1585 = v16 + 24;
  v1659 = v50;
  v1655 = v1718 + v1735;
  v1657 = v1683 + 16 + v1735;
  v1652 = v1683 + 24;
  v72 = v1683
      + 24
      + ((v51
        + ((v51 + ((v1718 + v1735 + ((v50 + ((v1727 + ((v16 + 24 + v1689) & ~v16)) & ~v1757)) & ~v9)) & ~v1735)) & ~v1735)) & ~v1735);
  v73 = (v1685 + 15) & 0xFFFFFFFFFFFFFFF8;
  v74 = v1753;
  v75 = ((v74 + 80) & ~v74) + v1755;
  v76 = ((v74 + 56) & ~v74) + v1755;
  v77 = (v1679 + 23) & 0xFFFFFFFFFFFFFFF8;
  v1582 = v16 + 18;
  v78 = v73 + 16;
  v79 = v73 + 8;
  v80 = v1732 + 8;
  v81 = ((v1732 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  v82 = (((v1683 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v1609 = v16 + 8;
  v1602 = v1736 + v16;
  v1590 = v1713 + v1757;
  v83 = ((v1715
        + ((v1737
          + ((((v1713
              + 9
              + ((v1713
                + v1757
                + ((v1727
                  + ((v62 + ((v16 + 8 + ((((v82 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & ~v16)) & ~v1757)) & ~v1757)) & 0xFFFFFFFFFFFFFFF8)
            + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v1580 = v1717 + 8;
  v1584 = v1739 + v16;
  v1588 = v16 + 9;
  v1608 = v1736 + 7;
  v1712 = v16;
  v1593 = v1736 + v9;
  v1733 = v9;
  v84 = ((v1736
        + v9
        + ((v1725
          + ((v55
            + ((v16
              + 9
              + ((((v55 + ((v1739 + v16 + ((v1717 + 8 + v82) & v1740)) & ~v16)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & ~v9)
      + v1718;
  v85 = v1676;
  v1631 = v67;
  if (v1676 <= v67)
    v85 = v67;
  v1628 = ((v1734 + 8 + ((v1577 + 7 + v59) & 0xFFFFFFFFFFFFFFF8)) & ~v9) + v1718;
  v1629 = v68;
  if (v85 <= v68)
    v85 = v68;
  v1632 = v70;
  if (v85 <= v70)
    v85 = v70;
  if (v85 <= ((v1734 + 8 + ((v1577 + 7 + v59) & 0xFFFFFFFFFFFFFFF8)) & ~v9) + v1718)
    v85 = ((v1734 + 8 + ((v1577 + 7 + v59) & 0xFFFFFFFFFFFFFFF8)) & ~v9) + v1718;
  if (v85 <= v1723)
    v85 = v1723;
  v1630 = v72;
  if (v85 <= v72)
    v85 = v72;
  v1627 = v78;
  if (v85 <= v78)
    v85 = v78;
  v1634 = ((v1738 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
  if (v85 <= v1634)
    v85 = ((v1738 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
  v1636 = v75;
  if (v85 <= v75)
    v85 = v75;
  v1638 = v76;
  if (v85 <= v76)
    v85 = v76;
  v1637 = ((((v1728 + ((v1721 + (v55 & 0xFFFFFFFFFFFFFFF8)) & ~v1753)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  if (v85 <= v1637)
    v85 = ((((v1728 + ((v1721 + (v55 & 0xFFFFFFFFFFFFFFF8)) & ~v1753)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  v1640 = ((v16 + 18 + v77) & ~v16) + v1736;
  if (v85 <= v1640)
    v85 = ((v16 + 18 + v77) & ~v16) + v1736;
  v1635 = ((v55
          + ((v16
            + 8
            + ((((((((((v77 + 25) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8)
              + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  if (v85 <= v1635)
    v85 = ((v55
          + ((v16
            + 8
            + ((((((((((v77 + 25) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8)
              + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  v1639 = v1678 + 40;
  if (v85 <= v1678 + 40)
    v85 = v1678 + 40;
  v1641 = v79;
  if (v85 <= v79)
    v85 = v79;
  v1680 = v71;
  if (v85 <= v71)
    v85 = v71;
  v1648 = v1685 + 8;
  if (v85 <= v1685 + 8)
    v85 = v1685 + 8;
  v1677 = v80;
  if (v85 <= v80)
    v85 = v80;
  if (v85 <= v81)
    v85 = v81;
  if (v85 <= v1738)
    v85 = v1738;
  v3 = v1722;
  v1649 = v83;
  if (v85 <= v83)
    v85 = v83;
  v1650 = (v1687 & ~v9) + v1718;
  if (v85 <= v1650)
    v85 = (v1687 & ~v9) + v1718;
  v1646 = v84;
  if (v85 <= v84)
    v85 = v84;
  if (v85 <= 8)
    v85 = 8;
  v1688 = v85;
  v86 = v85 + 8;
  v87 = ((v85 + 8 + v1681) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v87 <= v1691)
    v87 = v1691;
  if (v87 <= 8)
    v88 = 8;
  else
    v88 = v87;
  v1605 = *(_DWORD *)(v1709 + 84);
  if (*((unsigned __int8 *)v1722 + v88) >= 4u)
  {
    if (v88 <= 3)
      v89 = v88;
    else
      v89 = 4;
    __asm { BR              X12 }
  }
  v90 = v1674;
  v1690 = ~v1753;
  v1692 = ~v1730;
  v91 = ~v9;
  v92 = ~v1734;
  v93 = ~v16;
  v94 = ~v1674;
  v1684 = ~v1670;
  v1682 = ~v1672;
  v1686 = ~v1741;
  v1673 = ~v1717;
  v1758 = ~v1757;
  v95 = ~v1735;
  v1671 = ~v1708;
  v96 = v1720;
  v1675 = 8 * v1720;
  switch(*((_BYTE *)v1722 + v88))
  {
    case 0:
      (*(void (**)(_QWORD *, uint64_t))(v1665 + 8))(v1722, v1666);
      goto LABEL_386;
    case 1:
      v1573 = ~v1712;
      v1575 = ~v90;
      v1569 = ~v1734;
      v1571 = ~v1733;
      v97 = v86;
      swift_bridgeObjectRelease();
      v98 = ((unint64_t)v1722 + v1753 + 16) & v1690;
      if (!__swift_getEnumTagSinglePayload(v98, 1, v1669))
        (*(void (**)(uint64_t, uint64_t))(v1661 + 8))(v98, v1669);
      v99 = (unsigned __int8 *)((v98 + v1755 + v1730) & v1692);
      if (*v99 > 2u)
        goto LABEL_161;
      v100 = (unint64_t)&v99[v1626] & v1692;
      v101 = *(unsigned __int8 *)(v100 + v1660);
      if (v101 > 2)
        goto LABEL_161;
      if (v101 == 2)
      {
        if (*(_QWORD *)(((unint64_t)&v99[v1626] & v1692) + 8) >= 0xFFFFFFFFuLL)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(((unint64_t)&v99[v1626] & v1692) + 0x38))
            __swift_destroy_boxed_opaque_existential_1(v100 + 32);
        }
        v107 = (v100 + 79) & 0xFFFFFFFFFFFFFFF8;
        if (*(_QWORD *)(v107 + 8) >= 0xFFFFFFFFuLL)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(v107 + 56))
            __swift_destroy_boxed_opaque_existential_1(v107 + 32);
        }
        swift_bridgeObjectRelease();
        v108 = (((v107 + 79) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
        swift_bridgeObjectRelease();
        v109 = (v1609 + v108) & v1573;
        if (v1724)
        {
          v110 = v1624;
          if (v1617 >= v1624)
          {
            v111 = (v1609 + v108) & v1573;
            v110 = v1617;
            v112 = v1619;
          }
          else
          {
            v111 = (v1620 + v109) & v1575;
            v112 = v1623;
          }
          EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v111, v110, v112);
        }
        else
        {
          if (!*(_BYTE *)(v109 + v1720))
          {
LABEL_160:
            (*(void (**)(unint64_t, uint64_t))(v1615 + 8))(v109, v1619);
            (*(void (**)(unint64_t, uint64_t))(v1616 + 8))((v1620 + v109) & v1575, v1623);
            goto LABEL_161;
          }
          v113 = (*(unsigned __int8 *)(v109 + v1720) - 1) << v1675;
          if (v1720 > 3)
            v113 = 0;
          if ((_DWORD)v1720)
          {
            if (v1720 <= 3)
              v114 = v1720;
            else
              v114 = 4;
            __asm { BR              X11 }
          }
          EnumTagSinglePayload = v113 + 1;
        }
        if (EnumTagSinglePayload)
          goto LABEL_161;
        goto LABEL_160;
      }
      if (v101 != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_161;
      }
      __swift_destroy_boxed_opaque_existential_1((unint64_t)&v99[v1626] & v1692);
      v102 = (v1721 + v100) & v1690;
      if (!__swift_getEnumTagSinglePayload(v102, 1, v1669))
        (*(void (**)(uint64_t, uint64_t))(v1661 + 8))(v102, v1669);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v103 = (((((v1728 + v102) & 0xFFFFFFFFFFFFFFF8) + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
      if (*(_QWORD *)(v103 + 24) >= 0xFFFFFFFFuLL)
        __swift_destroy_boxed_opaque_existential_1(v103);
      v104 = (v1737 + v103) & v1571;
      if (v1618 >= 0x7FFFFFFF)
      {
        v106 = (v1621 + v104) & v1569;
        if (__swift_getEnumTagSinglePayload(v106, v1613, v1625) > 1)
          goto LABEL_161;
        goto LABEL_146;
      }
      v105 = *(_QWORD *)(((v1737 + v103) & v1571) + 0x10);
      if (v105 >= 0xFFFFFFFF)
        LODWORD(v105) = -1;
      if ((int)v105 - 1 < 0)
      {
        v106 = (v1621 + v104) & v1569;
LABEL_146:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!__swift_getEnumTagSinglePayload(v106, 1, v1625))
          (*(void (**)(uint64_t, uint64_t))(v1607 + 8))(v106, v1625);
      }
LABEL_161:
      v116 = (unint64_t)&v99[v1731 + 11] & 0xFFFFFFFFFFFFFFF8;
      if (*(_QWORD *)(v116 + 24) >= 0xFFFFFFFFuLL)
      {
        __swift_destroy_boxed_opaque_existential_1((unint64_t)&v99[v1731 + 11] & 0xFFFFFFFFFFFFFFF8);
        swift_bridgeObjectRelease();
      }
      v117 = (v1668 + v116) & v1684;
      if (v1667 < 0)
      {
        v118 = (v1662 + v117) & v1682;
        if (__swift_getEnumTagSinglePayload(v118, v1622, v1663) <= 1)
        {
LABEL_167:
          swift_bridgeObjectRelease();
          if (!__swift_getEnumTagSinglePayload(v118, 1, v1663))
            (*(void (**)(uint64_t, uint64_t))(v1614 + 8))(v118, v1663);
        }
      }
      else if (*(_QWORD *)(v117 + 8) >= 0xFFFFFFFFuLL)
      {
        v118 = (v1662 + v117) & v1682;
        goto LABEL_167;
      }
      v119 = (v117 + v1664 + v1741) & v1686;
      v1556 = v97;
      v1567 = ~v1735;
      v1554 = (v117 + v1664 + v1741) & v1686;
      switch(*(_BYTE *)(v119 + v1688))
      {
        case 0:
          if (!__swift_getEnumTagSinglePayload(v119, 1, v1669))
            (*(void (**)(uint64_t, uint64_t))(v1661 + 8))(v119, v1669);
          __swift_destroy_boxed_opaque_existential_1((v1728 + v119) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v121 = v1739;
          v125 = (v1658
                + ((((((((v1728 + v119) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8)
                  + 15) & 0xFFFFFFFFFFFFFFF8)) & v1740;
          if (v1605 > 0x7FFFFFFE)
          {
            v128 = (v125 + 23) & 0xFFFFFFFFFFFFFFF8;
            v127 = ~v1734;
            v122 = v1723;
            if (__swift_getEnumTagSinglePayload((v1717 + ((v128 + 23) & 0xFFFFFFFFFFFFFFF8) + 33) & v1673, v1605, v1603))goto LABEL_482;
            goto LABEL_481;
          }
          LODWORD(v126) = -1;
          if (*(_QWORD *)(((v1658
                           + ((((((((v1728 + v119) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8)
                             + 15) & 0xFFFFFFFFFFFFFFF8)) & v1740)
                         + 8) < 0xFFFFFFFFuLL)
            v126 = *(_QWORD *)(((v1658
                               + ((((((((v1728 + v119) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8)
                                 + 15) & 0xFFFFFFFFFFFFFFF8)) & v1740)
                             + 8);
          v127 = ~v1734;
          v122 = v1723;
          if ((v126 + 1) <= 1)
          {
            v128 = (v125 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_481:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v287 = (id *)((v128 + 47) & 0xFFFFFFFFFFFFFFF8);

            (*(void (**)(unint64_t, uint64_t))(v1709 + 8))(((unint64_t)v287 + v1717 + 9) & v1673, v1603);
          }
LABEL_482:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v288 = (v1725 + ((((v125 + v1739) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v1573;
          if (v1724)
            goto LABEL_515;
          if (!*(_BYTE *)(v288 + v1720))
            goto LABEL_1155;
          v289 = (*(unsigned __int8 *)(v288 + v1720) - 1) << v1675;
          if (v1720 > 3)
            v289 = 0;
          if ((_DWORD)v1720)
          {
            if (v1720 <= 3)
              v290 = v1720;
            else
              v290 = 4;
            __asm { BR              X11 }
          }
          goto LABEL_640;
        case 1:
        case 0x17:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v121 = v1739;
          v122 = v1723;
          if (__swift_getEnumTagSinglePayload((v1621 + ((v1733 + v119 + 8) & v1571)) & v1569, 1, v1625))
            goto LABEL_314;
          v123 = *(void (**)(uint64_t, uint64_t))(v1607 + 8);
          v124 = (v1621 + ((v1733 + v119 + 8) & v1571)) & v1569;
          goto LABEL_2080;
        case 2:
        case 6:
        case 7:
        case 0xB:
        case 0xE:
        case 0xF:
        case 0x12:
        case 0x19:
        case 0x1A:
        case 0x1B:
        case 0x1C:
        case 0x1F:
        case 0x2A:
        case 0x2C:
        case 0x2E:
        case 0x2F:
        case 0x30:
        case 0x31:
        case 0x34:
          goto LABEL_313;
        case 3:
          if (!__swift_getEnumTagSinglePayload(v119, 1, v1669))
            (*(void (**)(uint64_t, uint64_t))(v1661 + 8))(v119, v1669);
          __swift_destroy_boxed_opaque_existential_1((v1728 + v119) & 0xFFFFFFFFFFFFFFF8);
          v129 = (((v1728 + v119) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          v130 = (v1725 + v129) & v1573;
          if (v1724)
          {
            v131 = v1624;
            if (v1617 >= v1624)
            {
              v132 = (v1725 + v129) & v1573;
              v131 = v1617;
              v133 = v1619;
            }
            else
            {
              v132 = (v1620 + v130) & v1575;
              v133 = v1623;
            }
            v332 = __swift_getEnumTagSinglePayload(v132, v131, v133);
            v309 = ~v1734;
            v121 = v1739;
            v122 = v1723;
          }
          else
          {
            v309 = ~v1734;
            v121 = v1739;
            v122 = v1723;
            if (!*(_BYTE *)(v130 + v1720))
              goto LABEL_1336;
            v310 = (*(unsigned __int8 *)(v130 + v1720) - 1) << v1675;
            if (v1720 > 3)
              v310 = 0;
            if ((_DWORD)v1720)
            {
              if (v1720 <= 3)
                v311 = v1720;
              else
                v311 = 4;
              __asm { BR              X11 }
            }
            v332 = v310 + 1;
          }
          if (v332)
            goto LABEL_1337;
LABEL_1336:
          (*(void (**)(unint64_t, uint64_t))(v1615 + 8))(v130, v1619);
          (*(void (**)(unint64_t, uint64_t))(v1616 + 8))((v1620 + v130) & v1575, v1623);
LABEL_1337:
          (*(void (**)(unint64_t, uint64_t))(v1591 + 8))((v1694 + v1708 + v130) & v1671, v1592);
          v1041 = (v1587 + ((v1694 + v1708 + v130) & v1671)) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v1041 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v1041);
          v1042 = (v1737 + v1041) & v1571;
          if (v1618 >= 0x7FFFFFFF)
          {
            v1044 = (v1621 + v1042) & v309;
            if (__swift_getEnumTagSinglePayload(v1044, v1613, v1625) > 1)
              goto LABEL_1347;
            goto LABEL_1345;
          }
          v1043 = *(_QWORD *)(v1042 + 16);
          if (v1043 >= 0xFFFFFFFF)
            LODWORD(v1043) = -1;
          if ((int)v1043 - 1 < 0)
          {
            v1044 = (v1621 + v1042) & v309;
LABEL_1345:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!__swift_getEnumTagSinglePayload(v1044, 1, v1625))
              (*(void (**)(uint64_t, uint64_t))(v1607 + 8))(v1044, v1625);
          }
LABEL_1347:
          v1045 = (v1600 + v1042) & v1573;
          if (v1724)
          {
            v1046 = v1624;
            if (v1617 >= v1624)
            {
              v1047 = (v1600 + v1042) & v1573;
              v1046 = v1617;
              v1048 = v1619;
            }
            else
            {
              v1047 = (v1620 + v1045) & v1575;
              v1048 = v1623;
            }
            v1051 = __swift_getEnumTagSinglePayload(v1047, v1046, v1048);
          }
          else
          {
            if (!*(_BYTE *)(v1045 + v1720))
              goto LABEL_1645;
            v1049 = (*(unsigned __int8 *)(v1045 + v1720) - 1) << v1675;
            if (v1720 > 3)
              v1049 = 0;
            if ((_DWORD)v1720)
            {
              if (v1720 <= 3)
                v1050 = v1720;
              else
                v1050 = 4;
              __asm { BR              X11 }
            }
            v1051 = v1049 + 1;
          }
          if (v1051)
            goto LABEL_1646;
LABEL_1645:
          (*(void (**)(size_t, uint64_t))(v1615 + 8))(v1045, v1619);
          (*(void (**)(size_t, uint64_t))(v1616 + 8))((v1620 + v1045) & v1575, v1623);
LABEL_1646:
          v1189 = (uint64_t *)((v1727 + v1045) & v1758);
          if ((v1624 & 0x80000000) != 0)
          {
            v1191 = __swift_getEnumTagSinglePayload(((unint64_t)v1189 + v1606) & v1575, v1624, v1623);
          }
          else
          {
            v1190 = *v1189;
            if ((unint64_t)*v1189 >= 0xFFFFFFFF)
              LODWORD(v1190) = -1;
            v1191 = v1190 + 1;
          }
          if (v1191)
            goto LABEL_314;
          swift_bridgeObjectRelease();
          v1061 = (uint64_t)v1189 + v1606;
          goto LABEL_1653;
        case 4:
          if (!__swift_getEnumTagSinglePayload(v119, 1, v1669))
            (*(void (**)(uint64_t, uint64_t))(v1661 + 8))(v119, v1669);
          __swift_destroy_boxed_opaque_existential_1((v1728 + v119) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v134 = (((((((v1728 + v119) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v134 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v134);
          v135 = (v1599 + v134) & v1571;
          if (v1618 >= 0x7FFFFFFF)
          {
            v137 = (v1621 + v135) & v1569;
            v121 = v1739;
            v122 = v1723;
            if (__swift_getEnumTagSinglePayload(v137, v1613, v1625) > 1)
              goto LABEL_494;
            goto LABEL_492;
          }
          v136 = *(_QWORD *)(v135 + 16);
          if (v136 >= 0xFFFFFFFF)
            LODWORD(v136) = -1;
          v121 = v1739;
          v122 = v1723;
          if ((int)v136 - 1 < 0)
          {
            v137 = (v1621 + v135) & v1569;
LABEL_492:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!__swift_getEnumTagSinglePayload(v137, 1, v1625))
              (*(void (**)(uint64_t, uint64_t))(v1607 + 8))(v137, v1625);
          }
LABEL_494:
          v291 = (v1600 + v135) & v1573;
          if (v1724)
          {
            v292 = v1624;
            if (v1617 >= v1624)
            {
              v293 = (v1600 + v135) & v1573;
              v292 = v1617;
              v294 = v1619;
            }
            else
            {
              v293 = (v1620 + v291) & v1575;
              v294 = v1623;
            }
            v338 = __swift_getEnumTagSinglePayload(v293, v292, v294);
          }
          else
          {
            if (!*(_BYTE *)(v291 + v1720))
              goto LABEL_1412;
            v327 = (*(unsigned __int8 *)(v291 + v1720) - 1) << v1675;
            if (v1720 > 3)
              v327 = 0;
            if ((_DWORD)v1720)
            {
              if (v1720 <= 3)
                v328 = v1720;
              else
                v328 = 4;
              __asm { BR              X11 }
            }
            v338 = v327 + 1;
          }
          if (v338)
            goto LABEL_1413;
LABEL_1412:
          (*(void (**)(size_t, uint64_t))(v1615 + 8))(v291, v1619);
          (*(void (**)(size_t, uint64_t))(v1616 + 8))((v1620 + v291) & v1575, v1623);
LABEL_1413:
          if (*(_QWORD *)(((v1608 + v291) & 0xFFFFFFFFFFFFFFF8) + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1((v1608 + v291) & 0xFFFFFFFFFFFFFFF8);
          goto LABEL_1760;
        case 5:
          if (!__swift_getEnumTagSinglePayload(v119, 1, v1669))
            (*(void (**)(uint64_t, uint64_t))(v1661 + 8))(v119, v1669);
          v138 = (v1728 + v119) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v138);
          v139 = (v1730 + v138 + 40) & v1692;
          if (v1611 == v1601)
          {
            v140 = v1669;
            v121 = v1739;
            v122 = v1723;
            if (v1719 < 2)
              goto LABEL_1203;
            v141 = v139;
            v142 = v1719;
            v143 = v1669;
LABEL_203:
            if (__swift_getEnumTagSinglePayload(v141, v142, v143) >= 2)
              goto LABEL_2032;
            goto LABEL_1203;
          }
          v295 = (v1728 + v139) & 0xFFFFFFFFFFFFFFF8;
          if (v1601 == 0x7FFFFFFF)
          {
            v140 = v1669;
            v121 = v1739;
            v122 = v1723;
            if (*(_QWORD *)(v295 + 24) < 0xFFFFFFFFuLL)
              goto LABEL_2032;
          }
          else
          {
            v340 = (v1733
                  + ((((((v295 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                  + 65) & v1571;
            v140 = v1669;
            v121 = v1739;
            v122 = v1723;
            if (v1578 != v1601)
            {
              if (v1724 < 2)
                goto LABEL_1203;
              v141 = (v1600 + v340) & v1573;
              v142 = v1624;
              if (v1617 >= v1624)
              {
                v142 = v1617;
                v143 = v1619;
              }
              else
              {
                v141 = (v1620 + v141) & v1575;
                v143 = v1623;
              }
              goto LABEL_203;
            }
            if (v1618 > 0x7FFFFFFE)
            {
              v938 = __swift_getEnumTagSinglePayload((v1621 + v340) & v1569, v1613, v1625);
              if (v938 < 2)
                goto LABEL_1203;
              v343 = v938 - 1;
            }
            else
            {
              v341 = *(_QWORD *)(v340 + 16);
              if (v341 >= 0xFFFFFFFF)
                LODWORD(v341) = -1;
              v342 = v341 - 1;
              if (v342 < 0)
                v342 = -1;
              v343 = v342 + 1;
            }
            if (v343 >= 2)
              goto LABEL_2032;
          }
LABEL_1203:
          if (!__swift_getEnumTagSinglePayload(v139, 1, v140))
            (*(void (**)(uint64_t, uint64_t))(v1661 + 8))(v139, v140);
          __swift_destroy_boxed_opaque_existential_1((v1728 + v139) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v939 = (((((((v1728 + v139) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v939 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v939);
          v940 = (v1599 + v939) & v1571;
          if (v1618 >= 0x7FFFFFFF)
          {
            v942 = (v1621 + v940) & v1569;
            if (__swift_getEnumTagSinglePayload(v942, v1613, v1625) > 1)
              goto LABEL_1215;
            goto LABEL_1213;
          }
          v941 = *(_QWORD *)(v940 + 16);
          if (v941 >= 0xFFFFFFFF)
            LODWORD(v941) = -1;
          if ((int)v941 - 1 < 0)
          {
            v942 = (v1621 + v940) & v1569;
LABEL_1213:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!__swift_getEnumTagSinglePayload(v942, 1, v1625))
              (*(void (**)(uint64_t, uint64_t))(v1607 + 8))(v942, v1625);
          }
LABEL_1215:
          v943 = (v1600 + v940) & v1573;
          if (v1724)
          {
            v944 = v1624;
            if (v1617 >= v1624)
            {
              v945 = (v1600 + v940) & v1573;
              v944 = v1617;
              v946 = v1619;
            }
            else
            {
              v945 = (v1620 + v943) & v1575;
              v946 = v1623;
            }
            v949 = __swift_getEnumTagSinglePayload(v945, v944, v946);
          }
          else
          {
            if (!*(_BYTE *)(v943 + v1720))
              goto LABEL_2028;
            v947 = (*(unsigned __int8 *)(v943 + v1720) - 1) << v1675;
            if (v1720 > 3)
              v947 = 0;
            if ((_DWORD)v1720)
            {
              if (v1720 <= 3)
                v948 = v1720;
              else
                v948 = 4;
              __asm { BR              X11 }
            }
            v949 = v947 + 1;
          }
          if (v949)
            goto LABEL_2029;
LABEL_2028:
          (*(void (**)(size_t, uint64_t))(v1615 + 8))(v943, v1619);
          (*(void (**)(size_t, uint64_t))(v1616 + 8))((v1620 + v943) & v1575, v1623);
LABEL_2029:
          if (*(_QWORD *)(((v1608 + v943) & 0xFFFFFFFFFFFFFFF8) + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1((v1608 + v943) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          v140 = v1669;
LABEL_2032:
          v1387 = ~v1730;
          v1388 = (unsigned __int8 *)((v1596 + v139) & v1692);
          if (*v1388 > 2u)
            goto LABEL_2168;
          v1389 = (unint64_t)&v1388[v1626] & v1692;
          v1390 = *(unsigned __int8 *)(v1389 + v1660);
          if (v1390 > 2)
            goto LABEL_2168;
          if (v1390 != 2)
          {
            if (v1390 != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v1387 = ~v1730;
              goto LABEL_2168;
            }
            __swift_destroy_boxed_opaque_existential_1((unint64_t)&v1388[v1626] & v1692);
            v1391 = v140;
            v1392 = (v1721 + v1389) & v1690;
            if (!__swift_getEnumTagSinglePayload(v1392, 1, v1391))
              (*(void (**)(uint64_t, uint64_t))(v1661 + 8))(v1392, v1669);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v1393 = (((((v1728 + v1392) & 0xFFFFFFFFFFFFFFF8) + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
            if (*(_QWORD *)(v1393 + 24) >= 0xFFFFFFFFuLL)
              __swift_destroy_boxed_opaque_existential_1(v1393);
            v1394 = (v1737 + v1393) & v1571;
            if (v1618 >= 0x7FFFFFFF)
            {
              v1396 = (v1621 + v1394) & v1569;
              v1387 = ~v1730;
              if (__swift_getEnumTagSinglePayload(v1396, v1613, v1625) > 1)
                goto LABEL_2168;
            }
            else
            {
              v1395 = *(_QWORD *)(((v1737 + v1393) & v1571) + 0x10);
              if (v1395 >= 0xFFFFFFFF)
                LODWORD(v1395) = -1;
              v1387 = ~v1730;
              if ((int)v1395 - 1 >= 0)
                goto LABEL_2168;
              v1396 = (v1621 + v1394) & v1569;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v1387 = ~v1730;
            if (!__swift_getEnumTagSinglePayload(v1396, 1, v1625))
              (*(void (**)(uint64_t, uint64_t))(v1607 + 8))(v1396, v1625);
LABEL_2168:
            swift_bridgeObjectRelease();
            v1484 = (unsigned __int8 *)((v1598 + ((unint64_t)&v1388[v1597] & 0xFFFFFFFFFFFFFFF8)) & v1387);
            v3 = v1722;
            v96 = v1720;
            if (*v1484 > 2u)
              goto LABEL_314;
            v1485 = (unint64_t)&v1484[v1626] & v1692;
            v1486 = *(unsigned __int8 *)(v1485 + v1660);
            if (v1486 > 2)
              goto LABEL_314;
            if (v1486 == 2)
            {
              if (*(_QWORD *)(v1485 + 8) >= 0xFFFFFFFFuLL)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(_QWORD *)(v1485 + 56))
                  __swift_destroy_boxed_opaque_existential_1(v1485 + 32);
              }
              v1489 = (v1485 + 79) & 0xFFFFFFFFFFFFFFF8;
              if (*(_QWORD *)(v1489 + 8) >= 0xFFFFFFFFuLL)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(_QWORD *)(v1489 + 56))
                  __swift_destroy_boxed_opaque_existential_1(v1489 + 32);
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v192 = (v1609 + ((((v1489 + 79) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v1573;
              if (v1724)
              {
LABEL_286:
                v166 = v1624;
LABEL_1380:
                if (v1617 >= v166)
                {
                  v1058 = v192;
                  v166 = v1617;
                  v1059 = v1619;
                }
                else
                {
                  v1058 = (v1620 + v192) & v1575;
                  v1059 = v1623;
                }
                if (__swift_getEnumTagSinglePayload(v1058, v166, v1059))
                  goto LABEL_314;
              }
              else if (*(_BYTE *)(v192 + v1720))
              {
                v1490 = (*(unsigned __int8 *)(v192 + v1720) - 1) << v1675;
                if (v1720 > 3)
                  v1490 = 0;
                if ((_DWORD)v1720)
                {
                  if (v1720 <= 3)
                    v1491 = v1720;
                  else
                    v1491 = 4;
                  __asm { BR              X11 }
                }
                v3 = v1722;
                v122 = v1723;
                v96 = v1720;
                v121 = v1739;
                if (v1490 != -1)
                  goto LABEL_314;
              }
LABEL_1394:
              (*(void (**)(unint64_t, uint64_t))(v1615 + 8))(v192, v1619);
              v1061 = v1620 + v192;
LABEL_1653:
              (*(void (**)(uint64_t, uint64_t))(v1616 + 8))(v1061 & v1575, v1623);
              goto LABEL_314;
            }
            if (v1486 == 1)
            {
              __swift_destroy_boxed_opaque_existential_1(v1485);
              v1487 = (v1721 + v1485) & v1690;
              if (!__swift_getEnumTagSinglePayload(v1487, 1, v1669))
                (*(void (**)(uint64_t, uint64_t))(v1661 + 8))(v1487, v1669);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v1488 = (((((v1728 + v1487) & 0xFFFFFFFFFFFFFFF8) + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
              if (*(_QWORD *)(v1488 + 24) >= 0xFFFFFFFFuLL)
                __swift_destroy_boxed_opaque_existential_1(v1488);
              v157 = (v1737 + v1488) & v1571;
              goto LABEL_2071;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_1760:
            swift_bridgeObjectRelease();
            goto LABEL_314;
          }
          if (*(_QWORD *)(((unint64_t)&v1388[v1626] & v1692) + 8) >= 0xFFFFFFFFuLL)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(_QWORD *)(((unint64_t)&v1388[v1626] & v1692) + 0x38))
              __swift_destroy_boxed_opaque_existential_1(v1389 + 32);
          }
          v1397 = (v1389 + 79) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v1397 + 8) >= 0xFFFFFFFFuLL)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(_QWORD *)(v1397 + 56))
              __swift_destroy_boxed_opaque_existential_1(v1397 + 32);
          }
          swift_bridgeObjectRelease();
          v1398 = (((v1397 + 79) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          v1399 = (v1609 + v1398) & v1573;
          if (v1724)
          {
            v1400 = v1624;
            if (v1617 >= v1624)
            {
              v1401 = (v1609 + v1398) & v1573;
              v1400 = v1617;
              v1402 = v1619;
            }
            else
            {
              v1401 = (v1620 + v1399) & v1575;
              v1402 = v1623;
            }
            v1405 = __swift_getEnumTagSinglePayload(v1401, v1400, v1402);
          }
          else
          {
            v1387 = ~v1730;
            if (!*(_BYTE *)(v1399 + v1720))
            {
LABEL_2167:
              (*(void (**)(unint64_t, uint64_t))(v1615 + 8))(v1399, v1619);
              (*(void (**)(unint64_t, uint64_t))(v1616 + 8))((v1620 + v1399) & v1575, v1623);
              goto LABEL_2168;
            }
            v1403 = (*(unsigned __int8 *)(v1399 + v1720) - 1) << v1675;
            if (v1720 > 3)
              v1403 = 0;
            if ((_DWORD)v1720)
            {
              if (v1720 <= 3)
                v1404 = v1720;
              else
                v1404 = 4;
              __asm { BR              X11 }
            }
            v1405 = v1403 + 1;
            v121 = v1739;
            v122 = v1723;
          }
          v1387 = ~v1730;
          if (v1405)
            goto LABEL_2168;
          goto LABEL_2167;
        case 8:
          if (!__swift_getEnumTagSinglePayload(v119, 1, v1669))
            (*(void (**)(uint64_t, uint64_t))(v1661 + 8))(v119, v1669);
          __swift_destroy_boxed_opaque_existential_1((v1728 + v119) & 0xFFFFFFFFFFFFFFF8);
          v144 = (v1737 + ((v1728 + v119) & 0xFFFFFFFFFFFFFFF8)) & v1571;
          if (v1618 >= 0x7FFFFFFF)
          {
            v146 = (v1621 + v144) & v1569;
            v121 = v1739;
            v122 = v1723;
            if (__swift_getEnumTagSinglePayload(v146, v1613, v1625) > 1)
              goto LABEL_503;
          }
          else
          {
            v145 = *(_QWORD *)(((v1737 + ((v1728 + v119) & 0xFFFFFFFFFFFFFFF8)) & v1571) + 0x10);
            if (v145 >= 0xFFFFFFFF)
              LODWORD(v145) = -1;
            v121 = v1739;
            v122 = v1723;
            if ((int)v145 - 1 >= 0)
            {
LABEL_503:
              swift_bridgeObjectRelease();
              if (*(_QWORD *)(((((((v1715 + v144) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                             + 8) >= 0xFFFFFFFFuLL)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              goto LABEL_1760;
            }
            v146 = (v1621 + v144) & v1569;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!__swift_getEnumTagSinglePayload(v146, 1, v1625))
            (*(void (**)(uint64_t, uint64_t))(v1607 + 8))(v146, v1625);
          goto LABEL_503;
        case 9:
          if (!__swift_getEnumTagSinglePayload(v119, 1, v1669))
            (*(void (**)(uint64_t, uint64_t))(v1661 + 8))(v119, v1669);
          __swift_destroy_boxed_opaque_existential_1((v1728 + v119) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          v147 = ~v1734;
          v148 = (v1734 + ((((v1728 + v119) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 16) & v1569;
          if (!__swift_getEnumTagSinglePayload(v148, 1, v1625))
            (*(void (**)(unint64_t, uint64_t))(v1607 + 8))(v148, v1625);
          v149 = (v1583 + v148) & v1573;
          if (v1724)
          {
            v150 = v1624;
            if (v1617 >= v1624)
            {
              v151 = (v1583 + v148) & v1573;
              v150 = v1617;
              v152 = v1619;
            }
            else
            {
              v151 = (v1620 + v149) & v1575;
              v152 = v1623;
            }
            v333 = __swift_getEnumTagSinglePayload(v151, v150, v152);
            v312 = v1624;
            v122 = v1723;
          }
          else
          {
            v312 = v1624;
            v122 = v1723;
            if (!*(_BYTE *)(v149 + v1720))
              goto LABEL_1362;
            v313 = (*(unsigned __int8 *)(v149 + v1720) - 1) << v1675;
            if (v1720 > 3)
              v313 = 0;
            if ((_DWORD)v1720)
            {
              if (v1720 <= 3)
                v314 = v1720;
              else
                v314 = 4;
              __asm { BR              X11 }
            }
            v333 = v313 + 1;
          }
          if (v333)
            goto LABEL_1363;
LABEL_1362:
          (*(void (**)(unint64_t, uint64_t))(v1615 + 8))(v149, v1619);
          (*(void (**)(unint64_t, uint64_t))(v1616 + 8))((v1620 + v149) & v1575, v1623);
          v312 = v1624;
LABEL_1363:
          v1052 = (v1579 + v149) & v1573;
          if (v1724)
          {
            if (v1617 >= v312)
            {
              v1053 = v1052;
              v312 = v1617;
              v1054 = v1619;
            }
            else
            {
              v1053 = (v1620 + v1052) & v1575;
              v1054 = v1623;
            }
            v1057 = __swift_getEnumTagSinglePayload(v1053, v312, v1054);
            v121 = v1739;
          }
          else
          {
            v121 = v1739;
            if (!*(_BYTE *)(v1052 + v1720))
              goto LABEL_1655;
            v1055 = (*(unsigned __int8 *)(v1052 + v1720) - 1) << v1675;
            if (v1720 > 3)
              v1055 = 0;
            if ((_DWORD)v1720)
            {
              if (v1720 <= 3)
                v1056 = v1720;
              else
                v1056 = 4;
              __asm { BR              X11 }
            }
            v1057 = v1055 + 1;
          }
          if (v1057)
            goto LABEL_1656;
LABEL_1655:
          (*(void (**)(uint64_t, uint64_t))(v1615 + 8))(v1052, v1619);
          (*(void (**)(uint64_t, uint64_t))(v1616 + 8))((v1620 + v1052) & v1575, v1623);
LABEL_1656:
          v1192 = (uint64_t *)((v1727 + v1052) & v1758);
          if ((v1624 & 0x80000000) != 0)
          {
            v1196 = v1575;
            v1194 = __swift_getEnumTagSinglePayload(((unint64_t)v1192 + v1606) & v1575, v1624, v1623);
            v1195 = ~v1733;
          }
          else
          {
            v1193 = *v1192;
            if ((unint64_t)*v1192 >= 0xFFFFFFFF)
              LODWORD(v1193) = -1;
            v1194 = v1193 + 1;
            v1195 = ~v1733;
            v1196 = v1575;
          }
          if (!v1194)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v1616 + 8))(((unint64_t)v1192 + v1606) & v1196, v1623);
          }
          v157 = ((unint64_t)v1192 + v1659) & v1195;
          goto LABEL_1751;
        case 0xA:
          __swift_destroy_boxed_opaque_existential_1(v119);
          if (!__swift_getEnumTagSinglePayload((v1721 + v119) & v1690, 1, v1669))
            (*(void (**)(uint64_t, uint64_t))(v1661 + 8))((v1721 + v119) & v1690, v1669);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_313;
        case 0xC:
          if (!__swift_getEnumTagSinglePayload(v119, 1, v1669))
            (*(void (**)(uint64_t, uint64_t))(v1661 + 8))(v119, v1669);
          __swift_destroy_boxed_opaque_existential_1((v1728 + v119) & 0xFFFFFFFFFFFFFFF8);
          v153 = (v1717 + ((v1728 + v119) & 0xFFFFFFFFFFFFFFF8) + 40) & v1740;
          if (v1605 > 0x7FFFFFFE)
          {
            v155 = (v153 + 23) & 0xFFFFFFFFFFFFFFF8;
            v121 = v1739;
            v122 = v1723;
            if (__swift_getEnumTagSinglePayload((v1717 + ((v155 + 23) & 0xFFFFFFFFFFFFFFF8) + 33) & v1673, v1605, v1603))goto LABEL_1760;
          }
          else
          {
            LODWORD(v154) = -1;
            if (*(_QWORD *)(((v1717 + ((v1728 + v119) & 0xFFFFFFFFFFFFFFF8) + 40) & v1740) + 8) < 0xFFFFFFFFuLL)
              v154 = *(_QWORD *)(((v1717 + ((v1728 + v119) & 0xFFFFFFFFFFFFFFF8) + 40) & v1740) + 8);
            v121 = v1739;
            v122 = v1723;
            if ((v154 + 1) > 1)
              goto LABEL_1760;
            v155 = (v153 + 23) & 0xFFFFFFFFFFFFFFF8;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v296 = (id *)((v155 + 47) & 0xFFFFFFFFFFFFFFF8);

          (*(void (**)(unint64_t, uint64_t))(v1709 + 8))(((unint64_t)v296 + v1717 + 9) & v1673, v1603);
          goto LABEL_1760;
        case 0xD:
          __swift_destroy_boxed_opaque_existential_1(v119);
          v156 = (v1721 + v119) & v1690;
          if (!__swift_getEnumTagSinglePayload(v156, 1, v1669))
            (*(void (**)(uint64_t, uint64_t))(v1661 + 8))(v156, v1669);
          swift_bridgeObjectRelease();
          v157 = (v1581 + ((v1728 + v156) & 0xFFFFFFFFFFFFFFF8)) & v1571;
          v121 = v1739;
          v122 = v1723;
          if (v1618 >= 0x7FFFFFFF)
            goto LABEL_2076;
          goto LABEL_2072;
        case 0x10:
          __swift_destroy_boxed_opaque_existential_1(v119);
          v158 = (v1721 + v119) & v1690;
          if (!__swift_getEnumTagSinglePayload(v158, 1, v1669))
            (*(void (**)(uint64_t, uint64_t))(v1661 + 8))(v158, v1669);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v159 = (((((((v1728 + v158) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v159 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v159);
          v160 = v159 + 47;
          goto LABEL_304;
        case 0x11:
          __swift_destroy_boxed_opaque_existential_1(v119);
          v161 = (v1721 + v119) & v1690;
          if (!__swift_getEnumTagSinglePayload(v161, 1, v1669))
            (*(void (**)(uint64_t, uint64_t))(v1661 + 8))(v161, v1669);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v162 = (((((((((v1728 + v161) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                  + 23) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v162 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v162);
          v163 = (v162 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v163 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v163);
          v164 = (v163 + 47) & 0xFFFFFFFFFFFFFFF8;
          v121 = v1739;
          v122 = v1723;
          if (*(_QWORD *)(v164 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v164);
          v165 = (v1586 + v164) & v1573;
          v166 = v1624;
          if (v1724)
          {
            if (v1617 >= v1624)
            {
              v167 = (v1586 + v164) & v1573;
              v166 = v1617;
              v168 = v1619;
            }
            else
            {
              v167 = (v1620 + v165) & v1575;
              v168 = v1623;
            }
            v334 = __swift_getEnumTagSinglePayload(v167, v166, v168);
            v166 = v1624;
          }
          else
          {
            if (!*(_BYTE *)(v165 + v1720))
              goto LABEL_1378;
            v315 = (*(unsigned __int8 *)(v165 + v1720) - 1) << v1675;
            if (v1720 > 3)
              v315 = 0;
            if ((_DWORD)v1720)
            {
              if (v1720 <= 3)
                v316 = v1720;
              else
                v316 = 4;
              __asm { BR              X11 }
            }
            v334 = v315 + 1;
          }
          if (v334)
            goto LABEL_1379;
LABEL_1378:
          (*(void (**)(unint64_t, uint64_t))(v1615 + 8))(v165, v1619);
          (*(void (**)(unint64_t, uint64_t))(v1616 + 8))((v1620 + v165) & v1575, v1623);
          v166 = v1624;
LABEL_1379:
          v192 = (v1602 + v165) & v1573;
          if (v1724)
            goto LABEL_1380;
          if (!*(_BYTE *)(v192 + v1720))
            goto LABEL_1394;
          v319 = (*(unsigned __int8 *)(v192 + v1720) - 1) << v1675;
          if (v1720 > 3)
            v319 = 0;
          if ((_DWORD)v1720)
          {
            if (v1720 <= 3)
              v1060 = v1720;
            else
              v1060 = 4;
            __asm { BR              X11 }
          }
LABEL_1393:
          if (v319 == -1)
            goto LABEL_1394;
          goto LABEL_314;
        case 0x13:
          if (!__swift_getEnumTagSinglePayload(v119, 1, v1669))
            (*(void (**)(uint64_t, uint64_t))(v1661 + 8))(v119, v1669);
          __swift_destroy_boxed_opaque_existential_1((v1728 + v119) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_313;
        case 0x14:
          if (!__swift_getEnumTagSinglePayload(v119, 1, v1669))
            (*(void (**)(uint64_t, uint64_t))(v1661 + 8))(v119, v1669);
          v169 = (v1728 + v119) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v169);
          v170 = (v1730 + v169 + 40) & v1692;
          if (v1611 == v1601)
          {
            v171 = v1669;
            v121 = v1739;
            v122 = v1723;
            if (v1719 < 2)
              goto LABEL_1231;
            v172 = v170;
            v173 = v1719;
            v174 = v1669;
LABEL_257:
            if (__swift_getEnumTagSinglePayload(v172, v173, v174) >= 2)
              goto LABEL_2070;
            goto LABEL_1231;
          }
          v297 = (v1728 + v170) & 0xFFFFFFFFFFFFFFF8;
          if (v1601 == 0x7FFFFFFF)
          {
            v171 = v1669;
            v121 = v1739;
            v122 = v1723;
            if (*(_QWORD *)(v297 + 24) < 0xFFFFFFFFuLL)
              goto LABEL_2070;
          }
          else
          {
            v344 = (v1737
                  + ((((((((v297 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                    + 47) & 0xFFFFFFFFFFFFFFF8)) & v1571;
            v171 = v1669;
            v121 = v1739;
            v122 = v1723;
            if (v1578 != v1601)
            {
              if (v1724 < 2)
                goto LABEL_1231;
              v172 = (v1600 + v344) & v1573;
              v173 = v1624;
              if (v1617 >= v1624)
              {
                v173 = v1617;
                v174 = v1619;
              }
              else
              {
                v172 = (v1620 + v172) & v1575;
                v174 = v1623;
              }
              goto LABEL_257;
            }
            if (v1618 > 0x7FFFFFFE)
            {
              v950 = __swift_getEnumTagSinglePayload((v1621 + v344) & v1569, v1613, v1625);
              if (v950 < 2)
                goto LABEL_1231;
              v347 = v950 - 1;
            }
            else
            {
              v345 = *(_QWORD *)(v344 + 16);
              if (v345 >= 0xFFFFFFFF)
                LODWORD(v345) = -1;
              v346 = v345 - 1;
              if (v346 < 0)
                v346 = -1;
              v347 = v346 + 1;
            }
            if (v347 >= 2)
              goto LABEL_2070;
          }
LABEL_1231:
          if (!__swift_getEnumTagSinglePayload(v170, 1, v171))
            (*(void (**)(uint64_t, uint64_t))(v1661 + 8))(v170, v171);
          __swift_destroy_boxed_opaque_existential_1((v1728 + v170) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v951 = (((((((v1728 + v170) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v951 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v951);
          v952 = (v951 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v952 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v952);
          v953 = (v1737 + v952) & v1571;
          if (v1618 >= 0x7FFFFFFF)
          {
            v955 = (v1621 + v953) & v1569;
            if (__swift_getEnumTagSinglePayload(v955, v1613, v1625) > 1)
              goto LABEL_1245;
          }
          else
          {
            v954 = *(_QWORD *)(v953 + 16);
            if (v954 >= 0xFFFFFFFF)
              LODWORD(v954) = -1;
            if ((int)v954 - 1 >= 0)
            {
LABEL_1245:
              v956 = (v1600 + v953) & v1573;
              if (v1724)
              {
                v957 = v1624;
                if (v1617 >= v1624)
                {
                  v958 = (v1600 + v953) & v1573;
                  v957 = v1617;
                  v959 = v1619;
                }
                else
                {
                  v958 = (v1620 + v956) & v1575;
                  v959 = v1623;
                }
                v962 = __swift_getEnumTagSinglePayload(v958, v957, v959);
              }
              else
              {
                if (!*(_BYTE *)(v956 + v1720))
                  goto LABEL_2069;
                v960 = (*(unsigned __int8 *)(v956 + v1720) - 1) << v1675;
                if (v1720 > 3)
                  v960 = 0;
                if ((_DWORD)v1720)
                {
                  if (v1720 <= 3)
                    v961 = v1720;
                  else
                    v961 = 4;
                  __asm { BR              X11 }
                }
                v962 = v960 + 1;
              }
              if (v962)
              {
LABEL_2070:
                swift_bridgeObjectRelease();
                v157 = (v1595 + ((v1594 + v170) & 0xFFFFFFFFFFFFFFF8)) & v1571;
LABEL_2071:
                if (v1618 < 0x7FFFFFFF)
                  goto LABEL_2072;
LABEL_2076:
                v1242 = (v1621 + v157) & v1569;
                goto LABEL_2077;
              }
LABEL_2069:
              (*(void (**)(size_t, uint64_t))(v1615 + 8))(v956, v1619);
              (*(void (**)(size_t, uint64_t))(v1616 + 8))((v1620 + v956) & v1575, v1623);
              goto LABEL_2070;
            }
            v955 = (v1621 + v953) & v1569;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!__swift_getEnumTagSinglePayload(v955, 1, v1625))
            (*(void (**)(uint64_t, uint64_t))(v1607 + 8))(v955, v1625);
          goto LABEL_1245;
        case 0x15:
          if (!__swift_getEnumTagSinglePayload(v119, 1, v1669))
            (*(void (**)(uint64_t, uint64_t))(v1661 + 8))(v119, v1669);
          goto LABEL_300;
        case 0x16:
          if (!__swift_getEnumTagSinglePayload(v119, 1, v1669))
            (*(void (**)(uint64_t, uint64_t))(v1661 + 8))(v119, v1669);
          __swift_destroy_boxed_opaque_existential_1((v1728 + v119) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v121 = v1739;
          v175 = (v1658
                + ((((((((v1728 + v119) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8)
                  + 15) & 0xFFFFFFFFFFFFFFF8)) & v1740;
          if (v1605 > 0x7FFFFFFE)
          {
            v177 = (v175 + 23) & 0xFFFFFFFFFFFFFFF8;
            v127 = ~v1734;
            v122 = v1723;
            if (__swift_getEnumTagSinglePayload((v1717 + ((v177 + 23) & 0xFFFFFFFFFFFFFFF8) + 33) & v1673, v1605, v1603))goto LABEL_514;
            goto LABEL_513;
          }
          LODWORD(v176) = -1;
          if (*(_QWORD *)(((v1658
                           + ((((((((v1728 + v119) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8)
                             + 15) & 0xFFFFFFFFFFFFFFF8)) & v1740)
                         + 8) < 0xFFFFFFFFuLL)
            v176 = *(_QWORD *)(((v1658
                               + ((((((((v1728 + v119) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8)
                                 + 15) & 0xFFFFFFFFFFFFFFF8)) & v1740)
                             + 8);
          v127 = ~v1734;
          v122 = v1723;
          if ((v176 + 1) <= 1)
          {
            v177 = (v175 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_513:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v298 = (id *)((v177 + 47) & 0xFFFFFFFFFFFFFFF8);

            (*(void (**)(unint64_t, uint64_t))(v1709 + 8))(((unint64_t)v298 + v1717 + 9) & v1673, v1603);
          }
LABEL_514:
          swift_bridgeObjectRelease();
          v288 = (v1585 + ((v175 + v1739) & 0xFFFFFFFFFFFFFFF8)) & v1573;
          if (v1724)
          {
LABEL_515:
            v299 = v1624;
            if (v1617 >= v1624)
            {
              v300 = v288;
              v299 = v1617;
              v301 = v1619;
            }
            else
            {
              v300 = (v1620 + v288) & v1575;
              v301 = v1623;
            }
            v302 = __swift_getEnumTagSinglePayload(v300, v299, v301);
          }
          else
          {
            if (!*(_BYTE *)(v288 + v1720))
            {
LABEL_1155:
              (*(void (**)(unint64_t, uint64_t))(v1615 + 8))(v288, v1619);
              (*(void (**)(unint64_t, uint64_t))(v1616 + 8))((v1620 + v288) & v1575, v1623);
LABEL_1156:
              v921 = (uint64_t *)((v1727 + v288) & v1758);
              if ((v1624 & 0x80000000) != 0)
              {
                v925 = v1575;
                v923 = __swift_getEnumTagSinglePayload(((unint64_t)v921 + v1606) & v1575, v1624, v1623);
                v924 = ~v1733;
              }
              else
              {
                v922 = *v921;
                if ((unint64_t)*v921 >= 0xFFFFFFFF)
                  LODWORD(v922) = -1;
                v923 = v922 + 1;
                v924 = ~v1733;
                v925 = v1575;
              }
              if (!v923)
              {
                swift_bridgeObjectRelease();
                (*(void (**)(unint64_t, uint64_t))(v1616 + 8))(((unint64_t)v921 + v1606) & v925, v1623);
              }
              v926 = ((unint64_t)v921 + v1659) & v924;
              if (v1618 >= 0x7FFFFFFF)
              {
                v928 = (v1621 + v926) & v127;
                if (__swift_getEnumTagSinglePayload(v928, v1613, v1625) > 1)
                  goto LABEL_1171;
              }
              else
              {
                v927 = *(_QWORD *)(v926 + 16);
                if (v927 >= 0xFFFFFFFF)
                  LODWORD(v927) = -1;
                if ((int)v927 - 1 >= 0)
                {
LABEL_1171:
                  v929 = (v1655 + v926) & v1567;
                  if (v1611 < 0x7FFFFFFF)
                  {
                    v932 = v1669;
                    v931 = v1719;
                    if (*(_QWORD *)(((v1728 + v929) & 0xFFFFFFFFFFFFF8) + 0x18) <= 0xFFFFFFFEuLL)
                    {
                      v933 = (v1657 + v929) & v1567;
                      goto LABEL_1183;
                    }
                  }
                  else
                  {
                    v930 = (v1655 + v926) & v1567;
                    v931 = v1719;
                    v932 = v1669;
                    if (__swift_getEnumTagSinglePayload(v930, v1719, v1669) >= 2)
                    {
                      v933 = (v1657 + v929) & v1567;
                      goto LABEL_1180;
                    }
                  }
                  if (!__swift_getEnumTagSinglePayload(v929, 1, v932))
                    (*(void (**)(uint64_t, uint64_t))(v1661 + 8))(v929, v932);
                  __swift_destroy_boxed_opaque_existential_1((v1728 + v929) & 0xFFFFFFFFFFFFFFF8);
                  v934 = (((v1728 + v929) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
                  if (*(_QWORD *)(v934 + 24) >= 0xFFFFFFFFuLL)
                    __swift_destroy_boxed_opaque_existential_1(v934);
                  swift_bridgeObjectRelease();
                  v933 = (v1657 + v929) & v1567;
                  v932 = v1669;
                  if (v1611 >= 0x7FFFFFFF)
                  {
LABEL_1180:
                    if (__swift_getEnumTagSinglePayload(v933, v931, v932) >= 2)
                    {
                      v935 = (v1657 + v933) & v1567;
                      goto LABEL_1189;
                    }
                    goto LABEL_1184;
                  }
LABEL_1183:
                  if (*(_QWORD *)(((v1728 + v933) & 0xFFFFFFFFFFFFF8) + 0x18) <= 0xFFFFFFFEuLL)
                  {
                    v935 = (v1657 + v933) & v1567;
                    goto LABEL_1192;
                  }
LABEL_1184:
                  if (!__swift_getEnumTagSinglePayload(v933, 1, v932))
                    (*(void (**)(uint64_t, uint64_t))(v1661 + 8))(v933, v932);
                  __swift_destroy_boxed_opaque_existential_1((v1728 + v933) & 0xFFFFFFFFFFFFFFF8);
                  v936 = (((v1728 + v933) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
                  if (*(_QWORD *)(v936 + 24) >= 0xFFFFFFFFuLL)
                    __swift_destroy_boxed_opaque_existential_1(v936);
                  swift_bridgeObjectRelease();
                  v935 = (v1657 + v933) & v1567;
                  v932 = v1669;
                  if (v1611 >= 0x7FFFFFFF)
                  {
LABEL_1189:
                    if (__swift_getEnumTagSinglePayload(v935, v931, v932) >= 2)
                      goto LABEL_1198;
                    goto LABEL_1193;
                  }
LABEL_1192:
                  if (*(_QWORD *)(((v1728 + v935) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                    goto LABEL_1198;
LABEL_1193:
                  if (!__swift_getEnumTagSinglePayload(v935, 1, v1669))
                    (*(void (**)(uint64_t, uint64_t))(v1661 + 8))(v935, v1669);
                  __swift_destroy_boxed_opaque_existential_1((v1728 + v935) & 0xFFFFFFFFFFFFFFF8);
                  v937 = (((v1728 + v935) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
                  if (*(_QWORD *)(v937 + 24) >= 0xFFFFFFFFuLL)
                    __swift_destroy_boxed_opaque_existential_1(v937);
                  swift_bridgeObjectRelease();
LABEL_1198:
                  v200 = v1656;
                  if ((_DWORD)v931)
                    goto LABEL_315;
                  goto LABEL_314;
                }
                v928 = (v1621 + v926) & v127;
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (!__swift_getEnumTagSinglePayload(v928, 1, v1625))
                (*(void (**)(uint64_t, uint64_t))(v1607 + 8))(v928, v1625);
              goto LABEL_1171;
            }
            v289 = (*(unsigned __int8 *)(v288 + v1720) - 1) << v1675;
            if (v1720 > 3)
              v289 = 0;
            if ((_DWORD)v1720)
            {
              if (v1720 <= 3)
                v329 = v1720;
              else
                v329 = 4;
              __asm { BR              X11 }
            }
LABEL_640:
            v302 = v289 + 1;
          }
          if (v302)
            goto LABEL_1156;
          goto LABEL_1155;
        case 0x18:
          if (!__swift_getEnumTagSinglePayload(v119, 1, v1669))
            (*(void (**)(uint64_t, uint64_t))(v1661 + 8))(v119, v1669);
          __swift_destroy_boxed_opaque_existential_1((v1728 + v119) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          goto LABEL_313;
        case 0x1D:
          __swift_destroy_boxed_opaque_existential_1(v119);
          if (!__swift_getEnumTagSinglePayload((v1721 + v119) & v1690, 1, v1669))
            (*(void (**)(uint64_t, uint64_t))(v1661 + 8))((v1721 + v119) & v1690, v1669);
          goto LABEL_313;
        case 0x1E:
          __swift_destroy_boxed_opaque_existential_1(v119);
          v178 = v119 + 51;
          v179 = v1669;
          v180 = v178 & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          v181 = (v180 + 23) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          v182 = v1710;
          goto LABEL_277;
        case 0x20:
          swift_bridgeObjectRelease();
          v183 = v119 + 23;
          v179 = v1669;
          v181 = v183 & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v183 & 0xFFFFFFFFFFFFFFF8);
          v182 = v1721;
LABEL_277:
          v184 = (v182 + v181) & v1690;
          v185 = v184;
          v186 = v179;
          goto LABEL_431;
        case 0x21:
          if (v1724)
          {
            v187 = v1624;
            v188 = v1575;
            if (v1617 >= v1624)
            {
              v189 = v119;
              v187 = v1617;
              v190 = v1619;
            }
            else
            {
              v189 = (v1620 + v119) & v1575;
              v190 = v1623;
            }
            v335 = __swift_getEnumTagSinglePayload(v189, v187, v190);
            v121 = v1739;
            v122 = v1723;
          }
          else
          {
            v188 = v1575;
            v121 = v1739;
            v122 = v1723;
            if (!*(_BYTE *)(v119 + v1720))
              goto LABEL_1754;
            v317 = (*(unsigned __int8 *)(v119 + v1720) - 1) << v1675;
            if (v1720 > 3)
              v317 = 0;
            if ((_DWORD)v1720)
            {
              if (v1720 <= 3)
                v318 = v1720;
              else
                v318 = 4;
              __asm { BR              X11 }
            }
            v335 = v317 + 1;
          }
          if (v335)
            goto LABEL_1755;
LABEL_1754:
          (*(void (**)(uint64_t, uint64_t))(v1615 + 8))(v119, v1619);
          (*(void (**)(uint64_t, uint64_t))(v1616 + 8))((v1620 + v119) & v188, v1623);
LABEL_1755:
          __swift_destroy_boxed_opaque_existential_1((v1608 + v119) & 0xFFFFFFFFFFFFFFF8);
          v1243 = (v1721 + ((v1608 + v119) & 0xFFFFFFFFFFFFFFF8)) & v1690;
          if (!__swift_getEnumTagSinglePayload(v1243, 1, v1669))
            (*(void (**)(unint64_t, uint64_t))(v1661 + 8))(v1243, v1669);
          swift_bridgeObjectRelease();
          goto LABEL_1760;
        case 0x22:
          if (!__swift_getEnumTagSinglePayload(v119, 1, v1669))
            (*(void (**)(uint64_t, uint64_t))(v1661 + 8))(v119, v1669);
          __swift_destroy_boxed_opaque_existential_1((v1728 + v119) & 0xFFFFFFFFFFFFFFF8);
          v191 = (v1737 + ((v1728 + v119) & 0xFFFFFFFFFFFFFFF8)) & v1571;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!__swift_getEnumTagSinglePayload((v1621 + v191) & v1569, 1, v1625))
            (*(void (**)(unint64_t, uint64_t))(v1607 + 8))((v1621 + v191) & v1569, v1625);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v192 = (v1582 + ((((v1715 + v191) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v1573;
          v121 = v1739;
          v122 = v1723;
          if (v1724)
            goto LABEL_286;
          if (!*(_BYTE *)(v192 + v1720))
            goto LABEL_1394;
          v319 = (*(unsigned __int8 *)(v192 + v1720) - 1) << v1675;
          if (v1720 > 3)
            v319 = 0;
          if ((_DWORD)v1720)
          {
            if (v1720 <= 3)
              v320 = v1720;
            else
              v320 = 4;
            __asm { BR              X11 }
          }
          goto LABEL_1393;
        case 0x23:
          if (!__swift_getEnumTagSinglePayload(v119, 1, v1669))
            (*(void (**)(uint64_t, uint64_t))(v1661 + 8))(v119, v1669);
          __swift_destroy_boxed_opaque_existential_1((v1728 + v119) & 0xFFFFFFFFFFFFFFF8);
          v193 = (v1737 + ((v1728 + v119) & 0xFFFFFFFFFFFFFFF8)) & v1571;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!__swift_getEnumTagSinglePayload((v1621 + v193) & v1569, 1, v1625))
            (*(void (**)(unint64_t, uint64_t))(v1607 + 8))((v1621 + v193) & v1569, v1625);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v194 = (v1609
                + ((((((((((((((v1715 + v193) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 25) & 0xFFFFFFFFFFFFFFF8)
                        + 23) & 0xFFFFFFFFFFFFFFF8)
                      + 23) & 0xFFFFFFFFFFFFFFF8)
                    + 23) & 0xFFFFFFFFFFFFFFF8)
                  + 23) & 0xFFFFFFFFFFFFFFF8)) & v1573;
          v121 = v1739;
          v122 = v1723;
          if (v1724)
          {
            v195 = v1624;
            if (v1617 >= v1624)
            {
              v196 = (v1609
                    + ((((((((((((((v1715 + v193) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 25) & 0xFFFFFFFFFFFFFFF8)
                            + 23) & 0xFFFFFFFFFFFFFFF8)
                          + 23) & 0xFFFFFFFFFFFFFFF8)
                        + 23) & 0xFFFFFFFFFFFFFFF8)
                      + 23) & 0xFFFFFFFFFFFFFFF8)) & v1573;
              v195 = v1617;
              v197 = v1619;
            }
            else
            {
              v196 = (v1620 + v194) & v1575;
              v197 = v1623;
            }
            v336 = __swift_getEnumTagSinglePayload(v196, v195, v197);
          }
          else
          {
            if (!*(_BYTE *)(v194 + v1720))
              goto LABEL_1759;
            v321 = (*(unsigned __int8 *)(v194 + v1720) - 1) << v1675;
            if (v1720 > 3)
              v321 = 0;
            if ((_DWORD)v1720)
            {
              if (v1720 <= 3)
                v322 = v1720;
              else
                v322 = 4;
              __asm { BR              X11 }
            }
            v336 = v321 + 1;
          }
          if (v336)
            goto LABEL_1760;
LABEL_1759:
          (*(void (**)(unint64_t, uint64_t))(v1615 + 8))(v194, v1619);
          (*(void (**)(unint64_t, uint64_t))(v1616 + 8))((v1620 + v194) & v1575, v1623);
          goto LABEL_1760;
        case 0x24:
          if (!__swift_getEnumTagSinglePayload(v119, 1, v1669))
            (*(void (**)(uint64_t, uint64_t))(v1661 + 8))(v119, v1669);
          __swift_destroy_boxed_opaque_existential_1((v1728 + v119) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          v198 = (((((v1728 + v119) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
          v121 = v1739;
          v122 = v1723;
          if (*(_QWORD *)(v198 + 24) < 0xFFFFFFFFuLL)
            goto LABEL_314;
          goto LABEL_307;
        case 0x25:
          if (!__swift_getEnumTagSinglePayload(v119, 1, v1669))
            (*(void (**)(uint64_t, uint64_t))(v1661 + 8))(v119, v1669);
          goto LABEL_300;
        case 0x26:
          if (!__swift_getEnumTagSinglePayload(v119, 1, v1669))
            (*(void (**)(uint64_t, uint64_t))(v1661 + 8))(v119, v1669);
          __swift_destroy_boxed_opaque_existential_1((v1728 + v119) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v160 = ((((((v1728 + v119) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
               + 23;
LABEL_304:
          v199 = v160 & 0xFFFFFFFFFFFFFFF8;
          v121 = v1739;
          v122 = v1723;
          if (*(_QWORD *)((v160 & 0xFFFFFFFFFFFFFFF8) + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v199);
          v198 = (v199 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v198 + 24) >= 0xFFFFFFFFuLL)
LABEL_307:
            __swift_destroy_boxed_opaque_existential_1(v198);
          goto LABEL_314;
        case 0x27:
          if (!__swift_getEnumTagSinglePayload(v119, 1, v1669))
            (*(void (**)(uint64_t, uint64_t))(v1661 + 8))(v119, v1669);
LABEL_300:
          __swift_destroy_boxed_opaque_existential_1((v1728 + v119) & 0xFFFFFFFFFFFFFFF8);
          goto LABEL_313;
        case 0x28:
          __swift_destroy_boxed_opaque_existential_1(v119);
          if (!__swift_getEnumTagSinglePayload((v1721 + v119) & v1690, 1, v1669))
            (*(void (**)(uint64_t, uint64_t))(v1661 + 8))((v1721 + v119) & v1690, v1669);
          goto LABEL_313;
        case 0x29:
          __swift_destroy_boxed_opaque_existential_1(v119);
          if (!__swift_getEnumTagSinglePayload((v1721 + v119) & v1690, 1, v1669))
            (*(void (**)(uint64_t, uint64_t))(v1661 + 8))((v1721 + v119) & v1690, v1669);
          swift_bridgeObjectRelease();
LABEL_313:
          swift_bridgeObjectRelease();
          v121 = v1739;
          v122 = v1723;
          goto LABEL_314;
        case 0x2B:
          __swift_destroy_boxed_opaque_existential_1(v119);
          v186 = v1669;
          v184 = (v1721 + v119) & v1690;
          v185 = v184;
LABEL_431:
          v121 = v1739;
          v122 = v1723;
          if (!__swift_getEnumTagSinglePayload(v185, 1, v186))
            (*(void (**)(uint64_t, uint64_t))(v1661 + 8))(v184, v1669);
          goto LABEL_314;
        case 0x2D:
          if (!__swift_getEnumTagSinglePayload(v119, 1, v1669))
            (*(void (**)(uint64_t, uint64_t))(v1661 + 8))(v119, v1669);
          __swift_destroy_boxed_opaque_existential_1((v1728 + v119) & 0xFFFFFFFFFFFFFFF8);
          v252 = (((v1728 + v119) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v252 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v252);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v253 = (((((((v252 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v254 = (v1609 + ((v253 + 47) & 0xFFFFFFFFFFFFFFF8)) & v1573;
          if (v1724)
          {
            v255 = v1624;
            if (v1617 >= v1624)
            {
              v256 = (v1609 + ((v253 + 47) & 0xFFFFFFFFFFFFFFF8)) & v1573;
              v255 = v1617;
              v257 = v1619;
            }
            else
            {
              v256 = (v1620 + v254) & v1575;
              v257 = v1623;
            }
            v337 = __swift_getEnumTagSinglePayload(v256, v255, v257);
            v324 = v1624;
            v323 = ~v1734;
            v121 = v1739;
          }
          else
          {
            v323 = ~v1734;
            v324 = v1624;
            v121 = v1739;
            if (!*(_BYTE *)(v254 + v1720))
              goto LABEL_1396;
            v325 = (*(unsigned __int8 *)(v254 + v1720) - 1) << v1675;
            if (v1720 > 3)
              v325 = 0;
            if ((_DWORD)v1720)
            {
              if (v1720 <= 3)
                v326 = v1720;
              else
                v326 = 4;
              __asm { BR              X11 }
            }
            v337 = v325 + 1;
          }
          if (v337)
            goto LABEL_1397;
LABEL_1396:
          (*(void (**)(unint64_t, uint64_t))(v1615 + 8))(v254, v1619);
          (*(void (**)(unint64_t, uint64_t))(v1616 + 8))((v1620 + v254) & v1575, v1623);
          v324 = v1624;
LABEL_1397:
          v1062 = (v1602 + v254) & v1573;
          if (v1724)
          {
            if (v1617 >= v324)
            {
              v1063 = v1062;
              v324 = v1617;
              v1064 = v1619;
            }
            else
            {
              v1063 = (v1620 + v1062) & v1575;
              v1064 = v1623;
            }
            v1067 = __swift_getEnumTagSinglePayload(v1063, v324, v1064);
          }
          else
          {
            if (!*(_BYTE *)(v1062 + v1720))
              goto LABEL_1665;
            v1065 = (*(unsigned __int8 *)(v1062 + v1720) - 1) << v1675;
            if (v1720 > 3)
              v1065 = 0;
            if ((_DWORD)v1720)
            {
              if (v1720 <= 3)
                v1066 = v1720;
              else
                v1066 = 4;
              __asm { BR              X11 }
            }
            v1067 = v1065 + 1;
          }
          if (v1067)
            goto LABEL_1666;
LABEL_1665:
          (*(void (**)(unint64_t, uint64_t))(v1615 + 8))(v1062, v1619);
          (*(void (**)(unint64_t, uint64_t))(v1616 + 8))((v1620 + v1062) & v1575, v1623);
LABEL_1666:
          v1197 = (uint64_t *)((v1727 + v1062) & v1758);
          if ((v1624 & 0x80000000) != 0)
          {
            v1201 = v1575;
            v1199 = __swift_getEnumTagSinglePayload(((unint64_t)v1197 + v1606) & v1575, v1624, v1623);
            v1200 = ~v1733;
          }
          else
          {
            v1198 = *v1197;
            if ((unint64_t)*v1197 >= 0xFFFFFFFF)
              LODWORD(v1198) = -1;
            v1199 = v1198 + 1;
            v1200 = ~v1733;
            v1201 = v1575;
          }
          if (!v1199)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v1616 + 8))(((unint64_t)v1197 + v1606) & v1201, v1623);
          }
          v1202 = (uint64_t *)(((unint64_t)v1197 + v1590) & v1758);
          if ((v1624 & 0x80000000) != 0)
          {
            v1204 = __swift_getEnumTagSinglePayload(((unint64_t)v1202 + v1606) & v1201, v1624, v1623);
          }
          else
          {
            v1203 = *v1202;
            if ((unint64_t)*v1202 >= 0xFFFFFFFF)
              LODWORD(v1203) = -1;
            v1204 = v1203 + 1;
          }
          if (!v1204)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v1616 + 8))(((unint64_t)v1202 + v1606) & v1201, v1623);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v1205 = ((((unint64_t)v1202 + v1713 + 9) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v1205 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v1205);
          v1206 = (v1737 + v1205) & v1200;
          v122 = v1723;
          if (v1618 >= 0x7FFFFFFF)
          {
            v1208 = (v1621 + v1206) & v323;
            if (__swift_getEnumTagSinglePayload(v1208, v1613, v1625) > 1)
              goto LABEL_1760;
          }
          else
          {
            v1207 = *(_QWORD *)(v1206 + 16);
            if (v1207 >= 0xFFFFFFFF)
              LODWORD(v1207) = -1;
            if ((int)v1207 - 1 >= 0)
              goto LABEL_1760;
            v1208 = (v1621 + v1206) & v323;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!__swift_getEnumTagSinglePayload(v1208, 1, v1625))
            (*(void (**)(uint64_t, uint64_t))(v1607 + 8))(v1208, v1625);
          goto LABEL_1760;
        case 0x32:
          __swift_destroy_boxed_opaque_existential_1(v119);
          v258 = (v1721 + v119) & v1690;
          if (!__swift_getEnumTagSinglePayload(v258, 1, v1669))
            (*(void (**)(uint64_t, uint64_t))(v1661 + 8))(v258, v1669);
          swift_bridgeObjectRelease();
          v259 = (((v1728 + v258) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v259 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v259);
          swift_bridgeObjectRelease();
          v260 = (((v259 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          v261 = (v1710 + v260) & v95;
          v122 = v1723;
          if (v1611 < 0x7FFFFFFF)
          {
            v147 = ~v1734;
            v121 = v1739;
            if (*(_QWORD *)(((v1728 + v261) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
              goto LABEL_523;
          }
          else
          {
            v262 = __swift_getEnumTagSinglePayload((v1710 + v260) & v95, v1719, v1669);
            v147 = ~v1734;
            v121 = v1739;
            if (v262 >= 2)
              goto LABEL_523;
          }
          if (!__swift_getEnumTagSinglePayload(v261, 1, v1669))
            (*(void (**)(uint64_t, uint64_t))(v1661 + 8))(v261, v1669);
          __swift_destroy_boxed_opaque_existential_1((v1728 + v261) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
LABEL_523:
          swift_bridgeObjectRelease();
          v303 = v1589 + v261 + v1723;
          goto LABEL_1750;
        case 0x33:
          if (!__swift_getEnumTagSinglePayload(v119, 1, v1669))
            (*(void (**)(uint64_t, uint64_t))(v1661 + 8))(v119, v1669);
          __swift_destroy_boxed_opaque_existential_1((v1728 + v119) & 0xFFFFFFFFFFFFFFF8);
          v263 = (((v1728 + v119) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v263 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v263);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v264 = (v1580
                + ((((((v263 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v1740;
          if (v1605 > 0x7FFFFFFE)
          {
            v267 = (v264 + 23) & 0xFFFFFFFFFFFFFFF8;
            v304 = __swift_getEnumTagSinglePayload((v1717 + ((v267 + 23) & 0xFFFFFFFFFFFFFFF8) + 33) & v1673, v1605, v1603);
            v147 = ~v1734;
            v266 = v1624;
            v121 = v1739;
            v122 = v1723;
            if (v304)
              goto LABEL_526;
            goto LABEL_525;
          }
          LODWORD(v265) = -1;
          if (*(_QWORD *)(v264 + 8) < 0xFFFFFFFFuLL)
            v265 = *(_QWORD *)(v264 + 8);
          v147 = ~v1734;
          v266 = v1624;
          v121 = v1739;
          v122 = v1723;
          if ((v265 + 1) <= 1)
          {
            v267 = (v264 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_525:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v305 = (id *)((v267 + 47) & 0xFFFFFFFFFFFFFFF8);

            (*(void (**)(unint64_t, uint64_t))(v1709 + 8))(((unint64_t)v305 + v1717 + 9) & v1673, v1603);
            v266 = v1624;
          }
LABEL_526:
          v306 = (v1584 + v264) & v1573;
          if (v1724)
          {
            if (v1617 >= v266)
            {
              v307 = (v1584 + v264) & v1573;
              v266 = v1617;
              v308 = v1619;
            }
            else
            {
              v307 = (v1620 + v306) & v1575;
              v308 = v1623;
            }
            v339 = __swift_getEnumTagSinglePayload(v307, v266, v308);
          }
          else
          {
            if (!*(_BYTE *)(v306 + v1720))
              goto LABEL_1417;
            v330 = (*(unsigned __int8 *)(v306 + v1720) - 1) << v1675;
            if (v1720 > 3)
              v330 = 0;
            if ((_DWORD)v1720)
            {
              if (v1720 <= 3)
                v331 = v1720;
              else
                v331 = 4;
              __asm { BR              X11 }
            }
            v339 = v330 + 1;
          }
          if (v339)
            goto LABEL_1418;
LABEL_1417:
          (*(void (**)(unint64_t, uint64_t))(v1615 + 8))(v306, v1619);
          (*(void (**)(unint64_t, uint64_t))(v1616 + 8))((v1620 + v306) & v1575, v1623);
LABEL_1418:
          swift_bridgeObjectRelease();
          v1068 = (((v1608 + v306) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          v1069 = (v1588 + v1068) & v1573;
          if (v1724)
          {
            v1070 = v1624;
            if (v1617 >= v1624)
            {
              v1071 = (v1588 + v1068) & v1573;
              v1070 = v1617;
              v1072 = v1619;
            }
            else
            {
              v1071 = (v1620 + v1069) & v1575;
              v1072 = v1623;
            }
            v1075 = __swift_getEnumTagSinglePayload(v1071, v1070, v1072);
          }
          else
          {
            if (!*(_BYTE *)(v1069 + v1720))
              goto LABEL_1692;
            v1073 = (*(unsigned __int8 *)(v1069 + v1720) - 1) << v1675;
            if (v1720 > 3)
              v1073 = 0;
            if ((_DWORD)v1720)
            {
              if (v1720 <= 3)
                v1074 = v1720;
              else
                v1074 = 4;
              __asm { BR              X11 }
            }
            v1075 = v1073 + 1;
          }
          if (v1075)
            goto LABEL_1693;
LABEL_1692:
          (*(void (**)(unint64_t, uint64_t))(v1615 + 8))(v1069, v1619);
          (*(void (**)(unint64_t, uint64_t))(v1616 + 8))((v1620 + v1069) & v1575, v1623);
LABEL_1693:
          v1209 = (v1608 + v1069) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          v1210 = (v1725 + v1209) & v1573;
          if (v1724)
          {
            v1211 = v1624;
            if (v1617 >= v1624)
            {
              v1212 = (v1725 + v1209) & v1573;
              v1211 = v1617;
              v1213 = v1619;
            }
            else
            {
              v1212 = (v1620 + v1210) & v1575;
              v1213 = v1623;
            }
            v1216 = __swift_getEnumTagSinglePayload(v1212, v1211, v1213);
          }
          else
          {
            if (!*(_BYTE *)(v1210 + v1720))
              goto LABEL_1748;
            v1214 = (*(unsigned __int8 *)(v1210 + v1720) - 1) << v1675;
            if (v1720 > 3)
              v1214 = 0;
            if ((_DWORD)v1720)
            {
              if (v1720 <= 3)
                v1215 = v1720;
              else
                v1215 = 4;
              __asm { BR              X11 }
            }
            v1216 = v1214 + 1;
          }
          if (v1216)
            goto LABEL_1749;
LABEL_1748:
          (*(void (**)(unint64_t, uint64_t))(v1615 + 8))(v1210, v1619);
          (*(void (**)(unint64_t, uint64_t))(v1616 + 8))((v1620 + v1210) & v1575, v1623);
LABEL_1749:
          v303 = v1593 + v1210;
LABEL_1750:
          v157 = v303 & v1571;
LABEL_1751:
          if (v1618 < 0x7FFFFFFF)
          {
LABEL_2072:
            v1406 = *(_QWORD *)(v157 + 16);
            if (v1406 >= 0xFFFFFFFF)
              LODWORD(v1406) = -1;
            if ((int)v1406 - 1 < 0)
            {
              v1242 = (v1621 + v157) & v1569;
              goto LABEL_2078;
            }
            goto LABEL_314;
          }
          v1242 = (v1621 + v157) & v147;
LABEL_2077:
          if (__swift_getEnumTagSinglePayload(v1242, v1613, v1625) <= 1)
          {
LABEL_2078:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!__swift_getEnumTagSinglePayload(v1242, 1, v1625))
            {
              v123 = *(void (**)(uint64_t, uint64_t))(v1607 + 8);
              v124 = v1242;
LABEL_2080:
              v123(v124, v1625);
            }
          }
LABEL_314:
          v200 = v1755;
LABEL_315:
          v91 = ~v1733;
          v93 = ~v1712;
          v201 = v1655
               + ((v1659
                 + ((v1727
                   + ((v1725
                     + ((((((v1658
                           + ((((((((v200 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                             + 15) & 0xFFFFFFFFFFFFFFF8)) & v1740)
                         + v121) & 0xFFFFFFFFFFFFFFF8)
                       + 23) & 0xFFFFFFFFFFFFFFF8)) & v1573)) & v1758)) & v1571);
          v95 = ~v1735;
          v202 = v1652 + ((v1657 + ((v1657 + (v201 & v1567)) & v1567)) & v1567);
          if (v1653 > v202)
            v202 = v1653;
          if (v202 <= v1651)
            v202 = v1651;
          if (v202 <= v1654)
            v202 = v1654;
          if (v202 <= v1647)
            v202 = v1647;
          if (v202 <= v1645)
            v202 = v1645;
          if (v202 <= v1642)
            v202 = v1642;
          if (v202 <= v1643)
            v202 = (((((v1738 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
          if (v202 <= v1644)
            v202 = v1644;
          if (v202 <= v1633)
            v202 = v1633;
          if (v202 <= v1631)
            v202 = v1631;
          if (v202 <= v1629)
            v202 = v1629;
          if (v202 <= v1632)
            v202 = v1632;
          if (v202 <= v1628)
            v202 = v1628;
          if (v202 <= v122)
            v202 = v122;
          if (v202 <= v1630)
            v202 = v1630;
          if (v202 <= v1653)
            v202 = v1653;
          if (v202 <= v1627)
            v202 = v1627;
          if (v202 <= v1634)
            v202 = ((v1738 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
          if (v202 <= v1636)
            v202 = v1636;
          if (v202 <= v1638)
            v202 = v1638;
          if (v202 <= v1637)
            v202 = v1637;
          if (v202 <= v1640)
            v202 = v1640;
          if (v202 <= v1635)
            v202 = v1635;
          if (v202 <= v1639)
            v202 = v1678 + 40;
          if (v202 <= v1641)
            v202 = v1641;
          if (v202 <= v1680)
            v202 = v1680;
          if (v202 <= v1648)
            v202 = v1648;
          if (v202 <= v1677)
            v202 = v1677;
          if (v202 <= v81)
            v202 = v81;
          if (v202 <= v1738)
            v202 = v1738;
          if (v202 <= v1649)
            v202 = v1649;
          if (v202 <= v1650)
            v202 = v1650;
          if (v202 <= v1646)
            v202 = v1646;
          if (v202 <= 8)
            v202 = 8;
          v203 = *(_QWORD *)((v1554 + v202 + 8) & 0xFFFFFFFFFFFFF8);
          v204 = -1;
          if (v203 < 0xFFFFFFFF)
            v204 = v203;
          v92 = ~v1734;
          v94 = v1575;
          v86 = v1556;
          if (v204 - 1 < 0)
LABEL_118:
            swift_bridgeObjectRelease();
LABEL_386:
          if (*((unsigned __int8 *)a2 + v88) >= 4u)
          {
            if (v88 <= 3)
              v205 = v88;
            else
              v205 = 4;
            __asm { BR              X12 }
          }
          switch(*((_BYTE *)a2 + v88))
          {
            case 0:
              (*(void (**)(_QWORD *))(v1665 + 16))(v3);
              *((_BYTE *)v3 + v88) = 0;
              return v3;
            case 1:
              v1574 = v93;
              v1576 = v94;
              v1572 = v91;
              *v3 = *a2;
              v3[1] = a2[1];
              v206 = (void *)(((unint64_t)v3 + v1753 + 16) & v1690);
              v207 = (char *)(((unint64_t)a2 + v1753 + 16) & v1690);
              sub_21D7C4C20();
              v208 = v1669;
              v1570 = v92;
              if (__swift_getEnumTagSinglePayload((uint64_t)v207, 1, v1669))
              {
                v209 = v1755;
                memcpy(v206, v207, v1755);
              }
              else
              {
                (*(void (**)(void *, char *, uint64_t))(v1661 + 16))(v206, v207, v1669);
                __swift_storeEnumTagSinglePayload((uint64_t)v206, 0, 1, v1669);
                v209 = v1755;
              }
              v211 = &v207[v209];
              v212 = (_BYTE *)(((unint64_t)v206 + v209 + v1730) & v1692);
              v213 = (unsigned __int8 *)((unint64_t)&v211[v1730] & v1692);
              v214 = *v213;
              v1568 = v95;
              if (v214 > 2)
              {
                v220 = v1731;
                memcpy(v212, (const void *)((unint64_t)&v211[v1730] & v1692), v1731);
                goto LABEL_647;
              }
              v215 = v96;
              v216 = v86;
              *v212 = v214;
              v217 = (_QWORD *)((unint64_t)&v212[v1626] & v1692);
              v218 = (_QWORD *)((unint64_t)&v213[v1626] & v1692);
              v219 = *((unsigned __int8 *)v218 + v1660);
              v220 = v1731;
              if (v219 > 2)
              {
                memcpy((void *)((unint64_t)&v212[v1626] & v1692), (const void *)((unint64_t)&v213[v1626] & v1692), __n);
                v86 = v216;
                goto LABEL_647;
              }
              if (v219 == 2)
              {
                if (*(_QWORD *)(((unint64_t)&v213[v1626] & v1692) + 8) < 0xFFFFFFFFuLL)
                {
                  v226 = (void *)((unint64_t)&v212[v1626] & v1692);
                  memcpy(v226, (const void *)((unint64_t)&v213[v1626] & v1692), 0x48uLL);
                }
                else
                {
                  *v217 = *v218;
                  *(_QWORD *)(((unint64_t)&v212[v1626] & v1692) + 8) = *(_QWORD *)(((unint64_t)&v213[v1626] & v1692)
                                                                                        + 8);
                  *(_QWORD *)(((unint64_t)&v212[v1626] & v1692) + 0x10) = *(_QWORD *)(((unint64_t)&v213[v1626] & v1692)
                                                                                           + 0x10);
                  *(_QWORD *)(((unint64_t)&v212[v1626] & v1692) + 0x18) = *(_QWORD *)(((unint64_t)&v213[v1626] & v1692)
                                                                                           + 0x18);
                  v224 = v217 + 4;
                  v225 = *(_QWORD *)(((unint64_t)&v213[v1626] & v1692) + 0x38);
                  v226 = (void *)((unint64_t)&v212[v1626] & v1692);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (v225)
                  {
                    *(_QWORD *)(((unint64_t)&v212[v1626] & v1692) + 0x38) = v225;
                    *(_QWORD *)(((unint64_t)&v212[v1626] & v1692) + 0x40) = *(_QWORD *)(((unint64_t)&v213[v1626] & v1692)
                                                                                             + 0x40);
                    (**(void (***)(_QWORD *, uint64_t, uint64_t))(v225 - 8))(v224, (uint64_t)(v218 + 4), v225);
                  }
                  else
                  {
                    v268 = *(_OWORD *)(((unint64_t)&v213[v1626] & v1692) + 0x20);
                    v269 = *(_OWORD *)(((unint64_t)&v213[v1626] & v1692) + 0x30);
                    v224[4] = *(_QWORD *)(((unint64_t)&v213[v1626] & v1692) + 0x40);
                    *(_OWORD *)v224 = v268;
                    *((_OWORD *)v224 + 1) = v269;
                  }
                  v215 = v1720;
                }
                v270 = ((unint64_t)v226 + 79) & 0xFFFFFFFFFFFFFFF8;
                v271 = (_QWORD *)(((unint64_t)v218 + 79) & 0xFFFFFFFFFFFFFFF8);
                if (v271[1] < 0xFFFFFFFFuLL)
                {
                  memcpy((void *)(((unint64_t)v226 + 79) & 0xFFFFFFFFFFFFFFF8), v271, 0x48uLL);
                }
                else
                {
                  *(_QWORD *)v270 = *v271;
                  *(_QWORD *)(v270 + 8) = v271[1];
                  *(_QWORD *)(v270 + 16) = v271[2];
                  *(_QWORD *)(v270 + 24) = v271[3];
                  v272 = v271[7];
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (v272)
                  {
                    *(_QWORD *)(v270 + 56) = v272;
                    *(_QWORD *)(v270 + 64) = v271[8];
                    (**(void (***)(uint64_t, uint64_t, uint64_t))(v272 - 8))(v270 + 32, (uint64_t)(v271 + 4), v272);
                  }
                  else
                  {
                    v273 = *((_OWORD *)v271 + 2);
                    v274 = *((_OWORD *)v271 + 3);
                    *(_QWORD *)(v270 + 64) = v271[8];
                    *(_OWORD *)(v270 + 32) = v273;
                    *(_OWORD *)(v270 + 48) = v274;
                  }
                  v215 = v1720;
                }
                v275 = (_QWORD *)((v270 + 79) & 0xFFFFFFFFFFFFF8);
                v276 = (_QWORD *)(((unint64_t)v271 + 79) & 0xFFFFFFFFFFFFFFF8);
                *v275 = *v276;
                v277 = (_QWORD *)(((unint64_t)v275 + 15) & 0xFFFFFFFFFFFFFFF8);
                v278 = (_QWORD *)(((unint64_t)v276 + 15) & 0xFFFFFFFFFFFFFFF8);
                *v277 = *v278;
                v279 = (void *)(((unint64_t)v277 + v1609) & v1574);
                v280 = (_BYTE *)(((unint64_t)v278 + v1609) & v1574);
                sub_21D7C4C20();
                sub_21D7C4C20();
                if (v1724)
                {
                  v281 = v1624;
                  v208 = v1669;
                  if (v1617 >= v1624)
                  {
                    v282 = (uint64_t)v280;
                    v281 = v1617;
                    v283 = v1619;
                  }
                  else
                  {
                    v282 = (unint64_t)&v280[v1620] & v1576;
                    v283 = v1623;
                  }
                  v286 = __swift_getEnumTagSinglePayload(v282, v281, v283);
                }
                else
                {
                  v208 = v1669;
                  if (!v280[v215])
                    goto LABEL_643;
                  v284 = (v280[v215] - 1) << v1675;
                  if (v1720 > 3)
                    v284 = 0;
                  if ((_DWORD)v1720)
                  {
                    if (v1720 <= 3)
                      v285 = v1720;
                    else
                      v285 = 4;
                    __asm { BR              X11 }
                  }
                  v286 = v284 + 1;
                }
                if (v286)
                {
                  memcpy(v279, v280, v1736);
LABEL_645:
                  *((_BYTE *)v279 + v1736) = v280[v1736];
                  *((_BYTE *)v226 + v1660) = 2;
                  goto LABEL_646;
                }
LABEL_643:
                (*(void (**)(void *, _BYTE *, uint64_t))(v1615 + 16))(v279, v280, v1619);
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v1616 + 16))(((unint64_t)v279 + v1620) & v1576, (unint64_t)&v280[v1620] & v1576, v1623);
                if (!v1724)
                  *((_BYTE *)v279 + v1720) = 0;
                goto LABEL_645;
              }
              if (v219 == 1)
              {
                v221 = *(_QWORD *)(((unint64_t)&v213[v1626] & v1692) + 0x18);
                *(_QWORD *)(((unint64_t)&v212[v1626] & v1692) + 0x18) = v221;
                *(_QWORD *)(((unint64_t)&v212[v1626] & v1692) + 0x20) = *(_QWORD *)(((unint64_t)&v213[v1626] & v1692)
                                                                                         + 0x20);
                (**(void (***)(_QWORD *, _QWORD *))(v221 - 8))(v217, v218);
                v1695 = (unint64_t)&v212[v1626] & v1692;
                v222 = (void *)((v1721 + v1695) & v1690);
                v223 = (const void *)(((unint64_t)v218 + v1721) & v1690);
                if (__swift_getEnumTagSinglePayload((uint64_t)v223, 1, v1669))
                {
                  memcpy(v222, v223, v1755);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v1661 + 16))(v222, v223, v1669);
                  __swift_storeEnumTagSinglePayload((uint64_t)v222, 0, 1, v1669);
                }
                v227 = (_QWORD *)(((unint64_t)v222 + v1728) & 0xFFFFFFFFFFFFFFF8);
                v228 = (_QWORD *)(((unint64_t)v223 + v1728) & 0xFFFFFFFFFFFFFFF8);
                *v227 = *v228;
                v227[1] = v228[1];
                v229 = ((unint64_t)v227 + 23) & 0xFFFFFFFFFFFFFFF8;
                v230 = ((unint64_t)v228 + 23) & 0xFFFFFFFFFFFFFFF8;
                *(_QWORD *)v229 = *(_QWORD *)v230;
                *(_BYTE *)(v229 + 8) = *(_BYTE *)(v230 + 8);
                v231 = ((unint64_t)v227 + 39) & 0xFFFFFFFFFFFFFFF8;
                v232 = ((unint64_t)v228 + 39) & 0xFFFFFFFFFFFFFFF8;
                *(_QWORD *)v231 = *(_QWORD *)v232;
                *(_BYTE *)(v231 + 8) = *(_BYTE *)(v232 + 8);
                v233 = ((unint64_t)v227 + 55) & 0xFFFFFFFFFFFFFFF8;
                v234 = ((unint64_t)v228 + 55) & 0xFFFFFFFFFFFFFFF8;
                v235 = *(_QWORD *)v234;
                *(_BYTE *)(v233 + 8) = *(_BYTE *)(v234 + 8);
                *(_QWORD *)v233 = v235;
                v236 = (_QWORD *)(((unint64_t)v227 + 71) & 0xFFFFFFFFFFFFFFF8);
                v237 = (_QWORD *)(((unint64_t)v228 + 71) & 0xFFFFFFFFFFFFFFF8);
                *v236 = *v237;
                v236[1] = v237[1];
                v238 = ((unint64_t)v236 + 23) & 0xFFFFFFFFFFFFFFF8;
                v239 = ((unint64_t)v237 + 23) & 0xFFFFFFFFFFFFFFF8;
                v240 = *(_QWORD *)(v239 + 24);
                sub_21D7C4C20();
                sub_21D7C4C20();
                sub_21D7C4C20();
                sub_21D7C4C20();
                if (v240 < 0xFFFFFFFF)
                {
                  v241 = *(_OWORD *)v239;
                  v242 = *(_OWORD *)(v239 + 16);
                  *(_QWORD *)(v238 + 32) = *(_QWORD *)(v239 + 32);
                  *(_OWORD *)v238 = v241;
                  *(_OWORD *)(v238 + 16) = v242;
                }
                else
                {
                  *(_QWORD *)(v238 + 24) = v240;
                  *(_QWORD *)(v238 + 32) = *(_QWORD *)(v239 + 32);
                  (**(void (***)(unint64_t, unint64_t, unint64_t))(v240 - 8))(v238, v239, v240);
                }
                v243 = (_QWORD *)((v1737 + v238) & v1572);
                v244 = (_BYTE *)((v1737 + v239) & v1572);
                v208 = v1669;
                if (v1618 >= 0x7FFFFFFF)
                {
                  v249 = (const void *)((unint64_t)&v244[v1621] & v1570);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v249, v1613, v1625) <= 1)
                  {
                    v246 = v244 + 8;
                    v247 = v1621;
                    v248 = v1570;
                    goto LABEL_424;
                  }
                }
                else
                {
                  v245 = *(_QWORD *)(((v1737 + v239) & v1572) + 0x10);
                  if (v245 >= 0xFFFFFFFF)
                    LODWORD(v245) = -1;
                  if ((int)v245 - 1 < 0)
                  {
                    v246 = v244 + 8;
                    v247 = v1621;
                    v248 = v1570;
                    v249 = (const void *)((unint64_t)&v244[v1621] & v1570);
LABEL_424:
                    *(_BYTE *)v243 = *v244;
                    v243[1] = *(_QWORD *)(((v1737 + v239) & v1572) + 8);
                    v243[2] = *((_QWORD *)v246 + 1);
                    v243[3] = *((_QWORD *)v246 + 2);
                    v243[4] = *((_QWORD *)v246 + 3);
                    v243[5] = *((_QWORD *)v246 + 4);
                    v243[6] = *((_QWORD *)v246 + 5);
                    v243[7] = *((_QWORD *)v246 + 6);
                    v243[8] = *((_QWORD *)v246 + 7);
                    v243[9] = *((_QWORD *)v246 + 8);
                    v243[10] = *((_QWORD *)v246 + 9);
                    v243[11] = *((_QWORD *)v246 + 10);
                    v243[12] = *((_QWORD *)v246 + 11);
                    v250 = *((_QWORD *)v246 + 12);
                    *((_BYTE *)v243 + 112) = v246[104];
                    v243[13] = v250;
                    v251 = (void *)(((unint64_t)v243 + v247) & v248);
                    sub_21D7C4C20();
                    sub_21D7C4C20();
                    sub_21D7C4C20();
                    sub_21D7C4C20();
                    sub_21D7C4C20();
                    sub_21D7C4C20();
                    if (__swift_getEnumTagSinglePayload((uint64_t)v249, 1, v1625))
                    {
                      memcpy(v251, v249, v1716);
                    }
                    else
                    {
                      (*(void (**)(void *, const void *, uint64_t))(v1607 + 16))(v251, v249, v1625);
                      __swift_storeEnumTagSinglePayload((uint64_t)v251, 0, 1, v1625);
                    }
                    v86 = v216;
                    v208 = v1669;
                    goto LABEL_479;
                  }
                }
                memcpy(v243, v244, v1718);
                v86 = v216;
LABEL_479:
                v220 = v1731;
                *(_BYTE *)(v1695 + v1660) = 1;
                goto LABEL_647;
              }
              *v217 = *v218;
              *(_QWORD *)(((unint64_t)&v212[v1626] & v1692) + 8) = *(_QWORD *)(((unint64_t)&v213[v1626] & v1692)
                                                                                    + 8);
              *(_QWORD *)(((unint64_t)&v212[v1626] & v1692) + 0x10) = *(_QWORD *)(((unint64_t)&v213[v1626] & v1692)
                                                                                       + 0x10);
              *(_QWORD *)(((unint64_t)&v212[v1626] & v1692) + 0x18) = *(_QWORD *)(((unint64_t)&v213[v1626] & v1692)
                                                                                       + 0x18);
              *(_QWORD *)(((unint64_t)&v212[v1626] & v1692) + 0x20) = *(_QWORD *)(((unint64_t)&v213[v1626] & v1692)
                                                                                       + 0x20);
              *(_QWORD *)(((unint64_t)&v212[v1626] & v1692) + 0x28) = *(_QWORD *)(((unint64_t)&v213[v1626] & v1692)
                                                                                       + 0x28);
              *((_BYTE *)v217 + v1660) = 0;
              sub_21D7C4C20();
              sub_21D7C4C20();
              sub_21D7C4C20();
              v208 = v1669;
LABEL_646:
              v86 = v216;
              v220 = v1731;
LABEL_647:
              v348 = &v212[v220];
              v349 = &v213[v220];
              *(_WORD *)v348 = *(_WORD *)&v213[v220];
              v348[2] = v213[v220 + 2];
              v348[3] = v213[v220 + 3];
              v350 = (unint64_t)&v212[v220 + 11] & 0xFFFFFFFFFFFFFFF8;
              v351 = (unint64_t)(v349 + 11) & 0xFFFFFFFFFFFFFFF8;
              v352 = *(_QWORD *)(v351 + 24);
              if (v352 < 0xFFFFFFFF)
              {
                v353 = *(_OWORD *)v351;
                v354 = *(_OWORD *)(v351 + 16);
                v355 = *(_OWORD *)(v351 + 32);
                *(_OWORD *)(v350 + 41) = *(_OWORD *)(v351 + 41);
                *(_OWORD *)(v350 + 16) = v354;
                *(_OWORD *)(v350 + 32) = v355;
                *(_OWORD *)v350 = v353;
              }
              else
              {
                *(_QWORD *)(v350 + 24) = v352;
                *(_QWORD *)(v350 + 32) = *(_QWORD *)(v351 + 32);
                (**(void (***)(unint64_t, unint64_t))(v352 - 8))(v350, (unint64_t)(v349 + 11) & 0xFFFFFFFFFFFFFFF8);
                *(_QWORD *)(v350 + 40) = *(_QWORD *)(v351 + 40);
                *(_QWORD *)(v350 + 48) = *(_QWORD *)(v351 + 48);
                *(_BYTE *)(v350 + 56) = *(_BYTE *)(v351 + 56);
                sub_21D7C4C20();
              }
              *(_BYTE *)(v350 + 57) = *(_BYTE *)(v351 + 57);
              v356 = (_QWORD *)((v1668 + v350) & v1684);
              v357 = (_QWORD *)((v1668 + v351) & v1684);
              v1555 = v88;
              if (v1667 < 0)
              {
                v358 = v1662;
                v359 = v1682;
                v360 = (const void *)(((unint64_t)v357 + v1662) & v1682);
                if (__swift_getEnumTagSinglePayload((uint64_t)v360, v1622, v1663) < 2)
                  goto LABEL_654;
              }
              else
              {
                v358 = v1662;
                v359 = v1682;
                if (v357[1] >= 0xFFFFFFFFuLL)
                {
                  v360 = (const void *)(((unint64_t)v357 + v1662) & v1682);
LABEL_654:
                  *v356 = *v357;
                  v356[1] = v357[1];
                  v361 = (void *)(((unint64_t)v356 + v358) & v359);
                  sub_21D7C4C20();
                  v362 = v86;
                  if (__swift_getEnumTagSinglePayload((uint64_t)v360, 1, v1663))
                  {
                    memcpy(v361, v360, v1612);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1614 + 16))(v361, v360, v1663);
                    __swift_storeEnumTagSinglePayload((uint64_t)v361, 0, 1, v1663);
                  }
                  v363 = v1664;
                  goto LABEL_659;
                }
              }
              v362 = v86;
              v363 = v1664;
              memcpy(v356, v357, v1664);
LABEL_659:
              v364 = v1656 + 1;
              v365 = (_QWORD *)(((unint64_t)v356 + v1741 + v363) & v1686);
              v366 = (_QWORD *)(((unint64_t)v357 + v1741 + v363) & v1686);
              switch(*((_BYTE *)v366 + v1688))
              {
                case 0:
                  v1557 = v362;
                  if (__swift_getEnumTagSinglePayload((uint64_t)v366, 1, v208))
                  {
                    memcpy(v365, v366, v1755);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1661 + 16))(v365, v366, v208);
                    __swift_storeEnumTagSinglePayload((uint64_t)v365, 0, 1, v208);
                  }
                  v429 = v1720;
                  v430 = ((unint64_t)v365 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v1743 = (_QWORD *)(((unint64_t)v357 + v1741 + v363) & v1686);
                  v431 = ((unint64_t)v366 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v432 = *(_QWORD *)(v431 + 24);
                  *(_QWORD *)(v430 + 24) = v432;
                  *(_QWORD *)(v430 + 32) = *(_QWORD *)(v431 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v432 - 8))(v430, v431);
                  v433 = (_QWORD *)((v430 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v434 = (_QWORD *)((v431 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v433 = *v434;
                  v433[1] = v434[1];
                  v435 = (_QWORD *)(((unint64_t)v433 + 23) & 0xFFFFFFFFFFFFF8);
                  v436 = (_QWORD *)(((unint64_t)v434 + 23) & 0xFFFFFFFFFFFFF8);
                  *v435 = *v436;
                  v437 = (_QWORD *)(((unint64_t)v435 + 15) & 0xFFFFFFFFFFFFFFF8);
                  v438 = (_QWORD *)(((unint64_t)v436 + 15) & 0xFFFFFFFFFFFFFFF8);
                  *v437 = *v438;
                  v437[1] = v438[1];
                  v439 = (_QWORD *)(((unint64_t)v437 + v1658) & v1740);
                  v440 = (_QWORD *)(((unint64_t)v438 + v1658) & v1740);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (v1605 > 0x7FFFFFFE)
                  {
                    v442 = (_QWORD *)(((unint64_t)v440 + 23) & 0xFFFFFFFFFFFFFFF8);
                    v443 = ((unint64_t)v442 + 23) & 0xFFFFFFFFFFFFFFF8;
                    if (!__swift_getEnumTagSinglePayload((v1717 + v443 + 33) & v1673, v1605, v1603))
                      goto LABEL_763;
LABEL_762:
                    v444 = v1739;
                    memcpy(v439, v440, v1739);
                    goto LABEL_764;
                  }
                  v441 = v440[1];
                  if (v441 >= 0xFFFFFFFF)
                    LODWORD(v441) = -1;
                  if ((v441 + 1) > 1)
                    goto LABEL_762;
                  v442 = (_QWORD *)(((unint64_t)v440 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v443 = ((unint64_t)v442 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_763:
                  *v439 = *v440;
                  v439[1] = v440[1];
                  v445 = (_QWORD *)(((unint64_t)v439 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v445 = *v442;
                  v445[1] = v442[1];
                  v446 = ((unint64_t)v445 + 23) & 0xFFFFFFFFFFFFFFF8;
                  *(_QWORD *)v446 = *(_QWORD *)v443;
                  *(_QWORD *)(v446 + 8) = *(_QWORD *)(v443 + 8);
                  *(_BYTE *)(v446 + 16) = *(_BYTE *)(v443 + 16);
                  v447 = ((unint64_t)v445 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v448 = ((unint64_t)v442 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v449 = *(void **)v448;
                  *(_QWORD *)v447 = *(_QWORD *)v448;
                  *(_BYTE *)(v447 + 8) = *(_BYTE *)(v448 + 8);
                  v450 = (v1717 + 9 + v447) & v1673;
                  v451 = (v1717 + 9 + v448) & v1673;
                  v452 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1709 + 16);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  v453 = v449;
                  v452(v450, v451, v1603);
                  v429 = v1720;
                  v444 = v1739;
LABEL_764:
                  *((_BYTE *)v439 + v444) = *((_BYTE *)v440 + v444);
                  v454 = ((unint64_t)v439 + v444) & 0xFFFFFFFFFFFFFFF8;
                  v455 = ((unint64_t)v440 + v444) & 0xFFFFFFFFFFFFFFF8;
                  *(_QWORD *)(v454 + 8) = *(_QWORD *)(v455 + 8);
                  v456 = (_QWORD *)((v454 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v457 = (_QWORD *)((v455 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v456 = *v457;
                  v456[1] = v457[1];
                  v458 = (void *)(((unint64_t)v456 + v1725) & v1574);
                  v459 = (_BYTE *)(((unint64_t)v457 + v1725) & v1574);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (v1724)
                  {
                    v460 = v1624;
                    if (v1617 >= v1624)
                    {
                      v461 = (uint64_t)v459;
                      v460 = v1617;
                      v462 = v1619;
                    }
                    else
                    {
                      v461 = (unint64_t)&v459[v1620] & v1576;
                      v462 = v1623;
                    }
                    v845 = __swift_getEnumTagSinglePayload(v461, v460, v462);
                  }
                  else
                  {
                    if (!v459[v429])
                      goto LABEL_1444;
                    v794 = (v459[v429] - 1) << v1675;
                    if (v429 > 3)
                      v794 = 0;
                    if ((_DWORD)v429)
                    {
                      if (v429 <= 3)
                        v795 = v429;
                      else
                        v795 = 4;
                      __asm { BR              X11 }
                    }
                    v845 = v794 + 1;
                  }
                  if (v845)
                  {
                    memcpy(v458, v459, v1736);
                    goto LABEL_1446;
                  }
LABEL_1444:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1615 + 16))(v458, v459, v1619);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1616 + 16))(((unint64_t)v458 + v1620) & v1576, (unint64_t)&v459[v1620] & v1576, v1623);
                  if (!v1724)
                    *((_BYTE *)v458 + v429) = 0;
LABEL_1446:
                  v1085 = (_QWORD *)(((unint64_t)v458 + v1727) & v1758);
                  v1086 = (uint64_t *)((unint64_t)&v459[v1727] & v1758);
                  if ((v1624 & 0x80000000) != 0)
                  {
                    v1090 = v1576;
                    v1088 = __swift_getEnumTagSinglePayload(((unint64_t)v1086 + v1606) & v1576, v1624, v1623);
                    v1089 = v1572;
                  }
                  else
                  {
                    v1087 = *v1086;
                    if ((unint64_t)*v1086 >= 0xFFFFFFFF)
                      LODWORD(v1087) = -1;
                    v1088 = v1087 + 1;
                    v1089 = v1572;
                    v1090 = v1576;
                  }
                  v1091 = v1755 + 7;
                  if (v1088)
                  {
                    memcpy(v1085, v1086, v1713);
                  }
                  else
                  {
                    *v1085 = *v1086;
                    v1092 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1616 + 16);
                    sub_21D7C4C20();
                    v1089 = v1572;
                    v1092(((unint64_t)v1085 + v1606) & v1090, ((unint64_t)v1086 + v1606) & v1090, v1623);
                  }
                  v1093 = (_BYTE *)(((unint64_t)v1085 + v1659) & v1089);
                  v1094 = (_QWORD *)(((unint64_t)v1086 + v1659) & v1089);
                  if (v1618 >= 0x7FFFFFFF)
                  {
                    v1099 = (const void *)(((unint64_t)v1094 + v1621) & v1570);
                    if (__swift_getEnumTagSinglePayload((uint64_t)v1099, v1613, v1625) <= 1)
                    {
                      v1702 = v365;
                      v1096 = v1094 + 1;
                      v1097 = v1621;
                      v1098 = v1570;
                      goto LABEL_1461;
                    }
LABEL_1463:
                    v1102 = v1718;
                    memcpy(v1093, v1094, v1718);
                    goto LABEL_1466;
                  }
                  v1095 = v1094[2];
                  if (v1095 >= 0xFFFFFFFF)
                    LODWORD(v1095) = -1;
                  if ((int)v1095 - 1 >= 0)
                    goto LABEL_1463;
                  v1702 = v365;
                  v1096 = v1094 + 1;
                  v1097 = v1621;
                  v1098 = v1570;
                  v1099 = (const void *)(((unint64_t)v1094 + v1621) & v1570);
LABEL_1461:
                  *v1093 = *(_BYTE *)v1094;
                  *((_QWORD *)v1093 + 1) = v1094[1];
                  *((_QWORD *)v1093 + 2) = v1096[1];
                  *((_QWORD *)v1093 + 3) = v1096[2];
                  *((_QWORD *)v1093 + 4) = v1096[3];
                  *((_QWORD *)v1093 + 5) = v1096[4];
                  *((_QWORD *)v1093 + 6) = v1096[5];
                  *((_QWORD *)v1093 + 7) = v1096[6];
                  *((_QWORD *)v1093 + 8) = v1096[7];
                  *((_QWORD *)v1093 + 9) = v1096[8];
                  *((_QWORD *)v1093 + 10) = v1096[9];
                  *((_QWORD *)v1093 + 11) = v1096[10];
                  *((_QWORD *)v1093 + 12) = v1096[11];
                  v1100 = v1096[12];
                  v1093[112] = *((_BYTE *)v1096 + 104);
                  *((_QWORD *)v1093 + 13) = v1100;
                  v1101 = (void *)((unint64_t)&v1093[v1097] & v1098);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (__swift_getEnumTagSinglePayload((uint64_t)v1099, 1, v1625))
                  {
                    memcpy(v1101, v1099, v1716);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1607 + 16))(v1101, v1099, v1625);
                    __swift_storeEnumTagSinglePayload((uint64_t)v1101, 0, 1, v1625);
                  }
                  v1102 = v1718;
                  v1091 = v1755 + 7;
                  v365 = v1702;
LABEL_1466:
                  v1103 = (unint64_t)&v1093[v1735 + v1102];
                  v1104 = (void *)(v1103 & v1568);
                  v1105 = (unint64_t)v1094 + v1735 + v1102;
                  v1106 = (const void *)(v1105 & v1568);
                  if (v1611 < 0x7FFFFFFF)
                  {
                    v1107 = v1669;
                    if (*(_QWORD *)((((unint64_t)v1106 + v1091) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                      goto LABEL_1468;
                  }
                  else
                  {
                    v1107 = v1669;
                    if (__swift_getEnumTagSinglePayload(v1105 & v1568, v1719, v1669) >= 2)
                    {
LABEL_1468:
                      memcpy(v1104, v1106, v1604);
                      v1108 = v1604;
                      goto LABEL_1478;
                    }
                  }
                  if (__swift_getEnumTagSinglePayload((uint64_t)v1106, 1, v1107))
                  {
                    memcpy(v1104, v1106, v1755);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1661 + 16))(v1104, v1106, v1107);
                    __swift_storeEnumTagSinglePayload((uint64_t)v1104, 0, 1, v1107);
                  }
                  v1109 = ((unint64_t)v1104 + v1091) & 0xFFFFFFFFFFFFFFF8;
                  v1110 = ((unint64_t)v1106 + v1091) & 0xFFFFFFFFFFFFFFF8;
                  v1111 = *(_QWORD *)(v1110 + 24);
                  *(_QWORD *)(v1109 + 24) = v1111;
                  *(_QWORD *)(v1109 + 32) = *(_QWORD *)(v1110 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v1111 - 8))(v1109, v1110);
                  v1112 = (v1109 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1113 = (v1110 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1114 = *(_QWORD *)(v1113 + 24);
                  if (v1114 < 0xFFFFFFFF)
                  {
                    v1115 = *(_OWORD *)v1113;
                    v1116 = *(_OWORD *)(v1113 + 16);
                    *(_QWORD *)(v1112 + 32) = *(_QWORD *)(v1113 + 32);
                    *(_OWORD *)v1112 = v1115;
                    *(_OWORD *)(v1112 + 16) = v1116;
                  }
                  else
                  {
                    *(_QWORD *)(v1112 + 24) = v1114;
                    *(_QWORD *)(v1112 + 32) = *(_QWORD *)(v1113 + 32);
                    (**(void (***)(unint64_t, unint64_t))(v1114 - 8))((v1109 + 47) & 0xFFFFFFFFFFFFFFF8, v1113);
                  }
                  v1117 = (_QWORD *)((v1112 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v1118 = (_QWORD *)((v1113 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v1117 = *v1118;
                  v1117[1] = v1118[1];
                  sub_21D7C4C20();
                  v1108 = v1604;
                  v1107 = v1669;
                  if (v1719)
                    v1108 = ((((((v1656 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                          + 16;
LABEL_1478:
                  v1119 = (v1103 | v1753) + v1108;
                  v1120 = (v1105 | v1753) + v1108;
                  v1121 = v1120 & v1568;
                  if (v1611 < 0x7FFFFFFF)
                  {
                    if (*(_QWORD *)(((v1091 + v1121) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                      goto LABEL_1480;
                  }
                  else if (__swift_getEnumTagSinglePayload(v1120 & v1568, v1719, v1107) >= 2)
                  {
LABEL_1480:
                    memcpy((void *)(v1119 & v1568), (const void *)(v1120 & v1568), v1604);
                    v1122 = v1604;
                    goto LABEL_1490;
                  }
                  if (__swift_getEnumTagSinglePayload(v1120 & v1568, 1, v1107))
                  {
                    memcpy((void *)(v1119 & v1568), (const void *)(v1120 & v1568), v1755);
                  }
                  else
                  {
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v1661 + 16))(v1119 & v1568, v1120 & v1568, v1107);
                    __swift_storeEnumTagSinglePayload(v1119 & v1568, 0, 1, v1107);
                  }
                  v1123 = (v1091 + (v1119 & v1568)) & 0xFFFFFFFFFFFFFFF8;
                  v1124 = (v1091 + v1121) & 0xFFFFFFFFFFFFFFF8;
                  v1125 = *(_QWORD *)(v1124 + 24);
                  *(_QWORD *)(v1123 + 24) = v1125;
                  *(_QWORD *)(v1123 + 32) = *(_QWORD *)(v1124 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v1125 - 8))(v1123, v1124);
                  v1126 = (v1123 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1127 = (v1124 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1128 = *(_QWORD *)(v1127 + 24);
                  if (v1128 < 0xFFFFFFFF)
                  {
                    v1129 = *(_OWORD *)v1127;
                    v1130 = *(_OWORD *)(v1127 + 16);
                    *(_QWORD *)(v1126 + 32) = *(_QWORD *)(v1127 + 32);
                    *(_OWORD *)v1126 = v1129;
                    *(_OWORD *)(v1126 + 16) = v1130;
                  }
                  else
                  {
                    *(_QWORD *)(v1126 + 24) = v1128;
                    *(_QWORD *)(v1126 + 32) = *(_QWORD *)(v1127 + 32);
                    (**(void (***)(unint64_t, unint64_t))(v1128 - 8))((v1123 + 47) & 0xFFFFFFFFFFFFFFF8, v1127);
                  }
                  v1131 = (_QWORD *)((v1126 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v1132 = (_QWORD *)((v1127 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v1131 = *v1132;
                  v1131[1] = v1132[1];
                  sub_21D7C4C20();
                  v1122 = v1604;
                  v1107 = v1669;
                  if (v1719)
                    v1122 = ((((((v1656 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                          + 16;
LABEL_1490:
                  v1133 = (char *)(((v1119 | v1753) + v1122) & v1568);
                  v1134 = (char *)(((v1120 | v1753) + v1122) & v1568);
                  if (v1611 < 0x7FFFFFFF)
                  {
                    v362 = v1557;
                    v366 = v1743;
                    if (*(_QWORD *)(((unint64_t)&v1134[v1091] & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                    {
LABEL_1492:
                      memcpy(v1133, v1134, v1604);
                      if (!v1719)
                        goto LABEL_1504;
                      goto LABEL_1503;
                    }
                  }
                  else
                  {
                    v362 = v1557;
                    v366 = v1743;
                    if (__swift_getEnumTagSinglePayload((uint64_t)v1134, v1719, v1107) >= 2)
                      goto LABEL_1492;
                  }
                  v1135 = v362;
                  if (__swift_getEnumTagSinglePayload((uint64_t)v1134, 1, v1107))
                  {
                    memcpy(v1133, v1134, v1755);
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(v1661 + 16))(v1133, v1134, v1107);
                    __swift_storeEnumTagSinglePayload((uint64_t)v1133, 0, 1, v1107);
                  }
                  v1136 = (unint64_t)&v1133[v1091] & 0xFFFFFFFFFFFFFFF8;
                  v1137 = (unint64_t)&v1134[v1091] & 0xFFFFFFFFFFFFFFF8;
                  v1138 = *(_QWORD *)(v1137 + 24);
                  *(_QWORD *)(v1136 + 24) = v1138;
                  *(_QWORD *)(v1136 + 32) = *(_QWORD *)(v1137 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v1138 - 8))(v1136, v1137);
                  v1139 = (v1136 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1140 = (v1137 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1141 = *(_QWORD *)(v1140 + 24);
                  if (v1141 < 0xFFFFFFFF)
                  {
                    v1142 = *(_OWORD *)v1140;
                    v1143 = *(_OWORD *)(v1140 + 16);
                    *(_QWORD *)(v1139 + 32) = *(_QWORD *)(v1140 + 32);
                    *(_OWORD *)v1139 = v1142;
                    *(_OWORD *)(v1139 + 16) = v1143;
                  }
                  else
                  {
                    *(_QWORD *)(v1139 + 24) = v1141;
                    *(_QWORD *)(v1139 + 32) = *(_QWORD *)(v1140 + 32);
                    (**(void (***)(unint64_t, unint64_t))(v1141 - 8))((v1136 + 47) & 0xFFFFFFFFFFFFFFF8, v1140);
                  }
                  v1144 = (_QWORD *)((v1139 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v1145 = (_QWORD *)((v1140 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v1144 = *v1145;
                  v1144[1] = v1145[1];
                  sub_21D7C4C20();
                  v362 = v1135;
                  v366 = v1743;
                  if (!v1719)
                    goto LABEL_1504;
                  v1604 = ((((((v1656 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                        + 16;
LABEL_1503:
                  v364 = v1656;
LABEL_1504:
                  *(_QWORD *)&v1133[v1604] = *(_QWORD *)&v1134[v1604];
                  v1146 = v1652
                        + ((v1657
                          + ((v1657
                            + ((v1655
                              + ((v1659
                                + ((v1727
                                  + ((v1725
                                    + ((((((v1658
                                          + ((((((((v364 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                            + 15) & 0xFFFFFFFFFFFFFFF8)) & v1740)
                                        + v1739) & 0xFFFFFFFFFFFFFFF8)
                                      + 23) & 0xFFFFFFFFFFFFFFF8)) & v1574)) & v1758)) & v1572)) & v1568)) & v1568)) & v1568);
                  if (v1653 > v1146)
                    v1146 = v1653;
                  if (v1146 <= v1651)
                    v1146 = v1651;
                  if (v1146 <= v1654)
                    v1146 = v1654;
                  if (v1146 <= v1647)
                    v1146 = v1647;
                  if (v1146 <= v1645)
                    v1146 = v1645;
                  if (v1146 <= v1642)
                    v1146 = v1642;
                  if (v1146 <= v1643)
                    v1146 = (((((v1738 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                          + 16;
                  if (v1146 <= v1644)
                    v1146 = v1644;
                  if (v1146 <= v1633)
                    v1146 = v1633;
                  if (v1146 <= v1631)
                    v1146 = v1631;
                  if (v1146 <= v1629)
                    v1146 = v1629;
                  if (v1146 <= v1632)
                    v1146 = v1632;
                  if (v1146 <= v1628)
                    v1146 = v1628;
                  if (v1146 <= v1723)
                    v1146 = v1723;
                  if (v1146 <= v1630)
                    v1146 = v1630;
                  if (v1146 <= v1653)
                    v1146 = v1653;
                  if (v1146 <= v1627)
                    v1146 = v1627;
                  if (v1146 <= v1634)
                    v1146 = ((v1738 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
                  if (v1146 <= v1636)
                    v1146 = v1636;
                  if (v1146 <= v1638)
                    v1146 = v1638;
                  if (v1146 <= v1637)
                    v1146 = v1637;
                  if (v1146 <= v1640)
                    v1146 = v1640;
                  if (v1146 <= v1635)
                    v1146 = v1635;
                  if (v1146 <= v1639)
                    v1146 = v1678 + 40;
                  if (v1146 <= v1641)
                    v1146 = v1641;
                  if (v1146 <= v1680)
                    v1146 = v1680;
                  if (v1146 <= v1648)
                    v1146 = v1648;
                  if (v1146 <= v1677)
                    v1146 = v1677;
                  if (v1146 <= v81)
                    v1146 = v81;
                  if (v1146 <= v1738)
                    v1146 = v1738;
                  if (v1146 <= v1649)
                    v1146 = v1649;
                  if (v1146 <= v1650)
                    v1146 = v1650;
                  if (v1146 <= v1646)
                    v1146 = v1646;
                  if (v1146 <= 8)
                    v1146 = 8;
                  *((_BYTE *)v365 + v1146) = 0;
LABEL_754:
                  v428 = v1555;
LABEL_2139:
                  v1462 = *(_QWORD *)(((unint64_t)v366 + v362) & 0xFFFFFFFFFFFFF8);
                  LODWORD(v1463) = -1;
                  if (v1462 < 0xFFFFFFFF)
                    v1463 = *(_QWORD *)(((unint64_t)v366 + v362) & 0xFFFFFFFFFFFFF8);
                  if ((int)v1463 - 1 < 0)
                    v1462 = sub_21D7C4C20();
                  *(_QWORD *)(((unint64_t)v365 + v362) & 0xFFFFFFFFFFFFFFF8) = v1462;
                  v3 = v1722;
                  *((_BYTE *)v1722 + v428) = 1;
                  return v3;
                case 1:
                  *v365 = *v366;
                  v368 = ((unint64_t)v365 + v1733 + 8) & v1572;
                  v1742 = (_QWORD *)(((unint64_t)v357 + v1741 + v363) & v1686);
                  v369 = ((unint64_t)v366 + v1733 + 8) & v1572;
                  *(_BYTE *)v368 = *(_BYTE *)v369;
                  *(_QWORD *)(v368 + 8) = *(_QWORD *)(v369 + 8);
                  *(_QWORD *)(v368 + 16) = *(_QWORD *)(v369 + 0x10);
                  *(_QWORD *)(v368 + 24) = *(_QWORD *)(v369 + 0x18);
                  *(_QWORD *)(v368 + 32) = *(_QWORD *)(v369 + 0x20);
                  *(_QWORD *)(v368 + 40) = *(_QWORD *)(v369 + 0x28);
                  *(_QWORD *)(v368 + 48) = *(_QWORD *)(v369 + 0x30);
                  *(_QWORD *)(v368 + 56) = *(_QWORD *)(v369 + 0x38);
                  *(_QWORD *)(v368 + 64) = *(_QWORD *)(v369 + 0x40);
                  *(_QWORD *)(v368 + 72) = *(_QWORD *)(v369 + 0x48);
                  *(_QWORD *)(v368 + 80) = *(_QWORD *)(v369 + 0x50);
                  *(_QWORD *)(v368 + 88) = *(_QWORD *)(v369 + 0x58);
                  *(_QWORD *)(v368 + 96) = *(_QWORD *)(v369 + 0x60);
                  v370 = *(_QWORD *)(v369 + 0x68);
                  *(_BYTE *)(v368 + 112) = *(_BYTE *)(v369 + 0x70);
                  *(_QWORD *)(v368 + 104) = v370;
                  v371 = (void *)((v1621 + v368) & v1570);
                  v372 = (const void *)((v1621 + v369) & v1570);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (__swift_getEnumTagSinglePayload((uint64_t)v372, 1, v1625))
                  {
                    memcpy(v371, v372, v1716);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1607 + 16))(v371, v372, v1625);
                    __swift_storeEnumTagSinglePayload((uint64_t)v371, 0, 1, v1625);
                  }
                  v428 = v1555;
                  v463 = 1;
                  goto LABEL_1744;
                case 2:
                  *v365 = *v366;
                  v373 = 2;
                  goto LABEL_753;
                case 3:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v366, 1, v208))
                  {
                    memcpy(v365, v366, v1755);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1661 + 16))(v365, v366, v208);
                    __swift_storeEnumTagSinglePayload((uint64_t)v365, 0, 1, v208);
                  }
                  v464 = ((unint64_t)v365 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v465 = ((unint64_t)v366 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v466 = *(_QWORD *)(v465 + 24);
                  *(_QWORD *)(v464 + 24) = v466;
                  *(_QWORD *)(v464 + 32) = *(_QWORD *)(v465 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v466 - 8))(v464, v465);
                  v467 = (_QWORD *)((v464 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v468 = (_QWORD *)((v465 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v467 = *v468;
                  v467[1] = v468[1];
                  v469 = (void *)(((unint64_t)v467 + v1725) & v1574);
                  v470 = (_BYTE *)(((unint64_t)v468 + v1725) & v1574);
                  sub_21D7C4C20();
                  v1560 = v362;
                  if (v1724)
                  {
                    v471 = v1624;
                    if (v1617 >= v1624)
                    {
                      v472 = (uint64_t)v470;
                      v471 = v1617;
                      v473 = v1619;
                    }
                    else
                    {
                      v472 = (unint64_t)&v470[v1620] & v1576;
                      v473 = v1623;
                    }
                    v846 = __swift_getEnumTagSinglePayload(v472, v471, v473);
                    v428 = v1555;
                  }
                  else
                  {
                    v428 = v1555;
                    if (!v470[v1720])
                      goto LABEL_1575;
                    v796 = (v470[v1720] - 1) << v1675;
                    if (v1720 > 3)
                      v796 = 0;
                    if ((_DWORD)v1720)
                    {
                      if (v1720 <= 3)
                        v797 = v1720;
                      else
                        v797 = 4;
                      __asm { BR              X11 }
                    }
                    v846 = v796 + 1;
                  }
                  if (v846)
                  {
                    memcpy(v469, v470, v1736);
                    goto LABEL_1577;
                  }
LABEL_1575:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1615 + 16))(v469, v470, v1619);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1616 + 16))(((unint64_t)v469 + v1620) & v1576, (unint64_t)&v470[v1620] & v1576, v1623);
                  if (!v1724)
                    *((_BYTE *)v469 + v1720) = 0;
LABEL_1577:
                  *((_BYTE *)v469 + v1736) = v470[v1736];
                  v1147 = (unint64_t)&v470[v1736 + 1 + v1708] & v1671;
                  (*(void (**)(unint64_t, uint64_t, uint64_t))(v1591 + 16))(((unint64_t)v469 + v1736 + v1708 + 1) & v1671, v1147, v1592);
                  v1148 = (v1587 + (((unint64_t)v469 + v1736 + v1708 + 1) & v1671)) & 0xFFFFFFFFFFFFFFF8;
                  v1149 = (v1587 + v1147) & 0xFFFFFFFFFFFFFFF8;
                  v1150 = *(_QWORD *)(v1149 + 24);
                  if (v1150 < 0xFFFFFFFF)
                  {
                    v1151 = *(_OWORD *)v1149;
                    v1152 = *(_OWORD *)(v1149 + 16);
                    *(_QWORD *)(v1148 + 32) = *(_QWORD *)(v1149 + 32);
                    *(_OWORD *)v1148 = v1151;
                    *(_OWORD *)(v1148 + 16) = v1152;
                  }
                  else
                  {
                    *(_QWORD *)(v1148 + 24) = v1150;
                    *(_QWORD *)(v1148 + 32) = *(_QWORD *)(v1149 + 32);
                    (**(void (***)(unint64_t, unint64_t))(v1150 - 8))(v1148, v1149);
                  }
                  v1153 = (_QWORD *)((v1737 + v1148) & v1572);
                  v1154 = (_QWORD *)((v1737 + v1149) & v1572);
                  if (v1618 >= 0x7FFFFFFF)
                  {
                    v1158 = (const void *)(((unint64_t)v1154 + v1621) & v1570);
                    if (__swift_getEnumTagSinglePayload((uint64_t)v1158, v1613, v1625) <= 1)
                    {
                      v1750 = v366;
                      v1703 = v365;
                      v1156 = (char *)(v1154 + 1);
                      v1157 = v1621;
                      goto LABEL_1587;
                    }
                  }
                  else
                  {
                    v1155 = *(_QWORD *)(((v1737 + v1149) & v1572) + 0x10);
                    if (v1155 >= 0xFFFFFFFF)
                      LODWORD(v1155) = -1;
                    if ((int)v1155 - 1 < 0)
                    {
                      v1750 = v366;
                      v1703 = v365;
                      v1156 = (char *)(v1154 + 1);
                      v1157 = v1621;
                      v1158 = (const void *)(((unint64_t)v1154 + v1621) & v1570);
LABEL_1587:
                      *(_BYTE *)v1153 = *(_BYTE *)v1154;
                      v1153[1] = v1154[1];
                      v1153[2] = *((_QWORD *)v1156 + 1);
                      v1153[3] = *((_QWORD *)v1156 + 2);
                      v1153[4] = *((_QWORD *)v1156 + 3);
                      v1153[5] = *((_QWORD *)v1156 + 4);
                      v1153[6] = *((_QWORD *)v1156 + 5);
                      v1153[7] = *((_QWORD *)v1156 + 6);
                      v1153[8] = *((_QWORD *)v1156 + 7);
                      v1153[9] = *((_QWORD *)v1156 + 8);
                      v1153[10] = *((_QWORD *)v1156 + 9);
                      v1153[11] = *((_QWORD *)v1156 + 10);
                      v1153[12] = *((_QWORD *)v1156 + 11);
                      v1159 = *((_QWORD *)v1156 + 12);
                      *((_BYTE *)v1153 + 112) = v1156[104];
                      v1153[13] = v1159;
                      v1160 = (void *)(((unint64_t)v1153 + v1157) & v1570);
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      if (__swift_getEnumTagSinglePayload((uint64_t)v1158, 1, v1625))
                      {
                        memcpy(v1160, v1158, v1716);
                      }
                      else
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v1607 + 16))(v1160, v1158, v1625);
                        __swift_storeEnumTagSinglePayload((uint64_t)v1160, 0, 1, v1625);
                      }
                      v428 = v1555;
                      v1161 = v1718;
                      v365 = v1703;
                      v366 = v1750;
LABEL_1592:
                      v1162 = (void *)(((unint64_t)v1153 + v1712 + v1161) & v1574);
                      v1163 = (_BYTE *)(((unint64_t)v1154 + v1712 + v1161) & v1574);
                      v362 = v1560;
                      v1164 = v1624;
                      if (v1724)
                      {
                        v1165 = v1713;
                        if (v1617 >= v1624)
                        {
                          v1166 = (uint64_t)v1163;
                          v1164 = v1617;
                          v1167 = v1619;
                        }
                        else
                        {
                          v1166 = (unint64_t)&v1163[v1620] & v1576;
                          v1167 = v1623;
                        }
                        v1170 = __swift_getEnumTagSinglePayload(v1166, v1164, v1167);
                      }
                      else
                      {
                        v1165 = v1713;
                        if (!v1163[v1720])
                          goto LABEL_1709;
                        v1168 = (v1163[v1720] - 1) << v1675;
                        if (v1720 > 3)
                          v1168 = 0;
                        if ((_DWORD)v1720)
                        {
                          if (v1720 <= 3)
                            v1169 = v1720;
                          else
                            v1169 = 4;
                          __asm { BR              X11 }
                        }
                        v1170 = v1168 + 1;
                      }
                      if (v1170)
                      {
                        memcpy(v1162, v1163, v1736);
LABEL_1711:
                        v1217 = (_QWORD *)(((unint64_t)v1162 + v1727) & v1758);
                        v1218 = (uint64_t *)((unint64_t)&v1163[v1727] & v1758);
                        if ((v1624 & 0x80000000) != 0)
                        {
                          v1220 = __swift_getEnumTagSinglePayload(((unint64_t)v1218 + v1606) & v1576, v1624, v1623);
                        }
                        else
                        {
                          v1219 = *v1218;
                          if ((unint64_t)*v1218 >= 0xFFFFFFFF)
                            LODWORD(v1219) = -1;
                          v1220 = v1219 + 1;
                        }
                        if (v1220)
                        {
                          memcpy(v1217, v1218, v1165);
                        }
                        else
                        {
                          *v1217 = *v1218;
                          v1221 = ((unint64_t)v1217 + v1606) & v1576;
                          v1222 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1616 + 16);
                          sub_21D7C4C20();
                          v1222(v1221, ((unint64_t)v1218 + v1606) & v1576, v1623);
                        }
                        v576 = 3;
                        goto LABEL_2137;
                      }
LABEL_1709:
                      (*(void (**)(void *, _BYTE *, uint64_t))(v1615 + 16))(v1162, v1163, v1619);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1616 + 16))(((unint64_t)v1162 + v1620) & v1576, (unint64_t)&v1163[v1620] & v1576, v1623);
                      if (!v1724)
                        *((_BYTE *)v1162 + v1720) = 0;
                      goto LABEL_1711;
                    }
                  }
                  v1161 = v1718;
                  memcpy(v1153, v1154, v1718);
                  goto LABEL_1592;
                case 4:
                  v1558 = v362;
                  if (__swift_getEnumTagSinglePayload((uint64_t)v366, 1, v208))
                  {
                    memcpy(v365, v366, v1755);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1661 + 16))(v365, v366, v208);
                    __swift_storeEnumTagSinglePayload((uint64_t)v365, 0, 1, v208);
                  }
                  v474 = ((unint64_t)v365 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v475 = ((unint64_t)v366 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v476 = *(_QWORD *)(v475 + 24);
                  *(_QWORD *)(v474 + 24) = v476;
                  *(_QWORD *)(v474 + 32) = *(_QWORD *)(v475 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v476 - 8))(v474, v475);
                  v477 = (_QWORD *)((v474 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v478 = (_QWORD *)((v475 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v477 = *v478;
                  v477[1] = v478[1];
                  v479 = (_QWORD *)(((unint64_t)v477 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v480 = (_QWORD *)(((unint64_t)v478 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v479 = *v480;
                  v479[1] = v480[1];
                  v481 = ((unint64_t)v479 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v482 = ((unint64_t)v480 + 23) & 0xFFFFFFFFFFFFFFF8;
                  *(_QWORD *)v481 = *(_QWORD *)v482;
                  *(_QWORD *)(v481 + 8) = *(_QWORD *)(v482 + 8);
                  *(_BYTE *)(v481 + 16) = *(_BYTE *)(v482 + 16);
                  v483 = ((unint64_t)v479 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v484 = ((unint64_t)v480 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v485 = *(_QWORD *)(v484 + 24);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (v485 < 0xFFFFFFFF)
                  {
                    v486 = *(_OWORD *)v484;
                    v487 = *(_OWORD *)(v484 + 16);
                    *(_QWORD *)(v483 + 32) = *(_QWORD *)(v484 + 32);
                    *(_OWORD *)v483 = v486;
                    *(_OWORD *)(v483 + 16) = v487;
                  }
                  else
                  {
                    *(_QWORD *)(v483 + 24) = v485;
                    *(_QWORD *)(v483 + 32) = *(_QWORD *)(v484 + 32);
                    (**(void (***)(unint64_t, unint64_t, unint64_t))(v485 - 8))(v483, v484, v485);
                  }
                  v428 = v1555;
                  *(_BYTE *)(v483 + 40) = *(_BYTE *)(v484 + 40);
                  v488 = (_QWORD *)((v1599 + v483) & v1572);
                  v489 = (_QWORD *)((v1599 + v484) & v1572);
                  if (v1618 >= 0x7FFFFFFF)
                  {
                    v493 = (const void *)(((unint64_t)v489 + v1621) & v1570);
                    if (__swift_getEnumTagSinglePayload((uint64_t)v493, v1613, v1625) <= 1)
                    {
                      v1744 = v366;
                      v1696 = v365;
                      v491 = (char *)(v489 + 1);
                      v492 = v1621;
                      goto LABEL_784;
                    }
                  }
                  else
                  {
                    v490 = *(_QWORD *)(((v1599 + v484) & v1572) + 0x10);
                    if (v490 >= 0xFFFFFFFF)
                      LODWORD(v490) = -1;
                    if ((int)v490 - 1 < 0)
                    {
                      v1744 = v366;
                      v1696 = v365;
                      v491 = (char *)(v489 + 1);
                      v492 = v1621;
                      v493 = (const void *)(((unint64_t)v489 + v1621) & v1570);
LABEL_784:
                      *(_BYTE *)v488 = *(_BYTE *)v489;
                      v488[1] = v489[1];
                      v488[2] = *((_QWORD *)v491 + 1);
                      v488[3] = *((_QWORD *)v491 + 2);
                      v488[4] = *((_QWORD *)v491 + 3);
                      v488[5] = *((_QWORD *)v491 + 4);
                      v488[6] = *((_QWORD *)v491 + 5);
                      v488[7] = *((_QWORD *)v491 + 6);
                      v488[8] = *((_QWORD *)v491 + 7);
                      v488[9] = *((_QWORD *)v491 + 8);
                      v488[10] = *((_QWORD *)v491 + 9);
                      v488[11] = *((_QWORD *)v491 + 10);
                      v488[12] = *((_QWORD *)v491 + 11);
                      v494 = *((_QWORD *)v491 + 12);
                      *((_BYTE *)v488 + 112) = v491[104];
                      v488[13] = v494;
                      v495 = (void *)(((unint64_t)v488 + v492) & v1570);
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      if (__swift_getEnumTagSinglePayload((uint64_t)v493, 1, v1625))
                      {
                        memcpy(v495, v493, v1716);
                      }
                      else
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v1607 + 16))(v495, v493, v1625);
                        __swift_storeEnumTagSinglePayload((uint64_t)v495, 0, 1, v1625);
                      }
                      v428 = v1555;
                      v496 = v1718;
                      v365 = v1696;
                      v366 = v1744;
LABEL_1100:
                      v905 = (void *)(((unint64_t)v488 + v1712 + v496) & v1574);
                      v906 = (_BYTE *)(((unint64_t)v489 + v1712 + v496) & v1574);
                      v362 = v1558;
                      v907 = v1624;
                      if (v1724)
                      {
                        if (v1617 >= v1624)
                        {
                          v908 = (uint64_t)v906;
                          v907 = v1617;
                          v909 = v1619;
                        }
                        else
                        {
                          v908 = (unint64_t)&v906[v1620] & v1576;
                          v909 = v1623;
                        }
                        v912 = __swift_getEnumTagSinglePayload(v908, v907, v909);
                      }
                      else
                      {
                        if (!v906[v1720])
                          goto LABEL_1636;
                        v910 = (v906[v1720] - 1) << v1675;
                        if (v1720 > 3)
                          v910 = 0;
                        if ((_DWORD)v1720)
                        {
                          if (v1720 <= 3)
                            v911 = v1720;
                          else
                            v911 = 4;
                          __asm { BR              X11 }
                        }
                        v912 = v910 + 1;
                      }
                      if (v912)
                      {
                        memcpy(v905, v906, v1736);
LABEL_1638:
                        v1182 = ((unint64_t)v905 + v1608) & 0xFFFFFFFFFFFFFFF8;
                        v1183 = (unint64_t)&v906[v1608] & 0xFFFFFFFFFFFFFFF8;
                        v1184 = *(_QWORD *)(v1183 + 24);
                        if (v1184 < 0xFFFFFFFF)
                        {
                          v1185 = *(_OWORD *)v1183;
                          v1186 = *(_OWORD *)(v1183 + 16);
                          *(_QWORD *)(v1182 + 32) = *(_QWORD *)(v1183 + 32);
                          *(_OWORD *)v1182 = v1185;
                          *(_OWORD *)(v1182 + 16) = v1186;
                        }
                        else
                        {
                          *(_QWORD *)(v1182 + 24) = v1184;
                          *(_QWORD *)(v1182 + 32) = *(_QWORD *)(v1183 + 32);
                          (**(void (***)(unint64_t, unint64_t))(v1184 - 8))(v1182, v1183);
                        }
                        v1187 = (_QWORD *)((v1182 + 47) & 0xFFFFFFFFFFFFFFF8);
                        v1188 = (_QWORD *)((v1183 + 47) & 0xFFFFFFFFFFFFFFF8);
                        *v1187 = *v1188;
                        v1187[1] = v1188[1];
                        v671 = 4;
                        goto LABEL_1642;
                      }
LABEL_1636:
                      (*(void (**)(void *, _BYTE *, uint64_t))(v1615 + 16))(v905, v906, v1619);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1616 + 16))(((unint64_t)v905 + v1620) & v1576, (unint64_t)&v906[v1620] & v1576, v1623);
                      if (!v1724)
                        *((_BYTE *)v905 + v1720) = 0;
                      goto LABEL_1638;
                    }
                  }
                  v496 = v1718;
                  memcpy(v488, v489, v1718);
                  goto LABEL_1100;
                case 5:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v366, 1, v208))
                  {
                    memcpy(v365, v366, v1755);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1661 + 16))(v365, v366, v208);
                    __swift_storeEnumTagSinglePayload((uint64_t)v365, 0, 1, v208);
                  }
                  v497 = ((unint64_t)v365 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v498 = ((unint64_t)v366 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v499 = *(_QWORD *)(v498 + 24);
                  *(_QWORD *)(v497 + 24) = v499;
                  *(_QWORD *)(v497 + 32) = *(_QWORD *)(v498 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v499 - 8))(v497, v498);
                  v500 = (void *)((v1730 + 40 + v497) & v1692);
                  v501 = (const void *)((v1730 + 40 + v498) & v1692);
                  v1745 = v366;
                  if (v1611 == v1601)
                  {
                    v502 = v1719;
                    v503 = v1669;
                    v504 = v1731;
                    if (v1719 < 2)
                      goto LABEL_1261;
                    v505 = (uint64_t)v501;
                    v506 = v1669;
                  }
                  else
                  {
                    v507 = ((unint64_t)v501 + v1728) & 0xFFFFFFFFFFFFFFF8;
                    v504 = v1731;
                    if (v1601 == 0x7FFFFFFF)
                    {
                      v503 = v1669;
                      if (*(_QWORD *)(v507 + 24) >= 0xFFFFFFFFuLL)
                        goto LABEL_1261;
                      goto LABEL_1263;
                    }
                    v853 = (v1733
                          + ((((((v507 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                          + 65) & v1572;
                    v503 = v1669;
                    if (v1578 == v1601)
                    {
                      if (v1618 > 0x7FFFFFFE)
                      {
                        v963 = __swift_getEnumTagSinglePayload((v1621 + v853) & v1570, v1613, v1625);
                        if (v963 < 2)
                          goto LABEL_1261;
                        v856 = v963 - 1;
                      }
                      else
                      {
                        v854 = *(_QWORD *)(v853 + 16);
                        if (v854 >= 0xFFFFFFFF)
                          LODWORD(v854) = -1;
                        v855 = v854 - 1;
                        if (v855 < 0)
                          v855 = -1;
                        v856 = v855 + 1;
                      }
                      if (v856 < 2)
                      {
LABEL_1261:
                        if (__swift_getEnumTagSinglePayload((uint64_t)v501, 1, v503))
                        {
                          memcpy(v500, v501, v1755);
                        }
                        else
                        {
                          (*(void (**)(void *, const void *, uint64_t))(v1661 + 16))(v500, v501, v503);
                          __swift_storeEnumTagSinglePayload((uint64_t)v500, 0, 1, v503);
                        }
                        v966 = ((unint64_t)v500 + v1728) & 0xFFFFFFFFFFFFFFF8;
                        v967 = ((unint64_t)v501 + v1728) & 0xFFFFFFFFFFFFFFF8;
                        v968 = *(_QWORD *)(v967 + 24);
                        *(_QWORD *)(v966 + 24) = v968;
                        *(_QWORD *)(v966 + 32) = *(_QWORD *)(v967 + 32);
                        (**(void (***)(unint64_t, unint64_t))(v968 - 8))(v966, v967);
                        v969 = (_QWORD *)((v966 + 47) & 0xFFFFFFFFFFFFFFF8);
                        v970 = (_QWORD *)((v967 + 47) & 0xFFFFFFFFFFFFFFF8);
                        *v969 = *v970;
                        v969[1] = v970[1];
                        v971 = (_QWORD *)(((unint64_t)v969 + 23) & 0xFFFFFFFFFFFFFFF8);
                        v972 = (_QWORD *)(((unint64_t)v970 + 23) & 0xFFFFFFFFFFFFFFF8);
                        *v971 = *v972;
                        v971[1] = v972[1];
                        v973 = ((unint64_t)v971 + 23) & 0xFFFFFFFFFFFFFFF8;
                        v974 = ((unint64_t)v972 + 23) & 0xFFFFFFFFFFFFFFF8;
                        *(_QWORD *)v973 = *(_QWORD *)v974;
                        *(_QWORD *)(v973 + 8) = *(_QWORD *)(v974 + 8);
                        *(_BYTE *)(v973 + 16) = *(_BYTE *)(v974 + 16);
                        v975 = ((unint64_t)v971 + 47) & 0xFFFFFFFFFFFFFFF8;
                        v976 = ((unint64_t)v972 + 47) & 0xFFFFFFFFFFFFFFF8;
                        v977 = *(_QWORD *)(v976 + 24);
                        sub_21D7C4C20();
                        sub_21D7C4C20();
                        sub_21D7C4C20();
                        v1759 = v500;
                        if (v977 < 0xFFFFFFFF)
                        {
                          v978 = *(_OWORD *)v976;
                          v979 = *(_OWORD *)(v976 + 16);
                          *(_QWORD *)(v975 + 32) = *(_QWORD *)(v976 + 32);
                          *(_OWORD *)v975 = v978;
                          *(_OWORD *)(v975 + 16) = v979;
                        }
                        else
                        {
                          *(_QWORD *)(v975 + 24) = v977;
                          *(_QWORD *)(v975 + 32) = *(_QWORD *)(v976 + 32);
                          (**(void (***)(unint64_t, unint64_t, unint64_t))(v977 - 8))(v975, v976, v977);
                        }
                        v980 = v365;
                        *(_BYTE *)(v975 + 40) = *(_BYTE *)(v976 + 40);
                        v981 = (_QWORD *)((v1599 + v975) & v1572);
                        v982 = (_QWORD *)((v1599 + v976) & v1572);
                        if (v1618 >= 0x7FFFFFFF)
                        {
                          v989 = (const void *)(((unint64_t)v982 + v1621) & v1570);
                          v986 = v1574;
                          v985 = v1576;
                          if (__swift_getEnumTagSinglePayload((uint64_t)v989, v1613, v1625) <= 1)
                          {
                            v1754 = v501;
                            v1565 = v362;
                            v987 = (char *)(v982 + 1);
                            v988 = v1621;
                            v984 = v1570;
                            goto LABEL_1275;
                          }
                        }
                        else
                        {
                          v983 = *(_QWORD *)(((v1599 + v976) & v1572) + 0x10);
                          if (v983 >= 0xFFFFFFFF)
                            LODWORD(v983) = -1;
                          v984 = v1570;
                          v986 = v1574;
                          v985 = v1576;
                          if ((int)v983 - 1 < 0)
                          {
                            v1754 = v501;
                            v1565 = v362;
                            v987 = (char *)(v982 + 1);
                            v988 = v1621;
                            v989 = (const void *)(((unint64_t)v982 + v1621) & v1570);
LABEL_1275:
                            *(_BYTE *)v981 = *(_BYTE *)v982;
                            v981[1] = v982[1];
                            v981[2] = *((_QWORD *)v987 + 1);
                            v981[3] = *((_QWORD *)v987 + 2);
                            v981[4] = *((_QWORD *)v987 + 3);
                            v981[5] = *((_QWORD *)v987 + 4);
                            v981[6] = *((_QWORD *)v987 + 5);
                            v981[7] = *((_QWORD *)v987 + 6);
                            v981[8] = *((_QWORD *)v987 + 7);
                            v981[9] = *((_QWORD *)v987 + 8);
                            v981[10] = *((_QWORD *)v987 + 9);
                            v981[11] = *((_QWORD *)v987 + 10);
                            v981[12] = *((_QWORD *)v987 + 11);
                            v990 = *((_QWORD *)v987 + 12);
                            *((_BYTE *)v981 + 112) = v987[104];
                            v981[13] = v990;
                            v991 = (void *)(((unint64_t)v981 + v988) & v984);
                            sub_21D7C4C20();
                            sub_21D7C4C20();
                            sub_21D7C4C20();
                            sub_21D7C4C20();
                            sub_21D7C4C20();
                            sub_21D7C4C20();
                            if (__swift_getEnumTagSinglePayload((uint64_t)v989, 1, v1625))
                            {
                              memcpy(v991, v989, v1716);
                            }
                            else
                            {
                              (*(void (**)(void *, const void *, uint64_t))(v1607 + 16))(v991, v989, v1625);
                              __swift_storeEnumTagSinglePayload((uint64_t)v991, 0, 1, v1625);
                            }
                            v362 = v1565;
                            v992 = v1718;
                            v986 = v1574;
                            v985 = v1576;
                            v501 = v1754;
LABEL_1280:
                            v993 = (void *)(((unint64_t)v981 + v1712 + v992) & v986);
                            v994 = (_BYTE *)(((unint64_t)v982 + v1712 + v992) & v986);
                            v995 = v1624;
                            v365 = v980;
                            if (v1724)
                            {
                              v503 = v1669;
                              if (v1617 >= v1624)
                              {
                                v996 = (uint64_t)v994;
                                v995 = v1617;
                                v997 = v1619;
                              }
                              else
                              {
                                v996 = (unint64_t)&v994[v1620] & v985;
                                v997 = v1623;
                              }
                              v1000 = __swift_getEnumTagSinglePayload(v996, v995, v997);
                              v366 = v1745;
                            }
                            else
                            {
                              v503 = v1669;
                              v366 = v1745;
                              if (!v994[v1720])
                                goto LABEL_2083;
                              v998 = (v994[v1720] - 1) << v1675;
                              if (v1720 > 3)
                                v998 = 0;
                              if ((_DWORD)v1720)
                              {
                                if (v1720 <= 3)
                                  v999 = v1720;
                                else
                                  v999 = 4;
                                __asm { BR              X11 }
                              }
                              v1000 = v998 + 1;
                            }
                            if (v1000)
                            {
                              memcpy(v993, v994, v1736);
LABEL_2085:
                              v964 = v501;
                              v1407 = ((unint64_t)v993 + v1608) & 0xFFFFFFFFFFFFFFF8;
                              v1408 = (unint64_t)&v994[v1608] & 0xFFFFFFFFFFFFFFF8;
                              v1409 = *(_QWORD *)(v1408 + 24);
                              if (v1409 < 0xFFFFFFFF)
                              {
                                v1410 = *(_OWORD *)v1408;
                                v1411 = *(_OWORD *)(v1408 + 16);
                                *(_QWORD *)(v1407 + 32) = *(_QWORD *)(v1408 + 32);
                                *(_OWORD *)v1407 = v1410;
                                *(_OWORD *)(v1407 + 16) = v1411;
                              }
                              else
                              {
                                *(_QWORD *)(v1407 + 24) = v1409;
                                *(_QWORD *)(v1407 + 32) = *(_QWORD *)(v1408 + 32);
                                (**(void (***)(unint64_t, unint64_t))(v1409 - 8))(v1407, v1408);
                              }
                              v965 = v1755 + 7;
                              v500 = v1759;
                              v1412 = (_QWORD *)((v1407 + 47) & 0xFFFFFFFFFFFFFFF8);
                              v1413 = (_QWORD *)((v1408 + 47) & 0xFFFFFFFFFFFFFFF8);
                              *v1412 = *v1413;
                              v1412[1] = v1413[1];
                              sub_21D7C4C20();
                              v504 = v1731;
LABEL_2089:
                              v1414 = (_BYTE *)(((unint64_t)v500 + v1596) & v1692);
                              v1415 = (unsigned __int8 *)(((unint64_t)v964 + v1596) & v1692);
                              v1416 = *v1415;
                              if (v1416 > 2)
                              {
                                memcpy((void *)(((unint64_t)v500 + v1596) & v1692), v1415, v504);
                                v428 = v1555;
                                goto LABEL_2202;
                              }
                              *v1414 = v1416;
                              v1417 = (_QWORD *)((unint64_t)&v1414[v1626] & v1692);
                              v1418 = (_QWORD *)((unint64_t)&v1415[v1626] & v1692);
                              v1419 = *((unsigned __int8 *)v1418 + v1660);
                              if (v1419 > 2)
                              {
                                memcpy((void *)((unint64_t)&v1414[v1626] & v1692), (const void *)((unint64_t)&v1415[v1626] & v1692), __n);
                                goto LABEL_2101;
                              }
                              if (v1419 != 2)
                              {
                                if (v1419 == 1)
                                {
                                  v1420 = *(_QWORD *)(((unint64_t)&v1415[v1626] & v1692) + 0x18);
                                  *(_QWORD *)(((unint64_t)&v1414[v1626] & v1692) + 0x18) = v1420;
                                  *(_QWORD *)(((unint64_t)&v1414[v1626] & v1692) + 0x20) = *(_QWORD *)(((unint64_t)&v1415[v1626] & v1692) + 0x20);
                                  (**(void (***)(_QWORD *, _QWORD *))(v1420 - 8))(v1417, v1418);
                                  v1421 = (void *)(((unint64_t)v1417 + v1721) & v1690);
                                  v1422 = (const void *)(((unint64_t)v1418 + v1721) & v1690);
                                  v1706 = v365;
                                  if (__swift_getEnumTagSinglePayload((uint64_t)v1422, 1, v503))
                                  {
                                    memcpy(v1421, v1422, v1755);
                                  }
                                  else
                                  {
                                    (*(void (**)(void *, const void *, uint64_t))(v1661 + 16))(v1421, v1422, v503);
                                    __swift_storeEnumTagSinglePayload((uint64_t)v1421, 0, 1, v503);
                                  }
                                  v1424 = (_QWORD *)(((unint64_t)v1421 + v965) & 0xFFFFFFFFFFFFFFF8);
                                  v1425 = (_QWORD *)(((unint64_t)v1422 + v965) & 0xFFFFFFFFFFFFFFF8);
                                  *v1424 = *v1425;
                                  v1424[1] = v1425[1];
                                  v1426 = ((unint64_t)v1424 + 23) & 0xFFFFFFFFFFFFFFF8;
                                  v1427 = ((unint64_t)v1425 + 23) & 0xFFFFFFFFFFFFFFF8;
                                  *(_QWORD *)v1426 = *(_QWORD *)v1427;
                                  *(_BYTE *)(v1426 + 8) = *(_BYTE *)(v1427 + 8);
                                  v1428 = ((unint64_t)v1424 + 39) & 0xFFFFFFFFFFFFFFF8;
                                  v1429 = ((unint64_t)v1425 + 39) & 0xFFFFFFFFFFFFFFF8;
                                  *(_QWORD *)v1428 = *(_QWORD *)v1429;
                                  *(_BYTE *)(v1428 + 8) = *(_BYTE *)(v1429 + 8);
                                  v1430 = ((unint64_t)v1424 + 55) & 0xFFFFFFFFFFFFFFF8;
                                  v1431 = ((unint64_t)v1425 + 55) & 0xFFFFFFFFFFFFFFF8;
                                  v1432 = *(_QWORD *)v1431;
                                  *(_BYTE *)(v1430 + 8) = *(_BYTE *)(v1431 + 8);
                                  *(_QWORD *)v1430 = v1432;
                                  v1433 = (_QWORD *)(((unint64_t)v1424 + 71) & 0xFFFFFFFFFFFFFFF8);
                                  v1434 = (_QWORD *)(((unint64_t)v1425 + 71) & 0xFFFFFFFFFFFFFFF8);
                                  *v1433 = *v1434;
                                  v1433[1] = v1434[1];
                                  v1435 = ((unint64_t)v1433 + 23) & 0xFFFFFFFFFFFFFFF8;
                                  v1436 = ((unint64_t)v1434 + 23) & 0xFFFFFFFFFFFFFFF8;
                                  v1437 = *(_QWORD *)(v1436 + 24);
                                  sub_21D7C4C20();
                                  sub_21D7C4C20();
                                  sub_21D7C4C20();
                                  sub_21D7C4C20();
                                  if (v1437 < 0xFFFFFFFF)
                                  {
                                    v1438 = *(_OWORD *)v1436;
                                    v1439 = *(_OWORD *)(v1436 + 16);
                                    *(_QWORD *)(v1435 + 32) = *(_QWORD *)(v1436 + 32);
                                    *(_OWORD *)v1435 = v1438;
                                    *(_OWORD *)(v1435 + 16) = v1439;
                                  }
                                  else
                                  {
                                    *(_QWORD *)(v1435 + 24) = v1437;
                                    *(_QWORD *)(v1435 + 32) = *(_QWORD *)(v1436 + 32);
                                    (**(void (***)(unint64_t, unint64_t, unint64_t))(v1437 - 8))(v1435, v1436, v1437);
                                  }
                                  v1440 = (_BYTE *)((v1737 + v1435) & v1572);
                                  v1441 = (_QWORD *)((v1737 + v1436) & v1572);
                                  if (v1618 >= 0x7FFFFFFF)
                                  {
                                    v1444 = ((unint64_t)v1441 + v1621) & v1570;
                                    if (__swift_getEnumTagSinglePayload(v1444, v1613, v1625) <= 1)
                                    {
                                      v1443 = (char *)(v1441 + 1);
                                      goto LABEL_2114;
                                    }
                                  }
                                  else
                                  {
                                    v1442 = v1441[2];
                                    if (v1442 >= 0xFFFFFFFF)
                                      LODWORD(v1442) = -1;
                                    if ((int)v1442 - 1 < 0)
                                    {
                                      v1443 = (char *)(v1441 + 1);
                                      v1444 = ((unint64_t)v1441 + v1621) & v1570;
LABEL_2114:
                                      *v1440 = *(_BYTE *)v1441;
                                      *(_QWORD *)(((v1737 + v1435) & v1572) + 8) = v1441[1];
                                      *(_QWORD *)(((v1737 + v1435) & v1572) + 0x10) = *((_QWORD *)v1443 + 1);
                                      *(_QWORD *)(((v1737 + v1435) & v1572) + 0x18) = *((_QWORD *)v1443 + 2);
                                      *(_QWORD *)(((v1737 + v1435) & v1572) + 0x20) = *((_QWORD *)v1443 + 3);
                                      *(_QWORD *)(((v1737 + v1435) & v1572) + 0x28) = *((_QWORD *)v1443 + 4);
                                      *(_QWORD *)(((v1737 + v1435) & v1572) + 0x30) = *((_QWORD *)v1443 + 5);
                                      *(_QWORD *)(((v1737 + v1435) & v1572) + 0x38) = *((_QWORD *)v1443 + 6);
                                      *(_QWORD *)(((v1737 + v1435) & v1572) + 0x40) = *((_QWORD *)v1443 + 7);
                                      *(_QWORD *)(((v1737 + v1435) & v1572) + 0x48) = *((_QWORD *)v1443 + 8);
                                      *(_QWORD *)(((v1737 + v1435) & v1572) + 0x50) = *((_QWORD *)v1443 + 9);
                                      *(_QWORD *)(((v1737 + v1435) & v1572) + 0x58) = *((_QWORD *)v1443 + 10);
                                      *(_QWORD *)(((v1737 + v1435) & v1572) + 0x60) = *((_QWORD *)v1443 + 11);
                                      v1445 = *((_QWORD *)v1443 + 12);
                                      *(_BYTE *)(((v1737 + v1435) & v1572) + 0x70) = v1443[104];
                                      *(_QWORD *)(((v1737 + v1435) & v1572) + 0x68) = v1445;
                                      v1446 = (unint64_t)&v1440[v1621] & v1570;
                                      sub_21D7C4C20();
                                      sub_21D7C4C20();
                                      sub_21D7C4C20();
                                      sub_21D7C4C20();
                                      sub_21D7C4C20();
                                      sub_21D7C4C20();
                                      if (!__swift_getEnumTagSinglePayload(v1444, 1, v1625))
                                      {
                                        (*(void (**)(uint64_t, uint64_t, uint64_t))(v1607 + 16))(v1446, v1444, v1625);
                                        __swift_storeEnumTagSinglePayload(v1446, 0, 1, v1625);
                                        goto LABEL_2118;
                                      }
                                      v1447 = (void *)v1446;
                                      v1448 = (const void *)v1444;
                                      v1449 = v1716;
LABEL_2117:
                                      memcpy(v1447, v1448, v1449);
LABEL_2118:
                                      v965 = v1755 + 7;
                                      *((_BYTE *)v1417 + v1660) = 1;
                                      v428 = v1555;
LABEL_2200:
                                      v365 = v1706;
                                      goto LABEL_2201;
                                    }
                                  }
                                  v1447 = (void *)((v1737 + v1435) & v1572);
                                  v1448 = v1441;
                                  v1449 = v1718;
                                  goto LABEL_2117;
                                }
                                *v1417 = *v1418;
                                *(_QWORD *)(((unint64_t)&v1414[v1626] & v1692) + 8) = *(_QWORD *)(((unint64_t)&v1415[v1626] & v1692) + 8);
                                *(_QWORD *)(((unint64_t)&v1414[v1626] & v1692) + 0x10) = *(_QWORD *)(((unint64_t)&v1415[v1626] & v1692) + 0x10);
                                *(_QWORD *)(((unint64_t)&v1414[v1626] & v1692) + 0x18) = *(_QWORD *)(((unint64_t)&v1415[v1626] & v1692) + 0x18);
                                *(_QWORD *)(((unint64_t)&v1414[v1626] & v1692) + 0x20) = *(_QWORD *)(((unint64_t)&v1415[v1626] & v1692) + 0x20);
                                *(_QWORD *)(((unint64_t)&v1414[v1626] & v1692) + 0x28) = *(_QWORD *)(((unint64_t)&v1415[v1626] & v1692) + 0x28);
                                *((_BYTE *)v1417 + v1660) = 0;
                                sub_21D7C4C20();
                                sub_21D7C4C20();
                                sub_21D7C4C20();
LABEL_2101:
                                v428 = v1555;
LABEL_2201:
                                v366 = v1745;
LABEL_2202:
                                v1492 = (_QWORD *)((unint64_t)&v1414[v1597] & 0xFFFFFFFFFFFFFFF8);
                                v1493 = (_QWORD *)((unint64_t)&v1415[v1597] & 0xFFFFFFFFFFFFFFF8);
                                *v1492 = *v1493;
                                v1494 = (_BYTE *)(((unint64_t)v1492 + v1598) & v1692);
                                v1495 = (unsigned __int8 *)(((unint64_t)v1493 + v1598) & v1692);
                                v1496 = *v1495;
                                sub_21D7C4C20();
                                if (v1496 > 2)
                                {
                                  v1504 = v1494;
                                  v1505 = v1495;
                                  v1506 = v1731;
                                }
                                else
                                {
                                  *v1494 = v1496;
                                  v1497 = (_QWORD *)((unint64_t)&v1494[v1626] & v1692);
                                  v1498 = (_QWORD *)((unint64_t)&v1495[v1626] & v1692);
                                  v1499 = *((unsigned __int8 *)v1498 + v1660);
                                  if (v1499 <= 2)
                                  {
                                    if (v1499 != 2)
                                    {
                                      if (v1499 == 1)
                                      {
                                        v1707 = v365;
                                        v1500 = *(_QWORD *)(((unint64_t)&v1495[v1626] & v1692) + 0x18);
                                        v1497[3] = v1500;
                                        v1497[4] = *(_QWORD *)(((unint64_t)&v1495[v1626] & v1692) + 0x20);
                                        (**(void (***)(_QWORD *, _QWORD *))(v1500 - 8))(v1497, v1498);
                                        v1501 = (void *)(((unint64_t)v1497 + v1721) & v1690);
                                        v1502 = (const void *)(((unint64_t)v1498 + v1721) & v1690);
                                        v1503 = v362;
                                        if (__swift_getEnumTagSinglePayload((uint64_t)v1502, 1, v1669))
                                        {
                                          memcpy(v1501, v1502, v1755);
                                        }
                                        else
                                        {
                                          (*(void (**)(void *, const void *, uint64_t))(v1661 + 16))(v1501, v1502, v1669);
                                          __swift_storeEnumTagSinglePayload((uint64_t)v1501, 0, 1, v1669);
                                        }
                                        v1509 = (_QWORD *)(((unint64_t)v1501 + v965) & 0xFFFFFFFFFFFFFFF8);
                                        v1510 = (_QWORD *)(((unint64_t)v1502 + v965) & 0xFFFFFFFFFFFFFFF8);
                                        *v1509 = *v1510;
                                        v1509[1] = v1510[1];
                                        v1511 = ((unint64_t)v1509 + 23) & 0xFFFFFFFFFFFFFFF8;
                                        v1512 = ((unint64_t)v1510 + 23) & 0xFFFFFFFFFFFFFFF8;
                                        *(_QWORD *)v1511 = *(_QWORD *)v1512;
                                        *(_BYTE *)(v1511 + 8) = *(_BYTE *)(v1512 + 8);
                                        v1513 = ((unint64_t)v1509 + 39) & 0xFFFFFFFFFFFFFFF8;
                                        v1514 = ((unint64_t)v1510 + 39) & 0xFFFFFFFFFFFFFFF8;
                                        *(_QWORD *)v1513 = *(_QWORD *)v1514;
                                        *(_BYTE *)(v1513 + 8) = *(_BYTE *)(v1514 + 8);
                                        v1515 = ((unint64_t)v1509 + 55) & 0xFFFFFFFFFFFFFFF8;
                                        v1516 = ((unint64_t)v1510 + 55) & 0xFFFFFFFFFFFFFFF8;
                                        v1517 = *(_QWORD *)v1516;
                                        *(_BYTE *)(v1515 + 8) = *(_BYTE *)(v1516 + 8);
                                        *(_QWORD *)v1515 = v1517;
                                        v1518 = (_QWORD *)(((unint64_t)v1509 + 71) & 0xFFFFFFFFFFFFFFF8);
                                        v1519 = (_QWORD *)(((unint64_t)v1510 + 71) & 0xFFFFFFFFFFFFFFF8);
                                        *v1518 = *v1519;
                                        v1518[1] = v1519[1];
                                        v1520 = ((unint64_t)v1518 + 23) & 0xFFFFFFFFFFFFFFF8;
                                        v1521 = ((unint64_t)v1519 + 23) & 0xFFFFFFFFFFFFFFF8;
                                        v1522 = *(_QWORD *)(v1521 + 24);
                                        sub_21D7C4C20();
                                        sub_21D7C4C20();
                                        sub_21D7C4C20();
                                        sub_21D7C4C20();
                                        if (v1522 < 0xFFFFFFFF)
                                        {
                                          v1523 = *(_OWORD *)v1521;
                                          v1524 = *(_OWORD *)(v1521 + 16);
                                          *(_QWORD *)(v1520 + 32) = *(_QWORD *)(v1521 + 32);
                                          *(_OWORD *)v1520 = v1523;
                                          *(_OWORD *)(v1520 + 16) = v1524;
                                        }
                                        else
                                        {
                                          *(_QWORD *)(v1520 + 24) = v1522;
                                          *(_QWORD *)(v1520 + 32) = *(_QWORD *)(v1521 + 32);
                                          (**(void (***)(unint64_t, unint64_t, unint64_t))(v1522 - 8))(v1520, v1521, v1522);
                                        }
                                        v1525 = (_QWORD *)((v1737 + v1520) & v1572);
                                        v1526 = (_QWORD *)((v1737 + v1521) & v1572);
                                        if (v1618 >= 0x7FFFFFFF)
                                        {
                                          v1529 = ((unint64_t)v1526 + v1621) & v1570;
                                          if (__swift_getEnumTagSinglePayload(v1529, v1613, v1625) <= 1)
                                          {
                                            v1528 = (char *)(v1526 + 1);
                                            goto LABEL_2229;
                                          }
                                        }
                                        else
                                        {
                                          v1527 = v1526[2];
                                          if (v1527 >= 0xFFFFFFFF)
                                            LODWORD(v1527) = -1;
                                          if ((int)v1527 - 1 < 0)
                                          {
                                            v1528 = (char *)(v1526 + 1);
                                            v1529 = ((unint64_t)v1526 + v1621) & v1570;
LABEL_2229:
                                            *(_BYTE *)v1525 = *(_BYTE *)v1526;
                                            v1525[1] = v1526[1];
                                            v1525[2] = *((_QWORD *)v1528 + 1);
                                            v1525[3] = *((_QWORD *)v1528 + 2);
                                            v1525[4] = *((_QWORD *)v1528 + 3);
                                            v1525[5] = *((_QWORD *)v1528 + 4);
                                            v1525[6] = *((_QWORD *)v1528 + 5);
                                            v1525[7] = *((_QWORD *)v1528 + 6);
                                            v1525[8] = *((_QWORD *)v1528 + 7);
                                            v1525[9] = *((_QWORD *)v1528 + 8);
                                            v1525[10] = *((_QWORD *)v1528 + 9);
                                            v1525[11] = *((_QWORD *)v1528 + 10);
                                            v1525[12] = *((_QWORD *)v1528 + 11);
                                            v1530 = *((_QWORD *)v1528 + 12);
                                            *((_BYTE *)v1525 + 112) = v1528[104];
                                            v1525[13] = v1530;
                                            v1531 = ((unint64_t)v1525 + v1621) & v1570;
                                            sub_21D7C4C20();
                                            sub_21D7C4C20();
                                            sub_21D7C4C20();
                                            sub_21D7C4C20();
                                            sub_21D7C4C20();
                                            sub_21D7C4C20();
                                            if (!__swift_getEnumTagSinglePayload(v1529, 1, v1625))
                                            {
                                              (*(void (**)(uint64_t, uint64_t, uint64_t))(v1607 + 16))(v1531, v1529, v1625);
                                              __swift_storeEnumTagSinglePayload(v1531, 0, 1, v1625);
                                              goto LABEL_2233;
                                            }
                                            v1532 = (void *)v1531;
                                            v1533 = (const void *)v1529;
                                            v1534 = v1716;
LABEL_2232:
                                            memcpy(v1532, v1533, v1534);
LABEL_2233:
                                            *((_BYTE *)v1497 + v1660) = 1;
                                            v362 = v1503;
                                            v672 = v1688;
                                            v365 = v1707;
                                            v366 = v1745;
                                            goto LABEL_2212;
                                          }
                                        }
                                        v1532 = v1525;
                                        v1533 = v1526;
                                        v1534 = v1718;
                                        goto LABEL_2232;
                                      }
                                      *v1497 = *v1498;
                                      v1497[1] = *(_QWORD *)(((unint64_t)&v1495[v1626] & v1692) + 8);
                                      v1497[2] = *(_QWORD *)(((unint64_t)&v1495[v1626] & v1692) + 0x10);
                                      v1497[3] = *(_QWORD *)(((unint64_t)&v1495[v1626] & v1692) + 0x18);
                                      v1497[4] = *(_QWORD *)(((unint64_t)&v1495[v1626] & v1692) + 0x20);
                                      v1497[5] = *(_QWORD *)(((unint64_t)&v1495[v1626] & v1692) + 0x28);
                                      *((_BYTE *)v1497 + v1660) = 0;
                                      sub_21D7C4C20();
                                      sub_21D7C4C20();
                                      sub_21D7C4C20();
LABEL_2211:
                                      v672 = v1688;
LABEL_2212:
                                      v576 = 5;
                                      goto LABEL_2138;
                                    }
                                    v1507 = v366;
                                    v1566 = v362;
                                    if (*(_QWORD *)(((unint64_t)&v1495[v1626] & v1692) + 8) < 0xFFFFFFFFuLL)
                                    {
                                      memcpy(v1497, (const void *)((unint64_t)&v1495[v1626] & v1692), 0x48uLL);
                                    }
                                    else
                                    {
                                      *v1497 = *v1498;
                                      v1497[1] = *(_QWORD *)(((unint64_t)&v1495[v1626] & v1692) + 8);
                                      v1497[2] = *(_QWORD *)(((unint64_t)&v1495[v1626] & v1692) + 0x10);
                                      v1497[3] = *(_QWORD *)(((unint64_t)&v1495[v1626] & v1692) + 0x18);
                                      v1508 = *(_QWORD *)(((unint64_t)&v1495[v1626] & v1692) + 0x38);
                                      sub_21D7C4C20();
                                      sub_21D7C4C20();
                                      if (v1508)
                                      {
                                        v1497[7] = v1508;
                                        v1497[8] = *(_QWORD *)(((unint64_t)&v1495[v1626] & v1692) + 0x40);
                                        (**(void (***)(uint64_t, uint64_t, uint64_t))(v1508 - 8))((uint64_t)(v1497 + 4), (uint64_t)(v1498 + 4), v1508);
                                      }
                                      else
                                      {
                                        v1535 = *(_OWORD *)(((unint64_t)&v1495[v1626] & v1692) + 0x20);
                                        v1536 = *(_OWORD *)(((unint64_t)&v1495[v1626] & v1692) + 0x30);
                                        v1497[8] = *(_QWORD *)(((unint64_t)&v1495[v1626] & v1692) + 0x40);
                                        *((_OWORD *)v1497 + 2) = v1535;
                                        *((_OWORD *)v1497 + 3) = v1536;
                                      }
                                    }
                                    v1537 = ((unint64_t)v1497 + 79) & 0xFFFFFFFFFFFFFFF8;
                                    v1538 = (_QWORD *)(((unint64_t)v1498 + 79) & 0xFFFFFFFFFFFFFFF8);
                                    if (v1538[1] < 0xFFFFFFFFuLL)
                                    {
                                      memcpy((void *)(((unint64_t)v1497 + 79) & 0xFFFFFFFFFFFFFFF8), v1538, 0x48uLL);
                                    }
                                    else
                                    {
                                      *(_QWORD *)v1537 = *v1538;
                                      *(_QWORD *)(v1537 + 8) = v1538[1];
                                      *(_QWORD *)(v1537 + 16) = v1538[2];
                                      *(_QWORD *)(v1537 + 24) = v1538[3];
                                      v1539 = v1538[7];
                                      sub_21D7C4C20();
                                      sub_21D7C4C20();
                                      if (v1539)
                                      {
                                        *(_QWORD *)(v1537 + 56) = v1539;
                                        *(_QWORD *)(v1537 + 64) = v1538[8];
                                        (**(void (***)(uint64_t, uint64_t, uint64_t))(v1539 - 8))(v1537 + 32, (uint64_t)(v1538 + 4), v1539);
                                      }
                                      else
                                      {
                                        v1540 = *((_OWORD *)v1538 + 2);
                                        v1541 = *((_OWORD *)v1538 + 3);
                                        *(_QWORD *)(v1537 + 64) = v1538[8];
                                        *(_OWORD *)(v1537 + 32) = v1540;
                                        *(_OWORD *)(v1537 + 48) = v1541;
                                      }
                                    }
                                    v1542 = (_QWORD *)((v1537 + 79) & 0xFFFFFFFFFFFFF8);
                                    v1543 = (_QWORD *)(((unint64_t)v1538 + 79) & 0xFFFFFFFFFFFFFFF8);
                                    *v1542 = *v1543;
                                    v1544 = (_QWORD *)(((unint64_t)v1542 + 15) & 0xFFFFFFFFFFFFFFF8);
                                    v1545 = (_QWORD *)(((unint64_t)v1543 + 15) & 0xFFFFFFFFFFFFFFF8);
                                    *v1544 = *v1545;
                                    v1546 = (void *)(((unint64_t)v1544 + v1609) & v1574);
                                    v1547 = (_BYTE *)(((unint64_t)v1545 + v1609) & v1574);
                                    sub_21D7C4C20();
                                    sub_21D7C4C20();
                                    v366 = v1507;
                                    if (v1724)
                                    {
                                      v1548 = v1624;
                                      if (v1617 >= v1624)
                                      {
                                        v1549 = (uint64_t)v1547;
                                        v1548 = v1617;
                                        v1550 = v1619;
                                      }
                                      else
                                      {
                                        v1549 = (unint64_t)&v1547[v1620] & v1576;
                                        v1550 = v1623;
                                      }
                                      v1553 = __swift_getEnumTagSinglePayload(v1549, v1548, v1550);
                                    }
                                    else
                                    {
                                      if (!v1547[v1720])
                                        goto LABEL_2259;
                                      v1551 = (v1547[v1720] - 1) << v1675;
                                      if (v1720 > 3)
                                        v1551 = 0;
                                      if ((_DWORD)v1720)
                                      {
                                        if (v1720 <= 3)
                                          v1552 = v1720;
                                        else
                                          v1552 = 4;
                                        __asm { BR              X11 }
                                      }
                                      v1553 = v1551 + 1;
                                      v366 = v1507;
                                    }
                                    if (v1553)
                                    {
                                      memcpy(v1546, v1547, v1736);
LABEL_2261:
                                      *((_BYTE *)v1546 + v1736) = v1547[v1736];
                                      *((_BYTE *)v1497 + v1660) = 2;
                                      v362 = v1566;
                                      goto LABEL_2211;
                                    }
LABEL_2259:
                                    (*(void (**)(void *, _BYTE *, uint64_t))(v1615 + 16))(v1546, v1547, v1619);
                                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v1616 + 16))(((unint64_t)v1546 + v1620) & v1576, (unint64_t)&v1547[v1620] & v1576, v1623);
                                    if (!v1724)
                                      *((_BYTE *)v1546 + v1720) = 0;
                                    goto LABEL_2261;
                                  }
                                  v1504 = v1497;
                                  v1505 = (const void *)((unint64_t)&v1495[v1626] & v1692);
                                  v1506 = __n;
                                }
                                memcpy(v1504, v1505, v1506);
                                goto LABEL_2211;
                              }
                              v1706 = v365;
                              if (*(_QWORD *)(((unint64_t)&v1415[v1626] & v1692) + 8) < 0xFFFFFFFFuLL)
                              {
                                memcpy((void *)((unint64_t)&v1414[v1626] & v1692), (const void *)((unint64_t)&v1415[v1626] & v1692), 0x48uLL);
                              }
                              else
                              {
                                *v1417 = *v1418;
                                *(_QWORD *)(((unint64_t)&v1414[v1626] & v1692) + 8) = *(_QWORD *)(((unint64_t)&v1415[v1626] & v1692) + 8);
                                *(_QWORD *)(((unint64_t)&v1414[v1626] & v1692) + 0x10) = *(_QWORD *)(((unint64_t)&v1415[v1626] & v1692) + 0x10);
                                *(_QWORD *)(((unint64_t)&v1414[v1626] & v1692) + 0x18) = *(_QWORD *)(((unint64_t)&v1415[v1626] & v1692) + 0x18);
                                v1423 = *(_QWORD *)(((unint64_t)&v1415[v1626] & v1692) + 0x38);
                                sub_21D7C4C20();
                                sub_21D7C4C20();
                                if (v1423)
                                {
                                  *(_QWORD *)(((unint64_t)&v1414[v1626] & v1692) + 0x38) = v1423;
                                  *(_QWORD *)(((unint64_t)&v1414[v1626] & v1692) + 0x40) = *(_QWORD *)(((unint64_t)&v1415[v1626] & v1692) + 0x40);
                                  (**(void (***)(uint64_t, uint64_t, uint64_t))(v1423 - 8))((uint64_t)(v1417 + 4), (uint64_t)(v1418 + 4), v1423);
                                }
                                else
                                {
                                  v1465 = *(_OWORD *)(((unint64_t)&v1415[v1626] & v1692) + 0x20);
                                  v1466 = *(_OWORD *)(((unint64_t)&v1415[v1626] & v1692) + 0x30);
                                  *(_QWORD *)(((unint64_t)&v1414[v1626] & v1692) + 0x40) = *(_QWORD *)(((unint64_t)&v1415[v1626] & v1692) + 0x40);
                                  *(_OWORD *)(((unint64_t)&v1414[v1626] & v1692) + 0x20) = v1465;
                                  *(_OWORD *)(((unint64_t)&v1414[v1626] & v1692) + 0x30) = v1466;
                                }
                              }
                              v1467 = ((unint64_t)v1417 + 79) & 0xFFFFFFFFFFFFFFF8;
                              v1468 = (_QWORD *)(((unint64_t)v1418 + 79) & 0xFFFFFFFFFFFFFFF8);
                              if (v1468[1] < 0xFFFFFFFFuLL)
                              {
                                memcpy((void *)(((unint64_t)v1417 + 79) & 0xFFFFFFFFFFFFFFF8), v1468, 0x48uLL);
                              }
                              else
                              {
                                *(_QWORD *)v1467 = *v1468;
                                *(_QWORD *)(v1467 + 8) = v1468[1];
                                *(_QWORD *)(v1467 + 16) = v1468[2];
                                *(_QWORD *)(v1467 + 24) = v1468[3];
                                v1469 = v1468[7];
                                sub_21D7C4C20();
                                sub_21D7C4C20();
                                if (v1469)
                                {
                                  *(_QWORD *)(v1467 + 56) = v1469;
                                  *(_QWORD *)(v1467 + 64) = v1468[8];
                                  (**(void (***)(uint64_t, uint64_t, uint64_t))(v1469 - 8))(v1467 + 32, (uint64_t)(v1468 + 4), v1469);
                                }
                                else
                                {
                                  v1470 = *((_OWORD *)v1468 + 2);
                                  v1471 = *((_OWORD *)v1468 + 3);
                                  *(_QWORD *)(v1467 + 64) = v1468[8];
                                  *(_OWORD *)(v1467 + 32) = v1470;
                                  *(_OWORD *)(v1467 + 48) = v1471;
                                }
                              }
                              v1472 = (_QWORD *)((v1467 + 79) & 0xFFFFFFFFFFFFF8);
                              v1473 = (_QWORD *)(((unint64_t)v1468 + 79) & 0xFFFFFFFFFFFFFFF8);
                              *v1472 = *v1473;
                              v1474 = (_QWORD *)(((unint64_t)v1472 + 15) & 0xFFFFFFFFFFFFFFF8);
                              v1475 = (_QWORD *)(((unint64_t)v1473 + 15) & 0xFFFFFFFFFFFFFFF8);
                              *v1474 = *v1475;
                              v1476 = (void *)(((unint64_t)v1474 + v1609) & v1574);
                              v1477 = (_BYTE *)(((unint64_t)v1475 + v1609) & v1574);
                              sub_21D7C4C20();
                              sub_21D7C4C20();
                              if (v1724)
                              {
                                v1478 = v1624;
                                if (v1617 >= v1624)
                                {
                                  v1479 = (uint64_t)v1477;
                                  v1478 = v1617;
                                  v1480 = v1619;
                                }
                                else
                                {
                                  v1479 = (unint64_t)&v1477[v1620] & v1576;
                                  v1480 = v1623;
                                }
                                v1483 = __swift_getEnumTagSinglePayload(v1479, v1478, v1480);
                              }
                              else
                              {
                                if (!v1477[v1720])
                                  goto LABEL_2197;
                                v1481 = (v1477[v1720] - 1) << v1675;
                                if (v1720 > 3)
                                  v1481 = 0;
                                if ((_DWORD)v1720)
                                {
                                  if (v1720 <= 3)
                                    v1482 = v1720;
                                  else
                                    v1482 = 4;
                                  __asm { BR              X11 }
                                }
                                v1483 = v1481 + 1;
                              }
                              if (v1483)
                              {
                                memcpy(v1476, v1477, v1736);
LABEL_2199:
                                *((_BYTE *)v1476 + v1736) = v1477[v1736];
                                *((_BYTE *)v1417 + v1660) = 2;
                                v428 = v1555;
                                v965 = v1755 + 7;
                                goto LABEL_2200;
                              }
LABEL_2197:
                              (*(void (**)(void *, _BYTE *, uint64_t))(v1615 + 16))(v1476, v1477, v1619);
                              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1616 + 16))(((unint64_t)v1476 + v1620) & v1576, (unint64_t)&v1477[v1620] & v1576, v1623);
                              if (!v1724)
                                *((_BYTE *)v1476 + v1720) = 0;
                              goto LABEL_2199;
                            }
LABEL_2083:
                            (*(void (**)(void *, _BYTE *, uint64_t))(v1615 + 16))(v993, v994, v1619);
                            (*(void (**)(unint64_t, unint64_t, uint64_t))(v1616 + 16))(((unint64_t)v993 + v1620) & v985, (unint64_t)&v994[v1620] & v985, v1623);
                            if (!v1724)
                              *((_BYTE *)v993 + v1720) = 0;
                            goto LABEL_2085;
                          }
                        }
                        v992 = v1718;
                        memcpy(v981, v982, v1718);
                        goto LABEL_1280;
                      }
LABEL_1263:
                      v964 = v501;
                      memcpy(v500, v501, v1654);
                      v965 = v1755 + 7;
                      goto LABEL_2089;
                    }
                    if (v1724 < 2)
                      goto LABEL_1261;
                    v505 = (v1600 + v853) & v1574;
                    v502 = v1624;
                    if (v1617 >= v1624)
                    {
                      v502 = v1617;
                      v506 = v1619;
                    }
                    else
                    {
                      v505 = (v1620 + v505) & v1576;
                      v506 = v1623;
                    }
                  }
                  if (__swift_getEnumTagSinglePayload(v505, v502, v506) < 2)
                    goto LABEL_1261;
                  goto LABEL_1263;
                case 6:
                  *v365 = *v366;
                  v373 = 6;
                  goto LABEL_753;
                case 7:
                  *v365 = *v366;
                  v373 = 7;
                  goto LABEL_753;
                case 8:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v366, 1, v208))
                  {
                    memcpy(v365, v366, v1755);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1661 + 16))(v365, v366, v208);
                    __swift_storeEnumTagSinglePayload((uint64_t)v365, 0, 1, v208);
                  }
                  v1561 = v362;
                  v508 = ((unint64_t)v365 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v509 = ((unint64_t)v366 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v510 = *(_QWORD *)(v509 + 24);
                  *(_QWORD *)(v508 + 24) = v510;
                  *(_QWORD *)(v508 + 32) = *(_QWORD *)(v509 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v510 - 8))(v508, v509);
                  v511 = (v1737 + v508) & v1572;
                  v512 = (v1737 + v509) & v1572;
                  if (v1618 >= 0x7FFFFFFF)
                  {
                    v514 = v1570;
                    v517 = (const void *)((v1621 + v512) & v1570);
                    v428 = v1555;
                    if (__swift_getEnumTagSinglePayload((uint64_t)v517, v1613, v1625) <= 1)
                    {
                      v1746 = v366;
                      v1697 = v365;
                      v515 = (char *)(v512 + 8);
                      v516 = v1621;
LABEL_804:
                      *(_BYTE *)v511 = *(_BYTE *)v512;
                      *(_QWORD *)(((v1737 + v508) & v1572) + 8) = *(_QWORD *)(v512 + 8);
                      *(_QWORD *)(((v1737 + v508) & v1572) + 0x10) = *((_QWORD *)v515 + 1);
                      *(_QWORD *)(((v1737 + v508) & v1572) + 0x18) = *((_QWORD *)v515 + 2);
                      *(_QWORD *)(((v1737 + v508) & v1572) + 0x20) = *((_QWORD *)v515 + 3);
                      *(_QWORD *)(((v1737 + v508) & v1572) + 0x28) = *((_QWORD *)v515 + 4);
                      *(_QWORD *)(((v1737 + v508) & v1572) + 0x30) = *((_QWORD *)v515 + 5);
                      *(_QWORD *)(((v1737 + v508) & v1572) + 0x38) = *((_QWORD *)v515 + 6);
                      *(_QWORD *)(((v1737 + v508) & v1572) + 0x40) = *((_QWORD *)v515 + 7);
                      *(_QWORD *)(((v1737 + v508) & v1572) + 0x48) = *((_QWORD *)v515 + 8);
                      *(_QWORD *)(((v1737 + v508) & v1572) + 0x50) = *((_QWORD *)v515 + 9);
                      *(_QWORD *)(((v1737 + v508) & v1572) + 0x58) = *((_QWORD *)v515 + 10);
                      *(_QWORD *)(((v1737 + v508) & v1572) + 0x60) = *((_QWORD *)v515 + 11);
                      v518 = *((_QWORD *)v515 + 12);
                      *(_BYTE *)(((v1737 + v508) & v1572) + 0x70) = v515[104];
                      *(_QWORD *)(((v1737 + v508) & v1572) + 0x68) = v518;
                      v519 = (void *)((v516 + v511) & v514);
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      if (__swift_getEnumTagSinglePayload((uint64_t)v517, 1, v1625))
                      {
                        memcpy(v519, v517, v1716);
                      }
                      else
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v1607 + 16))(v519, v517, v1625);
                        __swift_storeEnumTagSinglePayload((uint64_t)v519, 0, 1, v1625);
                      }
                      v428 = v1555;
                      v520 = v1718;
                      v365 = v1697;
                      v366 = v1746;
LABEL_1115:
                      v913 = (_QWORD *)(((v511 | 7) + v520) & 0xFFFFFFFFFFFFF8);
                      v914 = (_QWORD *)(((v512 | 7) + v520) & 0xFFFFFFFFFFFFFFF8);
                      *v913 = *v914;
                      v915 = (_QWORD *)(((unint64_t)v913 + 15) & 0xFFFFFFFFFFFFFFF8);
                      v916 = (_QWORD *)(((unint64_t)v914 + 15) & 0xFFFFFFFFFFFFFFF8);
                      *v915 = *v916;
                      v915[1] = v916[1];
                      v917 = ((unint64_t)v915 + 23) & 0xFFFFFFFFFFFFFFF8;
                      v918 = ((unint64_t)v916 + 23) & 0xFFFFFFFFFFFFFFF8;
                      v919 = *(_QWORD *)(v918 + 8);
                      sub_21D7C4C20();
                      v362 = v1561;
                      if (v919 < 0xFFFFFFFF)
                      {
                        v920 = *(_OWORD *)v918;
                        *(_QWORD *)(v917 + 16) = *(_QWORD *)(v918 + 16);
                        *(_OWORD *)v917 = v920;
                      }
                      else
                      {
                        *(_QWORD *)v917 = *(_QWORD *)v918;
                        *(_QWORD *)(v917 + 8) = *(_QWORD *)(v918 + 8);
                        *(_QWORD *)(v917 + 16) = *(_QWORD *)(v918 + 16);
                        sub_21D7C4C20();
                        sub_21D7C4C20();
                      }
                      *(_QWORD *)((v917 + 31) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v918 + 31) & 0xFFFFFFFFFFFFF8);
                      v671 = 8;
LABEL_1642:
                      *((_BYTE *)v365 + v1688) = v671;
LABEL_1643:
                      sub_21D7C4C20();
                      goto LABEL_2139;
                    }
                  }
                  else
                  {
                    v513 = *(_QWORD *)(v512 + 16);
                    if (v513 >= 0xFFFFFFFF)
                      LODWORD(v513) = -1;
                    v428 = v1555;
                    v514 = v1570;
                    if ((int)v513 - 1 < 0)
                    {
                      v1746 = v366;
                      v1697 = v365;
                      v515 = (char *)(v512 + 8);
                      v516 = v1621;
                      v517 = (const void *)((v1621 + v512) & v1570);
                      goto LABEL_804;
                    }
                  }
                  v520 = v1718;
                  memcpy((void *)v511, (const void *)v512, v1718);
                  goto LABEL_1115;
                case 9:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v366, 1, v208))
                  {
                    memcpy(v365, v366, v1755);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1661 + 16))(v365, v366, v208);
                    __swift_storeEnumTagSinglePayload((uint64_t)v365, 0, 1, v208);
                  }
                  v521 = ((unint64_t)v365 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v522 = ((unint64_t)v366 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v523 = *(_QWORD *)(v522 + 24);
                  *(_QWORD *)(v521 + 24) = v523;
                  *(_QWORD *)(v521 + 32) = *(_QWORD *)(v522 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v523 - 8))(v521, v522);
                  v524 = (_QWORD *)((v521 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v525 = (_QWORD *)((v522 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v524 = *v525;
                  v524[1] = v525[1];
                  v526 = (void *)(((unint64_t)v524 + v1734 + 16) & v1570);
                  v527 = (const void *)(((unint64_t)v525 + v1734 + 16) & v1570);
                  sub_21D7C4C20();
                  if (__swift_getEnumTagSinglePayload((uint64_t)v527, 1, v1625))
                  {
                    memcpy(v526, v527, v1716);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1607 + 16))(v526, v527, v1625);
                    __swift_storeEnumTagSinglePayload((uint64_t)v526, 0, 1, v1625);
                  }
                  v428 = v1555;
                  v798 = (void *)(((unint64_t)v526 + v1583) & v1574);
                  v799 = (_BYTE *)(((unint64_t)v527 + v1583) & v1574);
                  v800 = v1624;
                  if (v1724)
                  {
                    if (v1617 >= v1624)
                    {
                      v801 = (uint64_t)v799;
                      v800 = v1617;
                      v802 = v1619;
                    }
                    else
                    {
                      v801 = (unint64_t)&v799[v1620] & v1576;
                      v802 = v1623;
                    }
                    v850 = __swift_getEnumTagSinglePayload(v801, v800, v802);
                  }
                  else
                  {
                    if (!v799[v1720])
                      goto LABEL_1608;
                    v838 = (v799[v1720] - 1) << v1675;
                    if (v1720 > 3)
                      v838 = 0;
                    if ((_DWORD)v1720)
                    {
                      if (v1720 <= 3)
                        v839 = v1720;
                      else
                        v839 = 4;
                      __asm { BR              X11 }
                    }
                    v850 = v838 + 1;
                  }
                  if (v850)
                  {
                    memcpy(v798, v799, v1736);
                    goto LABEL_1610;
                  }
LABEL_1608:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1615 + 16))(v798, v799, v1619);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1616 + 16))(((unint64_t)v798 + v1620) & v1576, (unint64_t)&v799[v1620] & v1576, v1623);
                  if (!v1724)
                    *((_BYTE *)v798 + v1720) = 0;
LABEL_1610:
                  v1742 = v366;
                  v1171 = &v799[v1736];
                  *((_BYTE *)v798 + v1736) = v799[v1736];
                  v1172 = (void *)(((unint64_t)v798 + v1736 + v1712 + 1) & v1574);
                  v1173 = (_BYTE *)((unint64_t)&v799[v1736 + 1 + v1712] & v1574);
                  if (v1724)
                  {
                    v1174 = v1624;
                    if (v1617 >= v1624)
                    {
                      v1175 = (unint64_t)&v1171[v1712 + 1] & v1574;
                      v1174 = v1617;
                      v1176 = v1619;
                    }
                    else
                    {
                      v1175 = (unint64_t)&v1173[v1620] & v1576;
                      v1176 = v1623;
                    }
                    v1179 = __swift_getEnumTagSinglePayload(v1175, v1174, v1176);
                  }
                  else
                  {
                    if (!v1173[v1720])
                      goto LABEL_1722;
                    v1177 = (v1173[v1720] - 1) << v1675;
                    if (v1720 > 3)
                      v1177 = 0;
                    if ((_DWORD)v1720)
                    {
                      if (v1720 <= 3)
                        v1178 = v1720;
                      else
                        v1178 = 4;
                      __asm { BR              X11 }
                    }
                    v1179 = v1177 + 1;
                  }
                  if (v1179)
                  {
                    v1223 = v362;
                    memcpy(v1172, v1173, v1736);
                    goto LABEL_1724;
                  }
LABEL_1722:
                  v1223 = v362;
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1615 + 16))(v1172, v1173, v1619);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1616 + 16))(((unint64_t)v1172 + v1620) & v1576, (unint64_t)&v1173[v1620] & v1576, v1623);
                  if (!v1724)
                    *((_BYTE *)v1172 + v1720) = 0;
LABEL_1724:
                  v1224 = (_QWORD *)(((unint64_t)v1172 + v1727) & v1758);
                  v1225 = (uint64_t *)((unint64_t)&v1173[v1727] & v1758);
                  if ((v1624 & 0x80000000) != 0)
                  {
                    v1229 = v1576;
                    v1227 = __swift_getEnumTagSinglePayload(((unint64_t)v1225 + v1606) & v1576, v1624, v1623);
                    v1228 = v1572;
                  }
                  else
                  {
                    v1226 = *v1225;
                    if ((unint64_t)*v1225 >= 0xFFFFFFFF)
                      LODWORD(v1226) = -1;
                    v1227 = v1226 + 1;
                    v1228 = v1572;
                    v1229 = v1576;
                  }
                  if (v1227)
                  {
                    memcpy(v1224, v1225, v1713);
                  }
                  else
                  {
                    *v1224 = *v1225;
                    v1230 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1616 + 16);
                    sub_21D7C4C20();
                    v1228 = v1572;
                    v1230(((unint64_t)v1224 + v1606) & v1229, ((unint64_t)v1225 + v1606) & v1229, v1623);
                  }
                  v1231 = (_QWORD *)(((unint64_t)v1224 + v1659) & v1228);
                  v1232 = (_QWORD *)(((unint64_t)v1225 + v1659) & v1228);
                  if (v1618 >= 0x7FFFFFFF)
                  {
                    v1236 = ((unint64_t)v1232 + v1621) & v1570;
                    if (__swift_getEnumTagSinglePayload(v1236, v1613, v1625) <= 1)
                    {
                      v1234 = (char *)(v1232 + 1);
                      v1235 = v1621;
                      goto LABEL_1739;
                    }
                  }
                  else
                  {
                    v1233 = *(_QWORD *)((((unint64_t)v1225 + v1659) & v1228) + 0x10);
                    if (v1233 >= 0xFFFFFFFF)
                      LODWORD(v1233) = -1;
                    if ((int)v1233 - 1 < 0)
                    {
                      v1234 = (char *)(v1232 + 1);
                      v1235 = v1621;
                      v1236 = ((unint64_t)v1232 + v1621) & v1570;
LABEL_1739:
                      *(_BYTE *)v1231 = *(_BYTE *)v1232;
                      v1231[1] = v1232[1];
                      v1231[2] = *((_QWORD *)v1234 + 1);
                      v1231[3] = *((_QWORD *)v1234 + 2);
                      v1231[4] = *((_QWORD *)v1234 + 3);
                      v1231[5] = *((_QWORD *)v1234 + 4);
                      v1231[6] = *((_QWORD *)v1234 + 5);
                      v1231[7] = *((_QWORD *)v1234 + 6);
                      v1231[8] = *((_QWORD *)v1234 + 7);
                      v1231[9] = *((_QWORD *)v1234 + 8);
                      v1231[10] = *((_QWORD *)v1234 + 9);
                      v1231[11] = *((_QWORD *)v1234 + 10);
                      v1231[12] = *((_QWORD *)v1234 + 11);
                      v1237 = *((_QWORD *)v1234 + 12);
                      *((_BYTE *)v1231 + 112) = v1234[104];
                      v1231[13] = v1237;
                      v1238 = ((unint64_t)v1231 + v1235) & v1570;
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      if (__swift_getEnumTagSinglePayload(v1236, 1, v1625))
                      {
                        v1239 = (void *)v1238;
                        v1240 = (const void *)v1236;
                        v1241 = v1716;
LABEL_1742:
                        memcpy(v1239, v1240, v1241);
                        goto LABEL_1743;
                      }
                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v1607 + 16))(v1238, v1236, v1625);
                      __swift_storeEnumTagSinglePayload(v1238, 0, 1, v1625);
LABEL_1743:
                      v362 = v1223;
                      v463 = 9;
                      goto LABEL_1744;
                    }
                  }
                  v1239 = v1231;
                  v1240 = v1232;
                  v1241 = v1718;
                  goto LABEL_1742;
                case 0xA:
                  v374 = *(_QWORD *)((((unint64_t)v357 + v1741 + v363) & v1686) + 0x18);
                  *(_QWORD *)((((unint64_t)v356 + v1741 + v363) & v1686) + 0x18) = v374;
                  *(_QWORD *)((((unint64_t)v356 + v1741 + v363) & v1686) + 0x20) = *(_QWORD *)((((unint64_t)v357 + v1741 + v363) & v1686) + 0x20);
                  (**(void (***)(_QWORD *, _QWORD *))(v374 - 8))(v365, v366);
                  v375 = (void *)(((unint64_t)v365 + v1721) & v1690);
                  v376 = (const void *)(((unint64_t)v366 + v1721) & v1690);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v376, 1, v208))
                  {
                    memcpy(v375, v376, v1755);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1661 + 16))(v375, v376, v208);
                    __swift_storeEnumTagSinglePayload((uint64_t)v375, 0, 1, v208);
                  }
                  v428 = v1555;
                  *((_BYTE *)v375 + v1755) = *((_BYTE *)v376 + v1755);
                  v528 = ((unint64_t)v375 + v1755) & 0xFFFFFFFFFFFFFFF8;
                  v529 = ((unint64_t)v376 + v1755) & 0xFFFFFFFFFFFFFFF8;
                  *(_QWORD *)(v528 + 8) = *(_QWORD *)(v529 + 8);
                  *(_QWORD *)(v528 + 16) = *(_QWORD *)(v529 + 16);
                  v530 = (_QWORD *)((v528 + 31) & 0xFFFFFFFFFFFFFFF8);
                  v531 = (_QWORD *)((v529 + 31) & 0xFFFFFFFFFFFFFFF8);
                  *v530 = *v531;
                  v530[1] = v531[1];
                  v532 = (_QWORD *)(((unint64_t)v530 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v533 = (_QWORD *)(((unint64_t)v531 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v532 = *v533;
                  v532[1] = v533[1];
                  *((_BYTE *)v365 + v1688) = 10;
                  goto LABEL_857;
                case 0xB:
                  *v365 = *v366;
                  v373 = 11;
                  goto LABEL_753;
                case 0xC:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v366, 1, v208))
                  {
                    memcpy(v365, v366, v1755);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1661 + 16))(v365, v366, v208);
                    __swift_storeEnumTagSinglePayload((uint64_t)v365, 0, 1, v208);
                  }
                  v534 = ((unint64_t)v365 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v1742 = (_QWORD *)(((unint64_t)v357 + v1741 + v363) & v1686);
                  v535 = ((unint64_t)v366 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v536 = *(_QWORD *)(v535 + 24);
                  *(_QWORD *)(v534 + 24) = v536;
                  *(_QWORD *)(v534 + 32) = *(_QWORD *)(v535 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v536 - 8))(v534, v535);
                  v537 = (_QWORD *)((v1717 + 40 + v534) & v1740);
                  v538 = (_QWORD *)((v1717 + 40 + v535) & v1740);
                  if (v1605 > 0x7FFFFFFE)
                  {
                    v542 = (_QWORD *)(((unint64_t)v538 + 23) & 0xFFFFFFFFFFFFFFF8);
                    v543 = ((unint64_t)v542 + 23) & 0xFFFFFFFFFFFFFFF8;
                    v428 = v1555;
                    if (!__swift_getEnumTagSinglePayload((v1717 + v543 + 33) & v1673, v1605, v1603))
                    {
                      v1698 = v365;
                      v540 = v362;
                      v541 = v1555;
LABEL_1066:
                      *v537 = *v538;
                      *(_QWORD *)(((v1717 + 40 + v534) & v1740) + 8) = v538[1];
                      v861 = (_QWORD *)(((unint64_t)v537 + 23) & 0xFFFFFFFFFFFFFFF8);
                      *v861 = *v542;
                      v861[1] = v542[1];
                      v862 = ((unint64_t)v861 + 23) & 0xFFFFFFFFFFFFFFF8;
                      *(_QWORD *)v862 = *(_QWORD *)v543;
                      *(_QWORD *)(v862 + 8) = *(_QWORD *)(v543 + 8);
                      *(_BYTE *)(v862 + 16) = *(_BYTE *)(v543 + 16);
                      v863 = ((unint64_t)v861 + 47) & 0xFFFFFFFFFFFFFFF8;
                      v864 = ((unint64_t)v542 + 47) & 0xFFFFFFFFFFFFFFF8;
                      v865 = *(void **)v864;
                      *(_QWORD *)v863 = *(_QWORD *)v864;
                      *(_BYTE *)(v863 + 8) = *(_BYTE *)(v864 + 8);
                      v866 = (v1717 + 9 + v863) & v1673;
                      v867 = (v1717 + 9 + v864) & v1673;
                      v868 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1709 + 16);
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      v869 = v865;
                      v868(v866, v867, v1603);
                      v428 = v541;
                      v362 = v540;
                      v365 = v1698;
LABEL_1067:
                      *(_QWORD *)(((unint64_t)v537 + v1739 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v538 + v1739 + 7) & 0xFFFFFFFFFFFFF8);
                      *((_BYTE *)v365 + v1688) = 12;
                      sub_21D7C4C20();
                      goto LABEL_1745;
                    }
                  }
                  else
                  {
                    v539 = v538[1];
                    if (v539 >= 0xFFFFFFFF)
                      LODWORD(v539) = -1;
                    v428 = v1555;
                    if ((v539 + 1) <= 1)
                    {
                      v1698 = v365;
                      v540 = v362;
                      v541 = v1555;
                      v542 = (_QWORD *)(((unint64_t)v538 + 23) & 0xFFFFFFFFFFFFFFF8);
                      v543 = ((unint64_t)v542 + 23) & 0xFFFFFFFFFFFFFFF8;
                      goto LABEL_1066;
                    }
                  }
                  memcpy(v537, v538, v1739);
                  goto LABEL_1067;
                case 0xD:
                  v377 = *(_QWORD *)((((unint64_t)v357 + v1741 + v363) & v1686) + 0x18);
                  *(_QWORD *)((((unint64_t)v356 + v1741 + v363) & v1686) + 0x18) = v377;
                  *(_QWORD *)((((unint64_t)v356 + v1741 + v363) & v1686) + 0x20) = *(_QWORD *)((((unint64_t)v357 + v1741 + v363) & v1686) + 0x20);
                  (**(void (***)(_QWORD *, _QWORD *))(v377 - 8))(v365, v366);
                  v378 = (void *)(((unint64_t)v365 + v1721) & v1690);
                  v379 = (const void *)(((unint64_t)v366 + v1721) & v1690);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v379, 1, v208))
                  {
                    memcpy(v378, v379, v1755);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1661 + 16))(v378, v379, v208);
                    __swift_storeEnumTagSinglePayload((uint64_t)v378, 0, 1, v208);
                  }
                  v1562 = v362;
                  v544 = ((unint64_t)v378 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v545 = ((unint64_t)v379 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  *(_QWORD *)v544 = *(_QWORD *)v545;
                  *(_QWORD *)(v544 + 8) = *(_QWORD *)(v545 + 8);
                  *(_BYTE *)(v544 + 16) = *(_BYTE *)(v545 + 16);
                  v546 = (_QWORD *)((v1581 + v544) & v1572);
                  v547 = (_QWORD *)((v1581 + v545) & v1572);
                  sub_21D7C4C20();
                  if (v1618 >= 0x7FFFFFFF)
                  {
                    v551 = (const void *)(((unint64_t)v547 + v1621) & v1570);
                    v428 = v1555;
                    if (__swift_getEnumTagSinglePayload((uint64_t)v551, v1613, v1625) <= 1)
                    {
                      v1747 = v366;
                      v1699 = v365;
                      v549 = (char *)(v547 + 1);
                      v550 = v1621;
LABEL_828:
                      *(_BYTE *)v546 = *(_BYTE *)v547;
                      v546[1] = v547[1];
                      v546[2] = *((_QWORD *)v549 + 1);
                      v546[3] = *((_QWORD *)v549 + 2);
                      v546[4] = *((_QWORD *)v549 + 3);
                      v546[5] = *((_QWORD *)v549 + 4);
                      v546[6] = *((_QWORD *)v549 + 5);
                      v546[7] = *((_QWORD *)v549 + 6);
                      v546[8] = *((_QWORD *)v549 + 7);
                      v546[9] = *((_QWORD *)v549 + 8);
                      v546[10] = *((_QWORD *)v549 + 9);
                      v546[11] = *((_QWORD *)v549 + 10);
                      v546[12] = *((_QWORD *)v549 + 11);
                      v552 = *((_QWORD *)v549 + 12);
                      *((_BYTE *)v546 + 112) = v549[104];
                      v546[13] = v552;
                      v553 = (void *)(((unint64_t)v546 + v550) & v1570);
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      if (__swift_getEnumTagSinglePayload((uint64_t)v551, 1, v1625))
                      {
                        memcpy(v553, v551, v1716);
                      }
                      else
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v1607 + 16))(v553, v551, v1625);
                        __swift_storeEnumTagSinglePayload((uint64_t)v553, 0, 1, v1625);
                      }
                      v428 = v1555;
                      v554 = v1718;
                      v365 = v1699;
                      v366 = v1747;
LABEL_1121:
                      *((_BYTE *)v546 + v554) = *((_BYTE *)v547 + v554);
                      *((_BYTE *)v365 + v1688) = 13;
LABEL_1987:
                      v362 = v1562;
                      goto LABEL_2139;
                    }
                  }
                  else
                  {
                    v548 = v547[2];
                    if (v548 >= 0xFFFFFFFF)
                      LODWORD(v548) = -1;
                    v428 = v1555;
                    if ((int)v548 - 1 < 0)
                    {
                      v1747 = v366;
                      v1699 = v365;
                      v549 = (char *)(v547 + 1);
                      v550 = v1621;
                      v551 = (const void *)(((unint64_t)v547 + v1621) & v1570);
                      goto LABEL_828;
                    }
                  }
                  v554 = v1718;
                  memcpy(v546, v547, v1718);
                  goto LABEL_1121;
                case 0xE:
                  *v365 = *v366;
                  v373 = 14;
                  goto LABEL_753;
                case 0xF:
                  *v365 = *v366;
                  v373 = 15;
                  goto LABEL_753;
                case 0x10:
                  v380 = *(_QWORD *)((((unint64_t)v357 + v1741 + v363) & v1686) + 0x18);
                  *(_QWORD *)((((unint64_t)v356 + v1741 + v363) & v1686) + 0x18) = v380;
                  *(_QWORD *)((((unint64_t)v356 + v1741 + v363) & v1686) + 0x20) = *(_QWORD *)((((unint64_t)v357 + v1741 + v363) & v1686) + 0x20);
                  (**(void (***)(_QWORD *, _QWORD *))(v380 - 8))(v365, v366);
                  v381 = (void *)(((unint64_t)v365 + v1721) & v1690);
                  v382 = (const void *)(((unint64_t)v366 + v1721) & v1690);
                  v383 = v362;
                  if (__swift_getEnumTagSinglePayload((uint64_t)v382, 1, v208))
                  {
                    memcpy(v381, v382, v1755);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1661 + 16))(v381, v382, v208);
                    __swift_storeEnumTagSinglePayload((uint64_t)v381, 0, 1, v208);
                  }
                  v555 = (_QWORD *)(((unint64_t)v381 + v1728) & 0xFFFFFFFFFFFFFFF8);
                  v556 = (_QWORD *)(((unint64_t)v382 + v1728) & 0xFFFFFFFFFFFFFFF8);
                  *v555 = *v556;
                  v555[1] = v556[1];
                  v557 = (_QWORD *)(((unint64_t)v555 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v558 = (_QWORD *)(((unint64_t)v556 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v557 = *v558;
                  v557[1] = v558[1];
                  v559 = (_QWORD *)(((unint64_t)v557 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v560 = (_QWORD *)(((unint64_t)v558 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v559 = *v560;
                  v559[1] = v560[1];
                  v561 = ((unint64_t)v559 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v562 = ((unint64_t)v560 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v563 = *(_QWORD *)(v562 + 24);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (v563 < 0xFFFFFFFF)
                  {
                    v564 = *(_OWORD *)v562;
                    v565 = *(_OWORD *)(v562 + 16);
                    *(_QWORD *)(v561 + 32) = *(_QWORD *)(v562 + 32);
                    *(_OWORD *)v561 = v564;
                    *(_OWORD *)(v561 + 16) = v565;
                  }
                  else
                  {
                    *(_QWORD *)(v561 + 24) = v563;
                    *(_QWORD *)(v561 + 32) = *(_QWORD *)(v562 + 32);
                    (**(void (***)(unint64_t, unint64_t, unint64_t))(v563 - 8))(v561, v562, v563);
                  }
                  v428 = v1555;
                  v566 = (v561 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v567 = (v562 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v568 = *(_QWORD *)(v567 + 24);
                  v362 = v383;
                  if (v568 < 0xFFFFFFFF)
                  {
                    v569 = *(_OWORD *)v567;
                    v570 = *(_OWORD *)(v567 + 16);
                    *(_QWORD *)(v566 + 32) = *(_QWORD *)(v567 + 32);
                    *(_OWORD *)v566 = v569;
                    *(_OWORD *)(v566 + 16) = v570;
                  }
                  else
                  {
                    *(_QWORD *)(v566 + 24) = v568;
                    *(_QWORD *)(v566 + 32) = *(_QWORD *)(v567 + 32);
                    (**(void (***)(unint64_t, unint64_t))(v568 - 8))(v566, v567);
                  }
                  v571 = (v566 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v572 = (v567 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v573 = *(_QWORD *)(v572 + 24);
                  if (v573 < 0xFFFFFFFF)
                  {
                    v574 = *(_OWORD *)v572;
                    v575 = *(_OWORD *)(v572 + 16);
                    *(_QWORD *)(v571 + 32) = *(_QWORD *)(v572 + 32);
                    *(_OWORD *)v571 = v574;
                    *(_OWORD *)(v571 + 16) = v575;
                  }
                  else
                  {
                    *(_QWORD *)(v571 + 24) = v573;
                    *(_QWORD *)(v571 + 32) = *(_QWORD *)(v572 + 32);
                    (**(void (***)(unint64_t, unint64_t))(v573 - 8))(v571, v572);
                  }
                  *(_BYTE *)(v571 + 40) = *(_BYTE *)(v572 + 40);
                  v576 = 16;
                  goto LABEL_2137;
                case 0x11:
                  v384 = *(_QWORD *)((((unint64_t)v357 + v1741 + v363) & v1686) + 0x18);
                  *(_QWORD *)((((unint64_t)v356 + v1741 + v363) & v1686) + 0x18) = v384;
                  *(_QWORD *)((((unint64_t)v356 + v1741 + v363) & v1686) + 0x20) = *(_QWORD *)((((unint64_t)v357 + v1741 + v363) & v1686) + 0x20);
                  (**(void (***)(_QWORD *, _QWORD *))(v384 - 8))(v365, v366);
                  v385 = (void *)(((unint64_t)v365 + v1721) & v1690);
                  v386 = (const void *)(((unint64_t)v366 + v1721) & v1690);
                  v387 = v362;
                  if (__swift_getEnumTagSinglePayload((uint64_t)v386, 1, v208))
                  {
                    memcpy(v385, v386, v1755);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1661 + 16))(v385, v386, v208);
                    __swift_storeEnumTagSinglePayload((uint64_t)v385, 0, 1, v208);
                  }
                  v577 = (_QWORD *)(((unint64_t)v385 + v1728) & 0xFFFFFFFFFFFFFFF8);
                  v578 = (_QWORD *)(((unint64_t)v386 + v1728) & 0xFFFFFFFFFFFFFFF8);
                  *v577 = *v578;
                  v577[1] = v578[1];
                  v579 = (_QWORD *)(((unint64_t)v577 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v580 = (_QWORD *)(((unint64_t)v578 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v579 = *v580;
                  v579[1] = v580[1];
                  v581 = (_QWORD *)(((unint64_t)v579 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v582 = (_QWORD *)(((unint64_t)v580 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v581 = *v582;
                  v581[1] = v582[1];
                  v583 = (_QWORD *)(((unint64_t)v581 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v584 = (_QWORD *)(((unint64_t)v582 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v583 = *v584;
                  v583[1] = v584[1];
                  v585 = ((unint64_t)v583 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v586 = ((unint64_t)v584 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v587 = *(_QWORD *)(v586 + 24);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (v587 < 0xFFFFFFFF)
                  {
                    v588 = *(_OWORD *)v586;
                    v589 = *(_OWORD *)(v586 + 16);
                    *(_QWORD *)(v585 + 32) = *(_QWORD *)(v586 + 32);
                    *(_OWORD *)v585 = v588;
                    *(_OWORD *)(v585 + 16) = v589;
                  }
                  else
                  {
                    *(_QWORD *)(v585 + 24) = v587;
                    *(_QWORD *)(v585 + 32) = *(_QWORD *)(v586 + 32);
                    (**(void (***)(unint64_t, unint64_t, unint64_t))(v587 - 8))(v585, v586, v587);
                  }
                  v428 = v1555;
                  v590 = (v585 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v591 = (v586 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v592 = *(_QWORD *)(v591 + 24);
                  v362 = v387;
                  if (v592 < 0xFFFFFFFF)
                  {
                    v593 = *(_OWORD *)v591;
                    v594 = *(_OWORD *)(v591 + 16);
                    *(_QWORD *)(v590 + 32) = *(_QWORD *)(v591 + 32);
                    *(_OWORD *)v590 = v593;
                    *(_OWORD *)(v590 + 16) = v594;
                  }
                  else
                  {
                    *(_QWORD *)(v590 + 24) = v592;
                    *(_QWORD *)(v590 + 32) = *(_QWORD *)(v591 + 32);
                    (**(void (***)(unint64_t, unint64_t))(v592 - 8))(v590, v591);
                  }
                  v595 = (v590 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v596 = (v591 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v597 = *(_QWORD *)(v596 + 24);
                  if (v597 < 0xFFFFFFFF)
                  {
                    v598 = *(_OWORD *)v596;
                    v599 = *(_OWORD *)(v596 + 16);
                    *(_QWORD *)(v595 + 32) = *(_QWORD *)(v596 + 32);
                    *(_OWORD *)v595 = v598;
                    *(_OWORD *)(v595 + 16) = v599;
                  }
                  else
                  {
                    *(_QWORD *)(v595 + 24) = v597;
                    *(_QWORD *)(v595 + 32) = *(_QWORD *)(v596 + 32);
                    (**(void (***)(unint64_t, unint64_t))(v597 - 8))(v595, v596);
                  }
                  v600 = v1624;
                  v601 = (void *)((v1586 + v595) & v1574);
                  v602 = (_BYTE *)((v1586 + v596) & v1574);
                  if (v1724)
                  {
                    if (v1617 >= v1624)
                    {
                      v603 = (uint64_t)v602;
                      v600 = v1617;
                      v604 = v1619;
                    }
                    else
                    {
                      v603 = (unint64_t)&v602[v1620] & v1576;
                      v604 = v1623;
                    }
                    v847 = __swift_getEnumTagSinglePayload(v603, v600, v604);
                  }
                  else
                  {
                    if (!v602[v1720])
                      goto LABEL_1763;
                    v803 = (v602[v1720] - 1) << v1675;
                    if (v1720 > 3)
                      v803 = 0;
                    if ((_DWORD)v1720)
                    {
                      if (v1720 <= 3)
                        v804 = v1720;
                      else
                        v804 = 4;
                      __asm { BR              X11 }
                    }
                    v847 = v803 + 1;
                  }
                  if (v847)
                  {
                    memcpy(v601, v602, v1736);
                    goto LABEL_1765;
                  }
LABEL_1763:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1615 + 16))(v601, v602, v1619);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1616 + 16))(((unint64_t)v601 + v1620) & v1576, (unint64_t)&v602[v1620] & v1576, v1623);
                  if (!v1724)
                    *((_BYTE *)v601 + v1720) = 0;
LABEL_1765:
                  v1244 = (void *)(((unint64_t)v601 + v1602) & v1574);
                  v1245 = (_BYTE *)((unint64_t)&v602[v1602] & v1574);
                  v1246 = v1624;
                  if (v1724)
                  {
                    if (v1617 >= v1624)
                    {
                      v1247 = (uint64_t)v1245;
                      v1246 = v1617;
                      v1248 = v1619;
                    }
                    else
                    {
                      v1247 = (unint64_t)&v1245[v1620] & v1576;
                      v1248 = v1623;
                    }
                    v1251 = __swift_getEnumTagSinglePayload(v1247, v1246, v1248);
                  }
                  else
                  {
                    if (!v1245[v1720])
                      goto LABEL_1948;
                    v1249 = (v1245[v1720] - 1) << v1675;
                    if (v1720 > 3)
                      v1249 = 0;
                    if ((_DWORD)v1720)
                    {
                      if (v1720 <= 3)
                        v1250 = v1720;
                      else
                        v1250 = 4;
                      __asm { BR              X11 }
                    }
                    v1251 = v1249 + 1;
                  }
                  if (v1251)
                  {
                    memcpy(v1244, v1245, v1736);
                    goto LABEL_1950;
                  }
LABEL_1948:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1615 + 16))(v1244, v1245, v1619);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1616 + 16))(((unint64_t)v1244 + v1620) & v1576, (unint64_t)&v1245[v1620] & v1576, v1623);
                  if (!v1724)
                    *((_BYTE *)v1244 + v1720) = 0;
LABEL_1950:
                  v576 = 17;
                  goto LABEL_2137;
                case 0x12:
                  *v365 = *v366;
                  v373 = 18;
                  goto LABEL_753;
                case 0x13:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v366, 1, v208))
                  {
                    memcpy(v365, v366, v1755);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1661 + 16))(v365, v366, v208);
                    __swift_storeEnumTagSinglePayload((uint64_t)v365, 0, 1, v208);
                  }
                  v428 = v1555;
                  v605 = ((unint64_t)v365 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v606 = ((unint64_t)v366 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v607 = *(_QWORD *)(v606 + 24);
                  *(_QWORD *)(v605 + 24) = v607;
                  *(_QWORD *)(v605 + 32) = *(_QWORD *)(v606 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v607 - 8))(v605, v606);
                  v608 = (_QWORD *)((v605 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v609 = (_QWORD *)((v606 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v608 = *v609;
                  v608[1] = v609[1];
                  v610 = (_QWORD *)(((unint64_t)v608 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v611 = (_QWORD *)(((unint64_t)v609 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v610 = *v611;
                  v610[1] = v611[1];
                  *(_QWORD *)(((unint64_t)v610 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v611
                                                                                               + 23) & 0xFFFFFFFFFFFFF8);
                  *((_BYTE *)v365 + v1688) = 19;
LABEL_857:
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  goto LABEL_1643;
                case 0x14:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v366, 1, v208))
                  {
                    memcpy(v365, v366, v1755);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1661 + 16))(v365, v366, v208);
                    __swift_storeEnumTagSinglePayload((uint64_t)v365, 0, 1, v208);
                  }
                  v612 = ((unint64_t)v365 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v613 = ((unint64_t)v366 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v614 = *(_QWORD *)(v613 + 24);
                  *(_QWORD *)(v612 + 24) = v614;
                  *(_QWORD *)(v612 + 32) = *(_QWORD *)(v613 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v614 - 8))(v612, v613);
                  v615 = (void *)((v1730 + 40 + v612) & v1692);
                  v616 = (const void *)((v1730 + 40 + v613) & v1692);
                  v428 = v1555;
                  v1563 = v362;
                  if (v1611 == v1601)
                  {
                    v617 = v1719;
                    v618 = v1572;
                    v619 = v1669;
                    if (v1719 < 2)
                      goto LABEL_1296;
                    v620 = (uint64_t)v616;
                    v621 = v1669;
                  }
                  else
                  {
                    v622 = ((unint64_t)v616 + v1728) & 0xFFFFFFFFFFFFFFF8;
                    v618 = v1572;
                    if (v1601 == 0x7FFFFFFF)
                    {
                      v619 = v1669;
                      if (*(_QWORD *)(v622 + 24) >= 0xFFFFFFFFuLL)
                        goto LABEL_1296;
                      goto LABEL_1298;
                    }
                    v857 = (v1737
                          + ((((((((v622 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                            + 47) & 0xFFFFFFFFFFFFFFF8)) & v1572;
                    v619 = v1669;
                    if (v1578 == v1601)
                    {
                      if (v1618 > 0x7FFFFFFE)
                      {
                        v1001 = __swift_getEnumTagSinglePayload((v1621 + v857) & v1570, v1613, v1625);
                        if (v1001 < 2)
                          goto LABEL_1296;
                        v860 = v1001 - 1;
                      }
                      else
                      {
                        v858 = *(_QWORD *)(v857 + 16);
                        if (v858 >= 0xFFFFFFFF)
                          LODWORD(v858) = -1;
                        v859 = v858 - 1;
                        if (v859 < 0)
                          v859 = -1;
                        v860 = v859 + 1;
                      }
                      if (v860 < 2)
                      {
LABEL_1296:
                        if (__swift_getEnumTagSinglePayload((uint64_t)v616, 1, v619))
                        {
                          memcpy(v615, v616, v1755);
                        }
                        else
                        {
                          (*(void (**)(void *, const void *, uint64_t))(v1661 + 16))(v615, v616, v619);
                          __swift_storeEnumTagSinglePayload((uint64_t)v615, 0, 1, v619);
                        }
                        v1005 = ((unint64_t)v615 + v1728) & 0xFFFFFFFFFFFFFFF8;
                        v1006 = ((unint64_t)v616 + v1728) & 0xFFFFFFFFFFFFFFF8;
                        v1007 = *(_QWORD *)(v1006 + 24);
                        *(_QWORD *)(v1005 + 24) = v1007;
                        *(_QWORD *)(v1005 + 32) = *(_QWORD *)(v1006 + 32);
                        (**(void (***)(unint64_t, unint64_t))(v1007 - 8))(v1005, v1006);
                        v1008 = (_QWORD *)((v1005 + 47) & 0xFFFFFFFFFFFFFFF8);
                        v1009 = (_QWORD *)((v1006 + 47) & 0xFFFFFFFFFFFFFFF8);
                        *v1008 = *v1009;
                        v1008[1] = v1009[1];
                        v1010 = (_QWORD *)(((unint64_t)v1008 + 23) & 0xFFFFFFFFFFFFFFF8);
                        v1011 = (_QWORD *)(((unint64_t)v1009 + 23) & 0xFFFFFFFFFFFFFFF8);
                        *v1010 = *v1011;
                        v1010[1] = v1011[1];
                        v1012 = ((unint64_t)v1010 + 23) & 0xFFFFFFFFFFFFFFF8;
                        v1013 = ((unint64_t)v1011 + 23) & 0xFFFFFFFFFFFFFFF8;
                        v1014 = *(_QWORD *)(v1013 + 24);
                        sub_21D7C4C20();
                        sub_21D7C4C20();
                        if (v1014 < 0xFFFFFFFF)
                        {
                          v1015 = *(_OWORD *)v1013;
                          v1016 = *(_OWORD *)(v1013 + 16);
                          *(_QWORD *)(v1012 + 32) = *(_QWORD *)(v1013 + 32);
                          *(_OWORD *)v1012 = v1015;
                          *(_OWORD *)(v1012 + 16) = v1016;
                        }
                        else
                        {
                          *(_QWORD *)(v1012 + 24) = v1014;
                          *(_QWORD *)(v1012 + 32) = *(_QWORD *)(v1013 + 32);
                          (**(void (***)(unint64_t, unint64_t, unint64_t))(v1014 - 8))(v1012, v1013, v1014);
                        }
                        v1017 = v1720;
                        v1018 = (v1012 + 47) & 0xFFFFFFFFFFFFFFF8;
                        v1019 = (v1013 + 47) & 0xFFFFFFFFFFFFFFF8;
                        v1020 = *(_QWORD *)(v1019 + 24);
                        if (v1020 < 0xFFFFFFFF)
                        {
                          v1021 = *(_OWORD *)v1019;
                          v1022 = *(_OWORD *)(v1019 + 16);
                          *(_QWORD *)(v1018 + 32) = *(_QWORD *)(v1019 + 32);
                          *(_OWORD *)v1018 = v1021;
                          *(_OWORD *)(v1018 + 16) = v1022;
                        }
                        else
                        {
                          *(_QWORD *)(v1018 + 24) = v1020;
                          *(_QWORD *)(v1018 + 32) = *(_QWORD *)(v1019 + 32);
                          (**(void (***)(unint64_t, unint64_t))(v1020 - 8))(v1018, (v1013 + 47) & 0xFFFFFFFFFFFFFFF8);
                        }
                        v1023 = (_QWORD *)((v1737 + v1018) & v618);
                        v1024 = (_QWORD *)((v1737 + v1019) & v618);
                        if (v1618 >= 0x7FFFFFFF)
                        {
                          v1029 = (const void *)(((unint64_t)v1024 + v1621) & v1570);
                          if (__swift_getEnumTagSinglePayload((uint64_t)v1029, v1613, v1625) <= 1)
                          {
                            v1756 = v615;
                            v1749 = v366;
                            v1701 = v365;
                            v1026 = (char *)(v1024 + 1);
                            v1027 = v1621;
                            v1028 = v1570;
                            goto LABEL_1313;
                          }
                        }
                        else
                        {
                          v1025 = *(_QWORD *)(((v1737 + v1019) & v618) + 0x10);
                          if (v1025 >= 0xFFFFFFFF)
                            LODWORD(v1025) = -1;
                          if ((int)v1025 - 1 < 0)
                          {
                            v1756 = v615;
                            v1749 = v366;
                            v1701 = v365;
                            v1026 = (char *)(v1024 + 1);
                            v1027 = v1621;
                            v1028 = v1570;
                            v1029 = (const void *)(((unint64_t)v1024 + v1621) & v1570);
LABEL_1313:
                            *(_BYTE *)v1023 = *(_BYTE *)v1024;
                            v1023[1] = v1024[1];
                            v1023[2] = *((_QWORD *)v1026 + 1);
                            v1023[3] = *((_QWORD *)v1026 + 2);
                            v1023[4] = *((_QWORD *)v1026 + 3);
                            v1023[5] = *((_QWORD *)v1026 + 4);
                            v1023[6] = *((_QWORD *)v1026 + 5);
                            v1023[7] = *((_QWORD *)v1026 + 6);
                            v1023[8] = *((_QWORD *)v1026 + 7);
                            v1023[9] = *((_QWORD *)v1026 + 8);
                            v1023[10] = *((_QWORD *)v1026 + 9);
                            v1023[11] = *((_QWORD *)v1026 + 10);
                            v1023[12] = *((_QWORD *)v1026 + 11);
                            v1030 = *((_QWORD *)v1026 + 12);
                            *((_BYTE *)v1023 + 112) = v1026[104];
                            v1023[13] = v1030;
                            v1031 = (void *)(((unint64_t)v1023 + v1027) & v1028);
                            sub_21D7C4C20();
                            sub_21D7C4C20();
                            sub_21D7C4C20();
                            sub_21D7C4C20();
                            sub_21D7C4C20();
                            sub_21D7C4C20();
                            if (__swift_getEnumTagSinglePayload((uint64_t)v1029, 1, v1625))
                            {
                              memcpy(v1031, v1029, v1716);
                            }
                            else
                            {
                              (*(void (**)(void *, const void *, uint64_t))(v1607 + 16))(v1031, v1029, v1625);
                              __swift_storeEnumTagSinglePayload((uint64_t)v1031, 0, 1, v1625);
                            }
                            v1032 = v1718;
                            v1017 = v1720;
                            v618 = v1572;
                            v365 = v1701;
                            v366 = v1749;
                            v615 = v1756;
LABEL_1318:
                            v1033 = (void *)(((unint64_t)v1023 + v1712 + v1032) & v1574);
                            v1034 = (_BYTE *)(((unint64_t)v1024 + v1712 + v1032) & v1574);
                            v428 = v1555;
                            v1035 = v1624;
                            if (v1724)
                            {
                              if (v1617 >= v1624)
                              {
                                v1036 = (uint64_t)v1034;
                                v1035 = v1617;
                                v1037 = v1619;
                              }
                              else
                              {
                                v1036 = (unint64_t)&v1034[v1620] & v1576;
                                v1037 = v1623;
                              }
                              v1040 = __swift_getEnumTagSinglePayload(v1036, v1035, v1037);
                            }
                            else
                            {
                              if (!v1034[v1017])
                                goto LABEL_2122;
                              v1038 = (v1034[v1017] - 1) << v1675;
                              if (v1017 > 3)
                                v1038 = 0;
                              if ((_DWORD)v1017)
                              {
                                if (v1017 <= 3)
                                  v1039 = v1017;
                                else
                                  v1039 = 4;
                                __asm { BR              X11 }
                              }
                              v1040 = v1038 + 1;
                            }
                            if (v1040)
                            {
                              v1002 = v1033;
                              v1003 = v1034;
                              v1004 = v1736;
                              goto LABEL_2121;
                            }
LABEL_2122:
                            (*(void (**)(void *, _BYTE *, uint64_t))(v1615 + 16))(v1033, v1034, v1619);
                            (*(void (**)(unint64_t, unint64_t, uint64_t))(v1616 + 16))(((unint64_t)v1033 + v1620) & v1576, (unint64_t)&v1034[v1620] & v1576, v1623);
                            if (!v1724)
                              *((_BYTE *)v1033 + v1017) = 0;
LABEL_2124:
                            v1450 = (_QWORD *)(((unint64_t)v615 + v1594) & 0xFFFFFFFFFFFFFFF8);
                            v1451 = (_QWORD *)(((unint64_t)v616 + v1594) & 0xFFFFFFFFFFFFFFF8);
                            *v1450 = *v1451;
                            v1452 = v618;
                            v1453 = (_QWORD *)(((unint64_t)v1450 + v1595) & v618);
                            v1454 = (_QWORD *)(((unint64_t)v1451 + v1595) & v1452);
                            sub_21D7C4C20();
                            if (v1618 >= 0x7FFFFFFF)
                            {
                              v1459 = (const void *)(((unint64_t)v1454 + v1621) & v1570);
                              if (__swift_getEnumTagSinglePayload((uint64_t)v1459, v1613, v1625) <= 1)
                              {
                                v1752 = v366;
                                v1457 = (char *)(v1454 + 1);
                                v1458 = v1621;
                                v1456 = v1570;
                                goto LABEL_2131;
                              }
                            }
                            else
                            {
                              v1455 = v1454[2];
                              if (v1455 >= 0xFFFFFFFF)
                                LODWORD(v1455) = -1;
                              v1456 = v1570;
                              if ((int)v1455 - 1 < 0)
                              {
                                v1752 = v366;
                                v1457 = (char *)(v1454 + 1);
                                v1458 = v1621;
                                v1459 = (const void *)(((unint64_t)v1454 + v1621) & v1570);
LABEL_2131:
                                *(_BYTE *)v1453 = *(_BYTE *)v1454;
                                v1453[1] = v1454[1];
                                v1453[2] = *((_QWORD *)v1457 + 1);
                                v1453[3] = *((_QWORD *)v1457 + 2);
                                v1453[4] = *((_QWORD *)v1457 + 3);
                                v1453[5] = *((_QWORD *)v1457 + 4);
                                v1453[6] = *((_QWORD *)v1457 + 5);
                                v1453[7] = *((_QWORD *)v1457 + 6);
                                v1453[8] = *((_QWORD *)v1457 + 7);
                                v1453[9] = *((_QWORD *)v1457 + 8);
                                v1453[10] = *((_QWORD *)v1457 + 9);
                                v1453[11] = *((_QWORD *)v1457 + 10);
                                v1453[12] = *((_QWORD *)v1457 + 11);
                                v1460 = *((_QWORD *)v1457 + 12);
                                *((_BYTE *)v1453 + 112) = v1457[104];
                                v1453[13] = v1460;
                                v1461 = (void *)(((unint64_t)v1453 + v1458) & v1456);
                                sub_21D7C4C20();
                                sub_21D7C4C20();
                                sub_21D7C4C20();
                                sub_21D7C4C20();
                                sub_21D7C4C20();
                                sub_21D7C4C20();
                                if (__swift_getEnumTagSinglePayload((uint64_t)v1459, 1, v1625))
                                {
                                  memcpy(v1461, v1459, v1716);
                                }
                                else
                                {
                                  (*(void (**)(void *, const void *, uint64_t))(v1607 + 16))(v1461, v1459, v1625);
                                  __swift_storeEnumTagSinglePayload((uint64_t)v1461, 0, 1, v1625);
                                }
                                v362 = v1563;
                                v366 = v1752;
                                goto LABEL_2136;
                              }
                            }
                            memcpy(v1453, v1454, v1718);
                            v362 = v1563;
LABEL_2136:
                            v576 = 20;
LABEL_2137:
                            v672 = v1688;
                            goto LABEL_2138;
                          }
                        }
                        v1032 = v1718;
                        memcpy(v1023, v1024, v1718);
                        goto LABEL_1318;
                      }
LABEL_1298:
                      v1002 = v615;
                      v1003 = v616;
                      v1004 = v1577;
LABEL_2121:
                      memcpy(v1002, v1003, v1004);
                      goto LABEL_2124;
                    }
                    if (v1724 < 2)
                      goto LABEL_1296;
                    v620 = (v1600 + v857) & v1574;
                    v617 = v1624;
                    if (v1617 >= v1624)
                    {
                      v617 = v1617;
                      v621 = v1619;
                    }
                    else
                    {
                      v620 = (v1620 + v620) & v1576;
                      v621 = v1623;
                    }
                  }
                  if (__swift_getEnumTagSinglePayload(v620, v617, v621) < 2)
                    goto LABEL_1296;
                  goto LABEL_1298;
                case 0x15:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v366, 1, v208))
                  {
                    memcpy(v365, v366, v1755);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1661 + 16))(v365, v366, v208);
                    __swift_storeEnumTagSinglePayload((uint64_t)v365, 0, 1, v208);
                  }
                  v428 = v1555;
                  v623 = ((unint64_t)v365 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v624 = ((unint64_t)v366 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v625 = *(_QWORD *)(v624 + 24);
                  *(_QWORD *)(v623 + 24) = v625;
                  *(_QWORD *)(v623 + 32) = *(_QWORD *)(v624 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v625 - 8))(v623, v624);
                  v626 = (v623 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v627 = (v624 + 47) & 0xFFFFFFFFFFFFFFF8;
                  *(_QWORD *)v626 = *(_QWORD *)v627;
                  *(_QWORD *)(v626 + 8) = *(_QWORD *)(v627 + 8);
                  *(_BYTE *)(v626 + 16) = *(_BYTE *)(v627 + 16);
                  v628 = 21;
                  goto LABEL_922;
                case 0x16:
                  v1559 = v362;
                  if (__swift_getEnumTagSinglePayload((uint64_t)v366, 1, v208))
                  {
                    memcpy(v365, v366, v1755);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1661 + 16))(v365, v366, v208);
                    __swift_storeEnumTagSinglePayload((uint64_t)v365, 0, 1, v208);
                  }
                  v629 = v1720;
                  v630 = ((unint64_t)v365 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v1748 = (_QWORD *)(((unint64_t)v357 + v1741 + v363) & v1686);
                  v631 = ((unint64_t)v366 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v632 = *(_QWORD *)(v631 + 24);
                  *(_QWORD *)(v630 + 24) = v632;
                  *(_QWORD *)(v630 + 32) = *(_QWORD *)(v631 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v632 - 8))(v630, v631);
                  v633 = (_QWORD *)((v630 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v634 = (_QWORD *)((v631 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v633 = *v634;
                  v633[1] = v634[1];
                  v635 = (_QWORD *)(((unint64_t)v633 + 23) & 0xFFFFFFFFFFFFF8);
                  v636 = (_QWORD *)(((unint64_t)v634 + 23) & 0xFFFFFFFFFFFFF8);
                  *v635 = *v636;
                  v637 = (_QWORD *)(((unint64_t)v635 + 15) & 0xFFFFFFFFFFFFFFF8);
                  v638 = (_QWORD *)(((unint64_t)v636 + 15) & 0xFFFFFFFFFFFFFFF8);
                  *v637 = *v638;
                  v637[1] = v638[1];
                  v639 = (_QWORD *)(((unint64_t)v637 + v1658) & v1740);
                  v640 = (_QWORD *)(((unint64_t)v638 + v1658) & v1740);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (v1605 > 0x7FFFFFFE)
                  {
                    v642 = (_QWORD *)(((unint64_t)v640 + 23) & 0xFFFFFFFFFFFFFFF8);
                    v643 = ((unint64_t)v642 + 23) & 0xFFFFFFFFFFFFFFF8;
                    if (!__swift_getEnumTagSinglePayload((v1717 + v643 + 33) & v1673, v1605, v1603))
                      goto LABEL_877;
                  }
                  else
                  {
                    v641 = v640[1];
                    if (v641 >= 0xFFFFFFFF)
                      LODWORD(v641) = -1;
                    if ((v641 + 1) <= 1)
                    {
                      v642 = (_QWORD *)(((unint64_t)v640 + 23) & 0xFFFFFFFFFFFFFFF8);
                      v643 = ((unint64_t)v642 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_877:
                      *v639 = *v640;
                      v639[1] = v640[1];
                      v645 = (_QWORD *)(((unint64_t)v639 + 23) & 0xFFFFFFFFFFFFFFF8);
                      *v645 = *v642;
                      v645[1] = v642[1];
                      v646 = ((unint64_t)v645 + 23) & 0xFFFFFFFFFFFFFFF8;
                      *(_QWORD *)v646 = *(_QWORD *)v643;
                      *(_QWORD *)(v646 + 8) = *(_QWORD *)(v643 + 8);
                      *(_BYTE *)(v646 + 16) = *(_BYTE *)(v643 + 16);
                      v647 = ((unint64_t)v645 + 47) & 0xFFFFFFFFFFFFFFF8;
                      v648 = ((unint64_t)v642 + 47) & 0xFFFFFFFFFFFFFFF8;
                      v649 = *(void **)v648;
                      *(_QWORD *)v647 = *(_QWORD *)v648;
                      *(_BYTE *)(v647 + 8) = *(_BYTE *)(v648 + 8);
                      v650 = (v1717 + 9 + v647) & v1673;
                      v651 = (v1717 + 9 + v648) & v1673;
                      v652 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1709 + 16);
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      v653 = v649;
                      v652(v650, v651, v1603);
                      v629 = v1720;
                      v644 = v1739;
LABEL_878:
                      *((_BYTE *)v639 + v644) = *((_BYTE *)v640 + v644);
                      v654 = ((unint64_t)v639 + v644) & 0xFFFFFFFFFFFFFFF8;
                      v655 = ((unint64_t)v640 + v644) & 0xFFFFFFFFFFFFFFF8;
                      *(_QWORD *)(v654 + 8) = *(_QWORD *)(v655 + 8);
                      *(_QWORD *)(v654 + 16) = *(_QWORD *)(v655 + 16);
                      v656 = (void *)((v1585 + v654) & v1574);
                      v657 = (_BYTE *)((v1585 + v655) & v1574);
                      sub_21D7C4C20();
                      if (v1724)
                      {
                        v658 = v1624;
                        if (v1617 >= v1624)
                        {
                          v659 = (uint64_t)v657;
                          v658 = v1617;
                          v660 = v1619;
                        }
                        else
                        {
                          v659 = (unint64_t)&v657[v1620] & v1576;
                          v660 = v1623;
                        }
                        v848 = __swift_getEnumTagSinglePayload(v659, v658, v660);
                      }
                      else
                      {
                        if (!v657[v629])
                          goto LABEL_1781;
                        v805 = (v657[v629] - 1) << v1675;
                        if (v629 > 3)
                          v805 = 0;
                        if ((_DWORD)v629)
                        {
                          if (v629 <= 3)
                            v806 = v629;
                          else
                            v806 = 4;
                          __asm { BR              X11 }
                        }
                        v848 = v805 + 1;
                      }
                      if (v848)
                      {
                        memcpy(v656, v657, v1736);
                        goto LABEL_1783;
                      }
LABEL_1781:
                      (*(void (**)(void *, _BYTE *, uint64_t))(v1615 + 16))(v656, v657, v1619);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1616 + 16))(((unint64_t)v656 + v1620) & v1576, (unint64_t)&v657[v1620] & v1576, v1623);
                      if (!v1724)
                        *((_BYTE *)v656 + v629) = 0;
LABEL_1783:
                      v1252 = (_QWORD *)(((unint64_t)v656 + v1727) & v1758);
                      v1253 = (uint64_t *)((unint64_t)&v657[v1727] & v1758);
                      if ((v1624 & 0x80000000) != 0)
                      {
                        v1257 = v1576;
                        v1255 = __swift_getEnumTagSinglePayload(((unint64_t)v1253 + v1606) & v1576, v1624, v1623);
                        v1256 = v1572;
                      }
                      else
                      {
                        v1254 = *v1253;
                        if ((unint64_t)*v1253 >= 0xFFFFFFFF)
                          LODWORD(v1254) = -1;
                        v1255 = v1254 + 1;
                        v1256 = v1572;
                        v1257 = v1576;
                      }
                      v1258 = v1755 + 7;
                      if (v1255)
                      {
                        memcpy(v1252, v1253, v1713);
                      }
                      else
                      {
                        *v1252 = *v1253;
                        v1259 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1616 + 16);
                        sub_21D7C4C20();
                        v1256 = v1572;
                        v1259(((unint64_t)v1252 + v1606) & v1257, ((unint64_t)v1253 + v1606) & v1257, v1623);
                      }
                      v1260 = (_QWORD *)(((unint64_t)v1252 + v1659) & v1256);
                      v1261 = (_QWORD *)(((unint64_t)v1253 + v1659) & v1256);
                      if (v1618 >= 0x7FFFFFFF)
                      {
                        v1266 = (const void *)(((unint64_t)v1261 + v1621) & v1570);
                        if (__swift_getEnumTagSinglePayload((uint64_t)v1266, v1613, v1625) <= 1)
                        {
                          v1704 = v365;
                          v1263 = (char *)(v1261 + 1);
                          v1264 = v1621;
                          v1265 = v1570;
                          goto LABEL_1798;
                        }
                      }
                      else
                      {
                        v1262 = v1261[2];
                        if (v1262 >= 0xFFFFFFFF)
                          LODWORD(v1262) = -1;
                        if ((int)v1262 - 1 < 0)
                        {
                          v1704 = v365;
                          v1263 = (char *)(v1261 + 1);
                          v1264 = v1621;
                          v1265 = v1570;
                          v1266 = (const void *)(((unint64_t)v1261 + v1621) & v1570);
LABEL_1798:
                          *(_BYTE *)v1260 = *(_BYTE *)v1261;
                          v1260[1] = v1261[1];
                          v1260[2] = *((_QWORD *)v1263 + 1);
                          v1260[3] = *((_QWORD *)v1263 + 2);
                          v1260[4] = *((_QWORD *)v1263 + 3);
                          v1260[5] = *((_QWORD *)v1263 + 4);
                          v1260[6] = *((_QWORD *)v1263 + 5);
                          v1260[7] = *((_QWORD *)v1263 + 6);
                          v1260[8] = *((_QWORD *)v1263 + 7);
                          v1260[9] = *((_QWORD *)v1263 + 8);
                          v1260[10] = *((_QWORD *)v1263 + 9);
                          v1260[11] = *((_QWORD *)v1263 + 10);
                          v1260[12] = *((_QWORD *)v1263 + 11);
                          v1267 = *((_QWORD *)v1263 + 12);
                          *((_BYTE *)v1260 + 112) = v1263[104];
                          v1260[13] = v1267;
                          v1268 = (void *)(((unint64_t)v1260 + v1264) & v1265);
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          if (__swift_getEnumTagSinglePayload((uint64_t)v1266, 1, v1625))
                          {
                            memcpy(v1268, v1266, v1716);
                          }
                          else
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v1607 + 16))(v1268, v1266, v1625);
                            __swift_storeEnumTagSinglePayload((uint64_t)v1268, 0, 1, v1625);
                          }
                          v1269 = v1718;
                          v1258 = v1755 + 7;
                          v365 = v1704;
LABEL_1803:
                          v1270 = (unint64_t)v1260 + v1735 + v1269;
                          v1271 = (void *)(v1270 & v1568);
                          v1272 = (unint64_t)v1261 + v1735 + v1269;
                          v1273 = (const void *)(v1272 & v1568);
                          if (v1611 < 0x7FFFFFFF)
                          {
                            v1274 = v1669;
                            if (*(_QWORD *)((((unint64_t)v1273 + v1258) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                              goto LABEL_1805;
                          }
                          else
                          {
                            v1274 = v1669;
                            if (__swift_getEnumTagSinglePayload(v1272 & v1568, v1719, v1669) >= 2)
                            {
LABEL_1805:
                              memcpy(v1271, v1273, v1604);
                              v1275 = v1604;
                              goto LABEL_1815;
                            }
                          }
                          if (__swift_getEnumTagSinglePayload((uint64_t)v1273, 1, v1274))
                          {
                            memcpy(v1271, v1273, v1755);
                          }
                          else
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v1661 + 16))(v1271, v1273, v1274);
                            __swift_storeEnumTagSinglePayload((uint64_t)v1271, 0, 1, v1274);
                          }
                          v1276 = ((unint64_t)v1271 + v1258) & 0xFFFFFFFFFFFFFFF8;
                          v1277 = ((unint64_t)v1273 + v1258) & 0xFFFFFFFFFFFFFFF8;
                          v1278 = *(_QWORD *)(v1277 + 24);
                          *(_QWORD *)(v1276 + 24) = v1278;
                          *(_QWORD *)(v1276 + 32) = *(_QWORD *)(v1277 + 32);
                          (**(void (***)(unint64_t, unint64_t))(v1278 - 8))(v1276, v1277);
                          v1279 = (v1276 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1280 = (v1277 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1281 = *(_QWORD *)(v1280 + 24);
                          if (v1281 < 0xFFFFFFFF)
                          {
                            v1282 = *(_OWORD *)v1280;
                            v1283 = *(_OWORD *)(v1280 + 16);
                            *(_QWORD *)(v1279 + 32) = *(_QWORD *)(v1280 + 32);
                            *(_OWORD *)v1279 = v1282;
                            *(_OWORD *)(v1279 + 16) = v1283;
                          }
                          else
                          {
                            *(_QWORD *)(v1279 + 24) = v1281;
                            *(_QWORD *)(v1279 + 32) = *(_QWORD *)(v1280 + 32);
                            (**(void (***)(unint64_t, unint64_t))(v1281 - 8))((v1276 + 47) & 0xFFFFFFFFFFFFFFF8, v1280);
                          }
                          v1284 = (_QWORD *)((v1279 + 47) & 0xFFFFFFFFFFFFFFF8);
                          v1285 = (_QWORD *)((v1280 + 47) & 0xFFFFFFFFFFFFFFF8);
                          *v1284 = *v1285;
                          v1284[1] = v1285[1];
                          sub_21D7C4C20();
                          v1275 = v1604;
                          v1274 = v1669;
                          if (v1719)
                            v1275 = ((((((v1656 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                                  + 16;
LABEL_1815:
                          v1286 = (v1270 | v1753) + v1275;
                          v1287 = (v1272 | v1753) + v1275;
                          v1288 = v1287 & v1568;
                          if (v1611 < 0x7FFFFFFF)
                          {
                            if (*(_QWORD *)(((v1258 + v1288) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                              goto LABEL_1817;
                          }
                          else if (__swift_getEnumTagSinglePayload(v1287 & v1568, v1719, v1274) >= 2)
                          {
LABEL_1817:
                            memcpy((void *)(v1286 & v1568), (const void *)(v1287 & v1568), v1604);
                            v1289 = v1604;
                            goto LABEL_1827;
                          }
                          if (__swift_getEnumTagSinglePayload(v1287 & v1568, 1, v1274))
                          {
                            memcpy((void *)(v1286 & v1568), (const void *)(v1287 & v1568), v1755);
                          }
                          else
                          {
                            (*(void (**)(unint64_t, unint64_t, uint64_t))(v1661 + 16))(v1286 & v1568, v1287 & v1568, v1274);
                            __swift_storeEnumTagSinglePayload(v1286 & v1568, 0, 1, v1274);
                          }
                          v1290 = (v1258 + (v1286 & v1568)) & 0xFFFFFFFFFFFFFFF8;
                          v1291 = (v1258 + v1288) & 0xFFFFFFFFFFFFFFF8;
                          v1292 = *(_QWORD *)(v1291 + 24);
                          *(_QWORD *)(v1290 + 24) = v1292;
                          *(_QWORD *)(v1290 + 32) = *(_QWORD *)(v1291 + 32);
                          (**(void (***)(unint64_t, unint64_t))(v1292 - 8))(v1290, v1291);
                          v1293 = (v1290 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1294 = (v1291 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1295 = *(_QWORD *)(v1294 + 24);
                          if (v1295 < 0xFFFFFFFF)
                          {
                            v1296 = *(_OWORD *)v1294;
                            v1297 = *(_OWORD *)(v1294 + 16);
                            *(_QWORD *)(v1293 + 32) = *(_QWORD *)(v1294 + 32);
                            *(_OWORD *)v1293 = v1296;
                            *(_OWORD *)(v1293 + 16) = v1297;
                          }
                          else
                          {
                            *(_QWORD *)(v1293 + 24) = v1295;
                            *(_QWORD *)(v1293 + 32) = *(_QWORD *)(v1294 + 32);
                            (**(void (***)(unint64_t, unint64_t))(v1295 - 8))((v1290 + 47) & 0xFFFFFFFFFFFFFFF8, v1294);
                          }
                          v1298 = (_QWORD *)((v1293 + 47) & 0xFFFFFFFFFFFFFFF8);
                          v1299 = (_QWORD *)((v1294 + 47) & 0xFFFFFFFFFFFFFFF8);
                          *v1298 = *v1299;
                          v1298[1] = v1299[1];
                          sub_21D7C4C20();
                          v1289 = v1604;
                          v1274 = v1669;
                          if (v1719)
                            v1289 = ((((((v1656 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                                  + 16;
LABEL_1827:
                          v1300 = (char *)(((v1286 | v1753) + v1289) & v1568);
                          v1301 = (char *)(((v1287 | v1753) + v1289) & v1568);
                          if (v1611 < 0x7FFFFFFF)
                          {
                            v362 = v1559;
                            v366 = v1748;
                            if (*(_QWORD *)(((unint64_t)&v1301[v1258] & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                            {
LABEL_1829:
                              memcpy(v1300, v1301, v1604);
                              if (!v1719)
                                goto LABEL_1841;
                              goto LABEL_1840;
                            }
                          }
                          else
                          {
                            v362 = v1559;
                            v366 = v1748;
                            if (__swift_getEnumTagSinglePayload((uint64_t)v1301, v1719, v1274) >= 2)
                              goto LABEL_1829;
                          }
                          v1302 = v362;
                          if (__swift_getEnumTagSinglePayload((uint64_t)v1301, 1, v1274))
                          {
                            memcpy(v1300, v1301, v1755);
                          }
                          else
                          {
                            (*(void (**)(char *, char *, uint64_t))(v1661 + 16))(v1300, v1301, v1274);
                            __swift_storeEnumTagSinglePayload((uint64_t)v1300, 0, 1, v1274);
                          }
                          v1303 = (unint64_t)&v1300[v1258] & 0xFFFFFFFFFFFFFFF8;
                          v1304 = (unint64_t)&v1301[v1258] & 0xFFFFFFFFFFFFFFF8;
                          v1305 = *(_QWORD *)(v1304 + 24);
                          *(_QWORD *)(v1303 + 24) = v1305;
                          *(_QWORD *)(v1303 + 32) = *(_QWORD *)(v1304 + 32);
                          (**(void (***)(unint64_t, unint64_t))(v1305 - 8))(v1303, v1304);
                          v1306 = (v1303 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1307 = (v1304 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1308 = *(_QWORD *)(v1307 + 24);
                          if (v1308 < 0xFFFFFFFF)
                          {
                            v1309 = *(_OWORD *)v1307;
                            v1310 = *(_OWORD *)(v1307 + 16);
                            *(_QWORD *)(v1306 + 32) = *(_QWORD *)(v1307 + 32);
                            *(_OWORD *)v1306 = v1309;
                            *(_OWORD *)(v1306 + 16) = v1310;
                          }
                          else
                          {
                            *(_QWORD *)(v1306 + 24) = v1308;
                            *(_QWORD *)(v1306 + 32) = *(_QWORD *)(v1307 + 32);
                            (**(void (***)(unint64_t, unint64_t))(v1308 - 8))((v1303 + 47) & 0xFFFFFFFFFFFFFFF8, v1307);
                          }
                          v1311 = (_QWORD *)((v1306 + 47) & 0xFFFFFFFFFFFFFFF8);
                          v1312 = (_QWORD *)((v1307 + 47) & 0xFFFFFFFFFFFFFFF8);
                          *v1311 = *v1312;
                          v1311[1] = v1312[1];
                          sub_21D7C4C20();
                          v362 = v1302;
                          v366 = v1748;
                          if (!v1719)
                            goto LABEL_1841;
                          v1604 = ((((((v1656 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                                + 16;
LABEL_1840:
                          v364 = v1656;
LABEL_1841:
                          *(_QWORD *)&v1300[v1604] = *(_QWORD *)&v1301[v1604];
                          v1313 = v1652
                                + ((v1657
                                  + ((v1657
                                    + ((v1655
                                      + ((v1659
                                        + ((v1727
                                          + ((v1725
                                            + ((((((v1658
                                                  + ((((((((v364 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                                                      + 23) & 0xFFFFFFFFFFFFFFF8)
                                                    + 15) & 0xFFFFFFFFFFFFFFF8)) & v1740)
                                                + v1739) & 0xFFFFFFFFFFFFFFF8)
                                              + 23) & 0xFFFFFFFFFFFFFFF8)) & v1574)) & v1758)) & v1572)) & v1568)) & v1568)) & v1568);
                          if (v1653 > v1313)
                            v1313 = v1653;
                          if (v1313 <= v1651)
                            v1313 = v1651;
                          if (v1313 <= v1654)
                            v1313 = v1654;
                          if (v1313 <= v1647)
                            v1313 = v1647;
                          if (v1313 <= v1645)
                            v1313 = v1645;
                          if (v1313 <= v1642)
                            v1313 = v1642;
                          if (v1313 <= v1643)
                            v1313 = (((((v1738 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                  + 16;
                          if (v1313 <= v1644)
                            v1313 = v1644;
                          if (v1313 <= v1633)
                            v1313 = v1633;
                          if (v1313 <= v1631)
                            v1313 = v1631;
                          if (v1313 <= v1629)
                            v1313 = v1629;
                          if (v1313 <= v1632)
                            v1313 = v1632;
                          if (v1313 <= v1628)
                            v1313 = v1628;
                          if (v1313 <= v1723)
                            v1313 = v1723;
                          if (v1313 <= v1630)
                            v1313 = v1630;
                          if (v1313 <= v1653)
                            v1313 = v1653;
                          if (v1313 <= v1627)
                            v1313 = v1627;
                          if (v1313 <= v1634)
                            v1313 = ((v1738 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
                          if (v1313 <= v1636)
                            v1313 = v1636;
                          if (v1313 <= v1638)
                            v1313 = v1638;
                          if (v1313 <= v1637)
                            v1313 = v1637;
                          if (v1313 <= v1640)
                            v1313 = v1640;
                          if (v1313 <= v1635)
                            v1313 = v1635;
                          if (v1313 <= v1639)
                            v1313 = v1678 + 40;
                          if (v1313 <= v1641)
                            v1313 = v1641;
                          if (v1313 <= v1680)
                            v1313 = v1680;
                          if (v1313 <= v1648)
                            v1313 = v1648;
                          if (v1313 <= v1677)
                            v1313 = v1677;
                          if (v1313 <= v81)
                            v1313 = v81;
                          if (v1313 <= v1738)
                            v1313 = v1738;
                          if (v1313 <= v1649)
                            v1313 = v1649;
                          if (v1313 <= v1650)
                            v1313 = v1650;
                          if (v1313 <= v1646)
                            v1313 = v1646;
                          if (v1313 <= 8)
                            v1313 = 8;
                          *((_BYTE *)v365 + v1313) = 22;
                          goto LABEL_754;
                        }
                      }
                      v1269 = v1718;
                      memcpy(v1260, v1261, v1718);
                      goto LABEL_1803;
                    }
                  }
                  v644 = v1739;
                  memcpy(v639, v640, v1739);
                  goto LABEL_878;
                case 0x17:
                  *v365 = *v366;
                  v388 = ((unint64_t)v365 + v1733 + 8) & v1572;
                  v1742 = (_QWORD *)(((unint64_t)v357 + v1741 + v363) & v1686);
                  v389 = ((unint64_t)v366 + v1733 + 8) & v1572;
                  *(_BYTE *)v388 = *(_BYTE *)v389;
                  *(_QWORD *)(v388 + 8) = *(_QWORD *)(v389 + 8);
                  *(_QWORD *)(v388 + 16) = *(_QWORD *)(v389 + 0x10);
                  *(_QWORD *)(v388 + 24) = *(_QWORD *)(v389 + 0x18);
                  *(_QWORD *)(v388 + 32) = *(_QWORD *)(v389 + 0x20);
                  *(_QWORD *)(v388 + 40) = *(_QWORD *)(v389 + 0x28);
                  *(_QWORD *)(v388 + 48) = *(_QWORD *)(v389 + 0x30);
                  *(_QWORD *)(v388 + 56) = *(_QWORD *)(v389 + 0x38);
                  *(_QWORD *)(v388 + 64) = *(_QWORD *)(v389 + 0x40);
                  *(_QWORD *)(v388 + 72) = *(_QWORD *)(v389 + 0x48);
                  *(_QWORD *)(v388 + 80) = *(_QWORD *)(v389 + 0x50);
                  *(_QWORD *)(v388 + 88) = *(_QWORD *)(v389 + 0x58);
                  *(_QWORD *)(v388 + 96) = *(_QWORD *)(v389 + 0x60);
                  v390 = *(_QWORD *)(v389 + 0x68);
                  *(_BYTE *)(v388 + 112) = *(_BYTE *)(v389 + 0x70);
                  *(_QWORD *)(v388 + 104) = v390;
                  v391 = (void *)((v1621 + v388) & v1570);
                  v392 = (const void *)((v1621 + v389) & v1570);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (__swift_getEnumTagSinglePayload((uint64_t)v392, 1, v1625))
                  {
                    memcpy(v391, v392, v1716);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1607 + 16))(v391, v392, v1625);
                    __swift_storeEnumTagSinglePayload((uint64_t)v391, 0, 1, v1625);
                  }
                  v428 = v1555;
                  v463 = 23;
                  goto LABEL_1744;
                case 0x18:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v366, 1, v208))
                  {
                    memcpy(v365, v366, v1755);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1661 + 16))(v365, v366, v208);
                    __swift_storeEnumTagSinglePayload((uint64_t)v365, 0, 1, v208);
                  }
                  v428 = v1555;
                  v661 = ((unint64_t)v365 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v662 = ((unint64_t)v366 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v663 = *(_QWORD *)(v662 + 24);
                  *(_QWORD *)(v661 + 24) = v663;
                  *(_QWORD *)(v661 + 32) = *(_QWORD *)(v662 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v663 - 8))(v661, v662);
                  v664 = (_QWORD *)((v662 + 47) & 0xFFFFFFFFFFFFF8);
                  v665 = (_QWORD *)((v661 + 47) & 0xFFFFFFFFFFFFF8);
                  *v665 = *v664;
                  v666 = (_QWORD *)(((unint64_t)v665 + 15) & 0xFFFFFFFFFFFFFFF8);
                  v667 = (_QWORD *)(((unint64_t)v664 + 15) & 0xFFFFFFFFFFFFFFF8);
                  *v666 = *v667;
                  v666[1] = v667[1];
                  *((_BYTE *)v365 + v1688) = 24;
                  goto LABEL_1441;
                case 0x19:
                  *v365 = *v366;
                  v373 = 25;
                  goto LABEL_753;
                case 0x1A:
                  *v365 = *v366;
                  v373 = 26;
                  goto LABEL_753;
                case 0x1B:
                  *v365 = *v366;
                  v373 = 27;
                  goto LABEL_753;
                case 0x1C:
                  *v365 = *v366;
                  v373 = 28;
                  goto LABEL_753;
                case 0x1D:
                  v393 = *(_QWORD *)((((unint64_t)v357 + v1741 + v363) & v1686) + 0x18);
                  *(_QWORD *)((((unint64_t)v356 + v1741 + v363) & v1686) + 0x18) = v393;
                  *(_QWORD *)((((unint64_t)v356 + v1741 + v363) & v1686) + 0x20) = *(_QWORD *)((((unint64_t)v357 + v1741 + v363) & v1686) + 0x20);
                  (**(void (***)(_QWORD *, _QWORD *))(v393 - 8))(v365, v366);
                  v394 = (char *)(((unint64_t)v365 + v1721) & v1690);
                  v395 = (const void *)(((unint64_t)v366 + v1721) & v1690);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v395, 1, v208))
                  {
                    memcpy(v394, v395, v1755);
                  }
                  else
                  {
                    (*(void (**)(char *, const void *, uint64_t))(v1661 + 16))(v394, v395, v208);
                    __swift_storeEnumTagSinglePayload((uint64_t)v394, 0, 1, v208);
                  }
                  v428 = v1555;
                  v668 = &v394[v1755];
                  *v668 = *((_BYTE *)v395 + v1755);
                  v668[1] = *((_BYTE *)v395 + v1755 + 1);
                  v669 = (unint64_t)&v394[v1755 + 9] & 0xFFFFFFFFFFFFFFF8;
                  v670 = ((unint64_t)v395 + v1755 + 9) & 0xFFFFFFFFFFFFFFF8;
                  *(_QWORD *)v669 = *(_QWORD *)v670;
                  *(_QWORD *)(v669 + 8) = *(_QWORD *)(v670 + 8);
                  *(_BYTE *)(v669 + 16) = *(_BYTE *)(v670 + 16);
                  v671 = 29;
                  goto LABEL_1642;
                case 0x1E:
                  v396 = *(_QWORD *)((((unint64_t)v357 + v1741 + v363) & v1686) + 0x18);
                  *(_QWORD *)((((unint64_t)v356 + v1741 + v363) & v1686) + 0x18) = v396;
                  *(_QWORD *)((((unint64_t)v356 + v1741 + v363) & v1686) + 0x20) = *(_QWORD *)((((unint64_t)v357 + v1741 + v363) & v1686) + 0x20);
                  (**(void (***)(_QWORD *, _QWORD *))(v396 - 8))(v365, v366);
                  *(_BYTE *)((((unint64_t)v356 + v1741 + v363) & v1686) + 0x28) = *(_BYTE *)((((unint64_t)v357 + v1741 + v363) & v1686)
                                                                                                  + 0x28);
                  *(_BYTE *)((((unint64_t)v356 + v1741 + v363) & v1686) + 0x29) = *(_BYTE *)((((unint64_t)v357 + v1741 + v363) & v1686)
                                                                                                  + 0x29);
                  *(_BYTE *)((((unint64_t)v356 + v1741 + v363) & v1686) + 0x2A) = *(_BYTE *)((((unint64_t)v357 + v1741 + v363) & v1686)
                                                                                                  + 0x2A);
                  *(_BYTE *)((((unint64_t)v356 + v1741 + v363) & v1686) + 0x2B) = *(_BYTE *)((((unint64_t)v357 + v1741 + v363) & v1686)
                                                                                                  + 0x2B);
                  v397 = (_QWORD *)(((unint64_t)v365 + 51) & 0xFFFFFFFFFFFFFFF8);
                  v398 = (_QWORD *)(((unint64_t)v366 + 51) & 0xFFFFFFFFFFFFFFF8);
                  *v397 = *v398;
                  v397[1] = v398[1];
                  v399 = (_QWORD *)(((unint64_t)v397 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v400 = (_QWORD *)(((unint64_t)v398 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v399 = *v400;
                  v399[1] = v400[1];
                  v401 = (void *)(((unint64_t)v399 + v1710) & v1690);
                  v402 = (const void *)(((unint64_t)v400 + v1710) & v1690);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (__swift_getEnumTagSinglePayload((uint64_t)v402, 1, v1669))
                  {
                    memcpy(v401, v402, v1755);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1661 + 16))(v401, v402, v1669);
                    __swift_storeEnumTagSinglePayload((uint64_t)v401, 0, 1, v1669);
                  }
                  v428 = v1555;
                  v576 = 30;
                  goto LABEL_2137;
                case 0x1F:
                  *v365 = *v366;
                  v373 = 31;
                  goto LABEL_753;
                case 0x20:
                  v403 = v362;
                  *v365 = *v366;
                  *(_QWORD *)((((unint64_t)v356 + v1741 + v363) & v1686) + 8) = v366[1];
                  v404 = v208;
                  v405 = ((unint64_t)v365 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v406 = ((unint64_t)v366 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v407 = *(_QWORD *)(v406 + 24);
                  *(_QWORD *)(v405 + 24) = v407;
                  *(_QWORD *)(v405 + 32) = *(_QWORD *)(v406 + 32);
                  v408 = **(void (***)(unint64_t, unint64_t, uint64_t))(v407 - 8);
                  sub_21D7C4C20();
                  v408(v405, v406, v407);
                  v409 = (void *)((v1721 + v405) & v1690);
                  v410 = (const void *)((v1721 + v406) & v1690);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v410, 1, v404))
                  {
                    memcpy(v409, v410, v1755);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1661 + 16))(v409, v410, v404);
                    __swift_storeEnumTagSinglePayload((uint64_t)v409, 0, 1, v404);
                  }
                  v428 = v1555;
                  v362 = v403;
                  v672 = v1688;
                  v576 = 32;
                  goto LABEL_2138;
                case 0x21:
                  if (v1724)
                  {
                    v411 = v1624;
                    v412 = v1576;
                    if (v1617 >= v1624)
                    {
                      v413 = ((unint64_t)v357 + v1741 + v363) & v1686;
                      v411 = v1617;
                      v414 = v1619;
                    }
                    else
                    {
                      v413 = ((unint64_t)v366 + v1620) & v1576;
                      v414 = v1623;
                    }
                    v844 = __swift_getEnumTagSinglePayload(v413, v411, v414);
                    v673 = ~v1753;
                  }
                  else
                  {
                    v412 = v1576;
                    v673 = ~v1753;
                    if (!*((_BYTE *)v366 + v1720))
                      goto LABEL_1434;
                    v674 = (*((unsigned __int8 *)v366 + v1720) - 1) << v1675;
                    if (v1720 > 3)
                      v674 = 0;
                    if ((_DWORD)v1720)
                    {
                      if (v1720 <= 3)
                        v675 = v1720;
                      else
                        v675 = 4;
                      __asm { BR              X11 }
                    }
                    v844 = v674 + 1;
                  }
                  if (v844)
                  {
                    memcpy(v365, v366, v1736);
                    goto LABEL_1436;
                  }
LABEL_1434:
                  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1615 + 16))(v365, v366, v1619);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1616 + 16))(((unint64_t)v365 + v1620) & v412, ((unint64_t)v366 + v1620) & v412, v1623);
                  if (!v1724)
                    *((_BYTE *)v365 + v1720) = 0;
LABEL_1436:
                  v1076 = ((unint64_t)v365 + v1608) & 0xFFFFFFFFFFFFFFF8;
                  v1077 = ((unint64_t)v366 + v1608) & 0xFFFFFFFFFFFFFFF8;
                  v1078 = *(_QWORD *)(v1077 + 24);
                  *(_QWORD *)(v1076 + 24) = v1078;
                  *(_QWORD *)(v1076 + 32) = *(_QWORD *)(v1077 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v1078 - 8))(v1076, v1077);
                  v1079 = (void *)((v1721 + v1076) & v673);
                  v1080 = (const void *)((v1721 + v1077) & v673);
                  v428 = v1555;
                  if (__swift_getEnumTagSinglePayload((uint64_t)v1080, 1, v1669))
                  {
                    memcpy(v1079, v1080, v1755);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1661 + 16))(v1079, v1080, v1669);
                    __swift_storeEnumTagSinglePayload((uint64_t)v1079, 0, 1, v1669);
                  }
                  v1081 = (_QWORD *)(((unint64_t)v1079 + v1728) & 0xFFFFFFFFFFFFFFF8);
                  v1082 = (_QWORD *)(((unint64_t)v1080 + v1728) & 0xFFFFFFFFFFFFFFF8);
                  *v1081 = *v1082;
                  v1081[1] = v1082[1];
                  v1083 = (_QWORD *)(((unint64_t)v1081 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v1084 = (_QWORD *)(((unint64_t)v1082 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v1083 = *v1084;
                  v1083[1] = v1084[1];
                  v729 = 33;
LABEL_1440:
                  *((_BYTE *)v365 + v1688) = v729;
LABEL_1441:
                  sub_21D7C4C20();
                  goto LABEL_1643;
                case 0x22:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v366, 1, v208))
                  {
                    memcpy(v365, v366, v1755);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1661 + 16))(v365, v366, v208);
                    __swift_storeEnumTagSinglePayload((uint64_t)v365, 0, 1, v208);
                  }
                  v676 = ((unint64_t)v365 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v677 = ((unint64_t)v366 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v678 = *(_QWORD *)(v677 + 24);
                  *(_QWORD *)(v676 + 24) = v678;
                  *(_QWORD *)(v676 + 32) = *(_QWORD *)(v677 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v678 - 8))(v676, v677);
                  v679 = (v1737 + v676) & v1572;
                  v680 = (v1737 + v677) & v1572;
                  *(_BYTE *)v679 = *(_BYTE *)v680;
                  *(_QWORD *)(v679 + 8) = *(_QWORD *)(v680 + 8);
                  *(_QWORD *)(v679 + 16) = *(_QWORD *)(v680 + 0x10);
                  *(_QWORD *)(v679 + 24) = *(_QWORD *)(v680 + 0x18);
                  *(_QWORD *)(v679 + 32) = *(_QWORD *)(v680 + 0x20);
                  *(_QWORD *)(v679 + 40) = *(_QWORD *)(v680 + 0x28);
                  *(_QWORD *)(v679 + 48) = *(_QWORD *)(v680 + 0x30);
                  *(_QWORD *)(v679 + 56) = *(_QWORD *)(v680 + 0x38);
                  *(_QWORD *)(v679 + 64) = *(_QWORD *)(v680 + 0x40);
                  *(_QWORD *)(v679 + 72) = *(_QWORD *)(v680 + 0x48);
                  *(_QWORD *)(v679 + 80) = *(_QWORD *)(v680 + 0x50);
                  *(_QWORD *)(v679 + 88) = *(_QWORD *)(v680 + 0x58);
                  *(_QWORD *)(v679 + 96) = *(_QWORD *)(v680 + 0x60);
                  v681 = *(_QWORD *)(v680 + 0x68);
                  *(_BYTE *)(v679 + 112) = *(_BYTE *)(v680 + 0x70);
                  *(_QWORD *)(v679 + 104) = v681;
                  v682 = (void *)((v1621 + v679) & v1570);
                  v683 = (const void *)((v1621 + v680) & v1570);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (__swift_getEnumTagSinglePayload((uint64_t)v683, 1, v1625))
                  {
                    memcpy(v682, v683, v1716);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1607 + 16))(v682, v683, v1625);
                    __swift_storeEnumTagSinglePayload((uint64_t)v682, 0, 1, v1625);
                  }
                  v807 = (_QWORD *)((v1715 + v679) & 0xFFFFFFFFFFFFFFF8);
                  v808 = (_QWORD *)((v1715 + v680) & 0xFFFFFFFFFFFFFFF8);
                  *v807 = *v808;
                  v807[1] = v808[1];
                  v809 = ((unint64_t)v807 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v810 = ((unint64_t)v808 + 23) & 0xFFFFFFFFFFFFFFF8;
                  *(_QWORD *)v809 = *(_QWORD *)v810;
                  *(_QWORD *)(v809 + 8) = *(_QWORD *)(v810 + 8);
                  *(_BYTE *)(v809 + 16) = *(_BYTE *)(v810 + 16);
                  *(_BYTE *)(v809 + 17) = *(_BYTE *)(v810 + 17);
                  v811 = (void *)((v1582 + v809) & v1574);
                  v812 = (_BYTE *)((v1582 + v810) & v1574);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (v1724)
                  {
                    v813 = v1624;
                    if (v1617 >= v1624)
                    {
                      v814 = (uint64_t)v812;
                      v813 = v1617;
                      v815 = v1619;
                    }
                    else
                    {
                      v814 = (unint64_t)&v812[v1620] & v1576;
                      v815 = v1623;
                    }
                    v851 = __swift_getEnumTagSinglePayload(v814, v813, v815);
                    v428 = v1555;
                  }
                  else
                  {
                    v428 = v1555;
                    if (!v812[v1720])
                      goto LABEL_1626;
                    v840 = (v812[v1720] - 1) << v1675;
                    if (v1720 > 3)
                      v840 = 0;
                    if ((_DWORD)v1720)
                    {
                      if (v1720 <= 3)
                        v841 = v1720;
                      else
                        v841 = 4;
                      __asm { BR              X11 }
                    }
                    v851 = v840 + 1;
                  }
                  if (v851)
                  {
                    memcpy(v811, v812, v1736);
                    goto LABEL_1628;
                  }
LABEL_1626:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1615 + 16))(v811, v812, v1619);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1616 + 16))(((unint64_t)v811 + v1620) & v1576, (unint64_t)&v812[v1620] & v1576, v1623);
                  if (!v1724)
                    *((_BYTE *)v811 + v1720) = 0;
LABEL_1628:
                  v576 = 34;
                  goto LABEL_2137;
                case 0x23:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v366, 1, v208))
                  {
                    memcpy(v365, v366, v1755);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1661 + 16))(v365, v366, v208);
                    __swift_storeEnumTagSinglePayload((uint64_t)v365, 0, 1, v208);
                  }
                  v684 = ((unint64_t)v365 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v685 = ((unint64_t)v366 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v686 = *(_QWORD *)(v685 + 24);
                  *(_QWORD *)(v684 + 24) = v686;
                  *(_QWORD *)(v684 + 32) = *(_QWORD *)(v685 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v686 - 8))(v684, v685);
                  v687 = (v1737 + v684) & v1572;
                  v688 = (v1737 + v685) & v1572;
                  *(_BYTE *)v687 = *(_BYTE *)v688;
                  *(_QWORD *)(v687 + 8) = *(_QWORD *)(v688 + 8);
                  *(_QWORD *)(v687 + 16) = *(_QWORD *)(v688 + 0x10);
                  *(_QWORD *)(v687 + 24) = *(_QWORD *)(v688 + 0x18);
                  *(_QWORD *)(v687 + 32) = *(_QWORD *)(v688 + 0x20);
                  *(_QWORD *)(v687 + 40) = *(_QWORD *)(v688 + 0x28);
                  *(_QWORD *)(v687 + 48) = *(_QWORD *)(v688 + 0x30);
                  *(_QWORD *)(v687 + 56) = *(_QWORD *)(v688 + 0x38);
                  *(_QWORD *)(v687 + 64) = *(_QWORD *)(v688 + 0x40);
                  *(_QWORD *)(v687 + 72) = *(_QWORD *)(v688 + 0x48);
                  *(_QWORD *)(v687 + 80) = *(_QWORD *)(v688 + 0x50);
                  *(_QWORD *)(v687 + 88) = *(_QWORD *)(v688 + 0x58);
                  *(_QWORD *)(v687 + 96) = *(_QWORD *)(v688 + 0x60);
                  v689 = *(_QWORD *)(v688 + 0x68);
                  *(_BYTE *)(v687 + 112) = *(_BYTE *)(v688 + 0x70);
                  *(_QWORD *)(v687 + 104) = v689;
                  v690 = (void *)((v1621 + v687) & v1570);
                  v691 = (const void *)((v1621 + v688) & v1570);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (__swift_getEnumTagSinglePayload((uint64_t)v691, 1, v1625))
                  {
                    memcpy(v690, v691, v1716);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1607 + 16))(v690, v691, v1625);
                    __swift_storeEnumTagSinglePayload((uint64_t)v690, 0, 1, v1625);
                  }
                  v816 = (_QWORD *)((v1715 + v687) & 0xFFFFFFFFFFFFFFF8);
                  v817 = (_QWORD *)((v1715 + v688) & 0xFFFFFFFFFFFFFFF8);
                  *v816 = *v817;
                  v816[1] = v817[1];
                  v818 = ((unint64_t)v816 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v819 = ((unint64_t)v817 + 23) & 0xFFFFFFFFFFFFFFF8;
                  *(_QWORD *)v818 = *(_QWORD *)v819;
                  *(_QWORD *)(v818 + 8) = *(_QWORD *)(v819 + 8);
                  *(_BYTE *)(v818 + 16) = *(_BYTE *)(v819 + 16);
                  *(_BYTE *)(v818 + 17) = *(_BYTE *)(v819 + 17);
                  v820 = (_QWORD *)((v818 + 25) & 0xFFFFFFFFFFFFFFF8);
                  v821 = (_QWORD *)((v819 + 25) & 0xFFFFFFFFFFFFFFF8);
                  *v820 = *v821;
                  v820[1] = v821[1];
                  v822 = (_QWORD *)(((unint64_t)v820 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v823 = (_QWORD *)(((unint64_t)v821 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v822 = *v823;
                  v822[1] = v823[1];
                  v824 = (_QWORD *)(((unint64_t)v822 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v825 = (_QWORD *)(((unint64_t)v823 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v824 = *v825;
                  v824[1] = v825[1];
                  v826 = (_QWORD *)(((unint64_t)v824 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v827 = (_QWORD *)(((unint64_t)v825 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v826 = *v827;
                  v826[1] = v827[1];
                  v828 = (_QWORD *)(((unint64_t)v826 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v829 = (_QWORD *)(((unint64_t)v827 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v828 = *v829;
                  v830 = (void *)(((unint64_t)v828 + v1609) & v1574);
                  v831 = (_BYTE *)(((unint64_t)v829 + v1609) & v1574);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (v1724)
                  {
                    v832 = v1624;
                    v833 = v1720;
                    if (v1617 >= v1624)
                    {
                      v834 = (uint64_t)v831;
                      v832 = v1617;
                      v835 = v1619;
                    }
                    else
                    {
                      v834 = (unint64_t)&v831[v1620] & v1576;
                      v835 = v1623;
                    }
                    v852 = __swift_getEnumTagSinglePayload(v834, v832, v835);
                    v428 = v1555;
                  }
                  else
                  {
                    v833 = v1720;
                    v428 = v1555;
                    if (!v831[v1720])
                      goto LABEL_1631;
                    v842 = (v831[v1720] - 1) << v1675;
                    if (v1720 > 3)
                      v842 = 0;
                    if ((_DWORD)v1720)
                    {
                      if (v1720 <= 3)
                        v843 = v1720;
                      else
                        v843 = 4;
                      __asm { BR              X11 }
                    }
                    v852 = v842 + 1;
                  }
                  if (v852)
                  {
                    memcpy(v830, v831, v1736);
                    goto LABEL_1633;
                  }
LABEL_1631:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1615 + 16))(v830, v831, v1619);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1616 + 16))(((unint64_t)v830 + v1620) & v1576, (unint64_t)&v831[v1620] & v1576, v1623);
                  if (!v1724)
                    *((_BYTE *)v830 + v833) = 0;
LABEL_1633:
                  v1180 = (_QWORD *)(((unint64_t)v830 + v1608) & 0xFFFFFFFFFFFFFFF8);
                  v1181 = (_QWORD *)((unint64_t)&v831[v1608] & 0xFFFFFFFFFFFFFFF8);
                  *v1180 = *v1181;
                  v1180[1] = v1181[1];
                  v671 = 35;
                  goto LABEL_1642;
                case 0x24:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v366, 1, v208))
                  {
                    memcpy(v365, v366, v1755);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1661 + 16))(v365, v366, v208);
                    __swift_storeEnumTagSinglePayload((uint64_t)v365, 0, 1, v208);
                  }
                  v692 = ((unint64_t)v365 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v693 = ((unint64_t)v366 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v694 = *(_QWORD *)(v693 + 24);
                  *(_QWORD *)(v692 + 24) = v694;
                  *(_QWORD *)(v692 + 32) = *(_QWORD *)(v693 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v694 - 8))(v692, v693);
                  v695 = (_QWORD *)((v692 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v696 = (_QWORD *)((v693 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v695 = *v696;
                  v695[1] = v696[1];
                  v697 = ((unint64_t)v695 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v698 = ((unint64_t)v696 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v699 = *(_QWORD *)(v698 + 24);
                  sub_21D7C4C20();
                  v428 = v1555;
                  if (v699 < 0xFFFFFFFF)
                  {
                    v700 = *(_OWORD *)v698;
                    v701 = *(_OWORD *)(v698 + 16);
                    *(_QWORD *)(v697 + 32) = *(_QWORD *)(v698 + 32);
                    *(_OWORD *)v697 = v700;
                    *(_OWORD *)(v697 + 16) = v701;
                  }
                  else
                  {
                    *(_QWORD *)(v697 + 24) = v699;
                    *(_QWORD *)(v697 + 32) = *(_QWORD *)(v698 + 32);
                    (**(void (***)(unint64_t, unint64_t, unint64_t))(v699 - 8))(v697, v698, v699);
                  }
                  v576 = 36;
                  goto LABEL_2137;
                case 0x25:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v366, 1, v208))
                  {
                    memcpy(v365, v366, v1755);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1661 + 16))(v365, v366, v208);
                    __swift_storeEnumTagSinglePayload((uint64_t)v365, 0, 1, v208);
                  }
                  v428 = v1555;
                  v702 = ((unint64_t)v365 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v703 = ((unint64_t)v366 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v704 = *(_QWORD *)(v703 + 24);
                  *(_QWORD *)(v702 + 24) = v704;
                  *(_QWORD *)(v702 + 32) = *(_QWORD *)(v703 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v704 - 8))(v702, v703);
                  v705 = (_QWORD *)((v702 + 47) & 0xFFFFFFFFFFFFF8);
                  v706 = (_QWORD *)((v703 + 47) & 0xFFFFFFFFFFFFF8);
                  *v705 = *v706;
                  *(_QWORD *)(((unint64_t)v705 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v706
                                                                                               + 15) & 0xFFFFFFFFFFFFF8);
                  v628 = 37;
                  goto LABEL_922;
                case 0x26:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v366, 1, v208))
                  {
                    memcpy(v365, v366, v1755);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1661 + 16))(v365, v366, v208);
                    __swift_storeEnumTagSinglePayload((uint64_t)v365, 0, 1, v208);
                  }
                  v707 = ((unint64_t)v365 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v708 = ((unint64_t)v366 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v709 = *(_QWORD *)(v708 + 24);
                  *(_QWORD *)(v707 + 24) = v709;
                  *(_QWORD *)(v707 + 32) = *(_QWORD *)(v708 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v709 - 8))(v707, v708);
                  v710 = (_QWORD *)((v707 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v711 = (_QWORD *)((v708 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v710 = *v711;
                  v710[1] = v711[1];
                  v712 = (_QWORD *)(((unint64_t)v710 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v713 = (_QWORD *)(((unint64_t)v711 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v712 = *v713;
                  v712[1] = v713[1];
                  v714 = ((unint64_t)v712 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v715 = ((unint64_t)v713 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v716 = *(_QWORD *)(v715 + 24);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (v716 < 0xFFFFFFFF)
                  {
                    v717 = *(_OWORD *)v715;
                    v718 = *(_OWORD *)(v715 + 16);
                    *(_QWORD *)(v714 + 32) = *(_QWORD *)(v715 + 32);
                    *(_OWORD *)v714 = v717;
                    *(_OWORD *)(v714 + 16) = v718;
                  }
                  else
                  {
                    *(_QWORD *)(v714 + 24) = v716;
                    *(_QWORD *)(v714 + 32) = *(_QWORD *)(v715 + 32);
                    (**(void (***)(unint64_t, unint64_t, unint64_t))(v716 - 8))(v714, v715, v716);
                  }
                  v428 = v1555;
                  v719 = (v714 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v720 = (v715 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v721 = *(_QWORD *)(v720 + 24);
                  if (v721 < 0xFFFFFFFF)
                  {
                    v722 = *(_OWORD *)v720;
                    v723 = *(_OWORD *)(v720 + 16);
                    *(_QWORD *)(v719 + 32) = *(_QWORD *)(v720 + 32);
                    *(_OWORD *)v719 = v722;
                    *(_OWORD *)(v719 + 16) = v723;
                  }
                  else
                  {
                    *(_QWORD *)(v719 + 24) = v721;
                    *(_QWORD *)(v719 + 32) = *(_QWORD *)(v720 + 32);
                    (**(void (***)(void))(v721 - 8))();
                  }
                  v672 = v1688;
                  v576 = 38;
                  goto LABEL_2138;
                case 0x27:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v366, 1, v208))
                  {
                    memcpy(v365, v366, v1755);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1661 + 16))(v365, v366, v208);
                    __swift_storeEnumTagSinglePayload((uint64_t)v365, 0, 1, v208);
                  }
                  v428 = v1555;
                  v724 = ((unint64_t)v365 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v725 = ((unint64_t)v366 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v726 = *(_QWORD *)(v725 + 24);
                  *(_QWORD *)(v724 + 24) = v726;
                  *(_QWORD *)(v724 + 32) = *(_QWORD *)(v725 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v726 - 8))(v724, v725);
                  *(_QWORD *)((v724 + 47) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v725 + 47) & 0xFFFFFFFFFFFFF8);
                  v628 = 39;
LABEL_922:
                  *((_BYTE *)v365 + v1688) = v628;
                  goto LABEL_1643;
                case 0x28:
                  v415 = *(_QWORD *)((((unint64_t)v357 + v1741 + v363) & v1686) + 0x18);
                  *(_QWORD *)((((unint64_t)v356 + v1741 + v363) & v1686) + 0x18) = v415;
                  *(_QWORD *)((((unint64_t)v356 + v1741 + v363) & v1686) + 0x20) = *(_QWORD *)((((unint64_t)v357 + v1741 + v363) & v1686) + 0x20);
                  (**(void (***)(_QWORD *, _QWORD *))(v415 - 8))(v365, v366);
                  v416 = (void *)(((unint64_t)v365 + v1721) & v1690);
                  v417 = (const void *)(((unint64_t)v366 + v1721) & v1690);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v417, 1, v208))
                  {
                    memcpy(v416, v417, v1755);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1661 + 16))(v416, v417, v208);
                    __swift_storeEnumTagSinglePayload((uint64_t)v416, 0, 1, v208);
                  }
                  v428 = v1555;
                  *(_QWORD *)(((unint64_t)v416 + v1728) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v417
                                                                                                  + v1728) & 0xFFFFFFFFFFFFF8);
                  v671 = 40;
                  goto LABEL_1642;
                case 0x29:
                  v418 = *(_QWORD *)((((unint64_t)v357 + v1741 + v363) & v1686) + 0x18);
                  *(_QWORD *)((((unint64_t)v356 + v1741 + v363) & v1686) + 0x18) = v418;
                  *(_QWORD *)((((unint64_t)v356 + v1741 + v363) & v1686) + 0x20) = *(_QWORD *)((((unint64_t)v357 + v1741 + v363) & v1686) + 0x20);
                  (**(void (***)(_QWORD *, _QWORD *))(v418 - 8))(v365, v366);
                  v419 = (void *)(((unint64_t)v365 + v1721) & v1690);
                  v420 = (const void *)(((unint64_t)v366 + v1721) & v1690);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v420, 1, v208))
                  {
                    memcpy(v419, v420, v1755);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1661 + 16))(v419, v420, v208);
                    __swift_storeEnumTagSinglePayload((uint64_t)v419, 0, 1, v208);
                  }
                  v428 = v1555;
                  v727 = (_QWORD *)(((unint64_t)v419 + v1728) & 0xFFFFFFFFFFFFF8);
                  v728 = (_QWORD *)(((unint64_t)v420 + v1728) & 0xFFFFFFFFFFFFFFF8);
                  *v727 = *v728;
                  *(_QWORD *)(((unint64_t)v727 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v728
                                                                                               + 15) & 0xFFFFFFFFFFFFF8);
                  v729 = 41;
                  goto LABEL_1440;
                case 0x2A:
                  *v365 = *v366;
                  v373 = 42;
                  goto LABEL_753;
                case 0x2B:
                  v421 = *(_QWORD *)((((unint64_t)v357 + v1741 + v363) & v1686) + 0x18);
                  *(_QWORD *)((((unint64_t)v356 + v1741 + v363) & v1686) + 0x18) = v421;
                  *(_QWORD *)((((unint64_t)v356 + v1741 + v363) & v1686) + 0x20) = *(_QWORD *)((((unint64_t)v357 + v1741 + v363) & v1686) + 0x20);
                  (**(void (***)(_QWORD *, _QWORD *))(v421 - 8))(v365, v366);
                  v422 = (void *)(((unint64_t)v365 + v1721) & v1690);
                  v423 = v208;
                  v424 = (const void *)(((unint64_t)v366 + v1721) & v1690);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v424, 1, v423))
                  {
                    memcpy(v422, v424, v1755);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1661 + 16))(v422, v424, v423);
                    __swift_storeEnumTagSinglePayload((uint64_t)v422, 0, 1, v423);
                  }
                  v428 = v1555;
                  *((_BYTE *)v365 + v1688) = 43;
                  goto LABEL_2139;
                case 0x2C:
                  *v365 = *v366;
                  v373 = 44;
                  goto LABEL_753;
                case 0x2D:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v366, 1, v208))
                  {
                    memcpy(v365, v366, v1755);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1661 + 16))(v365, v366, v208);
                    __swift_storeEnumTagSinglePayload((uint64_t)v365, 0, 1, v208);
                  }
                  v730 = ((unint64_t)v365 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v731 = ((unint64_t)v366 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v732 = *(_QWORD *)(v731 + 24);
                  *(_QWORD *)(v730 + 24) = v732;
                  *(_QWORD *)(v730 + 32) = *(_QWORD *)(v731 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v732 - 8))(v730, v731);
                  v733 = (v730 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v734 = (v731 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v735 = *(_QWORD *)(v734 + 24);
                  v1562 = v362;
                  if (v735 < 0xFFFFFFFF)
                  {
                    v736 = *(_OWORD *)v734;
                    v737 = *(_OWORD *)(v734 + 16);
                    *(_QWORD *)(v733 + 32) = *(_QWORD *)(v734 + 32);
                    *(_OWORD *)v733 = v736;
                    *(_OWORD *)(v733 + 16) = v737;
                  }
                  else
                  {
                    *(_QWORD *)(v733 + 24) = v735;
                    *(_QWORD *)(v733 + 32) = *(_QWORD *)(v734 + 32);
                    (**(void (***)(unint64_t, unint64_t))(v735 - 8))((v730 + 47) & 0xFFFFFFFFFFFFFFF8, v734);
                  }
                  v428 = v1555;
                  v738 = (_QWORD *)((v733 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v739 = (_QWORD *)((v734 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v738 = *v739;
                  v738[1] = v739[1];
                  v740 = (_QWORD *)(((unint64_t)v738 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v741 = (_QWORD *)(((unint64_t)v739 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v740 = *v741;
                  v740[1] = v741[1];
                  v742 = (_QWORD *)(((unint64_t)v740 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v743 = (_QWORD *)(((unint64_t)v741 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v742 = *v743;
                  v742[1] = v743[1];
                  v744 = (_QWORD *)(((unint64_t)v742 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v745 = (_QWORD *)(((unint64_t)v743 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v744 = *v745;
                  v744[1] = v745[1];
                  v746 = ((unint64_t)v744 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v747 = ((unint64_t)v745 + 23) & 0xFFFFFFFFFFFFFFF8;
                  *(_QWORD *)v746 = *(_QWORD *)v747;
                  *(_QWORD *)(v746 + 8) = *(_QWORD *)(v747 + 8);
                  *(_BYTE *)(v746 + 16) = *(_BYTE *)(v747 + 16);
                  v748 = (_QWORD *)(((unint64_t)v744 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v749 = (_QWORD *)(((unint64_t)v745 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v748 = *v749;
                  v750 = (void *)(((unint64_t)v748 + v1609) & v1574);
                  v751 = (_BYTE *)(((unint64_t)v749 + v1609) & v1574);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (v1724)
                  {
                    v752 = v1624;
                    v753 = v1720;
                    v754 = v1570;
                    if (v1617 >= v1624)
                    {
                      v755 = (uint64_t)v751;
                      v752 = v1617;
                      v756 = v1619;
                    }
                    else
                    {
                      v755 = (unint64_t)&v751[v1620] & v1576;
                      v756 = v1623;
                    }
                    v849 = __swift_getEnumTagSinglePayload(v755, v752, v756);
                  }
                  else
                  {
                    v753 = v1720;
                    v754 = v1570;
                    if (!v751[v1720])
                      goto LABEL_1912;
                    v836 = (v751[v1720] - 1) << v1675;
                    if (v1720 > 3)
                      v836 = 0;
                    if ((_DWORD)v1720)
                    {
                      if (v1720 <= 3)
                        v837 = v1720;
                      else
                        v837 = 4;
                      __asm { BR              X11 }
                    }
                    v849 = v836 + 1;
                  }
                  if (v849)
                  {
                    memcpy(v750, v751, v1736);
                    goto LABEL_1914;
                  }
LABEL_1912:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1615 + 16))(v750, v751, v1619);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1616 + 16))(((unint64_t)v750 + v1620) & v1576, (unint64_t)&v751[v1620] & v1576, v1623);
                  if (!v1724)
                    *((_BYTE *)v750 + v753) = 0;
LABEL_1914:
                  v1314 = (void *)(((unint64_t)v750 + v1602) & v1574);
                  v1315 = (_BYTE *)((unint64_t)&v751[v1602] & v1574);
                  v1316 = v1624;
                  if (v1724)
                  {
                    if (v1617 >= v1624)
                    {
                      v1317 = (uint64_t)v1315;
                      v1316 = v1617;
                      v1318 = v1619;
                    }
                    else
                    {
                      v1317 = (unint64_t)&v1315[v1620] & v1576;
                      v1318 = v1623;
                    }
                    v1321 = __swift_getEnumTagSinglePayload(v1317, v1316, v1318);
                  }
                  else
                  {
                    if (!v1315[v753])
                      goto LABEL_1953;
                    v1319 = (v1315[v753] - 1) << v1675;
                    if (v753 > 3)
                      v1319 = 0;
                    if ((_DWORD)v753)
                    {
                      if (v753 <= 3)
                        v1320 = v753;
                      else
                        v1320 = 4;
                      __asm { BR              X11 }
                    }
                    v1321 = v1319 + 1;
                  }
                  if (v1321)
                  {
                    memcpy(v1314, v1315, v1736);
                    goto LABEL_1955;
                  }
LABEL_1953:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1615 + 16))(v1314, v1315, v1619);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1616 + 16))(((unint64_t)v1314 + v1620) & v1576, (unint64_t)&v1315[v1620] & v1576, v1623);
                  if (!v1724)
                    *((_BYTE *)v1314 + v753) = 0;
LABEL_1955:
                  v1334 = (_QWORD *)(((unint64_t)v1314 + v1727) & v1758);
                  v1335 = (uint64_t *)((unint64_t)&v1315[v1727] & v1758);
                  if ((v1624 & 0x80000000) != 0)
                  {
                    v1337 = __swift_getEnumTagSinglePayload(((unint64_t)v1335 + v1606) & v1576, v1624, v1623);
                  }
                  else
                  {
                    v1336 = *v1335;
                    if ((unint64_t)*v1335 >= 0xFFFFFFFF)
                      LODWORD(v1336) = -1;
                    v1337 = v1336 + 1;
                  }
                  v1338 = v1713;
                  if (v1337)
                  {
                    memcpy(v1334, v1335, v1713);
                  }
                  else
                  {
                    *v1334 = *v1335;
                    v1339 = v366;
                    v1340 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1616 + 16);
                    sub_21D7C4C20();
                    v1338 = v1713;
                    v1340(((unint64_t)v1334 + v1606) & v1576, ((unint64_t)v1335 + v1606) & v1576, v1623);
                    v366 = v1339;
                  }
                  v1341 = (_QWORD *)(((unint64_t)v1334 + v1590) & v1758);
                  v1342 = (uint64_t *)(((unint64_t)v1335 + v1590) & v1758);
                  if ((v1624 & 0x80000000) != 0)
                  {
                    v1344 = __swift_getEnumTagSinglePayload(((unint64_t)v1342 + v1606) & v1576, v1624, v1623);
                  }
                  else
                  {
                    v1343 = *v1342;
                    if ((unint64_t)*v1342 >= 0xFFFFFFFF)
                      LODWORD(v1343) = -1;
                    v1344 = v1343 + 1;
                  }
                  if (v1344)
                  {
                    memcpy(v1341, v1342, v1338);
                  }
                  else
                  {
                    *v1341 = *v1342;
                    v1345 = v366;
                    v1346 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1616 + 16);
                    sub_21D7C4C20();
                    v1338 = v1713;
                    v1346(((unint64_t)v1341 + v1606) & v1576, ((unint64_t)v1342 + v1606) & v1576, v1623);
                    v366 = v1345;
                  }
                  v1347 = (char *)v1341 + v1338;
                  *v1347 = *((_BYTE *)v1342 + v1338);
                  v1347[1] = *((_BYTE *)v1342 + v1338 + 1);
                  v1348 = (_QWORD *)(((unint64_t)v1341 + v1338 + 9) & 0xFFFFFFFFFFFFFFF8);
                  v1349 = (_QWORD *)(((unint64_t)v1342 + v1338 + 9) & 0xFFFFFFFFFFFFFFF8);
                  *v1348 = *v1349;
                  v1348[1] = v1349[1];
                  v1350 = ((unint64_t)v1348 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v1351 = ((unint64_t)v1349 + 23) & 0xFFFFFFFFFFFFFFF8;
                  *(_QWORD *)v1350 = *(_QWORD *)v1351;
                  *(_QWORD *)(v1350 + 8) = *(_QWORD *)(v1351 + 8);
                  *(_BYTE *)(v1350 + 16) = *(_BYTE *)(v1351 + 16);
                  v1352 = ((unint64_t)v1348 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1353 = ((unint64_t)v1349 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1354 = *(_QWORD *)(v1353 + 24);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (v1354 < 0xFFFFFFFF)
                  {
                    v1355 = *(_OWORD *)v1353;
                    v1356 = *(_OWORD *)(v1353 + 16);
                    *(_QWORD *)(v1352 + 32) = *(_QWORD *)(v1353 + 32);
                    *(_OWORD *)v1352 = v1355;
                    *(_OWORD *)(v1352 + 16) = v1356;
                  }
                  else
                  {
                    *(_QWORD *)(v1352 + 24) = v1354;
                    *(_QWORD *)(v1352 + 32) = *(_QWORD *)(v1353 + 32);
                    (**(void (***)(unint64_t, unint64_t, unint64_t))(v1354 - 8))(v1352, v1353, v1354);
                  }
                  v1357 = (v1737 + v1352) & v1572;
                  v1358 = (v1737 + v1353) & v1572;
                  if (v1618 >= 0x7FFFFFFF)
                  {
                    v1362 = (const void *)((v1621 + v1358) & v754);
                    if (__swift_getEnumTagSinglePayload((uint64_t)v1362, v1613, v1625) <= 1)
                    {
                      v1751 = v366;
                      v1705 = v365;
                      v1360 = (char *)(v1358 + 8);
                      v1361 = v1621;
LABEL_1981:
                      *(_BYTE *)v1357 = *(_BYTE *)v1358;
                      *(_QWORD *)(v1357 + 8) = *(_QWORD *)(v1358 + 8);
                      *(_QWORD *)(v1357 + 16) = *((_QWORD *)v1360 + 1);
                      *(_QWORD *)(v1357 + 24) = *((_QWORD *)v1360 + 2);
                      *(_QWORD *)(v1357 + 32) = *((_QWORD *)v1360 + 3);
                      *(_QWORD *)(v1357 + 40) = *((_QWORD *)v1360 + 4);
                      *(_QWORD *)(v1357 + 48) = *((_QWORD *)v1360 + 5);
                      *(_QWORD *)(v1357 + 56) = *((_QWORD *)v1360 + 6);
                      *(_QWORD *)(v1357 + 64) = *((_QWORD *)v1360 + 7);
                      *(_QWORD *)(v1357 + 72) = *((_QWORD *)v1360 + 8);
                      *(_QWORD *)(v1357 + 80) = *((_QWORD *)v1360 + 9);
                      *(_QWORD *)(v1357 + 88) = *((_QWORD *)v1360 + 10);
                      *(_QWORD *)(v1357 + 96) = *((_QWORD *)v1360 + 11);
                      v1363 = *((_QWORD *)v1360 + 12);
                      *(_BYTE *)(v1357 + 112) = v1360[104];
                      *(_QWORD *)(v1357 + 104) = v1363;
                      v1364 = (void *)((v1361 + v1357) & v754);
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      if (__swift_getEnumTagSinglePayload((uint64_t)v1362, 1, v1625))
                      {
                        memcpy(v1364, v1362, v1716);
                      }
                      else
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v1607 + 16))(v1364, v1362, v1625);
                        __swift_storeEnumTagSinglePayload((uint64_t)v1364, 0, 1, v1625);
                      }
                      v428 = v1555;
                      v1365 = v1718;
                      v365 = v1705;
                      v366 = v1751;
LABEL_1986:
                      v1366 = (_QWORD *)(((v1357 | 7) + v1365) & 0xFFFFFFFFFFFFFFF8);
                      v1367 = (_QWORD *)(((v1358 | 7) + v1365) & 0xFFFFFFFFFFFFFFF8);
                      *v1366 = *v1367;
                      v1366[1] = v1367[1];
                      *((_BYTE *)v365 + v1688) = 45;
                      sub_21D7C4C20();
                      goto LABEL_1987;
                    }
                  }
                  else
                  {
                    v1359 = *(_QWORD *)(v1358 + 16);
                    if (v1359 >= 0xFFFFFFFF)
                      LODWORD(v1359) = -1;
                    if ((int)v1359 - 1 < 0)
                    {
                      v1751 = v366;
                      v1705 = v365;
                      v1360 = (char *)(v1358 + 8);
                      v1361 = v1621;
                      v1362 = (const void *)((v1621 + v1358) & v754);
                      goto LABEL_1981;
                    }
                  }
                  v1365 = v1718;
                  memcpy((void *)v1357, (const void *)v1358, v1718);
                  goto LABEL_1986;
                case 0x2E:
                  *v365 = *v366;
                  v373 = 46;
                  goto LABEL_753;
                case 0x2F:
                  *v365 = *v366;
                  v373 = 47;
                  goto LABEL_753;
                case 0x30:
                  *v365 = *v366;
                  v373 = 48;
                  goto LABEL_753;
                case 0x31:
                  *v365 = *v366;
                  v373 = 49;
                  goto LABEL_753;
                case 0x32:
                  v425 = *(_QWORD *)((((unint64_t)v357 + v1741 + v363) & v1686) + 0x18);
                  *(_QWORD *)((((unint64_t)v356 + v1741 + v363) & v1686) + 0x18) = v425;
                  *(_QWORD *)((((unint64_t)v356 + v1741 + v363) & v1686) + 0x20) = *(_QWORD *)((((unint64_t)v357 + v1741 + v363) & v1686) + 0x20);
                  (**(void (***)(_QWORD *, _QWORD *))(v425 - 8))(v365, v366);
                  v426 = (void *)(((unint64_t)v365 + v1721) & v1690);
                  v427 = (const void *)(((unint64_t)v366 + v1721) & v1690);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v427, 1, v208))
                  {
                    memcpy(v426, v427, v1755);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1661 + 16))(v426, v427, v208);
                    __swift_storeEnumTagSinglePayload((uint64_t)v426, 0, 1, v208);
                  }
                  v757 = (_QWORD *)(((unint64_t)v426 + v1728) & 0xFFFFFFFFFFFFFFF8);
                  v758 = (_QWORD *)(((unint64_t)v427 + v1728) & 0xFFFFFFFFFFFFFFF8);
                  *v757 = *v758;
                  v757[1] = v758[1];
                  v759 = ((unint64_t)v757 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v760 = ((unint64_t)v758 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v761 = *(_QWORD *)(v760 + 24);
                  sub_21D7C4C20();
                  if (v761 < 0xFFFFFFFF)
                  {
                    v762 = *(_OWORD *)v760;
                    v763 = *(_OWORD *)(v760 + 16);
                    *(_QWORD *)(v759 + 32) = *(_QWORD *)(v760 + 32);
                    *(_OWORD *)v759 = v762;
                    *(_OWORD *)(v759 + 16) = v763;
                  }
                  else
                  {
                    *(_QWORD *)(v759 + 24) = v761;
                    *(_QWORD *)(v759 + 32) = *(_QWORD *)(v760 + 32);
                    (**(void (***)(unint64_t, unint64_t, unint64_t))(v761 - 8))(v759, v760, v761);
                  }
                  v428 = v1555;
                  v764 = (_QWORD *)((v759 + 47) & 0xFFFFFFFFFFFFF8);
                  v765 = (_QWORD *)((v760 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v764 = *v765;
                  v766 = (_QWORD *)(((unint64_t)v764 + 15) & 0xFFFFFFFFFFFFFFF8);
                  v767 = (_QWORD *)(((unint64_t)v765 + 15) & 0xFFFFFFFFFFFFFFF8);
                  *v766 = *v767;
                  v766[1] = v767[1];
                  v768 = (char *)(((unint64_t)v766 + v1710) & v1568);
                  v769 = (char *)(((unint64_t)v767 + v1710) & v1568);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  v1742 = v366;
                  if (v1611 < 0x7FFFFFFF)
                  {
                    v770 = v1669;
                    if (*(_QWORD *)(((unint64_t)&v769[v1728] & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                      goto LABEL_942;
                  }
                  else
                  {
                    v770 = v1669;
                    if (__swift_getEnumTagSinglePayload((uint64_t)v769, v1719, v1669) >= 2)
                    {
LABEL_942:
                      v771 = v362;
                      v772 = v1723;
                      memcpy(v768, v769, v1723);
                      goto LABEL_1071;
                    }
                  }
                  v771 = v362;
                  if (__swift_getEnumTagSinglePayload((uint64_t)v769, 1, v770))
                  {
                    memcpy(v768, v769, v1755);
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(v1661 + 16))(v768, v769, v770);
                    __swift_storeEnumTagSinglePayload((uint64_t)v768, 0, 1, v770);
                  }
                  v870 = (unint64_t)&v768[v1728] & 0xFFFFFFFFFFFFFFF8;
                  v871 = (unint64_t)&v769[v1728] & 0xFFFFFFFFFFFFFFF8;
                  v872 = *(_QWORD *)(v871 + 24);
                  *(_QWORD *)(v870 + 24) = v872;
                  *(_QWORD *)(v870 + 32) = *(_QWORD *)(v871 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v872 - 8))(v870, v871);
                  v873 = (v870 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v874 = (v871 + 47) & 0xFFFFFFFFFFFFFFF8;
                  *(_QWORD *)v873 = *(_QWORD *)v874;
                  *(_QWORD *)(v873 + 8) = *(_QWORD *)(v874 + 8);
                  *(_BYTE *)(v873 + 16) = *(_BYTE *)(v874 + 16);
                  sub_21D7C4C20();
                  v772 = v1723;
                  if (v1719)
                    v772 = ((((v1656 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 17;
LABEL_1071:
                  v875 = &v768[v772];
                  v876 = &v769[v772];
                  *(_QWORD *)(v875 + 7) = *(_QWORD *)&v769[v772 + 7];
                  *(_QWORD *)(v875 + 15) = *(_QWORD *)&v769[v772 + 15];
                  v877 = (_QWORD *)((unint64_t)&v768[v772 + v1589] & v1572);
                  v878 = (_QWORD *)((unint64_t)&v876[v1589] & v1572);
                  sub_21D7C4C20();
                  if (v1618 >= 0x7FFFFFFF)
                  {
                    v882 = ((unint64_t)v878 + v1621) & v1570;
                    if (__swift_getEnumTagSinglePayload(v882, v1613, v1625) <= 1)
                    {
                      v880 = (char *)(v878 + 1);
                      v881 = v1621;
                      goto LABEL_1078;
                    }
                  }
                  else
                  {
                    v879 = v878[2];
                    if (v879 >= 0xFFFFFFFF)
                      LODWORD(v879) = -1;
                    if ((int)v879 - 1 < 0)
                    {
                      v880 = (char *)(v878 + 1);
                      v881 = v1621;
                      v882 = ((unint64_t)v878 + v1621) & v1570;
LABEL_1078:
                      *(_BYTE *)v877 = *(_BYTE *)v878;
                      v877[1] = v878[1];
                      v877[2] = *((_QWORD *)v880 + 1);
                      v877[3] = *((_QWORD *)v880 + 2);
                      v877[4] = *((_QWORD *)v880 + 3);
                      v877[5] = *((_QWORD *)v880 + 4);
                      v877[6] = *((_QWORD *)v880 + 5);
                      v877[7] = *((_QWORD *)v880 + 6);
                      v877[8] = *((_QWORD *)v880 + 7);
                      v877[9] = *((_QWORD *)v880 + 8);
                      v877[10] = *((_QWORD *)v880 + 9);
                      v877[11] = *((_QWORD *)v880 + 10);
                      v877[12] = *((_QWORD *)v880 + 11);
                      v883 = *((_QWORD *)v880 + 12);
                      *((_BYTE *)v877 + 112) = v880[104];
                      v877[13] = v883;
                      v884 = ((unint64_t)v877 + v881) & v1570;
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      if (!__swift_getEnumTagSinglePayload(v882, 1, v1625))
                      {
                        (*(void (**)(uint64_t, uint64_t, uint64_t))(v1607 + 16))(v884, v882, v1625);
                        __swift_storeEnumTagSinglePayload(v884, 0, 1, v1625);
                        goto LABEL_1082;
                      }
                      v885 = (void *)v884;
                      v886 = (const void *)v882;
                      v887 = v1716;
LABEL_1081:
                      memcpy(v885, v886, v887);
LABEL_1082:
                      v362 = v771;
                      v463 = 50;
LABEL_1744:
                      *((_BYTE *)v365 + v1688) = v463;
LABEL_1745:
                      v366 = v1742;
                      goto LABEL_2139;
                    }
                  }
                  v885 = v877;
                  v886 = v878;
                  v887 = v1718;
                  goto LABEL_1081;
                case 0x33:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v366, 1, v208))
                  {
                    memcpy(v365, v366, v1755);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1661 + 16))(v365, v366, v208);
                    __swift_storeEnumTagSinglePayload((uint64_t)v365, 0, 1, v208);
                  }
                  v1700 = (_QWORD *)(((unint64_t)v356 + v1741 + v363) & v1686);
                  v773 = ((unint64_t)v365 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v774 = ((unint64_t)v366 + v1728) & 0xFFFFFFFFFFFFFFF8;
                  v775 = *(_QWORD *)(v774 + 24);
                  *(_QWORD *)(v773 + 24) = v775;
                  *(_QWORD *)(v773 + 32) = *(_QWORD *)(v774 + 32);
                  (**(void (***)(unint64_t, unint64_t))(v775 - 8))(v773, v774);
                  v776 = (v773 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v777 = (v774 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v778 = *(_QWORD *)(v777 + 24);
                  v1564 = v362;
                  if (v778 < 0xFFFFFFFF)
                  {
                    v779 = *(_OWORD *)v777;
                    v780 = *(_OWORD *)(v777 + 16);
                    *(_QWORD *)(v776 + 32) = *(_QWORD *)(v777 + 32);
                    *(_OWORD *)v776 = v779;
                    *(_OWORD *)(v776 + 16) = v780;
                  }
                  else
                  {
                    *(_QWORD *)(v776 + 24) = v778;
                    *(_QWORD *)(v776 + 32) = *(_QWORD *)(v777 + 32);
                    (**(void (***)(unint64_t, unint64_t))(v778 - 8))((v773 + 47) & 0xFFFFFFFFFFFFFFF8, v777);
                  }
                  v428 = v1555;
                  v781 = v366;
                  v782 = (_QWORD *)((v776 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v783 = (_QWORD *)((v777 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v782 = *v783;
                  v782[1] = v783[1];
                  v784 = (_QWORD *)(((unint64_t)v782 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v785 = (_QWORD *)(((unint64_t)v783 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v784 = *v785;
                  v784[1] = v785[1];
                  v786 = (_QWORD *)(((unint64_t)v784 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v787 = (_QWORD *)(((unint64_t)v785 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v786 = *v787;
                  v788 = (_QWORD *)(((unint64_t)v786 + v1580) & v1740);
                  v789 = (_QWORD *)(((unint64_t)v787 + v1580) & v1740);
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  sub_21D7C4C20();
                  if (v1605 > 0x7FFFFFFE)
                  {
                    v792 = (_QWORD *)(((unint64_t)v789 + 23) & 0xFFFFFFFFFFFFFFF8);
                    v793 = ((unint64_t)v792 + 23) & 0xFFFFFFFFFFFFFFF8;
                    if (!__swift_getEnumTagSinglePayload((v1717 + v793 + 33) & v1673, v1605, v1603))
                    {
                      v791 = v1555;
                      goto LABEL_1084;
                    }
                  }
                  else
                  {
                    v790 = v789[1];
                    if (v790 >= 0xFFFFFFFF)
                      LODWORD(v790) = -1;
                    if ((v790 + 1) <= 1)
                    {
                      v791 = v1555;
                      v792 = (_QWORD *)(((unint64_t)v789 + 23) & 0xFFFFFFFFFFFFFFF8);
                      v793 = ((unint64_t)v792 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_1084:
                      *v788 = *v789;
                      v788[1] = v789[1];
                      v888 = (_QWORD *)(((unint64_t)v788 + 23) & 0xFFFFFFFFFFFFFFF8);
                      *v888 = *v792;
                      v888[1] = v792[1];
                      v889 = ((unint64_t)v888 + 23) & 0xFFFFFFFFFFFFFFF8;
                      *(_QWORD *)v889 = *(_QWORD *)v793;
                      *(_QWORD *)(v889 + 8) = *(_QWORD *)(v793 + 8);
                      *(_BYTE *)(v889 + 16) = *(_BYTE *)(v793 + 16);
                      v890 = ((unint64_t)v888 + 47) & 0xFFFFFFFFFFFFFFF8;
                      v891 = ((unint64_t)v792 + 47) & 0xFFFFFFFFFFFFFFF8;
                      v892 = *(void **)v891;
                      *(_QWORD *)v890 = *(_QWORD *)v891;
                      *(_BYTE *)(v890 + 8) = *(_BYTE *)(v891 + 8);
                      v893 = (v1717 + 9 + v890) & v1673;
                      v894 = (v1717 + 9 + v891) & v1673;
                      v895 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1709 + 16);
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      v896 = v892;
                      v895(v893, v894, v1603);
                      v428 = v791;
LABEL_1085:
                      v897 = (void *)(((unint64_t)v788 + v1584) & v1574);
                      v898 = (_BYTE *)(((unint64_t)v789 + v1584) & v1574);
                      v899 = v1624;
                      v366 = v781;
                      if (v1724)
                      {
                        if (v1617 >= v1624)
                        {
                          v900 = (uint64_t)v898;
                          v899 = v1617;
                          v901 = v1619;
                        }
                        else
                        {
                          v900 = (unint64_t)&v898[v1620] & v1576;
                          v901 = v1623;
                        }
                        v904 = __swift_getEnumTagSinglePayload(v900, v899, v901);
                      }
                      else
                      {
                        if (!v898[v1720])
                          goto LABEL_1930;
                        v902 = (v898[v1720] - 1) << v1675;
                        if (v1720 > 3)
                          v902 = 0;
                        if ((_DWORD)v1720)
                        {
                          if (v1720 <= 3)
                            v903 = v1720;
                          else
                            v903 = 4;
                          __asm { BR              X11 }
                        }
                        v904 = v902 + 1;
                      }
                      if (v904)
                      {
                        memcpy(v897, v898, v1736);
                        goto LABEL_1932;
                      }
LABEL_1930:
                      (*(void (**)(void *, _BYTE *, uint64_t))(v1615 + 16))(v897, v898, v1619);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1616 + 16))(((unint64_t)v897 + v1620) & v1576, (unint64_t)&v898[v1620] & v1576, v1623);
                      if (!v1724)
                        *((_BYTE *)v897 + v1720) = 0;
LABEL_1932:
                      v1322 = (_QWORD *)(((unint64_t)v897 + v1608) & 0xFFFFFFFFFFFFFFF8);
                      v1323 = (_QWORD *)((unint64_t)&v898[v1608] & 0xFFFFFFFFFFFFFFF8);
                      *v1322 = *v1323;
                      v1322[1] = v1323[1];
                      v1324 = ((unint64_t)v1322 + 23) & 0xFFFFFFFFFFFFFFF8;
                      v1325 = ((unint64_t)v1323 + 23) & 0xFFFFFFFFFFFFFFF8;
                      *(_QWORD *)v1324 = *(_QWORD *)v1325;
                      *(_BYTE *)(v1324 + 8) = *(_BYTE *)(v1325 + 8);
                      v1326 = (void *)((v1588 + v1324) & v1574);
                      v1327 = (_BYTE *)((v1588 + v1325) & v1574);
                      sub_21D7C4C20();
                      sub_21D7C4C20();
                      if (v1724)
                      {
                        v1328 = v1624;
                        if (v1617 >= v1624)
                        {
                          v1329 = (uint64_t)v1327;
                          v1328 = v1617;
                          v1330 = v1619;
                        }
                        else
                        {
                          v1329 = (unint64_t)&v1327[v1620] & v1576;
                          v1330 = v1623;
                        }
                        v1333 = __swift_getEnumTagSinglePayload(v1329, v1328, v1330);
                      }
                      else
                      {
                        if (!v1327[v1720])
                          goto LABEL_1990;
                        v1331 = (v1327[v1720] - 1) << v1675;
                        if (v1720 > 3)
                          v1331 = 0;
                        if ((_DWORD)v1720)
                        {
                          if (v1720 <= 3)
                            v1332 = v1720;
                          else
                            v1332 = 4;
                          __asm { BR              X11 }
                        }
                        v1333 = v1331 + 1;
                      }
                      if (v1333)
                      {
                        memcpy(v1326, v1327, v1736);
                        goto LABEL_1992;
                      }
LABEL_1990:
                      (*(void (**)(void *, _BYTE *, uint64_t))(v1615 + 16))(v1326, v1327, v1619);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1616 + 16))(((unint64_t)v1326 + v1620) & v1576, (unint64_t)&v1327[v1620] & v1576, v1623);
                      if (!v1724)
                        *((_BYTE *)v1326 + v1720) = 0;
LABEL_1992:
                      v1368 = (_QWORD *)(((unint64_t)v1326 + v1608) & 0xFFFFFFFFFFFFFFF8);
                      v1369 = (_QWORD *)((unint64_t)&v1327[v1608] & 0xFFFFFFFFFFFFFFF8);
                      *v1368 = *v1369;
                      v1368[1] = v1369[1];
                      v1370 = (void *)(((unint64_t)v1368 + v1725) & v1574);
                      v1371 = (_BYTE *)(((unint64_t)v1369 + v1725) & v1574);
                      sub_21D7C4C20();
                      if (v1724)
                      {
                        v1372 = v1624;
                        if (v1617 >= v1624)
                        {
                          v1373 = (uint64_t)v1371;
                          v1372 = v1617;
                          v1374 = v1619;
                        }
                        else
                        {
                          v1373 = (unint64_t)&v1371[v1620] & v1576;
                          v1374 = v1623;
                        }
                        v1377 = __swift_getEnumTagSinglePayload(v1373, v1372, v1374);
                      }
                      else
                      {
                        if (!v1371[v1720])
                          goto LABEL_2008;
                        v1375 = (v1371[v1720] - 1) << v1675;
                        if (v1720 > 3)
                          v1375 = 0;
                        if ((_DWORD)v1720)
                        {
                          if (v1720 <= 3)
                            v1376 = v1720;
                          else
                            v1376 = 4;
                          __asm { BR              X11 }
                        }
                        v1377 = v1375 + 1;
                      }
                      if (v1377)
                      {
                        memcpy(v1370, v1371, v1736);
                        goto LABEL_2010;
                      }
LABEL_2008:
                      (*(void (**)(void *, _BYTE *, uint64_t))(v1615 + 16))(v1370, v1371, v1619);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1616 + 16))(((unint64_t)v1370 + v1620) & v1576, (unint64_t)&v1371[v1620] & v1576, v1623);
                      if (!v1724)
                        *((_BYTE *)v1370 + v1720) = 0;
LABEL_2010:
                      v1378 = (_QWORD *)(((unint64_t)v1370 + v1593) & v1572);
                      v1379 = (_QWORD *)((unint64_t)&v1371[v1593] & v1572);
                      if (v1618 >= 0x7FFFFFFF)
                      {
                        v1384 = (const void *)(((unint64_t)v1379 + v1621) & v1570);
                        if (__swift_getEnumTagSinglePayload((uint64_t)v1384, v1613, v1625) <= 1)
                        {
                          v1381 = v428;
                          v1382 = (char *)(v1379 + 1);
                          v1383 = v1621;
                          goto LABEL_2017;
                        }
                      }
                      else
                      {
                        v1380 = v1379[2];
                        if (v1380 >= 0xFFFFFFFF)
                          LODWORD(v1380) = -1;
                        if ((int)v1380 - 1 < 0)
                        {
                          v1381 = v428;
                          v1382 = (char *)(v1379 + 1);
                          v1383 = v1621;
                          v1384 = (const void *)(((unint64_t)v1379 + v1621) & v1570);
LABEL_2017:
                          *(_BYTE *)v1378 = *(_BYTE *)v1379;
                          v1378[1] = v1379[1];
                          v1378[2] = *((_QWORD *)v1382 + 1);
                          v1378[3] = *((_QWORD *)v1382 + 2);
                          v1378[4] = *((_QWORD *)v1382 + 3);
                          v1378[5] = *((_QWORD *)v1382 + 4);
                          v1378[6] = *((_QWORD *)v1382 + 5);
                          v1378[7] = *((_QWORD *)v1382 + 6);
                          v1378[8] = *((_QWORD *)v1382 + 7);
                          v1378[9] = *((_QWORD *)v1382 + 8);
                          v1378[10] = *((_QWORD *)v1382 + 9);
                          v1378[11] = *((_QWORD *)v1382 + 10);
                          v1378[12] = *((_QWORD *)v1382 + 11);
                          v1385 = *((_QWORD *)v1382 + 12);
                          *((_BYTE *)v1378 + 112) = v1382[104];
                          v1378[13] = v1385;
                          v1386 = (void *)(((unint64_t)v1378 + v1383) & v1570);
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          sub_21D7C4C20();
                          if (__swift_getEnumTagSinglePayload((uint64_t)v1384, 1, v1625))
                          {
                            memcpy(v1386, v1384, v1716);
                          }
                          else
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v1607 + 16))(v1386, v1384, v1625);
                            __swift_storeEnumTagSinglePayload((uint64_t)v1386, 0, 1, v1625);
                          }
                          v428 = v1381;
                          v362 = v1564;
                          v366 = v781;
                          goto LABEL_2022;
                        }
                      }
                      memcpy(v1378, v1379, v1718);
                      v362 = v1564;
LABEL_2022:
                      v576 = 51;
                      v672 = v1688;
                      v365 = v1700;
LABEL_2138:
                      *((_BYTE *)v365 + v672) = v576;
                      goto LABEL_2139;
                    }
                  }
                  memcpy(v788, v789, v1739);
                  goto LABEL_1085;
                case 0x34:
                  *v365 = *v366;
                  v373 = 52;
LABEL_753:
                  *((_BYTE *)v365 + v1688) = v373;
                  sub_21D7C4C20();
                  goto LABEL_754;
                default:
                  if (v1688 <= 3)
                    v367 = v1688;
                  else
                    v367 = 4;
                  __asm { BR              X12 }
                  return result;
              }
            case 2:
              *v3 = *a2;
              v210 = 2;
              goto LABEL_398;
            case 3:
              *v3 = *a2;
              v210 = 3;
LABEL_398:
              *((_BYTE *)v3 + v88) = v210;
              sub_21D7C4C20();
              return v3;
            default:
              memcpy(v3, a2, v88 + 1);
              return v3;
          }
        default:
          if (v1688 <= 3)
            v120 = v1688;
          else
            v120 = 4;
          __asm { BR              X12 }
          return result;
      }
    case 2:
    case 3:
      goto LABEL_118;
    default:
      goto LABEL_386;
  }
}

_OWORD *sub_21CEFA600(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  unsigned int v17;
  int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  size_t v28;
  size_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  size_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _OWORD *v88;
  uint64_t v89;
  void *v90;
  char *v91;
  size_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  _BYTE *v97;
  unsigned __int8 *v98;
  unsigned int v99;
  _OWORD *v100;
  __int128 *v101;
  unsigned int v102;
  __int128 v103;
  __int128 v104;
  void *v105;
  const void *v106;
  size_t v107;
  const void *v108;
  _QWORD *v109;
  _QWORD *v110;
  _QWORD *v111;
  _QWORD *v112;
  void *v113;
  _BYTE *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  __int128 v118;
  __int128 v119;
  _OWORD *v120;
  _OWORD *v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  unint64_t v128;
  unint64_t v129;
  uint64_t v130;
  _OWORD *v131;
  _OWORD *v132;
  unint64_t v133;
  unint64_t v134;
  __int128 v135;
  __int128 v136;
  _BYTE *v137;
  _BYTE *v138;
  unint64_t v139;
  const void *v140;
  uint64_t v141;
  const void *v142;
  _BYTE *v143;
  unsigned int EnumTagSinglePayload;
  void *v145;
  uint64_t v146;
  int v147;
  int v148;
  int v149;
  uint64_t v150;
  uint64_t v151;
  _BYTE *v152;
  unint64_t v153;
  unint64_t v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  _OWORD *v158;
  _OWORD *v159;
  unint64_t v160;
  uint64_t v161;
  const void *v162;
  void *v163;
  size_t v164;
  size_t v165;
  _QWORD *v166;
  _QWORD *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  _QWORD *v173;
  _BYTE *v174;
  _QWORD *v175;
  _BYTE *v176;
  void *v177;
  const void *v178;
  char v179;
  size_t v180;
  uint64_t v181;
  __int128 v182;
  __int128 v183;
  _QWORD *v184;
  void *v185;
  const void *v186;
  size_t v187;
  __int128 v188;
  __int128 v189;
  _QWORD *v190;
  void *v191;
  _QWORD *v192;
  const void *v193;
  __int128 v194;
  __int128 v195;
  _QWORD *v196;
  void *v197;
  const void *v198;
  __int128 v199;
  __int128 v200;
  _QWORD *v201;
  void *v202;
  const void *v203;
  size_t v204;
  _QWORD *v205;
  _BYTE *v206;
  _BYTE *v207;
  void *v208;
  const void *v209;
  __int128 v210;
  __int128 v211;
  _QWORD *v212;
  char *v213;
  const void *v214;
  size_t v215;
  __int128 v216;
  __int128 v217;
  _OWORD *v218;
  _OWORD *v219;
  _OWORD *v220;
  _OWORD *v221;
  void *v222;
  const void *v223;
  unint64_t v224;
  unint64_t v225;
  __int128 v226;
  __int128 v227;
  void *v228;
  const void *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  __int128 v234;
  __int128 v235;
  _QWORD *v236;
  void *v237;
  const void *v238;
  __int128 v239;
  __int128 v240;
  _QWORD *v241;
  void *v242;
  const void *v243;
  __int128 v244;
  __int128 v245;
  _QWORD *v246;
  void *v247;
  const void *v248;
  uint64_t v249;
  __int128 v250;
  __int128 v251;
  _QWORD *v252;
  void *v253;
  const void *v254;
  uint64_t v255;
  unint64_t v256;
  unint64_t v257;
  __int128 v258;
  __int128 v259;
  _OWORD *v260;
  _OWORD *v261;
  _QWORD *v262;
  _QWORD *v263;
  _OWORD *v264;
  _OWORD *v265;
  _OWORD *v266;
  _OWORD *v267;
  unint64_t v268;
  size_t v269;
  _OWORD *v270;
  unint64_t v271;
  int v272;
  unint64_t v273;
  _OWORD *v274;
  unint64_t v275;
  unint64_t v276;
  unint64_t v277;
  unint64_t v278;
  unint64_t v279;
  _OWORD *v280;
  _OWORD *v281;
  void *v282;
  _BYTE *v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  unint64_t v288;
  unint64_t v289;
  __int128 v290;
  __int128 v291;
  _OWORD *v292;
  _OWORD *v293;
  void *v294;
  _BYTE *v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  unint64_t v299;
  _QWORD *v300;
  unint64_t v301;
  __int128 v302;
  __int128 v303;
  _OWORD *v304;
  _OWORD *v305;
  _OWORD *v306;
  _OWORD *v307;
  unint64_t v308;
  unint64_t v309;
  unint64_t v310;
  unint64_t v311;
  __int128 v312;
  __int128 v313;
  _BYTE *v314;
  _BYTE *v315;
  unint64_t v316;
  size_t v317;
  _QWORD *v318;
  const void *v319;
  uint64_t v320;
  const void *v321;
  void *v322;
  unint64_t v323;
  unint64_t v324;
  __int128 v325;
  __int128 v326;
  uint64_t v327;
  void *v328;
  const void *v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  unint64_t v335;
  unint64_t v336;
  unint64_t v337;
  __int128 v338;
  __int128 v339;
  unint64_t v340;
  unint64_t v341;
  unint64_t v342;
  _QWORD *v343;
  const void *v344;
  uint64_t v345;
  const void *v346;
  void *v347;
  unint64_t v348;
  unint64_t v349;
  __int128 v350;
  __int128 v351;
  _OWORD *v352;
  _OWORD *v353;
  void *v354;
  const void *v355;
  unint64_t v356;
  unint64_t v357;
  _OWORD *v358;
  _OWORD *v359;
  _QWORD *v360;
  unint64_t v361;
  unint64_t v362;
  __int128 v363;
  __int128 v364;
  _OWORD *v365;
  _OWORD *v366;
  unint64_t v367;
  size_t v368;
  _OWORD *v369;
  unint64_t v370;
  int v371;
  _OWORD *v372;
  unint64_t v373;
  unint64_t v374;
  unint64_t v375;
  unint64_t v376;
  unint64_t v377;
  _BYTE *v378;
  _BYTE *v379;
  unint64_t v380;
  _QWORD *v381;
  const void *v382;
  uint64_t v383;
  const void *v384;
  void *v385;
  _OWORD *v386;
  _OWORD *v387;
  _OWORD *v388;
  _OWORD *v389;
  _OWORD *v390;
  _OWORD *v391;
  unint64_t v392;
  unint64_t v393;
  __int128 v394;
  __int128 v395;
  unint64_t v396;
  unint64_t v397;
  __int128 v398;
  __int128 v399;
  unint64_t v400;
  unint64_t v401;
  __int128 v402;
  __int128 v403;
  _OWORD *v404;
  _OWORD *v405;
  _OWORD *v406;
  _OWORD *v407;
  _OWORD *v408;
  _OWORD *v409;
  _OWORD *v410;
  _OWORD *v411;
  unint64_t v412;
  unint64_t v413;
  __int128 v414;
  __int128 v415;
  unint64_t v416;
  unint64_t v417;
  __int128 v418;
  __int128 v419;
  unint64_t v420;
  unint64_t v421;
  __int128 v422;
  __int128 v423;
  void *v424;
  _BYTE *v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  unint64_t v429;
  unint64_t v430;
  __int128 v431;
  __int128 v432;
  _OWORD *v433;
  _OWORD *v434;
  _OWORD *v435;
  _OWORD *v436;
  unint64_t v437;
  unint64_t v438;
  __int128 v439;
  __int128 v440;
  void *v441;
  const void *v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  unint64_t v447;
  unint64_t v448;
  unint64_t v449;
  __int128 v450;
  __int128 v451;
  unint64_t v452;
  unint64_t v453;
  unint64_t v454;
  unint64_t v455;
  __int128 v456;
  __int128 v457;
  _OWORD *v458;
  _OWORD *v459;
  _QWORD *v460;
  _QWORD *v461;
  _OWORD *v462;
  _OWORD *v463;
  _OWORD *v464;
  _OWORD *v465;
  unint64_t v466;
  size_t v467;
  _OWORD *v468;
  unint64_t v469;
  int v470;
  unint64_t v471;
  _OWORD *v472;
  unint64_t v473;
  unint64_t v474;
  unint64_t v475;
  unint64_t v476;
  unint64_t v477;
  void *v478;
  _BYTE *v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  unint64_t v484;
  unint64_t v485;
  __int128 v486;
  __int128 v487;
  _QWORD *v488;
  _QWORD *v489;
  char *v490;
  unint64_t v491;
  unint64_t v492;
  uint64_t v493;
  size_t v494;
  int v495;
  int v496;
  _QWORD *v497;
  unint64_t v498;
  unint64_t v499;
  __int128 v500;
  __int128 v501;
  _BYTE *v502;
  _BYTE *v503;
  void *v504;
  const void *v505;
  _QWORD *v506;
  unint64_t v507;
  unint64_t v508;
  __int128 v509;
  __int128 v510;
  _BYTE *v511;
  _BYTE *v512;
  void *v513;
  const void *v514;
  unint64_t v515;
  unint64_t v516;
  __int128 v517;
  __int128 v518;
  _OWORD *v519;
  _OWORD *v520;
  unint64_t v521;
  unint64_t v522;
  __int128 v523;
  __int128 v524;
  unint64_t v525;
  unint64_t v526;
  __int128 v527;
  __int128 v528;
  _QWORD *v529;
  _QWORD *v530;
  unint64_t v531;
  unint64_t v532;
  __int128 v533;
  __int128 v534;
  _OWORD *v535;
  _OWORD *v536;
  _OWORD *v537;
  _OWORD *v538;
  unint64_t v539;
  unint64_t v540;
  __int128 v541;
  __int128 v542;
  unint64_t v543;
  unint64_t v544;
  __int128 v545;
  __int128 v546;
  unint64_t v547;
  unint64_t v548;
  __int128 v549;
  __int128 v550;
  uint64_t v551;
  size_t v552;
  unint64_t v553;
  _QWORD *v554;
  _QWORD *v555;
  uint64_t v556;
  unint64_t v557;
  unint64_t v558;
  __int128 v559;
  __int128 v560;
  unint64_t v561;
  unint64_t v562;
  __int128 v563;
  __int128 v564;
  _OWORD *v565;
  _OWORD *v566;
  _OWORD *v567;
  _OWORD *v568;
  _OWORD *v569;
  _OWORD *v570;
  _OWORD *v571;
  _OWORD *v572;
  unint64_t v573;
  unint64_t v574;
  _QWORD *v575;
  _QWORD *v576;
  void *v577;
  _BYTE *v578;
  uint64_t v579;
  uint64_t v580;
  _OWORD *v581;
  _OWORD *v582;
  unint64_t v583;
  unint64_t v584;
  __int128 v585;
  __int128 v586;
  _QWORD *v587;
  _QWORD *v588;
  _OWORD *v589;
  _OWORD *v590;
  char *v591;
  char *v592;
  uint64_t v593;
  uint64_t v594;
  size_t v595;
  unint64_t v596;
  uint64_t v597;
  _QWORD *v598;
  unint64_t v599;
  unint64_t v600;
  __int128 v601;
  __int128 v602;
  unint64_t v603;
  unint64_t v604;
  __int128 v605;
  __int128 v606;
  _OWORD *v607;
  _OWORD *v608;
  _OWORD *v609;
  _OWORD *v610;
  _QWORD *v611;
  _QWORD *v612;
  _OWORD *v613;
  _OWORD *v614;
  unint64_t v615;
  uint64_t v616;
  uint64_t v617;
  size_t v618;
  _OWORD *v619;
  unint64_t v620;
  int v621;
  _OWORD *v622;
  unint64_t v623;
  unint64_t v624;
  unint64_t v625;
  void *v626;
  _BYTE *v627;
  uint64_t v628;
  size_t v629;
  uint64_t v630;
  uint64_t v631;
  int v632;
  int v633;
  uint64_t v634;
  int v635;
  int v636;
  void *v637;
  _BYTE *v638;
  uint64_t v639;
  uint64_t v640;
  uint64_t v641;
  int v642;
  int v643;
  int v644;
  int v645;
  uint64_t v646;
  _OWORD *v647;
  _OWORD *v648;
  unint64_t v649;
  unint64_t v650;
  void *v651;
  _BYTE *v652;
  uint64_t v653;
  uint64_t v654;
  uint64_t v655;
  _OWORD *v656;
  _OWORD *v657;
  unint64_t v658;
  unint64_t v659;
  _OWORD *v660;
  _OWORD *v661;
  _OWORD *v662;
  _OWORD *v663;
  _OWORD *v664;
  _OWORD *v665;
  _OWORD *v666;
  _OWORD *v667;
  _QWORD *v668;
  _QWORD *v669;
  void *v670;
  _BYTE *v671;
  uint64_t v672;
  uint64_t v673;
  uint64_t v674;
  uint64_t v675;
  int v676;
  int v677;
  uint64_t v678;
  int v679;
  int v680;
  int v681;
  int v682;
  int v683;
  int v684;
  int v685;
  int v686;
  int v687;
  int v688;
  int v689;
  int v690;
  int v691;
  int v692;
  int v693;
  int v694;
  int v695;
  int v696;
  unint64_t v697;
  unint64_t v698;
  int v699;
  unsigned int v700;
  unint64_t v701;
  unint64_t v702;
  int v703;
  unsigned int v704;
  unint64_t v705;
  unint64_t v706;
  __int128 v707;
  __int128 v708;
  unint64_t v709;
  unint64_t v710;
  _BYTE *v711;
  _QWORD *v712;
  unint64_t v713;
  const void *v714;
  uint64_t v715;
  uint64_t v716;
  uint64_t v717;
  void *v718;
  const void *v719;
  size_t v720;
  void *v721;
  _BYTE *v722;
  uint64_t v723;
  uint64_t v724;
  uint64_t v725;
  int v726;
  int v727;
  int v728;
  _QWORD *v729;
  _QWORD *v730;
  _OWORD *v731;
  _OWORD *v732;
  unint64_t v733;
  unint64_t v734;
  __int128 v735;
  unsigned int v736;
  _QWORD *v737;
  uint64_t v738;
  unint64_t v739;
  unint64_t v740;
  unint64_t v741;
  __int128 v742;
  __int128 v743;
  _OWORD *v744;
  _OWORD *v745;
  _OWORD *v746;
  _OWORD *v747;
  unint64_t v748;
  unint64_t v749;
  unint64_t v750;
  unint64_t v751;
  __int128 v752;
  __int128 v753;
  _BYTE *v754;
  _BYTE *v755;
  unint64_t v756;
  const void *v757;
  uint64_t v758;
  uint64_t v759;
  const void *v760;
  void *v761;
  size_t v762;
  _BYTE *v763;
  _BYTE *v764;
  uint64_t v765;
  uint64_t v766;
  uint64_t v767;
  int v768;
  int v769;
  int v770;
  unsigned int v771;
  _QWORD *v772;
  uint64_t v773;
  unint64_t v774;
  unint64_t v775;
  __int128 v776;
  __int128 v777;
  _OWORD *v778;
  _OWORD *v779;
  _OWORD *v780;
  _OWORD *v781;
  unint64_t v782;
  unint64_t v783;
  __int128 v784;
  __int128 v785;
  unint64_t v786;
  unint64_t v787;
  __int128 v788;
  __int128 v789;
  _BYTE *v790;
  _BYTE *v791;
  unint64_t v792;
  const void *v793;
  uint64_t v794;
  uint64_t v795;
  const void *v796;
  void *v797;
  size_t v798;
  void *v799;
  _BYTE *v800;
  uint64_t v801;
  uint64_t v802;
  uint64_t v803;
  int v804;
  int v805;
  int v806;
  unint64_t v807;
  unint64_t v808;
  __int128 v809;
  __int128 v810;
  void *v811;
  const void *v812;
  _OWORD *v813;
  _OWORD *v814;
  _QWORD *v815;
  uint64_t *v816;
  uint64_t v817;
  int v818;
  _BYTE *v819;
  _QWORD *v820;
  unint64_t v821;
  const void *v822;
  uint64_t v823;
  uint64_t v824;
  const void *v825;
  void *v826;
  size_t v827;
  unint64_t v828;
  unint64_t v829;
  unint64_t v830;
  unint64_t v831;
  size_t v832;
  unint64_t v833;
  unint64_t v834;
  __int128 v835;
  __int128 v836;
  unint64_t v837;
  unint64_t v838;
  __int128 v839;
  __int128 v840;
  unint64_t v841;
  unint64_t v842;
  unint64_t v843;
  unint64_t v844;
  size_t v845;
  unint64_t v846;
  unint64_t v847;
  __int128 v848;
  __int128 v849;
  unint64_t v850;
  unint64_t v851;
  __int128 v852;
  __int128 v853;
  char *v854;
  char *v855;
  unint64_t v856;
  uint64_t v857;
  unint64_t v858;
  unint64_t v859;
  size_t v860;
  uint64_t v861;
  size_t v862;
  unint64_t v863;
  size_t v864;
  unint64_t v865;
  unint64_t v866;
  unint64_t v867;
  unint64_t v868;
  unint64_t v869;
  unint64_t v870;
  unint64_t v871;
  unint64_t v872;
  unint64_t v873;
  unint64_t v874;
  unint64_t v875;
  unint64_t v876;
  __int128 v877;
  __int128 v878;
  unint64_t v879;
  unint64_t v880;
  __int128 v881;
  __int128 v882;
  unint64_t v883;
  _QWORD *v884;
  _QWORD *v885;
  uint64_t v886;
  unint64_t v887;
  unint64_t v888;
  uint64_t v889;
  __int128 v890;
  _BYTE *v891;
  _BYTE *v892;
  unint64_t v893;
  const void *v894;
  uint64_t v895;
  uint64_t v896;
  uint64_t v897;
  uint64_t v898;
  void *v899;
  const void *v900;
  size_t v901;
  void *v902;
  _BYTE *v903;
  uint64_t v904;
  uint64_t v905;
  uint64_t v906;
  uint64_t v907;
  int v908;
  int v909;
  int v910;
  char *v911;
  void *v912;
  _BYTE *v913;
  uint64_t v914;
  uint64_t v915;
  uint64_t v916;
  uint64_t v917;
  int v918;
  int v919;
  int v920;
  unint64_t v921;
  unint64_t v922;
  __int128 v923;
  __int128 v924;
  _QWORD *v925;
  uint64_t *v926;
  uint64_t v927;
  int v928;
  _QWORD *v929;
  _QWORD *v930;
  uint64_t *v931;
  uint64_t v932;
  int v933;
  _BYTE *v934;
  _BYTE *v935;
  unint64_t v936;
  const void *v937;
  uint64_t v938;
  uint64_t v939;
  uint64_t v940;
  void *v941;
  const void *v942;
  size_t v943;
  void *v944;
  _BYTE *v945;
  uint64_t v946;
  uint64_t v947;
  uint64_t v948;
  int v949;
  int v950;
  int v951;
  _QWORD *v952;
  uint64_t *v953;
  uint64_t v954;
  int v955;
  _BYTE *v956;
  _QWORD *v957;
  unint64_t v958;
  const void *v959;
  uint64_t v960;
  uint64_t v961;
  const void *v962;
  void *v963;
  size_t v964;
  unint64_t v965;
  unint64_t v966;
  unint64_t v967;
  unint64_t v968;
  size_t v969;
  unint64_t v970;
  unint64_t v971;
  __int128 v972;
  __int128 v973;
  unint64_t v974;
  unint64_t v975;
  __int128 v976;
  __int128 v977;
  unint64_t v978;
  unint64_t v979;
  unint64_t v980;
  unint64_t v981;
  size_t v982;
  unint64_t v983;
  unint64_t v984;
  __int128 v985;
  __int128 v986;
  unint64_t v987;
  unint64_t v988;
  __int128 v989;
  __int128 v990;
  char *v991;
  char *v992;
  unint64_t v993;
  uint64_t v994;
  unint64_t v995;
  unint64_t v996;
  size_t v997;
  uint64_t v998;
  size_t v999;
  unint64_t v1000;
  size_t v1001;
  unint64_t v1002;
  unint64_t v1003;
  unint64_t v1004;
  unint64_t v1005;
  unint64_t v1006;
  unint64_t v1007;
  unint64_t v1008;
  unint64_t v1009;
  unint64_t v1010;
  unint64_t v1011;
  unint64_t v1012;
  unint64_t v1013;
  unint64_t v1014;
  __int128 v1015;
  __int128 v1016;
  unint64_t v1017;
  unint64_t v1018;
  __int128 v1019;
  __int128 v1020;
  unint64_t v1021;
  void *v1022;
  _BYTE *v1023;
  uint64_t v1024;
  uint64_t v1025;
  uint64_t v1026;
  int v1027;
  int v1028;
  int v1029;
  _OWORD *v1030;
  _OWORD *v1031;
  unint64_t v1032;
  unint64_t v1033;
  void *v1034;
  _BYTE *v1035;
  uint64_t v1036;
  uint64_t v1037;
  uint64_t v1038;
  int v1039;
  int v1040;
  int v1041;
  _QWORD *v1042;
  uint64_t *v1043;
  uint64_t v1044;
  int v1045;
  _QWORD *v1046;
  uint64_t *v1047;
  uint64_t v1048;
  int v1049;
  size_t v1050;
  _BYTE *v1051;
  _OWORD *v1052;
  _OWORD *v1053;
  unint64_t v1054;
  unint64_t v1055;
  __int128 v1056;
  unint64_t v1057;
  unint64_t v1058;
  __int128 v1059;
  __int128 v1060;
  unint64_t v1061;
  unint64_t v1062;
  unint64_t v1063;
  _QWORD *v1064;
  const void *v1065;
  uint64_t v1066;
  const void *v1067;
  void *v1068;
  _OWORD *v1069;
  _OWORD *v1070;
  void *v1071;
  _BYTE *v1072;
  uint64_t v1073;
  uint64_t v1074;
  uint64_t v1075;
  int v1076;
  int v1077;
  int v1078;
  _BYTE *v1079;
  _BYTE *v1080;
  unint64_t v1081;
  const void *v1082;
  uint64_t v1083;
  uint64_t v1084;
  uint64_t v1085;
  void *v1086;
  const void *v1087;
  size_t v1088;
  unint64_t v1089;
  unint64_t v1090;
  __int128 v1091;
  __int128 v1092;
  _BYTE *v1093;
  unsigned __int8 *v1094;
  unsigned int v1095;
  _OWORD *v1096;
  __int128 *v1097;
  unsigned int v1098;
  __int128 v1099;
  __int128 v1100;
  void *v1101;
  const void *v1102;
  const void *v1103;
  _QWORD *v1104;
  _QWORD *v1105;
  _QWORD *v1106;
  _QWORD *v1107;
  void *v1108;
  _BYTE *v1109;
  uint64_t v1110;
  uint64_t v1111;
  uint64_t v1112;
  __int128 v1113;
  __int128 v1114;
  _OWORD *v1115;
  _OWORD *v1116;
  unint64_t v1117;
  unint64_t v1118;
  uint64_t v1119;
  unint64_t v1120;
  unint64_t v1121;
  uint64_t v1122;
  unint64_t v1123;
  unint64_t v1124;
  uint64_t v1125;
  _OWORD *v1126;
  _OWORD *v1127;
  unint64_t v1128;
  unint64_t v1129;
  __int128 v1130;
  __int128 v1131;
  _BYTE *v1132;
  _BYTE *v1133;
  unint64_t v1134;
  const void *v1135;
  uint64_t v1136;
  uint64_t v1137;
  void *v1138;
  const void *v1139;
  size_t v1140;
  char v1141;
  int v1142;
  int v1143;
  int v1144;
  _QWORD *v1145;
  _QWORD *v1146;
  _BYTE *v1147;
  _BYTE *v1148;
  unint64_t v1149;
  const void *v1150;
  uint64_t v1151;
  uint64_t v1152;
  uint64_t v1153;
  uint64_t v1154;
  void *v1155;
  const void *v1156;
  size_t v1157;
  _QWORD *v1158;
  _QWORD *v1159;
  _BYTE *v1160;
  unsigned __int8 *v1161;
  unsigned int v1162;
  _OWORD *v1163;
  __int128 *v1164;
  unsigned int v1165;
  __int128 v1166;
  __int128 v1167;
  void *v1168;
  const void *v1169;
  _QWORD *v1170;
  size_t v1171;
  _OWORD *result;
  const void *v1173;
  _QWORD *v1174;
  _QWORD *v1175;
  _QWORD *v1176;
  _QWORD *v1177;
  void *v1178;
  _BYTE *v1179;
  uint64_t v1180;
  uint64_t v1181;
  uint64_t v1182;
  __int128 v1183;
  __int128 v1184;
  _OWORD *v1185;
  _OWORD *v1186;
  unint64_t v1187;
  unint64_t v1188;
  uint64_t v1189;
  unint64_t v1190;
  unint64_t v1191;
  uint64_t v1192;
  unint64_t v1193;
  unint64_t v1194;
  uint64_t v1195;
  _OWORD *v1196;
  _OWORD *v1197;
  unint64_t v1198;
  unint64_t v1199;
  __int128 v1200;
  __int128 v1201;
  _BYTE *v1202;
  _BYTE *v1203;
  unint64_t v1204;
  uint64_t v1205;
  const void *v1206;
  uint64_t v1207;
  uint64_t v1208;
  void *v1209;
  const void *v1210;
  size_t v1211;
  char v1212;
  int v1213;
  int v1214;
  int v1215;
  unint64_t v1216;
  unint64_t v1217;
  size_t v1218;
  uint64_t v1219;
  unint64_t v1220;
  unint64_t v1221;
  unint64_t v1222;
  unint64_t v1223;
  unint64_t v1224;
  unint64_t v1225;
  unint64_t v1226;
  uint64_t v1227;
  unsigned int v1228;
  uint64_t v1229;
  uint64_t v1230;
  size_t v1231;
  size_t v1232;
  int v1233;
  unint64_t v1234;
  uint64_t v1235;
  uint64_t v1236;
  uint64_t v1237;
  uint64_t v1238;
  uint64_t v1239;
  size_t v1240;
  uint64_t v1241;
  uint64_t v1242;
  size_t v1243;
  uint64_t v1244;
  uint64_t v1245;
  size_t v1246;
  uint64_t v1247;
  uint64_t v1248;
  unsigned int v1249;
  size_t v1250;
  unint64_t v1251;
  unint64_t v1252;
  unint64_t v1253;
  unint64_t v1254;
  unint64_t v1255;
  unint64_t v1256;
  unint64_t v1257;
  unint64_t v1258;
  unint64_t v1259;
  unint64_t v1260;
  unint64_t v1261;
  unint64_t v1262;
  unint64_t v1263;
  unint64_t v1264;
  unint64_t v1265;
  unint64_t v1266;
  unint64_t v1267;
  size_t v1268;
  uint64_t v1269;
  uint64_t v1270;
  uint64_t v1271;
  unsigned int v1272;
  uint64_t v1273;
  unint64_t v1274;
  unsigned int v1275;
  uint64_t v1276;
  uint64_t v1277;
  uint64_t v1278;
  size_t __n;
  unsigned int v1280;
  size_t v1281;
  unsigned int v1282;
  uint64_t v1283;
  uint64_t v1284;
  unsigned int v1285;
  uint64_t v1286;
  uint64_t v1287;
  uint64_t v1288;
  uint64_t v1289;
  uint64_t v1290;
  unint64_t v1291;
  size_t v1292;
  uint64_t v1293;
  uint64_t v1294;
  char v1295;
  uint64_t v1296;
  uint64_t v1297;
  uint64_t v1298;
  uint64_t v1299;
  uint64_t v1300;
  uint64_t v1301;
  uint64_t v1302;
  unsigned int v1303;
  uint64_t v1304;
  uint64_t v1305;
  _QWORD *v1306;
  _QWORD *v1307;
  uint64_t v1308;
  size_t v1309;
  uint64_t v1310;
  uint64_t v1311;
  uint64_t v1312;
  unint64_t v1313;
  unint64_t v1314;
  uint64_t v1315;
  uint64_t v1316;
  uint64_t v1317;
  uint64_t v1318;
  unint64_t v1319;
  unint64_t v1320;
  unint64_t v1321;
  unint64_t v1322;
  unint64_t v1323;
  unint64_t v1324;
  size_t v1325;
  unint64_t v1326;
  uint64_t v1327;
  unint64_t v1328;
  uint64_t v1329;
  uint64_t v1331;
  uint64_t v1332;
  size_t v1333;
  uint64_t v1334;
  size_t v1335;
  uint64_t v1336;
  unint64_t v1337;
  int v1338;
  size_t v1339;
  size_t v1340;
  unsigned int v1341;
  uint64_t v1342;
  size_t v1343;
  uint64_t v1344;
  unint64_t v1345;
  uint64_t v1346;
  size_t v1347;
  size_t v1348;
  unsigned int v1349;
  size_t v1350;
  uint64_t v1352;
  uint64_t v1353;
  uint64_t v1354;
  uint64_t v1355;
  size_t v1356;
  uint64_t v1357;
  uint64_t v1358;
  uint64_t v1359;
  uint64_t v1360;
  uint64_t v1361;
  uint64_t v1362;
  _QWORD *v1363;
  unint64_t v1364;
  uint64_t v1365;
  unint64_t v1366;
  unint64_t v1367;
  unint64_t v1368;
  uint64_t v1369;
  unint64_t v1370;
  unint64_t v1371;
  unint64_t v1372;
  size_t v1373;

  v1300 = *(_QWORD *)(a3 + 16);
  v1298 = *(_QWORD *)(v1300 - 8);
  v1328 = *(_QWORD *)(v1298 + 64);
  v1311 = sub_21D7C4668();
  v3 = *(_QWORD *)(v1311 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v1334 = v4 + 16;
  v1341 = *(_DWORD *)(v3 + 84);
  v1290 = v3;
  v5 = *(_QWORD *)(v3 + 64);
  v1309 = v5;
  if (!v1341)
    ++v5;
  v1373 = v5;
  v1354 = v4 | 7;
  v1286 = sub_21D7BF754();
  v6 = *(_QWORD *)(v1286 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v1355 = v7 | 7;
  v1283 = sub_21D7C3840();
  v8 = *(_QWORD *)(v1283 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v1288 = sub_21D7C3804();
  v10 = *(_QWORD *)(v1288 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = v11;
  v13 = v11 | v9;
  v14 = v4 | 7 | v7 | v13;
  v15 = (v14 + v1373 + ((v4 + 16) & ~v4)) & ~v14;
  v1360 = v4;
  v1346 = v4 + 40;
  v16 = *(_DWORD *)(v6 + 84);
  if (v16)
    v17 = v16 - 1;
  else
    v17 = 0;
  v1282 = v17;
  if (v17 <= 0x7FFFFFFE)
    v18 = 2147483646;
  else
    v18 = v17;
  v1338 = v18;
  v1285 = *(_DWORD *)(v10 + 84);
  v1280 = *(_DWORD *)(v8 + 84);
  if (v1285 <= v1280)
    v19 = *(_DWORD *)(v8 + 84);
  else
    v19 = *(_DWORD *)(v10 + 84);
  v1349 = v19;
  v1275 = *(_DWORD *)(v6 + 84);
  v1287 = v7 + 113;
  v1353 = v7;
  v1271 = v6;
  v1277 = v8;
  v1284 = *(_QWORD *)(v8 + 64) + v11;
  v1278 = *(_QWORD *)(v1288 - 8);
  v1344 = *(_QWORD *)(v10 + 64);
  if (v16)
    v21 = *(_QWORD *)(v6 + 64);
  else
    v21 = *(_QWORD *)(v6 + 64) + 1;
  v1343 = v21;
  v1289 = v14 + 1;
  v1366 = ((v4 + 40) & ~v4) + v1373;
  v1364 = (v1366 + 7) & 0xFFFFFFFFFFFFFFF8;
  v1369 = v7 + 40;
  v1347 = v21 + ((v7 + 113) & ~v7);
  v22 = v1347 + ((v7 + 40 + ((((v1364 + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~(v7 | 7));
  v1310 = (v1284 & ~(unint64_t)v11) + v1344;
  if (v19)
    v23 = (v1284 & ~(unint64_t)v11) + v1344;
  else
    v23 = (v1284 & ~(unint64_t)v11) + v1344 + 1;
  v1348 = v23;
  v20 = (v13 + 160) & ~v13;
  if (v22 <= v23 + 1 + v20)
    v22 = v23 + 1 + v20;
  if (v22 <= 0x30)
    v22 = 48;
  v1291 = v22;
  __n = v22 + 1;
  v1356 = v22 + 1 + ((v14 + 1) & ~v14);
  v24 = (v15 + v1356 + 11) & 0xFFFFFFFFFFFFFFF8;
  v1304 = sub_21D7C3F6C();
  v25 = *(_QWORD *)(v1304 - 8);
  v26 = *(unsigned __int8 *)(v25 + 80);
  v1302 = (v26 | 7) + 58;
  v1294 = v26 | 7;
  v27 = (v1302 + v24) & ~(v26 | 7);
  v1303 = *(_DWORD *)(v25 + 84);
  v1305 = v26 + 16;
  v1293 = v26;
  v1276 = v25;
  v28 = *(_QWORD *)(v25 + 64);
  if (!v1303)
    ++v28;
  v1281 = v28;
  v29 = ((v26 + 16) & ~v26) + v28;
  v1269 = sub_21D7C4314();
  v30 = *(_DWORD *)(*(_QWORD *)(v1269 - 8) + 80);
  v31 = *(_QWORD *)(v1269 - 8);
  v1332 = v31;
  v1245 = sub_21D7BF964();
  v33 = *(_QWORD *)(v1245 - 8);
  v34 = *(unsigned __int8 *)(v33 + 80);
  v1362 = v14 | v12 | v30 | v34;
  v1292 = v29;
  v1336 = v27 + v29 + v1362;
  v1361 = v30;
  v1367 = v30 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v1368 = *(_QWORD *)(v31 + 64) + ((v30 + 65) & ~(unint64_t)v30);
  v1350 = v1373 + 7;
  v35 = (v1373 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 47) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 23) & 0xFFFFFFFFFFFFFFF8;
  v1313 = v37;
  v1273 = v30 + 16;
  v1326 = (v1368 + ((v1273 + ((v37 + 15) & 0xFFFFFFFFFFFFFFF8)) & v1367)) & 0xFFFFFFFFFFFFFFF8;
  v1342 = v13 + 16;
  v1296 = v12;
  v1270 = v12 + 8;
  v38 = v1344 + ((v12 + 8) & ~v12);
  v39 = v12 | 7;
  if (v1341)
    v40 = v1341 - 1;
  else
    v40 = 0;
  v41 = v36 + 16;
  v42 = (((v1373 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
  v43 = v23 + 1 + v34 + ((v36 + 16 + v13) & ~v13);
  v1272 = v40;
  v1233 = v1338 - 1;
  if (v40 <= v1338 - 1)
    v44 = v1338 - 1;
  else
    v44 = v40;
  if (v44 <= 0x7FFFFFFF)
    v44 = 0x7FFFFFFF;
  v45 = v1349 - 1;
  if (!v1349)
    v45 = 0;
  if (v45 <= v44)
    v46 = v44;
  else
    v46 = v45;
  v1249 = v46;
  v47 = (v1364 + 23) & 0xFFFFFFFFFFFFFFF8;
  v1320 = (((v1373 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
  v1339 = v42 + 17;
  v48 = v7 | 7;
  v1324 = v1355
        + 23
        + v42
        + 17
        + ((v1334 + ((((v47 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v1354);
  v1340 = v1344 + ((v12 + 8) & ~v12);
  v1335 = v1347 + v1354;
  v1322 = (v42 + 47) & 0xFFFFFFFFFFFFFFF8;
  v1274 = v1322 + 16;
  v49 = v1322 + 16 + v1354;
  v32 = v12 | 7;
  v1308 = *(unsigned __int8 *)(v33 + 80);
  v1244 = *(_QWORD *)(v1245 - 8);
  v1242 = *(_QWORD *)(v33 + 64) + 7;
  v1345 = v23 + (v12 | 7);
  v50 = ((v1345 + ((v1347 + v13 + ((v1369 + ((v1242 + (v43 & ~v34)) & 0xFFFFFFFFFFFFFFF8)) & ~v1355)) & ~v13)) & ~v39)
      + v38;
  v1248 = v1355 + 41;
  v51 = v23 + 7;
  v52 = ((((v23 + 7 + ((v1347 + v13 + ((v48 + 41 + ((v37 + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v48)) & ~v13)) & 0xFFFFFFFFFFFFFFF8)
        + 47) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v1315 = (v14 + v35 + 40) & ~v14;
  v1234 = v52 + v14;
  v1246 = v1356 + 7;
  v1247 = v14 + 8;
  v1312 = v14;
  v1333 = v1347 + 7;
  v53 = (v1347 + 7 + ((v35 + 40 + v1353) & ~v1355)) & 0xFFFFFFFFFFFFFFF8;
  v1240 = v1343 + v13;
  v54 = v23 + v13;
  v1352 = v12 | 7;
  v55 = ((v38 + v1355 + ((v1345 + ((v23 + v13 + ((v1343 + v13 + ((v41 + v1353) & ~v1353)) & ~v13) + 1) & ~v13)) & ~v39)) & ~v1355)
      + v1347;
  v1236 = v1355 + 17;
  v56 = v1347 + ((v1355 + 17 + v1364) & ~v1355);
  v1258 = v1347 + ((v1353 + 8) & ~v1355);
  if (v1258 <= v1322
              + 24
              + ((v49
                + ((v49
                  + ((v1347
                    + v1354
                    + ((v38 + v48 + ((v23 + v32 + ((v13 + 16 + ((v1326 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v13)) & ~v32)) & ~v48)) & ~v1354)) & ~v1354)) & ~v1354))
    v57 = v1322
        + 24
        + ((v49
          + ((v49
            + ((v1347
              + v1354
              + ((v38 + v1355 + ((v23 + v32 + ((v13 + 16 + ((v1326 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v13)) & ~v32)) & ~v1355)) & ~v1354)) & ~v1354)) & ~v1354);
  else
    v57 = v1347 + ((v1353 + 8) & ~v1355);
  v1264 = ((v14 + 8 + ((v1356 + 7 + ((v52 + v14 + v1315) & ~v14)) & 0xFFFFFFFFFFFFFFF8)) & ~v14) + v1356;
  v1265 = v50;
  if (v57 <= v50)
    v57 = v50;
  v1267 = ((v1368 + 7 + ((v35 + 40 + v30) & v1367)) & 0xFFFFFFFFFFFFFFF8) + 8;
  v1268 = v52;
  if (v57 <= v52)
    v57 = v52;
  if (v57 <= ((v14 + 8 + ((v1356 + 7 + ((v52 + v14 + v1315) & ~v14)) & 0xFFFFFFFFFFFFFFF8)) & ~v14) + v1356)
    v57 = ((v14 + 8 + ((v1356 + 7 + ((v52 + v14 + v1315) & ~v14)) & 0xFFFFFFFFFFFFFFF8)) & ~v14) + v1356;
  v1262 = v55;
  v1263 = ((((((v53 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v57 <= v1263)
    v57 = ((((((v53 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v57 <= v55)
    v57 = v55;
  v1266 = (((((v1366 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v57 <= v1266)
    v57 = (((((v1366 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v57 <= ((v1368 + 7 + ((v35 + 40 + v30) & v1367)) & 0xFFFFFFFFFFFFFFF8) + 8)
    v57 = ((v1368 + 7 + ((v35 + 40 + v30) & v1367)) & 0xFFFFFFFFFFFFFFF8) + 8;
  v1259 = v56 + 1;
  if (v57 <= v56 + 1)
    v58 = v56 + 1;
  else
    v58 = v57;
  v1317 = v1336 & ~v1362;
  v59 = (((v47 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v60 = ((((v59 + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 41;
  v1238 = v13 + 40;
  v61 = ((v54
        + ((v13
          + 40
          + ((((((v59 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v13)) & ~v13)
      + v23;
  v62 = (v1313 + 23) & 0xFFFFFFFFFFFFFFF8;
  v63 = v62 + 8;
  v64 = ((v62 + 47) & 0xFFFFFFFFFFFFFFF8) + 40;
  v1231 = v1347 + v13;
  v1232 = ((v1347 + v13 + ((v64 + v1355) & ~v1355)) & ~v13) + v23;
  v1243 = v1232 + 7;
  v1337 = ((v1353 + 8 + ((v1232 + 7 + v1315) & 0xFFFFFFFFFFFFFFF8)) & ~v1355) + v1347;
  v1241 = v13 + 24;
  v1316 = v38 + v1355;
  v1260 = v1322 + 16 + v1354;
  v1261 = v1322 + 24;
  v65 = v1322
      + 24
      + ((v49
        + ((v49 + ((v1335 + ((v38 + v1355 + ((v1345 + ((v13 + 24 + v1326) & ~v13)) & ~v39)) & ~v1355)) & ~v1354)) & ~v1354)) & ~v1354);
  v66 = (v1320 + 15) & 0xFFFFFFFFFFFFFFF8;
  v67 = v1360;
  v68 = ((v67 + 80) & ~v67) + v1373;
  v69 = ((v67 + 56) & ~v67) + v1373;
  v70 = (v53 + 23) & 0xFFFFFFFFFFFFFFF8;
  v1237 = v13 + 18;
  v71 = ((v13 + 18 + v70) & ~v13) + v23;
  v72 = ((v51
        + ((v13
          + 8
          + ((((((((((v70 + 25) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v13)) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v73 = v66 + 16;
  v74 = v66 + 8;
  v75 = v1320 + 8;
  v76 = v1364 + 8;
  v77 = ((v1364 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  v78 = (((v1322 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v1327 = v13 + 8;
  v1250 = v1348 + v13;
  v79 = ((v1333
        + ((v1369
          + ((((v1340
              + ((v1340
                + v1352
                + ((v1345
                  + ((v54 + ((v13 + 8 + ((((v78 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v13)) & ~v13)) & ~v1352)) & ~v1352)
              + 9) & 0xFFFFFFFFFFFFFFF8)
            + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v1355)) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v80 = (v1324 & ~v1355) + v1347;
  v1235 = v1361 + 8;
  v1239 = v1368 + v13;
  v1325 = v1348 + 7;
  v1365 = v13;
  v81 = ((v1348
        + v1355
        + ((v1342
          + ((v51
            + ((v13
              + 9
              + ((((v51 + ((v1368 + v13 + ((v1361 + 8 + v78) & v1367)) & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v13)) & 0xFFFFFFFFFFFFFFF8)) & ~v13)) & ~v1355)
      + v1347;
  v82 = v58;
  v1323 = v60;
  if (v58 <= v60)
    v82 = v60;
  v1321 = v61;
  if (v82 <= v61)
    v82 = v61;
  if (v82 <= v63)
    v82 = v63;
  if (v82 <= v1337)
    v82 = v1337;
  if (v82 <= v1339)
    v82 = v1339;
  if (v82 <= v65)
    v82 = v65;
  if (v82 <= v73)
    v82 = v73;
  v1319 = ((v1366 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
  if (v82 <= v1319)
    v82 = ((v1366 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
  v1252 = v68;
  v1253 = v69;
  if (v82 <= v68)
    v82 = v68;
  if (v82 <= v69)
    v82 = v69;
  v1251 = ((((v1350 + ((v1346 + (v51 & 0xFFFFFFFFFFFFFFF8)) & ~v1360)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  if (v82 <= v1251)
    v82 = ((((v1350 + ((v1346 + (v51 & 0xFFFFFFFFFFFFFFF8)) & ~v1360)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  v1254 = v71;
  v1255 = v72;
  if (v82 <= v71)
    v82 = v71;
  if (v82 <= v72)
    v82 = v72;
  v1256 = v1313 + 40;
  v1257 = v76;
  if (v82 <= v1313 + 40)
    v82 = v1313 + 40;
  v83 = v74;
  if (v82 <= v74)
    v82 = v74;
  if (v82 <= v64)
    v82 = v64;
  v1314 = v75;
  if (v82 <= v75)
    v82 = v75;
  if (v82 <= v76)
    v82 = v76;
  if (v82 <= v77)
    v82 = v77;
  if (v82 <= v1366)
    v82 = v1366;
  if (v82 <= v79)
    v82 = v79;
  if (v82 <= v80)
    v82 = v80;
  if (v82 <= v81)
    v82 = v81;
  if (v82 <= 8)
    v84 = 8;
  else
    v84 = v82;
  v85 = ((v84 + 8 + v1317) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v85 <= v1328)
    v85 = v1328;
  if (v85 <= 8)
    v86 = 8;
  else
    v86 = v85;
  if (*((unsigned __int8 *)a2 + v86) >= 4u)
  {
    if (v86 <= 3)
      v87 = v86;
    else
      v87 = 4;
    __asm { BR              X12 }
  }
  v88 = a1;
  switch(*((_BYTE *)a2 + v86))
  {
    case 0:
      (*(void (**)(_OWORD *, _OWORD *, uint64_t, _QWORD))(v1298 + 32))(a1, a2, v1300, *(unsigned int *)(v31 + 84));
      *((_BYTE *)a1 + v86) = 0;
      return v88;
    case 1:
      v1228 = *(_DWORD *)(v31 + 84);
      v1218 = v1340 + v1352;
      v1222 = v64;
      v1223 = v73;
      v1225 = v65;
      v1226 = v79;
      v1220 = v81;
      v1221 = v80;
      v1329 = v84;
      v1318 = v84 + 8;
      v89 = ~v1312;
      *a1 = *a2;
      v90 = (void *)(((unint64_t)a1 + v1360 + 16) & ~v1360);
      v1229 = ~v1360;
      v91 = (char *)(((unint64_t)a2 + v1360 + 16) & ~v1360);
      v1224 = v63;
      v1219 = v13 + 9;
      if (__swift_getEnumTagSinglePayload((uint64_t)v91, 1, v1311))
      {
        v92 = v1373;
        memcpy(v90, v91, v1373);
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v1290 + 32))(v90, v91, v1311);
        __swift_storeEnumTagSinglePayload((uint64_t)v90, 0, 1, v1311);
        v92 = v1373;
      }
      v1301 = ~v1355;
      v94 = ~v1353;
      v1331 = ~v1365;
      v1299 = ~v1296;
      v95 = ~v1294;
      v96 = &v91[v92];
      v97 = (_BYTE *)(((unint64_t)v90 + v92 + v1312) & v89);
      v98 = (unsigned __int8 *)((unint64_t)&v96[v1312] & v89);
      v99 = *v98;
      v1295 = 8 * v1310;
      v1297 = ~v1353;
      v1227 = ~v1312;
      if (v99 > 2)
      {
        v107 = v1356;
        memcpy(v97, v98, v1356);
LABEL_162:
        v146 = v1293;
        goto LABEL_163;
      }
      *v97 = v99;
      v100 = (_OWORD *)((unint64_t)&v97[v1289] & v89);
      v101 = (__int128 *)((unint64_t)&v98[v1289] & v89);
      v102 = *((unsigned __int8 *)v101 + v1291);
      if (v102 > 2)
      {
        memcpy(v100, (const void *)((unint64_t)&v98[v1289] & v89), __n);
LABEL_137:
        v107 = v1356;
        goto LABEL_162;
      }
      if (v102 != 2)
      {
        if (v102 == 1)
        {
          v103 = *v101;
          v104 = *(_OWORD *)(((unint64_t)&v98[v1289] & v89) + 0x10);
          *(_QWORD *)(((unint64_t)&v97[v1289] & v89) + 0x20) = *(_QWORD *)(((unint64_t)&v98[v1289] & v89)
                                                                                + 0x20);
          *v100 = v103;
          *(_OWORD *)(((unint64_t)&v97[v1289] & v89) + 0x10) = v104;
          v1216 = (unint64_t)&v97[v1289] & v89;
          v105 = (void *)(((unint64_t)v100 + v1346) & v1229);
          v106 = (const void *)(((unint64_t)v101 + v1346) & v1229);
          if (__swift_getEnumTagSinglePayload((uint64_t)v106, 1, v1311))
          {
            memcpy(v105, v106, v1373);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1290 + 32))(v105, v106, v1311);
            __swift_storeEnumTagSinglePayload((uint64_t)v105, 0, 1, v1311);
          }
          v120 = (_OWORD *)(((unint64_t)v105 + v1350) & 0xFFFFFFFFFFFFFFF8);
          v121 = (_OWORD *)(((unint64_t)v106 + v1350) & 0xFFFFFFFFFFFFFFF8);
          *v120 = *v121;
          v122 = ((unint64_t)v120 + 23) & 0xFFFFFFFFFFFFFFF8;
          v123 = ((unint64_t)v121 + 23) & 0xFFFFFFFFFFFFFFF8;
          v124 = *(_QWORD *)v123;
          *(_BYTE *)(v122 + 8) = *(_BYTE *)(v123 + 8);
          *(_QWORD *)v122 = v124;
          v125 = ((unint64_t)v120 + 39) & 0xFFFFFFFFFFFFFFF8;
          v126 = ((unint64_t)v121 + 39) & 0xFFFFFFFFFFFFFFF8;
          v127 = *(_QWORD *)v126;
          *(_BYTE *)(v125 + 8) = *(_BYTE *)(v126 + 8);
          *(_QWORD *)v125 = v127;
          v128 = ((unint64_t)v120 + 55) & 0xFFFFFFFFFFFFFFF8;
          v129 = ((unint64_t)v121 + 55) & 0xFFFFFFFFFFFFFFF8;
          v130 = *(_QWORD *)v129;
          *(_BYTE *)(v128 + 8) = *(_BYTE *)(v129 + 8);
          *(_QWORD *)v128 = v130;
          v131 = (_OWORD *)(((unint64_t)v120 + 71) & 0xFFFFFFFFFFFFFFF8);
          v132 = (_OWORD *)(((unint64_t)v121 + 71) & 0xFFFFFFFFFFFFFFF8);
          *v131 = *v132;
          v133 = ((unint64_t)v131 + 23) & 0xFFFFFFFFFFFFFFF8;
          v134 = ((unint64_t)v132 + 23) & 0xFFFFFFFFFFFFFFF8;
          v135 = *(_OWORD *)v134;
          v136 = *(_OWORD *)(v134 + 16);
          *(_QWORD *)(v133 + 32) = *(_QWORD *)(v134 + 32);
          *(_OWORD *)v133 = v135;
          *(_OWORD *)(v133 + 16) = v136;
          v137 = (_BYTE *)((v1369 + v133) & v1301);
          v138 = (_BYTE *)((v1369 + v134) & v1301);
          if (v1282 >= 0x7FFFFFFF)
          {
            v142 = (const void *)((unint64_t)&v138[v1287] & v94);
            v143 = (_BYTE *)((v1369 + v134) & v1301);
            EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v142, v1275, v1286);
            v138 = v143;
            v107 = v1356;
            if (EnumTagSinglePayload <= 1)
            {
              v140 = v138 + 8;
              v141 = v1287;
              goto LABEL_146;
            }
          }
          else
          {
            v139 = *(_QWORD *)(((v1369 + v134) & v1301) + 0x10);
            if (v139 >= 0xFFFFFFFF)
              LODWORD(v139) = -1;
            v107 = v1356;
            if ((int)v139 - 1 < 0)
            {
              v140 = v138 + 8;
              v141 = v1287;
              v142 = (const void *)((unint64_t)&v138[v1287] & v94);
LABEL_146:
              *v137 = *v138;
              memcpy(v137 + 8, v140, 0x69uLL);
              v145 = (void *)((unint64_t)&v137[v141] & v94);
              if (__swift_getEnumTagSinglePayload((uint64_t)v142, 1, v1286))
              {
                memcpy(v145, v142, v1343);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1271 + 32))(v145, v142, v1286);
                __swift_storeEnumTagSinglePayload((uint64_t)v145, 0, 1, v1286);
              }
              v107 = v1356;
              goto LABEL_161;
            }
          }
          memcpy(v137, v138, v1347);
LABEL_161:
          *(_BYTE *)(v1216 + v1291) = 1;
          goto LABEL_162;
        }
        v118 = *v101;
        v119 = *(_OWORD *)(((unint64_t)&v98[v1289] & v89) + 0x20);
        *(_OWORD *)(((unint64_t)&v97[v1289] & v89) + 0x10) = *(_OWORD *)(((unint64_t)&v98[v1289] & v89)
                                                                              + 0x10);
        *(_OWORD *)(((unint64_t)&v97[v1289] & v89) + 0x20) = v119;
        *v100 = v118;
        *((_BYTE *)v100 + v1291) = 0;
        goto LABEL_137;
      }
      memcpy(v100, (const void *)((unint64_t)&v98[v1289] & v89), 0x48uLL);
      v1217 = (unint64_t)&v97[v1289] & v89;
      v108 = (const void *)(((unint64_t)v101 + 79) & 0xFFFFFFFFFFFFFFF8);
      memcpy((void *)((v1217 + 79) & 0xFFFFFFFFFFFFFFF8), v108, 0x48uLL);
      v109 = (_QWORD *)((((v1217 + 79) & 0xFFFFFFFFFFFFFFF8) + 79) & 0xFFFFFFFFFFFFF8);
      v110 = (_QWORD *)(((unint64_t)v108 + 79) & 0xFFFFFFFFFFFFF8);
      *v109 = *v110;
      v111 = (_QWORD *)(((unint64_t)v109 + 15) & 0xFFFFFFFFFFFFFFF8);
      v112 = (_QWORD *)(((unint64_t)v110 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v111 = *v112;
      v113 = (void *)(((unint64_t)v111 + v1327) & v1331);
      v114 = (_BYTE *)(((unint64_t)v112 + v1327) & v1331);
      if (v1349)
      {
        v115 = v1285;
        v107 = v1356;
        if (v1280 >= v1285)
        {
          v116 = ((unint64_t)v112 + v1327) & v1331;
          v115 = v1280;
          v117 = v1283;
        }
        else
        {
          v116 = (unint64_t)&v114[v1284] & v1299;
          v117 = v1288;
        }
        v149 = __swift_getEnumTagSinglePayload(v116, v115, v117);
        v146 = v1293;
      }
      else
      {
        v107 = v1356;
        v146 = v1293;
        if (!v114[v1310])
          goto LABEL_663;
        v147 = (v114[v1310] - 1) << v1295;
        if (v1310 > 3)
          v147 = 0;
        if ((_DWORD)v1310)
        {
          if (v1310 <= 3)
            v148 = v1310;
          else
            v148 = 4;
          __asm { BR              X11 }
        }
        v149 = v147 + 1;
      }
      if (v149)
      {
        memcpy(v113, v114, v1348);
        goto LABEL_665;
      }
LABEL_663:
      (*(void (**)(void *, _BYTE *, uint64_t))(v1277 + 32))(v113, v114, v1283);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1278 + 32))(((unint64_t)v113 + v1284) & v1299, (unint64_t)&v114[v1284] & v1299, v1288);
      if (!v1349)
        *((_BYTE *)v113 + v1310) = 0;
LABEL_665:
      *((_BYTE *)v113 + v1348) = v114[v1348];
      *(_BYTE *)(v1217 + v1291) = 2;
LABEL_163:
      v150 = ~v146;
      v151 = ~v1362;
      v152 = &v97[v107];
      *(_WORD *)v152 = *(_WORD *)&v98[v107];
      v152[2] = v98[v107 + 2];
      v152[3] = v98[v107 + 3];
      v153 = (unint64_t)&v97[v107 + 11] & 0xFFFFFFFFFFFFFFF8;
      v154 = (unint64_t)&v98[v107 + 11] & 0xFFFFFFFFFFFFFFF8;
      v155 = *(_OWORD *)v154;
      v156 = *(_OWORD *)(v154 + 16);
      v157 = *(_OWORD *)(v154 + 32);
      *(_OWORD *)(v153 + 41) = *(_OWORD *)(v154 + 41);
      *(_OWORD *)(v153 + 16) = v156;
      *(_OWORD *)(v153 + 32) = v157;
      *(_OWORD *)v153 = v155;
      *(_BYTE *)(v153 + 57) = *(_BYTE *)(v154 + 57);
      v158 = (_OWORD *)((v1302 + v153) & v95);
      v159 = (_OWORD *)((v1302 + v154) & v95);
      if (v1303 < 0x80000001)
      {
        v160 = *(_QWORD *)(((v1302 + v154) & v95) + 8);
        v161 = v1305;
        if (v160 >= 0xFFFFFFFF)
        {
          v162 = (const void *)(((unint64_t)v159 + v1305) & v150);
          goto LABEL_167;
        }
LABEL_169:
        v164 = v1292;
        memcpy(v158, v159, v1292);
        goto LABEL_172;
      }
      v161 = v1305;
      v162 = (const void *)(((unint64_t)v159 + v1305) & v150);
      if (__swift_getEnumTagSinglePayload((uint64_t)v162, v1303, v1304) >= 2)
        goto LABEL_169;
LABEL_167:
      *v158 = *v159;
      v163 = (void *)(((unint64_t)v158 + v161) & v150);
      if (__swift_getEnumTagSinglePayload((uint64_t)v162, 1, v1304))
      {
        memcpy(v163, v162, v1281);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v1276 + 32))(v163, v162, v1304);
        __swift_storeEnumTagSinglePayload((uint64_t)v163, 0, 1, v1304);
      }
      v164 = v1292;
LABEL_172:
      v165 = v1309 + 1;
      v166 = (_QWORD *)(((unint64_t)v158 + v1362 + v164) & v151);
      v167 = (_QWORD *)(((unint64_t)v159 + v1362 + v164) & v151);
      v168 = v1329;
      v170 = ~v1361;
      v171 = ~v1354;
      v172 = ~v1308;
      v1230 = v86;
      switch(*((_BYTE *)v167 + v1329))
      {
        case 0:
          v1370 = v83;
          v1357 = ~v1352;
          if (__swift_getEnumTagSinglePayload((uint64_t)v167, 1, v1311))
          {
            memcpy(v166, v167, v1373);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1290 + 32))(v166, v167, v1311);
            __swift_storeEnumTagSinglePayload((uint64_t)v166, 0, 1, v1311);
          }
          v256 = ((unint64_t)v166 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v1363 = v167;
          v257 = ((unint64_t)v167 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v258 = *(_OWORD *)v257;
          v259 = *(_OWORD *)(v257 + 16);
          *(_QWORD *)(v256 + 32) = *(_QWORD *)(v257 + 32);
          *(_OWORD *)v256 = v258;
          *(_OWORD *)(v256 + 16) = v259;
          v260 = (_OWORD *)((v256 + 47) & 0xFFFFFFFFFFFFFFF8);
          v261 = (_OWORD *)((v257 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v260 = *v261;
          v262 = (_QWORD *)(((unint64_t)v260 + 23) & 0xFFFFFFFFFFFFF8);
          v263 = (_QWORD *)(((unint64_t)v261 + 23) & 0xFFFFFFFFFFFFF8);
          *v262 = *v263;
          v264 = (_OWORD *)(((unint64_t)v262 + 15) & 0xFFFFFFFFFFFFFFF8);
          v265 = (_OWORD *)(((unint64_t)v263 + 15) & 0xFFFFFFFFFFFFFFF8);
          *v264 = *v265;
          v266 = (_OWORD *)(((unint64_t)v264 + v1273) & v1367);
          v267 = (_OWORD *)(((unint64_t)v265 + v1273) & v1367);
          if (v1228 > 0x7FFFFFFE)
          {
            v270 = (_OWORD *)(((unint64_t)v267 + 23) & 0xFFFFFFFFFFFFFFF8);
            v271 = ((unint64_t)v270 + 23) & 0xFFFFFFFFFFFFFFF8;
            v272 = __swift_getEnumTagSinglePayload((v1361 + v271 + 33) & v170, v1228, v1269);
            v269 = v1368;
            if (!v272)
              goto LABEL_276;
          }
          else
          {
            v268 = *(_QWORD *)((((unint64_t)v265 + v1273) & v1367) + 8);
            if (v268 >= 0xFFFFFFFF)
              LODWORD(v268) = -1;
            v269 = v1368;
            if ((v268 + 1) <= 1)
            {
              v270 = (_OWORD *)(((unint64_t)v267 + 23) & 0xFFFFFFFFFFFFFFF8);
              v271 = ((unint64_t)v270 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_276:
              *v266 = *v267;
              v274 = (_OWORD *)(((unint64_t)v266 + 23) & 0xFFFFFFFFFFFFFFF8);
              *v274 = *v270;
              v275 = ((unint64_t)v274 + 23) & 0xFFFFFFFFFFFFFFF8;
              *(_OWORD *)v275 = *(_OWORD *)v271;
              *(_BYTE *)(v275 + 16) = *(_BYTE *)(v271 + 16);
              v276 = ((unint64_t)v274 + 47) & 0xFFFFFFFFFFFFFFF8;
              v277 = ((unint64_t)v270 + 47) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)v276 = *(_QWORD *)v277;
              *(_BYTE *)(v276 + 8) = *(_BYTE *)(v277 + 8);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1332 + 32))((v1361 + 9 + v276) & v170, (v1361 + 9 + v277) & v170, v1269);
              v273 = v1368;
LABEL_277:
              *((_BYTE *)v266 + v273) = *((_BYTE *)v267 + v273);
              v278 = ((unint64_t)v266 + v273) & 0xFFFFFFFFFFFFFFF8;
              v279 = ((unint64_t)v267 + v273) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)(v278 + 8) = *(_QWORD *)(v279 + 8);
              v280 = (_OWORD *)((v278 + 23) & 0xFFFFFFFFFFFFFFF8);
              v281 = (_OWORD *)((v279 + 23) & 0xFFFFFFFFFFFFFFF8);
              *v280 = *v281;
              v282 = (void *)(((unint64_t)v280 + v1342) & v1331);
              v283 = (_BYTE *)(((unint64_t)v281 + v1342) & v1331);
              if (v1349)
              {
                v284 = v1285;
                v285 = v1280;
                if (v1280 >= v1285)
                {
                  v286 = ((unint64_t)v281 + v1342) & v1331;
                  v287 = v1283;
                }
                else
                {
                  v286 = (unint64_t)&v283[v1284] & v1299;
                  v285 = v1285;
                  v287 = v1288;
                }
                v688 = __swift_getEnumTagSinglePayload(v286, v285, v287);
              }
              else
              {
                v284 = v1285;
                if (!v283[v1310])
                  goto LABEL_759;
                v632 = (v283[v1310] - 1) << v1295;
                if (v1310 > 3)
                  v632 = 0;
                if ((_DWORD)v1310)
                {
                  if (v1310 <= 3)
                    v633 = v1310;
                  else
                    v633 = 4;
                  __asm { BR              X11 }
                }
                v688 = v632 + 1;
              }
              if (v688)
              {
                memcpy(v282, v283, v1348);
                goto LABEL_761;
              }
LABEL_759:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1277 + 32))(v282, v283, v1283);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1278 + 32))(((unint64_t)v282 + v1284) & v1299, (unint64_t)&v283[v1284] & v1299, v1288);
              if (!v1349)
                *((_BYTE *)v282 + v1310) = 0;
LABEL_761:
              v815 = (_QWORD *)(((unint64_t)v282 + v1345) & v1357);
              v816 = (uint64_t *)((unint64_t)&v283[v1345] & v1357);
              if ((v284 & 0x80000000) != 0)
              {
                v818 = __swift_getEnumTagSinglePayload(((unint64_t)v816 + v1270) & v1299, v284, v1288);
              }
              else
              {
                v817 = *v816;
                if ((unint64_t)*v816 >= 0xFFFFFFFF)
                  LODWORD(v817) = -1;
                v818 = v817 + 1;
              }
              if (v818)
              {
                memcpy(v815, v816, v1340);
              }
              else
              {
                *v815 = *v816;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v1278 + 32))(((unint64_t)v815 + v1270) & v1299, ((unint64_t)v816 + v1270) & v1299, v1288);
              }
              v819 = (_BYTE *)(((unint64_t)v815 + v1316) & v1301);
              v820 = (_QWORD *)(((unint64_t)v816 + v1316) & v1301);
              v1306 = v166;
              if (v1282 >= 0x7FFFFFFF)
              {
                v825 = (const void *)(((unint64_t)v820 + v1287) & v1297);
                if (__swift_getEnumTagSinglePayload((uint64_t)v825, v1275, v1286) <= 1)
                {
                  v822 = v820 + 1;
                  v823 = v1287;
                  v824 = ~v1353;
                  goto LABEL_776;
                }
              }
              else
              {
                v821 = v820[2];
                if (v821 >= 0xFFFFFFFF)
                  LODWORD(v821) = -1;
                if ((int)v821 - 1 < 0)
                {
                  v822 = v820 + 1;
                  v823 = v1287;
                  v824 = ~v1353;
                  v825 = (const void *)(((unint64_t)v820 + v1287) & v1297);
LABEL_776:
                  *v819 = *(_BYTE *)v820;
                  memcpy(v819 + 8, v822, 0x69uLL);
                  v826 = (void *)((unint64_t)&v819[v823] & v824);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v825, 1, v1286))
                  {
                    memcpy(v826, v825, v1343);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1271 + 32))(v826, v825, v1286);
                    __swift_storeEnumTagSinglePayload((uint64_t)v826, 0, 1, v1286);
                  }
                  v827 = v1347;
LABEL_781:
                  v828 = (unint64_t)&v819[v1354 + v827];
                  v829 = (unint64_t)v820 + v1354 + v827;
                  v830 = v829 & v171;
                  if (v1272 < 0x7FFFFFFF)
                  {
                    if (*(_QWORD *)(((v1350 + v830) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                      goto LABEL_783;
                  }
                  else if (__swift_getEnumTagSinglePayload(v829 & v171, v1341, v1311) >= 2)
                  {
LABEL_783:
                    memcpy((void *)(v828 & v171), (const void *)(v829 & v171), v1274);
                    v831 = v1274;
                    v832 = v1373 + 7;
                    goto LABEL_790;
                  }
                  if (__swift_getEnumTagSinglePayload(v829 & v171, 1, v1311))
                  {
                    memcpy((void *)(v828 & v171), (const void *)(v829 & v171), v1373);
                  }
                  else
                  {
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v1290 + 32))(v828 & v171, v829 & v171, v1311);
                    __swift_storeEnumTagSinglePayload(v828 & v171, 0, 1, v1311);
                  }
                  v832 = v1373 + 7;
                  v833 = (v1350 + (v828 & v171)) & 0xFFFFFFFFFFFFFFF8;
                  v834 = (v1350 + v830) & 0xFFFFFFFFFFFFFFF8;
                  v835 = *(_OWORD *)v834;
                  v836 = *(_OWORD *)(v834 + 16);
                  *(_QWORD *)(v833 + 32) = *(_QWORD *)(v834 + 32);
                  *(_OWORD *)v833 = v835;
                  *(_OWORD *)(v833 + 16) = v836;
                  v837 = (v833 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v838 = (v834 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v839 = *(_OWORD *)v838;
                  v840 = *(_OWORD *)(v838 + 16);
                  *(_QWORD *)(v837 + 32) = *(_QWORD *)(v838 + 32);
                  *(_OWORD *)v837 = v839;
                  *(_OWORD *)(v837 + 16) = v840;
                  *(_OWORD *)((v837 + 47) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v838 + 47) & 0xFFFFFFFFFFFFF8);
                  v831 = v1274;
                  if (v1341)
                    v831 = ((((((v1309 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                         + 16;
LABEL_790:
                  v841 = (v828 | v1360) + v831;
                  v842 = (v829 | v1360) + v831;
                  v843 = v842 & v171;
                  if (v1272 < 0x7FFFFFFF)
                  {
                    if (*(_QWORD *)(((v832 + v843) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                      goto LABEL_792;
                  }
                  else if (__swift_getEnumTagSinglePayload(v842 & v171, v1341, v1311) >= 2)
                  {
LABEL_792:
                    memcpy((void *)(v841 & v171), (const void *)(v842 & v171), v1274);
                    v844 = v1274;
                    v845 = v1373 + 7;
                    goto LABEL_799;
                  }
                  if (__swift_getEnumTagSinglePayload(v842 & v171, 1, v1311))
                  {
                    memcpy((void *)(v841 & v171), (const void *)(v842 & v171), v1373);
                  }
                  else
                  {
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v1290 + 32))(v841 & v171, v842 & v171, v1311);
                    __swift_storeEnumTagSinglePayload(v841 & v171, 0, 1, v1311);
                  }
                  v845 = v1373 + 7;
                  v846 = (v1350 + (v841 & v171)) & 0xFFFFFFFFFFFFFFF8;
                  v847 = (v1350 + v843) & 0xFFFFFFFFFFFFFFF8;
                  v848 = *(_OWORD *)v847;
                  v849 = *(_OWORD *)(v847 + 16);
                  *(_QWORD *)(v846 + 32) = *(_QWORD *)(v847 + 32);
                  *(_OWORD *)v846 = v848;
                  *(_OWORD *)(v846 + 16) = v849;
                  v850 = (v846 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v851 = (v847 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v852 = *(_OWORD *)v851;
                  v853 = *(_OWORD *)(v851 + 16);
                  *(_QWORD *)(v850 + 32) = *(_QWORD *)(v851 + 32);
                  *(_OWORD *)v850 = v852;
                  *(_OWORD *)(v850 + 16) = v853;
                  *(_OWORD *)((v850 + 47) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v851 + 47) & 0xFFFFFFFFFFFFF8);
                  v844 = v1274;
                  if (v1341)
                    v844 = ((((((v1309 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                         + 16;
LABEL_799:
                  v854 = (char *)(((v841 | v1360) + v844) & v171);
                  v855 = (char *)(((v842 | v1360) + v844) & v171);
                  if (v1272 < 0x7FFFFFFF)
                  {
                    v166 = v1306;
                    v856 = v1251;
                    if (*(_QWORD *)(((unint64_t)&v855[v845] & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                    {
LABEL_801:
                      memcpy(v854, v855, v1274);
                      v255 = v1318;
                      v857 = v1342;
                      v858 = v1366;
                      v859 = v1368;
                      v860 = v1339;
                      v861 = ~v1352;
                      v862 = v1268;
                      v863 = v1257;
                      v864 = v1347 + ((v1353 + 8) & ~v1355);
                      v865 = v1221;
                      v866 = v1222;
                      v868 = v77;
                      v867 = v1220;
                      v869 = v1314;
                      v871 = v1255;
                      v870 = v1256;
                      v873 = v1253;
                      v872 = v1254;
                      v874 = v1252;
                      if (!v1341)
                        goto LABEL_810;
                      goto LABEL_809;
                    }
                  }
                  else
                  {
                    v166 = v1306;
                    v856 = v1251;
                    if (__swift_getEnumTagSinglePayload((uint64_t)v855, v1341, v1311) >= 2)
                      goto LABEL_801;
                  }
                  if (__swift_getEnumTagSinglePayload((uint64_t)v855, 1, v1311))
                  {
                    memcpy(v854, v855, v1373);
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(v1290 + 32))(v854, v855, v1311);
                    __swift_storeEnumTagSinglePayload((uint64_t)v854, 0, 1, v1311);
                  }
                  v860 = v1339;
                  v862 = v1268;
                  v873 = v1253;
                  v875 = (unint64_t)&v854[v1350] & 0xFFFFFFFFFFFFFFF8;
                  v876 = (unint64_t)&v855[v1350] & 0xFFFFFFFFFFFFFFF8;
                  v877 = *(_OWORD *)v876;
                  v878 = *(_OWORD *)(v876 + 16);
                  *(_QWORD *)(v875 + 32) = *(_QWORD *)(v876 + 32);
                  *(_OWORD *)v875 = v877;
                  *(_OWORD *)(v875 + 16) = v878;
                  v879 = (v875 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v880 = (v876 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v881 = *(_OWORD *)v880;
                  v882 = *(_OWORD *)(v880 + 16);
                  *(_QWORD *)(v879 + 32) = *(_QWORD *)(v880 + 32);
                  *(_OWORD *)v879 = v881;
                  *(_OWORD *)(v879 + 16) = v882;
                  *(_OWORD *)((v879 + 47) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v880 + 47) & 0xFFFFFFFFFFFFF8);
                  v255 = v1318;
                  v857 = v1342;
                  v858 = v1366;
                  v859 = v1368;
                  v861 = ~v1352;
                  v863 = v1257;
                  v864 = v1347 + ((v1353 + 8) & ~v1355);
                  v865 = v1221;
                  v866 = v1222;
                  v868 = v77;
                  v867 = v1220;
                  v869 = v1314;
                  v871 = v1255;
                  v870 = v1256;
                  v872 = v1254;
                  v874 = v1252;
                  if (!v1341)
                    goto LABEL_810;
                  v1274 = ((((((v1309 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                        + 16;
LABEL_809:
                  v165 = v1309;
LABEL_810:
                  v179 = 0;
                  *(_QWORD *)&v854[v1274] = *(_QWORD *)&v855[v1274];
                  v883 = v1261
                       + ((v1260
                         + ((v1260
                           + ((v1335
                             + ((v1316
                               + ((v1345
                                 + ((v857
                                   + ((((((v1273
                                         + ((((((((v165 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                           + 15) & 0xFFFFFFFFFFFFFFF8)) & v1367)
                                       + v859) & 0xFFFFFFFFFFFFFFF8)
                                     + 23) & 0xFFFFFFFFFFFFFFF8)) & v1331)) & v861)) & v1301)) & v171)) & v171)) & v171);
                  if (v864 > v883)
                    v883 = v864;
                  if (v883 <= v1265)
                    v883 = v1265;
                  if (v883 <= v862)
                    v883 = v862;
                  if (v883 <= v1264)
                    v883 = v1264;
                  if (v883 <= v1263)
                    v883 = v1263;
                  if (v883 <= v1262)
                    v883 = v1262;
                  if (v883 <= v1266)
                    v883 = (((((v1366 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                         + 16;
                  if (v883 <= v1267)
                    v883 = v1267;
                  if (v883 <= v1259)
                    v883 = v1259;
                  if (v883 <= v1323)
                    v883 = v1323;
                  if (v883 <= v1321)
                    v883 = v1321;
                  if (v883 <= v1224)
                    v883 = v1224;
                  if (v883 <= v1337)
                    v883 = v1337;
                  if (v883 <= v860)
                    v883 = v860;
                  if (v883 <= v1225)
                    v883 = v1225;
                  if (v883 <= v864)
                    v883 = v864;
                  if (v883 <= v1223)
                    v883 = v1223;
                  if (v883 <= v1319)
                    v883 = ((v1366 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
                  if (v883 <= v874)
                    v883 = v874;
                  if (v883 <= v873)
                    v883 = v873;
                  if (v883 <= v856)
                    v883 = v856;
                  if (v883 <= v872)
                    v883 = v872;
                  if (v883 <= v871)
                    v883 = v871;
                  if (v883 <= v870)
                    v883 = v870;
                  if (v883 <= v1370)
                    v883 = v1370;
                  if (v883 <= v866)
                    v883 = v866;
                  if (v883 <= v869)
                    v883 = v869;
                  if (v883 <= v863)
                    v883 = v863;
                  if (v883 <= v868)
                    v883 = v868;
                  if (v883 <= v858)
                    v883 = v858;
                  if (v883 <= v1226)
                    v883 = v1226;
                  if (v883 <= v865)
                    v883 = v865;
                  if (v883 <= v867)
                    v883 = v867;
                  if (v883 <= 8)
                    v168 = 8;
                  else
                    v168 = v883;
                  goto LABEL_1121;
                }
              }
              v827 = v1347;
              memcpy(v819, v820, v1347);
              goto LABEL_781;
            }
          }
          v273 = v269;
          memcpy(v266, v267, v269);
          goto LABEL_277;
        case 1:
          *v166 = *v167;
          v173 = v167;
          v174 = (_BYTE *)(((unint64_t)v166 + v1355 + 8) & v1301);
          v175 = v173;
          v176 = (_BYTE *)(((unint64_t)v173 + v1355 + 8) & v1301);
          *v174 = *v176;
          memcpy(v174 + 8, v176 + 8, 0x69uLL);
          v177 = (void *)((unint64_t)&v174[v1287] & v1297);
          v178 = (const void *)((unint64_t)&v176[v1287] & v1297);
          if (__swift_getEnumTagSinglePayload((uint64_t)v178, 1, v1286))
          {
            memcpy(v177, v178, v1343);
            v179 = 1;
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1271 + 32))(v177, v178, v1286);
            v179 = 1;
            __swift_storeEnumTagSinglePayload((uint64_t)v177, 0, 1, v1286);
          }
          goto LABEL_1163;
        case 2:
          *v166 = *v167;
          v179 = 2;
          goto LABEL_266;
        case 3:
          v1358 = ~v1352;
          if (__swift_getEnumTagSinglePayload((uint64_t)v167, 1, v1311))
          {
            memcpy(v166, v167, v1373);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1290 + 32))(v166, v167, v1311);
            __swift_storeEnumTagSinglePayload((uint64_t)v166, 0, 1, v1311);
          }
          v288 = ((unint64_t)v166 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v289 = ((unint64_t)v167 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v290 = *(_OWORD *)v289;
          v291 = *(_OWORD *)(v289 + 16);
          *(_QWORD *)(v288 + 32) = *(_QWORD *)(v289 + 32);
          *(_OWORD *)v288 = v290;
          *(_OWORD *)(v288 + 16) = v291;
          v292 = (_OWORD *)((v288 + 47) & 0xFFFFFFFFFFFFFFF8);
          v293 = (_OWORD *)((v289 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v292 = *v293;
          v294 = (void *)(((unint64_t)v292 + v1342) & v1331);
          v295 = (_BYTE *)(((unint64_t)v293 + v1342) & v1331);
          if (v1349)
          {
            v296 = v1285;
            if (v1280 >= v1285)
            {
              v297 = ((unint64_t)v293 + v1342) & v1331;
              v296 = v1280;
              v298 = v1283;
            }
            else
            {
              v297 = (unint64_t)&v295[v1284] & v1299;
              v298 = v1288;
            }
            v689 = __swift_getEnumTagSinglePayload(v297, v296, v298);
            v634 = v1286;
          }
          else
          {
            v634 = v1286;
            if (!v295[v1310])
              goto LABEL_881;
            v635 = (v295[v1310] - 1) << v1295;
            if (v1310 > 3)
              v635 = 0;
            if ((_DWORD)v1310)
            {
              if (v1310 <= 3)
                v636 = v1310;
              else
                v636 = 4;
              __asm { BR              X11 }
            }
            v689 = v635 + 1;
          }
          if (v689)
          {
            v884 = v167;
            memcpy(v294, v295, v1348);
            goto LABEL_883;
          }
LABEL_881:
          v884 = v167;
          (*(void (**)(void *, _BYTE *, uint64_t))(v1277 + 32))(v294, v295, v1283);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1278 + 32))(((unint64_t)v294 + v1284) & v1299, (unint64_t)&v295[v1284] & v1299, v1288);
          if (!v1349)
            *((_BYTE *)v294 + v1310) = 0;
LABEL_883:
          v885 = v166;
          *((_BYTE *)v294 + v1348) = v295[v1348];
          v886 = ((unint64_t)v294 + v1348 + v1308 + 1) & v172;
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v1244 + 32))(v886, (unint64_t)&v295[v1348 + 1 + v1308] & v172, v1245);
          v887 = (v1242 + v886) & 0xFFFFFFFFFFFFFFF8;
          v888 = (v1242 + ((unint64_t)&v295[v1348 + 1 + v1308] & v172)) & 0xFFFFFFFFFFFFFFF8;
          v889 = *(_QWORD *)(v888 + 32);
          v890 = *(_OWORD *)(v888 + 16);
          *(_OWORD *)v887 = *(_OWORD *)v888;
          *(_OWORD *)(v887 + 16) = v890;
          *(_QWORD *)(v887 + 32) = v889;
          v891 = (_BYTE *)((v1369 + v887) & v1301);
          v892 = (_BYTE *)((v1369 + v888) & v1301);
          if (v1282 >= 0x7FFFFFFF)
          {
            v897 = (unint64_t)&v892[v1287] & v1297;
            if (__swift_getEnumTagSinglePayload(v897, v1275, v634) <= 1)
            {
              v894 = v892 + 8;
              v895 = v1287;
              v896 = ~v1353;
LABEL_890:
              *v891 = *v892;
              memcpy(v891 + 8, v894, 0x69uLL);
              v898 = (unint64_t)&v891[v895] & v896;
              if (__swift_getEnumTagSinglePayload(v897, 1, v634))
              {
                v899 = (void *)v898;
                v900 = (const void *)v897;
                v901 = v1343;
LABEL_893:
                memcpy(v899, v900, v901);
                goto LABEL_894;
              }
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v1271 + 32))(v898, v897, v634);
              __swift_storeEnumTagSinglePayload(v898, 0, 1, v634);
LABEL_894:
              v902 = (void *)((unint64_t)&v891[v1365 + v1347] & v1331);
              v903 = (_BYTE *)((unint64_t)&v892[v1365 + v1347] & v1331);
              v166 = v885;
              if (v1349)
              {
                v904 = v1285;
                v905 = v1280;
                if (v1280 >= v1285)
                {
                  v906 = (uint64_t)v903;
                  v907 = v1283;
                }
                else
                {
                  v906 = (unint64_t)&v903[v1284] & v1299;
                  v905 = v1285;
                  v907 = v1288;
                }
                v910 = __swift_getEnumTagSinglePayload(v906, v905, v907);
              }
              else
              {
                v904 = v1285;
                if (!v903[v1310])
                  goto LABEL_944;
                v908 = (v903[v1310] - 1) << v1295;
                if (v1310 > 3)
                  v908 = 0;
                if ((_DWORD)v1310)
                {
                  if (v1310 <= 3)
                    v909 = v1310;
                  else
                    v909 = 4;
                  __asm { BR              X11 }
                }
                v910 = v908 + 1;
              }
              if (v910)
              {
                memcpy(v902, v903, v1348);
LABEL_946:
                v925 = (_QWORD *)(((unint64_t)v902 + v1345) & v1358);
                v926 = (uint64_t *)((unint64_t)&v903[v1345] & v1358);
                if ((v904 & 0x80000000) != 0)
                {
                  v928 = __swift_getEnumTagSinglePayload(((unint64_t)v926 + v1270) & v1299, v904, v1288);
                }
                else
                {
                  v927 = *v926;
                  if ((unint64_t)*v926 >= 0xFFFFFFFF)
                    LODWORD(v927) = -1;
                  v928 = v927 + 1;
                }
                if (v928)
                {
                  memcpy(v925, v926, v1340);
                }
                else
                {
                  *v925 = *v926;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1278 + 32))(((unint64_t)v925 + v1270) & v1299, ((unint64_t)v926 + v1270) & v1299, v1288);
                }
                v179 = 3;
                v255 = v1318;
                v167 = v884;
                goto LABEL_1313;
              }
LABEL_944:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1277 + 32))(v902, v903, v1283);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1278 + 32))(((unint64_t)v902 + v1284) & v1299, (unint64_t)&v903[v1284] & v1299, v1288);
              if (!v1349)
                *((_BYTE *)v902 + v1310) = 0;
              goto LABEL_946;
            }
          }
          else
          {
            v893 = *(_QWORD *)(((v1369 + v888) & v1301) + 0x10);
            if (v893 >= 0xFFFFFFFF)
              LODWORD(v893) = -1;
            if ((int)v893 - 1 < 0)
            {
              v894 = v892 + 8;
              v895 = v1287;
              v896 = ~v1353;
              v897 = (unint64_t)&v892[v1287] & v1297;
              goto LABEL_890;
            }
          }
          v899 = v891;
          v900 = v892;
          v901 = v1347;
          goto LABEL_893;
        case 4:
          if (__swift_getEnumTagSinglePayload((uint64_t)v167, 1, v1311))
          {
            memcpy(v166, v167, v1373);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1290 + 32))(v166, v167, v1311);
            __swift_storeEnumTagSinglePayload((uint64_t)v166, 0, 1, v1311);
          }
          v299 = ((unint64_t)v166 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v300 = v167;
          v301 = ((unint64_t)v167 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v302 = *(_OWORD *)v301;
          v303 = *(_OWORD *)(v301 + 16);
          *(_QWORD *)(v299 + 32) = *(_QWORD *)(v301 + 32);
          *(_OWORD *)v299 = v302;
          *(_OWORD *)(v299 + 16) = v303;
          v304 = (_OWORD *)((v299 + 47) & 0xFFFFFFFFFFFFFFF8);
          v305 = (_OWORD *)((v301 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v304 = *v305;
          v306 = (_OWORD *)(((unint64_t)v304 + 23) & 0xFFFFFFFFFFFFFFF8);
          v307 = (_OWORD *)(((unint64_t)v305 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v306 = *v307;
          v308 = ((unint64_t)v306 + 23) & 0xFFFFFFFFFFFFFFF8;
          v309 = ((unint64_t)v307 + 23) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)v308 = *(_OWORD *)v309;
          *(_BYTE *)(v308 + 16) = *(_BYTE *)(v309 + 16);
          v310 = ((unint64_t)v306 + 47) & 0xFFFFFFFFFFFFFFF8;
          v311 = ((unint64_t)v307 + 47) & 0xFFFFFFFFFFFFFFF8;
          v312 = *(_OWORD *)v311;
          v313 = *(_OWORD *)(v311 + 16);
          *(_QWORD *)(v310 + 32) = *(_QWORD *)(v311 + 32);
          *(_OWORD *)v310 = v312;
          *(_OWORD *)(v310 + 16) = v313;
          *(_BYTE *)(v310 + 40) = *(_BYTE *)(v311 + 40);
          v314 = (_BYTE *)((v1248 + v310) & v1301);
          v315 = (_BYTE *)((v1248 + v311) & v1301);
          if (v1282 >= 0x7FFFFFFF)
          {
            v321 = (const void *)((unint64_t)&v315[v1287] & v1297);
            v317 = v1348 + 7;
            if (__swift_getEnumTagSinglePayload((uint64_t)v321, v1275, v1286) <= 1)
            {
              v318 = v166;
              v319 = v315 + 8;
              v320 = ~v1353;
              goto LABEL_293;
            }
          }
          else
          {
            v316 = *(_QWORD *)(((v1248 + v311) & v1301) + 0x10);
            if (v316 >= 0xFFFFFFFF)
              LODWORD(v316) = -1;
            v317 = v1348 + 7;
            if ((int)v316 - 1 < 0)
            {
              v318 = v166;
              v319 = v315 + 8;
              v320 = ~v1353;
              v321 = (const void *)((unint64_t)&v315[v1287] & v1297);
LABEL_293:
              *v314 = *v315;
              memcpy(v314 + 8, v319, 0x69uLL);
              v322 = (void *)((unint64_t)&v314[v1287] & v320);
              if (__swift_getEnumTagSinglePayload((uint64_t)v321, 1, v1286))
              {
                memcpy(v322, v321, v1343);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1271 + 32))(v322, v321, v1286);
                __swift_storeEnumTagSinglePayload((uint64_t)v322, 0, 1, v1286);
              }
              v166 = v318;
LABEL_641:
              v721 = (void *)((unint64_t)&v314[v1365 + v1347] & v1331);
              v722 = (_BYTE *)((unint64_t)&v315[v1365 + v1347] & v1331);
              if (v1349)
              {
                v723 = v1285;
                if (v1280 >= v1285)
                {
                  v724 = (uint64_t)v722;
                  v723 = v1280;
                  v725 = v1283;
                }
                else
                {
                  v724 = (unint64_t)&v722[v1284] & v1299;
                  v725 = v1288;
                }
                v728 = __swift_getEnumTagSinglePayload(v724, v723, v725);
              }
              else
              {
                if (!v722[v1310])
                  goto LABEL_939;
                v726 = (v722[v1310] - 1) << v1295;
                if (v1310 > 3)
                  v726 = 0;
                if ((_DWORD)v1310)
                {
                  if (v1310 <= 3)
                    v727 = v1310;
                  else
                    v727 = 4;
                  __asm { BR              X11 }
                }
                v728 = v726 + 1;
              }
              if (v728)
              {
                memcpy(v721, v722, v1348);
LABEL_941:
                v921 = ((unint64_t)v721 + v317) & 0xFFFFFFFFFFFFFFF8;
                v922 = (unint64_t)&v722[v317] & 0xFFFFFFFFFFFFFFF8;
                v923 = *(_OWORD *)v922;
                v924 = *(_OWORD *)(v922 + 16);
                *(_QWORD *)(v921 + 32) = *(_QWORD *)(v922 + 32);
                *(_OWORD *)v921 = v923;
                *(_OWORD *)(v921 + 16) = v924;
                *(_OWORD *)((v921 + 47) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v922 + 47) & 0xFFFFFFFFFFFFF8);
                v179 = 4;
                v255 = v1318;
                v167 = v300;
LABEL_1313:
                v168 = v1329;
                goto LABEL_1314;
              }
LABEL_939:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1277 + 32))(v721, v722, v1283);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1278 + 32))(((unint64_t)v721 + v1284) & v1299, (unint64_t)&v722[v1284] & v1299, v1288);
              if (!v1349)
                *((_BYTE *)v721 + v1310) = 0;
              goto LABEL_941;
            }
          }
          memcpy(v314, v315, v1347);
          goto LABEL_641;
        case 5:
          if (__swift_getEnumTagSinglePayload((uint64_t)v167, 1, v1311))
          {
            v180 = v1373;
            memcpy(v166, v167, v1373);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1290 + 32))(v166, v167, v1311);
            __swift_storeEnumTagSinglePayload((uint64_t)v166, 0, 1, v1311);
            v180 = v1373;
          }
          v323 = ((unint64_t)v166 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v1363 = v167;
          v324 = ((unint64_t)v167 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v325 = *(_OWORD *)v324;
          v326 = *(_OWORD *)(v324 + 16);
          *(_QWORD *)(v323 + 32) = *(_QWORD *)(v324 + 32);
          *(_OWORD *)v323 = v325;
          *(_OWORD *)(v323 + 16) = v326;
          v327 = ~v1312;
          v328 = (void *)((v1312 + 40 + v323) & v1227);
          v329 = (const void *)((v1312 + 40 + v324) & v1227);
          v330 = v1310;
          if (v1272 == v1249)
          {
            v331 = v1341;
            v332 = v1286;
            if (v1341 < 2)
              goto LABEL_686;
            v333 = (v1312 + 40 + v324) & v1227;
            v334 = v1311;
            goto LABEL_300;
          }
          v335 = ((unint64_t)v329 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v332 = v1286;
          if (v1249 == 0x7FFFFFFF)
          {
            if (*(_QWORD *)(v335 + 24) >= 0xFFFFFFFFuLL)
              goto LABEL_686;
            goto LABEL_688;
          }
          v697 = (v1355
                + ((((((v335 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 65) & v1301;
          if (v1233 != v1249)
          {
            if (v1349 < 2)
              goto LABEL_686;
            v333 = (v1231 + v697) & v1331;
            v331 = v1280;
            if (v1280 >= v1285)
            {
              v334 = v1283;
            }
            else
            {
              v333 = (v1284 + v333) & v1299;
              v331 = v1285;
              v334 = v1288;
            }
LABEL_300:
            if (__swift_getEnumTagSinglePayload(v333, v331, v334) < 2)
              goto LABEL_686;
LABEL_688:
            v737 = v166;
            memcpy(v328, v329, v1268);
            v738 = v1285;
            v739 = v1234;
            goto LABEL_1241;
          }
          if (v1282 > 0x7FFFFFFE)
          {
            v736 = __swift_getEnumTagSinglePayload((v1287 + v697) & v1297, v1275, v1286);
            if (v736 < 2)
              goto LABEL_686;
            v700 = v736 - 1;
          }
          else
          {
            v698 = *(_QWORD *)(v697 + 16);
            if (v698 >= 0xFFFFFFFF)
              LODWORD(v698) = -1;
            v699 = v698 - 1;
            if (v699 < 0)
              v699 = -1;
            v700 = v699 + 1;
          }
          if (v700 >= 2)
            goto LABEL_688;
LABEL_686:
          v737 = v166;
          if (__swift_getEnumTagSinglePayload((uint64_t)v329, 1, v1311))
          {
            memcpy(v328, v329, v180);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1290 + 32))(v328, v329, v1311);
            __swift_storeEnumTagSinglePayload((uint64_t)v328, 0, 1, v1311);
          }
          v740 = ((unint64_t)v328 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v741 = ((unint64_t)v329 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v742 = *(_OWORD *)v741;
          v743 = *(_OWORD *)(v741 + 16);
          *(_QWORD *)(v740 + 32) = *(_QWORD *)(v741 + 32);
          *(_OWORD *)v740 = v742;
          *(_OWORD *)(v740 + 16) = v743;
          v744 = (_OWORD *)((v740 + 47) & 0xFFFFFFFFFFFFFFF8);
          v745 = (_OWORD *)((v741 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v744 = *v745;
          v746 = (_OWORD *)(((unint64_t)v744 + 23) & 0xFFFFFFFFFFFFFFF8);
          v747 = (_OWORD *)(((unint64_t)v745 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v746 = *v747;
          v748 = ((unint64_t)v746 + 23) & 0xFFFFFFFFFFFFFFF8;
          v749 = ((unint64_t)v747 + 23) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)v748 = *(_OWORD *)v749;
          *(_BYTE *)(v748 + 16) = *(_BYTE *)(v749 + 16);
          v750 = ((unint64_t)v746 + 47) & 0xFFFFFFFFFFFFFFF8;
          v751 = ((unint64_t)v747 + 47) & 0xFFFFFFFFFFFFFFF8;
          v752 = *(_OWORD *)v751;
          v753 = *(_OWORD *)(v751 + 16);
          *(_QWORD *)(v750 + 32) = *(_QWORD *)(v751 + 32);
          *(_OWORD *)v750 = v752;
          *(_OWORD *)(v750 + 16) = v753;
          *(_BYTE *)(v750 + 40) = *(_BYTE *)(v751 + 40);
          v754 = (_BYTE *)((v1248 + v750) & v1301);
          v755 = (_BYTE *)((v1248 + v751) & v1301);
          if (v1282 >= 0x7FFFFFFF)
          {
            v760 = (const void *)((unint64_t)&v755[v1287] & v1297);
            if (__swift_getEnumTagSinglePayload((uint64_t)v760, v1275, v332) <= 1)
            {
              v757 = v755 + 8;
              v758 = v1287;
              v759 = ~v1353;
              goto LABEL_697;
            }
LABEL_699:
            v762 = v1347;
            memcpy(v754, v755, v1347);
            goto LABEL_702;
          }
          v756 = *(_QWORD *)(((v1248 + v751) & v1301) + 0x10);
          if (v756 >= 0xFFFFFFFF)
            LODWORD(v756) = -1;
          if ((int)v756 - 1 >= 0)
            goto LABEL_699;
          v757 = v755 + 8;
          v758 = v1287;
          v759 = ~v1353;
          v760 = (const void *)((unint64_t)&v755[v1287] & v1297);
LABEL_697:
          *v754 = *v755;
          memcpy(v754 + 8, v757, 0x69uLL);
          v761 = (void *)((unint64_t)&v754[v758] & v759);
          if (__swift_getEnumTagSinglePayload((uint64_t)v760, 1, v332))
          {
            memcpy(v761, v760, v1343);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1271 + 32))(v761, v760, v332);
            __swift_storeEnumTagSinglePayload((uint64_t)v761, 0, 1, v332);
          }
          v762 = v1347;
          v330 = v1310;
          v180 = v1373;
LABEL_702:
          v763 = (_BYTE *)((unint64_t)&v754[v1365 + v762] & v1331);
          v764 = (_BYTE *)((unint64_t)&v755[v1365 + v762] & v1331);
          if (v1349)
          {
            v738 = v1285;
            v765 = v1280;
            v739 = v1234;
            if (v1280 >= v1285)
            {
              v766 = (uint64_t)v764;
              v767 = v1283;
            }
            else
            {
              v766 = (unint64_t)&v764[v1284] & v1299;
              v765 = v1285;
              v767 = v1288;
            }
            v770 = __swift_getEnumTagSinglePayload(v766, v765, v767);
          }
          else
          {
            v738 = v1285;
            v739 = v1234;
            if (!v764[v330])
              goto LABEL_1238;
            v768 = (v764[v330] - 1) << v1295;
            if (v330 > 3)
              v768 = 0;
            if ((_DWORD)v330)
            {
              if (v330 <= 3)
                v769 = v330;
              else
                v769 = 4;
              __asm { BR              X11 }
            }
            v770 = v768 + 1;
          }
          if (!v770)
          {
LABEL_1238:
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v1277 + 32))(v763, v764, v1283);
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v1278 + 32))((unint64_t)&v763[v1284] & v1299, (unint64_t)&v764[v1284] & v1299, v1288);
            if (!v1349)
              v763[v330] = 0;
            goto LABEL_1240;
          }
          memcpy(v763, v764, v1348);
LABEL_1240:
          v1089 = (unint64_t)&v763[v1325] & 0xFFFFFFFFFFFFFFF8;
          v1090 = (unint64_t)&v764[v1325] & 0xFFFFFFFFFFFFFFF8;
          v1091 = *(_OWORD *)v1090;
          v1092 = *(_OWORD *)(v1090 + 16);
          *(_QWORD *)(v1089 + 32) = *(_QWORD *)(v1090 + 32);
          *(_OWORD *)v1089 = v1091;
          *(_OWORD *)(v1089 + 16) = v1092;
          *(_OWORD *)((v1089 + 47) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v1090 + 47) & 0xFFFFFFFFFFFFF8);
          v327 = ~v1312;
LABEL_1241:
          v1093 = (_BYTE *)(((unint64_t)v328 + v739) & v327);
          v1094 = (unsigned __int8 *)(((unint64_t)v329 + v739) & v327);
          v1095 = *v1094;
          if (v1095 > 2)
          {
            memcpy(v1093, v1094, v1356);
            v166 = v737;
            goto LABEL_1302;
          }
          *v1093 = v1095;
          v1096 = (_OWORD *)((unint64_t)&v1093[v1289] & v327);
          v1097 = (__int128 *)((unint64_t)&v1094[v1289] & v327);
          v1098 = *((unsigned __int8 *)v1097 + v1291);
          if (v1098 > 2)
          {
            memcpy(v1096, v1097, __n);
            goto LABEL_1301;
          }
          if (v1098 == 2)
          {
            memcpy(v1096, v1097, 0x48uLL);
            v1103 = (const void *)(((unint64_t)v1097 + 79) & 0xFFFFFFFFFFFFFFF8);
            memcpy((void *)(((unint64_t)v1096 + 79) & 0xFFFFFFFFFFFFFFF8), v1103, 0x48uLL);
            v1104 = (_QWORD *)(((((unint64_t)v1096 + 79) & 0xFFFFFFFFFFFFFFF8) + 79) & 0xFFFFFFFFFFFFF8);
            v1105 = (_QWORD *)(((unint64_t)v1103 + 79) & 0xFFFFFFFFFFFFF8);
            *v1104 = *v1105;
            v1106 = (_QWORD *)(((unint64_t)v1104 + 15) & 0xFFFFFFFFFFFFFFF8);
            v1107 = (_QWORD *)(((unint64_t)v1105 + 15) & 0xFFFFFFFFFFFFFFF8);
            *v1106 = *v1107;
            v1108 = (void *)(((unint64_t)v1106 + v1327) & v1331);
            v1109 = (_BYTE *)(((unint64_t)v1107 + v1327) & v1331);
            if (v1349)
            {
              v1110 = v1280;
              if (v1280 >= v738)
              {
                v1111 = ((unint64_t)v1107 + v1327) & v1331;
                v1112 = v1283;
              }
              else
              {
                v1111 = (unint64_t)&v1109[v1284] & v1299;
                v1110 = v738;
                v1112 = v1288;
              }
              v1144 = __swift_getEnumTagSinglePayload(v1111, v1110, v1112);
            }
            else
            {
              if (!v1109[v330])
                goto LABEL_1297;
              v1142 = (v1109[v330] - 1) << v1295;
              if (v330 > 3)
                v1142 = 0;
              if ((_DWORD)v330)
              {
                if (v1310 <= 3)
                  v1143 = v1310;
                else
                  v1143 = 4;
                __asm { BR              X11 }
              }
              v1144 = v1142 + 1;
              v332 = v1286;
              v330 = v1310;
              v738 = v1285;
              v180 = v1373;
            }
            if (v1144)
            {
              memcpy(v1108, v1109, v1348);
LABEL_1299:
              *((_BYTE *)v1108 + v1348) = v1109[v1348];
              v1141 = 2;
              goto LABEL_1300;
            }
LABEL_1297:
            (*(void (**)(void *, _BYTE *, uint64_t))(v1277 + 32))(v1108, v1109, v1283);
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v1278 + 32))(((unint64_t)v1108 + v1284) & v1299, (unint64_t)&v1109[v1284] & v1299, v1288);
            if (!v1349)
              *((_BYTE *)v1108 + v330) = 0;
            goto LABEL_1299;
          }
          if (v1098 == 1)
          {
            v1099 = *v1097;
            v1100 = v1097[1];
            *((_QWORD *)v1096 + 4) = *((_QWORD *)v1097 + 4);
            *v1096 = v1099;
            v1096[1] = v1100;
            v1101 = (void *)(((unint64_t)v1096 + v1346) & v1229);
            v1102 = (const void *)(((unint64_t)v1097 + v1346) & v1229);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1102, 1, v1311))
            {
              memcpy(v1101, v1102, v180);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v1290 + 32))(v1101, v1102, v1311);
              __swift_storeEnumTagSinglePayload((uint64_t)v1101, 0, 1, v1311);
            }
            v1115 = (_OWORD *)(((unint64_t)v1101 + v1350) & 0xFFFFFFFFFFFFFFF8);
            v1116 = (_OWORD *)(((unint64_t)v1102 + v1350) & 0xFFFFFFFFFFFFFFF8);
            *v1115 = *v1116;
            v1117 = ((unint64_t)v1115 + 23) & 0xFFFFFFFFFFFFFFF8;
            v1118 = ((unint64_t)v1116 + 23) & 0xFFFFFFFFFFFFFFF8;
            v1119 = *(_QWORD *)v1118;
            *(_BYTE *)(v1117 + 8) = *(_BYTE *)(v1118 + 8);
            *(_QWORD *)v1117 = v1119;
            v1120 = ((unint64_t)v1115 + 39) & 0xFFFFFFFFFFFFFFF8;
            v1121 = ((unint64_t)v1116 + 39) & 0xFFFFFFFFFFFFFFF8;
            v1122 = *(_QWORD *)v1121;
            *(_BYTE *)(v1120 + 8) = *(_BYTE *)(v1121 + 8);
            *(_QWORD *)v1120 = v1122;
            v1123 = ((unint64_t)v1115 + 55) & 0xFFFFFFFFFFFFFFF8;
            v1124 = ((unint64_t)v1116 + 55) & 0xFFFFFFFFFFFFFFF8;
            v1125 = *(_QWORD *)v1124;
            *(_BYTE *)(v1123 + 8) = *(_BYTE *)(v1124 + 8);
            *(_QWORD *)v1123 = v1125;
            v1126 = (_OWORD *)(((unint64_t)v1115 + 71) & 0xFFFFFFFFFFFFFFF8);
            v1127 = (_OWORD *)(((unint64_t)v1116 + 71) & 0xFFFFFFFFFFFFFFF8);
            *v1126 = *v1127;
            v1128 = ((unint64_t)v1126 + 23) & 0xFFFFFFFFFFFFFFF8;
            v1129 = ((unint64_t)v1127 + 23) & 0xFFFFFFFFFFFFFFF8;
            v1130 = *(_OWORD *)v1129;
            v1131 = *(_OWORD *)(v1129 + 16);
            *(_QWORD *)(v1128 + 32) = *(_QWORD *)(v1129 + 32);
            *(_OWORD *)v1128 = v1130;
            *(_OWORD *)(v1128 + 16) = v1131;
            v1132 = (_BYTE *)((v1369 + v1128) & v1301);
            v1133 = (_BYTE *)((v1369 + v1129) & v1301);
            if (v1282 >= 0x7FFFFFFF)
            {
              v1136 = (unint64_t)&v1133[v1287] & v1297;
              if (__swift_getEnumTagSinglePayload(v1136, v1275, v332) <= 1)
              {
                v1135 = v1133 + 8;
                goto LABEL_1261;
              }
            }
            else
            {
              v1134 = *(_QWORD *)(((v1369 + v1129) & v1301) + 0x10);
              if (v1134 >= 0xFFFFFFFF)
                LODWORD(v1134) = -1;
              if ((int)v1134 - 1 < 0)
              {
                v1135 = v1133 + 8;
                v1136 = (unint64_t)&v1133[v1287] & v1297;
LABEL_1261:
                *v1132 = *v1133;
                memcpy(v1132 + 8, v1135, 0x69uLL);
                v1137 = (unint64_t)&v1132[v1287] & v1297;
                if (!__swift_getEnumTagSinglePayload(v1136, 1, v332))
                {
                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1271 + 32))(v1137, v1136, v332);
                  __swift_storeEnumTagSinglePayload(v1137, 0, 1, v332);
                  goto LABEL_1265;
                }
                v1138 = (void *)v1137;
                v1139 = (const void *)v1136;
                v1140 = v1343;
LABEL_1264:
                memcpy(v1138, v1139, v1140);
LABEL_1265:
                v330 = v1310;
                v1141 = 1;
LABEL_1300:
                *((_BYTE *)v1096 + v1291) = v1141;
                goto LABEL_1301;
              }
            }
            v1138 = v1132;
            v1139 = v1133;
            v1140 = v1347;
            goto LABEL_1264;
          }
          v1113 = *v1097;
          v1114 = v1097[2];
          v1096[1] = v1097[1];
          v1096[2] = v1114;
          *v1096 = v1113;
          *((_BYTE *)v1096 + v1291) = 0;
LABEL_1301:
          v166 = v737;
          v327 = ~v1312;
LABEL_1302:
          v1158 = (_QWORD *)((unint64_t)&v1093[v1246] & 0xFFFFFFFFFFFFFFF8);
          v1159 = (_QWORD *)((unint64_t)&v1094[v1246] & 0xFFFFFFFFFFFFFFF8);
          *v1158 = *v1159;
          v1160 = (_BYTE *)(((unint64_t)v1158 + v1247) & v327);
          v1161 = (unsigned __int8 *)(((unint64_t)v1159 + v1247) & v327);
          v1162 = *v1161;
          if (v1162 > 2)
          {
            v1171 = v1356;
LABEL_1310:
            memcpy(v1160, v1161, v1171);
LABEL_1311:
            v179 = 5;
            goto LABEL_1312;
          }
          *v1160 = v1162;
          v1163 = (_OWORD *)((unint64_t)&v1160[v1289] & v327);
          v1164 = (__int128 *)((unint64_t)&v1161[v1289] & v327);
          v1165 = *((unsigned __int8 *)v1164 + v1291);
          if (v1165 > 2)
          {
            v1160 = (_BYTE *)((unint64_t)&v1160[v1289] & v327);
            v1161 = (unsigned __int8 *)((unint64_t)&v1161[v1289] & v327);
            v1171 = __n;
            goto LABEL_1310;
          }
          v255 = v1318;
          v168 = v1329;
          if (v1165 == 2)
          {
            memcpy((void *)((unint64_t)&v1160[v1289] & v327), (const void *)((unint64_t)&v1161[v1289] & v327), 0x48uLL);
            v1173 = (const void *)(((unint64_t)v1164 + 79) & 0xFFFFFFFFFFFFFFF8);
            memcpy((void *)(((unint64_t)v1163 + 79) & 0xFFFFFFFFFFFFFFF8), v1173, 0x48uLL);
            v1174 = (_QWORD *)(((((unint64_t)v1163 + 79) & 0xFFFFFFFFFFFFFFF8) + 79) & 0xFFFFFFFFFFFFF8);
            v1175 = (_QWORD *)(((unint64_t)v1173 + 79) & 0xFFFFFFFFFFFFF8);
            *v1174 = *v1175;
            v1176 = (_QWORD *)(((unint64_t)v1174 + 15) & 0xFFFFFFFFFFFFFFF8);
            v1177 = (_QWORD *)(((unint64_t)v1175 + 15) & 0xFFFFFFFFFFFFFFF8);
            *v1176 = *v1177;
            v1178 = (void *)(((unint64_t)v1176 + v1327) & v1331);
            v1179 = (_BYTE *)(((unint64_t)v1177 + v1327) & v1331);
            if (v1349)
            {
              v1180 = v1280;
              if (v1280 >= v738)
              {
                v1181 = ((unint64_t)v1177 + v1327) & v1331;
                v1182 = v1283;
              }
              else
              {
                v1181 = (unint64_t)&v1179[v1284] & v1299;
                v1180 = v738;
                v1182 = v1288;
              }
              v1215 = __swift_getEnumTagSinglePayload(v1181, v1180, v1182);
            }
            else
            {
              if (!v1179[v330])
                goto LABEL_1347;
              v1213 = (v1179[v330] - 1) << v1295;
              if (v330 > 3)
                v1213 = 0;
              if ((_DWORD)v330)
              {
                if (v1310 <= 3)
                  v1214 = v1310;
                else
                  v1214 = 4;
                __asm { BR              X11 }
              }
              v1215 = v1213 + 1;
              v330 = v1310;
            }
            if (v1215)
            {
              memcpy(v1178, v1179, v1348);
LABEL_1349:
              *((_BYTE *)v1178 + v1348) = v1179[v1348];
              v1212 = 2;
              goto LABEL_1350;
            }
LABEL_1347:
            (*(void (**)(void *, _BYTE *, uint64_t))(v1277 + 32))(v1178, v1179, v1283);
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v1278 + 32))(((unint64_t)v1178 + v1284) & v1299, (unint64_t)&v1179[v1284] & v1299, v1288);
            if (!v1349)
              *((_BYTE *)v1178 + v330) = 0;
            goto LABEL_1349;
          }
          if (v1165 == 1)
          {
            v1166 = *v1164;
            v1167 = *(_OWORD *)(((unint64_t)&v1161[v1289] & v327) + 0x10);
            *(_QWORD *)(((unint64_t)&v1160[v1289] & v327) + 0x20) = *(_QWORD *)(((unint64_t)&v1161[v1289] & v327)
                                                                                     + 0x20);
            *v1163 = v1166;
            *(_OWORD *)(((unint64_t)&v1160[v1289] & v327) + 0x10) = v1167;
            v1168 = (void *)(((unint64_t)v1163 + v1346) & v1229);
            v1169 = (const void *)(((unint64_t)v1164 + v1346) & v1229);
            v1170 = v166;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1169, 1, v1311))
            {
              memcpy(v1168, v1169, v180);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v1290 + 32))(v1168, v1169, v1311);
              __swift_storeEnumTagSinglePayload((uint64_t)v1168, 0, 1, v1311);
            }
            v1185 = (_OWORD *)(((unint64_t)v1168 + v1350) & 0xFFFFFFFFFFFFFFF8);
            v1186 = (_OWORD *)(((unint64_t)v1169 + v1350) & 0xFFFFFFFFFFFFFFF8);
            *v1185 = *v1186;
            v1187 = ((unint64_t)v1185 + 23) & 0xFFFFFFFFFFFFFFF8;
            v1188 = ((unint64_t)v1186 + 23) & 0xFFFFFFFFFFFFFFF8;
            v1189 = *(_QWORD *)v1188;
            *(_BYTE *)(v1187 + 8) = *(_BYTE *)(v1188 + 8);
            *(_QWORD *)v1187 = v1189;
            v1190 = ((unint64_t)v1185 + 39) & 0xFFFFFFFFFFFFFFF8;
            v1191 = ((unint64_t)v1186 + 39) & 0xFFFFFFFFFFFFFFF8;
            v1192 = *(_QWORD *)v1191;
            *(_BYTE *)(v1190 + 8) = *(_BYTE *)(v1191 + 8);
            *(_QWORD *)v1190 = v1192;
            v1193 = ((unint64_t)v1185 + 55) & 0xFFFFFFFFFFFFFFF8;
            v1194 = ((unint64_t)v1186 + 55) & 0xFFFFFFFFFFFFFFF8;
            v1195 = *(_QWORD *)v1194;
            *(_BYTE *)(v1193 + 8) = *(_BYTE *)(v1194 + 8);
            *(_QWORD *)v1193 = v1195;
            v1196 = (_OWORD *)(((unint64_t)v1185 + 71) & 0xFFFFFFFFFFFFFFF8);
            v1197 = (_OWORD *)(((unint64_t)v1186 + 71) & 0xFFFFFFFFFFFFFFF8);
            *v1196 = *v1197;
            v1198 = ((unint64_t)v1196 + 23) & 0xFFFFFFFFFFFFFFF8;
            v1199 = ((unint64_t)v1197 + 23) & 0xFFFFFFFFFFFFFFF8;
            v1200 = *(_OWORD *)v1199;
            v1201 = *(_OWORD *)(v1199 + 16);
            *(_QWORD *)(v1198 + 32) = *(_QWORD *)(v1199 + 32);
            *(_OWORD *)v1198 = v1200;
            *(_OWORD *)(v1198 + 16) = v1201;
            v1202 = (_BYTE *)((v1369 + v1198) & v1301);
            v1203 = (_BYTE *)((v1369 + v1199) & v1301);
            if (v1282 >= 0x7FFFFFFF)
            {
              v1207 = (unint64_t)&v1203[v1287] & v1297;
              v1205 = v332;
              if (__swift_getEnumTagSinglePayload(v1207, v1275, v332) <= 1)
              {
                v1206 = v1203 + 8;
                goto LABEL_1328;
              }
            }
            else
            {
              v1204 = *(_QWORD *)(((v1369 + v1199) & v1301) + 0x10);
              if (v1204 >= 0xFFFFFFFF)
                LODWORD(v1204) = -1;
              if ((int)v1204 - 1 < 0)
              {
                v1205 = v332;
                v1206 = v1203 + 8;
                v1207 = (unint64_t)&v1203[v1287] & v1297;
LABEL_1328:
                *v1202 = *v1203;
                memcpy(v1202 + 8, v1206, 0x69uLL);
                v1208 = (unint64_t)&v1202[v1287] & v1297;
                if (!__swift_getEnumTagSinglePayload(v1207, 1, v1205))
                {
                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1271 + 32))(v1208, v1207, v1205);
                  __swift_storeEnumTagSinglePayload(v1208, 0, 1, v1205);
                  goto LABEL_1332;
                }
                v1209 = (void *)v1208;
                v1210 = (const void *)v1207;
                v1211 = v1343;
LABEL_1331:
                memcpy(v1209, v1210, v1211);
LABEL_1332:
                v166 = v1170;
                v1212 = 1;
LABEL_1350:
                *((_BYTE *)v1163 + v1291) = v1212;
                goto LABEL_1311;
              }
            }
            v1209 = v1202;
            v1210 = v1203;
            v1211 = v1347;
            goto LABEL_1331;
          }
          v1183 = *v1164;
          v1184 = *(_OWORD *)(((unint64_t)&v1161[v1289] & v327) + 0x20);
          *(_OWORD *)(((unint64_t)&v1160[v1289] & v327) + 0x10) = *(_OWORD *)(((unint64_t)&v1161[v1289] & v327)
                                                                                   + 0x10);
          *(_OWORD *)(((unint64_t)&v1160[v1289] & v327) + 0x20) = v1184;
          *v1163 = v1183;
          *((_BYTE *)v1163 + v1291) = 0;
          v179 = 5;
LABEL_1121:
          v167 = v1363;
LABEL_1314:
          *((_BYTE *)v166 + v168) = v179;
          *(_QWORD *)(((unint64_t)v166 + v255) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v167 + v255) & 0xFFFFFFFFFFFFF8);
          v88 = a1;
          *((_BYTE *)a1 + v1230) = 1;
          return v88;
        case 6:
          *v166 = *v167;
          v179 = 6;
          goto LABEL_266;
        case 7:
          *v166 = *v167;
          v179 = 7;
          goto LABEL_266;
        case 8:
          if (__swift_getEnumTagSinglePayload((uint64_t)v167, 1, v1311))
          {
            memcpy(v166, v167, v1373);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1290 + 32))(v166, v167, v1311);
            __swift_storeEnumTagSinglePayload((uint64_t)v166, 0, 1, v1311);
          }
          v336 = ((unint64_t)v166 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v192 = v167;
          v337 = ((unint64_t)v167 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v338 = *(_OWORD *)v337;
          v339 = *(_OWORD *)(v337 + 16);
          *(_QWORD *)(v336 + 32) = *(_QWORD *)(v337 + 32);
          *(_OWORD *)v336 = v338;
          *(_OWORD *)(v336 + 16) = v339;
          v340 = (v1369 + v336) & v1301;
          v341 = (v1369 + v337) & v1301;
          if (v1282 >= 0x7FFFFFFF)
          {
            v346 = (const void *)((v1287 + v341) & v1297);
            if (__swift_getEnumTagSinglePayload((uint64_t)v346, v1275, v1286) <= 1)
            {
              v343 = v166;
              v344 = (const void *)(v341 + 8);
              v345 = ~v1353;
LABEL_313:
              *(_BYTE *)v340 = *(_BYTE *)v341;
              memcpy((void *)(v340 + 8), v344, 0x69uLL);
              v347 = (void *)((v1287 + v340) & v345);
              if (__swift_getEnumTagSinglePayload((uint64_t)v346, 1, v1286))
              {
                memcpy(v347, v346, v1343);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1271 + 32))(v347, v346, v1286);
                __swift_storeEnumTagSinglePayload((uint64_t)v347, 0, 1, v1286);
              }
              v166 = v343;
LABEL_656:
              v729 = (_QWORD *)(((v340 | 7) + v1347) & 0xFFFFFFFFFFFFF8);
              v730 = (_QWORD *)(((v341 | 7) + v1347) & 0xFFFFFFFFFFFFFFF8);
              *v729 = *v730;
              v731 = (_OWORD *)(((unint64_t)v729 + 15) & 0xFFFFFFFFFFFFFFF8);
              v732 = (_OWORD *)(((unint64_t)v730 + 15) & 0xFFFFFFFFFFFFFFF8);
              *v731 = *v732;
              v733 = ((unint64_t)v731 + 23) & 0xFFFFFFFFFFFFFFF8;
              v734 = ((unint64_t)v732 + 23) & 0xFFFFFFFFFFFFFFF8;
              v735 = *(_OWORD *)v734;
              *(_QWORD *)(v733 + 16) = *(_QWORD *)(v734 + 16);
              *(_OWORD *)v733 = v735;
              *(_QWORD *)((v733 + 31) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v734 + 31) & 0xFFFFFFFFFFFFF8);
              v179 = 8;
LABEL_1197:
              v255 = v1318;
LABEL_1198:
              v167 = v192;
              goto LABEL_1313;
            }
          }
          else
          {
            v342 = *(_QWORD *)(((v1369 + v337) & v1301) + 0x10);
            if (v342 >= 0xFFFFFFFF)
              LODWORD(v342) = -1;
            if ((int)v342 - 1 < 0)
            {
              v343 = v166;
              v344 = (const void *)(v341 + 8);
              v345 = ~v1353;
              v346 = (const void *)((v1287 + v341) & v1297);
              goto LABEL_313;
            }
          }
          memcpy((void *)v340, (const void *)v341, v1347);
          goto LABEL_656;
        case 9:
          v181 = ~v1352;
          if (__swift_getEnumTagSinglePayload((uint64_t)v167, 1, v1311))
          {
            memcpy(v166, v167, v1373);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1290 + 32))(v166, v167, v1311);
            __swift_storeEnumTagSinglePayload((uint64_t)v166, 0, 1, v1311);
          }
          v348 = ((unint64_t)v166 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v1363 = v167;
          v349 = ((unint64_t)v167 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v350 = *(_OWORD *)v349;
          v351 = *(_OWORD *)(v349 + 16);
          *(_QWORD *)(v348 + 32) = *(_QWORD *)(v349 + 32);
          *(_OWORD *)v348 = v350;
          *(_OWORD *)(v348 + 16) = v351;
          v352 = (_OWORD *)((v348 + 47) & 0xFFFFFFFFFFFFFFF8);
          v353 = (_OWORD *)((v349 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v352 = *v353;
          v354 = (void *)(((unint64_t)v352 + v1353 + 16) & v1297);
          v355 = (const void *)(((unint64_t)v353 + v1353 + 16) & v1297);
          if (__swift_getEnumTagSinglePayload((uint64_t)v355, 1, v1286))
          {
            memcpy(v354, v355, v1343);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1271 + 32))(v354, v355, v1286);
            __swift_storeEnumTagSinglePayload((uint64_t)v354, 0, 1, v1286);
          }
          v637 = (void *)(((unint64_t)v354 + v1240) & v1331);
          v638 = (_BYTE *)(((unint64_t)v355 + v1240) & v1331);
          if (v1349)
          {
            v639 = v1285;
            if (v1280 >= v1285)
            {
              v640 = (uint64_t)v638;
              v639 = v1280;
              v641 = v1283;
            }
            else
            {
              v640 = (unint64_t)&v638[v1284] & v1299;
              v641 = v1288;
            }
            v694 = __swift_getEnumTagSinglePayload(v640, v639, v641);
          }
          else
          {
            if (!v638[v1310])
              goto LABEL_911;
            v681 = (v638[v1310] - 1) << v1295;
            if (v1310 > 3)
              v681 = 0;
            if ((_DWORD)v1310)
            {
              if (v1310 <= 3)
                v682 = v1310;
              else
                v682 = 4;
              __asm { BR              X11 }
            }
            v694 = v681 + 1;
          }
          if (v694)
          {
            memcpy(v637, v638, v1348);
            goto LABEL_913;
          }
LABEL_911:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1277 + 32))(v637, v638, v1283);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1278 + 32))(((unint64_t)v637 + v1284) & v1299, (unint64_t)&v638[v1284] & v1299, v1288);
          if (!v1349)
            *((_BYTE *)v637 + v1310) = 0;
LABEL_913:
          v911 = &v638[v1348];
          *((_BYTE *)v637 + v1348) = v638[v1348];
          v912 = (void *)(((unint64_t)v637 + v1348 + v1365 + 1) & v1331);
          v913 = (_BYTE *)((unint64_t)&v638[v1348 + 1 + v1365] & v1331);
          if (v1349)
          {
            v914 = v1285;
            v915 = v1280;
            if (v1280 >= v1285)
            {
              v916 = (unint64_t)&v911[v1365 + 1] & v1331;
              v917 = v1283;
            }
            else
            {
              v916 = (unint64_t)&v913[v1284] & v1299;
              v915 = v1285;
              v917 = v1288;
            }
            v920 = __swift_getEnumTagSinglePayload(v916, v915, v917);
          }
          else
          {
            v914 = v1285;
            if (!v913[v1310])
              goto LABEL_957;
            v918 = (v913[v1310] - 1) << v1295;
            if (v1310 > 3)
              v918 = 0;
            if ((_DWORD)v1310)
            {
              if (v1310 <= 3)
                v919 = v1310;
              else
                v919 = 4;
              __asm { BR              X11 }
            }
            v920 = v918 + 1;
          }
          if (v920)
          {
            v929 = v166;
            memcpy(v912, v913, v1348);
            goto LABEL_959;
          }
LABEL_957:
          v929 = v166;
          (*(void (**)(void *, _BYTE *, uint64_t))(v1277 + 32))(v912, v913, v1283);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1278 + 32))(((unint64_t)v912 + v1284) & v1299, (unint64_t)&v913[v1284] & v1299, v1288);
          if (!v1349)
            *((_BYTE *)v912 + v1310) = 0;
LABEL_959:
          v930 = (_QWORD *)(((unint64_t)v912 + v1345) & v181);
          v931 = (uint64_t *)((unint64_t)&v913[v1345] & v181);
          if ((v914 & 0x80000000) != 0)
          {
            v933 = __swift_getEnumTagSinglePayload(((unint64_t)v931 + v1270) & v1299, v914, v1288);
          }
          else
          {
            v932 = *v931;
            if ((unint64_t)*v931 >= 0xFFFFFFFF)
              LODWORD(v932) = -1;
            v933 = v932 + 1;
          }
          if (v933)
          {
            memcpy(v930, v931, v1340);
          }
          else
          {
            *v930 = *v931;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v1278 + 32))(((unint64_t)v930 + v1270) & v1299, ((unint64_t)v931 + v1270) & v1299, v1288);
          }
          v934 = (_BYTE *)(((unint64_t)v930 + v1316) & v1301);
          v935 = (_BYTE *)(((unint64_t)v931 + v1316) & v1301);
          if (v1282 >= 0x7FFFFFFF)
          {
            v939 = (unint64_t)&v935[v1287] & v1297;
            v166 = v929;
            if (__swift_getEnumTagSinglePayload(v939, v1275, v1286) <= 1)
            {
              v937 = v935 + 8;
              v938 = ~v1353;
              goto LABEL_974;
            }
          }
          else
          {
            v936 = *(_QWORD *)((((unint64_t)v931 + v1316) & v1301) + 0x10);
            if (v936 >= 0xFFFFFFFF)
              LODWORD(v936) = -1;
            v166 = v929;
            if ((int)v936 - 1 < 0)
            {
              v937 = v935 + 8;
              v938 = ~v1353;
              v939 = (unint64_t)&v935[v1287] & v1297;
LABEL_974:
              *v934 = *v935;
              memcpy(v934 + 8, v937, 0x69uLL);
              v940 = (unint64_t)&v934[v1287] & v938;
              if (!__swift_getEnumTagSinglePayload(v939, 1, v1286))
              {
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v1271 + 32))(v940, v939, v1286);
                __swift_storeEnumTagSinglePayload(v940, 0, 1, v1286);
LABEL_978:
                v179 = 9;
                goto LABEL_1312;
              }
              v941 = (void *)v940;
              v942 = (const void *)v939;
              v943 = v1343;
LABEL_977:
              memcpy(v941, v942, v943);
              goto LABEL_978;
            }
          }
          v941 = v934;
          v942 = v935;
          v943 = v1347;
          goto LABEL_977;
        case 0xA:
          v182 = *(_OWORD *)v167;
          v183 = *((_OWORD *)v167 + 1);
          v166[4] = v167[4];
          *(_OWORD *)v166 = v182;
          *((_OWORD *)v166 + 1) = v183;
          v184 = v167;
          v185 = (void *)(((unint64_t)v166 + v1346) & v1229);
          v175 = v184;
          v186 = (const void *)(((unint64_t)v184 + v1346) & v1229);
          if (__swift_getEnumTagSinglePayload((uint64_t)v186, 1, v1311))
          {
            v187 = v1373;
            memcpy(v185, v186, v1373);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1290 + 32))(v185, v186, v1311);
            __swift_storeEnumTagSinglePayload((uint64_t)v185, 0, 1, v1311);
            v187 = v1373;
          }
          *((_BYTE *)v185 + v187) = *((_BYTE *)v186 + v187);
          v356 = ((unint64_t)v185 + v187) & 0xFFFFFFFFFFFFFFF8;
          v357 = ((unint64_t)v186 + v187) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)(v356 + 8) = *(_OWORD *)(v357 + 8);
          v358 = (_OWORD *)((v356 + 31) & 0xFFFFFFFFFFFFFFF8);
          v359 = (_OWORD *)((v357 + 31) & 0xFFFFFFFFFFFFFFF8);
          *v358 = *v359;
          *(_OWORD *)(((unint64_t)v358 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v359 + 23) & 0xFFFFFFFFFFFFF8);
          v179 = 10;
          goto LABEL_1163;
        case 0xB:
          *v166 = *v167;
          v179 = 11;
          goto LABEL_266;
        case 0xC:
          if (__swift_getEnumTagSinglePayload((uint64_t)v167, 1, v1311))
          {
            memcpy(v166, v167, v1373);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1290 + 32))(v166, v167, v1311);
            __swift_storeEnumTagSinglePayload((uint64_t)v166, 0, 1, v1311);
          }
          v360 = v166;
          v361 = ((unint64_t)v166 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v192 = v167;
          v362 = ((unint64_t)v167 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v363 = *(_OWORD *)v362;
          v364 = *(_OWORD *)(v362 + 16);
          *(_QWORD *)(v361 + 32) = *(_QWORD *)(v362 + 32);
          *(_OWORD *)v361 = v363;
          *(_OWORD *)(v361 + 16) = v364;
          v365 = (_OWORD *)((v1361 + 40 + v361) & v1367);
          v366 = (_OWORD *)((v1361 + 40 + v362) & v1367);
          if (v1228 > 0x7FFFFFFE)
          {
            v369 = (_OWORD *)(((unint64_t)v366 + 23) & 0xFFFFFFFFFFFFFFF8);
            v370 = ((unint64_t)v369 + 23) & 0xFFFFFFFFFFFFFFF8;
            v371 = __swift_getEnumTagSinglePayload((v1361 + v370 + 33) & v170, v1228, v1269);
            v368 = v1368;
            if (!v371)
            {
LABEL_329:
              *v365 = *v366;
              v372 = (_OWORD *)(((unint64_t)v365 + 23) & 0xFFFFFFFFFFFFFFF8);
              *v372 = *v369;
              v373 = ((unint64_t)v372 + 23) & 0xFFFFFFFFFFFFFFF8;
              *(_OWORD *)v373 = *(_OWORD *)v370;
              *(_BYTE *)(v373 + 16) = *(_BYTE *)(v370 + 16);
              v374 = ((unint64_t)v372 + 47) & 0xFFFFFFFFFFFFFFF8;
              v375 = ((unint64_t)v369 + 47) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)v374 = *(_QWORD *)v375;
              *(_BYTE *)(v374 + 8) = *(_BYTE *)(v375 + 8);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1332 + 32))((v1361 + 9 + v374) & v170, (v1361 + 9 + v375) & v170, v1269);
LABEL_330:
              *(_QWORD *)(((unint64_t)v365 + v1368 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v366
                                                                                                  + v1368
                                                                                                  + 7) & 0xFFFFFFFFFFFFF8);
              v179 = 12;
              v255 = v1318;
              v166 = v360;
              goto LABEL_1198;
            }
          }
          else
          {
            v367 = *(_QWORD *)(((v1361 + 40 + v362) & v1367) + 8);
            if (v367 >= 0xFFFFFFFF)
              LODWORD(v367) = -1;
            v368 = v1368;
            if ((v367 + 1) <= 1)
            {
              v369 = (_OWORD *)(((unint64_t)v366 + 23) & 0xFFFFFFFFFFFFFFF8);
              v370 = ((unint64_t)v369 + 23) & 0xFFFFFFFFFFFFFFF8;
              goto LABEL_329;
            }
          }
          memcpy(v365, v366, v368);
          goto LABEL_330;
        case 0xD:
          v188 = *(_OWORD *)v167;
          v189 = *((_OWORD *)v167 + 1);
          v166[4] = v167[4];
          *(_OWORD *)v166 = v188;
          *((_OWORD *)v166 + 1) = v189;
          v190 = v167;
          v191 = (void *)(((unint64_t)v166 + v1346) & v1229);
          v192 = v190;
          v193 = (const void *)(((unint64_t)v190 + v1346) & v1229);
          if (__swift_getEnumTagSinglePayload((uint64_t)v193, 1, v1311))
          {
            memcpy(v191, v193, v1373);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1290 + 32))(v191, v193, v1311);
            __swift_storeEnumTagSinglePayload((uint64_t)v191, 0, 1, v1311);
          }
          v376 = ((unint64_t)v191 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v377 = ((unint64_t)v193 + v1350) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)v376 = *(_OWORD *)v377;
          *(_BYTE *)(v376 + 16) = *(_BYTE *)(v377 + 16);
          v378 = (_BYTE *)((v1236 + v376) & v1301);
          v379 = (_BYTE *)((v1236 + v377) & v1301);
          if (v1282 >= 0x7FFFFFFF)
          {
            v384 = (const void *)((unint64_t)&v379[v1287] & v1297);
            if (__swift_getEnumTagSinglePayload((uint64_t)v384, v1275, v1286) <= 1)
            {
              v381 = v166;
              v382 = v379 + 8;
              v383 = ~v1353;
LABEL_339:
              *v378 = *v379;
              memcpy(v378 + 8, v382, 0x69uLL);
              v385 = (void *)((unint64_t)&v378[v1287] & v383);
              if (__swift_getEnumTagSinglePayload((uint64_t)v384, 1, v1286))
              {
                memcpy(v385, v384, v1343);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1271 + 32))(v385, v384, v1286);
                __swift_storeEnumTagSinglePayload((uint64_t)v385, 0, 1, v1286);
              }
              v166 = v381;
LABEL_659:
              v378[v1347] = v379[v1347];
              v179 = 13;
              goto LABEL_1197;
            }
          }
          else
          {
            v380 = *(_QWORD *)(((v1236 + v377) & v1301) + 0x10);
            if (v380 >= 0xFFFFFFFF)
              LODWORD(v380) = -1;
            if ((int)v380 - 1 < 0)
            {
              v381 = v166;
              v382 = v379 + 8;
              v383 = ~v1353;
              v384 = (const void *)((unint64_t)&v379[v1287] & v1297);
              goto LABEL_339;
            }
          }
          memcpy(v378, v379, v1347);
          goto LABEL_659;
        case 0xE:
          *v166 = *v167;
          v179 = 14;
          goto LABEL_266;
        case 0xF:
          *v166 = *v167;
          v179 = 15;
          goto LABEL_266;
        case 0x10:
          v194 = *(_OWORD *)v167;
          v195 = *((_OWORD *)v167 + 1);
          v166[4] = v167[4];
          *(_OWORD *)v166 = v194;
          *((_OWORD *)v166 + 1) = v195;
          v196 = v167;
          v197 = (void *)(((unint64_t)v166 + v1346) & v1229);
          v175 = v196;
          v198 = (const void *)(((unint64_t)v196 + v1346) & v1229);
          if (__swift_getEnumTagSinglePayload((uint64_t)v198, 1, v1311))
          {
            memcpy(v197, v198, v1373);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1290 + 32))(v197, v198, v1311);
            __swift_storeEnumTagSinglePayload((uint64_t)v197, 0, 1, v1311);
          }
          v386 = (_OWORD *)(((unint64_t)v197 + v1350) & 0xFFFFFFFFFFFFFFF8);
          v387 = (_OWORD *)(((unint64_t)v198 + v1350) & 0xFFFFFFFFFFFFFFF8);
          *v386 = *v387;
          v388 = (_OWORD *)(((unint64_t)v386 + 23) & 0xFFFFFFFFFFFFFFF8);
          v389 = (_OWORD *)(((unint64_t)v387 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v388 = *v389;
          v390 = (_OWORD *)(((unint64_t)v388 + 23) & 0xFFFFFFFFFFFFFFF8);
          v391 = (_OWORD *)(((unint64_t)v389 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v390 = *v391;
          v392 = ((unint64_t)v390 + 23) & 0xFFFFFFFFFFFFFFF8;
          v393 = ((unint64_t)v391 + 23) & 0xFFFFFFFFFFFFFFF8;
          v394 = *(_OWORD *)v393;
          v395 = *(_OWORD *)(v393 + 16);
          *(_QWORD *)(v392 + 32) = *(_QWORD *)(v393 + 32);
          *(_OWORD *)v392 = v394;
          *(_OWORD *)(v392 + 16) = v395;
          v396 = (v392 + 47) & 0xFFFFFFFFFFFFFFF8;
          v397 = (v393 + 47) & 0xFFFFFFFFFFFFFFF8;
          v398 = *(_OWORD *)v397;
          v399 = *(_OWORD *)(v397 + 16);
          *(_QWORD *)(v396 + 32) = *(_QWORD *)(v397 + 32);
          *(_OWORD *)v396 = v398;
          *(_OWORD *)(v396 + 16) = v399;
          v400 = (v396 + 47) & 0xFFFFFFFFFFFFFFF8;
          v401 = (v397 + 47) & 0xFFFFFFFFFFFFFFF8;
          v402 = *(_OWORD *)v401;
          v403 = *(_OWORD *)(v401 + 16);
          *(_QWORD *)(v400 + 32) = *(_QWORD *)(v401 + 32);
          *(_OWORD *)v400 = v402;
          *(_OWORD *)(v400 + 16) = v403;
          *(_BYTE *)(v400 + 40) = *(_BYTE *)(v401 + 40);
          v179 = 16;
          goto LABEL_1163;
        case 0x11:
          v199 = *(_OWORD *)v167;
          v200 = *((_OWORD *)v167 + 1);
          v166[4] = v167[4];
          *(_OWORD *)v166 = v199;
          *((_OWORD *)v166 + 1) = v200;
          v201 = v167;
          v202 = (void *)(((unint64_t)v166 + v1346) & v1229);
          v175 = v201;
          v203 = (const void *)(((unint64_t)v201 + v1346) & v1229);
          if (__swift_getEnumTagSinglePayload((uint64_t)v203, 1, v1311))
          {
            memcpy(v202, v203, v1373);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1290 + 32))(v202, v203, v1311);
            __swift_storeEnumTagSinglePayload((uint64_t)v202, 0, 1, v1311);
          }
          v404 = (_OWORD *)(((unint64_t)v202 + v1350) & 0xFFFFFFFFFFFFFFF8);
          v405 = (_OWORD *)(((unint64_t)v203 + v1350) & 0xFFFFFFFFFFFFFFF8);
          *v404 = *v405;
          v406 = (_OWORD *)(((unint64_t)v404 + 23) & 0xFFFFFFFFFFFFFFF8);
          v407 = (_OWORD *)(((unint64_t)v405 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v406 = *v407;
          v408 = (_OWORD *)(((unint64_t)v406 + 23) & 0xFFFFFFFFFFFFFFF8);
          v409 = (_OWORD *)(((unint64_t)v407 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v408 = *v409;
          v410 = (_OWORD *)(((unint64_t)v408 + 23) & 0xFFFFFFFFFFFFFFF8);
          v411 = (_OWORD *)(((unint64_t)v409 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v410 = *v411;
          v412 = ((unint64_t)v410 + 23) & 0xFFFFFFFFFFFFFFF8;
          v413 = ((unint64_t)v411 + 23) & 0xFFFFFFFFFFFFFFF8;
          v414 = *(_OWORD *)v413;
          v415 = *(_OWORD *)(v413 + 16);
          *(_QWORD *)(v412 + 32) = *(_QWORD *)(v413 + 32);
          *(_OWORD *)v412 = v414;
          *(_OWORD *)(v412 + 16) = v415;
          v416 = (v412 + 47) & 0xFFFFFFFFFFFFFFF8;
          v417 = (v413 + 47) & 0xFFFFFFFFFFFFFFF8;
          v418 = *(_OWORD *)v417;
          v419 = *(_OWORD *)(v417 + 16);
          *(_QWORD *)(v416 + 32) = *(_QWORD *)(v417 + 32);
          *(_OWORD *)v416 = v418;
          *(_OWORD *)(v416 + 16) = v419;
          v420 = (v416 + 47) & 0xFFFFFFFFFFFFFFF8;
          v421 = (v417 + 47) & 0xFFFFFFFFFFFFFFF8;
          v422 = *(_OWORD *)v421;
          v423 = *(_OWORD *)(v421 + 16);
          *(_QWORD *)(v420 + 32) = *(_QWORD *)(v421 + 32);
          *(_OWORD *)v420 = v422;
          *(_OWORD *)(v420 + 16) = v423;
          v424 = (void *)((v1238 + v420) & v1331);
          v425 = (_BYTE *)((v1238 + v421) & v1331);
          if (v1349)
          {
            v426 = v1280;
            if (v1280 >= v1285)
            {
              v427 = (v1238 + v421) & v1331;
              v428 = v1283;
            }
            else
            {
              v427 = (unint64_t)&v425[v1284] & v1299;
              v426 = v1285;
              v428 = v1288;
            }
            v690 = __swift_getEnumTagSinglePayload(v427, v426, v428);
          }
          else
          {
            if (!v425[v1310])
              goto LABEL_982;
            v642 = (v425[v1310] - 1) << v1295;
            if (v1310 > 3)
              v642 = 0;
            if ((_DWORD)v1310)
            {
              if (v1310 <= 3)
                v643 = v1310;
              else
                v643 = 4;
              __asm { BR              X11 }
            }
            v690 = v642 + 1;
          }
          if (v690)
          {
            memcpy(v424, v425, v1348);
            goto LABEL_984;
          }
LABEL_982:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1277 + 32))(v424, v425, v1283);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1278 + 32))(((unint64_t)v424 + v1284) & v1299, (unint64_t)&v425[v1284] & v1299, v1288);
          if (!v1349)
            *((_BYTE *)v424 + v1310) = 0;
LABEL_984:
          v944 = (void *)(((unint64_t)v424 + v1250) & v1331);
          v945 = (_BYTE *)((unint64_t)&v425[v1250] & v1331);
          if (v1349)
          {
            v946 = v1280;
            if (v1280 >= v1285)
            {
              v947 = (uint64_t)v945;
              v948 = v1283;
            }
            else
            {
              v947 = (unint64_t)&v945[v1284] & v1299;
              v946 = v1285;
              v948 = v1288;
            }
            v951 = __swift_getEnumTagSinglePayload(v947, v946, v948);
          }
          else
          {
            if (!v945[v1310])
              goto LABEL_1160;
            v949 = (v945[v1310] - 1) << v1295;
            if (v1310 > 3)
              v949 = 0;
            if ((_DWORD)v1310)
            {
              if (v1310 <= 3)
                v950 = v1310;
              else
                v950 = 4;
              __asm { BR              X11 }
            }
            v951 = v949 + 1;
          }
          if (v951)
          {
            memcpy(v944, v945, v1348);
            goto LABEL_1162;
          }
LABEL_1160:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1277 + 32))(v944, v945, v1283);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1278 + 32))(((unint64_t)v944 + v1284) & v1299, (unint64_t)&v945[v1284] & v1299, v1288);
          if (!v1349)
            *((_BYTE *)v944 + v1310) = 0;
LABEL_1162:
          v179 = 17;
          goto LABEL_1163;
        case 0x12:
          *v166 = *v167;
          v179 = 18;
          goto LABEL_266;
        case 0x13:
          if (__swift_getEnumTagSinglePayload((uint64_t)v167, 1, v1311))
          {
            memcpy(v166, v167, v1373);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1290 + 32))(v166, v167, v1311);
            __swift_storeEnumTagSinglePayload((uint64_t)v166, 0, 1, v1311);
          }
          v429 = ((unint64_t)v166 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v430 = ((unint64_t)v167 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v431 = *(_OWORD *)v430;
          v432 = *(_OWORD *)(v430 + 16);
          *(_QWORD *)(v429 + 32) = *(_QWORD *)(v430 + 32);
          *(_OWORD *)v429 = v431;
          *(_OWORD *)(v429 + 16) = v432;
          v433 = (_OWORD *)((v429 + 47) & 0xFFFFFFFFFFFFFFF8);
          v434 = (_OWORD *)((v430 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v433 = *v434;
          v435 = (_OWORD *)(((unint64_t)v433 + 23) & 0xFFFFFFFFFFFFFFF8);
          v436 = (_OWORD *)(((unint64_t)v434 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v435 = *v436;
          *(_QWORD *)(((unint64_t)v435 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v436 + 23) & 0xFFFFFFFFFFFFF8);
          v179 = 19;
          goto LABEL_405;
        case 0x14:
          if (__swift_getEnumTagSinglePayload((uint64_t)v167, 1, v1311))
          {
            v204 = v1373;
            memcpy(v166, v167, v1373);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1290 + 32))(v166, v167, v1311);
            __swift_storeEnumTagSinglePayload((uint64_t)v166, 0, 1, v1311);
            v204 = v1373;
          }
          v437 = ((unint64_t)v166 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v1363 = v167;
          v438 = ((unint64_t)v167 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v439 = *(_OWORD *)v438;
          v440 = *(_OWORD *)(v438 + 16);
          *(_QWORD *)(v437 + 32) = *(_QWORD *)(v438 + 32);
          *(_OWORD *)v437 = v439;
          *(_OWORD *)(v437 + 16) = v440;
          v441 = (void *)((v1312 + 40 + v437) & v1227);
          v442 = (const void *)((v1312 + 40 + v438) & v1227);
          if (v1272 == v1249)
          {
            v443 = v1341;
            v444 = v1286;
            if (v1341 < 2)
              goto LABEL_718;
            v445 = (v1312 + 40 + v438) & v1227;
            v446 = v1311;
          }
          else
          {
            v447 = ((unint64_t)v442 + v1350) & 0xFFFFFFFFFFFFFFF8;
            v444 = v1286;
            if (v1249 == 0x7FFFFFFF)
            {
              if (*(_QWORD *)(v447 + 24) >= 0xFFFFFFFFuLL)
                goto LABEL_718;
              goto LABEL_720;
            }
            v701 = (v1369
                  + ((((((((v447 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                    + 47) & 0xFFFFFFFFFFFFFFF8)) & v1301;
            if (v1233 == v1249)
            {
              if (v1282 > 0x7FFFFFFE)
              {
                v771 = __swift_getEnumTagSinglePayload((v1287 + v701) & v1297, v1275, v1286);
                if (v771 < 2)
                  goto LABEL_718;
                v704 = v771 - 1;
              }
              else
              {
                v702 = *(_QWORD *)(v701 + 16);
                if (v702 >= 0xFFFFFFFF)
                  LODWORD(v702) = -1;
                v703 = v702 - 1;
                if (v703 < 0)
                  v703 = -1;
                v704 = v703 + 1;
              }
              if (v704 < 2)
              {
LABEL_718:
                v772 = v166;
                if (__swift_getEnumTagSinglePayload((uint64_t)v442, 1, v1311))
                {
                  memcpy(v441, v442, v204);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v1290 + 32))(v441, v442, v1311);
                  __swift_storeEnumTagSinglePayload((uint64_t)v441, 0, 1, v1311);
                }
                v774 = ((unint64_t)v441 + v1350) & 0xFFFFFFFFFFFFFFF8;
                v775 = ((unint64_t)v442 + v1350) & 0xFFFFFFFFFFFFFFF8;
                v776 = *(_OWORD *)v775;
                v777 = *(_OWORD *)(v775 + 16);
                *(_QWORD *)(v774 + 32) = *(_QWORD *)(v775 + 32);
                *(_OWORD *)v774 = v776;
                *(_OWORD *)(v774 + 16) = v777;
                v778 = (_OWORD *)((v774 + 47) & 0xFFFFFFFFFFFFFFF8);
                v779 = (_OWORD *)((v775 + 47) & 0xFFFFFFFFFFFFFFF8);
                *v778 = *v779;
                v780 = (_OWORD *)(((unint64_t)v778 + 23) & 0xFFFFFFFFFFFFFFF8);
                v781 = (_OWORD *)(((unint64_t)v779 + 23) & 0xFFFFFFFFFFFFFFF8);
                *v780 = *v781;
                v782 = ((unint64_t)v780 + 23) & 0xFFFFFFFFFFFFFFF8;
                v783 = ((unint64_t)v781 + 23) & 0xFFFFFFFFFFFFFFF8;
                v784 = *(_OWORD *)v783;
                v785 = *(_OWORD *)(v783 + 16);
                *(_QWORD *)(v782 + 32) = *(_QWORD *)(v783 + 32);
                *(_OWORD *)v782 = v784;
                *(_OWORD *)(v782 + 16) = v785;
                v786 = (v782 + 47) & 0xFFFFFFFFFFFFFFF8;
                v787 = (v783 + 47) & 0xFFFFFFFFFFFFFFF8;
                v788 = *(_OWORD *)v787;
                v789 = *(_OWORD *)(v787 + 16);
                *(_QWORD *)(v786 + 32) = *(_QWORD *)(v787 + 32);
                *(_OWORD *)v786 = v788;
                *(_OWORD *)(v786 + 16) = v789;
                v790 = (_BYTE *)((v1369 + v786) & v1301);
                v791 = (_BYTE *)((v1369 + v787) & v1301);
                if (v1282 >= 0x7FFFFFFF)
                {
                  v796 = (const void *)((unint64_t)&v791[v1287] & v1297);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v796, v1275, v444) <= 1)
                  {
                    v793 = v791 + 8;
                    v794 = v1287;
                    v795 = ~v1353;
                    goto LABEL_729;
                  }
                }
                else
                {
                  v792 = *(_QWORD *)(((v1369 + v787) & v1301) + 0x10);
                  if (v792 >= 0xFFFFFFFF)
                    LODWORD(v792) = -1;
                  if ((int)v792 - 1 < 0)
                  {
                    v793 = v791 + 8;
                    v794 = v1287;
                    v795 = ~v1353;
                    v796 = (const void *)((unint64_t)&v791[v1287] & v1297);
LABEL_729:
                    *v790 = *v791;
                    memcpy(v790 + 8, v793, 0x69uLL);
                    v797 = (void *)((unint64_t)&v790[v794] & v795);
                    if (__swift_getEnumTagSinglePayload((uint64_t)v796, 1, v444))
                    {
                      memcpy(v797, v796, v1343);
                    }
                    else
                    {
                      (*(void (**)(void *, const void *, uint64_t))(v1271 + 32))(v797, v796, v444);
                      __swift_storeEnumTagSinglePayload((uint64_t)v797, 0, 1, v444);
                    }
                    v798 = v1347;
LABEL_734:
                    v799 = (void *)((unint64_t)&v790[v1365 + v798] & v1331);
                    v800 = (_BYTE *)((unint64_t)&v791[v1365 + v798] & v1331);
                    if (v1349)
                    {
                      v801 = v1285;
                      v773 = v1353 + 8;
                      if (v1280 >= v1285)
                      {
                        v802 = (uint64_t)v800;
                        v801 = v1280;
                        v803 = v1283;
                      }
                      else
                      {
                        v802 = (unint64_t)&v800[v1284] & v1299;
                        v803 = v1288;
                      }
                      v806 = __swift_getEnumTagSinglePayload(v802, v801, v803);
                    }
                    else
                    {
                      v773 = v1353 + 8;
                      if (!v800[v1310])
                        goto LABEL_1278;
                      v804 = (v800[v1310] - 1) << v1295;
                      if (v1310 > 3)
                        v804 = 0;
                      if ((_DWORD)v1310)
                      {
                        if (v1310 <= 3)
                          v805 = v1310;
                        else
                          v805 = 4;
                        __asm { BR              X11 }
                      }
                      v806 = v804 + 1;
                    }
                    if (v806)
                    {
                      memcpy(v799, v800, v1348);
                      v166 = v772;
                      goto LABEL_1280;
                    }
LABEL_1278:
                    (*(void (**)(void *, _BYTE *, uint64_t))(v1277 + 32))(v799, v800, v1283);
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v1278 + 32))(((unint64_t)v799 + v1284) & v1299, (unint64_t)&v800[v1284] & v1299, v1288);
                    v166 = v772;
                    if (!v1349)
                      *((_BYTE *)v799 + v1310) = 0;
LABEL_1280:
                    v1145 = (_QWORD *)(((unint64_t)v441 + v1243) & 0xFFFFFFFFFFFFFFF8);
                    v1146 = (_QWORD *)(((unint64_t)v442 + v1243) & 0xFFFFFFFFFFFFFFF8);
                    *v1145 = *v1146;
                    v1147 = (_BYTE *)(((unint64_t)v1145 + v773) & v1301);
                    v1148 = (_BYTE *)(((unint64_t)v1146 + v773) & v1301);
                    if (v1282 >= 0x7FFFFFFF)
                    {
                      v1153 = (unint64_t)&v1148[v1287] & v1297;
                      if (__swift_getEnumTagSinglePayload(v1153, v1275, v444) <= 1)
                      {
                        v1150 = v1148 + 8;
                        v1151 = v1287;
                        v1152 = ~v1353;
                        goto LABEL_1287;
                      }
                    }
                    else
                    {
                      v1149 = *(_QWORD *)((((unint64_t)v1146 + v773) & v1301) + 0x10);
                      if (v1149 >= 0xFFFFFFFF)
                        LODWORD(v1149) = -1;
                      if ((int)v1149 - 1 < 0)
                      {
                        v1150 = v1148 + 8;
                        v1151 = v1287;
                        v1152 = ~v1353;
                        v1153 = (unint64_t)&v1148[v1287] & v1297;
LABEL_1287:
                        *v1147 = *v1148;
                        memcpy(v1147 + 8, v1150, 0x69uLL);
                        v1154 = (unint64_t)&v1147[v1151] & v1152;
                        if (!__swift_getEnumTagSinglePayload(v1153, 1, v444))
                        {
                          (*(void (**)(uint64_t, uint64_t, uint64_t))(v1271 + 32))(v1154, v1153, v444);
                          __swift_storeEnumTagSinglePayload(v1154, 0, 1, v444);
                          goto LABEL_1291;
                        }
                        v1155 = (void *)v1154;
                        v1156 = (const void *)v1153;
                        v1157 = v1343;
LABEL_1290:
                        memcpy(v1155, v1156, v1157);
LABEL_1291:
                        v179 = 20;
                        goto LABEL_1312;
                      }
                    }
                    v1155 = v1147;
                    v1156 = v1148;
                    v1157 = v1347;
                    goto LABEL_1290;
                  }
                }
                v798 = v1347;
                memcpy(v790, v791, v1347);
                goto LABEL_734;
              }
LABEL_720:
              memcpy(v441, v442, v1232);
              v773 = v1353 + 8;
              goto LABEL_1280;
            }
            if (v1349 < 2)
              goto LABEL_718;
            v445 = (v1231 + v701) & v1331;
            v443 = v1280;
            if (v1280 >= v1285)
            {
              v446 = v1283;
            }
            else
            {
              v445 = (v1284 + v445) & v1299;
              v443 = v1285;
              v446 = v1288;
            }
          }
          if (__swift_getEnumTagSinglePayload(v445, v443, v446) < 2)
            goto LABEL_718;
          goto LABEL_720;
        case 0x15:
          if (__swift_getEnumTagSinglePayload((uint64_t)v167, 1, v1311))
          {
            memcpy(v166, v167, v1373);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1290 + 32))(v166, v167, v1311);
            __swift_storeEnumTagSinglePayload((uint64_t)v166, 0, 1, v1311);
          }
          v448 = ((unint64_t)v166 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v449 = ((unint64_t)v167 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v450 = *(_OWORD *)v449;
          v451 = *(_OWORD *)(v449 + 16);
          *(_QWORD *)(v448 + 32) = *(_QWORD *)(v449 + 32);
          *(_OWORD *)v448 = v450;
          *(_OWORD *)(v448 + 16) = v451;
          v452 = (v448 + 47) & 0xFFFFFFFFFFFFFFF8;
          v453 = (v449 + 47) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)v452 = *(_OWORD *)v453;
          *(_BYTE *)(v452 + 16) = *(_BYTE *)(v453 + 16);
          v179 = 21;
          goto LABEL_405;
        case 0x16:
          v1371 = v83;
          v1359 = ~v1352;
          if (__swift_getEnumTagSinglePayload((uint64_t)v167, 1, v1311))
          {
            memcpy(v166, v167, v1373);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1290 + 32))(v166, v167, v1311);
            __swift_storeEnumTagSinglePayload((uint64_t)v166, 0, 1, v1311);
          }
          v454 = ((unint64_t)v166 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v1363 = v167;
          v455 = ((unint64_t)v167 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v456 = *(_OWORD *)v455;
          v457 = *(_OWORD *)(v455 + 16);
          *(_QWORD *)(v454 + 32) = *(_QWORD *)(v455 + 32);
          *(_OWORD *)v454 = v456;
          *(_OWORD *)(v454 + 16) = v457;
          v458 = (_OWORD *)((v454 + 47) & 0xFFFFFFFFFFFFFFF8);
          v459 = (_OWORD *)((v455 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v458 = *v459;
          v460 = (_QWORD *)(((unint64_t)v458 + 23) & 0xFFFFFFFFFFFFF8);
          v461 = (_QWORD *)(((unint64_t)v459 + 23) & 0xFFFFFFFFFFFFF8);
          *v460 = *v461;
          v462 = (_OWORD *)(((unint64_t)v460 + 15) & 0xFFFFFFFFFFFFFFF8);
          v463 = (_OWORD *)(((unint64_t)v461 + 15) & 0xFFFFFFFFFFFFFFF8);
          *v462 = *v463;
          v464 = (_OWORD *)(((unint64_t)v462 + v1273) & v1367);
          v465 = (_OWORD *)(((unint64_t)v463 + v1273) & v1367);
          if (v1228 > 0x7FFFFFFE)
          {
            v468 = (_OWORD *)(((unint64_t)v465 + 23) & 0xFFFFFFFFFFFFFFF8);
            v469 = ((unint64_t)v468 + 23) & 0xFFFFFFFFFFFFFFF8;
            v470 = __swift_getEnumTagSinglePayload((v1361 + v469 + 33) & v170, v1228, v1269);
            v467 = v1368;
            if (!v470)
              goto LABEL_369;
          }
          else
          {
            v466 = *(_QWORD *)((((unint64_t)v463 + v1273) & v1367) + 8);
            if (v466 >= 0xFFFFFFFF)
              LODWORD(v466) = -1;
            v467 = v1368;
            if ((v466 + 1) <= 1)
            {
              v468 = (_OWORD *)(((unint64_t)v465 + 23) & 0xFFFFFFFFFFFFFFF8);
              v469 = ((unint64_t)v468 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_369:
              *v464 = *v465;
              v472 = (_OWORD *)(((unint64_t)v464 + 23) & 0xFFFFFFFFFFFFFFF8);
              *v472 = *v468;
              v473 = ((unint64_t)v472 + 23) & 0xFFFFFFFFFFFFFFF8;
              *(_OWORD *)v473 = *(_OWORD *)v469;
              *(_BYTE *)(v473 + 16) = *(_BYTE *)(v469 + 16);
              v474 = ((unint64_t)v472 + 47) & 0xFFFFFFFFFFFFFFF8;
              v475 = ((unint64_t)v468 + 47) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)v474 = *(_QWORD *)v475;
              *(_BYTE *)(v474 + 8) = *(_BYTE *)(v475 + 8);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1332 + 32))((v1361 + 9 + v474) & v170, (v1361 + 9 + v475) & v170, v1269);
              v471 = v1368;
LABEL_370:
              *((_BYTE *)v464 + v471) = *((_BYTE *)v465 + v471);
              v476 = ((unint64_t)v464 + v471) & 0xFFFFFFFFFFFFFFF8;
              v477 = ((unint64_t)v465 + v471) & 0xFFFFFFFFFFFFFFF8;
              *(_OWORD *)(v476 + 8) = *(_OWORD *)(v477 + 8);
              v478 = (void *)((v1241 + v476) & v1331);
              v479 = (_BYTE *)((v1241 + v477) & v1331);
              if (v1349)
              {
                v480 = v1285;
                v481 = v1280;
                if (v1280 >= v1285)
                {
                  v482 = (v1241 + v477) & v1331;
                  v483 = v1283;
                }
                else
                {
                  v482 = (unint64_t)&v479[v1284] & v1299;
                  v481 = v1285;
                  v483 = v1288;
                }
                v691 = __swift_getEnumTagSinglePayload(v482, v481, v483);
              }
              else
              {
                v480 = v1285;
                if (!v479[v1310])
                  goto LABEL_1000;
                v644 = (v479[v1310] - 1) << v1295;
                if (v1310 > 3)
                  v644 = 0;
                if ((_DWORD)v1310)
                {
                  if (v1310 <= 3)
                    v645 = v1310;
                  else
                    v645 = 4;
                  __asm { BR              X11 }
                }
                v691 = v644 + 1;
              }
              if (v691)
              {
                memcpy(v478, v479, v1348);
                goto LABEL_1002;
              }
LABEL_1000:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1277 + 32))(v478, v479, v1283);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1278 + 32))(((unint64_t)v478 + v1284) & v1299, (unint64_t)&v479[v1284] & v1299, v1288);
              if (!v1349)
                *((_BYTE *)v478 + v1310) = 0;
LABEL_1002:
              v952 = (_QWORD *)(((unint64_t)v478 + v1345) & v1359);
              v953 = (uint64_t *)((unint64_t)&v479[v1345] & v1359);
              if ((v480 & 0x80000000) != 0)
              {
                v955 = __swift_getEnumTagSinglePayload(((unint64_t)v953 + v1270) & v1299, v480, v1288);
              }
              else
              {
                v954 = *v953;
                if ((unint64_t)*v953 >= 0xFFFFFFFF)
                  LODWORD(v954) = -1;
                v955 = v954 + 1;
              }
              if (v955)
              {
                memcpy(v952, v953, v1340);
              }
              else
              {
                *v952 = *v953;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v1278 + 32))(((unint64_t)v952 + v1270) & v1299, ((unint64_t)v953 + v1270) & v1299, v1288);
              }
              v956 = (_BYTE *)(((unint64_t)v952 + v1316) & v1301);
              v957 = (_QWORD *)(((unint64_t)v953 + v1316) & v1301);
              v1307 = v166;
              if (v1282 >= 0x7FFFFFFF)
              {
                v962 = (const void *)(((unint64_t)v957 + v1287) & v1297);
                if (__swift_getEnumTagSinglePayload((uint64_t)v962, v1275, v1286) <= 1)
                {
                  v959 = v957 + 1;
                  v960 = v1287;
                  v961 = ~v1353;
                  goto LABEL_1017;
                }
              }
              else
              {
                v958 = v957[2];
                if (v958 >= 0xFFFFFFFF)
                  LODWORD(v958) = -1;
                if ((int)v958 - 1 < 0)
                {
                  v959 = v957 + 1;
                  v960 = v1287;
                  v961 = ~v1353;
                  v962 = (const void *)(((unint64_t)v957 + v1287) & v1297);
LABEL_1017:
                  *v956 = *(_BYTE *)v957;
                  memcpy(v956 + 8, v959, 0x69uLL);
                  v963 = (void *)((unint64_t)&v956[v960] & v961);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v962, 1, v1286))
                  {
                    memcpy(v963, v962, v1343);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1271 + 32))(v963, v962, v1286);
                    __swift_storeEnumTagSinglePayload((uint64_t)v963, 0, 1, v1286);
                  }
                  v964 = v1347;
LABEL_1022:
                  v965 = (unint64_t)&v956[v1354 + v964];
                  v966 = (unint64_t)v957 + v1354 + v964;
                  v967 = v966 & v171;
                  if (v1272 < 0x7FFFFFFF)
                  {
                    if (*(_QWORD *)(((v1350 + v967) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                      goto LABEL_1024;
                  }
                  else if (__swift_getEnumTagSinglePayload(v966 & v171, v1341, v1311) >= 2)
                  {
LABEL_1024:
                    memcpy((void *)(v965 & v171), (const void *)(v966 & v171), v1274);
                    v968 = v1274;
                    v969 = v1373 + 7;
                    goto LABEL_1031;
                  }
                  if (__swift_getEnumTagSinglePayload(v966 & v171, 1, v1311))
                  {
                    memcpy((void *)(v965 & v171), (const void *)(v966 & v171), v1373);
                  }
                  else
                  {
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v1290 + 32))(v965 & v171, v966 & v171, v1311);
                    __swift_storeEnumTagSinglePayload(v965 & v171, 0, 1, v1311);
                  }
                  v969 = v1373 + 7;
                  v970 = (v1350 + (v965 & v171)) & 0xFFFFFFFFFFFFFFF8;
                  v971 = (v1350 + v967) & 0xFFFFFFFFFFFFFFF8;
                  v972 = *(_OWORD *)v971;
                  v973 = *(_OWORD *)(v971 + 16);
                  *(_QWORD *)(v970 + 32) = *(_QWORD *)(v971 + 32);
                  *(_OWORD *)v970 = v972;
                  *(_OWORD *)(v970 + 16) = v973;
                  v974 = (v970 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v975 = (v971 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v976 = *(_OWORD *)v975;
                  v977 = *(_OWORD *)(v975 + 16);
                  *(_QWORD *)(v974 + 32) = *(_QWORD *)(v975 + 32);
                  *(_OWORD *)v974 = v976;
                  *(_OWORD *)(v974 + 16) = v977;
                  *(_OWORD *)((v974 + 47) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v975 + 47) & 0xFFFFFFFFFFFFF8);
                  v968 = v1274;
                  if (v1341)
                    v968 = ((((((v1309 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                         + 16;
LABEL_1031:
                  v978 = (v965 | v1360) + v968;
                  v979 = (v966 | v1360) + v968;
                  v980 = v979 & v171;
                  if (v1272 < 0x7FFFFFFF)
                  {
                    if (*(_QWORD *)(((v969 + v980) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                      goto LABEL_1033;
                  }
                  else if (__swift_getEnumTagSinglePayload(v979 & v171, v1341, v1311) >= 2)
                  {
LABEL_1033:
                    memcpy((void *)(v978 & v171), (const void *)(v979 & v171), v1274);
                    v981 = v1274;
                    v982 = v1373 + 7;
                    goto LABEL_1040;
                  }
                  if (__swift_getEnumTagSinglePayload(v979 & v171, 1, v1311))
                  {
                    memcpy((void *)(v978 & v171), (const void *)(v979 & v171), v1373);
                  }
                  else
                  {
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v1290 + 32))(v978 & v171, v979 & v171, v1311);
                    __swift_storeEnumTagSinglePayload(v978 & v171, 0, 1, v1311);
                  }
                  v982 = v1373 + 7;
                  v983 = (v1350 + (v978 & v171)) & 0xFFFFFFFFFFFFFFF8;
                  v984 = (v1350 + v980) & 0xFFFFFFFFFFFFFFF8;
                  v985 = *(_OWORD *)v984;
                  v986 = *(_OWORD *)(v984 + 16);
                  *(_QWORD *)(v983 + 32) = *(_QWORD *)(v984 + 32);
                  *(_OWORD *)v983 = v985;
                  *(_OWORD *)(v983 + 16) = v986;
                  v987 = (v983 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v988 = (v984 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v989 = *(_OWORD *)v988;
                  v990 = *(_OWORD *)(v988 + 16);
                  *(_QWORD *)(v987 + 32) = *(_QWORD *)(v988 + 32);
                  *(_OWORD *)v987 = v989;
                  *(_OWORD *)(v987 + 16) = v990;
                  *(_OWORD *)((v987 + 47) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v988 + 47) & 0xFFFFFFFFFFFFF8);
                  v981 = v1274;
                  if (v1341)
                    v981 = ((((((v1309 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                         + 16;
LABEL_1040:
                  v991 = (char *)(((v978 | v1360) + v981) & v171);
                  v992 = (char *)(((v979 | v1360) + v981) & v171);
                  if (v1272 < 0x7FFFFFFF)
                  {
                    v166 = v1307;
                    v993 = v1251;
                    if (*(_QWORD *)(((unint64_t)&v992[v982] & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                    {
LABEL_1042:
                      memcpy(v991, v992, v1274);
                      v255 = v1318;
                      v994 = v1342;
                      v995 = v1366;
                      v996 = v1368;
                      v997 = v1339;
                      v998 = ~v1352;
                      v999 = v1268;
                      v1000 = v1257;
                      v1001 = v1347 + ((v1353 + 8) & ~v1355);
                      v1002 = v1221;
                      v1003 = v1222;
                      v1005 = v77;
                      v1004 = v1220;
                      v1006 = v1314;
                      v1008 = v1255;
                      v1007 = v1256;
                      v1009 = v1253;
                      v1010 = v1254;
                      v1011 = v1252;
                      v1012 = ((v1366 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
                      if (!v1341)
                        goto LABEL_1051;
                      goto LABEL_1050;
                    }
                  }
                  else
                  {
                    v166 = v1307;
                    v993 = v1251;
                    if (__swift_getEnumTagSinglePayload((uint64_t)v992, v1341, v1311) >= 2)
                      goto LABEL_1042;
                  }
                  if (__swift_getEnumTagSinglePayload((uint64_t)v992, 1, v1311))
                  {
                    memcpy(v991, v992, v1373);
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(v1290 + 32))(v991, v992, v1311);
                    __swift_storeEnumTagSinglePayload((uint64_t)v991, 0, 1, v1311);
                  }
                  v997 = v1339;
                  v999 = v1268;
                  v1009 = v1253;
                  v1013 = (unint64_t)&v991[v1350] & 0xFFFFFFFFFFFFFFF8;
                  v1014 = (unint64_t)&v992[v1350] & 0xFFFFFFFFFFFFFFF8;
                  v1015 = *(_OWORD *)v1014;
                  v1016 = *(_OWORD *)(v1014 + 16);
                  *(_QWORD *)(v1013 + 32) = *(_QWORD *)(v1014 + 32);
                  *(_OWORD *)v1013 = v1015;
                  *(_OWORD *)(v1013 + 16) = v1016;
                  v1017 = (v1013 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1018 = (v1014 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1019 = *(_OWORD *)v1018;
                  v1020 = *(_OWORD *)(v1018 + 16);
                  *(_QWORD *)(v1017 + 32) = *(_QWORD *)(v1018 + 32);
                  *(_OWORD *)v1017 = v1019;
                  *(_OWORD *)(v1017 + 16) = v1020;
                  *(_OWORD *)((v1017 + 47) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v1018 + 47) & 0xFFFFFFFFFFFFF8);
                  v255 = v1318;
                  v994 = v1342;
                  v995 = v1366;
                  v996 = v1368;
                  v998 = ~v1352;
                  v1000 = v1257;
                  v1001 = v1347 + ((v1353 + 8) & ~v1355);
                  v1002 = v1221;
                  v1003 = v1222;
                  v1005 = v77;
                  v1004 = v1220;
                  v1006 = v1314;
                  v1008 = v1255;
                  v1007 = v1256;
                  v1010 = v1254;
                  v1011 = v1252;
                  v1012 = ((v1366 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
                  if (!v1341)
                    goto LABEL_1051;
                  v1274 = ((((((v1309 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                        + 16;
LABEL_1050:
                  v165 = v1309;
LABEL_1051:
                  *(_QWORD *)&v991[v1274] = *(_QWORD *)&v992[v1274];
                  v1021 = v1261
                        + ((v1260
                          + ((v1260
                            + ((v1335
                              + ((v1316
                                + ((v1345
                                  + ((v994
                                    + ((((((v1273
                                          + ((((((((v165 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                            + 15) & 0xFFFFFFFFFFFFFFF8)) & v1367)
                                        + v996) & 0xFFFFFFFFFFFFFFF8)
                                      + 23) & 0xFFFFFFFFFFFFFFF8)) & v1331)) & v998)) & v1301)) & v171)) & v171)) & v171);
                  if (v1001 > v1021)
                    v1021 = v1001;
                  if (v1021 <= v1265)
                    v1021 = v1265;
                  if (v1021 <= v999)
                    v1021 = v999;
                  if (v1021 <= v1264)
                    v1021 = v1264;
                  if (v1021 <= v1263)
                    v1021 = v1263;
                  if (v1021 <= v1262)
                    v1021 = v1262;
                  if (v1021 <= v1266)
                    v1021 = (((((v1366 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                          + 16;
                  if (v1021 <= v1267)
                    v1021 = v1267;
                  if (v1021 <= v1259)
                    v1021 = v1259;
                  if (v1021 <= v1323)
                    v1021 = v1323;
                  if (v1021 <= v1321)
                    v1021 = v1321;
                  if (v1021 <= v1224)
                    v1021 = v1224;
                  if (v1021 <= v1337)
                    v1021 = v1337;
                  if (v1021 <= v997)
                    v1021 = v997;
                  if (v1021 <= v1225)
                    v1021 = v1225;
                  if (v1021 <= v1001)
                    v1021 = v1001;
                  if (v1021 <= v1223)
                    v1021 = v1223;
                  if (v1021 <= v1012)
                    v1021 = v1012;
                  if (v1021 <= v1011)
                    v1021 = v1011;
                  if (v1021 <= v1009)
                    v1021 = v1009;
                  if (v1021 <= v993)
                    v1021 = v993;
                  if (v1021 <= v1010)
                    v1021 = v1010;
                  if (v1021 <= v1008)
                    v1021 = v1008;
                  if (v1021 <= v1007)
                    v1021 = v1007;
                  if (v1021 <= v1371)
                    v1021 = v1371;
                  if (v1021 <= v1003)
                    v1021 = v1003;
                  if (v1021 <= v1006)
                    v1021 = v1006;
                  if (v1021 <= v1000)
                    v1021 = v1000;
                  if (v1021 <= v1005)
                    v1021 = v1005;
                  if (v1021 <= v995)
                    v1021 = v995;
                  if (v1021 <= v1226)
                    v1021 = v1226;
                  if (v1021 <= v1002)
                    v1021 = v1002;
                  if (v1021 <= v1004)
                    v1021 = v1004;
                  if (v1021 <= 8)
                    v168 = 8;
                  else
                    v168 = v1021;
                  v179 = 22;
                  goto LABEL_1121;
                }
              }
              v964 = v1347;
              memcpy(v956, v957, v1347);
              goto LABEL_1022;
            }
          }
          v471 = v467;
          memcpy(v464, v465, v467);
          goto LABEL_370;
        case 0x17:
          *v166 = *v167;
          v205 = v167;
          v206 = (_BYTE *)(((unint64_t)v166 + v1355 + 8) & v1301);
          v175 = v205;
          v207 = (_BYTE *)(((unint64_t)v205 + v1355 + 8) & v1301);
          *v206 = *v207;
          memcpy(v206 + 8, v207 + 8, 0x69uLL);
          v208 = (void *)((unint64_t)&v206[v1287] & v1297);
          v209 = (const void *)((unint64_t)&v207[v1287] & v1297);
          if (__swift_getEnumTagSinglePayload((uint64_t)v209, 1, v1286))
          {
            memcpy(v208, v209, v1343);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1271 + 32))(v208, v209, v1286);
            __swift_storeEnumTagSinglePayload((uint64_t)v208, 0, 1, v1286);
          }
          v179 = 23;
          goto LABEL_1163;
        case 0x18:
          if (__swift_getEnumTagSinglePayload((uint64_t)v167, 1, v1311))
          {
            memcpy(v166, v167, v1373);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1290 + 32))(v166, v167, v1311);
            __swift_storeEnumTagSinglePayload((uint64_t)v166, 0, 1, v1311);
          }
          v484 = ((unint64_t)v166 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v485 = ((unint64_t)v167 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v486 = *(_OWORD *)v485;
          v487 = *(_OWORD *)(v485 + 16);
          *(_QWORD *)(v484 + 32) = *(_QWORD *)(v485 + 32);
          *(_OWORD *)v484 = v486;
          *(_OWORD *)(v484 + 16) = v487;
          v488 = (_QWORD *)((v484 + 47) & 0xFFFFFFFFFFFFF8);
          v489 = (_QWORD *)((v485 + 47) & 0xFFFFFFFFFFFFF8);
          *v488 = *v489;
          *(_OWORD *)(((unint64_t)v488 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v489 + 15) & 0xFFFFFFFFFFFFF8);
          v179 = 24;
          goto LABEL_405;
        case 0x19:
          *v166 = *v167;
          v179 = 25;
          goto LABEL_266;
        case 0x1A:
          *v166 = *v167;
          v179 = 26;
          goto LABEL_266;
        case 0x1B:
          *v166 = *v167;
          v179 = 27;
          goto LABEL_266;
        case 0x1C:
          *v166 = *v167;
          v179 = 28;
          goto LABEL_266;
        case 0x1D:
          v210 = *(_OWORD *)v167;
          v211 = *((_OWORD *)v167 + 1);
          v166[4] = v167[4];
          *(_OWORD *)v166 = v210;
          *((_OWORD *)v166 + 1) = v211;
          v212 = v167;
          v213 = (char *)(((unint64_t)v166 + v1346) & v1229);
          v175 = v212;
          v214 = (const void *)(((unint64_t)v212 + v1346) & v1229);
          if (__swift_getEnumTagSinglePayload((uint64_t)v214, 1, v1311))
          {
            v215 = v1373;
            memcpy(v213, v214, v1373);
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(v1290 + 32))(v213, v214, v1311);
            __swift_storeEnumTagSinglePayload((uint64_t)v213, 0, 1, v1311);
            v215 = v1373;
          }
          v490 = &v213[v215];
          *v490 = *((_BYTE *)v214 + v215);
          v490[1] = *((_BYTE *)v214 + v215 + 1);
          v491 = (unint64_t)&v213[v215 + 9] & 0xFFFFFFFFFFFFFFF8;
          v492 = ((unint64_t)v214 + v215 + 9) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)v491 = *(_OWORD *)v492;
          *(_BYTE *)(v491 + 16) = *(_BYTE *)(v492 + 16);
          v179 = 29;
          goto LABEL_1163;
        case 0x1E:
          v216 = *(_OWORD *)v167;
          v217 = *((_OWORD *)v167 + 1);
          v166[4] = v167[4];
          *(_OWORD *)v166 = v216;
          *((_OWORD *)v166 + 1) = v217;
          *((_BYTE *)v166 + 40) = *((_BYTE *)v167 + 40);
          *((_BYTE *)v166 + 41) = *((_BYTE *)v167 + 41);
          *((_BYTE *)v166 + 42) = *((_BYTE *)v167 + 42);
          *((_BYTE *)v166 + 43) = *((_BYTE *)v167 + 43);
          v218 = (_OWORD *)(((unint64_t)v166 + 51) & 0xFFFFFFFFFFFFFFF8);
          v175 = v167;
          v219 = (_OWORD *)(((unint64_t)v167 + 51) & 0xFFFFFFFFFFFFFFF8);
          *v218 = *v219;
          v220 = (_OWORD *)(((unint64_t)v218 + 23) & 0xFFFFFFFFFFFFFFF8);
          v221 = (_OWORD *)(((unint64_t)v219 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v220 = *v221;
          v222 = (void *)(((unint64_t)v220 + v1334) & v1229);
          v223 = (const void *)(((unint64_t)v221 + v1334) & v1229);
          if (__swift_getEnumTagSinglePayload((uint64_t)v223, 1, v1311))
          {
            memcpy(v222, v223, v1373);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1290 + 32))(v222, v223, v1311);
            __swift_storeEnumTagSinglePayload((uint64_t)v222, 0, 1, v1311);
          }
          v179 = 30;
          goto LABEL_1163;
        case 0x1F:
          *v166 = *v167;
          v179 = 31;
          goto LABEL_266;
        case 0x20:
          *(_OWORD *)v166 = *(_OWORD *)v167;
          v224 = ((unint64_t)v166 + 23) & 0xFFFFFFFFFFFFFFF8;
          v175 = v167;
          v225 = ((unint64_t)v167 + 23) & 0xFFFFFFFFFFFFFFF8;
          v226 = *(_OWORD *)v225;
          v227 = *(_OWORD *)(v225 + 16);
          *(_QWORD *)(v224 + 32) = *(_QWORD *)(v225 + 32);
          *(_OWORD *)v224 = v226;
          *(_OWORD *)(v224 + 16) = v227;
          v228 = (void *)((v1346 + v224) & v1229);
          v229 = (const void *)((v1346 + v225) & v1229);
          if (__swift_getEnumTagSinglePayload((uint64_t)v229, 1, v1311))
          {
            memcpy(v228, v229, v1373);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1290 + 32))(v228, v229, v1311);
            __swift_storeEnumTagSinglePayload((uint64_t)v228, 0, 1, v1311);
          }
          v179 = 32;
          goto LABEL_1163;
        case 0x21:
          if (v1349)
          {
            v230 = v1285;
            v231 = v1310;
            if (v1280 >= v1285)
            {
              v232 = (uint64_t)v167;
              v230 = v1280;
              v233 = v1283;
            }
            else
            {
              v232 = ((unint64_t)v167 + v1284) & v1299;
              v233 = v1288;
            }
            v687 = __swift_getEnumTagSinglePayload(v232, v230, v233);
            v493 = v1311;
            v494 = v1373;
          }
          else
          {
            v231 = v1310;
            v493 = v1311;
            v494 = v1373;
            if (!*((_BYTE *)v167 + v1310))
              goto LABEL_751;
            v495 = (*((unsigned __int8 *)v167 + v1310) - 1) << v1295;
            if (v1310 > 3)
              v495 = 0;
            if ((_DWORD)v1310)
            {
              if (v1310 <= 3)
                v496 = v1310;
              else
                v496 = 4;
              __asm { BR              X11 }
            }
            v687 = v495 + 1;
          }
          if (v687)
          {
            memcpy(v166, v167, v1348);
            goto LABEL_753;
          }
LABEL_751:
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1277 + 32))(v166, v167, v1283);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1278 + 32))(((unint64_t)v166 + v1284) & v1299, ((unint64_t)v167 + v1284) & v1299, v1288);
          if (!v1349)
            *((_BYTE *)v166 + v231) = 0;
LABEL_753:
          v807 = ((unint64_t)v166 + v1325) & 0xFFFFFFFFFFFFFFF8;
          v175 = v167;
          v808 = ((unint64_t)v167 + v1325) & 0xFFFFFFFFFFFFFFF8;
          v809 = *(_OWORD *)v808;
          v810 = *(_OWORD *)(v808 + 16);
          *(_QWORD *)(v807 + 32) = *(_QWORD *)(v808 + 32);
          *(_OWORD *)v807 = v809;
          *(_OWORD *)(v807 + 16) = v810;
          v811 = (void *)((v1346 + v807) & v1229);
          v812 = (const void *)((v1346 + v808) & v1229);
          if (__swift_getEnumTagSinglePayload((uint64_t)v812, 1, v493))
          {
            memcpy(v811, v812, v494);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1290 + 32))(v811, v812, v493);
            __swift_storeEnumTagSinglePayload((uint64_t)v811, 0, 1, v493);
          }
          v813 = (_OWORD *)(((unint64_t)v811 + v1350) & 0xFFFFFFFFFFFFFFF8);
          v814 = (_OWORD *)(((unint64_t)v812 + v1350) & 0xFFFFFFFFFFFFFFF8);
          *v813 = *v814;
          *(_OWORD *)(((unint64_t)v813 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v814 + 23) & 0xFFFFFFFFFFFFF8);
          v179 = 33;
          goto LABEL_1163;
        case 0x22:
          if (__swift_getEnumTagSinglePayload((uint64_t)v167, 1, v1311))
          {
            memcpy(v166, v167, v1373);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1290 + 32))(v166, v167, v1311);
            __swift_storeEnumTagSinglePayload((uint64_t)v166, 0, 1, v1311);
          }
          v497 = v166;
          v498 = ((unint64_t)v166 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v192 = v167;
          v499 = ((unint64_t)v167 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v500 = *(_OWORD *)v499;
          v501 = *(_OWORD *)(v499 + 16);
          *(_QWORD *)(v498 + 32) = *(_QWORD *)(v499 + 32);
          *(_OWORD *)v498 = v500;
          *(_OWORD *)(v498 + 16) = v501;
          v502 = (_BYTE *)((v1369 + v498) & v1301);
          v503 = (_BYTE *)((v1369 + v499) & v1301);
          *v502 = *v503;
          memcpy(v502 + 8, v503 + 8, 0x69uLL);
          v504 = (void *)((unint64_t)&v502[v1287] & v1297);
          v505 = (const void *)((unint64_t)&v503[v1287] & v1297);
          if (__swift_getEnumTagSinglePayload((uint64_t)v505, 1, v1286))
          {
            memcpy(v504, v505, v1343);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1271 + 32))(v504, v505, v1286);
            __swift_storeEnumTagSinglePayload((uint64_t)v504, 0, 1, v1286);
          }
          v646 = v1285;
          v647 = (_OWORD *)((unint64_t)&v502[v1333] & 0xFFFFFFFFFFFFFFF8);
          v648 = (_OWORD *)((unint64_t)&v503[v1333] & 0xFFFFFFFFFFFFFFF8);
          *v647 = *v648;
          v649 = ((unint64_t)v647 + 23) & 0xFFFFFFFFFFFFFFF8;
          v650 = ((unint64_t)v648 + 23) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)v649 = *(_OWORD *)v650;
          *(_BYTE *)(v649 + 16) = *(_BYTE *)(v650 + 16);
          *(_BYTE *)(v649 + 17) = *(_BYTE *)(v650 + 17);
          v651 = (void *)((v1237 + v649) & v1331);
          v652 = (_BYTE *)((v1237 + v650) & v1331);
          if (v1349)
          {
            if (v1280 >= v1285)
            {
              v653 = (v1237 + v650) & v1331;
              v646 = v1280;
              v654 = v1283;
            }
            else
            {
              v653 = (unint64_t)&v652[v1284] & v1299;
              v654 = v1288;
            }
            v695 = __swift_getEnumTagSinglePayload(v653, v646, v654);
            v166 = v497;
          }
          else
          {
            v166 = v497;
            if (!v652[v1310])
              goto LABEL_929;
            v683 = (v652[v1310] - 1) << v1295;
            if (v1310 > 3)
              v683 = 0;
            if ((_DWORD)v1310)
            {
              if (v1310 <= 3)
                v684 = v1310;
              else
                v684 = 4;
              __asm { BR              X11 }
            }
            v695 = v683 + 1;
          }
          if (v695)
          {
            memcpy(v651, v652, v1348);
            goto LABEL_931;
          }
LABEL_929:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1277 + 32))(v651, v652, v1283);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1278 + 32))(((unint64_t)v651 + v1284) & v1299, (unint64_t)&v652[v1284] & v1299, v1288);
          if (!v1349)
            *((_BYTE *)v651 + v1310) = 0;
LABEL_931:
          v179 = 34;
          goto LABEL_1197;
        case 0x23:
          if (__swift_getEnumTagSinglePayload((uint64_t)v167, 1, v1311))
          {
            memcpy(v166, v167, v1373);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1290 + 32))(v166, v167, v1311);
            __swift_storeEnumTagSinglePayload((uint64_t)v166, 0, 1, v1311);
          }
          v506 = v166;
          v507 = ((unint64_t)v166 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v192 = v167;
          v508 = ((unint64_t)v167 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v509 = *(_OWORD *)v508;
          v510 = *(_OWORD *)(v508 + 16);
          *(_QWORD *)(v507 + 32) = *(_QWORD *)(v508 + 32);
          *(_OWORD *)v507 = v509;
          *(_OWORD *)(v507 + 16) = v510;
          v511 = (_BYTE *)((v1369 + v507) & v1301);
          v512 = (_BYTE *)((v1369 + v508) & v1301);
          *v511 = *v512;
          memcpy(v511 + 8, v512 + 8, 0x69uLL);
          v513 = (void *)((unint64_t)&v511[v1287] & v1297);
          v514 = (const void *)((unint64_t)&v512[v1287] & v1297);
          if (__swift_getEnumTagSinglePayload((uint64_t)v514, 1, v1286))
          {
            memcpy(v513, v514, v1343);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1271 + 32))(v513, v514, v1286);
            __swift_storeEnumTagSinglePayload((uint64_t)v513, 0, 1, v1286);
          }
          v655 = v1285;
          v656 = (_OWORD *)((unint64_t)&v511[v1333] & 0xFFFFFFFFFFFFFFF8);
          v657 = (_OWORD *)((unint64_t)&v512[v1333] & 0xFFFFFFFFFFFFFFF8);
          *v656 = *v657;
          v658 = ((unint64_t)v656 + 23) & 0xFFFFFFFFFFFFFFF8;
          v659 = ((unint64_t)v657 + 23) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)v658 = *(_OWORD *)v659;
          *(_BYTE *)(v658 + 16) = *(_BYTE *)(v659 + 16);
          *(_BYTE *)(v658 + 17) = *(_BYTE *)(v659 + 17);
          v660 = (_OWORD *)((v658 + 25) & 0xFFFFFFFFFFFFFFF8);
          v661 = (_OWORD *)((v659 + 25) & 0xFFFFFFFFFFFFFFF8);
          *v660 = *v661;
          v662 = (_OWORD *)(((unint64_t)v660 + 23) & 0xFFFFFFFFFFFFFFF8);
          v663 = (_OWORD *)(((unint64_t)v661 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v662 = *v663;
          v664 = (_OWORD *)(((unint64_t)v662 + 23) & 0xFFFFFFFFFFFFFFF8);
          v665 = (_OWORD *)(((unint64_t)v663 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v664 = *v665;
          v666 = (_OWORD *)(((unint64_t)v664 + 23) & 0xFFFFFFFFFFFFFFF8);
          v667 = (_OWORD *)(((unint64_t)v665 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v666 = *v667;
          v668 = (_QWORD *)(((unint64_t)v666 + 23) & 0xFFFFFFFFFFFFFFF8);
          v669 = (_QWORD *)(((unint64_t)v667 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v668 = *v669;
          v670 = (void *)(((unint64_t)v668 + v1327) & v1331);
          v671 = (_BYTE *)(((unint64_t)v669 + v1327) & v1331);
          if (v1349)
          {
            if (v1280 >= v1285)
            {
              v672 = ((unint64_t)v669 + v1327) & v1331;
              v655 = v1280;
              v673 = v1283;
            }
            else
            {
              v672 = (unint64_t)&v671[v1284] & v1299;
              v673 = v1288;
            }
            v696 = __swift_getEnumTagSinglePayload(v672, v655, v673);
            v166 = v506;
          }
          else
          {
            v166 = v506;
            if (!v671[v1310])
              goto LABEL_934;
            v685 = (v671[v1310] - 1) << v1295;
            if (v1310 > 3)
              v685 = 0;
            if ((_DWORD)v1310)
            {
              if (v1310 <= 3)
                v686 = v1310;
              else
                v686 = 4;
              __asm { BR              X11 }
            }
            v696 = v685 + 1;
          }
          if (v696)
          {
            memcpy(v670, v671, v1348);
            goto LABEL_936;
          }
LABEL_934:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1277 + 32))(v670, v671, v1283);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1278 + 32))(((unint64_t)v670 + v1284) & v1299, (unint64_t)&v671[v1284] & v1299, v1288);
          if (!v1349)
            *((_BYTE *)v670 + v1310) = 0;
LABEL_936:
          *(_OWORD *)(((unint64_t)v670 + v1325) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v671[v1325] & 0xFFFFFFFFFFFFF8);
          v179 = 35;
          goto LABEL_1197;
        case 0x24:
          if (__swift_getEnumTagSinglePayload((uint64_t)v167, 1, v1311))
          {
            memcpy(v166, v167, v1373);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1290 + 32))(v166, v167, v1311);
            __swift_storeEnumTagSinglePayload((uint64_t)v166, 0, 1, v1311);
          }
          v515 = ((unint64_t)v166 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v516 = ((unint64_t)v167 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v517 = *(_OWORD *)v516;
          v518 = *(_OWORD *)(v516 + 16);
          *(_QWORD *)(v515 + 32) = *(_QWORD *)(v516 + 32);
          *(_OWORD *)v515 = v517;
          *(_OWORD *)(v515 + 16) = v518;
          v519 = (_OWORD *)((v515 + 47) & 0xFFFFFFFFFFFFFFF8);
          v520 = (_OWORD *)((v516 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v519 = *v520;
          v521 = ((unint64_t)v519 + 23) & 0xFFFFFFFFFFFFFFF8;
          v522 = ((unint64_t)v520 + 23) & 0xFFFFFFFFFFFFFFF8;
          v523 = *(_OWORD *)v522;
          v524 = *(_OWORD *)(v522 + 16);
          *(_QWORD *)(v521 + 32) = *(_QWORD *)(v522 + 32);
          *(_OWORD *)v521 = v523;
          *(_OWORD *)(v521 + 16) = v524;
          v179 = 36;
          goto LABEL_405;
        case 0x25:
          if (__swift_getEnumTagSinglePayload((uint64_t)v167, 1, v1311))
          {
            memcpy(v166, v167, v1373);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1290 + 32))(v166, v167, v1311);
            __swift_storeEnumTagSinglePayload((uint64_t)v166, 0, 1, v1311);
          }
          v525 = ((unint64_t)v166 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v526 = ((unint64_t)v167 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v527 = *(_OWORD *)v526;
          v528 = *(_OWORD *)(v526 + 16);
          *(_QWORD *)(v525 + 32) = *(_QWORD *)(v526 + 32);
          *(_OWORD *)v525 = v527;
          *(_OWORD *)(v525 + 16) = v528;
          v529 = (_QWORD *)((v525 + 47) & 0xFFFFFFFFFFFFF8);
          v530 = (_QWORD *)((v526 + 47) & 0xFFFFFFFFFFFFF8);
          *v529 = *v530;
          *(_QWORD *)(((unint64_t)v529 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v530 + 15) & 0xFFFFFFFFFFFFF8);
          v179 = 37;
          goto LABEL_405;
        case 0x26:
          if (__swift_getEnumTagSinglePayload((uint64_t)v167, 1, v1311))
          {
            memcpy(v166, v167, v1373);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1290 + 32))(v166, v167, v1311);
            __swift_storeEnumTagSinglePayload((uint64_t)v166, 0, 1, v1311);
          }
          v531 = ((unint64_t)v166 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v532 = ((unint64_t)v167 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v533 = *(_OWORD *)v532;
          v534 = *(_OWORD *)(v532 + 16);
          *(_QWORD *)(v531 + 32) = *(_QWORD *)(v532 + 32);
          *(_OWORD *)v531 = v533;
          *(_OWORD *)(v531 + 16) = v534;
          v535 = (_OWORD *)((v531 + 47) & 0xFFFFFFFFFFFFFFF8);
          v536 = (_OWORD *)((v532 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v535 = *v536;
          v537 = (_OWORD *)(((unint64_t)v535 + 23) & 0xFFFFFFFFFFFFFFF8);
          v538 = (_OWORD *)(((unint64_t)v536 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v537 = *v538;
          v539 = ((unint64_t)v537 + 23) & 0xFFFFFFFFFFFFFFF8;
          v540 = ((unint64_t)v538 + 23) & 0xFFFFFFFFFFFFFFF8;
          v541 = *(_OWORD *)v540;
          v542 = *(_OWORD *)(v540 + 16);
          *(_QWORD *)(v539 + 32) = *(_QWORD *)(v540 + 32);
          *(_OWORD *)v539 = v541;
          *(_OWORD *)(v539 + 16) = v542;
          v543 = (v539 + 47) & 0xFFFFFFFFFFFFFFF8;
          v544 = (v540 + 47) & 0xFFFFFFFFFFFFFFF8;
          v545 = *(_OWORD *)v544;
          v546 = *(_OWORD *)(v544 + 16);
          *(_QWORD *)(v543 + 32) = *(_QWORD *)(v544 + 32);
          *(_OWORD *)v543 = v545;
          *(_OWORD *)(v543 + 16) = v546;
          v179 = 38;
          goto LABEL_405;
        case 0x27:
          if (__swift_getEnumTagSinglePayload((uint64_t)v167, 1, v1311))
          {
            memcpy(v166, v167, v1373);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1290 + 32))(v166, v167, v1311);
            __swift_storeEnumTagSinglePayload((uint64_t)v166, 0, 1, v1311);
          }
          v547 = ((unint64_t)v166 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v548 = ((unint64_t)v167 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v549 = *(_OWORD *)v548;
          v550 = *(_OWORD *)(v548 + 16);
          *(_QWORD *)(v547 + 32) = *(_QWORD *)(v548 + 32);
          *(_OWORD *)v547 = v549;
          *(_OWORD *)(v547 + 16) = v550;
          *(_QWORD *)((v547 + 47) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v548 + 47) & 0xFFFFFFFFFFFFF8);
          v179 = 39;
LABEL_405:
          v255 = v1318;
          goto LABEL_1313;
        case 0x28:
          v1372 = v83;
          v234 = *(_OWORD *)v167;
          v235 = *((_OWORD *)v167 + 1);
          v166[4] = v167[4];
          *(_OWORD *)v166 = v234;
          *((_OWORD *)v166 + 1) = v235;
          v236 = v167;
          v237 = (void *)(((unint64_t)v166 + v1346) & v1229);
          v1363 = v236;
          v238 = (const void *)(((unint64_t)v236 + v1346) & v1229);
          if (__swift_getEnumTagSinglePayload((uint64_t)v238, 1, v1311))
          {
            memcpy(v237, v238, v1373);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1290 + 32))(v237, v238, v1311);
            __swift_storeEnumTagSinglePayload((uint64_t)v237, 0, 1, v1311);
          }
          v551 = 7;
          if (!v1341)
            v551 = 8;
          v552 = v1309 + v551;
          *(_QWORD *)(((unint64_t)v237 + v552) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v238 + v552) & 0xFFFFFFFFFFFFF8);
          v553 = v1261
               + ((v1260
                 + ((v1260
                   + ((v1335
                     + ((v1316
                       + ((v1345
                         + ((v1342
                           + ((((((v1273
                                 + (((((((v552 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                   + 15) & 0xFFFFFFFFFFFFFFF8)) & v1367)
                               + v1368) & 0xFFFFFFFFFFFFFFF8)
                             + 23) & 0xFFFFFFFFFFFFFFF8)) & v1331)) & ~v1352)) & v1301)) & v171)) & v171)) & v171);
          if (v1258 > v553)
            v553 = v1347 + ((v1353 + 8) & ~v1355);
          if (v553 <= v1265)
            v553 = v1265;
          if (v553 <= v1268)
            v553 = v1268;
          if (v553 <= v1264)
            v553 = v1264;
          if (v553 <= v1263)
            v553 = v1263;
          if (v553 <= v1262)
            v553 = v1262;
          if (v553 <= v1266)
            v553 = (((((v1366 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
          if (v553 <= v1267)
            v553 = v1267;
          if (v553 <= v1259)
            v553 = v1259;
          if (v553 <= v1323)
            v553 = v1323;
          if (v553 <= v1321)
            v553 = v1321;
          if (v553 <= v1224)
            v553 = v1224;
          if (v553 <= v1337)
            v553 = v1337;
          if (v553 <= v1339)
            v553 = v1339;
          if (v553 <= v1225)
            v553 = v1225;
          if (v553 <= v1258)
            v553 = v1347 + ((v1353 + 8) & ~v1355);
          if (v553 <= v1223)
            v553 = v1223;
          if (v553 <= v1319)
            v553 = ((v1366 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
          if (v553 <= v1252)
            v553 = v1252;
          if (v553 <= v1253)
            v553 = v1253;
          if (v553 <= v1251)
            v553 = v1251;
          if (v553 <= v1254)
            v553 = v1254;
          if (v553 <= v1255)
            v553 = v1255;
          if (v553 <= v1256)
            v553 = v1256;
          if (v553 <= v1372)
            v553 = v1372;
          if (v553 <= v1222)
            v553 = v1222;
          if (v553 <= v1314)
            v553 = v1314;
          if (v553 <= v1257)
            v553 = v1257;
          if (v553 <= v77)
            v553 = v77;
          if (v553 <= v1366)
            v553 = v1366;
          if (v553 <= v1226)
            v553 = v1226;
          if (v553 <= v1221)
            v553 = v1221;
          if (v553 <= v1220)
            v553 = v1220;
          if (v553 <= 8)
            v168 = 8;
          else
            v168 = v553;
          v179 = 40;
          v255 = v1318;
          goto LABEL_1121;
        case 0x29:
          v239 = *(_OWORD *)v167;
          v240 = *((_OWORD *)v167 + 1);
          v166[4] = v167[4];
          *(_OWORD *)v166 = v239;
          *((_OWORD *)v166 + 1) = v240;
          v241 = v167;
          v242 = (void *)(((unint64_t)v166 + v1346) & v1229);
          v175 = v241;
          v243 = (const void *)(((unint64_t)v241 + v1346) & v1229);
          if (__swift_getEnumTagSinglePayload((uint64_t)v243, 1, v1311))
          {
            memcpy(v242, v243, v1373);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1290 + 32))(v242, v243, v1311);
            __swift_storeEnumTagSinglePayload((uint64_t)v242, 0, 1, v1311);
          }
          v554 = (_QWORD *)(((unint64_t)v242 + v1350) & 0xFFFFFFFFFFFFF8);
          v555 = (_QWORD *)(((unint64_t)v243 + v1350) & 0xFFFFFFFFFFFFFFF8);
          *v554 = *v555;
          *(_QWORD *)(((unint64_t)v554 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v555 + 15) & 0xFFFFFFFFFFFFF8);
          v179 = 41;
          goto LABEL_1163;
        case 0x2A:
          *v166 = *v167;
          v179 = 42;
          goto LABEL_266;
        case 0x2B:
          v244 = *(_OWORD *)v167;
          v245 = *((_OWORD *)v167 + 1);
          v166[4] = v167[4];
          *(_OWORD *)v166 = v244;
          *((_OWORD *)v166 + 1) = v245;
          v246 = v167;
          v247 = (void *)(((unint64_t)v166 + v1346) & v1229);
          v175 = v246;
          v248 = (const void *)(((unint64_t)v246 + v1346) & v1229);
          if (__swift_getEnumTagSinglePayload((uint64_t)v248, 1, v1311))
          {
            memcpy(v247, v248, v1373);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1290 + 32))(v247, v248, v1311);
            __swift_storeEnumTagSinglePayload((uint64_t)v247, 0, 1, v1311);
          }
          v179 = 43;
          goto LABEL_1163;
        case 0x2C:
          *v166 = *v167;
          v179 = 44;
          goto LABEL_266;
        case 0x2D:
          v249 = ~v1352;
          if (__swift_getEnumTagSinglePayload((uint64_t)v167, 1, v1311))
          {
            memcpy(v166, v167, v1373);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1290 + 32))(v166, v167, v1311);
            __swift_storeEnumTagSinglePayload((uint64_t)v166, 0, 1, v1311);
          }
          v556 = v1285;
          v557 = ((unint64_t)v166 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v558 = ((unint64_t)v167 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v559 = *(_OWORD *)v558;
          v560 = *(_OWORD *)(v558 + 16);
          *(_QWORD *)(v557 + 32) = *(_QWORD *)(v558 + 32);
          *(_OWORD *)v557 = v559;
          *(_OWORD *)(v557 + 16) = v560;
          v561 = (v557 + 47) & 0xFFFFFFFFFFFFFFF8;
          v562 = (v558 + 47) & 0xFFFFFFFFFFFFFFF8;
          v563 = *(_OWORD *)v562;
          v564 = *(_OWORD *)(v562 + 16);
          *(_QWORD *)(v561 + 32) = *(_QWORD *)(v562 + 32);
          *(_OWORD *)v561 = v563;
          *(_OWORD *)(v561 + 16) = v564;
          v565 = (_OWORD *)((v561 + 47) & 0xFFFFFFFFFFFFFFF8);
          v566 = (_OWORD *)((v562 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v565 = *v566;
          v567 = (_OWORD *)(((unint64_t)v565 + 23) & 0xFFFFFFFFFFFFFFF8);
          v568 = (_OWORD *)(((unint64_t)v566 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v567 = *v568;
          v569 = (_OWORD *)(((unint64_t)v567 + 23) & 0xFFFFFFFFFFFFFFF8);
          v570 = (_OWORD *)(((unint64_t)v568 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v569 = *v570;
          v571 = (_OWORD *)(((unint64_t)v569 + 23) & 0xFFFFFFFFFFFFFFF8);
          v572 = (_OWORD *)(((unint64_t)v570 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v571 = *v572;
          v573 = ((unint64_t)v571 + 23) & 0xFFFFFFFFFFFFFFF8;
          v574 = ((unint64_t)v572 + 23) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)v573 = *(_OWORD *)v574;
          *(_BYTE *)(v573 + 16) = *(_BYTE *)(v574 + 16);
          v575 = (_QWORD *)(((unint64_t)v571 + 47) & 0xFFFFFFFFFFFFFFF8);
          v576 = (_QWORD *)(((unint64_t)v572 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v575 = *v576;
          v577 = (void *)(((unint64_t)v575 + v1327) & v1331);
          v578 = (_BYTE *)(((unint64_t)v576 + v1327) & v1331);
          if (v1349)
          {
            if (v1280 >= v1285)
            {
              v579 = ((unint64_t)v576 + v1327) & v1331;
              v556 = v1280;
              v580 = v1283;
            }
            else
            {
              v579 = (unint64_t)&v578[v1284] & v1299;
              v580 = v1288;
            }
            v692 = __swift_getEnumTagSinglePayload(v579, v556, v580);
            v674 = v1286;
            v675 = v1287;
          }
          else
          {
            v674 = v1286;
            v675 = v1287;
            if (!v578[v1310])
              goto LABEL_1124;
            v676 = (v578[v1310] - 1) << v1295;
            if (v1310 > 3)
              v676 = 0;
            if ((_DWORD)v1310)
            {
              if (v1310 <= 3)
                v677 = v1310;
              else
                v677 = 4;
              __asm { BR              X11 }
            }
            v692 = v676 + 1;
          }
          if (v692)
          {
            memcpy(v577, v578, v1348);
            goto LABEL_1126;
          }
LABEL_1124:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1277 + 32))(v577, v578, v1283);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1278 + 32))(((unint64_t)v577 + v1284) & v1299, (unint64_t)&v578[v1284] & v1299, v1288);
          if (!v1349)
            *((_BYTE *)v577 + v1310) = 0;
LABEL_1126:
          v1022 = (void *)(((unint64_t)v577 + v1250) & v1331);
          v1023 = (_BYTE *)((unint64_t)&v578[v1250] & v1331);
          if (v1349)
          {
            v1024 = v1285;
            if (v1280 >= v1285)
            {
              v1025 = (uint64_t)v1023;
              v1024 = v1280;
              v1026 = v1283;
            }
            else
            {
              v1025 = (unint64_t)&v1023[v1284] & v1299;
              v1026 = v1288;
            }
            v1029 = __swift_getEnumTagSinglePayload(v1025, v1024, v1026);
          }
          else
          {
            if (!v1023[v1310])
              goto LABEL_1166;
            v1027 = (v1023[v1310] - 1) << v1295;
            if (v1310 > 3)
              v1027 = 0;
            if ((_DWORD)v1310)
            {
              if (v1310 <= 3)
                v1028 = v1310;
              else
                v1028 = 4;
              __asm { BR              X11 }
            }
            v1029 = v1027 + 1;
          }
          if (v1029)
          {
            memcpy(v1022, v1023, v1348);
            goto LABEL_1168;
          }
LABEL_1166:
          (*(void (**)(void *, _BYTE *, uint64_t))(v1277 + 32))(v1022, v1023, v1283);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1278 + 32))(((unint64_t)v1022 + v1284) & v1299, (unint64_t)&v1023[v1284] & v1299, v1288);
          if (!v1349)
            *((_BYTE *)v1022 + v1310) = 0;
LABEL_1168:
          v1042 = (_QWORD *)(((unint64_t)v1022 + v1345) & v249);
          v1043 = (uint64_t *)((unint64_t)&v1023[v1345] & v249);
          if ((v1285 & 0x80000000) != 0)
          {
            v1045 = __swift_getEnumTagSinglePayload(((unint64_t)v1043 + v1270) & v1299, v1285, v1288);
          }
          else
          {
            v1044 = *v1043;
            if ((unint64_t)*v1043 >= 0xFFFFFFFF)
              LODWORD(v1044) = -1;
            v1045 = v1044 + 1;
          }
          if (v1045)
          {
            memcpy(v1042, v1043, v1340);
          }
          else
          {
            *v1042 = *v1043;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v1278 + 32))(((unint64_t)v1042 + v1270) & v1299, ((unint64_t)v1043 + v1270) & v1299, v1288);
          }
          v1046 = (_QWORD *)(((unint64_t)v1042 + v1218) & v249);
          v1047 = (uint64_t *)(((unint64_t)v1043 + v1218) & v249);
          if ((v1285 & 0x80000000) != 0)
          {
            v1049 = __swift_getEnumTagSinglePayload(((unint64_t)v1047 + v1270) & v1299, v1285, v1288);
          }
          else
          {
            v1048 = *v1047;
            if ((unint64_t)*v1047 >= 0xFFFFFFFF)
              LODWORD(v1048) = -1;
            v1049 = v1048 + 1;
          }
          v192 = v167;
          if (v1049)
          {
            v1050 = v1340;
            memcpy(v1046, v1047, v1340);
          }
          else
          {
            *v1046 = *v1047;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v1278 + 32))(((unint64_t)v1046 + v1270) & v1299, ((unint64_t)v1047 + v1270) & v1299, v1288);
            v1050 = v1340;
          }
          v1051 = (char *)v1046 + v1050;
          *v1051 = *((_BYTE *)v1047 + v1050);
          v1051[1] = *((_BYTE *)v1047 + v1050 + 1);
          v1052 = (_OWORD *)(((unint64_t)v1046 + v1050 + 9) & 0xFFFFFFFFFFFFFFF8);
          v1053 = (_OWORD *)(((unint64_t)v1047 + v1050 + 9) & 0xFFFFFFFFFFFFFFF8);
          *v1052 = *v1053;
          v1054 = ((unint64_t)v1052 + 23) & 0xFFFFFFFFFFFFFFF8;
          v1055 = ((unint64_t)v1053 + 23) & 0xFFFFFFFFFFFFFFF8;
          v1056 = *(_OWORD *)v1055;
          *(_BYTE *)(v1054 + 16) = *(_BYTE *)(v1055 + 16);
          *(_OWORD *)v1054 = v1056;
          v1057 = ((unint64_t)v1052 + 47) & 0xFFFFFFFFFFFFFFF8;
          v1058 = ((unint64_t)v1053 + 47) & 0xFFFFFFFFFFFFFFF8;
          v1059 = *(_OWORD *)v1058;
          v1060 = *(_OWORD *)(v1058 + 16);
          *(_QWORD *)(v1057 + 32) = *(_QWORD *)(v1058 + 32);
          *(_OWORD *)v1057 = v1059;
          *(_OWORD *)(v1057 + 16) = v1060;
          v1061 = (v1369 + v1057) & v1301;
          v1062 = (v1369 + v1058) & v1301;
          if (v1282 >= 0x7FFFFFFF)
          {
            v1067 = (const void *)((v675 + v1062) & v1297);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1067, v1275, v674) <= 1)
            {
              v1064 = v166;
              v1065 = (const void *)(v1062 + 8);
              v1066 = ~v1353;
LABEL_1191:
              *(_BYTE *)v1061 = *(_BYTE *)v1062;
              memcpy((void *)(v1061 + 8), v1065, 0x69uLL);
              v1068 = (void *)((v675 + v1061) & v1066);
              if (__swift_getEnumTagSinglePayload((uint64_t)v1067, 1, v674))
              {
                memcpy(v1068, v1067, v1343);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1271 + 32))(v1068, v1067, v674);
                __swift_storeEnumTagSinglePayload((uint64_t)v1068, 0, 1, v674);
              }
              v166 = v1064;
LABEL_1196:
              *(_OWORD *)(((v1061 | 7) + v1347) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((v1062 | 7) + v1347) & 0xFFFFFFFFFFFFF8);
              v179 = 45;
              goto LABEL_1197;
            }
          }
          else
          {
            v1063 = *(_QWORD *)(((v1369 + v1058) & v1301) + 0x10);
            if (v1063 >= 0xFFFFFFFF)
              LODWORD(v1063) = -1;
            if ((int)v1063 - 1 < 0)
            {
              v1064 = v166;
              v1065 = (const void *)(v1062 + 8);
              v1066 = ~v1353;
              v1067 = (const void *)((v675 + v1062) & v1297);
              goto LABEL_1191;
            }
          }
          memcpy((void *)v1061, (const void *)v1062, v1347);
          goto LABEL_1196;
        case 0x2E:
          *v166 = *v167;
          v179 = 46;
          goto LABEL_266;
        case 0x2F:
          *v166 = *v167;
          v179 = 47;
          goto LABEL_266;
        case 0x30:
          *v166 = *v167;
          v179 = 48;
          goto LABEL_266;
        case 0x31:
          *v166 = *v167;
          v179 = 49;
          goto LABEL_266;
        case 0x32:
          v250 = *(_OWORD *)v167;
          v251 = *((_OWORD *)v167 + 1);
          v166[4] = v167[4];
          *(_OWORD *)v166 = v250;
          *((_OWORD *)v166 + 1) = v251;
          v252 = v167;
          v253 = (void *)(((unint64_t)v166 + v1346) & v1229);
          v175 = v252;
          v254 = (const void *)(((unint64_t)v252 + v1346) & v1229);
          if (__swift_getEnumTagSinglePayload((uint64_t)v254, 1, v1311))
          {
            memcpy(v253, v254, v1373);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1290 + 32))(v253, v254, v1311);
            __swift_storeEnumTagSinglePayload((uint64_t)v253, 0, 1, v1311);
          }
          v581 = (_OWORD *)(((unint64_t)v253 + v1350) & 0xFFFFFFFFFFFFFFF8);
          v582 = (_OWORD *)(((unint64_t)v254 + v1350) & 0xFFFFFFFFFFFFFFF8);
          *v581 = *v582;
          v583 = ((unint64_t)v581 + 23) & 0xFFFFFFFFFFFFFFF8;
          v584 = ((unint64_t)v582 + 23) & 0xFFFFFFFFFFFFFFF8;
          v585 = *(_OWORD *)v584;
          v586 = *(_OWORD *)(v584 + 16);
          *(_QWORD *)(v583 + 32) = *(_QWORD *)(v584 + 32);
          *(_OWORD *)v583 = v585;
          *(_OWORD *)(v583 + 16) = v586;
          v587 = (_QWORD *)((v583 + 47) & 0xFFFFFFFFFFFFF8);
          v588 = (_QWORD *)((v584 + 47) & 0xFFFFFFFFFFFFF8);
          *v587 = *v588;
          v589 = (_OWORD *)(((unint64_t)v587 + 15) & 0xFFFFFFFFFFFFFFF8);
          v590 = (_OWORD *)(((unint64_t)v588 + 15) & 0xFFFFFFFFFFFFFFF8);
          *v589 = *v590;
          v591 = (char *)(((unint64_t)v589 + v1334) & v171);
          v592 = (char *)(((unint64_t)v590 + v1334) & v171);
          if (v1272 < 0x7FFFFFFF)
          {
            v593 = v1286;
            v594 = v1287;
            v595 = v1373;
            if (*(_QWORD *)(((unint64_t)&v592[v1350] & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
              goto LABEL_490;
          }
          else
          {
            v593 = v1286;
            v594 = v1287;
            v595 = v1373;
            if (__swift_getEnumTagSinglePayload((uint64_t)v592, v1341, v1311) >= 2)
            {
LABEL_490:
              v596 = v1339;
              memcpy(v591, v592, v1339);
              v597 = v1355 + 23;
              goto LABEL_627;
            }
          }
          if (__swift_getEnumTagSinglePayload((uint64_t)v592, 1, v1311))
          {
            memcpy(v591, v592, v595);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v1290 + 32))(v591, v592, v1311);
            __swift_storeEnumTagSinglePayload((uint64_t)v591, 0, 1, v1311);
          }
          v705 = (unint64_t)&v591[v1350] & 0xFFFFFFFFFFFFFFF8;
          v706 = (unint64_t)&v592[v1350] & 0xFFFFFFFFFFFFFFF8;
          v707 = *(_OWORD *)v706;
          v708 = *(_OWORD *)(v706 + 16);
          *(_QWORD *)(v705 + 32) = *(_QWORD *)(v706 + 32);
          *(_OWORD *)v705 = v707;
          *(_OWORD *)(v705 + 16) = v708;
          v709 = (v705 + 47) & 0xFFFFFFFFFFFFFFF8;
          v710 = (v706 + 47) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)v709 = *(_OWORD *)v710;
          *(_BYTE *)(v709 + 16) = *(_BYTE *)(v710 + 16);
          v596 = v1339;
          v597 = v1355 + 23;
          if (v1341)
            v596 = ((((v1309 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 17;
LABEL_627:
          *(_OWORD *)&v591[v596 + 7] = *(_OWORD *)&v592[v596 + 7];
          v711 = (_BYTE *)((unint64_t)&v591[v596 + v597] & v1301);
          v712 = (_QWORD *)((unint64_t)&v592[v596 + v597] & v1301);
          if (v1282 >= 0x7FFFFFFF)
          {
            v716 = ((unint64_t)v712 + v594) & v1297;
            if (__swift_getEnumTagSinglePayload(v716, v1275, v593) <= 1)
            {
              v714 = v712 + 1;
              v715 = ~v1353;
              goto LABEL_634;
            }
          }
          else
          {
            v713 = v712[2];
            if (v713 >= 0xFFFFFFFF)
              LODWORD(v713) = -1;
            if ((int)v713 - 1 < 0)
            {
              v714 = v712 + 1;
              v715 = ~v1353;
              v716 = ((unint64_t)v712 + v594) & v1297;
LABEL_634:
              *v711 = *(_BYTE *)v712;
              memcpy(v711 + 8, v714, 0x69uLL);
              v717 = (unint64_t)&v711[v594] & v715;
              if (!__swift_getEnumTagSinglePayload(v716, 1, v593))
              {
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v1271 + 32))(v717, v716, v593);
                __swift_storeEnumTagSinglePayload(v717, 0, 1, v593);
LABEL_638:
                v179 = 50;
LABEL_1163:
                v255 = v1318;
                v167 = v175;
                goto LABEL_1313;
              }
              v718 = (void *)v717;
              v719 = (const void *)v716;
              v720 = v1343;
LABEL_637:
              memcpy(v718, v719, v720);
              goto LABEL_638;
            }
          }
          v718 = v711;
          v719 = v712;
          v720 = v1347;
          goto LABEL_637;
        case 0x33:
          if (__swift_getEnumTagSinglePayload((uint64_t)v167, 1, v1311))
          {
            memcpy(v166, v167, v1373);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1290 + 32))(v166, v167, v1311);
            __swift_storeEnumTagSinglePayload((uint64_t)v166, 0, 1, v1311);
          }
          v598 = v166;
          v599 = ((unint64_t)v166 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v1363 = v167;
          v600 = ((unint64_t)v167 + v1350) & 0xFFFFFFFFFFFFFFF8;
          v601 = *(_OWORD *)v600;
          v602 = *(_OWORD *)(v600 + 16);
          *(_QWORD *)(v599 + 32) = *(_QWORD *)(v600 + 32);
          *(_OWORD *)v599 = v601;
          *(_OWORD *)(v599 + 16) = v602;
          v603 = (v599 + 47) & 0xFFFFFFFFFFFFFFF8;
          v604 = (v600 + 47) & 0xFFFFFFFFFFFFFFF8;
          v605 = *(_OWORD *)v604;
          v606 = *(_OWORD *)(v604 + 16);
          *(_QWORD *)(v603 + 32) = *(_QWORD *)(v604 + 32);
          *(_OWORD *)v603 = v605;
          *(_OWORD *)(v603 + 16) = v606;
          v607 = (_OWORD *)((v603 + 47) & 0xFFFFFFFFFFFFFFF8);
          v608 = (_OWORD *)((v604 + 47) & 0xFFFFFFFFFFFFFFF8);
          *v607 = *v608;
          v609 = (_OWORD *)(((unint64_t)v607 + 23) & 0xFFFFFFFFFFFFFFF8);
          v610 = (_OWORD *)(((unint64_t)v608 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v609 = *v610;
          v611 = (_QWORD *)(((unint64_t)v609 + 23) & 0xFFFFFFFFFFFFFFF8);
          v612 = (_QWORD *)(((unint64_t)v610 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v611 = *v612;
          v613 = (_OWORD *)(((unint64_t)v611 + v1235) & v1367);
          v614 = (_OWORD *)(((unint64_t)v612 + v1235) & v1367);
          if (v1228 > 0x7FFFFFFE)
          {
            v619 = (_OWORD *)(((unint64_t)v614 + 23) & 0xFFFFFFFFFFFFFFF8);
            v620 = ((unint64_t)v619 + 23) & 0xFFFFFFFFFFFFFFF8;
            v621 = __swift_getEnumTagSinglePayload((v1361 + v620 + 33) & v170, v1228, v1269);
            v616 = v1286;
            v617 = v1287;
            v618 = v1368;
            if (!v621)
              goto LABEL_502;
          }
          else
          {
            v615 = *(_QWORD *)((((unint64_t)v612 + v1235) & v1367) + 8);
            if (v615 >= 0xFFFFFFFF)
              LODWORD(v615) = -1;
            v616 = v1286;
            v617 = v1287;
            v618 = v1368;
            if ((v615 + 1) <= 1)
            {
              v619 = (_OWORD *)(((unint64_t)v614 + 23) & 0xFFFFFFFFFFFFFFF8);
              v620 = ((unint64_t)v619 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_502:
              *v613 = *v614;
              v622 = (_OWORD *)(((unint64_t)v613 + 23) & 0xFFFFFFFFFFFFFFF8);
              *v622 = *v619;
              v623 = ((unint64_t)v622 + 23) & 0xFFFFFFFFFFFFFFF8;
              *(_OWORD *)v623 = *(_OWORD *)v620;
              *(_BYTE *)(v623 + 16) = *(_BYTE *)(v620 + 16);
              v624 = ((unint64_t)v622 + 47) & 0xFFFFFFFFFFFFFFF8;
              v625 = ((unint64_t)v619 + 47) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)v624 = *(_QWORD *)v625;
              *(_BYTE *)(v624 + 8) = *(_BYTE *)(v625 + 8);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1332 + 32))((v1361 + 9 + v624) & v170, (v1361 + 9 + v625) & v170, v1269);
LABEL_503:
              v626 = (void *)(((unint64_t)v613 + v1239) & v1331);
              v627 = (_BYTE *)(((unint64_t)v614 + v1239) & v1331);
              v166 = v598;
              if (v1349)
              {
                v628 = v1285;
                v629 = v1348 + v1355;
                if (v1280 >= v1285)
                {
                  v630 = ((unint64_t)v614 + v1239) & v1331;
                  v628 = v1280;
                  v631 = v1283;
                }
                else
                {
                  v630 = (unint64_t)&v627[v1284] & v1299;
                  v631 = v1288;
                }
                v693 = __swift_getEnumTagSinglePayload(v630, v628, v631);
                v678 = v1219;
              }
              else
              {
                v629 = v1348 + v1355;
                v678 = v1219;
                if (!v627[v1310])
                  goto LABEL_1142;
                v679 = (v627[v1310] - 1) << v1295;
                if (v1310 > 3)
                  v679 = 0;
                if ((_DWORD)v1310)
                {
                  if (v1310 <= 3)
                    v680 = v1310;
                  else
                    v680 = 4;
                  __asm { BR              X11 }
                }
                v693 = v679 + 1;
              }
              if (v693)
              {
                memcpy(v626, v627, v1348);
                goto LABEL_1144;
              }
LABEL_1142:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1277 + 32))(v626, v627, v1283);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1278 + 32))(((unint64_t)v626 + v1284) & v1299, (unint64_t)&v627[v1284] & v1299, v1288);
              if (!v1349)
                *((_BYTE *)v626 + v1310) = 0;
LABEL_1144:
              v1030 = (_OWORD *)(((unint64_t)v626 + v1325) & 0xFFFFFFFFFFFFFFF8);
              v1031 = (_OWORD *)((unint64_t)&v627[v1325] & 0xFFFFFFFFFFFFFFF8);
              *v1030 = *v1031;
              v1032 = ((unint64_t)v1030 + 23) & 0xFFFFFFFFFFFFFFF8;
              v1033 = ((unint64_t)v1031 + 23) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)v1032 = *(_QWORD *)v1033;
              *(_BYTE *)(v1032 + 8) = *(_BYTE *)(v1033 + 8);
              v1034 = (void *)((v678 + v1032) & v1331);
              v1035 = (_BYTE *)((v678 + v1033) & v1331);
              if (v1349)
              {
                v1036 = v1285;
                if (v1280 >= v1285)
                {
                  v1037 = (v678 + v1033) & v1331;
                  v1036 = v1280;
                  v1038 = v1283;
                }
                else
                {
                  v1037 = (unint64_t)&v1035[v1284] & v1299;
                  v1038 = v1288;
                }
                v1041 = __swift_getEnumTagSinglePayload(v1037, v1036, v1038);
              }
              else
              {
                if (!v1035[v1310])
                  goto LABEL_1201;
                v1039 = (v1035[v1310] - 1) << v1295;
                if (v1310 > 3)
                  v1039 = 0;
                if ((_DWORD)v1310)
                {
                  if (v1310 <= 3)
                    v1040 = v1310;
                  else
                    v1040 = 4;
                  __asm { BR              X11 }
                }
                v1041 = v1039 + 1;
              }
              if (v1041)
              {
                memcpy(v1034, v1035, v1348);
                goto LABEL_1203;
              }
LABEL_1201:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1277 + 32))(v1034, v1035, v1283);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1278 + 32))(((unint64_t)v1034 + v1284) & v1299, (unint64_t)&v1035[v1284] & v1299, v1288);
              if (!v1349)
                *((_BYTE *)v1034 + v1310) = 0;
LABEL_1203:
              v1069 = (_OWORD *)(((unint64_t)v1034 + v1325) & 0xFFFFFFFFFFFFFFF8);
              v1070 = (_OWORD *)((unint64_t)&v1035[v1325] & 0xFFFFFFFFFFFFFFF8);
              *v1069 = *v1070;
              v1071 = (void *)(((unint64_t)v1069 + v1342) & v1331);
              v1072 = (_BYTE *)(((unint64_t)v1070 + v1342) & v1331);
              if (v1349)
              {
                v1073 = v1285;
                if (v1280 >= v1285)
                {
                  v1074 = ((unint64_t)v1070 + v1342) & v1331;
                  v1073 = v1280;
                  v1075 = v1283;
                }
                else
                {
                  v1074 = (unint64_t)&v1072[v1284] & v1299;
                  v1075 = v1288;
                }
                v1078 = __swift_getEnumTagSinglePayload(v1074, v1073, v1075);
              }
              else
              {
                if (!v1072[v1310])
                  goto LABEL_1219;
                v1076 = (v1072[v1310] - 1) << v1295;
                if (v1310 > 3)
                  v1076 = 0;
                if ((_DWORD)v1310)
                {
                  if (v1310 <= 3)
                    v1077 = v1310;
                  else
                    v1077 = 4;
                  __asm { BR              X11 }
                }
                v1078 = v1076 + 1;
              }
              if (v1078)
              {
                memcpy(v1071, v1072, v1348);
                goto LABEL_1221;
              }
LABEL_1219:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1277 + 32))(v1071, v1072, v1283);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1278 + 32))(((unint64_t)v1071 + v1284) & v1299, (unint64_t)&v1072[v1284] & v1299, v1288);
              if (!v1349)
                *((_BYTE *)v1071 + v1310) = 0;
LABEL_1221:
              v1079 = (_BYTE *)(((unint64_t)v1071 + v629) & v1301);
              v1080 = (_BYTE *)((unint64_t)&v1072[v629] & v1301);
              if (v1282 >= 0x7FFFFFFF)
              {
                v1084 = (unint64_t)&v1080[v617] & v1297;
                if (__swift_getEnumTagSinglePayload(v1084, v1275, v616) <= 1)
                {
                  v1082 = v1080 + 8;
                  v1083 = ~v1353;
                  goto LABEL_1228;
                }
              }
              else
              {
                v1081 = *(_QWORD *)(((unint64_t)&v1072[v629] & v1301) + 0x10);
                if (v1081 >= 0xFFFFFFFF)
                  LODWORD(v1081) = -1;
                if ((int)v1081 - 1 < 0)
                {
                  v1082 = v1080 + 8;
                  v1083 = ~v1353;
                  v1084 = (unint64_t)&v1080[v617] & v1297;
LABEL_1228:
                  *v1079 = *v1080;
                  memcpy(v1079 + 8, v1082, 0x69uLL);
                  v1085 = (unint64_t)&v1079[v617] & v1083;
                  if (!__swift_getEnumTagSinglePayload(v1084, 1, v616))
                  {
                    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1271 + 32))(v1085, v1084, v616);
                    __swift_storeEnumTagSinglePayload(v1085, 0, 1, v616);
                    goto LABEL_1232;
                  }
                  v1086 = (void *)v1085;
                  v1087 = (const void *)v1084;
                  v1088 = v1343;
LABEL_1231:
                  memcpy(v1086, v1087, v1088);
LABEL_1232:
                  v179 = 51;
LABEL_1312:
                  v255 = v1318;
                  v167 = v1363;
                  goto LABEL_1313;
                }
              }
              v1086 = v1079;
              v1087 = v1080;
              v1088 = v1347;
              goto LABEL_1231;
            }
          }
          memcpy(v613, v614, v618);
          goto LABEL_503;
        case 0x34:
          *v166 = *v167;
          v179 = 52;
LABEL_266:
          v255 = v1318;
          goto LABEL_1314;
        default:
          if (v1329 <= 3)
            v169 = v1329;
          else
            v169 = 4;
          __asm { BR              X12 }
          return result;
      }
    case 2:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v93 = 2;
      goto LABEL_123;
    case 3:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v93 = 3;
LABEL_123:
      *((_BYTE *)a1 + v86) = v93;
      return v88;
    default:
      memcpy(a1, a2, v86 + 1);
      return v88;
  }
}

_OWORD *sub_21CF02794(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  size_t v5;
  size_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  unsigned int v17;
  int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  int v29;
  size_t v30;
  size_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  size_t v39;
  unsigned int v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  uint64_t v47;
  size_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  size_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  size_t v57;
  unint64_t v58;
  size_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  _OWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unsigned __int8 *v100;
  unint64_t v101;
  unsigned int v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  void *v109;
  char *v110;
  uint64_t v111;
  size_t v112;
  _OWORD *v113;
  char v114;
  char *v115;
  _BYTE *v116;
  unsigned __int8 *v117;
  unsigned int v118;
  uint64_t v119;
  _OWORD *v120;
  uint64_t v121;
  __int128 *v122;
  unsigned int v123;
  __int128 v124;
  __int128 v125;
  void *v126;
  const void *v127;
  size_t v128;
  unint64_t v129;
  unint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  const void *v135;
  _QWORD *v136;
  _QWORD *v137;
  _QWORD *v138;
  _QWORD *v139;
  void *v140;
  _BYTE *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  __int128 v146;
  __int128 v147;
  _OWORD *v148;
  _OWORD *v149;
  unint64_t v150;
  unint64_t v151;
  uint64_t v152;
  unint64_t v153;
  unint64_t v154;
  uint64_t v155;
  unint64_t v156;
  unint64_t v157;
  uint64_t v158;
  _OWORD *v159;
  _OWORD *v160;
  unint64_t v161;
  unint64_t v162;
  __int128 v163;
  __int128 v164;
  _BYTE *v165;
  _BYTE *v166;
  unint64_t v167;
  const void *v168;
  uint64_t v169;
  uint64_t v170;
  const void *v171;
  void *v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int EnumTagSinglePayload;
  int v178;
  _BYTE *v179;
  unint64_t v180;
  unint64_t v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  _OWORD *v185;
  _OWORD *v186;
  uint64_t v187;
  unint64_t v188;
  uint64_t v189;
  uint64_t v190;
  const void *v191;
  unsigned int v192;
  void *v193;
  size_t v194;
  size_t v195;
  _QWORD *v196;
  _QWORD *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  _BYTE *v201;
  _BYTE *v202;
  void *v203;
  const void *v204;
  char v205;
  int v206;
  const void *v207;
  uint64_t v208;
  int v209;
  const void *v210;
  uint64_t v211;
  __int128 v212;
  __int128 v213;
  void *v214;
  const void *v215;
  size_t v216;
  unint64_t v217;
  _QWORD *v218;
  uint64_t v219;
  __int128 v220;
  __int128 v221;
  void *v222;
  _QWORD *v223;
  const void *v224;
  __int128 v225;
  __int128 v226;
  void *v227;
  const void *v228;
  __int128 v229;
  __int128 v230;
  void *v231;
  const void *v232;
  _BYTE *v233;
  _BYTE *v234;
  void *v235;
  const void *v236;
  __int128 v237;
  __int128 v238;
  char *v239;
  const void *v240;
  size_t v241;
  __int128 v242;
  __int128 v243;
  _OWORD *v244;
  _OWORD *v245;
  _OWORD *v246;
  _OWORD *v247;
  void *v248;
  const void *v249;
  unint64_t v250;
  unint64_t v251;
  __int128 v252;
  __int128 v253;
  void *v254;
  const void *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  __int128 v260;
  __int128 v261;
  void *v262;
  const void *v263;
  __int128 v264;
  __int128 v265;
  void *v266;
  const void *v267;
  __int128 v268;
  __int128 v269;
  void *v270;
  const void *v271;
  int v272;
  const void *v273;
  uint64_t v274;
  _QWORD *v275;
  uint64_t v276;
  __int128 v277;
  __int128 v278;
  void *v279;
  const void *v280;
  _QWORD *v281;
  unint64_t v282;
  unint64_t v283;
  __int128 v284;
  __int128 v285;
  _OWORD *v286;
  _OWORD *v287;
  _QWORD *v288;
  _QWORD *v289;
  _OWORD *v290;
  _OWORD *v291;
  _OWORD *v292;
  _OWORD *v293;
  unint64_t v294;
  _OWORD *v295;
  unint64_t v296;
  size_t v297;
  _OWORD *v298;
  unint64_t v299;
  unint64_t v300;
  unint64_t v301;
  unint64_t v302;
  unint64_t v303;
  _OWORD *v304;
  _OWORD *v305;
  void *v306;
  _BYTE *v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  unint64_t v311;
  unint64_t v312;
  __int128 v313;
  __int128 v314;
  _OWORD *v315;
  _OWORD *v316;
  void *v317;
  _BYTE *v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  unint64_t v322;
  unint64_t v323;
  __int128 v324;
  __int128 v325;
  _OWORD *v326;
  _OWORD *v327;
  _OWORD *v328;
  _OWORD *v329;
  unint64_t v330;
  unint64_t v331;
  unint64_t v332;
  unint64_t v333;
  __int128 v334;
  __int128 v335;
  _BYTE *v336;
  _BYTE *v337;
  unint64_t v338;
  _QWORD *v339;
  const void *v340;
  uint64_t v341;
  uint64_t v342;
  const void *v343;
  uint64_t v344;
  void *v345;
  size_t v346;
  uint64_t v347;
  unint64_t v348;
  unint64_t v349;
  __int128 v350;
  __int128 v351;
  uint64_t v352;
  void *v353;
  uint64_t v354;
  const void *v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  unint64_t v359;
  _QWORD *v360;
  unint64_t v361;
  unint64_t v362;
  __int128 v363;
  __int128 v364;
  uint64_t v365;
  unint64_t v366;
  unint64_t v367;
  unint64_t v368;
  _QWORD *v369;
  const void *v370;
  uint64_t v371;
  uint64_t v372;
  const void *v373;
  void *v374;
  size_t v375;
  unint64_t v376;
  unint64_t v377;
  __int128 v378;
  __int128 v379;
  _OWORD *v380;
  _OWORD *v381;
  void *v382;
  const void *v383;
  unint64_t v384;
  unint64_t v385;
  _OWORD *v386;
  _OWORD *v387;
  _QWORD *v388;
  unint64_t v389;
  unint64_t v390;
  __int128 v391;
  __int128 v392;
  _OWORD *v393;
  _OWORD *v394;
  unint64_t v395;
  _OWORD *v396;
  unint64_t v397;
  _OWORD *v398;
  unint64_t v399;
  unint64_t v400;
  unint64_t v401;
  unint64_t v402;
  unint64_t v403;
  _BYTE *v404;
  _BYTE *v405;
  unint64_t v406;
  const void *v407;
  uint64_t v408;
  uint64_t v409;
  const void *v410;
  void *v411;
  size_t v412;
  _OWORD *v413;
  _OWORD *v414;
  _OWORD *v415;
  _OWORD *v416;
  _OWORD *v417;
  _OWORD *v418;
  unint64_t v419;
  unint64_t v420;
  __int128 v421;
  __int128 v422;
  unint64_t v423;
  unint64_t v424;
  __int128 v425;
  __int128 v426;
  unint64_t v427;
  unint64_t v428;
  __int128 v429;
  __int128 v430;
  _OWORD *v431;
  _OWORD *v432;
  _OWORD *v433;
  _OWORD *v434;
  _OWORD *v435;
  _OWORD *v436;
  _OWORD *v437;
  _OWORD *v438;
  unint64_t v439;
  unint64_t v440;
  __int128 v441;
  __int128 v442;
  unint64_t v443;
  unint64_t v444;
  __int128 v445;
  __int128 v446;
  unint64_t v447;
  unint64_t v448;
  __int128 v449;
  __int128 v450;
  void *v451;
  _BYTE *v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  unint64_t v456;
  unint64_t v457;
  __int128 v458;
  __int128 v459;
  _OWORD *v460;
  _OWORD *v461;
  _OWORD *v462;
  _OWORD *v463;
  unint64_t v464;
  unint64_t v465;
  __int128 v466;
  __int128 v467;
  void *v468;
  const void *v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  unint64_t v473;
  unint64_t v474;
  unint64_t v475;
  __int128 v476;
  __int128 v477;
  unint64_t v478;
  unint64_t v479;
  _QWORD *v480;
  unint64_t v481;
  unint64_t v482;
  __int128 v483;
  __int128 v484;
  _OWORD *v485;
  _OWORD *v486;
  _QWORD *v487;
  _QWORD *v488;
  _OWORD *v489;
  _OWORD *v490;
  _OWORD *v491;
  _OWORD *v492;
  unint64_t v493;
  _OWORD *v494;
  unint64_t v495;
  size_t v496;
  _OWORD *v497;
  unint64_t v498;
  unint64_t v499;
  unint64_t v500;
  unint64_t v501;
  unint64_t v502;
  void *v503;
  _BYTE *v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  unint64_t v508;
  unint64_t v509;
  __int128 v510;
  __int128 v511;
  _QWORD *v512;
  _QWORD *v513;
  char *v514;
  unint64_t v515;
  unint64_t v516;
  int v517;
  int v518;
  _QWORD *v519;
  unint64_t v520;
  unint64_t v521;
  __int128 v522;
  __int128 v523;
  _BYTE *v524;
  _BYTE *v525;
  void *v526;
  const void *v527;
  _QWORD *v528;
  unint64_t v529;
  unint64_t v530;
  __int128 v531;
  __int128 v532;
  uint64_t v533;
  _BYTE *v534;
  _BYTE *v535;
  void *v536;
  const void *v537;
  unint64_t v538;
  unint64_t v539;
  __int128 v540;
  __int128 v541;
  _OWORD *v542;
  _OWORD *v543;
  unint64_t v544;
  unint64_t v545;
  __int128 v546;
  __int128 v547;
  unint64_t v548;
  unint64_t v549;
  __int128 v550;
  __int128 v551;
  _QWORD *v552;
  _QWORD *v553;
  unint64_t v554;
  unint64_t v555;
  __int128 v556;
  __int128 v557;
  _OWORD *v558;
  _OWORD *v559;
  _OWORD *v560;
  _OWORD *v561;
  unint64_t v562;
  unint64_t v563;
  __int128 v564;
  __int128 v565;
  unint64_t v566;
  unint64_t v567;
  __int128 v568;
  __int128 v569;
  unint64_t v570;
  unint64_t v571;
  __int128 v572;
  __int128 v573;
  uint64_t v574;
  size_t v575;
  unint64_t v576;
  _QWORD *v577;
  _QWORD *v578;
  _OWORD *result;
  unint64_t v580;
  _QWORD *v581;
  unint64_t v582;
  __int128 v583;
  __int128 v584;
  unint64_t v585;
  unint64_t v586;
  __int128 v587;
  __int128 v588;
  _OWORD *v589;
  _OWORD *v590;
  _OWORD *v591;
  _OWORD *v592;
  _OWORD *v593;
  _OWORD *v594;
  _OWORD *v595;
  _OWORD *v596;
  unint64_t v597;
  unint64_t v598;
  _QWORD *v599;
  _QWORD *v600;
  void *v601;
  _BYTE *v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  _OWORD *v606;
  _OWORD *v607;
  unint64_t v608;
  unint64_t v609;
  __int128 v610;
  __int128 v611;
  _QWORD *v612;
  _QWORD *v613;
  _OWORD *v614;
  _OWORD *v615;
  char *v616;
  char *v617;
  unint64_t v618;
  uint64_t v619;
  unint64_t v620;
  unint64_t v621;
  __int128 v622;
  __int128 v623;
  unint64_t v624;
  unint64_t v625;
  __int128 v626;
  __int128 v627;
  _OWORD *v628;
  _OWORD *v629;
  _OWORD *v630;
  _OWORD *v631;
  _QWORD *v632;
  _QWORD *v633;
  _OWORD *v634;
  _OWORD *v635;
  unint64_t v636;
  _OWORD *v637;
  unint64_t v638;
  uint64_t v639;
  _OWORD *v640;
  unint64_t v641;
  unint64_t v642;
  unint64_t v643;
  void *v644;
  _BYTE *v645;
  uint64_t v646;
  uint64_t v647;
  uint64_t v648;
  int v649;
  int v650;
  uint64_t v651;
  int v652;
  int v653;
  void *v654;
  _BYTE *v655;
  uint64_t v656;
  uint64_t v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  int v661;
  int v662;
  int v663;
  int v664;
  _OWORD *v665;
  _OWORD *v666;
  unint64_t v667;
  unint64_t v668;
  void *v669;
  _BYTE *v670;
  uint64_t v671;
  uint64_t v672;
  uint64_t v673;
  _OWORD *v674;
  _OWORD *v675;
  unint64_t v676;
  unint64_t v677;
  _OWORD *v678;
  _OWORD *v679;
  _OWORD *v680;
  _OWORD *v681;
  _OWORD *v682;
  _OWORD *v683;
  _OWORD *v684;
  _OWORD *v685;
  _QWORD *v686;
  _QWORD *v687;
  void *v688;
  _BYTE *v689;
  uint64_t v690;
  uint64_t v691;
  uint64_t v692;
  uint64_t v693;
  size_t v694;
  int v695;
  int v696;
  int v697;
  int v698;
  int v699;
  int v700;
  int v701;
  int v702;
  int v703;
  int v704;
  int v705;
  int v706;
  int v707;
  int v708;
  int v709;
  int v710;
  int v711;
  int v712;
  int v713;
  int v714;
  unint64_t v715;
  unint64_t v716;
  int v717;
  unsigned int v718;
  unint64_t v719;
  unint64_t v720;
  int v721;
  unsigned int v722;
  unint64_t v723;
  unint64_t v724;
  __int128 v725;
  __int128 v726;
  unint64_t v727;
  unint64_t v728;
  _BYTE *v729;
  _QWORD *v730;
  unint64_t v731;
  const void *v732;
  uint64_t v733;
  uint64_t v734;
  const void *v735;
  void *v736;
  void *v737;
  _BYTE *v738;
  uint64_t v739;
  uint64_t v740;
  uint64_t v741;
  int v742;
  int v743;
  int v744;
  _QWORD *v745;
  _QWORD *v746;
  _OWORD *v747;
  _OWORD *v748;
  unint64_t v749;
  unint64_t v750;
  __int128 v751;
  unint64_t v752;
  unint64_t v753;
  uint64_t v754;
  unint64_t v755;
  uint64_t v756;
  uint64_t v757;
  size_t v758;
  void (*v759)(uint64_t, uint64_t);
  uint64_t v760;
  unint64_t v761;
  unint64_t v762;
  uint64_t v763;
  uint64_t v764;
  uint64_t v765;
  unint64_t v766;
  unint64_t v767;
  unint64_t v768;
  uint64_t v769;
  uint64_t v770;
  unint64_t v771;
  uint64_t v772;
  unint64_t v773;
  unint64_t v774;
  unint64_t v775;
  unint64_t v776;
  uint64_t v777;
  uint64_t v778;
  unint64_t v779;
  uint64_t v780;
  uint64_t v781;
  uint64_t v782;
  uint64_t v783;
  uint64_t v784;
  unint64_t v785;
  unint64_t v786;
  unint64_t v787;
  uint64_t v788;
  unint64_t v789;
  unint64_t v790;
  uint64_t v791;
  unint64_t v792;
  uint64_t v793;
  uint64_t v794;
  uint64_t v795;
  uint64_t v796;
  uint64_t v797;
  unint64_t v798;
  uint64_t v799;
  uint64_t v800;
  unint64_t v801;
  uint64_t v802;
  unint64_t v803;
  uint64_t v804;
  unint64_t v805;
  unint64_t v806;
  unint64_t v807;
  uint64_t v808;
  unint64_t v809;
  unint64_t v810;
  unint64_t v811;
  unint64_t v812;
  unint64_t v813;
  uint64_t v814;
  uint64_t v815;
  uint64_t v816;
  uint64_t v817;
  unint64_t v818;
  uint64_t v819;
  uint64_t v820;
  uint64_t v821;
  uint64_t v822;
  uint64_t v823;
  unint64_t v824;
  unint64_t v825;
  uint64_t v826;
  unint64_t v827;
  uint64_t v828;
  unint64_t v829;
  uint64_t v830;
  uint64_t v831;
  uint64_t v832;
  uint64_t v833;
  uint64_t v834;
  uint64_t v835;
  unint64_t v836;
  unint64_t v837;
  unint64_t v838;
  uint64_t v839;
  uint64_t v840;
  unint64_t v841;
  unint64_t v842;
  unint64_t v843;
  uint64_t v844;
  uint64_t v845;
  uint64_t v846;
  uint64_t v847;
  unint64_t v848;
  unint64_t v849;
  unint64_t v850;
  unint64_t v851;
  uint64_t v852;
  size_t v853;
  unint64_t v854;
  unint64_t v855;
  int v856;
  uint64_t v857;
  unint64_t v858;
  unint64_t v859;
  unint64_t v860;
  unint64_t v861;
  uint64_t v862;
  uint64_t v863;
  unint64_t v864;
  uint64_t v865;
  uint64_t v866;
  unint64_t v867;
  unint64_t v868;
  unint64_t v869;
  uint64_t v870;
  uint64_t v871;
  uint64_t v872;
  unint64_t v873;
  unint64_t v874;
  unint64_t v875;
  uint64_t v876;
  uint64_t v877;
  unint64_t v878;
  int v879;
  id *v880;
  unint64_t v881;
  uint64_t v882;
  uint64_t v883;
  int v884;
  int v885;
  size_t v886;
  uint64_t v887;
  uint64_t v888;
  uint64_t v889;
  unint64_t v890;
  id *v891;
  unint64_t v892;
  int v893;
  id *v894;
  uint64_t v895;
  uint64_t v896;
  uint64_t v897;
  int v898;
  int v899;
  id *v900;
  unint64_t v901;
  uint64_t v902;
  uint64_t v903;
  uint64_t v904;
  int v905;
  int v906;
  uint64_t v907;
  int v908;
  int v909;
  int v910;
  int v911;
  int v912;
  int v913;
  int v914;
  int v915;
  int v916;
  int v917;
  uint64_t v918;
  int v919;
  int v920;
  int v921;
  int v922;
  int v923;
  uint64_t v924;
  int v925;
  int v926;
  int v927;
  int v928;
  int v929;
  int v930;
  int v931;
  int v932;
  int v933;
  int v934;
  unint64_t v935;
  unint64_t v936;
  int v937;
  unsigned int v938;
  unint64_t v939;
  unint64_t v940;
  int v941;
  unsigned int v942;
  uint64_t *v943;
  uint64_t v944;
  int v945;
  unint64_t v946;
  unint64_t v947;
  uint64_t v948;
  uint64_t v949;
  uint64_t v950;
  uint64_t v951;
  uint64_t v952;
  uint64_t v953;
  unint64_t v954;
  uint64_t v955;
  unint64_t v956;
  unint64_t v957;
  unsigned int v958;
  void *v959;
  unint64_t v960;
  unint64_t v961;
  __int128 v962;
  __int128 v963;
  _OWORD *v964;
  _OWORD *v965;
  _OWORD *v966;
  _OWORD *v967;
  unint64_t v968;
  unint64_t v969;
  unint64_t v970;
  unint64_t v971;
  __int128 v972;
  __int128 v973;
  _BYTE *v974;
  _BYTE *v975;
  uint64_t v976;
  unint64_t v977;
  const void *v978;
  uint64_t v979;
  uint64_t v980;
  const void *v981;
  void *v982;
  size_t v983;
  void *v984;
  _BYTE *v985;
  uint64_t v986;
  uint64_t v987;
  uint64_t v988;
  int v989;
  int v990;
  int v991;
  unsigned int v992;
  unint64_t v993;
  unint64_t v994;
  __int128 v995;
  __int128 v996;
  _OWORD *v997;
  _OWORD *v998;
  _OWORD *v999;
  _OWORD *v1000;
  unint64_t v1001;
  unint64_t v1002;
  __int128 v1003;
  __int128 v1004;
  unint64_t v1005;
  unint64_t v1006;
  __int128 v1007;
  __int128 v1008;
  _BYTE *v1009;
  _BYTE *v1010;
  unint64_t v1011;
  const void *v1012;
  uint64_t v1013;
  uint64_t v1014;
  const void *v1015;
  void *v1016;
  size_t v1017;
  void *v1018;
  _BYTE *v1019;
  uint64_t v1020;
  uint64_t v1021;
  uint64_t v1022;
  int v1023;
  int v1024;
  int v1025;
  unsigned int v1026;
  unint64_t v1027;
  unint64_t v1028;
  unint64_t v1029;
  unint64_t v1030;
  uint64_t v1031;
  uint64_t v1032;
  size_t v1033;
  uint64_t v1034;
  uint64_t v1035;
  uint64_t v1036;
  int v1037;
  int v1038;
  int v1039;
  unsigned int v1040;
  unint64_t v1041;
  unint64_t v1042;
  unint64_t v1043;
  unint64_t v1044;
  unint64_t v1045;
  uint64_t v1046;
  uint64_t v1047;
  size_t v1048;
  uint64_t v1049;
  uint64_t v1050;
  uint64_t v1051;
  int v1052;
  int v1053;
  int v1054;
  unint64_t v1055;
  unint64_t v1056;
  __int128 v1057;
  __int128 v1058;
  void *v1059;
  const void *v1060;
  _OWORD *v1061;
  _OWORD *v1062;
  _QWORD *v1063;
  uint64_t *v1064;
  uint64_t v1065;
  int v1066;
  uint64_t v1067;
  _BYTE *v1068;
  _QWORD *v1069;
  unint64_t v1070;
  const void *v1071;
  uint64_t v1072;
  uint64_t v1073;
  const void *v1074;
  void *v1075;
  size_t v1076;
  unint64_t v1077;
  void *v1078;
  unint64_t v1079;
  const void *v1080;
  unint64_t v1081;
  unint64_t v1082;
  unint64_t v1083;
  __int128 v1084;
  __int128 v1085;
  unint64_t v1086;
  unint64_t v1087;
  __int128 v1088;
  __int128 v1089;
  unint64_t v1090;
  void *v1091;
  unint64_t v1092;
  const void *v1093;
  unint64_t v1094;
  unint64_t v1095;
  unint64_t v1096;
  __int128 v1097;
  __int128 v1098;
  unint64_t v1099;
  unint64_t v1100;
  __int128 v1101;
  __int128 v1102;
  char *v1103;
  char *v1104;
  uint64_t v1105;
  uint64_t v1106;
  unint64_t v1107;
  unint64_t v1108;
  __int128 v1109;
  __int128 v1110;
  unint64_t v1111;
  unint64_t v1112;
  __int128 v1113;
  __int128 v1114;
  unint64_t v1115;
  uint64_t v1116;
  unint64_t v1117;
  unint64_t v1118;
  uint64_t v1119;
  __int128 v1120;
  _BYTE *v1121;
  _BYTE *v1122;
  unint64_t v1123;
  const void *v1124;
  uint64_t v1125;
  uint64_t v1126;
  const void *v1127;
  void *v1128;
  size_t v1129;
  void *v1130;
  _BYTE *v1131;
  uint64_t v1132;
  uint64_t v1133;
  uint64_t v1134;
  uint64_t v1135;
  int v1136;
  int v1137;
  int v1138;
  void *v1139;
  _BYTE *v1140;
  uint64_t v1141;
  uint64_t v1142;
  uint64_t v1143;
  uint64_t v1144;
  int v1145;
  int v1146;
  int v1147;
  unint64_t v1148;
  unint64_t v1149;
  __int128 v1150;
  __int128 v1151;
  unint64_t v1152;
  unint64_t v1153;
  unint64_t v1154;
  uint64_t v1155;
  uint64_t v1156;
  size_t v1157;
  uint64_t v1158;
  uint64_t v1159;
  uint64_t v1160;
  int v1161;
  int v1162;
  int v1163;
  uint64_t v1164;
  uint64_t v1165;
  uint64_t v1166;
  int v1167;
  int v1168;
  int v1169;
  uint64_t v1170;
  int v1171;
  uint64_t v1172;
  unint64_t v1173;
  unint64_t v1174;
  uint64_t v1175;
  uint64_t v1176;
  int v1177;
  int v1178;
  int v1179;
  unint64_t v1180;
  unint64_t v1181;
  uint64_t v1182;
  uint64_t v1183;
  uint64_t v1184;
  int v1185;
  int v1186;
  int v1187;
  _QWORD *v1188;
  uint64_t *v1189;
  uint64_t v1190;
  int v1191;
  _QWORD *v1192;
  uint64_t *v1193;
  uint64_t v1194;
  int v1195;
  _BYTE *v1196;
  _QWORD *v1197;
  unint64_t v1198;
  const void *v1199;
  uint64_t v1200;
  uint64_t v1201;
  const void *v1202;
  void *v1203;
  uint64_t *v1204;
  uint64_t v1205;
  int v1206;
  uint64_t *v1207;
  uint64_t v1208;
  int v1209;
  uint64_t v1210;
  uint64_t v1211;
  uint64_t v1212;
  uint64_t v1213;
  uint64_t v1214;
  uint64_t *v1215;
  uint64_t v1216;
  int v1217;
  uint64_t *v1218;
  uint64_t v1219;
  int v1220;
  unint64_t v1221;
  unint64_t v1222;
  unint64_t v1223;
  unint64_t v1224;
  uint64_t v1225;
  unint64_t v1226;
  unint64_t v1227;
  uint64_t v1228;
  uint64_t v1229;
  uint64_t v1230;
  uint64_t v1231;
  int v1232;
  int v1233;
  int v1234;
  unint64_t v1235;
  void *v1236;
  _BYTE *v1237;
  uint64_t v1238;
  uint64_t v1239;
  uint64_t v1240;
  int v1241;
  int v1242;
  int v1243;
  _QWORD *v1244;
  uint64_t *v1245;
  uint64_t v1246;
  int v1247;
  uint64_t v1248;
  _BYTE *v1249;
  _QWORD *v1250;
  unint64_t v1251;
  const void *v1252;
  uint64_t v1253;
  uint64_t v1254;
  const void *v1255;
  void *v1256;
  size_t v1257;
  unint64_t v1258;
  void *v1259;
  unint64_t v1260;
  const void *v1261;
  unint64_t v1262;
  unint64_t v1263;
  unint64_t v1264;
  __int128 v1265;
  __int128 v1266;
  unint64_t v1267;
  unint64_t v1268;
  __int128 v1269;
  __int128 v1270;
  unint64_t v1271;
  void *v1272;
  unint64_t v1273;
  const void *v1274;
  unint64_t v1275;
  unint64_t v1276;
  unint64_t v1277;
  __int128 v1278;
  __int128 v1279;
  unint64_t v1280;
  unint64_t v1281;
  __int128 v1282;
  __int128 v1283;
  char *v1284;
  char *v1285;
  uint64_t v1286;
  uint64_t v1287;
  unint64_t v1288;
  unint64_t v1289;
  __int128 v1290;
  __int128 v1291;
  unint64_t v1292;
  unint64_t v1293;
  __int128 v1294;
  __int128 v1295;
  unint64_t v1296;
  void *v1297;
  _BYTE *v1298;
  uint64_t v1299;
  uint64_t v1300;
  uint64_t v1301;
  int v1302;
  int v1303;
  int v1304;
  _OWORD *v1305;
  _OWORD *v1306;
  unint64_t v1307;
  unint64_t v1308;
  void *v1309;
  _BYTE *v1310;
  uint64_t v1311;
  uint64_t v1312;
  uint64_t v1313;
  int v1314;
  int v1315;
  int v1316;
  unint64_t v1317;
  uint64_t v1318;
  _QWORD *v1319;
  uint64_t *v1320;
  uint64_t v1321;
  int v1322;
  uint64_t v1323;
  _QWORD *v1324;
  uint64_t *v1325;
  uint64_t v1326;
  int v1327;
  _BYTE *v1328;
  _OWORD *v1329;
  _OWORD *v1330;
  unint64_t v1331;
  unint64_t v1332;
  __int128 v1333;
  unint64_t v1334;
  unint64_t v1335;
  __int128 v1336;
  __int128 v1337;
  unint64_t v1338;
  unint64_t v1339;
  unint64_t v1340;
  const void *v1341;
  uint64_t v1342;
  uint64_t v1343;
  const void *v1344;
  void *v1345;
  size_t v1346;
  _OWORD *v1347;
  _OWORD *v1348;
  void *v1349;
  _BYTE *v1350;
  uint64_t v1351;
  uint64_t v1352;
  uint64_t v1353;
  uint64_t v1354;
  int v1355;
  int v1356;
  int v1357;
  _BYTE *v1358;
  _BYTE *v1359;
  unint64_t v1360;
  const void *v1361;
  uint64_t v1362;
  uint64_t v1363;
  uint64_t v1364;
  uint64_t v1365;
  void *v1366;
  const void *v1367;
  size_t v1368;
  unint64_t v1369;
  unint64_t v1370;
  __int128 v1371;
  __int128 v1372;
  _BYTE *v1373;
  unsigned __int8 *v1374;
  unsigned int v1375;
  _OWORD *v1376;
  __int128 *v1377;
  unsigned int v1378;
  __int128 v1379;
  __int128 v1380;
  void *v1381;
  const void *v1382;
  const void *v1383;
  _QWORD *v1384;
  _QWORD *v1385;
  _QWORD *v1386;
  _QWORD *v1387;
  void *v1388;
  _BYTE *v1389;
  uint64_t v1390;
  uint64_t v1391;
  uint64_t v1392;
  __int128 v1393;
  __int128 v1394;
  _OWORD *v1395;
  _OWORD *v1396;
  unint64_t v1397;
  unint64_t v1398;
  uint64_t v1399;
  unint64_t v1400;
  unint64_t v1401;
  uint64_t v1402;
  unint64_t v1403;
  unint64_t v1404;
  uint64_t v1405;
  _OWORD *v1406;
  _OWORD *v1407;
  unint64_t v1408;
  unint64_t v1409;
  __int128 v1410;
  __int128 v1411;
  _BYTE *v1412;
  _BYTE *v1413;
  unint64_t v1414;
  uint64_t v1415;
  const void *v1416;
  const void *v1417;
  void *v1418;
  int v1419;
  int v1420;
  int v1421;
  _QWORD *v1422;
  _QWORD *v1423;
  _BYTE *v1424;
  _BYTE *v1425;
  unint64_t v1426;
  uint64_t v1427;
  const void *v1428;
  uint64_t v1429;
  uint64_t v1430;
  const void *v1431;
  void *v1432;
  unsigned __int8 *v1433;
  unint64_t v1434;
  unsigned int v1435;
  uint64_t v1436;
  unint64_t v1437;
  unint64_t v1438;
  unint64_t v1439;
  unint64_t v1440;
  uint64_t v1441;
  unint64_t v1442;
  unint64_t v1443;
  unint64_t v1444;
  uint64_t v1445;
  uint64_t v1446;
  uint64_t v1447;
  int v1448;
  int v1449;
  int v1450;
  unint64_t v1451;
  char v1452;
  _QWORD *v1453;
  _QWORD *v1454;
  _BYTE *v1455;
  unsigned __int8 *v1456;
  unsigned int v1457;
  uint64_t v1458;
  _OWORD *v1459;
  _OWORD *v1460;
  unsigned int v1461;
  __int128 v1462;
  __int128 v1463;
  void *v1464;
  const void *v1465;
  const void *v1466;
  _QWORD *v1467;
  _QWORD *v1468;
  _QWORD *v1469;
  _QWORD *v1470;
  void *v1471;
  _BYTE *v1472;
  uint64_t v1473;
  uint64_t v1474;
  uint64_t v1475;
  __int128 v1476;
  __int128 v1477;
  _OWORD *v1478;
  _OWORD *v1479;
  unint64_t v1480;
  unint64_t v1481;
  uint64_t v1482;
  unint64_t v1483;
  unint64_t v1484;
  uint64_t v1485;
  unint64_t v1486;
  unint64_t v1487;
  uint64_t v1488;
  _OWORD *v1489;
  _OWORD *v1490;
  unint64_t v1491;
  unint64_t v1492;
  __int128 v1493;
  __int128 v1494;
  _BYTE *v1495;
  _BYTE *v1496;
  unint64_t v1497;
  const void *v1498;
  const void *v1499;
  void *v1500;
  int v1501;
  int v1502;
  int v1503;
  unsigned __int8 *v1504;
  uint64_t v1505;
  unsigned int v1506;
  uint64_t v1507;
  unint64_t v1508;
  unint64_t v1509;
  unint64_t v1510;
  int v1511;
  int v1512;
  uint64_t v1513;
  size_t v1514;
  uint64_t v1515;
  uint64_t v1516;
  uint64_t v1517;
  uint64_t v1518;
  uint64_t v1519;
  unint64_t v1520;
  uint64_t v1521;
  uint64_t v1522;
  uint64_t v1523;
  size_t v1524;
  int v1525;
  uint64_t v1526;
  uint64_t v1527;
  uint64_t v1528;
  uint64_t v1529;
  uint64_t v1530;
  size_t v1531;
  size_t v1532;
  uint64_t v1533;
  uint64_t v1534;
  uint64_t v1535;
  uint64_t v1536;
  size_t v1537;
  size_t v1538;
  size_t v1539;
  uint64_t v1540;
  uint64_t v1541;
  unint64_t v1542;
  uint64_t v1543;
  size_t v1544;
  uint64_t v1545;
  uint64_t v1546;
  size_t v1547;
  unsigned int v1548;
  size_t v1549;
  uint64_t v1550;
  unint64_t v1551;
  unsigned int v1552;
  uint64_t v1553;
  uint64_t v1554;
  size_t v1555;
  uint64_t v1556;
  size_t __n;
  unsigned int v1558;
  size_t v1559;
  unsigned int v1560;
  uint64_t v1561;
  uint64_t v1562;
  uint64_t v1563;
  unsigned int v1564;
  unsigned int v1565;
  uint64_t v1566;
  uint64_t v1567;
  uint64_t v1568;
  unsigned int v1569;
  uint64_t v1570;
  unsigned int v1571;
  uint64_t v1572;
  unint64_t v1573;
  uint64_t v1574;
  unint64_t v1575;
  unint64_t v1576;
  unint64_t v1577;
  unint64_t v1578;
  unint64_t v1579;
  unint64_t v1580;
  unint64_t v1581;
  unint64_t v1582;
  unint64_t v1583;
  unint64_t v1584;
  unint64_t v1585;
  unint64_t v1586;
  unint64_t v1587;
  unint64_t v1588;
  unint64_t v1589;
  unint64_t v1590;
  unint64_t v1591;
  unint64_t v1592;
  unint64_t v1593;
  unint64_t v1594;
  unint64_t v1595;
  unint64_t v1596;
  unint64_t v1597;
  unint64_t v1598;
  unint64_t v1599;
  size_t v1600;
  unint64_t v1601;
  uint64_t v1602;
  uint64_t v1603;
  unint64_t v1604;
  uint64_t v1605;
  uint64_t v1606;
  size_t v1607;
  uint64_t v1608;
  uint64_t v1609;
  int v1610;
  uint64_t v1611;
  uint64_t v1612;
  uint64_t v1613;
  uint64_t v1614;
  uint64_t v1615;
  uint64_t v1616;
  uint64_t v1617;
  uint64_t v1618;
  uint64_t v1619;
  uint64_t v1620;
  unint64_t v1621;
  unint64_t v1622;
  unint64_t v1623;
  unint64_t v1624;
  unint64_t v1625;
  unint64_t v1626;
  unint64_t v1627;
  uint64_t v1628;
  unint64_t v1629;
  uint64_t v1630;
  unint64_t v1631;
  uint64_t v1632;
  unint64_t v1633;
  uint64_t v1634;
  unint64_t v1635;
  unint64_t v1636;
  unint64_t v1637;
  uint64_t v1638;
  unint64_t v1639;
  unint64_t v1640;
  uint64_t v1641;
  uint64_t v1642;
  size_t v1643;
  uint64_t v1644;
  unint64_t v1645;
  uint64_t v1646;
  size_t v1647;
  size_t v1648;
  size_t v1649;
  unsigned int v1650;
  size_t v1651;
  uint64_t v1652;
  uint64_t v1653;
  unsigned int v1654;
  uint64_t v1655;
  size_t v1656;
  int v1657;
  size_t v1658;
  uint64_t v1659;
  uint64_t v1660;
  size_t v1661;
  size_t v1662;
  size_t v1663;
  unint64_t v1664;
  uint64_t v1665;
  size_t v1666;
  _QWORD *v1668;
  _QWORD *v1669;
  uint64_t v1670;
  char v1671;
  uint64_t v1672;
  uint64_t v1673;
  uint64_t v1674;
  uint64_t v1675;
  unint64_t v1676;
  size_t v1677;
  unint64_t v1678;
  uint64_t v1679;
  _QWORD *v1680;
  _QWORD *v1681;
  uint64_t v1682;
  unint64_t v1683;
  uint64_t v1684;

  if (a1 == a2)
    return a1;
  v1609 = *(_QWORD *)(a3 + 16);
  v1608 = *(_QWORD *)(v1609 - 8);
  v1637 = *(_QWORD *)(v1608 + 64);
  v1613 = sub_21D7C4668();
  v3 = *(_QWORD *)(v1613 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v1644 = v4 + 16;
  v1650 = *(_DWORD *)(v3 + 84);
  v1605 = v3;
  v5 = *(_QWORD *)(v3 + 64);
  v1600 = v5;
  if (v1650)
    v6 = v5;
  else
    v6 = v5 + 1;
  v1673 = v4 | 7;
  v1572 = sub_21D7BF754();
  v7 = *(_QWORD *)(v1572 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v1674 = v8 | 7;
  v1566 = sub_21D7C3840();
  v9 = *(_QWORD *)(v1566 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v1570 = sub_21D7C3804();
  v11 = *(_QWORD *)(v1570 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = v12;
  v14 = v12 | v10;
  v15 = v4 | 7 | v8 | v14;
  v1682 = v4;
  v1653 = v4 + 40;
  v16 = *(_DWORD *)(v7 + 84);
  if (v16)
    v17 = v16 - 1;
  else
    v17 = 0;
  v1565 = v17;
  if (v17 <= 0x7FFFFFFE)
    v18 = 2147483646;
  else
    v18 = v17;
  v1657 = v18;
  v1571 = *(_DWORD *)(v11 + 84);
  v1564 = *(_DWORD *)(v9 + 84);
  if (v1571 <= v1564)
    v19 = *(_DWORD *)(v9 + 84);
  else
    v19 = *(_DWORD *)(v11 + 84);
  v1654 = v19;
  v1560 = *(_DWORD *)(v7 + 84);
  v1568 = v8 + 113;
  v20 = (v8 + 113) & ~v8;
  v1672 = v8;
  v1554 = v7;
  v1562 = v9;
  v1563 = *(_QWORD *)(v1570 - 8);
  v1567 = *(_QWORD *)(v9 + 64) + v12;
  v1660 = *(_QWORD *)(v11 + 64);
  if (v16)
    v21 = *(_QWORD *)(v7 + 64);
  else
    v21 = *(_QWORD *)(v7 + 64) + 1;
  v1648 = v21;
  v1574 = v15 + 1;
  v1676 = ((v4 + 40) & ~v4) + v6;
  v1666 = v6;
  v1683 = (v1676 + 7) & 0xFFFFFFFFFFFFFFF8;
  v1675 = v8 + 40;
  v1649 = v21 + v20;
  v22 = v21 + v20 + ((v8 + 40 + ((((v1683 + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~(v8 | 7));
  v1652 = (v1567 & ~(unint64_t)v12) + v1660;
  if (v19)
    v23 = (v1567 & ~(unint64_t)v12) + v1660;
  else
    v23 = (v1567 & ~(unint64_t)v12) + v1660 + 1;
  v1651 = v23;
  v1639 = v23 + 1;
  v24 = v23 + 1 + ((v14 + 160) & ~v14);
  if (v22 <= v24)
    v22 = v24;
  if (v22 <= 0x30)
    v22 = 48;
  v1604 = v22;
  __n = v22 + 1;
  v1663 = v22 + 1 + ((v15 + 1) & ~v15);
  v1612 = sub_21D7C3F6C();
  v25 = *(_QWORD *)(v1612 - 8);
  v26 = *(unsigned __int8 *)(v25 + 80);
  v1611 = (v26 | 7) + 58;
  v1614 = v26 | 7;
  v27 = (v1611 + ((v1663 + ((v15 + v6 + ((v4 + 16) & ~v4)) & ~v15) + 11) & 0xFFFFFFFFFFFFFFF8)) & ~(v26 | 7);
  v28 = *(_DWORD *)(v25 + 84);
  v29 = v28 - 1;
  if (!v28)
    v29 = 0;
  v1610 = v29;
  v1569 = *(_DWORD *)(v25 + 84);
  v1606 = v26 + 16;
  v1617 = *(unsigned __int8 *)(v25 + 80);
  v1561 = *(_QWORD *)(v1612 - 8);
  v30 = *(_QWORD *)(v25 + 64);
  if (!v28)
    ++v30;
  v1559 = v30;
  v31 = ((v26 + 16) & ~v26) + v30;
  v1550 = sub_21D7C4314();
  v32 = *(_QWORD *)(v1550 - 8);
  v33 = *(_DWORD *)(v32 + 80);
  v1642 = v32;
  v1541 = sub_21D7BF964();
  v34 = *(_QWORD *)(v1541 - 8);
  v35 = *(unsigned __int8 *)(v34 + 80);
  v1679 = v15 | v13 | v33 | v35;
  v1607 = v31;
  v1645 = v1679 + v31 + v27;
  v1678 = v33 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v1655 = v33;
  v1677 = *(_QWORD *)(v32 + 64) + ((v33 + 65) & ~(unint64_t)v33);
  v1662 = v6 + 7;
  v1664 = (v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v1664 + 47) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 23) & 0xFFFFFFFFFFFFFFF8;
  v1623 = v37;
  v1602 = v33 + 16;
  v1635 = (v1677 + ((v1602 + ((v37 + 15) & 0xFFFFFFFFFFFFFFF8)) & v1678)) & 0xFFFFFFFFFFFFFFF8;
  v1659 = v14 + 16;
  v1553 = v13 + 8;
  v38 = v1660 + ((v13 + 8) & ~v13);
  v39 = v1651 + (v13 | 7);
  if (v1650)
    v40 = v1650 - 1;
  else
    v40 = 0;
  v41 = v36 + 16;
  v42 = (v1664 + 47) & 0xFFFFFFFFFFFFFFF8;
  v43 = v1639 + v35 + ((v36 + 16 + v14) & ~v14);
  v1558 = v40;
  v1525 = v1657 - 1;
  if (v40 <= v1657 - 1)
    v44 = v1657 - 1;
  else
    v44 = v40;
  if (v44 <= 0x7FFFFFFF)
    v44 = 0x7FFFFFFF;
  v45 = v1654 - 1;
  if (!v1654)
    v45 = 0;
  if (v45 <= v44)
    v46 = v44;
  else
    v46 = v45;
  v1548 = v46;
  v1631 = (v1664 + 47) & 0xFFFFFFFFFFFFFFF8;
  v1656 = v42 + 17;
  v47 = v8 | 7;
  v1536 = v1674 + 23;
  v1633 = v1674
        + 23
        + v42
        + 17
        + ((v1644 + ((((((v1683 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v1673);
  v48 = v1660 + ((v13 + 8) & ~v13);
  v1643 = v48;
  v1658 = v1649 + v1673;
  v1629 = (v42 + 47) & 0xFFFFFFFFFFFFFFF8;
  v1551 = v1629 + 16;
  v49 = v1629 + 16 + v1673;
  v1641 = *(unsigned __int8 *)(v34 + 80);
  v1540 = *(_QWORD *)(v1541 - 8);
  v1535 = *(_QWORD *)(v34 + 64) + 7;
  v1661 = v1651 + (v13 | 7);
  v50 = ((v39 + ((v1649 + v14 + ((v1675 + ((v1535 + (v43 & ~v35)) & 0xFFFFFFFFFFFFFFF8)) & ~v1674)) & ~v14)) & ~(v13 | 7))
      + v48;
  v1546 = v1674 + 41;
  v51 = (v1649 + v14 + ((v47 + 41 + ((v37 + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v47)) & ~v14;
  v52 = v1651 + 7;
  v53 = ((((v1651 + 7 + v51) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 16;
  v54 = v1664 + 40;
  v55 = (v15 + v1664 + 40) & ~v15;
  v1542 = v53 + v15;
  v1544 = v1663 + 7;
  v1545 = v15 + 8;
  v1665 = v15;
  v56 = ((v15 + 8 + ((v1663 + 7 + ((v53 + v15 + v55) & ~v15)) & 0xFFFFFFFFFFFFFFF8)) & ~v15) + v1663;
  v1647 = v1649 + 7;
  v1625 = (v1649 + 7 + ((v54 + v1672) & ~v1674)) & 0xFFFFFFFFFFFFFFF8;
  v1532 = v1648 + v14;
  v57 = v1651 + v14;
  v1526 = v1651 + v14 + 1;
  v1670 = v13 | 7;
  v58 = ((v1677 + 7 + ((v54 + v33) & v1678)) & 0xFFFFFFFFFFFFFFF8) + 8;
  v1528 = v1674 + 17;
  v59 = v1649 + ((v1674 + 17 + v1683) & ~v1674);
  v1598 = v1649 + ((v1672 + 8) & ~v1674);
  if (v1598 <= v1629
              + 24
              + ((v49
                + ((v49
                  + ((v1649
                    + v1673
                    + ((v38 + v47 + ((v1661 + ((v14 + 16 + ((v1635 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v14)) & ~(v13 | 7))) & ~v47)) & ~v1673)) & ~v1673)) & ~v1673))
    v60 = v1629
        + 24
        + ((v49
          + ((v49
            + ((v1649
              + v1673
              + ((v38
                + v47
                + ((v1651 + (v13 | 7) + ((v14 + 16 + ((v1635 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v14)) & ~(v13 | 7))) & ~v47)) & ~v1673)) & ~v1673)) & ~v1673);
  else
    v60 = v1649 + ((v1672 + 8) & ~v1674);
  v1585 = v50;
  if (v60 <= v50)
    v60 = v50;
  v1599 = ((((v1651 + 7 + v51) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v60 <= v53)
    v60 = ((((v1651 + 7 + v51) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 16;
  v1584 = v56;
  if (v60 <= v56)
    v60 = v56;
  v1583 = ((((((v1625 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v60 <= v1583)
    v60 = ((((((v1625 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
  v1582 = ((v38 + v1674 + ((v39 + ((v1526 + ((v1648 + v14 + ((v41 + v1672) & ~v1672)) & ~v14)) & ~v14)) & ~(v13 | 7))) & ~v1674)
        + v1649;
  if (v60 <= v1582)
    v60 = ((v38 + v1674 + ((v39 + ((v1526 + ((v1648 + v14 + ((v41 + v1672) & ~v1672)) & ~v14)) & ~v14)) & ~(v13 | 7))) & ~v1674)
        + v1649;
  v1586 = (((((v1676 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v60 <= v1586)
    v60 = (((((v1676 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v1587 = v58;
  if (v60 <= v58)
    v60 = v58;
  v1577 = v59 + 1;
  if (v60 <= v59 + 1)
    v61 = v59 + 1;
  else
    v61 = v60;
  v1621 = v61;
  v1627 = v1645 & ~v1679;
  v62 = (((((v1683 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v63 = ((((v62 + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 41;
  v1530 = v14 + 40;
  v64 = ((v57
        + ((v14
          + 40
          + ((((((v62 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v14)) & ~v14)
      + v1651;
  v65 = (v1623 + 23) & 0xFFFFFFFFFFFFFFF8;
  v66 = v65 + 8;
  v67 = ((v65 + 47) & 0xFFFFFFFFFFFFFFF8) + 40;
  v1547 = v1649 + v14;
  v1524 = ((v1649 + v14 + ((v67 + v1674) & ~v1674)) & ~v14) + v1651;
  v1538 = v1524 + 7;
  v1543 = v1672 + 8;
  v1533 = v14 + 24;
  v1603 = v38 + v1674;
  v1601 = v1629 + 16 + v1673;
  v1581 = v1629 + 24;
  v68 = v1629
      + 24
      + ((v49
        + ((v49 + ((v1658 + ((v38 + v1674 + ((v39 + ((v14 + 24 + v1635) & ~v14)) & ~(v13 | 7))) & ~v1674)) & ~v1673)) & ~v1673)) & ~v1673);
  v69 = (v1631 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = v1682;
  v71 = ((v70 + 80) & ~v70) + v1666;
  v72 = ((v70 + 56) & ~v70) + v1666;
  v73 = ((((v1662 + ((v1653 + (v52 & 0xFFFFFFFFFFFFFFF8)) & ~v1682)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v74 = (v1625 + 23) & 0xFFFFFFFFFFFFFFF8;
  v1529 = v14 + 18;
  v75 = ((v52
        + ((v14
          + 8
          + ((((((((((v74 + 25) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v14)) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v76 = v69 + 16;
  v77 = v69 + 8;
  v78 = (((v1629 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v1556 = v14 + 8;
  v1549 = v1651 + v14;
  v1537 = v48 + v1670;
  v79 = ((v1647
        + ((v1675
          + ((((v48
              + 9
              + ((v48
                + v1670
                + ((v39
                  + ((v57 + ((v14 + 8 + ((((v78 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v14)) & ~v14)) & ~v1670)) & ~v1670)) & 0xFFFFFFFFFFFFFFF8)
            + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v1674)) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v1527 = v1655 + 8;
  v1531 = v1677 + v14;
  v1534 = v14 + 9;
  v1555 = v1651 + 7;
  v1646 = v14;
  v1539 = v1651 + v1674;
  v80 = ((v1651
        + v1674
        + ((v1659
          + ((v52
            + ((v14
              + 9
              + ((((v52 + ((v1677 + v14 + ((v1655 + 8 + v78) & v1678)) & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v14)) & 0xFFFFFFFFFFFFFFF8)) & ~v14)) & ~v1674)
      + v1649;
  v81 = v1621;
  v1576 = v64;
  if (v1621 <= v63)
    v81 = v63;
  if (v81 <= v64)
    v81 = v64;
  v1578 = ((v1672 + 8 + ((v1524 + 7 + v55) & 0xFFFFFFFFFFFFFFF8)) & ~v1674) + v1649;
  v1579 = v66;
  if (v81 <= v66)
    v81 = v66;
  if (v81 <= ((v1672 + 8 + ((v1524 + 7 + v55) & 0xFFFFFFFFFFFFFFF8)) & ~v1674) + v1649)
    v81 = ((v1672 + 8 + ((v1524 + 7 + v55) & 0xFFFFFFFFFFFFFFF8)) & ~v1674) + v1649;
  if (v81 <= v1656)
    v81 = v1656;
  v1580 = v68;
  if (v81 <= v68)
    v81 = v68;
  v1575 = v76;
  if (v81 <= v76)
    v81 = v76;
  v1588 = ((v1676 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
  if (v81 <= v1588)
    v81 = ((v1676 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
  v1589 = v71;
  if (v81 <= v71)
    v81 = v71;
  v1590 = v72;
  if (v81 <= v72)
    v81 = v72;
  v1591 = v73;
  if (v81 <= v73)
    v81 = v73;
  v1593 = ((v14 + 18 + v74) & ~v14) + v1651;
  if (v81 <= v1593)
    v81 = ((v14 + 18 + v74) & ~v14) + v1651;
  v1592 = v75;
  if (v81 <= v75)
    v81 = v75;
  v1594 = v1623 + 40;
  if (v81 <= v1623 + 40)
    v81 = v1623 + 40;
  v1595 = v77;
  if (v81 <= v77)
    v81 = v77;
  v82 = v67;
  if (v81 <= v67)
    v81 = v67;
  v1596 = v1631 + 8;
  if (v81 <= v1631 + 8)
    v81 = v1631 + 8;
  v1597 = v1683 + 8;
  if (v81 <= v1683 + 8)
    v81 = v1683 + 8;
  v1624 = ((v1683 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v81 <= v1624)
    v81 = ((v1683 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v81 <= v1676)
    v81 = v1676;
  v1622 = v79;
  if (v81 <= v79)
    v81 = v79;
  v1626 = (v1633 & ~v1674) + v1649;
  if (v81 <= v1626)
    v81 = (v1633 & ~v1674) + v1649;
  v83 = v80;
  if (v81 <= v80)
    v81 = v80;
  v84 = 8;
  if (v81 <= 8)
    v81 = 8;
  v1636 = v81;
  v85 = v81 + 8;
  v86 = ((v81 + 8 + v1627) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v86 <= v1637)
    v86 = v1637;
  if (v86 > 8)
    v84 = v86;
  v1552 = *(_DWORD *)(v1642 + 84);
  v1684 = v84;
  v1573 = v85;
  if (*((unsigned __int8 *)a1 + v84) >= 4u)
  {
    if (v84 <= 3)
      v87 = v84;
    else
      v87 = 4;
    __asm { BR              X12 }
  }
  v88 = a2;
  v89 = v13 | 7;
  v90 = v13;
  v1638 = ~v1682;
  v91 = ~v1665;
  v92 = ~v1674;
  v1628 = ~v1672;
  v93 = ~v14;
  v94 = ~v13;
  v1632 = ~v1614;
  v1630 = ~v1617;
  v1634 = ~v1679;
  v95 = ~v1655;
  v96 = ~v1670;
  v97 = ~v1673;
  v1620 = ~v1641;
  v1671 = 8 * v1652;
  switch(*((_BYTE *)a1 + v84))
  {
    case 0:
      (*(void (**)(_OWORD *, uint64_t))(v1608 + 8))(a1, v1609);
      goto LABEL_121;
    case 1:
      v1522 = ~v89;
      v1615 = ~v1646;
      v1618 = ~v90;
      swift_bridgeObjectRelease();
      v99 = ((unint64_t)a1 + v1682 + 16) & v1638;
      if (!__swift_getEnumTagSinglePayload(v99, 1, v1613))
        (*(void (**)(uint64_t, uint64_t))(v1605 + 8))(v99, v1613);
      v100 = (unsigned __int8 *)((v99 + v1666 + v1665) & v91);
      v1515 = ~v1674;
      if (*v100 > 2u)
        goto LABEL_713;
      v101 = (unint64_t)&v100[v1574] & v91;
      v102 = *(unsigned __int8 *)(v101 + v1604);
      if (v102 > 2)
        goto LABEL_713;
      if (v102 == 2)
      {
        if (*(_QWORD *)(((unint64_t)&v100[v1574] & v91) + 8) >= 0xFFFFFFFFuLL)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(((unint64_t)&v100[v1574] & v91) + 0x38))
            __swift_destroy_boxed_opaque_existential_1(v101 + 32);
        }
        v129 = (v101 + 79) & 0xFFFFFFFFFFFFFFF8;
        if (*(_QWORD *)(v129 + 8) >= 0xFFFFFFFFuLL)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(v129 + 56))
            __swift_destroy_boxed_opaque_existential_1(v129 + 32);
        }
        swift_bridgeObjectRelease();
        v130 = (((v129 + 79) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
        swift_bridgeObjectRelease();
        v131 = (v1556 + v130) & v1615;
        if (v1654)
        {
          v132 = v1571;
          if (v1564 >= v1571)
          {
            v133 = (v1556 + v130) & v1615;
            v132 = v1564;
            v134 = v1566;
          }
          else
          {
            v133 = (v1567 + v131) & v1618;
            v134 = v1570;
          }
          EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v133, v132, v134);
        }
        else
        {
          if (!*(_BYTE *)(v131 + v1652))
          {
LABEL_712:
            (*(void (**)(unint64_t, uint64_t))(v1562 + 8))(v131, v1566);
            (*(void (**)(unint64_t, uint64_t))(v1563 + 8))((v1567 + v131) & v1618, v1570);
            goto LABEL_713;
          }
          v173 = (*(unsigned __int8 *)(v131 + v1652) - 1) << v1671;
          if (v1652 > 3)
            v173 = 0;
          if ((_DWORD)v1652)
          {
            if (v1652 <= 3)
              v174 = v1652;
            else
              v174 = 4;
            __asm { BR              X11 }
          }
          EnumTagSinglePayload = v173 + 1;
        }
        if (EnumTagSinglePayload)
          goto LABEL_713;
        goto LABEL_712;
      }
      if (v102 != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_713;
      }
      __swift_destroy_boxed_opaque_existential_1((unint64_t)&v100[v1574] & v91);
      v103 = (v1653 + v101) & v1638;
      if (!__swift_getEnumTagSinglePayload(v103, 1, v1613))
        (*(void (**)(uint64_t, uint64_t))(v1605 + 8))(v103, v1613);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v104 = (((v1662 + v103) & 0xFFFFFFFFFFFFFFF8) + 71) & 0xFFFFFFFFFFFFFFF8;
      swift_bridgeObjectRelease();
      v105 = (v104 + 23) & 0xFFFFFFFFFFFFFFF8;
      if (*(_QWORD *)(v105 + 24) >= 0xFFFFFFFFuLL)
        __swift_destroy_boxed_opaque_existential_1((v104 + 23) & 0xFFFFFFFFFFFFFFF8);
      v106 = (v1675 + v105) & v1515;
      if (v1565 >= 0x7FFFFFFF)
      {
        v108 = (v1568 + v106) & v1628;
        if (__swift_getEnumTagSinglePayload(v108, v1560, v1572) > 1)
          goto LABEL_713;
        goto LABEL_173;
      }
      v107 = *(_QWORD *)(v106 + 16);
      if (v107 >= 0xFFFFFFFF)
        LODWORD(v107) = -1;
      if ((int)v107 - 1 < 0)
      {
        v108 = (v1568 + v106) & v1628;
LABEL_173:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!__swift_getEnumTagSinglePayload(v108, 1, v1572))
          (*(void (**)(uint64_t, uint64_t))(v1554 + 8))(v108, v1572);
      }
LABEL_713:
      v752 = (unint64_t)&v100[v1663 + 11] & 0xFFFFFFFFFFFFFFF8;
      if (*(_QWORD *)(v752 + 24) >= 0xFFFFFFFFuLL)
      {
        __swift_destroy_boxed_opaque_existential_1((unint64_t)&v100[v1663 + 11] & 0xFFFFFFFFFFFFFFF8);
        swift_bridgeObjectRelease();
      }
      v753 = (v1611 + v752) & v1632;
      if (v1610 < 0)
      {
        v754 = (v1606 + v753) & v1630;
        if (__swift_getEnumTagSinglePayload(v754, v1569, v1612) <= 1)
        {
LABEL_719:
          swift_bridgeObjectRelease();
          if (!__swift_getEnumTagSinglePayload(v754, 1, v1612))
            (*(void (**)(uint64_t, uint64_t))(v1561 + 8))(v754, v1612);
        }
      }
      else if (*(_QWORD *)(((v1611 + v752) & v1632) + 8) >= 0xFFFFFFFFuLL)
      {
        v754 = (v1606 + v753) & v1630;
        goto LABEL_719;
      }
      v755 = (v753 + v1607 + v1679) & v1634;
      v1514 = (v753 + v1607 + v1679) & v1634;
      switch(*(_BYTE *)(v755 + v1636))
      {
        case 0:
          if (!__swift_getEnumTagSinglePayload(v755, 1, v1613))
            (*(void (**)(unint64_t, uint64_t))(v1605 + 8))(v755, v1613);
          v761 = (v1662 + v755) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v761);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v758 = v1677;
          v762 = (v1602
                + ((((((v761 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v1678;
          if (v1552 > 0x7FFFFFFE)
          {
            v766 = (v762 + 23) & 0xFFFFFFFFFFFFFFF8;
            v763 = ~v1655;
            v879 = __swift_getEnumTagSinglePayload((v1655 + ((v766 + 23) & 0xFFFFFFFFFFFFFFF8) + 33) & v95, v1552, v1550);
            v765 = ~v1673;
            if (v879)
              goto LABEL_970;
            goto LABEL_969;
          }
          v763 = ~v1655;
          LODWORD(v764) = -1;
          if (*(_QWORD *)(((v1602
                           + ((((((v761 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v1678)
                         + 8) < 0xFFFFFFFFuLL)
            v764 = *(_QWORD *)(((v1602
                               + ((((((v761 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v1678)
                             + 8);
          v765 = ~v1673;
          if ((v764 + 1) <= 1)
          {
            v766 = (v762 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_969:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v880 = (id *)((v766 + 47) & 0xFFFFFFFFFFFFFFF8);

            (*(void (**)(unint64_t, uint64_t))(v1642 + 8))(((unint64_t)v880 + v1655 + 9) & v763, v1550);
          }
LABEL_970:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v881 = (v1659 + ((((v762 + v1677) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v1615;
          if (v1654)
            goto LABEL_1003;
          v882 = ~v1674;
          v883 = v1618;
          if (!*(_BYTE *)(v881 + v1652))
            goto LABEL_1165;
          v884 = (*(unsigned __int8 *)(v881 + v1652) - 1) << v1671;
          if (v1652 > 3)
            v884 = 0;
          if ((_DWORD)v1652)
          {
            if (v1652 <= 3)
              v885 = v1652;
            else
              v885 = 4;
            __asm { BR              X11 }
          }
          goto LABEL_1127;
        case 1:
        case 0x17:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v757 = (v1568 + ((v1674 + v755 + 8) & v1515)) & v1628;
          v758 = v1677;
          if (__swift_getEnumTagSinglePayload(v757, 1, v1572))
            goto LABEL_869;
          v759 = *(void (**)(uint64_t, uint64_t))(v1554 + 8);
          v760 = v757;
          goto LABEL_1744;
        case 2:
        case 6:
        case 7:
        case 0xB:
        case 0xE:
        case 0xF:
        case 0x12:
        case 0x19:
        case 0x1A:
        case 0x1B:
        case 0x1C:
        case 0x1F:
        case 0x2A:
        case 0x2C:
        case 0x2E:
        case 0x2F:
        case 0x30:
        case 0x31:
        case 0x34:
          goto LABEL_868;
        case 3:
          if (!__swift_getEnumTagSinglePayload(v755, 1, v1613))
            (*(void (**)(unint64_t, uint64_t))(v1605 + 8))(v755, v1613);
          v767 = (v1662 + v755) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v767);
          swift_bridgeObjectRelease();
          v768 = (v1659 + ((v767 + 47) & 0xFFFFFFFFFFFFFFF8)) & v1615;
          if (v1654)
          {
            v769 = v1571;
            v770 = v1618;
            if (v1564 >= v1571)
            {
              v771 = (v1659 + ((v767 + 47) & 0xFFFFFFFFFFFFFFF8)) & v1615;
              v769 = v1564;
              v772 = v1566;
            }
            else
            {
              v771 = (v1567 + v768) & v1618;
              v772 = v1570;
            }
            v927 = __swift_getEnumTagSinglePayload(v771, v769, v772);
            v758 = v1677;
          }
          else
          {
            v770 = v1618;
            v758 = v1677;
            if (!*(_BYTE *)(v768 + v1652))
              goto LABEL_1530;
            v905 = (*(unsigned __int8 *)(v768 + v1652) - 1) << v1671;
            if (v1652 > 3)
              v905 = 0;
            if ((_DWORD)v1652)
            {
              if (v1652 <= 3)
                v906 = v1652;
              else
                v906 = 4;
              __asm { BR              X11 }
            }
            v927 = v905 + 1;
          }
          if (v927)
            goto LABEL_1531;
LABEL_1530:
          (*(void (**)(unint64_t, uint64_t))(v1562 + 8))(v768, v1566);
          (*(void (**)(unint64_t, uint64_t))(v1563 + 8))((v1567 + v768) & v770, v1570);
LABEL_1531:
          (*(void (**)(unint64_t, uint64_t))(v1540 + 8))((v1639 + v1641 + v768) & v1620, v1541);
          v1152 = (v1535 + ((v1639 + v1641 + v768) & v1620)) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v1152 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v1152);
          v1153 = (v1675 + v1152) & v1515;
          if (v1565 >= 0x7FFFFFFF)
          {
            v1156 = (v1568 + v1153) & v1628;
            v1155 = v1618;
            if (__swift_getEnumTagSinglePayload(v1156, v1560, v1572) > 1)
              goto LABEL_1541;
            goto LABEL_1539;
          }
          v1154 = *(_QWORD *)(((v1675 + v1152) & v1515) + 0x10);
          if (v1154 >= 0xFFFFFFFF)
            LODWORD(v1154) = -1;
          v1155 = v1618;
          if ((int)v1154 - 1 < 0)
          {
            v1156 = (v1568 + v1153) & v1628;
LABEL_1539:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!__swift_getEnumTagSinglePayload(v1156, 1, v1572))
              (*(void (**)(uint64_t, uint64_t))(v1554 + 8))(v1156, v1572);
          }
LABEL_1541:
          v1157 = (v1547 + v1153) & v1615;
          if (v1654)
          {
            v1158 = v1571;
            if (v1564 >= v1571)
            {
              v1159 = (v1547 + v1153) & v1615;
              v1158 = v1564;
              v1160 = v1566;
            }
            else
            {
              v1159 = (v1567 + v1157) & v1155;
              v1160 = v1570;
            }
            v1163 = __swift_getEnumTagSinglePayload(v1159, v1158, v1160);
          }
          else
          {
            if (!*(_BYTE *)(v1157 + v1652))
              goto LABEL_1668;
            v1161 = (*(unsigned __int8 *)(v1157 + v1652) - 1) << v1671;
            if (v1652 > 3)
              v1161 = 0;
            if ((_DWORD)v1652)
            {
              if (v1652 <= 3)
                v1162 = v1652;
              else
                v1162 = 4;
              __asm { BR              X11 }
            }
            v1163 = v1161 + 1;
          }
          if (v1163)
            goto LABEL_1669;
LABEL_1668:
          (*(void (**)(size_t, uint64_t))(v1562 + 8))(v1157, v1566);
          (*(void (**)(size_t, uint64_t))(v1563 + 8))((v1567 + v1157) & v1155, v1570);
LABEL_1669:
          v1204 = (uint64_t *)((v1661 + v1157) & v1522);
          if ((v1571 & 0x80000000) != 0)
          {
            v1206 = __swift_getEnumTagSinglePayload(((unint64_t)v1204 + v1553) & v1155, v1571, v1570);
          }
          else
          {
            v1205 = *v1204;
            if ((unint64_t)*v1204 >= 0xFFFFFFFF)
              LODWORD(v1205) = -1;
            v1206 = v1205 + 1;
          }
          if (v1206)
            goto LABEL_869;
          swift_bridgeObjectRelease();
          v1172 = (uint64_t)v1204 + v1553;
          goto LABEL_1676;
        case 4:
          if (!__swift_getEnumTagSinglePayload(v755, 1, v1613))
            (*(void (**)(unint64_t, uint64_t))(v1605 + 8))(v755, v1613);
          v773 = (v1662 + v755) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v773);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v774 = (((((v773 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v774 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v774);
          v775 = (v1546 + v774) & v1515;
          if (v1565 >= 0x7FFFFFFF)
          {
            v778 = (v1568 + v775) & v1628;
            v777 = v1618;
            v758 = v1677;
            if (__swift_getEnumTagSinglePayload(v778, v1560, v1572) > 1)
              goto LABEL_982;
            goto LABEL_980;
          }
          v776 = *(_QWORD *)(((v1546 + v774) & v1515) + 0x10);
          if (v776 >= 0xFFFFFFFF)
            LODWORD(v776) = -1;
          v777 = v1618;
          v758 = v1677;
          if ((int)v776 - 1 < 0)
          {
            v778 = (v1568 + v775) & v1628;
LABEL_980:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!__swift_getEnumTagSinglePayload(v778, 1, v1572))
              (*(void (**)(uint64_t, uint64_t))(v1554 + 8))(v778, v1572);
          }
LABEL_982:
          v886 = (v1547 + v775) & v1615;
          if (v1654)
          {
            v887 = v1571;
            if (v1564 >= v1571)
            {
              v888 = (v1547 + v775) & v1615;
              v887 = v1564;
              v889 = v1566;
            }
            else
            {
              v888 = (v1567 + v886) & v777;
              v889 = v1570;
            }
            v933 = __swift_getEnumTagSinglePayload(v888, v887, v889);
          }
          else
          {
            if (!*(_BYTE *)(v886 + v1652))
              goto LABEL_1610;
            v921 = (*(unsigned __int8 *)(v886 + v1652) - 1) << v1671;
            if (v1652 > 3)
              v921 = 0;
            if ((_DWORD)v1652)
            {
              if (v1652 <= 3)
                v922 = v1652;
              else
                v922 = 4;
              __asm { BR              X11 }
            }
            v933 = v921 + 1;
          }
          if (v933)
            goto LABEL_1611;
LABEL_1610:
          (*(void (**)(size_t, uint64_t))(v1562 + 8))(v886, v1566);
          (*(void (**)(size_t, uint64_t))(v1563 + 8))((v1567 + v886) & v777, v1570);
LABEL_1611:
          if (*(_QWORD *)(((v1555 + v886) & 0xFFFFFFFFFFFFFFF8) + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1((v1555 + v886) & 0xFFFFFFFFFFFFFFF8);
          goto LABEL_1928;
        case 5:
          if (!__swift_getEnumTagSinglePayload(v755, 1, v1613))
            (*(void (**)(unint64_t, uint64_t))(v1605 + 8))(v755, v1613);
          v779 = (v1662 + v755) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v779);
          v780 = (v1665 + v779 + 40) & v91;
          v781 = ~v1665;
          if (v1558 == v1548)
          {
            v758 = v1677;
            if (v1650 < 2)
              goto LABEL_1277;
            v782 = v780;
            v783 = v1650;
            v784 = v1613;
LABEL_755:
            if (__swift_getEnumTagSinglePayload(v782, v783, v784) >= 2)
              goto LABEL_2066;
            goto LABEL_1277;
          }
          v890 = (v1662 + v780) & 0xFFFFFFFFFFFFFFF8;
          if (v1548 == 0x7FFFFFFF)
          {
            v758 = v1677;
            if (*(_QWORD *)(v890 + 24) < 0xFFFFFFFFuLL)
              goto LABEL_2066;
          }
          else
          {
            v935 = (v1674
                  + ((((((v890 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                  + 65) & v1515;
            v758 = v1677;
            if (v1525 != v1548)
            {
              if (v1654 < 2)
                goto LABEL_1277;
              v782 = (v1547 + v935) & v1615;
              v783 = v1571;
              if (v1564 >= v1571)
              {
                v783 = v1564;
                v784 = v1566;
              }
              else
              {
                v782 = (v1567 + v782) & v1618;
                v784 = v1570;
              }
              goto LABEL_755;
            }
            if (v1565 > 0x7FFFFFFE)
            {
              v1026 = __swift_getEnumTagSinglePayload((v1568 + v935) & v1628, v1560, v1572);
              if (v1026 < 2)
                goto LABEL_1277;
              v938 = v1026 - 1;
            }
            else
            {
              v936 = *(_QWORD *)(v935 + 16);
              if (v936 >= 0xFFFFFFFF)
                LODWORD(v936) = -1;
              v937 = v936 - 1;
              if (v937 < 0)
                v937 = -1;
              v938 = v937 + 1;
            }
            if (v938 >= 2)
              goto LABEL_2066;
          }
LABEL_1277:
          if (!__swift_getEnumTagSinglePayload(v780, 1, v1613))
            (*(void (**)(uint64_t, uint64_t))(v1605 + 8))(v780, v1613);
          __swift_destroy_boxed_opaque_existential_1((v1662 + v780) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          v1027 = (((((v1662 + v780) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v1028 = (v1027 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v1028 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1((v1027 + 47) & 0xFFFFFFFFFFFFFFF8);
          v1029 = (v1546 + v1028) & v1515;
          if (v1565 >= 0x7FFFFFFF)
          {
            v1032 = (v1568 + v1029) & v1628;
            v1031 = v1618;
            if (__swift_getEnumTagSinglePayload(v1032, v1560, v1572) > 1)
              goto LABEL_1289;
            goto LABEL_1287;
          }
          v1030 = *(_QWORD *)(((v1546 + v1028) & v1515) + 0x10);
          if (v1030 >= 0xFFFFFFFF)
            LODWORD(v1030) = -1;
          v1031 = v1618;
          if ((int)v1030 - 1 < 0)
          {
            v1032 = (v1568 + v1029) & v1628;
LABEL_1287:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!__swift_getEnumTagSinglePayload(v1032, 1, v1572))
              (*(void (**)(uint64_t, uint64_t))(v1554 + 8))(v1032, v1572);
          }
LABEL_1289:
          v1033 = (v1547 + v1029) & v1615;
          if (v1654)
          {
            v1034 = v1571;
            if (v1564 >= v1571)
            {
              v1035 = (v1547 + v1029) & v1615;
              v1034 = v1564;
              v1036 = v1566;
            }
            else
            {
              v1035 = (v1567 + v1033) & v1031;
              v1036 = v1570;
            }
            v1039 = __swift_getEnumTagSinglePayload(v1035, v1034, v1036);
          }
          else
          {
            if (!*(_BYTE *)(v1033 + v1652))
              goto LABEL_2062;
            v1037 = (*(unsigned __int8 *)(v1033 + v1652) - 1) << v1671;
            if (v1652 > 3)
              v1037 = 0;
            if ((_DWORD)v1652)
            {
              if (v1652 <= 3)
                v1038 = v1652;
              else
                v1038 = 4;
              __asm { BR              X11 }
            }
            v1039 = v1037 + 1;
          }
          if (v1039)
            goto LABEL_2063;
LABEL_2062:
          (*(void (**)(size_t, uint64_t))(v1562 + 8))(v1033, v1566);
          (*(void (**)(size_t, uint64_t))(v1563 + 8))((v1567 + v1033) & v1031, v1570);
LABEL_2063:
          if (*(_QWORD *)(((v1555 + v1033) & 0xFFFFFFFFFFFFFFF8) + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1((v1555 + v1033) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          v758 = v1677;
LABEL_2066:
          v1433 = (unsigned __int8 *)((v1542 + v780) & v781);
          if (*v1433 > 2u)
            goto LABEL_2164;
          v1434 = (unint64_t)&v1433[v1574] & v781;
          v1435 = *(unsigned __int8 *)(v1434 + v1604);
          if (v1435 > 2)
            goto LABEL_2164;
          if (v1435 != 2)
          {
            if (v1435 != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_2164;
            }
            __swift_destroy_boxed_opaque_existential_1((unint64_t)&v1433[v1574] & v781);
            v1436 = (v1653 + v1434) & v1638;
            if (!__swift_getEnumTagSinglePayload(v1436, 1, v1613))
              (*(void (**)(uint64_t, uint64_t))(v1605 + 8))(v1436, v1613);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v1437 = (((v1662 + v1436) & 0xFFFFFFFFFFFFFFF8) + 71) & 0xFFFFFFFFFFFFFFF8;
            swift_bridgeObjectRelease();
            v1438 = (v1437 + 23) & 0xFFFFFFFFFFFFFFF8;
            if (*(_QWORD *)(v1438 + 24) >= 0xFFFFFFFFuLL)
              __swift_destroy_boxed_opaque_existential_1((v1437 + 23) & 0xFFFFFFFFFFFFFFF8);
            v1439 = (v1675 + v1438) & v1515;
            if (v1565 >= 0x7FFFFFFF)
            {
              v1441 = (v1568 + v1439) & v1628;
              if (__swift_getEnumTagSinglePayload(v1441, v1560, v1572) > 1)
                goto LABEL_2164;
            }
            else
            {
              v1440 = *(_QWORD *)(v1439 + 16);
              if (v1440 >= 0xFFFFFFFF)
                LODWORD(v1440) = -1;
              if ((int)v1440 - 1 >= 0)
                goto LABEL_2164;
              v1441 = (v1568 + v1439) & v1628;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!__swift_getEnumTagSinglePayload(v1441, 1, v1572))
              (*(void (**)(uint64_t, uint64_t))(v1554 + 8))(v1441, v1572);
LABEL_2164:
            swift_bridgeObjectRelease();
            v1504 = (unsigned __int8 *)((v1545 + ((unint64_t)&v1433[v1544] & 0xFFFFFFFFFFFFFFF8)) & v781);
            if (*v1504 > 2u)
              goto LABEL_869;
            v1505 = (unint64_t)&v1504[v1574] & ~v1665;
            v1506 = *(unsigned __int8 *)(v1505 + v1604);
            if (v1506 > 2)
              goto LABEL_869;
            if (v1506 == 2)
            {
              if (*(_QWORD *)(v1505 + 8) >= 0xFFFFFFFFuLL)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(_QWORD *)(v1505 + 56))
                  __swift_destroy_boxed_opaque_existential_1(v1505 + 32);
              }
              v1510 = (v1505 + 79) & 0xFFFFFFFFFFFFFFF8;
              if (*(_QWORD *)(v1510 + 8) >= 0xFFFFFFFFuLL)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(_QWORD *)(v1510 + 56))
                  __swift_destroy_boxed_opaque_existential_1(v1510 + 32);
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v838 = (v1556 + ((((v1510 + 79) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v1615;
              if (v1654)
              {
LABEL_840:
                v814 = v1571;
                v839 = v1564;
                if (v1564 >= v1571)
                {
LABEL_1577:
                  v840 = v838;
                  v814 = v839;
                  v1170 = v1566;
                }
                else
                {
                  v840 = (v1567 + v838) & v1618;
LABEL_1576:
                  v1170 = v1570;
                }
                if (__swift_getEnumTagSinglePayload(v840, v814, v1170))
                  goto LABEL_869;
              }
              else if (*(_BYTE *)(v838 + v1652))
              {
                v1511 = (*(unsigned __int8 *)(v838 + v1652) - 1) << v1671;
                if (v1652 > 3)
                  v1511 = 0;
                if ((_DWORD)v1652)
                {
                  if (v1652 <= 3)
                    v1512 = v1652;
                  else
                    v1512 = 4;
                  __asm { BR              X11 }
                }
                v758 = v1677;
                if (v1511 != -1)
                  goto LABEL_869;
              }
LABEL_1589:
              (*(void (**)(unint64_t, uint64_t))(v1562 + 8))(v838, v1566);
              v1172 = v1567 + v838;
LABEL_1676:
              (*(void (**)(uint64_t, uint64_t))(v1563 + 8))(v1172 & v1618, v1570);
              goto LABEL_869;
            }
            if (v1506 == 1)
            {
              __swift_destroy_boxed_opaque_existential_1(v1505);
              v1507 = (v1653 + v1505) & v1638;
              v791 = ~v1674;
              if (!__swift_getEnumTagSinglePayload(v1507, 1, v1613))
                (*(void (**)(uint64_t, uint64_t))(v1605 + 8))(v1507, v1613);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v1508 = (((v1662 + v1507) & 0xFFFFFFFFFFFFFFF8) + 71) & 0xFFFFFFFFFFFFFFF8;
              swift_bridgeObjectRelease();
              v1509 = (v1508 + 23) & 0xFFFFFFFFFFFFFFF8;
              if (*(_QWORD *)(v1509 + 24) >= 0xFFFFFFFFuLL)
                __swift_destroy_boxed_opaque_existential_1((v1508 + 23) & 0xFFFFFFFFFFFFFFF8);
              v1210 = v1675 + v1509;
LABEL_1687:
              v803 = v1210 & v791;
LABEL_1688:
              if (v1565 >= 0x7FFFFFFF)
              {
LABEL_1689:
                v1211 = (v1568 + v803) & v1628;
                v1212 = v1211;
                v1213 = v1560;
                v1214 = v1572;
                goto LABEL_1741;
              }
LABEL_1736:
              v1235 = *(_QWORD *)(v803 + 16);
              if (v1235 >= 0xFFFFFFFF)
                LODWORD(v1235) = -1;
              if ((int)v1235 - 1 >= 0)
                goto LABEL_869;
LABEL_1739:
              v1211 = (v1568 + v803) & v1628;
              goto LABEL_1742;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_1928:
            swift_bridgeObjectRelease();
            goto LABEL_869;
          }
          if (*(_QWORD *)(((unint64_t)&v1433[v1574] & v781) + 8) >= 0xFFFFFFFFuLL)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(_QWORD *)(((unint64_t)&v1433[v1574] & v781) + 0x38))
              __swift_destroy_boxed_opaque_existential_1(v1434 + 32);
          }
          v1442 = (v1434 + 79) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v1442 + 8) >= 0xFFFFFFFFuLL)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(_QWORD *)(v1442 + 56))
              __swift_destroy_boxed_opaque_existential_1(v1442 + 32);
          }
          swift_bridgeObjectRelease();
          v1443 = (((v1442 + 79) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          v1444 = (v1556 + v1443) & v1615;
          if (v1654)
          {
            v1445 = v1571;
            if (v1564 >= v1571)
            {
              v1446 = (v1556 + v1443) & v1615;
              v1445 = v1564;
              v1447 = v1566;
            }
            else
            {
              v1446 = (v1567 + v1444) & v1618;
              v1447 = v1570;
            }
            v1450 = __swift_getEnumTagSinglePayload(v1446, v1445, v1447);
          }
          else
          {
            if (!*(_BYTE *)(v1444 + v1652))
            {
LABEL_2163:
              (*(void (**)(unint64_t, uint64_t))(v1562 + 8))(v1444, v1566);
              (*(void (**)(unint64_t, uint64_t))(v1563 + 8))((v1567 + v1444) & v1618, v1570);
              goto LABEL_2164;
            }
            v1448 = (*(unsigned __int8 *)(v1444 + v1652) - 1) << v1671;
            if (v1652 > 3)
              v1448 = 0;
            if ((_DWORD)v1652)
            {
              if (v1652 <= 3)
                v1449 = v1652;
              else
                v1449 = 4;
              __asm { BR              X11 }
            }
            v1450 = v1448 + 1;
            v758 = v1677;
          }
          if (v1450)
            goto LABEL_2164;
          goto LABEL_2163;
        case 8:
          if (!__swift_getEnumTagSinglePayload(v755, 1, v1613))
            (*(void (**)(unint64_t, uint64_t))(v1605 + 8))(v755, v1613);
          v785 = (v1662 + v755) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v785);
          v786 = (v1675 + v785) & v1515;
          if (v1565 >= 0x7FFFFFFF)
          {
            v788 = (v1568 + v786) & v1628;
            v758 = v1677;
            if (__swift_getEnumTagSinglePayload(v788, v1560, v1572) > 1)
              goto LABEL_991;
          }
          else
          {
            v787 = *(_QWORD *)(((v1675 + v785) & v1515) + 0x10);
            if (v787 >= 0xFFFFFFFF)
              LODWORD(v787) = -1;
            v758 = v1677;
            if ((int)v787 - 1 >= 0)
            {
LABEL_991:
              swift_bridgeObjectRelease();
              if (*(_QWORD *)(((((((v1647 + v786) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                             + 8) >= 0xFFFFFFFFuLL)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              goto LABEL_1928;
            }
            v788 = (v1568 + v786) & v1628;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!__swift_getEnumTagSinglePayload(v788, 1, v1572))
            (*(void (**)(uint64_t, uint64_t))(v1554 + 8))(v788, v1572);
          goto LABEL_991;
        case 9:
          if (!__swift_getEnumTagSinglePayload(v755, 1, v1613))
            (*(void (**)(unint64_t, uint64_t))(v1605 + 8))(v755, v1613);
          v789 = (v1662 + v755) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v789);
          swift_bridgeObjectRelease();
          v790 = (v1672 + ((v789 + 47) & 0xFFFFFFFFFFFFFFF8) + 16) & v1628;
          v791 = ~v1674;
          if (!__swift_getEnumTagSinglePayload(v790, 1, v1572))
            (*(void (**)(unint64_t, uint64_t))(v1554 + 8))(v790, v1572);
          v792 = (v1532 + v790) & v1615;
          if (v1654)
          {
            v793 = v1571;
            v794 = v1618;
            if (v1564 >= v1571)
            {
              v795 = v792;
              v793 = v1564;
              v796 = v1566;
            }
            else
            {
              v795 = (v1567 + v792) & v1618;
              v796 = v1570;
            }
            v928 = __swift_getEnumTagSinglePayload(v795, v793, v796);
            v907 = v1571;
          }
          else
          {
            v794 = v1618;
            v907 = v1571;
            if (!*(_BYTE *)(v792 + v1652))
              goto LABEL_1556;
            v908 = (*(unsigned __int8 *)(v792 + v1652) - 1) << v1671;
            if (v1652 > 3)
              v908 = 0;
            if ((_DWORD)v1652)
            {
              if (v1652 <= 3)
                v909 = v1652;
              else
                v909 = 4;
              __asm { BR              X11 }
            }
            v928 = v908 + 1;
          }
          if (v928)
            goto LABEL_1557;
LABEL_1556:
          (*(void (**)(unint64_t, uint64_t))(v1562 + 8))(v792, v1566);
          (*(void (**)(unint64_t, uint64_t))(v1563 + 8))((v1567 + v792) & v794, v1570);
          v907 = v1571;
LABEL_1557:
          v1164 = (v1526 + v792) & v1615;
          if (v1654)
          {
            if (v1564 >= v907)
            {
              v1165 = v1164;
              v907 = v1564;
              v1166 = v1566;
            }
            else
            {
              v1165 = (v1567 + v1164) & v794;
              v1166 = v1570;
            }
            v1169 = __swift_getEnumTagSinglePayload(v1165, v907, v1166);
            v758 = v1677;
          }
          else
          {
            v758 = v1677;
            if (!*(_BYTE *)(v1164 + v1652))
              goto LABEL_1678;
            v1167 = (*(unsigned __int8 *)(v1164 + v1652) - 1) << v1671;
            if (v1652 > 3)
              v1167 = 0;
            if ((_DWORD)v1652)
            {
              if (v1652 <= 3)
                v1168 = v1652;
              else
                v1168 = 4;
              __asm { BR              X11 }
            }
            v1169 = v1167 + 1;
          }
          if (v1169)
            goto LABEL_1679;
LABEL_1678:
          (*(void (**)(uint64_t, uint64_t))(v1562 + 8))(v1164, v1566);
          (*(void (**)(uint64_t, uint64_t))(v1563 + 8))((v1567 + v1164) & v794, v1570);
LABEL_1679:
          v1207 = (uint64_t *)((v1661 + v1164) & v1522);
          if ((v1571 & 0x80000000) != 0)
          {
            v1209 = __swift_getEnumTagSinglePayload(((unint64_t)v1207 + v1553) & v794, v1571, v1570);
          }
          else
          {
            v1208 = *v1207;
            if ((unint64_t)*v1207 >= 0xFFFFFFFF)
              LODWORD(v1208) = -1;
            v1209 = v1208 + 1;
          }
          if (!v1209)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v1563 + 8))(((unint64_t)v1207 + v1553) & v794, v1570);
          }
          v1210 = (uint64_t)v1207 + v1603;
          goto LABEL_1687;
        case 0xA:
          __swift_destroy_boxed_opaque_existential_1(v755);
          v797 = (v1653 + v755) & v1638;
          if (!__swift_getEnumTagSinglePayload(v797, 1, v1613))
            (*(void (**)(uint64_t, uint64_t))(v1605 + 8))(v797, v1613);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_868;
        case 0xC:
          if (!__swift_getEnumTagSinglePayload(v755, 1, v1613))
            (*(void (**)(unint64_t, uint64_t))(v1605 + 8))(v755, v1613);
          v798 = (v1662 + v755) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v798);
          v799 = (v1655 + v798 + 40) & v1678;
          if (v1552 > 0x7FFFFFFE)
          {
            v801 = (v799 + 23) & 0xFFFFFFFFFFFFFFF8;
            v758 = v1677;
            if (__swift_getEnumTagSinglePayload((v1655 + ((v801 + 23) & 0xFFFFFFFFFFFFFFF8) + 33) & v95, v1552, v1550))goto LABEL_1928;
          }
          else
          {
            LODWORD(v800) = -1;
            if (*(_QWORD *)(((v1655 + v798 + 40) & v1678) + 8) < 0xFFFFFFFFuLL)
              v800 = *(_QWORD *)(((v1655 + v798 + 40) & v1678) + 8);
            v758 = v1677;
            if ((v800 + 1) > 1)
              goto LABEL_1928;
            v801 = (v799 + 23) & 0xFFFFFFFFFFFFFFF8;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v891 = (id *)((v801 + 47) & 0xFFFFFFFFFFFFFFF8);

          (*(void (**)(unint64_t, uint64_t))(v1642 + 8))(((unint64_t)v891 + v1655 + 9) & v95, v1550);
          goto LABEL_1928;
        case 0xD:
          __swift_destroy_boxed_opaque_existential_1(v755);
          v802 = (v1653 + v755) & v1638;
          if (!__swift_getEnumTagSinglePayload(v802, 1, v1613))
            (*(void (**)(uint64_t, uint64_t))(v1605 + 8))(v802, v1613);
          swift_bridgeObjectRelease();
          v803 = (v1528 + ((v1662 + v802) & 0xFFFFFFFFFFFFFFF8)) & v1515;
          v758 = v1677;
          if (v1565 < 0x7FFFFFFF)
            goto LABEL_1736;
          goto LABEL_1689;
        case 0x10:
          __swift_destroy_boxed_opaque_existential_1(v755);
          v804 = (v1653 + v755) & v1638;
          if (!__swift_getEnumTagSinglePayload(v804, 1, v1613))
            (*(void (**)(uint64_t, uint64_t))(v1605 + 8))(v804, v1613);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v805 = (((((v1662 + v804) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          v806 = (v805 + 23) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v806 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1((v805 + 23) & 0xFFFFFFFFFFFFFFF8);
          v807 = v806 + 47;
          goto LABEL_859;
        case 0x11:
          __swift_destroy_boxed_opaque_existential_1(v755);
          v808 = (v1653 + v755) & v1638;
          if (!__swift_getEnumTagSinglePayload(v808, 1, v1613))
            (*(void (**)(uint64_t, uint64_t))(v1605 + 8))(v808, v1613);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v809 = (((((((v1662 + v808) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          v810 = (v809 + 23) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v810 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1((v809 + 23) & 0xFFFFFFFFFFFFFFF8);
          v811 = (v810 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v811 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v811);
          v812 = (v811 + 47) & 0xFFFFFFFFFFFFFFF8;
          v758 = v1677;
          if (*(_QWORD *)(v812 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v812);
          v813 = (v1530 + v812) & v1615;
          v814 = v1571;
          if (v1654)
          {
            v815 = v1618;
            if (v1564 >= v1571)
            {
              v816 = (v1530 + v812) & v1615;
              v814 = v1564;
              v817 = v1566;
            }
            else
            {
              v816 = (v1567 + v813) & v1618;
              v817 = v1570;
            }
            v929 = __swift_getEnumTagSinglePayload(v816, v814, v817);
            v814 = v1571;
          }
          else
          {
            v815 = v1618;
            if (!*(_BYTE *)(v813 + v1652))
              goto LABEL_1572;
            v910 = (*(unsigned __int8 *)(v813 + v1652) - 1) << v1671;
            if (v1652 > 3)
              v910 = 0;
            if ((_DWORD)v1652)
            {
              if (v1652 <= 3)
                v911 = v1652;
              else
                v911 = 4;
              __asm { BR              X11 }
            }
            v929 = v910 + 1;
          }
          if (v929)
            goto LABEL_1573;
LABEL_1572:
          (*(void (**)(unint64_t, uint64_t))(v1562 + 8))(v813, v1566);
          (*(void (**)(unint64_t, uint64_t))(v1563 + 8))((v1567 + v813) & v815, v1570);
          v814 = v1571;
LABEL_1573:
          v838 = (v1549 + v813) & v1615;
          if (v1654)
          {
            v839 = v1564;
            if (v1564 >= v814)
              goto LABEL_1577;
            v840 = (v1567 + v838) & v815;
            goto LABEL_1576;
          }
          if (*(_BYTE *)(v838 + v1652))
          {
            v914 = (*(unsigned __int8 *)(v838 + v1652) - 1) << v1671;
            if (v1652 > 3)
              v914 = 0;
            if ((_DWORD)v1652)
            {
              if (v1652 <= 3)
                v1171 = v1652;
              else
                v1171 = 4;
              __asm { BR              X11 }
            }
LABEL_1588:
            if (v914 != -1)
              goto LABEL_869;
          }
          goto LABEL_1589;
        case 0x13:
          if (!__swift_getEnumTagSinglePayload(v755, 1, v1613))
            (*(void (**)(unint64_t, uint64_t))(v1605 + 8))(v755, v1613);
          __swift_destroy_boxed_opaque_existential_1((v1662 + v755) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_868;
        case 0x14:
          if (!__swift_getEnumTagSinglePayload(v755, 1, v1613))
            (*(void (**)(unint64_t, uint64_t))(v1605 + 8))(v755, v1613);
          v818 = (v1662 + v755) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v818);
          v819 = (v1665 + v818 + 40) & v91;
          v820 = ~v1674;
          if (v1558 == v1548)
          {
            if (v1650 < 2)
              goto LABEL_1305;
            v821 = (v1665 + v818 + 40) & v91;
            v822 = v1650;
            v823 = v1613;
LABEL_809:
            if (__swift_getEnumTagSinglePayload(v821, v822, v823) >= 2)
              goto LABEL_2104;
            goto LABEL_1305;
          }
          v892 = (v1662 + v819) & 0xFFFFFFFFFFFFFFF8;
          if (v1548 == 0x7FFFFFFF)
          {
            if (*(_QWORD *)(v892 + 24) < 0xFFFFFFFFuLL)
              goto LABEL_2104;
          }
          else
          {
            v939 = (v1675
                  + ((((((((v892 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                    + 47) & 0xFFFFFFFFFFFFFFF8)) & v1515;
            if (v1525 != v1548)
            {
              if (v1654 < 2)
                goto LABEL_1305;
              v821 = (v1547 + v939) & v1615;
              v822 = v1564;
              if (v1564 >= v1571)
              {
                v823 = v1566;
              }
              else
              {
                v821 = (v1567 + v821) & v1618;
                v822 = v1571;
                v823 = v1570;
              }
              goto LABEL_809;
            }
            if (v1565 > 0x7FFFFFFE)
            {
              v1040 = __swift_getEnumTagSinglePayload((v1568 + v939) & v1628, v1560, v1572);
              if (v1040 < 2)
                goto LABEL_1305;
              v942 = v1040 - 1;
            }
            else
            {
              v940 = *(_QWORD *)(v939 + 16);
              if (v940 >= 0xFFFFFFFF)
                LODWORD(v940) = -1;
              v941 = v940 - 1;
              if (v941 < 0)
                v941 = -1;
              v942 = v941 + 1;
            }
            if (v942 >= 2)
              goto LABEL_2104;
          }
LABEL_1305:
          if (!__swift_getEnumTagSinglePayload(v819, 1, v1613))
            (*(void (**)(uint64_t, uint64_t))(v1605 + 8))(v819, v1613);
          __swift_destroy_boxed_opaque_existential_1((v1662 + v819) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          v1041 = (((((v1662 + v819) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          v1042 = (v1041 + 23) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v1042 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1((v1041 + 23) & 0xFFFFFFFFFFFFFFF8);
          v1043 = (v1042 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v1043 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v1043);
          v1044 = (v1675 + v1043) & v1515;
          if (v1565 >= 0x7FFFFFFF)
          {
            v1047 = (v1568 + v1044) & v1628;
            v1046 = v1618;
            if (__swift_getEnumTagSinglePayload(v1047, v1560, v1572) > 1)
              goto LABEL_1319;
            goto LABEL_1317;
          }
          v1045 = *(_QWORD *)(((v1675 + v1043) & v1515) + 0x10);
          if (v1045 >= 0xFFFFFFFF)
            LODWORD(v1045) = -1;
          v1046 = v1618;
          if ((int)v1045 - 1 < 0)
          {
            v1047 = (v1568 + v1044) & v1628;
LABEL_1317:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v820 = ~v1674;
            if (!__swift_getEnumTagSinglePayload(v1047, 1, v1572))
              (*(void (**)(uint64_t, uint64_t))(v1554 + 8))(v1047, v1572);
          }
LABEL_1319:
          v1048 = (v1547 + v1044) & v1615;
          if (v1654)
          {
            v1049 = v1571;
            if (v1564 >= v1571)
            {
              v1050 = (v1547 + v1044) & v1615;
              v1049 = v1564;
              v1051 = v1566;
            }
            else
            {
              v1050 = (v1567 + v1048) & v1046;
              v1051 = v1570;
            }
            v1054 = __swift_getEnumTagSinglePayload(v1050, v1049, v1051);
          }
          else
          {
            if (!*(_BYTE *)(v1048 + v1652))
              goto LABEL_2103;
            v1052 = (*(unsigned __int8 *)(v1048 + v1652) - 1) << v1671;
            if (v1652 > 3)
              v1052 = 0;
            if ((_DWORD)v1652)
            {
              if (v1652 <= 3)
                v1053 = v1652;
              else
                v1053 = 4;
              __asm { BR              X11 }
            }
            v1054 = v1052 + 1;
          }
          if (v1054)
            goto LABEL_2104;
LABEL_2103:
          (*(void (**)(size_t, uint64_t))(v1562 + 8))(v1048, v1566);
          (*(void (**)(size_t, uint64_t))(v1563 + 8))((v1567 + v1048) & v1046, v1570);
LABEL_2104:
          swift_bridgeObjectRelease();
          v803 = (v1543 + ((v1538 + v819) & 0xFFFFFFFFFFFFFFF8)) & v820;
          if (v1565 < 0x7FFFFFFF)
          {
            v1451 = *(_QWORD *)(v803 + 16);
            if (v1451 >= 0xFFFFFFFF)
              LODWORD(v1451) = -1;
            v758 = v1677;
            if ((int)v1451 - 1 >= 0)
              goto LABEL_869;
            goto LABEL_1739;
          }
          v1211 = (v1568 + v803) & v1628;
          v758 = v1677;
          if (__swift_getEnumTagSinglePayload(v1211, v1560, v1572) <= 1)
          {
LABEL_1742:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!__swift_getEnumTagSinglePayload(v1211, 1, v1572))
            {
              v759 = *(void (**)(uint64_t, uint64_t))(v1554 + 8);
              v760 = v1211;
LABEL_1744:
              v759(v760, v1572);
            }
          }
LABEL_869:
          v853 = v1666;
LABEL_870:
          v93 = ~v1646;
          v97 = ~v1673;
          v96 = ~v89;
          v92 = ~v1674;
          v854 = v1581
               + ((v1601
                 + ((v1601
                   + ((v1658
                     + ((v1603
                       + ((v1661
                         + ((v1659
                           + ((((((v1602
                                 + ((((((((v853 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                   + 15) & 0xFFFFFFFFFFFFFFF8)) & v1678)
                               + v758) & 0xFFFFFFFFFFFFFFF8)
                             + 23) & 0xFFFFFFFFFFFFFFF8)) & v1615)) & v1522)) & v1515)) & ~v1673)) & ~v1673)) & ~v1673);
          if (v1598 > v854)
            v854 = v1649 + ((v1672 + 8) & ~v1674);
          if (v854 <= v1585)
            v854 = v1585;
          if (v854 <= v1599)
            v854 = v1599;
          if (v854 <= v1584)
            v854 = v1584;
          if (v854 <= v1583)
            v854 = v1583;
          if (v854 <= v1582)
            v854 = v1582;
          if (v854 <= v1586)
            v854 = (((((v1676 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
          if (v854 <= v1587)
            v854 = v1587;
          if (v854 <= v1577)
            v854 = v1577;
          if (v854 <= v63)
            v854 = v63;
          if (v854 <= v1576)
            v854 = v1576;
          if (v854 <= v1579)
            v854 = v1579;
          if (v854 <= v1578)
            v854 = v1578;
          if (v854 <= v1656)
            v854 = v1656;
          if (v854 <= v1580)
            v854 = v1580;
          if (v854 <= v1598)
            v854 = v1649 + ((v1672 + 8) & ~v1674);
          if (v854 <= v1575)
            v854 = v1575;
          if (v854 <= v1588)
            v854 = ((v1676 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
          if (v854 <= v1589)
            v854 = v1589;
          if (v854 <= v1590)
            v854 = v1590;
          if (v854 <= v1591)
            v854 = v1591;
          if (v854 <= v1593)
            v854 = v1593;
          if (v854 <= v1592)
            v854 = v1592;
          if (v854 <= v1594)
            v854 = v1594;
          if (v854 <= v1595)
            v854 = v1595;
          if (v854 <= v82)
            v854 = v82;
          if (v854 <= v1596)
            v854 = v1596;
          if (v854 <= v1597)
            v854 = v1597;
          if (v854 <= v1624)
            v854 = v1624;
          if (v854 <= v1676)
            v854 = v1676;
          if (v854 <= v1622)
            v854 = v1622;
          if (v854 <= v1626)
            v854 = v1626;
          if (v854 <= v83)
            v854 = v83;
          if (v854 <= 8)
            v854 = 8;
          v91 = ~v1665;
          v855 = *(_QWORD *)((v1514 + v854 + 8) & 0xFFFFFFFFFFFFF8);
          v856 = -1;
          if (v855 < 0xFFFFFFFF)
            v856 = v855;
          v94 = v1618;
          v88 = a2;
          if (v856 - 1 < 0)
          {
LABEL_119:
            swift_bridgeObjectRelease();
LABEL_121:
            v88 = a2;
          }
LABEL_122:
          if (*((unsigned __int8 *)v88 + v1684) >= 4u)
          {
            if (v1684 <= 3)
              v98 = v1684;
            else
              v98 = 4;
            __asm { BR              X12 }
          }
          switch(*((_BYTE *)v88 + v1684))
          {
            case 0:
              (*(void (**)(_OWORD *))(v1608 + 32))(a1);
              *((_BYTE *)a1 + v1684) = 0;
              return a1;
            case 1:
              v1513 = v95;
              v1640 = v83;
              v1523 = v96;
              v1616 = v93;
              v1619 = v94;
              *a1 = *v88;
              v109 = (void *)(((unint64_t)a1 + v1682 + 16) & v1638);
              v110 = (char *)(((unint64_t)v88 + v1682 + 16) & v1638);
              v111 = v1613;
              if (__swift_getEnumTagSinglePayload((uint64_t)v110, 1, v1613))
              {
                v112 = v1666;
                memcpy(v109, v110, v1666);
              }
              else
              {
                (*(void (**)(void *, char *, uint64_t))(v1605 + 32))(v109, v110, v1613);
                __swift_storeEnumTagSinglePayload((uint64_t)v109, 0, 1, v1613);
                v112 = v1666;
              }
              v115 = &v110[v112];
              v116 = (_BYTE *)(((unint64_t)v109 + v112 + v1665) & v91);
              v117 = (unsigned __int8 *)((unint64_t)&v115[v1665] & v91);
              v118 = *v117;
              v1520 = v82;
              v1521 = v97;
              if (v118 > 2)
              {
                v128 = v1663;
                memcpy(v116, (const void *)((unint64_t)&v115[v1665] & v91), v1663);
                goto LABEL_211;
              }
              *v116 = v118;
              v119 = v91;
              v120 = (_OWORD *)((unint64_t)&v116[v1574] & v91);
              v121 = v119;
              v122 = (__int128 *)((unint64_t)&v117[v1574] & v119);
              v123 = *((unsigned __int8 *)v122 + v1604);
              if (v123 > 2)
              {
                memcpy(v120, (const void *)((unint64_t)&v117[v1574] & v119), __n);
                goto LABEL_209;
              }
              if (v123 != 2)
              {
                if (v123 == 1)
                {
                  v124 = *v122;
                  v125 = *(_OWORD *)(((unint64_t)&v117[v1574] & v119) + 0x10);
                  *((_QWORD *)v120 + 4) = *(_QWORD *)(((unint64_t)&v117[v1574] & v119) + 0x20);
                  *v120 = v124;
                  v120[1] = v125;
                  v126 = (void *)(((unint64_t)v120 + v1653) & v1638);
                  v127 = (const void *)(((unint64_t)v122 + v1653) & v1638);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v127, 1, v1613))
                  {
                    memcpy(v126, v127, v1666);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1605 + 32))(v126, v127, v1613);
                    __swift_storeEnumTagSinglePayload((uint64_t)v126, 0, 1, v1613);
                  }
                  v148 = (_OWORD *)(((unint64_t)v126 + v1662) & 0xFFFFFFFFFFFFFFF8);
                  v149 = (_OWORD *)(((unint64_t)v127 + v1662) & 0xFFFFFFFFFFFFFFF8);
                  *v148 = *v149;
                  v150 = ((unint64_t)v148 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v151 = ((unint64_t)v149 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v152 = *(_QWORD *)v151;
                  *(_BYTE *)(v150 + 8) = *(_BYTE *)(v151 + 8);
                  *(_QWORD *)v150 = v152;
                  v153 = ((unint64_t)v148 + 39) & 0xFFFFFFFFFFFFFFF8;
                  v154 = ((unint64_t)v149 + 39) & 0xFFFFFFFFFFFFFFF8;
                  v155 = *(_QWORD *)v154;
                  *(_BYTE *)(v153 + 8) = *(_BYTE *)(v154 + 8);
                  *(_QWORD *)v153 = v155;
                  v156 = ((unint64_t)v148 + 55) & 0xFFFFFFFFFFFFFFF8;
                  v157 = ((unint64_t)v149 + 55) & 0xFFFFFFFFFFFFFFF8;
                  v158 = *(_QWORD *)v157;
                  *(_BYTE *)(v156 + 8) = *(_BYTE *)(v157 + 8);
                  *(_QWORD *)v156 = v158;
                  v159 = (_OWORD *)(((unint64_t)v148 + 71) & 0xFFFFFFFFFFFFFFF8);
                  v160 = (_OWORD *)(((unint64_t)v149 + 71) & 0xFFFFFFFFFFFFFFF8);
                  *v159 = *v160;
                  v161 = ((unint64_t)v159 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v162 = ((unint64_t)v160 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v163 = *(_OWORD *)v162;
                  v164 = *(_OWORD *)(v162 + 16);
                  *(_QWORD *)(v161 + 32) = *(_QWORD *)(v162 + 32);
                  *(_OWORD *)v161 = v163;
                  *(_OWORD *)(v161 + 16) = v164;
                  v165 = (_BYTE *)((v1675 + v161) & v92);
                  v166 = (_BYTE *)((v1675 + v162) & v92);
                  if (v1565 >= 0x7FFFFFFF)
                  {
                    v171 = (const void *)((unint64_t)&v166[v1568] & v1628);
                    if (__swift_getEnumTagSinglePayload((uint64_t)v171, v1560, v1572) <= 1)
                    {
                      v1516 = v92;
                      v168 = v166 + 8;
                      v169 = v1568;
                      v170 = ~v1672;
                      goto LABEL_183;
                    }
                  }
                  else
                  {
                    v167 = *(_QWORD *)(((v1675 + v162) & v92) + 0x10);
                    if (v167 >= 0xFFFFFFFF)
                      LODWORD(v167) = -1;
                    if ((int)v167 - 1 < 0)
                    {
                      v1516 = v92;
                      v168 = v166 + 8;
                      v169 = v1568;
                      v170 = ~v1672;
                      v171 = (const void *)((unint64_t)&v166[v1568] & v1628);
LABEL_183:
                      *v165 = *v166;
                      memcpy(v165 + 8, v168, 0x69uLL);
                      v172 = (void *)((unint64_t)&v165[v169] & v170);
                      if (__swift_getEnumTagSinglePayload((uint64_t)v171, 1, v1572))
                      {
                        memcpy(v172, v171, v1648);
                      }
                      else
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v1554 + 32))(v172, v171, v1572);
                        __swift_storeEnumTagSinglePayload((uint64_t)v172, 0, 1, v1572);
                      }
                      v92 = v1516;
                      goto LABEL_208;
                    }
                  }
                  memcpy(v165, v166, v1649);
LABEL_208:
                  *((_BYTE *)v120 + v1604) = 1;
                  goto LABEL_209;
                }
                v146 = *v122;
                v147 = *(_OWORD *)(((unint64_t)&v117[v1574] & v119) + 0x20);
                v120[1] = *(_OWORD *)(((unint64_t)&v117[v1574] & v119) + 0x10);
                v120[2] = v147;
                *v120 = v146;
                *((_BYTE *)v120 + v1604) = 0;
LABEL_209:
                v111 = v1613;
                v128 = v1663;
                goto LABEL_210;
              }
              memcpy(v120, (const void *)((unint64_t)&v117[v1574] & v119), 0x48uLL);
              v135 = (const void *)(((unint64_t)v122 + 79) & 0xFFFFFFFFFFFFFFF8);
              memcpy((void *)(((unint64_t)v120 + 79) & 0xFFFFFFFFFFFFFFF8), v135, 0x48uLL);
              v136 = (_QWORD *)(((((unint64_t)v120 + 79) & 0xFFFFFFFFFFFFFFF8) + 79) & 0xFFFFFFFFFFFFF8);
              v137 = (_QWORD *)(((unint64_t)v135 + 79) & 0xFFFFFFFFFFFFF8);
              *v136 = *v137;
              v138 = (_QWORD *)(((unint64_t)v136 + 15) & 0xFFFFFFFFFFFFFFF8);
              v139 = (_QWORD *)(((unint64_t)v137 + 15) & 0xFFFFFFFFFFFFFFF8);
              *v138 = *v139;
              v140 = (void *)(((unint64_t)v138 + v1556) & v1616);
              v141 = (_BYTE *)(((unint64_t)v139 + v1556) & v1616);
              if (v1654)
              {
                v142 = v1571;
                v143 = v1619;
                if (v1564 >= v1571)
                {
                  v144 = ((unint64_t)v139 + v1556) & v1616;
                  v142 = v1564;
                  v145 = v1566;
                }
                else
                {
                  v144 = (unint64_t)&v141[v1567] & v1619;
                  v145 = v1570;
                }
                v178 = __swift_getEnumTagSinglePayload(v144, v142, v145);
              }
              else
              {
                v143 = v1619;
                if (!v141[v1652])
                  goto LABEL_1130;
                v175 = (v141[v1652] - 1) << v1671;
                if (v1652 > 3)
                  v175 = 0;
                if ((_DWORD)v1652)
                {
                  if (v1652 <= 3)
                    v176 = v1652;
                  else
                    v176 = 4;
                  __asm { BR              X11 }
                }
                v178 = v175 + 1;
              }
              if (v178)
              {
                memcpy(v140, v141, v1651);
                v128 = v1663;
                goto LABEL_1132;
              }
LABEL_1130:
              (*(void (**)(void *, _BYTE *, uint64_t))(v1562 + 32))(v140, v141, v1566);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1563 + 32))(((unint64_t)v140 + v1567) & v143, (unint64_t)&v141[v1567] & v143, v1570);
              v128 = v1663;
              if (!v1654)
                *((_BYTE *)v140 + v1652) = 0;
LABEL_1132:
              *((_BYTE *)v140 + v1651) = v141[v1651];
              *((_BYTE *)v120 + v1604) = 2;
              v111 = v1613;
LABEL_210:
              v91 = v121;
LABEL_211:
              v179 = &v116[v128];
              *(_WORD *)v179 = *(_WORD *)&v117[v128];
              v179[2] = v117[v128 + 2];
              v179[3] = v117[v128 + 3];
              v180 = (unint64_t)&v116[v128 + 11] & 0xFFFFFFFFFFFFFFF8;
              v181 = (unint64_t)&v117[v128 + 11] & 0xFFFFFFFFFFFFFFF8;
              v182 = *(_OWORD *)v181;
              v183 = *(_OWORD *)(v181 + 16);
              v184 = *(_OWORD *)(v181 + 32);
              *(_OWORD *)(v180 + 41) = *(_OWORD *)(v181 + 41);
              *(_OWORD *)(v180 + 16) = v183;
              *(_OWORD *)(v180 + 32) = v184;
              *(_OWORD *)v180 = v182;
              *(_BYTE *)(v180 + 57) = *(_BYTE *)(v181 + 57);
              v185 = (_OWORD *)((v1611 + v180) & v1632);
              v186 = (_OWORD *)((v1611 + v181) & v1632);
              if ((v1610 & 0x80000000) == 0)
              {
                v187 = v91;
                v188 = *(_QWORD *)(((v1611 + v181) & v1632) + 8);
                v189 = v1606;
                v190 = v1630;
                if (v188 >= 0xFFFFFFFF)
                {
                  v191 = (const void *)(((unint64_t)v186 + v1606) & v1630);
                  goto LABEL_215;
                }
LABEL_217:
                v194 = v1607;
                memcpy(v185, v186, v1607);
                goto LABEL_220;
              }
              v187 = v91;
              v189 = v1606;
              v191 = (const void *)(((unint64_t)v186 + v1606) & v1630);
              v192 = __swift_getEnumTagSinglePayload((uint64_t)v191, v1569, v1612);
              v190 = v1630;
              if (v192 >= 2)
                goto LABEL_217;
LABEL_215:
              *v185 = *v186;
              v193 = (void *)(((unint64_t)v185 + v189) & v190);
              if (__swift_getEnumTagSinglePayload((uint64_t)v191, 1, v1612))
              {
                memcpy(v193, v191, v1559);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1561 + 32))(v193, v191, v1612);
                __swift_storeEnumTagSinglePayload((uint64_t)v193, 0, 1, v1612);
              }
              v194 = v1607;
LABEL_220:
              v195 = v1600 + 1;
              v196 = (_QWORD *)(((unint64_t)v185 + v1679 + v194) & v1634);
              v197 = (_QWORD *)(((unint64_t)v186 + v1679 + v194) & v1634);
              v198 = v1636;
              v199 = v1619;
              switch(*((_BYTE *)v197 + v1636))
              {
                case 0:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v197, 1, v111))
                  {
                    memcpy(v196, v197, v1666);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1605 + 32))(v196, v197, v111);
                    __swift_storeEnumTagSinglePayload((uint64_t)v196, 0, 1, v111);
                  }
                  v1518 = v92;
                  v281 = v196;
                  v282 = ((unint64_t)v196 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v1680 = v197;
                  v283 = ((unint64_t)v197 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v284 = *(_OWORD *)v283;
                  v285 = *(_OWORD *)(v283 + 16);
                  *(_QWORD *)(v282 + 32) = *(_QWORD *)(v283 + 32);
                  *(_OWORD *)v282 = v284;
                  *(_OWORD *)(v282 + 16) = v285;
                  v286 = (_OWORD *)((v282 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v287 = (_OWORD *)((v283 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v286 = *v287;
                  v288 = (_QWORD *)(((unint64_t)v286 + 23) & 0xFFFFFFFFFFFFF8);
                  v289 = (_QWORD *)(((unint64_t)v287 + 23) & 0xFFFFFFFFFFFFF8);
                  *v288 = *v289;
                  v290 = (_OWORD *)(((unint64_t)v288 + 15) & 0xFFFFFFFFFFFFFFF8);
                  v291 = (_OWORD *)(((unint64_t)v289 + 15) & 0xFFFFFFFFFFFFFFF8);
                  *v290 = *v291;
                  v292 = (_OWORD *)(((unint64_t)v290 + v1602) & v1678);
                  v293 = (_OWORD *)(((unint64_t)v291 + v1602) & v1678);
                  if (v1552 > 0x7FFFFFFE)
                  {
                    v295 = (_OWORD *)(((unint64_t)v293 + 23) & 0xFFFFFFFFFFFFFFF8);
                    v296 = ((unint64_t)v295 + 23) & 0xFFFFFFFFFFFFFFF8;
                    if (!__swift_getEnumTagSinglePayload((v1655 + v296 + 33) & v1513, v1552, v1550))
                      goto LABEL_324;
                  }
                  else
                  {
                    v294 = *(_QWORD *)((((unint64_t)v291 + v1602) & v1678) + 8);
                    if (v294 >= 0xFFFFFFFF)
                      LODWORD(v294) = -1;
                    if ((v294 + 1) <= 1)
                    {
                      v295 = (_OWORD *)(((unint64_t)v293 + 23) & 0xFFFFFFFFFFFFFFF8);
                      v296 = ((unint64_t)v295 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_324:
                      *v292 = *v293;
                      v298 = (_OWORD *)(((unint64_t)v292 + 23) & 0xFFFFFFFFFFFFFFF8);
                      *v298 = *v295;
                      v299 = ((unint64_t)v298 + 23) & 0xFFFFFFFFFFFFFFF8;
                      *(_OWORD *)v299 = *(_OWORD *)v296;
                      *(_BYTE *)(v299 + 16) = *(_BYTE *)(v296 + 16);
                      v300 = ((unint64_t)v298 + 47) & 0xFFFFFFFFFFFFFFF8;
                      v301 = ((unint64_t)v295 + 47) & 0xFFFFFFFFFFFFFFF8;
                      *(_QWORD *)v300 = *(_QWORD *)v301;
                      *(_BYTE *)(v300 + 8) = *(_BYTE *)(v301 + 8);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1642 + 32))((v1655 + 9 + v300) & v1513, (v1655 + 9 + v301) & v1513, v1550);
                      v297 = v1677;
LABEL_325:
                      *((_BYTE *)v292 + v297) = *((_BYTE *)v293 + v297);
                      v302 = ((unint64_t)v292 + v297) & 0xFFFFFFFFFFFFFFF8;
                      v303 = ((unint64_t)v293 + v297) & 0xFFFFFFFFFFFFFFF8;
                      *(_QWORD *)(v302 + 8) = *(_QWORD *)(v303 + 8);
                      v304 = (_OWORD *)((v302 + 23) & 0xFFFFFFFFFFFFFFF8);
                      v305 = (_OWORD *)((v303 + 23) & 0xFFFFFFFFFFFFFFF8);
                      *v304 = *v305;
                      v306 = (void *)(((unint64_t)v304 + v1659) & v1616);
                      v307 = (_BYTE *)(((unint64_t)v305 + v1659) & v1616);
                      if (v1654)
                      {
                        v308 = v1571;
                        if (v1564 >= v1571)
                        {
                          v309 = ((unint64_t)v305 + v1659) & v1616;
                          v308 = v1564;
                          v310 = v1566;
                        }
                        else
                        {
                          v309 = (unint64_t)&v307[v1567] & v1619;
                          v310 = v1570;
                        }
                        v706 = __swift_getEnumTagSinglePayload(v309, v308, v310);
                      }
                      else
                      {
                        if (!v307[v1652])
                          goto LABEL_1346;
                        v649 = (v307[v1652] - 1) << v1671;
                        if (v1652 > 3)
                          v649 = 0;
                        if ((_DWORD)v1652)
                        {
                          if (v1652 <= 3)
                            v650 = v1652;
                          else
                            v650 = 4;
                          __asm { BR              X11 }
                        }
                        v706 = v649 + 1;
                      }
                      if (v706)
                      {
                        memcpy(v306, v307, v1651);
                        goto LABEL_1348;
                      }
LABEL_1346:
                      (*(void (**)(void *, _BYTE *, uint64_t))(v1562 + 32))(v306, v307, v1566);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1563 + 32))(((unint64_t)v306 + v1567) & v1619, (unint64_t)&v307[v1567] & v1619, v1570);
                      if (!v1654)
                        *((_BYTE *)v306 + v1652) = 0;
LABEL_1348:
                      v1063 = (_QWORD *)(((unint64_t)v306 + v1661) & v1523);
                      v1064 = (uint64_t *)((unint64_t)&v307[v1661] & v1523);
                      if ((v1571 & 0x80000000) != 0)
                      {
                        v1067 = v1619;
                        v1066 = __swift_getEnumTagSinglePayload(((unint64_t)v1064 + v1553) & v1619, v1571, v1570);
                      }
                      else
                      {
                        v1065 = *v1064;
                        if ((unint64_t)*v1064 >= 0xFFFFFFFF)
                          LODWORD(v1065) = -1;
                        v1066 = v1065 + 1;
                        v1067 = v1619;
                      }
                      if (v1066)
                      {
                        memcpy(v1063, v1064, v1643);
                      }
                      else
                      {
                        *v1063 = *v1064;
                        (*(void (**)(unint64_t, unint64_t, uint64_t))(v1563 + 32))(((unint64_t)v1063 + v1553) & v1067, ((unint64_t)v1064 + v1553) & v1067, v1570);
                      }
                      v1068 = (_BYTE *)(((unint64_t)v1063 + v1603) & v1518);
                      v1069 = (_QWORD *)(((unint64_t)v1064 + v1603) & v1518);
                      if (v1565 >= 0x7FFFFFFF)
                      {
                        v1074 = (const void *)(((unint64_t)v1069 + v1568) & v1628);
                        if (__swift_getEnumTagSinglePayload((uint64_t)v1074, v1560, v1572) <= 1)
                        {
                          v1071 = v1069 + 1;
                          v1072 = v1568;
                          v1073 = ~v1672;
                          goto LABEL_1363;
                        }
                      }
                      else
                      {
                        v1070 = v1069[2];
                        if (v1070 >= 0xFFFFFFFF)
                          LODWORD(v1070) = -1;
                        if ((int)v1070 - 1 < 0)
                        {
                          v1071 = v1069 + 1;
                          v1072 = v1568;
                          v1073 = ~v1672;
                          v1074 = (const void *)(((unint64_t)v1069 + v1568) & v1628);
LABEL_1363:
                          *v1068 = *(_BYTE *)v1069;
                          memcpy(v1068 + 8, v1071, 0x69uLL);
                          v1075 = (void *)((unint64_t)&v1068[v1072] & v1073);
                          if (__swift_getEnumTagSinglePayload((uint64_t)v1074, 1, v1572))
                          {
                            memcpy(v1075, v1074, v1648);
                          }
                          else
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v1554 + 32))(v1075, v1074, v1572);
                            __swift_storeEnumTagSinglePayload((uint64_t)v1075, 0, 1, v1572);
                          }
                          v1076 = v1649;
LABEL_1368:
                          v1077 = (unint64_t)&v1068[v1673 + v1076];
                          v1078 = (void *)(v1077 & v1521);
                          v1079 = (unint64_t)v1069 + v1673 + v1076;
                          v1080 = (const void *)(v1079 & v1521);
                          if (v1558 < 0x7FFFFFFF)
                          {
                            if (*(_QWORD *)((((unint64_t)v1080 + v1662) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                              goto LABEL_1370;
                          }
                          else if (__swift_getEnumTagSinglePayload(v1079 & v1521, v1650, v1613) >= 2)
                          {
LABEL_1370:
                            memcpy(v1078, v1080, v1551);
                            v1081 = v1551;
                            goto LABEL_1377;
                          }
                          if (__swift_getEnumTagSinglePayload((uint64_t)v1080, 1, v1613))
                          {
                            memcpy(v1078, v1080, v1666);
                          }
                          else
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v1605 + 32))(v1078, v1080, v1613);
                            __swift_storeEnumTagSinglePayload((uint64_t)v1078, 0, 1, v1613);
                          }
                          v1082 = ((unint64_t)v1078 + v1662) & 0xFFFFFFFFFFFFFFF8;
                          v1083 = ((unint64_t)v1080 + v1662) & 0xFFFFFFFFFFFFFFF8;
                          v1084 = *(_OWORD *)v1083;
                          v1085 = *(_OWORD *)(v1083 + 16);
                          *(_QWORD *)(v1082 + 32) = *(_QWORD *)(v1083 + 32);
                          *(_OWORD *)v1082 = v1084;
                          *(_OWORD *)(v1082 + 16) = v1085;
                          v1086 = (v1082 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1087 = (v1083 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1088 = *(_OWORD *)v1087;
                          v1089 = *(_OWORD *)(v1087 + 16);
                          *(_QWORD *)(v1086 + 32) = *(_QWORD *)(v1087 + 32);
                          *(_OWORD *)v1086 = v1088;
                          *(_OWORD *)(v1086 + 16) = v1089;
                          *(_OWORD *)((v1086 + 47) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v1087 + 47) & 0xFFFFFFFFFFFFF8);
                          v1081 = v1551;
                          if (v1650)
                            v1081 = ((((((v1600 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                                  + 16;
LABEL_1377:
                          v1090 = (v1077 | v1682) + v1081;
                          v1091 = (void *)(v1090 & v1521);
                          v1092 = (v1079 | v1682) + v1081;
                          v1093 = (const void *)(v1092 & v1521);
                          if (v1558 < 0x7FFFFFFF)
                          {
                            if (*(_QWORD *)((((unint64_t)v1093 + v1662) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                              goto LABEL_1379;
                          }
                          else if (__swift_getEnumTagSinglePayload(v1092 & v1521, v1650, v1613) >= 2)
                          {
LABEL_1379:
                            memcpy(v1091, v1093, v1551);
                            v1094 = v1551;
                            goto LABEL_1386;
                          }
                          if (__swift_getEnumTagSinglePayload((uint64_t)v1093, 1, v1613))
                          {
                            memcpy(v1091, v1093, v1666);
                          }
                          else
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v1605 + 32))(v1091, v1093, v1613);
                            __swift_storeEnumTagSinglePayload((uint64_t)v1091, 0, 1, v1613);
                          }
                          v1095 = ((unint64_t)v1091 + v1662) & 0xFFFFFFFFFFFFFFF8;
                          v1096 = ((unint64_t)v1093 + v1662) & 0xFFFFFFFFFFFFFFF8;
                          v1097 = *(_OWORD *)v1096;
                          v1098 = *(_OWORD *)(v1096 + 16);
                          *(_QWORD *)(v1095 + 32) = *(_QWORD *)(v1096 + 32);
                          *(_OWORD *)v1095 = v1097;
                          *(_OWORD *)(v1095 + 16) = v1098;
                          v1099 = (v1095 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1100 = (v1096 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1101 = *(_OWORD *)v1100;
                          v1102 = *(_OWORD *)(v1100 + 16);
                          *(_QWORD *)(v1099 + 32) = *(_QWORD *)(v1100 + 32);
                          *(_OWORD *)v1099 = v1101;
                          *(_OWORD *)(v1099 + 16) = v1102;
                          *(_OWORD *)((v1099 + 47) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v1100 + 47) & 0xFFFFFFFFFFFFF8);
                          v1094 = v1551;
                          if (v1650)
                            v1094 = ((((((v1600 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                                  + 16;
LABEL_1386:
                          v1103 = (char *)(((v1090 | v1682) + v1094) & v1521);
                          v1104 = (char *)(((v1092 | v1682) + v1094) & v1521);
                          if (v1558 < 0x7FFFFFFF)
                          {
                            v1105 = v1613;
                            v196 = v281;
                            if (*(_QWORD *)(((unint64_t)&v1104[v1662] & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                            {
LABEL_1388:
                              memcpy(v1103, v1104, v1551);
                              v1106 = v1523;
                              if (!v1650)
                                goto LABEL_1397;
                              goto LABEL_1396;
                            }
                          }
                          else
                          {
                            v1105 = v1613;
                            v196 = v281;
                            if (__swift_getEnumTagSinglePayload((uint64_t)v1104, v1650, v1613) >= 2)
                              goto LABEL_1388;
                          }
                          v1106 = v1523;
                          if (__swift_getEnumTagSinglePayload((uint64_t)v1104, 1, v1105))
                          {
                            memcpy(v1103, v1104, v1666);
                          }
                          else
                          {
                            (*(void (**)(char *, char *, uint64_t))(v1605 + 32))(v1103, v1104, v1105);
                            __swift_storeEnumTagSinglePayload((uint64_t)v1103, 0, 1, v1105);
                          }
                          v1107 = (unint64_t)&v1103[v1662] & 0xFFFFFFFFFFFFFFF8;
                          v1108 = (unint64_t)&v1104[v1662] & 0xFFFFFFFFFFFFFFF8;
                          v1109 = *(_OWORD *)v1108;
                          v1110 = *(_OWORD *)(v1108 + 16);
                          *(_QWORD *)(v1107 + 32) = *(_QWORD *)(v1108 + 32);
                          *(_OWORD *)v1107 = v1109;
                          *(_OWORD *)(v1107 + 16) = v1110;
                          v1111 = (v1107 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1112 = (v1108 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1113 = *(_OWORD *)v1112;
                          v1114 = *(_OWORD *)(v1112 + 16);
                          *(_QWORD *)(v1111 + 32) = *(_QWORD *)(v1112 + 32);
                          *(_OWORD *)v1111 = v1113;
                          *(_OWORD *)(v1111 + 16) = v1114;
                          *(_OWORD *)((v1111 + 47) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v1112 + 47) & 0xFFFFFFFFFFFFF8);
                          if (!v1650)
                            goto LABEL_1397;
                          v1551 = ((((((v1600 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                                + 16;
LABEL_1396:
                          v195 = v1600;
LABEL_1397:
                          v205 = 0;
                          *(_QWORD *)&v1103[v1551] = *(_QWORD *)&v1104[v1551];
                          v1115 = v1581
                                + ((v1601
                                  + ((v1601
                                    + ((v1658
                                      + ((v1603
                                        + ((v1661
                                          + ((v1659
                                            + ((((((v1602
                                                  + ((((((((v195 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                                                      + 23) & 0xFFFFFFFFFFFFFFF8)
                                                    + 15) & 0xFFFFFFFFFFFFFFF8)) & v1678)
                                                + v1677) & 0xFFFFFFFFFFFFFFF8)
                                              + 23) & 0xFFFFFFFFFFFFFFF8)) & v1616)) & v1106)) & v1518)) & v1521)) & v1521)) & v1521);
                          if (v1598 > v1115)
                            v1115 = v1649 + ((v1672 + 8) & ~v1674);
                          if (v1115 <= v1585)
                            v1115 = v1585;
                          if (v1115 <= v1599)
                            v1115 = v1599;
                          if (v1115 <= v1584)
                            v1115 = v1584;
                          if (v1115 <= v1583)
                            v1115 = v1583;
                          if (v1115 <= v1582)
                            v1115 = v1582;
                          if (v1115 <= v1586)
                            v1115 = (((((v1676 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                  + 16;
                          if (v1115 <= v1587)
                            v1115 = v1587;
                          if (v1115 <= v1577)
                            v1115 = v1577;
                          if (v1115 <= v63)
                            v1115 = v63;
                          if (v1115 <= v1576)
                            v1115 = v1576;
                          if (v1115 <= v1579)
                            v1115 = v1579;
                          if (v1115 <= v1578)
                            v1115 = v1578;
                          if (v1115 <= v1656)
                            v1115 = v1656;
                          if (v1115 <= v1580)
                            v1115 = v1580;
                          if (v1115 <= v1598)
                            v1115 = v1649 + ((v1672 + 8) & ~v1674);
                          if (v1115 <= v1575)
                            v1115 = v1575;
                          if (v1115 <= v1588)
                            v1115 = ((v1676 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
                          if (v1115 <= v1589)
                            v1115 = v1589;
                          if (v1115 <= v1590)
                            v1115 = v1590;
                          if (v1115 <= v1591)
                            v1115 = v1591;
                          if (v1115 <= v1593)
                            v1115 = v1593;
                          if (v1115 <= v1592)
                            v1115 = v1592;
                          if (v1115 <= v1594)
                            v1115 = v1594;
                          if (v1115 <= v1595)
                            v1115 = v1595;
                          if (v1115 <= v1520)
                            v1115 = v1520;
                          if (v1115 <= v1596)
                            v1115 = v1596;
                          if (v1115 <= v1597)
                            v1115 = v1597;
                          if (v1115 <= v1624)
                            v1115 = v1624;
                          if (v1115 <= v1676)
                            v1115 = v1676;
                          if (v1115 <= v1622)
                            v1115 = v1622;
                          if (v1115 <= v1626)
                            v1115 = v1626;
                          if (v1115 <= v1640)
                            v1115 = v1640;
                          if (v1115 <= 8)
                            v198 = 8;
                          else
                            v198 = v1115;
LABEL_1886:
                          v217 = v1573;
LABEL_2131:
                          v197 = v1680;
                          goto LABEL_531;
                        }
                      }
                      v1076 = v1649;
                      memcpy(v1068, v1069, v1649);
                      goto LABEL_1368;
                    }
                  }
                  v297 = v1677;
                  memcpy(v292, v293, v1677);
                  goto LABEL_325;
                case 1:
                  *v196 = *v197;
                  v201 = (_BYTE *)(((unint64_t)v196 + v1674 + 8) & v92);
                  v202 = (_BYTE *)(((unint64_t)v197 + v1674 + 8) & v92);
                  *v201 = *v202;
                  memcpy(v201 + 8, v202 + 8, 0x69uLL);
                  v203 = (void *)((unint64_t)&v201[v1568] & v1628);
                  v204 = (const void *)((unint64_t)&v202[v1568] & v1628);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v204, 1, v1572))
                  {
                    memcpy(v203, v204, v1648);
                    v205 = 1;
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1554 + 32))(v203, v204, v1572);
                    v205 = 1;
                    __swift_storeEnumTagSinglePayload((uint64_t)v203, 0, 1, v1572);
                  }
                  goto LABEL_530;
                case 2:
                  *v196 = *v197;
                  v205 = 2;
                  goto LABEL_530;
                case 3:
                  v206 = __swift_getEnumTagSinglePayload((uint64_t)v197, 1, v111);
                  v207 = v197;
                  v208 = v92;
                  if (v206)
                  {
                    memcpy(v196, v207, v1666);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, const void *, uint64_t))(v1605 + 32))(v196, v207, v111);
                    __swift_storeEnumTagSinglePayload((uint64_t)v196, 0, 1, v111);
                  }
                  v311 = ((unint64_t)v196 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v1681 = v207;
                  v312 = ((unint64_t)v207 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v313 = *(_OWORD *)v312;
                  v314 = *(_OWORD *)(v312 + 16);
                  *(_QWORD *)(v311 + 32) = *(_QWORD *)(v312 + 32);
                  *(_OWORD *)v311 = v313;
                  *(_OWORD *)(v311 + 16) = v314;
                  v315 = (_OWORD *)((v311 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v316 = (_OWORD *)((v312 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v315 = *v316;
                  v317 = (void *)(((unint64_t)v315 + v1659) & v1616);
                  v318 = (_BYTE *)(((unint64_t)v316 + v1659) & v1616);
                  if (v1654)
                  {
                    v319 = v1571;
                    if (v1564 >= v1571)
                    {
                      v320 = ((unint64_t)v316 + v1659) & v1616;
                      v319 = v1564;
                      v321 = v1566;
                    }
                    else
                    {
                      v320 = (unint64_t)&v318[v1567] & v1619;
                      v321 = v1570;
                    }
                    v707 = __swift_getEnumTagSinglePayload(v320, v319, v321);
                    v217 = v1573;
                    v651 = v1652;
                  }
                  else
                  {
                    v651 = v1652;
                    v217 = v1573;
                    if (!v318[v1652])
                      goto LABEL_1468;
                    v652 = (v318[v1652] - 1) << v1671;
                    if (v1652 > 3)
                      v652 = 0;
                    if ((_DWORD)v1652)
                    {
                      if (v1652 <= 3)
                        v653 = v1652;
                      else
                        v653 = 4;
                      __asm { BR              X11 }
                    }
                    v707 = v652 + 1;
                  }
                  if (v707)
                  {
                    memcpy(v317, v318, v1651);
                    goto LABEL_1470;
                  }
LABEL_1468:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1562 + 32))(v317, v318, v1566);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1563 + 32))(((unint64_t)v317 + v1567) & v1619, (unint64_t)&v318[v1567] & v1619, v1570);
                  if (!v1654)
                    *((_BYTE *)v317 + v651) = 0;
LABEL_1470:
                  *((_BYTE *)v317 + v1651) = v318[v1651];
                  v1116 = ((unint64_t)v317 + v1651 + v1641 + 1) & v1620;
                  (*(void (**)(uint64_t, unint64_t, uint64_t))(v1540 + 32))(v1116, (unint64_t)&v318[v1651 + 1 + v1641] & v1620, v1541);
                  v1117 = (v1535 + v1116) & 0xFFFFFFFFFFFFFFF8;
                  v1118 = (v1535 + ((unint64_t)&v318[v1651 + 1 + v1641] & v1620)) & 0xFFFFFFFFFFFFFFF8;
                  v1119 = *(_QWORD *)(v1118 + 32);
                  v1120 = *(_OWORD *)(v1118 + 16);
                  *(_OWORD *)v1117 = *(_OWORD *)v1118;
                  *(_OWORD *)(v1117 + 16) = v1120;
                  *(_QWORD *)(v1117 + 32) = v1119;
                  v1121 = (_BYTE *)((v1675 + v1117) & v208);
                  v1122 = (_BYTE *)((v1675 + v1118) & v208);
                  v1669 = v196;
                  if (v1565 >= 0x7FFFFFFF)
                  {
                    v1127 = (const void *)((unint64_t)&v1122[v1568] & v1628);
                    if (__swift_getEnumTagSinglePayload((uint64_t)v1127, v1560, v1572) <= 1)
                    {
                      v1124 = v1122 + 8;
                      v1125 = v1568;
                      v1126 = ~v1672;
                      goto LABEL_1477;
                    }
                  }
                  else
                  {
                    v1123 = *(_QWORD *)(((v1675 + v1118) & v208) + 0x10);
                    if (v1123 >= 0xFFFFFFFF)
                      LODWORD(v1123) = -1;
                    if ((int)v1123 - 1 < 0)
                    {
                      v1124 = v1122 + 8;
                      v1125 = v1568;
                      v1126 = ~v1672;
                      v1127 = (const void *)((unint64_t)&v1122[v1568] & v1628);
LABEL_1477:
                      *v1121 = *v1122;
                      memcpy(v1121 + 8, v1124, 0x69uLL);
                      v1128 = (void *)((unint64_t)&v1121[v1125] & v1126);
                      if (__swift_getEnumTagSinglePayload((uint64_t)v1127, 1, v1572))
                      {
                        memcpy(v1128, v1127, v1648);
                      }
                      else
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v1554 + 32))(v1128, v1127, v1572);
                        __swift_storeEnumTagSinglePayload((uint64_t)v1128, 0, 1, v1572);
                      }
                      v1129 = v1649;
LABEL_1482:
                      v1130 = (void *)((unint64_t)&v1121[v1646 + v1129] & v1616);
                      v1131 = (_BYTE *)((unint64_t)&v1122[v1646 + v1129] & v1616);
                      v1132 = v1571;
                      v197 = v1681;
                      if (v1654)
                      {
                        v1133 = v1619;
                        if (v1564 >= v1571)
                        {
                          v1134 = (uint64_t)v1131;
                          v1132 = v1564;
                          v1135 = v1566;
                        }
                        else
                        {
                          v1134 = (unint64_t)&v1131[v1567] & v1619;
                          v1135 = v1570;
                        }
                        v1138 = __swift_getEnumTagSinglePayload(v1134, v1132, v1135);
                      }
                      else
                      {
                        v1133 = v1619;
                        if (!v1131[v1652])
                          goto LABEL_1632;
                        v1136 = (v1131[v1652] - 1) << v1671;
                        if (v1652 > 3)
                          v1136 = 0;
                        if ((_DWORD)v1652)
                        {
                          if (v1652 <= 3)
                            v1137 = v1652;
                          else
                            v1137 = 4;
                          __asm { BR              X11 }
                        }
                        v1138 = v1136 + 1;
                      }
                      if (v1138)
                      {
                        memcpy(v1130, v1131, v1651);
LABEL_1634:
                        v1188 = (_QWORD *)(((unint64_t)v1130 + v1661) & v1523);
                        v1189 = (uint64_t *)((unint64_t)&v1131[v1661] & v1523);
                        if ((v1571 & 0x80000000) != 0)
                        {
                          v1191 = __swift_getEnumTagSinglePayload(((unint64_t)v1189 + v1553) & v1619, v1571, v1570);
                        }
                        else
                        {
                          v1190 = *v1189;
                          if ((unint64_t)*v1189 >= 0xFFFFFFFF)
                            LODWORD(v1190) = -1;
                          v1191 = v1190 + 1;
                        }
                        v196 = v1669;
                        if (v1191)
                        {
                          memcpy(v1188, v1189, v1643);
                        }
                        else
                        {
                          *v1188 = *v1189;
                          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1563 + 32))(((unint64_t)v1188 + v1553) & v1619, ((unint64_t)v1189 + v1553) & v1619, v1570);
                        }
                        v205 = 3;
                        goto LABEL_531;
                      }
LABEL_1632:
                      (*(void (**)(void *, _BYTE *, uint64_t))(v1562 + 32))(v1130, v1131, v1566);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1563 + 32))(((unint64_t)v1130 + v1567) & v1133, (unint64_t)&v1131[v1567] & v1133, v1570);
                      if (!v1654)
                        *((_BYTE *)v1130 + v1652) = 0;
                      goto LABEL_1634;
                    }
                  }
                  v1129 = v1649;
                  memcpy(v1121, v1122, v1649);
                  goto LABEL_1482;
                case 4:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v197, 1, v111))
                  {
                    memcpy(v196, v197, v1666);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1605 + 32))(v196, v197, v111);
                    __swift_storeEnumTagSinglePayload((uint64_t)v196, 0, 1, v111);
                  }
                  v322 = ((unint64_t)v196 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v323 = ((unint64_t)v197 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v324 = *(_OWORD *)v323;
                  v325 = *(_OWORD *)(v323 + 16);
                  *(_QWORD *)(v322 + 32) = *(_QWORD *)(v323 + 32);
                  *(_OWORD *)v322 = v324;
                  *(_OWORD *)(v322 + 16) = v325;
                  v326 = (_OWORD *)((v322 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v327 = (_OWORD *)((v323 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v326 = *v327;
                  v328 = (_OWORD *)(((unint64_t)v326 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v329 = (_OWORD *)(((unint64_t)v327 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v328 = *v329;
                  v330 = ((unint64_t)v328 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v331 = ((unint64_t)v329 + 23) & 0xFFFFFFFFFFFFFFF8;
                  *(_OWORD *)v330 = *(_OWORD *)v331;
                  *(_BYTE *)(v330 + 16) = *(_BYTE *)(v331 + 16);
                  v332 = ((unint64_t)v328 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v333 = ((unint64_t)v329 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v334 = *(_OWORD *)v333;
                  v335 = *(_OWORD *)(v333 + 16);
                  *(_QWORD *)(v332 + 32) = *(_QWORD *)(v333 + 32);
                  *(_OWORD *)v332 = v334;
                  *(_OWORD *)(v332 + 16) = v335;
                  *(_BYTE *)(v332 + 40) = *(_BYTE *)(v333 + 40);
                  v336 = (_BYTE *)((v1546 + v332) & v92);
                  v337 = (_BYTE *)((v1546 + v333) & v92);
                  if (v1565 >= 0x7FFFFFFF)
                  {
                    v343 = (const void *)((unint64_t)&v337[v1568] & v1628);
                    v217 = v1573;
                    if (__swift_getEnumTagSinglePayload((uint64_t)v343, v1560, v1572) <= 1)
                    {
                      v339 = v197;
                      v340 = v337 + 8;
                      v341 = v1568;
                      v344 = v1652;
                      v342 = ~v1672;
                      goto LABEL_341;
                    }
                  }
                  else
                  {
                    v338 = *(_QWORD *)(((v1546 + v333) & v92) + 0x10);
                    if (v338 >= 0xFFFFFFFF)
                      LODWORD(v338) = -1;
                    v217 = v1573;
                    if ((int)v338 - 1 < 0)
                    {
                      v339 = v197;
                      v340 = v337 + 8;
                      v341 = v1568;
                      v342 = ~v1672;
                      v343 = (const void *)((unint64_t)&v337[v1568] & v1628);
                      v344 = v1652;
LABEL_341:
                      *v336 = *v337;
                      memcpy(v336 + 8, v340, 0x69uLL);
                      v345 = (void *)((unint64_t)&v336[v341] & v342);
                      if (__swift_getEnumTagSinglePayload((uint64_t)v343, 1, v1572))
                      {
                        memcpy(v345, v343, v1648);
                      }
                      else
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v1554 + 32))(v345, v343, v1572);
                        __swift_storeEnumTagSinglePayload((uint64_t)v345, 0, 1, v1572);
                      }
                      v346 = v1649;
                      v197 = v339;
LABEL_690:
                      v737 = (void *)((unint64_t)&v336[v1646 + v346] & v1616);
                      v738 = (_BYTE *)((unint64_t)&v337[v1646 + v346] & v1616);
                      v739 = v1571;
                      if (v1654)
                      {
                        if (v1564 >= v1571)
                        {
                          v740 = (uint64_t)v738;
                          v739 = v1564;
                          v741 = v1566;
                        }
                        else
                        {
                          v740 = (unint64_t)&v738[v1567] & v1619;
                          v741 = v1570;
                        }
                        v744 = __swift_getEnumTagSinglePayload(v740, v739, v741);
                        v198 = v1636;
                      }
                      else
                      {
                        v198 = v1636;
                        if (!v738[v344])
                          goto LABEL_1526;
                        v742 = (v738[v344] - 1) << v1671;
                        if (v344 > 3)
                          v742 = 0;
                        if ((_DWORD)v344)
                        {
                          if (v344 <= 3)
                            v743 = v344;
                          else
                            v743 = 4;
                          __asm { BR              X11 }
                        }
                        v744 = v742 + 1;
                      }
                      if (v744)
                      {
                        memcpy(v737, v738, v1651);
LABEL_1528:
                        v1148 = ((unint64_t)v737 + v1555) & 0xFFFFFFFFFFFFFFF8;
                        v1149 = (unint64_t)&v738[v1555] & 0xFFFFFFFFFFFFFFF8;
                        v1150 = *(_OWORD *)v1149;
                        v1151 = *(_OWORD *)(v1149 + 16);
                        *(_QWORD *)(v1148 + 32) = *(_QWORD *)(v1149 + 32);
                        *(_OWORD *)v1148 = v1150;
                        *(_OWORD *)(v1148 + 16) = v1151;
                        *(_OWORD *)((v1148 + 47) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v1149 + 47) & 0xFFFFFFFFFFFFF8);
                        v205 = 4;
                        goto LABEL_531;
                      }
LABEL_1526:
                      (*(void (**)(void *, _BYTE *, uint64_t))(v1562 + 32))(v737, v738, v1566);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1563 + 32))(((unint64_t)v737 + v1567) & v1619, (unint64_t)&v738[v1567] & v1619, v1570);
                      if (!v1654)
                        *((_BYTE *)v737 + v344) = 0;
                      goto LABEL_1528;
                    }
                  }
                  v346 = v1649;
                  memcpy(v336, v337, v1649);
                  v344 = v1652;
                  goto LABEL_690;
                case 5:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v197, 1, v111))
                  {
                    memcpy(v196, v197, v1666);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1605 + 32))(v196, v197, v111);
                    __swift_storeEnumTagSinglePayload((uint64_t)v196, 0, 1, v111);
                  }
                  v347 = v1572;
                  v1668 = v196;
                  v348 = ((unint64_t)v196 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v1680 = v197;
                  v349 = ((unint64_t)v197 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v350 = *(_OWORD *)v349;
                  v351 = *(_OWORD *)(v349 + 16);
                  *(_QWORD *)(v348 + 32) = *(_QWORD *)(v349 + 32);
                  *(_OWORD *)v348 = v350;
                  *(_OWORD *)(v348 + 16) = v351;
                  v352 = v187;
                  v353 = (void *)((v1665 + 40 + v348) & v187);
                  v354 = v352;
                  v355 = (const void *)((v1665 + 40 + v349) & v352);
                  if (v1558 == v1548)
                  {
                    v356 = v1650;
                    if (v1650 < 2)
                      goto LABEL_1213;
                    v357 = (v1665 + 40 + v349) & v352;
                    v358 = v111;
                  }
                  else
                  {
                    v359 = ((unint64_t)v355 + v1662) & 0xFFFFFFFFFFFFFFF8;
                    if (v1548 == 0x7FFFFFFF)
                    {
                      if (*(_QWORD *)(v359 + 24) >= 0xFFFFFFFFuLL)
                        goto LABEL_1213;
                      goto LABEL_1215;
                    }
                    v715 = (v1674
                          + ((((((v359 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                          + 65) & v92;
                    if (v1525 == v1548)
                    {
                      if (v1565 > 0x7FFFFFFE)
                      {
                        v958 = __swift_getEnumTagSinglePayload((v1568 + v715) & v1628, v1560, v1572);
                        if (v958 < 2)
                          goto LABEL_1213;
                        v718 = v958 - 1;
                      }
                      else
                      {
                        v716 = *(_QWORD *)(v715 + 16);
                        if (v716 >= 0xFFFFFFFF)
                          LODWORD(v716) = -1;
                        v717 = v716 - 1;
                        if (v717 < 0)
                          v717 = -1;
                        v718 = v717 + 1;
                      }
                      if (v718 < 2)
                      {
LABEL_1213:
                        if (__swift_getEnumTagSinglePayload((uint64_t)v355, 1, v111))
                        {
                          memcpy(v353, v355, v1666);
                        }
                        else
                        {
                          (*(void (**)(void *, const void *, uint64_t))(v1605 + 32))(v353, v355, v111);
                          __swift_storeEnumTagSinglePayload((uint64_t)v353, 0, 1, v111);
                        }
                        v959 = v353;
                        v960 = ((unint64_t)v353 + v1662) & 0xFFFFFFFFFFFFFFF8;
                        v961 = ((unint64_t)v355 + v1662) & 0xFFFFFFFFFFFFFFF8;
                        v962 = *(_OWORD *)v961;
                        v963 = *(_OWORD *)(v961 + 16);
                        *(_QWORD *)(v960 + 32) = *(_QWORD *)(v961 + 32);
                        *(_OWORD *)v960 = v962;
                        *(_OWORD *)(v960 + 16) = v963;
                        v964 = (_OWORD *)((v960 + 47) & 0xFFFFFFFFFFFFFFF8);
                        v965 = (_OWORD *)((v961 + 47) & 0xFFFFFFFFFFFFFFF8);
                        *v964 = *v965;
                        v966 = (_OWORD *)(((unint64_t)v964 + 23) & 0xFFFFFFFFFFFFFFF8);
                        v967 = (_OWORD *)(((unint64_t)v965 + 23) & 0xFFFFFFFFFFFFFFF8);
                        *v966 = *v967;
                        v968 = ((unint64_t)v966 + 23) & 0xFFFFFFFFFFFFFFF8;
                        v969 = ((unint64_t)v967 + 23) & 0xFFFFFFFFFFFFFFF8;
                        *(_OWORD *)v968 = *(_OWORD *)v969;
                        *(_BYTE *)(v968 + 16) = *(_BYTE *)(v969 + 16);
                        v970 = ((unint64_t)v966 + 47) & 0xFFFFFFFFFFFFFFF8;
                        v971 = ((unint64_t)v967 + 47) & 0xFFFFFFFFFFFFFFF8;
                        v972 = *(_OWORD *)v971;
                        v973 = *(_OWORD *)(v971 + 16);
                        *(_QWORD *)(v970 + 32) = *(_QWORD *)(v971 + 32);
                        *(_OWORD *)v970 = v972;
                        *(_OWORD *)(v970 + 16) = v973;
                        *(_BYTE *)(v970 + 40) = *(_BYTE *)(v971 + 40);
                        v974 = (_BYTE *)((v1546 + v970) & v92);
                        v975 = (_BYTE *)((v1546 + v971) & v92);
                        v976 = v92;
                        if (v1565 >= 0x7FFFFFFF)
                        {
                          v981 = (const void *)((unint64_t)&v975[v1568] & v1628);
                          if (__swift_getEnumTagSinglePayload((uint64_t)v981, v1560, v1572) <= 1)
                          {
                            v978 = v975 + 8;
                            v979 = v1568;
                            v980 = ~v1672;
                            goto LABEL_1224;
                          }
                        }
                        else
                        {
                          v977 = *(_QWORD *)(((v1546 + v971) & v92) + 0x10);
                          if (v977 >= 0xFFFFFFFF)
                            LODWORD(v977) = -1;
                          if ((int)v977 - 1 < 0)
                          {
                            v978 = v975 + 8;
                            v979 = v1568;
                            v980 = ~v1672;
                            v981 = (const void *)((unint64_t)&v975[v1568] & v1628);
LABEL_1224:
                            *v974 = *v975;
                            memcpy(v974 + 8, v978, 0x69uLL);
                            v982 = (void *)((unint64_t)&v974[v979] & v980);
                            if (__swift_getEnumTagSinglePayload((uint64_t)v981, 1, v1572))
                            {
                              memcpy(v982, v981, v1648);
                            }
                            else
                            {
                              (*(void (**)(void *, const void *, uint64_t))(v1554 + 32))(v982, v981, v1572);
                              __swift_storeEnumTagSinglePayload((uint64_t)v982, 0, 1, v1572);
                            }
                            v983 = v1649;
                            v199 = v1619;
LABEL_1229:
                            v984 = (void *)((unint64_t)&v974[v1646 + v983] & v1616);
                            v985 = (_BYTE *)((unint64_t)&v975[v1646 + v983] & v1616);
                            v986 = v1571;
                            v353 = v959;
                            if (v1654)
                            {
                              if (v1564 >= v1571)
                              {
                                v987 = (uint64_t)v985;
                                v986 = v1564;
                                v988 = v1566;
                              }
                              else
                              {
                                v987 = (unint64_t)&v985[v1567] & v199;
                                v988 = v1570;
                              }
                              v991 = __swift_getEnumTagSinglePayload(v987, v986, v988);
                              v92 = v976;
                              v111 = v1613;
                            }
                            else
                            {
                              v92 = v976;
                              v111 = v1613;
                              if (!v985[v1652])
                                goto LABEL_2009;
                              v989 = (v985[v1652] - 1) << v1671;
                              if (v1652 > 3)
                                v989 = 0;
                              if ((_DWORD)v1652)
                              {
                                if (v1652 <= 3)
                                  v990 = v1652;
                                else
                                  v990 = 4;
                                __asm { BR              X11 }
                              }
                              v991 = v989 + 1;
                            }
                            if (v991)
                            {
                              memcpy(v984, v985, v1651);
LABEL_2011:
                              v1369 = ((unint64_t)v984 + v1555) & 0xFFFFFFFFFFFFFFF8;
                              v1370 = (unint64_t)&v985[v1555] & 0xFFFFFFFFFFFFFFF8;
                              v1371 = *(_OWORD *)v1370;
                              v1372 = *(_OWORD *)(v1370 + 16);
                              *(_QWORD *)(v1369 + 32) = *(_QWORD *)(v1370 + 32);
                              *(_OWORD *)v1369 = v1371;
                              *(_OWORD *)(v1369 + 16) = v1372;
                              *(_OWORD *)((v1369 + 47) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v1370 + 47) & 0xFFFFFFFFFFFFF8);
                              v198 = v1636;
LABEL_2012:
                              v1373 = (_BYTE *)(((unint64_t)v353 + v1542) & v354);
                              v1374 = (unsigned __int8 *)(((unint64_t)v355 + v1542) & v354);
                              v1375 = *v1374;
                              if (v1375 > 2)
                              {
                                memcpy((void *)(((unint64_t)v353 + v1542) & v354), v1374, v1663);
                                v217 = v1573;
                                goto LABEL_2122;
                              }
                              *v1373 = v1375;
                              v1376 = (_OWORD *)((unint64_t)&v1373[v1574] & v354);
                              v1377 = (__int128 *)((unint64_t)&v1374[v1574] & v354);
                              v1378 = *((unsigned __int8 *)v1377 + v1604);
                              if (v1378 > 2)
                              {
                                memcpy((void *)((unint64_t)&v1373[v1574] & v354), (const void *)((unint64_t)&v1374[v1574] & v354), __n);
                                goto LABEL_2121;
                              }
                              if (v1378 != 2)
                              {
                                if (v1378 == 1)
                                {
                                  v1379 = *v1377;
                                  v1380 = *(_OWORD *)(((unint64_t)&v1374[v1574] & v354) + 0x10);
                                  *(_QWORD *)(((unint64_t)&v1373[v1574] & v354) + 0x20) = *(_QWORD *)(((unint64_t)&v1374[v1574] & v354) + 0x20);
                                  *v1376 = v1379;
                                  *(_OWORD *)(((unint64_t)&v1373[v1574] & v354) + 0x10) = v1380;
                                  v1381 = (void *)(((unint64_t)v1376 + v1653) & v1638);
                                  v1382 = (const void *)(((unint64_t)v1377 + v1653) & v1638);
                                  if (__swift_getEnumTagSinglePayload((uint64_t)v1382, 1, v111))
                                  {
                                    memcpy(v1381, v1382, v1666);
                                  }
                                  else
                                  {
                                    (*(void (**)(void *, const void *, uint64_t))(v1605 + 32))(v1381, v1382, v111);
                                    __swift_storeEnumTagSinglePayload((uint64_t)v1381, 0, 1, v111);
                                  }
                                  v1395 = (_OWORD *)(((unint64_t)v1381 + v1662) & 0xFFFFFFFFFFFFFFF8);
                                  v1396 = (_OWORD *)(((unint64_t)v1382 + v1662) & 0xFFFFFFFFFFFFFFF8);
                                  *v1395 = *v1396;
                                  v1397 = ((unint64_t)v1395 + 23) & 0xFFFFFFFFFFFFFFF8;
                                  v1398 = ((unint64_t)v1396 + 23) & 0xFFFFFFFFFFFFFFF8;
                                  v1399 = *(_QWORD *)v1398;
                                  *(_BYTE *)(v1397 + 8) = *(_BYTE *)(v1398 + 8);
                                  *(_QWORD *)v1397 = v1399;
                                  v1400 = ((unint64_t)v1395 + 39) & 0xFFFFFFFFFFFFFFF8;
                                  v1401 = ((unint64_t)v1396 + 39) & 0xFFFFFFFFFFFFFFF8;
                                  v1402 = *(_QWORD *)v1401;
                                  *(_BYTE *)(v1400 + 8) = *(_BYTE *)(v1401 + 8);
                                  *(_QWORD *)v1400 = v1402;
                                  v1403 = ((unint64_t)v1395 + 55) & 0xFFFFFFFFFFFFFFF8;
                                  v1404 = ((unint64_t)v1396 + 55) & 0xFFFFFFFFFFFFFFF8;
                                  v1405 = *(_QWORD *)v1404;
                                  *(_BYTE *)(v1403 + 8) = *(_BYTE *)(v1404 + 8);
                                  *(_QWORD *)v1403 = v1405;
                                  v1406 = (_OWORD *)(((unint64_t)v1395 + 71) & 0xFFFFFFFFFFFFFFF8);
                                  v1407 = (_OWORD *)(((unint64_t)v1396 + 71) & 0xFFFFFFFFFFFFFFF8);
                                  *v1406 = *v1407;
                                  v1408 = ((unint64_t)v1406 + 23) & 0xFFFFFFFFFFFFFFF8;
                                  v1409 = ((unint64_t)v1407 + 23) & 0xFFFFFFFFFFFFFFF8;
                                  v1410 = *(_OWORD *)v1409;
                                  v1411 = *(_OWORD *)(v1409 + 16);
                                  *(_QWORD *)(v1408 + 32) = *(_QWORD *)(v1409 + 32);
                                  *(_OWORD *)v1408 = v1410;
                                  *(_OWORD *)(v1408 + 16) = v1411;
                                  v1412 = (_BYTE *)((v1675 + v1408) & v92);
                                  v1413 = (_BYTE *)((v1675 + v1409) & v92);
                                  if (v1565 >= 0x7FFFFFFF)
                                  {
                                    v1417 = (const void *)((unint64_t)&v1413[v1568] & v1628);
                                    if (__swift_getEnumTagSinglePayload((uint64_t)v1417, v1560, v1572) <= 1)
                                    {
                                      v1415 = v1572;
                                      v1416 = v1413 + 8;
                                      goto LABEL_2032;
                                    }
                                  }
                                  else
                                  {
                                    v1414 = *(_QWORD *)(((v1675 + v1409) & v92) + 0x10);
                                    if (v1414 >= 0xFFFFFFFF)
                                      LODWORD(v1414) = -1;
                                    if ((int)v1414 - 1 < 0)
                                    {
                                      v1415 = v1572;
                                      v1416 = v1413 + 8;
                                      v1417 = (const void *)((unint64_t)&v1413[v1568] & v1628);
LABEL_2032:
                                      *v1412 = *v1413;
                                      memcpy(v1412 + 8, v1416, 0x69uLL);
                                      v1418 = (void *)((unint64_t)&v1412[v1568] & v1628);
                                      if (__swift_getEnumTagSinglePayload((uint64_t)v1417, 1, v1415))
                                      {
                                        memcpy(v1418, v1417, v1648);
                                      }
                                      else
                                      {
                                        (*(void (**)(void *, const void *, uint64_t))(v1554 + 32))(v1418, v1417, v1415);
                                        __swift_storeEnumTagSinglePayload((uint64_t)v1418, 0, 1, v1415);
                                      }
                                      v347 = v1415;
                                      goto LABEL_2113;
                                    }
                                  }
                                  memcpy(v1412, v1413, v1649);
LABEL_2113:
                                  v1452 = 1;
LABEL_2120:
                                  *((_BYTE *)v1376 + v1604) = v1452;
                                  goto LABEL_2121;
                                }
                                v1393 = *v1377;
                                v1394 = *(_OWORD *)(((unint64_t)&v1374[v1574] & v354) + 0x20);
                                *(_OWORD *)(((unint64_t)&v1373[v1574] & v354) + 0x10) = *(_OWORD *)(((unint64_t)&v1374[v1574] & v354) + 0x10);
                                *(_OWORD *)(((unint64_t)&v1373[v1574] & v354) + 0x20) = v1394;
                                *v1376 = v1393;
                                *((_BYTE *)v1376 + v1604) = 0;
LABEL_2121:
                                v217 = v1573;
                                v198 = v1636;
LABEL_2122:
                                v1453 = (_QWORD *)((unint64_t)&v1373[v1544] & 0xFFFFFFFFFFFFFFF8);
                                v1454 = (_QWORD *)((unint64_t)&v1374[v1544] & 0xFFFFFFFFFFFFFFF8);
                                *v1453 = *v1454;
                                v1455 = (_BYTE *)(((unint64_t)v1453 + v1545) & v354);
                                v1456 = (unsigned __int8 *)(((unint64_t)v1454 + v1545) & v354);
                                v1457 = *v1456;
                                if (v1457 > 2)
                                {
                                  memcpy(v1455, v1456, v1663);
LABEL_2129:
                                  v205 = 5;
                                  goto LABEL_2130;
                                }
                                v1458 = v92;
                                *v1455 = v1457;
                                v1459 = (_OWORD *)((unint64_t)&v1455[v1574] & v354);
                                v1460 = (_OWORD *)((unint64_t)&v1456[v1574] & v354);
                                v1461 = *((unsigned __int8 *)v1460 + v1604);
                                v197 = v1680;
                                if (v1461 > 2)
                                {
                                  memcpy((void *)((unint64_t)&v1455[v1574] & v354), (const void *)((unint64_t)&v1456[v1574] & v354), __n);
LABEL_2195:
                                  v205 = 5;
                                  goto LABEL_2196;
                                }
                                v196 = v1668;
                                if (v1461 != 2)
                                {
                                  if (v1461 != 1)
                                  {
                                    v1476 = *v1460;
                                    v1477 = v1460[2];
                                    v1459[1] = v1460[1];
                                    v1459[2] = v1477;
                                    *v1459 = v1476;
                                    *((_BYTE *)v1459 + v1604) = 0;
                                    v205 = 5;
                                    goto LABEL_531;
                                  }
                                  v1462 = *v1460;
                                  v1463 = v1460[1];
                                  *((_QWORD *)v1459 + 4) = *((_QWORD *)v1460 + 4);
                                  *v1459 = v1462;
                                  v1459[1] = v1463;
                                  v1464 = (void *)(((unint64_t)v1459 + v1653) & v1638);
                                  v1465 = (const void *)(((unint64_t)v1460 + v1653) & v1638);
                                  if (__swift_getEnumTagSinglePayload((uint64_t)v1465, 1, v1613))
                                  {
                                    memcpy(v1464, v1465, v1666);
                                  }
                                  else
                                  {
                                    (*(void (**)(void *, const void *, uint64_t))(v1605 + 32))(v1464, v1465, v1613);
                                    __swift_storeEnumTagSinglePayload((uint64_t)v1464, 0, 1, v1613);
                                  }
                                  v1478 = (_OWORD *)(((unint64_t)v1464 + v1662) & 0xFFFFFFFFFFFFFFF8);
                                  v1479 = (_OWORD *)(((unint64_t)v1465 + v1662) & 0xFFFFFFFFFFFFFFF8);
                                  *v1478 = *v1479;
                                  v1480 = ((unint64_t)v1478 + 23) & 0xFFFFFFFFFFFFFFF8;
                                  v1481 = ((unint64_t)v1479 + 23) & 0xFFFFFFFFFFFFFFF8;
                                  v1482 = *(_QWORD *)v1481;
                                  *(_BYTE *)(v1480 + 8) = *(_BYTE *)(v1481 + 8);
                                  *(_QWORD *)v1480 = v1482;
                                  v1483 = ((unint64_t)v1478 + 39) & 0xFFFFFFFFFFFFFFF8;
                                  v1484 = ((unint64_t)v1479 + 39) & 0xFFFFFFFFFFFFFFF8;
                                  v1485 = *(_QWORD *)v1484;
                                  *(_BYTE *)(v1483 + 8) = *(_BYTE *)(v1484 + 8);
                                  *(_QWORD *)v1483 = v1485;
                                  v1486 = ((unint64_t)v1478 + 55) & 0xFFFFFFFFFFFFFFF8;
                                  v1487 = ((unint64_t)v1479 + 55) & 0xFFFFFFFFFFFFFFF8;
                                  v1488 = *(_QWORD *)v1487;
                                  *(_BYTE *)(v1486 + 8) = *(_BYTE *)(v1487 + 8);
                                  *(_QWORD *)v1486 = v1488;
                                  v1489 = (_OWORD *)(((unint64_t)v1478 + 71) & 0xFFFFFFFFFFFFFFF8);
                                  v1490 = (_OWORD *)(((unint64_t)v1479 + 71) & 0xFFFFFFFFFFFFFFF8);
                                  *v1489 = *v1490;
                                  v1491 = ((unint64_t)v1489 + 23) & 0xFFFFFFFFFFFFFFF8;
                                  v1492 = ((unint64_t)v1490 + 23) & 0xFFFFFFFFFFFFFFF8;
                                  v1493 = *(_OWORD *)v1492;
                                  v1494 = *(_OWORD *)(v1492 + 16);
                                  *(_QWORD *)(v1491 + 32) = *(_QWORD *)(v1492 + 32);
                                  *(_OWORD *)v1491 = v1493;
                                  *(_OWORD *)(v1491 + 16) = v1494;
                                  v1495 = (_BYTE *)((v1675 + v1491) & v1458);
                                  v1496 = (_BYTE *)((v1675 + v1492) & v1458);
                                  if (v1565 >= 0x7FFFFFFF)
                                  {
                                    v1499 = (const void *)((unint64_t)&v1496[v1568] & v1628);
                                    if (__swift_getEnumTagSinglePayload((uint64_t)v1499, v1560, v347) <= 1)
                                    {
                                      v1498 = v1496 + 8;
                                      goto LABEL_2145;
                                    }
                                  }
                                  else
                                  {
                                    v1497 = *(_QWORD *)(((v1675 + v1492) & v1458) + 0x10);
                                    if (v1497 >= 0xFFFFFFFF)
                                      LODWORD(v1497) = -1;
                                    if ((int)v1497 - 1 < 0)
                                    {
                                      v1498 = v1496 + 8;
                                      v1499 = (const void *)((unint64_t)&v1496[v1568] & v1628);
LABEL_2145:
                                      *v1495 = *v1496;
                                      memcpy(v1495 + 8, v1498, 0x69uLL);
                                      v1500 = (void *)((unint64_t)&v1495[v1568] & v1628);
                                      if (__swift_getEnumTagSinglePayload((uint64_t)v1499, 1, v347))
                                      {
                                        memcpy(v1500, v1499, v1648);
                                      }
                                      else
                                      {
                                        (*(void (**)(void *, const void *, uint64_t))(v1554 + 32))(v1500, v1499, v1572);
                                        __swift_storeEnumTagSinglePayload((uint64_t)v1500, 0, 1, v1572);
                                      }
                                      v198 = v1636;
                                      goto LABEL_2160;
                                    }
                                  }
                                  memcpy(v1495, v1496, v1649);
LABEL_2160:
                                  *((_BYTE *)v1459 + v1604) = 1;
                                  goto LABEL_2129;
                                }
                                memcpy(v1459, v1460, 0x48uLL);
                                v1466 = (const void *)(((unint64_t)v1460 + 79) & 0xFFFFFFFFFFFFFFF8);
                                memcpy((void *)(((unint64_t)v1459 + 79) & 0xFFFFFFFFFFFFFFF8), v1466, 0x48uLL);
                                v1467 = (_QWORD *)(((((unint64_t)v1459 + 79) & 0xFFFFFFFFFFFFFFF8) + 79) & 0xFFFFFFFFFFFFF8);
                                v1468 = (_QWORD *)(((unint64_t)v1466 + 79) & 0xFFFFFFFFFFFFF8);
                                *v1467 = *v1468;
                                v1469 = (_QWORD *)(((unint64_t)v1467 + 15) & 0xFFFFFFFFFFFFFFF8);
                                v1470 = (_QWORD *)(((unint64_t)v1468 + 15) & 0xFFFFFFFFFFFFFFF8);
                                *v1469 = *v1470;
                                v1471 = (void *)(((unint64_t)v1469 + v1556) & v1616);
                                v1472 = (_BYTE *)(((unint64_t)v1470 + v1556) & v1616);
                                if (v1654)
                                {
                                  v1473 = v1571;
                                  if (v1564 >= v1571)
                                  {
                                    v1474 = ((unint64_t)v1470 + v1556) & v1616;
                                    v1473 = v1564;
                                    v1475 = v1566;
                                  }
                                  else
                                  {
                                    v1474 = (unint64_t)&v1472[v1567] & v1619;
                                    v1475 = v1570;
                                  }
                                  v1503 = __swift_getEnumTagSinglePayload(v1474, v1473, v1475);
                                }
                                else
                                {
                                  if (!v1472[v1652])
                                    goto LABEL_2192;
                                  v1501 = (v1472[v1652] - 1) << v1671;
                                  if (v1652 > 3)
                                    v1501 = 0;
                                  if ((_DWORD)v1652)
                                  {
                                    if (v1652 <= 3)
                                      v1502 = v1652;
                                    else
                                      v1502 = 4;
                                    __asm { BR              X11 }
                                  }
                                  v1503 = v1501 + 1;
                                  v198 = v1636;
                                  v197 = v1680;
                                }
                                if (v1503)
                                {
                                  memcpy(v1471, v1472, v1651);
LABEL_2194:
                                  *((_BYTE *)v1471 + v1651) = v1472[v1651];
                                  *((_BYTE *)v1459 + v1604) = 2;
                                  goto LABEL_2195;
                                }
LABEL_2192:
                                (*(void (**)(void *, _BYTE *, uint64_t))(v1562 + 32))(v1471, v1472, v1566);
                                (*(void (**)(unint64_t, unint64_t, uint64_t))(v1563 + 32))(((unint64_t)v1471 + v1567) & v1619, (unint64_t)&v1472[v1567] & v1619, v1570);
                                if (!v1654)
                                  *((_BYTE *)v1471 + v1652) = 0;
                                goto LABEL_2194;
                              }
                              memcpy((void *)((unint64_t)&v1373[v1574] & v354), (const void *)((unint64_t)&v1374[v1574] & v354), 0x48uLL);
                              v1383 = (const void *)(((unint64_t)v1377 + 79) & 0xFFFFFFFFFFFFFFF8);
                              memcpy((void *)(((unint64_t)v1376 + 79) & 0xFFFFFFFFFFFFFFF8), v1383, 0x48uLL);
                              v1384 = (_QWORD *)(((((unint64_t)v1376 + 79) & 0xFFFFFFFFFFFFFFF8) + 79) & 0xFFFFFFFFFFFFF8);
                              v1385 = (_QWORD *)(((unint64_t)v1383 + 79) & 0xFFFFFFFFFFFFF8);
                              *v1384 = *v1385;
                              v1386 = (_QWORD *)(((unint64_t)v1384 + 15) & 0xFFFFFFFFFFFFFFF8);
                              v1387 = (_QWORD *)(((unint64_t)v1385 + 15) & 0xFFFFFFFFFFFFFFF8);
                              *v1386 = *v1387;
                              v1388 = (void *)(((unint64_t)v1386 + v1556) & v1616);
                              v1389 = (_BYTE *)(((unint64_t)v1387 + v1556) & v1616);
                              if (v1654)
                              {
                                v1390 = v1571;
                                if (v1564 >= v1571)
                                {
                                  v1391 = ((unint64_t)v1387 + v1556) & v1616;
                                  v1390 = v1564;
                                  v1392 = v1566;
                                }
                                else
                                {
                                  v1391 = (unint64_t)&v1389[v1567] & v1619;
                                  v1392 = v1570;
                                }
                                v1421 = __swift_getEnumTagSinglePayload(v1391, v1390, v1392);
                              }
                              else
                              {
                                if (!v1389[v1652])
                                  goto LABEL_2117;
                                v1419 = (v1389[v1652] - 1) << v1671;
                                if (v1652 > 3)
                                  v1419 = 0;
                                if ((_DWORD)v1652)
                                {
                                  if (v1652 <= 3)
                                    v1420 = v1652;
                                  else
                                    v1420 = 4;
                                  __asm { BR              X11 }
                                }
                                v1421 = v1419 + 1;
                                v347 = v1572;
                              }
                              if (v1421)
                              {
                                memcpy(v1388, v1389, v1651);
LABEL_2119:
                                *((_BYTE *)v1388 + v1651) = v1389[v1651];
                                v1452 = 2;
                                goto LABEL_2120;
                              }
LABEL_2117:
                              (*(void (**)(void *, _BYTE *, uint64_t))(v1562 + 32))(v1388, v1389, v1566);
                              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1563 + 32))(((unint64_t)v1388 + v1567) & v1619, (unint64_t)&v1389[v1567] & v1619, v1570);
                              if (!v1654)
                                *((_BYTE *)v1388 + v1652) = 0;
                              goto LABEL_2119;
                            }
LABEL_2009:
                            (*(void (**)(void *, _BYTE *, uint64_t))(v1562 + 32))(v984, v985, v1566);
                            (*(void (**)(unint64_t, unint64_t, uint64_t))(v1563 + 32))(((unint64_t)v984 + v1567) & v199, (unint64_t)&v985[v1567] & v199, v1570);
                            if (!v1654)
                              *((_BYTE *)v984 + v1652) = 0;
                            goto LABEL_2011;
                          }
                        }
                        v983 = v1649;
                        memcpy(v974, v975, v1649);
                        goto LABEL_1229;
                      }
LABEL_1215:
                      memcpy(v353, v355, v1599);
                      goto LABEL_2012;
                    }
                    if (v1654 < 2)
                      goto LABEL_1213;
                    v357 = (v1547 + v715) & v1616;
                    v356 = v1571;
                    if (v1564 >= v1571)
                    {
                      v356 = v1564;
                      v358 = v1566;
                    }
                    else
                    {
                      v357 = (v1567 + v357) & v1619;
                      v358 = v1570;
                    }
                  }
                  if (__swift_getEnumTagSinglePayload(v357, v356, v358) < 2)
                    goto LABEL_1213;
                  goto LABEL_1215;
                case 6:
                  *v196 = *v197;
                  v205 = 6;
                  goto LABEL_530;
                case 7:
                  *v196 = *v197;
                  v205 = 7;
                  goto LABEL_530;
                case 8:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v197, 1, v111))
                  {
                    memcpy(v196, v197, v1666);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1605 + 32))(v196, v197, v111);
                    __swift_storeEnumTagSinglePayload((uint64_t)v196, 0, 1, v111);
                  }
                  v360 = v196;
                  v361 = ((unint64_t)v196 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v362 = ((unint64_t)v197 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v363 = *(_OWORD *)v362;
                  v364 = *(_OWORD *)(v362 + 16);
                  *(_QWORD *)(v361 + 32) = *(_QWORD *)(v362 + 32);
                  *(_OWORD *)v361 = v363;
                  *(_OWORD *)(v361 + 16) = v364;
                  v365 = v92;
                  v366 = (v1675 + v361) & v92;
                  v367 = (v1675 + v362) & v365;
                  if (v1565 >= 0x7FFFFFFF)
                  {
                    v373 = (const void *)((v1568 + v367) & v1628);
                    v217 = v1573;
                    if (__swift_getEnumTagSinglePayload((uint64_t)v373, v1560, v1572) <= 1)
                    {
                      v369 = v197;
                      v370 = (const void *)(v367 + 8);
                      v371 = v1568;
                      v372 = ~v1672;
LABEL_361:
                      *(_BYTE *)v366 = *(_BYTE *)v367;
                      memcpy((void *)(v366 + 8), v370, 0x69uLL);
                      v374 = (void *)((v371 + v366) & v372);
                      if (__swift_getEnumTagSinglePayload((uint64_t)v373, 1, v1572))
                      {
                        memcpy(v374, v373, v1648);
                      }
                      else
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v1554 + 32))(v374, v373, v1572);
                        __swift_storeEnumTagSinglePayload((uint64_t)v374, 0, 1, v1572);
                      }
                      v375 = v1649;
                      v197 = v369;
LABEL_705:
                      v745 = (_QWORD *)(((v366 | 7) + v375) & 0xFFFFFFFFFFFFF8);
                      v746 = (_QWORD *)(((v367 | 7) + v375) & 0xFFFFFFFFFFFFFFF8);
                      *v745 = *v746;
                      v747 = (_OWORD *)(((unint64_t)v745 + 15) & 0xFFFFFFFFFFFFFFF8);
                      v748 = (_OWORD *)(((unint64_t)v746 + 15) & 0xFFFFFFFFFFFFFFF8);
                      *v747 = *v748;
                      v749 = ((unint64_t)v747 + 23) & 0xFFFFFFFFFFFFFFF8;
                      v750 = ((unint64_t)v748 + 23) & 0xFFFFFFFFFFFFFFF8;
                      v751 = *(_OWORD *)v750;
                      *(_QWORD *)(v749 + 16) = *(_QWORD *)(v750 + 16);
                      *(_OWORD *)v749 = v751;
                      *(_QWORD *)((v749 + 31) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v750 + 31) & 0xFFFFFFFFFFFFF8);
                      v205 = 8;
LABEL_1967:
                      v198 = v1636;
                      v196 = v360;
                      goto LABEL_531;
                    }
                  }
                  else
                  {
                    v368 = *(_QWORD *)(((v1675 + v362) & v365) + 0x10);
                    if (v368 >= 0xFFFFFFFF)
                      LODWORD(v368) = -1;
                    v217 = v1573;
                    if ((int)v368 - 1 < 0)
                    {
                      v369 = v197;
                      v370 = (const void *)(v367 + 8);
                      v371 = v1568;
                      v372 = ~v1672;
                      v373 = (const void *)((v1568 + v367) & v1628);
                      goto LABEL_361;
                    }
                  }
                  v375 = v1649;
                  memcpy((void *)v366, (const void *)v367, v1649);
                  goto LABEL_705;
                case 9:
                  v209 = __swift_getEnumTagSinglePayload((uint64_t)v197, 1, v111);
                  v210 = v197;
                  v211 = v92;
                  if (v209)
                  {
                    memcpy(v196, v210, v1666);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, const void *, uint64_t))(v1605 + 32))(v196, v210, v111);
                    __swift_storeEnumTagSinglePayload((uint64_t)v196, 0, 1, v111);
                  }
                  v376 = ((unint64_t)v196 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v1680 = v210;
                  v377 = ((unint64_t)v210 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v378 = *(_OWORD *)v377;
                  v379 = *(_OWORD *)(v377 + 16);
                  *(_QWORD *)(v376 + 32) = *(_QWORD *)(v377 + 32);
                  *(_OWORD *)v376 = v378;
                  *(_OWORD *)(v376 + 16) = v379;
                  v380 = (_OWORD *)((v376 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v381 = (_OWORD *)((v377 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v380 = *v381;
                  v382 = (void *)(((unint64_t)v380 + v1672 + 16) & v1628);
                  v383 = (const void *)(((unint64_t)v381 + v1672 + 16) & v1628);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v383, 1, v1572))
                  {
                    memcpy(v382, v383, v1648);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1554 + 32))(v382, v383, v1572);
                    __swift_storeEnumTagSinglePayload((uint64_t)v382, 0, 1, v1572);
                  }
                  v217 = v1573;
                  v654 = (void *)(((unint64_t)v382 + v1532) & v1616);
                  v655 = (_BYTE *)(((unint64_t)v383 + v1532) & v1616);
                  v1668 = v196;
                  if (v1654)
                  {
                    v656 = v1571;
                    v657 = v1619;
                    if (v1564 >= v1571)
                    {
                      v658 = (uint64_t)v655;
                      v656 = v1564;
                      v659 = v1566;
                    }
                    else
                    {
                      v658 = (unint64_t)&v655[v1567] & v1619;
                      v659 = v1570;
                    }
                    v712 = __swift_getEnumTagSinglePayload(v658, v656, v659);
                  }
                  else
                  {
                    v657 = v1619;
                    if (!v655[v1652])
                      goto LABEL_1498;
                    v699 = (v655[v1652] - 1) << v1671;
                    if (v1652 > 3)
                      v699 = 0;
                    if ((_DWORD)v1652)
                    {
                      if (v1652 <= 3)
                        v700 = v1652;
                      else
                        v700 = 4;
                      __asm { BR              X11 }
                    }
                    v712 = v699 + 1;
                  }
                  if (v712)
                  {
                    memcpy(v654, v655, v1651);
                    goto LABEL_1500;
                  }
LABEL_1498:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1562 + 32))(v654, v655, v1566);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1563 + 32))(((unint64_t)v654 + v1567) & v657, (unint64_t)&v655[v1567] & v657, v1570);
                  if (!v1654)
                    *((_BYTE *)v654 + v1652) = 0;
LABEL_1500:
                  *((_BYTE *)v654 + v1651) = v655[v1651];
                  v1139 = (void *)(((unint64_t)v654 + v1651 + v1646 + 1) & v1616);
                  v1140 = (_BYTE *)((unint64_t)&v655[v1651 + 1 + v1646] & v1616);
                  if (v1654)
                  {
                    v1141 = v1571;
                    if (v1564 >= v1571)
                    {
                      v1142 = (unint64_t)&v655[v1651 + 1 + v1646] & v1616;
                      v1141 = v1564;
                      v1143 = v1566;
                    }
                    else
                    {
                      v1142 = (unint64_t)&v1140[v1567] & v657;
                      v1143 = v1570;
                    }
                    v1147 = __swift_getEnumTagSinglePayload(v1142, v1141, v1143);
                    v1144 = v1572;
                  }
                  else
                  {
                    v1144 = v1572;
                    if (!v1140[v1652])
                      goto LABEL_1645;
                    v1145 = (v1140[v1652] - 1) << v1671;
                    if (v1652 > 3)
                      v1145 = 0;
                    if ((_DWORD)v1652)
                    {
                      if (v1652 <= 3)
                        v1146 = v1652;
                      else
                        v1146 = 4;
                      __asm { BR              X11 }
                    }
                    v1147 = v1145 + 1;
                  }
                  if (v1147)
                  {
                    memcpy(v1139, v1140, v1651);
                    goto LABEL_1647;
                  }
LABEL_1645:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1562 + 32))(v1139, v1140, v1566);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1563 + 32))(((unint64_t)v1139 + v1567) & v657, (unint64_t)&v1140[v1567] & v657, v1570);
                  if (!v1654)
                    *((_BYTE *)v1139 + v1652) = 0;
LABEL_1647:
                  v1192 = (_QWORD *)(((unint64_t)v1139 + v1661) & v1523);
                  v1193 = (uint64_t *)((unint64_t)&v1140[v1661] & v1523);
                  if ((v1571 & 0x80000000) != 0)
                  {
                    v1195 = __swift_getEnumTagSinglePayload(((unint64_t)v1193 + v1553) & v657, v1571, v1570);
                  }
                  else
                  {
                    v1194 = *v1193;
                    if ((unint64_t)*v1193 >= 0xFFFFFFFF)
                      LODWORD(v1194) = -1;
                    v1195 = v1194 + 1;
                  }
                  if (v1195)
                  {
                    memcpy(v1192, v1193, v1643);
                  }
                  else
                  {
                    *v1192 = *v1193;
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v1563 + 32))(((unint64_t)v1192 + v1553) & v657, ((unint64_t)v1193 + v1553) & v657, v1570);
                  }
                  v1196 = (_BYTE *)(((unint64_t)v1192 + v1603) & v211);
                  v1197 = (_QWORD *)(((unint64_t)v1193 + v1603) & v211);
                  if (v1565 >= 0x7FFFFFFF)
                  {
                    v1202 = (const void *)(((unint64_t)v1197 + v1568) & v1628);
                    v197 = v1680;
                    if (__swift_getEnumTagSinglePayload((uint64_t)v1202, v1560, v1144) <= 1)
                    {
                      v1199 = v1197 + 1;
                      v1200 = v1568;
                      v1201 = ~v1672;
                      goto LABEL_1662;
                    }
                  }
                  else
                  {
                    v1198 = v1197[2];
                    if (v1198 >= 0xFFFFFFFF)
                      LODWORD(v1198) = -1;
                    v197 = v1680;
                    if ((int)v1198 - 1 < 0)
                    {
                      v1199 = v1197 + 1;
                      v1200 = v1568;
                      v1201 = ~v1672;
                      v1202 = (const void *)(((unint64_t)v1197 + v1568) & v1628);
LABEL_1662:
                      *v1196 = *(_BYTE *)v1197;
                      memcpy(v1196 + 8, v1199, 0x69uLL);
                      v1203 = (void *)((unint64_t)&v1196[v1200] & v1201);
                      if (__swift_getEnumTagSinglePayload((uint64_t)v1202, 1, v1144))
                      {
                        memcpy(v1203, v1202, v1648);
                      }
                      else
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v1554 + 32))(v1203, v1202, v1144);
                        __swift_storeEnumTagSinglePayload((uint64_t)v1203, 0, 1, v1144);
                      }
                      v205 = 9;
                      goto LABEL_2130;
                    }
                  }
                  memcpy(v1196, v1197, v1649);
                  v205 = 9;
                  goto LABEL_2196;
                case 0xA:
                  v212 = *(_OWORD *)v197;
                  v213 = *((_OWORD *)v197 + 1);
                  v196[4] = v197[4];
                  *(_OWORD *)v196 = v212;
                  *((_OWORD *)v196 + 1) = v213;
                  v214 = (void *)(((unint64_t)v196 + v1653) & v1638);
                  v215 = (const void *)(((unint64_t)v197 + v1653) & v1638);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v215, 1, v111))
                  {
                    v216 = v1666;
                    memcpy(v214, v215, v1666);
                    v217 = v1573;
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1605 + 32))(v214, v215, v111);
                    __swift_storeEnumTagSinglePayload((uint64_t)v214, 0, 1, v111);
                    v217 = v1573;
                    v216 = v1666;
                  }
                  *((_BYTE *)v214 + v216) = *((_BYTE *)v215 + v216);
                  v384 = ((unint64_t)v214 + v216) & 0xFFFFFFFFFFFFFFF8;
                  v385 = ((unint64_t)v215 + v216) & 0xFFFFFFFFFFFFFFF8;
                  *(_OWORD *)(v384 + 8) = *(_OWORD *)(v385 + 8);
                  v386 = (_OWORD *)((v384 + 31) & 0xFFFFFFFFFFFFFFF8);
                  v387 = (_OWORD *)((v385 + 31) & 0xFFFFFFFFFFFFFFF8);
                  *v386 = *v387;
                  *(_OWORD *)(((unint64_t)v386 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v387
                                                                                               + 23) & 0xFFFFFFFFFFFFF8);
                  v205 = 10;
                  goto LABEL_531;
                case 0xB:
                  *v196 = *v197;
                  v205 = 11;
                  goto LABEL_530;
                case 0xC:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v197, 1, v111))
                  {
                    memcpy(v196, v197, v1666);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1605 + 32))(v196, v197, v111);
                    __swift_storeEnumTagSinglePayload((uint64_t)v196, 0, 1, v111);
                  }
                  v388 = v196;
                  v389 = ((unint64_t)v196 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v390 = ((unint64_t)v197 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v391 = *(_OWORD *)v390;
                  v392 = *(_OWORD *)(v390 + 16);
                  *(_QWORD *)(v389 + 32) = *(_QWORD *)(v390 + 32);
                  *(_OWORD *)v389 = v391;
                  *(_OWORD *)(v389 + 16) = v392;
                  v393 = (_OWORD *)((v1655 + 40 + v389) & v1678);
                  v394 = (_OWORD *)((v1655 + 40 + v390) & v1678);
                  if (v1552 <= 0x7FFFFFFE)
                  {
                    v395 = *(_QWORD *)(((v1655 + 40 + v390) & v1678) + 8);
                    if (v395 >= 0xFFFFFFFF)
                      LODWORD(v395) = -1;
                    v217 = v1573;
                    if ((v395 + 1) <= 1)
                    {
                      v396 = (_OWORD *)(((unint64_t)v394 + 23) & 0xFFFFFFFFFFFFFFF8);
                      v397 = ((unint64_t)v396 + 23) & 0xFFFFFFFFFFFFFFF8;
                      goto LABEL_377;
                    }
LABEL_376:
                    memcpy(v393, v394, v1677);
                    goto LABEL_378;
                  }
                  v396 = (_OWORD *)(((unint64_t)v394 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v397 = ((unint64_t)v396 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v217 = v1573;
                  if (__swift_getEnumTagSinglePayload((v1655 + v397 + 33) & v1513, v1552, v1550))
                    goto LABEL_376;
LABEL_377:
                  *v393 = *v394;
                  v398 = (_OWORD *)(((unint64_t)v393 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v398 = *v396;
                  v399 = ((unint64_t)v398 + 23) & 0xFFFFFFFFFFFFFFF8;
                  *(_OWORD *)v399 = *(_OWORD *)v397;
                  *(_BYTE *)(v399 + 16) = *(_BYTE *)(v397 + 16);
                  v400 = ((unint64_t)v398 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v401 = ((unint64_t)v396 + 47) & 0xFFFFFFFFFFFFFFF8;
                  *(_QWORD *)v400 = *(_QWORD *)v401;
                  *(_BYTE *)(v400 + 8) = *(_BYTE *)(v401 + 8);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1642 + 32))((v1655 + 9 + v400) & v1513, (v1655 + 9 + v401) & v1513, v1550);
LABEL_378:
                  *(_QWORD *)(((unint64_t)v393 + v1677 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v394 + v1677 + 7) & 0xFFFFFFFFFFFFF8);
                  v205 = 12;
                  v196 = v388;
LABEL_531:
                  *((_BYTE *)v196 + v198) = v205;
                  *(_QWORD *)(((unint64_t)v196 + v217) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v197
                                                                                                 + v217) & 0xFFFFFFFFFFFFF8);
                  v114 = 1;
                  v113 = a1;
LABEL_532:
                  *((_BYTE *)v113 + v1684) = v114;
                  return a1;
                case 0xD:
                  v218 = v197;
                  v219 = v92;
                  v220 = *(_OWORD *)v218;
                  v221 = *((_OWORD *)v218 + 1);
                  v196[4] = v218[4];
                  *(_OWORD *)v196 = v220;
                  *((_OWORD *)v196 + 1) = v221;
                  v222 = (void *)(((unint64_t)v196 + v1653) & v1638);
                  v223 = v218;
                  v224 = (const void *)(((unint64_t)v218 + v1653) & v1638);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v224, 1, v111))
                  {
                    memcpy(v222, v224, v1666);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1605 + 32))(v222, v224, v111);
                    __swift_storeEnumTagSinglePayload((uint64_t)v222, 0, 1, v111);
                  }
                  v1668 = v196;
                  v402 = ((unint64_t)v222 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v403 = ((unint64_t)v224 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  *(_OWORD *)v402 = *(_OWORD *)v403;
                  *(_BYTE *)(v402 + 16) = *(_BYTE *)(v403 + 16);
                  v404 = (_BYTE *)((v1528 + v402) & v219);
                  v405 = (_BYTE *)((v1528 + v403) & v219);
                  if (v1565 >= 0x7FFFFFFF)
                  {
                    v410 = (const void *)((unint64_t)&v405[v1568] & v1628);
                    v217 = v1573;
                    v197 = v223;
                    if (__swift_getEnumTagSinglePayload((uint64_t)v410, v1560, v1572) <= 1)
                    {
                      v407 = v405 + 8;
                      v408 = v1568;
                      v409 = ~v1672;
LABEL_387:
                      *v404 = *v405;
                      memcpy(v404 + 8, v407, 0x69uLL);
                      v411 = (void *)((unint64_t)&v404[v408] & v409);
                      if (__swift_getEnumTagSinglePayload((uint64_t)v410, 1, v1572))
                      {
                        memcpy(v411, v410, v1648);
                      }
                      else
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v1554 + 32))(v411, v410, v1572);
                        __swift_storeEnumTagSinglePayload((uint64_t)v411, 0, 1, v1572);
                      }
                      v412 = v1649;
                      v197 = v223;
LABEL_708:
                      v404[v412] = v405[v412];
                      v205 = 13;
                      v198 = v1636;
                      goto LABEL_2196;
                    }
                  }
                  else
                  {
                    v406 = *(_QWORD *)(((v1528 + v403) & v219) + 0x10);
                    if (v406 >= 0xFFFFFFFF)
                      LODWORD(v406) = -1;
                    v217 = v1573;
                    v197 = v223;
                    if ((int)v406 - 1 < 0)
                    {
                      v407 = v405 + 8;
                      v408 = v1568;
                      v409 = ~v1672;
                      v410 = (const void *)((unint64_t)&v405[v1568] & v1628);
                      goto LABEL_387;
                    }
                  }
                  v412 = v1649;
                  memcpy(v404, v405, v1649);
                  goto LABEL_708;
                case 0xE:
                  *v196 = *v197;
                  v205 = 14;
                  goto LABEL_530;
                case 0xF:
                  *v196 = *v197;
                  v205 = 15;
                  goto LABEL_530;
                case 0x10:
                  v225 = *(_OWORD *)v197;
                  v226 = *((_OWORD *)v197 + 1);
                  v196[4] = v197[4];
                  *(_OWORD *)v196 = v225;
                  *((_OWORD *)v196 + 1) = v226;
                  v227 = (void *)(((unint64_t)v196 + v1653) & v1638);
                  v228 = (const void *)(((unint64_t)v197 + v1653) & v1638);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v228, 1, v111))
                  {
                    memcpy(v227, v228, v1666);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1605 + 32))(v227, v228, v111);
                    __swift_storeEnumTagSinglePayload((uint64_t)v227, 0, 1, v111);
                  }
                  v217 = v1573;
                  v413 = (_OWORD *)(((unint64_t)v227 + v1662) & 0xFFFFFFFFFFFFFFF8);
                  v414 = (_OWORD *)(((unint64_t)v228 + v1662) & 0xFFFFFFFFFFFFFFF8);
                  *v413 = *v414;
                  v415 = (_OWORD *)(((unint64_t)v413 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v416 = (_OWORD *)(((unint64_t)v414 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v415 = *v416;
                  v417 = (_OWORD *)(((unint64_t)v415 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v418 = (_OWORD *)(((unint64_t)v416 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v417 = *v418;
                  v419 = ((unint64_t)v417 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v420 = ((unint64_t)v418 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v421 = *(_OWORD *)v420;
                  v422 = *(_OWORD *)(v420 + 16);
                  *(_QWORD *)(v419 + 32) = *(_QWORD *)(v420 + 32);
                  *(_OWORD *)v419 = v421;
                  *(_OWORD *)(v419 + 16) = v422;
                  v423 = (v419 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v424 = (v420 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v425 = *(_OWORD *)v424;
                  v426 = *(_OWORD *)(v424 + 16);
                  *(_QWORD *)(v423 + 32) = *(_QWORD *)(v424 + 32);
                  *(_OWORD *)v423 = v425;
                  *(_OWORD *)(v423 + 16) = v426;
                  v427 = (v423 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v428 = (v424 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v429 = *(_OWORD *)v428;
                  v430 = *(_OWORD *)(v428 + 16);
                  *(_QWORD *)(v427 + 32) = *(_QWORD *)(v428 + 32);
                  *(_OWORD *)v427 = v429;
                  *(_OWORD *)(v427 + 16) = v430;
                  *(_BYTE *)(v427 + 40) = *(_BYTE *)(v428 + 40);
                  v205 = 16;
                  goto LABEL_531;
                case 0x11:
                  v229 = *(_OWORD *)v197;
                  v230 = *((_OWORD *)v197 + 1);
                  v196[4] = v197[4];
                  *(_OWORD *)v196 = v229;
                  *((_OWORD *)v196 + 1) = v230;
                  v231 = (void *)(((unint64_t)v196 + v1653) & v1638);
                  v232 = (const void *)(((unint64_t)v197 + v1653) & v1638);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v232, 1, v111))
                  {
                    memcpy(v231, v232, v1666);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1605 + 32))(v231, v232, v111);
                    __swift_storeEnumTagSinglePayload((uint64_t)v231, 0, 1, v111);
                  }
                  v431 = (_OWORD *)(((unint64_t)v231 + v1662) & 0xFFFFFFFFFFFFFFF8);
                  v432 = (_OWORD *)(((unint64_t)v232 + v1662) & 0xFFFFFFFFFFFFFFF8);
                  *v431 = *v432;
                  v433 = (_OWORD *)(((unint64_t)v431 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v434 = (_OWORD *)(((unint64_t)v432 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v433 = *v434;
                  v435 = (_OWORD *)(((unint64_t)v433 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v436 = (_OWORD *)(((unint64_t)v434 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v435 = *v436;
                  v437 = (_OWORD *)(((unint64_t)v435 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v438 = (_OWORD *)(((unint64_t)v436 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v437 = *v438;
                  v439 = ((unint64_t)v437 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v440 = ((unint64_t)v438 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v441 = *(_OWORD *)v440;
                  v442 = *(_OWORD *)(v440 + 16);
                  *(_QWORD *)(v439 + 32) = *(_QWORD *)(v440 + 32);
                  *(_OWORD *)v439 = v441;
                  *(_OWORD *)(v439 + 16) = v442;
                  v443 = (v439 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v444 = (v440 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v445 = *(_OWORD *)v444;
                  v446 = *(_OWORD *)(v444 + 16);
                  *(_QWORD *)(v443 + 32) = *(_QWORD *)(v444 + 32);
                  *(_OWORD *)v443 = v445;
                  *(_OWORD *)(v443 + 16) = v446;
                  v447 = (v443 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v448 = (v444 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v449 = *(_OWORD *)v448;
                  v450 = *(_OWORD *)(v448 + 16);
                  *(_QWORD *)(v447 + 32) = *(_QWORD *)(v448 + 32);
                  *(_OWORD *)v447 = v449;
                  *(_OWORD *)(v447 + 16) = v450;
                  v451 = (void *)((v1530 + v447) & v1616);
                  v452 = (_BYTE *)((v1530 + v448) & v1616);
                  if (v1654)
                  {
                    v453 = v1571;
                    if (v1564 >= v1571)
                    {
                      v454 = (v1530 + v448) & v1616;
                      v453 = v1564;
                      v455 = v1566;
                    }
                    else
                    {
                      v454 = (unint64_t)&v452[v1567] & v1619;
                      v455 = v1570;
                    }
                    v708 = __swift_getEnumTagSinglePayload(v454, v453, v455);
                    v217 = v1573;
                    v660 = v1652;
                  }
                  else
                  {
                    v660 = v1652;
                    v217 = v1573;
                    if (!v452[v1652])
                      goto LABEL_1747;
                    v661 = (v452[v1652] - 1) << v1671;
                    if (v1652 > 3)
                      v661 = 0;
                    if ((_DWORD)v1652)
                    {
                      if (v1652 <= 3)
                        v662 = v1652;
                      else
                        v662 = 4;
                      __asm { BR              X11 }
                    }
                    v708 = v661 + 1;
                  }
                  if (v708)
                  {
                    memcpy(v451, v452, v1651);
                    goto LABEL_1749;
                  }
LABEL_1747:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1562 + 32))(v451, v452, v1566);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1563 + 32))(((unint64_t)v451 + v1567) & v1619, (unint64_t)&v452[v1567] & v1619, v1570);
                  if (!v1654)
                    *((_BYTE *)v451 + v660) = 0;
LABEL_1749:
                  v1236 = (void *)(((unint64_t)v451 + v1549) & v1616);
                  v1237 = (_BYTE *)((unint64_t)&v452[v1549] & v1616);
                  v1238 = v1571;
                  if (v1654)
                  {
                    if (v1564 >= v1571)
                    {
                      v1239 = (uint64_t)v1237;
                      v1238 = v1564;
                      v1240 = v1566;
                    }
                    else
                    {
                      v1239 = (unint64_t)&v1237[v1567] & v1619;
                      v1240 = v1570;
                    }
                    v1243 = __swift_getEnumTagSinglePayload(v1239, v1238, v1240);
                  }
                  else
                  {
                    if (!v1237[v660])
                      goto LABEL_1931;
                    v1241 = (v1237[v660] - 1) << v1671;
                    if (v660 > 3)
                      v1241 = 0;
                    if ((_DWORD)v660)
                    {
                      if (v660 <= 3)
                        v1242 = v660;
                      else
                        v1242 = 4;
                      __asm { BR              X11 }
                    }
                    v1243 = v1241 + 1;
                  }
                  if (v1243)
                  {
                    memcpy(v1236, v1237, v1651);
                    goto LABEL_1933;
                  }
LABEL_1931:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1562 + 32))(v1236, v1237, v1566);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1563 + 32))(((unint64_t)v1236 + v1567) & v1619, (unint64_t)&v1237[v1567] & v1619, v1570);
                  if (!v1654)
                    *((_BYTE *)v1236 + v660) = 0;
LABEL_1933:
                  v205 = 17;
                  goto LABEL_531;
                case 0x12:
                  *v196 = *v197;
                  v205 = 18;
                  goto LABEL_530;
                case 0x13:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v197, 1, v111))
                  {
                    memcpy(v196, v197, v1666);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1605 + 32))(v196, v197, v111);
                    __swift_storeEnumTagSinglePayload((uint64_t)v196, 0, 1, v111);
                  }
                  v217 = v1573;
                  v456 = ((unint64_t)v196 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v457 = ((unint64_t)v197 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v458 = *(_OWORD *)v457;
                  v459 = *(_OWORD *)(v457 + 16);
                  *(_QWORD *)(v456 + 32) = *(_QWORD *)(v457 + 32);
                  *(_OWORD *)v456 = v458;
                  *(_OWORD *)(v456 + 16) = v459;
                  v460 = (_OWORD *)((v456 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v461 = (_OWORD *)((v457 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v460 = *v461;
                  v462 = (_OWORD *)(((unint64_t)v460 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v463 = (_OWORD *)(((unint64_t)v461 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v462 = *v463;
                  *(_QWORD *)(((unint64_t)v462 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v463
                                                                                               + 23) & 0xFFFFFFFFFFFFF8);
                  v205 = 19;
                  goto LABEL_531;
                case 0x14:
                  v1517 = v92;
                  if (__swift_getEnumTagSinglePayload((uint64_t)v197, 1, v111))
                  {
                    memcpy(v196, v197, v1666);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1605 + 32))(v196, v197, v111);
                    __swift_storeEnumTagSinglePayload((uint64_t)v196, 0, 1, v111);
                  }
                  v464 = ((unint64_t)v196 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v465 = ((unint64_t)v197 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v466 = *(_OWORD *)v465;
                  v467 = *(_OWORD *)(v465 + 16);
                  *(_QWORD *)(v464 + 32) = *(_QWORD *)(v465 + 32);
                  *(_OWORD *)v464 = v466;
                  *(_OWORD *)(v464 + 16) = v467;
                  v468 = (void *)((v1665 + 40 + v464) & v187);
                  v469 = (const void *)((v1665 + 40 + v465) & v187);
                  v217 = v1573;
                  v1668 = v196;
                  v1680 = v197;
                  if (v1558 == v1548)
                  {
                    v470 = v1650;
                    if (v1650 < 2)
                      goto LABEL_1245;
                    v471 = (v1665 + 40 + v465) & v187;
                    v472 = v111;
                  }
                  else
                  {
                    v473 = ((unint64_t)v469 + v1662) & 0xFFFFFFFFFFFFFFF8;
                    if (v1548 == 0x7FFFFFFF)
                    {
                      if (*(_QWORD *)(v473 + 24) >= 0xFFFFFFFFuLL)
                        goto LABEL_1245;
                      goto LABEL_1247;
                    }
                    v719 = (v1675
                          + ((((((((v473 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                            + 47) & 0xFFFFFFFFFFFFFFF8)) & v1517;
                    if (v1525 == v1548)
                    {
                      if (v1565 > 0x7FFFFFFE)
                      {
                        v992 = __swift_getEnumTagSinglePayload((v1568 + v719) & v1628, v1560, v1572);
                        if (v992 < 2)
                          goto LABEL_1245;
                        v722 = v992 - 1;
                      }
                      else
                      {
                        v720 = *(_QWORD *)(v719 + 16);
                        if (v720 >= 0xFFFFFFFF)
                          LODWORD(v720) = -1;
                        v721 = v720 - 1;
                        if (v721 < 0)
                          v721 = -1;
                        v722 = v721 + 1;
                      }
                      if (v722 < 2)
                      {
LABEL_1245:
                        if (__swift_getEnumTagSinglePayload((uint64_t)v469, 1, v111))
                        {
                          memcpy(v468, v469, v1666);
                        }
                        else
                        {
                          (*(void (**)(void *, const void *, uint64_t))(v1605 + 32))(v468, v469, v111);
                          __swift_storeEnumTagSinglePayload((uint64_t)v468, 0, 1, v111);
                        }
                        v993 = ((unint64_t)v468 + v1662) & 0xFFFFFFFFFFFFFFF8;
                        v994 = ((unint64_t)v469 + v1662) & 0xFFFFFFFFFFFFFFF8;
                        v995 = *(_OWORD *)v994;
                        v996 = *(_OWORD *)(v994 + 16);
                        *(_QWORD *)(v993 + 32) = *(_QWORD *)(v994 + 32);
                        *(_OWORD *)v993 = v995;
                        *(_OWORD *)(v993 + 16) = v996;
                        v997 = (_OWORD *)((v993 + 47) & 0xFFFFFFFFFFFFFFF8);
                        v998 = (_OWORD *)((v994 + 47) & 0xFFFFFFFFFFFFFFF8);
                        *v997 = *v998;
                        v999 = (_OWORD *)(((unint64_t)v997 + 23) & 0xFFFFFFFFFFFFFFF8);
                        v1000 = (_OWORD *)(((unint64_t)v998 + 23) & 0xFFFFFFFFFFFFFFF8);
                        *v999 = *v1000;
                        v1001 = ((unint64_t)v999 + 23) & 0xFFFFFFFFFFFFFFF8;
                        v1002 = ((unint64_t)v1000 + 23) & 0xFFFFFFFFFFFFFFF8;
                        v1003 = *(_OWORD *)v1002;
                        v1004 = *(_OWORD *)(v1002 + 16);
                        *(_QWORD *)(v1001 + 32) = *(_QWORD *)(v1002 + 32);
                        *(_OWORD *)v1001 = v1003;
                        *(_OWORD *)(v1001 + 16) = v1004;
                        v1005 = (v1001 + 47) & 0xFFFFFFFFFFFFFFF8;
                        v1006 = (v1002 + 47) & 0xFFFFFFFFFFFFFFF8;
                        v1007 = *(_OWORD *)v1006;
                        v1008 = *(_OWORD *)(v1006 + 16);
                        *(_QWORD *)(v1005 + 32) = *(_QWORD *)(v1006 + 32);
                        *(_OWORD *)v1005 = v1007;
                        *(_OWORD *)(v1005 + 16) = v1008;
                        v1009 = (_BYTE *)((v1675 + v1005) & v1517);
                        v1010 = (_BYTE *)((v1675 + v1006) & v1517);
                        if (v1565 >= 0x7FFFFFFF)
                        {
                          v1015 = (const void *)((unint64_t)&v1010[v1568] & v1628);
                          if (__swift_getEnumTagSinglePayload((uint64_t)v1015, v1560, v1572) <= 1)
                          {
                            v1012 = v1010 + 8;
                            v1013 = v1568;
                            v1014 = ~v1672;
                            goto LABEL_1256;
                          }
                        }
                        else
                        {
                          v1011 = *(_QWORD *)(((v1675 + v1006) & v1517) + 0x10);
                          if (v1011 >= 0xFFFFFFFF)
                            LODWORD(v1011) = -1;
                          if ((int)v1011 - 1 < 0)
                          {
                            v1012 = v1010 + 8;
                            v1013 = v1568;
                            v1014 = ~v1672;
                            v1015 = (const void *)((unint64_t)&v1010[v1568] & v1628);
LABEL_1256:
                            *v1009 = *v1010;
                            memcpy(v1009 + 8, v1012, 0x69uLL);
                            v1016 = (void *)((unint64_t)&v1009[v1013] & v1014);
                            if (__swift_getEnumTagSinglePayload((uint64_t)v1015, 1, v1572))
                            {
                              memcpy(v1016, v1015, v1648);
                            }
                            else
                            {
                              (*(void (**)(void *, const void *, uint64_t))(v1554 + 32))(v1016, v1015, v1572);
                              __swift_storeEnumTagSinglePayload((uint64_t)v1016, 0, 1, v1572);
                            }
                            v217 = v1573;
                            v1017 = v1649;
LABEL_1261:
                            v1018 = (void *)((unint64_t)&v1009[v1646 + v1017] & v1616);
                            v1019 = (_BYTE *)((unint64_t)&v1010[v1646 + v1017] & v1616);
                            v198 = v1636;
                            v1020 = v1571;
                            if (v1654)
                            {
                              if (v1564 >= v1571)
                              {
                                v1021 = (uint64_t)v1019;
                                v1020 = v1564;
                                v1022 = v1566;
                              }
                              else
                              {
                                v1021 = (unint64_t)&v1019[v1567] & v1619;
                                v1022 = v1570;
                              }
                              v1025 = __swift_getEnumTagSinglePayload(v1021, v1020, v1022);
                            }
                            else
                            {
                              if (!v1019[v1652])
                                goto LABEL_2047;
                              v1023 = (v1019[v1652] - 1) << v1671;
                              if (v1652 > 3)
                                v1023 = 0;
                              if ((_DWORD)v1652)
                              {
                                if (v1652 <= 3)
                                  v1024 = v1652;
                                else
                                  v1024 = 4;
                                __asm { BR              X11 }
                              }
                              v1025 = v1023 + 1;
                            }
                            if (v1025)
                            {
                              memcpy(v1018, v1019, v1651);
                              v197 = v1680;
LABEL_2049:
                              v1422 = (_QWORD *)(((unint64_t)v468 + v1538) & 0xFFFFFFFFFFFFFFF8);
                              v1423 = (_QWORD *)(((unint64_t)v469 + v1538) & 0xFFFFFFFFFFFFFFF8);
                              *v1422 = *v1423;
                              v1424 = (_BYTE *)(((unint64_t)v1422 + v1543) & v1517);
                              v1425 = (_BYTE *)(((unint64_t)v1423 + v1543) & v1517);
                              if (v1565 >= 0x7FFFFFFF)
                              {
                                v1431 = (const void *)((unint64_t)&v1425[v1568] & v1628);
                                v1427 = v1572;
                                if (__swift_getEnumTagSinglePayload((uint64_t)v1431, v1560, v1572) <= 1)
                                {
                                  v1428 = v1425 + 8;
                                  v1429 = v1568;
                                  v1430 = ~v1672;
                                  goto LABEL_2056;
                                }
                              }
                              else
                              {
                                v1426 = *(_QWORD *)((((unint64_t)v1423 + v1543) & v1517) + 0x10);
                                if (v1426 >= 0xFFFFFFFF)
                                  LODWORD(v1426) = -1;
                                v1427 = v1572;
                                if ((int)v1426 - 1 < 0)
                                {
                                  v1428 = v1425 + 8;
                                  v1429 = v1568;
                                  v1430 = ~v1672;
                                  v1431 = (const void *)((unint64_t)&v1425[v1568] & v1628);
LABEL_2056:
                                  *v1424 = *v1425;
                                  memcpy(v1424 + 8, v1428, 0x69uLL);
                                  v1432 = (void *)((unint64_t)&v1424[v1429] & v1430);
                                  if (__swift_getEnumTagSinglePayload((uint64_t)v1431, 1, v1427))
                                  {
                                    memcpy(v1432, v1431, v1648);
                                  }
                                  else
                                  {
                                    (*(void (**)(void *, const void *, uint64_t))(v1554 + 32))(v1432, v1431, v1427);
                                    __swift_storeEnumTagSinglePayload((uint64_t)v1432, 0, 1, v1427);
                                  }
                                  v205 = 20;
                                  goto LABEL_2130;
                                }
                              }
                              memcpy(v1424, v1425, v1649);
                              v205 = 20;
LABEL_2196:
                              v196 = v1668;
                              goto LABEL_531;
                            }
LABEL_2047:
                            (*(void (**)(void *, _BYTE *, uint64_t))(v1562 + 32))(v1018, v1019, v1566);
                            (*(void (**)(unint64_t, unint64_t, uint64_t))(v1563 + 32))(((unint64_t)v1018 + v1567) & v1619, (unint64_t)&v1019[v1567] & v1619, v1570);
                            v197 = v1680;
                            if (!v1654)
                              *((_BYTE *)v1018 + v1652) = 0;
                            goto LABEL_2049;
                          }
                        }
                        v1017 = v1649;
                        memcpy(v1009, v1010, v1649);
                        goto LABEL_1261;
                      }
LABEL_1247:
                      memcpy(v468, v469, v1524);
                      goto LABEL_2049;
                    }
                    if (v1654 < 2)
                      goto LABEL_1245;
                    v471 = (v1547 + v719) & v1616;
                    v470 = v1571;
                    if (v1564 >= v1571)
                    {
                      v470 = v1564;
                      v472 = v1566;
                    }
                    else
                    {
                      v471 = (v1567 + v471) & v1619;
                      v472 = v1570;
                    }
                  }
                  if (__swift_getEnumTagSinglePayload(v471, v470, v472) < 2)
                    goto LABEL_1245;
                  goto LABEL_1247;
                case 0x15:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v197, 1, v111))
                  {
                    memcpy(v196, v197, v1666);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1605 + 32))(v196, v197, v111);
                    __swift_storeEnumTagSinglePayload((uint64_t)v196, 0, 1, v111);
                  }
                  v217 = v1573;
                  v474 = ((unint64_t)v196 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v475 = ((unint64_t)v197 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v476 = *(_OWORD *)v475;
                  v477 = *(_OWORD *)(v475 + 16);
                  *(_QWORD *)(v474 + 32) = *(_QWORD *)(v475 + 32);
                  *(_OWORD *)v474 = v476;
                  *(_OWORD *)(v474 + 16) = v477;
                  v478 = (v474 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v479 = (v475 + 47) & 0xFFFFFFFFFFFFFFF8;
                  *(_OWORD *)v478 = *(_OWORD *)v479;
                  *(_BYTE *)(v478 + 16) = *(_BYTE *)(v479 + 16);
                  v205 = 21;
                  goto LABEL_531;
                case 0x16:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v197, 1, v111))
                  {
                    memcpy(v196, v197, v1666);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1605 + 32))(v196, v197, v111);
                    __swift_storeEnumTagSinglePayload((uint64_t)v196, 0, 1, v111);
                  }
                  v1519 = v92;
                  v480 = v196;
                  v481 = ((unint64_t)v196 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v1680 = v197;
                  v482 = ((unint64_t)v197 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v483 = *(_OWORD *)v482;
                  v484 = *(_OWORD *)(v482 + 16);
                  *(_QWORD *)(v481 + 32) = *(_QWORD *)(v482 + 32);
                  *(_OWORD *)v481 = v483;
                  *(_OWORD *)(v481 + 16) = v484;
                  v485 = (_OWORD *)((v481 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v486 = (_OWORD *)((v482 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v485 = *v486;
                  v487 = (_QWORD *)(((unint64_t)v485 + 23) & 0xFFFFFFFFFFFFF8);
                  v488 = (_QWORD *)(((unint64_t)v486 + 23) & 0xFFFFFFFFFFFFF8);
                  *v487 = *v488;
                  v489 = (_OWORD *)(((unint64_t)v487 + 15) & 0xFFFFFFFFFFFFFFF8);
                  v490 = (_OWORD *)(((unint64_t)v488 + 15) & 0xFFFFFFFFFFFFFFF8);
                  *v489 = *v490;
                  v491 = (_OWORD *)(((unint64_t)v489 + v1602) & v1678);
                  v492 = (_OWORD *)(((unint64_t)v490 + v1602) & v1678);
                  if (v1552 > 0x7FFFFFFE)
                  {
                    v494 = (_OWORD *)(((unint64_t)v492 + 23) & 0xFFFFFFFFFFFFFFF8);
                    v495 = ((unint64_t)v494 + 23) & 0xFFFFFFFFFFFFFFF8;
                    if (!__swift_getEnumTagSinglePayload((v1655 + v495 + 33) & v1513, v1552, v1550))
                      goto LABEL_417;
                  }
                  else
                  {
                    v493 = *(_QWORD *)((((unint64_t)v490 + v1602) & v1678) + 8);
                    if (v493 >= 0xFFFFFFFF)
                      LODWORD(v493) = -1;
                    if ((v493 + 1) <= 1)
                    {
                      v494 = (_OWORD *)(((unint64_t)v492 + 23) & 0xFFFFFFFFFFFFFFF8);
                      v495 = ((unint64_t)v494 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_417:
                      *v491 = *v492;
                      v497 = (_OWORD *)(((unint64_t)v491 + 23) & 0xFFFFFFFFFFFFFFF8);
                      *v497 = *v494;
                      v498 = ((unint64_t)v497 + 23) & 0xFFFFFFFFFFFFFFF8;
                      *(_OWORD *)v498 = *(_OWORD *)v495;
                      *(_BYTE *)(v498 + 16) = *(_BYTE *)(v495 + 16);
                      v499 = ((unint64_t)v497 + 47) & 0xFFFFFFFFFFFFFFF8;
                      v500 = ((unint64_t)v494 + 47) & 0xFFFFFFFFFFFFFFF8;
                      *(_QWORD *)v499 = *(_QWORD *)v500;
                      *(_BYTE *)(v499 + 8) = *(_BYTE *)(v500 + 8);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1642 + 32))((v1655 + 9 + v499) & v1513, (v1655 + 9 + v500) & v1513, v1550);
                      v496 = v1677;
LABEL_418:
                      *((_BYTE *)v491 + v496) = *((_BYTE *)v492 + v496);
                      v501 = ((unint64_t)v491 + v496) & 0xFFFFFFFFFFFFFFF8;
                      v502 = ((unint64_t)v492 + v496) & 0xFFFFFFFFFFFFFFF8;
                      *(_OWORD *)(v501 + 8) = *(_OWORD *)(v502 + 8);
                      v503 = (void *)((v1533 + v501) & v1616);
                      v504 = (_BYTE *)((v1533 + v502) & v1616);
                      if (v1654)
                      {
                        v505 = v1571;
                        if (v1564 >= v1571)
                        {
                          v506 = (v1533 + v502) & v1616;
                          v505 = v1564;
                          v507 = v1566;
                        }
                        else
                        {
                          v506 = (unint64_t)&v504[v1567] & v1619;
                          v507 = v1570;
                        }
                        v709 = __swift_getEnumTagSinglePayload(v506, v505, v507);
                      }
                      else
                      {
                        if (!v504[v1652])
                          goto LABEL_1765;
                        v663 = (v504[v1652] - 1) << v1671;
                        if (v1652 > 3)
                          v663 = 0;
                        if ((_DWORD)v1652)
                        {
                          if (v1652 <= 3)
                            v664 = v1652;
                          else
                            v664 = 4;
                          __asm { BR              X11 }
                        }
                        v709 = v663 + 1;
                      }
                      if (v709)
                      {
                        memcpy(v503, v504, v1651);
                        goto LABEL_1767;
                      }
LABEL_1765:
                      (*(void (**)(void *, _BYTE *, uint64_t))(v1562 + 32))(v503, v504, v1566);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1563 + 32))(((unint64_t)v503 + v1567) & v1619, (unint64_t)&v504[v1567] & v1619, v1570);
                      if (!v1654)
                        *((_BYTE *)v503 + v1652) = 0;
LABEL_1767:
                      v1244 = (_QWORD *)(((unint64_t)v503 + v1661) & v1523);
                      v1245 = (uint64_t *)((unint64_t)&v504[v1661] & v1523);
                      if ((v1571 & 0x80000000) != 0)
                      {
                        v1248 = v1619;
                        v1247 = __swift_getEnumTagSinglePayload(((unint64_t)v1245 + v1553) & v1619, v1571, v1570);
                      }
                      else
                      {
                        v1246 = *v1245;
                        if ((unint64_t)*v1245 >= 0xFFFFFFFF)
                          LODWORD(v1246) = -1;
                        v1247 = v1246 + 1;
                        v1248 = v1619;
                      }
                      if (v1247)
                      {
                        memcpy(v1244, v1245, v1643);
                      }
                      else
                      {
                        *v1244 = *v1245;
                        (*(void (**)(unint64_t, unint64_t, uint64_t))(v1563 + 32))(((unint64_t)v1244 + v1553) & v1248, ((unint64_t)v1245 + v1553) & v1248, v1570);
                      }
                      v1249 = (_BYTE *)(((unint64_t)v1244 + v1603) & v1519);
                      v1250 = (_QWORD *)(((unint64_t)v1245 + v1603) & v1519);
                      if (v1565 >= 0x7FFFFFFF)
                      {
                        v1255 = (const void *)(((unint64_t)v1250 + v1568) & v1628);
                        if (__swift_getEnumTagSinglePayload((uint64_t)v1255, v1560, v1572) <= 1)
                        {
                          v1252 = v1250 + 1;
                          v1253 = v1568;
                          v1254 = ~v1672;
                          goto LABEL_1782;
                        }
                      }
                      else
                      {
                        v1251 = v1250[2];
                        if (v1251 >= 0xFFFFFFFF)
                          LODWORD(v1251) = -1;
                        if ((int)v1251 - 1 < 0)
                        {
                          v1252 = v1250 + 1;
                          v1253 = v1568;
                          v1254 = ~v1672;
                          v1255 = (const void *)(((unint64_t)v1250 + v1568) & v1628);
LABEL_1782:
                          *v1249 = *(_BYTE *)v1250;
                          memcpy(v1249 + 8, v1252, 0x69uLL);
                          v1256 = (void *)((unint64_t)&v1249[v1253] & v1254);
                          if (__swift_getEnumTagSinglePayload((uint64_t)v1255, 1, v1572))
                          {
                            memcpy(v1256, v1255, v1648);
                          }
                          else
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v1554 + 32))(v1256, v1255, v1572);
                            __swift_storeEnumTagSinglePayload((uint64_t)v1256, 0, 1, v1572);
                          }
                          v1257 = v1649;
LABEL_1787:
                          v1258 = (unint64_t)&v1249[v1673 + v1257];
                          v1259 = (void *)(v1258 & v1521);
                          v1260 = (unint64_t)v1250 + v1673 + v1257;
                          v1261 = (const void *)(v1260 & v1521);
                          if (v1558 < 0x7FFFFFFF)
                          {
                            if (*(_QWORD *)((((unint64_t)v1261 + v1662) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                              goto LABEL_1789;
                          }
                          else if (__swift_getEnumTagSinglePayload(v1260 & v1521, v1650, v1613) >= 2)
                          {
LABEL_1789:
                            memcpy(v1259, v1261, v1551);
                            v1262 = v1551;
                            goto LABEL_1796;
                          }
                          if (__swift_getEnumTagSinglePayload((uint64_t)v1261, 1, v1613))
                          {
                            memcpy(v1259, v1261, v1666);
                          }
                          else
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v1605 + 32))(v1259, v1261, v1613);
                            __swift_storeEnumTagSinglePayload((uint64_t)v1259, 0, 1, v1613);
                          }
                          v1263 = ((unint64_t)v1259 + v1662) & 0xFFFFFFFFFFFFFFF8;
                          v1264 = ((unint64_t)v1261 + v1662) & 0xFFFFFFFFFFFFFFF8;
                          v1265 = *(_OWORD *)v1264;
                          v1266 = *(_OWORD *)(v1264 + 16);
                          *(_QWORD *)(v1263 + 32) = *(_QWORD *)(v1264 + 32);
                          *(_OWORD *)v1263 = v1265;
                          *(_OWORD *)(v1263 + 16) = v1266;
                          v1267 = (v1263 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1268 = (v1264 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1269 = *(_OWORD *)v1268;
                          v1270 = *(_OWORD *)(v1268 + 16);
                          *(_QWORD *)(v1267 + 32) = *(_QWORD *)(v1268 + 32);
                          *(_OWORD *)v1267 = v1269;
                          *(_OWORD *)(v1267 + 16) = v1270;
                          *(_OWORD *)((v1267 + 47) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v1268 + 47) & 0xFFFFFFFFFFFFF8);
                          v1262 = v1551;
                          if (v1650)
                            v1262 = ((((((v1600 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                                  + 16;
LABEL_1796:
                          v1271 = (v1258 | v1682) + v1262;
                          v1272 = (void *)(v1271 & v1521);
                          v1273 = (v1260 | v1682) + v1262;
                          v1274 = (const void *)(v1273 & v1521);
                          if (v1558 < 0x7FFFFFFF)
                          {
                            if (*(_QWORD *)((((unint64_t)v1274 + v1662) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                              goto LABEL_1798;
                          }
                          else if (__swift_getEnumTagSinglePayload(v1273 & v1521, v1650, v1613) >= 2)
                          {
LABEL_1798:
                            memcpy(v1272, v1274, v1551);
                            v1275 = v1551;
                            goto LABEL_1805;
                          }
                          if (__swift_getEnumTagSinglePayload((uint64_t)v1274, 1, v1613))
                          {
                            memcpy(v1272, v1274, v1666);
                          }
                          else
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v1605 + 32))(v1272, v1274, v1613);
                            __swift_storeEnumTagSinglePayload((uint64_t)v1272, 0, 1, v1613);
                          }
                          v1276 = ((unint64_t)v1272 + v1662) & 0xFFFFFFFFFFFFFFF8;
                          v1277 = ((unint64_t)v1274 + v1662) & 0xFFFFFFFFFFFFFFF8;
                          v1278 = *(_OWORD *)v1277;
                          v1279 = *(_OWORD *)(v1277 + 16);
                          *(_QWORD *)(v1276 + 32) = *(_QWORD *)(v1277 + 32);
                          *(_OWORD *)v1276 = v1278;
                          *(_OWORD *)(v1276 + 16) = v1279;
                          v1280 = (v1276 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1281 = (v1277 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1282 = *(_OWORD *)v1281;
                          v1283 = *(_OWORD *)(v1281 + 16);
                          *(_QWORD *)(v1280 + 32) = *(_QWORD *)(v1281 + 32);
                          *(_OWORD *)v1280 = v1282;
                          *(_OWORD *)(v1280 + 16) = v1283;
                          *(_OWORD *)((v1280 + 47) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v1281 + 47) & 0xFFFFFFFFFFFFF8);
                          v1275 = v1551;
                          if (v1650)
                            v1275 = ((((((v1600 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                                  + 16;
LABEL_1805:
                          v1284 = (char *)(((v1271 | v1682) + v1275) & v1521);
                          v1285 = (char *)(((v1273 | v1682) + v1275) & v1521);
                          if (v1558 < 0x7FFFFFFF)
                          {
                            v1286 = v1613;
                            v196 = v480;
                            if (*(_QWORD *)(((unint64_t)&v1285[v1662] & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                            {
LABEL_1807:
                              memcpy(v1284, v1285, v1551);
                              v1287 = v1523;
                              if (!v1650)
                                goto LABEL_1816;
                              goto LABEL_1815;
                            }
                          }
                          else
                          {
                            v1286 = v1613;
                            v196 = v480;
                            if (__swift_getEnumTagSinglePayload((uint64_t)v1285, v1650, v1613) >= 2)
                              goto LABEL_1807;
                          }
                          v1287 = v1523;
                          if (__swift_getEnumTagSinglePayload((uint64_t)v1285, 1, v1286))
                          {
                            memcpy(v1284, v1285, v1666);
                          }
                          else
                          {
                            (*(void (**)(char *, char *, uint64_t))(v1605 + 32))(v1284, v1285, v1286);
                            __swift_storeEnumTagSinglePayload((uint64_t)v1284, 0, 1, v1286);
                          }
                          v1288 = (unint64_t)&v1284[v1662] & 0xFFFFFFFFFFFFFFF8;
                          v1289 = (unint64_t)&v1285[v1662] & 0xFFFFFFFFFFFFFFF8;
                          v1290 = *(_OWORD *)v1289;
                          v1291 = *(_OWORD *)(v1289 + 16);
                          *(_QWORD *)(v1288 + 32) = *(_QWORD *)(v1289 + 32);
                          *(_OWORD *)v1288 = v1290;
                          *(_OWORD *)(v1288 + 16) = v1291;
                          v1292 = (v1288 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1293 = (v1289 + 47) & 0xFFFFFFFFFFFFFFF8;
                          v1294 = *(_OWORD *)v1293;
                          v1295 = *(_OWORD *)(v1293 + 16);
                          *(_QWORD *)(v1292 + 32) = *(_QWORD *)(v1293 + 32);
                          *(_OWORD *)v1292 = v1294;
                          *(_OWORD *)(v1292 + 16) = v1295;
                          *(_OWORD *)((v1292 + 47) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v1293 + 47) & 0xFFFFFFFFFFFFF8);
                          if (!v1650)
                            goto LABEL_1816;
                          v1551 = ((((((v1600 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                                + 16;
LABEL_1815:
                          v195 = v1600;
LABEL_1816:
                          *(_QWORD *)&v1284[v1551] = *(_QWORD *)&v1285[v1551];
                          v1296 = v1581
                                + ((v1601
                                  + ((v1601
                                    + ((v1658
                                      + ((v1603
                                        + ((v1661
                                          + ((v1659
                                            + ((((((v1602
                                                  + ((((((((v195 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                                                      + 23) & 0xFFFFFFFFFFFFFFF8)
                                                    + 15) & 0xFFFFFFFFFFFFFFF8)) & v1678)
                                                + v1677) & 0xFFFFFFFFFFFFFFF8)
                                              + 23) & 0xFFFFFFFFFFFFFFF8)) & v1616)) & v1287)) & v1519)) & v1521)) & v1521)) & v1521);
                          if (v1598 > v1296)
                            v1296 = v1649 + ((v1672 + 8) & ~v1674);
                          if (v1296 <= v1585)
                            v1296 = v1585;
                          if (v1296 <= v1599)
                            v1296 = v1599;
                          if (v1296 <= v1584)
                            v1296 = v1584;
                          if (v1296 <= v1583)
                            v1296 = v1583;
                          if (v1296 <= v1582)
                            v1296 = v1582;
                          if (v1296 <= v1586)
                            v1296 = (((((v1676 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                  + 16;
                          if (v1296 <= v1587)
                            v1296 = v1587;
                          if (v1296 <= v1577)
                            v1296 = v1577;
                          if (v1296 <= v63)
                            v1296 = v63;
                          if (v1296 <= v1576)
                            v1296 = v1576;
                          if (v1296 <= v1579)
                            v1296 = v1579;
                          if (v1296 <= v1578)
                            v1296 = v1578;
                          if (v1296 <= v1656)
                            v1296 = v1656;
                          if (v1296 <= v1580)
                            v1296 = v1580;
                          if (v1296 <= v1598)
                            v1296 = v1649 + ((v1672 + 8) & ~v1674);
                          if (v1296 <= v1575)
                            v1296 = v1575;
                          if (v1296 <= v1588)
                            v1296 = ((v1676 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
                          if (v1296 <= v1589)
                            v1296 = v1589;
                          if (v1296 <= v1590)
                            v1296 = v1590;
                          if (v1296 <= v1591)
                            v1296 = v1591;
                          if (v1296 <= v1593)
                            v1296 = v1593;
                          if (v1296 <= v1592)
                            v1296 = v1592;
                          if (v1296 <= v1594)
                            v1296 = v1594;
                          if (v1296 <= v1595)
                            v1296 = v1595;
                          if (v1296 <= v1520)
                            v1296 = v1520;
                          if (v1296 <= v1596)
                            v1296 = v1596;
                          if (v1296 <= v1597)
                            v1296 = v1597;
                          if (v1296 <= v1624)
                            v1296 = v1624;
                          if (v1296 <= v1676)
                            v1296 = v1676;
                          if (v1296 <= v1622)
                            v1296 = v1622;
                          if (v1296 <= v1626)
                            v1296 = v1626;
                          if (v1296 <= v1640)
                            v1296 = v1640;
                          if (v1296 <= 8)
                            v198 = 8;
                          else
                            v198 = v1296;
                          v205 = 22;
                          goto LABEL_1886;
                        }
                      }
                      v1257 = v1649;
                      memcpy(v1249, v1250, v1649);
                      goto LABEL_1787;
                    }
                  }
                  v496 = v1677;
                  memcpy(v491, v492, v1677);
                  goto LABEL_418;
                case 0x17:
                  *v196 = *v197;
                  v233 = (_BYTE *)(((unint64_t)v196 + v1674 + 8) & v92);
                  v234 = (_BYTE *)(((unint64_t)v197 + v1674 + 8) & v92);
                  *v233 = *v234;
                  memcpy(v233 + 8, v234 + 8, 0x69uLL);
                  v235 = (void *)((unint64_t)&v233[v1568] & v1628);
                  v236 = (const void *)((unint64_t)&v234[v1568] & v1628);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v236, 1, v1572))
                  {
                    memcpy(v235, v236, v1648);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1554 + 32))(v235, v236, v1572);
                    __swift_storeEnumTagSinglePayload((uint64_t)v235, 0, 1, v1572);
                  }
                  v205 = 23;
                  goto LABEL_530;
                case 0x18:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v197, 1, v111))
                  {
                    memcpy(v196, v197, v1666);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1605 + 32))(v196, v197, v111);
                    __swift_storeEnumTagSinglePayload((uint64_t)v196, 0, 1, v111);
                  }
                  v217 = v1573;
                  v508 = ((unint64_t)v196 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v509 = ((unint64_t)v197 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v510 = *(_OWORD *)v509;
                  v511 = *(_OWORD *)(v509 + 16);
                  *(_QWORD *)(v508 + 32) = *(_QWORD *)(v509 + 32);
                  *(_OWORD *)v508 = v510;
                  *(_OWORD *)(v508 + 16) = v511;
                  v512 = (_QWORD *)((v508 + 47) & 0xFFFFFFFFFFFFF8);
                  v513 = (_QWORD *)((v509 + 47) & 0xFFFFFFFFFFFFF8);
                  *v512 = *v513;
                  *(_OWORD *)(((unint64_t)v512 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v513
                                                                                               + 15) & 0xFFFFFFFFFFFFF8);
                  v205 = 24;
                  goto LABEL_531;
                case 0x19:
                  *v196 = *v197;
                  v205 = 25;
                  goto LABEL_530;
                case 0x1A:
                  *v196 = *v197;
                  v205 = 26;
                  goto LABEL_530;
                case 0x1B:
                  *v196 = *v197;
                  v205 = 27;
                  goto LABEL_530;
                case 0x1C:
                  *v196 = *v197;
                  v205 = 28;
                  goto LABEL_530;
                case 0x1D:
                  v237 = *(_OWORD *)v197;
                  v238 = *((_OWORD *)v197 + 1);
                  v196[4] = v197[4];
                  *(_OWORD *)v196 = v237;
                  *((_OWORD *)v196 + 1) = v238;
                  v239 = (char *)(((unint64_t)v196 + v1653) & v1638);
                  v240 = (const void *)(((unint64_t)v197 + v1653) & v1638);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v240, 1, v111))
                  {
                    v241 = v1666;
                    memcpy(v239, v240, v1666);
                    v217 = v1573;
                  }
                  else
                  {
                    (*(void (**)(char *, const void *, uint64_t))(v1605 + 32))(v239, v240, v111);
                    __swift_storeEnumTagSinglePayload((uint64_t)v239, 0, 1, v111);
                    v217 = v1573;
                    v241 = v1666;
                  }
                  v514 = &v239[v241];
                  *v514 = *((_BYTE *)v240 + v241);
                  v514[1] = *((_BYTE *)v240 + v241 + 1);
                  v515 = (unint64_t)&v239[v241 + 9] & 0xFFFFFFFFFFFFFFF8;
                  v516 = ((unint64_t)v240 + v241 + 9) & 0xFFFFFFFFFFFFFFF8;
                  *(_OWORD *)v515 = *(_OWORD *)v516;
                  *(_BYTE *)(v515 + 16) = *(_BYTE *)(v516 + 16);
                  v205 = 29;
                  goto LABEL_531;
                case 0x1E:
                  v242 = *(_OWORD *)v197;
                  v243 = *((_OWORD *)v197 + 1);
                  v196[4] = v197[4];
                  *(_OWORD *)v196 = v242;
                  *((_OWORD *)v196 + 1) = v243;
                  *((_BYTE *)v196 + 40) = *((_BYTE *)v197 + 40);
                  *((_BYTE *)v196 + 41) = *((_BYTE *)v197 + 41);
                  *((_BYTE *)v196 + 42) = *((_BYTE *)v197 + 42);
                  *((_BYTE *)v196 + 43) = *((_BYTE *)v197 + 43);
                  v244 = (_OWORD *)(((unint64_t)v196 + 51) & 0xFFFFFFFFFFFFFFF8);
                  v245 = (_OWORD *)(((unint64_t)v197 + 51) & 0xFFFFFFFFFFFFFFF8);
                  *v244 = *v245;
                  v246 = (_OWORD *)(((unint64_t)v244 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v247 = (_OWORD *)(((unint64_t)v245 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v246 = *v247;
                  v248 = (void *)(((unint64_t)v246 + v1644) & v1638);
                  v249 = (const void *)(((unint64_t)v247 + v1644) & v1638);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v249, 1, v111))
                  {
                    memcpy(v248, v249, v1666);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1605 + 32))(v248, v249, v111);
                    __swift_storeEnumTagSinglePayload((uint64_t)v248, 0, 1, v111);
                  }
                  v205 = 30;
                  goto LABEL_530;
                case 0x1F:
                  *v196 = *v197;
                  v205 = 31;
                  goto LABEL_530;
                case 0x20:
                  *(_OWORD *)v196 = *(_OWORD *)v197;
                  v250 = ((unint64_t)v196 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v251 = ((unint64_t)v197 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v252 = *(_OWORD *)v251;
                  v253 = *(_OWORD *)(v251 + 16);
                  *(_QWORD *)(v250 + 32) = *(_QWORD *)(v251 + 32);
                  *(_OWORD *)v250 = v252;
                  *(_OWORD *)(v250 + 16) = v253;
                  v254 = (void *)((v1653 + v250) & v1638);
                  v255 = (const void *)((v1653 + v251) & v1638);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v255, 1, v111))
                  {
                    memcpy(v254, v255, v1666);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1605 + 32))(v254, v255, v111);
                    __swift_storeEnumTagSinglePayload((uint64_t)v254, 0, 1, v111);
                  }
                  v205 = 32;
                  goto LABEL_530;
                case 0x21:
                  if (v1654)
                  {
                    v256 = v1571;
                    if (v1564 >= v1571)
                    {
                      v257 = (uint64_t)v197;
                      v256 = v1564;
                      v258 = v1566;
                    }
                    else
                    {
                      v257 = ((unint64_t)v197 + v1567) & v1619;
                      v258 = v1570;
                    }
                    v705 = __swift_getEnumTagSinglePayload(v257, v256, v258);
                  }
                  else
                  {
                    if (!*((_BYTE *)v197 + v1652))
                      goto LABEL_1338;
                    v517 = (*((unsigned __int8 *)v197 + v1652) - 1) << v1671;
                    if (v1652 > 3)
                      v517 = 0;
                    if ((_DWORD)v1652)
                    {
                      if (v1652 <= 3)
                        v518 = v1652;
                      else
                        v518 = 4;
                      __asm { BR              X11 }
                    }
                    v705 = v517 + 1;
                  }
                  if (v705)
                  {
                    memcpy(v196, v197, v1651);
                    goto LABEL_1340;
                  }
LABEL_1338:
                  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1562 + 32))(v196, v197, v1566);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1563 + 32))(((unint64_t)v196 + v1567) & v1619, ((unint64_t)v197 + v1567) & v1619, v1570);
                  if (!v1654)
                    *((_BYTE *)v196 + v1652) = 0;
LABEL_1340:
                  v1055 = ((unint64_t)v196 + v1555) & 0xFFFFFFFFFFFFFFF8;
                  v1056 = ((unint64_t)v197 + v1555) & 0xFFFFFFFFFFFFFFF8;
                  v1057 = *(_OWORD *)v1056;
                  v1058 = *(_OWORD *)(v1056 + 16);
                  *(_QWORD *)(v1055 + 32) = *(_QWORD *)(v1056 + 32);
                  *(_OWORD *)v1055 = v1057;
                  *(_OWORD *)(v1055 + 16) = v1058;
                  v1059 = (void *)((v1653 + v1055) & v1638);
                  v1060 = (const void *)((v1653 + v1056) & v1638);
                  v217 = v1573;
                  if (__swift_getEnumTagSinglePayload((uint64_t)v1060, 1, v111))
                  {
                    memcpy(v1059, v1060, v1666);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1605 + 32))(v1059, v1060, v111);
                    __swift_storeEnumTagSinglePayload((uint64_t)v1059, 0, 1, v111);
                  }
                  v1061 = (_OWORD *)(((unint64_t)v1059 + v1662) & 0xFFFFFFFFFFFFFFF8);
                  v1062 = (_OWORD *)(((unint64_t)v1060 + v1662) & 0xFFFFFFFFFFFFFFF8);
                  *v1061 = *v1062;
                  *(_OWORD *)(((unint64_t)v1061 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v1062
                                                                                                + 23) & 0xFFFFFFFFFFFFF8);
                  v205 = 33;
                  goto LABEL_531;
                case 0x22:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v197, 1, v111))
                  {
                    memcpy(v196, v197, v1666);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1605 + 32))(v196, v197, v111);
                    __swift_storeEnumTagSinglePayload((uint64_t)v196, 0, 1, v111);
                  }
                  v519 = v196;
                  v520 = ((unint64_t)v196 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v521 = ((unint64_t)v197 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v522 = *(_OWORD *)v521;
                  v523 = *(_OWORD *)(v521 + 16);
                  *(_QWORD *)(v520 + 32) = *(_QWORD *)(v521 + 32);
                  *(_OWORD *)v520 = v522;
                  *(_OWORD *)(v520 + 16) = v523;
                  v524 = (_BYTE *)((v1675 + v520) & v92);
                  v525 = (_BYTE *)((v1675 + v521) & v92);
                  *v524 = *v525;
                  memcpy(v524 + 8, v525 + 8, 0x69uLL);
                  v526 = (void *)((unint64_t)&v524[v1568] & v1628);
                  v527 = (const void *)((unint64_t)&v525[v1568] & v1628);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v527, 1, v1572))
                  {
                    memcpy(v526, v527, v1648);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1554 + 32))(v526, v527, v1572);
                    __swift_storeEnumTagSinglePayload((uint64_t)v526, 0, 1, v1572);
                  }
                  v217 = v1573;
                  v665 = (_OWORD *)((unint64_t)&v524[v1647] & 0xFFFFFFFFFFFFFFF8);
                  v666 = (_OWORD *)((unint64_t)&v525[v1647] & 0xFFFFFFFFFFFFFFF8);
                  *v665 = *v666;
                  v667 = ((unint64_t)v665 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v668 = ((unint64_t)v666 + 23) & 0xFFFFFFFFFFFFFFF8;
                  *(_OWORD *)v667 = *(_OWORD *)v668;
                  *(_BYTE *)(v667 + 16) = *(_BYTE *)(v668 + 16);
                  *(_BYTE *)(v667 + 17) = *(_BYTE *)(v668 + 17);
                  v669 = (void *)((v1529 + v667) & v1616);
                  v670 = (_BYTE *)((v1529 + v668) & v1616);
                  if (v1654)
                  {
                    v671 = v1571;
                    if (v1564 >= v1571)
                    {
                      v672 = (v1529 + v668) & v1616;
                      v671 = v1564;
                      v673 = v1566;
                    }
                    else
                    {
                      v672 = (unint64_t)&v670[v1567] & v1619;
                      v673 = v1570;
                    }
                    v713 = __swift_getEnumTagSinglePayload(v672, v671, v673);
                    v196 = v519;
                  }
                  else
                  {
                    v196 = v519;
                    if (!v670[v1652])
                      goto LABEL_1516;
                    v701 = (v670[v1652] - 1) << v1671;
                    if (v1652 > 3)
                      v701 = 0;
                    if ((_DWORD)v1652)
                    {
                      if (v1652 <= 3)
                        v702 = v1652;
                      else
                        v702 = 4;
                      __asm { BR              X11 }
                    }
                    v713 = v701 + 1;
                  }
                  if (v713)
                  {
                    memcpy(v669, v670, v1651);
                    goto LABEL_1518;
                  }
LABEL_1516:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1562 + 32))(v669, v670, v1566);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1563 + 32))(((unint64_t)v669 + v1567) & v1619, (unint64_t)&v670[v1567] & v1619, v1570);
                  if (!v1654)
                    *((_BYTE *)v669 + v1652) = 0;
LABEL_1518:
                  v205 = 34;
                  goto LABEL_531;
                case 0x23:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v197, 1, v111))
                  {
                    memcpy(v196, v197, v1666);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1605 + 32))(v196, v197, v111);
                    __swift_storeEnumTagSinglePayload((uint64_t)v196, 0, 1, v111);
                  }
                  v528 = v196;
                  v529 = ((unint64_t)v196 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v530 = ((unint64_t)v197 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v531 = *(_OWORD *)v530;
                  v532 = *(_OWORD *)(v530 + 16);
                  *(_QWORD *)(v529 + 32) = *(_QWORD *)(v530 + 32);
                  *(_OWORD *)v529 = v531;
                  *(_OWORD *)(v529 + 16) = v532;
                  v533 = v92;
                  v534 = (_BYTE *)((v1675 + v529) & v92);
                  v535 = (_BYTE *)((v1675 + v530) & v533);
                  *v534 = *v535;
                  memcpy(v534 + 8, v535 + 8, 0x69uLL);
                  v536 = (void *)((unint64_t)&v534[v1568] & v1628);
                  v537 = (const void *)((unint64_t)&v535[v1568] & v1628);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v537, 1, v1572))
                  {
                    memcpy(v536, v537, v1648);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1554 + 32))(v536, v537, v1572);
                    __swift_storeEnumTagSinglePayload((uint64_t)v536, 0, 1, v1572);
                  }
                  v217 = v1573;
                  v674 = (_OWORD *)((unint64_t)&v534[v1647] & 0xFFFFFFFFFFFFFFF8);
                  v675 = (_OWORD *)((unint64_t)&v535[v1647] & 0xFFFFFFFFFFFFFFF8);
                  *v674 = *v675;
                  v676 = ((unint64_t)v674 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v677 = ((unint64_t)v675 + 23) & 0xFFFFFFFFFFFFFFF8;
                  *(_OWORD *)v676 = *(_OWORD *)v677;
                  *(_BYTE *)(v676 + 16) = *(_BYTE *)(v677 + 16);
                  *(_BYTE *)(v676 + 17) = *(_BYTE *)(v677 + 17);
                  v678 = (_OWORD *)((v676 + 25) & 0xFFFFFFFFFFFFFFF8);
                  v679 = (_OWORD *)((v677 + 25) & 0xFFFFFFFFFFFFFFF8);
                  *v678 = *v679;
                  v680 = (_OWORD *)(((unint64_t)v678 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v681 = (_OWORD *)(((unint64_t)v679 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v680 = *v681;
                  v682 = (_OWORD *)(((unint64_t)v680 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v683 = (_OWORD *)(((unint64_t)v681 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v682 = *v683;
                  v684 = (_OWORD *)(((unint64_t)v682 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v685 = (_OWORD *)(((unint64_t)v683 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v684 = *v685;
                  v686 = (_QWORD *)(((unint64_t)v684 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v687 = (_QWORD *)(((unint64_t)v685 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v686 = *v687;
                  v688 = (void *)(((unint64_t)v686 + v1556) & v1616);
                  v689 = (_BYTE *)(((unint64_t)v687 + v1556) & v1616);
                  if (v1654)
                  {
                    v690 = v1571;
                    if (v1564 >= v1571)
                    {
                      v691 = ((unint64_t)v687 + v1556) & v1616;
                      v690 = v1564;
                      v692 = v1566;
                    }
                    else
                    {
                      v691 = (unint64_t)&v689[v1567] & v1619;
                      v692 = v1570;
                    }
                    v714 = __swift_getEnumTagSinglePayload(v691, v690, v692);
                    v196 = v528;
                  }
                  else
                  {
                    v196 = v528;
                    if (!v689[v1652])
                      goto LABEL_1521;
                    v703 = (v689[v1652] - 1) << v1671;
                    if (v1652 > 3)
                      v703 = 0;
                    if ((_DWORD)v1652)
                    {
                      if (v1652 <= 3)
                        v704 = v1652;
                      else
                        v704 = 4;
                      __asm { BR              X11 }
                    }
                    v714 = v703 + 1;
                  }
                  if (v714)
                  {
                    memcpy(v688, v689, v1651);
                    goto LABEL_1523;
                  }
LABEL_1521:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1562 + 32))(v688, v689, v1566);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1563 + 32))(((unint64_t)v688 + v1567) & v1619, (unint64_t)&v689[v1567] & v1619, v1570);
                  if (!v1654)
                    *((_BYTE *)v688 + v1652) = 0;
LABEL_1523:
                  *(_OWORD *)(((unint64_t)v688 + v1555) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v689[v1555] & 0xFFFFFFFFFFFFF8);
                  v205 = 35;
                  goto LABEL_531;
                case 0x24:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v197, 1, v111))
                  {
                    memcpy(v196, v197, v1666);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1605 + 32))(v196, v197, v111);
                    __swift_storeEnumTagSinglePayload((uint64_t)v196, 0, 1, v111);
                  }
                  v217 = v1573;
                  v538 = ((unint64_t)v196 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v539 = ((unint64_t)v197 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v540 = *(_OWORD *)v539;
                  v541 = *(_OWORD *)(v539 + 16);
                  *(_QWORD *)(v538 + 32) = *(_QWORD *)(v539 + 32);
                  *(_OWORD *)v538 = v540;
                  *(_OWORD *)(v538 + 16) = v541;
                  v542 = (_OWORD *)((v538 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v543 = (_OWORD *)((v539 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v542 = *v543;
                  v544 = ((unint64_t)v542 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v545 = ((unint64_t)v543 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v546 = *(_OWORD *)v545;
                  v547 = *(_OWORD *)(v545 + 16);
                  *(_QWORD *)(v544 + 32) = *(_QWORD *)(v545 + 32);
                  *(_OWORD *)v544 = v546;
                  *(_OWORD *)(v544 + 16) = v547;
                  v205 = 36;
                  goto LABEL_531;
                case 0x25:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v197, 1, v111))
                  {
                    memcpy(v196, v197, v1666);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1605 + 32))(v196, v197, v111);
                    __swift_storeEnumTagSinglePayload((uint64_t)v196, 0, 1, v111);
                  }
                  v217 = v1573;
                  v548 = ((unint64_t)v196 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v549 = ((unint64_t)v197 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v550 = *(_OWORD *)v549;
                  v551 = *(_OWORD *)(v549 + 16);
                  *(_QWORD *)(v548 + 32) = *(_QWORD *)(v549 + 32);
                  *(_OWORD *)v548 = v550;
                  *(_OWORD *)(v548 + 16) = v551;
                  v552 = (_QWORD *)((v548 + 47) & 0xFFFFFFFFFFFFF8);
                  v553 = (_QWORD *)((v549 + 47) & 0xFFFFFFFFFFFFF8);
                  *v552 = *v553;
                  *(_QWORD *)(((unint64_t)v552 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v553
                                                                                               + 15) & 0xFFFFFFFFFFFFF8);
                  v205 = 37;
                  goto LABEL_531;
                case 0x26:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v197, 1, v111))
                  {
                    memcpy(v196, v197, v1666);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1605 + 32))(v196, v197, v111);
                    __swift_storeEnumTagSinglePayload((uint64_t)v196, 0, 1, v111);
                  }
                  v217 = v1573;
                  v554 = ((unint64_t)v196 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v555 = ((unint64_t)v197 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v556 = *(_OWORD *)v555;
                  v557 = *(_OWORD *)(v555 + 16);
                  *(_QWORD *)(v554 + 32) = *(_QWORD *)(v555 + 32);
                  *(_OWORD *)v554 = v556;
                  *(_OWORD *)(v554 + 16) = v557;
                  v558 = (_OWORD *)((v554 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v559 = (_OWORD *)((v555 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v558 = *v559;
                  v560 = (_OWORD *)(((unint64_t)v558 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v561 = (_OWORD *)(((unint64_t)v559 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v560 = *v561;
                  v562 = ((unint64_t)v560 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v563 = ((unint64_t)v561 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v564 = *(_OWORD *)v563;
                  v565 = *(_OWORD *)(v563 + 16);
                  *(_QWORD *)(v562 + 32) = *(_QWORD *)(v563 + 32);
                  *(_OWORD *)v562 = v564;
                  *(_OWORD *)(v562 + 16) = v565;
                  v566 = (v562 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v567 = (v563 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v568 = *(_OWORD *)v567;
                  v569 = *(_OWORD *)(v567 + 16);
                  *(_QWORD *)(v566 + 32) = *(_QWORD *)(v567 + 32);
                  *(_OWORD *)v566 = v568;
                  *(_OWORD *)(v566 + 16) = v569;
                  v205 = 38;
                  goto LABEL_531;
                case 0x27:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v197, 1, v111))
                  {
                    memcpy(v196, v197, v1666);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1605 + 32))(v196, v197, v111);
                    __swift_storeEnumTagSinglePayload((uint64_t)v196, 0, 1, v111);
                  }
                  v217 = v1573;
                  v570 = ((unint64_t)v196 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v571 = ((unint64_t)v197 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v572 = *(_OWORD *)v571;
                  v573 = *(_OWORD *)(v571 + 16);
                  *(_QWORD *)(v570 + 32) = *(_QWORD *)(v571 + 32);
                  *(_OWORD *)v570 = v572;
                  *(_OWORD *)(v570 + 16) = v573;
                  *(_QWORD *)((v570 + 47) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v571 + 47) & 0xFFFFFFFFFFFFF8);
                  v205 = 39;
                  goto LABEL_531;
                case 0x28:
                  v259 = v92;
                  v260 = *(_OWORD *)v197;
                  v261 = *((_OWORD *)v197 + 1);
                  v196[4] = v197[4];
                  *(_OWORD *)v196 = v260;
                  *((_OWORD *)v196 + 1) = v261;
                  v262 = (void *)(((unint64_t)v196 + v1653) & v1638);
                  v1680 = v197;
                  v263 = (const void *)(((unint64_t)v197 + v1653) & v1638);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v263, 1, v111))
                  {
                    memcpy(v262, v263, v1666);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1605 + 32))(v262, v263, v111);
                    __swift_storeEnumTagSinglePayload((uint64_t)v262, 0, 1, v111);
                  }
                  v217 = v1573;
                  v574 = 7;
                  if (!v1650)
                    v574 = 8;
                  v575 = v1600 + v574;
                  *(_QWORD *)(((unint64_t)v262 + v575) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v263
                                                                                                 + v575) & 0xFFFFFFFFFFFFF8);
                  v576 = v1581
                       + ((v1601
                         + ((v1601
                           + ((v1658
                             + ((v1603
                               + ((v1661
                                 + ((v1659
                                   + ((((((v1602
                                         + (((((((v575 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                           + 15) & 0xFFFFFFFFFFFFFFF8)) & v1678)
                                       + v1677) & 0xFFFFFFFFFFFFFFF8)
                                     + 23) & 0xFFFFFFFFFFFFFFF8)) & v1616)) & v1523)) & v259)) & v1521)) & v1521)) & v1521);
                  if (v1598 > v576)
                    v576 = v1649 + ((v1672 + 8) & ~v1674);
                  if (v576 <= v1585)
                    v576 = v1585;
                  if (v576 <= v1599)
                    v576 = v1599;
                  if (v576 <= v1584)
                    v576 = v1584;
                  if (v576 <= v1583)
                    v576 = v1583;
                  if (v576 <= v1582)
                    v576 = v1582;
                  if (v576 <= v1586)
                    v576 = (((((v1676 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                         + 16;
                  if (v576 <= v1587)
                    v576 = v1587;
                  if (v576 <= v1577)
                    v576 = v1577;
                  if (v576 <= v63)
                    v576 = v63;
                  if (v576 <= v1576)
                    v576 = v1576;
                  if (v576 <= v1579)
                    v576 = v1579;
                  if (v576 <= v1578)
                    v576 = v1578;
                  if (v576 <= v1656)
                    v576 = v1656;
                  if (v576 <= v1580)
                    v576 = v1580;
                  if (v576 <= v1598)
                    v576 = v1649 + ((v1672 + 8) & ~v1674);
                  if (v576 <= v1575)
                    v576 = v1575;
                  if (v576 <= v1588)
                    v576 = ((v1676 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
                  if (v576 <= v1589)
                    v576 = v1589;
                  if (v576 <= v1590)
                    v576 = v1590;
                  if (v576 <= v1591)
                    v576 = v1591;
                  if (v576 <= v1593)
                    v576 = v1593;
                  if (v576 <= v1592)
                    v576 = v1592;
                  if (v576 <= v1594)
                    v576 = v1594;
                  if (v576 <= v1595)
                    v576 = v1595;
                  if (v576 <= v82)
                    v576 = v82;
                  if (v576 <= v1596)
                    v576 = v1596;
                  if (v576 <= v1597)
                    v576 = v1597;
                  if (v576 <= v1624)
                    v576 = v1624;
                  if (v576 <= v1676)
                    v576 = v1676;
                  if (v576 <= v1622)
                    v576 = v1622;
                  if (v576 <= v1626)
                    v576 = v1626;
                  if (v576 <= v1640)
                    v576 = v1640;
                  if (v576 <= 8)
                    v198 = 8;
                  else
                    v198 = v576;
                  v205 = 40;
                  goto LABEL_2131;
                case 0x29:
                  v264 = *(_OWORD *)v197;
                  v265 = *((_OWORD *)v197 + 1);
                  v196[4] = v197[4];
                  *(_OWORD *)v196 = v264;
                  *((_OWORD *)v196 + 1) = v265;
                  v266 = (void *)(((unint64_t)v196 + v1653) & v1638);
                  v267 = (const void *)(((unint64_t)v197 + v1653) & v1638);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v267, 1, v111))
                  {
                    memcpy(v266, v267, v1666);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1605 + 32))(v266, v267, v111);
                    __swift_storeEnumTagSinglePayload((uint64_t)v266, 0, 1, v111);
                  }
                  v217 = v1573;
                  v577 = (_QWORD *)(((unint64_t)v266 + v1662) & 0xFFFFFFFFFFFFF8);
                  v578 = (_QWORD *)(((unint64_t)v267 + v1662) & 0xFFFFFFFFFFFFFFF8);
                  *v577 = *v578;
                  *(_QWORD *)(((unint64_t)v577 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v578
                                                                                               + 15) & 0xFFFFFFFFFFFFF8);
                  v205 = 41;
                  goto LABEL_531;
                case 0x2A:
                  *v196 = *v197;
                  v205 = 42;
                  goto LABEL_530;
                case 0x2B:
                  v268 = *(_OWORD *)v197;
                  v269 = *((_OWORD *)v197 + 1);
                  v196[4] = v197[4];
                  *(_OWORD *)v196 = v268;
                  *((_OWORD *)v196 + 1) = v269;
                  v270 = (void *)(((unint64_t)v196 + v1653) & v1638);
                  v271 = (const void *)(((unint64_t)v197 + v1653) & v1638);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v271, 1, v111))
                  {
                    memcpy(v270, v271, v1666);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1605 + 32))(v270, v271, v111);
                    __swift_storeEnumTagSinglePayload((uint64_t)v270, 0, 1, v111);
                  }
                  v205 = 43;
                  goto LABEL_530;
                case 0x2C:
                  *v196 = *v197;
                  v205 = 44;
                  goto LABEL_530;
                case 0x2D:
                  v272 = __swift_getEnumTagSinglePayload((uint64_t)v197, 1, v111);
                  v273 = v197;
                  v274 = v92;
                  if (v272)
                  {
                    memcpy(v196, v273, v1666);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, const void *, uint64_t))(v1605 + 32))(v196, v273, v111);
                    __swift_storeEnumTagSinglePayload((uint64_t)v196, 0, 1, v111);
                  }
                  v360 = v196;
                  v580 = ((unint64_t)v196 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v581 = v273;
                  v582 = ((unint64_t)v273 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v583 = *(_OWORD *)v582;
                  v584 = *(_OWORD *)(v582 + 16);
                  *(_QWORD *)(v580 + 32) = *(_QWORD *)(v582 + 32);
                  *(_OWORD *)v580 = v583;
                  *(_OWORD *)(v580 + 16) = v584;
                  v585 = (v580 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v586 = (v582 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v587 = *(_OWORD *)v586;
                  v588 = *(_OWORD *)(v586 + 16);
                  *(_QWORD *)(v585 + 32) = *(_QWORD *)(v586 + 32);
                  *(_OWORD *)v585 = v587;
                  *(_OWORD *)(v585 + 16) = v588;
                  v589 = (_OWORD *)((v585 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v590 = (_OWORD *)((v586 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v589 = *v590;
                  v591 = (_OWORD *)(((unint64_t)v589 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v592 = (_OWORD *)(((unint64_t)v590 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v591 = *v592;
                  v593 = (_OWORD *)(((unint64_t)v591 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v594 = (_OWORD *)(((unint64_t)v592 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v593 = *v594;
                  v595 = (_OWORD *)(((unint64_t)v593 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v596 = (_OWORD *)(((unint64_t)v594 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v595 = *v596;
                  v597 = ((unint64_t)v595 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v598 = ((unint64_t)v596 + 23) & 0xFFFFFFFFFFFFFFF8;
                  *(_OWORD *)v597 = *(_OWORD *)v598;
                  *(_BYTE *)(v597 + 16) = *(_BYTE *)(v598 + 16);
                  v599 = (_QWORD *)(((unint64_t)v595 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v600 = (_QWORD *)(((unint64_t)v596 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v599 = *v600;
                  v601 = (void *)(((unint64_t)v599 + v1556) & v1616);
                  v602 = (_BYTE *)(((unint64_t)v600 + v1556) & v1616);
                  if (v1654)
                  {
                    v603 = v1571;
                    if (v1564 >= v1571)
                    {
                      v604 = ((unint64_t)v600 + v1556) & v1616;
                      v603 = v1564;
                      v605 = v1566;
                    }
                    else
                    {
                      v604 = (unint64_t)&v602[v1567] & v1619;
                      v605 = v1570;
                    }
                    v710 = __swift_getEnumTagSinglePayload(v604, v603, v605);
                    v217 = v1573;
                    v693 = v1652;
                    v694 = v1643;
                  }
                  else
                  {
                    v693 = v1652;
                    v217 = v1573;
                    v694 = v1643;
                    if (!v602[v1652])
                      goto LABEL_1889;
                    v695 = (v602[v1652] - 1) << v1671;
                    if (v1652 > 3)
                      v695 = 0;
                    if ((_DWORD)v1652)
                    {
                      if (v1652 <= 3)
                        v696 = v1652;
                      else
                        v696 = 4;
                      __asm { BR              X11 }
                    }
                    v710 = v695 + 1;
                  }
                  if (v710)
                  {
                    memcpy(v601, v602, v1651);
                    goto LABEL_1891;
                  }
LABEL_1889:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1562 + 32))(v601, v602, v1566);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1563 + 32))(((unint64_t)v601 + v1567) & v1619, (unint64_t)&v602[v1567] & v1619, v1570);
                  if (!v1654)
                    *((_BYTE *)v601 + v693) = 0;
LABEL_1891:
                  v1297 = (void *)(((unint64_t)v601 + v1549) & v1616);
                  v1298 = (_BYTE *)((unint64_t)&v602[v1549] & v1616);
                  v1299 = v1571;
                  if (v1654)
                  {
                    if (v1564 >= v1571)
                    {
                      v1300 = (uint64_t)v1298;
                      v1299 = v1564;
                      v1301 = v1566;
                    }
                    else
                    {
                      v1300 = (unint64_t)&v1298[v1567] & v1619;
                      v1301 = v1570;
                    }
                    v1304 = __swift_getEnumTagSinglePayload(v1300, v1299, v1301);
                  }
                  else
                  {
                    if (!v1298[v693])
                      goto LABEL_1936;
                    v1302 = (v1298[v693] - 1) << v1671;
                    if (v693 > 3)
                      v1302 = 0;
                    if ((_DWORD)v693)
                    {
                      if (v693 <= 3)
                        v1303 = v693;
                      else
                        v1303 = 4;
                      __asm { BR              X11 }
                    }
                    v1304 = v1302 + 1;
                  }
                  if (v1304)
                  {
                    memcpy(v1297, v1298, v1651);
                    goto LABEL_1938;
                  }
LABEL_1936:
                  (*(void (**)(void *, _BYTE *, uint64_t))(v1562 + 32))(v1297, v1298, v1566);
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1563 + 32))(((unint64_t)v1297 + v1567) & v1619, (unint64_t)&v1298[v1567] & v1619, v1570);
                  if (!v1654)
                    *((_BYTE *)v1297 + v693) = 0;
LABEL_1938:
                  v1319 = (_QWORD *)(((unint64_t)v1297 + v1661) & v1523);
                  v1320 = (uint64_t *)((unint64_t)&v1298[v1661] & v1523);
                  if ((v1571 & 0x80000000) != 0)
                  {
                    v1323 = v1619;
                    v1322 = __swift_getEnumTagSinglePayload(((unint64_t)v1320 + v1553) & v1619, v1571, v1570);
                  }
                  else
                  {
                    v1321 = *v1320;
                    if ((unint64_t)*v1320 >= 0xFFFFFFFF)
                      LODWORD(v1321) = -1;
                    v1322 = v1321 + 1;
                    v1323 = v1619;
                  }
                  if (v1322)
                  {
                    memcpy(v1319, v1320, v694);
                  }
                  else
                  {
                    *v1319 = *v1320;
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v1563 + 32))(((unint64_t)v1319 + v1553) & v1323, ((unint64_t)v1320 + v1553) & v1323, v1570);
                  }
                  v1324 = (_QWORD *)(((unint64_t)v1319 + v1537) & v1523);
                  v1325 = (uint64_t *)(((unint64_t)v1320 + v1537) & v1523);
                  if ((v1571 & 0x80000000) != 0)
                  {
                    v1327 = __swift_getEnumTagSinglePayload(((unint64_t)v1325 + v1553) & v1323, v1571, v1570);
                  }
                  else
                  {
                    v1326 = *v1325;
                    if ((unint64_t)*v1325 >= 0xFFFFFFFF)
                      LODWORD(v1326) = -1;
                    v1327 = v1326 + 1;
                  }
                  if (v1327)
                  {
                    memcpy(v1324, v1325, v694);
                  }
                  else
                  {
                    *v1324 = *v1325;
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v1563 + 32))(((unint64_t)v1324 + v1553) & v1323, ((unint64_t)v1325 + v1553) & v1323, v1570);
                  }
                  v1328 = (char *)v1324 + v694;
                  *v1328 = *((_BYTE *)v1325 + v694);
                  v1328[1] = *((_BYTE *)v1325 + v694 + 1);
                  v1329 = (_OWORD *)(((unint64_t)v1324 + v694 + 9) & 0xFFFFFFFFFFFFFFF8);
                  v1330 = (_OWORD *)(((unint64_t)v1325 + v694 + 9) & 0xFFFFFFFFFFFFFFF8);
                  *v1329 = *v1330;
                  v1331 = ((unint64_t)v1329 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v1332 = ((unint64_t)v1330 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v1333 = *(_OWORD *)v1332;
                  *(_BYTE *)(v1331 + 16) = *(_BYTE *)(v1332 + 16);
                  *(_OWORD *)v1331 = v1333;
                  v1334 = ((unint64_t)v1329 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1335 = ((unint64_t)v1330 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v1336 = *(_OWORD *)v1335;
                  v1337 = *(_OWORD *)(v1335 + 16);
                  *(_QWORD *)(v1334 + 32) = *(_QWORD *)(v1335 + 32);
                  *(_OWORD *)v1334 = v1336;
                  *(_OWORD *)(v1334 + 16) = v1337;
                  v1338 = (v1675 + v1334) & v274;
                  v1339 = (v1675 + v1335) & v274;
                  if (v1565 >= 0x7FFFFFFF)
                  {
                    v1344 = (const void *)((v1568 + v1339) & v1628);
                    v197 = v581;
                    if (__swift_getEnumTagSinglePayload((uint64_t)v1344, v1560, v1572) <= 1)
                    {
                      v1341 = (const void *)(v1339 + 8);
                      v1342 = v1568;
                      v1343 = ~v1672;
LABEL_1961:
                      *(_BYTE *)v1338 = *(_BYTE *)v1339;
                      memcpy((void *)(v1338 + 8), v1341, 0x69uLL);
                      v1345 = (void *)((v1342 + v1338) & v1343);
                      if (__swift_getEnumTagSinglePayload((uint64_t)v1344, 1, v1572))
                      {
                        memcpy(v1345, v1344, v1648);
                      }
                      else
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v1554 + 32))(v1345, v1344, v1572);
                        __swift_storeEnumTagSinglePayload((uint64_t)v1345, 0, 1, v1572);
                      }
                      v1346 = v1649;
                      v197 = v581;
LABEL_1966:
                      *(_OWORD *)(((v1338 | 7) + v1346) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((v1339 | 7) + v1346) & 0xFFFFFFFFFFFFF8);
                      v205 = 45;
                      goto LABEL_1967;
                    }
                  }
                  else
                  {
                    v1340 = *(_QWORD *)(((v1675 + v1335) & v274) + 0x10);
                    if (v1340 >= 0xFFFFFFFF)
                      LODWORD(v1340) = -1;
                    v197 = v581;
                    if ((int)v1340 - 1 < 0)
                    {
                      v1341 = (const void *)(v1339 + 8);
                      v1342 = v1568;
                      v1343 = ~v1672;
                      v1344 = (const void *)((v1568 + v1339) & v1628);
                      goto LABEL_1961;
                    }
                  }
                  v1346 = v1649;
                  memcpy((void *)v1338, (const void *)v1339, v1649);
                  goto LABEL_1966;
                case 0x2E:
                  *v196 = *v197;
                  v205 = 46;
                  goto LABEL_530;
                case 0x2F:
                  *v196 = *v197;
                  v205 = 47;
                  goto LABEL_530;
                case 0x30:
                  *v196 = *v197;
                  v205 = 48;
                  goto LABEL_530;
                case 0x31:
                  *v196 = *v197;
                  v205 = 49;
                  goto LABEL_530;
                case 0x32:
                  v275 = v197;
                  v276 = v92;
                  v277 = *(_OWORD *)v275;
                  v278 = *((_OWORD *)v275 + 1);
                  v196[4] = v275[4];
                  *(_OWORD *)v196 = v277;
                  *((_OWORD *)v196 + 1) = v278;
                  v279 = (void *)(((unint64_t)v196 + v1653) & v1638);
                  v1680 = v275;
                  v280 = (const void *)(((unint64_t)v275 + v1653) & v1638);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v280, 1, v111))
                  {
                    memcpy(v279, v280, v1666);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v1605 + 32))(v279, v280, v111);
                    __swift_storeEnumTagSinglePayload((uint64_t)v279, 0, 1, v111);
                  }
                  v606 = (_OWORD *)(((unint64_t)v279 + v1662) & 0xFFFFFFFFFFFFFFF8);
                  v607 = (_OWORD *)(((unint64_t)v280 + v1662) & 0xFFFFFFFFFFFFFFF8);
                  *v606 = *v607;
                  v608 = ((unint64_t)v606 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v609 = ((unint64_t)v607 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v610 = *(_OWORD *)v609;
                  v611 = *(_OWORD *)(v609 + 16);
                  *(_QWORD *)(v608 + 32) = *(_QWORD *)(v609 + 32);
                  *(_OWORD *)v608 = v610;
                  *(_OWORD *)(v608 + 16) = v611;
                  v612 = (_QWORD *)((v608 + 47) & 0xFFFFFFFFFFFFF8);
                  v613 = (_QWORD *)((v609 + 47) & 0xFFFFFFFFFFFFF8);
                  *v612 = *v613;
                  v614 = (_OWORD *)(((unint64_t)v612 + 15) & 0xFFFFFFFFFFFFFFF8);
                  v615 = (_OWORD *)(((unint64_t)v613 + 15) & 0xFFFFFFFFFFFFFFF8);
                  *v614 = *v615;
                  v616 = (char *)(((unint64_t)v614 + v1644) & v1521);
                  v617 = (char *)(((unint64_t)v615 + v1644) & v1521);
                  v1668 = v196;
                  if (v1558 < 0x7FFFFFFF)
                  {
                    v217 = v1573;
                    if (*(_QWORD *)(((unint64_t)&v617[v1662] & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                      goto LABEL_541;
                  }
                  else
                  {
                    v217 = v1573;
                    if (__swift_getEnumTagSinglePayload((uint64_t)v617, v1650, v1613) >= 2)
                    {
LABEL_541:
                      v618 = v1656;
                      memcpy(v616, v617, v1656);
                      goto LABEL_678;
                    }
                  }
                  if (__swift_getEnumTagSinglePayload((uint64_t)v617, 1, v1613))
                  {
                    memcpy(v616, v617, v1666);
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(v1605 + 32))(v616, v617, v1613);
                    __swift_storeEnumTagSinglePayload((uint64_t)v616, 0, 1, v1613);
                  }
                  v723 = (unint64_t)&v616[v1662] & 0xFFFFFFFFFFFFFFF8;
                  v724 = (unint64_t)&v617[v1662] & 0xFFFFFFFFFFFFFFF8;
                  v725 = *(_OWORD *)v724;
                  v726 = *(_OWORD *)(v724 + 16);
                  *(_QWORD *)(v723 + 32) = *(_QWORD *)(v724 + 32);
                  *(_OWORD *)v723 = v725;
                  *(_OWORD *)(v723 + 16) = v726;
                  v727 = (v723 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v728 = (v724 + 47) & 0xFFFFFFFFFFFFFFF8;
                  *(_OWORD *)v727 = *(_OWORD *)v728;
                  *(_BYTE *)(v727 + 16) = *(_BYTE *)(v728 + 16);
                  v618 = v1656;
                  if (v1650)
                    v618 = ((((v1600 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 17;
LABEL_678:
                  *(_OWORD *)&v616[v618 + 7] = *(_OWORD *)&v617[v618 + 7];
                  v729 = (_BYTE *)((unint64_t)&v616[v618 + v1536] & v276);
                  v730 = (_QWORD *)((unint64_t)&v617[v618 + v1536] & v276);
                  if (v1565 >= 0x7FFFFFFF)
                  {
                    v735 = (const void *)(((unint64_t)v730 + v1568) & v1628);
                    v197 = v1680;
                    if (__swift_getEnumTagSinglePayload((uint64_t)v735, v1560, v1572) <= 1)
                    {
                      v732 = v730 + 1;
                      v733 = v1568;
                      v734 = ~v1672;
                      goto LABEL_685;
                    }
                  }
                  else
                  {
                    v731 = v730[2];
                    if (v731 >= 0xFFFFFFFF)
                      LODWORD(v731) = -1;
                    v197 = v1680;
                    if ((int)v731 - 1 < 0)
                    {
                      v732 = v730 + 1;
                      v733 = v1568;
                      v734 = ~v1672;
                      v735 = (const void *)(((unint64_t)v730 + v1568) & v1628);
LABEL_685:
                      *v729 = *(_BYTE *)v730;
                      memcpy(v729 + 8, v732, 0x69uLL);
                      v736 = (void *)((unint64_t)&v729[v733] & v734);
                      if (__swift_getEnumTagSinglePayload((uint64_t)v735, 1, v1572))
                      {
                        memcpy(v736, v735, v1648);
                      }
                      else
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v1554 + 32))(v736, v735, v1572);
                        __swift_storeEnumTagSinglePayload((uint64_t)v736, 0, 1, v1572);
                      }
                      v205 = 50;
                      goto LABEL_2130;
                    }
                  }
                  memcpy(v729, v730, v1649);
                  v205 = 50;
                  goto LABEL_2196;
                case 0x33:
                  if (__swift_getEnumTagSinglePayload((uint64_t)v197, 1, v111))
                  {
                    memcpy(v196, v197, v1666);
                  }
                  else
                  {
                    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v1605 + 32))(v196, v197, v111);
                    __swift_storeEnumTagSinglePayload((uint64_t)v196, 0, 1, v111);
                  }
                  v619 = v92;
                  v1668 = v196;
                  v620 = ((unint64_t)v196 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v1680 = v197;
                  v621 = ((unint64_t)v197 + v1662) & 0xFFFFFFFFFFFFFFF8;
                  v622 = *(_OWORD *)v621;
                  v623 = *(_OWORD *)(v621 + 16);
                  *(_QWORD *)(v620 + 32) = *(_QWORD *)(v621 + 32);
                  *(_OWORD *)v620 = v622;
                  *(_OWORD *)(v620 + 16) = v623;
                  v624 = (v620 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v625 = (v621 + 47) & 0xFFFFFFFFFFFFFFF8;
                  v626 = *(_OWORD *)v625;
                  v627 = *(_OWORD *)(v625 + 16);
                  *(_QWORD *)(v624 + 32) = *(_QWORD *)(v625 + 32);
                  *(_OWORD *)v624 = v626;
                  *(_OWORD *)(v624 + 16) = v627;
                  v628 = (_OWORD *)((v624 + 47) & 0xFFFFFFFFFFFFFFF8);
                  v629 = (_OWORD *)((v625 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *v628 = *v629;
                  v630 = (_OWORD *)(((unint64_t)v628 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v631 = (_OWORD *)(((unint64_t)v629 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v630 = *v631;
                  v632 = (_QWORD *)(((unint64_t)v630 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v633 = (_QWORD *)(((unint64_t)v631 + 23) & 0xFFFFFFFFFFFFFFF8);
                  *v632 = *v633;
                  v634 = (_OWORD *)(((unint64_t)v632 + v1527) & v1678);
                  v635 = (_OWORD *)(((unint64_t)v633 + v1527) & v1678);
                  if (v1552 > 0x7FFFFFFE)
                  {
                    v637 = (_OWORD *)(((unint64_t)v635 + 23) & 0xFFFFFFFFFFFFFFF8);
                    v638 = ((unint64_t)v637 + 23) & 0xFFFFFFFFFFFFFFF8;
                    v217 = v1573;
                    if (!__swift_getEnumTagSinglePayload((v1655 + v638 + 33) & v1513, v1552, v1550))
                      goto LABEL_553;
                  }
                  else
                  {
                    v636 = *(_QWORD *)((((unint64_t)v633 + v1527) & v1678) + 8);
                    if (v636 >= 0xFFFFFFFF)
                      LODWORD(v636) = -1;
                    v217 = v1573;
                    if ((v636 + 1) <= 1)
                    {
                      v637 = (_OWORD *)(((unint64_t)v635 + 23) & 0xFFFFFFFFFFFFFFF8);
                      v638 = ((unint64_t)v637 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_553:
                      v639 = v1652;
                      *v634 = *v635;
                      v640 = (_OWORD *)(((unint64_t)v634 + 23) & 0xFFFFFFFFFFFFFFF8);
                      *v640 = *v637;
                      v641 = ((unint64_t)v640 + 23) & 0xFFFFFFFFFFFFFFF8;
                      *(_OWORD *)v641 = *(_OWORD *)v638;
                      *(_BYTE *)(v641 + 16) = *(_BYTE *)(v638 + 16);
                      v642 = ((unint64_t)v640 + 47) & 0xFFFFFFFFFFFFFFF8;
                      v643 = ((unint64_t)v637 + 47) & 0xFFFFFFFFFFFFFFF8;
                      *(_QWORD *)v642 = *(_QWORD *)v643;
                      *(_BYTE *)(v642 + 8) = *(_BYTE *)(v643 + 8);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1642 + 32))((v1655 + 9 + v642) & v1513, (v1655 + 9 + v643) & v1513, v1550);
LABEL_554:
                      v644 = (void *)(((unint64_t)v634 + v1531) & v1616);
                      v645 = (_BYTE *)(((unint64_t)v635 + v1531) & v1616);
                      v646 = v1571;
                      if (v1654)
                      {
                        if (v1564 >= v1571)
                        {
                          v647 = (uint64_t)v645;
                          v646 = v1564;
                          v648 = v1566;
                        }
                        else
                        {
                          v647 = (unint64_t)&v645[v1567] & v1619;
                          v648 = v1570;
                        }
                        v711 = __swift_getEnumTagSinglePayload(v647, v646, v648);
                      }
                      else
                      {
                        if (!v645[v639])
                          goto LABEL_1907;
                        v697 = (v645[v639] - 1) << v1671;
                        if (v639 > 3)
                          v697 = 0;
                        if ((_DWORD)v639)
                        {
                          if (v639 <= 3)
                            v698 = v639;
                          else
                            v698 = 4;
                          __asm { BR              X11 }
                        }
                        v711 = v697 + 1;
                      }
                      if (v711)
                      {
                        memcpy(v644, v645, v1651);
                        goto LABEL_1909;
                      }
LABEL_1907:
                      (*(void (**)(void *, _BYTE *, uint64_t))(v1562 + 32))(v644, v645, v1566);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1563 + 32))(((unint64_t)v644 + v1567) & v1619, (unint64_t)&v645[v1567] & v1619, v1570);
                      if (!v1654)
                        *((_BYTE *)v644 + v639) = 0;
LABEL_1909:
                      v1305 = (_OWORD *)(((unint64_t)v644 + v1555) & 0xFFFFFFFFFFFFFFF8);
                      v1306 = (_OWORD *)((unint64_t)&v645[v1555] & 0xFFFFFFFFFFFFFFF8);
                      *v1305 = *v1306;
                      v1307 = ((unint64_t)v1305 + 23) & 0xFFFFFFFFFFFFFFF8;
                      v1308 = ((unint64_t)v1306 + 23) & 0xFFFFFFFFFFFFFFF8;
                      *(_QWORD *)v1307 = *(_QWORD *)v1308;
                      *(_BYTE *)(v1307 + 8) = *(_BYTE *)(v1308 + 8);
                      v1309 = (void *)((v1534 + v1307) & v1616);
                      v1310 = (_BYTE *)((v1534 + v1308) & v1616);
                      if (v1654)
                      {
                        v1311 = v1571;
                        if (v1564 >= v1571)
                        {
                          v1312 = (v1534 + v1308) & v1616;
                          v1311 = v1564;
                          v1313 = v1566;
                        }
                        else
                        {
                          v1312 = (unint64_t)&v1310[v1567] & v1619;
                          v1313 = v1570;
                        }
                        v1316 = __swift_getEnumTagSinglePayload(v1312, v1311, v1313);
                      }
                      else
                      {
                        if (!v1310[v639])
                          goto LABEL_1970;
                        v1314 = (v1310[v639] - 1) << v1671;
                        if (v639 > 3)
                          v1314 = 0;
                        if ((_DWORD)v639)
                        {
                          if (v639 <= 3)
                            v1315 = v639;
                          else
                            v1315 = 4;
                          __asm { BR              X11 }
                        }
                        v1316 = v1314 + 1;
                      }
                      if (v1316)
                      {
                        memcpy(v1309, v1310, v1651);
                        goto LABEL_1972;
                      }
LABEL_1970:
                      (*(void (**)(void *, _BYTE *, uint64_t))(v1562 + 32))(v1309, v1310, v1566);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1563 + 32))(((unint64_t)v1309 + v1567) & v1619, (unint64_t)&v1310[v1567] & v1619, v1570);
                      if (!v1654)
                        *((_BYTE *)v1309 + v639) = 0;
LABEL_1972:
                      v1347 = (_OWORD *)(((unint64_t)v1309 + v1555) & 0xFFFFFFFFFFFFFFF8);
                      v1348 = (_OWORD *)((unint64_t)&v1310[v1555] & 0xFFFFFFFFFFFFFFF8);
                      *v1347 = *v1348;
                      v1349 = (void *)(((unint64_t)v1347 + v1659) & v1616);
                      v1350 = (_BYTE *)(((unint64_t)v1348 + v1659) & v1616);
                      v1351 = v1571;
                      if (v1654)
                      {
                        if (v1564 >= v1571)
                        {
                          v1352 = ((unint64_t)v1348 + v1659) & v1616;
                          v1351 = v1564;
                          v1353 = v1566;
                        }
                        else
                        {
                          v1352 = (unint64_t)&v1350[v1567] & v1619;
                          v1353 = v1570;
                        }
                        v1357 = __swift_getEnumTagSinglePayload(v1352, v1351, v1353);
                        v1354 = v1572;
                      }
                      else
                      {
                        v1354 = v1572;
                        if (!v1350[v639])
                          goto LABEL_1988;
                        v1355 = (v1350[v639] - 1) << v1671;
                        if (v639 > 3)
                          v1355 = 0;
                        if ((_DWORD)v639)
                        {
                          if (v639 <= 3)
                            v1356 = v639;
                          else
                            v1356 = 4;
                          __asm { BR              X11 }
                        }
                        v1357 = v1355 + 1;
                      }
                      if (v1357)
                      {
                        memcpy(v1349, v1350, v1651);
                        goto LABEL_1990;
                      }
LABEL_1988:
                      (*(void (**)(void *, _BYTE *, uint64_t))(v1562 + 32))(v1349, v1350, v1566);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1563 + 32))(((unint64_t)v1349 + v1567) & v1619, (unint64_t)&v1350[v1567] & v1619, v1570);
                      if (!v1654)
                        *((_BYTE *)v1349 + v639) = 0;
LABEL_1990:
                      v1358 = (_BYTE *)(((unint64_t)v1349 + v1539) & v619);
                      v1359 = (_BYTE *)((unint64_t)&v1350[v1539] & v619);
                      if (v1565 >= 0x7FFFFFFF)
                      {
                        v1364 = (unint64_t)&v1359[v1568] & v1628;
                        if (__swift_getEnumTagSinglePayload(v1364, v1560, v1354) <= 1)
                        {
                          v1361 = v1359 + 8;
                          v1362 = v1568;
                          v1363 = ~v1672;
                          goto LABEL_1997;
                        }
                      }
                      else
                      {
                        v1360 = *(_QWORD *)(((unint64_t)&v1350[v1539] & v619) + 0x10);
                        if (v1360 >= 0xFFFFFFFF)
                          LODWORD(v1360) = -1;
                        if ((int)v1360 - 1 < 0)
                        {
                          v1361 = v1359 + 8;
                          v1362 = v1568;
                          v1363 = ~v1672;
                          v1364 = (unint64_t)&v1359[v1568] & v1628;
LABEL_1997:
                          *v1358 = *v1359;
                          memcpy(v1358 + 8, v1361, 0x69uLL);
                          v1365 = (unint64_t)&v1358[v1362] & v1363;
                          if (!__swift_getEnumTagSinglePayload(v1364, 1, v1354))
                          {
                            (*(void (**)(uint64_t, uint64_t, uint64_t))(v1554 + 32))(v1365, v1364, v1354);
                            __swift_storeEnumTagSinglePayload(v1365, 0, 1, v1354);
                            goto LABEL_2001;
                          }
                          v1366 = (void *)v1365;
                          v1367 = (const void *)v1364;
                          v1368 = v1648;
LABEL_2000:
                          memcpy(v1366, v1367, v1368);
LABEL_2001:
                          v205 = 51;
LABEL_2130:
                          v196 = v1668;
                          goto LABEL_2131;
                        }
                      }
                      v1366 = v1358;
                      v1367 = v1359;
                      v1368 = v1649;
                      goto LABEL_2000;
                    }
                  }
                  memcpy(v634, v635, v1677);
                  v639 = v1652;
                  goto LABEL_554;
                case 0x34:
                  *v196 = *v197;
                  v205 = 52;
LABEL_530:
                  v217 = v1573;
                  goto LABEL_531;
                default:
                  if (v1636 <= 3)
                    v200 = v1636;
                  else
                    v200 = 4;
                  __asm { BR              X12 }
                  return result;
              }
            case 2:
              v113 = a1;
              *(_QWORD *)a1 = *(_QWORD *)v88;
              v114 = 2;
              goto LABEL_532;
            case 3:
              v113 = a1;
              *(_QWORD *)a1 = *(_QWORD *)v88;
              v114 = 3;
              goto LABEL_532;
            default:
              memcpy(a1, v88, v1684 + 1);
              return a1;
          }
        case 0x15:
          if (!__swift_getEnumTagSinglePayload(v755, 1, v1613))
            (*(void (**)(unint64_t, uint64_t))(v1605 + 8))(v755, v1613);
          goto LABEL_855;
        case 0x16:
          if (!__swift_getEnumTagSinglePayload(v755, 1, v1613))
            (*(void (**)(unint64_t, uint64_t))(v1605 + 8))(v755, v1613);
          v824 = (v1662 + v755) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v824);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v758 = v1677;
          v825 = (v1602
                + ((((((v824 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v1678;
          if (v1552 > 0x7FFFFFFE)
          {
            v827 = (v825 + 23) & 0xFFFFFFFFFFFFFFF8;
            v763 = ~v1655;
            v893 = __swift_getEnumTagSinglePayload((v1655 + ((v827 + 23) & 0xFFFFFFFFFFFFFFF8) + 33) & v95, v1552, v1550);
            v765 = ~v1673;
            if (v893)
              goto LABEL_1002;
            goto LABEL_1001;
          }
          v763 = ~v1655;
          LODWORD(v826) = -1;
          if (*(_QWORD *)(((v1602
                           + ((((((v824 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v1678)
                         + 8) < 0xFFFFFFFFuLL)
            v826 = *(_QWORD *)(((v1602
                               + ((((((v824 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v1678)
                             + 8);
          v765 = ~v1673;
          if ((v826 + 1) <= 1)
          {
            v827 = (v825 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_1001:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v894 = (id *)((v827 + 47) & 0xFFFFFFFFFFFFFFF8);

            (*(void (**)(unint64_t, uint64_t))(v1642 + 8))(((unint64_t)v894 + v1655 + 9) & v763, v1550);
          }
LABEL_1002:
          swift_bridgeObjectRelease();
          v881 = (v1533 + ((v825 + v1677) & 0xFFFFFFFFFFFFFFF8)) & v1615;
          if (v1654)
          {
LABEL_1003:
            v895 = v1571;
            v883 = v1618;
            if (v1564 >= v1571)
            {
              v896 = v881;
              v895 = v1564;
              v897 = v1566;
            }
            else
            {
              v896 = (v1567 + v881) & v1618;
              v897 = v1570;
            }
            v898 = __swift_getEnumTagSinglePayload(v896, v895, v897);
            v882 = ~v1674;
          }
          else
          {
            v882 = ~v1674;
            v883 = v1618;
            if (!*(_BYTE *)(v881 + v1652))
            {
LABEL_1165:
              (*(void (**)(unint64_t, uint64_t))(v1562 + 8))(v881, v1566);
              (*(void (**)(unint64_t, uint64_t))(v1563 + 8))((v1567 + v881) & v883, v1570);
LABEL_1166:
              v943 = (uint64_t *)((v1661 + v881) & v1522);
              if ((v1571 & 0x80000000) != 0)
              {
                v945 = __swift_getEnumTagSinglePayload(((unint64_t)v943 + v1553) & v883, v1571, v1570);
              }
              else
              {
                v944 = *v943;
                if ((unint64_t)*v943 >= 0xFFFFFFFF)
                  LODWORD(v944) = -1;
                v945 = v944 + 1;
              }
              if (!v945)
              {
                swift_bridgeObjectRelease();
                (*(void (**)(unint64_t, uint64_t))(v1563 + 8))(((unint64_t)v943 + v1553) & v883, v1570);
              }
              v946 = ((unint64_t)v943 + v1603) & v882;
              if (v1565 >= 0x7FFFFFFF)
              {
                v949 = (v1568 + v946) & v1628;
                v948 = v1650;
                if (__swift_getEnumTagSinglePayload(v949, v1560, v1572) > 1)
                  goto LABEL_1181;
              }
              else
              {
                v947 = *(_QWORD *)(v946 + 16);
                if (v947 >= 0xFFFFFFFF)
                  LODWORD(v947) = -1;
                v948 = v1650;
                if ((int)v947 - 1 >= 0)
                {
LABEL_1181:
                  v950 = (v1658 + v946) & v765;
                  if (v1558 < 0x7FFFFFFF)
                  {
                    v952 = v1613;
                    if (*(_QWORD *)(((v1662 + v950) & 0xFFFFFFFFFFFFF8) + 0x18) <= 0xFFFFFFFEuLL)
                    {
                      v953 = (v1601 + v950) & v765;
                      goto LABEL_1193;
                    }
                  }
                  else
                  {
                    v951 = (v1658 + v946) & v765;
                    v952 = v1613;
                    if (__swift_getEnumTagSinglePayload(v951, v948, v1613) >= 2)
                    {
                      v953 = (v1601 + v950) & v765;
                      goto LABEL_1190;
                    }
                  }
                  if (!__swift_getEnumTagSinglePayload(v950, 1, v952))
                    (*(void (**)(uint64_t, uint64_t))(v1605 + 8))(v950, v952);
                  __swift_destroy_boxed_opaque_existential_1((v1662 + v950) & 0xFFFFFFFFFFFFFFF8);
                  v954 = (((v1662 + v950) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
                  if (*(_QWORD *)(v954 + 24) >= 0xFFFFFFFFuLL)
                    __swift_destroy_boxed_opaque_existential_1(v954);
                  swift_bridgeObjectRelease();
                  v953 = (v1601 + v950) & v765;
                  if (v1558 >= 0x7FFFFFFF)
                  {
LABEL_1190:
                    if (__swift_getEnumTagSinglePayload(v953, v948, v952) >= 2)
                    {
                      v955 = (v1601 + v953) & v765;
                      goto LABEL_1199;
                    }
                    goto LABEL_1194;
                  }
LABEL_1193:
                  if (*(_QWORD *)(((v1662 + v953) & 0xFFFFFFFFFFFFF8) + 0x18) <= 0xFFFFFFFEuLL)
                  {
                    v955 = (v1601 + v953) & v765;
                    goto LABEL_1202;
                  }
LABEL_1194:
                  if (!__swift_getEnumTagSinglePayload(v953, 1, v952))
                    (*(void (**)(uint64_t, uint64_t))(v1605 + 8))(v953, v952);
                  __swift_destroy_boxed_opaque_existential_1((v1662 + v953) & 0xFFFFFFFFFFFFFFF8);
                  v956 = (((v1662 + v953) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
                  if (*(_QWORD *)(v956 + 24) >= 0xFFFFFFFFuLL)
                    __swift_destroy_boxed_opaque_existential_1(v956);
                  swift_bridgeObjectRelease();
                  v955 = (v1601 + v953) & v765;
                  if (v1558 >= 0x7FFFFFFF)
                  {
LABEL_1199:
                    v95 = v763;
                    if (__swift_getEnumTagSinglePayload(v955, v948, v952) >= 2)
                      goto LABEL_1208;
                    goto LABEL_1203;
                  }
LABEL_1202:
                  v95 = v763;
                  if (*(_QWORD *)(((v1662 + v955) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
                    goto LABEL_1208;
LABEL_1203:
                  if (!__swift_getEnumTagSinglePayload(v955, 1, v952))
                    (*(void (**)(uint64_t, uint64_t))(v1605 + 8))(v955, v952);
                  __swift_destroy_boxed_opaque_existential_1((v1662 + v955) & 0xFFFFFFFFFFFFFFF8);
                  v957 = (((v1662 + v955) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
                  if (*(_QWORD *)(v957 + 24) >= 0xFFFFFFFFuLL)
                    __swift_destroy_boxed_opaque_existential_1(v957);
                  swift_bridgeObjectRelease();
LABEL_1208:
                  v853 = v1600;
                  if ((_DWORD)v948)
                    goto LABEL_870;
                  goto LABEL_869;
                }
                v949 = (v1568 + v946) & v1628;
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v948 = v1650;
              if (!__swift_getEnumTagSinglePayload(v949, 1, v1572))
                (*(void (**)(uint64_t, uint64_t))(v1554 + 8))(v949, v1572);
              goto LABEL_1181;
            }
            v884 = (*(unsigned __int8 *)(v881 + v1652) - 1) << v1671;
            if (v1652 > 3)
              v884 = 0;
            if ((_DWORD)v1652)
            {
              if (v1652 <= 3)
                v923 = v1652;
              else
                v923 = 4;
              __asm { BR              X11 }
            }
LABEL_1127:
            v898 = v884 + 1;
          }
          if (v898)
            goto LABEL_1166;
          goto LABEL_1165;
        case 0x18:
          if (!__swift_getEnumTagSinglePayload(v755, 1, v1613))
            (*(void (**)(unint64_t, uint64_t))(v1605 + 8))(v755, v1613);
          __swift_destroy_boxed_opaque_existential_1((v1662 + v755) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          goto LABEL_868;
        case 0x1D:
          __swift_destroy_boxed_opaque_existential_1(v755);
          v828 = (v1653 + v755) & v1638;
          if (!__swift_getEnumTagSinglePayload(v828, 1, v1613))
            (*(void (**)(uint64_t, uint64_t))(v1605 + 8))(v828, v1613);
          goto LABEL_868;
        case 0x1E:
          __swift_destroy_boxed_opaque_existential_1(v755);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v829 = (v1644 + ((((v755 + 51) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v1638;
          v830 = v829;
          v831 = v1613;
          goto LABEL_830;
        case 0x20:
          swift_bridgeObjectRelease();
          v755 = (v755 + 23) & 0xFFFFFFFFFFFFFFF8;
          goto LABEL_829;
        case 0x21:
          if (v1654)
          {
            v832 = v1571;
            v833 = v1618;
            if (v1564 >= v1571)
            {
              v834 = v755;
              v832 = v1564;
              v835 = v1566;
            }
            else
            {
              v834 = (v1567 + v755) & v1618;
              v835 = v1570;
            }
            v930 = __swift_getEnumTagSinglePayload(v834, v832, v835);
            v758 = v1677;
          }
          else
          {
            v833 = v1618;
            v758 = v1677;
            if (!*(_BYTE *)(v755 + v1652))
              goto LABEL_1924;
            v912 = (*(unsigned __int8 *)(v755 + v1652) - 1) << v1671;
            if (v1652 > 3)
              v912 = 0;
            if ((_DWORD)v1652)
            {
              if (v1652 <= 3)
                v913 = v1652;
              else
                v913 = 4;
              __asm { BR              X11 }
            }
            v930 = v912 + 1;
          }
          if (v930)
            goto LABEL_1925;
LABEL_1924:
          (*(void (**)(unint64_t, uint64_t))(v1562 + 8))(v755, v1566);
          (*(void (**)(unint64_t, uint64_t))(v1563 + 8))((v1567 + v755) & v833, v1570);
LABEL_1925:
          v1317 = (v1555 + v755) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v1317);
          v1318 = (v1653 + v1317) & v1638;
          if (!__swift_getEnumTagSinglePayload(v1318, 1, v1613))
            (*(void (**)(uint64_t, uint64_t))(v1605 + 8))(v1318, v1613);
          swift_bridgeObjectRelease();
          goto LABEL_1928;
        case 0x22:
          if (!__swift_getEnumTagSinglePayload(v755, 1, v1613))
            (*(void (**)(unint64_t, uint64_t))(v1605 + 8))(v755, v1613);
          v836 = (v1662 + v755) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v836);
          v837 = (v1675 + v836) & v1515;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!__swift_getEnumTagSinglePayload((v1568 + v837) & v1628, 1, v1572))
            (*(void (**)(unint64_t, uint64_t))(v1554 + 8))((v1568 + v837) & v1628, v1572);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v838 = (v1529 + ((((v1647 + v837) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v1615;
          v758 = v1677;
          if (v1654)
            goto LABEL_840;
          if (!*(_BYTE *)(v838 + v1652))
            goto LABEL_1589;
          v914 = (*(unsigned __int8 *)(v838 + v1652) - 1) << v1671;
          if (v1652 > 3)
            v914 = 0;
          if ((_DWORD)v1652)
          {
            if (v1652 <= 3)
              v915 = v1652;
            else
              v915 = 4;
            __asm { BR              X11 }
          }
          goto LABEL_1588;
        case 0x23:
          if (!__swift_getEnumTagSinglePayload(v755, 1, v1613))
            (*(void (**)(unint64_t, uint64_t))(v1605 + 8))(v755, v1613);
          v841 = (v1662 + v755) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v841);
          v842 = (v1675 + v841) & v1515;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!__swift_getEnumTagSinglePayload((v1568 + v842) & v1628, 1, v1572))
            (*(void (**)(unint64_t, uint64_t))(v1554 + 8))((v1568 + v842) & v1628, v1572);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v843 = (v1556
                + ((((((((((((((v1647 + v842) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 25) & 0xFFFFFFFFFFFFFFF8)
                        + 23) & 0xFFFFFFFFFFFFFFF8)
                      + 23) & 0xFFFFFFFFFFFFFFF8)
                    + 23) & 0xFFFFFFFFFFFFFFF8)
                  + 23) & 0xFFFFFFFFFFFFFFF8)) & v1615;
          v758 = v1677;
          if (v1654)
          {
            v844 = v1571;
            v845 = v1618;
            if (v1564 >= v1571)
            {
              v846 = v843;
              v844 = v1564;
              v847 = v1566;
            }
            else
            {
              v846 = (v1567 + v843) & v1618;
              v847 = v1570;
            }
            v931 = __swift_getEnumTagSinglePayload(v846, v844, v847);
          }
          else
          {
            v845 = v1618;
            if (!*(_BYTE *)(v843 + v1652))
              goto LABEL_1591;
            v916 = (*(unsigned __int8 *)(v843 + v1652) - 1) << v1671;
            if (v1652 > 3)
              v916 = 0;
            if ((_DWORD)v1652)
            {
              if (v1652 <= 3)
                v917 = v1652;
              else
                v917 = 4;
              __asm { BR              X11 }
            }
            v931 = v916 + 1;
          }
          if (v931)
            goto LABEL_1928;
LABEL_1591:
          (*(void (**)(unint64_t, uint64_t))(v1562 + 8))(v843, v1566);
          (*(void (**)(unint64_t, uint64_t))(v1563 + 8))((v1567 + v843) & v845, v1570);
          goto LABEL_1928;
        case 0x24:
          if (!__swift_getEnumTagSinglePayload(v755, 1, v1613))
            (*(void (**)(unint64_t, uint64_t))(v1605 + 8))(v755, v1613);
          v848 = (v1662 + v755) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v848);
          swift_bridgeObjectRelease();
          v849 = (((v848 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
          v758 = v1677;
          if (*(_QWORD *)(v849 + 24) < 0xFFFFFFFFuLL)
            goto LABEL_869;
          goto LABEL_862;
        case 0x25:
          if (!__swift_getEnumTagSinglePayload(v755, 1, v1613))
            (*(void (**)(unint64_t, uint64_t))(v1605 + 8))(v755, v1613);
          goto LABEL_855;
        case 0x26:
          if (!__swift_getEnumTagSinglePayload(v755, 1, v1613))
            (*(void (**)(unint64_t, uint64_t))(v1605 + 8))(v755, v1613);
          v850 = (v1662 + v755) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v850);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v807 = ((((v850 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23;
LABEL_859:
          v851 = v807 & 0xFFFFFFFFFFFFFFF8;
          v758 = v1677;
          if (*(_QWORD *)((v807 & 0xFFFFFFFFFFFFFFF8) + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v851);
          v849 = (v851 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v849 + 24) >= 0xFFFFFFFFuLL)
LABEL_862:
            __swift_destroy_boxed_opaque_existential_1(v849);
          goto LABEL_869;
        case 0x27:
          if (!__swift_getEnumTagSinglePayload(v755, 1, v1613))
            (*(void (**)(unint64_t, uint64_t))(v1605 + 8))(v755, v1613);
LABEL_855:
          __swift_destroy_boxed_opaque_existential_1((v1662 + v755) & 0xFFFFFFFFFFFFFFF8);
          goto LABEL_868;
        case 0x28:
          __swift_destroy_boxed_opaque_existential_1(v755);
          v852 = (v1653 + v755) & v1638;
          if (!__swift_getEnumTagSinglePayload(v852, 1, v1613))
            (*(void (**)(uint64_t, uint64_t))(v1605 + 8))(v852, v1613);
          goto LABEL_868;
        case 0x29:
          __swift_destroy_boxed_opaque_existential_1(v755);
          v857 = (v1653 + v755) & v1638;
          if (!__swift_getEnumTagSinglePayload(v857, 1, v1613))
            (*(void (**)(uint64_t, uint64_t))(v1605 + 8))(v857, v1613);
          swift_bridgeObjectRelease();
LABEL_868:
          swift_bridgeObjectRelease();
          v758 = v1677;
          goto LABEL_869;
        case 0x2B:
LABEL_829:
          __swift_destroy_boxed_opaque_existential_1(v755);
          v829 = (v1653 + v755) & v1638;
          v830 = v829;
          v831 = v1613;
LABEL_830:
          v758 = v1677;
          if (!__swift_getEnumTagSinglePayload(v830, 1, v831))
            (*(void (**)(unint64_t, uint64_t))(v1605 + 8))(v829, v1613);
          goto LABEL_869;
        case 0x2D:
          if (!__swift_getEnumTagSinglePayload(v755, 1, v1613))
            (*(void (**)(unint64_t, uint64_t))(v1605 + 8))(v755, v1613);
          v858 = (v1662 + v755) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v858);
          v859 = (v858 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v859 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v859);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v860 = (((((((v859 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v861 = (v1556 + ((v860 + 47) & 0xFFFFFFFFFFFFFFF8)) & v1615;
          if (v1654)
          {
            v862 = v1571;
            v863 = v1618;
            if (v1564 >= v1571)
            {
              v864 = (v1556 + ((v860 + 47) & 0xFFFFFFFFFFFFFFF8)) & v1615;
              v862 = v1564;
              v865 = v1566;
            }
            else
            {
              v864 = (v1567 + v861) & v1618;
              v865 = v1570;
            }
            v932 = __swift_getEnumTagSinglePayload(v864, v862, v865);
            v918 = v1571;
            v758 = v1677;
          }
          else
          {
            v863 = v1618;
            v918 = v1571;
            v758 = v1677;
            if (!*(_BYTE *)(v861 + v1652))
              goto LABEL_1594;
            v919 = (*(unsigned __int8 *)(v861 + v1652) - 1) << v1671;
            if (v1652 > 3)
              v919 = 0;
            if ((_DWORD)v1652)
            {
              if (v1652 <= 3)
                v920 = v1652;
              else
                v920 = 4;
              __asm { BR              X11 }
            }
            v932 = v919 + 1;
          }
          if (v932)
            goto LABEL_1595;
LABEL_1594:
          (*(void (**)(unint64_t, uint64_t))(v1562 + 8))(v861, v1566);
          (*(void (**)(unint64_t, uint64_t))(v1563 + 8))((v1567 + v861) & v863, v1570);
          v918 = v1571;
LABEL_1595:
          v1173 = (v1549 + v861) & v1615;
          if (v1654)
          {
            v1174 = v83;
            if (v1564 >= v918)
            {
              v1175 = v1173;
              v918 = v1564;
              v1176 = v1566;
            }
            else
            {
              v1175 = (v1567 + v1173) & v863;
              v1176 = v1570;
            }
            v1179 = __swift_getEnumTagSinglePayload(v1175, v918, v1176);
          }
          else
          {
            v1174 = v83;
            if (!*(_BYTE *)(v1173 + v1652))
              goto LABEL_1691;
            v1177 = (*(unsigned __int8 *)(v1173 + v1652) - 1) << v1671;
            if (v1652 > 3)
              v1177 = 0;
            if ((_DWORD)v1652)
            {
              if (v1652 <= 3)
                v1178 = v1652;
              else
                v1178 = 4;
              __asm { BR              X11 }
            }
            v1179 = v1177 + 1;
          }
          if (v1179)
            goto LABEL_1692;
LABEL_1691:
          (*(void (**)(unint64_t, uint64_t))(v1562 + 8))(v1173, v1566);
          (*(void (**)(unint64_t, uint64_t))(v1563 + 8))((v1567 + v1173) & v863, v1570);
LABEL_1692:
          v1215 = (uint64_t *)((v1661 + v1173) & v1522);
          if ((v1571 & 0x80000000) != 0)
          {
            v1217 = __swift_getEnumTagSinglePayload(((unint64_t)v1215 + v1553) & v863, v1571, v1570);
          }
          else
          {
            v1216 = *v1215;
            if ((unint64_t)*v1215 >= 0xFFFFFFFF)
              LODWORD(v1216) = -1;
            v1217 = v1216 + 1;
          }
          if (!v1217)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v1563 + 8))(((unint64_t)v1215 + v1553) & v863, v1570);
          }
          v1218 = (uint64_t *)(((unint64_t)v1215 + v1537) & v1522);
          if ((v1571 & 0x80000000) != 0)
          {
            v1220 = __swift_getEnumTagSinglePayload(((unint64_t)v1218 + v1553) & v863, v1571, v1570);
          }
          else
          {
            v1219 = *v1218;
            if ((unint64_t)*v1218 >= 0xFFFFFFFF)
              LODWORD(v1219) = -1;
            v1220 = v1219 + 1;
          }
          v83 = v1174;
          if (!v1220)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v1563 + 8))(((unint64_t)v1218 + v1553) & v863, v1570);
          }
          v1221 = ((unint64_t)v1218 + v1643 + 9) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v1222 = (v1221 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v1222 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1((v1221 + 47) & 0xFFFFFFFFFFFFFFF8);
          v1223 = (v1675 + v1222) & v1515;
          if (v1565 >= 0x7FFFFFFF)
          {
            v1225 = (v1568 + v1223) & v1628;
            if (__swift_getEnumTagSinglePayload(v1225, v1560, v1572) > 1)
              goto LABEL_1928;
          }
          else
          {
            v1224 = *(_QWORD *)(((v1675 + v1222) & v1515) + 0x10);
            if (v1224 >= 0xFFFFFFFF)
              LODWORD(v1224) = -1;
            if ((int)v1224 - 1 >= 0)
              goto LABEL_1928;
            v1225 = (v1568 + v1223) & v1628;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!__swift_getEnumTagSinglePayload(v1225, 1, v1572))
            (*(void (**)(uint64_t, uint64_t))(v1554 + 8))(v1225, v1572);
          goto LABEL_1928;
        case 0x32:
          __swift_destroy_boxed_opaque_existential_1(v755);
          v866 = (v1653 + v755) & v1638;
          if (!__swift_getEnumTagSinglePayload(v866, 1, v1613))
            (*(void (**)(uint64_t, uint64_t))(v1605 + 8))(v866, v1613);
          v867 = (v1662 + v866) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          v868 = (v867 + 23) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v868 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1((v867 + 23) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
          v869 = (((v868 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
          swift_bridgeObjectRelease();
          v870 = (v1644 + v869) & v97;
          if (v1558 < 0x7FFFFFFF)
          {
            v872 = v1613;
            v758 = v1677;
            if (*(_QWORD *)(((v1662 + v870) & 0xFFFFFFFFFFFFF8) + 0x18) < 0xFFFFFFFFuLL)
              goto LABEL_1011;
          }
          else
          {
            v871 = (v1644 + v869) & v97;
            v872 = v1613;
            v758 = v1677;
            if (__swift_getEnumTagSinglePayload(v871, v1650, v1613) >= 2)
              goto LABEL_1011;
          }
          if (!__swift_getEnumTagSinglePayload(v870, 1, v872))
            (*(void (**)(uint64_t, uint64_t))(v1605 + 8))(v870, v872);
          __swift_destroy_boxed_opaque_existential_1((v1662 + v870) & 0xFFFFFFFFFFFFFFF8);
          swift_bridgeObjectRelease();
LABEL_1011:
          swift_bridgeObjectRelease();
          v803 = (v1536 + v870 + v1656) & v1515;
          goto LABEL_1688;
        case 0x33:
          if (!__swift_getEnumTagSinglePayload(v755, 1, v1613))
            (*(void (**)(unint64_t, uint64_t))(v1605 + 8))(v755, v1613);
          v873 = (v1662 + v755) & 0xFFFFFFFFFFFFFFF8;
          __swift_destroy_boxed_opaque_existential_1(v873);
          v874 = (v873 + 47) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v874 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v874);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v875 = (v1527
                + ((((((v874 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v1678;
          if (v1552 > 0x7FFFFFFE)
          {
            v878 = (v875 + 23) & 0xFFFFFFFFFFFFFFF8;
            v899 = __swift_getEnumTagSinglePayload((v1655 + ((v878 + 23) & 0xFFFFFFFFFFFFFFF8) + 33) & v95, v1552, v1550);
            v877 = v1571;
            v758 = v1677;
            if (v899)
              goto LABEL_1014;
            goto LABEL_1013;
          }
          LODWORD(v876) = -1;
          if (*(_QWORD *)(((v1527
                           + ((((((v874 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v1678)
                         + 8) < 0xFFFFFFFFuLL)
            v876 = *(_QWORD *)(((v1527
                               + ((((((v874 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v1678)
                             + 8);
          v877 = v1571;
          v758 = v1677;
          if ((v876 + 1) <= 1)
          {
            v878 = (v875 + 23) & 0xFFFFFFFFFFFFFFF8;
LABEL_1013:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v900 = (id *)((v878 + 47) & 0xFFFFFFFFFFFFFFF8);

            (*(void (**)(unint64_t, uint64_t))(v1642 + 8))(((unint64_t)v900 + v1655 + 9) & v95, v1550);
            v877 = v1571;
          }
LABEL_1014:
          v901 = (v1531 + v875) & v1615;
          if (v1654)
          {
            v902 = v1618;
            if (v1564 >= v877)
            {
              v903 = (v1531 + v875) & v1615;
              v877 = v1564;
              v904 = v1566;
            }
            else
            {
              v903 = (v1567 + v901) & v1618;
              v904 = v1570;
            }
            v934 = __swift_getEnumTagSinglePayload(v903, v877, v904);
            v924 = ~v1674;
          }
          else
          {
            v924 = ~v1674;
            v902 = v1618;
            if (!*(_BYTE *)(v901 + v1652))
            {
LABEL_1615:
              (*(void (**)(unint64_t, uint64_t))(v1562 + 8))(v901, v1566);
              (*(void (**)(unint64_t, uint64_t))(v1563 + 8))((v1567 + v901) & v902, v1570);
LABEL_1616:
              swift_bridgeObjectRelease();
              v1180 = (((v1555 + v901) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
              swift_bridgeObjectRelease();
              v1181 = (v1534 + v1180) & v1615;
              if (v1654)
              {
                v1182 = v1571;
                if (v1564 >= v1571)
                {
                  v1183 = (v1534 + v1180) & v1615;
                  v1182 = v1564;
                  v1184 = v1566;
                }
                else
                {
                  v1183 = (v1567 + v1181) & v902;
                  v1184 = v1570;
                }
                v1187 = __swift_getEnumTagSinglePayload(v1183, v1182, v1184);
              }
              else
              {
                if (!*(_BYTE *)(v1181 + v1652))
                {
LABEL_1718:
                  (*(void (**)(unint64_t, uint64_t))(v1562 + 8))(v1181, v1566);
                  (*(void (**)(unint64_t, uint64_t))(v1563 + 8))((v1567 + v1181) & v902, v1570);
LABEL_1719:
                  v1226 = (v1555 + v1181) & 0xFFFFFFFFFFFFFFF8;
                  swift_bridgeObjectRelease();
                  v1227 = (v1659 + v1226) & v1615;
                  if (v1654)
                  {
                    v1228 = v1571;
                    if (v1564 >= v1571)
                    {
                      v1229 = (v1659 + v1226) & v1615;
                      v1228 = v1564;
                      v1230 = v1566;
                    }
                    else
                    {
                      v1229 = (v1567 + v1227) & v902;
                      v1230 = v1570;
                    }
                    v1234 = __swift_getEnumTagSinglePayload(v1229, v1228, v1230);
                    v1231 = v1572;
                  }
                  else
                  {
                    v1231 = v1572;
                    if (!*(_BYTE *)(v1227 + v1652))
                    {
LABEL_1734:
                      (*(void (**)(unint64_t, uint64_t))(v1562 + 8))(v1227, v1566);
                      (*(void (**)(unint64_t, uint64_t))(v1563 + 8))((v1567 + v1227) & v902, v1570);
LABEL_1735:
                      v803 = (v1539 + v1227) & v924;
                      if (v1565 >= 0x7FFFFFFF)
                      {
                        v1211 = (v1568 + v803) & v1628;
                        v1212 = v1211;
                        v1213 = v1560;
                        v1214 = v1231;
LABEL_1741:
                        if (__swift_getEnumTagSinglePayload(v1212, v1213, v1214) <= 1)
                          goto LABEL_1742;
                        goto LABEL_869;
                      }
                      goto LABEL_1736;
                    }
                    v1232 = (*(unsigned __int8 *)(v1227 + v1652) - 1) << v1671;
                    if (v1652 > 3)
                      v1232 = 0;
                    if ((_DWORD)v1652)
                    {
                      if (v1652 <= 3)
                        v1233 = v1652;
                      else
                        v1233 = 4;
                      __asm { BR              X11 }
                    }
                    v1234 = v1232 + 1;
                  }
                  if (v1234)
                    goto LABEL_1735;
                  goto LABEL_1734;
                }
                v1185 = (*(unsigned __int8 *)(v1181 + v1652) - 1) << v1671;
                if (v1652 > 3)
                  v1185 = 0;
                if ((_DWORD)v1652)
                {
                  if (v1652 <= 3)
                    v1186 = v1652;
                  else
                    v1186 = 4;
                  __asm { BR              X11 }
                }
                v1187 = v1185 + 1;
              }
              if (v1187)
                goto LABEL_1719;
              goto LABEL_1718;
            }
            v925 = (*(unsigned __int8 *)(v901 + v1652) - 1) << v1671;
            if (v1652 > 3)
              v925 = 0;
            if ((_DWORD)v1652)
            {
              if (v1652 <= 3)
                v926 = v1652;
              else
                v926 = 4;
              __asm { BR              X11 }
            }
            v934 = v925 + 1;
          }
          if (v934)
            goto LABEL_1616;
          goto LABEL_1615;
        default:
          if (v1636 <= 3)
            v756 = v1636;
          else
            v756 = 4;
          __asm { BR              X12 }
          return result;
      }
    case 2:
    case 3:
      goto LABEL_119;
    default:
      goto LABEL_122;
  }
}

uint64_t sub_21CF0EFEC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  char v78;
  int v79;
  unsigned int v81;
  int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;

  v105 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  v3 = *(_QWORD *)(sub_21D7C4668() - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v103 = v4 + 16;
  v5 = *(_DWORD *)(v3 + 84);
  v6 = *(_QWORD *)(v3 + 64);
  if (v5)
    v7 = v6;
  else
    v7 = v6 + 1;
  v108 = v7;
  v106 = v4 | 7;
  v8 = *(_QWORD *)(sub_21D7BF754() - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v9 | 7;
  v11 = *(_QWORD *)(sub_21D7C3840() - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(sub_21D7C3804() - 8);
  v14 = *(_DWORD *)(v13 + 84);
  v15 = *(_DWORD *)(v13 + 80);
  v16 = *(_DWORD *)(v13 + 80) | v12;
  v17 = v4 | 7 | v9 | v16;
  v100 = v4;
  v101 = v4 + 40;
  v18 = (v4 + 40) & ~v4;
  v19 = (v9 + 113) & ~v9;
  v20 = *(_QWORD *)(v8 + 64);
  v98 = *(_QWORD *)(v13 + 64);
  v21 = ((*(_QWORD *)(v11 + 64) + v15) & ~v15) + v98;
  if (!*(_DWORD *)(v8 + 84))
    ++v20;
  v93 = v20;
  v94 = v18 + v7;
  v95 = (v18 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v109 = v9 + 40;
  if (!(v14 | *(_DWORD *)(v11 + 84)))
    ++v21;
  v88 = v21;
  v89 = v20 + v19;
  v87 = v21 + 1;
  v22 = v21 + 1 + ((v16 + 160) & ~v16);
  if (v20 + v19 + ((v9 + 40 + ((((v95 + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v10) > v22)
    v22 = v20 + v19 + ((v9 + 40 + ((((v95 + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v10);
  if (v22 <= 0x30)
    v22 = 48;
  v92 = v22 + ((v17 + 1) & ~v17) + 1;
  v23 = *(_QWORD *)(sub_21D7C3F6C() - 8);
  v24 = *(unsigned __int8 *)(v23 + 80);
  v25 = ((v24 | 7) + ((((((v4 + 16) & ~v4) + v7 + v17) & ~v17) + v92 + 11) & 0xFFFFFFFFFFFFFFF8) + 58) & ~(v24 | 7);
  v26 = *(_DWORD *)(v23 + 84) == 0;
  v27 = (v24 + 16) & ~v24;
  v28 = *(_QWORD *)(v23 + 64);
  if (v26)
    ++v28;
  v29 = v28 + v27;
  v30 = *(_QWORD *)(sub_21D7C4314() - 8);
  v31 = *(unsigned __int8 *)(v30 + 80);
  v107 = v31 | 7;
  v32 = v15 | 7;
  v33 = *(_QWORD *)(sub_21D7BF964() - 8);
  v34 = *(unsigned __int8 *)(v33 + 80);
  v102 = (v29 + (v17 | v15 | v31 | v34) + v25) & ~(v17 | v15 | v31 | v34);
  v97 = v108 + 7;
  v35 = (v108 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 47) & 0xFFFFFFFFFFFFFFF8;
  v37 = v98 + ((v15 + 8) & ~v15);
  v38 = (v36 + 23) & 0xFFFFFFFFFFFFFFF8;
  v39 = *(_QWORD *)(v33 + 64) + ((v87 + v34 + ((v36 + 16 + v16) & ~v16)) & ~v34);
  v40 = ((v31 + 65) & ~v31) + *(_QWORD *)(v30 + 64);
  v41 = (((((v38 + 15) & 0xFFFFFFFFFFFFFFF8) + v107 + 16) & ~v107) + v40) & 0xFFFFFFFFFFFFFFF8;
  v99 = v16 + 16;
  v42 = v88 + v32;
  v43 = v37 + v10;
  v91 = v89 + v106;
  v96 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v44 = v96 + v106 + 16;
  v90 = v96 + 24;
  v45 = v9 + 8;
  v46 = v89 + ((v9 + 8) & ~v10);
  if (v46 <= v96
            + 24
            + ((v44
              + ((v44
                + ((v89
                  + v106
                  + ((v37 + v10 + ((v88 + v32 + ((v16 + 16 + ((v41 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & ~v32)) & ~v10)) & ~v106)) & ~v106)) & ~v106))
    v47 = v96
        + 24
        + ((v44
          + ((v44
            + ((v89
              + v106
              + ((v37 + v10 + ((v88 + v32 + ((v16 + 16 + ((v41 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & ~v32)) & ~v10)) & ~v106)) & ~v106)) & ~v106);
  else
    v47 = v89 + ((v9 + 8) & ~v10);
  v48 = v89 + v16;
  v49 = ((v42 + ((v89 + v16 + ((v109 + ((v39 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v10)) & ~v16)) & ~v32) + v37;
  if (v47 <= v49)
    v47 = v49;
  v50 = v88 + 7;
  v51 = ((((v88 + 7 + ((v48 + ((v10 + ((v38 + 47) & 0xFFFFFFFFFFFFFFF8) + 41) & ~v10)) & ~v16)) & 0xFFFFFFFFFFFFFFF8)
        + 47) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v47 <= v51)
    v47 = ((((v88 + 7 + ((v48 + ((v10 + ((v38 + 47) & 0xFFFFFFFFFFFFFFF8) + 41) & ~v10)) & ~v16)) & 0xFFFFFFFFFFFFFFF8)
          + 47) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  v52 = v35 + 40;
  v53 = v17 + v35 + 40;
  v54 = (v53 | v17) + v51;
  v55 = v53 & ~v17;
  v56 = ((v17 + ((v92 + (v54 & ~v17) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v17) + v92;
  if (v47 > v56)
    v56 = v47;
  v57 = (v89 + 7 + ((v52 + v9) & ~v10)) & 0xFFFFFFFFFFFFFFF8;
  if (v56 <= ((((((v57 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8)
    v56 = ((((((v57 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
  v58 = ((v43 + ((v42 + ((v87 + v16 + ((((v36 + 16 + v9) & ~v9) + v16 + v93) & ~v16)) & ~v16)) & ~v32)) & ~v10) + v89;
  if (v56 > v58)
    v58 = v56;
  if (v58 <= (((((v94 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16)
    v58 = (((((v94 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v58 <= ((v40 + ((v52 + v31) & ~v107) + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
    v58 = ((v40 + ((v52 + v31) & ~v107) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v59 = v89 + ((v95 + v10 + 17) & ~v10);
  if (v58 <= v59 + 1)
    v60 = v59 + 1;
  else
    v60 = v58;
  v61 = (v95 + 23) & 0xFFFFFFFFFFFFFFF8;
  v62 = (((v61 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  if (v60 <= ((((v62 + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 41)
    v60 = ((((v62 + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 41;
  v63 = (v16 + ((((((v62 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 40) & ~v16;
  v64 = v88 + v16;
  v65 = ((v88 + v16 + v63) & ~v16) + v88;
  if (v60 <= v65)
    v60 = v65;
  v66 = (v38 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (v60 <= v66 + 8)
    v60 = v66 + 8;
  v67 = ((v66 + 47) & 0xFFFFFFFFFFFFFFF8) + 40;
  v68 = ((v45 + ((v50 + v55 + ((v48 + ((v67 + v10) & ~v10)) & ~v16)) & 0xFFFFFFFFFFFFFFF8)) & ~v10) + v89;
  if (v60 <= v68)
    v69 = v68;
  else
    v69 = v60;
  if (v69 <= v36 + 17)
    v69 = v36 + 17;
  if (v69 <= v90
            + ((v44 + ((v44 + ((v91 + ((v43 + ((v42 + ((v16 + v41 + 24) & ~v16)) & ~v32)) & ~v10)) & ~v106)) & ~v106)) & ~v106))
    v69 = v90
        + ((v44 + ((v44 + ((v91 + ((v43 + ((v42 + ((v16 + v41 + 24) & ~v16)) & ~v32)) & ~v10)) & ~v106)) & ~v106)) & ~v106);
  if (v69 <= v46)
    v69 = v46;
  v70 = (v36 + 15) & 0xFFFFFFFFFFFFFFF8;
  if (v69 <= v70 + 16)
    v69 = v70 + 16;
  if (v69 <= ((v94 + 9) & 0xFFFFFFFFFFFFFFF8) + 17)
    v69 = ((v94 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
  if (v69 <= ((v100 + 80) & (unint64_t)~v100) + v108)
    v69 = ((v100 + 80) & ~v100) + v108;
  if (v69 <= ((v100 + 56) & (unint64_t)~v100) + v108)
    v69 = ((v100 + 56) & ~v100) + v108;
  if (v69 <= ((((v97 + ((v101 + (v50 & 0xFFFFFFFFFFFFFFF8)) & ~v100)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
            + 16)
    v69 = ((((v97 + ((v101 + (v50 & 0xFFFFFFFFFFFFFFF8)) & ~v100)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  v71 = (v57 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (v69 <= ((v16 + v71 + 18) & ~v16) + v88)
    v69 = ((v16 + v71 + 18) & ~v16) + v88;
  v72 = ((v50
        + ((v16
          + 8
          + ((((((((((v71 + 25) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v69 <= v72)
    v69 = v72;
  if (v69 <= v38 + 40)
    v69 = v38 + 40;
  if (v69 <= v70 + 8)
    v69 = v70 + 8;
  if (v69 <= v67)
    v69 = v67;
  if (v69 <= v36 + 8)
    v69 = v36 + 8;
  if (v69 <= v95 + 8)
    v69 = v95 + 8;
  if (v69 <= ((v95 + 15) & 0xFFFFFFFFFFFFFFF8) + 8)
    v69 = ((v95 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v69 <= v94)
    v69 = v94;
  v73 = (((v96 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  if (v69 <= ((v89
              + 7
              + ((v109
                + ((((v37
                    + ((v37
                      + v32
                      + ((v42
                        + ((v64
                          + ((v16 + 8 + ((((v73 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & ~v16)) & ~v32)) & ~v32)
                    + 9) & 0xFFFFFFFFFFFFFFF8)
                  + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v10)) & 0xFFFFFFFFFFFFFFF8)
            + 16)
    v69 = ((v89
          + 7
          + ((v109
            + ((((v37
                + ((v37
                  + v32
                  + ((v42
                    + ((v64 + ((v16 + 8 + ((((v73 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & ~v16)) & ~v32)) & ~v32)
                + 9) & 0xFFFFFFFFFFFFFFF8)
              + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v10)) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  v74 = ((v10 + v36 + 17 + ((v103 + ((((v61 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v106) + 23) & ~v10)
      + v89;
  if (v69 > v74)
    v74 = v69;
  if (v74 <= ((v88
              + v10
              + ((v99
                + ((v50
                  + ((v16
                    + ((((v50 + ((v40 + v16 + ((v73 + v107 + 8) & ~v107)) & ~v16)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                    + 9) & ~v16)) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & ~v10)
            + v89)
    v74 = ((v88
          + v10
          + ((v99
            + ((v50
              + ((v16
                + ((((v50 + ((v40 + v16 + ((v73 + v107 + 8) & ~v107)) & ~v16)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 9) & ~v16)) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & ~v10)
        + v89;
  v75 = 8;
  if (v74 <= 8)
    v74 = 8;
  v76 = ((v102 + v74 + 8) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v76 <= v105)
    v76 = v105;
  if (v76 > 8)
    v75 = v76;
  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_107;
  v77 = v75 + 1;
  v78 = 8 * (v75 + 1);
  if ((v75 + 1) <= 3)
  {
    v81 = ((a2 + ~(-1 << v78) - 251) >> v78) + 1;
    if (HIWORD(v81))
    {
      v79 = *(_DWORD *)(a1 + v77);
      if (!v79)
        goto LABEL_107;
      goto LABEL_100;
    }
    if (v81 > 0xFF)
    {
      v79 = *(unsigned __int16 *)(a1 + v77);
      if (!*(_WORD *)(a1 + v77))
        goto LABEL_107;
      goto LABEL_100;
    }
    if (v81 < 2)
    {
LABEL_107:
      v83 = *(unsigned __int8 *)(a1 + v75);
      v84 = v83 ^ 0xFF;
      v85 = 256 - v83;
      if (v84 <= 0xFA)
        return v85;
      else
        return 0;
    }
  }
  v79 = *(unsigned __int8 *)(a1 + v77);
  if (!*(_BYTE *)(a1 + v77))
    goto LABEL_107;
LABEL_100:
  v82 = (v79 - 1) << v78;
  if (v77 > 3)
    v82 = 0;
  if ((_DWORD)v77)
  {
    if (v77 > 3)
      LODWORD(v77) = 4;
    __asm { BR              X11 }
  }
  return (v82 + 252);
}

void sub_21CF0F998(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  size_t v80;
  char v81;
  _BYTE *v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  int v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v105;
  unint64_t v106;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;

  v106 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  v4 = *(_QWORD *)(sub_21D7C4668() - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v105 = v5 + 16;
  v6 = *(_DWORD *)(v4 + 84);
  v7 = *(_QWORD *)(v4 + 64);
  if (!v6)
    ++v7;
  v8 = ((v5 + 16) & ~v5) + v7;
  v9 = v7;
  v111 = v7;
  v109 = v5 | 7;
  v10 = *(_QWORD *)(sub_21D7BF754() - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v11 | 7;
  v13 = *(_QWORD *)(sub_21D7C3840() - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(sub_21D7C3804() - 8);
  v16 = *(_DWORD *)(v15 + 84);
  v17 = *(_DWORD *)(v15 + 80);
  v18 = *(_DWORD *)(v15 + 80) | v14;
  v19 = v5 | 7 | v11 | v18;
  v101 = v5;
  v102 = v5 + 40;
  v20 = (v5 + 40) & ~v5;
  v21 = (v11 + 113) & ~v11;
  v22 = *(_QWORD *)(v10 + 64);
  v99 = *(_QWORD *)(v15 + 64);
  v23 = ((*(_QWORD *)(v13 + 64) + v17) & ~v17) + v99;
  if (!*(_DWORD *)(v10 + 84))
    ++v22;
  v93 = v22;
  v94 = v20 + v9;
  v96 = (v20 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v112 = v11 + 40;
  if (!(v16 | *(_DWORD *)(v13 + 84)))
    ++v23;
  v90 = v23;
  v91 = v22 + v21;
  v89 = v23 + 1;
  v24 = v23 + 1 + ((v18 + 160) & ~v18);
  if (v22 + v21 + ((v11 + 40 + ((((v96 + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v12) > v24)
    v24 = v22 + v21 + ((v11 + 40 + ((((v96 + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v12);
  if (v24 <= 0x30)
    v24 = 48;
  v92 = v24 + ((v19 + 1) & ~v19) + 1;
  v25 = *(_QWORD *)(sub_21D7C3F6C() - 8);
  v26 = *(unsigned __int8 *)(v25 + 80);
  v27 = ((v26 | 7) + ((((v8 + v19) & ~v19) + v92 + 11) & 0xFFFFFFFFFFFFFFF8) + 58) & ~(v26 | 7);
  v28 = *(_DWORD *)(v25 + 84) == 0;
  v29 = (v26 + 16) & ~v26;
  v30 = *(_QWORD *)(v25 + 64);
  if (v28)
    ++v30;
  v31 = v30 + v29;
  v32 = *(_QWORD *)(sub_21D7C4314() - 8);
  v33 = *(unsigned __int8 *)(v32 + 80);
  v110 = v33 | 7;
  v34 = v17 | 7;
  v35 = *(_QWORD *)(sub_21D7BF964() - 8);
  v36 = *(unsigned __int8 *)(v35 + 80);
  v103 = (v31 + (v19 | v17 | v33 | v36) + v27) & ~(v19 | v17 | v33 | v36);
  v37 = ((v33 + 65) & ~v33) + *(_QWORD *)(v32 + 64);
  v98 = v111 + 7;
  v38 = (v111 + 7) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 47) & 0xFFFFFFFFFFFFFFF8;
  v40 = v99 + ((v17 + 8) & ~v17);
  v41 = *(_QWORD *)(v35 + 64) + ((v89 + v36 + ((v39 + 16 + v18) & ~v18)) & ~v36);
  v88 = (v39 + 23) & 0xFFFFFFFFFFFFFFF8;
  v95 = v37;
  v43 = (((((v88 + 15) & 0xFFFFFFFFFFFFFFF8) + v110 + 16) & ~v110) + v37) & 0xFFFFFFFFFFFFFFF8;
  v100 = v18 + 16;
  v44 = v90 + (v17 | 7);
  v45 = v40 + v12;
  v97 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v46 = v97 + v109 + 16;
  v47 = v11 + 8;
  v48 = v91 + ((v11 + 8) & ~v12);
  if (v48 <= v97
            + 24
            + ((v46
              + ((v46
                + ((v91
                  + v109
                  + ((v40 + v12 + ((v90 + v34 + ((v18 + 16 + ((v43 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v18)) & ~v34)) & ~v12)) & ~v109)) & ~v109)) & ~v109))
    v49 = v97
        + 24
        + ((v46
          + ((v46
            + ((v91
              + v109
              + ((v40 + v12 + ((v90 + v34 + ((v18 + 16 + ((v43 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v18)) & ~v34)) & ~v12)) & ~v109)) & ~v109)) & ~v109);
  else
    v49 = v91 + ((v11 + 8) & ~v12);
  v50 = v91 + v18;
  v51 = ((v44 + ((v91 + v18 + ((v112 + ((v41 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v12)) & ~v18)) & ~v34) + v40;
  if (v49 <= v51)
    v49 = v51;
  v52 = v90 + 7;
  v42 = (v39 + 23) & 0xFFFFFFFFFFFFFFF8;
  v53 = ((((v90 + 7 + ((v50 + ((v12 + ((v42 + 47) & 0xFFFFFFFFFFFFFFF8) + 41) & ~v12)) & ~v18)) & 0xFFFFFFFFFFFFFFF8)
        + 47) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v49 <= v53)
    v49 = ((((v90 + 7 + ((v50 + ((v12 + ((v42 + 47) & 0xFFFFFFFFFFFFFFF8) + 41) & ~v12)) & ~v18)) & 0xFFFFFFFFFFFFFFF8)
          + 47) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  v54 = v38 + 40;
  v55 = v19 + v38 + 40;
  v56 = (v55 | v19) + v53;
  v57 = v55 & ~v19;
  v58 = ((v19 + ((v92 + (v56 & ~v19) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v19) + v92;
  if (v49 > v58)
    v58 = v49;
  v59 = (v91 + 7 + ((v54 + v11) & ~v12)) & 0xFFFFFFFFFFFFFFF8;
  if (v58 <= ((((((v59 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8)
    v58 = ((((((v59 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
  v60 = ((v45 + ((v44 + ((v89 + v18 + ((((v39 + 16 + v11) & ~v11) + v18 + v93) & ~v18)) & ~v18)) & ~v34)) & ~v12) + v91;
  if (v58 > v60)
    v60 = v58;
  if (v60 <= (((((v94 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16)
    v60 = (((((v94 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v60 <= ((v37 + ((v54 + v33) & ~v110) + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
    v60 = ((v37 + ((v54 + v33) & ~v110) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v61 = v91 + ((v96 + v12 + 17) & ~v12);
  if (v60 <= v61 + 1)
    v62 = v61 + 1;
  else
    v62 = v60;
  v63 = (v96 + 23) & 0xFFFFFFFFFFFFFFF8;
  v64 = (((v63 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  if (v62 <= ((((v64 + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 41)
    v62 = ((((v64 + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 41;
  v65 = (v18 + ((((((v64 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 40) & ~v18;
  v66 = v90 + v18;
  v67 = ((v90 + v18 + v65) & ~v18) + v90;
  if (v62 <= v67)
    v62 = v67;
  v68 = (v88 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (v62 <= v68 + 8)
    v62 = v68 + 8;
  v69 = ((v68 + 47) & 0xFFFFFFFFFFFFFFF8) + 40;
  v70 = ((v47 + ((v52 + v57 + ((v50 + ((v69 + v12) & ~v12)) & ~v18)) & 0xFFFFFFFFFFFFFFF8)) & ~v12) + v91;
  if (v62 <= v70)
    v71 = v70;
  else
    v71 = v62;
  if (v71 <= v39 + 17)
    v71 = v39 + 17;
  if (v71 <= v97
            + 24
            + ((v46
              + ((v46 + ((v91 + v109 + ((v45 + ((v44 + ((v18 + v43 + 24) & ~v18)) & ~v34)) & ~v12)) & ~v109)) & ~v109)) & ~v109))
    v71 = v97
        + 24
        + ((v46 + ((v46 + ((v91 + v109 + ((v45 + ((v44 + ((v18 + v43 + 24) & ~v18)) & ~v34)) & ~v12)) & ~v109)) & ~v109)) & ~v109);
  if (v71 <= v48)
    v71 = v48;
  v72 = (v39 + 15) & 0xFFFFFFFFFFFFFFF8;
  if (v71 <= v72 + 16)
    v71 = v72 + 16;
  if (v71 <= ((v94 + 9) & 0xFFFFFFFFFFFFFFF8) + 17)
    v71 = ((v94 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
  if (v71 <= ((v101 + 80) & (unint64_t)~v101) + v111)
    v71 = ((v101 + 80) & ~v101) + v111;
  if (v71 <= ((v101 + 56) & (unint64_t)~v101) + v111)
    v71 = ((v101 + 56) & ~v101) + v111;
  v73 = (v102 + (v52 & 0xFFFFFFFFFFFFFFF8)) & ~v101;
  if (v71 <= ((((v98 + v73) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16)
    v71 = ((((v98 + v73) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v74 = (v59 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (v71 <= ((v18 + v74 + 18) & ~v18) + v90)
    v71 = ((v18 + v74 + 18) & ~v18) + v90;
  v75 = v18 + 8;
  v76 = ((v52
        + ((v18
          + 8
          + ((((((((((v74 + 25) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v18)) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v71 <= v76)
    v71 = v76;
  if (v71 <= v88 + 40)
    v71 = v88 + 40;
  if (v71 <= v72 + 8)
    v71 = v72 + 8;
  if (v71 <= v69)
    v71 = v69;
  if (v71 <= v39 + 8)
    v71 = v39 + 8;
  if (v71 <= v96 + 8)
    v71 = v96 + 8;
  if (v71 <= ((v96 + 15) & 0xFFFFFFFFFFFFFFF8) + 8)
    v71 = ((v96 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v71 <= v94)
    v71 = v94;
  v77 = (((v97 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  if (v71 <= ((v91
              + 7
              + ((v112
                + ((((v40
                    + ((v40
                      + v34
                      + ((v44
                        + ((v66 + ((v75 + ((((v77 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v18)) & ~v18)) & ~v34)) & ~v34)
                    + 9) & 0xFFFFFFFFFFFFFFF8)
                  + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v12)) & 0xFFFFFFFFFFFFFFF8)
            + 16)
    v71 = ((v91
          + 7
          + ((v112
            + ((((v40
                + ((v40
                  + v34
                  + ((v44
                    + ((v66 + ((v75 + ((((v77 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v18)) & ~v18)) & ~v34)) & ~v34)
                + 9) & 0xFFFFFFFFFFFFFFF8)
              + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v12)) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  v78 = ((v12 + v39 + 17 + ((v105 + ((((v63 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v109) + 23) & ~v12)
      + v91;
  if (v71 > v78)
    v78 = v71;
  if (v78 <= ((v90
              + v12
              + ((v100
                + ((v52
                  + ((v18
                    + ((((v52 + ((v95 + v18 + ((v77 + v110 + 8) & ~v110)) & ~v18)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                    + 9) & ~v18)) & 0xFFFFFFFFFFFFFFF8)) & ~v18)) & ~v12)
            + v91)
    v78 = ((v90
          + v12
          + ((v100
            + ((v52
              + ((v18
                + ((((v52 + ((v95 + v18 + ((v77 + v110 + 8) & ~v110)) & ~v18)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 9) & ~v18)) & 0xFFFFFFFFFFFFFFF8)) & ~v18)) & ~v12)
        + v91;
  if (v78 <= 8)
    v78 = 8;
  v79 = ((v103 + v78 + 8) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v79 <= v106)
    v79 = v106;
  if (v79 <= 8)
    v79 = 8;
  v80 = v79 + 1;
  v81 = 8 * (v79 + 1);
  if (a3 < 0xFC)
  {
    v84 = 0;
    v82 = a1;
    v83 = a2;
  }
  else
  {
    v82 = a1;
    v83 = a2;
    if (v80 <= 3)
    {
      v86 = ((a3 + ~(-1 << v81) - 251) >> v81) + 1;
      if (HIWORD(v86))
      {
        v84 = 4u;
      }
      else if (v86 >= 0x100)
      {
        v84 = 2;
      }
      else
      {
        v84 = v86 > 1;
      }
    }
    else
    {
      v84 = 1u;
    }
  }
  if (v83 <= 0xFB)
    __asm { BR              X11 }
  v85 = v83 - 252;
  if (v80 < 4)
  {
    if ((_DWORD)v79 != -1)
    {
      v87 = v85 & ~(-1 << v81);
      bzero(v82, v80);
      if ((_DWORD)v80 == 3)
      {
        *(_WORD *)v82 = v87;
        v82[2] = BYTE2(v87);
      }
      else if ((_DWORD)v80 == 2)
      {
        *(_WORD *)v82 = v87;
      }
      else
      {
        *v82 = v87;
      }
    }
  }
  else
  {
    bzero(v82, v79 + 1);
    *(_DWORD *)v82 = v85;
  }
  __asm { BR              X10 }
}

uint64_t sub_21CF103BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t result;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v99;
  uint64_t v100;

  v99 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  v2 = *(_QWORD *)(sub_21D7C4668() - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = *(_DWORD *)(v2 + 84);
  v5 = *(_QWORD *)(v2 + 64);
  if (!v4)
    ++v5;
  v6 = ((v3 + 16) & ~v3) + v5;
  v7 = v5;
  v77 = v5;
  v94 = v3 | 7;
  v8 = *(_QWORD *)(sub_21D7BF754() - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v9 | 7;
  v11 = *(_QWORD *)(sub_21D7C3840() - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(sub_21D7C3804() - 8);
  v14 = *(_DWORD *)(v13 + 84);
  v15 = *(_DWORD *)(v13 + 80);
  v16 = *(_DWORD *)(v13 + 80) | v12;
  v17 = v3 | 7 | v9 | v16;
  v18 = (v3 + 40) & ~v3;
  v19 = (v9 + 113) & ~v9;
  v20 = *(_QWORD *)(v8 + 64);
  v91 = *(_QWORD *)(v13 + 64);
  v21 = ((*(_QWORD *)(v11 + 64) + v15) & ~v15) + v91;
  if (!*(_DWORD *)(v8 + 84))
    ++v20;
  v84 = v20;
  v97 = v18 + v7;
  v95 = (v18 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v100 = v9 + 40;
  if (!(v14 | *(_DWORD *)(v11 + 84)))
    ++v21;
  v80 = v20 + v19;
  v81 = v21;
  v83 = v21 + 1;
  v22 = v21 + 1 + ((v16 + 160) & ~v16);
  if (v20 + v19 + ((v9 + 40 + ((((v95 + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v10) > v22)
    v22 = v20 + v19 + ((v9 + 40 + ((((v95 + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v10);
  if (v22 <= 0x30)
    v22 = 48;
  v89 = v22 + ((v17 + 1) & ~v17) + 1;
  v23 = *(_QWORD *)(sub_21D7C3F6C() - 8);
  v24 = *(unsigned __int8 *)(v23 + 80);
  v25 = ((v24 | 7) + ((((v6 + v17) & ~v17) + v89 + 11) & 0xFFFFFFFFFFFFFFF8) + 58) & ~(v24 | 7);
  v26 = *(_DWORD *)(v23 + 84) == 0;
  v27 = (v24 + 16) & ~v24;
  v28 = *(_QWORD *)(v23 + 64);
  if (v26)
    ++v28;
  v29 = v28 + v27;
  v30 = *(_QWORD *)(sub_21D7C4314() - 8);
  v31 = *(unsigned __int8 *)(v30 + 80);
  v87 = v31 | 7;
  v88 = v15 | 7;
  v32 = *(_QWORD *)(sub_21D7BF964() - 8);
  v33 = *(unsigned __int8 *)(v32 + 80);
  v96 = (v29 + (v17 | v15 | v31 | v33) + v25) & ~(v17 | v15 | v31 | v33);
  v79 = ((v31 + 65) & ~v31) + *(_QWORD *)(v30 + 64);
  v34 = (v77 + 7) & 0xFFFFFFFFFFFFFFF8;
  v35 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  v36 = v91 + ((v15 + 8) & ~v15);
  v37 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  v92 = ((((v81 + 7 + ((v80 + v16 + ((v10 + ((v37 + 47) & 0xFFFFFFFFFFFFFFF8) + 41) & ~v10)) & ~v16)) & 0xFFFFFFFFFFFFFFF8)
        + 47) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v38 = v34 + 40;
  v39 = v17 + v34 + 40;
  v40 = v39 & ~v17;
  v90 = ((v17 + ((v89 + (((v39 | v17) + v92) & ~v17) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v17) + v89;
  v41 = v9;
  v78 = v9;
  v42 = v83 + v16 + ((((v35 + 16 + v9) & ~v9) + v16 + v84) & ~v16);
  v85 = (v37 + 23) & 0xFFFFFFFFFFFFFFF8;
  v86 = v37;
  v43 = ((v85 + 47) & 0xFFFFFFFFFFFFFFF8) + 40;
  v82 = v81 + 7 + v40 + ((v80 + v16 + ((v43 + v10) & ~v10)) & ~v16);
  v44 = (((((v37 + 15) & 0xFFFFFFFFFFFFFFF8) + v87 + 16) & ~v87) + v79) & 0xFFFFFFFFFFFFFFF8;
  v45 = (v35 + 47) & 0xFFFFFFFFFFFFFFF8;
  v46 = v45 + v94 + 16;
  v47 = v45
      + 24
      + ((v46
        + ((v46
          + ((v80
            + v94
            + ((v36 + v10 + ((v81 + v88 + ((v16 + 16 + ((v44 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & ~v88)) & ~v10)) & ~v94)) & ~v94)) & ~v94);
  v48 = v45
      + 24
      + ((v46
        + ((v46 + ((v80 + v94 + ((v36 + v10 + ((v81 + v88 + ((v16 + v44 + 24) & ~v16)) & ~v88)) & ~v10)) & ~v94)) & ~v94)) & ~v94);
  v93 = v77 + 7 + ((v3 + 40 + ((v81 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v3);
  v49 = v38 + v31;
  v50 = (v80 + 7 + ((v38 + v41) & ~v10)) & 0xFFFFFFFFFFFFFFF8;
  v51 = (v50 + 23) & 0xFFFFFFFFFFFFFFF8;
  v52 = (((v45 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v53 = (v95 + 23) & 0xFFFFFFFFFFFFFFF8;
  v54 = (((v53 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v55 = ((v81
        + v88
        + ((v80
          + v16
          + ((v100
            + ((*(_QWORD *)(v32 + 64) + ((v83 + v33 + ((v35 + 16 + v16) & ~v16)) & ~v33) + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v10)) & ~v16)) & ~v88)
      + v36;
  v56 = v80
      + 7
      + ((v100
        + ((((v36
            + ((v36
              + v88
              + ((v81
                + v88
                + ((v81 + v16 + ((v16 + 8 + ((((v52 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & ~v16)) & ~v88)) & ~v88)
            + 9) & 0xFFFFFFFFFFFFFFF8)
          + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v10);
  v57 = v35 + 17;
  v58 = v79 + v16 + ((v52 + v87 + 8) & ~v87);
  v59 = v81
      + 7
      + ((v16
        + 8
        + ((((((((((v51 + 25) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v16);
  v60 = v16
      + 16
      + ((v81
        + 7
        + ((v16 + ((((v81 + 7 + (v58 & ~v16)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v16)) & 0xFFFFFFFFFFFFFFF8);
  v61 = ((v16 + v51 + 18) & ~v16) + v81;
  v62 = (v78 + 8 + (v82 & 0xFFFFFFFFFFFFFFF8)) & ~v10;
  v63 = (v10 + v35 + 17 + ((v3 + 16 + ((((v53 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v94) + 23) & ~v10;
  v64 = (v81 + v10 + (v60 & ~v16)) & ~v10;
  v65 = v80 + ((v78 + 8) & ~v10);
  v66 = ((v36 + v10 + ((v81 + v88 + (v42 & ~v16)) & ~v88)) & ~v10) + v80;
  v67 = v80 + ((v95 + v10 + 17) & ~v10);
  v68 = v62 + v80;
  v69 = v63 + v80;
  v70 = v64 + v80;
  if (v65 <= v47)
    v65 = v47;
  if (v65 > v55)
    v55 = v65;
  if (v55 <= v92)
    v55 = v92;
  if (v55 <= v90)
    v55 = v90;
  if (v55 <= ((((((v50 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8)
    v55 = ((((((v50 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v55 <= v66)
    v55 = v66;
  if (v55 <= (((((v97 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16)
    v55 = (((((v97 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v55 <= ((v79 + (v49 & ~v87) + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
    v55 = ((v79 + (v49 & ~v87) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v55 <= v67 + 1)
    v55 = v67 + 1;
  if (v55 <= ((((v54 + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 41)
    v55 = ((((v54 + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 41;
  if (v55 <= ((v81
              + v16
              + ((v16
                + ((((((v54 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                + 40) & ~v16)) & ~v16)
            + v81)
    v55 = ((v81
          + v16
          + ((v16
            + ((((((v54 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
            + 40) & ~v16)) & ~v16)
        + v81;
  if (v55 <= v85 + 8)
    v55 = v85 + 8;
  if (v55 <= v68)
    v55 = v68;
  if (v55 > v57)
    v57 = v55;
  v71 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  if (v57 <= v48)
    v57 = v48;
  if (v57 <= v71 + 16)
    v57 = v71 + 16;
  if (v57 <= ((v97 + 9) & 0xFFFFFFFFFFFFFFF8) + 17)
    v57 = ((v97 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
  if (v57 <= ((v3 + 80) & (unint64_t)~v3) + v77)
    v57 = ((v3 + 80) & ~v3) + v77;
  if (v57 <= ((v3 + 56) & (unint64_t)~v3) + v77)
    v57 = ((v3 + 56) & ~v3) + v77;
  if (v57 <= (((v93 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16)
    v57 = (((v93 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v57 <= v61)
    v57 = v61;
  v72 = (v59 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v57 <= v72)
    v57 = v72;
  if (v57 <= v86 + 40)
    v57 = v86 + 40;
  v73 = v71 + 8;
  if (v57 <= v73)
    v57 = v73;
  if (v57 <= v43)
    v57 = ((v85 + 47) & 0xFFFFFFFFFFFFFFF8) + 40;
  if (v57 <= v35 + 8)
    v57 = v35 + 8;
  if (v57 <= v95 + 8)
    v57 = v95 + 8;
  if (v57 <= ((v95 + 15) & 0xFFFFFFFFFFFFFFF8) + 8)
    v57 = ((v95 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v57 <= v97)
    v57 = v97;
  if (v57 <= (v56 & 0xFFFFFFFFFFFFFFF8) + 16)
    v57 = (v56 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v57 <= v69)
    v57 = v69;
  if (v57 <= v70)
    v57 = v70;
  if (v57 <= 8)
    v57 = 8;
  v74 = ((v96 + v57 + 8) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v74 <= v99)
    v74 = v99;
  if (v74 <= 8)
    v74 = 8;
  result = *(unsigned __int8 *)(a1 + v74);
  if (result >= 4)
  {
    if (v74 <= 3)
      v76 = v74;
    else
      v76 = 4;
    __asm { BR              X12 }
  }
  return result;
}

unint64_t sub_21CF10CE4(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t result;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  size_t v79;
  unsigned int v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  v98 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  v3 = *(_QWORD *)(sub_21D7C4668() - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v97 = v4 + 16;
  v5 = *(_DWORD *)(v3 + 84);
  v6 = *(_QWORD *)(v3 + 64);
  if (v5)
    v7 = v6;
  else
    v7 = v6 + 1;
  v103 = v7;
  v101 = v4 | 7;
  v8 = *(_QWORD *)(sub_21D7BF754() - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v9 | 7;
  v11 = *(_QWORD *)(sub_21D7C3840() - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(sub_21D7C3804() - 8);
  v14 = *(_DWORD *)(v13 + 84);
  v15 = *(_DWORD *)(v13 + 80);
  v16 = *(_DWORD *)(v13 + 80) | v12;
  v17 = v4 | 7 | v9 | v16;
  v94 = v4;
  v95 = v4 + 40;
  v18 = (v4 + 40) & ~v4;
  v19 = (v9 + 113) & ~v9;
  v20 = *(_QWORD *)(v8 + 64);
  v92 = *(_QWORD *)(v13 + 64);
  v21 = ((*(_QWORD *)(v11 + 64) + v15) & ~v15) + v92;
  if (!*(_DWORD *)(v8 + 84))
    ++v20;
  v87 = v20;
  v88 = v18 + v7;
  v89 = (v18 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v104 = v9 + 40;
  if (!(v14 | *(_DWORD *)(v11 + 84)))
    ++v21;
  v83 = v21;
  v84 = v20 + v19;
  v82 = v21 + 1;
  v22 = v21 + 1 + ((v16 + 160) & ~v16);
  if (v20 + v19 + ((v9 + 40 + ((((v89 + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v10) > v22)
    v22 = v20 + v19 + ((v9 + 40 + ((((v89 + 71) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v10);
  if (v22 <= 0x30)
    v22 = 48;
  v86 = v22 + ((v17 + 1) & ~v17) + 1;
  v23 = *(_QWORD *)(sub_21D7C3F6C() - 8);
  v24 = *(unsigned __int8 *)(v23 + 80);
  v25 = ((v24 | 7) + ((((((v4 + 16) & ~v4) + v7 + v17) & ~v17) + v86 + 11) & 0xFFFFFFFFFFFFFFF8) + 58) & ~(v24 | 7);
  v26 = *(_DWORD *)(v23 + 84) == 0;
  v27 = (v24 + 16) & ~v24;
  v28 = *(_QWORD *)(v23 + 64);
  if (v26)
    ++v28;
  v29 = v28 + v27;
  v30 = *(_QWORD *)(sub_21D7C4314() - 8);
  v31 = *(unsigned __int8 *)(v30 + 80);
  v102 = v31 | 7;
  v32 = v15 | 7;
  v33 = *(_QWORD *)(sub_21D7BF964() - 8);
  v34 = *(unsigned __int8 *)(v33 + 80);
  v96 = (v29 + (v17 | v15 | v31 | v34) + v25) & ~(v17 | v15 | v31 | v34);
  v91 = v103 + 7;
  v35 = (v103 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 47) & 0xFFFFFFFFFFFFFFF8;
  v37 = v92 + ((v15 + 8) & ~v15);
  v38 = (v36 + 23) & 0xFFFFFFFFFFFFFFF8;
  v39 = *(_QWORD *)(v33 + 64) + ((v82 + v34 + ((v36 + 16 + v16) & ~v16)) & ~v34);
  v40 = ((v31 + 65) & ~v31) + *(_QWORD *)(v30 + 64);
  v41 = (((((v38 + 15) & 0xFFFFFFFFFFFFFFF8) + v102 + 16) & ~v102) + v40) & 0xFFFFFFFFFFFFFFF8;
  v93 = v16 + 16;
  v42 = v83 + v32;
  v43 = v37 + v10;
  v90 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v44 = v90 + v101 + 16;
  v85 = v90 + 24;
  v45 = v9 + 8;
  v46 = v84 + ((v9 + 8) & ~v10);
  if (v46 <= v90
            + 24
            + ((v44
              + ((v44
                + ((v84
                  + v101
                  + ((v37 + v10 + ((v83 + v32 + ((v16 + 16 + ((v41 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & ~v32)) & ~v10)) & ~v101)) & ~v101)) & ~v101))
    v47 = v90
        + 24
        + ((v44
          + ((v44
            + ((v84
              + v101
              + ((v37 + v10 + ((v83 + v32 + ((v16 + 16 + ((v41 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & ~v32)) & ~v10)) & ~v101)) & ~v101)) & ~v101);
  else
    v47 = v84 + ((v9 + 8) & ~v10);
  v48 = v84 + v16;
  v49 = ((v42 + ((v84 + v16 + ((v104 + ((v39 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v10)) & ~v16)) & ~v32) + v37;
  if (v47 <= v49)
    v47 = v49;
  v50 = v83 + 7;
  v51 = ((((v83 + 7 + ((v48 + ((v10 + ((v38 + 47) & 0xFFFFFFFFFFFFFFF8) + 41) & ~v10)) & ~v16)) & 0xFFFFFFFFFFFFFFF8)
        + 47) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v47 <= v51)
    v47 = ((((v83 + 7 + ((v48 + ((v10 + ((v38 + 47) & 0xFFFFFFFFFFFFFFF8) + 41) & ~v10)) & ~v16)) & 0xFFFFFFFFFFFFFFF8)
          + 47) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  v52 = v35 + 40;
  v53 = v17 + v35 + 40;
  v54 = (v53 | v17) + v51;
  v55 = v53 & ~v17;
  v56 = ((v17 + ((v86 + (v54 & ~v17) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v17) + v86;
  if (v47 > v56)
    v56 = v47;
  v57 = (v84 + 7 + ((v52 + v9) & ~v10)) & 0xFFFFFFFFFFFFFFF8;
  if (v56 <= ((((((v57 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8)
    v56 = ((((((v57 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
  v58 = ((v43 + ((v42 + ((v82 + v16 + ((((v36 + 16 + v9) & ~v9) + v16 + v87) & ~v16)) & ~v16)) & ~v32)) & ~v10) + v84;
  if (v56 > v58)
    v58 = v56;
  if (v58 <= (((((v88 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16)
    v58 = (((((v88 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v58 <= ((v40 + ((v52 + v31) & ~v102) + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
    v58 = ((v40 + ((v52 + v31) & ~v102) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v59 = v84 + ((v89 + v10 + 17) & ~v10);
  if (v58 <= v59 + 1)
    v60 = v59 + 1;
  else
    v60 = v58;
  v61 = (v89 + 23) & 0xFFFFFFFFFFFFFFF8;
  v62 = (((v61 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  if (v60 <= ((((v62 + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 41)
    v60 = ((((v62 + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 41;
  v63 = (v16 + ((((((v62 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 40) & ~v16;
  v64 = v83 + v16;
  v65 = ((v83 + v16 + v63) & ~v16) + v83;
  if (v60 <= v65)
    v60 = v65;
  v66 = (v38 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (v60 <= v66 + 8)
    v60 = v66 + 8;
  v67 = ((v66 + 47) & 0xFFFFFFFFFFFFFFF8) + 40;
  v68 = ((v45 + ((v50 + v55 + ((v48 + ((v67 + v10) & ~v10)) & ~v16)) & 0xFFFFFFFFFFFFFFF8)) & ~v10) + v84;
  if (v60 <= v68)
    v69 = v68;
  else
    v69 = v60;
  v70 = v84 + v101 + ((v43 + ((v42 + ((v16 + v41 + 24) & ~v16)) & ~v32)) & ~v10);
  if (v69 <= v36 + 17)
    v69 = v36 + 17;
  if (v69 <= v85 + ((v44 + ((v44 + (v70 & ~v101)) & ~v101)) & ~v101))
    v69 = v85 + ((v44 + ((v44 + (v70 & ~v101)) & ~v101)) & ~v101);
  if (v69 <= v46)
    v69 = v46;
  result = (v36 + 15) & 0xFFFFFFFFFFFFFFF8;
  if (v69 <= result + 16)
    v69 = result + 16;
  if (v69 <= ((v88 + 9) & 0xFFFFFFFFFFFFFFF8) + 17)
    v69 = ((v88 + 9) & 0xFFFFFFFFFFFFFFF8) + 17;
  if (v69 <= ((v94 + 80) & (unint64_t)~v94) + v103)
    v69 = ((v94 + 80) & ~v94) + v103;
  if (v69 <= ((v94 + 56) & (unint64_t)~v94) + v103)
    v69 = ((v94 + 56) & ~v94) + v103;
  v72 = (v95 + (v50 & 0xFFFFFFFFFFFFFFF8)) & ~v94;
  if (v69 <= ((((v91 + v72) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16)
    v69 = ((((v91 + v72) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v73 = (v57 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (v69 <= ((v16 + v73 + 18) & ~v16) + v83)
    v69 = ((v16 + v73 + 18) & ~v16) + v83;
  v74 = v16 + 8;
  v75 = ((v50
        + ((v16
          + 8
          + ((((((((((v73 + 25) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v69 <= v75)
    v69 = v75;
  if (v69 <= v38 + 40)
    v69 = v38 + 40;
  if (v69 <= result + 8)
    v69 = result + 8;
  if (v69 <= v67)
    v69 = v67;
  if (v69 <= v36 + 8)
    v69 = v36 + 8;
  if (v69 <= v89 + 8)
    v69 = v89 + 8;
  if (v69 <= ((v89 + 15) & 0xFFFFFFFFFFFFFFF8) + 8)
    v69 = ((v89 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v69 <= v88)
    v69 = v88;
  v76 = (((v90 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  if (v69 <= ((v84
              + 7
              + ((v104
                + ((((v37
                    + ((v37
                      + v32
                      + ((v42
                        + ((v64 + ((v74 + ((((v76 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & ~v16)) & ~v32)) & ~v32)
                    + 9) & 0xFFFFFFFFFFFFFFF8)
                  + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v10)) & 0xFFFFFFFFFFFFFFF8)
            + 16)
    v69 = ((v84
          + 7
          + ((v104
            + ((((v37
                + ((v37
                  + v32
                  + ((v42
                    + ((v64 + ((v74 + ((((v76 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & ~v16)) & ~v32)) & ~v32)
                + 9) & 0xFFFFFFFFFFFFFFF8)
              + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v10)) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  v77 = ((v10 + v36 + 17 + ((v97 + ((((v61 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v101) + 23) & ~v10)
      + v84;
  if (v69 > v77)
    v77 = v69;
  if (v77 <= ((v83
              + v10
              + ((v93
                + ((v50
                  + ((v16
                    + ((((v50 + ((v40 + v16 + ((v76 + v102 + 8) & ~v102)) & ~v16)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                    + 9) & ~v16)) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & ~v10)
            + v84)
    v77 = ((v83
          + v10
          + ((v93
            + ((v50
              + ((v16
                + ((((v50 + ((v40 + v16 + ((v76 + v102 + 8) & ~v102)) & ~v16)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 9) & ~v16)) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & ~v10)
        + v84;
  if (v77 <= 8)
    v77 = 8;
  v78 = ((v96 + v77 + 8) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v78 <= v98)
    v78 = v98;
  if (v78 <= 8)
    v79 = 8;
  else
    v79 = v78;
  if (a2 > 3)
  {
    v80 = ((a2 - 4) >> (8 * v79)) + 4;
    if (v79 > 3)
      LOBYTE(v80) = 4;
    a1[v79] = v80;
    if (v79 >= 4)
      v81 = 4;
    else
      v81 = v79;
    bzero(a1, v79);
    __asm { BR              X10 }
  }
  a1[v79] = a2;
  return result;
}

uint64_t sub_21CF11628@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t result;
  _QWORD *v13;

  sub_21CF12C9C(a1, a6, (uint64_t (*)(_QWORD))type metadata accessor for SectionContent);
  result = type metadata accessor for PageChangeInstruction.Instruction.ItemUpdateDescriptor(0, a4, a5, v11);
  v13 = (_QWORD *)(a6 + *(int *)(result + 36));
  *v13 = a2;
  v13[1] = a3;
  return result;
}

void sub_21CF11690(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void (*v111)(uint64_t, uint64_t);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;

  v119 = a4;
  v118 = a2;
  v110 = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F677E0);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_2_13();
  v102 = v8;
  v103 = sub_21D7C4F5C();
  v100 = *(_QWORD *)(v103 - 8);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_2_13();
  v99 = v10;
  v106 = _s7SectionVMa(0);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_2_13();
  v108 = v12;
  v13 = OUTLINED_FUNCTION_19_9();
  v115 = *(_QWORD *)(v13 - 8);
  v116 = v13;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_11();
  v105 = v15;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v16);
  v107 = (uint64_t)&v98 - v17;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v98 - v19;
  v117 = a3;
  v109 = *(_QWORD *)(a3 - 8);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_2_13();
  v113 = v22;
  v23 = OUTLINED_FUNCTION_4_13();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_11();
  v101 = v25;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v26);
  v104 = (char *)&v98 - v27;
  OUTLINED_FUNCTION_88_1();
  v29 = MEMORY[0x24BDAC7A8](v28);
  v30 = MEMORY[0x24BDAC7A8](v29);
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&v98 - v31;
  OUTLINED_FUNCTION_6_25();
  v33 = a1;
  sub_21D7C3F78();
  v34 = sub_21D7C3F3C();
  v36 = v35;
  v37 = *(void (**)(char *, uint64_t))(v24 + 8);
  v37(v32, v23);
  if (!v36)
  {
    OUTLINED_FUNCTION_7_15();
    sub_21CDB47E8((unint64_t *)&qword_253F677E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5E3D0], MEMORY[0x24BE5E3D8]);
    OUTLINED_FUNCTION_5_18();
    v48 = v47;
    v50 = type metadata accessor for PageChangeInstruction.Instruction(0, v117, v119, v49);
    *v48 = 0x7463757274736E69;
    v48[1] = 0xEB000000006E6F69;
    v48[2] = v50;
    OUTLINED_FUNCTION_8_17(v50, *MEMORY[0x24BE5E3B8]);
    swift_willThrow();
    v37((char *)v33, v23);
    v46 = v118;
    goto LABEL_10;
  }
  v111 = (void (*)(uint64_t, uint64_t))v37;
  v112 = v23;
  v38 = v33;
  v39 = v119;
  v40 = v34 == 0x506563616C706572 && v36 == 0xEB00000000656761;
  if (!v40 && (OUTLINED_FUNCTION_3_27() & 1) == 0)
  {
    v46 = v118;
    if (v34 == 0xD000000000000011 && v36 == 0x800000021D819930 || (OUTLINED_FUNCTION_3_27() & 1) != 0)
    {
      OUTLINED_FUNCTION_4();
      v52 = v33;
      sub_21D7C3F78();
      v53 = v115;
      OUTLINED_FUNCTION_15_3(v107, v46, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v115 + 16));
      v54 = v108;
      v55 = v114;
      sub_21D49E564();
      v56 = v117;
      if (v55)
      {
        OUTLINED_FUNCTION_4_23(v52);
        v41 = v53;
        goto LABEL_11;
      }
      OUTLINED_FUNCTION_4_23(v52);
      OUTLINED_FUNCTION_83(v46, *(uint64_t (**)(uint64_t, uint64_t))(v53 + 8));
      sub_21CF12C9C(v54, v110, _s7SectionVMa);
      type metadata accessor for PageChangeInstruction.Instruction(0, v56, v39, v57);
LABEL_13:
      swift_storeEnumTagMultiPayload();
      goto LABEL_14;
    }
    v58 = v34 == 0x6974636553646461 && v36 == 0xEB00000000736E6FLL;
    v59 = v117;
    v60 = v34;
    v61 = v38;
    if (v58 || (OUTLINED_FUNCTION_3_27() & 1) != 0)
    {
      OUTLINED_FUNCTION_4();
      sub_21D7C3F78();
      v41 = v115;
      v62 = v116;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v115 + 16))(v105, v46, v116);
      sub_21CDB47E8(&qword_253F650B8, _s7SectionVMa, (uint64_t)&unk_21D7FEBC8);
      v63 = v114;
      sub_21D7C53C4();
      if (v63)
      {
        OUTLINED_FUNCTION_4_23(v38);
        goto LABEL_11;
      }
      OUTLINED_FUNCTION_4_23(v38);
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v46, v62);
      v64 = OUTLINED_FUNCTION_21_10();
      type metadata accessor for PageChangeInstruction.Instruction(v64, v65, v39, v66);
      goto LABEL_13;
    }
    v67 = v60 == 0x7449657461647075 && v36 == 0xEB00000000736D65;
    v68 = v39;
    if (v67 || (OUTLINED_FUNCTION_3_27() & 1) != 0)
    {
      OUTLINED_FUNCTION_4();
      v69 = v101;
      sub_21D7C3F78();
      v70 = v102;
      sub_21D7C3F0C();
      v71 = v111;
      v72 = v112;
      v111(v69, v112);
      if (__swift_getEnumTagSinglePayload(v70, 1, v103) == 1)
      {
        sub_21CE3C2B4(v70, &qword_253F677E0);
        OUTLINED_FUNCTION_7_15();
        sub_21CDB47E8((unint64_t *)&qword_253F677E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5E3D0], MEMORY[0x24BE5E3D8]);
        v73 = OUTLINED_FUNCTION_5_18();
        v75 = (_QWORD *)v74;
        v78 = OUTLINED_FUNCTION_14_11(v73, v74, v76, v77);
        *v75 = 0x736D657469;
        v75[1] = 0xE500000000000000;
        v79 = MEMORY[0x24BEE4AF8];
        v75[2] = v78;
        v75[3] = v79;
        OUTLINED_FUNCTION_8_17(v78, *MEMORY[0x24BE5E3C8]);
        swift_willThrow();
        v71(v61, v72);
      }
      else
      {
        v80 = v99;
        v81 = v100;
        v82 = OUTLINED_FUNCTION_15_3(v99, v70, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v100 + 32));
        MEMORY[0x24BDAC7A8](v82);
        *(&v98 - 4) = v59;
        *(&v98 - 3) = v68;
        *(&v98 - 2) = v46;
        type metadata accessor for PageChangeInstruction.Instruction.ItemUpdateDescriptor(0, v59, v68, v83);
        v84 = v114;
        sub_21D7C4F50();
        if (!v84)
        {
          OUTLINED_FUNCTION_4_23(v61);
          (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v80, v103);
          OUTLINED_FUNCTION_15_11();
          v88 = OUTLINED_FUNCTION_21_10();
          type metadata accessor for PageChangeInstruction.Instruction(v88, v89, v68, v90);
          goto LABEL_13;
        }
        OUTLINED_FUNCTION_4_23(v61);
        (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v80, v103);
      }
    }
    else
    {
      v85 = v60 == 0x74617265704F6F6ELL && v36 == 0xEB000000006E6F69;
      v86 = v112;
      if (v85 || (OUTLINED_FUNCTION_3_27() & 1) != 0)
      {
        v111(v61, v86);
        OUTLINED_FUNCTION_4();
        OUTLINED_FUNCTION_15_11();
        type metadata accessor for PageChangeInstruction.Instruction(0, v59, v39, v87);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      v91 = OUTLINED_FUNCTION_7_15();
      sub_21CDB47E8((unint64_t *)&qword_253F677E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5E3D0], MEMORY[0x24BE5E3D8]);
      v92 = OUTLINED_FUNCTION_5_18();
      v94 = (_QWORD *)v93;
      v97 = OUTLINED_FUNCTION_14_11(v92, v93, v95, v96);
      *v94 = v60;
      v94[1] = v36;
      v94[2] = v97;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v91 - 8) + 104))(v94, *MEMORY[0x24BE5E3B0], v91);
      swift_willThrow();
      v111(v61, v112);
    }
LABEL_10:
    v41 = v115;
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_4();
  sub_21D7C3F78();
  v41 = v115;
  v42 = v118;
  OUTLINED_FUNCTION_15_3((uint64_t)v20, v118, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v115 + 16));
  v44 = v113;
  v43 = v114;
  v45 = v117;
  sub_21D7C4608();
  if (!v43)
  {
    OUTLINED_FUNCTION_4_23(v38);
    OUTLINED_FUNCTION_83(v42, *(uint64_t (**)(uint64_t, uint64_t))(v41 + 8));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v109 + 32))(v110, v44, v45);
    type metadata accessor for PageChangeInstruction.Instruction(0, v45, v39, v51);
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_4_23(v38);
  v46 = v42;
LABEL_11:
  OUTLINED_FUNCTION_83(v46, *(uint64_t (**)(uint64_t, uint64_t))(v41 + 8));
LABEL_14:
  OUTLINED_FUNCTION_0_25();
}

void sub_21CF11FA8(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  char v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  id v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;

  v67 = a1;
  v72 = a3;
  v59 = a4;
  v66 = sub_21D7C4098();
  v63 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66);
  v65 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SectionContent();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v58 = (uint64_t)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v64 = (char *)&v56 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F674C8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_21D7C3F6C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v61 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v62 = (char *)&v56 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v56 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v56 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v56 - v25;
  sub_21D7C3F78();
  v57 = sub_21D7C3F3C();
  v28 = v27;
  v60 = v14;
  v29 = *(void (**)(char *, uint64_t))(v14 + 8);
  v29(v26, v13);
  if (!v28)
  {
    v31 = sub_21D7C4F74();
    sub_21CDB47E8((unint64_t *)&qword_253F677E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5E3D0], MEMORY[0x24BE5E3D8]);
    swift_allocError();
    v33 = v37;
    v35 = type metadata accessor for PageChangeInstruction.Instruction(0, a2, v72, v38);
    *v33 = 0x496E6F6974636573;
    v36 = 0xE900000000000044;
    goto LABEL_12;
  }
  v69 = v28;
  sub_21D7C3F78();
  sub_21CF12C60();
  sub_21D7C3EC4();
  v29(v24, v13);
  v30 = (char)v70;
  if (v70 == 53)
  {
    swift_bridgeObjectRelease();
    v31 = sub_21D7C4F74();
    sub_21CDB47E8((unint64_t *)&qword_253F677E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5E3D0], MEMORY[0x24BE5E3D8]);
    swift_allocError();
    v33 = v32;
    v35 = type metadata accessor for PageChangeInstruction.Instruction(0, a2, v72, v34);
    *v33 = 1684957547;
    v36 = 0xE400000000000000;
LABEL_12:
    v33[1] = v36;
    v33[2] = v35;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v33, *MEMORY[0x24BE5E3B8], v31);
    swift_willThrow();
    return;
  }
  sub_21D7C3F78();
  sub_21D7C3E88();
  v29(v21, v13);
  v39 = sub_21D7C4410();
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v39) == 1)
  {
    swift_bridgeObjectRelease();
    sub_21CE3C2B4((uint64_t)v12, &qword_253F674C8);
LABEL_11:
    v31 = sub_21D7C4F74();
    sub_21CDB47E8((unint64_t *)&qword_253F677E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5E3D0], MEMORY[0x24BE5E3D8]);
    swift_allocError();
    v33 = v53;
    v35 = type metadata accessor for PageChangeInstruction.Instruction(0, a2, v72, v54);
    v36 = 0xE400000000000000;
    *v33 = 1835365481;
    goto LABEL_12;
  }
  v40 = MEMORY[0x24BEE0D00];
  v41 = sub_21D7C4404();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v12, v39);
  if (!v41)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255331BA0);
  v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_21D7C8550;
  *(_QWORD *)(v42 + 56) = v40;
  *(_QWORD *)(v42 + 32) = 0x646E694B6D657469;
  *(_QWORD *)(v42 + 40) = 0xE800000000000000;
  *(_BYTE *)(v42 + 64) = v30;
  *(_QWORD *)(v42 + 120) = v40;
  *(_QWORD *)(v42 + 88) = &unk_24E111B98;
  *(_QWORD *)(v42 + 96) = 0x736D657469;
  *(_QWORD *)(v42 + 104) = 0xE500000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F67E90);
  v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_21D7C8560;
  v44 = sub_21D7C4FBC();
  swift_bridgeObjectRelease();
  v45 = sub_21CDBD85C(0, (unint64_t *)&qword_253F4F470);
  *(_QWORD *)(v43 + 56) = v45;
  *(_QWORD *)(v43 + 32) = v44;
  v46 = sub_21CDBD85C(0, &qword_255331BA8);
  v47 = MEMORY[0x220792B10](v43);
  *(_QWORD *)(v42 + 152) = v46;
  *(_QWORD *)(v42 + 128) = v47;
  v48 = (void *)sub_21D7C5658();
  v71 = v45;
  v70 = v48;
  v49 = v48;
  v50 = v62;
  sub_21D7C3F60();
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v61, v50, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v65, v67, v66);
  v51 = (uint64_t)v64;
  v52 = v68;
  sub_21D19CDF8();
  v29(v50, v13);
  if (v52)
  {
    swift_bridgeObjectRelease();

  }
  else
  {

    v55 = v58;
    sub_21CF12C9C(v51, v58, (uint64_t (*)(_QWORD))type metadata accessor for SectionContent);
    sub_21CF11628(v55, v57, v69, a2, v72, v59);
  }
}

void sub_21CF12630(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_21CF11690(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
}

void sub_21CF1264C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v37 = a2;
  v26 = a5;
  v27 = OUTLINED_FUNCTION_19_9();
  v8 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_11();
  v25[2] = v9;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v25 - v11;
  v13 = OUTLINED_FUNCTION_4_13();
  v29 = *(_QWORD *)(v13 - 8);
  v30 = v13;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_11();
  v25[1] = v15;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v25 - v17;
  v20 = type metadata accessor for PageChangeInstruction.Instruction(0, a3, a4, v19);
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)v25 - v22;
  OUTLINED_FUNCTION_6_25();
  v32 = a1;
  sub_21D7C3F78();
  v31 = v8;
  v25[0] = *(_QWORD *)(v8 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v25[0])(v12, v37, v27);
  v24 = v28;
  sub_21CF11690((uint64_t)v18, (uint64_t)v12, a3, a4, (uint64_t)v23);
  if (!v24)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v26, v23, v20);
    v33 = a3;
    v34 = a3;
    v35 = a4;
    v36 = a4;
    OUTLINED_FUNCTION_13_10();
  }
  OUTLINED_FUNCTION_83(v37, *(uint64_t (**)(uint64_t, uint64_t))(v31 + 8));
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v30);
  OUTLINED_FUNCTION_0_25();
}

char *sub_21CF128BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v31 = a4;
  v34 = a6;
  v32 = a5;
  v36 = a2;
  v35 = OUTLINED_FUNCTION_19_9();
  v42 = *(_QWORD *)(v35 - 8);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = OUTLINED_FUNCTION_4_13();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v30 - v16;
  v37 = a1;
  sub_21D7C3F78();
  v18 = sub_21D7C3F3C();
  v20 = v19;
  v21 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
  v33 = v11;
  OUTLINED_FUNCTION_83((uint64_t)v17, v21);
  if (!v20)
  {
    OUTLINED_FUNCTION_7_15();
    sub_21CDB47E8((unint64_t *)&qword_253F677E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5E3D0], MEMORY[0x24BE5E3D8]);
    OUTLINED_FUNCTION_5_18();
    v38 = a3;
    v39 = v31;
    v40 = v32;
    v41 = v34;
    OUTLINED_FUNCTION_13_10();
  }
  v22 = a3;
  v24 = v31;
  v23 = v32;
  v25 = v18 == 0x6563616C706572 && v20 == 0xE700000000000000;
  if (!v25 && (sub_21D7C5D84() & 1) == 0)
  {
    OUTLINED_FUNCTION_7_15();
    sub_21CDB47E8((unint64_t *)&qword_253F677E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5E3D0], MEMORY[0x24BE5E3D8]);
    OUTLINED_FUNCTION_5_18();
    v38 = v22;
    v39 = v24;
    v40 = v23;
    v41 = v34;
    OUTLINED_FUNCTION_13_10();
  }
  swift_bridgeObjectRelease();
  sub_21D7C3F78();
  v26 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v10, v36, v35);
  v27 = v30;
  sub_21D3E56B4((uint64_t)v15, (uint64_t)v10, v24, v34);
  if (v27)
  {
    OUTLINED_FUNCTION_17_9(*(uint64_t (**)(uint64_t, uint64_t))(v42 + 8));
  }
  else
  {
    v15 = v28;
    OUTLINED_FUNCTION_17_9(*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8));
  }
  OUTLINED_FUNCTION_22_8();
  return v15;
}

char *sub_21CF12BDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, char **a4@<X8>)
{
  uint64_t v4;
  char *result;

  result = sub_21CF128BC(a1, a2, a3[2], a3[3], a3[4], a3[5]);
  if (!v4)
    *a4 = result;
  return result;
}

void sub_21CF12C10(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_21CF1264C(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
}

void type metadata accessor for PageChangeInstruction.InvalidationRulesChange()
{
  JUMPOUT(0x22079380CLL);
}

void sub_21CF12C38(uint64_t a1@<X8>)
{
  uint64_t *v1;

  sub_21CF11FA8(v1[4], v1[2], v1[3], a1);
}

uint64_t type metadata accessor for PageChangeInstruction.Instruction.ItemUpdateDescriptor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PageChangeInstruction.Instruction.ItemUpdateDescriptor);
}

unint64_t sub_21CF12C60()
{
  unint64_t result;

  result = qword_253F650B0;
  if (!qword_253F650B0)
  {
    result = MEMORY[0x2207938C0](&unk_21D7FEF04, &unk_24E111B98);
    atomic_store(result, (unint64_t *)&qword_253F650B0);
  }
  return result;
}

void sub_21CF12C9C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  OUTLINED_FUNCTION_0();
}

_QWORD *initializeBufferWithCopyOfBuffer for SectionChangeInstruction.InvalidationRulesChange(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_21D7C4C20();
  return a1;
}

_QWORD *assignWithCopy for SectionChangeInstruction.InvalidationRulesChange(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for SectionChangeInstruction.InvalidationRulesChange(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21CF12D70()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SectionContent();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21CF12DE0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    type metadata accessor for SectionContent();
    v5 = (char *)&loc_21CF12E4C + 4 * word_21D7D0CD4[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t sub_21CF19A44(uint64_t a1)
{
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int *v62;
  uint64_t v63;
  int *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  int *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  int *v118;
  uint64_t v119;
  uint64_t v120;
  int *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  int *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  int *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  int *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  int *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t FriendsButtonComponentModel;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  int *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  int *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  int *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  int *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  int EnumCaseMultiPayload;
  int *v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  int *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;

  type metadata accessor for SectionContent();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v2 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(a1, 1, v2))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
      v3 = (int *)type metadata accessor for AlbumDetailHeaderLockup();
      __swift_destroy_boxed_opaque_existential_1(a1 + v3[5]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 = a1 + v3[9];
      v5 = type metadata accessor for ModalPresentationDescriptor();
      if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        v6 = v4 + *(int *)(v5 + 40);
        v7 = sub_21D7C4314();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v8 = a1 + v3[13];
      v9 = type metadata accessor for Artwork();
      if (!__swift_getEnumTagSinglePayload(v8, 1, v9))
      {
        v10 = sub_21D7C3840();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
        v11 = v8 + *(int *)(v9 + 20);
        v12 = sub_21D7C3804();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
      }
      v13 = a1 + v3[14];
      v14 = type metadata accessor for VideoArtwork();
      if (!__swift_getEnumTagSinglePayload(v13, 1, v14))
      {
        swift_bridgeObjectRelease();
        v15 = v13 + *(int *)(v14 + 20);
        v16 = sub_21D7C3804();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      }
      v17 = a1 + v3[15];
      v18 = type metadata accessor for ContentDescriptor();
      if (!__swift_getEnumTagSinglePayload(v17, 1, v18))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v19 = v17 + *(int *)(v18 + 24);
        v20 = sub_21D7BF754();
        if (!__swift_getEnumTagSinglePayload(v19, 1, v20))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
      }
      v21 = a1 + v3[16];
      v22 = type metadata accessor for LinkComponentModel();
      if (!__swift_getEnumTagSinglePayload(v21, 1, v22))
      {
        if (!__swift_getEnumTagSinglePayload(v21, 1, v2))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v21, v2);
        __swift_destroy_boxed_opaque_existential_1(v21 + *(int *)(v22 + 20));
        v23 = v21 + *(int *)(v22 + 24);
        if (*(_QWORD *)(v23 + 24))
          __swift_destroy_boxed_opaque_existential_1(v23);
        swift_bridgeObjectRelease();
      }
      v24 = a1 + v3[17];
      if (!__swift_getEnumTagSinglePayload(v24, 1, v22))
      {
        if (!__swift_getEnumTagSinglePayload(v24, 1, v2))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v24, v2);
        __swift_destroy_boxed_opaque_existential_1(v24 + *(int *)(v22 + 20));
        v25 = v24 + *(int *)(v22 + 24);
        if (*(_QWORD *)(v25 + 24))
          __swift_destroy_boxed_opaque_existential_1(v25);
        swift_bridgeObjectRelease();
      }
      v26 = v3[18];
      goto LABEL_169;
    case 1u:
      swift_bridgeObjectRelease();
      v27 = (uint64_t *)&unk_255331BB0;
      goto LABEL_176;
    case 2u:
    case 6u:
    case 7u:
    case 0xBu:
    case 0xEu:
    case 0xFu:
    case 0x12u:
    case 0x19u:
    case 0x1Au:
    case 0x1Bu:
    case 0x1Cu:
    case 0x1Fu:
    case 0x2Au:
    case 0x2Cu:
    case 0x2Eu:
    case 0x2Fu:
    case 0x30u:
    case 0x31u:
    case 0x34u:
      goto LABEL_248;
    case 3u:
      v28 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(a1, 1, v28))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(a1, v28);
      v29 = (int *)type metadata accessor for ArtistDetailHeaderLockup();
      __swift_destroy_boxed_opaque_existential_1(a1 + v29[5]);
      swift_bridgeObjectRelease();
      v30 = a1 + v29[7];
      v31 = type metadata accessor for Artwork();
      if (!__swift_getEnumTagSinglePayload(v30, 1, v31))
      {
        v32 = sub_21D7C3840();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v30, v32);
        v33 = v30 + *(int *)(v31 + 20);
        v34 = sub_21D7C3804();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
      }
      v35 = a1 + v29[9];
      v36 = sub_21D7BF964();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
      v37 = a1 + v29[10];
      if (*(_QWORD *)(v37 + 24))
        __swift_destroy_boxed_opaque_existential_1(v37);
      v38 = a1 + v29[11];
      v39 = type metadata accessor for ContentDescriptor();
      if (!__swift_getEnumTagSinglePayload(v38, 1, v39))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v40 = v38 + *(int *)(v39 + 24);
        v41 = sub_21D7BF754();
        if (!__swift_getEnumTagSinglePayload(v40, 1, v41))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v40, v41);
      }
      v42 = a1 + v29[12];
      if (!__swift_getEnumTagSinglePayload(v42, 1, v31))
      {
        v43 = sub_21D7C3840();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
        v44 = v42 + *(int *)(v31 + 20);
        v45 = sub_21D7C3804();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v44, v45);
      }
      v46 = a1 + v29[13];
      v47 = type metadata accessor for VideoArtwork();
      if (__swift_getEnumTagSinglePayload(v46, 1, v47))
        return swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_198;
    case 4u:
      v48 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(a1, 1, v48))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(a1, v48);
      v49 = (int *)type metadata accessor for ArtistLatestReleaseLockup();
      __swift_destroy_boxed_opaque_existential_1(a1 + v49[5]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v50 = a1 + v49[10];
      if (*(_QWORD *)(v50 + 24))
        __swift_destroy_boxed_opaque_existential_1(v50);
      v51 = a1 + v49[12];
      v52 = type metadata accessor for ContentDescriptor();
      if (!__swift_getEnumTagSinglePayload(v51, 1, v52))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v53 = v51 + *(int *)(v52 + 24);
        v54 = sub_21D7BF754();
        if (!__swift_getEnumTagSinglePayload(v53, 1, v54))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v53, v54);
      }
      v55 = a1 + v49[13];
      v56 = type metadata accessor for Artwork();
      if (!__swift_getEnumTagSinglePayload(v55, 1, v56))
      {
        v57 = sub_21D7C3840();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v55, v57);
        v58 = v55 + *(int *)(v56 + 20);
        v59 = sub_21D7C3804();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 8))(v58, v59);
      }
      v60 = a1 + v49[14];
      if (*(_QWORD *)(v60 + 24))
        __swift_destroy_boxed_opaque_existential_1(v60);
      goto LABEL_248;
    case 5u:
      v61 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(a1, 1, v61))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 8))(a1, v61);
      v62 = (int *)type metadata accessor for ArtistLatestReleaseAndTopSongsLockup();
      __swift_destroy_boxed_opaque_existential_1(a1 + v62[5]);
      v63 = a1 + v62[6];
      v64 = (int *)type metadata accessor for ArtistLatestReleaseLockup();
      if (!__swift_getEnumTagSinglePayload(v63, 1, (uint64_t)v64))
      {
        if (!__swift_getEnumTagSinglePayload(v63, 1, v61))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 8))(v63, v61);
        __swift_destroy_boxed_opaque_existential_1(v63 + v64[5]);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v65 = v63 + v64[10];
        if (*(_QWORD *)(v65 + 24))
          __swift_destroy_boxed_opaque_existential_1(v65);
        v66 = v63 + v64[12];
        v67 = type metadata accessor for ContentDescriptor();
        if (!__swift_getEnumTagSinglePayload(v66, 1, v67))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v68 = v66 + *(int *)(v67 + 24);
          v69 = sub_21D7BF754();
          if (!__swift_getEnumTagSinglePayload(v68, 1, v69))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 8))(v68, v69);
        }
        v70 = v63 + v64[13];
        v71 = type metadata accessor for Artwork();
        if (!__swift_getEnumTagSinglePayload(v70, 1, v71))
        {
          v72 = sub_21D7C3840();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 8))(v70, v72);
          v73 = v70 + *(int *)(v71 + 20);
          v74 = sub_21D7C3804();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 8))(v73, v74);
        }
        v75 = v63 + v64[14];
        if (*(_QWORD *)(v75 + 24))
          __swift_destroy_boxed_opaque_existential_1(v75);
        swift_bridgeObjectRelease();
      }
      v76 = a1 + v62[7];
      v77 = _s7SectionV6HeaderVMa(0);
      if (!__swift_getEnumTagSinglePayload(v76, 1, v77))
      {
        v78 = (_QWORD *)(v76 + *(int *)(v77 + 20));
        v79 = _s7SectionV6HeaderV12HeaderLockupOMa(0);
        if (!__swift_getEnumTagSinglePayload((uint64_t)v78, 1, v79))
        {
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          switch(EnumCaseMultiPayload)
          {
            case 2:
              if (v78[1])
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v78[7])
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v78 + 4));
              }
              if (v78[10])
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v78[16])
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v78 + 13));
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v282 = (uint64_t)v78 + *(int *)(type metadata accessor for DefaultSectionHeader() + 32);
              v283 = type metadata accessor for Artwork();
              if (!__swift_getEnumTagSinglePayload(v282, 1, v283))
              {
                v284 = sub_21D7C3840();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v284 - 8) + 8))(v282, v284);
                v285 = v282 + *(int *)(v283 + 20);
                v286 = sub_21D7C3804();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v286 - 8) + 8))(v285, v286);
              }
              break;
            case 1:
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v78);
              v287 = (int *)type metadata accessor for ComposerSectionHeader();
              v288 = (uint64_t)v78 + v287[5];
              if (!__swift_getEnumTagSinglePayload(v288, 1, v61))
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 8))(v288, v61);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v289 = (uint64_t)v78 + v287[11];
              if (*(_QWORD *)(v289 + 24))
                __swift_destroy_boxed_opaque_existential_1(v289);
              v290 = (uint64_t)v78 + v287[12];
              v291 = type metadata accessor for ContentDescriptor();
              if (!__swift_getEnumTagSinglePayload(v290, 1, v291))
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v292 = v290 + *(int *)(v291 + 24);
                v293 = sub_21D7BF754();
                if (!__swift_getEnumTagSinglePayload(v292, 1, v293))
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v293 - 8) + 8))(v292, v293);
              }
              break;
            case 0:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              break;
          }
        }
      }
      swift_bridgeObjectRelease();
      v80 = a1 + v62[9];
      if (__swift_getEnumTagSinglePayload(v80, 1, v77))
        return swift_bridgeObjectRelease();
      v81 = (_QWORD *)(v80 + *(int *)(v77 + 20));
      v82 = _s7SectionV6HeaderV12HeaderLockupOMa(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v81, 1, v82))
        return swift_bridgeObjectRelease();
      v83 = swift_getEnumCaseMultiPayload();
      switch(v83)
      {
        case 2:
          if (v81[1])
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v81[7])
              __swift_destroy_boxed_opaque_existential_1((uint64_t)(v81 + 4));
          }
          if (v81[10])
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v81[16])
              __swift_destroy_boxed_opaque_existential_1((uint64_t)(v81 + 13));
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v46 = (uint64_t)v81 + *(int *)(type metadata accessor for DefaultSectionHeader() + 32);
LABEL_195:
          v47 = type metadata accessor for Artwork();
LABEL_196:
          if (!__swift_getEnumTagSinglePayload(v46, 1, v47))
          {
            v199 = sub_21D7C3840();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v199 - 8) + 8))(v46, v199);
LABEL_198:
            v200 = v46 + *(int *)(v47 + 20);
            v201 = sub_21D7C3804();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v201 - 8) + 8))(v200, v201);
          }
          break;
        case 1:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
          v279 = (int *)type metadata accessor for ComposerSectionHeader();
          v280 = (uint64_t)v81 + v279[5];
          if (!__swift_getEnumTagSinglePayload(v280, 1, v61))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 8))(v280, v61);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v281 = (uint64_t)v81 + v279[11];
          if (*(_QWORD *)(v281 + 24))
            __swift_destroy_boxed_opaque_existential_1(v281);
          v180 = (uint64_t)v81 + v279[12];
LABEL_273:
          v276 = type metadata accessor for ContentDescriptor();
          if (!__swift_getEnumTagSinglePayload(v180, 1, v276))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v181 = *(int *)(v276 + 24);
LABEL_275:
            v225 = v180 + v181;
            v226 = sub_21D7BF754();
LABEL_276:
            v277 = v226;
            if (!__swift_getEnumTagSinglePayload(v225, 1, v226))
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v277 - 8) + 8))(v225, v277);
          }
          break;
        case 0:
LABEL_74:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_248:
          swift_bridgeObjectRelease();
          break;
      }
      return swift_bridgeObjectRelease();
    case 8u:
      v84 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(a1, 1, v84))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 8))(a1, v84);
      v85 = (int *)type metadata accessor for ContainerDetailTracklistFooterLockup();
      __swift_destroy_boxed_opaque_existential_1(a1 + v85[5]);
      v86 = a1 + v85[6];
      v87 = type metadata accessor for ContentDescriptor();
      if (!__swift_getEnumTagSinglePayload(v86, 1, v87))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v88 = v86 + *(int *)(v87 + 24);
        v89 = sub_21D7BF754();
        if (!__swift_getEnumTagSinglePayload(v88, 1, v89))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 8))(v88, v89);
      }
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + v85[9] + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      goto LABEL_248;
    case 9u:
      v90 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(a1, 1, v90))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 8))(a1, v90);
      v91 = (int *)type metadata accessor for CuratorDetailHeaderComponentModel();
      __swift_destroy_boxed_opaque_existential_1(a1 + v91[5]);
      swift_bridgeObjectRelease();
      v92 = a1 + v91[7];
      v93 = sub_21D7BF754();
      if (!__swift_getEnumTagSinglePayload(v92, 1, v93))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 8))(v92, v93);
      v94 = a1 + v91[8];
      v95 = type metadata accessor for Artwork();
      if (!__swift_getEnumTagSinglePayload(v94, 1, v95))
      {
        v96 = sub_21D7C3840();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 8))(v94, v96);
        v97 = v94 + *(int *)(v95 + 20);
        v98 = sub_21D7C3804();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 8))(v97, v98);
      }
      v99 = a1 + v91[10];
      if (!__swift_getEnumTagSinglePayload(v99, 1, v95))
      {
        v100 = sub_21D7C3840();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 8))(v99, v100);
        v101 = v99 + *(int *)(v95 + 20);
        v102 = sub_21D7C3804();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 8))(v101, v102);
      }
      v103 = a1 + v91[11];
      v104 = type metadata accessor for VideoArtwork();
      if (!__swift_getEnumTagSinglePayload(v103, 1, v104))
      {
        swift_bridgeObjectRelease();
        v105 = v103 + *(int *)(v104 + 20);
        v106 = sub_21D7C3804();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 8))(v105, v106);
      }
      v107 = a1 + v91[12];
      v108 = type metadata accessor for ContentDescriptor();
      if (!__swift_getEnumTagSinglePayload(v107, 1, v108))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v109 = v107 + *(int *)(v108 + 24);
        if (!__swift_getEnumTagSinglePayload(v109, 1, v93))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 8))(v109, v93);
      }
      return swift_bridgeObjectRelease();
    case 0xAu:
      __swift_destroy_boxed_opaque_existential_1(a1);
      v110 = a1 + *(int *)(type metadata accessor for EmptyStateLockup() + 20);
      v111 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(v110, 1, v111))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 8))(v110, v111);
      goto LABEL_74;
    case 0xCu:
      v112 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(a1, 1, v112))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 8))(a1, v112);
      v113 = type metadata accessor for GroupedTextListLockup();
      __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(v113 + 20));
      v114 = a1 + *(int *)(v113 + 24);
      v115 = type metadata accessor for ModalPresentationDescriptor();
      if (!__swift_getEnumTagSinglePayload(v114, 1, v115))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        v116 = v114 + *(int *)(v115 + 40);
        v117 = sub_21D7C4314();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 8))(v116, v117);
      }
      goto LABEL_248;
    case 0xDu:
      __swift_destroy_boxed_opaque_existential_1(a1);
      v118 = (int *)type metadata accessor for HeaderComponentModel();
      v119 = a1 + v118[5];
      v120 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(v119, 1, v120))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v120 - 8) + 8))(v119, v120);
      goto LABEL_141;
    case 0x10u:
      __swift_destroy_boxed_opaque_existential_1(a1);
      v121 = (int *)type metadata accessor for InlineUpsell();
      v122 = a1 + v121[5];
      v123 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(v122, 1, v123))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v123 - 8) + 8))(v122, v123);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v124 = a1 + v121[9];
      if (*(_QWORD *)(v124 + 24))
        __swift_destroy_boxed_opaque_existential_1(v124);
      v125 = a1 + v121[10];
      if (*(_QWORD *)(v125 + 24))
        __swift_destroy_boxed_opaque_existential_1(v125);
      v126 = v121[11];
      goto LABEL_217;
    case 0x11u:
      __swift_destroy_boxed_opaque_existential_1(a1);
      v127 = (int *)type metadata accessor for LandingUpsell();
      v128 = a1 + v127[5];
      v129 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(v128, 1, v129))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 8))(v128, v129);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v130 = a1 + v127[10];
      if (*(_QWORD *)(v130 + 24))
        __swift_destroy_boxed_opaque_existential_1(v130);
      v131 = a1 + v127[11];
      if (*(_QWORD *)(v131 + 24))
        __swift_destroy_boxed_opaque_existential_1(v131);
      v132 = a1 + v127[12];
      if (*(_QWORD *)(v132 + 24))
        __swift_destroy_boxed_opaque_existential_1(v132);
      v133 = a1 + v127[13];
      v47 = type metadata accessor for Artwork();
      if (!__swift_getEnumTagSinglePayload(v133, 1, v47))
      {
        v134 = sub_21D7C3840();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v134 - 8) + 8))(v133, v134);
        v135 = v133 + *(int *)(v47 + 20);
        v136 = sub_21D7C3804();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v136 - 8) + 8))(v135, v136);
      }
      v46 = a1 + v127[14];
      goto LABEL_196;
    case 0x13u:
      v137 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(a1, 1, v137))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 8))(a1, v137);
      v138 = type metadata accessor for ListSection();
      __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(v138 + 20));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_248;
    case 0x14u:
      v139 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(a1, 1, v139))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v139 - 8) + 8))(a1, v139);
      v118 = (int *)type metadata accessor for SongDetailList();
      __swift_destroy_boxed_opaque_existential_1(a1 + v118[5]);
      v140 = a1 + v118[6];
      v141 = (int *)type metadata accessor for SongDetailListHeaderLockup();
      if (!__swift_getEnumTagSinglePayload(v140, 1, (uint64_t)v141))
      {
        if (!__swift_getEnumTagSinglePayload(v140, 1, v139))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v139 - 8) + 8))(v140, v139);
        __swift_destroy_boxed_opaque_existential_1(v140 + v141[5]);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v142 = v140 + v141[8];
        if (*(_QWORD *)(v142 + 24))
          __swift_destroy_boxed_opaque_existential_1(v142);
        v143 = v140 + v141[9];
        if (*(_QWORD *)(v143 + 24))
          __swift_destroy_boxed_opaque_existential_1(v143);
        v144 = v140 + v141[10];
        v145 = type metadata accessor for ContentDescriptor();
        if (!__swift_getEnumTagSinglePayload(v144, 1, v145))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v146 = v144 + *(int *)(v145 + 24);
          v147 = sub_21D7BF754();
          if (!__swift_getEnumTagSinglePayload(v146, 1, v147))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v147 - 8) + 8))(v146, v147);
        }
        v148 = v140 + v141[11];
        v149 = type metadata accessor for Artwork();
        if (!__swift_getEnumTagSinglePayload(v148, 1, v149))
        {
          v150 = sub_21D7C3840();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v150 - 8) + 8))(v148, v150);
          v151 = v148 + *(int *)(v149 + 20);
          v152 = sub_21D7C3804();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v152 - 8) + 8))(v151, v152);
        }
      }
LABEL_141:
      swift_bridgeObjectRelease();
      v153 = v118[8];
      goto LABEL_272;
    case 0x15u:
      v154 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(a1, 1, v154))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v154 - 8) + 8))(a1, v154);
      v155 = type metadata accessor for ParagraphComponentModel();
      __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(v155 + 20));
      goto LABEL_248;
    case 0x16u:
      v2 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(a1, 1, v2))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
      v156 = (int *)type metadata accessor for PlaylistDetailHeaderLockup();
      __swift_destroy_boxed_opaque_existential_1(a1 + v156[5]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v157 = a1 + v156[9];
      v158 = type metadata accessor for ModalPresentationDescriptor();
      if (!__swift_getEnumTagSinglePayload(v157, 1, v158))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        v159 = v157 + *(int *)(v158 + 40);
        v160 = sub_21D7C4314();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v160 - 8) + 8))(v159, v160);
      }
      swift_bridgeObjectRelease();
      v161 = a1 + v156[12];
      v162 = type metadata accessor for Artwork();
      if (!__swift_getEnumTagSinglePayload(v161, 1, v162))
      {
        v163 = sub_21D7C3840();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v163 - 8) + 8))(v161, v163);
        v164 = v161 + *(int *)(v162 + 20);
        v165 = sub_21D7C3804();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v165 - 8) + 8))(v164, v165);
      }
      v166 = a1 + v156[13];
      v167 = type metadata accessor for VideoArtwork();
      if (!__swift_getEnumTagSinglePayload(v166, 1, v167))
      {
        swift_bridgeObjectRelease();
        v168 = v166 + *(int *)(v167 + 20);
        v169 = sub_21D7C3804();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v169 - 8) + 8))(v168, v169);
      }
      v170 = a1 + v156[14];
      v171 = type metadata accessor for ContentDescriptor();
      if (!__swift_getEnumTagSinglePayload(v170, 1, v171))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v172 = v170 + *(int *)(v171 + 24);
        v173 = sub_21D7BF754();
        if (!__swift_getEnumTagSinglePayload(v172, 1, v173))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v173 - 8) + 8))(v172, v173);
      }
      v174 = a1 + v156[15];
      v22 = type metadata accessor for LinkComponentModel();
      if (!__swift_getEnumTagSinglePayload(v174, 1, v22))
      {
        if (!__swift_getEnumTagSinglePayload(v174, 1, v2))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v174, v2);
        __swift_destroy_boxed_opaque_existential_1(v174 + *(int *)(v22 + 20));
        v175 = v174 + *(int *)(v22 + 24);
        if (*(_QWORD *)(v175 + 24))
          __swift_destroy_boxed_opaque_existential_1(v175);
        swift_bridgeObjectRelease();
      }
      v176 = a1 + v156[16];
      if (!__swift_getEnumTagSinglePayload(v176, 1, v22))
      {
        if (!__swift_getEnumTagSinglePayload(v176, 1, v2))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v176, v2);
        __swift_destroy_boxed_opaque_existential_1(v176 + *(int *)(v22 + 20));
        v177 = v176 + *(int *)(v22 + 24);
        if (*(_QWORD *)(v177 + 24))
          __swift_destroy_boxed_opaque_existential_1(v177);
        swift_bridgeObjectRelease();
      }
      v26 = v156[17];
LABEL_169:
      v178 = a1 + v26;
      if (__swift_getEnumTagSinglePayload(a1 + v26, 1, v22))
        return swift_bridgeObjectRelease();
      if (!__swift_getEnumTagSinglePayload(v178, 1, v2))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v178, v2);
      __swift_destroy_boxed_opaque_existential_1(v178 + *(int *)(v22 + 20));
      v179 = v178 + *(int *)(v22 + 24);
      if (*(_QWORD *)(v179 + 24))
        __swift_destroy_boxed_opaque_existential_1(v179);
      goto LABEL_248;
    case 0x17u:
      swift_bridgeObjectRelease();
      v27 = (uint64_t *)&unk_255331BB8;
LABEL_176:
      v180 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v27) + 48);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v181 = *(int *)(type metadata accessor for ContentDescriptor() + 24);
      goto LABEL_275;
    case 0x18u:
      v182 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(a1, 1, v182))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v182 - 8) + 8))(a1, v182);
      v183 = type metadata accessor for PopoverSelector();
      __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(v183 + 20));
      swift_bridgeObjectRelease();
      goto LABEL_248;
    case 0x1Du:
      __swift_destroy_boxed_opaque_existential_1(a1);
      v184 = a1 + *(int *)(type metadata accessor for SocialOnboardingNotificationSettingsPageLockup() + 20);
      v185 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(v184, 1, v185))
        goto LABEL_247;
      goto LABEL_248;
    case 0x1Eu:
      __swift_destroy_boxed_opaque_existential_1(a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v186 = *(int *)(type metadata accessor for SocialOnboardingPrivacySettingsPageLockup() + 44);
      goto LABEL_230;
    case 0x20u:
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(a1 + 16);
      v186 = *(int *)(type metadata accessor for SocialOnboardingUserNameHandlePageLockup() + 24);
      goto LABEL_230;
    case 0x21u:
      v187 = type metadata accessor for Artwork();
      if (!__swift_getEnumTagSinglePayload(a1, 1, v187))
      {
        v188 = sub_21D7C3840();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v188 - 8) + 8))(a1, v188);
        v189 = a1 + *(int *)(v187 + 20);
        v190 = sub_21D7C3804();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v190 - 8) + 8))(v189, v190);
      }
      v191 = type metadata accessor for SocialOnboardingWelcomePageLockup();
      __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(v191 + 20));
      v192 = a1 + *(int *)(v191 + 24);
      v193 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(v192, 1, v193))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v193 - 8) + 8))(v192, v193);
      swift_bridgeObjectRelease();
      goto LABEL_248;
    case 0x22u:
      v194 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(a1, 1, v194))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v194 - 8) + 8))(a1, v194);
      v195 = (int *)type metadata accessor for SocialProfileDetailHeaderLockup();
      __swift_destroy_boxed_opaque_existential_1(a1 + v195[5]);
      v196 = a1 + v195[6];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v197 = v196 + *(int *)(type metadata accessor for ContentDescriptor() + 24);
      v198 = sub_21D7BF754();
      if (!__swift_getEnumTagSinglePayload(v197, 1, v198))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v198 - 8) + 8))(v197, v198);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v46 = a1 + v195[11];
      goto LABEL_195;
    case 0x23u:
      v202 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(a1, 1, v202))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v202 - 8) + 8))(a1, v202);
      v203 = (int *)type metadata accessor for SocialProfileEditorHeaderLockup(0);
      __swift_destroy_boxed_opaque_existential_1(a1 + v203[5]);
      v204 = a1 + v203[6];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v205 = v204 + *(int *)(type metadata accessor for ContentDescriptor() + 24);
      v206 = sub_21D7BF754();
      if (!__swift_getEnumTagSinglePayload(v205, 1, v206))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v206 - 8) + 8))(v205, v206);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v207 = a1 + v203[16];
      v208 = type metadata accessor for Artwork();
      if (!__swift_getEnumTagSinglePayload(v207, 1, v208))
      {
        v209 = sub_21D7C3840();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v209 - 8) + 8))(v207, v209);
        v210 = v207 + *(int *)(v208 + 20);
        v211 = sub_21D7C3804();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v211 - 8) + 8))(v210, v211);
      }
      goto LABEL_248;
    case 0x24u:
      v212 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(a1, 1, v212))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v212 - 8) + 8))(a1, v212);
      FriendsButtonComponentModel = type metadata accessor for SocialProfileFindFriendsButtonComponentModel();
      __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(FriendsButtonComponentModel + 20));
      swift_bridgeObjectRelease();
      v126 = *(int *)(FriendsButtonComponentModel + 28);
      goto LABEL_217;
    case 0x25u:
      v214 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(a1, 1, v214))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v214 - 8) + 8))(a1, v214);
      v215 = type metadata accessor for SocialProfileDetailViewFollowRequestsHeader();
      __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(v215 + 20));
      goto LABEL_248;
    case 0x26u:
      v216 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(a1, 1, v216))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v216 - 8) + 8))(a1, v216);
      v217 = (int *)type metadata accessor for SocialProfileFollowRequestResponseHeader();
      __swift_destroy_boxed_opaque_existential_1(a1 + v217[5]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v218 = a1 + v217[8];
      if (*(_QWORD *)(v218 + 24))
        __swift_destroy_boxed_opaque_existential_1(v218);
      v126 = v217[9];
LABEL_217:
      if (*(_QWORD *)(a1 + v126 + 24))
        __swift_destroy_boxed_opaque_existential_1(a1 + v126);
      return swift_bridgeObjectRelease();
    case 0x27u:
      v219 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(a1, 1, v219))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v219 - 8) + 8))(a1, v219);
      v220 = type metadata accessor for SocialProfileFollowRequestsPageComponentModel();
      __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(v220 + 20));
      goto LABEL_248;
    case 0x28u:
      __swift_destroy_boxed_opaque_existential_1(a1);
      v221 = a1 + *(int *)(type metadata accessor for SocialOnboardingSharedPlaylistPageLockup() + 20);
      v222 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(v221, 1, v222))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v222 - 8) + 8))(v221, v222);
      goto LABEL_248;
    case 0x29u:
      __swift_destroy_boxed_opaque_existential_1(a1);
      v223 = a1 + *(int *)(type metadata accessor for SocialOnboardingFindFriendsPageSectionLockup() + 20);
      v224 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(v223, 1, v224))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v224 - 8) + 8))(v223, v224);
      swift_bridgeObjectRelease();
      goto LABEL_248;
    case 0x2Bu:
      __swift_destroy_boxed_opaque_existential_1(a1);
      v186 = *(int *)(type metadata accessor for Spacer() + 20);
LABEL_230:
      v225 = a1 + v186;
      v226 = sub_21D7C4668();
      goto LABEL_276;
    case 0x2Du:
      v227 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(a1, 1, v227))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v227 - 8) + 8))(a1, v227);
      v228 = (int *)type metadata accessor for SuperHeroLockup();
      __swift_destroy_boxed_opaque_existential_1(a1 + v228[5]);
      v229 = a1 + v228[6];
      if (*(_QWORD *)(v229 + 24))
        __swift_destroy_boxed_opaque_existential_1(v229);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v230 = a1 + v228[14];
      v231 = type metadata accessor for Artwork();
      if (!__swift_getEnumTagSinglePayload(v230, 1, v231))
      {
        v232 = sub_21D7C3840();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v232 - 8) + 8))(v230, v232);
        v233 = v230 + *(int *)(v231 + 20);
        v234 = sub_21D7C3804();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v234 - 8) + 8))(v233, v234);
      }
      v235 = a1 + v228[15];
      if (!__swift_getEnumTagSinglePayload(v235, 1, v231))
      {
        v236 = sub_21D7C3840();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v236 - 8) + 8))(v235, v236);
        v237 = v235 + *(int *)(v231 + 20);
        v238 = sub_21D7C3804();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v238 - 8) + 8))(v237, v238);
      }
      v239 = a1 + v228[16];
      v240 = type metadata accessor for VideoArtwork();
      if (!__swift_getEnumTagSinglePayload(v239, 1, v240))
      {
        swift_bridgeObjectRelease();
        v241 = v239 + *(int *)(v240 + 20);
        v242 = sub_21D7C3804();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v242 - 8) + 8))(v241, v242);
      }
      v243 = a1 + v228[17];
      if (!__swift_getEnumTagSinglePayload(v243, 1, v240))
      {
        swift_bridgeObjectRelease();
        v244 = v243 + *(int *)(v240 + 20);
        v245 = sub_21D7C3804();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v245 - 8) + 8))(v244, v245);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v246 = a1 + v228[22];
      if (*(_QWORD *)(v246 + 24))
        __swift_destroy_boxed_opaque_existential_1(v246);
      v247 = a1 + v228[23];
      v248 = type metadata accessor for ContentDescriptor();
      if (!__swift_getEnumTagSinglePayload(v247, 1, v248))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v184 = v247 + *(int *)(v248 + 24);
        v185 = sub_21D7BF754();
        if (!__swift_getEnumTagSinglePayload(v184, 1, v185))
LABEL_247:
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v185 - 8) + 8))(v184, v185);
      }
      goto LABEL_248;
    case 0x32u:
      __swift_destroy_boxed_opaque_existential_1(a1);
      v250 = (int *)type metadata accessor for TVMovieDescription();
      v251 = a1 + v250[5];
      v252 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(v251, 1, v252))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v252 - 8) + 8))(v251, v252);
      swift_bridgeObjectRelease();
      v253 = a1 + v250[7];
      if (*(_QWORD *)(v253 + 24))
        __swift_destroy_boxed_opaque_existential_1(v253);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v254 = a1 + v250[10];
      v255 = type metadata accessor for ParagraphComponentModel();
      if (!__swift_getEnumTagSinglePayload(v254, 1, v255))
      {
        if (!__swift_getEnumTagSinglePayload(v254, 1, v252))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v252 - 8) + 8))(v254, v252);
        __swift_destroy_boxed_opaque_existential_1(v254 + *(int *)(v255 + 20));
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v153 = v250[12];
      goto LABEL_272;
    case 0x33u:
      v256 = sub_21D7C4668();
      if (!__swift_getEnumTagSinglePayload(a1, 1, v256))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v256 - 8) + 8))(a1, v256);
      v257 = (int *)type metadata accessor for TVMovieDetailHeaderLockup();
      __swift_destroy_boxed_opaque_existential_1(a1 + v257[5]);
      v258 = a1 + v257[6];
      if (*(_QWORD *)(v258 + 24))
        __swift_destroy_boxed_opaque_existential_1(v258);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v259 = a1 + v257[10];
      v260 = type metadata accessor for ModalPresentationDescriptor();
      if (!__swift_getEnumTagSinglePayload(v259, 1, v260))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        v261 = v259 + *(int *)(v260 + 40);
        v262 = sub_21D7C4314();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v262 - 8) + 8))(v261, v262);
      }
      v263 = a1 + v257[11];
      v264 = type metadata accessor for Artwork();
      if (!__swift_getEnumTagSinglePayload(v263, 1, v264))
      {
        v265 = sub_21D7C3840();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v265 - 8) + 8))(v263, v265);
        v266 = v263 + *(int *)(v264 + 20);
        v267 = sub_21D7C3804();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v267 - 8) + 8))(v266, v267);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v268 = a1 + v257[15];
      if (!__swift_getEnumTagSinglePayload(v268, 1, v264))
      {
        v269 = sub_21D7C3840();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v269 - 8) + 8))(v268, v269);
        v270 = v268 + *(int *)(v264 + 20);
        v271 = sub_21D7C3804();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v271 - 8) + 8))(v270, v271);
      }
      swift_bridgeObjectRelease();
      v272 = a1 + v257[17];
      if (!__swift_getEnumTagSinglePayload(v272, 1, v264))
      {
        v273 = sub_21D7C3840();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v273 - 8) + 8))(v272, v273);
        v274 = v272 + *(int *)(v264 + 20);
        v275 = sub_21D7C3804();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v275 - 8) + 8))(v274, v275);
      }
      v153 = v257[18];
LABEL_272:
      v180 = a1 + v153;
      goto LABEL_273;
    default:
      return swift_bridgeObjectRelease();
  }
}

void sub_21CF1C3B8()
{
  char *v0;

  type metadata accessor for SectionContent();
  v0 = (char *)sub_21CF1C418 + 4 * word_21D7D0DA8[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

char *sub_21CF1C418(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, void *__dst, void *a15, void *a16, void *a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  id v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  int *v84;
  void (*v85)(char *, char *, uint64_t);
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  int *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  __int128 v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  __int128 v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  __int128 v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  __int128 v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  __int128 v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  __int128 v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  char *v160;
  char *v161;
  char *v162;
  uint64_t v163;
  int *v164;
  int *v165;
  uint64_t v166;
  uint64_t v167;

  v35 = sub_21D7C4668();
  v166 = v35;
  v167 = v34;
  if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, v35))
  {
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v32, v33, v35);
    __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v35);
  }
  v37 = (int *)type metadata accessor for AlbumDetailHeaderLockup();
  v38 = v37[5];
  v39 = *(_OWORD *)&v33[v38 + 24];
  *(_OWORD *)&v32[v38 + 24] = v39;
  (**(void (***)(void))(v39 - 8))();
  v40 = v37[6];
  v41 = &v32[v40];
  v42 = &v33[v40];
  v43 = *((_QWORD *)v42 + 1);
  *(_QWORD *)v41 = *(_QWORD *)v42;
  *((_QWORD *)v41 + 1) = v43;
  *(_QWORD *)&v32[v37[7]] = *(_QWORD *)&v33[v37[7]];
  v44 = v37[8];
  v45 = &v32[v44];
  v46 = &v33[v44];
  v47 = *((_QWORD *)v46 + 1);
  *(_QWORD *)v45 = *(_QWORD *)v46;
  *((_QWORD *)v45 + 1) = v47;
  v48 = v37[9];
  v49 = &v32[v48];
  v50 = &v33[v48];
  v51 = type metadata accessor for ModalPresentationDescriptor();
  sub_21D7C4C20();
  sub_21D7C4C20();
  sub_21D7C4C20();
  if (__swift_getEnumTagSinglePayload((uint64_t)v50, 1, v51))
  {
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553303E8);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    v53 = *((_QWORD *)v50 + 1);
    *(_QWORD *)v49 = *(_QWORD *)v50;
    *((_QWORD *)v49 + 1) = v53;
    v54 = *((_QWORD *)v50 + 3);
    *((_QWORD *)v49 + 2) = *((_QWORD *)v50 + 2);
    *((_QWORD *)v49 + 3) = v54;
    v55 = *((_QWORD *)v50 + 5);
    *((_QWORD *)v49 + 4) = *((_QWORD *)v50 + 4);
    *((_QWORD *)v49 + 5) = v55;
    v49[48] = v50[48];
    v164 = v37;
    v56 = (void *)*((_QWORD *)v50 + 7);
    *((_QWORD *)v49 + 7) = v56;
    v49[64] = v50[64];
    v57 = *(int *)(v51 + 40);
    v161 = &v50[v57];
    v162 = &v49[v57];
    v58 = sub_21D7C4314();
    v59 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16);
    sub_21D7C4C20();
    sub_21D7C4C20();
    sub_21D7C4C20();
    v60 = v56;
    v37 = v164;
    v59(v162, v161, v58);
    __swift_storeEnumTagSinglePayload((uint64_t)v49, 0, 1, v51);
  }
  v32[v37[10]] = v33[v37[10]];
  *(_QWORD *)&v32[v37[11]] = *(_QWORD *)&v33[v37[11]];
  v61 = v37[12];
  v62 = &v32[v61];
  v63 = &v33[v61];
  v64 = *((_QWORD *)v63 + 1);
  *(_QWORD *)v62 = *(_QWORD *)v63;
  *((_QWORD *)v62 + 1) = v64;
  v65 = v37[13];
  v66 = &v32[v65];
  v67 = &v33[v65];
  v68 = type metadata accessor for Artwork();
  sub_21D7C4C20();
  sub_21D7C4C20();
  if (__swift_getEnumTagSinglePayload((uint64_t)v67, 1, v68))
  {
    v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
    memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
  }
  else
  {
    v70 = sub_21D7C3840();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v66, v67, v70);
    v71 = *(int *)(v68 + 20);
    v72 = &v66[v71];
    v73 = &v67[v71];
    v74 = sub_21D7C3804();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 16))(v72, v73, v74);
    __swift_storeEnumTagSinglePayload((uint64_t)v66, 0, 1, v68);
  }
  v75 = v37[14];
  v76 = &v32[v75];
  v77 = &v33[v75];
  v78 = type metadata accessor for VideoArtwork();
  if (__swift_getEnumTagSinglePayload((uint64_t)v77, 1, v78))
  {
    v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5F718);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v76 = *(_QWORD *)v77;
    v80 = *(int *)(v78 + 20);
    v81 = &v76[v80];
    v82 = &v77[v80];
    v83 = sub_21D7C3804();
    v84 = v37;
    v85 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 16);
    sub_21D7C4C20();
    v85(v81, v82, v83);
    v37 = v84;
    __swift_storeEnumTagSinglePayload((uint64_t)v76, 0, 1, v78);
  }
  v86 = v166;
  v87 = v37[15];
  v88 = &v32[v87];
  v89 = &v33[v87];
  v90 = type metadata accessor for ContentDescriptor();
  if (__swift_getEnumTagSinglePayload((uint64_t)v89, 1, v90))
  {
    v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
    memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
    v92 = v167;
  }
  else
  {
    v165 = v37;
    *v88 = *v89;
    v93 = *((_QWORD *)v89 + 2);
    *((_QWORD *)v88 + 1) = *((_QWORD *)v89 + 1);
    *((_QWORD *)v88 + 2) = v93;
    v94 = *((_QWORD *)v89 + 4);
    *((_QWORD *)v88 + 3) = *((_QWORD *)v89 + 3);
    *((_QWORD *)v88 + 4) = v94;
    v95 = *((_QWORD *)v89 + 6);
    *((_QWORD *)v88 + 5) = *((_QWORD *)v89 + 5);
    *((_QWORD *)v88 + 6) = v95;
    v96 = *((_QWORD *)v89 + 8);
    *((_QWORD *)v88 + 7) = *((_QWORD *)v89 + 7);
    *((_QWORD *)v88 + 8) = v96;
    v97 = *((_QWORD *)v89 + 10);
    *((_QWORD *)v88 + 9) = *((_QWORD *)v89 + 9);
    *((_QWORD *)v88 + 10) = v97;
    v98 = *((_QWORD *)v89 + 12);
    *((_QWORD *)v88 + 11) = *((_QWORD *)v89 + 11);
    *((_QWORD *)v88 + 12) = v98;
    *((_QWORD *)v88 + 13) = *((_QWORD *)v89 + 13);
    v88[112] = v89[112];
    v163 = v90;
    v99 = *(int *)(v90 + 24);
    v160 = &v88[v99];
    v100 = &v89[v99];
    v101 = sub_21D7BF754();
    sub_21D7C4C20();
    sub_21D7C4C20();
    sub_21D7C4C20();
    sub_21D7C4C20();
    sub_21D7C4C20();
    sub_21D7C4C20();
    if (__swift_getEnumTagSinglePayload((uint64_t)v100, 1, v101))
    {
      v102 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
      memcpy(v160, v100, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 16))(v160, v100, v101);
      __swift_storeEnumTagSinglePayload((uint64_t)v160, 0, 1, v101);
    }
    v86 = v166;
    v92 = v167;
    __swift_storeEnumTagSinglePayload((uint64_t)v88, 0, 1, v163);
    v37 = v165;
  }
  v103 = v37[16];
  v104 = &v32[v103];
  v105 = &v33[v103];
  v106 = (int *)type metadata accessor for LinkComponentModel();
  if (__swift_getEnumTagSinglePayload((uint64_t)v105, 1, (uint64_t)v106))
  {
    v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330520);
    memcpy(v104, v105, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
  }
  else
  {
    if (__swift_getEnumTagSinglePayload((uint64_t)v105, 1, v86))
    {
      v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
      memcpy(v104, v105, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v104, v105, v86);
      __swift_storeEnumTagSinglePayload((uint64_t)v104, 0, 1, v86);
    }
    v109 = v106[5];
    v110 = *(_OWORD *)&v105[v109 + 24];
    *(_OWORD *)&v104[v109 + 24] = v110;
    (**(void (***)(void))(v110 - 8))();
    v111 = v106[6];
    v112 = &v104[v111];
    v113 = &v105[v111];
    v114 = *(_QWORD *)&v105[v111 + 24];
    if (v114)
    {
      v115 = *((_QWORD *)v113 + 4);
      *((_QWORD *)v112 + 3) = v114;
      *((_QWORD *)v112 + 4) = v115;
      (**(void (***)(void))(v114 - 8))();
    }
    else
    {
      v116 = *((_OWORD *)v113 + 1);
      *(_OWORD *)v112 = *(_OWORD *)v113;
      *((_OWORD *)v112 + 1) = v116;
      *((_QWORD *)v112 + 4) = *((_QWORD *)v113 + 4);
    }
    v117 = v106[7];
    v118 = &v104[v117];
    v119 = &v105[v117];
    v120 = *((_QWORD *)v119 + 1);
    *(_QWORD *)v118 = *(_QWORD *)v119;
    *((_QWORD *)v118 + 1) = v120;
    sub_21D7C4C20();
    __swift_storeEnumTagSinglePayload((uint64_t)v104, 0, 1, (uint64_t)v106);
  }
  v121 = v37[17];
  v122 = &v32[v121];
  v123 = &v33[v121];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v33[v121], 1, (uint64_t)v106))
  {
    v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330520);
    memcpy(v122, v123, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
  }
  else
  {
    if (__swift_getEnumTagSinglePayload((uint64_t)v123, 1, v86))
    {
      v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
      memcpy(v122, v123, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v122, v123, v86);
      __swift_storeEnumTagSinglePayload((uint64_t)v122, 0, 1, v86);
    }
    v126 = v106[5];
    v127 = *(_OWORD *)&v123[v126 + 24];
    *(_OWORD *)&v122[v126 + 24] = v127;
    (**(void (***)(void))(v127 - 8))();
    v128 = v106[6];
    v129 = &v122[v128];
    v130 = &v123[v128];
    v131 = *(_QWORD *)&v123[v128 + 24];
    if (v131)
    {
      v132 = *((_QWORD *)v130 + 4);
      *((_QWORD *)v129 + 3) = v131;
      *((_QWORD *)v129 + 4) = v132;
      (**(void (***)(void))(v131 - 8))();
    }
    else
    {
      v133 = *((_OWORD *)v130 + 1);
      *(_OWORD *)v129 = *(_OWORD *)v130;
      *((_OWORD *)v129 + 1) = v133;
      *((_QWORD *)v129 + 4) = *((_QWORD *)v130 + 4);
    }
    v134 = v106[7];
    v135 = &v122[v134];
    v136 = &v123[v134];
    v137 = *((_QWORD *)v136 + 1);
    *(_QWORD *)v135 = *(_QWORD *)v136;
    *((_QWORD *)v135 + 1) = v137;
    sub_21D7C4C20();
    __swift_storeEnumTagSinglePayload((uint64_t)v122, 0, 1, (uint64_t)v106);
  }
  v138 = v37[18];
  v139 = &v32[v138];
  v140 = &v33[v138];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v33[v138], 1, (uint64_t)v106))
  {
    v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330520);
    memcpy(v139, v140, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
  }
  else
  {
    if (__swift_getEnumTagSinglePayload((uint64_t)v140, 1, v86))
    {
      v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
      memcpy(v139, v140, *(_QWORD *)(*(_QWORD *)(v142 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v139, v140, v86);
      __swift_storeEnumTagSinglePayload((uint64_t)v139, 0, 1, v86);
    }
    v143 = v106[5];
    v144 = *(_OWORD *)&v140[v143 + 24];
    *(_OWORD *)&v139[v143 + 24] = v144;
    (**(void (***)(void))(v144 - 8))();
    v145 = v106[6];
    v146 = &v139[v145];
    v147 = &v140[v145];
    v148 = *(_QWORD *)&v140[v145 + 24];
    if (v148)
    {
      v149 = *((_QWORD *)v147 + 4);
      *((_QWORD *)v146 + 3) = v148;
      *((_QWORD *)v146 + 4) = v149;
      (**(void (***)(void))(v148 - 8))();
    }
    else
    {
      v150 = *((_OWORD *)v147 + 1);
      *(_OWORD *)v146 = *(_OWORD *)v147;
      *((_OWORD *)v146 + 1) = v150;
      *((_QWORD *)v146 + 4) = *((_QWORD *)v147 + 4);
    }
    v151 = v106[7];
    v152 = &v139[v151];
    v153 = &v140[v151];
    v154 = *((_QWORD *)v153 + 1);
    *(_QWORD *)v152 = *(_QWORD *)v153;
    *((_QWORD *)v152 + 1) = v154;
    sub_21D7C4C20();
    __swift_storeEnumTagSinglePayload((uint64_t)v139, 0, 1, (uint64_t)v106);
  }
  *(_QWORD *)&v32[v37[19]] = *(_QWORD *)&v33[v37[19]];
  swift_storeEnumTagMultiPayload();
  v155 = *(int *)(v92 + 36);
  v156 = &v32[v155];
  v157 = &v33[v155];
  v158 = *((_QWORD *)v157 + 1);
  *(_QWORD *)v156 = *(_QWORD *)v157;
  *((_QWORD *)v156 + 1) = v158;
  sub_21D7C4C20();
  return v32;
}

uint64_t sub_21CF23000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  if (a1 != a2)
  {
    sub_21CF2A498(a1);
    type metadata accessor for SectionContent();
    v4 = (char *)&loc_21CF23070 + 4 * word_21D7D0E12[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v5 = *(int *)(a3 + 36);
  v6 = (_QWORD *)(a1 + v5);
  v7 = (_QWORD *)(a2 + v5);
  *v6 = *v7;
  v6[1] = v7[1];
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21CF2A498(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SectionContent();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_21CF2A4D4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  int *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  int *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  int *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  int *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  int *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  __int128 v104;
  int *FriendsPageSectionLockup;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  __int128 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  __int128 v116;
  int *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  __int128 v129;
  uint64_t v130;
  _OWORD *v131;
  _OWORD *v132;
  uint64_t v133;
  uint64_t v134;
  int *v135;
  uint64_t v136;
  char *v137;
  char *v138;
  __int128 v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  int *v145;
  uint64_t v146;
  char *v147;
  char *v148;
  __int128 v149;
  uint64_t v150;
  char *v151;
  char *v152;
  __int128 v153;
  uint64_t v154;
  _BYTE *v155;
  _BYTE *v156;
  uint64_t v157;
  uint64_t v158;
  int *v159;
  uint64_t v160;
  char *v161;
  char *v162;
  __int128 v163;
  uint64_t v164;
  char *v165;
  char *v166;
  int *v167;
  uint64_t v168;
  int *v169;
  uint64_t v170;
  char *v171;
  char *v172;
  __int128 v173;
  uint64_t v174;
  _BYTE *v175;
  _BYTE *v176;
  uint64_t v177;
  uint64_t v178;
  int *v179;
  uint64_t v180;
  char *v181;
  char *v182;
  __int128 v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  int *v189;
  uint64_t v190;
  char *v191;
  char *v192;
  __int128 v193;
  uint64_t v194;
  _OWORD *v195;
  _OWORD *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  _BYTE *v200;
  _BYTE *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  char *v206;
  __int128 v207;
  uint64_t v208;
  char *v209;
  char *v210;
  __int128 v211;
  uint64_t v212;
  char *v213;
  char *v214;
  __int128 v215;
  uint64_t v216;
  char *v217;
  char *v218;
  __int128 v219;
  uint64_t v220;
  char *v221;
  char *v222;
  __int128 v223;
  uint64_t v224;
  char *v225;
  char *v226;
  __int128 v227;
  uint64_t v228;
  char *v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  int *v233;
  uint64_t v234;
  char *v235;
  char *v236;
  __int128 v237;
  int *v238;
  uint64_t v239;
  char *v240;
  char *v241;
  __int128 v242;
  uint64_t v243;
  char *v244;
  char *v245;
  int *v246;
  uint64_t v247;
  int *v248;
  uint64_t v249;
  char *v250;
  char *v251;
  __int128 v252;
  int *v253;
  uint64_t v254;
  char *v255;
  char *v256;
  __int128 v257;
  uint64_t v258;
  _OWORD *v259;
  _OWORD *v260;
  uint64_t v261;
  uint64_t v262;
  int *v263;
  uint64_t v264;
  char *v265;
  char *v266;
  __int128 v267;
  uint64_t v268;
  uint64_t v269;
  char *v270;
  char *v271;
  uint64_t v272;
  int *v273;
  uint64_t v274;
  char *v275;
  char *v276;
  __int128 v277;
  uint64_t v278;
  char *v279;
  char *v280;
  uint64_t v281;
  uint64_t v282;
  int *v283;
  uint64_t v284;
  char *v285;
  char *v286;
  __int128 v287;
  uint64_t v288;
  char *v289;
  char *v290;
  uint64_t v291;
  char *v292;
  char *v293;
  uint64_t v294;
  uint64_t v295;
  int *v296;
  uint64_t v297;
  char *v298;
  char *v299;
  __int128 v300;
  uint64_t v301;
  char *v302;
  char *v303;
  uint64_t v304;
  char *v305;
  char *v306;
  uint64_t v307;
  uint64_t v308;
  int *FriendsButtonComponentModel;
  uint64_t v310;
  char *v311;
  char *v312;
  __int128 v313;
  uint64_t v314;
  char *v315;
  char *v316;
  __int128 v317;
  int *v318;
  uint64_t v319;
  char *v320;
  char *v321;
  __int128 v322;
  int *v323;
  uint64_t v324;
  char *v325;
  char *v326;
  __int128 v327;
  uint64_t v328;
  char *v329;
  char *v330;
  __int128 v331;
  uint64_t v332;
  char *v333;
  char *v334;
  __int128 v335;
  uint64_t v336;
  uint64_t v337;
  char *v338;
  char *v339;
  __int128 v340;
  int *v341;
  uint64_t v342;
  char *v343;
  char *v344;
  __int128 v345;
  uint64_t v346;
  char *v347;
  char *v348;
  __int128 v349;
  uint64_t v350;
  char *v351;
  char *v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  char *v356;
  char *v357;
  __int128 v358;
  uint64_t v359;
  char *v360;
  char *v361;
  int *v362;
  uint64_t v363;
  int *v364;
  uint64_t v365;
  char *v366;
  char *v367;
  __int128 v368;
  uint64_t v369;
  char *v370;
  char *v371;
  __int128 v372;
  uint64_t v373;
  _OWORD *v374;
  _OWORD *v375;
  uint64_t v376;
  uint64_t v377;
  __int128 v378;
  uint64_t v379;
  char *v380;
  char *v381;
  uint64_t v382;
  uint64_t v383;
  char *v384;
  char *v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  char *v390;
  char *v391;
  uint64_t v392;
  uint64_t v393;
  char *v394;
  char *v395;
  uint64_t v396;
  uint64_t v397;
  char *v398;
  char *v399;
  __int128 v400;
  uint64_t v401;
  _BYTE *v402;
  _BYTE *v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  _BYTE *v407;
  _BYTE *v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  _BYTE *v413;
  _BYTE *v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  char *v418;
  char *v419;
  uint64_t v420;
  uint64_t v421;
  __int128 v422;
  uint64_t v423;
  char *v424;
  char *v425;
  uint64_t v426;
  uint64_t v427;
  _BYTE *v428;
  _BYTE *v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  char *v434;
  char *v435;
  uint64_t v436;
  uint64_t v437;
  char *v438;
  char *v439;
  uint64_t v440;
  uint64_t v441;
  __int128 v442;
  uint64_t v443;
  char *v444;
  char *v445;
  uint64_t v446;
  uint64_t v447;
  char *v448;
  char *v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  char *v453;
  char *v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  char *v458;
  char *v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  char *v464;
  char *v465;
  uint64_t v466;
  uint64_t v467;
  char *v468;
  char *v469;
  uint64_t v470;
  uint64_t v471;
  __int128 v472;
  uint64_t v473;
  char *v474;
  char *v475;
  uint64_t v476;
  uint64_t v477;
  char *v478;
  char *v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  char *v484;
  char *v485;
  uint64_t v486;
  uint64_t v487;
  _QWORD *v488;
  _QWORD *v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  _BYTE *v493;
  _BYTE *v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  char *v499;
  char *v500;
  uint64_t v501;
  uint64_t v502;
  char *v503;
  char *v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  char *v508;
  char *v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  char *v513;
  char *v514;
  uint64_t v515;
  uint64_t v516;
  _QWORD *v517;
  _QWORD *v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  char *v523;
  char *v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  char *v528;
  char *v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  char *v533;
  char *v534;
  uint64_t v535;
  uint64_t v536;
  _QWORD *v537;
  _QWORD *v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  char *v543;
  char *v544;
  uint64_t v545;
  uint64_t v546;
  char *v547;
  char *v548;
  uint64_t v549;
  uint64_t v550;
  char *v551;
  char *v552;
  uint64_t v553;
  uint64_t v554;
  _BYTE *v555;
  _BYTE *v556;
  uint64_t v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  char *v561;
  char *v562;
  uint64_t v563;
  uint64_t v564;
  _QWORD *v565;
  _QWORD *v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  char *v570;
  char *v571;
  uint64_t v572;
  uint64_t v573;
  _BYTE *v574;
  _BYTE *v575;
  uint64_t v576;
  uint64_t v577;
  uint64_t v578;
  char *v579;
  char *v580;
  uint64_t v581;
  uint64_t v582;
  _QWORD *v583;
  _QWORD *v584;
  uint64_t v585;
  uint64_t v586;
  uint64_t v587;
  char *v588;
  char *v589;
  uint64_t v590;
  uint64_t v591;
  char *v592;
  char *v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596;
  _BYTE *v597;
  _BYTE *v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  char *v602;
  char *v603;
  uint64_t v604;
  uint64_t v605;
  _BYTE *v606;
  _BYTE *v607;
  uint64_t v608;
  uint64_t v609;
  uint64_t v610;
  uint64_t v611;
  _BYTE *v612;
  _BYTE *v613;
  uint64_t v614;
  uint64_t v615;
  uint64_t v616;
  char *v617;
  char *v618;
  uint64_t v619;
  uint64_t v620;
  char *v621;
  char *v622;
  uint64_t v623;
  char *v624;
  char *v625;
  __int128 v626;
  uint64_t v627;
  _BYTE *v628;
  _BYTE *v629;
  uint64_t v630;
  uint64_t v631;
  uint64_t v632;
  uint64_t v633;
  char *v634;
  char *v635;
  uint64_t v636;
  uint64_t v637;
  _BYTE *v638;
  _BYTE *v639;
  uint64_t v640;
  uint64_t v641;
  _BYTE *v642;
  _BYTE *v643;
  uint64_t v644;
  uint64_t v645;
  _BYTE *v646;
  _BYTE *v647;
  uint64_t v648;
  uint64_t v649;
  uint64_t v650;
  _BYTE *v651;
  _BYTE *v652;
  uint64_t v653;
  uint64_t v654;
  char *v655;
  char *v656;
  uint64_t v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  char *v661;
  char *v662;
  uint64_t v663;
  uint64_t v664;
  char *v665;
  char *v666;
  __int128 v667;
  uint64_t v668;
  char *v669;
  char *v670;
  __int128 v671;
  uint64_t v672;
  char *v673;
  char *v674;
  __int128 v675;
  uint64_t v676;
  char *v677;
  char *v678;
  uint64_t v679;
  uint64_t v680;
  uint64_t v681;
  char *v682;
  char *v683;
  uint64_t v684;
  char *v685;
  char *v686;
  __int128 v687;
  uint64_t v688;
  char *v689;
  char *v690;
  __int128 v691;
  uint64_t v692;
  char *v693;
  char *v694;
  __int128 v695;
  uint64_t v696;
  char *v697;
  char *v698;
  uint64_t v699;
  uint64_t v700;
  uint64_t v701;
  char *v702;
  char *v703;
  __int128 v704;
  uint64_t v705;
  uint64_t v706;
  uint64_t v707;
  char *v708;
  char *v709;
  uint64_t v710;
  uint64_t v711;
  uint64_t v712;
  char *v713;
  char *v714;
  uint64_t v715;
  uint64_t v716;
  _QWORD *v717;
  _QWORD *v718;
  uint64_t v719;
  uint64_t v720;
  uint64_t v721;
  char *v722;
  char *v723;
  uint64_t v724;
  uint64_t v725;
  char *v726;
  char *v727;
  int *v728;
  uint64_t v729;
  uint64_t v730;
  uint64_t v731;
  char *v732;
  char *v733;
  int *v734;
  uint64_t v735;
  uint64_t v736;
  uint64_t v737;
  char *v738;
  uint64_t v739;
  uint64_t v740;
  uint64_t v741;
  char *v742;
  uint64_t v743;
  uint64_t v744;
  uint64_t v745;
  char *v746;
  char *v747;
  __int128 v748;
  uint64_t v749;
  char *v750;
  char *v751;
  __int128 v752;
  uint64_t v753;
  char *v754;
  char *v755;
  uint64_t v756;
  uint64_t v757;
  uint64_t v758;
  char *v759;
  char *v760;
  __int128 v761;
  uint64_t v762;
  char *v763;
  char *v764;
  __int128 v765;
  uint64_t v766;
  char *v767;
  char *v768;
  uint64_t v769;
  uint64_t v770;
  uint64_t v771;
  char *v772;
  char *v773;
  __int128 v774;
  uint64_t v775;
  char *v776;
  char *v777;
  __int128 v778;
  uint64_t v779;
  char *v780;
  char *v781;
  uint64_t v782;
  uint64_t v783;
  uint64_t v784;
  char *v785;
  char *v786;
  __int128 v787;
  uint64_t v788;
  char *v789;
  char *v790;
  __int128 v791;
  uint64_t v792;
  char *v793;
  char *v794;
  uint64_t v795;
  uint64_t v796;
  uint64_t v797;
  char *v798;
  char *v799;
  __int128 v800;
  uint64_t v801;
  char *v802;
  char *v803;
  __int128 v804;
  uint64_t v805;
  char *v806;
  char *v807;
  __int128 v808;
  uint64_t v809;
  char *v810;
  char *v811;
  __int128 v812;
  uint64_t v813;
  char *v814;
  char *v815;
  uint64_t v816;
  uint64_t v817;
  uint64_t v818;
  uint64_t v819;
  char *v820;
  char *v821;
  uint64_t v822;
  uint64_t v823;
  uint64_t v824;
  uint64_t v825;
  uint64_t v826;
  uint64_t v827;
  char *v828;
  char *v829;
  uint64_t v830;
  uint64_t v831;
  uint64_t v832;
  uint64_t v833;
  char *v834;
  char *v835;
  uint64_t v836;
  uint64_t v837;
  char *v838;
  char *v839;
  __int128 v840;
  uint64_t v841;
  _BYTE *v842;
  _BYTE *v843;
  uint64_t v844;
  uint64_t v845;
  uint64_t v846;
  _OWORD *v847;
  _OWORD *v848;
  uint64_t v849;
  uint64_t v850;
  int EnumCaseMultiPayload;
  __int128 v852;
  uint64_t v853;
  int *v854;
  uint64_t v855;
  char *v856;
  uint64_t v857;
  uint64_t v858;
  uint64_t v859;
  char *v860;
  uint64_t v861;
  uint64_t v862;
  uint64_t v863;
  char *v864;
  char *v865;
  uint64_t v866;
  char *v867;
  char *v868;
  uint64_t v869;
  char *v870;
  char *v871;
  uint64_t v872;
  char *v873;
  char *v874;
  __int128 v875;
  uint64_t v876;
  _BYTE *v877;
  _BYTE *v878;
  uint64_t v879;
  uint64_t v880;
  uint64_t v881;
  uint64_t v882;
  char *v883;
  char *v884;
  uint64_t v885;
  char *v886;
  uint64_t v887;
  _BYTE *v888;
  _BYTE *v889;
  uint64_t v890;
  uint64_t v891;
  uint64_t v892;
  _BYTE *v893;
  _BYTE *v894;
  uint64_t v895;
  uint64_t v896;
  _OWORD *v897;
  _OWORD *v898;
  uint64_t v899;
  uint64_t v900;
  int v901;
  __int128 v902;
  uint64_t v903;
  uint64_t v904;
  int *v905;
  uint64_t v906;
  char *v907;
  uint64_t v908;
  uint64_t v909;
  uint64_t v910;
  char *v911;
  uint64_t v912;
  uint64_t v913;
  char *v914;
  char *v915;
  uint64_t v916;
  char *v917;
  char *v918;
  uint64_t v919;
  char *v920;
  char *v921;
  uint64_t v922;
  char *v923;
  char *v924;
  __int128 v925;
  uint64_t v926;
  _BYTE *v927;
  _BYTE *v928;
  uint64_t v929;
  uint64_t v930;
  uint64_t v931;
  uint64_t v932;
  char *v933;
  char *v934;
  uint64_t v935;
  char *v936;
  uint64_t v937;
  _BYTE *v938;
  uint64_t v939;
  uint64_t v940;
  uint64_t v942;
  uint64_t v943;
  char *v944;
  char *v945;
  char *__dst;
  char *__dsta;
  void *__dstb;
  void *__dstc;
  void *__dstd;
  int *v951;
  int *v952;
  int *v953;
  char *v954;
  int *v955;
  void *v956;
  void *v957;
  void *v958;
  void *v959;
  char *v960;
  void *v961;
  void *v962;
  _QWORD *v963;
  char *v964;
  _BYTE *v965;
  uint64_t v966;
  uint64_t v967;
  uint64_t v968;

  v6 = type metadata accessor for SectionContent();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v7 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
      {
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
      }
      v125 = (int *)type metadata accessor for AlbumDetailHeaderLockup();
      v126 = v125[5];
      v127 = (char *)a1 + v126;
      v128 = (char *)a2 + v126;
      v129 = *((_OWORD *)v128 + 1);
      *(_OWORD *)v127 = *(_OWORD *)v128;
      *((_OWORD *)v127 + 1) = v129;
      *((_QWORD *)v127 + 4) = *((_QWORD *)v128 + 4);
      *(_OWORD *)((char *)a1 + v125[6]) = *(_OWORD *)((char *)a2 + v125[6]);
      *(_QWORD *)((char *)a1 + v125[7]) = *(_QWORD *)((char *)a2 + v125[7]);
      *(_OWORD *)((char *)a1 + v125[8]) = *(_OWORD *)((char *)a2 + v125[8]);
      v130 = v125[9];
      v131 = (_OWORD *)((char *)a1 + v130);
      v132 = (_OWORD *)((char *)a2 + v130);
      v133 = type metadata accessor for ModalPresentationDescriptor();
      if (__swift_getEnumTagSinglePayload((uint64_t)v132, 1, v133))
      {
        v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553303E8);
        memcpy(v131, v132, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
      }
      else
      {
        v378 = v132[1];
        *v131 = *v132;
        v131[1] = v378;
        v131[2] = v132[2];
        *((_BYTE *)v131 + 48) = *((_BYTE *)v132 + 48);
        *((_QWORD *)v131 + 7) = *((_QWORD *)v132 + 7);
        *((_BYTE *)v131 + 64) = *((_BYTE *)v132 + 64);
        v379 = *(int *)(v133 + 40);
        v380 = (char *)v131 + v379;
        v381 = (char *)v132 + v379;
        v382 = sub_21D7C4314();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v382 - 8) + 32))(v380, v381, v382);
        __swift_storeEnumTagSinglePayload((uint64_t)v131, 0, 1, v133);
      }
      *((_BYTE *)a1 + v125[10]) = *((_BYTE *)a2 + v125[10]);
      *(_QWORD *)((char *)a1 + v125[11]) = *(_QWORD *)((char *)a2 + v125[11]);
      *(_OWORD *)((char *)a1 + v125[12]) = *(_OWORD *)((char *)a2 + v125[12]);
      v383 = v125[13];
      v384 = (char *)a1 + v383;
      v385 = (char *)a2 + v383;
      v386 = type metadata accessor for Artwork();
      if (__swift_getEnumTagSinglePayload((uint64_t)v385, 1, v386))
      {
        v387 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
        memcpy(v384, v385, *(_QWORD *)(*(_QWORD *)(v387 - 8) + 64));
      }
      else
      {
        v482 = sub_21D7C3840();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v482 - 8) + 32))(v384, v385, v482);
        v483 = *(int *)(v386 + 20);
        v484 = &v384[v483];
        v485 = &v385[v483];
        v486 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v486 - 8) + 32))(v484, v485, v486);
        __swift_storeEnumTagSinglePayload((uint64_t)v384, 0, 1, v386);
      }
      v487 = v125[14];
      v488 = (_QWORD *)((char *)a1 + v487);
      v489 = (_QWORD *)((char *)a2 + v487);
      v490 = type metadata accessor for VideoArtwork();
      if (__swift_getEnumTagSinglePayload((uint64_t)v489, 1, v490))
      {
        v491 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5F718);
        memcpy(v488, v489, *(_QWORD *)(*(_QWORD *)(v491 - 8) + 64));
      }
      else
      {
        *v488 = *v489;
        v550 = *(int *)(v490 + 20);
        v551 = (char *)v488 + v550;
        v552 = (char *)v489 + v550;
        v553 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v553 - 8) + 32))(v551, v552, v553);
        __swift_storeEnumTagSinglePayload((uint64_t)v488, 0, 1, v490);
      }
      v554 = v125[15];
      v555 = (char *)a1 + v554;
      v556 = (char *)a2 + v554;
      v557 = type metadata accessor for ContentDescriptor();
      if (__swift_getEnumTagSinglePayload((uint64_t)v556, 1, v557))
      {
        v558 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
        memcpy(v555, v556, *(_QWORD *)(*(_QWORD *)(v558 - 8) + 64));
      }
      else
      {
        v958 = (void *)v7;
        v595 = a3;
        *v555 = *v556;
        memcpy(v555 + 8, v556 + 8, 0x69uLL);
        v596 = *(int *)(v557 + 24);
        v597 = &v555[v596];
        v598 = &v556[v596];
        v599 = sub_21D7BF754();
        if (__swift_getEnumTagSinglePayload((uint64_t)v598, 1, v599))
        {
          v600 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
          memcpy(v597, v598, *(_QWORD *)(*(_QWORD *)(v600 - 8) + 64));
        }
        else
        {
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v599 - 8) + 32))(v597, v598, v599);
          __swift_storeEnumTagSinglePayload((uint64_t)v597, 0, 1, v599);
        }
        a3 = v595;
        __swift_storeEnumTagSinglePayload((uint64_t)v555, 0, 1, v557);
        v7 = (uint64_t)v958;
      }
      v725 = v125[16];
      v726 = (char *)a1 + v725;
      v727 = (char *)a2 + v725;
      v728 = (int *)type metadata accessor for LinkComponentModel();
      if (__swift_getEnumTagSinglePayload((uint64_t)v727, 1, (uint64_t)v728))
      {
        v729 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330520);
        memcpy(v726, v727, *(_QWORD *)(*(_QWORD *)(v729 - 8) + 64));
      }
      else
      {
        if (__swift_getEnumTagSinglePayload((uint64_t)v727, 1, v7))
        {
          v730 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(v726, v727, *(_QWORD *)(*(_QWORD *)(v730 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v726, v727, v7);
          __swift_storeEnumTagSinglePayload((uint64_t)v726, 0, 1, v7);
        }
        v745 = v728[5];
        v746 = &v726[v745];
        v747 = &v727[v745];
        v748 = *((_OWORD *)v747 + 1);
        *(_OWORD *)v746 = *(_OWORD *)v747;
        *((_OWORD *)v746 + 1) = v748;
        *((_QWORD *)v746 + 4) = *((_QWORD *)v747 + 4);
        v749 = v728[6];
        v750 = &v726[v749];
        v751 = &v727[v749];
        *((_QWORD *)v750 + 4) = *((_QWORD *)v751 + 4);
        v752 = *((_OWORD *)v751 + 1);
        *(_OWORD *)v750 = *(_OWORD *)v751;
        *((_OWORD *)v750 + 1) = v752;
        *(_OWORD *)&v726[v728[7]] = *(_OWORD *)&v727[v728[7]];
        __swift_storeEnumTagSinglePayload((uint64_t)v726, 0, 1, (uint64_t)v728);
      }
      v753 = v125[17];
      v754 = (char *)a1 + v753;
      v755 = (char *)a2 + v753;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v753, 1, (uint64_t)v728))
      {
        v756 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330520);
        memcpy(v754, v755, *(_QWORD *)(*(_QWORD *)(v756 - 8) + 64));
      }
      else
      {
        if (__swift_getEnumTagSinglePayload((uint64_t)v755, 1, v7))
        {
          v757 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(v754, v755, *(_QWORD *)(*(_QWORD *)(v757 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v754, v755, v7);
          __swift_storeEnumTagSinglePayload((uint64_t)v754, 0, 1, v7);
        }
        v771 = v728[5];
        v772 = &v754[v771];
        v773 = &v755[v771];
        v774 = *((_OWORD *)v773 + 1);
        *(_OWORD *)v772 = *(_OWORD *)v773;
        *((_OWORD *)v772 + 1) = v774;
        *((_QWORD *)v772 + 4) = *((_QWORD *)v773 + 4);
        v775 = v728[6];
        v776 = &v754[v775];
        v777 = &v755[v775];
        *((_QWORD *)v776 + 4) = *((_QWORD *)v777 + 4);
        v778 = *((_OWORD *)v777 + 1);
        *(_OWORD *)v776 = *(_OWORD *)v777;
        *((_OWORD *)v776 + 1) = v778;
        *(_OWORD *)&v754[v728[7]] = *(_OWORD *)&v755[v728[7]];
        __swift_storeEnumTagSinglePayload((uint64_t)v754, 0, 1, (uint64_t)v728);
      }
      v779 = v125[18];
      v780 = (char *)a1 + v779;
      v781 = (char *)a2 + v779;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v779, 1, (uint64_t)v728))
      {
        v782 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330520);
        memcpy(v780, v781, *(_QWORD *)(*(_QWORD *)(v782 - 8) + 64));
      }
      else
      {
        if (__swift_getEnumTagSinglePayload((uint64_t)v781, 1, v7))
        {
          v783 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(v780, v781, *(_QWORD *)(*(_QWORD *)(v783 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v780, v781, v7);
          __swift_storeEnumTagSinglePayload((uint64_t)v780, 0, 1, v7);
        }
        v797 = v728[5];
        v798 = &v780[v797];
        v799 = &v781[v797];
        v800 = *((_OWORD *)v799 + 1);
        *(_OWORD *)v798 = *(_OWORD *)v799;
        *((_OWORD *)v798 + 1) = v800;
        *((_QWORD *)v798 + 4) = *((_QWORD *)v799 + 4);
        v801 = v728[6];
        v802 = &v780[v801];
        v803 = &v781[v801];
        *((_QWORD *)v802 + 4) = *((_QWORD *)v803 + 4);
        v804 = *((_OWORD *)v803 + 1);
        *(_OWORD *)v802 = *(_OWORD *)v803;
        *((_OWORD *)v802 + 1) = v804;
        *(_OWORD *)&v780[v728[7]] = *(_OWORD *)&v781[v728[7]];
        __swift_storeEnumTagSinglePayload((uint64_t)v780, 0, 1, (uint64_t)v728);
      }
      *(_QWORD *)((char *)a1 + v125[19]) = *(_QWORD *)((char *)a2 + v125[19]);
      goto LABEL_396;
    case 1u:
      *a1 = *a2;
      v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255331BB0) + 48);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
      memcpy((char *)a1 + v9 + 8, (char *)a2 + v9 + 8, 0x69uLL);
      v12 = *(int *)(type metadata accessor for ContentDescriptor() + 24);
      v13 = &v10[v12];
      v14 = &v11[v12];
      v15 = sub_21D7BF754();
      if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
        goto LABEL_5;
      goto LABEL_118;
    case 3u:
      v17 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v17))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a1, a2, v17);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v17);
      }
      v135 = (int *)type metadata accessor for ArtistDetailHeaderLockup();
      v136 = v135[5];
      v137 = (char *)a1 + v136;
      v138 = (char *)a2 + v136;
      v139 = *((_OWORD *)v138 + 1);
      *(_OWORD *)v137 = *(_OWORD *)v138;
      *((_OWORD *)v137 + 1) = v139;
      *((_QWORD *)v137 + 4) = *((_QWORD *)v138 + 4);
      *(_OWORD *)((char *)a1 + v135[6]) = *(_OWORD *)((char *)a2 + v135[6]);
      v140 = v135[7];
      v141 = (char *)a1 + v140;
      v142 = (char *)a2 + v140;
      v143 = type metadata accessor for Artwork();
      if (__swift_getEnumTagSinglePayload((uint64_t)v142, 1, v143))
      {
        v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
        memcpy(v141, v142, *(_QWORD *)(*(_QWORD *)(v144 - 8) + 64));
      }
      else
      {
        v388 = sub_21D7C3840();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v388 - 8) + 32))(v141, v142, v388);
        v389 = *(int *)(v143 + 20);
        v390 = &v141[v389];
        v391 = &v142[v389];
        v392 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v392 - 8) + 32))(v390, v391, v392);
        __swift_storeEnumTagSinglePayload((uint64_t)v141, 0, 1, v143);
      }
      *((_BYTE *)a1 + v135[8]) = *((_BYTE *)a2 + v135[8]);
      v393 = v135[9];
      v394 = (char *)a1 + v393;
      v395 = (char *)a2 + v393;
      v396 = sub_21D7BF964();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v396 - 8) + 32))(v394, v395, v396);
      v397 = v135[10];
      v398 = (char *)a1 + v397;
      v399 = (char *)a2 + v397;
      v400 = *((_OWORD *)v399 + 1);
      *(_OWORD *)v398 = *(_OWORD *)v399;
      *((_OWORD *)v398 + 1) = v400;
      *((_QWORD *)v398 + 4) = *((_QWORD *)v399 + 4);
      v401 = v135[11];
      v402 = (char *)a1 + v401;
      v403 = (char *)a2 + v401;
      v404 = type metadata accessor for ContentDescriptor();
      if (__swift_getEnumTagSinglePayload((uint64_t)v403, 1, v404))
      {
        v405 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
        memcpy(v402, v403, *(_QWORD *)(*(_QWORD *)(v405 - 8) + 64));
      }
      else
      {
        v968 = a3;
        *v402 = *v403;
        memcpy(v402 + 8, v403 + 8, 0x69uLL);
        v492 = *(int *)(v404 + 24);
        v493 = &v402[v492];
        v494 = &v403[v492];
        v495 = sub_21D7BF754();
        if (__swift_getEnumTagSinglePayload((uint64_t)v494, 1, v495))
        {
          v496 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
          memcpy(v493, v494, *(_QWORD *)(*(_QWORD *)(v496 - 8) + 64));
        }
        else
        {
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v495 - 8) + 32))(v493, v494, v495);
          __swift_storeEnumTagSinglePayload((uint64_t)v493, 0, 1, v495);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v402, 0, 1, v404);
        a3 = v968;
      }
      v707 = v135[12];
      v708 = (char *)a1 + v707;
      v709 = (char *)a2 + v707;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v707, 1, v143))
      {
        v710 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
        memcpy(v708, v709, *(_QWORD *)(*(_QWORD *)(v710 - 8) + 64));
      }
      else
      {
        v711 = sub_21D7C3840();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v711 - 8) + 32))(v708, v709, v711);
        v712 = *(int *)(v143 + 20);
        v713 = &v708[v712];
        v714 = &v709[v712];
        v715 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v715 - 8) + 32))(v713, v714, v715);
        __swift_storeEnumTagSinglePayload((uint64_t)v708, 0, 1, v143);
      }
      v716 = v135[13];
      v717 = (_QWORD *)((char *)a1 + v716);
      v718 = (_QWORD *)((char *)a2 + v716);
      v719 = type metadata accessor for VideoArtwork();
      if (__swift_getEnumTagSinglePayload((uint64_t)v718, 1, v719))
      {
        v720 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5F718);
        memcpy(v717, v718, *(_QWORD *)(*(_QWORD *)(v720 - 8) + 64));
      }
      else
      {
        *v717 = *v718;
        v721 = *(int *)(v719 + 20);
        v722 = (char *)v717 + v721;
        v723 = (char *)v718 + v721;
        v724 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v724 - 8) + 32))(v722, v723, v724);
        __swift_storeEnumTagSinglePayload((uint64_t)v717, 0, 1, v719);
      }
      goto LABEL_396;
    case 4u:
      v19 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v19))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v19);
      }
      v145 = (int *)type metadata accessor for ArtistLatestReleaseLockup();
      v146 = v145[5];
      v147 = (char *)a1 + v146;
      v148 = (char *)a2 + v146;
      v149 = *((_OWORD *)v148 + 1);
      *(_OWORD *)v147 = *(_OWORD *)v148;
      *((_OWORD *)v147 + 1) = v149;
      *((_QWORD *)v147 + 4) = *((_QWORD *)v148 + 4);
      *(_OWORD *)((char *)a1 + v145[6]) = *(_OWORD *)((char *)a2 + v145[6]);
      *(_OWORD *)((char *)a1 + v145[7]) = *(_OWORD *)((char *)a2 + v145[7]);
      *(_OWORD *)((char *)a1 + v145[8]) = *(_OWORD *)((char *)a2 + v145[8]);
      *((_BYTE *)a1 + v145[9]) = *((_BYTE *)a2 + v145[9]);
      v150 = v145[10];
      v151 = (char *)a1 + v150;
      v152 = (char *)a2 + v150;
      v153 = *((_OWORD *)v152 + 1);
      *(_OWORD *)v151 = *(_OWORD *)v152;
      *((_OWORD *)v151 + 1) = v153;
      *((_QWORD *)v151 + 4) = *((_QWORD *)v152 + 4);
      *((_BYTE *)a1 + v145[11]) = *((_BYTE *)a2 + v145[11]);
      v154 = v145[12];
      v155 = (char *)a1 + v154;
      v156 = (char *)a2 + v154;
      v157 = type metadata accessor for ContentDescriptor();
      if (__swift_getEnumTagSinglePayload((uint64_t)v156, 1, v157))
      {
        v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
        memcpy(v155, v156, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
      }
      else
      {
        *v155 = *v156;
        memcpy(v155 + 8, v156 + 8, 0x69uLL);
        v406 = *(int *)(v157 + 24);
        v407 = &v155[v406];
        v408 = &v156[v406];
        v409 = sub_21D7BF754();
        if (__swift_getEnumTagSinglePayload((uint64_t)v408, 1, v409))
        {
          v410 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
          memcpy(v407, v408, *(_QWORD *)(*(_QWORD *)(v410 - 8) + 64));
        }
        else
        {
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v409 - 8) + 32))(v407, v408, v409);
          __swift_storeEnumTagSinglePayload((uint64_t)v407, 0, 1, v409);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v155, 0, 1, v157);
      }
      v654 = v145[13];
      v655 = (char *)a1 + v654;
      v656 = (char *)a2 + v654;
      v657 = type metadata accessor for Artwork();
      if (__swift_getEnumTagSinglePayload((uint64_t)v656, 1, v657))
      {
        v658 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
        memcpy(v655, v656, *(_QWORD *)(*(_QWORD *)(v658 - 8) + 64));
      }
      else
      {
        v659 = sub_21D7C3840();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v659 - 8) + 32))(v655, v656, v659);
        v660 = *(int *)(v657 + 20);
        v661 = &v655[v660];
        v662 = &v656[v660];
        v663 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v663 - 8) + 32))(v661, v662, v663);
        __swift_storeEnumTagSinglePayload((uint64_t)v655, 0, 1, v657);
      }
      v664 = v145[14];
      v665 = (char *)a1 + v664;
      v666 = (char *)a2 + v664;
      v667 = *((_OWORD *)v666 + 1);
      *(_OWORD *)v665 = *(_OWORD *)v666;
      *((_OWORD *)v665 + 1) = v667;
      *((_QWORD *)v665 + 4) = *((_QWORD *)v666 + 4);
      *(_OWORD *)((char *)a1 + v145[15]) = *(_OWORD *)((char *)a2 + v145[15]);
      goto LABEL_396;
    case 5u:
      v21 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v21))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a1, a2, v21);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v21);
      }
      v159 = (int *)type metadata accessor for ArtistLatestReleaseAndTopSongsLockup();
      v160 = v159[5];
      v161 = (char *)a1 + v160;
      v162 = (char *)a2 + v160;
      v163 = *((_OWORD *)v162 + 1);
      *(_OWORD *)v161 = *(_OWORD *)v162;
      *((_OWORD *)v161 + 1) = v163;
      *((_QWORD *)v161 + 4) = *((_QWORD *)v162 + 4);
      v164 = v159[6];
      v165 = (char *)a1 + v164;
      v166 = (char *)a2 + v164;
      v167 = (int *)type metadata accessor for ArtistLatestReleaseLockup();
      v966 = a3;
      if (__swift_getEnumTagSinglePayload((uint64_t)v166, 1, (uint64_t)v167))
      {
        v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F627D8);
        memcpy(v165, v166, *(_QWORD *)(*(_QWORD *)(v168 - 8) + 64));
      }
      else
      {
        v951 = v159;
        v957 = (void *)v21;
        if (__swift_getEnumTagSinglePayload((uint64_t)v166, 1, v21))
        {
          v411 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(v165, v166, *(_QWORD *)(*(_QWORD *)(v411 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v165, v166, v21);
          __swift_storeEnumTagSinglePayload((uint64_t)v165, 0, 1, v21);
        }
        v668 = v167[5];
        v669 = &v165[v668];
        v670 = &v166[v668];
        v671 = *((_OWORD *)v670 + 1);
        *(_OWORD *)v669 = *(_OWORD *)v670;
        *((_OWORD *)v669 + 1) = v671;
        *((_QWORD *)v669 + 4) = *((_QWORD *)v670 + 4);
        *(_OWORD *)&v165[v167[6]] = *(_OWORD *)&v166[v167[6]];
        *(_OWORD *)&v165[v167[7]] = *(_OWORD *)&v166[v167[7]];
        *(_OWORD *)&v165[v167[8]] = *(_OWORD *)&v166[v167[8]];
        v165[v167[9]] = v166[v167[9]];
        v672 = v167[10];
        v673 = &v165[v672];
        v674 = &v166[v672];
        v675 = *((_OWORD *)v674 + 1);
        *(_OWORD *)v673 = *(_OWORD *)v674;
        *((_OWORD *)v673 + 1) = v675;
        *((_QWORD *)v673 + 4) = *((_QWORD *)v674 + 4);
        v165[v167[11]] = v166[v167[11]];
        v676 = v167[12];
        v677 = &v165[v676];
        v678 = &v166[v676];
        v679 = type metadata accessor for ContentDescriptor();
        if (__swift_getEnumTagSinglePayload((uint64_t)v678, 1, v679))
        {
          v680 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
          memcpy(v677, v678, *(_QWORD *)(*(_QWORD *)(v680 - 8) + 64));
        }
        else
        {
          *v677 = *v678;
          memcpy(v677 + 8, v678 + 8, 0x69uLL);
          v737 = *(int *)(v679 + 24);
          __dst = &v677[v737];
          v738 = &v678[v737];
          v739 = sub_21D7BF754();
          if (__swift_getEnumTagSinglePayload((uint64_t)v738, 1, v739))
          {
            v740 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
            memcpy(__dst, v738, *(_QWORD *)(*(_QWORD *)(v740 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v739 - 8) + 32))(__dst, v738, v739);
            __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v739);
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v677, 0, 1, v679);
        }
        v827 = v167[13];
        v828 = &v165[v827];
        v829 = &v166[v827];
        v830 = type metadata accessor for Artwork();
        if (__swift_getEnumTagSinglePayload((uint64_t)v829, 1, v830))
        {
          v831 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
          memcpy(v828, v829, *(_QWORD *)(*(_QWORD *)(v831 - 8) + 64));
        }
        else
        {
          v832 = sub_21D7C3840();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v832 - 8) + 32))(v828, v829, v832);
          v833 = *(int *)(v830 + 20);
          v834 = &v828[v833];
          v835 = &v829[v833];
          v836 = sub_21D7C3804();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v836 - 8) + 32))(v834, v835, v836);
          __swift_storeEnumTagSinglePayload((uint64_t)v828, 0, 1, v830);
        }
        a3 = v966;
        v837 = v167[14];
        v838 = &v165[v837];
        v839 = &v166[v837];
        v840 = *((_OWORD *)v839 + 1);
        *(_OWORD *)v838 = *(_OWORD *)v839;
        *((_OWORD *)v838 + 1) = v840;
        *((_QWORD *)v838 + 4) = *((_QWORD *)v839 + 4);
        *(_OWORD *)&v165[v167[15]] = *(_OWORD *)&v166[v167[15]];
        __swift_storeEnumTagSinglePayload((uint64_t)v165, 0, 1, (uint64_t)v167);
        v159 = v951;
        v21 = (uint64_t)v957;
      }
      v841 = v159[7];
      v842 = (char *)a1 + v841;
      v843 = (char *)a2 + v841;
      v844 = _s7SectionV6HeaderVMa(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v843, 1, v844))
      {
        v845 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65088);
        memcpy(v842, v843, *(_QWORD *)(*(_QWORD *)(v845 - 8) + 64));
      }
      else
      {
        *v842 = *v843;
        v846 = *(int *)(v844 + 20);
        v847 = &v842[v846];
        v848 = &v843[v846];
        v849 = _s7SectionV6HeaderV12HeaderLockupOMa(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v848, 1, v849))
        {
          v850 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65058);
          memcpy(v847, v848, *(_QWORD *)(*(_QWORD *)(v850 - 8) + 64));
          a3 = v966;
        }
        else
        {
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 2)
          {
            v953 = v159;
            v962 = (void *)v21;
            memcpy(v847, v848, 0x48uLL);
            memcpy((char *)v847 + 72, (char *)v848 + 72, 0x58uLL);
            v858 = type metadata accessor for DefaultSectionHeader();
            v859 = *(int *)(v858 + 32);
            v942 = v858;
            v945 = (char *)v847 + v859;
            v860 = (char *)v848 + v859;
            v861 = type metadata accessor for Artwork();
            if (__swift_getEnumTagSinglePayload((uint64_t)v860, 1, v861))
            {
              v862 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
              memcpy(v945, v860, *(_QWORD *)(*(_QWORD *)(v862 - 8) + 64));
            }
            else
            {
              v881 = sub_21D7C3840();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v881 - 8) + 32))(v945, v860, v881);
              v882 = *(int *)(v861 + 20);
              __dstc = (void *)v849;
              v883 = &v945[v882];
              v884 = &v860[v882];
              v885 = sub_21D7C3804();
              v886 = v883;
              v849 = (uint64_t)__dstc;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v885 - 8) + 32))(v886, v884, v885);
              __swift_storeEnumTagSinglePayload((uint64_t)v945, 0, 1, v861);
            }
            *((_BYTE *)v847 + *(int *)(v942 + 36)) = *((_BYTE *)v848 + *(int *)(v942 + 36));
            swift_storeEnumTagMultiPayload();
            v21 = (uint64_t)v962;
            a3 = v966;
            v159 = v953;
          }
          else if (EnumCaseMultiPayload == 1)
          {
            __dstb = (void *)v849;
            v952 = v159;
            v852 = v848[1];
            *v847 = *v848;
            v847[1] = v852;
            *((_QWORD *)v847 + 4) = *((_QWORD *)v848 + 4);
            v853 = v21;
            v854 = (int *)type metadata accessor for ComposerSectionHeader();
            v855 = v854[5];
            v944 = (char *)v847 + v855;
            v856 = (char *)v848 + v855;
            v961 = (void *)v853;
            if (__swift_getEnumTagSinglePayload((uint64_t)v848 + v855, 1, v853))
            {
              v857 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
              memcpy(v944, v856, *(_QWORD *)(*(_QWORD *)(v857 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v853 - 8) + 32))(v944, v856, v853);
              __swift_storeEnumTagSinglePayload((uint64_t)v944, 0, 1, v853);
            }
            *(_OWORD *)((char *)v847 + v854[6]) = *(_OWORD *)((char *)v848 + v854[6]);
            v863 = v854[7];
            v864 = (char *)v847 + v863;
            v865 = (char *)v848 + v863;
            v864[8] = v865[8];
            *(_QWORD *)v864 = *(_QWORD *)v865;
            v866 = v854[8];
            v867 = (char *)v847 + v866;
            v868 = (char *)v848 + v866;
            *(_QWORD *)v867 = *(_QWORD *)v868;
            v867[8] = v868[8];
            v869 = v854[9];
            v870 = (char *)v847 + v869;
            v871 = (char *)v848 + v869;
            *(_QWORD *)v870 = *(_QWORD *)v871;
            v870[8] = v871[8];
            *(_OWORD *)((char *)v847 + v854[10]) = *(_OWORD *)((char *)v848 + v854[10]);
            v872 = v854[11];
            v873 = (char *)v847 + v872;
            v874 = (char *)v848 + v872;
            v875 = *((_OWORD *)v874 + 1);
            *(_OWORD *)v873 = *(_OWORD *)v874;
            *((_OWORD *)v873 + 1) = v875;
            *((_QWORD *)v873 + 4) = *((_QWORD *)v874 + 4);
            v876 = v854[12];
            v877 = (char *)v847 + v876;
            v878 = (char *)v848 + v876;
            v879 = type metadata accessor for ContentDescriptor();
            v849 = (uint64_t)__dstb;
            if (__swift_getEnumTagSinglePayload((uint64_t)v878, 1, v879))
            {
              v880 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
              memcpy(v877, v878, *(_QWORD *)(*(_QWORD *)(v880 - 8) + 64));
              a3 = v966;
              v159 = v952;
            }
            else
            {
              *v877 = *v878;
              memcpy(v877 + 8, v878 + 8, 0x69uLL);
              v943 = v879;
              v887 = *(int *)(v879 + 24);
              v888 = &v877[v887];
              v889 = &v878[v887];
              v890 = sub_21D7BF754();
              if (__swift_getEnumTagSinglePayload((uint64_t)v889, 1, v890))
              {
                v891 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
                memcpy(v888, v889, *(_QWORD *)(*(_QWORD *)(v891 - 8) + 64));
              }
              else
              {
                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v890 - 8) + 32))(v888, v889, v890);
                __swift_storeEnumTagSinglePayload((uint64_t)v888, 0, 1, v890);
              }
              a3 = v966;
              __swift_storeEnumTagSinglePayload((uint64_t)v877, 0, 1, v943);
              v849 = (uint64_t)__dstb;
              v159 = v952;
            }
            swift_storeEnumTagMultiPayload();
            v21 = (uint64_t)v961;
          }
          else
          {
            memcpy(v847, v848, *(_QWORD *)(*(_QWORD *)(v849 - 8) + 64));
            a3 = v966;
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v847, 0, 1, v849);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v842, 0, 1, v844);
      }
      *(_QWORD *)((char *)a1 + v159[8]) = *(_QWORD *)((char *)a2 + v159[8]);
      v892 = v159[9];
      v893 = (char *)a1 + v892;
      v894 = (char *)a2 + v892;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v892, 1, v844))
      {
        v895 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65088);
        memcpy(v893, v894, *(_QWORD *)(*(_QWORD *)(v895 - 8) + 64));
        goto LABEL_396;
      }
      *v893 = *v894;
      v896 = *(int *)(v844 + 20);
      v897 = &v893[v896];
      v898 = &v894[v896];
      v899 = _s7SectionV6HeaderV12HeaderLockupOMa(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v898, 1, v899))
      {
        v900 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65058);
        memcpy(v897, v898, *(_QWORD *)(*(_QWORD *)(v900 - 8) + 64));
        a3 = v966;
        goto LABEL_395;
      }
      v901 = swift_getEnumCaseMultiPayload();
      if (v901 == 2)
      {
        memcpy(v897, v898, 0x48uLL);
        memcpy((char *)v897 + 72, (char *)v898 + 72, 0x58uLL);
        v909 = type metadata accessor for DefaultSectionHeader();
        v910 = *(int *)(v909 + 32);
        v964 = (char *)v897 + v910;
        v911 = (char *)v898 + v910;
        v955 = (int *)type metadata accessor for Artwork();
        if (__swift_getEnumTagSinglePayload((uint64_t)v911, 1, (uint64_t)v955))
        {
          v912 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
          memcpy(v964, v911, *(_QWORD *)(*(_QWORD *)(v912 - 8) + 64));
        }
        else
        {
          v931 = sub_21D7C3840();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v931 - 8) + 32))(v964, v911, v931);
          v932 = v955[5];
          __dstd = (void *)v909;
          v933 = &v964[v932];
          v934 = &v911[v932];
          v935 = sub_21D7C3804();
          v936 = v933;
          v909 = (uint64_t)__dstd;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v935 - 8) + 32))(v936, v934, v935);
          __swift_storeEnumTagSinglePayload((uint64_t)v964, 0, 1, (uint64_t)v955);
        }
        *((_BYTE *)v897 + *(int *)(v909 + 36)) = *((_BYTE *)v898 + *(int *)(v909 + 36));
      }
      else
      {
        if (v901 != 1)
        {
          memcpy(v897, v898, *(_QWORD *)(*(_QWORD *)(v899 - 8) + 64));
          goto LABEL_394;
        }
        v902 = v898[1];
        *v897 = *v898;
        v897[1] = v902;
        *((_QWORD *)v897 + 4) = *((_QWORD *)v898 + 4);
        v903 = type metadata accessor for ComposerSectionHeader();
        v904 = v21;
        v905 = (int *)v903;
        v906 = *(int *)(v903 + 20);
        v954 = (char *)v897 + v906;
        v963 = (_QWORD *)v904;
        v907 = (char *)v898 + v906;
        if (__swift_getEnumTagSinglePayload((uint64_t)v898 + v906, 1, v904))
        {
          v908 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(v954, v907, *(_QWORD *)(*(_QWORD *)(v908 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *))(*(v963 - 1) + 32))(v954, v907);
          __swift_storeEnumTagSinglePayload((uint64_t)v954, 0, 1, (uint64_t)v963);
        }
        *(_OWORD *)((char *)v897 + v905[6]) = *(_OWORD *)((char *)v898 + v905[6]);
        v913 = v905[7];
        v914 = (char *)v897 + v913;
        v915 = (char *)v898 + v913;
        v914[8] = v915[8];
        *(_QWORD *)v914 = *(_QWORD *)v915;
        v916 = v905[8];
        v917 = (char *)v897 + v916;
        v918 = (char *)v898 + v916;
        *(_QWORD *)v917 = *(_QWORD *)v918;
        v917[8] = v918[8];
        v919 = v905[9];
        v920 = (char *)v897 + v919;
        v921 = (char *)v898 + v919;
        *(_QWORD *)v920 = *(_QWORD *)v921;
        v920[8] = v921[8];
        *(_OWORD *)((char *)v897 + v905[10]) = *(_OWORD *)((char *)v898 + v905[10]);
        v922 = v905[11];
        v923 = (char *)v897 + v922;
        v924 = (char *)v898 + v922;
        v925 = *((_OWORD *)v924 + 1);
        *(_OWORD *)v923 = *(_OWORD *)v924;
        *((_OWORD *)v923 + 1) = v925;
        *((_QWORD *)v923 + 4) = *((_QWORD *)v924 + 4);
        v926 = v905[12];
        v927 = (char *)v897 + v926;
        v928 = (char *)v898 + v926;
        v929 = type metadata accessor for ContentDescriptor();
        if (__swift_getEnumTagSinglePayload((uint64_t)v928, 1, v929))
        {
          v930 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
          memcpy(v927, v928, *(_QWORD *)(*(_QWORD *)(v930 - 8) + 64));
        }
        else
        {
          *v927 = *v928;
          memcpy(v927 + 8, v928 + 8, 0x69uLL);
          v937 = *(int *)(v929 + 24);
          v956 = v927;
          v965 = &v927[v937];
          v938 = &v928[v937];
          v939 = sub_21D7BF754();
          if (__swift_getEnumTagSinglePayload((uint64_t)v938, 1, v939))
          {
            v940 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
            memcpy(v965, v938, *(_QWORD *)(*(_QWORD *)(v940 - 8) + 64));
          }
          else
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v939 - 8) + 32))(v965, v938, v939);
            __swift_storeEnumTagSinglePayload((uint64_t)v965, 0, 1, v939);
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v956, 0, 1, v929);
        }
      }
      swift_storeEnumTagMultiPayload();
LABEL_394:
      a3 = v966;
      __swift_storeEnumTagSinglePayload((uint64_t)v897, 0, 1, v899);
LABEL_395:
      __swift_storeEnumTagSinglePayload((uint64_t)v893, 0, 1, v844);
LABEL_396:
      swift_storeEnumTagMultiPayload();
LABEL_397:
      *(_OWORD *)((char *)a1 + *(int *)(a3 + 36)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 36));
      return a1;
    case 8u:
      v23 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v23))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a1, a2, v23);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v23);
      }
      v169 = (int *)type metadata accessor for ContainerDetailTracklistFooterLockup();
      v170 = v169[5];
      v171 = (char *)a1 + v170;
      v172 = (char *)a2 + v170;
      v173 = *((_OWORD *)v172 + 1);
      *(_OWORD *)v171 = *(_OWORD *)v172;
      *((_OWORD *)v171 + 1) = v173;
      *((_QWORD *)v171 + 4) = *((_QWORD *)v172 + 4);
      v174 = v169[6];
      v175 = (char *)a1 + v174;
      v176 = (char *)a2 + v174;
      v177 = type metadata accessor for ContentDescriptor();
      if (__swift_getEnumTagSinglePayload((uint64_t)v176, 1, v177))
      {
        v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
        memcpy(v175, v176, *(_QWORD *)(*(_QWORD *)(v178 - 8) + 64));
      }
      else
      {
        *v175 = *v176;
        memcpy(v175 + 8, v176 + 8, 0x69uLL);
        v412 = *(int *)(v177 + 24);
        v413 = &v175[v412];
        v414 = &v176[v412];
        v415 = sub_21D7BF754();
        if (__swift_getEnumTagSinglePayload((uint64_t)v414, 1, v415))
        {
          v416 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
          memcpy(v413, v414, *(_QWORD *)(*(_QWORD *)(v416 - 8) + 64));
        }
        else
        {
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v415 - 8) + 32))(v413, v414, v415);
          __swift_storeEnumTagSinglePayload((uint64_t)v413, 0, 1, v415);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v175, 0, 1, v177);
      }
      *(_QWORD *)((char *)a1 + v169[7]) = *(_QWORD *)((char *)a2 + v169[7]);
      *(_OWORD *)((char *)a1 + v169[8]) = *(_OWORD *)((char *)a2 + v169[8]);
      v681 = v169[9];
      v682 = (char *)a1 + v681;
      v683 = (char *)a2 + v681;
      *(_OWORD *)v682 = *(_OWORD *)v683;
      *((_QWORD *)v682 + 2) = *((_QWORD *)v683 + 2);
      *(_QWORD *)((char *)a1 + v169[10]) = *(_QWORD *)((char *)a2 + v169[10]);
      goto LABEL_396;
    case 9u:
      v25 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v25))
      {
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(a1, a2, v25);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v25);
      }
      v179 = (int *)type metadata accessor for CuratorDetailHeaderComponentModel();
      v180 = v179[5];
      v181 = (char *)a1 + v180;
      v182 = (char *)a2 + v180;
      v183 = *((_OWORD *)v182 + 1);
      *(_OWORD *)v181 = *(_OWORD *)v182;
      *((_OWORD *)v181 + 1) = v183;
      *((_QWORD *)v181 + 4) = *((_QWORD *)v182 + 4);
      *(_OWORD *)((char *)a1 + v179[6]) = *(_OWORD *)((char *)a2 + v179[6]);
      v184 = v179[7];
      v185 = (char *)a1 + v184;
      v186 = (char *)a2 + v184;
      v187 = sub_21D7BF754();
      if (__swift_getEnumTagSinglePayload((uint64_t)v186, 1, v187))
      {
        v188 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
        memcpy(v185, v186, *(_QWORD *)(*(_QWORD *)(v188 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 32))(v185, v186, v187);
        __swift_storeEnumTagSinglePayload((uint64_t)v185, 0, 1, v187);
      }
      v417 = v179[8];
      v418 = (char *)a1 + v417;
      v419 = (char *)a2 + v417;
      v420 = type metadata accessor for Artwork();
      if (__swift_getEnumTagSinglePayload((uint64_t)v419, 1, v420))
      {
        v421 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
        memcpy(v418, v419, *(_QWORD *)(*(_QWORD *)(v421 - 8) + 64));
      }
      else
      {
        v497 = sub_21D7C3840();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v497 - 8) + 32))(v418, v419, v497);
        v498 = *(int *)(v420 + 20);
        v499 = &v418[v498];
        v500 = &v419[v498];
        v501 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v501 - 8) + 32))(v499, v500, v501);
        __swift_storeEnumTagSinglePayload((uint64_t)v418, 0, 1, v420);
      }
      *((_BYTE *)a1 + v179[9]) = *((_BYTE *)a2 + v179[9]);
      v502 = v179[10];
      v503 = (char *)a1 + v502;
      v504 = (char *)a2 + v502;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v502, 1, v420))
      {
        v505 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
        memcpy(v503, v504, *(_QWORD *)(*(_QWORD *)(v505 - 8) + 64));
      }
      else
      {
        v559 = sub_21D7C3840();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v559 - 8) + 32))(v503, v504, v559);
        v560 = *(int *)(v420 + 20);
        v561 = &v503[v560];
        v562 = &v504[v560];
        v563 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v563 - 8) + 32))(v561, v562, v563);
        __swift_storeEnumTagSinglePayload((uint64_t)v503, 0, 1, v420);
      }
      v564 = v179[11];
      v565 = (_QWORD *)((char *)a1 + v564);
      v566 = (_QWORD *)((char *)a2 + v564);
      v567 = type metadata accessor for VideoArtwork();
      if (__swift_getEnumTagSinglePayload((uint64_t)v566, 1, v567))
      {
        v568 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5F718);
        memcpy(v565, v566, *(_QWORD *)(*(_QWORD *)(v568 - 8) + 64));
      }
      else
      {
        *v565 = *v566;
        v601 = *(int *)(v567 + 20);
        v602 = (char *)v565 + v601;
        v603 = (char *)v566 + v601;
        v604 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v604 - 8) + 32))(v602, v603, v604);
        __swift_storeEnumTagSinglePayload((uint64_t)v565, 0, 1, v567);
      }
      v605 = v179[12];
      v606 = (char *)a1 + v605;
      v607 = (char *)a2 + v605;
      v608 = type metadata accessor for ContentDescriptor();
      if (__swift_getEnumTagSinglePayload((uint64_t)v607, 1, v608))
      {
        v609 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
        memcpy(v606, v607, *(_QWORD *)(*(_QWORD *)(v609 - 8) + 64));
      }
      else
      {
        *v606 = *v607;
        memcpy(v606 + 8, v607 + 8, 0x69uLL);
        v641 = *(int *)(v608 + 24);
        v642 = &v606[v641];
        v643 = &v607[v641];
        if (__swift_getEnumTagSinglePayload((uint64_t)v643, 1, v187))
        {
          v644 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
          memcpy(v642, v643, *(_QWORD *)(*(_QWORD *)(v644 - 8) + 64));
        }
        else
        {
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v187 - 8) + 32))(v642, v643, v187);
          __swift_storeEnumTagSinglePayload((uint64_t)v642, 0, 1, v187);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v606, 0, 1, v608);
      }
      goto LABEL_396;
    case 0xAu:
      v27 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v27;
      a1[4] = a2[4];
      v28 = (int *)type metadata accessor for EmptyStateLockup();
      v29 = v28[5];
      v30 = (char *)a1 + v29;
      v31 = (char *)a2 + v29;
      v32 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v32))
      {
        v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
        __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v32);
      }
      *((_BYTE *)a1 + v28[6]) = *((_BYTE *)a2 + v28[6]);
      *(_OWORD *)((char *)a1 + v28[7]) = *(_OWORD *)((char *)a2 + v28[7]);
      *(_OWORD *)((char *)a1 + v28[8]) = *(_OWORD *)((char *)a2 + v28[8]);
      *(_OWORD *)((char *)a1 + v28[9]) = *(_OWORD *)((char *)a2 + v28[9]);
      goto LABEL_396;
    case 0xCu:
      v34 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v34))
      {
        v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(a1, a2, v34);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v34);
      }
      v189 = (int *)type metadata accessor for GroupedTextListLockup();
      v190 = v189[5];
      v191 = (char *)a1 + v190;
      v192 = (char *)a2 + v190;
      v193 = *((_OWORD *)v192 + 1);
      *(_OWORD *)v191 = *(_OWORD *)v192;
      *((_OWORD *)v191 + 1) = v193;
      *((_QWORD *)v191 + 4) = *((_QWORD *)v192 + 4);
      v194 = v189[6];
      v195 = (_OWORD *)((char *)a1 + v194);
      v196 = (_OWORD *)((char *)a2 + v194);
      v197 = type metadata accessor for ModalPresentationDescriptor();
      if (__swift_getEnumTagSinglePayload((uint64_t)v196, 1, v197))
      {
        v198 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553303E8);
        memcpy(v195, v196, *(_QWORD *)(*(_QWORD *)(v198 - 8) + 64));
      }
      else
      {
        v422 = v196[1];
        *v195 = *v196;
        v195[1] = v422;
        v195[2] = v196[2];
        *((_BYTE *)v195 + 48) = *((_BYTE *)v196 + 48);
        *((_QWORD *)v195 + 7) = *((_QWORD *)v196 + 7);
        *((_BYTE *)v195 + 64) = *((_BYTE *)v196 + 64);
        v423 = *(int *)(v197 + 40);
        v424 = (char *)v195 + v423;
        v425 = (char *)v196 + v423;
        v426 = sub_21D7C4314();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v426 - 8) + 32))(v424, v425, v426);
        __swift_storeEnumTagSinglePayload((uint64_t)v195, 0, 1, v197);
      }
      *(_QWORD *)((char *)a1 + v189[7]) = *(_QWORD *)((char *)a2 + v189[7]);
      goto LABEL_396;
    case 0xDu:
      v36 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v36;
      a1[4] = a2[4];
      v37 = (int *)type metadata accessor for HeaderComponentModel();
      v38 = v37[5];
      v39 = (char *)a1 + v38;
      v40 = (char *)a2 + v38;
      v41 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)v40, 1, v41))
      {
        v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
        __swift_storeEnumTagSinglePayload((uint64_t)v39, 0, 1, v41);
      }
      *(_OWORD *)((char *)a1 + v37[6]) = *(_OWORD *)((char *)a2 + v37[6]);
      *((_BYTE *)a1 + v37[7]) = *((_BYTE *)a2 + v37[7]);
      v199 = v37[8];
      v200 = (char *)a1 + v199;
      v201 = (char *)a2 + v199;
      v202 = type metadata accessor for ContentDescriptor();
      if (__swift_getEnumTagSinglePayload((uint64_t)v201, 1, v202))
      {
        v203 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
        memcpy(v200, v201, *(_QWORD *)(*(_QWORD *)(v203 - 8) + 64));
      }
      else
      {
        *v200 = *v201;
        memcpy(v200 + 8, v201 + 8, 0x69uLL);
        v427 = *(int *)(v202 + 24);
        v428 = &v200[v427];
        v429 = &v201[v427];
        v430 = sub_21D7BF754();
        if (__swift_getEnumTagSinglePayload((uint64_t)v429, 1, v430))
        {
          v431 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
          memcpy(v428, v429, *(_QWORD *)(*(_QWORD *)(v431 - 8) + 64));
        }
        else
        {
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v430 - 8) + 32))(v428, v429, v430);
          __swift_storeEnumTagSinglePayload((uint64_t)v428, 0, 1, v430);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v200, 0, 1, v202);
      }
      *((_BYTE *)a1 + v37[9]) = *((_BYTE *)a2 + v37[9]);
      goto LABEL_396;
    case 0x10u:
      v43 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v43;
      a1[4] = a2[4];
      v44 = (int *)type metadata accessor for InlineUpsell();
      v45 = v44[5];
      v46 = (char *)a1 + v45;
      v47 = (char *)a2 + v45;
      v48 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)v47, 1, v48))
      {
        v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v46, v47, v48);
        __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v48);
      }
      *(_OWORD *)((char *)a1 + v44[6]) = *(_OWORD *)((char *)a2 + v44[6]);
      *(_OWORD *)((char *)a1 + v44[7]) = *(_OWORD *)((char *)a2 + v44[7]);
      *(_OWORD *)((char *)a1 + v44[8]) = *(_OWORD *)((char *)a2 + v44[8]);
      v204 = v44[9];
      v205 = (char *)a1 + v204;
      v206 = (char *)a2 + v204;
      *((_QWORD *)v205 + 4) = *((_QWORD *)v206 + 4);
      v207 = *((_OWORD *)v206 + 1);
      *(_OWORD *)v205 = *(_OWORD *)v206;
      *((_OWORD *)v205 + 1) = v207;
      v208 = v44[10];
      v209 = (char *)a1 + v208;
      v210 = (char *)a2 + v208;
      *((_QWORD *)v209 + 4) = *((_QWORD *)v210 + 4);
      v211 = *((_OWORD *)v210 + 1);
      *(_OWORD *)v209 = *(_OWORD *)v210;
      *((_OWORD *)v209 + 1) = v211;
      v212 = v44[11];
      v213 = (char *)a1 + v212;
      v214 = (char *)a2 + v212;
      *((_QWORD *)v213 + 4) = *((_QWORD *)v214 + 4);
      v215 = *((_OWORD *)v214 + 1);
      *(_OWORD *)v213 = *(_OWORD *)v214;
      *((_OWORD *)v213 + 1) = v215;
      *((_BYTE *)a1 + v44[12]) = *((_BYTE *)a2 + v44[12]);
      goto LABEL_396;
    case 0x11u:
      v50 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v50;
      a1[4] = a2[4];
      v51 = (int *)type metadata accessor for LandingUpsell();
      v52 = v51[5];
      v53 = (char *)a1 + v52;
      v54 = (char *)a2 + v52;
      v55 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)v54, 1, v55))
      {
        v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v53, v54, v55);
        __swift_storeEnumTagSinglePayload((uint64_t)v53, 0, 1, v55);
      }
      *(_OWORD *)((char *)a1 + v51[6]) = *(_OWORD *)((char *)a2 + v51[6]);
      *(_OWORD *)((char *)a1 + v51[7]) = *(_OWORD *)((char *)a2 + v51[7]);
      *(_OWORD *)((char *)a1 + v51[8]) = *(_OWORD *)((char *)a2 + v51[8]);
      *(_OWORD *)((char *)a1 + v51[9]) = *(_OWORD *)((char *)a2 + v51[9]);
      v216 = v51[10];
      v217 = (char *)a1 + v216;
      v218 = (char *)a2 + v216;
      v219 = *((_OWORD *)v218 + 1);
      *(_OWORD *)v217 = *(_OWORD *)v218;
      *((_OWORD *)v217 + 1) = v219;
      *((_QWORD *)v217 + 4) = *((_QWORD *)v218 + 4);
      v220 = v51[11];
      v221 = (char *)a1 + v220;
      v222 = (char *)a2 + v220;
      v223 = *((_OWORD *)v222 + 1);
      *(_OWORD *)v221 = *(_OWORD *)v222;
      *((_OWORD *)v221 + 1) = v223;
      *((_QWORD *)v221 + 4) = *((_QWORD *)v222 + 4);
      v224 = v51[12];
      v225 = (char *)a1 + v224;
      v226 = (char *)a2 + v224;
      v227 = *((_OWORD *)v226 + 1);
      *(_OWORD *)v225 = *(_OWORD *)v226;
      *((_OWORD *)v225 + 1) = v227;
      *((_QWORD *)v225 + 4) = *((_QWORD *)v226 + 4);
      v228 = v51[13];
      v229 = (char *)a1 + v228;
      v230 = (char *)a2 + v228;
      v231 = type metadata accessor for Artwork();
      if (__swift_getEnumTagSinglePayload((uint64_t)v230, 1, v231))
      {
        v232 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
        memcpy(v229, v230, *(_QWORD *)(*(_QWORD *)(v232 - 8) + 64));
      }
      else
      {
        v432 = sub_21D7C3840();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v432 - 8) + 32))(v229, v230, v432);
        v433 = *(int *)(v231 + 20);
        v434 = &v229[v433];
        v435 = &v230[v433];
        v436 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v436 - 8) + 32))(v434, v435, v436);
        __swift_storeEnumTagSinglePayload((uint64_t)v229, 0, 1, v231);
      }
      v437 = v51[14];
      v438 = (char *)a1 + v437;
      v439 = (char *)a2 + v437;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v437, 1, v231))
      {
        v440 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
        memcpy(v438, v439, *(_QWORD *)(*(_QWORD *)(v440 - 8) + 64));
      }
      else
      {
        v506 = sub_21D7C3840();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v506 - 8) + 32))(v438, v439, v506);
        v507 = *(int *)(v231 + 20);
        v508 = &v438[v507];
        v509 = &v439[v507];
        v510 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v510 - 8) + 32))(v508, v509, v510);
        __swift_storeEnumTagSinglePayload((uint64_t)v438, 0, 1, v231);
      }
      goto LABEL_396;
    case 0x13u:
      v57 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v57))
      {
        v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(a1, a2, v57);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v57);
      }
      v233 = (int *)type metadata accessor for ListSection();
      v234 = v233[5];
      v235 = (char *)a1 + v234;
      v236 = (char *)a2 + v234;
      v237 = *((_OWORD *)v236 + 1);
      *(_OWORD *)v235 = *(_OWORD *)v236;
      *((_OWORD *)v235 + 1) = v237;
      *((_QWORD *)v235 + 4) = *((_QWORD *)v236 + 4);
      *(_OWORD *)((char *)a1 + v233[6]) = *(_OWORD *)((char *)a2 + v233[6]);
      *(_OWORD *)((char *)a1 + v233[7]) = *(_OWORD *)((char *)a2 + v233[7]);
      *(_QWORD *)((char *)a1 + v233[8]) = *(_QWORD *)((char *)a2 + v233[8]);
      goto LABEL_396;
    case 0x14u:
      v59 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v59))
      {
        v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(a1, a2, v59);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v59);
      }
      v238 = (int *)type metadata accessor for SongDetailList();
      v239 = v238[5];
      v240 = (char *)a1 + v239;
      v241 = (char *)a2 + v239;
      v242 = *((_OWORD *)v241 + 1);
      *(_OWORD *)v240 = *(_OWORD *)v241;
      *((_OWORD *)v240 + 1) = v242;
      *((_QWORD *)v240 + 4) = *((_QWORD *)v241 + 4);
      v243 = v238[6];
      v244 = (char *)a1 + v243;
      v245 = (char *)a2 + v243;
      v246 = (int *)type metadata accessor for SongDetailListHeaderLockup();
      if (__swift_getEnumTagSinglePayload((uint64_t)v245, 1, (uint64_t)v246))
      {
        v247 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330F98);
        memcpy(v244, v245, *(_QWORD *)(*(_QWORD *)(v247 - 8) + 64));
      }
      else
      {
        v967 = a3;
        if (__swift_getEnumTagSinglePayload((uint64_t)v245, 1, v59))
        {
          v441 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(v244, v245, *(_QWORD *)(*(_QWORD *)(v441 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v244, v245, v59);
          __swift_storeEnumTagSinglePayload((uint64_t)v244, 0, 1, v59);
        }
        v684 = v246[5];
        v685 = &v244[v684];
        v686 = &v245[v684];
        v687 = *((_OWORD *)v686 + 1);
        *(_OWORD *)v685 = *(_OWORD *)v686;
        *((_OWORD *)v685 + 1) = v687;
        *((_QWORD *)v685 + 4) = *((_QWORD *)v686 + 4);
        *(_OWORD *)&v244[v246[6]] = *(_OWORD *)&v245[v246[6]];
        *(_OWORD *)&v244[v246[7]] = *(_OWORD *)&v245[v246[7]];
        v688 = v246[8];
        v689 = &v244[v688];
        v690 = &v245[v688];
        *((_QWORD *)v689 + 4) = *((_QWORD *)v690 + 4);
        v691 = *((_OWORD *)v690 + 1);
        *(_OWORD *)v689 = *(_OWORD *)v690;
        *((_OWORD *)v689 + 1) = v691;
        v692 = v246[9];
        v693 = &v244[v692];
        v694 = &v245[v692];
        *((_QWORD *)v693 + 4) = *((_QWORD *)v694 + 4);
        v695 = *((_OWORD *)v694 + 1);
        *(_OWORD *)v693 = *(_OWORD *)v694;
        *((_OWORD *)v693 + 1) = v695;
        v696 = v246[10];
        v697 = &v244[v696];
        v698 = &v245[v696];
        v699 = type metadata accessor for ContentDescriptor();
        if (__swift_getEnumTagSinglePayload((uint64_t)v698, 1, v699))
        {
          v700 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
          memcpy(v697, v698, *(_QWORD *)(*(_QWORD *)(v700 - 8) + 64));
        }
        else
        {
          *v697 = *v698;
          memcpy(v697 + 8, v698 + 8, 0x69uLL);
          v741 = *(int *)(v699 + 24);
          __dsta = v697;
          v960 = &v697[v741];
          v742 = &v698[v741];
          v743 = sub_21D7BF754();
          if (__swift_getEnumTagSinglePayload((uint64_t)v742, 1, v743))
          {
            v744 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
            memcpy(v960, v742, *(_QWORD *)(*(_QWORD *)(v744 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v743 - 8) + 32))(v960, v742, v743);
            __swift_storeEnumTagSinglePayload((uint64_t)v960, 0, 1, v743);
          }
          __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v699);
        }
        v813 = v246[11];
        v814 = &v244[v813];
        v815 = &v245[v813];
        v816 = type metadata accessor for Artwork();
        if (__swift_getEnumTagSinglePayload((uint64_t)v815, 1, v816))
        {
          v817 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
          memcpy(v814, v815, *(_QWORD *)(*(_QWORD *)(v817 - 8) + 64));
        }
        else
        {
          v818 = sub_21D7C3840();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v818 - 8) + 32))(v814, v815, v818);
          v819 = *(int *)(v816 + 20);
          v820 = &v814[v819];
          v821 = &v815[v819];
          v822 = sub_21D7C3804();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v822 - 8) + 32))(v820, v821, v822);
          __swift_storeEnumTagSinglePayload((uint64_t)v814, 0, 1, v816);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v244, 0, 1, (uint64_t)v246);
        a3 = v967;
      }
      *(_QWORD *)((char *)a1 + v238[7]) = *(_QWORD *)((char *)a2 + v238[7]);
      v823 = v238[8];
      v638 = (char *)a1 + v823;
      v639 = (char *)a2 + v823;
      v640 = type metadata accessor for ContentDescriptor();
      if (__swift_getEnumTagSinglePayload((uint64_t)v639, 1, v640))
        goto LABEL_339;
      *v638 = *v639;
      memcpy(v638 + 8, v639 + 8, 0x69uLL);
      v825 = *(int *)(v640 + 24);
      v651 = &v638[v825];
      v652 = &v639[v825];
      v653 = sub_21D7BF754();
      if (__swift_getEnumTagSinglePayload((uint64_t)v652, 1, v653))
        goto LABEL_341;
      goto LABEL_342;
    case 0x15u:
      v61 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v61))
      {
        v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(a1, a2, v61);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v61);
      }
      v248 = (int *)type metadata accessor for ParagraphComponentModel();
      v249 = v248[5];
      v250 = (char *)a1 + v249;
      v251 = (char *)a2 + v249;
      v252 = *((_OWORD *)v251 + 1);
      *(_OWORD *)v250 = *(_OWORD *)v251;
      *((_OWORD *)v250 + 1) = v252;
      *((_QWORD *)v250 + 4) = *((_QWORD *)v251 + 4);
      *(_OWORD *)((char *)a1 + v248[6]) = *(_OWORD *)((char *)a2 + v248[6]);
      *((_BYTE *)a1 + v248[7]) = *((_BYTE *)a2 + v248[7]);
      goto LABEL_396;
    case 0x16u:
      v63 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v63))
      {
        v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(a1, a2, v63);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v63);
      }
      v253 = (int *)type metadata accessor for PlaylistDetailHeaderLockup();
      v254 = v253[5];
      v255 = (char *)a1 + v254;
      v256 = (char *)a2 + v254;
      v257 = *((_OWORD *)v256 + 1);
      *(_OWORD *)v255 = *(_OWORD *)v256;
      *((_OWORD *)v255 + 1) = v257;
      *((_QWORD *)v255 + 4) = *((_QWORD *)v256 + 4);
      *(_OWORD *)((char *)a1 + v253[6]) = *(_OWORD *)((char *)a2 + v253[6]);
      *(_QWORD *)((char *)a1 + v253[7]) = *(_QWORD *)((char *)a2 + v253[7]);
      *(_OWORD *)((char *)a1 + v253[8]) = *(_OWORD *)((char *)a2 + v253[8]);
      v258 = v253[9];
      v259 = (_OWORD *)((char *)a1 + v258);
      v260 = (_OWORD *)((char *)a2 + v258);
      v261 = type metadata accessor for ModalPresentationDescriptor();
      if (__swift_getEnumTagSinglePayload((uint64_t)v260, 1, v261))
      {
        v262 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553303E8);
        memcpy(v259, v260, *(_QWORD *)(*(_QWORD *)(v262 - 8) + 64));
      }
      else
      {
        v442 = v260[1];
        *v259 = *v260;
        v259[1] = v442;
        v259[2] = v260[2];
        *((_BYTE *)v259 + 48) = *((_BYTE *)v260 + 48);
        *((_QWORD *)v259 + 7) = *((_QWORD *)v260 + 7);
        *((_BYTE *)v259 + 64) = *((_BYTE *)v260 + 64);
        v443 = *(int *)(v261 + 40);
        v444 = (char *)v259 + v443;
        v445 = (char *)v260 + v443;
        v446 = sub_21D7C4314();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v446 - 8) + 32))(v444, v445, v446);
        __swift_storeEnumTagSinglePayload((uint64_t)v259, 0, 1, v261);
      }
      *((_BYTE *)a1 + v253[10]) = *((_BYTE *)a2 + v253[10]);
      *(_OWORD *)((char *)a1 + v253[11]) = *(_OWORD *)((char *)a2 + v253[11]);
      v447 = v253[12];
      v448 = (char *)a1 + v447;
      v449 = (char *)a2 + v447;
      v450 = type metadata accessor for Artwork();
      if (__swift_getEnumTagSinglePayload((uint64_t)v449, 1, v450))
      {
        v451 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
        memcpy(v448, v449, *(_QWORD *)(*(_QWORD *)(v451 - 8) + 64));
      }
      else
      {
        v511 = sub_21D7C3840();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v511 - 8) + 32))(v448, v449, v511);
        v512 = *(int *)(v450 + 20);
        v513 = &v448[v512];
        v514 = &v449[v512];
        v515 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v515 - 8) + 32))(v513, v514, v515);
        __swift_storeEnumTagSinglePayload((uint64_t)v448, 0, 1, v450);
      }
      v516 = v253[13];
      v517 = (_QWORD *)((char *)a1 + v516);
      v518 = (_QWORD *)((char *)a2 + v516);
      v519 = type metadata accessor for VideoArtwork();
      if (__swift_getEnumTagSinglePayload((uint64_t)v518, 1, v519))
      {
        v520 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5F718);
        memcpy(v517, v518, *(_QWORD *)(*(_QWORD *)(v520 - 8) + 64));
      }
      else
      {
        *v517 = *v518;
        v569 = *(int *)(v519 + 20);
        v570 = (char *)v517 + v569;
        v571 = (char *)v518 + v569;
        v572 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v572 - 8) + 32))(v570, v571, v572);
        __swift_storeEnumTagSinglePayload((uint64_t)v517, 0, 1, v519);
      }
      v573 = v253[14];
      v574 = (char *)a1 + v573;
      v575 = (char *)a2 + v573;
      v576 = type metadata accessor for ContentDescriptor();
      if (__swift_getEnumTagSinglePayload((uint64_t)v575, 1, v576))
      {
        v577 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
        memcpy(v574, v575, *(_QWORD *)(*(_QWORD *)(v577 - 8) + 64));
      }
      else
      {
        v959 = (void *)v63;
        v610 = a3;
        *v574 = *v575;
        memcpy(v574 + 8, v575 + 8, 0x69uLL);
        v611 = *(int *)(v576 + 24);
        v612 = &v574[v611];
        v613 = &v575[v611];
        v614 = sub_21D7BF754();
        if (__swift_getEnumTagSinglePayload((uint64_t)v613, 1, v614))
        {
          v615 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
          memcpy(v612, v613, *(_QWORD *)(*(_QWORD *)(v615 - 8) + 64));
        }
        else
        {
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v614 - 8) + 32))(v612, v613, v614);
          __swift_storeEnumTagSinglePayload((uint64_t)v612, 0, 1, v614);
        }
        a3 = v610;
        __swift_storeEnumTagSinglePayload((uint64_t)v574, 0, 1, v576);
        v63 = (uint64_t)v959;
      }
      v731 = v253[15];
      v732 = (char *)a1 + v731;
      v733 = (char *)a2 + v731;
      v734 = (int *)type metadata accessor for LinkComponentModel();
      if (__swift_getEnumTagSinglePayload((uint64_t)v733, 1, (uint64_t)v734))
      {
        v735 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330520);
        memcpy(v732, v733, *(_QWORD *)(*(_QWORD *)(v735 - 8) + 64));
      }
      else
      {
        if (__swift_getEnumTagSinglePayload((uint64_t)v733, 1, v63))
        {
          v736 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(v732, v733, *(_QWORD *)(*(_QWORD *)(v736 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v732, v733, v63);
          __swift_storeEnumTagSinglePayload((uint64_t)v732, 0, 1, v63);
        }
        v758 = v734[5];
        v759 = &v732[v758];
        v760 = &v733[v758];
        v761 = *((_OWORD *)v760 + 1);
        *(_OWORD *)v759 = *(_OWORD *)v760;
        *((_OWORD *)v759 + 1) = v761;
        *((_QWORD *)v759 + 4) = *((_QWORD *)v760 + 4);
        v762 = v734[6];
        v763 = &v732[v762];
        v764 = &v733[v762];
        *((_QWORD *)v763 + 4) = *((_QWORD *)v764 + 4);
        v765 = *((_OWORD *)v764 + 1);
        *(_OWORD *)v763 = *(_OWORD *)v764;
        *((_OWORD *)v763 + 1) = v765;
        *(_OWORD *)&v732[v734[7]] = *(_OWORD *)&v733[v734[7]];
        __swift_storeEnumTagSinglePayload((uint64_t)v732, 0, 1, (uint64_t)v734);
      }
      v766 = v253[16];
      v767 = (char *)a1 + v766;
      v768 = (char *)a2 + v766;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v766, 1, (uint64_t)v734))
      {
        v769 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330520);
        memcpy(v767, v768, *(_QWORD *)(*(_QWORD *)(v769 - 8) + 64));
      }
      else
      {
        if (__swift_getEnumTagSinglePayload((uint64_t)v768, 1, v63))
        {
          v770 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(v767, v768, *(_QWORD *)(*(_QWORD *)(v770 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v767, v768, v63);
          __swift_storeEnumTagSinglePayload((uint64_t)v767, 0, 1, v63);
        }
        v784 = v734[5];
        v785 = &v767[v784];
        v786 = &v768[v784];
        v787 = *((_OWORD *)v786 + 1);
        *(_OWORD *)v785 = *(_OWORD *)v786;
        *((_OWORD *)v785 + 1) = v787;
        *((_QWORD *)v785 + 4) = *((_QWORD *)v786 + 4);
        v788 = v734[6];
        v789 = &v767[v788];
        v790 = &v768[v788];
        *((_QWORD *)v789 + 4) = *((_QWORD *)v790 + 4);
        v791 = *((_OWORD *)v790 + 1);
        *(_OWORD *)v789 = *(_OWORD *)v790;
        *((_OWORD *)v789 + 1) = v791;
        *(_OWORD *)&v767[v734[7]] = *(_OWORD *)&v768[v734[7]];
        __swift_storeEnumTagSinglePayload((uint64_t)v767, 0, 1, (uint64_t)v734);
      }
      v792 = v253[17];
      v793 = (char *)a1 + v792;
      v794 = (char *)a2 + v792;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v792, 1, (uint64_t)v734))
      {
        v795 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330520);
        memcpy(v793, v794, *(_QWORD *)(*(_QWORD *)(v795 - 8) + 64));
      }
      else
      {
        if (__swift_getEnumTagSinglePayload((uint64_t)v794, 1, v63))
        {
          v796 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(v793, v794, *(_QWORD *)(*(_QWORD *)(v796 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v793, v794, v63);
          __swift_storeEnumTagSinglePayload((uint64_t)v793, 0, 1, v63);
        }
        v805 = v734[5];
        v806 = &v793[v805];
        v807 = &v794[v805];
        v808 = *((_OWORD *)v807 + 1);
        *(_OWORD *)v806 = *(_OWORD *)v807;
        *((_OWORD *)v806 + 1) = v808;
        *((_QWORD *)v806 + 4) = *((_QWORD *)v807 + 4);
        v809 = v734[6];
        v810 = &v793[v809];
        v811 = &v794[v809];
        *((_QWORD *)v810 + 4) = *((_QWORD *)v811 + 4);
        v812 = *((_OWORD *)v811 + 1);
        *(_OWORD *)v810 = *(_OWORD *)v811;
        *((_OWORD *)v810 + 1) = v812;
        *(_OWORD *)&v793[v734[7]] = *(_OWORD *)&v794[v734[7]];
        __swift_storeEnumTagSinglePayload((uint64_t)v793, 0, 1, (uint64_t)v734);
      }
      *(_QWORD *)((char *)a1 + v253[18]) = *(_QWORD *)((char *)a2 + v253[18]);
      goto LABEL_396;
    case 0x17u:
      *a1 = *a2;
      v65 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255331BB8) + 48);
      v66 = (char *)a1 + v65;
      v67 = (char *)a2 + v65;
      *((_BYTE *)a1 + v65) = *((_BYTE *)a2 + v65);
      memcpy((char *)a1 + v65 + 8, (char *)a2 + v65 + 8, 0x69uLL);
      v68 = *(int *)(type metadata accessor for ContentDescriptor() + 24);
      v13 = &v66[v68];
      v14 = &v67[v68];
      v15 = sub_21D7BF754();
      if (!__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
        goto LABEL_118;
LABEL_5:
      v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      goto LABEL_396;
    case 0x18u:
      v69 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v69))
      {
        v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(a1, a2, v69);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v69);
      }
      v263 = (int *)type metadata accessor for PopoverSelector();
      v264 = v263[5];
      v265 = (char *)a1 + v264;
      v266 = (char *)a2 + v264;
      v267 = *((_OWORD *)v266 + 1);
      *(_OWORD *)v265 = *(_OWORD *)v266;
      *((_OWORD *)v265 + 1) = v267;
      *((_QWORD *)v265 + 4) = *((_QWORD *)v266 + 4);
      *(_QWORD *)((char *)a1 + v263[6]) = *(_QWORD *)((char *)a2 + v263[6]);
      *(_OWORD *)((char *)a1 + v263[7]) = *(_OWORD *)((char *)a2 + v263[7]);
      goto LABEL_396;
    case 0x1Du:
      v71 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v71;
      a1[4] = a2[4];
      v72 = (int *)type metadata accessor for SocialOnboardingNotificationSettingsPageLockup();
      v73 = v72[5];
      v74 = (char *)a1 + v73;
      v75 = (char *)a2 + v73;
      v76 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)v75, 1, v76))
      {
        v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 32))(v74, v75, v76);
        __swift_storeEnumTagSinglePayload((uint64_t)v74, 0, 1, v76);
      }
      *((_BYTE *)a1 + v72[6]) = *((_BYTE *)a2 + v72[6]);
      *((_BYTE *)a1 + v72[7]) = *((_BYTE *)a2 + v72[7]);
      *(_OWORD *)((char *)a1 + v72[8]) = *(_OWORD *)((char *)a2 + v72[8]);
      *((_BYTE *)a1 + v72[9]) = *((_BYTE *)a2 + v72[9]);
      goto LABEL_396;
    case 0x1Eu:
      v78 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v78;
      a1[4] = a2[4];
      *((_DWORD *)a1 + 10) = *((_DWORD *)a2 + 10);
      v79 = *((_OWORD *)a2 + 4);
      *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 4) = v79;
      v80 = *(int *)(type metadata accessor for SocialOnboardingPrivacySettingsPageLockup() + 44);
      v13 = (char *)a1 + v80;
      v14 = (char *)a2 + v80;
      v15 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
        goto LABEL_64;
      goto LABEL_118;
    case 0x20u:
      v81 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v81;
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      a1[6] = a2[6];
      v82 = *(int *)(type metadata accessor for SocialOnboardingUserNameHandlePageLockup() + 24);
      v13 = (char *)a1 + v82;
      v14 = (char *)a2 + v82;
      v15 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
        goto LABEL_64;
      goto LABEL_118;
    case 0x21u:
      v83 = type metadata accessor for Artwork();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v83))
      {
        v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
      }
      else
      {
        v268 = sub_21D7C3840();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v268 - 8) + 32))(a1, a2, v268);
        v269 = *(int *)(v83 + 20);
        v270 = (char *)a1 + v269;
        v271 = (char *)a2 + v269;
        v272 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v272 - 8) + 32))(v270, v271, v272);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v83);
      }
      v273 = (int *)type metadata accessor for SocialOnboardingWelcomePageLockup();
      v274 = v273[5];
      v275 = (char *)a1 + v274;
      v276 = (char *)a2 + v274;
      v277 = *((_OWORD *)v276 + 1);
      *(_OWORD *)v275 = *(_OWORD *)v276;
      *((_OWORD *)v275 + 1) = v277;
      *((_QWORD *)v275 + 4) = *((_QWORD *)v276 + 4);
      v278 = v273[6];
      v279 = (char *)a1 + v278;
      v280 = (char *)a2 + v278;
      v281 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)v280, 1, v281))
      {
        v282 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(v279, v280, *(_QWORD *)(*(_QWORD *)(v282 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v281 - 8) + 32))(v279, v280, v281);
        __swift_storeEnumTagSinglePayload((uint64_t)v279, 0, 1, v281);
      }
      *(_OWORD *)((char *)a1 + v273[7]) = *(_OWORD *)((char *)a2 + v273[7]);
      *(_OWORD *)((char *)a1 + v273[8]) = *(_OWORD *)((char *)a2 + v273[8]);
      goto LABEL_396;
    case 0x22u:
      v85 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v85))
      {
        v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v85 - 8) + 32))(a1, a2, v85);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v85);
      }
      v283 = (int *)type metadata accessor for SocialProfileDetailHeaderLockup();
      v284 = v283[5];
      v285 = (char *)a1 + v284;
      v286 = (char *)a2 + v284;
      v287 = *((_OWORD *)v286 + 1);
      *(_OWORD *)v285 = *(_OWORD *)v286;
      *((_OWORD *)v285 + 1) = v287;
      *((_QWORD *)v285 + 4) = *((_QWORD *)v286 + 4);
      v288 = v283[6];
      v289 = (char *)a1 + v288;
      v290 = (char *)a2 + v288;
      *((_BYTE *)a1 + v288) = *((_BYTE *)a2 + v288);
      memcpy((char *)a1 + v288 + 8, (char *)a2 + v288 + 8, 0x69uLL);
      v291 = *(int *)(type metadata accessor for ContentDescriptor() + 24);
      v292 = &v289[v291];
      v293 = &v290[v291];
      v294 = sub_21D7BF754();
      if (__swift_getEnumTagSinglePayload((uint64_t)v293, 1, v294))
      {
        v295 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
        memcpy(v292, v293, *(_QWORD *)(*(_QWORD *)(v295 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v294 - 8) + 32))(v292, v293, v294);
        __swift_storeEnumTagSinglePayload((uint64_t)v292, 0, 1, v294);
      }
      *(_OWORD *)((char *)a1 + v283[7]) = *(_OWORD *)((char *)a2 + v283[7]);
      *(_OWORD *)((char *)a1 + v283[8]) = *(_OWORD *)((char *)a2 + v283[8]);
      *((_BYTE *)a1 + v283[9]) = *((_BYTE *)a2 + v283[9]);
      *((_BYTE *)a1 + v283[10]) = *((_BYTE *)a2 + v283[10]);
      v452 = v283[11];
      v453 = (char *)a1 + v452;
      v454 = (char *)a2 + v452;
      v455 = type metadata accessor for Artwork();
      if (__swift_getEnumTagSinglePayload((uint64_t)v454, 1, v455))
      {
        v456 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
        memcpy(v453, v454, *(_QWORD *)(*(_QWORD *)(v456 - 8) + 64));
      }
      else
      {
        v521 = sub_21D7C3840();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v521 - 8) + 32))(v453, v454, v521);
        v522 = *(int *)(v455 + 20);
        v523 = &v453[v522];
        v524 = &v454[v522];
        v525 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v525 - 8) + 32))(v523, v524, v525);
        __swift_storeEnumTagSinglePayload((uint64_t)v453, 0, 1, v455);
      }
      goto LABEL_396;
    case 0x23u:
      v87 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v87))
      {
        v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(a1, a2, v87);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v87);
      }
      v296 = (int *)type metadata accessor for SocialProfileEditorHeaderLockup(0);
      v297 = v296[5];
      v298 = (char *)a1 + v297;
      v299 = (char *)a2 + v297;
      v300 = *((_OWORD *)v299 + 1);
      *(_OWORD *)v298 = *(_OWORD *)v299;
      *((_OWORD *)v298 + 1) = v300;
      *((_QWORD *)v298 + 4) = *((_QWORD *)v299 + 4);
      v301 = v296[6];
      v302 = (char *)a1 + v301;
      v303 = (char *)a2 + v301;
      *((_BYTE *)a1 + v301) = *((_BYTE *)a2 + v301);
      memcpy((char *)a1 + v301 + 8, (char *)a2 + v301 + 8, 0x69uLL);
      v304 = *(int *)(type metadata accessor for ContentDescriptor() + 24);
      v305 = &v302[v304];
      v306 = &v303[v304];
      v307 = sub_21D7BF754();
      if (__swift_getEnumTagSinglePayload((uint64_t)v306, 1, v307))
      {
        v308 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
        memcpy(v305, v306, *(_QWORD *)(*(_QWORD *)(v308 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v307 - 8) + 32))(v305, v306, v307);
        __swift_storeEnumTagSinglePayload((uint64_t)v305, 0, 1, v307);
      }
      *(_OWORD *)((char *)a1 + v296[7]) = *(_OWORD *)((char *)a2 + v296[7]);
      *(_OWORD *)((char *)a1 + v296[8]) = *(_OWORD *)((char *)a2 + v296[8]);
      *((_BYTE *)a1 + v296[9]) = *((_BYTE *)a2 + v296[9]);
      *((_BYTE *)a1 + v296[10]) = *((_BYTE *)a2 + v296[10]);
      *(_OWORD *)((char *)a1 + v296[11]) = *(_OWORD *)((char *)a2 + v296[11]);
      *(_OWORD *)((char *)a1 + v296[12]) = *(_OWORD *)((char *)a2 + v296[12]);
      *(_OWORD *)((char *)a1 + v296[13]) = *(_OWORD *)((char *)a2 + v296[13]);
      *(_OWORD *)((char *)a1 + v296[14]) = *(_OWORD *)((char *)a2 + v296[14]);
      *(_QWORD *)((char *)a1 + v296[15]) = *(_QWORD *)((char *)a2 + v296[15]);
      v457 = v296[16];
      v458 = (char *)a1 + v457;
      v459 = (char *)a2 + v457;
      v460 = type metadata accessor for Artwork();
      if (__swift_getEnumTagSinglePayload((uint64_t)v459, 1, v460))
      {
        v461 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
        memcpy(v458, v459, *(_QWORD *)(*(_QWORD *)(v461 - 8) + 64));
      }
      else
      {
        v526 = sub_21D7C3840();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v526 - 8) + 32))(v458, v459, v526);
        v527 = *(int *)(v460 + 20);
        v528 = &v458[v527];
        v529 = &v459[v527];
        v530 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v530 - 8) + 32))(v528, v529, v530);
        __swift_storeEnumTagSinglePayload((uint64_t)v458, 0, 1, v460);
      }
      *(_OWORD *)((char *)a1 + v296[17]) = *(_OWORD *)((char *)a2 + v296[17]);
      goto LABEL_396;
    case 0x24u:
      v89 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v89))
      {
        v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v89 - 8) + 32))(a1, a2, v89);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v89);
      }
      FriendsButtonComponentModel = (int *)type metadata accessor for SocialProfileFindFriendsButtonComponentModel();
      v310 = FriendsButtonComponentModel[5];
      v311 = (char *)a1 + v310;
      v312 = (char *)a2 + v310;
      v313 = *((_OWORD *)v312 + 1);
      *(_OWORD *)v311 = *(_OWORD *)v312;
      *((_OWORD *)v311 + 1) = v313;
      *((_QWORD *)v311 + 4) = *((_QWORD *)v312 + 4);
      *(_OWORD *)((char *)a1 + FriendsButtonComponentModel[6]) = *(_OWORD *)((char *)a2 + FriendsButtonComponentModel[6]);
      v314 = FriendsButtonComponentModel[7];
      v315 = (char *)a1 + v314;
      v316 = (char *)a2 + v314;
      v317 = *((_OWORD *)v316 + 1);
      *(_OWORD *)v315 = *(_OWORD *)v316;
      *((_OWORD *)v315 + 1) = v317;
      *((_QWORD *)v315 + 4) = *((_QWORD *)v316 + 4);
      goto LABEL_396;
    case 0x25u:
      v91 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v91))
      {
        v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(a1, a2, v91);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v91);
      }
      v318 = (int *)type metadata accessor for SocialProfileDetailViewFollowRequestsHeader();
      v319 = v318[5];
      v320 = (char *)a1 + v319;
      v321 = (char *)a2 + v319;
      v322 = *((_OWORD *)v321 + 1);
      *(_OWORD *)v320 = *(_OWORD *)v321;
      *((_OWORD *)v320 + 1) = v322;
      *((_QWORD *)v320 + 4) = *((_QWORD *)v321 + 4);
      *(_QWORD *)((char *)a1 + v318[6]) = *(_QWORD *)((char *)a2 + v318[6]);
      *(_QWORD *)((char *)a1 + v318[7]) = *(_QWORD *)((char *)a2 + v318[7]);
      goto LABEL_396;
    case 0x26u:
      v93 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v93))
      {
        v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(a1, a2, v93);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v93);
      }
      v323 = (int *)type metadata accessor for SocialProfileFollowRequestResponseHeader();
      v324 = v323[5];
      v325 = (char *)a1 + v324;
      v326 = (char *)a2 + v324;
      v327 = *((_OWORD *)v326 + 1);
      *(_OWORD *)v325 = *(_OWORD *)v326;
      *((_OWORD *)v325 + 1) = v327;
      *((_QWORD *)v325 + 4) = *((_QWORD *)v326 + 4);
      *(_OWORD *)((char *)a1 + v323[6]) = *(_OWORD *)((char *)a2 + v323[6]);
      *(_OWORD *)((char *)a1 + v323[7]) = *(_OWORD *)((char *)a2 + v323[7]);
      v328 = v323[8];
      v329 = (char *)a1 + v328;
      v330 = (char *)a2 + v328;
      v331 = *((_OWORD *)v330 + 1);
      *(_OWORD *)v329 = *(_OWORD *)v330;
      *((_OWORD *)v329 + 1) = v331;
      *((_QWORD *)v329 + 4) = *((_QWORD *)v330 + 4);
      v332 = v323[9];
      v333 = (char *)a1 + v332;
      v334 = (char *)a2 + v332;
      *((_QWORD *)v333 + 4) = *((_QWORD *)v334 + 4);
      v335 = *((_OWORD *)v334 + 1);
      *(_OWORD *)v333 = *(_OWORD *)v334;
      *((_OWORD *)v333 + 1) = v335;
      goto LABEL_396;
    case 0x27u:
      v95 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v95))
      {
        v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(a1, a2, v95);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v95);
      }
      v336 = type metadata accessor for SocialProfileFollowRequestsPageComponentModel();
      v337 = *(int *)(v336 + 20);
      v338 = (char *)a1 + v337;
      v339 = (char *)a2 + v337;
      v340 = *((_OWORD *)v339 + 1);
      *(_OWORD *)v338 = *(_OWORD *)v339;
      *((_OWORD *)v338 + 1) = v340;
      *((_QWORD *)v338 + 4) = *((_QWORD *)v339 + 4);
      *(_QWORD *)((char *)a1 + *(int *)(v336 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v336 + 24));
      goto LABEL_396;
    case 0x28u:
      v97 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v97;
      a1[4] = a2[4];
      v98 = type metadata accessor for SocialOnboardingSharedPlaylistPageLockup();
      v99 = *(int *)(v98 + 20);
      v100 = (char *)a1 + v99;
      v101 = (char *)a2 + v99;
      v102 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)v101, 1, v102))
      {
        v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v100, v101, v102);
        __swift_storeEnumTagSinglePayload((uint64_t)v100, 0, 1, v102);
      }
      *(_QWORD *)((char *)a1 + *(int *)(v98 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v98 + 24));
      goto LABEL_396;
    case 0x29u:
      v104 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v104;
      a1[4] = a2[4];
      FriendsPageSectionLockup = (int *)type metadata accessor for SocialOnboardingFindFriendsPageSectionLockup();
      v106 = FriendsPageSectionLockup[5];
      v107 = (char *)a1 + v106;
      v108 = (char *)a2 + v106;
      v109 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)v108, 1, v109))
      {
        v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 32))(v107, v108, v109);
        __swift_storeEnumTagSinglePayload((uint64_t)v107, 0, 1, v109);
      }
      *(_QWORD *)((char *)a1 + FriendsPageSectionLockup[6]) = *(_QWORD *)((char *)a2 + FriendsPageSectionLockup[6]);
      *(_QWORD *)((char *)a1 + FriendsPageSectionLockup[7]) = *(_QWORD *)((char *)a2 + FriendsPageSectionLockup[7]);
      goto LABEL_396;
    case 0x2Bu:
      v111 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v111;
      a1[4] = a2[4];
      v112 = *(int *)(type metadata accessor for Spacer() + 20);
      v13 = (char *)a1 + v112;
      v14 = (char *)a2 + v112;
      v15 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
      {
LABEL_64:
        v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
      }
      else
      {
LABEL_118:
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
        __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
      }
      goto LABEL_396;
    case 0x2Du:
      v114 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v114))
      {
        v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v114 - 8) + 32))(a1, a2, v114);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v114);
      }
      v341 = (int *)type metadata accessor for SuperHeroLockup();
      v342 = v341[5];
      v343 = (char *)a1 + v342;
      v344 = (char *)a2 + v342;
      v345 = *((_OWORD *)v344 + 1);
      *(_OWORD *)v343 = *(_OWORD *)v344;
      *((_OWORD *)v343 + 1) = v345;
      *((_QWORD *)v343 + 4) = *((_QWORD *)v344 + 4);
      v346 = v341[6];
      v347 = (char *)a1 + v346;
      v348 = (char *)a2 + v346;
      v349 = *((_OWORD *)v348 + 1);
      *(_OWORD *)v347 = *(_OWORD *)v348;
      *((_OWORD *)v347 + 1) = v349;
      *((_QWORD *)v347 + 4) = *((_QWORD *)v348 + 4);
      *(_OWORD *)((char *)a1 + v341[7]) = *(_OWORD *)((char *)a2 + v341[7]);
      *(_OWORD *)((char *)a1 + v341[8]) = *(_OWORD *)((char *)a2 + v341[8]);
      *(_OWORD *)((char *)a1 + v341[9]) = *(_OWORD *)((char *)a2 + v341[9]);
      *(_OWORD *)((char *)a1 + v341[10]) = *(_OWORD *)((char *)a2 + v341[10]);
      *(_OWORD *)((char *)a1 + v341[11]) = *(_OWORD *)((char *)a2 + v341[11]);
      *((_BYTE *)a1 + v341[12]) = *((_BYTE *)a2 + v341[12]);
      *(_QWORD *)((char *)a1 + v341[13]) = *(_QWORD *)((char *)a2 + v341[13]);
      v350 = v341[14];
      v351 = (char *)a1 + v350;
      v352 = (char *)a2 + v350;
      v353 = type metadata accessor for Artwork();
      if (__swift_getEnumTagSinglePayload((uint64_t)v352, 1, v353))
      {
        v354 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
        memcpy(v351, v352, *(_QWORD *)(*(_QWORD *)(v354 - 8) + 64));
      }
      else
      {
        v462 = sub_21D7C3840();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v462 - 8) + 32))(v351, v352, v462);
        v463 = *(int *)(v353 + 20);
        v464 = &v351[v463];
        v465 = &v352[v463];
        v466 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v466 - 8) + 32))(v464, v465, v466);
        __swift_storeEnumTagSinglePayload((uint64_t)v351, 0, 1, v353);
      }
      v467 = v341[15];
      v468 = (char *)a1 + v467;
      v469 = (char *)a2 + v467;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v467, 1, v353))
      {
        v470 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
        memcpy(v468, v469, *(_QWORD *)(*(_QWORD *)(v470 - 8) + 64));
      }
      else
      {
        v531 = sub_21D7C3840();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v531 - 8) + 32))(v468, v469, v531);
        v532 = *(int *)(v353 + 20);
        v533 = &v468[v532];
        v534 = &v469[v532];
        v535 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v535 - 8) + 32))(v533, v534, v535);
        __swift_storeEnumTagSinglePayload((uint64_t)v468, 0, 1, v353);
      }
      v536 = v341[16];
      v537 = (_QWORD *)((char *)a1 + v536);
      v538 = (_QWORD *)((char *)a2 + v536);
      v539 = type metadata accessor for VideoArtwork();
      if (__swift_getEnumTagSinglePayload((uint64_t)v538, 1, v539))
      {
        v540 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5F718);
        memcpy(v537, v538, *(_QWORD *)(*(_QWORD *)(v540 - 8) + 64));
      }
      else
      {
        *v537 = *v538;
        v578 = *(int *)(v539 + 20);
        v579 = (char *)v537 + v578;
        v580 = (char *)v538 + v578;
        v581 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v581 - 8) + 32))(v579, v580, v581);
        __swift_storeEnumTagSinglePayload((uint64_t)v537, 0, 1, v539);
      }
      v582 = v341[17];
      v583 = (_QWORD *)((char *)a1 + v582);
      v584 = (_QWORD *)((char *)a2 + v582);
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v582, 1, v539))
      {
        v585 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5F718);
        memcpy(v583, v584, *(_QWORD *)(*(_QWORD *)(v585 - 8) + 64));
      }
      else
      {
        *v583 = *v584;
        v616 = *(int *)(v539 + 20);
        v617 = (char *)v583 + v616;
        v618 = (char *)v584 + v616;
        v619 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v619 - 8) + 32))(v617, v618, v619);
        __swift_storeEnumTagSinglePayload((uint64_t)v583, 0, 1, v539);
      }
      *((_BYTE *)a1 + v341[18]) = *((_BYTE *)a2 + v341[18]);
      *((_BYTE *)a1 + v341[19]) = *((_BYTE *)a2 + v341[19]);
      *(_OWORD *)((char *)a1 + v341[20]) = *(_OWORD *)((char *)a2 + v341[20]);
      v620 = v341[21];
      v621 = (char *)a1 + v620;
      v622 = (char *)a2 + v620;
      v621[16] = v622[16];
      *(_OWORD *)v621 = *(_OWORD *)v622;
      v623 = v341[22];
      v624 = (char *)a1 + v623;
      v625 = (char *)a2 + v623;
      *((_QWORD *)v624 + 4) = *((_QWORD *)v625 + 4);
      v626 = *((_OWORD *)v625 + 1);
      *(_OWORD *)v624 = *(_OWORD *)v625;
      *((_OWORD *)v624 + 1) = v626;
      v627 = v341[23];
      v628 = (char *)a1 + v627;
      v629 = (char *)a2 + v627;
      v630 = type metadata accessor for ContentDescriptor();
      if (__swift_getEnumTagSinglePayload((uint64_t)v629, 1, v630))
      {
        v631 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
        memcpy(v628, v629, *(_QWORD *)(*(_QWORD *)(v631 - 8) + 64));
      }
      else
      {
        *v628 = *v629;
        memcpy(v628 + 8, v629 + 8, 0x69uLL);
        v645 = *(int *)(v630 + 24);
        v646 = &v628[v645];
        v647 = &v629[v645];
        v648 = sub_21D7BF754();
        if (__swift_getEnumTagSinglePayload((uint64_t)v647, 1, v648))
        {
          v649 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
          memcpy(v646, v647, *(_QWORD *)(*(_QWORD *)(v649 - 8) + 64));
        }
        else
        {
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v648 - 8) + 32))(v646, v647, v648);
          __swift_storeEnumTagSinglePayload((uint64_t)v646, 0, 1, v648);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v628, 0, 1, v630);
      }
      *(_OWORD *)((char *)a1 + v341[24]) = *(_OWORD *)((char *)a2 + v341[24]);
      goto LABEL_396;
    case 0x32u:
      v116 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v116;
      a1[4] = a2[4];
      v117 = (int *)type metadata accessor for TVMovieDescription();
      v118 = v117[5];
      v119 = (char *)a1 + v118;
      v120 = (char *)a2 + v118;
      v121 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)v120, 1, v121))
      {
        v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(v119, v120, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 32))(v119, v120, v121);
        __swift_storeEnumTagSinglePayload((uint64_t)v119, 0, 1, v121);
      }
      *(_OWORD *)((char *)a1 + v117[6]) = *(_OWORD *)((char *)a2 + v117[6]);
      v355 = v117[7];
      v356 = (char *)a1 + v355;
      v357 = (char *)a2 + v355;
      *((_QWORD *)v356 + 4) = *((_QWORD *)v357 + 4);
      v358 = *((_OWORD *)v357 + 1);
      *(_OWORD *)v356 = *(_OWORD *)v357;
      *((_OWORD *)v356 + 1) = v358;
      *(_QWORD *)((char *)a1 + v117[8]) = *(_QWORD *)((char *)a2 + v117[8]);
      *(_OWORD *)((char *)a1 + v117[9]) = *(_OWORD *)((char *)a2 + v117[9]);
      v359 = v117[10];
      v360 = (char *)a1 + v359;
      v361 = (char *)a2 + v359;
      v362 = (int *)type metadata accessor for ParagraphComponentModel();
      if (__swift_getEnumTagSinglePayload((uint64_t)v361, 1, (uint64_t)v362))
      {
        v363 = __swift_instantiateConcreteTypeFromMangledName(qword_255331BC0);
        memcpy(v360, v361, *(_QWORD *)(*(_QWORD *)(v363 - 8) + 64));
      }
      else
      {
        if (__swift_getEnumTagSinglePayload((uint64_t)v361, 1, v121))
        {
          v471 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(v360, v361, *(_QWORD *)(*(_QWORD *)(v471 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 32))(v360, v361, v121);
          __swift_storeEnumTagSinglePayload((uint64_t)v360, 0, 1, v121);
        }
        v701 = v362[5];
        v702 = &v360[v701];
        v703 = &v361[v701];
        v704 = *((_OWORD *)v703 + 1);
        *(_OWORD *)v702 = *(_OWORD *)v703;
        *((_OWORD *)v702 + 1) = v704;
        *((_QWORD *)v702 + 4) = *((_QWORD *)v703 + 4);
        *(_OWORD *)&v360[v362[6]] = *(_OWORD *)&v361[v362[6]];
        v360[v362[7]] = v361[v362[7]];
        __swift_storeEnumTagSinglePayload((uint64_t)v360, 0, 1, (uint64_t)v362);
      }
      *(_OWORD *)((char *)a1 + v117[11]) = *(_OWORD *)((char *)a2 + v117[11]);
      v705 = v117[12];
      v638 = (char *)a1 + v705;
      v639 = (char *)a2 + v705;
      v640 = type metadata accessor for ContentDescriptor();
      if (__swift_getEnumTagSinglePayload((uint64_t)v639, 1, v640))
        goto LABEL_339;
      *v638 = *v639;
      memcpy(v638 + 8, v639 + 8, 0x69uLL);
      v706 = *(int *)(v640 + 24);
      v651 = &v638[v706];
      v652 = &v639[v706];
      v653 = sub_21D7BF754();
      if (__swift_getEnumTagSinglePayload((uint64_t)v652, 1, v653))
        goto LABEL_341;
      goto LABEL_342;
    case 0x33u:
      v123 = sub_21D7C4668();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v123))
      {
        v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v123 - 8) + 32))(a1, a2, v123);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v123);
      }
      v364 = (int *)type metadata accessor for TVMovieDetailHeaderLockup();
      v365 = v364[5];
      v366 = (char *)a1 + v365;
      v367 = (char *)a2 + v365;
      v368 = *((_OWORD *)v367 + 1);
      *(_OWORD *)v366 = *(_OWORD *)v367;
      *((_OWORD *)v366 + 1) = v368;
      *((_QWORD *)v366 + 4) = *((_QWORD *)v367 + 4);
      v369 = v364[6];
      v370 = (char *)a1 + v369;
      v371 = (char *)a2 + v369;
      v372 = *((_OWORD *)v371 + 1);
      *(_OWORD *)v370 = *(_OWORD *)v371;
      *((_OWORD *)v370 + 1) = v372;
      *((_QWORD *)v370 + 4) = *((_QWORD *)v371 + 4);
      *(_OWORD *)((char *)a1 + v364[7]) = *(_OWORD *)((char *)a2 + v364[7]);
      *(_OWORD *)((char *)a1 + v364[8]) = *(_OWORD *)((char *)a2 + v364[8]);
      *(_QWORD *)((char *)a1 + v364[9]) = *(_QWORD *)((char *)a2 + v364[9]);
      v373 = v364[10];
      v374 = (_OWORD *)((char *)a1 + v373);
      v375 = (_OWORD *)((char *)a2 + v373);
      v376 = type metadata accessor for ModalPresentationDescriptor();
      if (__swift_getEnumTagSinglePayload((uint64_t)v375, 1, v376))
      {
        v377 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553303E8);
        memcpy(v374, v375, *(_QWORD *)(*(_QWORD *)(v377 - 8) + 64));
      }
      else
      {
        v472 = v375[1];
        *v374 = *v375;
        v374[1] = v472;
        v374[2] = v375[2];
        *((_BYTE *)v374 + 48) = *((_BYTE *)v375 + 48);
        *((_QWORD *)v374 + 7) = *((_QWORD *)v375 + 7);
        *((_BYTE *)v374 + 64) = *((_BYTE *)v375 + 64);
        v473 = *(int *)(v376 + 40);
        v474 = (char *)v374 + v473;
        v475 = (char *)v375 + v473;
        v476 = sub_21D7C4314();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v476 - 8) + 32))(v474, v475, v476);
        __swift_storeEnumTagSinglePayload((uint64_t)v374, 0, 1, v376);
      }
      v477 = v364[11];
      v478 = (char *)a1 + v477;
      v479 = (char *)a2 + v477;
      v480 = type metadata accessor for Artwork();
      if (__swift_getEnumTagSinglePayload((uint64_t)v479, 1, v480))
      {
        v481 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
        memcpy(v478, v479, *(_QWORD *)(*(_QWORD *)(v481 - 8) + 64));
      }
      else
      {
        v541 = sub_21D7C3840();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v541 - 8) + 32))(v478, v479, v541);
        v542 = *(int *)(v480 + 20);
        v543 = &v478[v542];
        v544 = &v479[v542];
        v545 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v545 - 8) + 32))(v543, v544, v545);
        __swift_storeEnumTagSinglePayload((uint64_t)v478, 0, 1, v480);
      }
      *(_OWORD *)((char *)a1 + v364[12]) = *(_OWORD *)((char *)a2 + v364[12]);
      *(_QWORD *)((char *)a1 + v364[13]) = *(_QWORD *)((char *)a2 + v364[13]);
      *((_BYTE *)a1 + v364[14]) = *((_BYTE *)a2 + v364[14]);
      v546 = v364[15];
      v547 = (char *)a1 + v546;
      v548 = (char *)a2 + v546;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v546, 1, v480))
      {
        v549 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
        memcpy(v547, v548, *(_QWORD *)(*(_QWORD *)(v549 - 8) + 64));
      }
      else
      {
        v586 = sub_21D7C3840();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v586 - 8) + 32))(v547, v548, v586);
        v587 = *(int *)(v480 + 20);
        v588 = &v547[v587];
        v589 = &v548[v587];
        v590 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v590 - 8) + 32))(v588, v589, v590);
        __swift_storeEnumTagSinglePayload((uint64_t)v547, 0, 1, v480);
      }
      *(_OWORD *)((char *)a1 + v364[16]) = *(_OWORD *)((char *)a2 + v364[16]);
      v591 = v364[17];
      v592 = (char *)a1 + v591;
      v593 = (char *)a2 + v591;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v591, 1, v480))
      {
        v594 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
        memcpy(v592, v593, *(_QWORD *)(*(_QWORD *)(v594 - 8) + 64));
      }
      else
      {
        v632 = sub_21D7C3840();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v632 - 8) + 32))(v592, v593, v632);
        v633 = *(int *)(v480 + 20);
        v634 = &v592[v633];
        v635 = &v593[v633];
        v636 = sub_21D7C3804();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v636 - 8) + 32))(v634, v635, v636);
        __swift_storeEnumTagSinglePayload((uint64_t)v592, 0, 1, v480);
      }
      v637 = v364[18];
      v638 = (char *)a1 + v637;
      v639 = (char *)a2 + v637;
      v640 = type metadata accessor for ContentDescriptor();
      if (__swift_getEnumTagSinglePayload((uint64_t)v639, 1, v640))
      {
LABEL_339:
        v824 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
        memcpy(v638, v639, *(_QWORD *)(*(_QWORD *)(v824 - 8) + 64));
      }
      else
      {
        *v638 = *v639;
        memcpy(v638 + 8, v639 + 8, 0x69uLL);
        v650 = *(int *)(v640 + 24);
        v651 = &v638[v650];
        v652 = &v639[v650];
        v653 = sub_21D7BF754();
        if (__swift_getEnumTagSinglePayload((uint64_t)v652, 1, v653))
        {
LABEL_341:
          v826 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
          memcpy(v651, v652, *(_QWORD *)(*(_QWORD *)(v826 - 8) + 64));
        }
        else
        {
LABEL_342:
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v653 - 8) + 32))(v651, v652, v653);
          __swift_storeEnumTagSinglePayload((uint64_t)v651, 0, 1, v653);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v638, 0, 1, v640);
      }
      goto LABEL_396;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_397;
  }
}

_QWORD *sub_21CF2F714(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  int *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  int *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  int *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  int *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  int *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __int128 v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  int *FriendsPageSectionLockup;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  __int128 v117;
  int *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  __int128 v130;
  uint64_t v131;
  _OWORD *v132;
  _OWORD *v133;
  uint64_t v134;
  uint64_t v135;
  int *v136;
  uint64_t v137;
  char *v138;
  char *v139;
  __int128 v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  int *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  __int128 v150;
  uint64_t v151;
  char *v152;
  char *v153;
  __int128 v154;
  uint64_t v155;
  _BYTE *v156;
  _BYTE *v157;
  uint64_t v158;
  uint64_t v159;
  int *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  __int128 v164;
  uint64_t v165;
  char *v166;
  char *v167;
  int *v168;
  uint64_t v169;
  int *v170;
  uint64_t v171;
  char *v172;
  char *v173;
  __int128 v174;
  uint64_t v175;
  _BYTE *v176;
  _BYTE *v177;
  uint64_t v178;
  uint64_t v179;
  int *v180;
  uint64_t v181;
  char *v182;
  char *v183;
  __int128 v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  int *v190;
  uint64_t v191;
  char *v192;
  char *v193;
  __int128 v194;
  uint64_t v195;
  _OWORD *v196;
  _OWORD *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  _BYTE *v201;
  _BYTE *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  char *v207;
  __int128 v208;
  uint64_t v209;
  char *v210;
  char *v211;
  __int128 v212;
  uint64_t v213;
  char *v214;
  char *v215;
  __int128 v216;
  uint64_t v217;
  char *v218;
  char *v219;
  __int128 v220;
  uint64_t v221;
  char *v222;
  char *v223;
  __int128 v224;
  uint64_t v225;
  char *v226;
  char *v227;
  __int128 v228;
  uint64_t v229;
  char *v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  int *v234;
  uint64_t v235;
  char *v236;
  char *v237;
  __int128 v238;
  int *v239;
  uint64_t v240;
  char *v241;
  char *v242;
  __int128 v243;
  uint64_t v244;
  char *v245;
  char *v246;
  int *v247;
  uint64_t v248;
  int *v249;
  uint64_t v250;
  char *v251;
  char *v252;
  __int128 v253;
  int *v254;
  uint64_t v255;
  char *v256;
  char *v257;
  __int128 v258;
  uint64_t v259;
  _OWORD *v260;
  _OWORD *v261;
  uint64_t v262;
  uint64_t v263;
  int *v264;
  uint64_t v265;
  char *v266;
  char *v267;
  __int128 v268;
  uint64_t v269;
  uint64_t v270;
  char *v271;
  char *v272;
  uint64_t v273;
  int *v274;
  uint64_t v275;
  char *v276;
  char *v277;
  __int128 v278;
  uint64_t v279;
  char *v280;
  char *v281;
  uint64_t v282;
  uint64_t v283;
  int *v284;
  uint64_t v285;
  char *v286;
  char *v287;
  __int128 v288;
  uint64_t v289;
  char *v290;
  char *v291;
  uint64_t v292;
  char *v293;
  char *v294;
  uint64_t v295;
  uint64_t v296;
  int *v297;
  uint64_t v298;
  char *v299;
  char *v300;
  __int128 v301;
  uint64_t v302;
  char *v303;
  char *v304;
  uint64_t v305;
  char *v306;
  char *v307;
  uint64_t v308;
  uint64_t v309;
  int *FriendsButtonComponentModel;
  uint64_t v311;
  char *v312;
  char *v313;
  __int128 v314;
  uint64_t v315;
  char *v316;
  char *v317;
  __int128 v318;
  int *v319;
  uint64_t v320;
  char *v321;
  char *v322;
  __int128 v323;
  int *v324;
  uint64_t v325;
  char *v326;
  char *v327;
  __int128 v328;
  uint64_t v329;
  char *v330;
  char *v331;
  __int128 v332;
  uint64_t v333;
  char *v334;
  char *v335;
  __int128 v336;
  uint64_t v337;
  uint64_t v338;
  char *v339;
  char *v340;
  __int128 v341;
  int *v342;
  uint64_t v343;
  char *v344;
  char *v345;
  __int128 v346;
  uint64_t v347;
  char *v348;
  char *v349;
  __int128 v350;
  uint64_t v351;
  char *v352;
  char *v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  char *v357;
  char *v358;
  __int128 v359;
  uint64_t v360;
  char *v361;
  char *v362;
  int *v363;
  uint64_t v364;
  int *v365;
  uint64_t v366;
  char *v367;
  char *v368;
  __int128 v369;
  uint64_t v370;
  char *v371;
  char *v372;
  __int128 v373;
  uint64_t v374;
  _OWORD *v375;
  _OWORD *v376;
  uint64_t v377;
  uint64_t v378;
  __int128 v379;
  uint64_t v380;
  char *v381;
  char *v382;
  uint64_t v383;
  char *v384;
  uint64_t v385;
  char *v386;
  char *v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  char *v392;
  char *v393;
  uint64_t v394;
  uint64_t v395;
  char *v396;
  char *v397;
  uint64_t v398;
  uint64_t v399;
  char *v400;
  char *v401;
  __int128 v402;
  uint64_t v403;
  _BYTE *v404;
  _BYTE *v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  _BYTE *v409;
  _BYTE *v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  _BYTE *v415;
  _BYTE *v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  char *v420;
  char *v421;
  uint64_t v422;
  uint64_t v423;
  __int128 v424;
  uint64_t v425;
  char *v426;
  char *v427;
  uint64_t v428;
  uint64_t v429;
  _BYTE *v430;
  _BYTE *v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  char *v436;
  char *v437;
  uint64_t v438;
  uint64_t v439;
  char *v440;
  char *v441;
  uint64_t v442;
  uint64_t v443;
  __int128 v444;
  uint64_t v445;
  char *v446;
  char *v447;
  uint64_t v448;
  uint64_t v449;
  char *v450;
  char *v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  char *v456;
  char *v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  char *v462;
  char *v463;
  uint64_t v464;
  uint64_t v465;
  char *v466;
  char *v467;
  uint64_t v468;
  uint64_t v469;
  __int128 v470;
  uint64_t v471;
  char *v472;
  char *v473;
  uint64_t v474;
  uint64_t v475;
  char *v476;
  char *v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  char *v482;
  char *v483;
  uint64_t v484;
  char *v485;
  uint64_t v486;
  _QWORD *v487;
  _QWORD *v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  _BYTE *v492;
  _BYTE *v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  char *v498;
  char *v499;
  uint64_t v500;
  uint64_t v501;
  char *v502;
  char *v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  char *v507;
  char *v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  char *v512;
  char *v513;
  uint64_t v514;
  uint64_t v515;
  _QWORD *v516;
  _QWORD *v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  char *v522;
  char *v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  char *v527;
  char *v528;
  uint64_t v529;
  uint64_t v530;
  _QWORD *v531;
  _QWORD *v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  char *v537;
  char *v538;
  uint64_t v539;
  uint64_t v540;
  char *v541;
  char *v542;
  uint64_t v543;
  uint64_t v544;
  char *v545;
  char *v546;
  uint64_t v547;
  char *v548;
  uint64_t v549;
  _BYTE *v550;
  _BYTE *v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  char *v556;
  char *v557;
  uint64_t v558;
  uint64_t v559;
  _QWORD *v560;
  _QWORD *v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  char *v565;
  char *v566;
  uint64_t v567;
  uint64_t v568;
  _BYTE *v569;
  _BYTE *v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  char *v574;
  char *v575;
  uint64_t v576;
  uint64_t v577;
  _QWORD *v578;
  _QWORD *v579;
  uint64_t v580;
  uint64_t v581;
  uint64_t v582;
  char *v583;
  char *v584;
  uint64_t v585;
  uint64_t v586;
  char *v587;
  char *v588;
  uint64_t v589;
  uint64_t v590;
  _BYTE *v591;
  _BYTE *v592;
  uint64_t v593;
  uint64_t v594;
  uint64_t v595;
  char *v596;
  char *v597;
  uint64_t v598;
  uint64_t v599;
  _BYTE *v600;
  _BYTE *v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  _BYTE *v605;
  _BYTE *v606;
  uint64_t v607;
  uint64_t v608;
  uint64_t v609;
  char *v610;
  char *v611;
  uint64_t v612;
  uint64_t v613;
  char *v614;
  char *v615;
  uint64_t v616;
  char *v617;
  char *v618;
  __int128 v619;
  uint64_t v620;
  _BYTE *v621;
  _BYTE *v622;
  uint64_t v623;
  uint64_t v624;
  uint64_t v625;
  uint64_t v626;
  char *v627;
  char *v628;
  uint64_t v629;
  uint64_t v630;
  _BYTE *v631;
  _BYTE *v632;
  uint64_t v633;
  uint64_t v634;
  _BYTE *v635;
  _BYTE *v636;
  uint64_t v637;
  uint64_t v638;
  _BYTE *v639;
  _BYTE *v640;
  uint64_t v641;
  uint64_t v642;
  uint64_t v643;
  _BYTE *v644;
  _BYTE *v645;
  uint64_t v646;
  uint64_t v647;
  char *v648;
  char *v649;
  uint64_t v650;
  uint64_t v651;
  uint64_t v652;
  uint64_t v653;
  char *v654;
  char *v655;
  uint64_t v656;
  uint64_t v657;
  char *v658;
  char *v659;
  __int128 v660;
  uint64_t v661;
  char *v662;
  char *v663;
  __int128 v664;
  uint64_t v665;
  char *v666;
  char *v667;
  __int128 v668;
  uint64_t v669;
  char *v670;
  char *v671;
  uint64_t v672;
  uint64_t v673;
  uint64_t v674;
  char *v675;
  char *v676;
  uint64_t v677;
  char *v678;
  char *v679;
  __int128 v680;
  uint64_t v681;
  char *v682;
  char *v683;
  __int128 v684;
  uint64_t v685;
  char *v686;
  char *v687;
  __int128 v688;
  uint64_t v689;
  char *v690;
  char *v691;
  uint64_t v692;
  uint64_t v693;
  uint64_t v694;
  char *v695;
  char *v696;
  __int128 v697;
  uint64_t v698;
  uint64_t v699;
  uint64_t v700;
  char *v701;
  char *v702;
  uint64_t v703;
  uint64_t v704;
  uint64_t v705;
  char *v706;
  char *v707;
  uint64_t v708;
  uint64_t v709;
  _QWORD *v710;
  _QWORD *v711;
  uint64_t v712;
  uint64_t v713;
  uint64_t v714;
  char *v715;
  char *v716;
  uint64_t v717;
  uint64_t v718;
  char *v719;
  char *v720;
  int *v721;
  uint64_t v722;
  uint64_t v723;
  uint64_t v724;
  char *v725;
  char *v726;
  int *v727;
  uint64_t v728;
  uint64_t v729;
  uint64_t v730;
  char *v731;
  uint64_t v732;
  uint64_t v733;
  uint64_t v734;
  char *v735;
  uint64_t v736;
  uint64_t v737;
  uint64_t v738;
  char *v739;
  char *v740;
  __int128 v741;
  uint64_t v742;
  char *v743;
  char *v744;
  __int128 v745;
  uint64_t v746;
  char *v747;
  char *v748;
  uint64_t v749;
  uint64_t v750;
  uint64_t v751;
  char *v752;
  char *v753;
  __int128 v754;
  uint64_t v755;
  char *v756;
  char *v757;
  __int128 v758;
  uint64_t v759;
  char *v760;
  char *v761;
  uint64_t v762;
  uint64_t v763;
  uint64_t v764;
  char *v765;
  char *v766;
  __int128 v767;
  uint64_t v768;
  char *v769;
  char *v770;
  __int128 v771;
  uint64_t v772;
  char *v773;
  char *v774;
  uint64_t v775;
  uint64_t v776;
  uint64_t v777;
  char *v778;
  char *v779;
  __int128 v780;
  uint64_t v781;
  char *v782;
  char *v783;
  __int128 v784;
  uint64_t v785;
  char *v786;
  char *v787;
  uint64_t v788;
  uint64_t v789;
  uint64_t v790;
  char *v791;
  char *v792;
  __int128 v793;
  uint64_t v794;
  char *v795;
  char *v796;
  __int128 v797;
  uint64_t v798;
  char *v799;
  char *v800;
  __int128 v801;
  uint64_t v802;
  char *v803;
  char *v804;
  __int128 v805;
  uint64_t v806;
  char *v807;
  char *v808;
  uint64_t v809;
  uint64_t v810;
  uint64_t v811;
  uint64_t v812;
  char *v813;
  char *v814;
  uint64_t v815;
  uint64_t v816;
  uint64_t v817;
  uint64_t v818;
  uint64_t v819;
  uint64_t v820;
  char *v821;
  char *v822;
  uint64_t v823;
  uint64_t v824;
  uint64_t v825;
  uint64_t v826;
  char *v827;
  char *v828;
  uint64_t v829;
  uint64_t v830;
  char *v831;
  char *v832;
  __int128 v833;
  uint64_t v834;
  _BYTE *v835;
  _BYTE *v836;
  uint64_t v837;
  uint64_t v838;
  uint64_t v839;
  _OWORD *v840;
  _OWORD *v841;
  uint64_t v842;
  uint64_t v843;
  int EnumCaseMultiPayload;
  __int128 v845;
  int *v846;
  uint64_t v847;
  char *v848;
  char *v849;
  uint64_t v850;
  uint64_t v851;
  char *v852;
  char *v853;
  uint64_t v854;
  uint64_t v855;
  uint64_t v856;
  char *v857;
  char *v858;
  uint64_t v859;
  char *v860;
  char *v861;
  uint64_t v862;
  char *v863;
  char *v864;
  uint64_t v865;
  char *v866;
  char *v867;
  __int128 v868;
  uint64_t v869;
  _BYTE *v870;
  _BYTE *v871;
  uint64_t v872;
  uint64_t v873;
  uint64_t v874;
  uint64_t v875;
  char *v876;
  uint64_t v877;
  uint64_t v878;
  _BYTE *v879;
  uint64_t v880;
  uint64_t v881;
  uint64_t v882;
  _BYTE *v883;
  _BYTE *v884;
  uint64_t v885;
  uint64_t v886;
  _OWORD *v887;
  _OWORD *v888;
  uint64_t v889;
  uint64_t v890;
  int v891;
  __int128 v892;
  int *v893;
  uint64_t v894;
  uint64_t v895;
  uint64_t v896;
  char *v897;
  char *v898;
  uint64_t v899;
  uint64_t v900;
  char *v901;
  char *v902;
  uint64_t v903;
  char *v904;
  char *v905;
  uint64_t v906;
  char *v907;
  char *v908;
  uint64_t v909;
  char *v910;
  char *v911;
  __int128 v912;
  uint64_t v913;
  _BYTE *v914;
  _BYTE *v915;
  uint64_t v916;
  uint64_t v917;
  uint64_t v918;
  uint64_t v919;
  char *v920;
  uint64_t v921;
  uint64_t v922;
  _BYTE *v923;
  uint64_t v924;
  uint64_t v925;
  uint64_t v926;
  _QWORD *v927;
  uint64_t *v928;
  uint64_t v929;
  uint64_t v930;
  char *v932;
  int *v933;
  _BYTE *v934;
  char *__dst;
  void *__dsta;
  void *__dstb;
  char *__dstc;
  char *__dste;
  void *__dstd;
  int *v941;
  uint64_t v942;
  int *v943;
  int *v944;
  char *v945;
  uint64_t v946;
  void *v947;
  _QWORD *v948;
  char *v949;
  int *v950;
  _BYTE *v951;

  if (a1 != a2)
  {
    sub_21CF2A498((uint64_t)a1);
    v6 = type metadata accessor for SectionContent();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
        {
          v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
        }
        v126 = (int *)type metadata accessor for AlbumDetailHeaderLockup();
        v127 = v126[5];
        v128 = (char *)a1 + v127;
        v129 = (char *)a2 + v127;
        v130 = *((_OWORD *)v129 + 1);
        *(_OWORD *)v128 = *(_OWORD *)v129;
        *((_OWORD *)v128 + 1) = v130;
        *((_QWORD *)v128 + 4) = *((_QWORD *)v129 + 4);
        *(_OWORD *)((char *)a1 + v126[6]) = *(_OWORD *)((char *)a2 + v126[6]);
        *(_QWORD *)((char *)a1 + v126[7]) = *(_QWORD *)((char *)a2 + v126[7]);
        *(_OWORD *)((char *)a1 + v126[8]) = *(_OWORD *)((char *)a2 + v126[8]);
        v131 = v126[9];
        v132 = (_OWORD *)((char *)a1 + v131);
        v133 = (_OWORD *)((char *)a2 + v131);
        v134 = type metadata accessor for ModalPresentationDescriptor();
        v947 = (void *)v7;
        if (__swift_getEnumTagSinglePayload((uint64_t)v133, 1, v134))
        {
          v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553303E8);
          memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
        }
        else
        {
          v379 = v133[1];
          *v132 = *v133;
          v132[1] = v379;
          v132[2] = v133[2];
          *((_BYTE *)v132 + 48) = *((_BYTE *)v133 + 48);
          *((_QWORD *)v132 + 7) = *((_QWORD *)v133 + 7);
          *((_BYTE *)v132 + 64) = *((_BYTE *)v133 + 64);
          v380 = *(int *)(v134 + 40);
          v381 = (char *)v132 + v380;
          v382 = (char *)v133 + v380;
          v383 = sub_21D7C4314();
          v384 = v382;
          v7 = (uint64_t)v947;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v383 - 8) + 32))(v381, v384, v383);
          __swift_storeEnumTagSinglePayload((uint64_t)v132, 0, 1, v134);
        }
        *((_BYTE *)a1 + v126[10]) = *((_BYTE *)a2 + v126[10]);
        *(_QWORD *)((char *)a1 + v126[11]) = *(_QWORD *)((char *)a2 + v126[11]);
        *(_OWORD *)((char *)a1 + v126[12]) = *(_OWORD *)((char *)a2 + v126[12]);
        v385 = v126[13];
        v386 = (char *)a1 + v385;
        v387 = (char *)a2 + v385;
        v388 = type metadata accessor for Artwork();
        if (__swift_getEnumTagSinglePayload((uint64_t)v387, 1, v388))
        {
          v389 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
          memcpy(v386, v387, *(_QWORD *)(*(_QWORD *)(v389 - 8) + 64));
        }
        else
        {
          v480 = sub_21D7C3840();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v480 - 8) + 32))(v386, v387, v480);
          v481 = *(int *)(v388 + 20);
          v482 = &v386[v481];
          v483 = &v387[v481];
          v484 = sub_21D7C3804();
          v485 = v483;
          v7 = (uint64_t)v947;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v484 - 8) + 32))(v482, v485, v484);
          __swift_storeEnumTagSinglePayload((uint64_t)v386, 0, 1, v388);
        }
        v486 = v126[14];
        v487 = (_QWORD *)((char *)a1 + v486);
        v488 = (_QWORD *)((char *)a2 + v486);
        v489 = type metadata accessor for VideoArtwork();
        if (__swift_getEnumTagSinglePayload((uint64_t)v488, 1, v489))
        {
          v490 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5F718);
          memcpy(v487, v488, *(_QWORD *)(*(_QWORD *)(v490 - 8) + 64));
        }
        else
        {
          *v487 = *v488;
          v544 = *(int *)(v489 + 20);
          v545 = (char *)v487 + v544;
          v546 = (char *)v488 + v544;
          v547 = sub_21D7C3804();
          v548 = v546;
          v7 = (uint64_t)v947;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v547 - 8) + 32))(v545, v548, v547);
          __swift_storeEnumTagSinglePayload((uint64_t)v487, 0, 1, v489);
        }
        v549 = v126[15];
        v550 = (char *)a1 + v549;
        v551 = (char *)a2 + v549;
        v552 = type metadata accessor for ContentDescriptor();
        if (__swift_getEnumTagSinglePayload((uint64_t)v551, 1, v552))
        {
          v553 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
          memcpy(v550, v551, *(_QWORD *)(*(_QWORD *)(v553 - 8) + 64));
        }
        else
        {
          *v550 = *v551;
          memcpy(v550 + 8, v551 + 8, 0x69uLL);
          v590 = *(int *)(v552 + 24);
          v591 = &v550[v590];
          v592 = &v551[v590];
          v593 = sub_21D7BF754();
          if (__swift_getEnumTagSinglePayload((uint64_t)v592, 1, v593))
          {
            v594 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
            memcpy(v591, v592, *(_QWORD *)(*(_QWORD *)(v594 - 8) + 64));
          }
          else
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v593 - 8) + 32))(v591, v592, v593);
            __swift_storeEnumTagSinglePayload((uint64_t)v591, 0, 1, v593);
          }
          v7 = (uint64_t)v947;
          __swift_storeEnumTagSinglePayload((uint64_t)v550, 0, 1, v552);
        }
        v718 = v126[16];
        v719 = (char *)a1 + v718;
        v720 = (char *)a2 + v718;
        v721 = (int *)type metadata accessor for LinkComponentModel();
        if (__swift_getEnumTagSinglePayload((uint64_t)v720, 1, (uint64_t)v721))
        {
          v722 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330520);
          memcpy(v719, v720, *(_QWORD *)(*(_QWORD *)(v722 - 8) + 64));
        }
        else
        {
          if (__swift_getEnumTagSinglePayload((uint64_t)v720, 1, v7))
          {
            v723 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
            memcpy(v719, v720, *(_QWORD *)(*(_QWORD *)(v723 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v719, v720, v7);
            __swift_storeEnumTagSinglePayload((uint64_t)v719, 0, 1, v7);
          }
          v738 = v721[5];
          v739 = &v719[v738];
          v740 = &v720[v738];
          v741 = *((_OWORD *)v740 + 1);
          *(_OWORD *)v739 = *(_OWORD *)v740;
          *((_OWORD *)v739 + 1) = v741;
          *((_QWORD *)v739 + 4) = *((_QWORD *)v740 + 4);
          v742 = v721[6];
          v743 = &v719[v742];
          v744 = &v720[v742];
          *((_QWORD *)v743 + 4) = *((_QWORD *)v744 + 4);
          v745 = *((_OWORD *)v744 + 1);
          *(_OWORD *)v743 = *(_OWORD *)v744;
          *((_OWORD *)v743 + 1) = v745;
          *(_OWORD *)&v719[v721[7]] = *(_OWORD *)&v720[v721[7]];
          __swift_storeEnumTagSinglePayload((uint64_t)v719, 0, 1, (uint64_t)v721);
        }
        v746 = v126[17];
        v747 = (char *)a1 + v746;
        v748 = (char *)a2 + v746;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v746, 1, (uint64_t)v721))
        {
          v749 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330520);
          memcpy(v747, v748, *(_QWORD *)(*(_QWORD *)(v749 - 8) + 64));
        }
        else
        {
          if (__swift_getEnumTagSinglePayload((uint64_t)v748, 1, v7))
          {
            v750 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
            memcpy(v747, v748, *(_QWORD *)(*(_QWORD *)(v750 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v747, v748, v7);
            __swift_storeEnumTagSinglePayload((uint64_t)v747, 0, 1, v7);
          }
          v764 = v721[5];
          v765 = &v747[v764];
          v766 = &v748[v764];
          v767 = *((_OWORD *)v766 + 1);
          *(_OWORD *)v765 = *(_OWORD *)v766;
          *((_OWORD *)v765 + 1) = v767;
          *((_QWORD *)v765 + 4) = *((_QWORD *)v766 + 4);
          v768 = v721[6];
          v769 = &v747[v768];
          v770 = &v748[v768];
          *((_QWORD *)v769 + 4) = *((_QWORD *)v770 + 4);
          v771 = *((_OWORD *)v770 + 1);
          *(_OWORD *)v769 = *(_OWORD *)v770;
          *((_OWORD *)v769 + 1) = v771;
          *(_OWORD *)&v747[v721[7]] = *(_OWORD *)&v748[v721[7]];
          __swift_storeEnumTagSinglePayload((uint64_t)v747, 0, 1, (uint64_t)v721);
        }
        v772 = v126[18];
        v773 = (char *)a1 + v772;
        v774 = (char *)a2 + v772;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v772, 1, (uint64_t)v721))
        {
          v775 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330520);
          memcpy(v773, v774, *(_QWORD *)(*(_QWORD *)(v775 - 8) + 64));
        }
        else
        {
          if (__swift_getEnumTagSinglePayload((uint64_t)v774, 1, v7))
          {
            v776 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
            memcpy(v773, v774, *(_QWORD *)(*(_QWORD *)(v776 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v773, v774, v7);
            __swift_storeEnumTagSinglePayload((uint64_t)v773, 0, 1, v7);
          }
          v790 = v721[5];
          v791 = &v773[v790];
          v792 = &v774[v790];
          v793 = *((_OWORD *)v792 + 1);
          *(_OWORD *)v791 = *(_OWORD *)v792;
          *((_OWORD *)v791 + 1) = v793;
          *((_QWORD *)v791 + 4) = *((_QWORD *)v792 + 4);
          v794 = v721[6];
          v795 = &v773[v794];
          v796 = &v774[v794];
          *((_QWORD *)v795 + 4) = *((_QWORD *)v796 + 4);
          v797 = *((_OWORD *)v796 + 1);
          *(_OWORD *)v795 = *(_OWORD *)v796;
          *((_OWORD *)v795 + 1) = v797;
          *(_OWORD *)&v773[v721[7]] = *(_OWORD *)&v774[v721[7]];
          __swift_storeEnumTagSinglePayload((uint64_t)v773, 0, 1, (uint64_t)v721);
        }
        *(_QWORD *)((char *)a1 + v126[19]) = *(_QWORD *)((char *)a2 + v126[19]);
        goto LABEL_397;
      case 1u:
        *a1 = *a2;
        v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255331BB0) + 48);
        v10 = (char *)a1 + v9;
        v11 = (char *)a2 + v9;
        *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
        memcpy((char *)a1 + v9 + 8, (char *)a2 + v9 + 8, 0x69uLL);
        v12 = *(int *)(type metadata accessor for ContentDescriptor() + 24);
        v13 = &v10[v12];
        v14 = &v11[v12];
        v15 = sub_21D7BF754();
        if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
          goto LABEL_6;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
        __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
        goto LABEL_397;
      case 3u:
        v17 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v17))
        {
          v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a1, a2, v17);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v17);
        }
        v136 = (int *)type metadata accessor for ArtistDetailHeaderLockup();
        v137 = v136[5];
        v138 = (char *)a1 + v137;
        v139 = (char *)a2 + v137;
        v140 = *((_OWORD *)v139 + 1);
        *(_OWORD *)v138 = *(_OWORD *)v139;
        *((_OWORD *)v138 + 1) = v140;
        *((_QWORD *)v138 + 4) = *((_QWORD *)v139 + 4);
        *(_OWORD *)((char *)a1 + v136[6]) = *(_OWORD *)((char *)a2 + v136[6]);
        v141 = v136[7];
        v142 = (char *)a1 + v141;
        v143 = (char *)a2 + v141;
        v144 = type metadata accessor for Artwork();
        if (__swift_getEnumTagSinglePayload((uint64_t)v143, 1, v144))
        {
          v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
          memcpy(v142, v143, *(_QWORD *)(*(_QWORD *)(v145 - 8) + 64));
        }
        else
        {
          v390 = sub_21D7C3840();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v390 - 8) + 32))(v142, v143, v390);
          v391 = *(int *)(v144 + 20);
          v392 = &v142[v391];
          v393 = &v143[v391];
          v394 = sub_21D7C3804();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v394 - 8) + 32))(v392, v393, v394);
          __swift_storeEnumTagSinglePayload((uint64_t)v142, 0, 1, v144);
        }
        *((_BYTE *)a1 + v136[8]) = *((_BYTE *)a2 + v136[8]);
        v395 = v136[9];
        v396 = (char *)a1 + v395;
        v397 = (char *)a2 + v395;
        v398 = sub_21D7BF964();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v398 - 8) + 32))(v396, v397, v398);
        v399 = v136[10];
        v400 = (char *)a1 + v399;
        v401 = (char *)a2 + v399;
        v402 = *((_OWORD *)v401 + 1);
        *(_OWORD *)v400 = *(_OWORD *)v401;
        *((_OWORD *)v400 + 1) = v402;
        *((_QWORD *)v400 + 4) = *((_QWORD *)v401 + 4);
        v403 = v136[11];
        v404 = (char *)a1 + v403;
        v405 = (char *)a2 + v403;
        v406 = type metadata accessor for ContentDescriptor();
        if (__swift_getEnumTagSinglePayload((uint64_t)v405, 1, v406))
        {
          v407 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
          memcpy(v404, v405, *(_QWORD *)(*(_QWORD *)(v407 - 8) + 64));
        }
        else
        {
          *v404 = *v405;
          memcpy(v404 + 8, v405 + 8, 0x69uLL);
          v491 = *(int *)(v406 + 24);
          v492 = &v404[v491];
          v493 = &v405[v491];
          v494 = sub_21D7BF754();
          if (__swift_getEnumTagSinglePayload((uint64_t)v493, 1, v494))
          {
            v495 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
            memcpy(v492, v493, *(_QWORD *)(*(_QWORD *)(v495 - 8) + 64));
          }
          else
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v494 - 8) + 32))(v492, v493, v494);
            __swift_storeEnumTagSinglePayload((uint64_t)v492, 0, 1, v494);
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v404, 0, 1, v406);
        }
        v700 = v136[12];
        v701 = (char *)a1 + v700;
        v702 = (char *)a2 + v700;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v700, 1, v144))
        {
          v703 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
          memcpy(v701, v702, *(_QWORD *)(*(_QWORD *)(v703 - 8) + 64));
        }
        else
        {
          v704 = sub_21D7C3840();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v704 - 8) + 32))(v701, v702, v704);
          v705 = *(int *)(v144 + 20);
          v706 = &v701[v705];
          v707 = &v702[v705];
          v708 = sub_21D7C3804();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v708 - 8) + 32))(v706, v707, v708);
          __swift_storeEnumTagSinglePayload((uint64_t)v701, 0, 1, v144);
        }
        v709 = v136[13];
        v710 = (_QWORD *)((char *)a1 + v709);
        v711 = (_QWORD *)((char *)a2 + v709);
        v712 = type metadata accessor for VideoArtwork();
        if (__swift_getEnumTagSinglePayload((uint64_t)v711, 1, v712))
        {
          v713 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5F718);
          memcpy(v710, v711, *(_QWORD *)(*(_QWORD *)(v713 - 8) + 64));
        }
        else
        {
          *v710 = *v711;
          v714 = *(int *)(v712 + 20);
          v715 = (char *)v710 + v714;
          v716 = (char *)v711 + v714;
          v717 = sub_21D7C3804();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v717 - 8) + 32))(v715, v716, v717);
          __swift_storeEnumTagSinglePayload((uint64_t)v710, 0, 1, v712);
        }
        goto LABEL_397;
      case 4u:
        v19 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v19))
        {
          v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v19);
        }
        v146 = (int *)type metadata accessor for ArtistLatestReleaseLockup();
        v147 = v146[5];
        v148 = (char *)a1 + v147;
        v149 = (char *)a2 + v147;
        v150 = *((_OWORD *)v149 + 1);
        *(_OWORD *)v148 = *(_OWORD *)v149;
        *((_OWORD *)v148 + 1) = v150;
        *((_QWORD *)v148 + 4) = *((_QWORD *)v149 + 4);
        *(_OWORD *)((char *)a1 + v146[6]) = *(_OWORD *)((char *)a2 + v146[6]);
        *(_OWORD *)((char *)a1 + v146[7]) = *(_OWORD *)((char *)a2 + v146[7]);
        *(_OWORD *)((char *)a1 + v146[8]) = *(_OWORD *)((char *)a2 + v146[8]);
        *((_BYTE *)a1 + v146[9]) = *((_BYTE *)a2 + v146[9]);
        v151 = v146[10];
        v152 = (char *)a1 + v151;
        v153 = (char *)a2 + v151;
        v154 = *((_OWORD *)v153 + 1);
        *(_OWORD *)v152 = *(_OWORD *)v153;
        *((_OWORD *)v152 + 1) = v154;
        *((_QWORD *)v152 + 4) = *((_QWORD *)v153 + 4);
        *((_BYTE *)a1 + v146[11]) = *((_BYTE *)a2 + v146[11]);
        v155 = v146[12];
        v156 = (char *)a1 + v155;
        v157 = (char *)a2 + v155;
        v158 = type metadata accessor for ContentDescriptor();
        if (__swift_getEnumTagSinglePayload((uint64_t)v157, 1, v158))
        {
          v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
          memcpy(v156, v157, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
        }
        else
        {
          *v156 = *v157;
          memcpy(v156 + 8, v157 + 8, 0x69uLL);
          v408 = *(int *)(v158 + 24);
          v409 = &v156[v408];
          v410 = &v157[v408];
          v411 = sub_21D7BF754();
          if (__swift_getEnumTagSinglePayload((uint64_t)v410, 1, v411))
          {
            v412 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
            memcpy(v409, v410, *(_QWORD *)(*(_QWORD *)(v412 - 8) + 64));
          }
          else
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v411 - 8) + 32))(v409, v410, v411);
            __swift_storeEnumTagSinglePayload((uint64_t)v409, 0, 1, v411);
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v156, 0, 1, v158);
        }
        v647 = v146[13];
        v648 = (char *)a1 + v647;
        v649 = (char *)a2 + v647;
        v650 = type metadata accessor for Artwork();
        if (__swift_getEnumTagSinglePayload((uint64_t)v649, 1, v650))
        {
          v651 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
          memcpy(v648, v649, *(_QWORD *)(*(_QWORD *)(v651 - 8) + 64));
        }
        else
        {
          v652 = sub_21D7C3840();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v652 - 8) + 32))(v648, v649, v652);
          v653 = *(int *)(v650 + 20);
          v654 = &v648[v653];
          v655 = &v649[v653];
          v656 = sub_21D7C3804();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v656 - 8) + 32))(v654, v655, v656);
          __swift_storeEnumTagSinglePayload((uint64_t)v648, 0, 1, v650);
        }
        v657 = v146[14];
        v658 = (char *)a1 + v657;
        v659 = (char *)a2 + v657;
        v660 = *((_OWORD *)v659 + 1);
        *(_OWORD *)v658 = *(_OWORD *)v659;
        *((_OWORD *)v658 + 1) = v660;
        *((_QWORD *)v658 + 4) = *((_QWORD *)v659 + 4);
        *(_OWORD *)((char *)a1 + v146[15]) = *(_OWORD *)((char *)a2 + v146[15]);
        goto LABEL_397;
      case 5u:
        v21 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v21))
        {
          v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a1, a2, v21);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v21);
        }
        v160 = (int *)type metadata accessor for ArtistLatestReleaseAndTopSongsLockup();
        v161 = v160[5];
        v162 = (char *)a1 + v161;
        v163 = (char *)a2 + v161;
        v164 = *((_OWORD *)v163 + 1);
        *(_OWORD *)v162 = *(_OWORD *)v163;
        *((_OWORD *)v162 + 1) = v164;
        *((_QWORD *)v162 + 4) = *((_QWORD *)v163 + 4);
        v165 = v160[6];
        v166 = (char *)a1 + v165;
        v167 = (char *)a2 + v165;
        v168 = (int *)type metadata accessor for ArtistLatestReleaseLockup();
        v948 = (_QWORD *)v21;
        if (__swift_getEnumTagSinglePayload((uint64_t)v167, 1, (uint64_t)v168))
        {
          v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F627D8);
          memcpy(v166, v167, *(_QWORD *)(*(_QWORD *)(v169 - 8) + 64));
        }
        else
        {
          v941 = v160;
          if (__swift_getEnumTagSinglePayload((uint64_t)v167, 1, v21))
          {
            v413 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
            memcpy(v166, v167, *(_QWORD *)(*(_QWORD *)(v413 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v166, v167, v21);
            __swift_storeEnumTagSinglePayload((uint64_t)v166, 0, 1, v21);
          }
          v661 = v168[5];
          v662 = &v166[v661];
          v663 = &v167[v661];
          v664 = *((_OWORD *)v663 + 1);
          *(_OWORD *)v662 = *(_OWORD *)v663;
          *((_OWORD *)v662 + 1) = v664;
          *((_QWORD *)v662 + 4) = *((_QWORD *)v663 + 4);
          *(_OWORD *)&v166[v168[6]] = *(_OWORD *)&v167[v168[6]];
          *(_OWORD *)&v166[v168[7]] = *(_OWORD *)&v167[v168[7]];
          *(_OWORD *)&v166[v168[8]] = *(_OWORD *)&v167[v168[8]];
          v166[v168[9]] = v167[v168[9]];
          v665 = v168[10];
          v666 = &v166[v665];
          v667 = &v167[v665];
          v668 = *((_OWORD *)v667 + 1);
          *(_OWORD *)v666 = *(_OWORD *)v667;
          *((_OWORD *)v666 + 1) = v668;
          *((_QWORD *)v666 + 4) = *((_QWORD *)v667 + 4);
          v166[v168[11]] = v167[v168[11]];
          v669 = v168[12];
          v670 = &v166[v669];
          v671 = &v167[v669];
          v672 = type metadata accessor for ContentDescriptor();
          if (__swift_getEnumTagSinglePayload((uint64_t)v671, 1, v672))
          {
            v673 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
            memcpy(v670, v671, *(_QWORD *)(*(_QWORD *)(v673 - 8) + 64));
          }
          else
          {
            *v670 = *v671;
            memcpy(v670 + 8, v671 + 8, 0x69uLL);
            v730 = *(int *)(v672 + 24);
            __dst = &v670[v730];
            v731 = &v671[v730];
            v732 = sub_21D7BF754();
            if (__swift_getEnumTagSinglePayload((uint64_t)v731, 1, v732))
            {
              v733 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
              memcpy(__dst, v731, *(_QWORD *)(*(_QWORD *)(v733 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v732 - 8) + 32))(__dst, v731, v732);
              __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v732);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v670, 0, 1, v672);
          }
          v820 = v168[13];
          v821 = &v166[v820];
          v822 = &v167[v820];
          v823 = type metadata accessor for Artwork();
          if (__swift_getEnumTagSinglePayload((uint64_t)v822, 1, v823))
          {
            v824 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
            memcpy(v821, v822, *(_QWORD *)(*(_QWORD *)(v824 - 8) + 64));
          }
          else
          {
            v825 = sub_21D7C3840();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v825 - 8) + 32))(v821, v822, v825);
            v826 = *(int *)(v823 + 20);
            v827 = &v821[v826];
            v828 = &v822[v826];
            v829 = sub_21D7C3804();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v829 - 8) + 32))(v827, v828, v829);
            __swift_storeEnumTagSinglePayload((uint64_t)v821, 0, 1, v823);
          }
          v830 = v168[14];
          v831 = &v166[v830];
          v832 = &v167[v830];
          v833 = *((_OWORD *)v832 + 1);
          *(_OWORD *)v831 = *(_OWORD *)v832;
          *((_OWORD *)v831 + 1) = v833;
          *((_QWORD *)v831 + 4) = *((_QWORD *)v832 + 4);
          *(_OWORD *)&v166[v168[15]] = *(_OWORD *)&v167[v168[15]];
          __swift_storeEnumTagSinglePayload((uint64_t)v166, 0, 1, (uint64_t)v168);
          v160 = v941;
        }
        v834 = v160[7];
        v835 = (char *)a1 + v834;
        v836 = (char *)a2 + v834;
        v837 = _s7SectionV6HeaderVMa(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v836, 1, v837))
        {
          v838 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65088);
          memcpy(v835, v836, *(_QWORD *)(*(_QWORD *)(v838 - 8) + 64));
        }
        else
        {
          *v835 = *v836;
          v839 = *(int *)(v837 + 20);
          v840 = &v835[v839];
          v841 = &v836[v839];
          v842 = _s7SectionV6HeaderV12HeaderLockupOMa(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v841, 1, v842))
          {
            v843 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65058);
            memcpy(v840, v841, *(_QWORD *)(*(_QWORD *)(v843 - 8) + 64));
          }
          else
          {
            EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 2)
            {
              __dstb = (void *)v842;
              v944 = v160;
              memcpy(v840, v841, 0x48uLL);
              memcpy((char *)v840 + 72, (char *)v841 + 72, 0x58uLL);
              v933 = (int *)type metadata accessor for DefaultSectionHeader();
              v851 = v933[8];
              v852 = (char *)v840 + v851;
              v853 = (char *)v841 + v851;
              v854 = type metadata accessor for Artwork();
              if (__swift_getEnumTagSinglePayload((uint64_t)v853, 1, v854))
              {
                v855 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
                memcpy(v852, v853, *(_QWORD *)(*(_QWORD *)(v855 - 8) + 64));
              }
              else
              {
                v874 = sub_21D7C3840();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v874 - 8) + 32))(v852, v853, v874);
                v875 = *(int *)(v854 + 20);
                v932 = &v852[v875];
                v876 = &v853[v875];
                v877 = sub_21D7C3804();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v877 - 8) + 32))(v932, v876, v877);
                __swift_storeEnumTagSinglePayload((uint64_t)v852, 0, 1, v854);
              }
              v842 = (uint64_t)__dstb;
              *((_BYTE *)v840 + v933[9]) = *((_BYTE *)v841 + v933[9]);
              swift_storeEnumTagMultiPayload();
              v160 = v944;
            }
            else if (EnumCaseMultiPayload == 1)
            {
              __dsta = (void *)v842;
              v943 = v160;
              v845 = v841[1];
              *v840 = *v841;
              v840[1] = v845;
              *((_QWORD *)v840 + 4) = *((_QWORD *)v841 + 4);
              v846 = (int *)type metadata accessor for ComposerSectionHeader();
              v847 = v846[5];
              v848 = (char *)v840 + v847;
              v849 = (char *)v841 + v847;
              if (__swift_getEnumTagSinglePayload((uint64_t)v841 + v847, 1, (uint64_t)v948))
              {
                v850 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
                memcpy(v848, v849, *(_QWORD *)(*(_QWORD *)(v850 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, _QWORD *))(*(v948 - 1) + 32))(v848, v849, v948);
                __swift_storeEnumTagSinglePayload((uint64_t)v848, 0, 1, (uint64_t)v948);
              }
              *(_OWORD *)((char *)v840 + v846[6]) = *(_OWORD *)((char *)v841 + v846[6]);
              v856 = v846[7];
              v857 = (char *)v840 + v856;
              v858 = (char *)v841 + v856;
              v857[8] = v858[8];
              *(_QWORD *)v857 = *(_QWORD *)v858;
              v859 = v846[8];
              v860 = (char *)v840 + v859;
              v861 = (char *)v841 + v859;
              *(_QWORD *)v860 = *(_QWORD *)v861;
              v860[8] = v861[8];
              v862 = v846[9];
              v863 = (char *)v840 + v862;
              v864 = (char *)v841 + v862;
              *(_QWORD *)v863 = *(_QWORD *)v864;
              v863[8] = v864[8];
              *(_OWORD *)((char *)v840 + v846[10]) = *(_OWORD *)((char *)v841 + v846[10]);
              v865 = v846[11];
              v866 = (char *)v840 + v865;
              v867 = (char *)v841 + v865;
              v868 = *((_OWORD *)v867 + 1);
              *(_OWORD *)v866 = *(_OWORD *)v867;
              *((_OWORD *)v866 + 1) = v868;
              *((_QWORD *)v866 + 4) = *((_QWORD *)v867 + 4);
              v869 = v846[12];
              v870 = (char *)v840 + v869;
              v871 = (char *)v841 + v869;
              v872 = type metadata accessor for ContentDescriptor();
              if (__swift_getEnumTagSinglePayload((uint64_t)v871, 1, v872))
              {
                v873 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
                memcpy(v870, v871, *(_QWORD *)(*(_QWORD *)(v873 - 8) + 64));
              }
              else
              {
                *v870 = *v871;
                memcpy(v870 + 8, v871 + 8, 0x69uLL);
                v878 = *(int *)(v872 + 24);
                v934 = &v870[v878];
                v879 = &v871[v878];
                v880 = sub_21D7BF754();
                if (__swift_getEnumTagSinglePayload((uint64_t)v879, 1, v880))
                {
                  v881 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
                  memcpy(v934, v879, *(_QWORD *)(*(_QWORD *)(v881 - 8) + 64));
                }
                else
                {
                  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v880 - 8) + 32))(v934, v879, v880);
                  __swift_storeEnumTagSinglePayload((uint64_t)v934, 0, 1, v880);
                }
                __swift_storeEnumTagSinglePayload((uint64_t)v870, 0, 1, v872);
              }
              v842 = (uint64_t)__dsta;
              v160 = v943;
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v840, v841, *(_QWORD *)(*(_QWORD *)(v842 - 8) + 64));
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v840, 0, 1, v842);
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v835, 0, 1, v837);
        }
        *(_QWORD *)((char *)a1 + v160[8]) = *(_QWORD *)((char *)a2 + v160[8]);
        v882 = v160[9];
        v883 = (char *)a1 + v882;
        v884 = (char *)a2 + v882;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v882, 1, v837))
        {
          v885 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65088);
          memcpy(v883, v884, *(_QWORD *)(*(_QWORD *)(v885 - 8) + 64));
          goto LABEL_397;
        }
        *v883 = *v884;
        v886 = *(int *)(v837 + 20);
        v887 = &v883[v886];
        v888 = &v884[v886];
        v889 = _s7SectionV6HeaderV12HeaderLockupOMa(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v888, 1, v889))
        {
          v890 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65058);
          memcpy(v887, v888, *(_QWORD *)(*(_QWORD *)(v890 - 8) + 64));
          goto LABEL_396;
        }
        v891 = swift_getEnumCaseMultiPayload();
        if (v891 == 2)
        {
          memcpy(v887, v888, 0x48uLL);
          memcpy((char *)v887 + 72, (char *)v888 + 72, 0x58uLL);
          v950 = (int *)type metadata accessor for DefaultSectionHeader();
          v896 = v950[8];
          v897 = (char *)v887 + v896;
          v898 = (char *)v888 + v896;
          v946 = type metadata accessor for Artwork();
          if (__swift_getEnumTagSinglePayload((uint64_t)v898, 1, v946))
          {
            v899 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
            memcpy(v897, v898, *(_QWORD *)(*(_QWORD *)(v899 - 8) + 64));
          }
          else
          {
            v918 = sub_21D7C3840();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v918 - 8) + 32))(v897, v898, v918);
            v919 = *(int *)(v946 + 20);
            __dste = &v897[v919];
            v920 = &v898[v919];
            v921 = sub_21D7C3804();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v921 - 8) + 32))(__dste, v920, v921);
            __swift_storeEnumTagSinglePayload((uint64_t)v897, 0, 1, v946);
          }
          *((_BYTE *)v887 + v950[9]) = *((_BYTE *)v888 + v950[9]);
        }
        else
        {
          if (v891 != 1)
          {
            memcpy(v887, v888, *(_QWORD *)(*(_QWORD *)(v889 - 8) + 64));
            goto LABEL_395;
          }
          v892 = v888[1];
          *v887 = *v888;
          v887[1] = v892;
          *((_QWORD *)v887 + 4) = *((_QWORD *)v888 + 4);
          v893 = (int *)type metadata accessor for ComposerSectionHeader();
          v894 = v893[5];
          __dstc = (char *)v888 + v894;
          v945 = (char *)v887 + v894;
          if (__swift_getEnumTagSinglePayload((uint64_t)v888 + v894, 1, (uint64_t)v948))
          {
            v895 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
            memcpy(v945, __dstc, *(_QWORD *)(*(_QWORD *)(v895 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, _QWORD *))(*(v948 - 1) + 32))(v945, __dstc, v948);
            __swift_storeEnumTagSinglePayload((uint64_t)v945, 0, 1, (uint64_t)v948);
          }
          *(_OWORD *)((char *)v887 + v893[6]) = *(_OWORD *)((char *)v888 + v893[6]);
          v900 = v893[7];
          v901 = (char *)v887 + v900;
          v902 = (char *)v888 + v900;
          v901[8] = v902[8];
          *(_QWORD *)v901 = *(_QWORD *)v902;
          v903 = v893[8];
          v904 = (char *)v887 + v903;
          v905 = (char *)v888 + v903;
          *(_QWORD *)v904 = *(_QWORD *)v905;
          v904[8] = v905[8];
          v906 = v893[9];
          v907 = (char *)v887 + v906;
          v908 = (char *)v888 + v906;
          *(_QWORD *)v907 = *(_QWORD *)v908;
          v907[8] = v908[8];
          *(_OWORD *)((char *)v887 + v893[10]) = *(_OWORD *)((char *)v888 + v893[10]);
          v909 = v893[11];
          v910 = (char *)v887 + v909;
          v911 = (char *)v888 + v909;
          v912 = *((_OWORD *)v911 + 1);
          *(_OWORD *)v910 = *(_OWORD *)v911;
          *((_OWORD *)v910 + 1) = v912;
          *((_QWORD *)v910 + 4) = *((_QWORD *)v911 + 4);
          v913 = v893[12];
          v914 = (char *)v887 + v913;
          v915 = (char *)v888 + v913;
          v916 = type metadata accessor for ContentDescriptor();
          if (__swift_getEnumTagSinglePayload((uint64_t)v915, 1, v916))
          {
            v917 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
            memcpy(v914, v915, *(_QWORD *)(*(_QWORD *)(v917 - 8) + 64));
          }
          else
          {
            *v914 = *v915;
            memcpy(v914 + 8, v915 + 8, 0x69uLL);
            v922 = *(int *)(v916 + 24);
            __dstd = v914;
            v951 = &v914[v922];
            v923 = &v915[v922];
            v924 = sub_21D7BF754();
            if (__swift_getEnumTagSinglePayload((uint64_t)v923, 1, v924))
            {
              v925 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
              memcpy(v951, v923, *(_QWORD *)(*(_QWORD *)(v925 - 8) + 64));
            }
            else
            {
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v924 - 8) + 32))(v951, v923, v924);
              __swift_storeEnumTagSinglePayload((uint64_t)v951, 0, 1, v924);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)__dstd, 0, 1, v916);
          }
        }
        swift_storeEnumTagMultiPayload();
LABEL_395:
        __swift_storeEnumTagSinglePayload((uint64_t)v887, 0, 1, v889);
LABEL_396:
        __swift_storeEnumTagSinglePayload((uint64_t)v883, 0, 1, v837);
LABEL_397:
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
        v23 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v23))
        {
          v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a1, a2, v23);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v23);
        }
        v170 = (int *)type metadata accessor for ContainerDetailTracklistFooterLockup();
        v171 = v170[5];
        v172 = (char *)a1 + v171;
        v173 = (char *)a2 + v171;
        v174 = *((_OWORD *)v173 + 1);
        *(_OWORD *)v172 = *(_OWORD *)v173;
        *((_OWORD *)v172 + 1) = v174;
        *((_QWORD *)v172 + 4) = *((_QWORD *)v173 + 4);
        v175 = v170[6];
        v176 = (char *)a1 + v175;
        v177 = (char *)a2 + v175;
        v178 = type metadata accessor for ContentDescriptor();
        if (__swift_getEnumTagSinglePayload((uint64_t)v177, 1, v178))
        {
          v179 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
          memcpy(v176, v177, *(_QWORD *)(*(_QWORD *)(v179 - 8) + 64));
        }
        else
        {
          *v176 = *v177;
          memcpy(v176 + 8, v177 + 8, 0x69uLL);
          v414 = *(int *)(v178 + 24);
          v415 = &v176[v414];
          v416 = &v177[v414];
          v417 = sub_21D7BF754();
          if (__swift_getEnumTagSinglePayload((uint64_t)v416, 1, v417))
          {
            v418 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
            memcpy(v415, v416, *(_QWORD *)(*(_QWORD *)(v418 - 8) + 64));
          }
          else
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v417 - 8) + 32))(v415, v416, v417);
            __swift_storeEnumTagSinglePayload((uint64_t)v415, 0, 1, v417);
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v176, 0, 1, v178);
        }
        *(_QWORD *)((char *)a1 + v170[7]) = *(_QWORD *)((char *)a2 + v170[7]);
        *(_OWORD *)((char *)a1 + v170[8]) = *(_OWORD *)((char *)a2 + v170[8]);
        v674 = v170[9];
        v675 = (char *)a1 + v674;
        v676 = (char *)a2 + v674;
        *(_OWORD *)v675 = *(_OWORD *)v676;
        *((_QWORD *)v675 + 2) = *((_QWORD *)v676 + 2);
        *(_QWORD *)((char *)a1 + v170[10]) = *(_QWORD *)((char *)a2 + v170[10]);
        goto LABEL_397;
      case 9u:
        v25 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v25))
        {
          v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(a1, a2, v25);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v25);
        }
        v180 = (int *)type metadata accessor for CuratorDetailHeaderComponentModel();
        v181 = v180[5];
        v182 = (char *)a1 + v181;
        v183 = (char *)a2 + v181;
        v184 = *((_OWORD *)v183 + 1);
        *(_OWORD *)v182 = *(_OWORD *)v183;
        *((_OWORD *)v182 + 1) = v184;
        *((_QWORD *)v182 + 4) = *((_QWORD *)v183 + 4);
        *(_OWORD *)((char *)a1 + v180[6]) = *(_OWORD *)((char *)a2 + v180[6]);
        v185 = v180[7];
        v186 = (char *)a1 + v185;
        v187 = (char *)a2 + v185;
        v188 = sub_21D7BF754();
        if (__swift_getEnumTagSinglePayload((uint64_t)v187, 1, v188))
        {
          v189 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
          memcpy(v186, v187, *(_QWORD *)(*(_QWORD *)(v189 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v188 - 8) + 32))(v186, v187, v188);
          __swift_storeEnumTagSinglePayload((uint64_t)v186, 0, 1, v188);
        }
        v419 = v180[8];
        v420 = (char *)a1 + v419;
        v421 = (char *)a2 + v419;
        v422 = type metadata accessor for Artwork();
        if (__swift_getEnumTagSinglePayload((uint64_t)v421, 1, v422))
        {
          v423 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
          memcpy(v420, v421, *(_QWORD *)(*(_QWORD *)(v423 - 8) + 64));
        }
        else
        {
          v496 = sub_21D7C3840();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v496 - 8) + 32))(v420, v421, v496);
          v497 = *(int *)(v422 + 20);
          v498 = &v420[v497];
          v499 = &v421[v497];
          v500 = sub_21D7C3804();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v500 - 8) + 32))(v498, v499, v500);
          __swift_storeEnumTagSinglePayload((uint64_t)v420, 0, 1, v422);
        }
        *((_BYTE *)a1 + v180[9]) = *((_BYTE *)a2 + v180[9]);
        v501 = v180[10];
        v502 = (char *)a1 + v501;
        v503 = (char *)a2 + v501;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v501, 1, v422))
        {
          v504 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
          memcpy(v502, v503, *(_QWORD *)(*(_QWORD *)(v504 - 8) + 64));
        }
        else
        {
          v554 = sub_21D7C3840();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v554 - 8) + 32))(v502, v503, v554);
          v555 = *(int *)(v422 + 20);
          v556 = &v502[v555];
          v557 = &v503[v555];
          v558 = sub_21D7C3804();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v558 - 8) + 32))(v556, v557, v558);
          __swift_storeEnumTagSinglePayload((uint64_t)v502, 0, 1, v422);
        }
        v559 = v180[11];
        v560 = (_QWORD *)((char *)a1 + v559);
        v561 = (_QWORD *)((char *)a2 + v559);
        v562 = type metadata accessor for VideoArtwork();
        if (__swift_getEnumTagSinglePayload((uint64_t)v561, 1, v562))
        {
          v563 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5F718);
          memcpy(v560, v561, *(_QWORD *)(*(_QWORD *)(v563 - 8) + 64));
        }
        else
        {
          *v560 = *v561;
          v595 = *(int *)(v562 + 20);
          v596 = (char *)v560 + v595;
          v597 = (char *)v561 + v595;
          v598 = sub_21D7C3804();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v598 - 8) + 32))(v596, v597, v598);
          __swift_storeEnumTagSinglePayload((uint64_t)v560, 0, 1, v562);
        }
        v599 = v180[12];
        v600 = (char *)a1 + v599;
        v601 = (char *)a2 + v599;
        v602 = type metadata accessor for ContentDescriptor();
        if (__swift_getEnumTagSinglePayload((uint64_t)v601, 1, v602))
        {
          v603 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
          memcpy(v600, v601, *(_QWORD *)(*(_QWORD *)(v603 - 8) + 64));
        }
        else
        {
          *v600 = *v601;
          memcpy(v600 + 8, v601 + 8, 0x69uLL);
          v634 = *(int *)(v602 + 24);
          v635 = &v600[v634];
          v636 = &v601[v634];
          if (__swift_getEnumTagSinglePayload((uint64_t)v636, 1, v188))
          {
            v637 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
            memcpy(v635, v636, *(_QWORD *)(*(_QWORD *)(v637 - 8) + 64));
          }
          else
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v188 - 8) + 32))(v635, v636, v188);
            __swift_storeEnumTagSinglePayload((uint64_t)v635, 0, 1, v188);
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v600, 0, 1, v602);
        }
        goto LABEL_397;
      case 0xAu:
        v27 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v27;
        a1[4] = a2[4];
        v28 = (int *)type metadata accessor for EmptyStateLockup();
        v29 = v28[5];
        v30 = (char *)a1 + v29;
        v31 = (char *)a2 + v29;
        v32 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v32))
        {
          v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
          __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v32);
        }
        *((_BYTE *)a1 + v28[6]) = *((_BYTE *)a2 + v28[6]);
        *(_OWORD *)((char *)a1 + v28[7]) = *(_OWORD *)((char *)a2 + v28[7]);
        *(_OWORD *)((char *)a1 + v28[8]) = *(_OWORD *)((char *)a2 + v28[8]);
        *(_OWORD *)((char *)a1 + v28[9]) = *(_OWORD *)((char *)a2 + v28[9]);
        goto LABEL_397;
      case 0xCu:
        v34 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v34))
        {
          v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(a1, a2, v34);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v34);
        }
        v190 = (int *)type metadata accessor for GroupedTextListLockup();
        v191 = v190[5];
        v192 = (char *)a1 + v191;
        v193 = (char *)a2 + v191;
        v194 = *((_OWORD *)v193 + 1);
        *(_OWORD *)v192 = *(_OWORD *)v193;
        *((_OWORD *)v192 + 1) = v194;
        *((_QWORD *)v192 + 4) = *((_QWORD *)v193 + 4);
        v195 = v190[6];
        v196 = (_OWORD *)((char *)a1 + v195);
        v197 = (_OWORD *)((char *)a2 + v195);
        v198 = type metadata accessor for ModalPresentationDescriptor();
        if (__swift_getEnumTagSinglePayload((uint64_t)v197, 1, v198))
        {
          v199 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553303E8);
          memcpy(v196, v197, *(_QWORD *)(*(_QWORD *)(v199 - 8) + 64));
        }
        else
        {
          v424 = v197[1];
          *v196 = *v197;
          v196[1] = v424;
          v196[2] = v197[2];
          *((_BYTE *)v196 + 48) = *((_BYTE *)v197 + 48);
          *((_QWORD *)v196 + 7) = *((_QWORD *)v197 + 7);
          *((_BYTE *)v196 + 64) = *((_BYTE *)v197 + 64);
          v425 = *(int *)(v198 + 40);
          v426 = (char *)v196 + v425;
          v427 = (char *)v197 + v425;
          v428 = sub_21D7C4314();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v428 - 8) + 32))(v426, v427, v428);
          __swift_storeEnumTagSinglePayload((uint64_t)v196, 0, 1, v198);
        }
        *(_QWORD *)((char *)a1 + v190[7]) = *(_QWORD *)((char *)a2 + v190[7]);
        goto LABEL_397;
      case 0xDu:
        v36 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v36;
        a1[4] = a2[4];
        v37 = (int *)type metadata accessor for HeaderComponentModel();
        v38 = v37[5];
        v39 = (char *)a1 + v38;
        v40 = (char *)a2 + v38;
        v41 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)v40, 1, v41))
        {
          v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
          __swift_storeEnumTagSinglePayload((uint64_t)v39, 0, 1, v41);
        }
        *(_OWORD *)((char *)a1 + v37[6]) = *(_OWORD *)((char *)a2 + v37[6]);
        *((_BYTE *)a1 + v37[7]) = *((_BYTE *)a2 + v37[7]);
        v200 = v37[8];
        v201 = (char *)a1 + v200;
        v202 = (char *)a2 + v200;
        v203 = type metadata accessor for ContentDescriptor();
        if (__swift_getEnumTagSinglePayload((uint64_t)v202, 1, v203))
        {
          v204 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
          memcpy(v201, v202, *(_QWORD *)(*(_QWORD *)(v204 - 8) + 64));
        }
        else
        {
          *v201 = *v202;
          memcpy(v201 + 8, v202 + 8, 0x69uLL);
          v429 = *(int *)(v203 + 24);
          v430 = &v201[v429];
          v431 = &v202[v429];
          v432 = sub_21D7BF754();
          if (__swift_getEnumTagSinglePayload((uint64_t)v431, 1, v432))
          {
            v433 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
            memcpy(v430, v431, *(_QWORD *)(*(_QWORD *)(v433 - 8) + 64));
          }
          else
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v432 - 8) + 32))(v430, v431, v432);
            __swift_storeEnumTagSinglePayload((uint64_t)v430, 0, 1, v432);
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v201, 0, 1, v203);
        }
        *((_BYTE *)a1 + v37[9]) = *((_BYTE *)a2 + v37[9]);
        goto LABEL_397;
      case 0x10u:
        v43 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v43;
        a1[4] = a2[4];
        v44 = (int *)type metadata accessor for InlineUpsell();
        v45 = v44[5];
        v46 = (char *)a1 + v45;
        v47 = (char *)a2 + v45;
        v48 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)v47, 1, v48))
        {
          v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v46, v47, v48);
          __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v48);
        }
        *(_OWORD *)((char *)a1 + v44[6]) = *(_OWORD *)((char *)a2 + v44[6]);
        *(_OWORD *)((char *)a1 + v44[7]) = *(_OWORD *)((char *)a2 + v44[7]);
        *(_OWORD *)((char *)a1 + v44[8]) = *(_OWORD *)((char *)a2 + v44[8]);
        v205 = v44[9];
        v206 = (char *)a1 + v205;
        v207 = (char *)a2 + v205;
        *((_QWORD *)v206 + 4) = *((_QWORD *)v207 + 4);
        v208 = *((_OWORD *)v207 + 1);
        *(_OWORD *)v206 = *(_OWORD *)v207;
        *((_OWORD *)v206 + 1) = v208;
        v209 = v44[10];
        v210 = (char *)a1 + v209;
        v211 = (char *)a2 + v209;
        *((_QWORD *)v210 + 4) = *((_QWORD *)v211 + 4);
        v212 = *((_OWORD *)v211 + 1);
        *(_OWORD *)v210 = *(_OWORD *)v211;
        *((_OWORD *)v210 + 1) = v212;
        v213 = v44[11];
        v214 = (char *)a1 + v213;
        v215 = (char *)a2 + v213;
        *((_QWORD *)v214 + 4) = *((_QWORD *)v215 + 4);
        v216 = *((_OWORD *)v215 + 1);
        *(_OWORD *)v214 = *(_OWORD *)v215;
        *((_OWORD *)v214 + 1) = v216;
        *((_BYTE *)a1 + v44[12]) = *((_BYTE *)a2 + v44[12]);
        goto LABEL_397;
      case 0x11u:
        v50 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v50;
        a1[4] = a2[4];
        v51 = (int *)type metadata accessor for LandingUpsell();
        v52 = v51[5];
        v53 = (char *)a1 + v52;
        v54 = (char *)a2 + v52;
        v55 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)v54, 1, v55))
        {
          v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v53, v54, v55);
          __swift_storeEnumTagSinglePayload((uint64_t)v53, 0, 1, v55);
        }
        *(_OWORD *)((char *)a1 + v51[6]) = *(_OWORD *)((char *)a2 + v51[6]);
        *(_OWORD *)((char *)a1 + v51[7]) = *(_OWORD *)((char *)a2 + v51[7]);
        *(_OWORD *)((char *)a1 + v51[8]) = *(_OWORD *)((char *)a2 + v51[8]);
        *(_OWORD *)((char *)a1 + v51[9]) = *(_OWORD *)((char *)a2 + v51[9]);
        v217 = v51[10];
        v218 = (char *)a1 + v217;
        v219 = (char *)a2 + v217;
        v220 = *((_OWORD *)v219 + 1);
        *(_OWORD *)v218 = *(_OWORD *)v219;
        *((_OWORD *)v218 + 1) = v220;
        *((_QWORD *)v218 + 4) = *((_QWORD *)v219 + 4);
        v221 = v51[11];
        v222 = (char *)a1 + v221;
        v223 = (char *)a2 + v221;
        v224 = *((_OWORD *)v223 + 1);
        *(_OWORD *)v222 = *(_OWORD *)v223;
        *((_OWORD *)v222 + 1) = v224;
        *((_QWORD *)v222 + 4) = *((_QWORD *)v223 + 4);
        v225 = v51[12];
        v226 = (char *)a1 + v225;
        v227 = (char *)a2 + v225;
        v228 = *((_OWORD *)v227 + 1);
        *(_OWORD *)v226 = *(_OWORD *)v227;
        *((_OWORD *)v226 + 1) = v228;
        *((_QWORD *)v226 + 4) = *((_QWORD *)v227 + 4);
        v229 = v51[13];
        v230 = (char *)a1 + v229;
        v231 = (char *)a2 + v229;
        v232 = type metadata accessor for Artwork();
        if (__swift_getEnumTagSinglePayload((uint64_t)v231, 1, v232))
        {
          v233 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
          memcpy(v230, v231, *(_QWORD *)(*(_QWORD *)(v233 - 8) + 64));
        }
        else
        {
          v434 = sub_21D7C3840();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v434 - 8) + 32))(v230, v231, v434);
          v435 = *(int *)(v232 + 20);
          v436 = &v230[v435];
          v437 = &v231[v435];
          v438 = sub_21D7C3804();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v438 - 8) + 32))(v436, v437, v438);
          __swift_storeEnumTagSinglePayload((uint64_t)v230, 0, 1, v232);
        }
        v439 = v51[14];
        v440 = (char *)a1 + v439;
        v441 = (char *)a2 + v439;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v439, 1, v232))
          goto LABEL_172;
        goto LABEL_202;
      case 0x13u:
        v57 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v57))
        {
          v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(a1, a2, v57);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v57);
        }
        v234 = (int *)type metadata accessor for ListSection();
        v235 = v234[5];
        v236 = (char *)a1 + v235;
        v237 = (char *)a2 + v235;
        v238 = *((_OWORD *)v237 + 1);
        *(_OWORD *)v236 = *(_OWORD *)v237;
        *((_OWORD *)v236 + 1) = v238;
        *((_QWORD *)v236 + 4) = *((_QWORD *)v237 + 4);
        *(_OWORD *)((char *)a1 + v234[6]) = *(_OWORD *)((char *)a2 + v234[6]);
        *(_OWORD *)((char *)a1 + v234[7]) = *(_OWORD *)((char *)a2 + v234[7]);
        *(_QWORD *)((char *)a1 + v234[8]) = *(_QWORD *)((char *)a2 + v234[8]);
        goto LABEL_397;
      case 0x14u:
        v59 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v59))
        {
          v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(a1, a2, v59);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v59);
        }
        v239 = (int *)type metadata accessor for SongDetailList();
        v240 = v239[5];
        v241 = (char *)a1 + v240;
        v242 = (char *)a2 + v240;
        v243 = *((_OWORD *)v242 + 1);
        *(_OWORD *)v241 = *(_OWORD *)v242;
        *((_OWORD *)v241 + 1) = v243;
        *((_QWORD *)v241 + 4) = *((_QWORD *)v242 + 4);
        v244 = v239[6];
        v245 = (char *)a1 + v244;
        v246 = (char *)a2 + v244;
        v247 = (int *)type metadata accessor for SongDetailListHeaderLockup();
        if (__swift_getEnumTagSinglePayload((uint64_t)v246, 1, (uint64_t)v247))
        {
          v248 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330F98);
          memcpy(v245, v246, *(_QWORD *)(*(_QWORD *)(v248 - 8) + 64));
        }
        else
        {
          if (__swift_getEnumTagSinglePayload((uint64_t)v246, 1, v59))
          {
            v443 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
            memcpy(v245, v246, *(_QWORD *)(*(_QWORD *)(v443 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v245, v246, v59);
            __swift_storeEnumTagSinglePayload((uint64_t)v245, 0, 1, v59);
          }
          v677 = v247[5];
          v678 = &v245[v677];
          v679 = &v246[v677];
          v680 = *((_OWORD *)v679 + 1);
          *(_OWORD *)v678 = *(_OWORD *)v679;
          *((_OWORD *)v678 + 1) = v680;
          *((_QWORD *)v678 + 4) = *((_QWORD *)v679 + 4);
          *(_OWORD *)&v245[v247[6]] = *(_OWORD *)&v246[v247[6]];
          *(_OWORD *)&v245[v247[7]] = *(_OWORD *)&v246[v247[7]];
          v681 = v247[8];
          v682 = &v245[v681];
          v683 = &v246[v681];
          *((_QWORD *)v682 + 4) = *((_QWORD *)v683 + 4);
          v684 = *((_OWORD *)v683 + 1);
          *(_OWORD *)v682 = *(_OWORD *)v683;
          *((_OWORD *)v682 + 1) = v684;
          v685 = v247[9];
          v686 = &v245[v685];
          v687 = &v246[v685];
          *((_QWORD *)v686 + 4) = *((_QWORD *)v687 + 4);
          v688 = *((_OWORD *)v687 + 1);
          *(_OWORD *)v686 = *(_OWORD *)v687;
          *((_OWORD *)v686 + 1) = v688;
          v689 = v247[10];
          v690 = &v245[v689];
          v691 = &v246[v689];
          v692 = type metadata accessor for ContentDescriptor();
          if (__swift_getEnumTagSinglePayload((uint64_t)v691, 1, v692))
          {
            v693 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
            memcpy(v690, v691, *(_QWORD *)(*(_QWORD *)(v693 - 8) + 64));
          }
          else
          {
            *v690 = *v691;
            memcpy(v690 + 8, v691 + 8, 0x69uLL);
            v734 = *(int *)(v692 + 24);
            v942 = (uint64_t)v690;
            v949 = &v690[v734];
            v735 = &v691[v734];
            v736 = sub_21D7BF754();
            if (__swift_getEnumTagSinglePayload((uint64_t)v735, 1, v736))
            {
              v737 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
              memcpy(v949, v735, *(_QWORD *)(*(_QWORD *)(v737 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v736 - 8) + 32))(v949, v735, v736);
              __swift_storeEnumTagSinglePayload((uint64_t)v949, 0, 1, v736);
            }
            __swift_storeEnumTagSinglePayload(v942, 0, 1, v692);
          }
          v806 = v247[11];
          v807 = &v245[v806];
          v808 = &v246[v806];
          v809 = type metadata accessor for Artwork();
          if (__swift_getEnumTagSinglePayload((uint64_t)v808, 1, v809))
          {
            v810 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
            memcpy(v807, v808, *(_QWORD *)(*(_QWORD *)(v810 - 8) + 64));
          }
          else
          {
            v811 = sub_21D7C3840();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v811 - 8) + 32))(v807, v808, v811);
            v812 = *(int *)(v809 + 20);
            v813 = &v807[v812];
            v814 = &v808[v812];
            v815 = sub_21D7C3804();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v815 - 8) + 32))(v813, v814, v815);
            __swift_storeEnumTagSinglePayload((uint64_t)v807, 0, 1, v809);
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v245, 0, 1, (uint64_t)v247);
        }
        *(_QWORD *)((char *)a1 + v239[7]) = *(_QWORD *)((char *)a2 + v239[7]);
        v816 = v239[8];
        v631 = (char *)a1 + v816;
        v632 = (char *)a2 + v816;
        v633 = type metadata accessor for ContentDescriptor();
        if (__swift_getEnumTagSinglePayload((uint64_t)v632, 1, v633))
          goto LABEL_340;
        *v631 = *v632;
        memcpy(v631 + 8, v632 + 8, 0x69uLL);
        v818 = *(int *)(v633 + 24);
        v644 = &v631[v818];
        v645 = &v632[v818];
        v646 = sub_21D7BF754();
        if (__swift_getEnumTagSinglePayload((uint64_t)v645, 1, v646))
          goto LABEL_342;
        goto LABEL_343;
      case 0x15u:
        v61 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v61))
        {
          v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(a1, a2, v61);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v61);
        }
        v249 = (int *)type metadata accessor for ParagraphComponentModel();
        v250 = v249[5];
        v251 = (char *)a1 + v250;
        v252 = (char *)a2 + v250;
        v253 = *((_OWORD *)v252 + 1);
        *(_OWORD *)v251 = *(_OWORD *)v252;
        *((_OWORD *)v251 + 1) = v253;
        *((_QWORD *)v251 + 4) = *((_QWORD *)v252 + 4);
        *(_OWORD *)((char *)a1 + v249[6]) = *(_OWORD *)((char *)a2 + v249[6]);
        *((_BYTE *)a1 + v249[7]) = *((_BYTE *)a2 + v249[7]);
        goto LABEL_397;
      case 0x16u:
        v63 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v63))
        {
          v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(a1, a2, v63);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v63);
        }
        v254 = (int *)type metadata accessor for PlaylistDetailHeaderLockup();
        v255 = v254[5];
        v256 = (char *)a1 + v255;
        v257 = (char *)a2 + v255;
        v258 = *((_OWORD *)v257 + 1);
        *(_OWORD *)v256 = *(_OWORD *)v257;
        *((_OWORD *)v256 + 1) = v258;
        *((_QWORD *)v256 + 4) = *((_QWORD *)v257 + 4);
        *(_OWORD *)((char *)a1 + v254[6]) = *(_OWORD *)((char *)a2 + v254[6]);
        *(_QWORD *)((char *)a1 + v254[7]) = *(_QWORD *)((char *)a2 + v254[7]);
        *(_OWORD *)((char *)a1 + v254[8]) = *(_OWORD *)((char *)a2 + v254[8]);
        v259 = v254[9];
        v260 = (_OWORD *)((char *)a1 + v259);
        v261 = (_OWORD *)((char *)a2 + v259);
        v262 = type metadata accessor for ModalPresentationDescriptor();
        if (__swift_getEnumTagSinglePayload((uint64_t)v261, 1, v262))
        {
          v263 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553303E8);
          memcpy(v260, v261, *(_QWORD *)(*(_QWORD *)(v263 - 8) + 64));
        }
        else
        {
          v444 = v261[1];
          *v260 = *v261;
          v260[1] = v444;
          v260[2] = v261[2];
          *((_BYTE *)v260 + 48) = *((_BYTE *)v261 + 48);
          *((_QWORD *)v260 + 7) = *((_QWORD *)v261 + 7);
          *((_BYTE *)v260 + 64) = *((_BYTE *)v261 + 64);
          v445 = *(int *)(v262 + 40);
          v446 = (char *)v260 + v445;
          v447 = (char *)v261 + v445;
          v448 = sub_21D7C4314();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v448 - 8) + 32))(v446, v447, v448);
          __swift_storeEnumTagSinglePayload((uint64_t)v260, 0, 1, v262);
        }
        *((_BYTE *)a1 + v254[10]) = *((_BYTE *)a2 + v254[10]);
        *(_OWORD *)((char *)a1 + v254[11]) = *(_OWORD *)((char *)a2 + v254[11]);
        v449 = v254[12];
        v450 = (char *)a1 + v449;
        v451 = (char *)a2 + v449;
        v452 = type metadata accessor for Artwork();
        if (__swift_getEnumTagSinglePayload((uint64_t)v451, 1, v452))
        {
          v453 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
          memcpy(v450, v451, *(_QWORD *)(*(_QWORD *)(v453 - 8) + 64));
        }
        else
        {
          v510 = sub_21D7C3840();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v510 - 8) + 32))(v450, v451, v510);
          v511 = *(int *)(v452 + 20);
          v512 = &v450[v511];
          v513 = &v451[v511];
          v514 = sub_21D7C3804();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v514 - 8) + 32))(v512, v513, v514);
          __swift_storeEnumTagSinglePayload((uint64_t)v450, 0, 1, v452);
        }
        v515 = v254[13];
        v516 = (_QWORD *)((char *)a1 + v515);
        v517 = (_QWORD *)((char *)a2 + v515);
        v518 = type metadata accessor for VideoArtwork();
        if (__swift_getEnumTagSinglePayload((uint64_t)v517, 1, v518))
        {
          v519 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5F718);
          memcpy(v516, v517, *(_QWORD *)(*(_QWORD *)(v519 - 8) + 64));
        }
        else
        {
          *v516 = *v517;
          v564 = *(int *)(v518 + 20);
          v565 = (char *)v516 + v564;
          v566 = (char *)v517 + v564;
          v567 = sub_21D7C3804();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v567 - 8) + 32))(v565, v566, v567);
          __swift_storeEnumTagSinglePayload((uint64_t)v516, 0, 1, v518);
        }
        v568 = v254[14];
        v569 = (char *)a1 + v568;
        v570 = (char *)a2 + v568;
        v571 = type metadata accessor for ContentDescriptor();
        if (__swift_getEnumTagSinglePayload((uint64_t)v570, 1, v571))
        {
          v572 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
          memcpy(v569, v570, *(_QWORD *)(*(_QWORD *)(v572 - 8) + 64));
        }
        else
        {
          *v569 = *v570;
          memcpy(v569 + 8, v570 + 8, 0x69uLL);
          v604 = *(int *)(v571 + 24);
          v605 = &v569[v604];
          v606 = &v570[v604];
          v607 = sub_21D7BF754();
          if (__swift_getEnumTagSinglePayload((uint64_t)v606, 1, v607))
          {
            v608 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
            memcpy(v605, v606, *(_QWORD *)(*(_QWORD *)(v608 - 8) + 64));
          }
          else
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v607 - 8) + 32))(v605, v606, v607);
            __swift_storeEnumTagSinglePayload((uint64_t)v605, 0, 1, v607);
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v569, 0, 1, v571);
        }
        v724 = v254[15];
        v725 = (char *)a1 + v724;
        v726 = (char *)a2 + v724;
        v727 = (int *)type metadata accessor for LinkComponentModel();
        if (__swift_getEnumTagSinglePayload((uint64_t)v726, 1, (uint64_t)v727))
        {
          v728 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330520);
          memcpy(v725, v726, *(_QWORD *)(*(_QWORD *)(v728 - 8) + 64));
        }
        else
        {
          if (__swift_getEnumTagSinglePayload((uint64_t)v726, 1, v63))
          {
            v729 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
            memcpy(v725, v726, *(_QWORD *)(*(_QWORD *)(v729 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v725, v726, v63);
            __swift_storeEnumTagSinglePayload((uint64_t)v725, 0, 1, v63);
          }
          v751 = v727[5];
          v752 = &v725[v751];
          v753 = &v726[v751];
          v754 = *((_OWORD *)v753 + 1);
          *(_OWORD *)v752 = *(_OWORD *)v753;
          *((_OWORD *)v752 + 1) = v754;
          *((_QWORD *)v752 + 4) = *((_QWORD *)v753 + 4);
          v755 = v727[6];
          v756 = &v725[v755];
          v757 = &v726[v755];
          *((_QWORD *)v756 + 4) = *((_QWORD *)v757 + 4);
          v758 = *((_OWORD *)v757 + 1);
          *(_OWORD *)v756 = *(_OWORD *)v757;
          *((_OWORD *)v756 + 1) = v758;
          *(_OWORD *)&v725[v727[7]] = *(_OWORD *)&v726[v727[7]];
          __swift_storeEnumTagSinglePayload((uint64_t)v725, 0, 1, (uint64_t)v727);
        }
        v759 = v254[16];
        v760 = (char *)a1 + v759;
        v761 = (char *)a2 + v759;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v759, 1, (uint64_t)v727))
        {
          v762 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330520);
          memcpy(v760, v761, *(_QWORD *)(*(_QWORD *)(v762 - 8) + 64));
        }
        else
        {
          if (__swift_getEnumTagSinglePayload((uint64_t)v761, 1, v63))
          {
            v763 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
            memcpy(v760, v761, *(_QWORD *)(*(_QWORD *)(v763 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v760, v761, v63);
            __swift_storeEnumTagSinglePayload((uint64_t)v760, 0, 1, v63);
          }
          v777 = v727[5];
          v778 = &v760[v777];
          v779 = &v761[v777];
          v780 = *((_OWORD *)v779 + 1);
          *(_OWORD *)v778 = *(_OWORD *)v779;
          *((_OWORD *)v778 + 1) = v780;
          *((_QWORD *)v778 + 4) = *((_QWORD *)v779 + 4);
          v781 = v727[6];
          v782 = &v760[v781];
          v783 = &v761[v781];
          *((_QWORD *)v782 + 4) = *((_QWORD *)v783 + 4);
          v784 = *((_OWORD *)v783 + 1);
          *(_OWORD *)v782 = *(_OWORD *)v783;
          *((_OWORD *)v782 + 1) = v784;
          *(_OWORD *)&v760[v727[7]] = *(_OWORD *)&v761[v727[7]];
          __swift_storeEnumTagSinglePayload((uint64_t)v760, 0, 1, (uint64_t)v727);
        }
        v785 = v254[17];
        v786 = (char *)a1 + v785;
        v787 = (char *)a2 + v785;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v785, 1, (uint64_t)v727))
        {
          v788 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330520);
          memcpy(v786, v787, *(_QWORD *)(*(_QWORD *)(v788 - 8) + 64));
        }
        else
        {
          if (__swift_getEnumTagSinglePayload((uint64_t)v787, 1, v63))
          {
            v789 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
            memcpy(v786, v787, *(_QWORD *)(*(_QWORD *)(v789 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v786, v787, v63);
            __swift_storeEnumTagSinglePayload((uint64_t)v786, 0, 1, v63);
          }
          v798 = v727[5];
          v799 = &v786[v798];
          v800 = &v787[v798];
          v801 = *((_OWORD *)v800 + 1);
          *(_OWORD *)v799 = *(_OWORD *)v800;
          *((_OWORD *)v799 + 1) = v801;
          *((_QWORD *)v799 + 4) = *((_QWORD *)v800 + 4);
          v802 = v727[6];
          v803 = &v786[v802];
          v804 = &v787[v802];
          *((_QWORD *)v803 + 4) = *((_QWORD *)v804 + 4);
          v805 = *((_OWORD *)v804 + 1);
          *(_OWORD *)v803 = *(_OWORD *)v804;
          *((_OWORD *)v803 + 1) = v805;
          *(_OWORD *)&v786[v727[7]] = *(_OWORD *)&v787[v727[7]];
          __swift_storeEnumTagSinglePayload((uint64_t)v786, 0, 1, (uint64_t)v727);
        }
        *(_QWORD *)((char *)a1 + v254[18]) = *(_QWORD *)((char *)a2 + v254[18]);
        goto LABEL_397;
      case 0x17u:
        *a1 = *a2;
        v65 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255331BB8) + 48);
        v66 = (char *)a1 + v65;
        v67 = (char *)a2 + v65;
        *((_BYTE *)a1 + v65) = *((_BYTE *)a2 + v65);
        memcpy((char *)a1 + v65 + 8, (char *)a2 + v65 + 8, 0x69uLL);
        v68 = *(int *)(type metadata accessor for ContentDescriptor() + 24);
        v13 = &v66[v68];
        v14 = &v67[v68];
        v69 = sub_21D7BF754();
        if (!__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v69))
          goto LABEL_119;
LABEL_6:
        v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        goto LABEL_397;
      case 0x18u:
        v70 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v70))
        {
          v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(a1, a2, v70);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v70);
        }
        v264 = (int *)type metadata accessor for PopoverSelector();
        v265 = v264[5];
        v266 = (char *)a1 + v265;
        v267 = (char *)a2 + v265;
        v268 = *((_OWORD *)v267 + 1);
        *(_OWORD *)v266 = *(_OWORD *)v267;
        *((_OWORD *)v266 + 1) = v268;
        *((_QWORD *)v266 + 4) = *((_QWORD *)v267 + 4);
        *(_QWORD *)((char *)a1 + v264[6]) = *(_QWORD *)((char *)a2 + v264[6]);
        *(_OWORD *)((char *)a1 + v264[7]) = *(_OWORD *)((char *)a2 + v264[7]);
        goto LABEL_397;
      case 0x1Du:
        v72 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v72;
        a1[4] = a2[4];
        v73 = (int *)type metadata accessor for SocialOnboardingNotificationSettingsPageLockup();
        v74 = v73[5];
        v75 = (char *)a1 + v74;
        v76 = (char *)a2 + v74;
        v77 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)v76, 1, v77))
        {
          v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 32))(v75, v76, v77);
          __swift_storeEnumTagSinglePayload((uint64_t)v75, 0, 1, v77);
        }
        *((_BYTE *)a1 + v73[6]) = *((_BYTE *)a2 + v73[6]);
        *((_BYTE *)a1 + v73[7]) = *((_BYTE *)a2 + v73[7]);
        *(_OWORD *)((char *)a1 + v73[8]) = *(_OWORD *)((char *)a2 + v73[8]);
        *((_BYTE *)a1 + v73[9]) = *((_BYTE *)a2 + v73[9]);
        goto LABEL_397;
      case 0x1Eu:
        v79 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v79;
        a1[4] = a2[4];
        *((_DWORD *)a1 + 10) = *((_DWORD *)a2 + 10);
        v80 = *((_OWORD *)a2 + 4);
        *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 4) = v80;
        v81 = *(int *)(type metadata accessor for SocialOnboardingPrivacySettingsPageLockup() + 44);
        v13 = (char *)a1 + v81;
        v14 = (char *)a2 + v81;
        v69 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v69))
          goto LABEL_65;
        goto LABEL_119;
      case 0x20u:
        v82 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v82;
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        a1[6] = a2[6];
        v83 = *(int *)(type metadata accessor for SocialOnboardingUserNameHandlePageLockup() + 24);
        v13 = (char *)a1 + v83;
        v14 = (char *)a2 + v83;
        v69 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v69))
          goto LABEL_65;
        goto LABEL_119;
      case 0x21u:
        v84 = type metadata accessor for Artwork();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v84))
        {
          v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
        }
        else
        {
          v269 = sub_21D7C3840();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v269 - 8) + 32))(a1, a2, v269);
          v270 = *(int *)(v84 + 20);
          v271 = (char *)a1 + v270;
          v272 = (char *)a2 + v270;
          v273 = sub_21D7C3804();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v273 - 8) + 32))(v271, v272, v273);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v84);
        }
        v274 = (int *)type metadata accessor for SocialOnboardingWelcomePageLockup();
        v275 = v274[5];
        v276 = (char *)a1 + v275;
        v277 = (char *)a2 + v275;
        v278 = *((_OWORD *)v277 + 1);
        *(_OWORD *)v276 = *(_OWORD *)v277;
        *((_OWORD *)v276 + 1) = v278;
        *((_QWORD *)v276 + 4) = *((_QWORD *)v277 + 4);
        v279 = v274[6];
        v280 = (char *)a1 + v279;
        v281 = (char *)a2 + v279;
        v282 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)v281, 1, v282))
        {
          v283 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(v280, v281, *(_QWORD *)(*(_QWORD *)(v283 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v282 - 8) + 32))(v280, v281, v282);
          __swift_storeEnumTagSinglePayload((uint64_t)v280, 0, 1, v282);
        }
        *(_OWORD *)((char *)a1 + v274[7]) = *(_OWORD *)((char *)a2 + v274[7]);
        *(_OWORD *)((char *)a1 + v274[8]) = *(_OWORD *)((char *)a2 + v274[8]);
        goto LABEL_397;
      case 0x22u:
        v86 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v86))
        {
          v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v86 - 8) + 32))(a1, a2, v86);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v86);
        }
        v284 = (int *)type metadata accessor for SocialProfileDetailHeaderLockup();
        v285 = v284[5];
        v286 = (char *)a1 + v285;
        v287 = (char *)a2 + v285;
        v288 = *((_OWORD *)v287 + 1);
        *(_OWORD *)v286 = *(_OWORD *)v287;
        *((_OWORD *)v286 + 1) = v288;
        *((_QWORD *)v286 + 4) = *((_QWORD *)v287 + 4);
        v289 = v284[6];
        v290 = (char *)a1 + v289;
        v291 = (char *)a2 + v289;
        *((_BYTE *)a1 + v289) = *((_BYTE *)a2 + v289);
        memcpy((char *)a1 + v289 + 8, (char *)a2 + v289 + 8, 0x69uLL);
        v292 = *(int *)(type metadata accessor for ContentDescriptor() + 24);
        v293 = &v290[v292];
        v294 = &v291[v292];
        v295 = sub_21D7BF754();
        if (__swift_getEnumTagSinglePayload((uint64_t)v294, 1, v295))
        {
          v296 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
          memcpy(v293, v294, *(_QWORD *)(*(_QWORD *)(v296 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v295 - 8) + 32))(v293, v294, v295);
          __swift_storeEnumTagSinglePayload((uint64_t)v293, 0, 1, v295);
        }
        *(_OWORD *)((char *)a1 + v284[7]) = *(_OWORD *)((char *)a2 + v284[7]);
        *(_OWORD *)((char *)a1 + v284[8]) = *(_OWORD *)((char *)a2 + v284[8]);
        *((_BYTE *)a1 + v284[9]) = *((_BYTE *)a2 + v284[9]);
        *((_BYTE *)a1 + v284[10]) = *((_BYTE *)a2 + v284[10]);
        v454 = v284[11];
        v440 = (char *)a1 + v454;
        v441 = (char *)a2 + v454;
        v232 = type metadata accessor for Artwork();
        if (__swift_getEnumTagSinglePayload((uint64_t)v441, 1, v232))
        {
LABEL_172:
          v442 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
          memcpy(v440, v441, *(_QWORD *)(*(_QWORD *)(v442 - 8) + 64));
        }
        else
        {
LABEL_202:
          v505 = sub_21D7C3840();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v505 - 8) + 32))(v440, v441, v505);
          v506 = *(int *)(v232 + 20);
          v507 = &v440[v506];
          v508 = &v441[v506];
          v509 = sub_21D7C3804();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v509 - 8) + 32))(v507, v508, v509);
          __swift_storeEnumTagSinglePayload((uint64_t)v440, 0, 1, v232);
        }
        goto LABEL_397;
      case 0x23u:
        v88 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v88))
        {
          v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v88 - 8) + 32))(a1, a2, v88);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v88);
        }
        v297 = (int *)type metadata accessor for SocialProfileEditorHeaderLockup(0);
        v298 = v297[5];
        v299 = (char *)a1 + v298;
        v300 = (char *)a2 + v298;
        v301 = *((_OWORD *)v300 + 1);
        *(_OWORD *)v299 = *(_OWORD *)v300;
        *((_OWORD *)v299 + 1) = v301;
        *((_QWORD *)v299 + 4) = *((_QWORD *)v300 + 4);
        v302 = v297[6];
        v303 = (char *)a1 + v302;
        v304 = (char *)a2 + v302;
        *((_BYTE *)a1 + v302) = *((_BYTE *)a2 + v302);
        memcpy((char *)a1 + v302 + 8, (char *)a2 + v302 + 8, 0x69uLL);
        v305 = *(int *)(type metadata accessor for ContentDescriptor() + 24);
        v306 = &v303[v305];
        v307 = &v304[v305];
        v308 = sub_21D7BF754();
        if (__swift_getEnumTagSinglePayload((uint64_t)v307, 1, v308))
        {
          v309 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
          memcpy(v306, v307, *(_QWORD *)(*(_QWORD *)(v309 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v308 - 8) + 32))(v306, v307, v308);
          __swift_storeEnumTagSinglePayload((uint64_t)v306, 0, 1, v308);
        }
        *(_OWORD *)((char *)a1 + v297[7]) = *(_OWORD *)((char *)a2 + v297[7]);
        *(_OWORD *)((char *)a1 + v297[8]) = *(_OWORD *)((char *)a2 + v297[8]);
        *((_BYTE *)a1 + v297[9]) = *((_BYTE *)a2 + v297[9]);
        *((_BYTE *)a1 + v297[10]) = *((_BYTE *)a2 + v297[10]);
        *(_OWORD *)((char *)a1 + v297[11]) = *(_OWORD *)((char *)a2 + v297[11]);
        *(_OWORD *)((char *)a1 + v297[12]) = *(_OWORD *)((char *)a2 + v297[12]);
        *(_OWORD *)((char *)a1 + v297[13]) = *(_OWORD *)((char *)a2 + v297[13]);
        *(_OWORD *)((char *)a1 + v297[14]) = *(_OWORD *)((char *)a2 + v297[14]);
        *(_QWORD *)((char *)a1 + v297[15]) = *(_QWORD *)((char *)a2 + v297[15]);
        v455 = v297[16];
        v456 = (char *)a1 + v455;
        v457 = (char *)a2 + v455;
        v458 = type metadata accessor for Artwork();
        if (__swift_getEnumTagSinglePayload((uint64_t)v457, 1, v458))
        {
          v459 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
          memcpy(v456, v457, *(_QWORD *)(*(_QWORD *)(v459 - 8) + 64));
        }
        else
        {
          v520 = sub_21D7C3840();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v520 - 8) + 32))(v456, v457, v520);
          v521 = *(int *)(v458 + 20);
          v522 = &v456[v521];
          v523 = &v457[v521];
          v524 = sub_21D7C3804();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v524 - 8) + 32))(v522, v523, v524);
          __swift_storeEnumTagSinglePayload((uint64_t)v456, 0, 1, v458);
        }
        *(_OWORD *)((char *)a1 + v297[17]) = *(_OWORD *)((char *)a2 + v297[17]);
        goto LABEL_397;
      case 0x24u:
        v90 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v90))
        {
          v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v90 - 8) + 32))(a1, a2, v90);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v90);
        }
        FriendsButtonComponentModel = (int *)type metadata accessor for SocialProfileFindFriendsButtonComponentModel();
        v311 = FriendsButtonComponentModel[5];
        v312 = (char *)a1 + v311;
        v313 = (char *)a2 + v311;
        v314 = *((_OWORD *)v313 + 1);
        *(_OWORD *)v312 = *(_OWORD *)v313;
        *((_OWORD *)v312 + 1) = v314;
        *((_QWORD *)v312 + 4) = *((_QWORD *)v313 + 4);
        *(_OWORD *)((char *)a1 + FriendsButtonComponentModel[6]) = *(_OWORD *)((char *)a2
                                                                             + FriendsButtonComponentModel[6]);
        v315 = FriendsButtonComponentModel[7];
        v316 = (char *)a1 + v315;
        v317 = (char *)a2 + v315;
        v318 = *((_OWORD *)v317 + 1);
        *(_OWORD *)v316 = *(_OWORD *)v317;
        *((_OWORD *)v316 + 1) = v318;
        *((_QWORD *)v316 + 4) = *((_QWORD *)v317 + 4);
        goto LABEL_397;
      case 0x25u:
        v92 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v92))
        {
          v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v92 - 8) + 32))(a1, a2, v92);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v92);
        }
        v319 = (int *)type metadata accessor for SocialProfileDetailViewFollowRequestsHeader();
        v320 = v319[5];
        v321 = (char *)a1 + v320;
        v322 = (char *)a2 + v320;
        v323 = *((_OWORD *)v322 + 1);
        *(_OWORD *)v321 = *(_OWORD *)v322;
        *((_OWORD *)v321 + 1) = v323;
        *((_QWORD *)v321 + 4) = *((_QWORD *)v322 + 4);
        *(_QWORD *)((char *)a1 + v319[6]) = *(_QWORD *)((char *)a2 + v319[6]);
        *(_QWORD *)((char *)a1 + v319[7]) = *(_QWORD *)((char *)a2 + v319[7]);
        goto LABEL_397;
      case 0x26u:
        v94 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v94))
        {
          v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(a1, a2, v94);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v94);
        }
        v324 = (int *)type metadata accessor for SocialProfileFollowRequestResponseHeader();
        v325 = v324[5];
        v326 = (char *)a1 + v325;
        v327 = (char *)a2 + v325;
        v328 = *((_OWORD *)v327 + 1);
        *(_OWORD *)v326 = *(_OWORD *)v327;
        *((_OWORD *)v326 + 1) = v328;
        *((_QWORD *)v326 + 4) = *((_QWORD *)v327 + 4);
        *(_OWORD *)((char *)a1 + v324[6]) = *(_OWORD *)((char *)a2 + v324[6]);
        *(_OWORD *)((char *)a1 + v324[7]) = *(_OWORD *)((char *)a2 + v324[7]);
        v329 = v324[8];
        v330 = (char *)a1 + v329;
        v331 = (char *)a2 + v329;
        v332 = *((_OWORD *)v331 + 1);
        *(_OWORD *)v330 = *(_OWORD *)v331;
        *((_OWORD *)v330 + 1) = v332;
        *((_QWORD *)v330 + 4) = *((_QWORD *)v331 + 4);
        v333 = v324[9];
        v334 = (char *)a1 + v333;
        v335 = (char *)a2 + v333;
        *((_QWORD *)v334 + 4) = *((_QWORD *)v335 + 4);
        v336 = *((_OWORD *)v335 + 1);
        *(_OWORD *)v334 = *(_OWORD *)v335;
        *((_OWORD *)v334 + 1) = v336;
        goto LABEL_397;
      case 0x27u:
        v96 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v96))
        {
          v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(a1, a2, v96);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v96);
        }
        v337 = type metadata accessor for SocialProfileFollowRequestsPageComponentModel();
        v338 = *(int *)(v337 + 20);
        v339 = (char *)a1 + v338;
        v340 = (char *)a2 + v338;
        v341 = *((_OWORD *)v340 + 1);
        *(_OWORD *)v339 = *(_OWORD *)v340;
        *((_OWORD *)v339 + 1) = v341;
        *((_QWORD *)v339 + 4) = *((_QWORD *)v340 + 4);
        *(_QWORD *)((char *)a1 + *(int *)(v337 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v337 + 24));
        goto LABEL_397;
      case 0x28u:
        v98 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v98;
        a1[4] = a2[4];
        v99 = type metadata accessor for SocialOnboardingSharedPlaylistPageLockup();
        v100 = *(int *)(v99 + 20);
        v101 = (char *)a1 + v100;
        v102 = (char *)a2 + v100;
        v103 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)v102, 1, v103))
        {
          v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(v101, v102, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v101, v102, v103);
          __swift_storeEnumTagSinglePayload((uint64_t)v101, 0, 1, v103);
        }
        *(_QWORD *)((char *)a1 + *(int *)(v99 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v99 + 24));
        goto LABEL_397;
      case 0x29u:
        v105 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v105;
        a1[4] = a2[4];
        FriendsPageSectionLockup = (int *)type metadata accessor for SocialOnboardingFindFriendsPageSectionLockup();
        v107 = FriendsPageSectionLockup[5];
        v108 = (char *)a1 + v107;
        v109 = (char *)a2 + v107;
        v110 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)v109, 1, v110))
        {
          v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 32))(v108, v109, v110);
          __swift_storeEnumTagSinglePayload((uint64_t)v108, 0, 1, v110);
        }
        *(_QWORD *)((char *)a1 + FriendsPageSectionLockup[6]) = *(_QWORD *)((char *)a2 + FriendsPageSectionLockup[6]);
        *(_QWORD *)((char *)a1 + FriendsPageSectionLockup[7]) = *(_QWORD *)((char *)a2 + FriendsPageSectionLockup[7]);
        goto LABEL_397;
      case 0x2Bu:
        v112 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v112;
        a1[4] = a2[4];
        v113 = *(int *)(type metadata accessor for Spacer() + 20);
        v13 = (char *)a1 + v113;
        v14 = (char *)a2 + v113;
        v69 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v69))
        {
LABEL_65:
          v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
        }
        else
        {
LABEL_119:
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(v13, v14, v69);
          __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v69);
        }
        goto LABEL_397;
      case 0x2Du:
        v115 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v115))
        {
          v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v115 - 8) + 32))(a1, a2, v115);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v115);
        }
        v342 = (int *)type metadata accessor for SuperHeroLockup();
        v343 = v342[5];
        v344 = (char *)a1 + v343;
        v345 = (char *)a2 + v343;
        v346 = *((_OWORD *)v345 + 1);
        *(_OWORD *)v344 = *(_OWORD *)v345;
        *((_OWORD *)v344 + 1) = v346;
        *((_QWORD *)v344 + 4) = *((_QWORD *)v345 + 4);
        v347 = v342[6];
        v348 = (char *)a1 + v347;
        v349 = (char *)a2 + v347;
        v350 = *((_OWORD *)v349 + 1);
        *(_OWORD *)v348 = *(_OWORD *)v349;
        *((_OWORD *)v348 + 1) = v350;
        *((_QWORD *)v348 + 4) = *((_QWORD *)v349 + 4);
        *(_OWORD *)((char *)a1 + v342[7]) = *(_OWORD *)((char *)a2 + v342[7]);
        *(_OWORD *)((char *)a1 + v342[8]) = *(_OWORD *)((char *)a2 + v342[8]);
        *(_OWORD *)((char *)a1 + v342[9]) = *(_OWORD *)((char *)a2 + v342[9]);
        *(_OWORD *)((char *)a1 + v342[10]) = *(_OWORD *)((char *)a2 + v342[10]);
        *(_OWORD *)((char *)a1 + v342[11]) = *(_OWORD *)((char *)a2 + v342[11]);
        *((_BYTE *)a1 + v342[12]) = *((_BYTE *)a2 + v342[12]);
        *(_QWORD *)((char *)a1 + v342[13]) = *(_QWORD *)((char *)a2 + v342[13]);
        v351 = v342[14];
        v352 = (char *)a1 + v351;
        v353 = (char *)a2 + v351;
        v354 = type metadata accessor for Artwork();
        if (__swift_getEnumTagSinglePayload((uint64_t)v353, 1, v354))
        {
          v355 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
          memcpy(v352, v353, *(_QWORD *)(*(_QWORD *)(v355 - 8) + 64));
        }
        else
        {
          v460 = sub_21D7C3840();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v460 - 8) + 32))(v352, v353, v460);
          v461 = *(int *)(v354 + 20);
          v462 = &v352[v461];
          v463 = &v353[v461];
          v464 = sub_21D7C3804();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v464 - 8) + 32))(v462, v463, v464);
          __swift_storeEnumTagSinglePayload((uint64_t)v352, 0, 1, v354);
        }
        v465 = v342[15];
        v466 = (char *)a1 + v465;
        v467 = (char *)a2 + v465;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v465, 1, v354))
        {
          v468 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
          memcpy(v466, v467, *(_QWORD *)(*(_QWORD *)(v468 - 8) + 64));
        }
        else
        {
          v525 = sub_21D7C3840();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v525 - 8) + 32))(v466, v467, v525);
          v526 = *(int *)(v354 + 20);
          v527 = &v466[v526];
          v528 = &v467[v526];
          v529 = sub_21D7C3804();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v529 - 8) + 32))(v527, v528, v529);
          __swift_storeEnumTagSinglePayload((uint64_t)v466, 0, 1, v354);
        }
        v530 = v342[16];
        v531 = (_QWORD *)((char *)a1 + v530);
        v532 = (_QWORD *)((char *)a2 + v530);
        v533 = type metadata accessor for VideoArtwork();
        if (__swift_getEnumTagSinglePayload((uint64_t)v532, 1, v533))
        {
          v534 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5F718);
          memcpy(v531, v532, *(_QWORD *)(*(_QWORD *)(v534 - 8) + 64));
        }
        else
        {
          *v531 = *v532;
          v573 = *(int *)(v533 + 20);
          v574 = (char *)v531 + v573;
          v575 = (char *)v532 + v573;
          v576 = sub_21D7C3804();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v576 - 8) + 32))(v574, v575, v576);
          __swift_storeEnumTagSinglePayload((uint64_t)v531, 0, 1, v533);
        }
        v577 = v342[17];
        v578 = (_QWORD *)((char *)a1 + v577);
        v579 = (_QWORD *)((char *)a2 + v577);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v577, 1, v533))
        {
          v580 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5F718);
          memcpy(v578, v579, *(_QWORD *)(*(_QWORD *)(v580 - 8) + 64));
        }
        else
        {
          *v578 = *v579;
          v609 = *(int *)(v533 + 20);
          v610 = (char *)v578 + v609;
          v611 = (char *)v579 + v609;
          v612 = sub_21D7C3804();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v612 - 8) + 32))(v610, v611, v612);
          __swift_storeEnumTagSinglePayload((uint64_t)v578, 0, 1, v533);
        }
        *((_BYTE *)a1 + v342[18]) = *((_BYTE *)a2 + v342[18]);
        *((_BYTE *)a1 + v342[19]) = *((_BYTE *)a2 + v342[19]);
        *(_OWORD *)((char *)a1 + v342[20]) = *(_OWORD *)((char *)a2 + v342[20]);
        v613 = v342[21];
        v614 = (char *)a1 + v613;
        v615 = (char *)a2 + v613;
        v614[16] = v615[16];
        *(_OWORD *)v614 = *(_OWORD *)v615;
        v616 = v342[22];
        v617 = (char *)a1 + v616;
        v618 = (char *)a2 + v616;
        *((_QWORD *)v617 + 4) = *((_QWORD *)v618 + 4);
        v619 = *((_OWORD *)v618 + 1);
        *(_OWORD *)v617 = *(_OWORD *)v618;
        *((_OWORD *)v617 + 1) = v619;
        v620 = v342[23];
        v621 = (char *)a1 + v620;
        v622 = (char *)a2 + v620;
        v623 = type metadata accessor for ContentDescriptor();
        if (__swift_getEnumTagSinglePayload((uint64_t)v622, 1, v623))
        {
          v624 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
          memcpy(v621, v622, *(_QWORD *)(*(_QWORD *)(v624 - 8) + 64));
        }
        else
        {
          *v621 = *v622;
          memcpy(v621 + 8, v622 + 8, 0x69uLL);
          v638 = *(int *)(v623 + 24);
          v639 = &v621[v638];
          v640 = &v622[v638];
          v641 = sub_21D7BF754();
          if (__swift_getEnumTagSinglePayload((uint64_t)v640, 1, v641))
          {
            v642 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
            memcpy(v639, v640, *(_QWORD *)(*(_QWORD *)(v642 - 8) + 64));
          }
          else
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v641 - 8) + 32))(v639, v640, v641);
            __swift_storeEnumTagSinglePayload((uint64_t)v639, 0, 1, v641);
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v621, 0, 1, v623);
        }
        *(_OWORD *)((char *)a1 + v342[24]) = *(_OWORD *)((char *)a2 + v342[24]);
        goto LABEL_397;
      case 0x32u:
        v117 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v117;
        a1[4] = a2[4];
        v118 = (int *)type metadata accessor for TVMovieDescription();
        v119 = v118[5];
        v120 = (char *)a1 + v119;
        v121 = (char *)a2 + v119;
        v122 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)v121, 1, v122))
        {
          v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(v120, v121, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 32))(v120, v121, v122);
          __swift_storeEnumTagSinglePayload((uint64_t)v120, 0, 1, v122);
        }
        *(_OWORD *)((char *)a1 + v118[6]) = *(_OWORD *)((char *)a2 + v118[6]);
        v356 = v118[7];
        v357 = (char *)a1 + v356;
        v358 = (char *)a2 + v356;
        *((_QWORD *)v357 + 4) = *((_QWORD *)v358 + 4);
        v359 = *((_OWORD *)v358 + 1);
        *(_OWORD *)v357 = *(_OWORD *)v358;
        *((_OWORD *)v357 + 1) = v359;
        *(_QWORD *)((char *)a1 + v118[8]) = *(_QWORD *)((char *)a2 + v118[8]);
        *(_OWORD *)((char *)a1 + v118[9]) = *(_OWORD *)((char *)a2 + v118[9]);
        v360 = v118[10];
        v361 = (char *)a1 + v360;
        v362 = (char *)a2 + v360;
        v363 = (int *)type metadata accessor for ParagraphComponentModel();
        if (__swift_getEnumTagSinglePayload((uint64_t)v362, 1, (uint64_t)v363))
        {
          v364 = __swift_instantiateConcreteTypeFromMangledName(qword_255331BC0);
          memcpy(v361, v362, *(_QWORD *)(*(_QWORD *)(v364 - 8) + 64));
        }
        else
        {
          if (__swift_getEnumTagSinglePayload((uint64_t)v362, 1, v122))
          {
            v469 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
            memcpy(v361, v362, *(_QWORD *)(*(_QWORD *)(v469 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 32))(v361, v362, v122);
            __swift_storeEnumTagSinglePayload((uint64_t)v361, 0, 1, v122);
          }
          v694 = v363[5];
          v695 = &v361[v694];
          v696 = &v362[v694];
          v697 = *((_OWORD *)v696 + 1);
          *(_OWORD *)v695 = *(_OWORD *)v696;
          *((_OWORD *)v695 + 1) = v697;
          *((_QWORD *)v695 + 4) = *((_QWORD *)v696 + 4);
          *(_OWORD *)&v361[v363[6]] = *(_OWORD *)&v362[v363[6]];
          v361[v363[7]] = v362[v363[7]];
          __swift_storeEnumTagSinglePayload((uint64_t)v361, 0, 1, (uint64_t)v363);
        }
        *(_OWORD *)((char *)a1 + v118[11]) = *(_OWORD *)((char *)a2 + v118[11]);
        v698 = v118[12];
        v631 = (char *)a1 + v698;
        v632 = (char *)a2 + v698;
        v633 = type metadata accessor for ContentDescriptor();
        if (__swift_getEnumTagSinglePayload((uint64_t)v632, 1, v633))
          goto LABEL_340;
        *v631 = *v632;
        memcpy(v631 + 8, v632 + 8, 0x69uLL);
        v699 = *(int *)(v633 + 24);
        v644 = &v631[v699];
        v645 = &v632[v699];
        v646 = sub_21D7BF754();
        if (__swift_getEnumTagSinglePayload((uint64_t)v645, 1, v646))
          goto LABEL_342;
        goto LABEL_343;
      case 0x33u:
        v124 = sub_21D7C4668();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v124))
        {
          v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v124 - 8) + 32))(a1, a2, v124);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v124);
        }
        v365 = (int *)type metadata accessor for TVMovieDetailHeaderLockup();
        v366 = v365[5];
        v367 = (char *)a1 + v366;
        v368 = (char *)a2 + v366;
        v369 = *((_OWORD *)v368 + 1);
        *(_OWORD *)v367 = *(_OWORD *)v368;
        *((_OWORD *)v367 + 1) = v369;
        *((_QWORD *)v367 + 4) = *((_QWORD *)v368 + 4);
        v370 = v365[6];
        v371 = (char *)a1 + v370;
        v372 = (char *)a2 + v370;
        v373 = *((_OWORD *)v372 + 1);
        *(_OWORD *)v371 = *(_OWORD *)v372;
        *((_OWORD *)v371 + 1) = v373;
        *((_QWORD *)v371 + 4) = *((_QWORD *)v372 + 4);
        *(_OWORD *)((char *)a1 + v365[7]) = *(_OWORD *)((char *)a2 + v365[7]);
        *(_OWORD *)((char *)a1 + v365[8]) = *(_OWORD *)((char *)a2 + v365[8]);
        *(_QWORD *)((char *)a1 + v365[9]) = *(_QWORD *)((char *)a2 + v365[9]);
        v374 = v365[10];
        v375 = (_OWORD *)((char *)a1 + v374);
        v376 = (_OWORD *)((char *)a2 + v374);
        v377 = type metadata accessor for ModalPresentationDescriptor();
        if (__swift_getEnumTagSinglePayload((uint64_t)v376, 1, v377))
        {
          v378 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553303E8);
          memcpy(v375, v376, *(_QWORD *)(*(_QWORD *)(v378 - 8) + 64));
        }
        else
        {
          v470 = v376[1];
          *v375 = *v376;
          v375[1] = v470;
          v375[2] = v376[2];
          *((_BYTE *)v375 + 48) = *((_BYTE *)v376 + 48);
          *((_QWORD *)v375 + 7) = *((_QWORD *)v376 + 7);
          *((_BYTE *)v375 + 64) = *((_BYTE *)v376 + 64);
          v471 = *(int *)(v377 + 40);
          v472 = (char *)v375 + v471;
          v473 = (char *)v376 + v471;
          v474 = sub_21D7C4314();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v474 - 8) + 32))(v472, v473, v474);
          __swift_storeEnumTagSinglePayload((uint64_t)v375, 0, 1, v377);
        }
        v475 = v365[11];
        v476 = (char *)a1 + v475;
        v477 = (char *)a2 + v475;
        v478 = type metadata accessor for Artwork();
        if (__swift_getEnumTagSinglePayload((uint64_t)v477, 1, v478))
        {
          v479 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
          memcpy(v476, v477, *(_QWORD *)(*(_QWORD *)(v479 - 8) + 64));
        }
        else
        {
          v535 = sub_21D7C3840();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v535 - 8) + 32))(v476, v477, v535);
          v536 = *(int *)(v478 + 20);
          v537 = &v476[v536];
          v538 = &v477[v536];
          v539 = sub_21D7C3804();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v539 - 8) + 32))(v537, v538, v539);
          __swift_storeEnumTagSinglePayload((uint64_t)v476, 0, 1, v478);
        }
        *(_OWORD *)((char *)a1 + v365[12]) = *(_OWORD *)((char *)a2 + v365[12]);
        *(_QWORD *)((char *)a1 + v365[13]) = *(_QWORD *)((char *)a2 + v365[13]);
        *((_BYTE *)a1 + v365[14]) = *((_BYTE *)a2 + v365[14]);
        v540 = v365[15];
        v541 = (char *)a1 + v540;
        v542 = (char *)a2 + v540;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v540, 1, v478))
        {
          v543 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
          memcpy(v541, v542, *(_QWORD *)(*(_QWORD *)(v543 - 8) + 64));
        }
        else
        {
          v581 = sub_21D7C3840();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v581 - 8) + 32))(v541, v542, v581);
          v582 = *(int *)(v478 + 20);
          v583 = &v541[v582];
          v584 = &v542[v582];
          v585 = sub_21D7C3804();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v585 - 8) + 32))(v583, v584, v585);
          __swift_storeEnumTagSinglePayload((uint64_t)v541, 0, 1, v478);
        }
        *(_OWORD *)((char *)a1 + v365[16]) = *(_OWORD *)((char *)a2 + v365[16]);
        v586 = v365[17];
        v587 = (char *)a1 + v586;
        v588 = (char *)a2 + v586;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v586, 1, v478))
        {
          v589 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
          memcpy(v587, v588, *(_QWORD *)(*(_QWORD *)(v589 - 8) + 64));
        }
        else
        {
          v625 = sub_21D7C3840();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v625 - 8) + 32))(v587, v588, v625);
          v626 = *(int *)(v478 + 20);
          v627 = &v587[v626];
          v628 = &v588[v626];
          v629 = sub_21D7C3804();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v629 - 8) + 32))(v627, v628, v629);
          __swift_storeEnumTagSinglePayload((uint64_t)v587, 0, 1, v478);
        }
        v630 = v365[18];
        v631 = (char *)a1 + v630;
        v632 = (char *)a2 + v630;
        v633 = type metadata accessor for ContentDescriptor();
        if (__swift_getEnumTagSinglePayload((uint64_t)v632, 1, v633))
        {
LABEL_340:
          v817 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
          memcpy(v631, v632, *(_QWORD *)(*(_QWORD *)(v817 - 8) + 64));
        }
        else
        {
          *v631 = *v632;
          memcpy(v631 + 8, v632 + 8, 0x69uLL);
          v643 = *(int *)(v633 + 24);
          v644 = &v631[v643];
          v645 = &v632[v643];
          v646 = sub_21D7BF754();
          if (__swift_getEnumTagSinglePayload((uint64_t)v645, 1, v646))
          {
LABEL_342:
            v819 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
            memcpy(v644, v645, *(_QWORD *)(*(_QWORD *)(v819 - 8) + 64));
          }
          else
          {
LABEL_343:
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v646 - 8) + 32))(v644, v645, v646);
            __swift_storeEnumTagSinglePayload((uint64_t)v644, 0, 1, v646);
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v631, 0, 1, v633);
        }
        goto LABEL_397;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  v926 = *(int *)(a3 + 36);
  v927 = (_QWORD *)((char *)a1 + v926);
  v928 = (_QWORD *)((char *)a2 + v926);
  v930 = *v928;
  v929 = v928[1];
  *v927 = v930;
  v927[1] = v929;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21CF34958()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21CF34964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = type metadata accessor for SectionContent();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 36) + 8);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_21CF349E0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21CF349EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = type metadata accessor for SectionContent();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 36) + 8) = (a2 - 1);
  return result;
}

uint64_t OUTLINED_FUNCTION_3_27()
{
  return sub_21D7C5D84();
}

uint64_t OUTLINED_FUNCTION_4_23(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 - 152))(a1, *(_QWORD *)(v1 - 144));
}

uint64_t OUTLINED_FUNCTION_6_25()
{
  return 0x7463757274736E69;
}

uint64_t OUTLINED_FUNCTION_8_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, a2, v2);
}

void OUTLINED_FUNCTION_13_10()
{
  type metadata accessor for PageChangeInstruction.InvalidationRulesChange();
}

uint64_t OUTLINED_FUNCTION_14_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  return type metadata accessor for PageChangeInstruction.Instruction(0, v4, v5, a4);
}

uint64_t OUTLINED_FUNCTION_15_11()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 120) + 8))(v0, *(_QWORD *)(v1 - 112));
}

uint64_t OUTLINED_FUNCTION_17_9@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_19_9()
{
  return sub_21D7C4098();
}

uint64_t OUTLINED_FUNCTION_21_10()
{
  uint64_t v0;
  uint64_t v1;

  **(_QWORD **)(v1 - 160) = v0;
  return 0;
}

uint64_t OUTLINED_FUNCTION_22_8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, _QWORD);
  uint64_t v2;

  return v1(v0, *(_QWORD *)(v2 - 152));
}

void sub_21CF34B10()
{
  type metadata accessor for GridView();
}

uint64_t sub_21CF34B80(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 *v7;
  uint64_t v8;
  _QWORD *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t result;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)(v2 + a1[19]) = 1;
  v10 = (_QWORD *)(v2 + a1[20]);
  *v10 = 0;
  v10[1] = 0;
  v11 = v2 + a1[22];
  *(_QWORD *)v11 = swift_getKeyPath();
  *(_BYTE *)(v11 + 8) = 0;
  v12 = (uint64_t *)(v2 + a1[23]);
  *v12 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B60);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v2, v8, v1);
  sub_21CDD3670(v7, v2 + a1[15]);
  v13 = v2 + a1[16];
  *(_QWORD *)v13 = v6;
  *(_QWORD *)(v13 + 8) = v5;
  *(_QWORD *)(v13 + 16) = v4;
  *(_BYTE *)(v13 + 24) = v17;
  v14 = (_QWORD *)(v2 + a1[18]);
  *v14 = v3;
  v14[1] = v16;
  result = sub_21CF3A62C(v18, v2 + a1[17]);
  *(_QWORD *)(v2 + a1[21]) = v19;
  return result;
}

uint64_t sub_21CF34C78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t result;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a5, a1);
  result = type metadata accessor for GridItemDescriptor(0, a3, a4, v9);
  *(_QWORD *)(a5 + *(int *)(result + 36)) = a2;
  return result;
}

uint64_t sub_21CF34CD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t *v11;
  uint64_t v12;
  uint64_t result;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(a5, v5, a4);
  v11 = (uint64_t *)(a5 + *(int *)(a4 + 80));
  v12 = *v11;
  swift_retain();
  result = sub_21CDBD660(v12);
  *v11 = a2;
  v11[1] = a3;
  *(_QWORD *)(a5 + *(int *)(a4 + 76)) = a1;
  return result;
}

void sub_21CF34D5C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[27];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v16 = a2;
  v15 = sub_21D7C1E54();
  v14[25] = *(_QWORD *)(v15 - 8);
  v3 = MEMORY[0x24BDAC7A8](v15);
  v14[23] = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v14[22] = (char *)v14 - v5;
  v18 = sub_21D7C1E6C();
  v14[26] = *(_QWORD *)(v18 - 8);
  v6 = MEMORY[0x24BDAC7A8](v18);
  v14[24] = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[20] = *(a1 - 1);
  MEMORY[0x24BDAC7A8](v6);
  v14[17] = v8;
  v14[19] = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1[2];
  v9 = v17;
  v10 = a1[4];
  sub_21D7C08B8();
  v11 = a1[3];
  v12 = a1[5];
  v13 = a1[6];
  v19 = v9;
  v20 = v11;
  v14[14] = v11;
  v21 = v10;
  v22 = v12;
  v14[16] = v12;
  v14[15] = v13;
  v23 = v13;
  type metadata accessor for GridView.HorizontalSectionItemView();
}

void sub_21CF34EF8(uint64_t a1)
{
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t OpaqueTypeConformance2;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _OWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(uint64_t, uint64_t);
  _BYTE v101[144];

  v6 = sub_21D7C1344();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66620);
  v7 = sub_21D7C1344();
  v8 = MEMORY[0x2207938C0](MEMORY[0x24BEC6630], v1);
  v9 = MEMORY[0x24BEE23D0];
  *(_QWORD *)(v4 - 176) = v1;
  *(_QWORD *)(v4 - 168) = v9;
  *(_QWORD *)(v4 - 160) = v7;
  *(_QWORD *)(v4 - 152) = v8;
  *(_QWORD *)(v4 - 144) = MEMORY[0x24BEE23D8];
  v10 = sub_21D7C2BC8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66690);
  v11 = sub_21D7C1344();
  v12 = MEMORY[0x2207938C0](&unk_21D7D14D8, a1);
  v13 = MEMORY[0x24BDEBEE0];
  *(_QWORD *)(v4 - 192) = v12;
  *(_QWORD *)(v4 - 184) = v13;
  v14 = MEMORY[0x24BDED308];
  v15 = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v6, v4 - 192);
  sub_21CDD363C(&qword_253F66618, &qword_253F66620);
  *(_QWORD *)(v4 - 208) = v15;
  *(_QWORD *)(v4 - 200) = v16;
  *(_QWORD *)(v4 - 216) = MEMORY[0x2207938C0](v14, v7, v4 - 208);
  v17 = MEMORY[0x2207938C0](MEMORY[0x24BDF4A08], v10, v4 - 216);
  sub_21CDD363C(&qword_253F66688, &qword_253F66690);
  *(_QWORD *)(v4 - 232) = v17;
  *(_QWORD *)(v4 - 224) = v18;
  MEMORY[0x2207938C0](v14, v11, v4 - 232);
  v19 = sub_21D7C2D9C();
  v20 = MEMORY[0x2207938C0](MEMORY[0x24BDF5198], v19);
  *(_QWORD *)(v4 - 176) = v19;
  *(_QWORD *)(v4 - 168) = v20;
  MEMORY[0x220793860](255, v4 - 176, MEMORY[0x24BDF2D58], 0);
  v21 = sub_21D7C1344();
  v22 = sub_21D7C1344();
  v23 = sub_21D7C1344();
  v24 = sub_21D7C1344();
  *(_QWORD *)(v4 - 176) = v19;
  *(_QWORD *)(v4 - 168) = v20;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v26 = MEMORY[0x24BDECC60];
  *(_QWORD *)(v4 - 248) = OpaqueTypeConformance2;
  *(_QWORD *)(v4 - 240) = v26;
  *(_QWORD *)(v4 - 264) = MEMORY[0x2207938C0](v14, v21, v4 - 248);
  *(_QWORD *)(v4 - 256) = v26;
  *(_QWORD *)(v4 - 280) = MEMORY[0x2207938C0](v14, v22, v4 - 264);
  *(_QWORD *)(v4 - 272) = v26;
  *(_QWORD *)(v4 - 296) = MEMORY[0x2207938C0](v14, v23, v4 - 280);
  *(_QWORD *)(v4 - 288) = v26;
  MEMORY[0x2207938C0](v14, v24, v4 - 296);
  v27 = sub_21D7C0D68();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66AA8);
  v28 = sub_21D7C1344();
  v29 = MEMORY[0x2207938C0](MEMORY[0x24BDEB238], v27);
  sub_21CDD363C(&qword_253F66AA0, &qword_253F66AA8);
  *(_QWORD *)(v4 - 312) = v29;
  *(_QWORD *)(v4 - 304) = v30;
  v31 = MEMORY[0x2207938C0](v14, v28, v4 - 312);
  *(_QWORD *)(v4 - 176) = v28;
  *(_QWORD *)(v4 - 168) = v31;
  v32 = MEMORY[0x220793860](255, v4 - 176, MEMORY[0x24BDF2D28], 0);
  *(_QWORD *)(v4 - 176) = v28;
  *(_QWORD *)(v4 - 168) = v31;
  v33 = swift_getOpaqueTypeConformance2();
  *(_QWORD *)(v4 - 560) = v32;
  *(_QWORD *)(v4 - 568) = v33;
  v34 = sub_21D7C1410();
  v35 = MEMORY[0x2207938C0](MEMORY[0x24BDEDA10], v34);
  *(_QWORD *)(v4 - 552) = v34;
  v36 = *(_QWORD *)(v4 - 344);
  *(_QWORD *)(v4 - 176) = v34;
  *(_QWORD *)(v4 - 168) = v36;
  v37 = MEMORY[0x24BDF10F0];
  *(_QWORD *)(v4 - 544) = v35;
  *(_QWORD *)(v4 - 160) = v35;
  *(_QWORD *)(v4 - 152) = v37;
  v38 = MEMORY[0x220793860](0, v4 - 176, MEMORY[0x24BDF3000], 0);
  *(_QWORD *)(v4 - 528) = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  *(_QWORD *)(v4 - 536) = &v101[-v39];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66D28);
  *(_QWORD *)(v4 - 512) = v38;
  v40 = sub_21D7C1344();
  *(_QWORD *)(v4 - 488) = v40;
  *(_QWORD *)(v4 - 496) = *(_QWORD *)(v40 - 8);
  v41 = MEMORY[0x24BDAC7A8](v40);
  *(_QWORD *)(v4 - 520) = &v101[-((v42 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v41);
  *(_QWORD *)(v4 - 504) = &v101[-v43];
  v44 = sub_21D7C2C88();
  *(_QWORD *)(v4 - 576) = v44;
  *(_QWORD *)(v4 - 592) = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v46 = &v101[-((v45 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v47 = sub_21D7C2C94();
  MEMORY[0x24BDAC7A8](v47);
  *(_QWORD *)(v4 - 584) = &v101[-((v48 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v49 = *(_QWORD *)(v4 - 352);
  *(_QWORD *)(v4 - 448) = v3;
  v50 = sub_21D7C55C8();
  v51 = *(_QWORD *)v49;
  v52 = *(_QWORD *)(v49 + 8);
  v53 = *(_QWORD *)(v49 + 16);
  v54 = v49 + v2[27];
  v55 = *(_QWORD *)v54;
  v56 = *(_BYTE *)(v54 + 8);
  v57 = *(_BYTE *)(v49 + 24);
  sub_21CE5289C(*(_QWORD *)v54, v56);
  sub_21D4B6D1C();
  sub_21CE52B54(v55, v56);
  v58 = v49 + v2[22];
  v59 = *(double *)(v58 + 8);
  v60 = *(double *)(v58 + 24);
  v61 = *(double *)(v49 + v2[21]);
  *(_QWORD *)(v4 - 424) = v2;
  sub_21D229C80(v50, v51, v52, v53, v57);
  if (__OFSUB__(v50, 1))
  {
    __break(1u);
  }
  else
  {
    v63 = v62;
    v64 = v61 * (double)(v50 - 1) + v62 * (double)v50;
    sub_21CE5289C(v55, v56);
    v65 = sub_21D4B6D1C();
    sub_21CE52B54(v55, v56);
    if (v59 > v60)
      v66 = v59;
    else
      v66 = v60;
    v67 = v65 - (v66 + v66) <= v64;
    *v46 = xmmword_21D7D10C0;
    (*(void (**)(_OWORD *, _QWORD, _QWORD))(*(_QWORD *)(v4 - 592) + 104))(v46, *MEMORY[0x24BDF4D40], *(_QWORD *)(v4 - 576));
    sub_21D7C2D18();
    v68 = *(_QWORD *)(v4 - 584);
    sub_21D7C2CA0();
    v69 = *(_QWORD *)(v4 - 352);
    if (*(_QWORD *)(v69 + 32) >= v50)
      v70 = v50;
    else
      v70 = *(_QWORD *)(v69 + 32);
    sub_21CF358B8(v68, v70);
    v72 = v71;
    v73 = *(_QWORD *)(v4 - 432);
    v74 = *(_QWORD *)(v4 - 440);
    v75 = *(_QWORD *)(v4 - 424);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 16))(v74, v69, v75);
    v76 = (*(unsigned __int8 *)(v73 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
    v77 = v76 + *(_QWORD *)(v4 - 456);
    v78 = (v77 + 7) & 0xFFFFFFFFFFFFFFF8;
    v79 = (v77 + 23) & 0xFFFFFFFFFFFFFFF8;
    v80 = (char *)swift_allocObject();
    v81 = *(_QWORD *)(v4 - 480);
    *((_QWORD *)v80 + 2) = *(_QWORD *)(v4 - 360);
    *((_QWORD *)v80 + 3) = v81;
    v82 = *(_QWORD *)(v4 - 464);
    *((_QWORD *)v80 + 4) = *(_QWORD *)(v4 - 448);
    *((_QWORD *)v80 + 5) = v82;
    *((_QWORD *)v80 + 6) = *(_QWORD *)(v4 - 472);
    *((_QWORD *)v80 + 7) = v72;
    (*(void (**)(char *, uint64_t, uint64_t))(v73 + 32))(&v80[v76], v74, v75);
    v83 = &v80[v78];
    *(_QWORD *)v83 = v50;
    v83[8] = v67;
    *(double *)&v80[v79] = v63;
    swift_checkMetadataState();
    *(_QWORD *)(v4 - 176) = sub_21D7C1404();
    *(_QWORD *)(v4 - 168) = v84;
    v85 = *(_QWORD *)(v4 - 416);
    sub_21D7C1E48();
    v86 = *(_QWORD *)(v4 - 392);
    v87 = *(_QWORD *)(v4 - 376);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v86 + 16))(*(_QWORD *)(v4 - 408), v85, v87);
    v88 = *(_QWORD *)(v4 - 400);
    sub_21D7C1E60();
    (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v85, v87);
    v89 = swift_checkMetadataState();
    v90 = *(_QWORD *)(v4 - 536);
    v91 = *(_QWORD *)(v4 - 344);
    v92 = *(_QWORD *)(v4 - 544);
    v93 = MEMORY[0x24BDF10F0];
    sub_21D7C25C8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 384) + 8))(v88, v91);
    swift_release();
    swift_getKeyPath();
    *(double *)(v4 - 320) = v63;
    *(_QWORD *)(v4 - 176) = v89;
    *(_QWORD *)(v4 - 168) = v91;
    *(_QWORD *)(v4 - 160) = v92;
    *(_QWORD *)(v4 - 152) = v93;
    v94 = swift_getOpaqueTypeConformance2();
    v95 = *(_QWORD *)(v4 - 520);
    v96 = *(_QWORD *)(v4 - 512);
    sub_21D7C234C();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 528) + 8))(v90, v96);
    sub_21CDD363C(&qword_253F66D20, &qword_253F66D28);
    *(_QWORD *)(v4 - 336) = v94;
    *(_QWORD *)(v4 - 328) = v97;
    v98 = *(_QWORD *)(v4 - 488);
    MEMORY[0x2207938C0](MEMORY[0x24BDED308], v98, v4 - 336);
    v99 = *(_QWORD *)(v4 - 504);
    sub_21CDBDBB4(v95, v98, v99);
    v100 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 496) + 8);
    v100(v95, v98);
    sub_21CDB6D80(v99, v98, *(_QWORD *)(v4 - 368));
    v100(v99, v98);
  }
}

void sub_21CF358B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    if (a2)
    {
      v3 = sub_21D7C2C94();
      OUTLINED_FUNCTION_48_5();
      v4 = sub_21D7C5370();
      *(_QWORD *)(v4 + 16) = a2;
      v5 = *(_QWORD *)(v3 - 8);
      v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      OUTLINED_FUNCTION_59_5(v4 + v6);
      v7 = a2 - 1;
      if (a2 != 1)
      {
        v8 = *(_QWORD *)(v5 + 72);
        v9 = v4 + v8 + v6;
        do
        {
          OUTLINED_FUNCTION_59_5(v9);
          v9 += v8;
          --v7;
        }
        while (v7);
      }
    }
    v10 = sub_21D7C2C94();
    OUTLINED_FUNCTION_46(v10);
  }
}

void sub_21CF35978(void *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  id v8;

  sub_21CF3C6E8(a2);
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    if (a2)
    {
      *v4 = a1;
      if (a2 != 1)
      {
        v4[1] = a1;
        v5 = a2 - 2;
        if (v5)
        {
          v6 = v4 + 2;
          do
          {
            *v6++ = a1;
            v7 = a1;
            --v5;
          }
          while (v5);
        }
        v8 = a1;
      }
    }
    else
    {

    }
    sub_21D7C5334();
    OUTLINED_FUNCTION_54_1();
  }
}

void sub_21CF359F8(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, int a4@<W4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[13];
  int v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v15[8] = a6;
  v15[9] = a7;
  v15[7] = a5;
  v16 = a4;
  v15[11] = a2;
  v15[12] = a3;
  v15[10] = a1;
  v20 = a8;
  v15[6] = a10;
  v15[5] = a9;
  v13 = sub_21D7C1D7C();
  v18 = *(_QWORD *)(v13 - 8);
  v19 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v15 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21D7C08B8();
  v21 = a5;
  v22 = a6;
  v23 = a7;
  v24 = a9;
  v25 = a10;
  type metadata accessor for GridView.HorizontalSectionItemView();
}

uint64_t sub_21CF35AC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t OpaqueTypeConformance2;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(_BYTE *, uint64_t);
  _BYTE v49[112];

  v6 = sub_21D7C1344();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66620);
  v7 = sub_21D7C1344();
  v8 = MEMORY[0x2207938C0](MEMORY[0x24BEC6630], v2);
  v9 = MEMORY[0x24BEE23D0];
  *(_QWORD *)(v3 - 144) = v2;
  *(_QWORD *)(v3 - 136) = v9;
  *(_QWORD *)(v3 - 128) = v7;
  *(_QWORD *)(v3 - 120) = v8;
  *(_QWORD *)(v3 - 112) = MEMORY[0x24BEE23D8];
  v10 = sub_21D7C2BC8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66690);
  v11 = sub_21D7C1344();
  v12 = MEMORY[0x2207938C0](&unk_21D7D14D8, a1);
  v13 = MEMORY[0x24BDEBEE0];
  *(_QWORD *)(v3 - 160) = v12;
  *(_QWORD *)(v3 - 152) = v13;
  v14 = MEMORY[0x24BDED308];
  v15 = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v6, v3 - 160);
  sub_21CDD363C(&qword_253F66618, &qword_253F66620);
  *(_QWORD *)(v3 - 176) = v15;
  *(_QWORD *)(v3 - 168) = v16;
  *(_QWORD *)(v3 - 184) = MEMORY[0x2207938C0](v14, v7, v3 - 176);
  v17 = MEMORY[0x2207938C0](MEMORY[0x24BDF4A08], v10, v3 - 184);
  sub_21CDD363C(&qword_253F66688, &qword_253F66690);
  *(_QWORD *)(v3 - 200) = v17;
  *(_QWORD *)(v3 - 192) = v18;
  MEMORY[0x2207938C0](v14, v11, v3 - 200);
  v19 = sub_21D7C2D9C();
  v20 = MEMORY[0x2207938C0](MEMORY[0x24BDF5198], v19);
  *(_QWORD *)(v3 - 144) = v19;
  *(_QWORD *)(v3 - 136) = v20;
  MEMORY[0x220793860](255, v3 - 144, MEMORY[0x24BDF2D58], 0);
  v21 = sub_21D7C1344();
  v22 = sub_21D7C1344();
  v23 = sub_21D7C1344();
  v24 = sub_21D7C1344();
  *(_QWORD *)(v3 - 144) = v19;
  *(_QWORD *)(v3 - 136) = v20;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v26 = MEMORY[0x24BDECC60];
  *(_QWORD *)(v3 - 216) = OpaqueTypeConformance2;
  *(_QWORD *)(v3 - 208) = v26;
  *(_QWORD *)(v3 - 232) = MEMORY[0x2207938C0](v14, v21, v3 - 216);
  *(_QWORD *)(v3 - 224) = v26;
  *(_QWORD *)(v3 - 248) = MEMORY[0x2207938C0](v14, v22, v3 - 232);
  *(_QWORD *)(v3 - 240) = v26;
  *(_QWORD *)(v1 + 264) = MEMORY[0x2207938C0](v14, v23, v3 - 248);
  *(_QWORD *)(v1 + 272) = v26;
  *(_QWORD *)(v1 + 16) = v24;
  *(_QWORD *)(v1 + 8) = MEMORY[0x2207938C0](v14, v24, v1 + 264);
  v27 = sub_21D7C0D68();
  *(_QWORD *)(v1 + 24) = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v29 = &v49[-v28];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66AA8);
  v30 = sub_21D7C1344();
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v32 = &v49[-v31];
  v33 = MEMORY[0x2207938C0](MEMORY[0x24BDEB238], v27);
  sub_21CDD363C(&qword_253F66AA0, &qword_253F66AA8);
  *(_QWORD *)(v1 + 248) = v33;
  *(_QWORD *)(v1 + 256) = v34;
  v35 = MEMORY[0x2207938C0](v14, v30, v1 + 248);
  *(_QWORD *)(v3 - 144) = v30;
  *(_QWORD *)(v3 - 136) = v35;
  v36 = MEMORY[0x220793860](0, v3 - 144, MEMORY[0x24BDF2D28], 0);
  *(_QWORD *)v1 = *(_QWORD *)(v36 - 8);
  v37 = MEMORY[0x24BDAC7A8](v36);
  v39 = &v49[-((v38 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v37);
  v41 = &v49[-v40];
  sub_21D7C1ED8();
  v42 = *(_QWORD *)(v1 + 64);
  *(_QWORD *)(v1 + 160) = *(_QWORD *)(v1 + 56);
  *(_QWORD *)(v1 + 168) = v42;
  v43 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v1 + 176) = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v1 + 184) = v43;
  v44 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)(v1 + 192) = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 200) = v44;
  v45 = *(_QWORD *)(v1 + 96);
  *(_QWORD *)(v1 + 208) = *(_QWORD *)(v1 + 88);
  *(_QWORD *)(v1 + 216) = v45;
  *(_BYTE *)(v1 + 224) = *(_DWORD *)(v1 + 108);
  *(_QWORD *)(v1 + 232) = v4;
  sub_21D7C0D74();
  sub_21D7C2430();
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v1 + 24) + 8))(v29, v27);
  v46 = *(_QWORD *)(v1 + 112);
  sub_21D7C1D70();
  sub_21D7C255C();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 120) + 8))(v46, *(_QWORD *)(v1 + 128));
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v1 + 32) + 8))(v32, v30);
  *(_QWORD *)(v3 - 144) = v30;
  *(_QWORD *)(v3 - 136) = v35;
  swift_getOpaqueTypeConformance2();
  sub_21CDBDBB4((uint64_t)v39, v36, (uint64_t)v41);
  v47 = *(void (**)(_BYTE *, uint64_t))(*(_QWORD *)v1 + 8);
  v47(v39, v36);
  sub_21CDB6D80((uint64_t)v41, v36, *(_QWORD *)(v1 + 136));
  return ((uint64_t (*)(_BYTE *, uint64_t))v47)(v41, v36);
}

void sub_21CF35FB8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[30];
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v16[25] = a6;
  v16[26] = a8;
  v17 = a4;
  v16[28] = a2;
  v16[29] = a3;
  v16[23] = a1;
  v18 = a9;
  v16[24] = a10;
  v14 = sub_21D7C1BA8();
  MEMORY[0x24BDAC7A8](v14);
  v16[27] = (char *)v16 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21D7C08B8();
  v19 = a5;
  v20 = a6;
  v21 = a7;
  v22 = a8;
  v23 = a10;
  type metadata accessor for GridView.HorizontalSectionItemView();
}

void sub_21CF36074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  sub_21D7C1344();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66620);
  v15 = sub_21D7C1344();
  v16 = MEMORY[0x2207938C0](MEMORY[0x24BEC6630], v10);
  v17 = MEMORY[0x24BEE23D0];
  *(_QWORD *)(v13 - 144) = v10;
  *(_QWORD *)(v13 - 136) = v17;
  *(_QWORD *)(v13 - 128) = v15;
  *(_QWORD *)(v13 - 120) = v16;
  *(_QWORD *)(v13 - 112) = MEMORY[0x24BEE23D8];
  v18 = sub_21D7C2BC8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66690);
  v19 = sub_21D7C1344();
  v20 = MEMORY[0x2207938C0](&unk_21D7D14D8, a1);
  v21 = MEMORY[0x24BDEBEE0];
  *(_QWORD *)(v13 - 160) = v20;
  *(_QWORD *)(v13 - 152) = v21;
  v22 = MEMORY[0x24BDED308];
  v23 = MEMORY[0x2207938C0]();
  sub_21CDD363C(&qword_253F66618, &qword_253F66620);
  *(_QWORD *)(v13 - 176) = v23;
  *(_QWORD *)(v13 - 168) = v24;
  *(_QWORD *)(v13 - 184) = MEMORY[0x2207938C0](v22, v15, v13 - 176);
  v25 = MEMORY[0x2207938C0](MEMORY[0x24BDF4A08], v18, v13 - 184);
  sub_21CDD363C(&qword_253F66688, &qword_253F66690);
  *(_QWORD *)(v13 - 200) = v25;
  *(_QWORD *)(v13 - 192) = v26;
  v9[5] = v19;
  v9[4] = MEMORY[0x2207938C0](v22, v19, v13 - 200);
  v27 = sub_21D7C2D9C();
  v9[12] = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v9[7] = (char *)&a9 - v28;
  v29 = MEMORY[0x2207938C0](MEMORY[0x24BDF5198], v27);
  v9[6] = v29;
  *(_QWORD *)(v13 - 144) = v27;
  *(_QWORD *)(v13 - 136) = v29;
  v30 = MEMORY[0x220793860](0, v13 - 144, MEMORY[0x24BDF2D58], 0);
  v9[13] = *(_QWORD *)(v30 - 8);
  v9[9] = v30;
  MEMORY[0x24BDAC7A8](v30);
  v9[2] = (char *)&a9 - v31;
  v32 = sub_21D7C1344();
  v33 = *(_QWORD *)(v32 - 8);
  v9[10] = v32;
  v9[16] = v33;
  MEMORY[0x24BDAC7A8](v32);
  v9[3] = (char *)&a9 - v34;
  v35 = sub_21D7C1344();
  v36 = *(_QWORD *)(v35 - 8);
  v9[14] = v35;
  v9[19] = v36;
  MEMORY[0x24BDAC7A8](v35);
  v9[8] = (char *)&a9 - v37;
  v38 = sub_21D7C1344();
  v9[21] = *(_QWORD *)(v38 - 8);
  v9[17] = v38;
  MEMORY[0x24BDAC7A8](v38);
  v9[11] = (char *)&a9 - v39;
  v40 = sub_21D7C1344();
  v9[20] = v40;
  v9[22] = *(_QWORD *)(v40 - 8);
  v41 = MEMORY[0x24BDAC7A8](v40);
  v9[15] = (char *)&a9 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v41);
  v9[18] = (char *)&a9 - v43;
  sub_21D7C4C20();
  v9[1] = sub_21D7C183C();
  v45 = v9[25];
  v44 = v9[26];
  *(_QWORD *)(v13 - 144) = v12;
  *(_QWORD *)(v13 - 136) = v45;
  *(_QWORD *)(v13 - 128) = v11;
  *(_QWORD *)(v13 - 120) = v44;
  *(_QWORD *)(v13 - 112) = v9[24];
  type metadata accessor for GridView.ScrollingHorizontalSectionView();
}

uint64_t sub_21CF363E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t OpaqueTypeConformance2;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);

  v9 = *(_QWORD *)(v0 + 224);
  *(_QWORD *)(v0 + 272) = v6;
  *(_QWORD *)(v0 + 280) = v2;
  *(_QWORD *)(v0 + 288) = v5;
  *(_QWORD *)(v0 + 296) = v1;
  *(_QWORD *)(v0 + 304) = v4;
  *(_QWORD *)(v0 + 312) = v9;
  *(_QWORD *)(v0 + 320) = *(_QWORD *)(v0 + 232);
  *(_BYTE *)(v0 + 328) = *(_DWORD *)(v0 + 244);
  *(_QWORD *)(v0 + 336) = v8;
  sub_21CF3A52C();
  v10 = *(_QWORD *)(v0 + 56);
  sub_21D7C2D90();
  v11 = *(_QWORD *)(v0 + 16);
  v12 = *(_QWORD *)(v0 + 48);
  sub_21D7C2568();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 96) + 8))(v10, v3);
  sub_21D7C1F20();
  *(_QWORD *)(v7 - 144) = v3;
  *(_QWORD *)(v7 - 136) = v12;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v14 = *(_QWORD *)(v0 + 24);
  v15 = *(_QWORD *)(v0 + 72);
  sub_21D7C2760();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 104) + 8))(v11, v15);
  sub_21D7C1F38();
  v16 = MEMORY[0x24BDECC60];
  *(_QWORD *)(v7 - 216) = OpaqueTypeConformance2;
  *(_QWORD *)(v7 - 208) = v16;
  v17 = MEMORY[0x24BDED308];
  v18 = *(_QWORD *)(v0 + 80);
  v19 = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v18, v7 - 216);
  v20 = *(_QWORD *)(v0 + 64);
  sub_21D7C2760();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 128) + 8))(v14, v18);
  sub_21D7C1F08();
  *(_QWORD *)(v7 - 232) = v19;
  *(_QWORD *)(v7 - 224) = v16;
  v21 = *(_QWORD *)(v0 + 112);
  v22 = MEMORY[0x2207938C0](v17, v21, v7 - 232);
  v23 = *(_QWORD *)(v0 + 88);
  sub_21D7C2760();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 152) + 8))(v20, v21);
  sub_21D7C1F14();
  *(_QWORD *)(v7 - 248) = v22;
  *(_QWORD *)(v7 - 240) = v16;
  v24 = *(_QWORD *)(v0 + 136);
  v25 = MEMORY[0x2207938C0](v17, v24, v7 - 248);
  v26 = *(_QWORD *)(v0 + 120);
  sub_21D7C2760();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 168) + 8))(v23, v24);
  *(_QWORD *)(v0 + 344) = v25;
  *(_QWORD *)(v0 + 352) = v16;
  v27 = *(_QWORD *)(v0 + 160);
  MEMORY[0x2207938C0](v17, v27, v0 + 344);
  v28 = *(_QWORD *)(v0 + 144);
  sub_21CDBDBB4(v26, v27, v28);
  v29 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 176) + 8);
  v29(v26, v27);
  sub_21CDB6D80(v28, v27, *(_QWORD *)(v0 + 248));
  return ((uint64_t (*)(uint64_t, uint64_t))v29)(v28, v27);
}

void sub_21CF366C0()
{
  type metadata accessor for GridView.ScrollingHorizontalSectionView();
}

void sub_21CF36734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)(v14 - 376) = *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v14 - 384) = (char *)&a9 - v15;
  v16 = sub_21D7C08B8();
  *(_QWORD *)(v14 - 304) = v16;
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v14 - 248) = (char *)&a9 - v17;
  *(_QWORD *)(v14 - 144) = v13;
  *(_QWORD *)(v14 - 136) = v9;
  *(_QWORD *)(v14 - 128) = v12;
  *(_QWORD *)(v14 - 120) = v11;
  *(_QWORD *)(v14 - 112) = v10;
  type metadata accessor for GridView.HorizontalSectionItemView();
}

uint64_t sub_21CF367DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v47;
  _BYTE v48[96];

  *(_QWORD *)(v9 - 352) = a1;
  *(_QWORD *)(v9 - 360) = sub_21D7C1344();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66620);
  v11 = sub_21D7C1344();
  *(_QWORD *)(v9 - 344) = v11;
  v12 = MEMORY[0x2207938C0](MEMORY[0x24BEC6630], v3);
  *(_QWORD *)(v9 - 312) = v12;
  v13 = MEMORY[0x24BEE23D0];
  *(_QWORD *)(v9 - 144) = v3;
  *(_QWORD *)(v9 - 136) = v13;
  *(_QWORD *)(v9 - 128) = v11;
  *(_QWORD *)(v9 - 120) = v12;
  *(_QWORD *)(v9 - 112) = MEMORY[0x24BEE23D8];
  v14 = sub_21D7C2BC8();
  v15 = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v9 - 320) = v14;
  *(_QWORD *)(v9 - 272) = v15;
  MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v9 - 368) = &v48[-v16];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66690);
  v17 = sub_21D7C1344();
  *(_QWORD *)(v9 - 328) = v17;
  *(_QWORD *)(v9 - 264) = *(_QWORD *)(v17 - 8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v9 - 336) = &v48[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v9 - 280) = &v48[-v20];
  v21 = v2;
  *(_QWORD *)(v9 - 392) = v2;
  *(_QWORD *)(v9 - 416) = v8;
  sub_21D7C55A4();
  v22 = *(_QWORD *)(v9 - 400);
  *(_QWORD *)(v9 - 240) = v7;
  *(_QWORD *)(v9 - 232) = v22;
  *(_QWORD *)(v9 - 224) = v8;
  *(_QWORD *)(v9 - 216) = v1;
  *(_QWORD *)(v9 - 208) = v6;
  *(_QWORD *)(v9 - 408) = swift_getKeyPath();
  v23 = v4;
  *(_QWORD *)(v9 - 424) = v4;
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v25 = *(_QWORD *)(v9 - 384);
  v26 = v5;
  v24(v25, v21, v5);
  v27 = (*(unsigned __int8 *)(v23 + 80) + 65) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v28 = (*(_QWORD *)(v9 - 376) + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = v7;
  *(_QWORD *)(v29 + 24) = v22;
  v30 = *(_QWORD *)(v9 - 416);
  *(_QWORD *)(v29 + 32) = v30;
  *(_QWORD *)(v29 + 40) = v1;
  v31 = *(_QWORD *)(v9 - 296);
  *(_QWORD *)(v29 + 48) = v6;
  *(_QWORD *)(v29 + 56) = v31;
  *(_BYTE *)(v29 + 64) = *(_DWORD *)(v9 - 284);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 424) + 32))(v29 + v27, v25, v26);
  *(_QWORD *)(v29 + v28) = v10;
  v32 = (_QWORD *)swift_allocObject();
  v32[2] = v7;
  v32[3] = v22;
  v32[4] = v30;
  v32[5] = v1;
  v32[6] = v6;
  v32[7] = sub_21CF3DE3C;
  v32[8] = v29;
  v33 = MEMORY[0x2207938C0](&unk_21D7D14D8, *(_QWORD *)(v9 - 352));
  v34 = MEMORY[0x24BDEBEE0];
  *(_QWORD *)(v9 - 160) = v33;
  *(_QWORD *)(v9 - 152) = v34;
  v35 = MEMORY[0x24BDED308];
  v36 = MEMORY[0x2207938C0](MEMORY[0x24BDED308], *(_QWORD *)(v9 - 360), v9 - 160);
  sub_21CDD363C(&qword_253F66618, &qword_253F66620);
  *(_QWORD *)(v9 - 176) = v36;
  *(_QWORD *)(v9 - 168) = v37;
  v47 = MEMORY[0x2207938C0](v35, *(_QWORD *)(v9 - 344), v9 - 176);
  v38 = *(_QWORD *)(v9 - 368);
  sub_21D7C2BB0();
  sub_21D7C2D78();
  *(_QWORD *)(v9 - 144) = *(_QWORD *)(*(_QWORD *)(v9 - 392) + *(int *)(v26 + 104));
  *(_QWORD *)(v9 - 184) = v47;
  v39 = *(_QWORD *)(v9 - 320);
  v40 = MEMORY[0x2207938C0](MEMORY[0x24BDF4A08], v39, v9 - 184);
  v41 = *(_QWORD *)(v9 - 336);
  sub_21D7C27C0();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 272) + 8))(v38, v39);
  sub_21CDD363C(&qword_253F66688, &qword_253F66690);
  *(_QWORD *)(v9 - 200) = v40;
  *(_QWORD *)(v9 - 192) = v42;
  v43 = *(_QWORD *)(v9 - 328);
  MEMORY[0x2207938C0](v35, v43, v9 - 200);
  v44 = *(_QWORD *)(v9 - 280);
  sub_21CDBDBB4(v41, v43, v44);
  v45 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 264) + 8);
  v45(v41, v43);
  sub_21CDB6D80(v44, v43, *(_QWORD *)(v9 - 256));
  return ((uint64_t (*)(uint64_t, uint64_t))v45)(v44, v43);
}

uint64_t sub_21CF36C80()
{
  swift_getAssociatedTypeWitness();
  return sub_21D7C4380();
}

void sub_21CF36CE8()
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  type metadata accessor for GridView.HorizontalSectionItemView();
}

void sub_21CF36DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)(v13 - 336) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v15 = (char *)&a9 - v14;
  v16 = sub_21D7C1344();
  *(_QWORD *)(v13 - 288) = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v13 - 360) = (char *)&a9 - v17;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66620);
  v18 = sub_21D7C1344();
  *(_QWORD *)(v13 - 304) = v18;
  *(_QWORD *)(v13 - 280) = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v13 - 320) = (char *)&a9 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v13 - 296) = (char *)&a9 - v21;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 16))(v11, *(_QWORD *)(v13 - 352), v12);
  *(_QWORD *)(v13 - 384) = v10;
  sub_21CF3717C(*(_QWORD *)(v13 - 344), *(_DWORD *)(v13 - 308), (uint64_t)v15);
}

uint64_t sub_21CF36F74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);

  sub_21CF3C2BC(v5);
  swift_retain();
  v8 = MEMORY[0x2207938C0](&unk_21D7D14D8, v3);
  sub_21D4DBBD4();
  v9 = *(_QWORD *)(v7 - 360);
  sub_21D7C26D0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 336) + 8))(v0, v3);
  *(_QWORD *)(v7 - 240) = v2;
  *(_QWORD *)(v7 - 232) = v1;
  v10 = *(_QWORD *)(v7 - 400);
  *(_QWORD *)(v7 - 224) = *(_QWORD *)(v7 - 264);
  *(_QWORD *)(v7 - 216) = v10;
  v11 = *(_QWORD *)(v7 - 384);
  *(_QWORD *)(v7 - 208) = *(_QWORD *)(v7 - 392);
  *(_QWORD *)(v7 - 200) = v11;
  *(_QWORD *)(v7 - 192) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5FA30);
  v12 = MEMORY[0x24BDEBEE0];
  *(_QWORD *)(v7 - 160) = v8;
  *(_QWORD *)(v7 - 152) = v12;
  v13 = MEMORY[0x24BDED308];
  v14 = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v6, v7 - 160);
  sub_21CF3C640();
  sub_21D4DBBD4();
  v15 = *(_QWORD *)(v7 - 320);
  sub_21D7C2748();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 288) + 8))(v9, v6);
  sub_21CDD363C(&qword_253F66618, &qword_253F66620);
  *(_QWORD *)(v7 - 176) = v14;
  *(_QWORD *)(v7 - 168) = v16;
  v17 = *(_QWORD *)(v7 - 304);
  MEMORY[0x2207938C0](v13, v17, v7 - 176);
  v18 = *(_QWORD *)(v7 - 296);
  sub_21CDBDBB4(v15, v17, v18);
  v19 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 280) + 8);
  v19(v15, v17);
  sub_21CDB6D80(v18, v17, *(_QWORD *)(v7 - 272));
  return ((uint64_t (*)(uint64_t, uint64_t))v19)(v18, v17);
}

void sub_21CF3717C(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = a1;
  *(_BYTE *)(a3 + 8) = a2;
  type metadata accessor for GridView.HorizontalSectionItemView();
}

uint64_t sub_21CF371E0(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t result;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v8 = v6 + a1[16];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v8, v5, AssociatedTypeWitness);
  *(_QWORD *)(v6 + a1[17]) = v4;
  v11 = (_QWORD *)(v6 + a1[18]);
  *v11 = v3;
  v11[1] = v2;
  *(_QWORD *)(v6 + a1[19]) = v13;
  v12 = (_QWORD *)(v6 + a1[20]);
  *v12 = v14;
  v12[1] = v1;
  return result;
}

void sub_21CF3727C()
{
  type metadata accessor for GridView.ScrollingHorizontalSectionView();
}

uint64_t sub_21CF372B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v4 = (unsigned __int8 *)(v3 + *(int *)(a1 + 96));
  v5 = *v4;
  if (v5 == 3)
  {
    result = 0;
    v5 = 0;
    v7 = 0;
    v2 = 0;
    v8 = 0;
    v9 = 0uLL;
    v10 = 0uLL;
    v11 = 255;
    v12 = 0uLL;
  }
  else
  {
    v7 = v4[24] & 1;
    v14 = *(_OWORD *)(v3 + 40);
    v15 = *(_OWORD *)(v4 + 8);
    v13 = *(_OWORD *)(v3 + 56);
    v8 = *(_BYTE *)(v3 + 72);
    result = swift_getKeyPath();
    v12 = v13;
    v10 = v14;
    v9 = v15;
    v11 = 0;
  }
  *(_QWORD *)v1 = result;
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 32) = v11;
  *(_QWORD *)(v1 + 40) = v5;
  *(_OWORD *)(v1 + 48) = v9;
  *(_QWORD *)(v1 + 64) = v7;
  *(_QWORD *)(v1 + 72) = v2;
  *(_OWORD *)(v1 + 80) = v10;
  *(_OWORD *)(v1 + 96) = v12;
  *(_BYTE *)(v1 + 112) = v8;
  return result;
}

double sub_21CF37360()
{
  double v1;

  sub_21CF373D0();
  sub_21D7C17DC();
  return v1;
}

uint64_t sub_21CF37398()
{
  sub_21CF373D0();
  return sub_21D7C17E8();
}

unint64_t sub_21CF373D0()
{
  unint64_t result;

  result = qword_253F62348[0];
  if (!qword_253F62348[0])
  {
    result = MEMORY[0x2207938C0](&unk_21D7D1178, &type metadata for ItemWidthEnvironmentKey);
    atomic_store(result, qword_253F62348);
  }
  return result;
}

ValueMetadata *type metadata accessor for ItemWidthEnvironmentKey()
{
  return &type metadata for ItemWidthEnvironmentKey;
}

void sub_21CF3741C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11)
{
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_BYTE *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  sub_21CF3C0F0(a6, a9 + 40);
  *(_QWORD *)(a9 + 80) = a7;
  *(_QWORD *)(a9 + 88) = a8;
  *(_OWORD *)(a9 + 96) = a10;
  *(_QWORD *)(a9 + 112) = a11;
  type metadata accessor for GridView.ScrollingHorizontalSectionView();
}

uint64_t sub_21CF374F4(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  __int128 v19;
  uint64_t v20;
  char v21;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32))(v1 + a1[20], v4, v3);
  v14 = (_QWORD *)(v1 + a1[21]);
  *v14 = v12;
  v14[1] = v11;
  v15 = (_QWORD *)(v1 + a1[22]);
  *v15 = v10;
  v15[1] = v9;
  v15[2] = v8;
  v15[3] = v7;
  sub_21CF3A62C(v2, v1 + a1[23]);
  v16 = v1 + a1[24];
  *(_OWORD *)v16 = v19;
  *(_QWORD *)(v16 + 16) = v20;
  *(_BYTE *)(v16 + 24) = v21;
  *(_QWORD *)(v1 + a1[25]) = v6;
  *(_QWORD *)(v1 + a1[26]) = v5;
  v17 = v1 + a1[27];
  result = swift_getKeyPath();
  *(_QWORD *)v17 = result;
  *(_BYTE *)(v17 + 8) = 0;
  return result;
}

uint64_t sub_21CF375C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  unint64_t v30;
  char *v31;
  uint64_t OpaqueTypeConformance2;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  _QWORD v59[2];
  uint64_t v60;
  uint64_t v61;

  v57 = a2;
  v53 = *(_QWORD *)(a1 - 8);
  v55 = *(_QWORD *)(v53 + 64);
  v4 = MEMORY[0x24BDAC7A8](a1);
  v52 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = *(_QWORD *)(v4 + 32);
  v54 = *(_QWORD *)(v4 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v42 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v8 = (char *)&v40 - v7;
  v41 = *(_QWORD *)(a1 + 48);
  v10 = type metadata accessor for GridItemDescriptor(0, AssociatedTypeWitness, v41, v9);
  v43 = *(_QWORD *)(v10 - 8);
  v44 = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v40 - v12;
  v14 = *(_QWORD *)(a1 + 24);
  v45 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = *(_QWORD *)(a1 + 40);
  v60 = v14;
  v61 = v40;
  v17 = MEMORY[0x220793860](0, &v60, MEMORY[0x24BEC6748], 0);
  v50 = *(_QWORD *)(v17 - 8);
  v47 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v58 = (char *)&v40 - v18;
  v49 = sub_21D7C1344();
  v51 = *(_QWORD *)(v49 - 8);
  v19 = MEMORY[0x24BDAC7A8](v49);
  v46 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v48 = (uint64_t)&v40 - v21;
  v22 = *(void (**)(char *))(v2 + *(int *)(a1 + 80));
  v23 = v2 + *(int *)(a1 + 64);
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v8, v23, AssociatedTypeWitness);
  v24 = (uint64_t)v8;
  v25 = v41;
  sub_21CF34C78(v24, *(_QWORD *)(v2 + *(int *)(a1 + 76)), AssociatedTypeWitness, v41, (uint64_t)v13);
  v22(v13);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v44);
  v26 = AssociatedTypeWitness;
  v27 = v40;
  sub_21D4278D4(v23, 0, 0, v14, v26, v40, v25);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v16, v14);
  v29 = v52;
  v28 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v52, v2, a1);
  v30 = (*(unsigned __int8 *)(v28 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v31 = (char *)swift_allocObject();
  *((_QWORD *)v31 + 2) = v54;
  *((_QWORD *)v31 + 3) = v14;
  *((_QWORD *)v31 + 4) = v56;
  *((_QWORD *)v31 + 5) = v27;
  *((_QWORD *)v31 + 6) = v25;
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(&v31[v30], v29, a1);
  v60 = v14;
  v61 = v27;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v34 = (uint64_t)v46;
  v33 = v47;
  v35 = v58;
  sub_21D7C2790();
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v35, v33);
  v59[0] = OpaqueTypeConformance2;
  v59[1] = MEMORY[0x24BDF0910];
  v36 = v49;
  MEMORY[0x2207938C0](MEMORY[0x24BDED308], v49, v59);
  v37 = v48;
  sub_21CDBDBB4(v34, v36, v48);
  v38 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
  v38(v34, v36);
  sub_21CDB6D80(v37, v36, v57);
  return ((uint64_t (*)(uint64_t, uint64_t))v38)(v37, v36);
}

void sub_21CF379D4()
{
  type metadata accessor for GridView.HorizontalSectionItemView();
}

int *sub_21CF37A00(int *result)
{
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;

  v2 = *(void (**)(uint64_t))(v1 + result[18]);
  if (v2 && *(_BYTE *)(v1 + 8) == 1)
  {
    v3 = *(_QWORD *)(v1 + result[17]);
    if (__OFSUB__(*(_QWORD *)v1, v3))
    {
      __break(1u);
    }
    else if (*(_QWORD *)(v1 + result[19]) == *(_QWORD *)v1 - v3)
    {
      v4 = swift_retain();
      v2(v4);
      return (int *)sub_21CDBD660((uint64_t)v2);
    }
  }
  return result;
}

void sub_21CF37A74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_21D7C1BA8();
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_2_13();
  OUTLINED_FUNCTION_38_3();
  sub_21D7C2C88();
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_2_13();
  OUTLINED_FUNCTION_38_3();
  sub_21D7C2C94();
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_2_13();
  sub_21D7C08B8();
  OUTLINED_FUNCTION_44_7();
  OUTLINED_FUNCTION_5_0();
}

void sub_21CF37B70()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66620);
  OUTLINED_FUNCTION_22_9();
  OUTLINED_FUNCTION_15_12();
}

void sub_21CF37B9C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1[67] = a1;
  v7 = MEMORY[0x24BEE23D0];
  v1[146] = v3;
  v1[147] = v7;
  v1[148] = v2;
  v1[149] = a1;
  OUTLINED_FUNCTION_42_7(MEMORY[0x24BEE23D8]);
  v1[68] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66D28);
  OUTLINED_FUNCTION_30_6();
  v1[146] = v6;
  v1[78] = v6;
  v1[147] = v5;
  v1[77] = v5;
  v8 = OUTLINED_FUNCTION_4_0();
  sub_21CDD363C(&qword_253F66618, v4);
  v1[144] = v8;
  v1[145] = v9;
  OUTLINED_FUNCTION_5_26();
}

void sub_21CF37C3C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 1144) = a1;
  OUTLINED_FUNCTION_62();
}

void sub_21CF37C50(uint64_t a1)
{
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v4;

  sub_21CDD363C(&qword_253F66D20, v2);
  v1[69] = v4;
  v1[141] = a1;
  v1[142] = v4;
  OUTLINED_FUNCTION_73();
}

void sub_21CF37C84(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1[11] = v2;
  v1[1] = a1;
  sub_21D7C2DD8();
  OUTLINED_FUNCTION_38_9();
  v1[3] = v6;
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_12_4();
  v1[2] = v8;
  v1[76] = v9;
  OUTLINED_FUNCTION_24_7();
  OUTLINED_FUNCTION_38_9();
  v1[5] = v10;
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_12_4();
  v1[4] = v12;
  OUTLINED_FUNCTION_38_3();
  v1[75] = v13;
  OUTLINED_FUNCTION_24_7();
  OUTLINED_FUNCTION_38_9();
  v1[7] = v14;
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_12_4();
  v1[6] = v16;
  OUTLINED_FUNCTION_38_3();
  v1[74] = v17;
  OUTLINED_FUNCTION_24_7();
  OUTLINED_FUNCTION_38_9();
  v1[9] = v18;
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_12_4();
  v1[8] = v20;
  OUTLINED_FUNCTION_38_3();
  v1[71] = v21;
  v22 = OUTLINED_FUNCTION_24_7();
  v1[81] = v22;
  v1[10] = *(_QWORD *)(v22 - 8);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_11();
  v1[15] = v24;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_38_5();
  v1[54] = v26;
  v1[73] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66460);
  v1[146] = v3;
  v1[147] = MEMORY[0x24BEE23D0];
  v1[148] = v5;
  v1[149] = v1[67];
  OUTLINED_FUNCTION_42_7(MEMORY[0x24BEE23D8]);
  OUTLINED_FUNCTION_22_9();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66A98);
  OUTLINED_FUNCTION_19_10();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66AB8);
  OUTLINED_FUNCTION_30_6();
  OUTLINED_FUNCTION_64_5();
  sub_21D7C1344();
  v1[140] = v4;
  OUTLINED_FUNCTION_5_26();
}

void sub_21CF37E3C(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;

  v3 = sub_21CE662A0();
  *(_QWORD *)(v1 + 1104) = a1;
  *(_QWORD *)(v1 + 1112) = v3;
  OUTLINED_FUNCTION_71();
}

void sub_21CF37E58(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  sub_21CDD363C(&qword_253F66A90, v2);
  *(_QWORD *)(v1 + 1088) = a1;
  *(_QWORD *)(v1 + 1096) = v4;
  OUTLINED_FUNCTION_62();
}

void sub_21CF37E8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  sub_21CDD363C(&qword_253F66AB0, v2);
  *(_QWORD *)(v1 + 1072) = a1;
  *(_QWORD *)(v1 + 1080) = v4;
  OUTLINED_FUNCTION_15_12();
}

void sub_21CF37EB8(uint64_t a1)
{
  _QWORD *v1;

  v1[132] = a1;
  v1[133] = v1[69];
  OUTLINED_FUNCTION_73();
}

void sub_21CF37ED0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[146] = MEMORY[0x24BEE4078];
  v1[50] = v2;
  v1[147] = v2;
  v1[148] = MEMORY[0x24BEE4088];
  v1[47] = a1;
  v1[149] = a1;
  OUTLINED_FUNCTION_44_7();
  sub_21D7C2070();
  sub_21D7C11B8();
  OUTLINED_FUNCTION_14_12();
}

void sub_21CF37F1C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[146] = v2;
  v1[147] = v3;
  v4 = MEMORY[0x24BDEC9F8];
  v1[148] = a1;
  v1[149] = v4;
  OUTLINED_FUNCTION_44_7();
  OUTLINED_FUNCTION_5_0();
}

void sub_21CF37F4C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v1[146] = v3;
  v1[147] = v4;
  v1[44] = v5;
  v1[148] = v5;
  v1[149] = v2;
  v7 = OUTLINED_FUNCTION_4_0();
  v1[146] = a1;
  v1[46] = v7;
  v1[147] = v7;
  OUTLINED_FUNCTION_44_7();
  OUTLINED_FUNCTION_5_0();
}

void sub_21CF37F8C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  OUTLINED_FUNCTION_40_7();
  v2 = OUTLINED_FUNCTION_24_7();
  OUTLINED_FUNCTION_45_6();
  v3 = OUTLINED_FUNCTION_24_7();
  OUTLINED_FUNCTION_62_4();
  v0[52] = *(_QWORD *)(sub_21D7C2E08() - 8);
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_12_4();
  v0[51] = v5;
  OUTLINED_FUNCTION_38_3();
  v6 = swift_checkMetadataState();
  v0[38] = v6;
  v0[36] = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_12_4();
  v0[34] = v8;
  OUTLINED_FUNCTION_38_3();
  v9 = swift_checkMetadataState();
  v0[32] = *(_QWORD *)(v9 - 8);
  v0[33] = v9;
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_12_4();
  v0[30] = v11;
  OUTLINED_FUNCTION_38_3();
  v12 = swift_checkMetadataState();
  v0[35] = v12;
  v0[31] = *(_QWORD *)(v12 - 8);
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_12_4();
  v0[29] = v14;
  v0[48] = v1;
  v0[39] = *(_QWORD *)(v1 - 8);
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_12_4();
  v0[37] = v16;
  v0[49] = v2;
  v0[42] = *(_QWORD *)(v2 - 8);
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_12_4();
  v0[41] = v18;
  v0[53] = v3;
  v0[43] = *(_QWORD *)(v3 - 8);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_11();
  v0[45] = v20;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_38_5();
  v0[56] = v22;
  OUTLINED_FUNCTION_38_3();
  v23 = sub_21D7C2B98();
  v0[25] = *(_QWORD *)(v23 - 8);
  v0[26] = v23;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_2_13();
  v0[24] = v25;
  v0[22] = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66128);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_2_13();
  v0[28] = v27;
  v0[23] = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66338);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_2_13();
  v0[27] = v29;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v30);
  OUTLINED_FUNCTION_11();
  v0[40] = v31;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_38_5();
  v0[67] = v33;
  v34 = *(_QWORD *)(v0[72] + 48);
  v0[146] = v0[80];
  v0[147] = v0[78];
  v0[148] = v0[79];
  v0[149] = v0[77];
  v0[59] = v34;
  v0[150] = v34;
  OUTLINED_FUNCTION_44_7();
  type metadata accessor for GridView.ScrollingHorizontalSectionView();
}

void sub_21CF38208(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  double v31;
  char v32;
  uint64_t v33;
  double v34;
  double v35;
  double v36;
  double v37;
  unsigned int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  double v44;
  double v45;
  double v46;
  double v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  int *v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  uint64_t v91;

  *(_QWORD *)(v1 + 504) = v2;
  sub_21D7C1AB8();
  OUTLINED_FUNCTION_38_9();
  *(_QWORD *)(v1 + 464) = v7;
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_12_4();
  *(_QWORD *)(v1 + 456) = v9;
  *(_QWORD *)(v1 + 144) = *(_QWORD *)(v3 - 8);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_2_13();
  *(_QWORD *)(v1 + 152) = v11;
  *(_QWORD *)(v1 + 480) = a1;
  *(_QWORD *)(v1 + 160) = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_11();
  *(_QWORD *)(v1 + 168) = v13;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_38_5();
  *(_QWORD *)(v1 + 440) = v15;
  OUTLINED_FUNCTION_38_3();
  *(_QWORD *)(v1 + 488) = v16;
  v17 = sub_21D7C1AB8();
  *(_QWORD *)(v1 + 520) = v17;
  *(_QWORD *)(v1 + 512) = *(_QWORD *)(v17 - 8);
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_12_4();
  *(_QWORD *)(v1 + 496) = v19;
  OUTLINED_FUNCTION_38_3();
  v20 = sub_21D7C12B4();
  *(_QWORD *)(v1 + 552) = v20;
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *(_QWORD *)(v1 + 560);
  v25 = (_QWORD *)(v24 + *(int *)(v4 + 60));
  v27 = v25[3];
  v26 = v25[4];
  *(_QWORD *)(v1 + 544) = __swift_project_boxed_opaque_existential_1(v25, v27);
  v28 = v24 + *(int *)(v4 + 88);
  v29 = *(_QWORD *)v28;
  v30 = *(_BYTE *)(v28 + 8);
  sub_21CE5289C(*(_QWORD *)v28, v30);
  v31 = sub_21D4B6D1C();
  v32 = v30;
  v33 = v24;
  sub_21CE52B54(v29, v32);
  sub_21D4B6A40();
  (*(void (**)(char *, uint64_t, uint64_t, double))(v26 + 8))(v23, v27, v26, v31);
  (*(void (**)(char *, _QWORD))(v21 + 8))(v23, *(_QWORD *)(v1 + 552));
  v34 = *(double *)(v1 + 1232);
  v35 = *(double *)(v1 + 1248);
  v36 = *(double *)(v1 + 1208);
  sub_21CF3C0F0(v1 + 1168, v1 + 1264);
  v37 = *(double *)(v1 + 1256);
  sub_21CF3C0F0(v1 + 1264, v5 - 192);
  v38 = *(unsigned __int8 *)(v5 - 160);
  v39 = (v38 >> 5) & 3;
  v40 = MEMORY[0x24BDECC60];
  if (!v39)
  {
    v53 = v38 & 0x9F;
    *(_BYTE *)(v5 - 160) = v38 & 0x9F;
    *(_QWORD *)(v1 + 584) = *(_QWORD *)(v5 - 192);
    *(_QWORD *)(v1 + 552) = *(_QWORD *)(v5 - 184);
    *(_QWORD *)(v1 + 544) = *(_QWORD *)(v5 - 176);
    *(_QWORD *)(v1 + 536) = *(_QWORD *)(v5 - 168);
    v54 = *(int **)(v1 + 576);
    v55 = v54[18];
    *(_QWORD *)(v1 + 448) = *(_QWORD *)(v33 + v54[19]);
    v56 = (uint64_t *)(v33 + v54[20]);
    v57 = *v56;
    v58 = v56[1];
    v59 = *(_QWORD *)(v33 + v55 + 8);
    *(_QWORD *)(v1 + 432) = *(_QWORD *)(v33 + v55);
    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v1 + 144) + 16))(*(_QWORD *)(v1 + 152), v33, *(_QWORD *)(v1 + 640));
    sub_21CF3A62C(v33 + v54[17], v5 - 232);
    *(_QWORD *)&v90 = v58;
    *((_QWORD *)&v90 + 1) = *(_QWORD *)(v1 + 432);
    sub_21CF3741C(*(_QWORD *)(v1 + 552), *(_QWORD *)(v1 + 544), *(_QWORD *)(v1 + 536), v53, *(_QWORD *)(v1 + 584), v1 + 1264, *(_QWORD *)(v1 + 448), v57, *(_QWORD *)(v1 + 168), v90, v59);
  }
  if (v39 != 1)
  {
    v60 = *(_QWORD *)(v1 + 192);
    sub_21D7C2B8C();
    sub_21D7C28F8();
    v61 = sub_21D7C28D4();
    swift_release();
    v62 = sub_21D7C1EFC();
    v63 = *(_QWORD *)(v1 + 200);
    v64 = *(_QWORD *)(v1 + 224);
    (*(void (**)(uint64_t, uint64_t, _QWORD))(v63 + 16))(v64, v60, *(_QWORD *)(v1 + 208));
    v65 = v64 + *(int *)(*(_QWORD *)(v1 + 176) + 36);
    *(_QWORD *)v65 = v61;
    *(_BYTE *)(v65 + 8) = v62;
    OUTLINED_FUNCTION_119(v60, *(uint64_t (**)(uint64_t, uint64_t))(v63 + 8));
    v66 = sub_21D7C1F20();
    sub_21D7C0CE4();
    v68 = v67;
    v70 = v69;
    v72 = v71;
    v74 = v73;
    v75 = *(_QWORD *)(v1 + 216);
    sub_21CE57550(v64, v75, &qword_253F66128);
    v76 = v75 + *(int *)(*(_QWORD *)(v1 + 184) + 36);
    *(_BYTE *)v76 = v66;
    *(_QWORD *)(v76 + 8) = v68;
    *(_QWORD *)(v76 + 16) = v70;
    *(_QWORD *)(v76 + 24) = v72;
    *(_QWORD *)(v76 + 32) = v74;
    *(_BYTE *)(v76 + 40) = 0;
    v77 = OUTLINED_FUNCTION_48_5();
    sub_21CDBDA44(v77, v78);
    v79 = *(_QWORD *)(v1 + 320);
    sub_21CE57550(v75, v79, &qword_253F66338);
    *(_OWORD *)(v79 + *(int *)(*(_QWORD *)(v1 + 584) + 36)) = xmmword_21D7D10D0;
    sub_21CDBDA44(v75, &qword_253F66338);
    v80 = sub_21CF3C144(v79, *(_QWORD *)(v1 + 536));
    MEMORY[0x24BDAC7A8](v80);
    swift_checkMetadataState();
    v81 = *(_QWORD *)(v1 + 240);
    sub_21D7C2064();
    sub_21D7C11AC();
    v82 = *(_QWORD *)(v1 + 232);
    sub_21D7C27F0();
    v83 = OUTLINED_FUNCTION_48_5();
    v84(v83);
    OUTLINED_FUNCTION_119(v81, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 256) + 8));
    v85 = *(_QWORD *)(v1 + 296);
    v86 = *(_QWORD *)(v1 + 280);
    v87 = *(_QWORD *)(v1 + 368);
    sub_21D7C25BC();
    OUTLINED_FUNCTION_12_11(v82, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 248) + 8));
    sub_21D7C1F08();
    *(_QWORD *)(v5 - 232) = v86;
    *(_QWORD *)(v5 - 224) = v87;
    v88 = OUTLINED_FUNCTION_4_0();
    v89 = *(_QWORD *)(v1 + 384);
    sub_21D7C2760();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 312) + 8))(v85, v89);
    sub_21D7C1F14();
    *(_QWORD *)(v1 + 864) = v88;
    *(_QWORD *)(v1 + 872) = v40;
    OUTLINED_FUNCTION_11_18();
  }
  *(_BYTE *)(v5 - 160) = v38 & 0x9F;
  v41 = *(_QWORD *)(v5 - 192);
  v42 = *(_QWORD *)v28;
  v43 = *(_BYTE *)(v28 + 8);
  sub_21CE5289C(v42, v43);
  v44 = sub_21D4B6D1C();
  sub_21CE52B54(v42, v43);
  if (v41 >= 1)
  {
    v45 = v44 - (v34 + v35);
    v46 = v36 * ceil((double)v41 + -1.0);
    if (v45 >= v36 * 0.0 + (v37 * v45 - v46) / (double)v41)
      v47 = v36 * 0.0 + (v37 * v45 - v46) / (double)v41;
    else
      v47 = v44 - (v34 + v35);
    v48 = sub_21D229F68(v45, v36, v47);
    v49 = *(_QWORD **)(v1 + 128);
    *v49 = v50;
    (*(void (**)(_QWORD *, _QWORD, _QWORD))(*(_QWORD *)(v1 + 96) + 104))(v49, *MEMORY[0x24BDF4D28], *(_QWORD *)(v1 + 112));
    sub_21D7C2D18();
    v51 = *(_QWORD *)(v1 + 104);
    OUTLINED_FUNCTION_48_5();
    sub_21D7C2CA0();
    sub_21CF358B8(v51, v48);
    v52 = sub_21D7C198C();
    MEMORY[0x24BDAC7A8](v52);
    sub_21CF3A52C();
    sub_21D7C2DCC();
    sub_21D7C1F20();
    OUTLINED_FUNCTION_15_12();
  }
  __break(1u);
}

void sub_21CF39064()
{
  type metadata accessor for GridView();
}

uint64_t sub_21CF390CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t);
  _BYTE v66[112];

  *(_QWORD *)(v7 - 456) = a1;
  v10 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v7 - 448) = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v7 - 472) = &v66[-v11];
  v12 = sub_21D7C08B8();
  *(_QWORD *)(v7 - 400) = v12;
  MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)(v7 - 480) = &v66[-v13];
  v14 = MEMORY[0x2207938C0](MEMORY[0x24BEC6630], v12);
  *(_QWORD *)(v7 - 408) = v14;
  v15 = MEMORY[0x24BEE23D0];
  *(_QWORD *)(v7 - 160) = v12;
  *(_QWORD *)(v7 - 152) = v15;
  *(_QWORD *)(v7 - 144) = v2;
  *(_QWORD *)(v7 - 136) = v14;
  *(_QWORD *)(v7 - 128) = MEMORY[0x24BEE23D8];
  v16 = sub_21D7C2BC8();
  v17 = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v7 - 424) = v16;
  *(_QWORD *)(v7 - 376) = v17;
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v7 - 464) = &v66[-v18];
  v19 = sub_21D7C1344();
  v20 = *(_QWORD *)(v19 - 8);
  *(_QWORD *)(v7 - 392) = v19;
  *(_QWORD *)(v7 - 360) = v20;
  MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v7 - 440) = &v66[-v21];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66A98);
  v22 = sub_21D7C1344();
  *(_QWORD *)(v7 - 352) = *(_QWORD *)(v22 - 8);
  *(_QWORD *)(v7 - 368) = v22;
  MEMORY[0x24BDAC7A8](v22);
  *(_QWORD *)(v7 - 416) = &v66[-v23];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66AB8);
  v24 = sub_21D7C1344();
  *(_QWORD *)(v7 - 312) = *(_QWORD *)(v24 - 8);
  *(_QWORD *)(v7 - 336) = v24;
  MEMORY[0x24BDAC7A8](v24);
  *(_QWORD *)(v7 - 384) = &v66[-v25];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66D28);
  v26 = sub_21D7C1344();
  *(_QWORD *)(v7 - 320) = v26;
  *(_QWORD *)(v7 - 304) = *(_QWORD *)(v26 - 8);
  v27 = MEMORY[0x24BDAC7A8](v26);
  *(_QWORD *)(v7 - 344) = &v66[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v27);
  *(_QWORD *)(v7 - 328) = &v66[-v29];
  *(_QWORD *)(v7 - 432) = v1;
  sub_21D7C55A4();
  *(_QWORD *)(v7 - 288) = v3;
  *(_QWORD *)(v7 - 280) = v2;
  *(_QWORD *)(v7 - 272) = v5;
  *(_QWORD *)(v7 - 264) = v4;
  *(_QWORD *)(v7 - 256) = v6;
  *(_QWORD *)(v7 - 488) = swift_getKeyPath();
  v30 = *(_QWORD *)(v7 - 472);
  v31 = *(_QWORD *)(v7 - 456);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v30, v1, v31);
  v32 = v10;
  v33 = (*(unsigned __int8 *)(v10 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v34 = (char *)swift_allocObject();
  *((_QWORD *)v34 + 2) = v3;
  *((_QWORD *)v34 + 3) = v2;
  *((_QWORD *)v34 + 4) = v5;
  *((_QWORD *)v34 + 5) = v4;
  *((_QWORD *)v34 + 6) = v6;
  v35 = v30;
  v36 = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(&v34[v33], v35, v31);
  v37 = (_QWORD *)swift_allocObject();
  v37[2] = v3;
  v37[3] = v2;
  v37[4] = v5;
  v37[5] = v4;
  v37[6] = v6;
  v37[7] = sub_21CF3C3DC;
  v37[8] = v34;
  v38 = *(_QWORD *)(v7 - 464);
  sub_21D7C2BB0();
  v39 = sub_21D7C1968();
  *(_QWORD *)(v7 - 168) = v4;
  v40 = *(_QWORD *)(v7 - 424);
  v41 = MEMORY[0x2207938C0](MEMORY[0x24BDF4A08], v40, v7 - 168);
  v42 = *(_QWORD *)(v7 - 440);
  MEMORY[0x22078F678](v39, sub_21CE6018C, 0, v40, v41);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 376) + 8))(v38, v40);
  *(_QWORD *)(v7 - 160) = 0;
  *(double *)(v7 - 152) = v9;
  *(_QWORD *)(v7 - 144) = 0;
  *(double *)(v7 - 136) = v8;
  *(_BYTE *)(v7 - 128) = 0;
  v43 = sub_21CE662A0();
  *(_QWORD *)(v7 - 184) = v41;
  *(_QWORD *)(v7 - 176) = v43;
  v44 = MEMORY[0x24BDED308];
  v45 = *(_QWORD *)(v7 - 392);
  v46 = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v45, v7 - 184);
  v47 = *(_QWORD *)(v7 - 416);
  sub_21D7C2400();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 360) + 8))(v42, v45);
  *(_QWORD *)(v7 - 192) = sub_21D7C28B0();
  sub_21CDD363C(&qword_253F66A90, &qword_253F66A98);
  *(_QWORD *)(v7 - 208) = v46;
  *(_QWORD *)(v7 - 200) = v48;
  v49 = *(_QWORD *)(v7 - 368);
  v50 = MEMORY[0x2207938C0](v44, v49, v7 - 208);
  v51 = *(_QWORD *)(v7 - 384);
  sub_21D7C24FC();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 352) + 8))(v47, v49);
  swift_getKeyPath();
  v52 = *(_QWORD *)(v7 - 432) + *(int *)(v36 + 88);
  v53 = *(_QWORD *)v52;
  v54 = *(_BYTE *)(v52 + 8);
  sub_21CE5289C(*(_QWORD *)v52, v54);
  v55 = sub_21D4B6D1C();
  sub_21CE52B54(v53, v54);
  *(double *)(v7 - 192) = v55 - (v9 + v8);
  sub_21CDD363C(&qword_253F66AB0, &qword_253F66AB8);
  *(_QWORD *)(v7 - 224) = v50;
  *(_QWORD *)(v7 - 216) = v56;
  v57 = *(_QWORD *)(v7 - 336);
  v58 = MEMORY[0x2207938C0](v44, v57, v7 - 224);
  v59 = *(_QWORD *)(v7 - 344);
  sub_21D7C234C();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 312) + 8))(v51, v57);
  sub_21CDD363C(&qword_253F66D20, &qword_253F66D28);
  *(_QWORD *)(v7 - 240) = v58;
  *(_QWORD *)(v7 - 232) = v60;
  v61 = v44;
  v62 = *(_QWORD *)(v7 - 320);
  MEMORY[0x2207938C0](v61, v62, v7 - 240);
  v63 = *(_QWORD *)(v7 - 328);
  sub_21CDBDBB4(v59, v62, v63);
  v64 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 304) + 8);
  v64(v59, v62);
  sub_21CDB6D80(v63, v62, *(_QWORD *)(v7 - 296));
  return ((uint64_t (*)(uint64_t, uint64_t))v64)(v63, v62);
}

void sub_21CF397D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v13 = type metadata accessor for GridItemDescriptor(0, AssociatedTypeWitness, a8, v10);
  v11 = MEMORY[0x24BDAC7A8](v13);
  v12 = MEMORY[0x24BDAC7A8](v11);
  MEMORY[0x24BDAC7A8](v12);
  type metadata accessor for GridView();
}

uint64_t sub_21CF3990C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  void (*v10)(uint64_t, uint64_t);

  v9 = *(void (**)(uint64_t))(*(_QWORD *)(v8 - 152) + *(int *)(a1 + 72));
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v8 - 184) + 16))(v4, *(_QWORD *)(v8 - 144), v6);
  sub_21CF34C78(v4, *(_QWORD *)(v8 - 136), v6, v7, v2);
  v9(v2);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v8 - 176) + 8))(v2, *(_QWORD *)(v8 - 160));
  sub_21CDBDBB4(v5, v1, v3);
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 168) + 8);
  v10(v5, v1);
  sub_21CDB6D80(v3, v1, *(_QWORD *)(v8 - 128));
  return ((uint64_t (*)(uint64_t, uint64_t))v10)(v3, v1);
}

void sub_21CF399D0()
{
  type metadata accessor for GridView();
}

uint64_t sub_21CF39A34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t OpaqueTypeConformance2;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v52;
  _BYTE v53[96];

  *(_QWORD *)(v6 - 328) = a1;
  v8 = *(_QWORD *)(a1 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v6 - 344) = &v53[-v10];
  v11 = sub_21D7C08B8();
  MEMORY[0x24BDAC7A8](v11);
  *(_QWORD *)(v6 - 352) = &v53[-v12];
  *(_QWORD *)(v6 - 144) = v2;
  *(_QWORD *)(v6 - 136) = v1;
  v13 = v2;
  v14 = v1;
  MEMORY[0x220793860](255, v6 - 144, MEMORY[0x24BEC6748], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66620);
  v15 = sub_21D7C1344();
  *(_QWORD *)(v6 - 304) = v15;
  v16 = MEMORY[0x24BEC6630];
  *(_QWORD *)(v6 - 272) = v11;
  v17 = MEMORY[0x2207938C0](v16, v11);
  *(_QWORD *)(v6 - 280) = v17;
  v18 = MEMORY[0x24BEE23D0];
  *(_QWORD *)(v6 - 144) = v11;
  *(_QWORD *)(v6 - 136) = v18;
  *(_QWORD *)(v6 - 128) = v15;
  *(_QWORD *)(v6 - 120) = v17;
  *(_QWORD *)(v6 - 112) = MEMORY[0x24BEE23D8];
  v19 = sub_21D7C2BC8();
  v20 = *(_QWORD *)(v19 - 8);
  *(_QWORD *)(v6 - 296) = v19;
  *(_QWORD *)(v6 - 248) = v20;
  MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v6 - 320) = &v53[-v21];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66D28);
  v22 = sub_21D7C1344();
  *(_QWORD *)(v6 - 288) = v22;
  *(_QWORD *)(v6 - 240) = *(_QWORD *)(v22 - 8);
  v23 = MEMORY[0x24BDAC7A8](v22);
  *(_QWORD *)(v6 - 312) = &v53[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v6 - 264) = &v53[-v25];
  *(_QWORD *)(v6 - 368) = v4;
  v26 = v5;
  sub_21D7C55A4();
  *(_QWORD *)(v6 - 224) = v4;
  *(_QWORD *)(v6 - 216) = v13;
  v27 = v13;
  *(_QWORD *)(v6 - 208) = v3;
  *(_QWORD *)(v6 - 200) = v14;
  v28 = v3;
  v29 = v14;
  v30 = *(_QWORD *)(v6 - 336);
  *(_QWORD *)(v6 - 192) = v30;
  *(_QWORD *)(v6 - 360) = swift_getKeyPath();
  v31 = v8;
  *(_QWORD *)(v6 - 376) = v8;
  v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v33 = *(_QWORD *)(v6 - 344);
  v34 = *(_QWORD *)(v6 - 328);
  v32(v33, v26, v34);
  v35 = (*(unsigned __int8 *)(v31 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  v36 = (v9 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
  v37 = (char *)swift_allocObject();
  v38 = *(_QWORD *)(v6 - 368);
  *((_QWORD *)v37 + 2) = v38;
  *((_QWORD *)v37 + 3) = v27;
  *((_QWORD *)v37 + 4) = v28;
  *((_QWORD *)v37 + 5) = v29;
  *((_QWORD *)v37 + 6) = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 376) + 32))(&v37[v35], v33, v34);
  sub_21CF3C0F0(*(_QWORD *)(v6 - 256), (uint64_t)&v37[v36]);
  v39 = (_QWORD *)swift_allocObject();
  v39[2] = v38;
  v39[3] = v27;
  v39[4] = v28;
  v39[5] = v29;
  v39[6] = v30;
  v39[7] = sub_21CF3C53C;
  v39[8] = v37;
  *(_QWORD *)(v6 - 144) = v27;
  *(_QWORD *)(v6 - 136) = v29;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_21CDD363C(&qword_253F66618, &qword_253F66620);
  *(_QWORD *)(v6 - 160) = OpaqueTypeConformance2;
  *(_QWORD *)(v6 - 152) = v41;
  v42 = MEMORY[0x24BDED308];
  v52 = MEMORY[0x2207938C0](MEMORY[0x24BDED308], *(_QWORD *)(v6 - 304), v6 - 160);
  v43 = *(_QWORD *)(v6 - 320);
  sub_21D7C2BB0();
  swift_getKeyPath();
  *(_QWORD *)(v6 - 144) = v7;
  *(_QWORD *)(v6 - 168) = v52;
  v44 = *(_QWORD *)(v6 - 296);
  v45 = MEMORY[0x2207938C0](MEMORY[0x24BDF4A08], v44, v6 - 168);
  v46 = *(_QWORD *)(v6 - 312);
  sub_21D7C234C();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 248) + 8))(v43, v44);
  sub_21CDD363C(&qword_253F66D20, &qword_253F66D28);
  *(_QWORD *)(v6 - 184) = v45;
  *(_QWORD *)(v6 - 176) = v47;
  v48 = *(_QWORD *)(v6 - 288);
  MEMORY[0x2207938C0](v42, v48, v6 - 184);
  v49 = *(_QWORD *)(v6 - 264);
  sub_21CDBDBB4(v46, v48, v49);
  v50 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 240) + 8);
  v50(v46, v48);
  sub_21CDB6D80(v49, v48, *(_QWORD *)(v6 - 232));
  return ((uint64_t (*)(uint64_t, uint64_t))v50)(v49, v48);
}

void sub_21CF39F08(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v22 = a7;
  v34 = a4;
  v36 = a3;
  v23 = a2;
  v29 = a1;
  v35 = a9;
  v21[1] = a5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v26 = type metadata accessor for GridItemDescriptor(0, AssociatedTypeWitness, a10, v14);
  v24 = *(_QWORD *)(v26 - 8);
  v15 = MEMORY[0x24BDAC7A8](v26);
  v28 = *(_QWORD *)(a6 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v37 = a6;
  v38 = a8;
  v21[0] = a8;
  v16 = MEMORY[0x220793860](0, &v37, MEMORY[0x24BEC6748], 0);
  v32 = *(_QWORD *)(v16 - 8);
  v25 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v21[2] = (char *)v21 - v17;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66620);
  v31 = sub_21D7C1344();
  v33 = *(_QWORD *)(v31 - 8);
  v18 = MEMORY[0x24BDAC7A8](v31);
  v27 = (char *)v21 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v30 = (char *)v21 - v20;
  v37 = a5;
  v38 = a6;
  v39 = v22;
  v40 = a8;
  v41 = a10;
  type metadata accessor for GridView();
}

uint64_t sub_21CF3A13C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t OpaqueTypeConformance2;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);

  v10 = *(void (**)(uint64_t))(*(_QWORD *)(v9 - 232) + *(int *)(a1 + 72));
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v12 = *(_QWORD *)(v9 - 336);
  v11(v2, v12, v8);
  v13 = v2;
  v14 = *(_QWORD *)(v9 - 288);
  sub_21CF34C78(v13, v14, v8, v7, v6);
  v10(v6);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 328) + 8))(v6, *(_QWORD *)(v9 - 312));
  v15 = *(_QWORD *)(v9 - 352);
  v16 = v12;
  v17 = *(_QWORD *)(v9 - 368);
  sub_21D4278D4(v16, v14, 0, v3, v8, v17, v7);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 296) + 8))(v4, v3);
  *(_QWORD *)(v9 - 208) = *(_QWORD *)(v9 - 360);
  *(_QWORD *)(v9 - 200) = v3;
  *(_QWORD *)(v9 - 192) = v1;
  *(_QWORD *)(v9 - 184) = v17;
  v18 = *(_QWORD *)(v9 - 232);
  *(_QWORD *)(v9 - 176) = v7;
  *(_QWORD *)(v9 - 168) = v18;
  v19 = *(_QWORD *)(v9 - 248);
  *(_QWORD *)(v9 - 160) = v14;
  *(_QWORD *)(v9 - 152) = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5FA30);
  *(_QWORD *)(v9 - 128) = v3;
  *(_QWORD *)(v9 - 120) = v17;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_21CF3C640();
  v21 = *(_QWORD *)(v9 - 320);
  sub_21D4DBBD4();
  v22 = *(_QWORD *)(v9 - 304);
  sub_21D7C2748();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 264) + 8))(v15, v21);
  sub_21CDD363C(&qword_253F66618, &qword_253F66620);
  *(_QWORD *)(v9 - 144) = OpaqueTypeConformance2;
  *(_QWORD *)(v9 - 136) = v23;
  v24 = *(_QWORD *)(v9 - 272);
  MEMORY[0x2207938C0](MEMORY[0x24BDED308], v24, v9 - 144);
  v25 = *(_QWORD *)(v9 - 280);
  sub_21CDBDBB4(v22, v24, v25);
  v26 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 256) + 8);
  v26(v22, v24);
  sub_21CDB6D80(v25, v24, *(_QWORD *)(v9 - 240));
  return ((uint64_t (*)(uint64_t, uint64_t))v26)(v25, v24);
}

void sub_21CF3A368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_21CF3C0F0(a3, (uint64_t)&v3);
  type metadata accessor for GridView();
}

uint64_t sub_21CF3A3E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  unsigned __int8 *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = (unsigned __int8 *)(v3 + *(int *)(a1 + 64));
  v7 = *v6;
  if (v7 == 3)
  {
    result = 0;
    v7 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v2 = 0;
    v4 = 0;
    v5 = 0;
    v13 = 0uLL;
    v14 = 255;
  }
  else
  {
    v15 = *(_OWORD *)(v6 + 8);
    v9 = v6[24] & 1;
    result = swift_getKeyPath();
    v13 = v15;
    v14 = 0;
    v11 = v17;
    v10 = v18;
    v12 = v16;
  }
  *(_QWORD *)v1 = result;
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 32) = v14;
  *(_QWORD *)(v1 + 40) = v7;
  *(_OWORD *)(v1 + 48) = v13;
  *(_QWORD *)(v1 + 64) = v9;
  *(_QWORD *)(v1 + 72) = v10;
  *(_QWORD *)(v1 + 80) = v11;
  *(_QWORD *)(v1 + 88) = v12;
  *(_QWORD *)(v1 + 96) = v2;
  *(_QWORD *)(v1 + 104) = v4;
  *(_BYTE *)(v1 + 112) = v5;
  return result;
}

uint64_t sub_21CF3A490(char *a1, uint64_t (*a2)(uint64_t, char *))
{
  uint64_t v4;
  uint64_t TupleTypeMetadata2;

  v4 = *(_QWORD *)a1;
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(v4, &a1[*(int *)(TupleTypeMetadata2 + 48)]);
}

uint64_t sub_21CF3A52C()
{
  sub_21D7C1BA8();
  sub_21CDB6D4C(&qword_253F66A58, (void (*)(uint64_t))MEMORY[0x24BDEF998]);
  return sub_21D7C5EEC();
}

double sub_21CF3A594()
{
  return 0.0;
}

void sub_21CF3A59C(double *a1@<X8>)
{
  *a1 = sub_21CF3A594();
}

uint64_t sub_21CF3A5C0()
{
  sub_21CF3A668();
  return sub_21D7C10BC();
}

void type metadata accessor for GridView()
{
  JUMPOUT(0x22079380CLL);
}

uint64_t sub_21CF3A62C(uint64_t a1, uint64_t a2)
{
  __swift_memcpy33_8(a2, a1);
  return a2;
}

unint64_t sub_21CF3A668()
{
  unint64_t result;

  result = qword_255331C48;
  if (!qword_255331C48)
  {
    result = MEMORY[0x2207938C0](MEMORY[0x24BEE50E0], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_255331C48);
  }
  return result;
}

uint64_t sub_21CF3A6A4()
{
  return swift_allocateGenericValueMetadata();
}

void sub_21CF3A6AC()
{
  unint64_t v0;
  unint64_t v1;

  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_21CF3BBE0();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_21CF3A784(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  __int128 *v20;
  __int128 v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  _QWORD *v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char v45;
  _QWORD *v46;
  _QWORD *v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = sub_21D7C12B4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  if (*(_QWORD *)(v9 + 64) <= 8uLL)
    v11 = 8;
  else
    v11 = *(_QWORD *)(v9 + 64);
  v12 = v10 | *(_DWORD *)(v6 + 80);
  if ((v12 & 0x1000F8) != 0
    || (v13 = v10 & 0xF8,
        v14 = ~v13 & 0xFFFFFFFFFFFFFFF8,
        v15 = v13 + 16,
        v11
      + ((v13
        + 16
        + ((((((((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 119) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)) & v14)
      + 1 > 0x18))
  {
    v38 = *a2;
    *a1 = *a2;
    v39 = (uint64_t *)(v38 + (((v12 & 0xF8 | 7u) + 16) & ~(unint64_t)(v12 & 0xF8 | 7u)));
LABEL_18:
    swift_retain();
    return v39;
  }
  v51 = *(_QWORD *)(v8 - 8);
  v52 = v11;
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
  v53 = a1;
  v16 = ((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = ((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = *(_QWORD *)(v17 + 24);
  *(_QWORD *)(v16 + 24) = v18;
  *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
  (**(void (***)(unint64_t, unint64_t))(v18 - 8))(v16, v17);
  v19 = (_OWORD *)((v16 + 47) & 0xFFFFFFFFFFFFFFF8);
  v20 = (__int128 *)((v17 + 47) & 0xFFFFFFFFFFFFFFF8);
  v21 = *v20;
  *(_OWORD *)((char *)v19 + 9) = *(__int128 *)((char *)v20 + 9);
  *v19 = v21;
  v22 = (v16 + 79) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v17 + 79) & 0xFFFFFFFFFFFFFFF8;
  v24 = *(_QWORD *)v23;
  v25 = *(_QWORD *)(v23 + 8);
  v26 = *(_QWORD *)(v23 + 16);
  v27 = *(_QWORD *)(v23 + 24);
  v28 = *(_BYTE *)(v23 + 32);
  sub_21CF3AAA4(*(_QWORD *)v23, v25, v26, v27, v28);
  *(_QWORD *)v22 = v24;
  *(_QWORD *)(v22 + 8) = v25;
  *(_QWORD *)(v22 + 16) = v26;
  *(_QWORD *)(v22 + 24) = v27;
  *(_BYTE *)(v22 + 32) = v28;
  v29 = (_QWORD *)((v16 + 119) & 0xFFFFFFFFFFFFFFF8);
  v30 = (_QWORD *)((v17 + 119) & 0xFFFFFFFFFFFFFFF8);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  v32 = (_QWORD *)(((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFF8);
  v33 = (_QWORD *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFF8);
  *v33 = *v32;
  v34 = ((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8;
  v35 = (unint64_t *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8);
  v36 = *v35;
  swift_retain();
  if (v36 < 0xFFFFFFFF)
  {
    *(_OWORD *)v34 = *(_OWORD *)v35;
  }
  else
  {
    v37 = v35[1];
    *(_QWORD *)v34 = v36;
    *(_QWORD *)(v34 + 8) = v37;
    swift_retain();
  }
  v40 = (_QWORD *)((v34 + 23) & 0xFFFFFFFFFFFFF8);
  v41 = (_QWORD *)(((unint64_t)v35 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v40 = *v41;
  v42 = ((unint64_t)v40 + 15) & 0xFFFFFFFFFFFFFFF8;
  v43 = ((unint64_t)v41 + 15) & 0xFFFFFFFFFFFFFFF8;
  v44 = *(_QWORD *)v43;
  v45 = *(_BYTE *)(v43 + 8);
  sub_21CE5289C(*(_QWORD *)v43, v45);
  *(_QWORD *)v42 = v44;
  *(_BYTE *)(v42 + 8) = v45;
  v46 = (_QWORD *)((v15 + v42) & v14);
  v47 = (_QWORD *)((v15 + v43) & v14);
  v48 = *((unsigned __int8 *)v47 + v52);
  v39 = v53;
  if (v48 >= 2)
  {
    if (v52 <= 3)
      v49 = v52;
    else
      v49 = 4;
    __asm { BR              X12 }
  }
  if (v48 != 1)
  {
    *v46 = *v47;
    *((_BYTE *)v46 + v52) = 0;
    goto LABEL_18;
  }
  (*(void (**)(_QWORD *))(v51 + 16))(v46);
  *((_BYTE *)v46 + v52) = 1;
  return v39;
}

uint64_t sub_21CF3AAA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)
    sub_21D7C4C20();
  return sub_21D7C4C20();
}

uint64_t sub_21CF3AAD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unsigned int v11;
  uint64_t v12;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_1(v4);
  sub_21CF3AC44(*(_QWORD *)((v4 + 79) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((v4 + 79) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(((v4 + 79) & 0xFFFFFFFFFFFFFFF8) + 16), *(_QWORD *)(((v4 + 79) & 0xFFFFFFFFFFFFFFF8) + 24), *(_BYTE *)(((v4 + 79) & 0xFFFFFFFFFFFFFFF8) + 32));
  swift_release();
  v5 = (_QWORD *)((((((v4 + 119) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v5 >= 0xFFFFFFFFuLL)
    swift_release();
  v6 = ((((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_21CE52B54(*(_QWORD *)v6, *(_BYTE *)(v6 + 8));
  v7 = *(_QWORD *)(sub_21D7C12B4() - 8);
  v8 = *(_DWORD *)(v7 + 80) & 0xF8 | 7;
  v9 = (v6 + v8 + 9) & ~v8;
  v10 = *(_QWORD *)(v7 + 64);
  if (v10 <= 8)
    v10 = 8;
  v11 = *(unsigned __int8 *)(v9 + v10);
  if (v11 >= 2)
  {
    if (v10 <= 3)
      v12 = v10;
    else
      v12 = 4;
    __asm { BR              X14 }
  }
  if (v11 == 1)
    return (*(uint64_t (**)(void))(v7 + 8))();
  else
    return swift_release();
}

uint64_t sub_21CF3AC44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if ((a5 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_21CF3AC80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  __int128 *v11;
  __int128 v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  char v45;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(v8 + 24);
  *(_QWORD *)(v7 + 24) = v9;
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
  (**(void (***)(unint64_t, unint64_t))(v9 - 8))(v7, v8);
  v10 = (_OWORD *)((v7 + 47) & 0xFFFFFFFFFFFFFFF8);
  v11 = (__int128 *)((v8 + 47) & 0xFFFFFFFFFFFFFFF8);
  v12 = *v11;
  *(_OWORD *)((char *)v10 + 9) = *(__int128 *)((char *)v11 + 9);
  *v10 = v12;
  v13 = (v7 + 79) & 0xFFFFFFFFFFFFFFF8;
  v14 = (v8 + 79) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(_QWORD *)v14;
  v16 = *(_QWORD *)(v14 + 8);
  v17 = *(_QWORD *)(v14 + 16);
  v18 = *(_QWORD *)(v14 + 24);
  v19 = *(_BYTE *)(v14 + 32);
  sub_21CF3AAA4(*(_QWORD *)v14, v16, v17, v18, v19);
  *(_QWORD *)v13 = v15;
  *(_QWORD *)(v13 + 8) = v16;
  *(_QWORD *)(v13 + 16) = v17;
  *(_QWORD *)(v13 + 24) = v18;
  *(_BYTE *)(v13 + 32) = v19;
  v20 = (_QWORD *)((v7 + 119) & 0xFFFFFFFFFFFFFFF8);
  v21 = (_QWORD *)((v8 + 119) & 0xFFFFFFFFFFFFFFF8);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFF8);
  v24 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFF8);
  *v24 = *v23;
  v25 = ((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  v26 = (unint64_t *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
  v27 = *v26;
  swift_retain();
  if (v27 < 0xFFFFFFFF)
  {
    *(_OWORD *)v25 = *(_OWORD *)v26;
  }
  else
  {
    v28 = v26[1];
    *(_QWORD *)v25 = v27;
    *(_QWORD *)(v25 + 8) = v28;
    swift_retain();
  }
  v29 = (_QWORD *)((v25 + 23) & 0xFFFFFFFFFFFFF8);
  v30 = (_QWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v29 = *v30;
  v31 = ((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8;
  v32 = ((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  v33 = *(_QWORD *)v32;
  v34 = *(_BYTE *)(v32 + 8);
  sub_21CE5289C(*(_QWORD *)v32, v34);
  *(_QWORD *)v31 = v33;
  *(_BYTE *)(v31 + 8) = v34;
  v35 = *(_QWORD *)(sub_21D7C12B4() - 8);
  v36 = *(_DWORD *)(v35 + 80) & 0xF8;
  v37 = v36 + 16;
  v38 = v36 + 16 + v31;
  v39 = ~v36 & 0xFFFFFFFFFFFFFFF8;
  v40 = (_QWORD *)(v38 & v39);
  v41 = (_QWORD *)((v37 + v32) & v39);
  if (*(_QWORD *)(v35 + 64) <= 8uLL)
    v42 = 8;
  else
    v42 = *(_QWORD *)(v35 + 64);
  v43 = *((unsigned __int8 *)v41 + v42);
  if (v43 >= 2)
  {
    if (v42 <= 3)
      v44 = v42;
    else
      v44 = 4;
    __asm { BR              X13 }
  }
  if (v43 == 1)
  {
    (*(void (**)(_QWORD *))(v35 + 16))(v40);
    v45 = 1;
  }
  else
  {
    *v40 = *v41;
    swift_retain();
    v45 = 0;
  }
  *((_BYTE *)v40 + v42) = v45;
  return a1;
}

uint64_t sub_21CF3AEF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  _OWORD *v9;
  __int128 *v10;
  __int128 v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  unsigned int v55;
  uint64_t v56;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (uint64_t *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (uint64_t *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  __swift_assign_boxed_opaque_existential_1(v7, v8);
  v9 = (_OWORD *)(((unint64_t)v7 + 47) & 0xFFFFFFFFFFFFFFF8);
  v10 = (__int128 *)(((unint64_t)v8 + 47) & 0xFFFFFFFFFFFFFFF8);
  v11 = *v10;
  *(_OWORD *)((char *)v9 + 9) = *(__int128 *)((char *)v10 + 9);
  *v9 = v11;
  v12 = ((unint64_t)v7 + 79) & 0xFFFFFFFFFFFFFFF8;
  v13 = ((unint64_t)v8 + 79) & 0xFFFFFFFFFFFFFFF8;
  v14 = *(_QWORD *)v13;
  v15 = *(_QWORD *)(v13 + 8);
  v16 = *(_QWORD *)(v13 + 16);
  v17 = *(_QWORD *)(v13 + 24);
  v18 = *(_BYTE *)(v13 + 32);
  sub_21CF3AAA4(*(_QWORD *)v13, v15, v16, v17, v18);
  v19 = *(_QWORD *)v12;
  v20 = *(_QWORD *)(v12 + 8);
  v21 = *(_QWORD *)(v12 + 16);
  v22 = *(_QWORD *)(v12 + 24);
  v23 = *(_BYTE *)(v12 + 32);
  *(_QWORD *)v12 = v14;
  *(_QWORD *)(v12 + 8) = v15;
  *(_QWORD *)(v12 + 16) = v16;
  *(_QWORD *)(v12 + 24) = v17;
  *(_BYTE *)(v12 + 32) = v18;
  sub_21CF3AC44(v19, v20, v21, v22, v23);
  v24 = (_QWORD *)(((unint64_t)v7 + 119) & 0xFFFFFFFFFFFFFFF8);
  v25 = (_QWORD *)(((unint64_t)v8 + 119) & 0xFFFFFFFFFFFFFFF8);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  swift_retain();
  swift_release();
  v27 = (_QWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFF8);
  v28 = (_QWORD *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFF8);
  *v27 = *v28;
  v29 = (_QWORD *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
  v30 = (unint64_t *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8);
  v31 = *v30;
  if (*v29 < 0xFFFFFFFFuLL)
  {
    if (v31 >= 0xFFFFFFFF)
    {
      v33 = v30[1];
      *v29 = v31;
      v29[1] = v33;
      swift_retain();
      goto LABEL_8;
    }
  }
  else
  {
    if (v31 >= 0xFFFFFFFF)
    {
      v32 = v30[1];
      *v29 = v31;
      v29[1] = v32;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  *(_OWORD *)v29 = *(_OWORD *)v30;
LABEL_8:
  v34 = (_QWORD *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFF8);
  v35 = (_QWORD *)(((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v34 = *v35;
  v36 = ((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = ((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v38 = *(_QWORD *)v37;
  v39 = *(_BYTE *)(v37 + 8);
  sub_21CE5289C(*(_QWORD *)v37, v39);
  v40 = *(_QWORD *)v36;
  v41 = *(_BYTE *)(v36 + 8);
  *(_QWORD *)v36 = v38;
  *(_BYTE *)(v36 + 8) = v39;
  sub_21CE52B54(v40, v41);
  v42 = sub_21D7C12B4();
  v43 = *(_QWORD *)(v42 - 8);
  v44 = *(_DWORD *)(v43 + 80) & 0xF8;
  v45 = v44 + 16;
  v46 = v44 + 16 + v36;
  v47 = ~v44 & 0xFFFFFFFFFFFFFFF8;
  v48 = (_QWORD *)(v46 & v47);
  v49 = v45 + v37;
  v50 = (_QWORD *)(v49 & v47);
  if ((v46 & v47) != (v49 & v47))
  {
    v51 = v42;
    if (*(_QWORD *)(v43 + 64) <= 8uLL)
      v52 = 8;
    else
      v52 = *(_QWORD *)(v43 + 64);
    v53 = *((unsigned __int8 *)v48 + v52);
    if (v53 >= 2)
    {
      if (v52 <= 3)
        v54 = v52;
      else
        v54 = 4;
      __asm { BR              X12 }
    }
    if (v53 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v43 + 8))(v48, v42);
    else
      swift_release();
    v55 = *((unsigned __int8 *)v50 + v52);
    if (v55 >= 2)
    {
      if (v52 <= 3)
        v56 = v52;
      else
        v56 = 4;
      __asm { BR              X12 }
    }
    if (v55 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v43 + 16))(v48, v50, v51);
      *((_BYTE *)v48 + v52) = 1;
    }
    else
    {
      *v48 = *v50;
      *((_BYTE *)v48 + v52) = 0;
      swift_retain();
    }
  }
  return a1;
}

uint64_t sub_21CF3B25C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  _OWORD *v11;
  __int128 *v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  __int128 v17;
  _OWORD *v18;
  _OWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t v39;
  char v40;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_OWORD *)v8;
  v10 = *(_OWORD *)(v8 + 16);
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
  *(_OWORD *)v7 = v9;
  *(_OWORD *)(v7 + 16) = v10;
  v11 = (_OWORD *)((v7 + 47) & 0xFFFFFFFFFFFFFFF8);
  v12 = (__int128 *)((v8 + 47) & 0xFFFFFFFFFFFFFFF8);
  v13 = *v12;
  *(_OWORD *)((char *)v11 + 9) = *(__int128 *)((char *)v12 + 9);
  *v11 = v13;
  v14 = (v7 + 79) & 0xFFFFFFFFFFFFFFF8;
  v15 = (v8 + 79) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_BYTE *)(v15 + 32);
  v17 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v17;
  *(_BYTE *)(v14 + 32) = v16;
  v18 = (_OWORD *)((v7 + 119) & 0xFFFFFFFFFFFFF8);
  v19 = (_OWORD *)((v8 + 119) & 0xFFFFFFFFFFFFF8);
  *v18 = *v19;
  v20 = (_QWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFF8);
  v21 = (_QWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFF8);
  *v20 = *v21;
  v22 = ((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  v23 = ((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v23 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v22 = *(_OWORD *)v23;
  }
  else
  {
    v24 = *(_QWORD *)(v23 + 8);
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *(_QWORD *)(v22 + 8) = v24;
  }
  v25 = (_QWORD *)((v22 + 23) & 0xFFFFFFFFFFFFF8);
  v26 = (_QWORD *)((v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v25 = *v26;
  v27 = ((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  v28 = *(_QWORD *)v27;
  v29 = ((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)(v29 + 8) = *(_BYTE *)(v27 + 8);
  *(_QWORD *)v29 = v28;
  v30 = *(_QWORD *)(sub_21D7C12B4() - 8);
  v31 = *(_DWORD *)(v30 + 80) & 0xF8;
  v32 = v31 + 16;
  v33 = v31 + 16 + v29;
  v34 = ~v31 & 0xFFFFFFFFFFFFFFF8;
  v35 = (_QWORD *)(v33 & v34);
  v36 = (_QWORD *)((v32 + v27) & v34);
  if (*(_QWORD *)(v30 + 64) <= 8uLL)
    v37 = 8;
  else
    v37 = *(_QWORD *)(v30 + 64);
  v38 = *((unsigned __int8 *)v36 + v37);
  if (v38 >= 2)
  {
    if (v37 <= 3)
      v39 = v37;
    else
      v39 = 4;
    __asm { BR              X13 }
  }
  if (v38 == 1)
  {
    (*(void (**)(_QWORD *))(v30 + 32))(v35);
    v40 = 1;
  }
  else
  {
    v40 = 0;
    *v35 = *v36;
  }
  *((_BYTE *)v35 + v37) = v40;
  return a1;
}

uint64_t sub_21CF3B464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  _OWORD *v11;
  __int128 *v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  __int128 v22;
  _OWORD *v23;
  uint64_t v24;
  __int128 v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int v50;
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  char v54;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_1(v7);
  v9 = *(_OWORD *)v8;
  v10 = *(_OWORD *)(v8 + 16);
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
  *(_OWORD *)v7 = v9;
  *(_OWORD *)(v7 + 16) = v10;
  v11 = (_OWORD *)((v7 + 47) & 0xFFFFFFFFFFFFFFF8);
  v12 = (__int128 *)((v8 + 47) & 0xFFFFFFFFFFFFFFF8);
  v13 = *v12;
  *(_OWORD *)((char *)v11 + 9) = *(__int128 *)((char *)v12 + 9);
  *v11 = v13;
  v14 = (v7 + 79) & 0xFFFFFFFFFFFFFFF8;
  v15 = (v8 + 79) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_BYTE *)(v15 + 32);
  v17 = *(_QWORD *)v14;
  v18 = *(_QWORD *)(v14 + 8);
  v19 = *(_QWORD *)(v14 + 16);
  v20 = *(_QWORD *)(v14 + 24);
  v21 = *(_BYTE *)(v14 + 32);
  v22 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v22;
  *(_BYTE *)(v14 + 32) = v16;
  sub_21CF3AC44(v17, v18, v19, v20, v21);
  v23 = (_OWORD *)((v7 + 119) & 0xFFFFFFFFFFFFFFF8);
  v24 = (v8 + 119) & 0xFFFFFFFFFFFFF8;
  v25 = *(_OWORD *)v24;
  v24 += 23;
  *v23 = v25;
  swift_release();
  v26 = (_QWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFF8);
  v27 = (v24 & 0xFFFFFFFFFFFFF8) + 15;
  *v26 = *(_QWORD *)(v24 & 0xFFFFFFFFFFFFF8);
  v28 = (_QWORD *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8);
  v29 = v27 & 0xFFFFFFFFFFFFFFF8;
  v30 = *(_QWORD *)(v27 & 0xFFFFFFFFFFFFFFF8);
  if (*v28 < 0xFFFFFFFFuLL)
  {
    if (v30 >= 0xFFFFFFFF)
    {
      v32 = *(_QWORD *)(v29 + 8);
      *v28 = v30;
      v28[1] = v32;
      goto LABEL_8;
    }
  }
  else
  {
    if (v30 >= 0xFFFFFFFF)
    {
      v31 = *(_QWORD *)(v29 + 8);
      *v28 = v30;
      v28[1] = v31;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  *(_OWORD *)v28 = *(_OWORD *)v29;
LABEL_8:
  v33 = (_QWORD *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFF8);
  v34 = (_QWORD *)((v29 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v33 = *v34;
  v35 = ((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8;
  v36 = ((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v34) = *(_BYTE *)(v36 + 8);
  v37 = *(_QWORD *)v35;
  v38 = *(_BYTE *)(v35 + 8);
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *(_BYTE *)(v35 + 8) = (_BYTE)v34;
  sub_21CE52B54(v37, v38);
  v39 = sub_21D7C12B4();
  v40 = *(_QWORD *)(v39 - 8);
  v41 = *(_DWORD *)(v40 + 80) & 0xF8;
  v42 = v41 + 16;
  v43 = v41 + 16 + v35;
  v44 = ~v41 & 0xFFFFFFFFFFFFFFF8;
  v45 = (_QWORD *)(v43 & v44);
  v46 = v42 + v36;
  v47 = (_QWORD *)(v46 & v44);
  if ((v43 & v44) != (v46 & v44))
  {
    v48 = v39;
    if (*(_QWORD *)(v40 + 64) <= 8uLL)
      v49 = 8;
    else
      v49 = *(_QWORD *)(v40 + 64);
    v50 = *((unsigned __int8 *)v45 + v49);
    if (v50 >= 2)
    {
      if (v49 <= 3)
        v51 = v49;
      else
        v51 = 4;
      __asm { BR              X12 }
    }
    if (v50 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v40 + 8))(v45, v39);
    else
      swift_release();
    v52 = *((unsigned __int8 *)v47 + v49);
    if (v52 >= 2)
    {
      if (v49 <= 3)
        v53 = v49;
      else
        v53 = 4;
      __asm { BR              X12 }
    }
    if (v52 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v40 + 32))(v45, v47, v48);
      v54 = 1;
    }
    else
    {
      v54 = 0;
      *v45 = *v47;
    }
    *((_BYTE *)v45 + v49) = v54;
  }
  return a1;
}

uint64_t sub_21CF3B780(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v15;
  unsigned int v17;
  int v18;
  unint64_t v19;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF)
    v8 = 0x7FFFFFFF;
  else
    v8 = *(_DWORD *)(v6 + 84);
  v9 = *(_QWORD *)(sub_21D7C12B4() - 8);
  v10 = 8;
  if (*(_QWORD *)(v9 + 64) > 8uLL)
    v10 = *(_QWORD *)(v9 + 64);
  if (!a2)
    return 0;
  v11 = *(_QWORD *)(v6 + 64);
  if (a2 <= v8)
    goto LABEL_24;
  v12 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  v13 = v10
      + ((v12
        + ((((((((((((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 119) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 9) & ~v12)
      + 1;
  v14 = 8 * v13;
  if (v13 <= 3)
  {
    v17 = ((a2 - v8 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v17))
    {
      v15 = *(_DWORD *)(a1 + v13);
      if (!v15)
        goto LABEL_24;
      goto LABEL_17;
    }
    if (v17 > 0xFF)
    {
      v15 = *(unsigned __int16 *)(a1 + v13);
      if (!*(_WORD *)(a1 + v13))
        goto LABEL_24;
      goto LABEL_17;
    }
    if (v17 < 2)
    {
LABEL_24:
      if (v7 >= 0x7FFFFFFF)
        return __swift_getEnumTagSinglePayload(a1, v7, v5);
      v19 = *(_QWORD *)(((a1 + v11 + 7) & 0xFFFFFFFFFFFFF8) + 0x18);
      if (v19 >= 0xFFFFFFFF)
        LODWORD(v19) = -1;
      return (v19 + 1);
    }
  }
  v15 = *(unsigned __int8 *)(a1 + v13);
  if (!*(_BYTE *)(a1 + v13))
    goto LABEL_24;
LABEL_17:
  v18 = (v15 - 1) << v14;
  if (v13 > 3)
    v18 = 0;
  if ((_DWORD)v13)
  {
    if (v13 > 3)
      LODWORD(v13) = 4;
    __asm { BR              X11 }
  }
  return v8 + v18 + 1;
}

void sub_21CF3B964(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  char v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  int v17;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v7 + 84) <= 0x7FFFFFFFu)
    v8 = 0x7FFFFFFF;
  else
    v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(sub_21D7C12B4() - 8);
  v10 = 8;
  if (*(_QWORD *)(v9 + 64) > 8uLL)
    v10 = *(_QWORD *)(v9 + 64);
  v11 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  v12 = v10
      + ((v11
        + ((((((((((((*(_QWORD *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 119) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 9) & ~v11)
      + 1;
  v13 = 8 * v12;
  if (a3 <= v8)
  {
    v14 = 0;
  }
  else if (v12 <= 3)
  {
    v16 = ((a3 - v8 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v16))
    {
      v14 = 4u;
    }
    else if (v16 >= 0x100)
    {
      v14 = 2;
    }
    else
    {
      v14 = v16 > 1;
    }
  }
  else
  {
    v14 = 1u;
  }
  if (v8 < a2)
  {
    v15 = ~v8 + a2;
    if (v12 < 4)
    {
      if ((_DWORD)v12)
      {
        v17 = v15 & ~(-1 << v13);
        bzero(a1, v12);
        if ((_DWORD)v12 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if ((_DWORD)v12 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v12);
      *(_DWORD *)a1 = v15;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

void sub_21CF3BBE0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_253F65B68)
  {
    sub_21D7C12B4();
    v0 = sub_21D7C0DE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_253F65B68);
  }
}

uint64_t sub_21CF3BC34()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_21CF3BCAC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
  }
  return v4;
}

uint64_t sub_21CF3BD5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_21CF3BDB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_21CF3BE14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_21CF3BE70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_21CF3BECC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 >= a2)
  {
    if ((_DWORD)v6)
      return __swift_getEnumTagSinglePayload(a1, v6, v4);
    return 0;
  }
  if (((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
    v7 = 2;
  else
    v7 = a2 - v6 + 1;
  if (v7 >= 0x10000)
    v8 = 4;
  else
    v8 = 2;
  if (v7 < 0x100)
    v8 = 1;
  if (v7 >= 2)
    v9 = v8;
  else
    v9 = 0;
  return ((uint64_t (*)(void))((char *)&loc_21CF3BF3C + 4 * byte_21D7D1126[v9]))();
}

void sub_21CF3BF90(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v7 >= a3)
  {
    v12 = 0;
  }
  else
  {
    v9 = a3 - v7;
    if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v10 = v9 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
  }
  if (a2 > v7)
  {
    if ((_DWORD)v8)
    {
      v13 = ~v7 + a2;
      bzero(a1, v8);
      *a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t sub_21CF3C070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  *(_BYTE *)(v4 + v5) = 0;
  if ((_DWORD)a2)
    return __swift_storeEnumTagSinglePayload(v4, a2, a3, a4);
  return result;
}

void sub_21CF3C0AC(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_WORD *)(v2 + v3) = 0;
  if (!a2)
    JUMPOUT(0x21CF3C0B4);
  JUMPOUT(0x21CF3C094);
}

uint64_t type metadata accessor for GridItemDescriptor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for GridItemDescriptor);
}

uint64_t sub_21CF3C0D8()
{
  return sub_21CF3EDFC();
}

void type metadata accessor for GridView.ScrollingHorizontalSectionView()
{
  JUMPOUT(0x22079380CLL);
}

uint64_t sub_21CF3C0F0(uint64_t a1, uint64_t a2)
{
  __swift_memcpy33_8(a2, a1);
  return a2;
}

void sub_21CF3C12C()
{
  sub_21CF399D0();
}

uint64_t sub_21CF3C144(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_21CF3C18C()
{
  sub_21CF39064();
}

void sub_21CF3C1A4()
{
  sub_21CF3C1C8(&qword_255331C58, &qword_253F66338, (void (*)(void))sub_21CF3C220);
}

void sub_21CF3C1C8(_QWORD *a1, uint64_t *a2, void (*a3)(void))
{
  if (!*a1)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    OUTLINED_FUNCTION_14_12();
  }
  OUTLINED_FUNCTION_54_1();
}

unint64_t sub_21CF3C220()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_255331C60;
  if (!qword_255331C60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66128);
    sub_21CDB6D4C(&qword_255331C68, (void (*)(uint64_t))MEMORY[0x24BDF4918]);
    v3 = v2;
    sub_21CDD363C(&qword_253F66B90, &qword_253F66B98);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_255331C60);
  }
  return result;
}

uint64_t sub_21CF3C2BC(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_21CF3C2CC(uint64_t a1)
{
  sub_21CF3AAA4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return a1;
}

uint64_t sub_21CF3C304()
{
  return 40;
}

__n128 sub_21CF3C310(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

void sub_21CF3C324()
{
  OUTLINED_FUNCTION_4_24();
}

void sub_21CF3C358()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_1(v1 + v0[15]);
  OUTLINED_FUNCTION_8_18(v1 + v0[17]);
  OUTLINED_FUNCTION_27_10();
  if (*(_QWORD *)(v1 + v0[20]))
    OUTLINED_FUNCTION_27_10();
  OUTLINED_FUNCTION_39_7();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B60);
  if (OUTLINED_FUNCTION_56_4() == 1)
  {
    v2 = sub_21D7C12B4();
    OUTLINED_FUNCTION_46(v2);
  }
  else
  {
    swift_release();
  }
  swift_deallocObject();
  OUTLINED_FUNCTION_2_37();
}

void sub_21CF3C3DC()
{
  type metadata accessor for GridView();
}

void sub_21CF3C42C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_58_6();
  v5 = OUTLINED_FUNCTION_35_9();
  sub_21CF397D4(v5, v6, v7, v0, v1, v2, v3, v4);
}

void sub_21CF3C478()
{
  OUTLINED_FUNCTION_4_24();
}

void sub_21CF3C4AC()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_1(v1 + v0[15]);
  OUTLINED_FUNCTION_8_18(v1 + v0[17]);
  OUTLINED_FUNCTION_27_10();
  if (*(_QWORD *)(v1 + v0[20]))
    OUTLINED_FUNCTION_27_10();
  OUTLINED_FUNCTION_39_7();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B60);
  if (OUTLINED_FUNCTION_56_4() == 1)
  {
    v2 = sub_21D7C12B4();
    OUTLINED_FUNCTION_46(v2);
  }
  else
  {
    swift_release();
  }
  swift_deallocObject();
  OUTLINED_FUNCTION_2_37();
}

void sub_21CF3C53C()
{
  type metadata accessor for GridView();
}

#error "21CF3C5C0: call analysis failed (funcsize=14)"

uint64_t sub_21CF3C5E4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21CF3C608(char *a1)
{
  uint64_t v1;

  return sub_21CF3A490(a1, *(uint64_t (**)(uint64_t, char *))(v1 + 56));
}

void sub_21CF3C62C()
{
  uint64_t *v0;

  sub_21CF3A368(v0[7], v0[8], v0[9]);
}

unint64_t sub_21CF3C640()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_253F5FA38;
  if (!qword_253F5FA38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F5FA30);
    v2 = sub_21CF3C6A4();
    result = MEMORY[0x2207938C0](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_253F5FA38);
  }
  return result;
}

unint64_t sub_21CF3C6A4()
{
  unint64_t result;

  result = qword_253F5FA28;
  if (!qword_253F5FA28)
  {
    result = MEMORY[0x2207938C0](&unk_21D7DAC4C, &type metadata for DividerOverlay);
    atomic_store(result, (unint64_t *)&qword_253F5FA28);
  }
  return result;
}

uint64_t sub_21CF3C6E8(uint64_t result)
{
  uint64_t v1;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v1 = result;
    if (result)
    {
      sub_21CF3C740();
      result = sub_21D7C5370();
      *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10) = v1;
    }
    else
    {
      return MEMORY[0x24BEE4AF8];
    }
  }
  return result;
}

unint64_t sub_21CF3C740()
{
  unint64_t result;

  result = qword_255331C70;
  if (!qword_255331C70)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255331C70);
  }
  return result;
}

uint64_t sub_21CF3C77C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_21CF3C784()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_21CF3C860(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  _OWORD *v28;
  _OWORD *v29;
  _OWORD *v30;
  _OWORD *v31;
  __int128 v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  __int128 *v40;
  __int128 v41;
  _QWORD *v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;

  v3 = (_QWORD *)a1;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64) + 7;
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((((((((((v7 + ((v6 + 120) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 111) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8)
     + 9 > 0x18)
  {
    v10 = *(_QWORD *)a2;
    *v3 = *(_QWORD *)a2;
    v3 = (_QWORD *)(v10 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
    *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 32) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 32);
    v11 = ((a1 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
    v12 = ((a2 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
    v13 = *(_OWORD *)v12;
    v14 = *(_OWORD *)(v12 + 16);
    *(_BYTE *)(v11 + 32) = *(_BYTE *)(v12 + 32);
    *(_OWORD *)v11 = v13;
    *(_OWORD *)(v11 + 16) = v14;
    v15 = (_QWORD *)(((a1 & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFF8);
    v16 = (_QWORD *)(((a2 & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFF8);
    *v15 = *v16;
    v17 = ~v6;
    v18 = ((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8;
    v19 = ((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8;
    if (*(_QWORD *)v19 < 0xFFFFFFFFuLL)
    {
      *(_OWORD *)v18 = *(_OWORD *)v19;
    }
    else
    {
      v20 = *(_QWORD *)(v19 + 8);
      *(_QWORD *)v18 = *(_QWORD *)v19;
      *(_QWORD *)(v18 + 8) = v20;
      swift_retain();
    }
    v21 = (_QWORD *)((v18 + 23) & 0xFFFFFFFFFFFFFFF8);
    v22 = (_QWORD *)((v19 + 23) & 0xFFFFFFFFFFFFFFF8);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = (char *)v22 + v6;
    v25 = ((unint64_t)v21 + v6 + 16) & v17;
    v26 = (unint64_t)(v24 + 16) & v17;
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v27(v25, v26, v4);
    v28 = (_OWORD *)((v7 + v25) & 0xFFFFFFFFFFFFFFF8);
    v29 = (_OWORD *)((v7 + v26) & 0xFFFFFFFFFFFFFFF8);
    *v28 = *v29;
    v30 = (_OWORD *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
    v31 = (_OWORD *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    v33 = ((unint64_t)v30 + 39) & 0xFFFFFFFFFFFFFFF8;
    v34 = ((unint64_t)v31 + 39) & 0xFFFFFFFFFFFFFFF8;
    v35 = *(_QWORD *)v34;
    v36 = *(_QWORD *)(v34 + 8);
    v37 = *(_QWORD *)(v34 + 16);
    v38 = *(_QWORD *)(v34 + 24);
    LOBYTE(v27) = *(_BYTE *)(v34 + 32);
    sub_21CF3AAA4(*(_QWORD *)v34, v36, v37, v38, (char)v27);
    *(_QWORD *)v33 = v35;
    *(_QWORD *)(v33 + 8) = v36;
    *(_QWORD *)(v33 + 16) = v37;
    *(_QWORD *)(v33 + 24) = v38;
    *(_BYTE *)(v33 + 32) = (_BYTE)v27;
    v39 = (_OWORD *)(((unint64_t)v30 + 79) & 0xFFFFFFFFFFFFFFF8);
    v40 = (__int128 *)(((unint64_t)v31 + 79) & 0xFFFFFFFFFFFFFFF8);
    v41 = *v40;
    *(_OWORD *)((char *)v39 + 9) = *(__int128 *)((char *)v40 + 9);
    *v39 = v41;
    v42 = (_QWORD *)(((unint64_t)v30 + 111) & 0xFFFFFFFFFFFFF8);
    v43 = (_QWORD *)(((unint64_t)v31 + 111) & 0xFFFFFFFFFFFFF8);
    *v42 = *v43;
    v44 = (_QWORD *)(((unint64_t)v42 + 15) & 0xFFFFFFFFFFFFF8);
    v45 = ((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFF8;
    v46 = *(_QWORD *)v45;
    v45 += 15;
    *v44 = v46;
    v47 = ((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8;
    v48 = *(_QWORD *)(v45 & 0xFFFFFFFFFFFFFFF8);
    LOBYTE(v36) = *(_BYTE *)((v45 & 0xFFFFFFFFFFFFFFF8) + 8);
    sub_21CE5289C(v48, v36);
    *(_QWORD *)v47 = v48;
    *(_BYTE *)(v47 + 8) = v36;
  }
  return v3;
}

uint64_t sub_21CF3CAD0(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v3 = (_QWORD *)(((((a1 & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v3 >= 0xFFFFFFFFuLL)
    swift_release();
  swift_release();
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v5 = ((((unint64_t)v3 + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v5);
  v6 = (((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  sub_21CF3AC44(*(_QWORD *)((v6 + 39) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((v6 + 39) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(((v6 + 39) & 0xFFFFFFFFFFFFFFF8) + 16), *(_QWORD *)(((v6 + 39) & 0xFFFFFFFFFFFFFFF8) + 24), *(_BYTE *)(((v6 + 39) & 0xFFFFFFFFFFFFFFF8) + 32));
  v7 = (((((v6 + 111) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_21CE52B54(*(_QWORD *)v7, *(_BYTE *)(v7 + 8));
}

unint64_t sub_21CF3CBA4(unint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  _OWORD *v26;
  _OWORD *v27;
  __int128 v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  __int128 *v36;
  __int128 v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 32) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 32);
  v5 = ((a1 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
  v6 = ((a2 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_OWORD *)v6;
  v8 = *(_OWORD *)(v6 + 16);
  *(_BYTE *)(v5 + 32) = *(_BYTE *)(v6 + 32);
  *(_OWORD *)v5 = v7;
  *(_OWORD *)(v5 + 16) = v8;
  v9 = (_QWORD *)(((a1 & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((a2 & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFF8);
  *v9 = *v10;
  v11 = ((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  v12 = ((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v12 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v11 = *(_OWORD *)v12;
  }
  else
  {
    v13 = *(_QWORD *)(v12 + 8);
    *(_QWORD *)v11 = *(_QWORD *)v12;
    *(_QWORD *)(v11 + 8) = v13;
    swift_retain();
  }
  v14 = (_QWORD *)((v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = *(_QWORD *)(a3 + 16);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = ((unint64_t)v14 + v19 + 16) & ~v19;
  v21 = ((unint64_t)v15 + v19 + 16) & ~v19;
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
  swift_retain();
  v22(v20, v21, v17);
  v23 = *(_QWORD *)(v18 + 64) + 7;
  v24 = (_OWORD *)((v23 + v20) & 0xFFFFFFFFFFFFFFF8);
  v25 = (_OWORD *)((v23 + v21) & 0xFFFFFFFFFFFFFFF8);
  *v24 = *v25;
  v26 = (_OWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  v27 = (_OWORD *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  v29 = ((unint64_t)v26 + 39) & 0xFFFFFFFFFFFFFFF8;
  v30 = ((unint64_t)v27 + 39) & 0xFFFFFFFFFFFFFFF8;
  v31 = *(_QWORD *)v30;
  v32 = *(_QWORD *)(v30 + 8);
  v33 = *(_QWORD *)(v30 + 16);
  v34 = *(_QWORD *)(v30 + 24);
  LOBYTE(v22) = *(_BYTE *)(v30 + 32);
  sub_21CF3AAA4(*(_QWORD *)v30, v32, v33, v34, (char)v22);
  *(_QWORD *)v29 = v31;
  *(_QWORD *)(v29 + 8) = v32;
  *(_QWORD *)(v29 + 16) = v33;
  *(_QWORD *)(v29 + 24) = v34;
  *(_BYTE *)(v29 + 32) = (_BYTE)v22;
  v35 = (_OWORD *)(((unint64_t)v26 + 79) & 0xFFFFFFFFFFFFFFF8);
  v36 = (__int128 *)(((unint64_t)v27 + 79) & 0xFFFFFFFFFFFFFFF8);
  v37 = *v36;
  *(_OWORD *)((char *)v35 + 9) = *(__int128 *)((char *)v36 + 9);
  *v35 = v37;
  v38 = (_QWORD *)(((unint64_t)v26 + 111) & 0xFFFFFFFFFFFFF8);
  v39 = (_QWORD *)(((unint64_t)v27 + 111) & 0xFFFFFFFFFFFFF8);
  *v38 = *v39;
  v40 = (_QWORD *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFF8);
  v41 = ((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFF8;
  v42 = *(_QWORD *)v41;
  v41 += 15;
  *v40 = v42;
  v43 = ((unint64_t)v40 + 15) & 0xFFFFFFFFFFFFFFF8;
  v44 = *(_QWORD *)(v41 & 0xFFFFFFFFFFFFFFF8);
  LOBYTE(v32) = *(_BYTE *)((v41 & 0xFFFFFFFFFFFFFFF8) + 8);
  sub_21CE5289C(v44, v32);
  *(_QWORD *)v43 = v44;
  *(_BYTE *)(v43 + 8) = v32;
  return a1;
}

unint64_t sub_21CF3CD9C(unint64_t a1, unint64_t a2, uint64_t a3)
{
  __int128 v5;
  unint64_t v6;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  _OWORD *v40;
  __int128 *v41;
  __int128 v42;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;

  v5 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(_OWORD *)a1 = v5;
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 32) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 32);
  v6 = ((a1 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
  v7 = ((a2 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_OWORD *)v7;
  v9 = *(_OWORD *)(v7 + 16);
  *(_BYTE *)(v6 + 32) = *(_BYTE *)(v7 + 32);
  *(_OWORD *)v6 = v8;
  *(_OWORD *)(v6 + 16) = v9;
  v10 = (_QWORD *)(((a1 & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFF8);
  v11 = (_QWORD *)(((a2 & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFF8);
  *v10 = *v11;
  v12 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  v13 = (unint64_t *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  v14 = *v13;
  if (*v12 < 0xFFFFFFFFuLL)
  {
    if (v14 >= 0xFFFFFFFF)
    {
      v16 = v13[1];
      *v12 = v14;
      v12[1] = v16;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)v12 = *(_OWORD *)v13;
    goto LABEL_8;
  }
  if (v14 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  v15 = v13[1];
  *v12 = v14;
  v12[1] = v15;
  swift_retain();
  swift_release();
LABEL_8:
  v17 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_QWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  swift_retain();
  swift_release();
  v20 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v21 = *(unsigned __int8 *)(v20 + 80);
  v22 = ((unint64_t)v17 + v21 + 16) & ~v21;
  v23 = ((unint64_t)v18 + v21 + 16) & ~v21;
  (*(void (**)(uint64_t, uint64_t))(v20 + 24))(v22, v23);
  v24 = *(_QWORD *)(v20 + 64) + 7;
  v25 = (_QWORD *)((v24 + v22) & 0xFFFFFFFFFFFFFFF8);
  v26 = (_QWORD *)((v24 + v23) & 0xFFFFFFFFFFFFFFF8);
  *v25 = *v26;
  v25[1] = v26[1];
  v27 = (_QWORD *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
  v28 = (_QWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v27 = *v28;
  v27[1] = v28[1];
  v27[2] = v28[2];
  v27[3] = v28[3];
  v29 = ((unint64_t)v27 + 39) & 0xFFFFFFFFFFFFFFF8;
  v30 = ((unint64_t)v28 + 39) & 0xFFFFFFFFFFFFFFF8;
  v31 = *(_QWORD *)v30;
  v32 = *(_QWORD *)(v30 + 8);
  v33 = *(_QWORD *)(v30 + 16);
  v34 = *(_QWORD *)(v30 + 24);
  LOBYTE(v20) = *(_BYTE *)(v30 + 32);
  sub_21CF3AAA4(*(_QWORD *)v30, v32, v33, v34, v20);
  v35 = *(_QWORD *)v29;
  v36 = *(_QWORD *)(v29 + 8);
  v37 = *(_QWORD *)(v29 + 16);
  v38 = *(_QWORD *)(v29 + 24);
  v39 = *(_BYTE *)(v29 + 32);
  *(_QWORD *)v29 = v31;
  *(_QWORD *)(v29 + 8) = v32;
  *(_QWORD *)(v29 + 16) = v33;
  *(_QWORD *)(v29 + 24) = v34;
  *(_BYTE *)(v29 + 32) = v20;
  sub_21CF3AC44(v35, v36, v37, v38, v39);
  v40 = (_OWORD *)(((unint64_t)v27 + 79) & 0xFFFFFFFFFFFFFFF8);
  v41 = (__int128 *)(((unint64_t)v28 + 79) & 0xFFFFFFFFFFFFFFF8);
  v42 = *v41;
  *(_OWORD *)((char *)v40 + 9) = *(__int128 *)((char *)v41 + 9);
  *v40 = v42;
  v43 = (_QWORD *)(((unint64_t)v27 + 111) & 0xFFFFFFFFFFFFF8);
  v44 = (_QWORD *)(((unint64_t)v28 + 111) & 0xFFFFFFFFFFFFF8);
  *v43 = *v44;
  v45 = (_QWORD *)(((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFF8);
  v46 = ((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFF8;
  v47 = *(_QWORD *)v46;
  v46 += 15;
  *v45 = v47;
  v48 = ((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFFFF8;
  v49 = *(_QWORD *)(v46 & 0xFFFFFFFFFFFFFFF8);
  LOBYTE(v32) = *(_BYTE *)((v46 & 0xFFFFFFFFFFFFFFF8) + 8);
  sub_21CE5289C(v49, v32);
  v50 = *(_QWORD *)v48;
  v51 = *(_BYTE *)(v48 + 8);
  *(_QWORD *)v48 = v49;
  *(_BYTE *)(v48 + 8) = v32;
  sub_21CE52B54(v50, v51);
  return a1;
}

unint64_t sub_21CF3D020(unint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v4;
  unint64_t v5;
  __int128 v6;
  __int128 v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  _OWORD *v22;
  _OWORD *v23;
  __int128 v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  __int128 v28;
  _OWORD *v29;
  __int128 *v30;
  __int128 v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 32) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 32);
  v4 = ((a1 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
  v5 = ((a2 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_OWORD *)v5;
  v7 = *(_OWORD *)(v5 + 16);
  *(_BYTE *)(v4 + 32) = *(_BYTE *)(v5 + 32);
  *(_OWORD *)v4 = v6;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = (_QWORD *)(((a1 & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFF8);
  v9 = (_QWORD *)(((a2 & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFF8);
  *v8 = *v9;
  v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  v11 = ((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v11 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v10 = *(_OWORD *)v11;
  }
  else
  {
    v12 = *(_QWORD *)(v11 + 8);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *(_QWORD *)(v10 + 8) = v12;
  }
  v13 = (_OWORD *)((v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_OWORD *)((v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v15 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = ((unint64_t)v13 + v16 + 16) & ~v16;
  v18 = ((unint64_t)v14 + v16 + 16) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v15 + 32))(v17, v18);
  v19 = *(_QWORD *)(v15 + 64) + 7;
  v20 = (_OWORD *)((v19 + v17) & 0xFFFFFFFFFFFFFFF8);
  v21 = (_OWORD *)((v19 + v18) & 0xFFFFFFFFFFFFFFF8);
  *v20 = *v21;
  v22 = (_OWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_OWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = ((unint64_t)v22 + 39) & 0xFFFFFFFFFFFFFFF8;
  v26 = ((unint64_t)v23 + 39) & 0xFFFFFFFFFFFFFFF8;
  v27 = *(_BYTE *)(v26 + 32);
  v28 = *(_OWORD *)(v26 + 16);
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *(_OWORD *)(v25 + 16) = v28;
  *(_BYTE *)(v25 + 32) = v27;
  v29 = (_OWORD *)(((unint64_t)v22 + 79) & 0xFFFFFFFFFFFFFFF8);
  v30 = (__int128 *)(((unint64_t)v23 + 79) & 0xFFFFFFFFFFFFFFF8);
  v31 = *v30;
  *(_OWORD *)((char *)v29 + 9) = *(__int128 *)((char *)v30 + 9);
  *v29 = v31;
  v32 = (_QWORD *)(((unint64_t)v22 + 111) & 0xFFFFFFFFFFFFF8);
  v33 = (_QWORD *)(((unint64_t)v23 + 111) & 0xFFFFFFFFFFFFF8);
  *v32 = *v33;
  v34 = (_QWORD *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFF8);
  v35 = (_QWORD *)(((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFF8);
  *v34 = *v35;
  v36 = ((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = ((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v38 = *(_QWORD *)v37;
  *(_BYTE *)(v36 + 8) = *(_BYTE *)(v37 + 8);
  *(_QWORD *)v36 = v38;
  return a1;
}

unint64_t sub_21CF3D1C4(unint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  __int128 v35;
  _OWORD *v36;
  __int128 *v37;
  __int128 v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 32) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 32);
  v5 = ((a1 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
  v6 = ((a2 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_OWORD *)v6;
  v8 = *(_OWORD *)(v6 + 16);
  *(_BYTE *)(v5 + 32) = *(_BYTE *)(v6 + 32);
  *(_OWORD *)v5 = v7;
  *(_OWORD *)(v5 + 16) = v8;
  v9 = (_QWORD *)(((a1 & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((a2 & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFF8);
  *v9 = *v10;
  v11 = (_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  v12 = (unint64_t *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  v13 = *v12;
  if (*v11 < 0xFFFFFFFFuLL)
  {
    if (v13 >= 0xFFFFFFFF)
    {
      v15 = v12[1];
      *v11 = v13;
      v11[1] = v15;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)v11 = *(_OWORD *)v12;
    goto LABEL_8;
  }
  if (v13 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  v14 = v12[1];
  *v11 = v13;
  v11[1] = v14;
  swift_release();
LABEL_8:
  v16 = (_OWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_OWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  swift_release();
  v18 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = ((unint64_t)v16 + v19 + 16) & ~v19;
  v21 = ((unint64_t)v17 + v19 + 16) & ~v19;
  (*(void (**)(uint64_t, uint64_t))(v18 + 40))(v20, v21);
  v22 = *(_QWORD *)(v18 + 64) + 7;
  v23 = (_QWORD *)((v22 + v20) & 0xFFFFFFFFFFFFFFF8);
  v24 = (_QWORD *)((v22 + v21) & 0xFFFFFFFFFFFFFFF8);
  *v23 = *v24;
  v23[1] = v24[1];
  v25 = (_QWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  v26 = (_QWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v25 = *v26;
  v25[1] = v26[1];
  v25[2] = v26[2];
  v25[3] = v26[3];
  v27 = ((unint64_t)v25 + 39) & 0xFFFFFFFFFFFFFFF8;
  v28 = ((unint64_t)v26 + 39) & 0xFFFFFFFFFFFFFFF8;
  v29 = *(_BYTE *)(v28 + 32);
  v30 = *(_QWORD *)v27;
  v31 = *(_QWORD *)(v27 + 8);
  v32 = *(_QWORD *)(v27 + 16);
  v33 = *(_QWORD *)(v27 + 24);
  v34 = *(_BYTE *)(v27 + 32);
  v35 = *(_OWORD *)(v28 + 16);
  *(_OWORD *)v27 = *(_OWORD *)v28;
  *(_OWORD *)(v27 + 16) = v35;
  *(_BYTE *)(v27 + 32) = v29;
  sub_21CF3AC44(v30, v31, v32, v33, v34);
  v36 = (_OWORD *)(((unint64_t)v25 + 79) & 0xFFFFFFFFFFFFFFF8);
  v37 = (__int128 *)(((unint64_t)v26 + 79) & 0xFFFFFFFFFFFFFFF8);
  v38 = *v37;
  *(_OWORD *)((char *)v36 + 9) = *(__int128 *)((char *)v37 + 9);
  *v36 = v38;
  v39 = (_QWORD *)(((unint64_t)v25 + 111) & 0xFFFFFFFFFFFFF8);
  v40 = (_QWORD *)(((unint64_t)v26 + 111) & 0xFFFFFFFFFFFFF8);
  *v39 = *v40;
  v41 = (_QWORD *)(((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFF8);
  v42 = (_QWORD *)(((unint64_t)v40 + 15) & 0xFFFFFFFFFFFFF8);
  *v41 = *v42;
  v43 = ((unint64_t)v41 + 15) & 0xFFFFFFFFFFFFFFF8;
  v44 = ((unint64_t)v42 + 15) & 0xFFFFFFFFFFFFFFF8;
  v45 = *(_QWORD *)v44;
  LOBYTE(v44) = *(_BYTE *)(v44 + 8);
  v46 = *(_QWORD *)v43;
  v47 = *(_BYTE *)(v43 + 8);
  *(_QWORD *)v43 = v45;
  *(_BYTE *)(v43 + 8) = v44;
  sub_21CE52B54(v46, v47);
  return a1;
}

uint64_t sub_21CF3D3F8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unint64_t *v15;
  unint64_t v16;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(unsigned __int8 *)(v5 + 80);
  if (v7 >= a2)
  {
    v15 = (unint64_t *)(((((((a1 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8)
                              + 23) & 0xFFFFFFFFFFFFFFF8);
    if ((v6 & 0x80000000) != 0)
    {
      return __swift_getEnumTagSinglePayload(((unint64_t)v15 + v8 + 16) & ~v8, v6, v4);
    }
    else
    {
      v16 = *v15;
      if (v16 >= 0xFFFFFFFF)
        LODWORD(v16) = -1;
      return (v16 + 1);
    }
  }
  else
  {
    v9 = ((((((((((*(_QWORD *)(v5 + 64) + ((v8 + 120) & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
             + 111) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 9;
    v10 = (a2 - v7 + 255) >> (8 * v9);
    if (v9 < 4)
      v11 = v10 + 1;
    else
      v11 = 2;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v12 = 1;
    if (v11 >= 2)
      v13 = v12;
    else
      v13 = 0;
    return ((uint64_t (*)(void))((char *)&loc_21CF3D4B0 + 4 * byte_21D7D1135[v13]))();
  }
}

void sub_21CF3D558(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((((((((((*(_QWORD *)(v5 + 64)
               + ((*(unsigned __int8 *)(v5 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
               + 7) & 0xFFFFFFFFFFFFFFF8)
             + 23) & 0xFFFFFFFFFFFFFFF8)
           + 111) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8)
     + 9;
  if (v6 >= a3)
  {
    v10 = 0;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 255) >> (8 * v7)) + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
  }
  if (v6 < a2)
  {
    v11 = ~v6 + a2;
    v12 = (~(_BYTE)v6 + a2);
    if (v7 >= 4)
      v13 = v11;
    else
      v13 = v12;
    bzero(a1, v7);
    if ((_DWORD)v7 == 1)
      *a1 = v13;
    else
      *(_DWORD *)a1 = v13;
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

void sub_21CF3D6A4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x21CF3D728);
}

void sub_21CF3D6AC(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x21CF3D6B4);
  JUMPOUT(0x21CF3D728);
}

void sub_21CF3D6E0()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x21CF3D728);
}

void sub_21CF3D6E8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x21CF3D728);
}

void sub_21CF3D6F0(uint64_t a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_WORD *)(v3 + v4) = 0;
  if (a2)
  {
    if ((a3 & 0x80000000) == 0)
    {
      if ((a2 & 0x80000000) == 0)
        JUMPOUT(0x21CF3D724);
      JUMPOUT(0x21CF3D71CLL);
    }
    JUMPOUT(0x21CF3D6FCLL);
  }
  JUMPOUT(0x21CF3D728);
}

void sub_21CF3D740()
{
  OUTLINED_FUNCTION_16_11();
  type metadata accessor for GridView.ScrollingHorizontalSectionView();
}

void sub_21CF3D78C()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66460);
  sub_21D7C08B8();
  OUTLINED_FUNCTION_73();
}

void sub_21CF3D7C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v18 = MEMORY[0x24BEE23D0];
  *(_QWORD *)(v17 - 128) = v15;
  *(_QWORD *)(v17 - 120) = v18;
  *(_QWORD *)(v17 - 112) = v16;
  *(_QWORD *)(v17 - 104) = a1;
  OUTLINED_FUNCTION_21_11(MEMORY[0x24BEE23D8]);
  OUTLINED_FUNCTION_22_9();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66A98);
  OUTLINED_FUNCTION_36_7();
  OUTLINED_FUNCTION_86();
  OUTLINED_FUNCTION_65_6();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66D28);
  OUTLINED_FUNCTION_30_6();
  *(_QWORD *)(v17 - 136) = a15;
  OUTLINED_FUNCTION_5_26();
}

void sub_21CF3D85C(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;

  v3 = sub_21CE662A0();
  *(_QWORD *)(v1 - 152) = a1;
  *(_QWORD *)(v1 - 144) = v3;
  OUTLINED_FUNCTION_14_12();
}

void sub_21CF3D87C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  sub_21CDD363C(&qword_253F66A90, v1);
  *(_QWORD *)(v2 - 168) = a1;
  *(_QWORD *)(v2 - 160) = v4;
  OUTLINED_FUNCTION_52();
}

void sub_21CF3D8AC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  sub_21CDD363C(&qword_253F66AB0, v1);
  *(_QWORD *)(v2 - 184) = a1;
  *(_QWORD *)(v2 - 176) = v4;
  OUTLINED_FUNCTION_62();
}

void sub_21CF3D8D4()
{
  uint64_t *v0;

  sub_21CDD363C(&qword_253F66D20, v0);
  OUTLINED_FUNCTION_100();
}

void sub_21CF3D904(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 128) = MEMORY[0x24BEE4078];
  *(_QWORD *)(v2 - 120) = v1;
  *(_QWORD *)(v2 - 112) = MEMORY[0x24BEE4088];
  *(_QWORD *)(v2 - 104) = a1;
  OUTLINED_FUNCTION_16_11();
  sub_21D7C2070();
  sub_21D7C11B8();
  OUTLINED_FUNCTION_52();
}

void sub_21CF3D940(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v3 - 128) = v1;
  *(_QWORD *)(v3 - 120) = v2;
  v4 = MEMORY[0x24BDEC9F8];
  *(_QWORD *)(v3 - 112) = a1;
  *(_QWORD *)(v3 - 104) = v4;
  OUTLINED_FUNCTION_16_11();
  OUTLINED_FUNCTION_5_0();
}

void sub_21CF3D968(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  *(_QWORD *)(v5 - 128) = v1;
  *(_QWORD *)(v5 - 120) = v2;
  *(_QWORD *)(v5 - 112) = v3;
  *(_QWORD *)(v5 - 104) = v4;
  v7 = OUTLINED_FUNCTION_4_0();
  *(_QWORD *)(v5 - 128) = a1;
  *(_QWORD *)(v5 - 120) = v7;
  OUTLINED_FUNCTION_16_11();
  OUTLINED_FUNCTION_5_0();
}

void sub_21CF3D994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;

  OUTLINED_FUNCTION_26_10();
  OUTLINED_FUNCTION_26_10();
  OUTLINED_FUNCTION_62_4();
  sub_21D7C2E08();
  sub_21D7C1AB8();
  *(_QWORD *)(v15 - 128) = a12;
  *(_QWORD *)(v15 - 120) = a15;
  OUTLINED_FUNCTION_16_11();
  OUTLINED_FUNCTION_5_0();
}

void sub_21CF3DA10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_86();
  v18 = OUTLINED_FUNCTION_36_7();
  *(_QWORD *)(v17 - 128) = v15;
  *(_QWORD *)(v17 - 120) = MEMORY[0x24BEE23D0];
  *(_QWORD *)(v17 - 112) = v18;
  *(_QWORD *)(v17 - 104) = a14;
  OUTLINED_FUNCTION_21_11(MEMORY[0x24BEE23D8]);
  sub_21D7C1344();
  *(_QWORD *)(v17 - 128) = v16;
  *(_QWORD *)(v17 - 120) = a15;
  OUTLINED_FUNCTION_4_0();
  sub_21CDD363C(&qword_253F66618, &qword_253F66620);
  OUTLINED_FUNCTION_14_12();
}

void sub_21CF3DAB0()
{
  OUTLINED_FUNCTION_73();
}

void sub_21CF3DAC4()
{
  OUTLINED_FUNCTION_11_18();
}

void sub_21CF3DAD8()
{
  OUTLINED_FUNCTION_45_6();
  sub_21D7C2DD8();
  OUTLINED_FUNCTION_40_7();
  OUTLINED_FUNCTION_26_10();
  OUTLINED_FUNCTION_26_10();
  OUTLINED_FUNCTION_45_6();
  OUTLINED_FUNCTION_26_10();
  OUTLINED_FUNCTION_64_5();
  OUTLINED_FUNCTION_26_10();
  sub_21D7C1AB8();
  OUTLINED_FUNCTION_5_26();
}

void sub_21CF3DB38()
{
  OUTLINED_FUNCTION_62();
}

void sub_21CF3DB48()
{
  OUTLINED_FUNCTION_71();
}

void sub_21CF3DB60()
{
  OUTLINED_FUNCTION_61();
}

void sub_21CF3DB70()
{
  OUTLINED_FUNCTION_52();
}

void sub_21CF3DB90()
{
  OUTLINED_FUNCTION_11_18();
}

void sub_21CF3DBA0()
{
  OUTLINED_FUNCTION_15_12();
}

void sub_21CF3DBB0()
{
  OUTLINED_FUNCTION_14_12();
}

void sub_21CF3DBC0()
{
  OUTLINED_FUNCTION_73();
}

uint64_t sub_21CF3DBF0()
{
  return sub_21CF3EDFC();
}

void type metadata accessor for GridView.HorizontalSectionItemView()
{
  JUMPOUT(0x22079380CLL);
}

void sub_21CF3DC08()
{
  type metadata accessor for GridView.ScrollingHorizontalSectionView();
}

#error "21CF3DC80: call analysis failed (funcsize=23)"

void sub_21CF3DC9C()
{
  type metadata accessor for GridView.ScrollingHorizontalSectionView();
}

#error "21CF3DD3C: call analysis failed (funcsize=23)"

void sub_21CF3DD5C(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_21CF35FB8(*(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(unsigned __int8 *)(v1 + 80), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), a1, *(_QWORD *)(v1 + 48));
}

void sub_21CF3DD94()
{
  sub_21CF366C0();
}

void sub_21CF3DDB0()
{
  type metadata accessor for GridView.ScrollingHorizontalSectionView();
}

#error "21CF3DE20: call analysis failed (funcsize=21)"

void sub_21CF3DE3C()
{
  type metadata accessor for GridView.ScrollingHorizontalSectionView();
}

void sub_21CF3DE8C()
{
  OUTLINED_FUNCTION_47_6();
  OUTLINED_FUNCTION_35_9();
  sub_21CF36CE8();
}

void sub_21CF3DEE8()
{
  sub_21CF3727C();
}

uint64_t sub_21CF3DEFC()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_21CF3DF04()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21CF3DFC4(uint64_t a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64) + 7;
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((((((((v7 + ((v6 + 9) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x18)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v10 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16));
  }
  else
  {
    v11 = ~v6;
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v12 = a1 + v6;
    v13 = (uint64_t)a2 + v6;
    v14 = (v12 + 9) & v11;
    v15 = (v13 + 9) & v11;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v14, v15, AssociatedTypeWitness);
    v16 = (_QWORD *)((v7 + v14) & 0xFFFFFFFFFFFFF8);
    v17 = (_QWORD *)((v7 + v15) & 0xFFFFFFFFFFFFF8);
    *v16 = *v17;
    v18 = ((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8;
    v19 = ((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8;
    if (*(_QWORD *)v19 < 0xFFFFFFFFuLL)
    {
      *(_OWORD *)v18 = *(_OWORD *)v19;
    }
    else
    {
      v20 = *(_QWORD *)(v19 + 8);
      *(_QWORD *)v18 = *(_QWORD *)v19;
      *(_QWORD *)(v18 + 8) = v20;
      swift_retain();
    }
    v21 = (_QWORD *)((v18 + 23) & 0xFFFFFFFFFFFFF8);
    v22 = (_QWORD *)((v19 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v21 = *v22;
    v23 = (_QWORD *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
    v24 = v23[1];
    v25 = (_QWORD *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v25 = *v23;
    v25[1] = v24;
  }
  swift_retain();
  return a1;
}

uint64_t sub_21CF3E144(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  unint64_t v4;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = (a1 + *(unsigned __int8 *)(v3 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v4, AssociatedTypeWitness);
  if (*(_QWORD *)((((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) >= 0xFFFFFFFFuLL)
    swift_release();
  return swift_release();
}

uint64_t sub_21CF3E1F8(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 + 9 + a1) & ~v6;
  v8 = (v6 + 9 + a2) & ~v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v7, v8, AssociatedTypeWitness);
  v9 = *(_QWORD *)(v5 + 64) + 7;
  v10 = (_QWORD *)((v9 + v7) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)((v9 + v8) & 0xFFFFFFFFFFFFFFF8);
  *v10 = *v11;
  v12 = ((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  v13 = ((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v13 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
  }
  else
  {
    v14 = *(_QWORD *)(v13 + 8);
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *(_QWORD *)(v12 + 8) = v14;
    swift_retain();
  }
  v15 = (_QWORD *)((v12 + 23) & 0xFFFFFFFFFFFFF8);
  v16 = (_QWORD *)((v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v17 = (_QWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  v18 = v17[1];
  v19 = (_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v19 = *v17;
  v19[1] = v18;
  swift_retain();
  return a1;
}

uint64_t sub_21CF3E30C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 + 9 + a1) & ~v6;
  v8 = (v6 + 9 + a2) & ~v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(v7, v8, AssociatedTypeWitness);
  v9 = *(_QWORD *)(v5 + 64) + 7;
  v10 = (_QWORD *)((v9 + v7) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)((v9 + v8) & 0xFFFFFFFFFFFFFFF8);
  *v10 = *v11;
  v12 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  v13 = (unint64_t *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  v14 = *v13;
  if (*v12 < 0xFFFFFFFFuLL)
  {
    if (v14 >= 0xFFFFFFFF)
    {
      v16 = v13[1];
      *v12 = v14;
      v12[1] = v16;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)v12 = *(_OWORD *)v13;
    goto LABEL_8;
  }
  if (v14 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  v15 = v13[1];
  *v12 = v14;
  v12[1] = v15;
  swift_retain();
  swift_release();
LABEL_8:
  v17 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFF8);
  v18 = (_QWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v17 = *v18;
  v19 = (_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_21CF3E46C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 + 9 + a1) & ~v6;
  v8 = (v6 + 9 + a2) & ~v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v7, v8, AssociatedTypeWitness);
  v9 = *(_QWORD *)(v5 + 64) + 7;
  v10 = (_QWORD *)((v9 + v7) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)((v9 + v8) & 0xFFFFFFFFFFFFFFF8);
  *v10 = *v11;
  v12 = ((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  v13 = ((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v13 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
  }
  else
  {
    v14 = *(_QWORD *)(v13 + 8);
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *(_QWORD *)(v12 + 8) = v14;
  }
  v15 = (_QWORD *)((v12 + 23) & 0xFFFFFFFFFFFFF8);
  v16 = (_QWORD *)((v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  *(_OWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_21CF3E578(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 + 9 + a1) & ~v6;
  v8 = (v6 + 9 + a2) & ~v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(v7, v8, AssociatedTypeWitness);
  v9 = *(_QWORD *)(v5 + 64) + 7;
  v10 = (_QWORD *)((v9 + v7) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)((v9 + v8) & 0xFFFFFFFFFFFFFFF8);
  *v10 = *v11;
  v12 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  v13 = (unint64_t *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  v14 = *v13;
  if (*v12 < 0xFFFFFFFFuLL)
  {
    if (v14 >= 0xFFFFFFFF)
    {
      v16 = v13[1];
      *v12 = v14;
      v12[1] = v16;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)v12 = *(_OWORD *)v13;
    goto LABEL_8;
  }
  if (v14 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  v15 = v13[1];
  *v12 = v14;
  v12[1] = v15;
  swift_release();
LABEL_8:
  v17 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFF8);
  v18 = (_QWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v17 = *v18;
  *(_OWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_21CF3E6C4(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v15;
  unint64_t v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = AssociatedTypeWitness;
  v9 = *(unsigned __int8 *)(v5 + 80);
  v10 = *(_QWORD *)(v5 + 64) + 7;
  if (v7 < a2)
  {
    if (((((((((((v10 + ((v9 + 9) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16) & 0xFFFFFFF8) != 0)
      v11 = 2;
    else
      v11 = a2 - v7 + 1;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v12 = 1;
    if (v11 >= 2)
      v13 = v12;
    else
      v13 = 0;
    __asm { BR              X15 }
  }
  v15 = (a1 + v9 + 9) & ~v9;
  if (v6 >= 0x7FFFFFFF)
    return __swift_getEnumTagSinglePayload(v15, v6, v8);
  v16 = *(_QWORD *)((((((((v10 + v15) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8);
  if (v16 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  return (v16 + 1);
}

void sub_21CF3E860(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v6 + 84) <= 0x7FFFFFFFu)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v6 + 84);
  if (v7 >= a3)
  {
    v10 = 0;
  }
  else
  {
    if (((((((((*(_DWORD *)(v6 + 64) + 7 + ((*(unsigned __int8 *)(v6 + 80) + 9) & ~*(unsigned __int8 *)(v6 + 80))) & 0xFFFFFFF8)
             + 15) & 0xFFFFFFF8)
           + 23) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v8 = a3 - v7 + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
  }
  if (a2 > v7)
  {
    if (((((((((*(_DWORD *)(v6 + 64) + 7 + ((*(unsigned __int8 *)(v6 + 80) + 9) & ~*(unsigned __int8 *)(v6 + 80))) & 0xFFFFFFF8)
             + 15) & 0xFFFFFFF8)
           + 23) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      v11 = ~v7 + a2;
      bzero(a1, ((((((((*(_QWORD *)(v6 + 64)+ 7+ ((*(unsigned __int8 *)(v6 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 16);
      *a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

void sub_21CF3E9A8(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  *(_BYTE *)(v6 + v7) = 0;
  if ((_DWORD)v5)
  {
    v8 = (v6 + v3 + 9) & v4;
    if (a1 < 0x7FFFFFFF)
    {
      v9 = (_QWORD *)((((((((a3 + v8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                     + 15) & 0xFFFFFFFFFFFFFFF8);
      if ((v5 & 0x80000000) != 0)
      {
        v10 = v5 ^ 0x80000000;
        v9[1] = 0;
      }
      else
      {
        v10 = (v5 - 1);
      }
      *v9 = v10;
    }
    else
    {
      __swift_storeEnumTagSinglePayload(v8, v5, a1, a2);
    }
  }
}

void sub_21CF3EA58()
{
  sub_21D7C08B8();
  OUTLINED_FUNCTION_16_11();
  type metadata accessor for GridView.HorizontalSectionItemView();
}

void sub_21CF3EAB4()
{
  OUTLINED_FUNCTION_65_6();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66620);
  OUTLINED_FUNCTION_19_10();
  OUTLINED_FUNCTION_5_26();
}

void sub_21CF3EAEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = MEMORY[0x24BEE23D0];
  *(_QWORD *)(v3 - 128) = v1;
  *(_QWORD *)(v3 - 120) = v4;
  *(_QWORD *)(v3 - 112) = v2;
  *(_QWORD *)(v3 - 104) = a1;
  OUTLINED_FUNCTION_21_11(MEMORY[0x24BEE23D8]);
  OUTLINED_FUNCTION_86();
  OUTLINED_FUNCTION_45_6();
  sub_21D7C1344();
  OUTLINED_FUNCTION_52();
}

void sub_21CF3EB34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = MEMORY[0x24BDEBEE0];
  *(_QWORD *)(v1 - 144) = a1;
  *(_QWORD *)(v1 - 136) = v2;
  OUTLINED_FUNCTION_71();
}

void sub_21CF3EB54()
{
  uint64_t *v0;

  sub_21CDD363C(&qword_253F66618, v0);
  OUTLINED_FUNCTION_73();
}

void sub_21CF3EB80()
{
  OUTLINED_FUNCTION_11_18();
}

void sub_21CF3EB94()
{
  uint64_t *v0;

  sub_21CDD363C(&qword_253F66688, v0);
  OUTLINED_FUNCTION_5_26();
}

void sub_21CF3EBC0()
{
  sub_21D7C2D9C();
  OUTLINED_FUNCTION_5_26();
}

void sub_21CF3EBE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 128) = v1;
  *(_QWORD *)(v2 - 120) = a1;
  OUTLINED_FUNCTION_16_11();
  OUTLINED_FUNCTION_5_0();
}

void sub_21CF3EBFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_41_8();
  OUTLINED_FUNCTION_41_8();
  OUTLINED_FUNCTION_45_6();
  OUTLINED_FUNCTION_41_8();
  OUTLINED_FUNCTION_40_7();
  OUTLINED_FUNCTION_41_8();
  *(_QWORD *)(v2 - 128) = v0;
  *(_QWORD *)(v2 - 120) = v1;
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_71();
}

void sub_21CF3EC60()
{
  OUTLINED_FUNCTION_11_18();
}

void sub_21CF3EC70()
{
  OUTLINED_FUNCTION_61();
}

void sub_21CF3EC80()
{
  OUTLINED_FUNCTION_15_12();
}

void sub_21CF3EC90()
{
  OUTLINED_FUNCTION_64_5();
  sub_21D7C0D68();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66AA8);
  OUTLINED_FUNCTION_22_9();
  OUTLINED_FUNCTION_5_26();
}

void sub_21CF3ECC8()
{
  uint64_t *v0;

  sub_21CDD363C(&qword_253F66AA0, v0);
  OUTLINED_FUNCTION_14_12();
}

void sub_21CF3ECF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 128) = v1;
  *(_QWORD *)(v2 - 120) = a1;
  OUTLINED_FUNCTION_16_11();
  OUTLINED_FUNCTION_5_0();
}

void sub_21CF3ED10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 128) = v1;
  *(_QWORD *)(v2 - 120) = v0;
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_64_5();
  sub_21D7C1410();
  sub_21D7C1E6C();
  OUTLINED_FUNCTION_5_26();
}

void sub_21CF3ED4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v3 - 128) = v1;
  *(_QWORD *)(v3 - 120) = v2;
  v4 = MEMORY[0x24BDF10F0];
  *(_QWORD *)(v3 - 112) = a1;
  *(_QWORD *)(v3 - 104) = v4;
  OUTLINED_FUNCTION_16_11();
  OUTLINED_FUNCTION_5_0();
}

void sub_21CF3ED74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F66D28);
  OUTLINED_FUNCTION_19_10();
  *(_QWORD *)(v4 - 128) = v0;
  *(_QWORD *)(v4 - 120) = v1;
  *(_QWORD *)(v4 - 112) = v2;
  *(_QWORD *)(v4 - 104) = v3;
  OUTLINED_FUNCTION_4_0();
  sub_21CDD363C(&qword_253F66D20, &qword_253F66D28);
  OUTLINED_FUNCTION_71();
}

uint64_t sub_21CF3EDF0()
{
  return sub_21CF3EDFC();
}

uint64_t sub_21CF3EDFC()
{
  return OUTLINED_FUNCTION_4_0();
}

void sub_21CF3EE30()
{
  type metadata accessor for GridView.HorizontalSectionItemView();
}

uint64_t sub_21CF3EE6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  v4 = v1 + ((v3 + 56) & ~v3);
  v5 = v4 + *(int *)(a1 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v5, AssociatedTypeWitness);
  if (*(_QWORD *)(v4 + *(int *)(a1 + 72)))
    OUTLINED_FUNCTION_27_10();
  OUTLINED_FUNCTION_27_10();
  return swift_deallocObject();
}

void sub_21CF3EF2C()
{
  type metadata accessor for GridView.HorizontalSectionItemView();
}

void sub_21CF3EF68()
{
  OUTLINED_FUNCTION_58_6();
  sub_21CF379D4();
}

void sub_21CF3EF9C()
{
  OUTLINED_FUNCTION_5_0();
}

void sub_21CF3EFD4()
{
  sub_21D7C1344();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_5_26();
}

void OUTLINED_FUNCTION_4_24()
{
  type metadata accessor for GridView();
}

uint64_t sub_21CF3F054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(a9 - 8) + 8))(v9+ ((*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80)));
}

void OUTLINED_FUNCTION_5_26()
{
  JUMPOUT(0x2207938C0);
}

uint64_t OUTLINED_FUNCTION_8_18@<X0>(uint64_t a1@<X8>)
{
  return sub_21CF3AC44(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

void OUTLINED_FUNCTION_11_18()
{
  JUMPOUT(0x2207938C0);
}

void OUTLINED_FUNCTION_14_12()
{
  JUMPOUT(0x2207938C0);
}

void OUTLINED_FUNCTION_15_12()
{
  JUMPOUT(0x2207938C0);
}

uint64_t OUTLINED_FUNCTION_16_11()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_18_8()
{
  uint64_t v0;
  uint64_t v1;

  sub_21CE52B54(*(_QWORD *)(v1 + *(int *)(v0 + 108)), *(_BYTE *)(v1 + *(int *)(v0 + 108) + 8));
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_19_10()
{
  return sub_21D7C1344();
}

uint64_t OUTLINED_FUNCTION_21_11@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = a1;
  return sub_21D7C2BC8();
}

uint64_t OUTLINED_FUNCTION_22_9()
{
  return sub_21D7C1344();
}

uint64_t OUTLINED_FUNCTION_23_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a9 - 8) + 8))(v10 + *(int *)(v9 + 80));
}

uint64_t OUTLINED_FUNCTION_24_7()
{
  return sub_21D7C1344();
}

uint64_t OUTLINED_FUNCTION_26_10()
{
  return sub_21D7C1344();
}

uint64_t OUTLINED_FUNCTION_27_10()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_28_8()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_30_6()
{
  return sub_21D7C1344();
}

uint64_t OUTLINED_FUNCTION_33_5()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_34_8()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_35_9()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_36_7()
{
  return sub_21D7C1344();
}

uint64_t OUTLINED_FUNCTION_39_7()
{
  uint64_t v0;
  uint64_t v1;

  return sub_21CE52B54(*(_QWORD *)(v1 + *(int *)(v0 + 88)), *(_BYTE *)(v1 + *(int *)(v0 + 88) + 8));
}

uint64_t OUTLINED_FUNCTION_40_7()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_41_8()
{
  return sub_21D7C1344();
}

uint64_t OUTLINED_FUNCTION_42_7@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 1200) = a1;
  return sub_21D7C2BC8();
}

uint64_t OUTLINED_FUNCTION_44_7()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_45_6()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_48_5()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_49_5()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_52_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

void OUTLINED_FUNCTION_53_5()
{
  JUMPOUT(0x2207938C0);
}

void OUTLINED_FUNCTION_54_4()
{
  JUMPOUT(0x2207938C0);
}

uint64_t OUTLINED_FUNCTION_56_4()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_59_5(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_60_4(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_62_4()
{
  return swift_getTupleTypeMetadata2();
}

void OUTLINED_FUNCTION_63_6()
{
  JUMPOUT(0x2207938C0);
}

uint64_t OUTLINED_FUNCTION_64_5()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_65_6()
{
  return sub_21D7C1344();
}

uint64_t sub_21CF3F2E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _BYTE *v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *boxed_opaque_existential_1;
  uint64_t result;
  uint64_t v16;
  uint64_t (*v17)();
  unint64_t *v18;
  void *v19;
  uint64_t v20;
  uint64_t (*v21)();
  unint64_t *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37[4];

  v4 = (uint64_t)v3;
  v8 = sub_21D7C3FC0();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_21D7C4EFC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(*v3)
  {
    case 4:
      v20 = type metadata accessor for AlbumDetailPageIntent();
      v21 = type metadata accessor for AlbumDetailPageIntent;
      *(_QWORD *)(a3 + 24) = v20;
      v22 = (unint64_t *)&unk_255331CD8;
      v23 = &unk_21D7F91A8;
      goto LABEL_13;
    case 5:
      v24 = type metadata accessor for ArtistDetailPageIntent();
      v17 = type metadata accessor for ArtistDetailPageIntent;
      *(_QWORD *)(a3 + 24) = v24;
      v18 = (unint64_t *)&unk_255331CD0;
      v19 = &unk_21D7E9390;
      goto LABEL_17;
    case 6:
      v25 = type metadata accessor for ArtistUploadedVideoDetailPageIntent();
      v17 = type metadata accessor for ArtistUploadedVideoDetailPageIntent;
      *(_QWORD *)(a3 + 24) = v25;
      v18 = (unint64_t *)&unk_255331C90;
      v19 = &unk_21D7DC8EC;
      goto LABEL_17;
    case 7:
    case 8:
    case 0xA:
    case 0xB:
    case 0xF:
    case 0x10:
    case 0x11:
    case 0x14:
      if (qword_25532E160 != -1)
        swift_once();
      v13 = __swift_project_value_buffer(v9, (uint64_t)qword_255331C78);
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F67DC0);
      sub_21D7C3FE4();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_21D7C8560;
      sub_21D7C3FB4();
      sub_21D7C3FA8();
      v37[3] = type metadata accessor for ContentDescriptor();
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v37);
      sub_21CF3F838((uint64_t)v3, (uint64_t)boxed_opaque_existential_1);
      sub_21D7C3F90();
      sub_21CDBF490((uint64_t)v37);
      sub_21D7C3FA8();
      sub_21D7C3FCC();
      sub_21D7C4D40();
      swift_bridgeObjectRelease();
      result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      *(_QWORD *)(a3 + 32) = 0;
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
      return result;
    case 9:
      v26 = type metadata accessor for CuratorDetailPageIntent();
      v17 = type metadata accessor for CuratorDetailPageIntent;
      *(_QWORD *)(a3 + 24) = v26;
      v18 = (unint64_t *)&unk_255331CC0;
      v19 = &unk_21D806E10;
      goto LABEL_17;
    case 0xC:
      v27 = type metadata accessor for MovieDetailPageIntent();
      v17 = type metadata accessor for MovieDetailPageIntent;
      *(_QWORD *)(a3 + 24) = v27;
      v18 = (unint64_t *)&unk_255331CB0;
      v19 = &unk_21D7E3AE0;
      goto LABEL_17;
    case 0xD:
      v28 = type metadata accessor for MusicVideoDetailPageIntent();
      v17 = type metadata accessor for MusicVideoDetailPageIntent;
      *(_QWORD *)(a3 + 24) = v28;
      v18 = (unint64_t *)&unk_255331CA8;
      v19 = &unk_21D8071B4;
      goto LABEL_17;
    case 0xE:
      v20 = type metadata accessor for PlaylistDetailPageIntent();
      v21 = type metadata accessor for PlaylistDetailPageIntent;
      *(_QWORD *)(a3 + 24) = v20;
      v22 = (unint64_t *)&unk_255331CB8;
      v23 = &unk_21D8136F8;
LABEL_13:
      v29 = sub_21CDBFDBC(v22, (uint64_t (*)(uint64_t))v21, (uint64_t)v23);
      v30 = OUTLINED_FUNCTION_0_34(v29);
      sub_21CF3F838(v4, (uint64_t)v30);
      v31 = (uint64_t *)((char *)v30 + *(int *)(v20 + 20));
      *v31 = a1;
      v31[1] = a2;
      return sub_21D7C4C20();
    case 0x12:
      v32 = type metadata accessor for SongAlbumDetailPageIntent();
      v17 = type metadata accessor for SongAlbumDetailPageIntent;
      *(_QWORD *)(a3 + 24) = v32;
      v18 = (unint64_t *)&unk_255331CA0;
      v19 = &unk_21D7F87C4;
      goto LABEL_17;
    case 0x13:
      v33 = type metadata accessor for TVEpisodeDetailPageIntent();
      v17 = type metadata accessor for TVEpisodeDetailPageIntent;
      *(_QWORD *)(a3 + 24) = v33;
      v18 = (unint64_t *)&unk_255330AE8;
      v19 = &unk_21D814424;
      goto LABEL_17;
    case 0x15:
      v34 = type metadata accessor for TVShowDetailPageIntent();
      v17 = type metadata accessor for TVShowDetailPageIntent;
      *(_QWORD *)(a3 + 24) = v34;
      v18 = (unint64_t *)&unk_255331C98;
      v19 = &unk_21D7EA690;
      goto LABEL_17;
    default:
      v16 = type metadata accessor for AppleCuratorDetailPageIntent();
      v17 = type metadata accessor for AppleCuratorDetailPageIntent;
      *(_QWORD *)(a3 + 24) = v16;
      v18 = (unint64_t *)&unk_255331CC8;
      v19 = &unk_21D809448;
LABEL_17:
      v35 = sub_21CDBFDBC(v18, (uint64_t (*)(uint64_t))v17, (uint64_t)v19);
      v36 = OUTLINED_FUNCTION_0_34(v35);
      return sub_21CF3F838((uint64_t)v3, (uint64_t)v36);
  }
}

uint64_t sub_21CF3F738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_21D7C4EE4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_21D7C4EFC();
  __swift_allocate_value_buffer(v4, qword_255331C78);
  __swift_project_value_buffer(v4, (uint64_t)qword_255331C78);
  if (qword_253F677D0 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v0, (uint64_t)qword_253F81C60);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  return sub_21D7C4EF0();
}

uint64_t sub_21CF3F838(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ContentDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *OUTLINED_FUNCTION_0_34(uint64_t a1)
{
  uint64_t *v1;

  v1[4] = a1;
  return __swift_allocate_boxed_opaque_existential_1(v1);
}

uint64_t *sub_21CF3F888(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  _BYTE *__dst;
  _BYTE *v53;
  uint64_t v54;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_21D7C4668();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    v10 = a3[5];
    v11 = *(_OWORD *)((char *)a2 + v10 + 24);
    *(_OWORD *)((char *)a1 + v10 + 24) = v11;
    (**(void (***)(void))(v11 - 8))();
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = *(uint64_t *)((char *)a2 + v12 + 24);
    if (v15)
    {
      v16 = *((_QWORD *)v14 + 4);
      *((_QWORD *)v13 + 3) = v15;
      *((_QWORD *)v13 + 4) = v16;
      (**(void (***)(void))(v15 - 8))();
    }
    else
    {
      v17 = *((_OWORD *)v14 + 1);
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v17;
      *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
    }
    v18 = a3[7];
    v19 = a3[8];
    v20 = (uint64_t *)((char *)a1 + v18);
    v21 = (uint64_t *)((char *)a2 + v18);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = (uint64_t *)((char *)a1 + v19);
    v24 = (uint64_t *)((char *)a2 + v19);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = a3[9];
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = type metadata accessor for ContentDescriptor();
    sub_21D7C4C20();
    sub_21D7C4C20();
    if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      *v27 = *v28;
      v31 = *((_QWORD *)v28 + 2);
      *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
      *((_QWORD *)v27 + 2) = v31;
      v32 = *((_QWORD *)v28 + 4);
      *((_QWORD *)v27 + 3) = *((_QWORD *)v28 + 3);
      *((_QWORD *)v27 + 4) = v32;
      v33 = *((_QWORD *)v28 + 6);
      *((_QWORD *)v27 + 5) = *((_QWORD *)v28 + 5);
      *((_QWORD *)v27 + 6) = v33;
      v34 = *((_QWORD *)v28 + 8);
      *((_QWORD *)v27 + 7) = *((_QWORD *)v28 + 7);
      *((_QWORD *)v27 + 8) = v34;
      v35 = v29;
      v36 = *((_QWORD *)v28 + 10);
      *((_QWORD *)v27 + 9) = *((_QWORD *)v28 + 9);
      *((_QWORD *)v27 + 10) = v36;
      v37 = *((_QWORD *)v28 + 12);
      v54 = v35;
      *((_QWORD *)v27 + 11) = *((_QWORD *)v28 + 11);
      *((_QWORD *)v27 + 12) = v37;
      *((_QWORD *)v27 + 13) = *((_QWORD *)v28 + 13);
      v27[112] = v28[112];
      v38 = *(int *)(v35 + 24);
      __dst = &v27[v38];
      v53 = &v28[v38];
      v39 = sub_21D7BF754();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      if (__swift_getEnumTagSinglePayload((uint64_t)v53, 1, v39))
      {
        v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
        memcpy(__dst, v53, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(__dst, v53, v39);
        __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v39);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v54);
    }
    v41 = a3[10];
    v42 = (char *)a1 + v41;
    v43 = (char *)a2 + v41;
    v44 = type metadata accessor for Artwork();
    if (__swift_getEnumTagSinglePayload((uint64_t)v43, 1, v44))
    {
      v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      v46 = sub_21D7C3840();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v42, v43, v46);
      v47 = *(int *)(v44 + 20);
      v48 = &v42[v47];
      v49 = &v43[v47];
      v50 = sub_21D7C3804();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
      __swift_storeEnumTagSinglePayload((uint64_t)v42, 0, 1, v44);
    }
  }
  return a1;
}

uint64_t sub_21CF3FC24(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_21D7C4668();
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[5]);
  v5 = a1 + a2[6];
  if (*(_QWORD *)(v5 + 24))
    __swift_destroy_boxed_opaque_existential_1(v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + a2[9];
  v7 = type metadata accessor for ContentDescriptor();
  if (!__swift_getEnumTagSinglePayload(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = v6 + *(int *)(v7 + 24);
    v9 = sub_21D7BF754();
    if (!__swift_getEnumTagSinglePayload(v8, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  v10 = a1 + a2[10];
  v11 = type metadata accessor for Artwork();
  result = __swift_getEnumTagSinglePayload(v10, 1, v11);
  if (!(_DWORD)result)
  {
    v13 = sub_21D7C3840();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v10, v13);
    v14 = v10 + *(int *)(v11 + 20);
    v15 = sub_21D7C3804();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  }
  return result;
}

char *sub_21CF3FDC8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v50;
  char *__dst;
  uint64_t v52;

  v6 = sub_21D7C4668();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v8 = a3[5];
  v9 = *(_OWORD *)&a2[v8 + 24];
  *(_OWORD *)&a1[v8 + 24] = v9;
  (**(void (***)(void))(v9 - 8))();
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *(_QWORD *)&a2[v10 + 24];
  if (v13)
  {
    v14 = *((_QWORD *)v12 + 4);
    *((_QWORD *)v11 + 3) = v13;
    *((_QWORD *)v11 + 4) = v14;
    (**(void (***)(void))(v13 - 8))();
  }
  else
  {
    v15 = *((_OWORD *)v12 + 1);
    *(_OWORD *)v11 = *(_OWORD *)v12;
    *((_OWORD *)v11 + 1) = v15;
    *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
  }
  v16 = a3[7];
  v17 = a3[8];
  v18 = &a1[v16];
  v19 = &a2[v16];
  v20 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = v20;
  v21 = &a1[v17];
  v22 = &a2[v17];
  v23 = *((_QWORD *)v22 + 1);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *((_QWORD *)v21 + 1) = v23;
  v24 = a3[9];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = type metadata accessor for ContentDescriptor();
  sub_21D7C4C20();
  sub_21D7C4C20();
  if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v27))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    *v25 = *v26;
    v29 = *((_QWORD *)v26 + 2);
    *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
    *((_QWORD *)v25 + 2) = v29;
    v30 = *((_QWORD *)v26 + 4);
    *((_QWORD *)v25 + 3) = *((_QWORD *)v26 + 3);
    *((_QWORD *)v25 + 4) = v30;
    v31 = *((_QWORD *)v26 + 6);
    *((_QWORD *)v25 + 5) = *((_QWORD *)v26 + 5);
    *((_QWORD *)v25 + 6) = v31;
    v32 = *((_QWORD *)v26 + 8);
    *((_QWORD *)v25 + 7) = *((_QWORD *)v26 + 7);
    *((_QWORD *)v25 + 8) = v32;
    v33 = v27;
    v34 = *((_QWORD *)v26 + 10);
    *((_QWORD *)v25 + 9) = *((_QWORD *)v26 + 9);
    *((_QWORD *)v25 + 10) = v34;
    v35 = *((_QWORD *)v26 + 12);
    *((_QWORD *)v25 + 11) = *((_QWORD *)v26 + 11);
    *((_QWORD *)v25 + 12) = v35;
    *((_QWORD *)v25 + 13) = *((_QWORD *)v26 + 13);
    v25[112] = v26[112];
    v52 = v33;
    v36 = *(int *)(v33 + 24);
    __dst = &v25[v36];
    v50 = &v26[v36];
    v37 = sub_21D7BF754();
    sub_21D7C4C20();
    sub_21D7C4C20();
    sub_21D7C4C20();
    sub_21D7C4C20();
    sub_21D7C4C20();
    sub_21D7C4C20();
    if (__swift_getEnumTagSinglePayload((uint64_t)v50, 1, v37))
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
      memcpy(__dst, v50, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(__dst, v50, v37);
      __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v37);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v52);
  }
  v39 = a3[10];
  v40 = &a1[v39];
  v41 = &a2[v39];
  v42 = type metadata accessor for Artwork();
  if (__swift_getEnumTagSinglePayload((uint64_t)v41, 1, v42))
  {
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    v44 = sub_21D7C3840();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v40, v41, v44);
    v45 = *(int *)(v42 + 20);
    v46 = &v40[v45];
    v47 = &v41[v45];
    v48 = sub_21D7C3804();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v46, v47, v48);
    __swift_storeEnumTagSinglePayload((uint64_t)v40, 0, 1, v42);
  }
  return a1;
}

char *sub_21CF4013C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  size_t v33;
  void *v34;
  const void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  const void *v64;
  void *__dst;

  v6 = sub_21D7C4668();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  __swift_assign_boxed_opaque_existential_1((uint64_t *)&a1[a3[5]], (uint64_t *)&a2[a3[5]]);
  v11 = a3[6];
  v12 = (uint64_t)&a1[v11];
  v13 = (uint64_t *)&a2[v11];
  v14 = *(_QWORD *)&a2[v11 + 24];
  if (*(_QWORD *)&a1[v11 + 24])
  {
    if (v14)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)v12, v13);
      goto LABEL_14;
    }
    __swift_destroy_boxed_opaque_existential_1(v12);
  }
  else if (v14)
  {
    *(_QWORD *)(v12 + 24) = v14;
    *(_QWORD *)(v12 + 32) = v13[4];
    (**(void (***)(uint64_t, char *))(v14 - 8))(v12, (char *)v13);
    goto LABEL_14;
  }
  v15 = *(_OWORD *)v13;
  v16 = *((_OWORD *)v13 + 1);
  *(_QWORD *)(v12 + 32) = v13[4];
  *(_OWORD *)v12 = v15;
  *(_OWORD *)(v12 + 16) = v16;
LABEL_14:
  v17 = a3[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  v20 = a3[8];
  v21 = &a1[v20];
  v22 = &a2[v20];
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  v23 = a3[9];
  v24 = (uint64_t)&a1[v23];
  v25 = (uint64_t)&a2[v23];
  v26 = type metadata accessor for ContentDescriptor();
  v27 = __swift_getEnumTagSinglePayload(v24, 1, v26);
  v28 = __swift_getEnumTagSinglePayload(v25, 1, v26);
  if (v27)
  {
    if (!v28)
    {
      *(_BYTE *)v24 = *(_BYTE *)v25;
      *(_QWORD *)(v24 + 8) = *(_QWORD *)(v25 + 8);
      *(_QWORD *)(v24 + 16) = *(_QWORD *)(v25 + 16);
      *(_QWORD *)(v24 + 24) = *(_QWORD *)(v25 + 24);
      *(_QWORD *)(v24 + 32) = *(_QWORD *)(v25 + 32);
      *(_QWORD *)(v24 + 40) = *(_QWORD *)(v25 + 40);
      *(_QWORD *)(v24 + 48) = *(_QWORD *)(v25 + 48);
      *(_QWORD *)(v24 + 56) = *(_QWORD *)(v25 + 56);
      *(_QWORD *)(v24 + 64) = *(_QWORD *)(v25 + 64);
      *(_QWORD *)(v24 + 72) = *(_QWORD *)(v25 + 72);
      *(_QWORD *)(v24 + 80) = *(_QWORD *)(v25 + 80);
      *(_QWORD *)(v24 + 88) = *(_QWORD *)(v25 + 88);
      *(_QWORD *)(v24 + 96) = *(_QWORD *)(v25 + 96);
      v29 = *(_QWORD *)(v25 + 104);
      *(_BYTE *)(v24 + 112) = *(_BYTE *)(v25 + 112);
      *(_QWORD *)(v24 + 104) = v29;
      v30 = *(int *)(v26 + 24);
      __dst = (void *)(v24 + v30);
      v64 = (const void *)(v25 + v30);
      v31 = sub_21D7BF754();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      sub_21D7C4C20();
      if (__swift_getEnumTagSinglePayload((uint64_t)v64, 1, v31))
      {
        v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
        memcpy(__dst, v64, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(__dst, v64, v31);
        __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v31);
      }
      v43 = v24;
      v44 = v26;
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v28)
  {
    sub_21CDC15E0(v24, (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
LABEL_20:
    v33 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253F60800) - 8) + 64);
    v34 = (void *)v24;
    v35 = (const void *)v25;
LABEL_21:
    memcpy(v34, v35, v33);
    goto LABEL_29;
  }
  *(_BYTE *)v24 = *(_BYTE *)v25;
  *(_QWORD *)(v24 + 8) = *(_QWORD *)(v25 + 8);
  *(_QWORD *)(v24 + 16) = *(_QWORD *)(v25 + 16);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v24 + 24) = *(_QWORD *)(v25 + 24);
  *(_QWORD *)(v24 + 32) = *(_QWORD *)(v25 + 32);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v24 + 40) = *(_QWORD *)(v25 + 40);
  *(_QWORD *)(v24 + 48) = *(_QWORD *)(v25 + 48);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v24 + 56) = *(_QWORD *)(v25 + 56);
  *(_QWORD *)(v24 + 64) = *(_QWORD *)(v25 + 64);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v24 + 72) = *(_QWORD *)(v25 + 72);
  *(_QWORD *)(v24 + 80) = *(_QWORD *)(v25 + 80);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v24 + 88) = *(_QWORD *)(v25 + 88);
  *(_QWORD *)(v24 + 96) = *(_QWORD *)(v25 + 96);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  v36 = *(_QWORD *)(v25 + 104);
  *(_BYTE *)(v24 + 112) = *(_BYTE *)(v25 + 112);
  *(_QWORD *)(v24 + 104) = v36;
  v37 = *(int *)(v26 + 24);
  v38 = v24 + v37;
  v39 = v25 + v37;
  v40 = sub_21D7BF754();
  v41 = __swift_getEnumTagSinglePayload(v38, 1, v40);
  v42 = __swift_getEnumTagSinglePayload(v39, 1, v40);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
      v43 = v38;
      v44 = v40;
LABEL_28:
      __swift_storeEnumTagSinglePayload(v43, 0, 1, v44);
      goto LABEL_29;
    }
    goto LABEL_39;
  }
  v63 = *(_QWORD *)(v40 - 8);
  if (v42)
  {
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v38, v40);
LABEL_39:
    v33 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10) - 8) + 64);
    v34 = (void *)v38;
    v35 = (const void *)v39;
    goto LABEL_21;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 24))(v38, v39, v40);
LABEL_29:
  v45 = a3[10];
  v46 = &a1[v45];
  v47 = &a2[v45];
  v48 = type metadata accessor for Artwork();
  v49 = __swift_getEnumTagSinglePayload((uint64_t)v46, 1, v48);
  v50 = __swift_getEnumTagSinglePayload((uint64_t)v47, 1, v48);
  if (!v49)
  {
    if (!v50)
    {
      v58 = sub_21D7C3840();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 24))(v46, v47, v58);
      v59 = *(int *)(v48 + 20);
      v60 = &v46[v59];
      v61 = &v47[v59];
      v62 = sub_21D7C3804();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 24))(v60, v61, v62);
      return a1;
    }
    sub_21CDC15E0((uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for Artwork);
    goto LABEL_34;
  }
  if (v50)
  {
LABEL_34:
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    return a1;
  }
  v51 = sub_21D7C3840();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v46, v47, v51);
  v52 = *(int *)(v48 + 20);
  v53 = &v46[v52];
  v54 = &v47[v52];
  v55 = sub_21D7C3804();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
  __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v48);
  return a1;
}

char *sub_21CF407A8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  char *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;

  v6 = sub_21D7C4668();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v8 = a3[5];
  v9 = a3[6];
  v10 = &a1[v8];
  v11 = &a2[v8];
  *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
  v12 = *((_OWORD *)v11 + 1);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v12;
  v13 = &a1[v9];
  v14 = &a2[v9];
  *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
  v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  v16 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  v17 = a3[9];
  v18 = &a1[v17];
  v19 = &a2[v17];
  *(_OWORD *)&a1[v16] = *(_OWORD *)&a2[v16];
  v20 = type metadata accessor for ContentDescriptor();
  if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    *v18 = *v19;
    memcpy(v18 + 8, v19 + 8, 0x69uLL);
    v22 = *(int *)(v20 + 24);
    v23 = &v18[v22];
    v24 = &v19[v22];
    v25 = sub_21D7BF754();
    if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
      __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v25);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v20);
  }
  v27 = a3[10];
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = type metadata accessor for Artwork();
  if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v30))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    v32 = sub_21D7C3840();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v28, v29, v32);
    v33 = *(int *)(v30 + 20);
    v34 = &v28[v33];
    v35 = &v29[v33];
    v36 = sub_21D7C3804();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
    __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v30);
  }
  return a1;
}

char *sub_21CF40A48(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  int v34;
  uint64_t v35;
  void *v36;
  const void *v37;
  uint64_t v38;
  uint64_t v39;
  size_t v40;
  void *v41;
  const void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;

  v6 = sub_21D7C4668();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  v11 = a3[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[v11]);
  *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
  v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  v15 = a3[6];
  v16 = (uint64_t)&a1[v15];
  v17 = &a2[v15];
  if (*(_QWORD *)&a1[v15 + 24])
    __swift_destroy_boxed_opaque_existential_1(v16);
  v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  *(_QWORD *)(v16 + 32) = *((_QWORD *)v17 + 4);
  v19 = a3[7];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v23 = *(_QWORD *)v21;
  v22 = *((_QWORD *)v21 + 1);
  *(_QWORD *)v20 = v23;
  *((_QWORD *)v20 + 1) = v22;
  swift_bridgeObjectRelease();
  v24 = a3[8];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v28 = *(_QWORD *)v26;
  v27 = *((_QWORD *)v26 + 1);
  *(_QWORD *)v25 = v28;
  *((_QWORD *)v25 + 1) = v27;
  swift_bridgeObjectRelease();
  v29 = a3[9];
  v30 = (uint64_t)&a1[v29];
  v31 = (uint64_t)&a2[v29];
  v32 = type metadata accessor for ContentDescriptor();
  v33 = __swift_getEnumTagSinglePayload(v30, 1, v32);
  v34 = __swift_getEnumTagSinglePayload(v31, 1, v32);
  if (v33)
  {
    if (!v34)
    {
      *(_BYTE *)v30 = *(_BYTE *)v31;
      memcpy((void *)(v30 + 8), (const void *)(v31 + 8), 0x69uLL);
      v35 = *(int *)(v32 + 24);
      v36 = (void *)(v30 + v35);
      v37 = (const void *)(v31 + v35);
      v38 = sub_21D7BF754();
      if (__swift_getEnumTagSinglePayload((uint64_t)v37, 1, v38))
      {
        v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
        __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v38);
      }
      v55 = v30;
      v56 = v32;
      goto LABEL_23;
    }
    goto LABEL_15;
  }
  if (v34)
  {
    sub_21CDC15E0(v30, (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
LABEL_15:
    v40 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253F60800) - 8) + 64);
    v41 = (void *)v30;
    v42 = (const void *)v31;
LABEL_16:
    memcpy(v41, v42, v40);
    goto LABEL_24;
  }
  *(_BYTE *)v30 = *(_BYTE *)v31;
  v43 = *(_QWORD *)(v31 + 16);
  *(_QWORD *)(v30 + 8) = *(_QWORD *)(v31 + 8);
  *(_QWORD *)(v30 + 16) = v43;
  swift_bridgeObjectRelease();
  v44 = *(_QWORD *)(v31 + 32);
  *(_QWORD *)(v30 + 24) = *(_QWORD *)(v31 + 24);
  *(_QWORD *)(v30 + 32) = v44;
  swift_bridgeObjectRelease();
  v45 = *(_QWORD *)(v31 + 48);
  *(_QWORD *)(v30 + 40) = *(_QWORD *)(v31 + 40);
  *(_QWORD *)(v30 + 48) = v45;
  swift_bridgeObjectRelease();
  v46 = *(_QWORD *)(v31 + 64);
  *(_QWORD *)(v30 + 56) = *(_QWORD *)(v31 + 56);
  *(_QWORD *)(v30 + 64) = v46;
  swift_bridgeObjectRelease();
  v47 = *(_QWORD *)(v31 + 80);
  *(_QWORD *)(v30 + 72) = *(_QWORD *)(v31 + 72);
  *(_QWORD *)(v30 + 80) = v47;
  swift_bridgeObjectRelease();
  v48 = *(_QWORD *)(v31 + 96);
  *(_QWORD *)(v30 + 88) = *(_QWORD *)(v31 + 88);
  *(_QWORD *)(v30 + 96) = v48;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v30 + 104) = *(_QWORD *)(v31 + 104);
  *(_BYTE *)(v30 + 112) = *(_BYTE *)(v31 + 112);
  v49 = *(int *)(v32 + 24);
  v50 = v30 + v49;
  v51 = v31 + v49;
  v52 = sub_21D7BF754();
  v53 = __swift_getEnumTagSinglePayload(v50, 1, v52);
  v54 = __swift_getEnumTagSinglePayload(v51, 1, v52);
  if (v53)
  {
    if (!v54)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v51, v52);
      v55 = v50;
      v56 = v52;
LABEL_23:
      __swift_storeEnumTagSinglePayload(v55, 0, 1, v56);
      goto LABEL_24;
    }
    goto LABEL_34;
  }
  v75 = *(_QWORD *)(v52 - 8);
  if (v54)
  {
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v50, v52);
LABEL_34:
    v40 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10) - 8) + 64);
    v41 = (void *)v50;
    v42 = (const void *)v51;
    goto LABEL_16;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 40))(v50, v51, v52);
LABEL_24:
  v57 = a3[10];
  v58 = &a1[v57];
  v59 = &a2[v57];
  v60 = type metadata accessor for Artwork();
  v61 = __swift_getEnumTagSinglePayload((uint64_t)v58, 1, v60);
  v62 = __swift_getEnumTagSinglePayload((uint64_t)v59, 1, v60);
  if (!v61)
  {
    if (!v62)
    {
      v70 = sub_21D7C3840();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 40))(v58, v59, v70);
      v71 = *(int *)(v60 + 20);
      v72 = &v58[v71];
      v73 = &v59[v71];
      v74 = sub_21D7C3804();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 40))(v72, v73, v74);
      return a1;
    }
    sub_21CDC15E0((uint64_t)v58, (uint64_t (*)(_QWORD))type metadata accessor for Artwork);
    goto LABEL_29;
  }
  if (v62)
  {
LABEL_29:
    v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    return a1;
  }
  v63 = sub_21D7C3840();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v58, v59, v63);
  v64 = *(int *)(v60 + 20);
  v65 = &v58[v64];
  v66 = &v59[v64];
  v67 = sub_21D7C3804();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v65, v66, v67);
  __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v60);
  return a1;
}

uint64_t sub_21CF40F50()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21CF40F5C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
    if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == (_DWORD)a2)
    {
      v7 = v11;
      v12 = a3[9];
    }
    else
    {
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
      v12 = a3[10];
    }
    v8 = a1 + v12;
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  v9 = *(_QWORD *)(a1 + a3[5] + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_21CF4102C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21CF41038(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5] + 24) = (a2 - 1);
      return result;
    }
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
    if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
    {
      v9 = v11;
      v12 = a4[9];
    }
    else
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F655E8);
      v12 = a4[10];
    }
    v10 = a1 + v12;
  }
  return __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
}

uint64_t type metadata accessor for BrickLockup()
{
  uint64_t result;

  result = qword_253F5F3E0;
  if (!qword_253F5F3E0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_21CF4113C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_21CDB3900(319, (unint64_t *)&qword_253F67610, (void (*)(uint64_t))MEMORY[0x24BE5D330]);
  if (v0 <= 0x3F)
  {
    sub_21CDB3900(319, (unint64_t *)&qword_253F60810, (void (*)(uint64_t))type metadata accessor for ContentDescriptor);
    if (v1 <= 0x3F)
    {
      sub_21CDB3900(319, qword_253F4F2C8, (void (*)(uint64_t))type metadata accessor for Artwork);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_21CF4122C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[5];
  uint64_t v54;

  v54 = a2;
  v51 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F60800);
  MEMORY[0x24BDAC7A8](v4);
  v46 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_21D7C4098();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_21D7C3F6C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v45 - v15;
  sub_21D7C4668();
  OUTLINED_FUNCTION_1_40();
  sub_21D7C3F78();
  v48 = v7;
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v18 = v51;
  v52 = v6;
  v19 = v6;
  v20 = a1;
  v49 = v17;
  v17(v9, v54, v19);
  v50 = v9;
  OUTLINED_FUNCTION_0_35();
  v21 = a1;
  sub_21D7C3F78();
  v22 = sub_21D7C3F3C();
  v24 = v23;
  v25 = *(void (**)(char *, uint64_t))(v11 + 8);
  v47 = v10;
  v25(v14, v10);
  if (v24)
  {
    v53[0] = v22;
    v53[1] = v24;
    v26 = type metadata accessor for BrickLockup();
    sub_21D7C5A30();
    type metadata accessor for Artwork();
    v27 = v21;
    sub_21D7C3F78();
    v49(v50, v54, v52);
    sub_21CDB47E8((unint64_t *)&qword_253F655E0, (uint64_t (*)(uint64_t))type metadata accessor for Artwork, (uint64_t)&unk_21D802DC4);
    OUTLINED_FUNCTION_0_35();
    OUTLINED_FUNCTION_4_25();
    v28 = sub_21D7C3F3C();
    v30 = v29;
    OUTLINED_FUNCTION_2_38((uint64_t)v16);
    v31 = v26;
    v32 = (uint64_t *)(v18 + *(int *)(v26 + 28));
    *v32 = v28;
    v32[1] = v30;
    OUTLINED_FUNCTION_4_25();
    v33 = v54;
    sub_21D7C435C();
    OUTLINED_FUNCTION_2_38((uint64_t)v16);
    v34 = *(int *)(v31 + 24);
    v45 = v31;
    sub_21CDC2FB4((uint64_t)v53, v18 + v34, &qword_253F67430);
    sub_21D7C3F78();
    v35 = sub_21D7C3F3C();
    v37 = v36;
    OUTLINED_FUNCTION_2_38((uint64_t)v16);
    v38 = (uint64_t *)(v18 + *(int *)(v31 + 32));
    *v38 = v35;
    v38[1] = v37;
    type metadata accessor for ContentDescriptor();
    OUTLINED_FUNCTION_1_40();
    sub_21D7C3F78();
    v39 = v52;
    v49(v50, v33, v52);
    sub_21CDB47E8((unint64_t *)&qword_253F607E8, (uint64_t (*)(uint64_t))type metadata accessor for ContentDescriptor, (uint64_t)&protocol conformance descriptor for ContentDescriptor);
    v40 = (uint64_t)v46;
    OUTLINED_FUNCTION_0_35();
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v33, v39);
    OUTLINED_FUNCTION_2_38(v27);
    sub_21CDC2FB4(v40, v51 + *(int *)(v45 + 36), &qword_253F60800);
  }
  else
  {
    v41 = sub_21D7C4F74();
    sub_21CDB47E8((unint64_t *)&qword_253F677E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5E3D0], MEMORY[0x24BE5E3D8]);
    swift_allocError();
    v43 = v42;
    v44 = type metadata accessor for BrickLockup();
    *v43 = 25705;
    v43[1] = 0xE200000000000000;
    v43[2] = v44;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v41 - 8) + 104))(v43, *MEMORY[0x24BE5E3B8], v41);
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v54, v52);
    v25((char *)v20, v47);
    sub_21CDC301C(v18);
  }
}

void sub_21CF416C8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_21CDC314C(v2 + *(int *)(a1 + 24), a2, &qword_253F67430);
}

void sub_21CF416F0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_21CDC314C(v2 + *(int *)(a1 + 40), a2, &qword_253F655E8);
}

void sub_21CF41718(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_21CF4122C(a1, a2, a3);
}

void sub_21CF4172C(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_21CDC314C(v1, a1, &qword_253F67608);
}

void sub_21CF41750()
{
  sub_21CDB47E8(&qword_253F5F3D0, (uint64_t (*)(uint64_t))type metadata accessor for BrickLockup, (uint64_t)&unk_21D7D15A0);
}

uint64_t OUTLINED_FUNCTION_0_35()
{
  return sub_21D7C4620();
}

unint64_t OUTLINED_FUNCTION_1_40()
{
  return 0xD000000000000011;
}

uint64_t OUTLINED_FUNCTION_2_38(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_4_25()
{
  return sub_21D7C3F78();
}

uint64_t sub_21CF417B8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = sub_21D7C3E10();
    if (v2 <= 0x3F)
      return swift_initClassMetadata2();
  }
  return result;
}

void sub_21CF4188C()
{
  swift_allocObject();
  sub_21CF47384();
  OUTLINED_FUNCTION_43_0();
}

uint64_t sub_21CF418E4()
{
  _QWORD *v0;
  _QWORD *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0;
  if (qword_253F659C8 != -1)
    swift_once();
  v2 = byte_25538E4A0;
  v3 = *(_QWORD *)(*v0 + 176);
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_23_5();
  sub_21D41B270();
  OUTLINED_FUNCTION_104();
  v4 = v0[10];
  v5 = *(_QWORD *)((char *)v1 + v3);
  swift_retain();
  sub_21CF477F0(v4, v5, v2);
  return swift_release();
}

void sub_21CF41980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD v104[40];
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;

  OUTLINED_FUNCTION_22();
  v148 = v0;
  v147 = v1;
  v2 = sub_21D7C36C0();
  v113 = *(_QWORD *)(v2 - 8);
  v114 = v2;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_2_13();
  v112 = v4;
  OUTLINED_FUNCTION_38_3();
  v5 = sub_21D7C3BAC();
  v110 = *(_QWORD *)(v5 - 8);
  v111 = v5;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_13();
  v109 = v7;
  v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66808);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_2_13();
  v128 = v9;
  v104[34] = __swift_instantiateConcreteTypeFromMangledName(&qword_253F667F8);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_2_13();
  v104[35] = v11;
  v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66A28);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_2_13();
  v108 = v13;
  v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66A48);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_2_13();
  v129 = v15;
  v104[33] = __swift_instantiateConcreteTypeFromMangledName(&qword_253F669A8);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_2_13();
  v107 = v17;
  OUTLINED_FUNCTION_38_3();
  v106 = sub_21D7C38B8();
  v104[39] = *(_QWORD *)(v106 - 8);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_2_13();
  v104[37] = v19;
  OUTLINED_FUNCTION_38_3();
  v20 = sub_21D7C0720();
  v121 = *(_QWORD *)(v20 - 8);
  v122 = v20;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_2_13();
  v120 = v22;
  OUTLINED_FUNCTION_38_3();
  v23 = sub_21D7C0690();
  v104[17] = *(_QWORD *)(v23 - 8);
  v104[18] = v23;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_2_13();
  v104[16] = v25;
  OUTLINED_FUNCTION_38_3();
  v105 = sub_21D7C33F0();
  v104[38] = *(_QWORD *)(v105 - 8);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_2_13();
  v104[36] = v27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F67338);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_2_13();
  v119 = v29;
  OUTLINED_FUNCTION_38_3();
  v135 = sub_21D7C3B58();
  v134 = *(_QWORD *)(v135 - 8);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v30);
  OUTLINED_FUNCTION_11();
  v118 = v31;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_38_5();
  v125 = v33;
  v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66800);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_2_13();
  v140 = v35;
  v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F667D0);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v36);
  OUTLINED_FUNCTION_2_13();
  v137 = v37;
  v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F669B8);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v38);
  OUTLINED_FUNCTION_2_13();
  v141 = v39;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F66A38);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v40);
  OUTLINED_FUNCTION_2_13();
  v142 = v41;
  v123 = OUTLINED_FUNCTION_73_5();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v42);
  OUTLINED_FUNCTION_2_13();
  v124 = v43;
  v44 = OUTLINED_FUNCTION_93_3();
  v104[31] = *(_QWORD *)(v44 - 8);
  v104[32] = v44;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v45);
  OUTLINED_FUNCTION_11();
  v104[29] = v46;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v47);
  OUTLINED_FUNCTION_38_5();
  v104[30] = v48;
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v49);
  OUTLINED_FUNCTION_11();
  v104[12] = v50;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v51);
  OUTLINED_FUNCTION_70_5();
  v104[11] = v52;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v53);
  OUTLINED_FUNCTION_70_5();
  v104[14] = v54;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v55);
  OUTLINED_FUNCTION_38_5();
  v104[13] = v56;
  OUTLINED_FUNCTION_37_6();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v57);
  OUTLINED_FUNCTION_11();
  v104[9] = v58;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v59);
  OUTLINED_FUNCTION_70_5();
  v104[6] = v60;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v61);
  OUTLINED_FUNCTION_70_5();
  v104[7] = v62;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v63);
  OUTLINED_FUNCTION_70_5();
  v104[10] = v64;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v65);
  OUTLINED_FUNCTION_38_5();
  v104[8] = v66;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F672D8);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v67);
  OUTLINED_FUNCTION_2_13();
  v117 = v68;
  OUTLINED_FUNCTION_38_3();
  v133 = sub_21D7C3660();
  v132 = *(_QWORD *)(v133 - 8);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v69);
  OUTLINED_FUNCTION_11();
  v116 = v70;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v71);
  OUTLINED_FUNCTION_38_5();
  v104[27] = v72;
  v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66748);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v73);
  OUTLINED_FUNCTION_2_13();
  v144 = v74;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F66858);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v75);
  OUTLINED_FUNCTION_2_13();
  v145 = v76;
  OUTLINED_FUNCTION_38_3();
  v131 = sub_21D7C3564();
  v130 = *(_QWORD *)(v131 - 8);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v77);
  OUTLINED_FUNCTION_11();
  v115 = v78;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v79);
  v104[23] = (char *)v104 - v80;
  OUTLINED_FUNCTION_197();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v81);
  v104[5] = (char *)v104 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v83);
  OUTLINED_FUNCTION_70_5();
  v104[28] = v84;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v85);
  OUTLINED_FUNCTION_70_5();
  v104[1] = v86;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v87);
  OUTLINED_FUNCTION_70_5();
  v104[3] = v88;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v89);
  OUTLINED_FUNCTION_70_5();
  v104[25] = v90;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v91);
  OUTLINED_FUNCTION_70_5();
  v104[4] = v92;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v93);
  OUTLINED_FUNCTION_70_5();
  v104[26] = v94;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v95);
  OUTLINED_FUNCTION_70_5();
  v104[2] = v96;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v97);
  OUTLINED_FUNCTION_70_5();
  v104[24] = v98;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v99);
  OUTLINED_FUNCTION_38_5();
  v146 = v100;
  OUTLINED_FUNCTION_38_3();
  v101 = sub_21D7C37A4();
  v104[21] = *(_QWORD *)(v101 - 8);
  v104[22] = v101;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v102);
  OUTLINED_FUNCTION_2_13();
  v104[20] = v103;
  OUTLINED_FUNCTION_222();
  type metadata accessor for SearchPageView();
}

void sub_21CF42034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_292();
  v9[89] = v11;
  sub_21D7C1AB8();
  OUTLINED_FUNCTION_38_9();
  v9[19] = v14;
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v15);
  v9[99] = v16;
  v9[90] = v10;
  v17 = sub_21D7C1AB8();
  v9[59] = *(_QWORD *)(v17 - 8);
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_12_4();
  v9[58] = v19;
  v9[100] = a1;
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_61_4();
  MEMORY[0x24BDAC7A8](v21);
  v9[15] = (char *)&a9 - v22;
  v9[73] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25532F3D0);
  v9[101] = v17;
  sub_21D7C1AB8();
  OUTLINED_FUNCTION_38_9();
  v9[74] = v23;
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_12_4();
  v9[75] = v25;
  OUTLINED_FUNCTION_38_3();
  v9[94] = v26;
  v9[86] = v12;
  v9[87] = *(_QWORD *)(sub_21D7C1AB8() - 8);
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_12_4();
  v9[88] = v28;
  OUTLINED_FUNCTION_222();
  type metadata accessor for MusicPageProvider.Destination();
}

uint64_t sub_21CF4217C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void);

  v11 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v13 = (char *)&a9 - v12;
  v14 = sub_21D7C1AB8();
  v9[97] = *(_QWORD *)(v14 - 8);
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_12_4();
  v9[93] = v16;
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 16))(v13, v9[96], a1);
  v17 = (uint64_t (*)(void))((char *)sub_21CF42224 + 4 * word_21D7D1648[swift_getEnumCaseMultiPayload()]);
  v9[98] = v14;
  return v17();
}

void sub_21CF42224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);

  v2 = OUTLINED_FUNCTION_111_1();
  v3(v2);
  *(_QWORD *)(v0 + 528) = v1;
  sub_21CF478F0();
  OUTLINED_FUNCTION_11_18();
}

void sub_21CF42260(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_21CDF81B4((uint64_t)&qword_253F60D40);
  v4 = v3;
  OUTLINED_FUNCTION_175();
  *(_QWORD *)(v1 + 1480) = a1;
  *(_QWORD *)(v1 + 1488) = v4;
  OUTLINED_FUNCTION_73();
}

void sub_21CF422C0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v3 = OUTLINED_FUNCTION_252();
  OUTLINED_FUNCTION_34_9();
  OUTLINED_FUNCTION_37_4(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0[19] + 8));
  sub_21CF4EA80((uint64_t)&qword_25532F3D8);
  v0[183] = v1;
  v0[184] = v3;
  OUTLINED_FUNCTION_71();
}

void sub_21CF42328(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  sub_21D68CC08();
  OUTLINED_FUNCTION_25_5(v3, *(uint64_t (**)(uint64_t, uint64_t))(v1[59] + 8));
  v1[181] = v2;
  v1[182] = a1;
  OUTLINED_FUNCTION_11_18();
}

void sub_21CF4237C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_21CF4EA80((uint64_t)&qword_253F66A30);
  v4 = v3;
  OUTLINED_FUNCTION_34_9();
  OUTLINED_FUNCTION_21_12();
  *(_QWORD *)(v1 + 1432) = a1;
  *(_QWORD *)(v1 + 1440) = v4;
  OUTLINED_FUNCTION_15_12();
}

void sub_21CF423D4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_21CF4EA24((uint64_t)&qword_253F66A40);
  OUTLINED_FUNCTION_170();
  sub_21D68CB98();
  OUTLINED_FUNCTION_168();
  sub_21CDBDA1C(v1, (uint64_t (*)(_QWORD))type metadata accessor for FlowActionPageView);
  (*(void (**)(_QWORD, _QWORD))(v0[21] + 8))(v0[20], v0[22]);
  sub_21CF4EA80((uint64_t)&qword_25532F3D8);
  OUTLINED_FUNCTION_14_12();
}

void sub_21CF44B80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_21CDF81B4((uint64_t)&qword_253F60D40);
  *(_QWORD *)(v1 - 168) = a1;
  *(_QWORD *)(v1 - 160) = v3;
  OUTLINED_FUNCTION_61();
}

void sub_21CF44BB8(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;

  v3 = sub_21CDB6B00();
  *(_QWORD *)(v1 - 184) = a1;
  *(_QWORD *)(v1 - 176) = v3;
  OUTLINED_FUNCTION_52_5();
}

void sub_21CF44BD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 200) = v1;
  *(_QWORD *)(v2 - 192) = a1;
  OUTLINED_FUNCTION_11_18();
}

void sub_21CF44BE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_21CF4EA80((uint64_t)&qword_253F66A30);
  *(_QWORD *)(v1 - 216) = a1;
  *(_QWORD *)(v1 - 208) = v3;
  OUTLINED_FUNCTION_100();
}

void sub_21CF44C18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_21CF4EA24((uint64_t)&qword_253F66A40);
  *(_QWORD *)(v1 - 232) = a1;
  *(_QWORD *)(v1 - 224) = v3;
  OUTLINED_FUNCTION_5_26();
}

void sub_21CF44C50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_173();
  sub_21CDB6D80(v2, v3, v4);
  OUTLINED_FUNCTION_68_5(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 776) + 8));
  OUTLINED_FUNCTION_9();
}

void sub_21CF44C7C()
{
  unint64_t v0;

  OUTLINED_FUNCTION_183();
  v0 = sub_21D41B2F0();
  swift_release();
  if ((~v0 & 0xF000000000000007) != 0)
  {
    if (!(v0 >> 62))
    {
      OUTLINED_FUNCTION_43_0();
      return;
    }
    sub_21CE675C0(v0);
  }
  sub_21CF49C50();
}

uint64_t sub_21CF44CF4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2[19] = a1;
  v2[20] = a2;
  sub_21D7C3FC0();
  v2[21] = OUTLINED_FUNCTION_1_8();
  v3 = OUTLINED_FUNCTION_9_4();
  v2[22] = v3;
  v2[23] = *(_QWORD *)(v3 - 8);
  v2[24] = OUTLINED_FUNCTION_1_8();
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F67500);
  v2[25] = v4;
  v2[26] = *(_QWORD *)(v4 - 8);
  v2[27] = OUTLINED_FUNCTION_1_8();
  v5 = sub_21D7C432C();
  v2[28] = v5;
  v2[29] = *(_QWORD *)(v5 - 8);
  v2[30] = OUTLINED_FUNCTION_323();
  v2[31] = OUTLINED_FUNCTION_323();
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F67510);
  v2[32] = v6;
  v2[33] = *(_QWORD *)(v6 - 8);
  v2[34] = OUTLINED_FUNCTION_1_8();
  v2[35] = type metadata accessor for ProcessDeepLinkAction();
  v2[36] = OUTLINED_FUNCTION_1_8();
  v7 = (_QWORD *)swift_task_alloc();
  v2[37] = v7;
  *v7 = v2;
  v7[1] = sub_21CF44DF0;
  return sub_21CF45598();
}

uint64_t sub_21CF44DF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(*(_QWORD *)v2 + 304) = a1;
  OUTLINED_FUNCTION_307();
  if (v1)
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_22_1();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_13_2();
    OUTLINED_FUNCTION_14_1();
    OUTLINED_FUNCTION_21_1();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_238();
    __asm { BR              X0 }
  }
  OUTLINED_FUNCTION_23_5();
  OUTLINED_FUNCTION_238();
  return swift_task_switch();
}

uint64_t sub_21CF44EA4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_80_4();
  v1 = v0[35];
  v2 = v0[36];
  v3 = v0[27];
  v11 = v0[26];
  v12 = v0[25];
  v4 = v0[20];
  sub_21D7C42D8();
  v5 = v2 + *(int *)(v1 + 20);
  v6 = OUTLINED_FUNCTION_0_7();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v5, v4, v6);
  __swift_storeEnumTagSinglePayload(v2 + *(int *)(v1 + 24), 1, 1, v6);
  OUTLINED_FUNCTION_146();
  sub_21D7C4D64();
  v0[5] = v1;
  sub_21CDF81B4((uint64_t)&qword_255331CF8);
  v0[6] = v7;
  __swift_allocate_boxed_opaque_existential_0Tm(v0 + 2);
  sub_21CDD337C(v2, v8, (uint64_t (*)(_QWORD))type metadata accessor for ProcessDeepLinkAction);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 104))(v3, *MEMORY[0x24BE5D0A0], v12);
  OUTLINED_FUNCTION_327();
  v0[39] = sub_21D7C4530();
  OUTLINED_FUNCTION_119(v3, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F67768);
  sub_21CF4E1F4((uint64_t)&qword_253F67760);
  v9 = (_QWORD *)swift_task_alloc();
  v0[40] = (uint64_t)v9;
  *v9 = v0;
  v9[1] = sub_21CF45054;
  OUTLINED_FUNCTION_87_3();
  return sub_21D7C4D1C();
}

uint64_t sub_21CF45054()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 328) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_23_5();
  return OUTLINED_FUNCTION_6_8();
}

uint64_t sub_21CF450AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, _BYTE *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t (*v33)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _BYTE *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  OUTLINED_FUNCTION_217();
  v20 = v16[30];
  v21 = v16[31];
  v22 = v16[29];
  swift_release();
  v23 = OUTLINED_FUNCTION_326();
  v24(v23);
  v25 = OUTLINED_FUNCTION_327();
  v27 = v26(v25);
  if (v27 == *MEMORY[0x24BE5CBF0])
  {
    OUTLINED_FUNCTION_140_0();
    OUTLINED_FUNCTION_25_5(v22, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
    OUTLINED_FUNCTION_37_4(v20, *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
    sub_21CDBDA1C(v21, (uint64_t (*)(_QWORD))type metadata accessor for ProcessDeepLinkAction);
    *v19 = 0;
  }
  else if (v27 == *MEMORY[0x24BE5CBE0])
  {
    OUTLINED_FUNCTION_140_0();
    OUTLINED_FUNCTION_25_5(v22, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
    OUTLINED_FUNCTION_37_4(v20, *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
    sub_21CDBDA1C(v21, (uint64_t (*)(_QWORD))type metadata accessor for ProcessDeepLinkAction);
    *v19 = 1;
  }
  else
  {
    if (qword_253F4F288 != -1)
      swift_once();
    v28 = v16[33];
    v29 = v16[31];
    a9 = v16[32];
    a10 = v16[34];
    v30 = v16[29];
    a12 = v16[36];
    a13 = v16[30];
    v31 = v16[28];
    a11 = (_BYTE *)v16[19];
    __swift_project_value_buffer(v16[22], (uint64_t)qword_253F65580);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F67DC0);
    OUTLINED_FUNCTION_27_1();
    OUTLINED_FUNCTION_31();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_21D7C8560;
    OUTLINED_FUNCTION_164();
    OUTLINED_FUNCTION_326();
    sub_21D7C4D40();
    swift_release();
    OUTLINED_FUNCTION_65_4();
    v32 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
    v32(v29, v31);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(a10, a9);
    sub_21CDBDA1C(a12, (uint64_t (*)(_QWORD))type metadata accessor for ProcessDeepLinkAction);
    *a11 = 1;
    v32(a13, v31);
  }
  swift_task_dealloc();
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_22_1();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_21_1();
  OUTLINED_FUNCTION_136_0();
  return v33(v33, v34, v35, v36, v37, v38, v39, v40, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_21CF452F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  swift_release();
  if (qword_253F4F288 != -1)
    swift_once();
  v10 = *(_QWORD *)(v0 + 272);
  v11 = *(_QWORD *)(v0 + 288);
  v8 = *(_QWORD *)(v0 + 264);
  v9 = *(_QWORD *)(v0 + 256);
  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = __swift_project_value_buffer(*(_QWORD *)(v0 + 176), (uint64_t)qword_253F65580);
  OUTLINED_FUNCTION_44_2(v2, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F67DC0);
  OUTLINED_FUNCTION_27_1();
  OUTLINED_FUNCTION_31();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_21D7C8560;
  sub_21D7C3FB4();
  OUTLINED_FUNCTION_79();
  sub_21D7C3FA8();
  v4 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v0 + 56) = 0x284C52556E65706FLL;
  *(_QWORD *)(v0 + 64) = 0xEB00000000293A5FLL;
  sub_21D7C3F90();
  OUTLINED_FUNCTION_36_8(v0 + 56);
  sub_21D7C3FA8();
  swift_getErrorValue();
  v5 = sub_21D7C5E08();
  *(_QWORD *)(v0 + 112) = v4;
  *(_QWORD *)(v0 + 88) = v5;
  *(_QWORD *)(v0 + 96) = v6;
  sub_21D7C3F90();
  OUTLINED_FUNCTION_36_8(v0 + 88);
  sub_21D7C3FA8();
  sub_21D7C3FCC();
  sub_21D7C4D40();
  OUTLINED_FUNCTION_90_0();
  OUTLINED_FUNCTION_214(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  swift_willThrow();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10, v9);
  sub_21CDBDA1C(v11, (uint64_t (*)(_QWORD))type metadata accessor for ProcessDeepLinkAction);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_21_1();
  OUTLINED_FUNCTION_17_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21CF45598()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[11] = v0;
  v1[12] = OUTLINED_FUNCTION_56();
  v1[13] = sub_21D7C5460();
  v1[14] = OUTLINED_FUNCTION_48();
  v1[15] = v2;
  return OUTLINED_FUNCTION_4_7();
}

uint64_t sub_21CF455F8()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  uint64_t v4;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 88) + *(_QWORD *)(**(_QWORD **)(v0 + 88) + 176));
  swift_retain();
  sub_21D41B2F0();
  OUTLINED_FUNCTION_318();
  OUTLINED_FUNCTION_86_2();
  if ((~v1 & 0xF000000000000007) != 0)
  {
    if (!(v1 >> 62))
    {
      OUTLINED_FUNCTION_236();
      return (*(uint64_t (**)(unint64_t))(v0 + 8))(v1);
    }
    if (v1 >> 62 == 1)
    {
      OUTLINED_FUNCTION_236();
      v2 = (id)(v1 & 0x3FFFFFFFFFFFFFFFLL);
      swift_willThrow();
      OUTLINED_FUNCTION_249();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    OUTLINED_FUNCTION_249();
  }
  v4 = sub_21D7C5460();
  *(_QWORD *)(v0 + 128) = v4;
  if (v4)
  {
    swift_getObjectType();
    sub_21D7C5424();
  }
  return OUTLINED_FUNCTION_34_6();
}

uint64_t sub_21CF45710()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0 + 10;
  v0[2] = v0;
  v0[3] = sub_21CF45768;
  v1 = swift_continuation_init();
  sub_21CF49CBC(v1);
  return swift_continuation_await();
}

uint64_t sub_21CF45768()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 136) = v2;
  if (v2)
  {
    swift_willThrow();
  }
  else
  {
    *(_QWORD *)(v1 + 144) = *(_QWORD *)(v1 + 80);
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_21CF457E4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_236();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 144));
}

uint64_t sub_21CF45818()
{
  uint64_t v0;

  OUTLINED_FUNCTION_236();
  OUTLINED_FUNCTION_104();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21CF45850@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_21CE45D5C(*(_QWORD *)(v1 + 24), a1);
  return swift_retain();
}

void sub_21CF45878(uint64_t a1@<X8>)
{
  uint64_t v2;

  OUTLINED_FUNCTION_265();
  type metadata accessor for BootstrapState();
  sub_21CDF81B4((uint64_t)&qword_253F5FA10);
  OUTLINED_FUNCTION_50();
  *(_QWORD *)a1 = sub_21D7C1188();
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = sub_21CF49A18;
  *(_QWORD *)(a1 + 24) = 0;
  *(_WORD *)(a1 + 32) = 0;
  OUTLINED_FUNCTION_98();
}

void sub_21CF458E4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  _QWORD v88[49];
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;

  OUTLINED_FUNCTION_22();
  v88[48] = v2;
  v89 = v1;
  v3 = *v0;
  v88[31] = type metadata accessor for UnifiedMessagesSheetView();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_2_13();
  v88[10] = v5;
  OUTLINED_FUNCTION_38_3();
  type metadata accessor for UnifiedMessagesSheetModel();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_13();
  v88[9] = v7;
  v88[29] = __swift_instantiateConcreteTypeFromMangledName(&qword_255331D80);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_2_13();
  v88[30] = v9;
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_25532F698);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_2_13();
  v88[32] = v11;
  v12 = *(_QWORD *)(v3 + 88);
  v13 = *(_QWORD *)(v3 + 104);
  v15 = type metadata accessor for AppDestinationFullScreenCoverPageView(255, v12, v13, v14);
  OUTLINED_FUNCTION_292();
  v16 = sub_21D7C1AB8();
  v88[28] = *(_QWORD *)(v16 - 8);
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_12_4();
  v88[27] = v18;
  v97 = v16;
  v88[37] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25532F690);
  v19 = sub_21D7C1AB8();
  v88[41] = *(_QWORD *)(v19 - 8);
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_12_4();
  v88[40] = v21;
  v93 = v15;
  v88[7] = *(_QWORD *)(v15 - 8);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_11();
  v88[8] = v23;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_38_5();
  v88[26] = v25;
  v26 = OUTLINED_FUNCTION_198();
  v88[24] = *(_QWORD *)(v26 - 8);
  v88[25] = v26;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v27);
  v88[5] = (char *)v88 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v29);
  v88[23] = (char *)v88 - v30;
  v31 = OUTLINED_FUNCTION_38_3();
  type metadata accessor for MusicAppDestinationContext(v31);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_2_13();
  v88[14] = v33;
  v34 = OUTLINED_FUNCTION_285();
  v38 = type metadata accessor for AppDestinationSheetPageView(v34, v35, v36, v37);
  v88[4] = *(_QWORD *)(v38 - 8);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v39);
  OUTLINED_FUNCTION_11();
  v88[6] = v40;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v41);
  OUTLINED_FUNCTION_38_5();
  v88[22] = v42;
  v43 = OUTLINED_FUNCTION_198();
  v88[20] = *(_QWORD *)(v43 - 8);
  v88[21] = v43;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v44);
  OUTLINED_FUNCTION_11();
  v88[3] = v45;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v46);
  OUTLINED_FUNCTION_38_5();
  v88[19] = v47;
  v49 = type metadata accessor for ModalNavigationStack(255, v12, v13, v48);
  v96 = v38;
  v50 = sub_21D7C1AB8();
  v88[18] = *(_QWORD *)(v50 - 8);
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v51);
  OUTLINED_FUNCTION_12_4();
  v88[17] = v52;
  v88[33] = *(_QWORD *)(v12 - 8);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v53);
  OUTLINED_FUNCTION_2_13();
  v88[34] = v54;
  v94 = v49;
  v88[1] = *(_QWORD *)(v49 - 8);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v55);
  OUTLINED_FUNCTION_11();
  v88[2] = v56;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v57);
  OUTLINED_FUNCTION_38_5();
  v88[16] = v58;
  OUTLINED_FUNCTION_37_6();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v59);
  OUTLINED_FUNCTION_11();
  v88[0] = v60;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v61);
  v88[15] = (char *)v88 - v62;
  OUTLINED_FUNCTION_38_3();
  v88[11] = type metadata accessor for CommerceWebView();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v63);
  OUTLINED_FUNCTION_2_13();
  v88[13] = v64;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255331D88);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v65);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25532F688);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v66);
  OUTLINED_FUNCTION_2_13();
  v88[12] = v67;
  OUTLINED_FUNCTION_38_3();
  v88[35] = v68;
  v92 = v50;
  sub_21D7C1AB8();
  OUTLINED_FUNCTION_38_9();
  v88[39] = v69;
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v70);
  OUTLINED_FUNCTION_12_4();
  v88[38] = v71;
  OUTLINED_FUNCTION_38_3();
  v88[44] = v72;
  v88[47] = v19;
  v73 = sub_21D7C1AB8();
  v88[42] = *(_QWORD *)(v73 - 8);
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v74);
  OUTLINED_FUNCTION_12_4();
  v88[43] = v75;
  v76 = OUTLINED_FUNCTION_285();
  v80 = type metadata accessor for PresentationItem.Destination(v76, v77, v78, v79);
  v81 = *(_QWORD *)(v80 - 8);
  MEMORY[0x24BDAC7A8](v80);
  v83 = (char *)v88 - v82;
  v88[46] = v73;
  v84 = sub_21D7C1AB8();
  v90 = *(_QWORD *)(v84 - 8);
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x24BDAC7A8](v85);
  OUTLINED_FUNCTION_12_4();
  v88[45] = v86;
  (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v83, v89 + *(_QWORD *)(*(_QWORD *)v89 + 520), v80);
  v87 = (char *)sub_21CF45E30 + 4 * word_21D7D1670[swift_getEnumCaseMultiPayload()];
  v91 = v84;
  __asm { BR              X10 }
}

void sub_21CF45E30()
{
  uint64_t v0;

  OUTLINED_FUNCTION_98_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F61210);
  OUTLINED_FUNCTION_146();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_166();
  OUTLINED_FUNCTION_273();
  *(_BYTE *)(v0 + 1192) = 0;
  sub_21CDBFC18();
  OUTLINED_FUNCTION_13_11();
  OUTLINED_FUNCTION_61();
}

void sub_21CF45E98()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v2 = OUTLINED_FUNCTION_329();
  *(_QWORD *)(v0 + 1008) = v1;
  *(_QWORD *)(v0 + 1016) = v2;
  OUTLINED_FUNCTION_5_26();
}

void sub_21CF45EBC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_314((uint64_t)&qword_25532F6C0);
  OUTLINED_FUNCTION_113_1();
  OUTLINED_FUNCTION_36_8(v0 + 1200);
  sub_21CDBFAB8();
  OUTLINED_FUNCTION_73();
}

void sub_21CF45EF8()
{
  OUTLINED_FUNCTION_81_3();
}

void sub_21CF45F08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 992) = v2;
  *(_QWORD *)(v1 + 1000) = a1;
  OUTLINED_FUNCTION_5_26();
}

void sub_21CF45F20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 976) = v2;
  *(_QWORD *)(v1 + 984) = a1;
  OUTLINED_FUNCTION_11_18();
}

void sub_21CF45F38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 960) = v1;
  *(_QWORD *)(v0 + 968) = v2;
  OUTLINED_FUNCTION_31_8();
}

void sub_21CF45F50()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_41_9();
  OUTLINED_FUNCTION_84_2(v0[41]);
  v0[118] = v2;
  v0[119] = v1;
  OUTLINED_FUNCTION_11_18();
}

void sub_21CF460D0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_215();
  OUTLINED_FUNCTION_127_0();
  swift_release();
  OUTLINED_FUNCTION_12_11(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 336) + 8));
  sub_21CF4EB0C(v0 + 1296);
  sub_21CDBFAB8();
  OUTLINED_FUNCTION_5_26();
}

void sub_21CF47298()
{
  OUTLINED_FUNCTION_81_3();
}

void sub_21CF472A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 192) = v1;
  *(_QWORD *)(v2 - 184) = a1;
  OUTLINED_FUNCTION_71();
}

void sub_21CF472C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 208) = v1;
  *(_QWORD *)(v2 - 200) = a1;
  OUTLINED_FUNCTION_14_12();
}

void sub_21CF472D0()
{
  OUTLINED_FUNCTION_61();
}

void sub_21CF472E0(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;

  v3 = sub_21CDBFB78();
  *(_QWORD *)(v1 - 224) = a1;
  *(_QWORD *)(v1 - 216) = v3;
  OUTLINED_FUNCTION_120_0();
}

void sub_21CF472F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_21CF4EA80((uint64_t)&qword_25532F6C0);
  *(_QWORD *)(v1 - 240) = a1;
  *(_QWORD *)(v1 - 232) = v3;
  OUTLINED_FUNCTION_62();
}

void sub_21CF47328(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 256) = v1;
  *(_QWORD *)(v2 - 248) = a1;
  OUTLINED_FUNCTION_11_18();
}

void sub_21CF47338()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v2 = OUTLINED_FUNCTION_215();
  *(_QWORD *)(v0 + 1552) = v1;
  *(_QWORD *)(v0 + 1560) = v2;
  OUTLINED_FUNCTION_5_26();
}

void sub_21CF47354()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_21CDB6D80(v3, v1, v2);
  OUTLINED_FUNCTION_68_5(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 400) + 8));
  OUTLINED_FUNCTION_9();
}

char *sub_21CF47384()
{
  char *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t);
  void *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned __int8 v75;
  uint64_t v76;
  uint64_t v77;

  OUTLINED_FUNCTION_22();
  v76 = v3;
  v77 = v4;
  v5 = v0;
  v68 = v7;
  v69 = v6;
  v9 = v8;
  v10 = *(_QWORD *)v5;
  v11 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v5 + 88) - 8);
  v66 = v12;
  v67 = v11;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v13);
  v62 = (uint64_t)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_38_3();
  v15 = sub_21D7C3DEC();
  v58 = *(_QWORD *)(v15 - 8);
  v59 = v15;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_93_1();
  v17 = sub_21D7C3E10();
  v60 = *(_QWORD *)(v17 - 8);
  v61 = v17;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_48_6();
  v19 = sub_21D7C4CE0();
  v73 = *(_QWORD *)(v19 - 8);
  v74 = v19;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_61_4();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_38_5();
  v72 = v22;
  v23 = *(_QWORD *)(v9 + 8);
  v70 = *(_QWORD *)(v9 + 24);
  v71 = v23;
  v57 = *(_QWORD *)(v9 + 32);
  v24 = *(_QWORD *)(v9 + 40);
  v64 = v10;
  v65 = v24;
  v63 = *(unsigned __int8 *)(v9 + 48);
  v25 = OUTLINED_FUNCTION_292();
  v55 = v27;
  v56 = v26;
  type metadata accessor for PresentationStack(v25, v28, v26, v29);
  sub_21D2CEC9C(0);
  *((_QWORD *)v5 + 3) = v30;
  v31 = *(_QWORD *)(*(_QWORD *)v5 + 176);
  type metadata accessor for BootstrapState();
  OUTLINED_FUNCTION_42();
  *(_QWORD *)&v5[v31] = sub_21D41B70C();
  *(_QWORD *)&v5[*(_QWORD *)(*(_QWORD *)v5 + 184)] = 0;
  if (qword_253F4F288 != -1)
    swift_once();
  v32 = OUTLINED_FUNCTION_9_4();
  __swift_project_value_buffer(v32, (uint64_t)qword_253F65580);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F67DC0);
  OUTLINED_FUNCTION_27_1();
  OUTLINED_FUNCTION_31();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_21D7C8560;
  OUTLINED_FUNCTION_164();
  OUTLINED_FUNCTION_173();
  sub_21D7C4D28();
  swift_bridgeObjectRelease();
  sub_21D7C4C20();
  sub_21D7C4C20();
  sub_21D7C4CBC();
  v33 = OUTLINED_FUNCTION_179();
  v34(v33);
  if (qword_253F5FCF0 != -1)
    swift_once();
  v35 = (void *)qword_253F5FCE0;
  v36 = v65;
  *v1 = v57;
  v1[1] = v36;
  v1[2] = 0;
  v1[3] = 0;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v58 + 104))(v1, *MEMORY[0x24BE5C558], v59);
  v37 = v35;
  sub_21D7C4C20();
  OUTLINED_FUNCTION_179();
  sub_21D7C3DC8();
  (*(void (**)(char *, uint64_t, uint64_t))(v60 + 32))(&v5[*(_QWORD *)(*(_QWORD *)v5 + 168)], v2, v61);
  *((_QWORD *)v5 + 10) = v66;
  v38 = v68;
  sub_21CDC314C(v68, (uint64_t)(v5 + 88), (uint64_t *)&unk_253F5F048);
  v39 = v67;
  OUTLINED_FUNCTION_322((uint64_t)&v5[*(_QWORD *)(*(_QWORD *)v5 + 160)]);
  v40 = OUTLINED_FUNCTION_292();
  type metadata accessor for ConcreteAppDestinationPageProvider(v40, v41, v56, v42);
  v43 = v62;
  OUTLINED_FUNCTION_322(v62);
  sub_21CE86454(v43);
  *((_QWORD *)v5 + 4) = v44;
  v45 = *(_QWORD *)(v64 + 80);
  v46 = *(_QWORD *)(v64 + 96);
  v47 = OUTLINED_FUNCTION_173();
  v49 = nullsub_1(v47, v48, v46);
  *((_QWORD *)v5 + 8) = _s11PageContextVMa(0, v45, v46, v50);
  *((_QWORD *)v5 + 9) = &off_24E105AA0;
  *((_QWORD *)v5 + 5) = v49;
  v51 = (void *)objc_opt_self();
  swift_unknownObjectRetain_n();
  v52 = objc_msgSend(v51, sel_standardUserDefaults);
  *(_QWORD *)&v5[*(_QWORD *)(*(_QWORD *)v5 + 192)] = v52;
  v75 = v63;
  type metadata accessor for PrivacyDisclaimerAcknowledgement();
  OUTLINED_FUNCTION_121_0();
  v53 = sub_21D22D8A8(v52, &v75);
  OUTLINED_FUNCTION_90_0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_21CDBDA44(v38, (uint64_t *)&unk_253F5F048);
  OUTLINED_FUNCTION_274(*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8));
  (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v72, v74);
  *((_QWORD *)v5 + 2) = v53;
  return v5;
}

void sub_21CF477F0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F679A0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_21D7C5490();
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v11);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v12 + 24) = 0;
  *(_QWORD *)(v12 + 32) = v4;
  *(_QWORD *)(v12 + 40) = a1;
  *(_BYTE *)(v12 + 48) = a3;
  *(_QWORD *)(v12 + 56) = a2;
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  sub_21D21ECE8();
  swift_release();
  sub_21CDBDA44((uint64_t)v10, &qword_253F679A0);
}

void sub_21CF478F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD v26[6];
  uint64_t v27;
  uint64_t v28[2];

  OUTLINED_FUNCTION_22();
  v27 = v4;
  v26[5] = OUTLINED_FUNCTION_73_5();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v5);
  v6 = OUTLINED_FUNCTION_15_13();
  v26[2] = *(_QWORD *)(v6 - 8);
  v26[3] = v6;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v7);
  v26[1] = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v9);
  v26[0] = (char *)v26 - v10;
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v11);
  v26[4] = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_37_6();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v13);
  v14 = OUTLINED_FUNCTION_38_10();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_48_6();
  sub_21D7C37A4();
  OUTLINED_FUNCTION_221();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_28_2();
  sub_21D7C375C();
  OUTLINED_FUNCTION_157();
  if (!v2)
  {
    sub_21D7C3774();
    v2 = v17;
  }
  OUTLINED_FUNCTION_223();
  v18 = v3 + *(int *)(v14 + 24);
  v19 = OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_64_6(v19, v20, v21, v19);
  OUTLINED_FUNCTION_101_1(5);
  if ((OUTLINED_FUNCTION_50_8(3) & 1) != 0)
  {
    OUTLINED_FUNCTION_264();
  }
  else
  {
    v22 = v26[0];
    OUTLINED_FUNCTION_242();
    OUTLINED_FUNCTION_19_11();
    OUTLINED_FUNCTION_133_0();
    OUTLINED_FUNCTION_218();
    OUTLINED_FUNCTION_83(v22, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
  }
  v23 = v27;
  v24 = (_QWORD *)(v0 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253F60818) + 48));
  OUTLINED_FUNCTION_69_4(v3, v0);
  *v24 = 0;
  v24[1] = 0;
  OUTLINED_FUNCTION_116_0();
  v28[0] = 0;
  v28[1] = 0;
  OUTLINED_FUNCTION_43_6(v2, v0, v28, v1);
  OUTLINED_FUNCTION_186(v23);
  OUTLINED_FUNCTION_141_0(v25, type metadata accessor for FlowAction);
  OUTLINED_FUNCTION_89_3(v3);
  OUTLINED_FUNCTION_9();
}

void sub_21CF47B08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t *v20;
  _BYTE v21[32];

  OUTLINED_FUNCTION_22();
  v4 = v3;
  v6 = v5;
  OUTLINED_FUNCTION_73_5();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_15_13();
  OUTLINED_FUNCTION_221();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_91_4();
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v21[-v10];
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v12);
  v14 = &v21[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_100_2();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_12_2();
  if ((OUTLINED_FUNCTION_50_8(41) & 1) != 0)
  {
    OUTLINED_FUNCTION_227();
  }
  else
  {
    sub_21D7C45F0();
    OUTLINED_FUNCTION_83_3();
    v16 = OUTLINED_FUNCTION_173();
    OUTLINED_FUNCTION_44_2(v16, v17, v18);
    sub_21D7C42E4();
    OUTLINED_FUNCTION_214((uint64_t)v11, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  }
  v19 = sub_21D7C3564();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v1, v4, v19);
  OUTLINED_FUNCTION_302();
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_258();
  OUTLINED_FUNCTION_43_6((uint64_t)v14, v1, v20, v2);
  sub_21CF47EFC(v2, v6);
  sub_21CDBDA1C(v2, type metadata accessor for FlowAction);
  OUTLINED_FUNCTION_9();
}

void sub_21CF47C8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  _QWORD v35[5];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  OUTLINED_FUNCTION_22();
  v38 = v3;
  v36 = v4;
  v37 = v5;
  v35[4] = OUTLINED_FUNCTION_73_5();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OUTLINED_FUNCTION_93_3();
  v35[2] = *(_QWORD *)(v9 - 8);
  v35[3] = v9;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v10);
  v35[1] = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v12);
  v35[0] = (char *)v35 - v13;
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_37_6();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v17);
  v39 = (uint64_t)v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = OUTLINED_FUNCTION_22_4();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21D7C3660();
  OUTLINED_FUNCTION_330();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_12_2();
  sub_21D7C357C();
  OUTLINED_FUNCTION_144();
  if (!v0)
    sub_21D7C3600();
  OUTLINED_FUNCTION_37_4(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  v24 = (uint64_t)&v22[*(int *)(v19 + 24)];
  v25 = OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_58_2(v24, v26, v27, v25);
  OUTLINED_FUNCTION_109_1(4);
  if ((OUTLINED_FUNCTION_50_8(0) & 1) != 0)
  {
    sub_21D7C42D8();
  }
  else
  {
    v28 = v35[0];
    OUTLINED_FUNCTION_192();
    OUTLINED_FUNCTION_10_16();
    OUTLINED_FUNCTION_151();
    OUTLINED_FUNCTION_304();
    OUTLINED_FUNCTION_83(v28, *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
  }
  v30 = v36;
  v29 = v37;
  v31 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253F60818) + 48);
  OUTLINED_FUNCTION_69_4((uint64_t)v22, (uint64_t)v8);
  if (v29)
    v32 = v30;
  else
    v32 = 0;
  v33 = &v8[v31];
  *(_QWORD *)v33 = v32;
  *((_QWORD *)v33 + 1) = v29;
  OUTLINED_FUNCTION_116_0();
  OUTLINED_FUNCTION_259();
  OUTLINED_FUNCTION_43_6((uint64_t)v16, (uint64_t)v8, &v40, v39);
  OUTLINED_FUNCTION_279();
  OUTLINED_FUNCTION_42_5(v34, type metadata accessor for FlowAction);
  OUTLINED_FUNCTION_89_3((uint64_t)v22);
  OUTLINED_FUNCTION_9();
}

void sub_21CF47EFC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;

  sub_21CDD337C(a1, a2, type metadata accessor for FlowAction);
  OUTLINED_FUNCTION_265();
  v4 = type metadata accessor for FlowActionPageView();
  *(_QWORD *)(a2 + *(int *)(v4 + 20)) = v2;
  v5 = (uint64_t *)(a2 + *(int *)(v4 + 24));
  type metadata accessor for MusicStackAuthority();
  sub_21CDF81B4((uint64_t)&qword_253F5EC58);
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_327();
  *v5 = sub_21D7C1500();
  v5[1] = v6;
  OUTLINED_FUNCTION_98();
}

void sub_21CF47F7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  _QWORD v34[5];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  OUTLINED_FUNCTION_22();
  v37 = v4;
  v35 = v5;
  v36 = v6;
  v34[4] = OUTLINED_FUNCTION_73_5();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = OUTLINED_FUNCTION_93_3();
  v34[2] = *(_QWORD *)(v10 - 8);
  v34[3] = v10;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v11);
  v34[1] = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v13);
  v34[0] = (char *)v34 - v14;
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_37_6();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v18);
  v38 = (uint64_t)v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = OUTLINED_FUNCTION_22_4();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_145_0();
  OUTLINED_FUNCTION_330();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_12_2();
  sub_21D7C3A14();
  OUTLINED_FUNCTION_144();
  if (!v0)
    sub_21D7C3A5C();
  OUTLINED_FUNCTION_37_4(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  v23 = v3 + *(int *)(v20 + 24);
  v24 = OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_64_6(v24, v25, v26, v24);
  OUTLINED_FUNCTION_109_1(14);
  if ((OUTLINED_FUNCTION_50_8(25) & 1) != 0)
  {
    sub_21D7C42D8();
  }
  else
  {
    v27 = v34[0];
    OUTLINED_FUNCTION_192();
    OUTLINED_FUNCTION_10_16();
    OUTLINED_FUNCTION_151();
    OUTLINED_FUNCTION_304();
    OUTLINED_FUNCTION_83(v27, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
  }
  v29 = v35;
  v28 = v36;
  v30 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253F60818) + 48);
  OUTLINED_FUNCTION_69_4(v3, (uint64_t)v9);
  if (v28)
    v31 = v29;
  else
    v31 = 0;
  v32 = &v9[v30];
  *(_QWORD *)v32 = v31;
  *((_QWORD *)v32 + 1) = v28;
  OUTLINED_FUNCTION_116_0();
  OUTLINED_FUNCTION_259();
  OUTLINED_FUNCTION_43_6((uint64_t)v17, (uint64_t)v9, &v39, v38);
  OUTLINED_FUNCTION_279();
  OUTLINED_FUNCTION_42_5(v33, type metadata accessor for FlowAction);
  OUTLINED_FUNCTION_89_3(v3);
  OUTLINED_FUNCTION_9();
}

void sub_21CF481D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD v26[6];
  uint64_t v27;
  uint64_t v28[2];

  OUTLINED_FUNCTION_22();
  v27 = v4;
  v26[5] = OUTLINED_FUNCTION_73_5();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v5);
  v6 = OUTLINED_FUNCTION_15_13();
  v26[2] = *(_QWORD *)(v6 - 8);
  v26[3] = v6;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v7);
  v26[1] = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v9);
  v26[0] = (char *)v26 - v10;
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v11);
  v26[4] = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_37_6();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v13);
  v14 = OUTLINED_FUNCTION_38_10();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_48_6();
  sub_21D7C0690();
  OUTLINED_FUNCTION_221();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_28_2();
  sub_21D7C0684();
  OUTLINED_FUNCTION_157();
  if (!v2)
  {
    sub_21D7C0654();
    v2 = v17;
  }
  OUTLINED_FUNCTION_223();
  v18 = v3 + *(int *)(v14 + 24);
  v19 = OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_58_2(v18, v20, v21, v19);
  OUTLINED_FUNCTION_101_1(21);
  if ((OUTLINED_FUNCTION_50_8(44) & 1) != 0)
  {
    OUTLINED_FUNCTION_264();
  }
  else
  {
    v22 = v26[0];
    OUTLINED_FUNCTION_242();
    OUTLINED_FUNCTION_19_11();
    OUTLINED_FUNCTION_133_0();
    OUTLINED_FUNCTION_218();
    OUTLINED_FUNCTION_83(v22, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
  }
  v23 = v27;
  v24 = (_QWORD *)(v0 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253F60818) + 48));
  OUTLINED_FUNCTION_69_4(v3, v0);
  *v24 = 0;
  v24[1] = 0;
  OUTLINED_FUNCTION_116_0();
  v28[0] = 0;
  v28[1] = 0;
  OUTLINED_FUNCTION_43_6(v2, v0, v28, v1);
  OUTLINED_FUNCTION_186(v23);
  OUTLINED_FUNCTION_141_0(v25, type metadata accessor for FlowAction);
  OUTLINED_FUNCTION_89_3(v3);
  OUTLINED_FUNCTION_9();
}

void sub_21CF483F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[2];

  OUTLINED_FUNCTION_22();
  v40 = v0;
  v5 = v4;
  v7 = v6;
  v42 = v8;
  v41 = OUTLINED_FUNCTION_73_5();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v9);
  v10 = OUTLINED_FUNCTION_15_13();
  v38 = *(_QWORD *)(v10 - 8);
  v39 = v10;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v11);
  v37[1] = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v37 - v14;
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v16);
  v43 = (uint64_t)v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_37_6();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_93_1();
  v19 = type metadata accessor for SocialProfilePageIntent();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_48_6();
  type metadata accessor for ContentDescriptor();
  OUTLINED_FUNCTION_21();
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)v37 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = (uint64_t)&v24[*(int *)(v22 + 24)];
  v26 = OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_58_2(v25, v27, v28, v26);
  *v24 = 17;
  *((_QWORD *)v24 + 1) = 0;
  *((_QWORD *)v24 + 2) = 0;
  *((_QWORD *)v24 + 3) = v7;
  *((_QWORD *)v24 + 4) = v5;
  *(_OWORD *)(v24 + 40) = 0u;
  *(_OWORD *)(v24 + 56) = 0u;
  *(_OWORD *)(v24 + 72) = 0u;
  *(_OWORD *)(v24 + 88) = 0u;
  *((_QWORD *)v24 + 13) = 0;
  v24[112] = 1;
  sub_21CDD337C((uint64_t)v24, v3, (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
  sub_21D7C4C20();
  v29 = OUTLINED_FUNCTION_111_1();
  *(_BYTE *)(v3 + *(int *)(v19 + 20)) = sub_21CF497B4(v29, v30, v5) & 1;
  if ((OUTLINED_FUNCTION_50_8(39) & 1) != 0)
  {
    sub_21D7C42D8();
  }
  else
  {
    sub_21D7C45F0();
    OUTLINED_FUNCTION_83_3();
    v31 = v38;
    v32 = OUTLINED_FUNCTION_179();
    v33(v32);
    sub_21D7C42E4();
    OUTLINED_FUNCTION_83((uint64_t)v15, *(uint64_t (**)(uint64_t, uint64_t))(v31 + 8));
  }
  *(_QWORD *)(v1 + 24) = v19;
  OUTLINED_FUNCTION_167((uint64_t)&unk_255331D08);
  OUTLINED_FUNCTION_195(v34);
  OUTLINED_FUNCTION_69_4(v3, v35);
  OUTLINED_FUNCTION_5_17();
  v44[0] = 0;
  v44[1] = 0;
  OUTLINED_FUNCTION_43_6(v43, v1, v44, v2);
  sub_21CF47EFC(v2, v42);
  OUTLINED_FUNCTION_141_0(v36, type metadata accessor for FlowAction);
  OUTLINED_FUNCTION_89_3(v3);
  sub_21CDBDA1C((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
  OUTLINED_FUNCTION_9();
}

void sub_21CF4868C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t, uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;

  OUTLINED_FUNCTION_22();
  v101 = v0;
  v110 = v1;
  v95 = type metadata accessor for CuratorDetailPageIntent();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_2_13();
  v97 = v3;
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_255331D10);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v4);
  v108 = (char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66748);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_13();
  v105 = v7;
  v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66858);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_2_13();
  v102 = v9;
  v103 = OUTLINED_FUNCTION_197();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_2_13();
  v106 = v11;
  v100 = OUTLINED_FUNCTION_73_5();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v12);
  v99 = (char *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = OUTLINED_FUNCTION_93_3();
  v93 = *(_QWORD *)(v14 - 8);
  v94 = v14;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_11();
  v91 = v16;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_38_5();
  v92 = v18;
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_11();
  v96 = v20;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_38_5();
  v90 = v22;
  OUTLINED_FUNCTION_37_6();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_11();
  v98 = v24;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_38_5();
  v88 = v26;
  OUTLINED_FUNCTION_38_3();
  v89 = type metadata accessor for AppleCuratorDetailPageIntent();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v88 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = OUTLINED_FUNCTION_22_4();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_61_4();
  v34 = v32 - v33;
  MEMORY[0x24BDAC7A8](v35);
  v37 = (char *)&v88 - v36;
  v38 = sub_21D7C3888();
  v39 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v88 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_21D7C3864();
  v44 = v43;
  sub_21D7C3894();
  v45 = (*(uint64_t (**)(char *, uint64_t))(v39 + 88))(v41, v38);
  if (v45 == *MEMORY[0x24BDDF900])
  {
    v46 = v96;
    v47 = v34 + *(int *)(v30 + 24);
    v48 = OUTLINED_FUNCTION_0_7();
    OUTLINED_FUNCTION_58_2(v47, v49, v50, v48);
    *(_BYTE *)v34 = 2;
    *(_OWORD *)(v34 + 8) = 0u;
    *(_OWORD *)(v34 + 24) = 0u;
    *(_OWORD *)(v34 + 40) = 0u;
    *(_OWORD *)(v34 + 56) = 0u;
    *(_OWORD *)(v34 + 72) = 0u;
    *(_QWORD *)(v34 + 88) = v42;
    *(_QWORD *)(v34 + 96) = v44;
    *(_QWORD *)(v34 + 104) = 0;
    *(_BYTE *)(v34 + 112) = 1;
    v51 = v97;
    sub_21CDD337C(v34, v97, (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
    if ((OUTLINED_FUNCTION_50_8(8) & 1) != 0)
    {
      v52 = v46;
      OUTLINED_FUNCTION_227();
    }
    else
    {
      v63 = v92;
      OUTLINED_FUNCTION_192();
      OUTLINED_FUNCTION_10_16();
      v64 = v93;
      v65 = OUTLINED_FUNCTION_272();
      OUTLINED_FUNCTION_24_6(v65, v63, v66);
      v52 = v46;
      sub_21D7C42E4();
      OUTLINED_FUNCTION_68_5(v63, *(uint64_t (**)(uint64_t, uint64_t))(v64 + 8));
    }
    v67 = (uint64_t)v99;
    *((_QWORD *)v99 + 3) = v95;
    sub_21CDF81B4((uint64_t)&unk_255331CC0);
    OUTLINED_FUNCTION_195(v68);
    sub_21CDD337C(v51, v69, (uint64_t (*)(_QWORD))type metadata accessor for CuratorDetailPageIntent);
    OUTLINED_FUNCTION_5_17();
    v111 = 0;
    v112 = 0;
    OUTLINED_FUNCTION_43_6(v52, v67, &v111, v98);
    v70 = v106;
    OUTLINED_FUNCTION_186(v106);
    OUTLINED_FUNCTION_69_4(v70, v105);
    OUTLINED_FUNCTION_13_7();
    OUTLINED_FUNCTION_167((uint64_t)&qword_253F60D40);
    OUTLINED_FUNCTION_13_11();
    OUTLINED_FUNCTION_208();
    sub_21CDC314C(v71, v72, v73);
    OUTLINED_FUNCTION_254();
    OUTLINED_FUNCTION_5_17();
    sub_21CDB6B00();
    sub_21D7C1AAC();
    v74 = OUTLINED_FUNCTION_173();
    sub_21CDBDA44(v74, v75);
    OUTLINED_FUNCTION_89_3(v70);
    OUTLINED_FUNCTION_141_0(v76, type metadata accessor for FlowAction);
    sub_21CDBDA1C(v51, (uint64_t (*)(_QWORD))type metadata accessor for CuratorDetailPageIntent);
    v77 = v34;
LABEL_12:
    sub_21CDBDA1C(v77, (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
    goto LABEL_13;
  }
  if (v45 == *MEMORY[0x24BDDF8F8])
  {
    v53 = v29;
    v54 = (uint64_t)&v37[*(int *)(v30 + 24)];
    v55 = OUTLINED_FUNCTION_0_7();
    OUTLINED_FUNCTION_58_2(v54, v56, v57, v55);
    *v37 = 9;
    *(_OWORD *)(v37 + 8) = 0u;
    *(_OWORD *)(v37 + 24) = 0u;
    *(_OWORD *)(v37 + 40) = 0u;
    *(_OWORD *)(v37 + 56) = 0u;
    *(_OWORD *)(v37 + 72) = 0u;
    *((_QWORD *)v37 + 11) = v42;
    *((_QWORD *)v37 + 12) = v44;
    *((_QWORD *)v37 + 13) = 0;
    v37[112] = 1;
    v58 = (uint64_t)v29;
    sub_21CDD337C((uint64_t)v37, (uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
    v59 = OUTLINED_FUNCTION_50_8(8);
    v60 = (uint64_t)v108;
    v61 = (uint64_t *)v99;
    if ((v59 & 1) != 0)
    {
      v62 = v90;
      sub_21D7C42D8();
    }
    else
    {
      v78 = v92;
      sub_21D7C45F0();
      OUTLINED_FUNCTION_24_8();
      sub_21D7C45D8();
      v80 = v93;
      v79 = v94;
      v81 = OUTLINED_FUNCTION_272();
      v82(v81, v78, v79);
      v62 = v90;
      v58 = (uint64_t)v53;
      sub_21D7C42E4();
      OUTLINED_FUNCTION_83(v78, *(uint64_t (**)(uint64_t, uint64_t))(v80 + 8));
    }
    v83 = v88;
    v61[3] = v89;
    OUTLINED_FUNCTION_167((uint64_t)&unk_255331CC8);
    v61[4] = v84;
    __swift_allocate_boxed_opaque_existential_0Tm(v61);
    OUTLINED_FUNCTION_69_4(v58, v85);
    OUTLINED_FUNCTION_5_17();
    v111 = 0;
    v112 = 0;
    OUTLINED_FUNCTION_43_6(v62, (uint64_t)v61, &v111, v83);
    v86 = v106;
    sub_21CF47EFC(v83, v106);
    OUTLINED_FUNCTION_134_0(v86, v105);
    OUTLINED_FUNCTION_5_17();
    OUTLINED_FUNCTION_191((uint64_t)&qword_253F60D40);
    v87 = v102;
    OUTLINED_FUNCTION_13_11();
    sub_21CDC314C(v87, v60, &qword_253F66858);
    OUTLINED_FUNCTION_5_17();
    sub_21CDB6B00();
    sub_21D7C1AAC();
    sub_21CDBDA44(v87, &qword_253F66858);
    sub_21CDBDA1C(v86, (uint64_t (*)(_QWORD))type metadata accessor for FlowActionPageView);
    sub_21CDBDA1C(v83, type metadata accessor for FlowAction);
    OUTLINED_FUNCTION_89_3(v58);
    v77 = (uint64_t)v37;
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_13_7();
  sub_21CDB6B00();
  sub_21D7C1AAC();
  OUTLINED_FUNCTION_83((uint64_t)v41, *(uint64_t (**)(uint64_t, uint64_t))(v39 + 8));
LABEL_13:
  OUTLINED_FUNCTION_9();
}

void sub_21CF48E08()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  OUTLINED_FUNCTION_22();
  v36 = v4;
  v6 = v5;
  v35 = OUTLINED_FUNCTION_73_5();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v10);
  v34 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_37_6();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_2_13();
  v33 = v13;
  OUTLINED_FUNCTION_38_3();
  v31 = type metadata accessor for PlaylistCollaboratorsDetailPageIntent();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_12_2();
  v15 = OUTLINED_FUNCTION_22_4();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v16);
  v17 = OUTLINED_FUNCTION_145_0();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_40_2();
  v19 = v6;
  sub_21D7C3A14();
  OUTLINED_FUNCTION_318();
  v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
  v32 = v6;
  OUTLINED_FUNCTION_294(v2, v6, v20);
  if (!v0)
  {
    v19 = v2;
    sub_21D7C3A5C();
    OUTLINED_FUNCTION_318();
  }
  OUTLINED_FUNCTION_25_5(v2, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
  v21 = v3 + *(int *)(v15 + 24);
  v22 = OUTLINED_FUNCTION_0_7();
  __swift_storeEnumTagSinglePayload(v21, 1, 1, v22);
  *(_BYTE *)v3 = 14;
  *(_OWORD *)(v3 + 8) = 0u;
  *(_OWORD *)(v3 + 24) = 0u;
  *(_OWORD *)(v3 + 40) = 0u;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_QWORD *)(v3 + 88) = v19;
  *(_QWORD *)(v3 + 96) = v0;
  *(_QWORD *)(v3 + 104) = 0;
  *(_BYTE *)(v3 + 112) = 1;
  v23 = v32;
  sub_21D7C3A8C();
  OUTLINED_FUNCTION_318();
  v24 = v31;
  sub_21CDD337C(v3, (uint64_t)v1 + *(int *)(v31 + 20), (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
  *v1 = v23;
  v1[1] = v0;
  v25 = (uint64_t)v34;
  sub_21D7C42D8();
  *((_QWORD *)v9 + 3) = v24;
  OUTLINED_FUNCTION_167((uint64_t)&unk_255331D18);
  OUTLINED_FUNCTION_195(v26);
  OUTLINED_FUNCTION_69_4((uint64_t)v1, v27);
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_258();
  v28 = v33;
  OUTLINED_FUNCTION_43_6(v25, (uint64_t)v9, v29, v33);
  sub_21CF47EFC(v28, v36);
  sub_21CDBDA1C(v28, type metadata accessor for FlowAction);
  OUTLINED_FUNCTION_89_3((uint64_t)v1);
  sub_21CDBDA1C(v3, (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
  OUTLINED_FUNCTION_9();
}

void sub_21CF4904C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[2];

  OUTLINED_FUNCTION_22();
  v28 = v4;
  v27 = OUTLINED_FUNCTION_73_5();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v5);
  v6 = OUTLINED_FUNCTION_15_13();
  v25 = *(_QWORD *)(v6 - 8);
  v26 = v6;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_91_4();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v24 - v9;
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_100_2();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v14);
  v15 = OUTLINED_FUNCTION_38_10();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_40_2();
  sub_21D7C3B7C();
  v17 = (uint64_t)&v2[*(int *)(v15 + 24)];
  v18 = OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_58_2(v17, v19, v20, v18);
  *v2 = 1;
  OUTLINED_FUNCTION_118_0();
  if ((OUTLINED_FUNCTION_50_8(8) & 1) != 0)
  {
    OUTLINED_FUNCTION_216();
  }
  else
  {
    sub_21D7C45F0();
    OUTLINED_FUNCTION_24_8();
    sub_21D7C45D8();
    v21 = v25;
    OUTLINED_FUNCTION_24_6(v3, (uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 16));
    OUTLINED_FUNCTION_261();
    OUTLINED_FUNCTION_68_5((uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
  }
  v22 = (_QWORD *)(v0 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253F60818) + 48));
  OUTLINED_FUNCTION_69_4((uint64_t)v2, v0);
  *v22 = 0;
  v22[1] = 0;
  OUTLINED_FUNCTION_116_0();
  v29[0] = 0;
  v29[1] = 0;
  OUTLINED_FUNCTION_43_6((uint64_t)v13, v0, v29, v1);
  OUTLINED_FUNCTION_186(v28);
  OUTLINED_FUNCTION_141_0(v23, type metadata accessor for FlowAction);
  OUTLINED_FUNCTION_89_3((uint64_t)v2);
  OUTLINED_FUNCTION_9();
}

void sub_21CF49210()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[2];

  OUTLINED_FUNCTION_22();
  v28 = v4;
  v27 = OUTLINED_FUNCTION_73_5();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v5);
  v6 = OUTLINED_FUNCTION_15_13();
  v25 = *(_QWORD *)(v6 - 8);
  v26 = v6;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_91_4();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v24 - v9;
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_100_2();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v14);
  v15 = OUTLINED_FUNCTION_38_10();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_40_2();
  sub_21D7C36A8();
  v17 = (uint64_t)&v2[*(int *)(v15 + 24)];
  v18 = OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_58_2(v17, v19, v20, v18);
  *v2 = 0;
  OUTLINED_FUNCTION_118_0();
  if ((OUTLINED_FUNCTION_50_8(12) & 1) != 0)
  {
    OUTLINED_FUNCTION_216();
  }
  else
  {
    sub_21D7C45F0();
    sub_21D7C45D8();
    v21 = v25;
    OUTLINED_FUNCTION_24_6(v3, (uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 16));
    OUTLINED_FUNCTION_261();
    OUTLINED_FUNCTION_68_5((uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
  }
  v22 = (_QWORD *)(v0 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253F60818) + 48));
  OUTLINED_FUNCTION_69_4((uint64_t)v2, v0);
  *v22 = 0;
  v22[1] = 0;
  OUTLINED_FUNCTION_116_0();
  v29[0] = 0;
  v29[1] = 0;
  OUTLINED_FUNCTION_43_6((uint64_t)v13, v0, v29, v1);
  OUTLINED_FUNCTION_186(v28);
  OUTLINED_FUNCTION_141_0(v23, type metadata accessor for FlowAction);
  OUTLINED_FUNCTION_89_3((uint64_t)v2);
  OUTLINED_FUNCTION_9();
}

void sub_21CF49400()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  OUTLINED_FUNCTION_22();
  v52 = v0;
  v2 = v1;
  v57 = v3;
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F66748);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_2_13();
  v55 = v5;
  v54 = OUTLINED_FUNCTION_197();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_13();
  v56 = v7;
  v51 = OUTLINED_FUNCTION_73_5();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_61_4();
  v11 = v9 - v10;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v48 - v13;
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v15);
  v49 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v17);
  v48 = (char *)&v48 - v18;
  OUTLINED_FUNCTION_37_6();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_11();
  v50 = (char *)v20;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v48 - v22;
  OUTLINED_FUNCTION_22_4();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_61_4();
  v27 = v25 - v26;
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v48 - v29;
  v32 = *v2;
  v31 = v2[1];
  v33 = *((_BYTE *)v2 + 32);
  v35 = *(int *)(v34 + 24);
  v36 = OUTLINED_FUNCTION_0_7();
  if ((v33 & 1) != 0)
  {
    v38 = v2[2];
    v37 = v2[3];
    __swift_storeEnumTagSinglePayload(v27 + v35, 1, 1, v36);
    *(_BYTE *)v27 = 14;
    *(_OWORD *)(v27 + 8) = 0u;
    *(_OWORD *)(v27 + 24) = 0u;
    *(_OWORD *)(v27 + 40) = 0u;
    *(_OWORD *)(v27 + 56) = 0u;
    *(_OWORD *)(v27 + 72) = 0u;
    *(_QWORD *)(v27 + 88) = v32;
    *(_QWORD *)(v27 + 96) = v31;
    *(_QWORD *)(v27 + 104) = 0;
    *(_BYTE *)(v27 + 112) = 1;
    sub_21D7C4C20();
    sub_21D7C4C20();
    v39 = (uint64_t)v49;
    sub_21D7C42D8();
    v40 = (_QWORD *)(v11 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253F60818) + 48));
    sub_21CDD337C(v27, v11, (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
    if (v37)
      v41 = v38;
    else
      v41 = 0;
    *v40 = v41;
    v40[1] = v37;
    OUTLINED_FUNCTION_116_0();
    OUTLINED_FUNCTION_258();
    v23 = v50;
    OUTLINED_FUNCTION_43_6(v39, v11, v42, (uint64_t)v50);
    OUTLINED_FUNCTION_204();
    OUTLINED_FUNCTION_69_4((uint64_t)v40, v55);
    OUTLINED_FUNCTION_13_7();
    OUTLINED_FUNCTION_167((uint64_t)&qword_253F60D40);
    v43 = OUTLINED_FUNCTION_13_11();
  }
  else
  {
    __swift_storeEnumTagSinglePayload((uint64_t)&v30[v35], 1, 1, v36);
    *v30 = 5;
    *(_OWORD *)(v30 + 8) = 0u;
    *(_OWORD *)(v30 + 24) = 0u;
    *(_OWORD *)(v30 + 40) = 0u;
    *(_OWORD *)(v30 + 56) = 0u;
    *(_OWORD *)(v30 + 72) = 0u;
    *((_QWORD *)v30 + 11) = v32;
    *((_QWORD *)v30 + 12) = v31;
    *((_QWORD *)v30 + 13) = 0;
    v30[112] = 1;
    sub_21D7C4C20();
    v44 = (uint64_t)v48;
    sub_21D7C42D8();
    v45 = &v14[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253F60818) + 48)];
    sub_21CDD337C((uint64_t)v30, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
    *(_QWORD *)v45 = 0;
    *((_QWORD *)v45 + 1) = 0;
    OUTLINED_FUNCTION_116_0();
    OUTLINED_FUNCTION_258();
    OUTLINED_FUNCTION_43_6(v44, (uint64_t)v14, v46, (uint64_t)v23);
    OUTLINED_FUNCTION_204();
    OUTLINED_FUNCTION_69_4(v31, v55);
    OUTLINED_FUNCTION_5_17();
    OUTLINED_FUNCTION_167((uint64_t)&qword_253F60D40);
    v43 = OUTLINED_FUNCTION_13_11();
  }
  OUTLINED_FUNCTION_56_3(v43, (uint64_t (*)(_QWORD))type metadata accessor for FlowActionPageView);
  sub_21CDBDA1C((uint64_t)v23, type metadata accessor for FlowAction);
  OUTLINED_FUNCTION_141_0(v47, (uint64_t (*)(_QWORD))type metadata accessor for ContentDescriptor);
  OUTLINED_FUNCTION_9();
}

uint64_t sub_21CF497B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  char v12;
  char *v15;

  swift_retain();
  v5 = sub_21D41B2F0();
  swift_release();
  if ((~v5 & 0xF000000000000007) == 0)
    goto LABEL_16;
  if (v5 >> 62)
  {
    sub_21CE675C0(v5);
LABEL_16:
    if (a2 != 25965 || a3 != 0xE200000000000000)
      return sub_21D7C5D84();
    goto LABEL_23;
  }
  type metadata accessor for UserSocialProfileCoordinator(0);
  sub_21CE67574(v5);
  type metadata accessor for ObjectGraph();
  sub_21D7C4D64();
  sub_21D503A2C();
  if (!v7)
    goto LABEL_9;
  if (v6 == a2 && v7 == a3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = sub_21D7C5D84();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
    {
LABEL_9:
      v10 = *(_QWORD *)&v15[OBJC_IVAR____TtC7MusicUI28UserSocialProfileCoordinator_publicSocialProfileID + 8];
      if (v10)
      {
        if (*(_QWORD *)&v15[OBJC_IVAR____TtC7MusicUI28UserSocialProfileCoordinator_publicSocialProfileID] == a2
          && v10 == a3)
        {
          v12 = 1;
        }
        else
        {
          v12 = sub_21D7C5D84();
        }
        swift_bridgeObjectRetain_n();
        sub_21D7C4C20();
        sub_21CE675C0(v5);

        sub_21CE675C0(v5);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain_n();
        sub_21CE675C0(v5);

        sub_21CE675C0(v5);
        swift_bridgeObjectRelease_n();
        v12 = 0;
      }
      return v12 & 1;
    }
  }
  sub_21CE675C0(v5);

  sub_21CE675C0(v5);
LABEL_23:
  v12 = 1;
  return v12 & 1;
}

uint64_t sub_21CF49A18()
{
  type metadata accessor for ObjectGraph();
  sub_21CF4E11C();
  swift_retain();
  sub_21D7C21E4();
  return swift_release();
}

uint64_t sub_21CF49AA0()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_253F67E90);
  v0 = OUTLINED_FUNCTION_121_0();
  *(_OWORD *)(v0 + 16) = xmmword_21D7C8560;
  sub_21D7C5A60();
  OUTLINED_FUNCTION_79();
  sub_21D7C51E4();
  sub_21D7C0D5C();
  sub_21D7C5B98();
  *(_QWORD *)(v0 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0xE000000000000000;
  sub_21D7C5E44();
  return OUTLINED_FUNCTION_65_4();
}

uint64_t sub_21CF49B80@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_183();
  v2 = sub_21D41B2F0();
  swift_release();
  if ((~v2 & 0xF000000000000007) == 0)
    goto LABEL_5;
  if (v2 >> 62)
  {
    OUTLINED_FUNCTION_149();
LABEL_5:
    v6 = sub_21D7C44DC();
    v4 = a1;
    v5 = 1;
    return __swift_storeEnumTagSinglePayload(v4, v5, 1, v6);
  }
  v3 = sub_21D7C44DC();
  sub_21CE67574(v2);
  OUTLINED_FUNCTION_146();
  sub_21D7C4D64();
  OUTLINED_FUNCTION_149();
  OUTLINED_FUNCTION_149();
  v4 = a1;
  v5 = 0;
  v6 = v3;
  return __swift_storeEnumTagSinglePayload(v4, v5, 1, v6);
}

uint64_t sub_21CF49C50()
{
  _QWORD *v0;
  uint64_t v1;

  if (!*(_QWORD *)((char *)v0 + *(_QWORD *)(*v0 + 184)))
  {
    type metadata accessor for ObjectGraph();
    sub_21D172908(v0);
  }
  v1 = *(_QWORD *)((char *)v0 + *(_QWORD *)(*v0 + 184));
  swift_retain();
  return v1;
}

uint64_t sub_21CF49CBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;

  v19 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67AD0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5E0E8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5DFF0);
  v18 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 0;
  swift_beginAccess();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5E1F0);
  sub_21D7C0BDC();
  swift_endAccess();
  swift_release();
  sub_21CDBD85C(0, (unint64_t *)&qword_253F67AE0);
  v20 = (id)sub_21D7C5724();
  v12 = sub_21D7C570C();
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 1, 1, v12);
  sub_21CF4E1F4((uint64_t)&qword_253F5E0E0);
  sub_21CF4E170();
  sub_21D7C0C60();
  sub_21CDBDA44((uint64_t)v3, &qword_253F67AD0);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v13 = swift_allocObject();
  v14 = v19;
  *(_QWORD *)(v13 + 16) = v11;
  *(_QWORD *)(v13 + 24) = v14;
  sub_21CF4E1F4((uint64_t)&unk_253F5DFE8);
  swift_retain();
  v15 = sub_21D7C0C84();
  swift_release();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v8);
  swift_beginAccess();
  *(_QWORD *)(v11 + 16) = v15;
  swift_release();
  return swift_release();
}

unint64_t *sub_21CF49F90(unint64_t *result, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  _QWORD *v5;
  void *v6;
  id v7;
  id v8;
  _QWORD *v9;

  v3 = *result;
  if ((~*result & 0xF000000000000007) != 0)
  {
    v5 = (_QWORD *)(a2 + 16);
    if (v3 >> 62)
    {
      if (v3 >> 62 == 1)
      {
        v6 = (void *)(v3 & 0x3FFFFFFFFFFFFFFFLL);
        swift_beginAccess();
        if (*v5)
        {
          v7 = v6;
          swift_retain();
          sub_21D7C0B70();
          swift_release();
        }
        else
        {
          v8 = v6;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_253F67E98);
        swift_allocError();
        *v9 = v6;
        return (unint64_t *)swift_continuation_throwingResumeWithError();
      }
    }
    else
    {
      swift_beginAccess();
      if (*v5)
      {
        sub_21CF4E1E0(v3);
        swift_retain();
        sub_21D7C0B70();
        swift_release();
      }
      else
      {
        sub_21CE67574(v3);
      }
      **(_QWORD **)(*(_QWORD *)(a3 + 64) + 40) = v3;
      return (unint64_t *)swift_continuation_throwingResume();
    }
  }
  return result;
}

uint64_t sub_21CF4A0D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v7 + 96) = a5;
  *(_QWORD *)(v7 + 104) = a7;
  *(_BYTE *)(v7 + 380) = a6;
  *(_QWORD *)(v7 + 88) = a4;
  v8 = *a4;
  *(_QWORD *)(v7 + 112) = *a4;
  sub_21D7C3FC0();
  *(_QWORD *)(v7 + 120) = swift_task_alloc();
  v9 = sub_21D7C4EFC();
  *(_QWORD *)(v7 + 128) = v9;
  *(_QWORD *)(v7 + 136) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v7 + 144) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F679A0);
  *(_QWORD *)(v7 + 152) = swift_task_alloc();
  *(_QWORD *)(v7 + 160) = type metadata accessor for MusicAppDestinationContext(0);
  *(_QWORD *)(v7 + 168) = swift_task_alloc();
  v10 = *(_QWORD *)(v8 + 88);
  *(_QWORD *)(v7 + 176) = v10;
  v11 = *(_QWORD *)(v8 + 104);
  *(_QWORD *)(v7 + 184) = v11;
  v13 = type metadata accessor for PresentationItem.Destination(0, v10, v11, v12);
  *(_QWORD *)(v7 + 192) = v13;
  *(_QWORD *)(v7 + 200) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v7 + 208) = swift_task_alloc();
  v14 = sub_21D7C0AC8();
  *(_QWORD *)(v7 + 216) = v14;
  *(_QWORD *)(v7 + 224) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v7 + 232) = swift_task_alloc();
  *(_QWORD *)(v7 + 240) = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5F388);
  *(_QWORD *)(v7 + 248) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(qword_253F5F300);
  *(_QWORD *)(v7 + 256) = swift_task_alloc();
  *(_QWORD *)(v7 + 264) = swift_task_alloc();
  *(_QWORD *)(v7 + 272) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21CF4A274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  OUTLINED_FUNCTION_217();
  if (qword_253F4F288 != -1)
    swift_once();
  *(_QWORD *)(v0 + 280) = __swift_project_value_buffer(*(_QWORD *)(v0 + 128), (uint64_t)qword_253F65580);
  *(_QWORD *)(v0 + 288) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F67DC0);
  v1 = *(_QWORD *)(OUTLINED_FUNCTION_27_1() - 8);
  *(_QWORD *)(v0 + 296) = *(_QWORD *)(v1 + 72);
  *(_DWORD *)(v0 + 376) = *(_DWORD *)(v1 + 80);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_21D7C8560;
  OUTLINED_FUNCTION_164();
  sub_21D7C4D28();
  swift_bridgeObjectRelease();
  if (qword_253F5DF50 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 232);
  v5 = *(_QWORD *)(v0 + 88);
  v6 = __swift_project_value_buffer(*(_QWORD *)(v0 + 240), (uint64_t)qword_253F81C90);
  *(_QWORD *)(v0 + 304) = v6;
  sub_21CDC314C(v6, v2, &qword_253F5F388);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 312) = v7;
  OUTLINED_FUNCTION_44_2(v4, v2, v7);
  sub_21D54AC00();
  sub_21CDBDA44(v2, &qword_253F5F388);
  *(_QWORD *)(v0 + 320) = *(_QWORD *)(v5 + 16);
  if ((sub_21D22D550() & 1) != 0)
  {
    v9 = *(_QWORD *)(v0 + 160);
    v8 = *(_QWORD *)(v0 + 168);
    v10 = *(_QWORD *)(v0 + 88);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_21D7C8560;
    OUTLINED_FUNCTION_137_0();
    sub_21D7C4D28();
    OUTLINED_FUNCTION_28();
    *(_QWORD *)(v0 + 328) = *(_QWORD *)(v10 + 24);
    swift_storeEnumTagMultiPayload();
    *(_QWORD *)(v8 + 32) = 0;
    *(_OWORD *)v8 = 0u;
    *(_OWORD *)(v8 + 16) = 0u;
    v11 = v8 + *(int *)(v9 + 20);
    v12 = OUTLINED_FUNCTION_0_7();
    OUTLINED_FUNCTION_58_2(v11, v13, v14, v12);
    OUTLINED_FUNCTION_56();
    *(_QWORD *)(v0 + 336) = OUTLINED_FUNCTION_43();
    OUTLINED_FUNCTION_48();
    OUTLINED_FUNCTION_136_0();
    return swift_task_switch();
  }
  else
  {
    v16 = OUTLINED_FUNCTION_188();
    OUTLINED_FUNCTION_74_4(v16, v5);
    OUTLINED_FUNCTION_246();
    OUTLINED_FUNCTION_187();
    OUTLINED_FUNCTION_36_8(v5);
    v17 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 344) = v17;
    OUTLINED_FUNCTION_155(v17, (uint64_t)sub_21CF4A65C);
    OUTLINED_FUNCTION_136_0();
    return sub_21CF4AF88(v18, v19, v20, v21);
  }
}

uint64_t sub_21CF4A568()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[25];
  v1 = v0[26];
  v3 = v0[21];
  swift_release();
  OUTLINED_FUNCTION_305();
  sub_21CDBDA1C(v3, type metadata accessor for MusicAppDestinationContext);
  OUTLINED_FUNCTION_37_4(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_23_5();
  return OUTLINED_FUNCTION_34_6();
}

uint64_t sub_21CF4A5D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = OUTLINED_FUNCTION_188();
  OUTLINED_FUNCTION_74_4(v2, v0);
  OUTLINED_FUNCTION_246();
  OUTLINED_FUNCTION_187();
  OUTLINED_FUNCTION_36_8(v0);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 344) = v3;
  OUTLINED_FUNCTION_155(v3, (uint64_t)sub_21CF4A65C);
  OUTLINED_FUNCTION_238();
  return sub_21CF4AF88(v4, v5, v6, v7);
}

uint64_t sub_21CF4A65C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 352) = a1;
  *(_QWORD *)(v3 + 360) = v1;
  OUTLINED_FUNCTION_307();
  OUTLINED_FUNCTION_23_5();
  return OUTLINED_FUNCTION_6_8();
}

uint64_t sub_21CF4A6B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_80_4();
  swift_retain();
  sub_21D520758();
  OUTLINED_FUNCTION_103(v2, qword_253F5F300);
  if (qword_253F659C0 != -1)
    swift_once();
  if (byte_253F81F58 != 1)
    goto LABEL_8;
  if (qword_253F659E0 != -1)
    swift_once();
  if (byte_25538E4A1 == 1)
  {
    v1 = OUTLINED_FUNCTION_185();
    *(_OWORD *)(v1 + 16) = xmmword_21D7C8560;
    OUTLINED_FUNCTION_137_0();
    OUTLINED_FUNCTION_210();
    OUTLINED_FUNCTION_90_0();
    sub_21D22D59C();
  }
  else
  {
LABEL_8:
    if ((sub_21D22D4E0() & 1) != 0)
    {
      v3 = *(_QWORD *)(v0 + 304);
      v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 312);
      v4 = *(_QWORD *)(v0 + 248);
      v5 = *(_QWORD *)(v0 + 232);
      v6 = *(_QWORD *)(v0 + 216);
      *(_OWORD *)(OUTLINED_FUNCTION_185() + 16) = xmmword_21D7C8560;
      OUTLINED_FUNCTION_137_0();
      sub_21D7C4D28();
      swift_bridgeObjectRelease();
      sub_21CDC314C(v3, v4, &qword_253F5F388);
      v17(v5, v4, v6);
      sub_21D54AC00();
      v7 = OUTLINED_FUNCTION_326();
      sub_21CDBDA44(v7, v8);
      v9 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 368) = v9;
      *v9 = v0;
      v9[1] = sub_21CF4AA6C;
      OUTLINED_FUNCTION_87_3();
      return sub_21D22D620();
    }
  }
  OUTLINED_FUNCTION_269();
  OUTLINED_FUNCTION_289();
  OUTLINED_FUNCTION_146();
  OUTLINED_FUNCTION_163();
  sub_21CFC9F7C();
  if (qword_253F659B0 != -1)
    swift_once();
  if (byte_25538E4A3 == 1)
  {
    v1 = OUTLINED_FUNCTION_99_3();
    *(_OWORD *)(v1 + 16) = xmmword_21D7C8560;
    OUTLINED_FUNCTION_184();
    OUTLINED_FUNCTION_210();
    OUTLINED_FUNCTION_90_0();
  }
  OUTLINED_FUNCTION_268();
  v16 = v11;
  OUTLINED_FUNCTION_97_3();
  OUTLINED_FUNCTION_158();
  *(_OWORD *)(OUTLINED_FUNCTION_225() + 16) = xmmword_21D7C8560;
  OUTLINED_FUNCTION_164();
  OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_65_4();
  sub_21D520758();
  v12 = sub_21D7C5490();
  OUTLINED_FUNCTION_58_2(v1, v13, v14, v12);
  v15 = OUTLINED_FUNCTION_121_0();
  *(_QWORD *)(v15 + 16) = 0;
  *(_QWORD *)(v15 + 24) = 0;
  sub_21D21ECE8();
  OUTLINED_FUNCTION_158();
  OUTLINED_FUNCTION_104();
  swift_release();
  sub_21CDBDA44(v1, &qword_253F679A0);
  sub_21CDBDA44(v16, qword_253F5F300);
  OUTLINED_FUNCTION_46_6();
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_22_1();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_21_1();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_15_1();
  return OUTLINED_FUNCTION_88_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_21CF4AA6C()
{
  swift_task_dealloc();
  OUTLINED_FUNCTION_23_5();
  return OUTLINED_FUNCTION_6_8();
}

uint64_t sub_21CF4AAB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;

  OUTLINED_FUNCTION_217();
  v17 = v16[32];
  v18 = v16[16];
  *(_OWORD *)(OUTLINED_FUNCTION_185() + 16) = xmmword_21D7C8560;
  OUTLINED_FUNCTION_137_0();
  OUTLINED_FUNCTION_254();
  sub_21D7C4D28();
  swift_bridgeObjectRelease();
  sub_21D520758();
  sub_21CDBDA44(v17, qword_253F5F300);
  OUTLINED_FUNCTION_269();
  OUTLINED_FUNCTION_289();
  OUTLINED_FUNCTION_146();
  OUTLINED_FUNCTION_163();
  v34 = v16[10];
  sub_21CFC9F7C();
  if (qword_253F659B0 != -1)
    swift_once();
  if (byte_25538E4A3 == 1)
  {
    v18 = OUTLINED_FUNCTION_99_3();
    *(_OWORD *)(v18 + 16) = xmmword_21D7C8560;
    OUTLINED_FUNCTION_184();
    OUTLINED_FUNCTION_210();
    OUTLINED_FUNCTION_90_0();
  }
  OUTLINED_FUNCTION_268();
  v33 = v19;
  OUTLINED_FUNCTION_97_3();
  OUTLINED_FUNCTION_158();
  *(_OWORD *)(OUTLINED_FUNCTION_225() + 16) = xmmword_21D7C8560;
  OUTLINED_FUNCTION_164();
  OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_65_4();
  sub_21D520758();
  v20 = sub_21D7C5490();
  OUTLINED_FUNCTION_58_2(v18, v21, v22, v20);
  v23 = OUTLINED_FUNCTION_121_0();
  *(_QWORD *)(v23 + 16) = 0;
  *(_QWORD *)(v23 + 24) = 0;
  sub_21D21ECE8();
  OUTLINED_FUNCTION_158();
  OUTLINED_FUNCTION_104();
  swift_release();
  sub_21CDBDA44(v18, &qword_253F679A0);
  sub_21CDBDA44(v33, qword_253F5F300);
  OUTLINED_FUNCTION_46_6();
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_22_1();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_21_1();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_136_0();
  return v24(v24, v25, v26, v27, v28, v29, v30, v31, v33, v34, 1, 2, a13, a14, a15, a16);
}

uint64_t sub_21CF4ACE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v10 = *(void **)(v0 + 360);
  v1 = *(_QWORD *)(v0 + 280);
  v17 = *(_QWORD *)(v0 + 272);
  v15 = *(_QWORD *)(v0 + 176);
  v16 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 128);
  v12 = *(_QWORD *)(v0 + 112);
  v13 = *(_QWORD *)(v0 + 104);
  v14 = *(_BYTE *)(v0 + 380);
  v11 = *(_QWORD *)(v0 + 96);
  sub_21CDBDA44(*(_QWORD *)(v0 + 264), qword_253F5F300);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v3, v1, v4);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_21D7C8560;
  sub_21D7C3FB4();
  OUTLINED_FUNCTION_79();
  sub_21D7C3FA8();
  swift_getErrorValue();
  v5 = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 40) = v5;
  __swift_allocate_boxed_opaque_existential_0Tm((uint64_t *)(v0 + 16));
  (*(void (**)(void))(*(_QWORD *)(v5 - 8) + 16))();
  sub_21D7C3F90();
  sub_21CDBDA44(v0 + 16, &qword_253F67EB0);
  sub_21D7C3FA8();
  sub_21D7C3FCC();
  sub_21D7C4D40();
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_84_2(v2);
  v6 = OUTLINED_FUNCTION_121_0();
  swift_weakInit();
  v7 = OUTLINED_FUNCTION_121_0();
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v12 + 80);
  *(_QWORD *)(v7 + 24) = v15;
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v12 + 96);
  *(_QWORD *)(v7 + 40) = v16;
  *(_QWORD *)(v7 + 48) = v6;
  *(_QWORD *)(v7 + 56) = v11;
  *(_QWORD *)(v7 + 64) = v13;
  *(_BYTE *)(v7 + 72) = v14;
  v8 = v10;
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  sub_21D41B270();

  sub_21CDBDA44(v17, qword_253F5F300);
  OUTLINED_FUNCTION_86_2();
  OUTLINED_FUNCTION_46_6();
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_22_1();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_21_1();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_15_1();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21CF4AF88(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v5 + 2344) = v4;
  *(_BYTE *)(v5 + 2528) = a4;
  *(_QWORD *)(v5 + 2336) = a3;
  *(_QWORD *)(v5 + 2328) = a2;
  *(_QWORD *)(v5 + 2320) = a1;
  *(_QWORD *)(v5 + 2352) = *v4;
  v6 = sub_21D7C489C();
  *(_QWORD *)(v5 + 2360) = v6;
  *(_QWORD *)(v5 + 2368) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 2376) = swift_task_alloc();
  v7 = sub_21D7C3DEC();
  *(_QWORD *)(v5 + 2384) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 2392) = v8;
  *(_QWORD *)(v5 + 2400) = *(_QWORD *)(v8 + 64);
  *(_QWORD *)(v5 + 2408) = swift_task_alloc();
  *(_QWORD *)(v5 + 2416) = swift_task_alloc();
  v9 = sub_21D7C4CE0();
  *(_QWORD *)(v5 + 2424) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v5 + 2432) = v10;
  *(_QWORD *)(v5 + 2440) = *(_QWORD *)(v10 + 64);
  *(_QWORD *)(v5 + 2448) = swift_task_alloc();
  *(_QWORD *)(v5 + 2456) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21CF4B078()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 *v13;
  uint64_t *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  unint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(void);
  __int128 v69;

  v59 = *(_QWORD *)(v0 + 2456);
  v62 = *(_QWORD *)(v0 + 2432);
  v64 = *(_QWORD *)(v0 + 2448);
  v66 = *(_QWORD *)(v0 + 2440);
  v1 = *(_QWORD *)(v0 + 2344);
  v58 = *(_BYTE *)(v0 + 2528);
  v67 = *(_QWORD *)(v0 + 2336);
  v2 = *(void **)(v0 + 2328);
  sub_21D7C4F38();
  v53 = sub_21D7C4F2C();
  *(_QWORD *)(v0 + 2464) = v53;
  v65 = (void *)sub_21D7C3E04();
  *(_QWORD *)(v0 + 2472) = v65;
  sub_21D7C3DD4();
  v3 = sub_21D7C3DF8();
  v60 = v4;
  v61 = v3;
  *(_QWORD *)(v0 + 2480) = v3;
  *(_QWORD *)(v0 + 2488) = v4;
  sub_21D7C3DE0();
  sub_21D7C4494();
  OUTLINED_FUNCTION_79();
  sub_21D7C4470();
  v5 = (_QWORD *)OUTLINED_FUNCTION_326();
  v7 = __swift_project_boxed_opaque_existential_1(v5, v6);
  OUTLINED_FUNCTION_89((uint64_t)v7, &qword_253F67AA0);
  *(_QWORD *)(v0 + 2312) = v2;
  sub_21D7C49BC();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 80));
  type metadata accessor for PrivacyDisclaimerAcknowledgement();
  *(_QWORD *)(v0 + 2304) = v67;
  sub_21D7C49BC();
  OUTLINED_FUNCTION_123_1((_QWORD *)(v0 + 136));
  sub_21D7C49C8();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 240));
  type metadata accessor for SourceBundle();
  v8 = OUTLINED_FUNCTION_121_0();
  *(_QWORD *)(v8 + 16) = v1;
  *(_BYTE *)(v8 + 24) = v58;
  swift_retain();
  sub_21D7C49A4();
  OUTLINED_FUNCTION_150();
  OUTLINED_FUNCTION_325();
  sub_21D7C4CEC();
  OUTLINED_FUNCTION_43_2(v64, v59, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v62 + 16));
  v9 = (*(unsigned __int8 *)(v62 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
  v10 = (v66 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = swift_allocObject();
  v12 = v11 + v9;
  v13 = (__int128 *)(v0 + 536);
  OUTLINED_FUNCTION_43_2(v12, v64, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v62 + 32));
  *(_QWORD *)(v11 + v10) = v65;
  v14 = (uint64_t *)(v11 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8));
  *v14 = v61;
  v14[1] = v60;
  v63 = v65;
  sub_21CF3C2BC(v61);
  sub_21D7C4998();
  OUTLINED_FUNCTION_150();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 320));
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5F240);
  *(_QWORD *)(OUTLINED_FUNCTION_121_0() + 16) = v2;
  v15 = v2;
  sub_21D7C49B0();
  OUTLINED_FUNCTION_165();
  OUTLINED_FUNCTION_90_3((_QWORD *)(v0 + 336));
  type metadata accessor for SubscriptionStatusCoordinator();
  OUTLINED_FUNCTION_121_0();
  v16 = swift_retain();
  *(_QWORD *)(v0 + 2296) = sub_21D5A5E08(v16);
  sub_21D7C49BC();
  OUTLINED_FUNCTION_150();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 400));
  sub_21CDC314C(v1 + 88, v0 + 536, (uint64_t *)&unk_253F5F048);
  if (*(_QWORD *)(v0 + 560))
  {
    sub_21CDD3670(v13, v0 + 496);
  }
  else
  {
    v17 = type metadata accessor for MusicKitPlayer();
    OUTLINED_FUNCTION_121_0();
    v18 = sub_21D201540();
    *(_QWORD *)(v0 + 520) = v17;
    *(_QWORD *)(v0 + 528) = &off_24E0FF2D8;
    *(_QWORD *)(v0 + 496) = v18;
    sub_21CDBDA44((uint64_t)v13, (uint64_t *)&unk_253F5F048);
  }
  v56 = *(_QWORD *)(v0 + 2416);
  v55 = *(_QWORD *)(v0 + 2408);
  v54 = *(_QWORD *)(v0 + 2392);
  v52 = *(_QWORD *)(v0 + 2352);
  v57 = *(_QWORD *)(v0 + 2344);
  v51 = *(_QWORD *)(v0 + 2320);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5F040);
  sub_21D7C49BC();
  OUTLINED_FUNCTION_296();
  OUTLINED_FUNCTION_325();
  v19 = OUTLINED_FUNCTION_289();
  v20 = OUTLINED_FUNCTION_121_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F67720);
  *(_QWORD *)(v20 + 16) = sub_21D7C4EB4();
  *(_QWORD *)(v0 + 2288) = v20;
  sub_21D7C49BC();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_90_3((_QWORD *)(v0 + 576));
  type metadata accessor for IntentNetworkResponseReceiver();
  v21 = OUTLINED_FUNCTION_121_0();
  type metadata accessor for IntentNetworkResponseReceiver.ObserverManager();
  OUTLINED_FUNCTION_121_0();
  *(_QWORD *)(v21 + 16) = sub_21D6190E4();
  *(_QWORD *)(v0 + 2280) = v21;
  OUTLINED_FUNCTION_243();
  OUTLINED_FUNCTION_55_5();
  OUTLINED_FUNCTION_150();
  v22 = OUTLINED_FUNCTION_86_3((_QWORD *)(v0 + 656));
  OUTLINED_FUNCTION_89((uint64_t)v22, (unint64_t *)&qword_253F67A98);
  *(_QWORD *)(v0 + 2272) = v63;
  OUTLINED_FUNCTION_47_7();
  OUTLINED_FUNCTION_86_3((_QWORD *)(v0 + 736));
  sub_21CDBD85C(0, &qword_253F67A90);
  v23 = objc_msgSend((id)objc_opt_self(), sel_ams_sharedAccountStore);
  *(_QWORD *)(v0 + 2264) = v23;
  OUTLINED_FUNCTION_243();
  OUTLINED_FUNCTION_47_7();

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 816), *(_QWORD *)(v0 + 840));
  *(_QWORD *)(v0 + 2256) = v53;
  sub_21D7C49BC();
  OUTLINED_FUNCTION_90_3((_QWORD *)(v0 + 896));
  type metadata accessor for Persistence();
  OUTLINED_FUNCTION_121_0();
  *(_QWORD *)(v0 + 2248) = sub_21D2BDE20();
  OUTLINED_FUNCTION_243();
  OUTLINED_FUNCTION_55_5();
  OUTLINED_FUNCTION_150();
  OUTLINED_FUNCTION_5_27((_QWORD *)(v0 + 976));
  v24 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for RestrictionsController()), sel_init);
  *(_QWORD *)(v0 + 2240) = v24;
  OUTLINED_FUNCTION_313();
  OUTLINED_FUNCTION_47_7();

  OUTLINED_FUNCTION_90_3((_QWORD *)(v0 + 1056));
  type metadata accessor for SubscriptionContentRestrictionController();
  OUTLINED_FUNCTION_121_0();
  *(_QWORD *)(v0 + 2232) = sub_21D57CAE8();
  OUTLINED_FUNCTION_243();
  OUTLINED_FUNCTION_55_5();
  OUTLINED_FUNCTION_150();
  OUTLINED_FUNCTION_90_3((_QWORD *)(v0 + 1136));
  type metadata accessor for CatalogSearchResultsPageManager();
  OUTLINED_FUNCTION_121_0();
  *(_QWORD *)(v0 + 2224) = sub_21D029C84();
  OUTLINED_FUNCTION_243();
  OUTLINED_FUNCTION_55_5();
  OUTLINED_FUNCTION_150();
  OUTLINED_FUNCTION_5_27((_QWORD *)(v0 + 1216));
  type metadata accessor for NoticeManager();
  v25 = OUTLINED_FUNCTION_121_0();
  *(_QWORD *)(v25 + 16) = 0;
  *(_QWORD *)(v0 + 2216) = v25;
  OUTLINED_FUNCTION_313();
  OUTLINED_FUNCTION_47_7();
  OUTLINED_FUNCTION_165();
  OUTLINED_FUNCTION_5_27((_QWORD *)(v0 + 1296));
  type metadata accessor for LibraryImportStatusProvider();
  v26 = OUTLINED_FUNCTION_121_0();
  *(_QWORD *)(v26 + 16) = 0;
  *(_QWORD *)(v0 + 2208) = v26;
  OUTLINED_FUNCTION_313();
  OUTLINED_FUNCTION_47_7();
  OUTLINED_FUNCTION_165();
  OUTLINED_FUNCTION_5_27((_QWORD *)(v0 + 1376));
  type metadata accessor for AppDestinationPageProviderBox();
  *(_QWORD *)(v0 + 2200) = *(_QWORD *)(v57 + 32);
  OUTLINED_FUNCTION_47_7();
  OUTLINED_FUNCTION_86_3((_QWORD *)(v0 + 1456));
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F67510);
  v27 = OUTLINED_FUNCTION_121_0();
  *(_QWORD *)(v27 + 16) = v57;
  *(_QWORD *)(v27 + 24) = v51;
  swift_retain();
  OUTLINED_FUNCTION_286();
  OUTLINED_FUNCTION_313();
  OUTLINED_FUNCTION_14_13();
  OUTLINED_FUNCTION_165();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 1536), *(_QWORD *)(v0 + 1560));
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F61FD8);
  v28 = *(_QWORD *)(v52 + 80);
  v29 = *(_QWORD *)(v52 + 96);
  nullsub_1(v51, v28, v29);
  v30 = OUTLINED_FUNCTION_271();
  *(_QWORD *)(v0 + 1640) = _s19PlayActivityContextVMa(v30, v31, v32, v33);
  *(_QWORD *)(v0 + 1648) = &off_24E119B98;
  *(_QWORD *)(v0 + 1616) = v19;
  OUTLINED_FUNCTION_286();
  OUTLINED_FUNCTION_181();
  OUTLINED_FUNCTION_296();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 1576), *(_QWORD *)(v0 + 1600));
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F61210);
  nullsub_1(v51, v28, v29);
  v34 = OUTLINED_FUNCTION_271();
  *(_QWORD *)(v0 + 1720) = _s11PageContextVMa(v34, v35, v36, v37);
  *(_QWORD *)(v0 + 1728) = &off_24E105AA0;
  *(_QWORD *)(v0 + 1696) = v0 + 1616;
  OUTLINED_FUNCTION_286();
  OUTLINED_FUNCTION_181();
  __swift_destroy_boxed_opaque_existential_1(v0 + 1696);
  OUTLINED_FUNCTION_86_3((_QWORD *)(v0 + 1656));
  sub_21D7C4890();
  OUTLINED_FUNCTION_208();
  OUTLINED_FUNCTION_47_7();
  v38 = OUTLINED_FUNCTION_301();
  OUTLINED_FUNCTION_12_11(v38, v39);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 1736), *(_QWORD *)(v0 + 1760));
  type metadata accessor for AgeVerificationManager();
  OUTLINED_FUNCTION_121_0();
  *(_QWORD *)(v0 + 2192) = sub_21D001354();
  OUTLINED_FUNCTION_193();
  OUTLINED_FUNCTION_165();
  OUTLINED_FUNCTION_5_27((_QWORD *)(v0 + 1776));
  type metadata accessor for DeepLinkInfoProvider();
  v40 = OUTLINED_FUNCTION_121_0();
  *(_OWORD *)(v40 + 16) = xmmword_21D7CB0A0;
  *(_WORD *)(v40 + 32) = 0;
  *(_QWORD *)(v0 + 2184) = v40;
  OUTLINED_FUNCTION_47_7();
  OUTLINED_FUNCTION_158();
  OUTLINED_FUNCTION_275();
  type metadata accessor for MusicTabChangePublisher();
  v69 = xmmword_21D7D1760;
  OUTLINED_FUNCTION_42();
  *(_QWORD *)(v0 + 2176) = sub_21D4A34A8((uint64_t *)&v69);
  OUTLINED_FUNCTION_193();
  OUTLINED_FUNCTION_165();
  OUTLINED_FUNCTION_123_1((_QWORD *)(v0 + 1936));
  OUTLINED_FUNCTION_67_4();
  v41 = OUTLINED_FUNCTION_5_27((_QWORD *)(v0 + 2016));
  type metadata accessor for PushNotifications(v41);
  OUTLINED_FUNCTION_3_28();
  v42 = OUTLINED_FUNCTION_86_3((_QWORD *)(v0 + 2056));
  OUTLINED_FUNCTION_89((uint64_t)v42, &qword_253F67A80);
  OUTLINED_FUNCTION_44_2(v55, v56, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 16));
  v43 = (*(unsigned __int8 *)(v54 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  v44 = swift_allocObject();
  *(_QWORD *)(v44 + 16) = v63;
  OUTLINED_FUNCTION_44_2(v44 + v43, v55, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 32));
  v45 = v63;
  sub_21D7C49A4();
  OUTLINED_FUNCTION_158();
  OUTLINED_FUNCTION_86_3((_QWORD *)(v0 + 2096));
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F67620);
  OUTLINED_FUNCTION_3_28();
  OUTLINED_FUNCTION_5_27((_QWORD *)(v0 + 2136));
  _s14descr24E10F689V18HighlightsProviderCMa();
  OUTLINED_FUNCTION_3_28();
  OUTLINED_FUNCTION_5_27((_QWORD *)(v0 + 1976));
  type metadata accessor for PlaybackPresenter();
  OUTLINED_FUNCTION_3_28();
  OUTLINED_FUNCTION_86_3((_QWORD *)(v0 + 1896));
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F67530);
  OUTLINED_FUNCTION_3_28();
  OUTLINED_FUNCTION_5_27((_QWORD *)(v0 + 1816));
  type metadata accessor for AppLifeCycleCoordinator();
  OUTLINED_FUNCTION_3_28();
  OUTLINED_FUNCTION_5_27((_QWORD *)(v0 + 1496));
  type metadata accessor for ExplicitBadgingPresenter();
  OUTLINED_FUNCTION_3_28();
  OUTLINED_FUNCTION_123_1((_QWORD *)(v0 + 1416));
  OUTLINED_FUNCTION_67_4();
  v46 = OUTLINED_FUNCTION_5_27((_QWORD *)(v0 + 1336));
  type metadata accessor for UserSocialProfileCoordinator(v46);
  OUTLINED_FUNCTION_3_28();
  OUTLINED_FUNCTION_5_27((_QWORD *)(v0 + 1256));
  sub_21D7C44DC();
  swift_retain();
  OUTLINED_FUNCTION_14_13();
  OUTLINED_FUNCTION_158();
  OUTLINED_FUNCTION_5_27((_QWORD *)(v0 + 1176));
  type metadata accessor for CloudLibraryStatusController();
  OUTLINED_FUNCTION_3_28();
  OUTLINED_FUNCTION_123_1((_QWORD *)(v0 + 1096));
  OUTLINED_FUNCTION_67_4();
  OUTLINED_FUNCTION_5_27((_QWORD *)(v0 + 1016));
  type metadata accessor for JSStackManager();
  OUTLINED_FUNCTION_3_28();
  OUTLINED_FUNCTION_5_27((_QWORD *)(v0 + 936));
  type metadata accessor for SocialBadgingMapRequestCoordinator();
  OUTLINED_FUNCTION_3_28();
  OUTLINED_FUNCTION_5_27((_QWORD *)(v0 + 856));
  sub_21D7C46E0();
  OUTLINED_FUNCTION_3_28();
  OUTLINED_FUNCTION_123_1((_QWORD *)(v0 + 776));
  OUTLINED_FUNCTION_67_4();
  OUTLINED_FUNCTION_5_27((_QWORD *)(v0 + 696));
  type metadata accessor for SocialBadgingRequestCoordinator();
  OUTLINED_FUNCTION_3_28();
  OUTLINED_FUNCTION_5_27((_QWORD *)(v0 + 616));
  type metadata accessor for UnifiedMessages.Coordinator();
  OUTLINED_FUNCTION_3_28();
  OUTLINED_FUNCTION_123_1((_QWORD *)(v0 + 416));
  OUTLINED_FUNCTION_67_4();
  OUTLINED_FUNCTION_275();
  OUTLINED_FUNCTION_327();
  sub_21D7C498C();
  v47 = sub_21D7C4680();
  v48 = MEMORY[0x24BE5D370];
  *(_QWORD *)(v0 + 120) = v47;
  *(_QWORD *)(v0 + 128) = v48;
  __swift_allocate_boxed_opaque_existential_0Tm((uint64_t *)(v0 + 96));
  sub_21D7C4674();
  OUTLINED_FUNCTION_146();
  *(_QWORD *)(v0 + 2496) = sub_21D7C4E30();
  OUTLINED_FUNCTION_37();
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 176);
  __swift_destroy_boxed_opaque_existential_1(v0 + 416);
  __swift_destroy_boxed_opaque_existential_1(v0 + 616);
  __swift_destroy_boxed_opaque_existential_1(v0 + 696);
  __swift_destroy_boxed_opaque_existential_1(v0 + 776);
  OUTLINED_FUNCTION_296();
  __swift_destroy_boxed_opaque_existential_1(v0 + 936);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1016);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1096);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1176);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1256);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1336);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1416);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1496);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1816);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1896);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1976);
  __swift_destroy_boxed_opaque_existential_1(v0 + 2136);
  __swift_destroy_boxed_opaque_existential_1(v0 + 2096);
  __swift_destroy_boxed_opaque_existential_1(v0 + 2056);
  __swift_destroy_boxed_opaque_existential_1(v0 + 2016);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1936);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1856);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1776);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1736);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1656);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1576);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1536);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1456);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1376);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1296);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1216);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1136);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1056);
  __swift_destroy_boxed_opaque_existential_1(v0 + 976);
  __swift_destroy_boxed_opaque_existential_1(v0 + 896);
  __swift_destroy_boxed_opaque_existential_1(v0 + 816);
  __swift_destroy_boxed_opaque_existential_1(v0 + 736);
  __swift_destroy_boxed_opaque_existential_1(v0 + 656);
  __swift_destroy_boxed_opaque_existential_1(v0 + 576);
  __swift_destroy_boxed_opaque_existential_1(v0 + 456);
  __swift_destroy_boxed_opaque_existential_1(v0 + 376);
  __swift_destroy_boxed_opaque_existential_1(v0 + 336);
  __swift_destroy_boxed_opaque_existential_1(v0 + 296);
  __swift_destroy_boxed_opaque_existential_1(v0 + 256);
  __swift_destroy_boxed_opaque_existential_1(v0 + 216);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  v68 = (uint64_t (*)(void))((char *)&dword_255346918 + dword_255346918);
  v49 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 2504) = v49;
  *v49 = v0;
  v49[1] = sub_21CF4C384;
  return v68();
}

uint64_t sub_21CF4C384(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 2512) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_86_2();
  if (!v1)
    *(_QWORD *)(v4 + 2520) = a1;
  OUTLINED_FUNCTION_23_5();
  return OUTLINED_FUNCTION_4_7();
}

uint64_t sub_21CF4C3F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_80_4();
  OUTLINED_FUNCTION_44_8();
  sub_21CDBD660(v14);

  OUTLINED_FUNCTION_214(v17, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
  OUTLINED_FUNCTION_25_5(v15, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
  OUTLINED_FUNCTION_28_0();
  swift_task_dealloc();
  OUTLINED_FUNCTION_21_1();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_87_3();
  return v21(v20, v21, v22, v23, v24, v25, v26, v27, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_21CF4C47C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t (*v20)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_80_4();
  OUTLINED_FUNCTION_44_8();
  sub_21CDBD660(v14);

  OUTLINED_FUNCTION_214(v17, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
  OUTLINED_FUNCTION_25_5(v15, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
  OUTLINED_FUNCTION_28_0();
  swift_task_dealloc();
  OUTLINED_FUNCTION_21_1();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_87_3();
  return v20(v20, v21, v22, v23, v24, v25, v26, v27, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_21CF4C4FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_21CF477F0(a2, a3, a4 & 1);
    return swift_release();
  }
  return result;
}

uint64_t sub_21CF4C574()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F679A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_21D7C5490();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v5);
  sub_21D7C546C();
  swift_retain();
  v6 = sub_21D7C5460();
  v7 = (_QWORD *)swift_allocObject();
  v8 = MEMORY[0x24BEE6930];
  v7[2] = v6;
  v7[3] = v8;
  v7[4] = v1;
  sub_21D51E200();
  return swift_release();
}

void sub_21CF4C648(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F679A0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_21D7C5490();
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v7);
  sub_21D7C546C();
  swift_retain();
  swift_retain();
  v8 = sub_21D7C5460();
  v9 = (_QWORD *)swift_allocObject();
  v10 = MEMORY[0x24BEE6930];
  v9[2] = v8;
  v9[3] = v10;
  v9[4] = v2;
  v9[5] = a1;
  sub_21D21ECE8();
  swift_release();
  sub_21CDBDA44((uint64_t)v6, &qword_253F679A0);
}

uint64_t sub_21CF4C740()
{
  return swift_task_switch();
}

uint64_t sub_21CF4C754()
{
  uint64_t v0;

  if (qword_253F659C0 != -1)
    swift_once();
  if (byte_253F81F58 != 1)
    return OUTLINED_FUNCTION_40_5(*(uint64_t (**)(void))(v0 + 8));
  OUTLINED_FUNCTION_56();
  *(_QWORD *)(v0 + 16) = OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_48();
  return OUTLINED_FUNCTION_4_7();
}

uint64_t sub_21CF4C7E8()
{
  uint64_t v0;

  swift_release();
  sub_21D7C0B10();
  return OUTLINED_FUNCTION_6_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_21CF4C814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[2] = a4;
  v5[3] = a5;
  sub_21D7C546C();
  v5[4] = sub_21D7C5460();
  sub_21D7C5424();
  return swift_task_switch();
}

uint64_t sub_21CF4C880()
{
  uint64_t v0;

  swift_release();
  swift_retain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_23_5();
  sub_21D41B270();
  OUTLINED_FUNCTION_37();
  return OUTLINED_FUNCTION_40_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_21CF4C8D4@<X0>(uint64_t a1@<X1>, int a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t result;
  _QWORD v23[2];
  id v24;
  int v25;
  uint64_t v26;

  v25 = a2;
  v23[0] = a3;
  v4 = sub_21D7C4CE0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v23 - v9;
  v11 = *(void **)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 192));
  v23[1] = sub_21CDBD85C(0, (unint64_t *)&unk_253F67BC0);
  v24 = v11;
  sub_21D7C3DD4();
  v12 = sub_21D7C4CC8();
  v14 = v13;
  v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v10, v4);
  sub_21D7C3DD4();
  v16 = sub_21D7C4CD4();
  v18 = v17;
  v15(v8, v4);
  v19 = (void *)sub_21D7C3E04();
  v20 = sub_21D17371C(v12, v14, v16, v18, v19);
  type metadata accessor for SourceBundle();
  swift_allocObject();
  v21 = v26;
  result = sub_21D3C4B3C(v24, (uint64_t)v20, v25);
  if (!v21)
    *(_QWORD *)v23[0] = result;
  return result;
}

uint64_t sub_21CF4CA64(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_21D7C4C44();
  v6 = v5;
  if (a4)
    a4(v5);
  return v6;
}

uint64_t sub_21CF4CAAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 56) = a1;
  *(_QWORD *)(v3 + 64) = a3;
  return swift_task_switch();
}

uint64_t sub_21CF4CAC4()
{
  uint64_t v0;
  char v1;
  void *v2;
  id v3;
  _QWORD *v4;

  *(_QWORD *)(v0 + 40) = &unk_24E11D808;
  *(_QWORD *)(v0 + 48) = sub_21CF4E9E8();
  v1 = sub_21D7BFDF0();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  if ((v1 & 1) != 0)
  {
    v2 = *(void **)(v0 + 64);
    type metadata accessor for ModelCache();
    OUTLINED_FUNCTION_42();
    v3 = v2;
    v4 = (_QWORD *)OUTLINED_FUNCTION_323();
    *(_QWORD *)(v0 + 72) = v4;
    *v4 = v0;
    v4[1] = sub_21CF4CB84;
    return sub_21D2AEB54(*(_QWORD *)(v0 + 64));
  }
  else
  {
    **(_QWORD **)(v0 + 56) = 0;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21CF4CB84(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = a1;
  OUTLINED_FUNCTION_307();
  OUTLINED_FUNCTION_23_5();
  return OUTLINED_FUNCTION_6_8();
}

uint64_t sub_21CF4CBD0()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 56) = *(_QWORD *)(v0 + 80);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_21CF4CBE8(uint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];
  uint64_t v16;
  uint64_t v17;

  v16 = a2;
  v17 = a3;
  v15[0] = *a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F67510);
  v15[1] = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)v15 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v13 = MEMORY[0x24BDAC7A8](v12);
  MEMORY[0x24BDAC7A8](v13);
  v14 = a1[4];
  sub_21D58603C((uint64_t)v7);
  sub_21D2946B4(v16, (uint64_t)a1 + *(_QWORD *)(*a1 + 160), v14, a1[3], *(_QWORD *)(v15[0] + 80), *(_QWORD *)(v15[0] + 96), (uint64_t)v10);
}

uint64_t sub_21CF4CD24()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 104) + 8);
  v9(v1, v2);
  sub_21D294C30(v0, v6);
  v9(v7, v2);
  sub_21D295030(v5);
  v9(v6, v2);
  sub_21D510760(0, v4);
  v9(v5, v2);
  sub_21D295534(v3);
  v9((uint64_t)v4, v2);
  sub_21D5864F4(*(_QWORD *)(v8 - 88));
  return ((uint64_t (*)(uint64_t, uint64_t))v9)(v3, v2);
}

id sub_21CF4CDDC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id result;
  uint64_t v7;

  v2 = sub_21D7C4CEC();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21D7C4494();
  sub_21D7C4D64();
  v5 = objc_allocWithZone((Class)type metadata accessor for PushNotifications(0));
  result = sub_21D762C38((uint64_t)v4);
  *a1 = result;
  return result;
}

uint64_t sub_21CF4CE8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v2 = sub_21D7C4CEC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CDBD85C(0, &qword_253F67A80);
  sub_21D7C4494();
  sub_21D7C4D64();
  v6 = sub_21D7C5664();
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *a1 = v6;
  return result;
}

uint64_t sub_21CF4CF80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67700);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_21D7C4CEC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21D7C4494();
  sub_21D7C4D64();
  v10 = (void *)sub_21D7C50C4();
  sub_21D7C4CA4();

  sub_21D7C4C98();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_21D7C49E0();
  v11 = sub_21D7C49D4();
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v13 = MEMORY[0x24BE5D940];
  *a1 = v11;
  a1[1] = v13;
  return result;
}

void sub_21CF4D100(_QWORD *a1@<X8>)
{
  *a1 = 0x3FE0000000000000;
}

id sub_21CF4D10C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  id result;
  _QWORD v8[2];

  v2 = sub_21D7C4CEC();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21D7C4494();
  sub_21D7C4D64();
  type metadata accessor for SubscriptionStatusCoordinator();
  sub_21D7C4D64();
  v5 = v8[1];
  v6 = objc_allocWithZone((Class)_s14descr24E10F689V18HighlightsProviderCMa());
  result = sub_21D427D24((uint64_t)v4, v5);
  *a1 = result;
  return result;
}

void sub_21CF4D1EC(uint64_t a1)
{
  sub_21CF4D344(a1, (uint64_t (*)(_QWORD))type metadata accessor for PlaybackPresenter);
}

uint64_t sub_21CF4D210@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 24) = type metadata accessor for JSIntentDispatcher();
  sub_21CDF81B4((uint64_t)&unk_253F60E10);
  *(_QWORD *)(a1 + 32) = v2;
  sub_21D7C4494();
  return sub_21D7C4D64();
}

_QWORD *sub_21CF4D290@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  type metadata accessor for JSIntentDispatcher();
  sub_21D7C4494();
  sub_21D7C4D64();
  type metadata accessor for AppLifeCycleCoordinator();
  swift_allocObject();
  result = sub_21D3A645C(v3);
  *a1 = result;
  return result;
}

void sub_21CF4D320(uint64_t a1)
{
  sub_21CF4D344(a1, (uint64_t (*)(_QWORD))type metadata accessor for ExplicitBadgingPresenter);
}

void sub_21CF4D344(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t *v2;

  OUTLINED_FUNCTION_75_3(a1, a2);
  OUTLINED_FUNCTION_50();
  *v2 = OUTLINED_FUNCTION_298();
  OUTLINED_FUNCTION_200();
}

void sub_21CF4D374(_QWORD *a1@<X8>)
{
  id v2;
  uint64_t v3;

  v2 = objc_allocWithZone((Class)type metadata accessor for UserSocialProfileCoordinator(0));
  swift_retain();
  sub_21D507084();
  *a1 = v3;
}

uint64_t sub_21CF4D3CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[2];
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  unint64_t v39;
  _QWORD v40[3];
  ValueMetadata *v41;
  unint64_t v42;
  uint64_t v43;

  v33 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67710);
  MEMORY[0x24BDAC7A8](v5);
  v30 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_21D7C4A1C();
  v31 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v28 - v11;
  v13 = sub_21D7C4CEC();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_21D7C4980();
  v17 = sub_21D7C4494();
  sub_21D7C4D64();
  v28[0] = v16;
  v29 = MEMORY[0x220791BC8](v15, 0xD000000000000011, 0x800000021D8194A0);
  sub_21D7C4D64();
  v18 = objc_msgSend((id)objc_opt_self(), sel_ams_sharedAccountStore);
  v41 = (ValueMetadata *)sub_21CDBD85C(0, &qword_253F67A90);
  v42 = MEMORY[0x24BE5E500];
  v40[0] = v18;
  v19 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  sub_21D7C4A10();
  type metadata accessor for SubscriptionStatusCoordinator();
  swift_retain();
  v28[1] = v17;
  sub_21D7C4D64();
  swift_release();
  v20 = v40[0];
  v41 = &type metadata for AccountMetricsFieldsProvider;
  v42 = sub_21CF4E85C();
  v40[0] = v20;
  if (qword_253F67698 != -1)
    swift_once();
  v21 = sub_21D7C4BB4();
  __swift_project_value_buffer(v21, (uint64_t)qword_253F81F68);
  sub_21D7C4A04();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  v41 = (ValueMetadata *)&unk_24E11F6C8;
  v22 = sub_21CF4E898();
  v40[0] = a1;
  v23 = *(_QWORD *)(a2 + 16);
  v42 = v22;
  v43 = v23;
  sub_21CF4E8D4();
  v24 = v31;
  v25 = v32;
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v10, v12, v32);
  v38 = &unk_24E11F768;
  v39 = sub_21CF4E910();
  v37 = swift_allocObject();
  sub_21CF4E978((uint64_t)v40, v37 + 16);
  v35 = v28[0];
  v36 = MEMORY[0x24BE5D8F8];
  v34 = v29;
  swift_retain();
  swift_retain();
  swift_retain();
  v26 = (uint64_t)v30;
  sub_21D7C4D64();
  __swift_storeEnumTagSinglePayload(v26, 0, 1, v13);
  sub_21D7C44C4();
  swift_release();
  sub_21CF4E9B4((uint64_t)v40);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v12, v25);
}

void sub_21CF4D7B0(uint64_t a1)
{
  sub_21CF4D980(a1, (uint64_t (*)(_QWORD))type metadata accessor for CloudLibraryStatusController);
}

_QWORD *sub_21CF4D7D4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  type metadata accessor for JSStackManager();
  swift_allocObject();
  v2 = swift_retain();
  result = sub_21D660370(v2);
  *a1 = result;
  return result;
}

void sub_21CF4D830(uint64_t a1)
{
  sub_21CF4D9E0(a1, (uint64_t (*)(_QWORD))type metadata accessor for SocialBadgingMapRequestCoordinator);
}

uint64_t sub_21CF4D854@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[2];

  v2 = sub_21D7C44DC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v11 - v7;
  sub_21D7C4494();
  sub_21D7C4D64();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  sub_21D7C46E0();
  swift_allocObject();
  v9 = sub_21D7C46D4();
  sub_21D6D54AC();
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  *a1 = v9;
  return result;
}

void sub_21CF4D95C(uint64_t a1)
{
  sub_21CF4D980(a1, (uint64_t (*)(_QWORD))type metadata accessor for SocialBadgingRequestCoordinator);
}

void sub_21CF4D980(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t *v2;

  OUTLINED_FUNCTION_75_3(a1, a2);
  swift_allocObject();
  OUTLINED_FUNCTION_50();
  *v2 = OUTLINED_FUNCTION_298();
  OUTLINED_FUNCTION_200();
}

void sub_21CF4D9BC(uint64_t a1)
{
  sub_21CF4D9E0(a1, (uint64_t (*)(_QWORD))type metadata accessor for UnifiedMessages.Coordinator);
}

void sub_21CF4D9E0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t *v2;
  id v3;

  v3 = objc_allocWithZone((Class)OUTLINED_FUNCTION_75_3(a1, a2));
  OUTLINED_FUNCTION_50();
  *v2 = OUTLINED_FUNCTION_298();
  OUTLINED_FUNCTION_200();
}

uint64_t sub_21CF4DA14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  type metadata accessor for ObjectGraph();
  swift_retain();
  v2 = sub_21D7C44AC();
  swift_retain();
  sub_21D7C4464();
  result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_21CF4DA90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4[2] = a4;
  v5 = *a4;
  v4[3] = type metadata accessor for MusicAppDestinationContext(0);
  v4[4] = swift_task_alloc();
  v7 = type metadata accessor for PresentationItem.Destination(0, *(_QWORD *)(v5 + 88), *(_QWORD *)(v5 + 104), v6);
  v4[5] = v7;
  v4[6] = *(_QWORD *)(v7 - 8);
  v4[7] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67A20);
  v4[8] = v8;
  v4[9] = *(_QWORD *)(v8 - 8);
  v4[10] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67A08);
  v4[11] = v9;
  v4[12] = *(_QWORD *)(v9 - 8);
  v4[13] = swift_task_alloc();
  v4[14] = sub_21D7C546C();
  v4[15] = sub_21D7C5460();
  v4[16] = sub_21D7C5424();
  v4[17] = v10;
  return swift_task_switch();
}

uint64_t sub_21CF4DBB0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = v0[9];
  v1 = v0[10];
  v0[18] = *(_QWORD *)(v0[2] + 16);
  sub_21D22D808();
  sub_21D7C54C0();
  OUTLINED_FUNCTION_25_5(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  v0[19] = sub_21D7C5460();
  v3 = (_QWORD *)swift_task_alloc();
  v0[20] = v3;
  *v3 = v0;
  v3[1] = sub_21CF4DC6C;
  OUTLINED_FUNCTION_256();
  return sub_21D7C54CC();
}

uint64_t sub_21CF4DC6C()
{
  swift_task_dealloc();
  OUTLINED_FUNCTION_104();
  return OUTLINED_FUNCTION_4_7();
}

uint64_t sub_21CF4DCB8()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_80_4();
  if (*(_BYTE *)(v0 + 168) == 2)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
    OUTLINED_FUNCTION_104();
    OUTLINED_FUNCTION_22_1();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_13_2();
    OUTLINED_FUNCTION_14_1();
    return OUTLINED_FUNCTION_88_3(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    if ((sub_21D22D550() & 1) != 0)
    {
      if (qword_253F4F288 != -1)
        swift_once();
      v2 = *(_QWORD *)(v0 + 56);
      v3 = *(_QWORD *)(v0 + 32);
      v10 = *(_QWORD *)(v0 + 24);
      v11 = *(_QWORD *)(v0 + 48);
      v4 = OUTLINED_FUNCTION_9_4();
      __swift_project_value_buffer(v4, (uint64_t)qword_253F65580);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F67DC0);
      OUTLINED_FUNCTION_27_1();
      OUTLINED_FUNCTION_31();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_21D7C8560;
      OUTLINED_FUNCTION_164();
      sub_21D7C4D28();
      swift_bridgeObjectRelease();
      swift_storeEnumTagMultiPayload();
      *(_QWORD *)(v3 + 32) = 0;
      *(_OWORD *)v3 = 0u;
      *(_OWORD *)(v3 + 16) = 0u;
      v5 = v3 + *(int *)(v10 + 20);
      v6 = OUTLINED_FUNCTION_0_7();
      OUTLINED_FUNCTION_58_2(v5, v7, v8, v6);
      OUTLINED_FUNCTION_111_1();
      OUTLINED_FUNCTION_305();
      sub_21CDBDA1C(v3, type metadata accessor for MusicAppDestinationContext);
      OUTLINED_FUNCTION_119(v2, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
    }
    *(_QWORD *)(v0 + 152) = sub_21D7C5460();
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v9;
    *v9 = v0;
    v9[1] = sub_21CF4DC6C;
    OUTLINED_FUNCTION_256();
    OUTLINED_FUNCTION_87_3();
    return sub_21D7C54CC();
  }
}

void sub_21CF4DEB4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  OUTLINED_FUNCTION_44_0();
  swift_release();
  OUTLINED_FUNCTION_93();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 5));
  swift_unknownObjectRelease();
  sub_21CDBDA44((uint64_t)(v0 + 11), (uint64_t *)&unk_253F5F048);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 88) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 160));
  v2 = sub_21D7C3E10();
  OUTLINED_FUNCTION_46(v2);
  swift_release();
  swift_release();

  OUTLINED_FUNCTION_0();
}

uint64_t sub_21CF4DF64()
{
  sub_21CF4DEB4();
  return swift_deallocClassInstance();
}

void type metadata accessor for Bootstrap()
{
  JUMPOUT(0x22079380CLL);
}

uint64_t sub_21CF4DF94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_21D7C4EE4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_21D7C4EFC();
  __swift_allocate_value_buffer(v4, qword_253F65580);
  __swift_project_value_buffer(v4, (uint64_t)qword_253F65580);
  if (qword_253F677D0 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v0, (uint64_t)qword_253F81C60);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  return sub_21D7C4EF0();
}

id sub_21CF4E094()
{
  id result;

  sub_21CDBD85C(0, (unint64_t *)&qword_253F67A98);
  result = sub_21D1D4D60();
  qword_253F5FCE0 = (uint64_t)result;
  return result;
}

uint64_t sub_21CF4E0F4@<X0>(uint64_t a1@<X8>)
{
  return sub_21CF49B80(a1);
}

void sub_21CF4E114()
{
  sub_21CF6E158();
}

unint64_t sub_21CF4E11C()
{
  unint64_t result;

  result = qword_255331CE0;
  if (!qword_255331CE0)
  {
    result = MEMORY[0x2207938C0](&unk_21D7D30A8, &type metadata for SocialProfileButtonView);
    atomic_store(result, &qword_255331CE0);
  }
  return result;
}

uint64_t sub_21CF4E158()
{
  OUTLINED_FUNCTION_44_0();
  OUTLINED_FUNCTION_247();
  return swift_deallocObject();
}

unint64_t sub_21CF4E170()
{
  unint64_t result;
  uint64_t v1;

  result = qword_253F67AD8;
  if (!qword_253F67AD8)
  {
    v1 = sub_21CDBD85C(255, (unint64_t *)&qword_253F67AE0);
    result = MEMORY[0x2207938C0](MEMORY[0x24BEE5670], v1);
    atomic_store(result, (unint64_t *)&qword_253F67AD8);
  }
  return result;
}

uint64_t sub_21CF4E1C0()
{
  OUTLINED_FUNCTION_44_0();
  OUTLINED_FUNCTION_248();
  return swift_deallocObject();
}

unint64_t *sub_21CF4E1D8(unint64_t *a1)
{
  uint64_t v1;

  return sub_21CF49F90(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_21CF4E1E0(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return sub_21CE67574(result);
  return result;
}

void sub_21CF4E1F4(uint64_t a1)
{
  uint64_t *v1;

  if (!OUTLINED_FUNCTION_115(a1))
  {
    OUTLINED_FUNCTION_106(0, v1);
    OUTLINED_FUNCTION_99();
  }
  OUTLINED_FUNCTION_0();
}

unint64_t sub_21CF4E21C()
{
  unint64_t result;

  result = qword_253F5FED0;
  if (!qword_253F5FED0)
  {
    result = MEMORY[0x2207938C0](&unk_21D804B44, &type metadata for RadioPageIntent);
    atomic_store(result, (unint64_t *)&qword_253F5FED0);
  }
  return result;
}

unint64_t sub_21CF4E258()
{
  unint64_t result;

  result = qword_255331D00;
  if (!qword_255331D00)
  {
    result = MEMORY[0x2207938C0](&unk_21D7FCF3C, &type metadata for VideosPageIntent);
    atomic_store(result, (unint64_t *)&qword_255331D00);
  }
  return result;
}

unint64_t sub_21CF4E294()
{
  unint64_t result;

  result = qword_253F60268;
  if (!qword_253F60268)
  {
    result = MEMORY[0x2207938C0](&unk_21D7F64EC, &type metadata for BrowsePageIntent);
    atomic_store(result, (unint64_t *)&qword_253F60268);
  }
  return result;
}

unint64_t sub_21CF4E2D0()
{
  unint64_t result;

  result = qword_253F61150;
  if (!qword_253F61150)
  {
    result = MEMORY[0x2207938C0](&unk_21D7F779C, &type metadata for ListenNowPageIntent);
    atomic_store(result, (unint64_t *)&qword_253F61150);
  }
  return result;
}

uint64_t sub_21CF4E30C()
{
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_93();
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21CF4E340()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_229(v0);
  OUTLINED_FUNCTION_45(v1);
  OUTLINED_FUNCTION_238();
  return sub_21CF4A0D4(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_21CF4E3B0()
{
  swift_weakDestroy();
  OUTLINED_FUNCTION_247();
  return swift_deallocObject();
}

uint64_t sub_21CF4E3CC()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21CF4E400()
{
  uint64_t v0;

  return sub_21CF4C4FC(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_BYTE *)(v0 + 72));
}

uint64_t sub_21CF4E418()
{
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_248();
  return swift_deallocObject();
}

uint64_t sub_21CF4E430()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_229(v1);
  *v2 = v0;
  v2[1] = sub_21CDBDBB8;
  OUTLINED_FUNCTION_256();
  return sub_21CF4C740();
}

uint64_t sub_21CF4E488()
{
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_93();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21CF4E4B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = swift_task_alloc();
  v3 = (_QWORD *)OUTLINED_FUNCTION_229(v2);
  v4 = OUTLINED_FUNCTION_45(v3);
  return sub_21CF4C814(v4, v5, v6, v7, v1);
}

uint64_t sub_21CF4E514()
{
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_93();
  return swift_deallocObject();
}

uint64_t sub_21CF4E538(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (uint64_t *)v1[4];
  v7 = swift_task_alloc();
  v8 = (_QWORD *)OUTLINED_FUNCTION_229(v7);
  *v8 = v2;
  v8[1] = sub_21CDBDBB8;
  return sub_21CF4DA90(a1, v4, v5, v6);
}

uint64_t sub_21CF4E5A0()
{
  OUTLINED_FUNCTION_44_0();
  return swift_deallocObject();
}

uint64_t sub_21CF4E5C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21CF4C8D4(*(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), a1);
}

uint64_t sub_21CF4E5DC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_21D7C4CE0();
  OUTLINED_FUNCTION_38_9();
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);

  if (*(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_21CF4E660(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_21D7C4CE0() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_21CF4CA64(a1, v1 + v4, *(_QWORD *)(v1 + v5), *(void (**)(uint64_t))(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_21CF4E6C0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_247();
  return swift_deallocObject();
}

uint64_t sub_21CF4E6DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = swift_task_alloc();
  v8 = (_QWORD *)OUTLINED_FUNCTION_229(v7);
  *v8 = v3;
  v8[1] = sub_21CDBD830;
  return sub_21CF4CAAC(a1, a2, v6);
}

uint64_t sub_21CF4E740()
{
  OUTLINED_FUNCTION_44_0();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_248();
  return swift_deallocObject();
}

void sub_21CF4E760(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_21CF4CBE8(*(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_21CF4E778()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_21D7C3DEC() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);

  OUTLINED_FUNCTION_83(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  return swift_deallocObject();
}

uint64_t sub_21CF4E7E8@<X0>(uint64_t *a1@<X8>)
{
  sub_21D7C3DEC();
  return sub_21CF4CE8C(a1);
}

uint64_t sub_21CF4E844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_21CF4D3CC(a1, v2, a2);
}

unint64_t sub_21CF4E85C()
{
  unint64_t result;

  result = qword_253F636A8;
  if (!qword_253F636A8)
  {
    result = MEMORY[0x2207938C0](&unk_21D7F5810, &type metadata for AccountMetricsFieldsProvider);
    atomic_store(result, (unint64_t *)&qword_253F636A8);
  }
  return result;
}

unint64_t sub_21CF4E898()
{
  unint64_t result;

  result = qword_253F5EFF0;
  if (!qword_253F5EFF0)
  {
    result = MEMORY[0x2207938C0](&unk_21D811520, &unk_24E11F6C8);
    atomic_store(result, (unint64_t *)&qword_253F5EFF0);
  }
  return result;
}

unint64_t sub_21CF4E8D4()
{
  unint64_t result;

  result = qword_253F5EF68[0];
  if (!qword_253F5EF68[0])
  {
    result = MEMORY[0x2207938C0](&unk_21D7FB8B0, &_s13FieldsBuilderVN);
    atomic_store(result, qword_253F5EF68);
  }
  return result;
}

unint64_t sub_21CF4E910()
{
  unint64_t result;

  result = qword_255331D78;
  if (!qword_255331D78)
  {
    result = MEMORY[0x2207938C0](&unk_21D811570, &unk_24E11F768);
    atomic_store(result, (unint64_t *)&qword_255331D78);
  }
  return result;
}

uint64_t sub_21CF4E94C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21CF4E978(uint64_t a1, uint64_t a2)
{
  sub_21D716694(a2, a1);
  return a2;
}

uint64_t sub_21CF4E9B4(uint64_t a1)
{
  sub_21D716670(a1);
  return a1;
}

unint64_t sub_21CF4E9E8()
{
  unint64_t result;

  result = qword_253F65608[0];
  if (!qword_253F65608[0])
  {
    result = MEMORY[0x2207938C0](&unk_21D80E734, &unk_24E11D808);
    atomic_store(result, qword_253F65608);
  }
  return result;
}

void sub_21CF4EA24(uint64_t a1)
{
  uint64_t *v1;
  void (*v2)(void);
  void (*v3)(void);
  void (*v4)(void);
  void (*v5)(void);

  if (!OUTLINED_FUNCTION_115(a1))
  {
    v4 = v3;
    v5 = v2;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(v1);
    v5();
    v4();
    OUTLINED_FUNCTION_14_12();
  }
  OUTLINED_FUNCTION_54_1();
}

void sub_21CF4EA80(uint64_t a1)
{
  void (*v1)(void);
  uint64_t *v2;

  if (!OUTLINED_FUNCTION_115(a1))
  {
    OUTLINED_FUNCTION_106(0, v2);
    v1();
    OUTLINED_FUNCTION_73();
  }
  OUTLINED_FUNCTION_54_1();
}

id sub_21CF4EAC8()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t sub_21CF4EAD0(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AlertPresentationDestinationView(a2, a1);
  return a2;
}

uint64_t sub_21CF4EB0C(uint64_t a1)
{
  destroy for AlertPresentationDestinationView(a1);
  return a1;
}

uint64_t OUTLINED_FUNCTION_3_28()
{
  return sub_21D7C49A4();
}

uint64_t OUTLINED_FUNCTION_5_27(_QWORD *a1)
{
  uint64_t v1;

  __swift_project_boxed_opaque_existential_1(a1, v1);
  return 0;
}

void OUTLINED_FUNCTION_8_19()
{
  sub_21D68CB98();
}

void OUTLINED_FUNCTION_9_20()
{
  sub_21D68CC08();
}

uint64_t OUTLINED_FUNCTION_10_16()
{
  return sub_21D7C45D8();
}

uint64_t OUTLINED_FUNCTION_11_19()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 696) + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_13_11()
{
  return sub_21D7C1AAC();
}

uint64_t OUTLINED_FUNCTION_14_13()
{
  return sub_21D7C49A4();
}

uint64_t OUTLINED_FUNCTION_15_13()
{
  return sub_21D7C45FC();
}

uint64_t OUTLINED_FUNCTION_16_12(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v3 + 1296) = v4;
  *(_QWORD *)(v3 + 1344) = a1;
  *(_QWORD *)(v3 + 1352) = a2;
  *(_BYTE *)(v3 + 1360) = a3 & 1;
  *(_BYTE *)(v3 + 1361) = HIBYTE(a3) & 1;
  return sub_21CE39330(v3 + 1296, v3 + 1224);
}

uint64_t OUTLINED_FUNCTION_17_10()
{
  return sub_21D7C1AAC();
}

uint64_t OUTLINED_FUNCTION_19_11()
{
  return sub_21D7C45D8();
}

uint64_t OUTLINED_FUNCTION_20_7()
{
  return sub_21D7C1AAC();
}

uint64_t OUTLINED_FUNCTION_21_12()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 592) + 8))(v2, v1);
}

void OUTLINED_FUNCTION_22_10()
{
  sub_21D68CB98();
}

void OUTLINED_FUNCTION_23_7()
{
  sub_21D68CB98();
}

uint64_t OUTLINED_FUNCTION_24_8()
{
  return 0x726F7461727563;
}

uint64_t OUTLINED_FUNCTION_27_11()
{
  return sub_21D7C1AAC();
}

void OUTLINED_FUNCTION_31_8()
{
  JUMPOUT(0x2207938C0);
}

void OUTLINED_FUNCTION_34_9()
{
  sub_21D68CB98();
}

void OUTLINED_FUNCTION_36_8(uint64_t a1)
{
  uint64_t *v1;

  sub_21CDBDA44(a1, v1);
}

uint64_t OUTLINED_FUNCTION_37_6()
{
  return type metadata accessor for FlowAction(0);
}

uint64_t OUTLINED_FUNCTION_38_10()
{
  return type metadata accessor for ContentDescriptor();
}

void OUTLINED_FUNCTION_41_9()
{
  sub_21D68CC08();
}

uint64_t OUTLINED_FUNCTION_43_6@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  return FlowAction.init(actionMetrics:destination:id:preferDetachedSegue:)(a1, a2, a3, 0, a4);
}

uint64_t OUTLINED_FUNCTION_44_8()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_46_6()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_47_7()
{
  return sub_21D7C49BC();
}

uint64_t OUTLINED_FUNCTION_48_6()
{
  return 0;
}

void OUTLINED_FUNCTION_49_6()
{
  sub_21D68CC08();
}

uint64_t OUTLINED_FUNCTION_50_8(uint64_t a1)
{
  return sub_21D737570(a1, 45);
}

void OUTLINED_FUNCTION_52_5()
{
  JUMPOUT(0x2207938C0);
}

uint64_t OUTLINED_FUNCTION_55_5()
{
  return sub_21D7C49BC();
}

void OUTLINED_FUNCTION_56_5()
{
  sub_21D68CB98();
}

uint64_t OUTLINED_FUNCTION_59_6()
{
  return sub_21D7C1AAC();
}

uint64_t OUTLINED_FUNCTION_61_5()
{
  return sub_21D7C1AAC();
}

void OUTLINED_FUNCTION_62_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  sub_21CDC314C(v1, *(_QWORD *)(v0 + 616), v2);
}

uint64_t OUTLINED_FUNCTION_64_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return __swift_storeEnumTagSinglePayload(v4, 1, 1, a4);
}

void OUTLINED_FUNCTION_65_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  sub_21CDC314C(v1, *(_QWORD *)(v0 + 640), v2);
}

void OUTLINED_FUNCTION_66_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  sub_21CDD337C(v1, *(_QWORD *)(v0 + 672), v2);
}

uint64_t OUTLINED_FUNCTION_67_4()
{
  return sub_21D7C49C8();
}

uint64_t OUTLINED_FUNCTION_68_5@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

void OUTLINED_FUNCTION_69_4(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_21CDD337C(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_73_5()
{
  return type metadata accessor for FlowAction.Destination(0);
}

void OUTLINED_FUNCTION_74_4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_21CDC314C(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_75_3(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  return a2(0);
}

void OUTLINED_FUNCTION_76_3()
{
  uint64_t *v0;
  uint64_t v1;

  sub_21CDBDA44(v1, v0);
}

void OUTLINED_FUNCTION_77_4()
{
  uint64_t v0;
  uint64_t *v1;

  sub_21CDBDA44(v0, v1);
}

void OUTLINED_FUNCTION_79_4(uint64_t a1)
{
  sub_21CF4EA80(a1);
}

void OUTLINED_FUNCTION_81_3()
{
  JUMPOUT(0x2207938C0);
}

void OUTLINED_FUNCTION_82_4(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  sub_21CDD337C(a1, *(_QWORD *)(v1 + 672), v2);
}

uint64_t OUTLINED_FUNCTION_83_3()
{
  return sub_21D7C45D8();
}

void OUTLINED_FUNCTION_84_4()
{
  uint64_t v0;
  uint64_t *v1;

  sub_21CDC314C(v0 + 1152, v0 + 1080, v1);
}

_QWORD *OUTLINED_FUNCTION_86_3(_QWORD *a1)
{
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

uint64_t OUTLINED_FUNCTION_88_3(uint64_t (*a1)(void))
{
  return a1();
}

void OUTLINED_FUNCTION_89_3(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_21CDBDA1C(a1, v1);
}

uint64_t OUTLINED_FUNCTION_90_3(_QWORD *a1)
{
  uint64_t v1;

  __swift_project_boxed_opaque_existential_1(a1, v1);
  return 0;
}

uint64_t OUTLINED_FUNCTION_93_3()
{
  return sub_21D7C45FC();
}

uint64_t OUTLINED_FUNCTION_95_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 528) = v2;
  return sub_21D7046DC(v1);
}

void OUTLINED_FUNCTION_97_3()
{
  uint64_t v0;

  sub_21CF4C648(v0);
}

__n128 OUTLINED_FUNCTION_98_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 40);
  *(_OWORD *)(v0 + 1296) = *(_OWORD *)v1;
  result = *(__n128 *)(v1 + 24);
  *(__n128 *)(v0 + 1320) = result;
  *(_QWORD *)(v0 + 1312) = v2;
  *(_QWORD *)(v0 + 392) = v3;
  *(_QWORD *)(v0 + 1336) = v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_99_3()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_100_4()
{
  JUMPOUT(0x2207938C0);
}

double OUTLINED_FUNCTION_101_1@<D0>(char a1@<W8>)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;

  *(_BYTE *)v4 = a1;
  result = 0.0;
  *(_OWORD *)(v4 + 8) = 0u;
  *(_OWORD *)(v4 + 24) = 0u;
  *(_OWORD *)(v4 + 40) = 0u;
  *(_OWORD *)(v4 + 56) = 0u;
  *(_OWORD *)(v4 + 72) = 0u;
  *(_QWORD *)(v4 + 88) = v2;
  *(_QWORD *)(v4 + 96) = v3;
  *(_QWORD *)(v4 + 104) = 0;
  *(_BYTE *)(v4 + 112) = v1;
  return result;
}

void OUTLINED_FUNCTION_103_2()
{
  sub_21D68CC08();
}

void OUTLINED_FUNCTION_104_2()
{
  sub_21D68CC08();
}

void OUTLINED_FUNCTION_107_2()
{
  sub_21D68CC08();
}

uint64_t OUTLINED_FUNCTION_108_1()
{
  return sub_21D7C1AAC();
}

double OUTLINED_FUNCTION_109_1@<D0>(char a1@<W8>)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  double result;

  *(_BYTE *)v4 = a1;
  result = 0.0;
  *(_OWORD *)(v4 + 8) = 0u;
  *(_OWORD *)(v4 + 24) = 0u;
  *(_OWORD *)(v4 + 40) = 0u;
  *(_OWORD *)(v4 + 56) = 0u;
  *(_OWORD *)(v4 + 72) = 0u;
  *(_QWORD *)(v4 + 88) = v1;
  *(_QWORD *)(v4 + 96) = v3;
  *(_QWORD *)(v4 + 104) = 0;
  *(_BYTE *)(v4 + 112) = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_111_1()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_113_1()
{
  sub_21D68CC08();
}

uint64_t OUTLINED_FUNCTION_115_1()
{
  return sub_21D7C1AAC();
}

uint64_t OUTLINED_FUNCTION_116_0()
{
  return swift_storeEnumTagMultiPayload();
}

double OUTLINED_FUNCTION_118_0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  double result;

  result = 0.0;
  *(_OWORD *)(v3 + 8) = 0u;
  *(_OWORD *)(v3 + 24) = 0u;
  *(_OWORD *)(v3 + 40) = 0u;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_QWORD *)(v3 + 88) = v0;
  *(_QWORD *)(v3 + 96) = v1;
  *(_QWORD *)(v3 + 104) = 0;
  *(_BYTE *)(v3 + 112) = v2;
  return result;
}

void OUTLINED_FUNCTION_119_1(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_21CDC314C(a1, a2, v2);
}

void OUTLINED_FUNCTION_120_0()
{
  JUMPOUT(0x2207938C0);
}

_QWORD *OUTLINED_FUNCTION_123_1(_QWORD *a1)
{
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

void OUTLINED_FUNCTION_125_1()
{
  sub_21D68CB98();
}

void OUTLINED_FUNCTION_126_1()
{
  sub_21D68CB98();
}

void OUTLINED_FUNCTION_127_0()
{
  sub_21D68CB98();
}

uint64_t OUTLINED_FUNCTION_133_0()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v1 - 144) + 16))(*(_QWORD *)(v1 - 152), v0, *(_QWORD *)(v1 - 136));
}

void OUTLINED_FUNCTION_134_0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_21CDD337C(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_137_0()
{
  return sub_21D7C3F84();
}

void OUTLINED_FUNCTION_138_0()
{
  uint64_t v0;
  uint64_t *v1;

  sub_21CDBDA44(v0 + 1152, v1);
}

void OUTLINED_FUNCTION_139_0()
{
  uint64_t v0;
  uint64_t *v1;

  sub_21CDBDA44(v0 + 1224, v1);
}

uint64_t OUTLINED_FUNCTION_140_0()
{
  return swift_release();
}

void OUTLINED_FUNCTION_141_0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_21CDBDA1C(v2, a2);
}

uint64_t OUTLINED_FUNCTION_142_0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 1336) = a1;
  return swift_retain();
}

void OUTLINED_FUNCTION_143_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  sub_21CDD3198(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_144()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v3, v0, v1);
}

uint64_t OUTLINED_FUNCTION_145_0()
{
  return sub_21D7C3B58();
}

uint64_t OUTLINED_FUNCTION_146()
{
  return type metadata accessor for ObjectGraph();
}

void OUTLINED_FUNCTION_147()
{
  JUMPOUT(0x2207938C0);
}

void OUTLINED_FUNCTION_148(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_21CF47EFC(v1, a1);
}

unint64_t OUTLINED_FUNCTION_149()
{
  unint64_t v0;

  return sub_21CE675C0(v0);
}

uint64_t OUTLINED_FUNCTION_150()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_151()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v1 - 160) + 16))(*(_QWORD *)(v1 - 168), v0, *(_QWORD *)(v1 - 152));
}

void OUTLINED_FUNCTION_152(uint64_t a1)
{
  sub_21CF4EA80(a1);
}

uint64_t OUTLINED_FUNCTION_155@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 96);
}

uint64_t OUTLINED_FUNCTION_157()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16))(v2, v1, v3);
}

uint64_t OUTLINED_FUNCTION_158()
{
  return swift_release();
}

void OUTLINED_FUNCTION_161()
{
  sub_21D68CC08();
}

void OUTLINED_FUNCTION_162()
{
  JUMPOUT(0x2207938C0);
}

uint64_t OUTLINED_FUNCTION_163()
{
  return sub_21D7C4D64();
}

uint64_t OUTLINED_FUNCTION_164()
{
  return sub_21D7C3F84();
}

uint64_t OUTLINED_FUNCTION_165()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_166()
{
  return sub_21D7C4D64();
}

void OUTLINED_FUNCTION_167(uint64_t a1)
{
  sub_21CDF81B4(a1);
}

uint64_t OUTLINED_FUNCTION_168()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 696) + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_169()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_170()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_171()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_173()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_174()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 1232) = 0;
  *(_QWORD *)(v0 + 1224) = 0;
}

void OUTLINED_FUNCTION_175()
{
  sub_21D68CC08();
}

void OUTLINED_FUNCTION_176(uint64_t a1)
{
  sub_21CDF81B4(a1);
}

uint64_t OUTLINED_FUNCTION_179()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_181()
{
  return sub_21D7C49BC();
}

uint64_t OUTLINED_FUNCTION_182()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_183()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_184()
{
  return sub_21D7C3F84();
}

uint64_t OUTLINED_FUNCTION_185()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_186(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_21CF47EFC(v1, a1);
}

void OUTLINED_FUNCTION_187()
{
  sub_21D54AC00();
}

uint64_t OUTLINED_FUNCTION_188()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 304);
}

void OUTLINED_FUNCTION_189()
{
  JUMPOUT(0x2207938C0);
}

void OUTLINED_FUNCTION_191(uint64_t a1)
{
  sub_21CDF81B4(a1);
}

uint64_t OUTLINED_FUNCTION_192()
{
  return sub_21D7C45F0();
}

uint64_t OUTLINED_FUNCTION_193()
{
  return sub_21D7C49BC();
}

void OUTLINED_FUNCTION_195(uint64_t a1)
{
  uint64_t *v1;

  v1[4] = a1;
  __swift_allocate_boxed_opaque_existential_0Tm(v1);
}

uint64_t OUTLINED_FUNCTION_196()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_197()
{
  return type metadata accessor for FlowActionPageView();
}

uint64_t OUTLINED_FUNCTION_198()
{
  return swift_getAssociatedTypeWitness();
}

void OUTLINED_FUNCTION_202(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_21CDD337C(v4, *(_QWORD *)(v3 + 672), a3);
}

void OUTLINED_FUNCTION_204()
{
  uint64_t v0;
  uint64_t v1;

  sub_21CF47EFC(v0, *(_QWORD *)(v1 - 112));
}

uint64_t OUTLINED_FUNCTION_205()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_207@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, *(_QWORD *)(v2 + 576));
}

uint64_t OUTLINED_FUNCTION_210()
{
  return sub_21D7C4D28();
}

uint64_t OUTLINED_FUNCTION_214@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

unint64_t OUTLINED_FUNCTION_215()
{
  return sub_21CDBFC54();
}

uint64_t OUTLINED_FUNCTION_216()
{
  return sub_21D7C42D8();
}

uint64_t OUTLINED_FUNCTION_218()
{
  return sub_21D7C42E4();
}

void OUTLINED_FUNCTION_222()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0[153] = v1;
  v0[154] = v2;
  v0[155] = v4;
  v0[156] = v3;
}

uint64_t OUTLINED_FUNCTION_223()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_224()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_225()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_226()
{
  sub_21D68CC08();
}

uint64_t OUTLINED_FUNCTION_227()
{
  return sub_21D7C42D8();
}

uint64_t OUTLINED_FUNCTION_228()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_229(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

void OUTLINED_FUNCTION_230(uint64_t a1)
{
  sub_21CF4EA24(a1);
}

void OUTLINED_FUNCTION_233()
{
  uint64_t *v0;
  uint64_t v1;

  sub_21CDBDA44(v1, v0);
}

uint64_t OUTLINED_FUNCTION_236()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_237()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_242()
{
  return sub_21D7C45F0();
}

uint64_t OUTLINED_FUNCTION_243()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_246()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v1, v0, v2);
}

uint64_t OUTLINED_FUNCTION_247()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_248()
{
  uint64_t v0;

  return v0;
}

unint64_t OUTLINED_FUNCTION_249()
{
  unint64_t v0;

  return sub_21CE675C0(v0);
}

unint64_t OUTLINED_FUNCTION_252()
{
  return sub_21CDB6B00();
}

void OUTLINED_FUNCTION_253(uint64_t a1)
{
  sub_21CDF81B4(a1);
}

uint64_t OUTLINED_FUNCTION_254()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_256()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_257()
{
  return sub_21D7C4D28();
}

void OUTLINED_FUNCTION_258()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 96) = 0;
  *(_QWORD *)(v0 - 88) = 0;
}

uint64_t OUTLINED_FUNCTION_259()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 96) = 0;
  *(_QWORD *)(v0 - 88) = 0;
  return sub_21D7C4C20();
}

uint64_t OUTLINED_FUNCTION_260()
{
  return sub_21D7C42E4();
}

uint64_t OUTLINED_FUNCTION_261()
{
  return sub_21D7C42E4();
}

uint64_t OUTLINED_FUNCTION_262@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_21CDB6D80(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_264()
{
  return sub_21D7C42D8();
}

uint64_t OUTLINED_FUNCTION_265()
{
  return 0;
}

unint64_t OUTLINED_FUNCTION_267()
{
  return sub_21CDBFC54();
}

uint64_t OUTLINED_FUNCTION_269()
{
  return sub_21CF4C574();
}

uint64_t OUTLINED_FUNCTION_270@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 + 560));
}

uint64_t OUTLINED_FUNCTION_271()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_272()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 264);
}

uint64_t OUTLINED_FUNCTION_273()
{
  uint64_t v0;

  return sub_21CF4EAD0(v0 + 1296, v0 + 1104);
}

uint64_t OUTLINED_FUNCTION_274@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

_QWORD *OUTLINED_FUNCTION_275()
{
  uint64_t v0;
  _QWORD *v1;

  return __swift_project_boxed_opaque_existential_1(v1, v0);
}

uint64_t OUTLINED_FUNCTION_276()
{
  return sub_21D7C42E4();
}

void OUTLINED_FUNCTION_277(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_21CDC314C(a1, v3, a3);
}

void OUTLINED_FUNCTION_278()
{
  JUMPOUT(0x2207938C0);
}

void OUTLINED_FUNCTION_279()
{
  uint64_t v0;
  uint64_t v1;

  sub_21CF47EFC(v0, v1);
}

uint64_t OUTLINED_FUNCTION_280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 + 544));
}

uint64_t OUTLINED_FUNCTION_283()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_284()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_285()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_286()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_289()
{
  return type metadata accessor for JSIntentDispatcher();
}

uint64_t OUTLINED_FUNCTION_292()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_293()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 392))();
}

uint64_t OUTLINED_FUNCTION_294@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_296()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t OUTLINED_FUNCTION_298()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t OUTLINED_FUNCTION_301()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_302()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_303()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t OUTLINED_FUNCTION_304()
{
  return sub_21D7C42E4();
}

void OUTLINED_FUNCTION_305()
{
  sub_21D2CE56C();
}

unint64_t OUTLINED_FUNCTION_306()
{
  return sub_21CDBFB78();
}

uint64_t OUTLINED_FUNCTION_307()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_308(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_21CDD337C(a1, *(_QWORD *)(v3 + 112), a3);
}

void OUTLINED_FUNCTION_309()
{
  sub_21D68CB98();
}

void OUTLINED_FUNCTION_310()
{
  sub_21D68CB98();
}

uint64_t OUTLINED_FUNCTION_312()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_313()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_314(uint64_t a1)
{
  sub_21CF4EA80(a1);
}

void OUTLINED_FUNCTION_315()
{
  uint64_t v0;
  uint64_t *v1;

  sub_21CDBDA44(v0, v1);
}

unint64_t OUTLINED_FUNCTION_317()
{
  return sub_21CDBFC54();
}

void OUTLINED_FUNCTION_319()
{
  uint64_t v0;
  uint64_t *v1;

  sub_21CDBDA44(v0, v1);
}

uint64_t OUTLINED_FUNCTION_320()
{
  return swift_retain_n();
}

unint64_t OUTLINED_FUNCTION_321()
{
  return sub_21CDBFB78();
}

uint64_t OUTLINED_FUNCTION_322(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, v3, v1);
}

uint64_t OUTLINED_FUNCTION_323()
{
  return swift_task_alloc();
}

_QWORD *OUTLINED_FUNCTION_325()
{
  _QWORD *v0;
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_1(v0, v1);
}

uint64_t OUTLINED_FUNCTION_326()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_327()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_328()
{
  sub_21D68CB98();
}

unint64_t OUTLINED_FUNCTION_329()
{
  return sub_21CDBFB78();
}

uint64_t *sub_21CF4FB78(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_21D7C3B58();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t sub_21CF4FC00(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_21D7C3B58();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_release();
}

uint64_t sub_21CF4FC44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_21D7C3B58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  return a1;
}

uint64_t sub_21CF4FCA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_21D7C3B58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_21CF4FD10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_21D7C3B58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_21CF4FD6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_21D7C3B58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t sub_21CF4FDD0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21CF4FDDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = OUTLINED_FUNCTION_97_2();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_21CF4FE50()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21CF4FE5C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_97_2();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for LibraryPlaylistViewModel()
{
  uint64_t result;

  result = qword_255331DF0;
  if (!qword_255331DF0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21CF4FF04()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21D7C3B58();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_21CF4FF7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255331E28;
  if (!qword_255331E28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_255331E30);
    result = MEMORY[0x2207938C0](&unk_21D814EF8, v1);
    atomic_store(result, (unint64_t *)&qword_255331E28);
  }
  return result;
}

uint64_t sub_21CF4FFC0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[3] = a1;
  v2[4] = v1;
  v3 = sub_21D7C2FD0();
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21CF50020()
{
  _QWORD *v0;
  unsigned __int8 v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  _QWORD *v6;

  type metadata accessor for SubscriptionStatusCoordinator();
  type metadata accessor for LibraryPlaylistViewModel();
  type metadata accessor for ObjectGraph();
  sub_21D7C4D64();
  v0[8] = v0[2];
  v1 = sub_21D5A58A8();
  if (sub_21D4D2508(v1) == 0x6269726373627573 && v2 == 0xEA00000000006465)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v4 = sub_21D7C5D84();
  swift_bridgeObjectRelease();
  if ((v4 & 1) != 0)
  {
LABEL_8:
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F67E88);
    v5 = OUTLINED_FUNCTION_121_0();
    *(_OWORD *)(v5 + 16) = xmmword_21D7D1770;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255331E80);
    *(_QWORD *)(v5 + 32) = sub_21D7C2F64();
    *(_QWORD *)(v5 + 40) = sub_21D7C2EEC();
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F67E88);
  v5 = OUTLINED_FUNCTION_121_0();
  *(_OWORD *)(v5 + 16) = xmmword_21D7CCE20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255331E80);
  *(_QWORD *)(v5 + 32) = sub_21D7C2F64();
LABEL_9:
  sub_21D7C5334();
  v0[9] = v5;
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[6] + 104))(v0[7], *MEMORY[0x24BDDEBA8], v0[5]);
  v6 = (_QWORD *)swift_task_alloc();
  v0[10] = v6;
  OUTLINED_FUNCTION_97_2();
  sub_21CDBFDBC(&qword_255331E88, (uint64_t (*)(uint64_t))MEMORY[0x24BDDFB58], MEMORY[0x24BDDFB78]);
  *v6 = v0;
  v6[1] = sub_21CF50230;
  return sub_21D7C3054();
}

uint64_t sub_21CF50230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21CF502C4()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_6_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_21CF502F8()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_6_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_21CF5032C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BYTE v13[40];

  v5 = OUTLINED_FUNCTION_97_2();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = *(_QWORD *)(v2 + *(int *)(type metadata accessor for LibraryPlaylistViewModel() + 20));
  swift_retain();
  sub_21D40EA60((uint64_t)v13);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16))(&v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], a1, v5);
  v9 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v10 = swift_allocObject();
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v6 + 32))(v10 + v9, &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], v5);
  return sub_21CF5056C(v8, (uint64_t)v13, (uint64_t)sub_21CF5077C, v10, qword_255331E30, (uint64_t)sub_21CF507F8, a2);
}

uint64_t sub_21CF50444@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v4 = sub_21D7C3B58();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v15 - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)&v15 - v9, a1, v4);
  v11(v8, (uint64_t)v10, v4);
  v12 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v13 + v12, v8, v4);
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  *(_QWORD *)a2 = sub_21CF508A4;
  *(_QWORD *)(a2 + 8) = v13;
  *(_BYTE *)(a2 + 16) = 0;
  return result;
}

uint64_t sub_21CF50550@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_21CF5056C(a1, a2, a3, a4, qword_255331E90, (uint64_t)sub_21CF508EC, a5);
}

uint64_t sub_21CF5056C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X6>, uint64_t *a7@<X8>)
{
  uint64_t v14;
  int *v15;
  uint64_t *v16;
  uint64_t v17;
  __int128 v18;
  char *v19;
  _QWORD *v20;
  uint64_t result;
  _OWORD v22[2];
  uint64_t v23;

  type metadata accessor for MusicStackAuthority();
  sub_21CDBFDBC((unint64_t *)&qword_253F5EC58, (uint64_t (*)(uint64_t))type metadata accessor for MusicStackAuthority, (uint64_t)&protocol conformance descriptor for MusicStackAuthority);
  *a7 = sub_21D7C1500();
  a7[1] = v14;
  v15 = (int *)__swift_instantiateConcreteTypeFromMangledName(a5);
  v16 = (uint64_t *)((char *)a7 + v15[9]);
  *v16 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B50);
  swift_storeEnumTagMultiPayload();
  sub_21CF507AC(a2, (uint64_t)v22);
  v17 = OUTLINED_FUNCTION_121_0();
  v18 = v22[1];
  *(_OWORD *)(v17 + 16) = v22[0];
  *(_OWORD *)(v17 + 32) = v18;
  *(_QWORD *)(v17 + 48) = v23;
  *(_QWORD *)(v17 + 56) = a1;
  v19 = (char *)a7 + v15[10];
  *(_QWORD *)v19 = a6;
  *((_QWORD *)v19 + 1) = v17;
  v19[16] = 0;
  v20 = (uint64_t *)((char *)a7 + v15[11]);
  *v20 = a3;
  v20[1] = a4;
  *(uint64_t *)((char *)a7 + v15[13]) = a1;
  type metadata accessor for AppDestinationPageProviderBox();
  type metadata accessor for ObjectGraph();
  swift_retain_n();
  swift_retain();
  sub_21D7C4D64();
  *(uint64_t *)((char *)a7 + v15[12]) = *(_QWORD *)&v22[0];
  type metadata accessor for UserSocialProfileCoordinator(0);
  sub_21D7C4D64();
  swift_release();
  swift_release();
  result = sub_21CF50804(a2);
  *(uint64_t *)((char *)a7 + v15[14]) = *(_QWORD *)&v22[0];
  return result;
}

uint64_t sub_21CF50724(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_21CDFF604;
  return sub_21CF4FFC0(a1);
}

uint64_t sub_21CF5077C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_97_2();
  v3 = OUTLINED_FUNCTION_15_5(v2);
  return sub_21CF50444(v3, a1);
}

uint64_t sub_21CF507AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_253F5E4A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_21CF507F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;

  sub_21D767664(v20 + 16, *(_QWORD *)(v20 + 56), a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

uint64_t sub_21CF50804(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_253F5E4A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t objectdestroyTm_8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_97_2();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

void sub_21CF508A4()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_97_2();
  v1 = OUTLINED_FUNCTION_15_5(v0);
  sub_21D51BF84(v1);
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21CF508F0(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;

  swift_unknownObjectWeakInit();
  *(_QWORD *)(v6 + 16) = a1;
  swift_unknownObjectWeakAssign();
  *(_BYTE *)(v6 + 32) = a3;
  *(_QWORD *)(v6 + 48) = a5;
  *(_QWORD *)(v6 + 56) = a6;
  v11 = (void *)objc_opt_self();
  v12 = a1;
  swift_retain();
  v13 = objc_msgSend(v11, sel_defaultCenter);
  *(_QWORD *)(v6 + 40) = v13;
  v14 = MEMORY[0x220793A94](v6 + 24);
  v15 = v12;
  v16 = v13;
  swift_retain();
  objc_msgSend(v16, sel_addObserver_selector_name_object_, v6, sel_handleNotification_, v15, v14);

  swift_release();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_release();
  return v6;
}

uint64_t sub_21CF50A14()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + 40), sel_removeObserver_name_object_, v0, *(_QWORD *)(v0 + 16), MEMORY[0x220793A94](v0 + 24));
  swift_unknownObjectRelease();

  sub_21CDBB8D0(v0 + 24);
  swift_release();
  return v0;
}

uint64_t sub_21CF50A9C()
{
  sub_21CF50A14();
  return swift_deallocClassInstance();
}

uint64_t sub_21CF50ABC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v3 = OUTLINED_FUNCTION_0_36();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v15 - v8;
  if (*(_BYTE *)(v1 + 32) != 1)
    return (*(uint64_t (**)(uint64_t))(v1 + 48))(a1);
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v15 - v8, a1, v3);
  sub_21CDD42A0();
  v11 = swift_allocObject();
  swift_weakInit();
  v10(v7, (uint64_t)v9, v3);
  v12 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v11;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v13 + v12, v7, v3);
  swift_retain();
  sub_21D57F95C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  return swift_release();
}

uint64_t sub_21CF50C34(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  void (*v4)(uint64_t);

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = *(void (**)(uint64_t))(result + 48);
    swift_retain();
    swift_release();
    v4(a2);
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for NotificationObserver()
{
  return objc_opt_self();
}

uint64_t sub_21CF50D70()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_21CF50D94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = OUTLINED_FUNCTION_0_36();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_21CF50E04()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_0_36() - 8) + 80);
  return sub_21CF50C34(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t OUTLINED_FUNCTION_0_36()
{
  return sub_21D7BF3A0();
}

id sub_21CF50E38(_QWORD *a1, void *a2)
{
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  uint64_t v12;

  v3 = a1[3];
  if (v3)
  {
    v5 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v6 = *(_QWORD *)(v3 - 8);
    MEMORY[0x24BDAC7A8](v5);
    v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    v9 = sub_21D7C5D6C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v9 = 0;
  }
  v10 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_valueWithObject_inContext_, v9, a2);
  swift_unknownObjectRelease();

  return v10;
}

void sub_21CF50F34(void *a1)
{
  void *v1;
  void *v2;
  id v3;

  v3 = a1;
  v2 = (void *)sub_21D7C50C4();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setObject_forKeyedSubscript_, v3, v2);

}

JSValue __swiftcall UInt.makeValue(in:)(JSContext in)
{
  uint64_t v1;

  return (JSValue)sub_21CF50FE0(in.super.isa, v1, MEMORY[0x24BEE1E88]);
}

JSValue sub_21CF50FB8(JSContext in)
{
  return UInt.makeValue(in:)(in);
}

JSValue __swiftcall UInt64.makeValue(in:)(JSContext in)
{
  uint64_t v1;

  return (JSValue)sub_21CF50FE0(in.super.isa, v1, MEMORY[0x24BEE4568]);
}

JSValue sub_21CF50FCC(JSContext in)
{
  return UInt64.makeValue(in:)(in);
}

JSValue __swiftcall Int.makeValue(in:)(JSContext in)
{
  uint64_t v1;

  return (JSValue)sub_21CF50FE0(in.super.isa, v1, MEMORY[0x24BEE1768]);
}

id sub_21CF50FE0(void *a1, uint64_t a2, uint64_t a3)
{
  id v6;
  id result;
  _QWORD v8[4];

  sub_21CDD7BFC();
  v8[3] = a3;
  v8[0] = a2;
  v6 = a1;
  result = sub_21CF50E38(v8, a1);
  if (!result)
    __break(1u);
  return result;
}

JSValue sub_21CF51044(JSContext in)
{
  return Int.makeValue(in:)(in);
}

uint64_t sub_21CF5104C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return __swift_getEnumTagSinglePayload(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_21CF510FC + 4 * byte_21D7D1850[(v8 - 1)]))();
}

void sub_21CF51148(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t type metadata accessor for JSBridgedProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for JSBridgedProperty);
}

uint64_t type metadata accessor for JSBridgedValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for JSBridgedValue);
}

uint64_t sub_21CF51308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t result;

  sub_21D7C28A4();
  v1 = sub_21D7C28D4();
  swift_release();
  sub_21D7C28C8();
  sub_21D7C28D4();
  OUTLINED_FUNCTION_0_37();
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = v0;
  v3 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
  swift_retain();
  swift_retain();
  v4 = sub_21D6AD5FC((uint64_t)sub_21CF51700, v2);
  MEMORY[0x22078FAA4](v4);
  OUTLINED_FUNCTION_1_41();
  result = swift_release();
  qword_253F81EF0 = 0x3FF0000000000000;
  byte_253F81EF8 = 1;
  qword_253F81F00 = (uint64_t)v3;
  return result;
}

uint64_t sub_21CF513DC(uint64_t a1)
{
  return sub_21CF513FC(-8.0, a1, qword_253F81F28);
}

uint64_t sub_21CF513EC(uint64_t a1)
{
  return sub_21CF513FC(-5.0, a1, qword_25538E350);
}

uint64_t sub_21CF513FC(double a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v19;

  v5 = sub_21D7C13F8();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (_OWORD *)((char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_21D7C13EC();
  __swift_allocate_value_buffer(v8, a3);
  v9 = __swift_project_value_buffer(v8, (uint64_t)a3);
  v10 = (char *)v7 + *(int *)(v5 + 20);
  v11 = *MEMORY[0x24BDEEB68];
  v12 = sub_21D7C18FC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  __asm { FMOV            V0.2D, #5.0 }
  *v7 = _Q0;
  sub_21CF514FC((uint64_t)v7, v9);
  *(double *)(v9 + *(int *)(v8 + 20)) = a1;
  return sub_21CF51540((uint64_t)v7);
}

void sub_21CF514EC()
{
  qword_253F81F18 = 0x4014000000000000;
}

uint64_t sub_21CF514FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21D7C13F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21CF51540(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_21D7C13F8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_21CF5157C()
{
  qword_253F81F20 = 0x401C000000000000;
}

void sub_21CF5158C()
{
  qword_253F81F08 = 0x4024000000000000;
}

void sub_21CF5159C()
{
  qword_25538E370 = 0x402C000000000000;
}

double sub_21CF515AC()
{
  uint64_t v0;
  double result;

  sub_21D7C28A4();
  sub_21D7C28D4();
  OUTLINED_FUNCTION_1_41();
  result = 0.0;
  xmmword_253F81EC0 = xmmword_21D7D19A0;
  qword_253F81ED0 = 0x4024000000000000;
  qword_253F81ED8 = v0;
  qword_253F81EE0 = 0xC02E000000000000;
  return result;
}

uint64_t sub_21CF51600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255331F18);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_21D7CCA10;
  sub_21D7C28A4();
  sub_21D7C28D4();
  OUTLINED_FUNCTION_0_37();
  *(_QWORD *)(v1 + 32) = v0;
  sub_21D7C28A4();
  sub_21D7C28D4();
  OUTLINED_FUNCTION_0_37();
  *(_QWORD *)(v1 + 40) = v0;
  sub_21D7C28A4();
  sub_21D7C28D4();
  OUTLINED_FUNCTION_0_37();
  *(_QWORD *)(v1 + 48) = v0;
  sub_21D7C28A4();
  sub_21D7C28D4();
  OUTLINED_FUNCTION_0_37();
  *(_QWORD *)(v1 + 56) = v0;
  result = sub_21D7C5334();
  qword_25538E388 = v1;
  return result;
}

uint64_t sub_21CF516D4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21CF51700(void *a1)
{
  return sub_21D4DC078(a1);
}

uint64_t OUTLINED_FUNCTION_0_37()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_1_41()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_0_38(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

unint64_t sub_21CF5172C()
{
  unint64_t result;

  result = qword_255331F20;
  if (!qword_255331F20)
  {
    result = MEMORY[0x2207938C0](&unk_21D7F4798, &_s14descr24E109CE1V10LockupViewVN);
    atomic_store(result, (unint64_t *)&qword_255331F20);
  }
  return result;
}

uint64_t sub_21CF51768()
{
  return sub_21CDBFDBC(qword_255331F40, type metadata accessor for VerticalVideoLockupView, (uint64_t)&unk_21D7F03B0);
}

unint64_t sub_21CF51798()
{
  unint64_t result;

  result = qword_255331F60;
  if (!qword_255331F60)
  {
    result = MEMORY[0x2207938C0](&unk_21D7E4F30, &type metadata for TVMovieDescriptionView);
    atomic_store(result, (unint64_t *)&qword_255331F60);
  }
  return result;
}

uint64_t sub_21CF517D4()
{
  return sub_21CDBFDBC(qword_255331F80, type metadata accessor for TrackShelfLockupView, (uint64_t)&unk_21D7FA878);
}

uint64_t sub_21CF51800()
{
  return sub_21CDBFDBC(qword_255331FA0, type metadata accessor for TopSearchLockupView, (uint64_t)&unk_21D7CE2E0);
}

uint64_t sub_21CF5182C()
{
  return sub_21CDBFDBC(qword_255331FC0, type metadata accessor for TextListView, (uint64_t)&unk_21D7DED38);
}

uint64_t sub_21CF51858()
{
  return sub_21CDBFDBC(qword_255331FE0, type metadata accessor for SuperHeroLockupView, (uint64_t)&unk_21D7E9F48);
}

uint64_t sub_21CF51884()
{
  return sub_21CDBFDBC(qword_255332000, type metadata accessor for SuggestionItemView, (uint64_t)&unk_21D7F8514);
}

uint64_t sub_21CF518B0()
{
  return sub_21CDBFDBC(&qword_253F60668, type metadata accessor for SquareLockupView, (uint64_t)&unk_21D7F9AE0);
}

unint64_t sub_21CF518E0()
{
  unint64_t result;

  result = qword_255332038;
  if (!qword_255332038)
  {
    result = MEMORY[0x2207938C0](&unk_21D7E8A90, &type metadata for SocialProfileHorizontalLockupView);
    atomic_store(result, (unint64_t *)&qword_255332038);
  }
  return result;
}

uint64_t sub_21CF5191C()
{
  return sub_21CDBFDBC(qword_255332058, type metadata accessor for SocialCardLockupView, (uint64_t)&unk_21D7FE2C0);
}

uint64_t sub_21CF51948()
{
  return sub_21CDBFDBC(qword_255332078, type metadata accessor for PosterLockupView, (uint64_t)&unk_21D7D2770);
}

uint64_t sub_21CF51974()
{
  return sub_21CDBFDBC(qword_255332098, (uint64_t (*)(uint64_t))type metadata accessor for LinkView, (uint64_t)&unk_21D815618);
}

unint64_t sub_21CF519A4()
{
  unint64_t result;

  result = qword_2553320B8;
  if (!qword_2553320B8)
  {
    result = MEMORY[0x2207938C0](&unk_21D8031B0, &type metadata for PlaylistDetailHeaderView);
    atomic_store(result, (unint64_t *)&qword_2553320B8);
  }
  return result;
}

uint64_t sub_21CF519E0()
{
  return sub_21CDBFDBC(qword_2553320D8, type metadata accessor for LiveRadioPosterLockupView, (uint64_t)&unk_21D7F7AD0);
}

uint64_t sub_21CF51A0C()
{
  return sub_21CDBFDBC(qword_2553320F8, type metadata accessor for HorizontalLockupView, (uint64_t)&unk_21D805180);
}

uint64_t sub_21CF51A38()
{
  return sub_21CDBFDBC(qword_255332118, type metadata accessor for FlowcaseLockupView, (uint64_t)&unk_21D7D7E30);
}

uint64_t sub_21CF51A64()
{
  return sub_21CDBFDBC(qword_255332138, type metadata accessor for BubbleLockupView, (uint64_t)&unk_21D7EAD80);
}

uint64_t sub_21CF51A90()
{
  return sub_21CDBFDBC(&qword_253F5FD78, (uint64_t (*)(uint64_t))type metadata accessor for BrickLockupView, (uint64_t)&unk_21D7DE7E8);
}

uint64_t sub_21CF51ABC()
{
  return sub_21CDBFDBC(qword_255332170, type metadata accessor for ArtistLatestReleaseLockupView, (uint64_t)&unk_21D809D60);
}

unint64_t sub_21CF51AEC()
{
  unint64_t result;

  result = qword_255332190;
  if (!qword_255332190)
  {
    result = MEMORY[0x2207938C0](&unk_21D7F7960, &type metadata for AlbumDetailHeaderView);
    atomic_store(result, (unint64_t *)&qword_255332190);
  }
  return result;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s10EnablementVwet(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 65281 <= 0xFFFEFFFF)
      v2 = 2;
    else
      v2 = 4;
    if (a2 + 65281 < 0xFF0000)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    else
    {
      v4 = *((unsigned __int8 *)a1 + 2);
      if (!*((_BYTE *)a1 + 2))
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 16)) - 65282;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s10EnablementVwst(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21CF51C1C + 4 * byte_21D7D1C45[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_21CF51C50 + 4 * byte_21D7D1C40[v4]))();
}

uint64_t sub_21CF51C50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_21CF51C58(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x21CF51C60);
  return result;
}

uint64_t sub_21CF51C6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x21CF51C74);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21CF51C78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_21CF51C80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *_s10EnablementVMa()
{
  return &_s10EnablementVN;
}

ValueMetadata *_s16EnablementIntentVMa()
{
  return &_s16EnablementIntentVN;
}

id sub_21CF51CAC(uint64_t a1)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_valueWithNewObjectInContext_, a1);
  if (!result)
    __break(1u);
  return result;
}

uint64_t sub_21CF51CF4(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 1684957547 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_21D7C5D84();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t OUTLINED_FUNCTION_23_8()
{
  return 1684957547;
}

uint64_t sub_21CF51D78(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553321D0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21CF522B0();
  sub_21D7C5EBC();
  sub_21D7C5D00();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_21CF51E68(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553321C0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21CF522B0();
  sub_21D7C5EB0();
  if (!v1)
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return 0xD00000000000001FLL;
}

uint64_t sub_21CF51F5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21CF51CF4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_21CF51F84()
{
  sub_21CF522B0();
  return sub_21D7C5ED4();
}

uint64_t sub_21CF51FAC()
{
  sub_21CF522B0();
  return sub_21D7C5EE0();
}

uint64_t sub_21CF51FD8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_21D7C4C20();
  return v1;
}

uint64_t sub_21CF52004@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  return sub_21D38C398(*v1, v1[1], a1);
}

unint64_t sub_21CF5200C@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  unint64_t result;
  unint64_t v5;

  result = sub_21CF51E68(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_21CF52034(_QWORD *a1)
{
  return sub_21CF51D78(a1);
}

unint64_t sub_21CF5204C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_21CF52080();
  a1[2] = sub_21CF520BC();
  result = sub_21CF520F8();
  a1[3] = result;
  return result;
}

unint64_t sub_21CF52080()
{
  unint64_t result;

  result = qword_253F601F0;
  if (!qword_253F601F0)
  {
    result = MEMORY[0x2207938C0](&unk_21D7D1D48, &_s16EnablementIntentVN);
    atomic_store(result, (unint64_t *)&qword_253F601F0);
  }
  return result;
}

unint64_t sub_21CF520BC()
{
  unint64_t result;

  result = qword_2553321B0;
  if (!qword_2553321B0)
  {
    result = MEMORY[0x2207938C0](&unk_21D7D1C9C, &_s16EnablementIntentVN);
    atomic_store(result, (unint64_t *)&qword_2553321B0);
  }
  return result;
}

unint64_t sub_21CF520F8()
{
  unint64_t result;

  result = qword_2553321B8;
  if (!qword_2553321B8)
  {
    result = MEMORY[0x2207938C0](&unk_21D7D1C74, &_s16EnablementIntentVN);
    atomic_store(result, (unint64_t *)&qword_2553321B8);
  }
  return result;
}

uint64_t sub_21CF52134(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char v10;
  char v11;
  uint64_t v12;
  _QWORD v14[2];

  v4 = sub_21D7C3F6C();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v14 - v8;
  sub_21D7C3F78();
  v10 = sub_21D7C3EE8();
  OUTLINED_FUNCTION_0_39((uint64_t)v9);
  sub_21D7C3F78();
  v11 = sub_21D7C3EE8();
  v12 = sub_21D7C4098();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a2, v12);
  OUTLINED_FUNCTION_0_39(a1);
  OUTLINED_FUNCTION_0_39((uint64_t)v7);
  return v10 & 1 | ((v11 & 1) << 8);
}

uint64_t sub_21CF52274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_21CF52134(a1, a2);
  if (!v3)
  {
    *a3 = result & 1;
    a3[1] = (unsigned __int16)result > 0xFFu;
  }
  return result;
}

unint64_t sub_21CF522B0()
{
  unint64_t result;

  result = qword_2553321C8;
  if (!qword_2553321C8)
  {
    result = MEMORY[0x2207938C0](&unk_21D7D1E5C, &_s16EnablementIntentV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2553321C8);
  }
  return result;
}

uint64_t _s16EnablementIntentV10CodingKeysOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_21CF5232C + 4 * byte_21D7D1C4A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_21CF5234C + 4 * byte_21D7D1C4F[v4]))();
}

_BYTE *sub_21CF5232C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_21CF5234C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21CF52354(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21CF5235C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21CF52364(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21CF5236C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s16EnablementIntentV10CodingKeysOMa()
{
  return &_s16EnablementIntentV10CodingKeysON;
}

unint64_t sub_21CF5238C()
{
  unint64_t result;

  result = qword_2553321D8;
  if (!qword_2553321D8)
  {
    result = MEMORY[0x2207938C0](&unk_21D7D1E34, &_s16EnablementIntentV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2553321D8);
  }
  return result;
}

unint64_t sub_21CF523CC()
{
  unint64_t result;

  result = qword_2553321E0;
  if (!qword_2553321E0)
  {
    result = MEMORY[0x2207938C0](&unk_21D7D1DA4, &_s16EnablementIntentV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2553321E0);
  }
  return result;
}

unint64_t sub_21CF5240C()
{
  unint64_t result;

  result = qword_2553321E8;
  if (!qword_2553321E8)
  {
    result = MEMORY[0x2207938C0](&unk_21D7D1DCC, &_s16EnablementIntentV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2553321E8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_39(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

void sub_21CF52450()
{
  sub_21CF531A8();
}

void sub_21CF52464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_22();
  v21 = v0;
  v19[1] = v2;
  v4 = v3 & 1;
  v20 = sub_21D7C48F0();
  v5 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_62_2();
  type metadata accessor for TopSearchLockup();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_69();
  v9 = v8 - v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
  OUTLINED_FUNCTION_21();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v19 - v14;
  sub_21D55A6C8();
  sub_21CDC314C(v9, (uint64_t)v13, &qword_253F67608);
  sub_21CE39D98(v9, (uint64_t (*)(_QWORD))type metadata accessor for TopSearchLockup);
  v16 = OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_27_3((uint64_t)v13, 1, v16);
  if (v17)
  {
    sub_21CDBDA44((uint64_t)v13, &qword_253F67608);
    v18 = 1;
  }
  else
  {
    sub_21D427A80(v4, (uint64_t)v15);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v13, v16);
    v18 = 0;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v15, v18, 1, v16);
  sub_21D7C48E4();
  type metadata accessor for TopSearchLockupView(0);
  sub_21CDB6D4C(&qword_253F61490, (void (*)(uint64_t))type metadata accessor for TopSearchLockupView);
  OUTLINED_FUNCTION_6_26();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v20);
  sub_21CDBDA44((uint64_t)v15, &qword_253F67608);
  OUTLINED_FUNCTION_9();
}

void sub_21CF52640()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_22();
  v15 = v0;
  v3 = v2;
  v4 = OUTLINED_FUNCTION_10_17();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_62_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_8_20();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v14 - v8;
  sub_21CDC314C(v3, v0, &qword_253F67608);
  v10 = OUTLINED_FUNCTION_9_8();
  v11 = OUTLINED_FUNCTION_27_3(v0, 1, v10);
  if (v12)
  {
    OUTLINED_FUNCTION_103(v11, &qword_253F67608);
    v13 = 1;
  }
  else
  {
    OUTLINED_FUNCTION_26_11((uint64_t)v9);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v0, v10);
    v13 = 0;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v9, v13, 1, v10);
  sub_21D7C48E4();
  type metadata accessor for SuggestionItemView(0);
  sub_21CDB6D4C(&qword_253F61050, (void (*)(uint64_t))type metadata accessor for SuggestionItemView);
  sub_21D7C21CC();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v4);
  sub_21CDBDA44((uint64_t)v9, &qword_253F67608);
  OUTLINED_FUNCTION_9();
}

void sub_21CF527BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void);
  uint64_t *v5;
  uint64_t *v6;
  void (*v7)(void);
  void (*v8)(void);
  void (*v9)(_QWORD);
  void (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21[2];
  uint64_t v22;
  void (*v23)(void);
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_22();
  v23 = v4;
  v21[0] = v5;
  v21[1] = v6;
  v8 = v7;
  v10 = v9;
  v25 = v0;
  v24 = OUTLINED_FUNCTION_10_17();
  v22 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_40_2();
  v10(0);
  OUTLINED_FUNCTION_11_20();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v21 - v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_22_11();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_19_12();
  v8();
  sub_21CDC314C((uint64_t)v13, v1, &qword_253F67608);
  sub_21CE39D98((uint64_t)v13, (uint64_t (*)(_QWORD))v10);
  v16 = OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_27_3(v1, 1, v16);
  if (v17)
  {
    sub_21CDBDA44(v1, &qword_253F67608);
    v19 = 1;
  }
  else
  {
    OUTLINED_FUNCTION_40_8(v3);
    v18 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v1, v16);
    v19 = 0;
  }
  OUTLINED_FUNCTION_12_13(v18, v19);
  __swift_instantiateConcreteTypeFromMangledName(v21[0]);
  v23();
  OUTLINED_FUNCTION_6_26();
  v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v2, v24);
  OUTLINED_FUNCTION_111(v20, &qword_253F67608);
  OUTLINED_FUNCTION_9();
}

void sub_21CF5294C(char a1@<W2>, uint64_t a2@<X8>)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[2];
  uint64_t v18;

  v17[1] = a2;
  v2 = a1 & 1;
  v18 = sub_21D7C48F0();
  v3 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SquareLockup();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v17 - v13;
  sub_21D55A9FC();
  sub_21CDC314C((uint64_t)&v8[*(int *)(v6 + 44)], (uint64_t)v11, &qword_253F67608);
  sub_21CE39D98((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for SquareLockup);
  v15 = sub_21D7C4668();
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v15) == 1)
  {
    sub_21CDBDA44((uint64_t)v11, &qword_253F67608);
    v16 = 1;
  }
  else
  {
    sub_21D427A80(v2, (uint64_t)v14);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v11, v15);
    v16 = 0;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v14, v16, 1, v15);
  sub_21D7C48E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553325A0);
  sub_21CF589B4();
  sub_21D7C21CC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v18);
  sub_21CDBDA44((uint64_t)v14, &qword_253F67608);
}

void sub_21CF52B70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_22();
  v4 = v3;
  v6 = v5;
  OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_36_9();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_40_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_8_20();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_19_12();
  sub_21CDC314C(v6, v0, &qword_253F67608);
  v10 = OUTLINED_FUNCTION_9_8();
  v11 = OUTLINED_FUNCTION_27_3(v0, 1, v10);
  if (v12)
  {
    OUTLINED_FUNCTION_103(v11, &qword_253F67608);
    v14 = 1;
  }
  else
  {
    OUTLINED_FUNCTION_26_11(v2);
    v13 = OUTLINED_FUNCTION_21_13();
    v14 = 0;
  }
  OUTLINED_FUNCTION_12_13(v13, v14);
  __swift_instantiateConcreteTypeFromMangledName(v4);
  OUTLINED_FUNCTION_24_9();
  OUTLINED_FUNCTION_4_26();
  v15 = OUTLINED_FUNCTION_27_12(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_111(v15, &qword_253F67608);
  OUTLINED_FUNCTION_9();
}

void sub_21CF52C6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t (*v3)(_QWORD);
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;

  OUTLINED_FUNCTION_22();
  v18 = v2;
  v4 = v3;
  v6 = v5;
  v7 = OUTLINED_FUNCTION_10_17();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_40_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_8_20();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_19_12();
  v11 = v4(0);
  sub_21CDC314C(v6 + *(int *)(v11 + 20), v0, &qword_253F67608);
  v12 = OUTLINED_FUNCTION_9_8();
  v13 = OUTLINED_FUNCTION_27_3(v0, 1, v12);
  if (v14)
  {
    OUTLINED_FUNCTION_103(v13, &qword_253F67608);
    v16 = 1;
  }
  else
  {
    OUTLINED_FUNCTION_26_11(v1);
    v15 = OUTLINED_FUNCTION_21_13();
    v16 = 0;
  }
  OUTLINED_FUNCTION_12_13(v15, v16);
  __swift_instantiateConcreteTypeFromMangledName(v18);
  OUTLINED_FUNCTION_24_9();
  OUTLINED_FUNCTION_4_26();
  v17 = OUTLINED_FUNCTION_27_12(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  OUTLINED_FUNCTION_111(v17, &qword_253F67608);
  OUTLINED_FUNCTION_9();
}

void sub_21CF52D80(char a1@<W2>, uint64_t a2@<X8>)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[2];
  uint64_t v18;

  v17[1] = a2;
  v2 = a1 & 1;
  v18 = sub_21D7C48F0();
  v3 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for HorizontalLockup();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v17 - v13;
  sub_21D55ABE8();
  sub_21CDC314C((uint64_t)&v8[*(int *)(v6 + 20)], (uint64_t)v11, &qword_253F67608);
  sub_21CE39D98((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for HorizontalLockup);
  v15 = sub_21D7C4668();
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v15) == 1)
  {
    sub_21CDBDA44((uint64_t)v11, &qword_253F67608);
    v16 = 1;
  }
  else
  {
    sub_21D427A80(v2, (uint64_t)v14);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v11, v15);
    v16 = 0;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v14, v16, 1, v15);
  sub_21D7C48E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553326C8);
  sub_21CF58EE4();
  sub_21D7C21CC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v18);
  sub_21CDBDA44((uint64_t)v14, &qword_253F67608);
}

void sub_21CF52FA4()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t *v2;
  void (*v3)(void);
  void (*v4)(void);
  void (*v5)(void);
  uint64_t (*v6)(_QWORD);
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  _DWORD v27[4];
  uint64_t v28;
  uint64_t *v29;
  void (*v30)(void);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;

  OUTLINED_FUNCTION_22();
  v29 = v2;
  v30 = v3;
  v5 = v4;
  v7 = v6;
  v28 = v8;
  v33 = v9;
  v27[3] = v10 & 1;
  v11 = sub_21D7C48F0();
  v31 = *(_QWORD *)(v11 - 8);
  v32 = v11;
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_69();
  v14 = v13 - v12;
  v15 = v7(0);
  OUTLINED_FUNCTION_11_20();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v27 - v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_22_11();
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)v27 - v21;
  v23 = v0[1];
  v34 = *v0;
  v35 = v23;
  v36 = *((_QWORD *)v0 + 4);
  v5();
  sub_21CDC314C((uint64_t)&v18[*(int *)(v15 + 20)], v1, &qword_253F67608);
  sub_21CE39D98((uint64_t)v18, v7);
  v24 = OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_27_3(v1, 1, v24);
  if (v25)
  {
    sub_21CDBDA44(v1, &qword_253F67608);
    v26 = 1;
  }
  else
  {
    OUTLINED_FUNCTION_40_8((uint64_t)v22);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v1, v24);
    v26 = 0;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v22, v26, 1, v24);
  sub_21D7C48E4();
  __swift_instantiateConcreteTypeFromMangledName(v29);
  v30();
  sub_21D7C21CC();
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v14, v32);
  sub_21CDBDA44((uint64_t)v22, &qword_253F67608);
  OUTLINED_FUNCTION_9();
}

void sub_21CF53194()
{
  sub_21CF531A8();
}

void sub_21CF531A8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;

  OUTLINED_FUNCTION_22();
  v18[2] = v4;
  v19 = v0;
  v6 = v5;
  v18[1] = v7;
  OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_36_9();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_40_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
  OUTLINED_FUNCTION_21();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_19_12();
  v13 = (void *)sub_21D7C0978();
  sub_21D7C5694();

  v14 = OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_27_3((uint64_t)v12, 1, v14);
  if (v15)
  {
    sub_21CDBDA44((uint64_t)v12, &qword_253F67608);
    v16 = 1;
  }
  else
  {
    sub_21D427A80(v1, v3);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
    v16 = 0;
  }
  __swift_storeEnumTagSinglePayload(v3, v16, 1, v14);
  sub_21D7C48E4();
  __swift_instantiateConcreteTypeFromMangledName(v6);
  OUTLINED_FUNCTION_24_9();
  OUTLINED_FUNCTION_4_26();
  v17 = OUTLINED_FUNCTION_27_12(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_111(v17, &qword_253F67608);
  OUTLINED_FUNCTION_9();
}

uint64_t sub_21CF532EC()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for RegistrationProvider();
  v0 = swift_allocObject();
  result = sub_21CF53B00();
  qword_25538E390 = v0;
  return result;
}

uint64_t sub_21CF53328()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332800);
  OUTLINED_FUNCTION_46(v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332808);
  OUTLINED_FUNCTION_46(v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332810);
  OUTLINED_FUNCTION_46(v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332818);
  OUTLINED_FUNCTION_46(v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332820);
  OUTLINED_FUNCTION_46(v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332828);
  OUTLINED_FUNCTION_46(v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332830);
  OUTLINED_FUNCTION_46(v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332838);
  OUTLINED_FUNCTION_46(v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332840);
  OUTLINED_FUNCTION_46(v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332848);
  OUTLINED_FUNCTION_46(v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332850);
  OUTLINED_FUNCTION_46(v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332858);
  OUTLINED_FUNCTION_46(v12);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332860);
  OUTLINED_FUNCTION_46(v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332868);
  OUTLINED_FUNCTION_18_9(v14);
  OUTLINED_FUNCTION_25_8(v0 + OBJC_IVAR____TtC7MusicUI20RegistrationProvider_largeSquareLockup);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332870);
  OUTLINED_FUNCTION_46(v15);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332878);
  OUTLINED_FUNCTION_46(v16);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332880);
  OUTLINED_FUNCTION_46(v17);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332888);
  OUTLINED_FUNCTION_46(v18);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332890);
  OUTLINED_FUNCTION_46(v19);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332898);
  OUTLINED_FUNCTION_18_9(v20);
  OUTLINED_FUNCTION_25_8(v0 + OBJC_IVAR____TtC7MusicUI20RegistrationProvider_verticalVideoLockup);
  OUTLINED_FUNCTION_25_8(v0 + OBJC_IVAR____TtC7MusicUI20RegistrationProvider_largeVerticalVideoLockup);
  return v0;
}

uint64_t sub_21CF535AC()
{
  sub_21CF53328();
  return swift_deallocClassInstance();
}

uint64_t sub_21CF535D0()
{
  return type metadata accessor for RegistrationProvider();
}

uint64_t type metadata accessor for RegistrationProvider()
{
  uint64_t result;

  result = qword_255332218;
  if (!qword_255332218)
    return swift_getSingletonMetadata();
  return result;
}

void sub_21CF53610()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;

  sub_21CF53AB8(319, &qword_255332228, &qword_255332230);
  if (v0 <= 0x3F)
  {
    sub_21CF53A70(319, &qword_255332238, &qword_255332240);
    if (v1 <= 0x3F)
    {
      sub_21CF53A70(319, &qword_255332248, &qword_255332250);
      if (v2 <= 0x3F)
      {
        sub_21CF53AB8(319, &qword_255332258, &qword_255332260);
        if (v3 <= 0x3F)
        {
          sub_21CF53A70(319, &qword_255332268, &qword_255332270);
          if (v4 <= 0x3F)
          {
            sub_21CF53AB8(319, &qword_255332278, &qword_255332280);
            if (v5 <= 0x3F)
            {
              sub_21CF53AB8(319, &qword_255332288, &qword_255332290);
              if (v6 <= 0x3F)
              {
                sub_21CF53AB8(319, &qword_255332298, &qword_2553322A0);
                if (v7 <= 0x3F)
                {
                  sub_21CF53A70(319, &qword_2553322A8, &qword_2553322B0);
                  if (v8 <= 0x3F)
                  {
                    sub_21CF53A70(319, &qword_2553322B8, &qword_2553322C0);
                    if (v9 <= 0x3F)
                    {
                      sub_21CF53A70(319, &qword_2553322C8, &qword_2553322D0);
                      if (v10 <= 0x3F)
                      {
                        sub_21CF53A70(319, &qword_2553322D8, &qword_2553322E0);
                        if (v11 <= 0x3F)
                        {
                          sub_21CF53AB8(319, &qword_2553322E8, &qword_2553322F0);
                          if (v12 <= 0x3F)
                          {
                            sub_21CF53AB8(319, &qword_2553322F8, &qword_255332300);
                            if (v13 <= 0x3F)
                            {
                              sub_21CF53A70(319, &qword_255332308, &qword_255332310);
                              if (v14 <= 0x3F)
                              {
                                sub_21CF53AB8(319, &qword_255332318, &qword_255332320);
                                if (v15 <= 0x3F)
                                {
                                  sub_21CF53AB8(319, &qword_255332328, &qword_255332330);
                                  if (v16 <= 0x3F)
                                  {
                                    sub_21CF53A70(319, &qword_255332338, &qword_255332340);
                                    if (v17 <= 0x3F)
                                    {
                                      sub_21CF53AB8(319, &qword_255332348, &qword_255332350);
                                      if (v18 <= 0x3F)
                                      {
                                        sub_21CF53AB8(319, &qword_255332358, qword_255332360);
                                        if (v19 <= 0x3F)
                                          swift_updateClassMetadata2();
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_21CF53A70(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  unint64_t *v3;
  void (*v4)(uint64_t);
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    OUTLINED_FUNCTION_33_6(0, (uint64_t)a2, a3);
    v4(255);
    v5 = OUTLINED_FUNCTION_28_9();
    if (!v6)
      atomic_store(v5, v3);
  }
  OUTLINED_FUNCTION_98();
}

void sub_21CF53AB8(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  unint64_t *v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    OUTLINED_FUNCTION_33_6(0, (uint64_t)a2, a3);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(v4);
    v5 = OUTLINED_FUNCTION_28_9();
    if (!v6)
      atomic_store(v5, v3);
  }
  OUTLINED_FUNCTION_98();
}

uint64_t sub_21CF53B00()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255332230);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5F108);
  OUTLINED_FUNCTION_1_42();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255332240);
  OUTLINED_FUNCTION_13_12();
  type metadata accessor for BrickLockup();
  OUTLINED_FUNCTION_1_42();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255332250);
  OUTLINED_FUNCTION_13_12();
  type metadata accessor for EmptyStateLockup();
  OUTLINED_FUNCTION_1_42();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255332260);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5F168);
  OUTLINED_FUNCTION_1_42();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255332270);
  OUTLINED_FUNCTION_13_12();
  type metadata accessor for GroupedTextListLockup();
  OUTLINED_FUNCTION_1_42();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255332280);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5F1D8);
  OUTLINED_FUNCTION_1_42();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255332290);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5F1B8);
  OUTLINED_FUNCTION_1_42();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553322A0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5F1E8);
  OUTLINED_FUNCTION_1_42();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553322B0);
  OUTLINED_FUNCTION_13_12();
  type metadata accessor for InlineUpsell();
  OUTLINED_FUNCTION_1_42();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553322C0);
  OUTLINED_FUNCTION_13_12();
  type metadata accessor for LinkComponentModel();
  OUTLINED_FUNCTION_1_42();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553322D0);
  OUTLINED_FUNCTION_13_12();
  type metadata accessor for ParagraphComponentModel();
  OUTLINED_FUNCTION_1_42();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553322E0);
  OUTLINED_FUNCTION_13_12();
  type metadata accessor for PopoverSelector();
  OUTLINED_FUNCTION_1_42();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553322F0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5F118);
  OUTLINED_FUNCTION_1_42();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255332300);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5F140);
  OUTLINED_FUNCTION_5_28();
  OUTLINED_FUNCTION_5_28();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255332310);
  OUTLINED_FUNCTION_13_12();
  type metadata accessor for SuggestionItem();
  OUTLINED_FUNCTION_1_42();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255332320);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5F158);
  OUTLINED_FUNCTION_1_42();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255332330);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5F188);
  OUTLINED_FUNCTION_1_42();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255332340);
  OUTLINED_FUNCTION_13_12();
  type metadata accessor for TextListComponentModel();
  OUTLINED_FUNCTION_1_42();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255332350);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5F0F8);
  OUTLINED_FUNCTION_1_42();
  __swift_instantiateConcreteTypeFromMangledName(qword_255332360);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5F1C8);
  OUTLINED_FUNCTION_5_28();
  OUTLINED_FUNCTION_5_28();
  OUTLINED_FUNCTION_5_28();
  return v0;
}

void sub_21CF53F7C(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t))
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;

  v7 = (uint64_t)v3 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v3) + 0x60);
  swift_beginAccess();
  sub_21CF59254(a1, v7, a2);
  v8 = swift_endAccess();
  a3(v8);
  sub_21CDBDA44(a1, a2);
}

uint64_t sub_21CF54010(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  _QWORD *v2;
  _QWORD *v5;
  uint64_t v6;

  v5 = (_QWORD *)((char *)v2 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v2) + 0x60));
  swift_beginAccess();
  *v5 = a1;
  v6 = swift_release();
  return a2(v6);
}

uint64_t sub_21CF54080()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t *v6;
  uint64_t result;
  uint64_t v8;
  double v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14[5];
  uint64_t v15;
  CGRect v16;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332490);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x60));
  swift_beginAccess();
  result = *v6;
  if (*v6)
  {
    v15 = *v6;
    swift_retain();
    objc_msgSend(v1, sel_frame);
    CGRectGetWidth(v16);
    v9 = MEMORY[0x24BDAC7A8](v8);
    *(&v13 - 2) = (uint64_t)&v15;
    *((double *)&v13 - 1) = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255332498);
    v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553324A0);
    v11 = sub_21CF58528();
    v14[0] = v10;
    v14[1] = v11;
    swift_getOpaqueTypeConformance2();
    sub_21D7C1C80();
    sub_21D7C1EFC();
    v14[3] = v2;
    sub_21CDD363C(&qword_2553324B0, &qword_255332490);
    v14[4] = v12;
    __swift_allocate_boxed_opaque_existential_1(v14);
    sub_21D7C1C74();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    MEMORY[0x220792A74](v14);
    return swift_release();
  }
  return result;
}

uint64_t sub_21CF54240()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t *v6;
  uint64_t result;
  uint64_t v8;
  double v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14[5];
  uint64_t v15;
  CGRect v16;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553324B8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x60));
  swift_beginAccess();
  result = *v6;
  if (*v6)
  {
    v15 = *v6;
    swift_retain();
    objc_msgSend(v1, sel_frame);
    CGRectGetWidth(v16);
    v9 = MEMORY[0x24BDAC7A8](v8);
    *(&v13 - 2) = (uint64_t)&v15;
    *((double *)&v13 - 1) = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2553324C0);
    v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553324C8);
    v11 = sub_21CF585E0();
    v14[0] = v10;
    v14[1] = v11;
    swift_getOpaqueTypeConformance2();
    sub_21D7C1C80();
    sub_21D7C1EFC();
    v14[3] = v2;
    sub_21CDD363C(&qword_2553324D8, &qword_2553324B8);
    v14[4] = v12;
    __swift_allocate_boxed_opaque_existential_1(v14);
    sub_21D7C1C74();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    MEMORY[0x220792A74](v14);
    return swift_release();
  }
  return result;
}

void sub_21CF54400()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18[5];
  CGRect v19;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553324E8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553324E0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TextListComponentModel();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x60);
  swift_beginAccess();
  sub_21CDC314C(v12, (uint64_t)v8, &qword_2553324E0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1)
  {
    sub_21CDBDA44((uint64_t)v8, &qword_2553324E0);
  }
  else
  {
    sub_21CDD3198((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for TextListComponentModel);
    objc_msgSend(v1, sel_frame);
    CGRectGetWidth(v19);
    v14 = MEMORY[0x24BDAC7A8](v13);
    v18[-2] = (uint64_t)v11;
    *(double *)&v18[-1] = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2553324F0);
    v15 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553324F8);
    v16 = sub_21CF586B8();
    v18[0] = v15;
    v18[1] = v16;
    swift_getOpaqueTypeConformance2();
    sub_21D7C1C80();
    sub_21D7C1EFC();
    v18[3] = v2;
    sub_21CDD363C(&qword_255332508, &qword_2553324E8);
    v18[4] = v17;
    __swift_allocate_boxed_opaque_existential_1(v18);
    sub_21D7C1C74();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    MEMORY[0x220792A74](v18);
    sub_21CE39D98((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for TextListComponentModel);
  }
}

uint64_t sub_21CF54680()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t *v6;
  uint64_t result;
  uint64_t v8;
  double v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14[5];
  uint64_t v15;
  CGRect v16;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332510);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x60));
  swift_beginAccess();
  result = *v6;
  if (*v6)
  {
    v15 = *v6;
    swift_retain();
    objc_msgSend(v1, sel_frame);
    CGRectGetWidth(v16);
    v9 = MEMORY[0x24BDAC7A8](v8);
    *(&v13 - 2) = (uint64_t)&v15;
    *((double *)&v13 - 1) = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255332518);
    v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255332520);
    v11 = sub_21CF58760();
    v14[0] = v10;
    v14[1] = v11;
    swift_getOpaqueTypeConformance2();
    sub_21D7C1C80();
    sub_21D7C1EFC();
    v14[3] = v2;
    sub_21CDD363C(&qword_255332530, &qword_255332510);
    v14[4] = v12;
    __swift_allocate_boxed_opaque_existential_1(v14);
    sub_21D7C1C74();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    MEMORY[0x220792A74](v14);
    return swift_release();
  }
  return result;
}

uint64_t sub_21CF54840()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t *v6;
  uint64_t result;
  uint64_t v8;
  double v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14[5];
  uint64_t v15;
  CGRect v16;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332538);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x60));
  swift_beginAccess();
  result = *v6;
  if (*v6)
  {
    v15 = *v6;
    swift_retain();
    objc_msgSend(v1, sel_frame);
    CGRectGetWidth(v16);
    v9 = MEMORY[0x24BDAC7A8](v8);
    *(&v13 - 2) = (uint64_t)&v15;
    *((double *)&v13 - 1) = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255332540);
    v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255332548);
    v11 = sub_21CF58810();
    v14[0] = v10;
    v14[1] = v11;
    swift_getOpaqueTypeConformance2();
    sub_21D7C1C80();
    sub_21D7C1EFC();
    v14[3] = v2;
    sub_21CDD363C(&qword_255332558, &qword_255332538);
    v14[4] = v12;
    __swift_allocate_boxed_opaque_existential_1(v14);
    sub_21D7C1C74();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    MEMORY[0x220792A74](v14);
    return swift_release();
  }
  return result;
}

void sub_21CF54A00()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18[5];
  CGRect v19;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332568);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332560);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SuggestionItem();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x60);
  swift_beginAccess();
  sub_21CDC314C(v12, (uint64_t)v8, &qword_255332560);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1)
  {
    sub_21CDBDA44((uint64_t)v8, &qword_255332560);
  }
  else
  {
    sub_21CDD3198((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SuggestionItem);
    objc_msgSend(v1, sel_frame);
    CGRectGetWidth(v19);
    v14 = MEMORY[0x24BDAC7A8](v13);
    v18[-2] = (uint64_t)v11;
    *(double *)&v18[-1] = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255332570);
    v15 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255332578);
    v16 = sub_21CF5890C();
    v18[0] = v15;
    v18[1] = v16;
    swift_getOpaqueTypeConformance2();
    sub_21D7C1C80();
    sub_21D7C1EFC();
    v18[3] = v2;
    sub_21CDD363C(&qword_255332588, &qword_255332568);
    v18[4] = v17;
    __swift_allocate_boxed_opaque_existential_1(v18);
    sub_21D7C1C74();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    MEMORY[0x220792A74](v18);
    sub_21CE39D98((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SuggestionItem);
  }
}

uint64_t sub_21CF54C80()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t *v6;
  uint64_t result;
  uint64_t v8;
  double v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14[5];
  uint64_t v15;
  CGRect v16;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332590);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x60));
  swift_beginAccess();
  result = *v6;
  if (*v6)
  {
    v15 = *v6;
    swift_retain();
    objc_msgSend(v1, sel_frame);
    CGRectGetWidth(v16);
    v9 = MEMORY[0x24BDAC7A8](v8);
    *(&v13 - 2) = (uint64_t)&v15;
    *((double *)&v13 - 1) = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255332598);
    v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553325A0);
    v11 = sub_21CF589B4();
    v14[0] = v10;
    v14[1] = v11;
    swift_getOpaqueTypeConformance2();
    sub_21D7C1C80();
    sub_21D7C1EFC();
    v14[3] = v2;
    sub_21CDD363C(&qword_2553325B0, &qword_255332590);
    v14[4] = v12;
    __swift_allocate_boxed_opaque_existential_1(v14);
    sub_21D7C1C74();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    MEMORY[0x220792A74](v14);
    return swift_release();
  }
  return result;
}

uint64_t sub_21CF54E40()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t *v6;
  uint64_t result;
  uint64_t v8;
  double v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14[5];
  uint64_t v15;
  CGRect v16;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553325B8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x60));
  swift_beginAccess();
  result = *v6;
  if (*v6)
  {
    v15 = *v6;
    swift_retain();
    objc_msgSend(v1, sel_frame);
    CGRectGetWidth(v16);
    v9 = MEMORY[0x24BDAC7A8](v8);
    *(&v13 - 2) = (uint64_t)&v15;
    *((double *)&v13 - 1) = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2553325C0);
    v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553325C8);
    v11 = sub_21CF58A5C();
    v14[0] = v10;
    v14[1] = v11;
    swift_getOpaqueTypeConformance2();
    sub_21D7C1C80();
    sub_21D7C1EFC();
    v14[3] = v2;
    sub_21CDD363C(&qword_2553325D8, &qword_2553325B8);
    v14[4] = v12;
    __swift_allocate_boxed_opaque_existential_1(v14);
    sub_21D7C1C74();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    MEMORY[0x220792A74](v14);
    return swift_release();
  }
  return result;
}

void sub_21CF55000()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18[5];
  CGRect v19;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553325E8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553325E0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PopoverSelector();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x60);
  swift_beginAccess();
  sub_21CDC314C(v12, (uint64_t)v8, &qword_2553325E0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1)
  {
    sub_21CDBDA44((uint64_t)v8, &qword_2553325E0);
  }
  else
  {
    sub_21CDD3198((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for PopoverSelector);
    objc_msgSend(v1, sel_frame);
    CGRectGetWidth(v19);
    v14 = MEMORY[0x24BDAC7A8](v13);
    v18[-2] = (uint64_t)v11;
    *(double *)&v18[-1] = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2553325F0);
    v15 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553325F8);
    v16 = sub_21CF58B34();
    v18[0] = v15;
    v18[1] = v16;
    swift_getOpaqueTypeConformance2();
    sub_21D7C1C80();
    sub_21D7C1EFC();
    v18[3] = v2;
    sub_21CDD363C(&qword_255332608, &qword_2553325E8);
    v18[4] = v17;
    __swift_allocate_boxed_opaque_existential_1(v18);
    sub_21D7C1C74();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    MEMORY[0x220792A74](v18);
    sub_21CE39D98((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for PopoverSelector);
  }
}

void sub_21CF55280()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18[5];
  CGRect v19;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332610);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_255331BC0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ParagraphComponentModel();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x60);
  swift_beginAccess();
  sub_21CDC314C(v12, (uint64_t)v8, qword_255331BC0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1)
  {
    sub_21CDBDA44((uint64_t)v8, qword_255331BC0);
  }
  else
  {
    sub_21CDD3198((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ParagraphComponentModel);
    objc_msgSend(v1, sel_frame);
    CGRectGetWidth(v19);
    v14 = MEMORY[0x24BDAC7A8](v13);
    v18[-2] = (uint64_t)v11;
    *(double *)&v18[-1] = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255332618);
    v15 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255332620);
    v16 = sub_21CF58C0C();
    v18[0] = v15;
    v18[1] = v16;
    swift_getOpaqueTypeConformance2();
    sub_21D7C1C80();
    sub_21D7C1EFC();
    v18[3] = v2;
    sub_21CDD363C(&qword_255332630, &qword_255332610);
    v18[4] = v17;
    __swift_allocate_boxed_opaque_existential_1(v18);
    sub_21D7C1C74();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    MEMORY[0x220792A74](v18);
    sub_21CE39D98((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ParagraphComponentModel);
  }
}

void sub_21CF55500()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18[5];
  CGRect v19;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332638);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255330520);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LinkComponentModel();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x60);
  swift_beginAccess();
  sub_21CDC314C(v12, (uint64_t)v8, &qword_255330520);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1)
  {
    sub_21CDBDA44((uint64_t)v8, &qword_255330520);
  }
  else
  {
    sub_21CDD3198((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for LinkComponentModel);
    objc_msgSend(v1, sel_frame);
    CGRectGetWidth(v19);
    v14 = MEMORY[0x24BDAC7A8](v13);
    v18[-2] = (uint64_t)v11;
    *(double *)&v18[-1] = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255332640);
    v15 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255332648);
    v16 = sub_21CF58CB4();
    v18[0] = v15;
    v18[1] = v16;
    swift_getOpaqueTypeConformance2();
    sub_21D7C1C80();
    sub_21D7C1EFC();
    v18[3] = v2;
    sub_21CDD363C(&qword_255332658, &qword_255332638);
    v18[4] = v17;
    __swift_allocate_boxed_opaque_existential_1(v18);
    sub_21D7C1C74();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    MEMORY[0x220792A74](v18);
    sub_21CE39D98((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for LinkComponentModel);
  }
}

void sub_21CF55780()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18[5];
  CGRect v19;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332668);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332660);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for InlineUpsell();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x60);
  swift_beginAccess();
  sub_21CDC314C(v12, (uint64_t)v8, &qword_255332660);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1)
  {
    sub_21CDBDA44((uint64_t)v8, &qword_255332660);
  }
  else
  {
    sub_21CDD3198((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for InlineUpsell);
    objc_msgSend(v1, sel_frame);
    CGRectGetWidth(v19);
    v14 = MEMORY[0x24BDAC7A8](v13);
    v18[-2] = (uint64_t)v11;
    *(double *)&v18[-1] = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255332670);
    v15 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255332678);
    v16 = sub_21CF58D94();
    v18[0] = v15;
    v18[1] = v16;
    swift_getOpaqueTypeConformance2();
    sub_21D7C1C80();
    sub_21D7C1EFC();
    v18[3] = v2;
    sub_21CDD363C(&qword_255332688, &qword_255332668);
    v18[4] = v17;
    __swift_allocate_boxed_opaque_existential_1(v18);
    sub_21D7C1C74();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    MEMORY[0x220792A74](v18);
    sub_21CE39D98((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for InlineUpsell);
  }
}

uint64_t sub_21CF55A00()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t *v6;
  uint64_t result;
  uint64_t v8;
  double v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14[5];
  uint64_t v15;
  CGRect v16;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332690);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x60));
  swift_beginAccess();
  result = *v6;
  if (*v6)
  {
    v15 = *v6;
    swift_retain();
    objc_msgSend(v1, sel_frame);
    CGRectGetWidth(v16);
    v9 = MEMORY[0x24BDAC7A8](v8);
    *(&v13 - 2) = (uint64_t)&v15;
    *((double *)&v13 - 1) = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255332698);
    v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553326A0);
    v11 = sub_21CF58E3C();
    v14[0] = v10;
    v14[1] = v11;
    swift_getOpaqueTypeConformance2();
    sub_21D7C1C80();
    sub_21D7C1EFC();
    v14[3] = v2;
    sub_21CDD363C(&qword_2553326B0, &qword_255332690);
    v14[4] = v12;
    __swift_allocate_boxed_opaque_existential_1(v14);
    sub_21D7C1C74();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    MEMORY[0x220792A74](v14);
    return swift_release();
  }
  return result;
}

uint64_t sub_21CF55BC0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t *v6;
  uint64_t result;
  uint64_t v8;
  double v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14[5];
  uint64_t v15;
  CGRect v16;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553326B8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x60));
  swift_beginAccess();
  result = *v6;
  if (*v6)
  {
    v15 = *v6;
    swift_retain();
    objc_msgSend(v1, sel_frame);
    CGRectGetWidth(v16);
    v9 = MEMORY[0x24BDAC7A8](v8);
    *(&v13 - 2) = (uint64_t)&v15;
    *((double *)&v13 - 1) = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2553326C0);
    v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553326C8);
    v11 = sub_21CF58EE4();
    v14[0] = v10;
    v14[1] = v11;
    swift_getOpaqueTypeConformance2();
    sub_21D7C1C80();
    sub_21D7C1EFC();
    v14[3] = v2;
    sub_21CDD363C(&qword_2553326D8, &qword_2553326B8);
    v14[4] = v12;
    __swift_allocate_boxed_opaque_existential_1(v14);
    sub_21D7C1C74();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    MEMORY[0x220792A74](v14);
    return swift_release();
  }
  return result;
}

uint64_t sub_21CF55D80()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t *v6;
  uint64_t result;
  uint64_t v8;
  double v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14[5];
  uint64_t v15;
  CGRect v16;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553326E0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x60));
  swift_beginAccess();
  result = *v6;
  if (*v6)
  {
    v15 = *v6;
    swift_retain();
    objc_msgSend(v1, sel_frame);
    CGRectGetWidth(v16);
    v9 = MEMORY[0x24BDAC7A8](v8);
    *(&v13 - 2) = (uint64_t)&v15;
    *((double *)&v13 - 1) = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2553326E8);
    v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553326F0);
    v11 = sub_21CF58F8C();
    v14[0] = v10;
    v14[1] = v11;
    swift_getOpaqueTypeConformance2();
    sub_21D7C1C80();
    sub_21D7C1EFC();
    v14[3] = v2;
    sub_21CDD363C(&qword_255332710, &qword_2553326E0);
    v14[4] = v12;
    __swift_allocate_boxed_opaque_existential_1(v14);
    sub_21D7C1C74();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    MEMORY[0x220792A74](v14);
    return swift_release();
  }
  return result;
}

void sub_21CF55F40()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18[5];
  CGRect v19;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332728);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332720);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GroupedTextListLockup();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x60);
  swift_beginAccess();
  sub_21CDC314C(v12, (uint64_t)v8, &qword_255332720);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1)
  {
    sub_21CDBDA44((uint64_t)v8, &qword_255332720);
  }
  else
  {
    sub_21CDD3198((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for GroupedTextListLockup);
    objc_msgSend(v1, sel_frame);
    CGRectGetWidth(v19);
    v14 = MEMORY[0x24BDAC7A8](v13);
    v18[-2] = (uint64_t)v11;
    *(double *)&v18[-1] = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255332730);
    v15 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255332738);
    v16 = sub_21CF59034();
    v18[0] = v15;
    v18[1] = v16;
    swift_getOpaqueTypeConformance2();
    sub_21D7C1C80();
    sub_21D7C1EFC();
    v18[3] = v2;
    sub_21CDD363C(&qword_255332748, &qword_255332728);
    v18[4] = v17;
    __swift_allocate_boxed_opaque_existential_1(v18);
    sub_21D7C1C74();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    MEMORY[0x220792A74](v18);
    sub_21CE39D98((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for GroupedTextListLockup);
  }
}

uint64_t sub_21CF561C0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t *v6;
  uint64_t result;
  uint64_t v8;
  double v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14[5];
  uint64_t v15;
  CGRect v16;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332750);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x60));
  swift_beginAccess();
  result = *v6;
  if (*v6)
  {
    v15 = *v6;
    swift_retain();
    objc_msgSend(v1, sel_frame);
    CGRectGetWidth(v16);
    v9 = MEMORY[0x24BDAC7A8](v8);
    *(&v13 - 2) = (uint64_t)&v15;
    *((double *)&v13 - 1) = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255332758);
    v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255332760);
    v11 = sub_21CF590E0();
    v14[0] = v10;
    v14[1] = v11;
    swift_getOpaqueTypeConformance2();
    sub_21D7C1C80();
    sub_21D7C1EFC();
    v14[3] = v2;
    sub_21CDD363C(&qword_255332770, &qword_255332750);
    v14[4] = v12;
    __swift_allocate_boxed_opaque_existential_1(v14);
    sub_21D7C1C74();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    MEMORY[0x220792A74](v14);
    return swift_release();
  }
  return result;
}

void sub_21CF56380()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18[5];
  CGRect v19;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332780);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332778);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for EmptyStateLockup();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x60);
  swift_beginAccess();
  sub_21CDC314C(v12, (uint64_t)v8, &qword_255332778);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1)
  {
    sub_21CDBDA44((uint64_t)v8, &qword_255332778);
  }
  else
  {
    sub_21CDD3198((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for EmptyStateLockup);
    objc_msgSend(v1, sel_frame);
    CGRectGetWidth(v19);
    v14 = MEMORY[0x24BDAC7A8](v13);
    v18[-2] = (uint64_t)v11;
    *(double *)&v18[-1] = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255332788);
    v15 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255332790);
    v16 = sub_21CF591B8();
    v18[0] = v15;
    v18[1] = v16;
    swift_getOpaqueTypeConformance2();
    sub_21D7C1C80();
    sub_21D7C1EFC();
    v18[3] = v2;
    sub_21CDD363C(&qword_2553327A0, &qword_255332780);
    v18[4] = v17;
    __swift_allocate_boxed_opaque_existential_1(v18);
    sub_21D7C1C74();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    MEMORY[0x220792A74](v18);
    sub_21CE39D98((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for EmptyStateLockup);
  }
}

void sub_21CF56600()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18[5];
  CGRect v19;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553327B0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553327A8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for BrickLockup();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x60);
  swift_beginAccess();
  sub_21CDC314C(v12, (uint64_t)v8, &qword_2553327A8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1)
  {
    sub_21CDBDA44((uint64_t)v8, &qword_2553327A8);
  }
  else
  {
    sub_21CDD3198((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for BrickLockup);
    objc_msgSend(v1, sel_frame);
    CGRectGetWidth(v19);
    v14 = MEMORY[0x24BDAC7A8](v13);
    v18[-2] = (uint64_t)v11;
    *(double *)&v18[-1] = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2553327B8);
    v15 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553327C0);
    v16 = sub_21CF5928C();
    v18[0] = v15;
    v18[1] = v16;
    swift_getOpaqueTypeConformance2();
    sub_21D7C1C80();
    sub_21D7C1EFC();
    v18[3] = v2;
    sub_21CDD363C(&qword_2553327D0, &qword_2553327B0);
    v18[4] = v17;
    __swift_allocate_boxed_opaque_existential_1(v18);
    sub_21D7C1C74();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    MEMORY[0x220792A74](v18);
    sub_21CE39D98((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for BrickLockup);
  }
}

uint64_t sub_21CF56880()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t *v6;
  uint64_t result;
  uint64_t v8;
  double v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14[5];
  uint64_t v15;
  CGRect v16;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553327D8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x60));
  swift_beginAccess();
  result = *v6;
  if (*v6)
  {
    v15 = *v6;
    swift_retain();
    objc_msgSend(v1, sel_frame);
    CGRectGetWidth(v16);
    v9 = MEMORY[0x24BDAC7A8](v8);
    *(&v13 - 2) = (uint64_t)&v15;
    *((double *)&v13 - 1) = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2553327E0);
    v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553327E8);
    v11 = sub_21CF5933C();
    v14[0] = v10;
    v14[1] = v11;
    swift_getOpaqueTypeConformance2();
    sub_21D7C1C80();
    sub_21D7C1EFC();
    v14[3] = v2;
    sub_21CDD363C(&qword_2553327F8, &qword_2553327D8);
    v14[4] = v12;
    __swift_allocate_boxed_opaque_existential_1(v14);
    sub_21D7C1C74();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    MEMORY[0x220792A74](v14);
    return swift_release();
  }
  return result;
}

void sub_21CF56A40(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  char *v11;
  uint64_t KeyPath;
  char *v13;
  uint64_t v14;

  v4 = type metadata accessor for VerticalVideoLockupView(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553324A0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v6 = a1;
  v10 = (_QWORD *)((char *)v6 + *(int *)(v4 + 20));
  *v10 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B18);
  swift_storeEnumTagMultiPayload();
  v11 = (char *)v6 + *(int *)(v4 + 24);
  *(_QWORD *)v11 = swift_getKeyPath();
  v11[40] = 0;
  KeyPath = swift_getKeyPath();
  sub_21CDD337C((uint64_t)v6, (uint64_t)v9, type metadata accessor for VerticalVideoLockupView);
  v13 = &v9[*(int *)(v7 + 36)];
  *(_QWORD *)v13 = KeyPath;
  *((double *)v13 + 1) = a2;
  swift_retain();
  sub_21CE39D98((uint64_t)v6, type metadata accessor for VerticalVideoLockupView);
  sub_21CF527BC();
  sub_21CDBDA44((uint64_t)v9, &qword_2553324A0);
}

void sub_21CF56BE8(uint64_t a1, double a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  char *v17;
  uint64_t v18;

  v4 = (int *)type metadata accessor for TrackShelfLockupView(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553324C8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)((char *)v6 + v4[6]);
  type metadata accessor for PlaybackPresenter();
  sub_21CDB6D4C(&qword_253F609E0, (void (*)(uint64_t))type metadata accessor for PlaybackPresenter);
  swift_retain();
  *v10 = sub_21D7C1500();
  v10[1] = v11;
  v12 = (_QWORD *)((char *)v6 + v4[7]);
  *v12 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B18);
  swift_storeEnumTagMultiPayload();
  v13 = (char *)v6 + v4[8];
  *(_QWORD *)v13 = swift_getKeyPath();
  v13[40] = 0;
  *v6 = a1;
  v14 = (uint64_t)v6 + v4[5];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67330);
  __swift_storeEnumTagSinglePayload(v14, 8, 8, v15);
  KeyPath = swift_getKeyPath();
  sub_21CDD337C((uint64_t)v6, (uint64_t)v9, type metadata accessor for TrackShelfLockupView);
  v17 = &v9[*(int *)(v7 + 36)];
  *(_QWORD *)v17 = KeyPath;
  *((double *)v17 + 1) = a2;
  sub_21CE39D98((uint64_t)v6, type metadata accessor for TrackShelfLockupView);
  sub_21CF527BC();
  sub_21CDBDA44((uint64_t)v9, &qword_2553324C8);
}

void sub_21CF56DFC(uint64_t a1, double a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  char *v11;
  char *v12;
  uint64_t KeyPath;
  char *v14;
  uint64_t v15;

  v4 = (int *)type metadata accessor for SuperHeroLockupView(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332520);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v6 = a1;
  v10 = (_QWORD *)((char *)v6 + v4[5]);
  *v10 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B18);
  swift_storeEnumTagMultiPayload();
  v11 = (char *)v6 + v4[6];
  *(_QWORD *)v11 = swift_getKeyPath();
  v11[40] = 0;
  v12 = (char *)v6 + v4[7];
  *(_QWORD *)v12 = swift_getKeyPath();
  v12[8] = 0;
  KeyPath = swift_getKeyPath();
  sub_21CDD337C((uint64_t)v6, (uint64_t)v9, type metadata accessor for SuperHeroLockupView);
  v14 = &v9[*(int *)(v7 + 36)];
  *(_QWORD *)v14 = KeyPath;
  *((double *)v14 + 1) = a2;
  swift_retain();
  sub_21CE39D98((uint64_t)v6, type metadata accessor for SuperHeroLockupView);
  sub_21CF527BC();
  sub_21CDBDA44((uint64_t)v9, &qword_255332520);
}

void sub_21CF56FC0()
{
  void *v0;

  _s14descr24E10F689V18HighlightsProviderCMa();
  sub_21CDB6D4C(&qword_253F5F988, (void (*)(uint64_t))_s14descr24E10F689V18HighlightsProviderCMa);
  swift_retain();
  v0 = (void *)sub_21D7C1500();
  swift_getKeyPath();
  sub_21CF52FA4();
  swift_release();
  swift_release();

}

void sub_21CF570B0(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  char *v13;
  uint64_t KeyPath;
  char *v15;
  uint64_t v16;

  v6 = type metadata accessor for SquareLockupView(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (uint64_t *)((char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553325A0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v8 = a1;
  v12 = (_QWORD *)((char *)v8 + *(int *)(v6 + 20));
  *v12 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B18);
  swift_storeEnumTagMultiPayload();
  v13 = (char *)v8 + *(int *)(v6 + 24);
  *(_QWORD *)v13 = swift_getKeyPath();
  v13[40] = 0;
  KeyPath = swift_getKeyPath();
  sub_21CDD337C((uint64_t)v8, (uint64_t)v11, type metadata accessor for SquareLockupView);
  v15 = &v11[*(int *)(v9 + 36)];
  *(_QWORD *)v15 = KeyPath;
  *((double *)v15 + 1) = a3;
  swift_retain();
  sub_21CE39D98((uint64_t)v8, type metadata accessor for SquareLockupView);
  sub_21CF5294C(1, a2);
  sub_21CDBDA44((uint64_t)v11, &qword_2553325A0);
}

void sub_21CF5723C(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  char *v11;
  uint64_t KeyPath;
  char *v13;
  uint64_t v14;

  v4 = type metadata accessor for PosterLockupView(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553325C8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v6 = a1;
  v10 = (_QWORD *)((char *)v6 + *(int *)(v4 + 20));
  *v10 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B18);
  swift_storeEnumTagMultiPayload();
  v11 = (char *)v6 + *(int *)(v4 + 24);
  *(_QWORD *)v11 = swift_getKeyPath();
  v11[40] = 0;
  KeyPath = swift_getKeyPath();
  sub_21CDD337C((uint64_t)v6, (uint64_t)v9, type metadata accessor for PosterLockupView);
  v13 = &v9[*(int *)(v7 + 36)];
  *(_QWORD *)v13 = KeyPath;
  *((double *)v13 + 1) = a2;
  swift_retain();
  sub_21CE39D98((uint64_t)v6, type metadata accessor for PosterLockupView);
  sub_21CF527BC();
  sub_21CDBDA44((uint64_t)v9, &qword_2553325C8);
}

void sub_21CF573E4(uint64_t a1, uint64_t (*a2)(_QWORD), double a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;

  OUTLINED_FUNCTION_119_0(a1, a2);
  OUTLINED_FUNCTION_11_20();
  MEMORY[0x24BDAC7A8](v10);
  v11 = OUTLINED_FUNCTION_23_9();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v12);
  v13 = OUTLINED_FUNCTION_20_8();
  sub_21CDD337C(v13, v14, a5);
  KeyPath = swift_getKeyPath();
  sub_21CDD337C(v5, v6, a2);
  v16 = v6 + *(int *)(v11 + 36);
  *(_QWORD *)v16 = KeyPath;
  *(double *)(v16 + 8) = a3;
  sub_21CE39D98(v5, a2);
  OUTLINED_FUNCTION_43_7();
  sub_21CF52B70();
  OUTLINED_FUNCTION_41_10();
  OUTLINED_FUNCTION_1_17();
}

void sub_21CF574B8(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t KeyPath;
  char *v12;
  uint64_t v13;

  v4 = type metadata accessor for LinkView();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332648);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CDD337C(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for LinkComponentModel);
  v10 = &v6[*(int *)(v4 + 20)];
  *(_QWORD *)v10 = swift_getKeyPath();
  *((_QWORD *)v10 + 1) = 0;
  *((_QWORD *)v10 + 2) = 0;
  *((_QWORD *)v10 + 3) = 0;
  v10[32] = 0;
  KeyPath = swift_getKeyPath();
  sub_21CDD337C((uint64_t)v6, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for LinkView);
  v12 = &v9[*(int *)(v7 + 36)];
  *(_QWORD *)v12 = KeyPath;
  *((double *)v12 + 1) = a2;
  sub_21CE39D98((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for LinkView);
  sub_21CF52B70();
  sub_21CDBDA44((uint64_t)v9, &qword_255332648);
}

void sub_21CF57620(double a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t KeyPath;
  char *v10;
  uint64_t v11;

  v2 = type metadata accessor for LiveRadioPosterLockupView(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t *)((char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553326A0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = swift_retain();
  sub_21D3B786C(v8, v4);
  KeyPath = swift_getKeyPath();
  sub_21CDD337C((uint64_t)v4, (uint64_t)v7, type metadata accessor for LiveRadioPosterLockupView);
  v10 = &v7[*(int *)(v5 + 36)];
  *(_QWORD *)v10 = KeyPath;
  *((double *)v10 + 1) = a1;
  sub_21CE39D98((uint64_t)v4, type metadata accessor for LiveRadioPosterLockupView);
  sub_21CF527BC();
  sub_21CDBDA44((uint64_t)v7, &qword_2553326A0);
}

void sub_21CF57770(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  char *v17;
  uint64_t KeyPath;
  char *v19;
  _QWORD v20[2];

  v6 = sub_21D7C204C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for HorizontalLockupView(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (_QWORD *)((char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553326C8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v12 = a1;
  v16 = (_QWORD *)((char *)v12 + *(int *)(v10 + 20));
  *v16 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B18);
  swift_storeEnumTagMultiPayload();
  v17 = (char *)v12 + *(int *)(v10 + 24);
  *(_QWORD *)v17 = swift_getKeyPath();
  v17[40] = 0;
  v20[1] = 0x403C000000000000;
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BDF18B0], v6);
  sub_21CE1FFF4();
  swift_retain();
  sub_21D7C0EF4();
  KeyPath = swift_getKeyPath();
  sub_21CDD337C((uint64_t)v12, (uint64_t)v15, type metadata accessor for HorizontalLockupView);
  v19 = &v15[*(int *)(v13 + 36)];
  *(_QWORD *)v19 = KeyPath;
  *((double *)v19 + 1) = a3;
  sub_21CE39D98((uint64_t)v12, type metadata accessor for HorizontalLockupView);
  sub_21CF52D80(1, a2);
  sub_21CDBDA44((uint64_t)v15, &qword_2553326C8);
}

uint64_t sub_21CF57988()
{
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F616A0);
  sub_21CDD363C(&qword_255332718, &qword_253F616A0);
  sub_21D7C1500();
  swift_getKeyPath();
  sub_21CF52FA4();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_21CF57A78(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t KeyPath;
  char *v12;
  uint64_t v13;

  v4 = type metadata accessor for GroupedTextListLockupView();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332738);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CDD337C(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for GroupedTextListLockup);
  v10 = &v6[*(int *)(v4 + 20)];
  *(_QWORD *)v10 = swift_getKeyPath();
  v10[8] = 0;
  KeyPath = swift_getKeyPath();
  sub_21CDD337C((uint64_t)v6, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for GroupedTextListLockupView);
  v12 = &v9[*(int *)(v7 + 36)];
  *(_QWORD *)v12 = KeyPath;
  *((double *)v12 + 1) = a2;
  sub_21CE39D98((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for GroupedTextListLockupView);
  sub_21CF52B70();
  sub_21CDBDA44((uint64_t)v9, &qword_255332738);
}

void sub_21CF57BDC(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t KeyPath;
  char *v12;
  uint64_t v13;

  v4 = type metadata accessor for FlowcaseLockupView(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332760);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v6 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B18);
  swift_storeEnumTagMultiPayload();
  v10 = (char *)v6 + *(int *)(v4 + 20);
  *(_QWORD *)v10 = swift_getKeyPath();
  v10[40] = 0;
  *(uint64_t *)((char *)v6 + *(int *)(v4 + 24)) = a1;
  KeyPath = swift_getKeyPath();
  sub_21CDD337C((uint64_t)v6, (uint64_t)v9, type metadata accessor for FlowcaseLockupView);
  v12 = &v9[*(int *)(v7 + 36)];
  *(_QWORD *)v12 = KeyPath;
  *((double *)v12 + 1) = a2;
  swift_retain();
  sub_21CE39D98((uint64_t)v6, type metadata accessor for FlowcaseLockupView);
  sub_21CF527BC();
  sub_21CDBDA44((uint64_t)v9, &qword_255332760);
}

void sub_21CF57D80(uint64_t a1, uint64_t (*a2)(_QWORD), double a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;

  OUTLINED_FUNCTION_119_0(a1, a2);
  OUTLINED_FUNCTION_11_20();
  MEMORY[0x24BDAC7A8](v10);
  v11 = OUTLINED_FUNCTION_23_9();
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v12);
  v13 = OUTLINED_FUNCTION_20_8();
  sub_21CDD337C(v13, v14, a5);
  KeyPath = swift_getKeyPath();
  sub_21CDD337C(v5, v6, a2);
  v16 = v6 + *(int *)(v11 + 36);
  *(_QWORD *)v16 = KeyPath;
  *(double *)(v16 + 8) = a3;
  sub_21CE39D98(v5, a2);
  OUTLINED_FUNCTION_43_7();
  sub_21CF52C6C();
  OUTLINED_FUNCTION_41_10();
  OUTLINED_FUNCTION_1_17();
}

void sub_21CF57E58(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t KeyPath;
  char *v13;
  uint64_t v14;

  v4 = type metadata accessor for BrickLockupView();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553327C0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CDD337C(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for BrickLockup);
  v10 = &v6[*(int *)(v4 + 20)];
  *(_QWORD *)v10 = swift_getKeyPath();
  v10[8] = 0;
  v11 = &v6[*(int *)(v4 + 24)];
  *(_QWORD *)v11 = swift_getKeyPath();
  v11[8] = 0;
  KeyPath = swift_getKeyPath();
  sub_21CDD337C((uint64_t)v6, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for BrickLockupView);
  v13 = &v9[*(int *)(v7 + 36)];
  *(_QWORD *)v13 = KeyPath;
  *((double *)v13 + 1) = a2;
  sub_21CE39D98((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for BrickLockupView);
  sub_21CF52B70();
  sub_21CDBDA44((uint64_t)v9, &qword_2553327C0);
}

void sub_21CF57FE0(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  char *v11;
  uint64_t KeyPath;
  char *v13;
  uint64_t v14;

  v4 = type metadata accessor for BubbleLockupView(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553327E8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v6 = a1;
  v10 = (_QWORD *)((char *)v6 + *(int *)(v4 + 20));
  *v10 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B18);
  swift_storeEnumTagMultiPayload();
  v11 = (char *)v6 + *(int *)(v4 + 24);
  *(_QWORD *)v11 = swift_getKeyPath();
  v11[40] = 0;
  KeyPath = swift_getKeyPath();
  sub_21CDD337C((uint64_t)v6, (uint64_t)v9, type metadata accessor for BubbleLockupView);
  v13 = &v9[*(int *)(v7 + 36)];
  *(_QWORD *)v13 = KeyPath;
  *((double *)v13 + 1) = a2;
  swift_retain();
  sub_21CE39D98((uint64_t)v6, type metadata accessor for BubbleLockupView);
  sub_21CF527BC();
  sub_21CDBDA44((uint64_t)v9, &qword_2553327E8);
}

uint64_t sub_21CF58188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  swift_retain();
  return sub_21CF54010(a3, a4);
}

void sub_21CF581CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CF582C8(a1, a2, a3, &qword_2553324E0, (uint64_t (*)(_QWORD))type metadata accessor for TextListComponentModel, (void (*)(uint64_t))sub_21CF54400);
}

void sub_21CF581E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CF582C8(a1, a2, a3, &qword_255332560, (uint64_t (*)(_QWORD))type metadata accessor for SuggestionItem, (void (*)(uint64_t))sub_21CF54A00);
}

void sub_21CF58204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CF582C8(a1, a2, a3, &qword_2553325E0, (uint64_t (*)(_QWORD))type metadata accessor for PopoverSelector, (void (*)(uint64_t))sub_21CF55000);
}

void sub_21CF58220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CF582C8(a1, a2, a3, qword_255331BC0, (uint64_t (*)(_QWORD))type metadata accessor for ParagraphComponentModel, (void (*)(uint64_t))sub_21CF55280);
}

void sub_21CF5823C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CF582C8(a1, a2, a3, &qword_255330520, (uint64_t (*)(_QWORD))type metadata accessor for LinkComponentModel, (void (*)(uint64_t))sub_21CF55500);
}

void sub_21CF58258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CF582C8(a1, a2, a3, &qword_255332660, (uint64_t (*)(_QWORD))type metadata accessor for InlineUpsell, (void (*)(uint64_t))sub_21CF55780);
}

void sub_21CF58274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CF582C8(a1, a2, a3, &qword_255332720, (uint64_t (*)(_QWORD))type metadata accessor for GroupedTextListLockup, (void (*)(uint64_t))sub_21CF55F40);
}

void sub_21CF58290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CF582C8(a1, a2, a3, &qword_255332778, (uint64_t (*)(_QWORD))type metadata accessor for EmptyStateLockup, (void (*)(uint64_t))sub_21CF56380);
}

void sub_21CF582AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21CF582C8(a1, a2, a3, &qword_2553327A8, (uint64_t (*)(_QWORD))type metadata accessor for BrickLockup, (void (*)(uint64_t))sub_21CF56600);
}

void sub_21CF582C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(_QWORD), void (*a6)(uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  __swift_instantiateConcreteTypeFromMangledName(a4);
  OUTLINED_FUNCTION_21();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_69();
  v13 = v12 - v11;
  sub_21CDD337C(a3, v12 - v11, a5);
  v14 = a5(0);
  __swift_storeEnumTagSinglePayload(v13, 0, 1, v14);
  sub_21CF53F7C(v13, a4, a6);
}

uint64_t sub_21CF5836C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_21CF58188(a1, a2, *a3, (uint64_t (*)(uint64_t))sub_21CF54080);
}

void sub_21CF5838C(uint64_t *a1, double a2)
{
  sub_21CF56A40(*a1, a2);
}

uint64_t sub_21CF58394(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_21CF58188(a1, a2, *a3, (uint64_t (*)(uint64_t))sub_21CF54240);
}

void sub_21CF583B4(uint64_t *a1, double a2)
{
  sub_21CF56BE8(*a1, a2);
}

uint64_t sub_21CF583BC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_21CF58188(a1, a2, *a3, (uint64_t (*)(uint64_t))sub_21CF54680);
}

void sub_21CF583DC(uint64_t *a1, double a2)
{
  sub_21CF56DFC(*a1, a2);
}

uint64_t sub_21CF583E4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_21CF58188(a1, a2, *a3, (uint64_t (*)(uint64_t))sub_21CF54840);
}

void sub_21CF58404()
{
  sub_21CF56FC0();
}

uint64_t sub_21CF5840C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_21CF58188(a1, a2, *a3, (uint64_t (*)(uint64_t))sub_21CF54C80);
}

void sub_21CF5842C(uint64_t *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  sub_21CF570B0(*a1, a2, a3);
}

uint64_t sub_21CF58434(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_21CF58188(a1, a2, *a3, (uint64_t (*)(uint64_t))sub_21CF54E40);
}

void sub_21CF58454(uint64_t *a1, double a2)
{
  sub_21CF5723C(*a1, a2);
}

uint64_t sub_21CF5845C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_21CF58188(a1, a2, *a3, (uint64_t (*)(uint64_t))sub_21CF55A00);
}

void sub_21CF5847C(double a1)
{
  sub_21CF57620(a1);
}

uint64_t sub_21CF58484(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_21CF58188(a1, a2, *a3, (uint64_t (*)(uint64_t))sub_21CF55BC0);
}

void sub_21CF584A4(uint64_t *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  sub_21CF57770(*a1, a2, a3);
}

uint64_t sub_21CF584AC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_21CF58188(a1, a2, *a3, (uint64_t (*)(uint64_t))sub_21CF55D80);
}

uint64_t sub_21CF584CC()
{
  return sub_21CF57988();
}

uint64_t sub_21CF584D4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_21CF58188(a1, a2, *a3, (uint64_t (*)(uint64_t))sub_21CF561C0);
}

void sub_21CF584F4(uint64_t *a1, double a2)
{
  sub_21CF57BDC(*a1, a2);
}

uint64_t sub_21CF584FC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_21CF58188(a1, a2, *a3, (uint64_t (*)(uint64_t))sub_21CF56880);
}

void sub_21CF5851C()
{
  uint64_t v0;

  sub_21CF5838C(*(uint64_t **)(v0 + 16), *(double *)(v0 + 24));
}

unint64_t sub_21CF58528()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_2553324A8;
  if (!qword_2553324A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553324A0);
    sub_21CDB6D4C(&qword_253F624F0, (void (*)(uint64_t))type metadata accessor for VerticalVideoLockupView);
    v3 = v2;
    sub_21CDD363C(&qword_253F66D20, &qword_253F66D28);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_2553324A8);
  }
  return result;
}

void sub_21CF585D4()
{
  uint64_t v0;

  sub_21CF583B4(*(uint64_t **)(v0 + 16), *(double *)(v0 + 24));
}

unint64_t sub_21CF585E0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_2553324D0;
  if (!qword_2553324D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553324C8);
    sub_21CDB6D4C(&qword_253F61B78, (void (*)(uint64_t))type metadata accessor for TrackShelfLockupView);
    v3 = v2;
    sub_21CDD363C(&qword_253F66D20, &qword_253F66D28);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_2553324D0);
  }
  return result;
}

void sub_21CF5867C()
{
  uint64_t v0;

  sub_21CF57D80(*(_QWORD *)(v0 + 16), type metadata accessor for TextListView, *(double *)(v0 + 24), (uint64_t)&qword_2553324F8, (uint64_t (*)(_QWORD))type metadata accessor for TextListComponentModel);
}

unint64_t sub_21CF586B8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_255332500;
  if (!qword_255332500)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553324F8);
    sub_21CDB6D4C(&qword_253F5F6E8, (void (*)(uint64_t))type metadata accessor for TextListView);
    v3 = v2;
    sub_21CDD363C(&qword_253F66D20, &qword_253F66D28);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_255332500);
  }
  return result;
}

void sub_21CF58754()
{
  uint64_t v0;

  sub_21CF583DC(*(uint64_t **)(v0 + 16), *(double *)(v0 + 24));
}

unint64_t sub_21CF58760()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_255332528;
  if (!qword_255332528)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255332520);
    sub_21CDB6D4C(&qword_253F61448, (void (*)(uint64_t))type metadata accessor for SuperHeroLockupView);
    v3 = v2;
    sub_21CDD363C(&qword_253F66D20, &qword_253F66D28);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_255332528);
  }
  return result;
}

void sub_21CF58804()
{
  sub_21CF58404();
}

unint64_t sub_21CF58810()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_255332550;
  if (!qword_255332550)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255332548);
    v2 = sub_21CF58894();
    sub_21CDD363C(&qword_253F66D20, &qword_253F66D28);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_255332550);
  }
  return result;
}

unint64_t sub_21CF58894()
{
  unint64_t result;

  result = qword_253F5F8F0;
  if (!qword_253F5F8F0)
  {
    result = MEMORY[0x2207938C0](&unk_21D7F4748, &_s14descr24E109CE1V10LockupViewVN);
    atomic_store(result, (unint64_t *)&qword_253F5F8F0);
  }
  return result;
}

void sub_21CF588D0()
{
  uint64_t v0;

  sub_21CF573E4(*(_QWORD *)(v0 + 16), type metadata accessor for SuggestionItemView, *(double *)(v0 + 24), (uint64_t)&qword_255332578, (uint64_t (*)(_QWORD))type metadata accessor for SuggestionItem);
}

unint64_t sub_21CF5890C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_255332580;
  if (!qword_255332580)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255332578);
    sub_21CDB6D4C(&qword_253F61050, (void (*)(uint64_t))type metadata accessor for SuggestionItemView);
    v3 = v2;
    sub_21CDD363C(&qword_253F66D20, &qword_253F66D28);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_255332580);
  }
  return result;
}

void sub_21CF589A8(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_21CF5842C(*(uint64_t **)(v1 + 16), a1, *(double *)(v1 + 24));
}

unint64_t sub_21CF589B4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_2553325A8;
  if (!qword_2553325A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553325A0);
    sub_21CDB6D4C(&qword_253F60660, (void (*)(uint64_t))type metadata accessor for SquareLockupView);
    v3 = v2;
    sub_21CDD363C(&qword_253F66D20, &qword_253F66D28);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_2553325A8);
  }
  return result;
}

void sub_21CF58A50()
{
  uint64_t v0;

  sub_21CF58454(*(uint64_t **)(v0 + 16), *(double *)(v0 + 24));
}

unint64_t sub_21CF58A5C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_2553325D0;
  if (!qword_2553325D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553325C8);
    sub_21CDB6D4C(&qword_253F604E0, (void (*)(uint64_t))type metadata accessor for PosterLockupView);
    v3 = v2;
    sub_21CDD363C(&qword_253F66D20, &qword_253F66D28);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_2553325D0);
  }
  return result;
}

void sub_21CF58AF8()
{
  uint64_t v0;

  sub_21CF573E4(*(_QWORD *)(v0 + 16), type metadata accessor for PopoverSelectorView, *(double *)(v0 + 24), (uint64_t)&qword_2553325F8, (uint64_t (*)(_QWORD))type metadata accessor for PopoverSelector);
}

unint64_t sub_21CF58B34()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_255332600;
  if (!qword_255332600)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553325F8);
    sub_21CDB6D4C(&qword_253F61340, (void (*)(uint64_t))type metadata accessor for PopoverSelectorView);
    v3 = v2;
    sub_21CDD363C(&qword_253F66D20, &qword_253F66D28);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_255332600);
  }
  return result;
}

void sub_21CF58BD0()
{
  uint64_t v0;

  sub_21CF573E4(*(_QWORD *)(v0 + 16), (uint64_t (*)(_QWORD))type metadata accessor for ExpandableParagraphView, *(double *)(v0 + 24), (uint64_t)&qword_255332620, (uint64_t (*)(_QWORD))type metadata accessor for ParagraphComponentModel);
}

unint64_t sub_21CF58C0C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_255332628;
  if (!qword_255332628)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255332620);
    sub_21CDB6D4C(&qword_253F620B8, (void (*)(uint64_t))type metadata accessor for ExpandableParagraphView);
    v3 = v2;
    sub_21CDD363C(&qword_253F66D20, &qword_253F66D28);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_255332628);
  }
  return result;
}

void sub_21CF58CA8()
{
  uint64_t v0;

  sub_21CF574B8(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

unint64_t sub_21CF58CB4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_255332650;
  if (!qword_255332650)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255332648);
    sub_21CDB6D4C(&qword_253F65868, (void (*)(uint64_t))type metadata accessor for LinkView);
    v3 = v2;
    sub_21CDD363C(&qword_253F66D20, &qword_253F66D28);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_255332650);
  }
  return result;
}

void sub_21CF58D58()
{
  uint64_t v0;

  sub_21CF57D80(*(_QWORD *)(v0 + 16), (uint64_t (*)(_QWORD))type metadata accessor for InlineUpsellView, *(double *)(v0 + 24), (uint64_t)&qword_255332678, (uint64_t (*)(_QWORD))type metadata accessor for InlineUpsell);
}

unint64_t sub_21CF58D94()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_255332680;
  if (!qword_255332680)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255332678);
    sub_21CDB6D4C(&qword_253F602F8, (void (*)(uint64_t))type metadata accessor for InlineUpsellView);
    v3 = v2;
    sub_21CDD363C(&qword_253F66D20, &qword_253F66D28);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_255332680);
  }
  return result;
}

void sub_21CF58E30()
{
  uint64_t v0;

  sub_21CF5847C(*(double *)(v0 + 24));
}

unint64_t sub_21CF58E3C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_2553326A8;
  if (!qword_2553326A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553326A0);
    sub_21CDB6D4C(&qword_253F62878, (void (*)(uint64_t))type metadata accessor for LiveRadioPosterLockupView);
    v3 = v2;
    sub_21CDD363C(&qword_253F66D20, &qword_253F66D28);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_2553326A8);
  }
  return result;
}

void sub_21CF58ED8(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_21CF584A4(*(uint64_t **)(v1 + 16), a1, *(double *)(v1 + 24));
}

unint64_t sub_21CF58EE4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_2553326D0;
  if (!qword_2553326D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553326C8);
    sub_21CDB6D4C(&qword_253F61720, (void (*)(uint64_t))type metadata accessor for HorizontalLockupView);
    v3 = v2;
    sub_21CDD363C(&qword_253F66D20, &qword_253F66D28);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_2553326D0);
  }
  return result;
}

uint64_t sub_21CF58F80()
{
  return sub_21CF584CC();
}

unint64_t sub_21CF58F8C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_2553326F8;
  if (!qword_2553326F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553326F0);
    sub_21CDD363C(&qword_255332700, &qword_255332708);
    v3 = v2;
    sub_21CDD363C(&qword_253F66D20, &qword_253F66D28);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_2553326F8);
  }
  return result;
}

void sub_21CF59028()
{
  uint64_t v0;

  sub_21CF57A78(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

unint64_t sub_21CF59034()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_255332740;
  if (!qword_255332740)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255332738);
    sub_21CDB6D4C(&qword_253F62820, (void (*)(uint64_t))type metadata accessor for GroupedTextListLockupView);
    v3 = v2;
    sub_21CDD363C(&qword_253F66D20, &qword_253F66D28);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_255332740);
  }
  return result;
}

void sub_21CF590D4()
{
  uint64_t v0;

  sub_21CF584F4(*(uint64_t **)(v0 + 16), *(double *)(v0 + 24));
}

unint64_t sub_21CF590E0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_255332768;
  if (!qword_255332768)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255332760);
    sub_21CDB6D4C(&qword_253F60D58, (void (*)(uint64_t))type metadata accessor for FlowcaseLockupView);
    v3 = v2;
    sub_21CDD363C(&qword_253F66D20, &qword_253F66D28);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_255332768);
  }
  return result;
}

void sub_21CF5917C()
{
  uint64_t v0;

  sub_21CF57D80(*(_QWORD *)(v0 + 16), (uint64_t (*)(_QWORD))type metadata accessor for EmptyStateLockupView, *(double *)(v0 + 24), (uint64_t)&qword_255332790, (uint64_t (*)(_QWORD))type metadata accessor for EmptyStateLockup);
}

unint64_t sub_21CF591B8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_255332798;
  if (!qword_255332798)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255332790);
    sub_21CDB6D4C(&qword_253F616D0, (void (*)(uint64_t))type metadata accessor for EmptyStateLockupView);
    v3 = v2;
    sub_21CDD363C(&qword_253F66D20, &qword_253F66D28);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_255332798);
  }
  return result;
}

void sub_21CF59254(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_53(a1, a2, a3);
  OUTLINED_FUNCTION_12_1(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 24));
  OUTLINED_FUNCTION_0();
}

void sub_21CF59280()
{
  uint64_t v0;

  sub_21CF57E58(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

unint64_t sub_21CF5928C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_2553327C8;
  if (!qword_2553327C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553327C0);
    sub_21CDB6D4C(&qword_253F5FD70, (void (*)(uint64_t))type metadata accessor for BrickLockupView);
    v3 = v2;
    sub_21CDD363C(&qword_253F66D20, &qword_253F66D28);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_2553327C8);
  }
  return result;
}

void sub_21CF59328(uint64_t *a1, double a2)
{
  sub_21CF57FE0(*a1, a2);
}

void sub_21CF59330()
{
  uint64_t v0;

  sub_21CF59328(*(uint64_t **)(v0 + 16), *(double *)(v0 + 24));
}

unint64_t sub_21CF5933C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_2553327F0;
  if (!qword_2553327F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553327E8);
    sub_21CDB6D4C(&qword_253F60270, (void (*)(uint64_t))type metadata accessor for BubbleLockupView);
    v3 = v2;
    sub_21CDD363C(&qword_253F66D20, &qword_253F66D28);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_2553327F0);
  }
  return result;
}

unint64_t sub_21CF593D8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_2553328A8;
  if (!qword_2553328A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553328A0);
    sub_21CDB6D4C(qword_2553328B0, (void (*)(uint64_t))MEMORY[0x24BE084A8]);
    v3[0] = v2;
    v3[1] = sub_21CDEE9A4();
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_2553328A8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_42()
{
  return sub_21D7C56A0();
}

uint64_t OUTLINED_FUNCTION_4_26()
{
  return sub_21D7C21CC();
}

uint64_t OUTLINED_FUNCTION_5_28()
{
  return sub_21D7C56A0();
}

uint64_t OUTLINED_FUNCTION_6_26()
{
  return sub_21D7C21CC();
}

uint64_t OUTLINED_FUNCTION_10_17()
{
  return sub_21D7C48F0();
}

uint64_t OUTLINED_FUNCTION_12_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  __swift_storeEnumTagSinglePayload(v3, a2, 1, v2);
  return sub_21D7C48E4();
}

uint64_t OUTLINED_FUNCTION_13_12()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_18_9(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t OUTLINED_FUNCTION_20_8()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_21_13()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_23_9()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

uint64_t OUTLINED_FUNCTION_24_9()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 96))();
}

uint64_t OUTLINED_FUNCTION_25_8(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_26_11@<X0>(uint64_t a1@<X8>)
{
  char v1;

  return sub_21D427A80(v1, a1);
}

uint64_t OUTLINED_FUNCTION_27_12@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_28_9()
{
  return sub_21D7C56AC();
}

uint64_t OUTLINED_FUNCTION_33_6(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
}

uint64_t OUTLINED_FUNCTION_40_8@<X0>(uint64_t a1@<X8>)
{
  char v1;

  return sub_21D427A80(v1, a1);
}

void OUTLINED_FUNCTION_41_10()
{
  uint64_t *v0;
  uint64_t v1;

  sub_21CDBDA44(v1, v0);
}

uint64_t OUTLINED_FUNCTION_43_7()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_21CF59638()
{
  return swift_getKeyPath();
}

uint64_t sub_21CF59664()
{
  return sub_21D7C1284();
}

uint64_t sub_21CF5967C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD v13[3];
  _QWORD v14[3];

  v13[0] = a3;
  v13[2] = a4;
  sub_21D7C5934();
  v6 = sub_21D7C1E30();
  v7 = sub_21D7C1344();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v13 - v9;
  sub_21CF59638();
  v14[2] = a1;
  swift_unknownObjectRetain();
  sub_21D7C234C();
  swift_unknownObjectRelease();
  swift_release();
  v11 = MEMORY[0x2207938C0](MEMORY[0x24BDF1028], v6);
  v14[0] = a2;
  v14[1] = v11;
  MEMORY[0x2207938C0](MEMORY[0x24BDED308], v7, v14);
  sub_21D7C24E4();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_21CF597D4()
{
  sub_21D7C5E5C();
  sub_21D7C5E68();
  return sub_21D7C5E98();
}

uint64_t sub_21CF59818()
{
  return sub_21CF597D4();
}

uint64_t sub_21CF59820()
{
  return OUTLINED_FUNCTION_42_0();
}

uint64_t sub_21CF59828@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_1_20();
  *a1 = result;
  return result;
}

uint64_t sub_21CF59858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;

  v4 = type metadata accessor for StoreKey(0, a1, a2, a4);
  MEMORY[0x2207938C0](&unk_21D7D2008, v4);
  sub_21D7C17DC();
  return v6;
}

uint64_t sub_21CF598B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = type metadata accessor for StoreKey(0, a2, a3, a4);
  MEMORY[0x2207938C0](&unk_21D7D2008, v4);
  return sub_21D7C17E8();
}

uint64_t type metadata accessor for StoreKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StoreKey);
}

uint64_t sub_21CF5991C()
{
  return 16;
}

__n128 sub_21CF59930(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_21CF5993C(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    return swift_unknownObjectRetain();
  else
    return swift_retain();
}

uint64_t sub_21CF59948(uint64_t a1)
{
  sub_21CF59974(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  return swift_unknownObjectRelease();
}

uint64_t sub_21CF59974(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    return swift_unknownObjectRelease();
  else
    return swift_release();
}

uint64_t sub_21CF59980(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_21CF5993C(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_21CF599D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_21CF5993C(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_21CF59974(v6, v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t sub_21CF59A48(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_21CF59974(v6, v7);
  *(_QWORD *)(a1 + 16) = a2[2];
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 24) = a2[3];
  return a1;
}

uint64_t sub_21CF59AA0(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_21CF59AF4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

uint64_t type metadata accessor for OptionalEnvironmentObject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OptionalEnvironmentObject);
}

uint64_t *sub_21CF59B54(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v4 = type metadata accessor for PopoverSelector();
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = (int *)v4;
    v7 = sub_21D7C4668();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    v10 = v6[5];
    v11 = *(_OWORD *)((char *)a2 + v10 + 24);
    *(_OWORD *)((char *)a1 + v10 + 24) = v11;
    (**(void (***)(void))(v11 - 8))();
    *(uint64_t *)((char *)a1 + v6[6]) = *(uint64_t *)((char *)a2 + v6[6]);
    v12 = v6[7];
    v13 = (uint64_t *)((char *)a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    sub_21D7C4C20();
    sub_21D7C4C20();
  }
  return a1;
}

uint64_t sub_21CF59C78(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_21D7C4668();
  if (!__swift_getEnumTagSinglePayload(a1, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = type metadata accessor for PopoverSelector();
  __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(v3 + 20));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *sub_21CF59CF8(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v4 = sub_21D7C4668();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4))
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
  }
  v6 = (int *)type metadata accessor for PopoverSelector();
  v7 = v6[5];
  v8 = *(_OWORD *)&a2[v7 + 24];
  *(_OWORD *)&a1[v7 + 24] = v8;
  (**(void (***)(void))(v8 - 8))();
  *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
  v9 = v6[7];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *((_QWORD *)v11 + 1);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *((_QWORD *)v10 + 1) = v12;
  sub_21D7C4C20();
  sub_21D7C4C20();
  return a1;
}

char *sub_21CF59DF0(char *a1, char *a2)
{
  uint64_t v4;
  int EnumTagSinglePayload;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;

  v4 = sub_21D7C4668();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v4);
  v6 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4);
  if (!EnumTagSinglePayload)
  {
    v7 = *(_QWORD *)(v4 - 8);
    if (!v6)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v4);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
LABEL_7:
  v9 = (int *)type metadata accessor for PopoverSelector();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)&a1[v9[5]], (uint64_t *)&a2[v9[5]]);
  *(_QWORD *)&a1[v9[6]] = *(_QWORD *)&a2[v9[6]];
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  v10 = v9[7];
  v11 = &a1[v10];
  v12 = &a2[v10];
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = *((_QWORD *)v12 + 1);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_21CF59F38(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  __int128 v10;

  v4 = sub_21D7C4668();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4))
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
  }
  v6 = (int *)type metadata accessor for PopoverSelector();
  v7 = v6[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = *((_OWORD *)v9 + 1);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *((_OWORD *)v8 + 1) = v10;
  *((_QWORD *)v8 + 4) = *((_QWORD *)v9 + 4);
  *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
  *(_OWORD *)&a1[v6[7]] = *(_OWORD *)&a2[v6[7]];
  return a1;
}

char *sub_21CF5A010(char *a1, char *a2)
{
  uint64_t v4;
  int EnumTagSinglePayload;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  v4 = sub_21D7C4668();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v4);
  v6 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4);
  if (!EnumTagSinglePayload)
  {
    v7 = *(_QWORD *)(v4 - 8);
    if (!v6)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v4);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
LABEL_7:
  v9 = (int *)type metadata accessor for PopoverSelector();
  v10 = v9[5];
  v11 = &a1[v10];
  v12 = &a2[v10];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[v10]);
  v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
  *(_QWORD *)&a1[v9[6]] = *(_QWORD *)&a2[v9[6]];
  swift_bridgeObjectRelease();
  v14 = v9[7];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v18 = *(_QWORD *)v16;
  v17 = *((_QWORD *)v16 + 1);
  *(_QWORD *)v15 = v18;
  *((_QWORD *)v15 + 1) = v17;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21CF5A15C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21CF5A168()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_0_40();
  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t sub_21CF5A190()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21CF5A19C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_0_40();
  v0 = OUTLINED_FUNCTION_76_1();
  return __swift_storeEnumTagSinglePayload(v0, v1, v2, v3);
}

uint64_t type metadata accessor for PopoverSelectorView(uint64_t a1)
{
  return sub_21CDFBED8(a1, (uint64_t *)&unk_253F61350);
}

uint64_t sub_21CF5A1D0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for PopoverSelector();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21CF5A238()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_21CF5A248(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  char *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332918);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332920);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v9 = sub_21D7C1854();
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 1;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332928);
  sub_21CF5A3D8(v1, (uint64_t)&v9[*(int *)(v13 + 44)]);
  v14 = sub_21D7C1EF0();
  sub_21D7C0CE4();
  OUTLINED_FUNCTION_17_3();
  sub_21CE39C44((uint64_t)v9, (uint64_t)v12, &qword_255332918);
  v15 = &v12[*(int *)(v10 + 36)];
  *v15 = v14;
  *((_QWORD *)v15 + 1) = v2;
  *((_QWORD *)v15 + 2) = v3;
  *((_QWORD *)v15 + 3) = v4;
  *((_QWORD *)v15 + 4) = v5;
  v15[40] = 0;
  sub_21CE3C2B4((uint64_t)v9, &qword_255332918);
  v16 = sub_21D7C1F08();
  sub_21D7C0CE4();
  OUTLINED_FUNCTION_17_3();
  sub_21CE39C44((uint64_t)v12, a1, &qword_255332920);
  v17 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255332930) + 36);
  *(_BYTE *)v17 = v16;
  *(_QWORD *)(v17 + 8) = v2;
  *(_QWORD *)(v17 + 16) = v3;
  *(_QWORD *)(v17 + 24) = v4;
  *(_QWORD *)(v17 + 32) = v5;
  *(_BYTE *)(v17 + 40) = 0;
  sub_21CE3C2B4((uint64_t)v12, &qword_255332920);
}

void sub_21CF5A3D8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;

  v41 = a1;
  v45 = a2;
  v40 = type metadata accessor for PopoverSelectorView.ButtonView(0);
  v2 = MEMORY[0x24BDAC7A8](v40);
  v44 = (uint64_t)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v39 = (uint64_t)&v37 - v4;
  v5 = sub_21D7C2B98();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332938);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v43 = (uint64_t)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v42 = (uint64_t)&v37 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v37 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v37 - v17;
  *(_QWORD *)v18 = sub_21D7C1980();
  *((_QWORD *)v18 + 1) = 0;
  v18[16] = 1;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332940);
  v20 = &v18[*(int *)(v19 + 44)];
  sub_21D7C2B8C();
  sub_21D7C28E0();
  v21 = sub_21D7C28D4();
  swift_release();
  v22 = sub_21D7C1EFC();
  v38 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v38(v20, v8, v5);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332948);
  v24 = &v20[*(int *)(v23 + 36)];
  *(_QWORD *)v24 = v21;
  v24[8] = v22;
  v25 = *(void (**)(char *, uint64_t))(v6 + 8);
  v25(v8, v5);
  v26 = v39;
  sub_21CE39C70(v41, v39, (uint64_t (*)(_QWORD))type metadata accessor for PopoverSelector);
  v27 = v26 + *(int *)(v40 + 20);
  v46 = 0;
  sub_21D7C2A00();
  v28 = v48;
  *(_BYTE *)v27 = v47;
  *(_QWORD *)(v27 + 8) = v28;
  *(_QWORD *)v16 = sub_21D7C1980();
  *((_QWORD *)v16 + 1) = 0;
  v16[16] = 1;
  v29 = &v16[*(int *)(v19 + 44)];
  sub_21D7C2B8C();
  sub_21D7C28E0();
  v30 = sub_21D7C28D4();
  swift_release();
  LOBYTE(v27) = sub_21D7C1EFC();
  v38(v29, v8, v5);
  v31 = &v29[*(int *)(v23 + 36)];
  *(_QWORD *)v31 = v30;
  v31[8] = v27;
  v25(v8, v5);
  v32 = v42;
  sub_21CE39C44((uint64_t)v18, v42, &qword_255332938);
  v33 = v44;
  sub_21CE39C70(v26, v44, type metadata accessor for PopoverSelectorView.ButtonView);
  v34 = v43;
  sub_21CE39C44((uint64_t)v16, v43, &qword_255332938);
  v35 = v45;
  sub_21CE39C44(v32, v45, &qword_255332938);
  v36 = __swift_instantiateConcreteTypeFromMangledName(qword_255332950);
  sub_21CE39C70(v33, v35 + *(int *)(v36 + 48), type metadata accessor for PopoverSelectorView.ButtonView);
  sub_21CE39C44(v34, v35 + *(int *)(v36 + 64), &qword_255332938);
  sub_21CE3C2B4((uint64_t)v16, &qword_255332938);
  sub_21CF5B8B8(v26);
  sub_21CE3C2B4((uint64_t)v18, &qword_255332938);
  sub_21CE3C2B4(v34, &qword_255332938);
  sub_21CF5B8B8(v33);
  sub_21CE3C2B4(v32, &qword_255332938);
}

uint64_t sub_21CF5A78C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[9];
  char v33;
  uint64_t v34;
  _QWORD v35[11];
  char v36;
  char v37;
  uint64_t v38;
  _QWORD __dst[10];

  v2 = v1;
  v4 = type metadata accessor for PopoverSelectorView.ButtonView(0);
  v31 = *(_QWORD *)(v4 - 8);
  v5 = *(_QWORD *)(v31 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332A00);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CF5AA84(v35);
  if (v35[1])
  {
    memcpy(__dst, v35, 0x48uLL);
    v11 = v1 + *(int *)(v4 + 20);
    v30 = v8;
    v12 = *(_BYTE *)v11;
    v27 = v10;
    v13 = *(_QWORD *)(v11 + 8);
    LOBYTE(v32[0]) = v12;
    v32[1] = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F66FE0);
    sub_21D7C2A24();
    v28 = a1;
    v29 = v7;
    v14 = v35[0];
    v15 = v35[1];
    v16 = v35[2];
    sub_21CE26554(__dst, (uint64_t)v35);
    v35[9] = v14;
    v35[10] = v15;
    v36 = v16;
    v33 = 0;
    sub_21D7C2A00();
    v37 = v32[0];
    v38 = v32[1];
    v33 = v12;
    v34 = v13;
    sub_21D7C2A24();
    sub_21CE39C70(v2, (uint64_t)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PopoverSelectorView.ButtonView);
    sub_21CE26554(__dst, (uint64_t)v32);
    v17 = (*(unsigned __int8 *)(v31 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    v18 = (v5 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
    v19 = swift_allocObject();
    sub_21CE39D08((uint64_t)v6, v19 + v17, type metadata accessor for PopoverSelectorView.ButtonView);
    memcpy((void *)(v19 + v18), v32, 0x48uLL);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255332A08);
    sub_21CF5C310();
    sub_21CE553B0((uint64_t)&unk_255332A18);
    v20 = v27;
    sub_21D7C26E8();
    swift_release();
    swift_release();
    swift_release();
    sub_21CF5C34C((uint64_t)v35);
    sub_21CE26600((uint64_t)__dst);
    v21 = v29;
    v22 = v28;
    (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v28, v20, v29);
    v23 = v22;
    v24 = 0;
    v25 = v21;
  }
  else
  {
    sub_21CE3C2B4((uint64_t)v35, &qword_253F64FD0);
    v23 = a1;
    v24 = 1;
    v25 = v7;
  }
  return __swift_storeEnumTagSinglePayload(v23, v24, 1, v25);
}

void sub_21CF5AA84(void *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t v13;
  _QWORD __src[9];
  _OWORD __dst[5];

  v3 = type metadata accessor for PopoverSelectorView.ButtonView(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&__src[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PopoverSelector();
  v7 = v6;
  v8 = *(_QWORD *)(v1 + *(int *)(v6 + 24));
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v10 = (_QWORD *)(v8 + 32);
    v11 = (_QWORD *)(v1 + *(int *)(v6 + 28));
    sub_21D7C4C20();
    while (1)
    {
      sub_21CE26554(v10, (uint64_t)__src);
      v12 = __src[0] == *v11 && __src[1] == v11[1];
      if (v12 || (sub_21D7C5D84() & 1) != 0)
        break;
      sub_21CE26600((uint64_t)__src);
      v10 += 9;
      if (!--v9)
        goto LABEL_13;
    }
    memcpy(__dst, __src, 0x48uLL);
    swift_bridgeObjectRelease();
    v13 = *((_QWORD *)&__dst[0] + 1);
    sub_21CE39C70(v1, (uint64_t)v5, type metadata accessor for PopoverSelectorView.ButtonView);
    if (v13)
    {
      sub_21CF5B8B8((uint64_t)v5);
      memcpy(a1, __dst, 0x48uLL);
      return;
    }
  }
  else
  {
    sub_21D7C4C20();
LABEL_13:
    memset(__dst, 0, 72);
    swift_bridgeObjectRelease();
    sub_21CE39C70(v1, (uint64_t)v5, type metadata accessor for PopoverSelectorView.ButtonView);
  }
  sub_21D5213A8(*(_QWORD *)&v5[*(int *)(v7 + 24)], (uint64_t)a1);
  sub_21CF5B8B8((uint64_t)v5);
  sub_21CE3C2B4((uint64_t)__dst, &qword_253F64FD0);
}

uint64_t sub_21CF5AC14()
{
  sub_21D7C1EE4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255332A20);
  sub_21CF5C380();
  return sub_21D7C0D74();
}

void sub_21CF5AC84(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332A38);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v8 = sub_21D7C1980();
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255332A40);
  sub_21CF5AD9C(a1, a2);
  LOBYTE(a2) = sub_21D7C1EFC();
  sub_21D7C0CE4();
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;
  sub_21CE39C44((uint64_t)v8, a3, &qword_255332A38);
  v17 = a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255332A20) + 36);
  *(_BYTE *)v17 = (_BYTE)a2;
  *(_QWORD *)(v17 + 8) = v10;
  *(_QWORD *)(v17 + 16) = v12;
  *(_QWORD *)(v17 + 24) = v14;
  *(_QWORD *)(v17 + 32) = v16;
  *(_BYTE *)(v17 + 40) = 0;
  sub_21CE3C2B4((uint64_t)v8, &qword_255332A38);
}

uint64_t sub_21CF5AD9C(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _BYTE __src[72];
  uint64_t v11;

  v4 = type metadata accessor for PopoverSelectorView.ButtonView(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v11 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PopoverSelector() + 24));
  swift_getKeyPath();
  sub_21CE26554(a2, (uint64_t)__src);
  sub_21CE39C70(a1, (uint64_t)&__src[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for PopoverSelectorView.ButtonView);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  memcpy((void *)(v8 + 16), __src, 0x48uLL);
  sub_21CE39D08((uint64_t)&__src[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], v8 + v7, type metadata accessor for PopoverSelectorView.ButtonView);
  sub_21D7C4C20();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255331570);
  sub_21CE553B0((uint64_t)&unk_255332A48);
  sub_21CF5C514();
  return sub_21D7C2BB0();
}

uint64_t sub_21CF5AF20@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  char v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  char v10;

  if (*a1 == *a2 && a1[1] == a2[1])
    v6 = 1;
  else
    v6 = sub_21D7C5D84();
  type metadata accessor for PopoverSelectorView.ButtonView(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F66FE0);
  sub_21D7C2A24();
  *(_BYTE *)a3 = v6 & 1;
  result = sub_21CE26554(a1, a3 + 8);
  *(_QWORD *)(a3 + 80) = v8;
  *(_QWORD *)(a3 + 88) = v9;
  *(_BYTE *)(a3 + 96) = v10;
  return result;
}

void sub_21CF5AFEC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_21CE39D08(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for PopoverSelector);
}

void sub_21CF5B014()
{
  sub_21CDF81B4((uint64_t)&unk_2553328E0);
}

void sub_21CF5B040(uint64_t a1)
{
  uint64_t v2;

  sub_21CDF81B4((uint64_t)&unk_253F61340);
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t sub_21CF5B07C@<X0>(void *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (**v24)();
  uint64_t *v25;
  char *v26;
  uint64_t v27;
  void *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  _BYTE v52[104];
  _BYTE v53[40];
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  uint64_t v61[31];
  char v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;

  v51 = a1;
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332AA0);
  MEMORY[0x24BDAC7A8](v50);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_21D7C195C();
  v48 = *(_QWORD *)(v4 - 8);
  v49 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_21D7C1854();
  sub_21CF5B490(v1, v61);
  v6 = v61[0];
  v7 = v61[1];
  v43 = v61[1];
  v44 = v61[0];
  v8 = v61[3];
  v38 = v61[2];
  v42 = v61[3];
  v9 = v61[4];
  v47 = v61[4];
  v10 = sub_21D7C28E0();
  v45 = v10;
  KeyPath = swift_getKeyPath();
  v46 = KeyPath;
  sub_21D7C2D30();
  sub_21D7C1440();
  v12 = v61[30];
  v31 = v63;
  v32 = v65;
  v33 = v67;
  v34 = v69;
  v35 = v71;
  v36 = v74;
  v37 = v73;
  v60 = 0;
  v59 = v62;
  v58 = v64;
  v57 = v66;
  v56 = v68;
  v55 = v70;
  v54 = v72;
  v13 = sub_21D7C1EFC();
  sub_21D7C0CE4();
  v61[0] = v39;
  v61[1] = 0x4020000000000000;
  LOBYTE(v61[2]) = v60;
  v61[3] = v6;
  v61[4] = v7;
  LOBYTE(v7) = v38;
  v61[5] = v38;
  v61[6] = v8;
  v61[7] = v9;
  v61[8] = KeyPath;
  v61[9] = v10;
  v61[10] = v12;
  LOBYTE(v61[11]) = v59;
  v61[12] = v31;
  LOBYTE(v61[13]) = v58;
  v61[14] = v32;
  LOBYTE(v61[15]) = v57;
  v61[16] = v33;
  LOBYTE(v61[17]) = v56;
  v61[18] = v34;
  LOBYTE(v61[19]) = v55;
  v61[20] = v35;
  LOBYTE(v61[21]) = v54;
  v61[22] = v37;
  v61[23] = v36;
  LOBYTE(v61[24]) = v13;
  v61[25] = v14;
  v61[26] = v15;
  v61[27] = v16;
  v61[28] = v17;
  v18 = v40;
  LOBYTE(v61[29]) = 0;
  sub_21CE39C44(v40 + 40, (uint64_t)v53, &qword_253F67430);
  v19 = v41;
  sub_21D7C1950();
  sub_21CF5CDE0(v18, (uint64_t)v52);
  v20 = swift_allocObject();
  memcpy((void *)(v20 + 16), v52, 0x61uLL);
  sub_21CE39C44((uint64_t)v53, (uint64_t)v3, &qword_253F67430);
  *(_OWORD *)(v3 + 40) = 0u;
  *(_OWORD *)(v3 + 56) = 0u;
  *((_QWORD *)v3 + 9) = 0;
  v22 = v49;
  v21 = (int *)v50;
  v23 = v48;
  (*(void (**)(char *, char *, uint64_t))(v48 + 16))(&v3[*(int *)(v50 + 40)], v19, v49);
  v24 = (uint64_t (**)())&v3[v21[11]];
  *v24 = sub_21CF5CE60;
  v24[1] = (uint64_t (*)())v20;
  v25 = (uint64_t *)&v3[v21[12]];
  *v25 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B18);
  swift_storeEnumTagMultiPayload();
  v26 = &v3[v21[13]];
  *(_QWORD *)v26 = swift_getKeyPath();
  v26[40] = 0;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332AA8);
  v28 = v51;
  sub_21CE39C44((uint64_t)v3, (uint64_t)v51 + *(int *)(v27 + 36), &qword_255332AA0);
  memcpy(v28, v61, 0xE9uLL);
  sub_21CF5CE70(v61);
  sub_21CE3C2B4((uint64_t)v3, &qword_255332AA0);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v19, v22);
  sub_21CE3C2B4((uint64_t)v53, &qword_253F67430);
  sub_21CDFDBEC(v44, v43, v7, v42);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_21CF5B490@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *((_QWORD *)a1 + 3);
  v3 = *((_QWORD *)a1 + 4);
  v5 = *a1;
  sub_21D7C4C20();
  if (v5 == 1)
    v6 = sub_21D7C2958();
  else
    v6 = 0;
  *a2 = v4;
  a2[1] = v3;
  v7 = MEMORY[0x24BEE4AF8];
  a2[2] = 0;
  a2[3] = v7;
  a2[4] = v6;
  sub_21CDFDC1C(v4, v3, 0, v7);
  return sub_21CDFDBEC(v4, v3, 0, v7);
}

uint64_t sub_21CF5B528()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255336AC0);
  return sub_21D7C2B5C();
}

uint64_t sub_21CF5B57C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE __src[120];

  v1 = sub_21D7C195C();
  v11 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332A68);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CF5CD40(v0, (uint64_t)__src);
  v8 = swift_allocObject();
  memcpy((void *)(v8 + 16), __src, 0x70uLL);
  v12 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255332A70);
  sub_21CF5D0E8((uint64_t)&unk_255332A78);
  sub_21D7C2A54();
  sub_21D7C1950();
  sub_21CE553B0((uint64_t)&unk_255332A90);
  sub_21CDF81B4((uint64_t)&unk_255332A98);
  sub_21D7C22F8();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v3, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_21CF5B758()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255336AC0);
  return sub_21D7C2B5C();
}

uint64_t sub_21CF5B7AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v4 = sub_21D7C1854();
  v6 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  sub_21D7C4C20();
  v7 = sub_21D7C2958();
  v8 = MEMORY[0x24BEE4AF8];
  sub_21CDFDC1C(v6, v5, 0, MEMORY[0x24BEE4AF8]);
  sub_21CDFDBEC(v6, v5, 0, v8);
  v9 = sub_21D7C28E0();
  result = swift_getKeyPath();
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = 0x4030000000000000;
  *(_BYTE *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v6;
  *(_QWORD *)(a2 + 32) = v5;
  *(_QWORD *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 48) = v8;
  *(_QWORD *)(a2 + 56) = v7;
  *(_QWORD *)(a2 + 64) = result;
  *(_QWORD *)(a2 + 72) = v9;
  return result;
}

void sub_21CF5B880(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_21CE39C70(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for PopoverSelector);
}

uint64_t type metadata accessor for PopoverSelectorView.ButtonView(uint64_t a1)
{
  return sub_21CDFBED8(a1, qword_2553329B0);
}

uint64_t sub_21CF5B8B8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PopoverSelectorView.ButtonView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_21CF5B8F4(char *a1, uint64_t *a2, uint64_t a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *(_QWORD *)a1 = *a2;
    v4 = (char *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_21D7C4668();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
      memcpy(v4, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v7);
    }
    v10 = (int *)type metadata accessor for PopoverSelector();
    v11 = v10[5];
    v12 = *(_OWORD *)((char *)a2 + v11 + 24);
    *(_OWORD *)&v4[v11 + 24] = v12;
    (**(void (***)(void))(v12 - 8))();
    *(_QWORD *)&v4[v10[6]] = *(uint64_t *)((char *)a2 + v10[6]);
    v13 = v10[7];
    v14 = &v4[v13];
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = v15[1];
    *(_QWORD *)v14 = *v15;
    *((_QWORD *)v14 + 1) = v16;
    v17 = *(int *)(a3 + 20);
    v18 = &v4[v17];
    v19 = (char *)a2 + v17;
    *v18 = *v19;
    *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
    sub_21D7C4C20();
    sub_21D7C4C20();
  }
  swift_retain();
  return v4;
}

uint64_t sub_21CF5BA3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_21D7C4668();
  if (!__swift_getEnumTagSinglePayload(a1, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = type metadata accessor for PopoverSelector();
  __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(v3 + 20));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

char *sub_21CF5BAD8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;

  v6 = sub_21D7C4668();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v8 = (int *)type metadata accessor for PopoverSelector();
  v9 = v8[5];
  v10 = *(_OWORD *)&a2[v9 + 24];
  *(_OWORD *)&a1[v9 + 24] = v10;
  (**(void (***)(void))(v10 - 8))();
  *(_QWORD *)&a1[v8[6]] = *(_QWORD *)&a2[v8[6]];
  v11 = v8[7];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = v14;
  v15 = *(int *)(a3 + 20);
  v16 = &a1[v15];
  v17 = &a2[v15];
  *v16 = *v17;
  *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
  sub_21D7C4C20();
  sub_21D7C4C20();
  swift_retain();
  return a1;
}

char *sub_21CF5BBF8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;

  v6 = sub_21D7C4668();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (!EnumTagSinglePayload)
  {
    v9 = *(_QWORD *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
LABEL_7:
  v11 = (int *)type metadata accessor for PopoverSelector();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)&a1[v11[5]], (uint64_t *)&a2[v11[5]]);
  *(_QWORD *)&a1[v11[6]] = *(_QWORD *)&a2[v11[6]];
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  v12 = v11[7];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  v15 = *(int *)(a3 + 20);
  v16 = &a1[v15];
  v17 = &a2[v15];
  *v16 = *v17;
  *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
  swift_retain();
  swift_release();
  return a1;
}

char *sub_21CF5BD78(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;

  v6 = sub_21D7C4668();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v8 = (int *)type metadata accessor for PopoverSelector();
  v9 = v8[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *((_OWORD *)v11 + 1);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v12;
  *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
  *(_QWORD *)&a1[v8[6]] = *(_QWORD *)&a2[v8[6]];
  *(_OWORD *)&a1[v8[7]] = *(_OWORD *)&a2[v8[7]];
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_21CF5BE60(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;

  v6 = sub_21D7C4668();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (!EnumTagSinglePayload)
  {
    v9 = *(_QWORD *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67608);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
LABEL_7:
  v11 = (int *)type metadata accessor for PopoverSelector();
  v12 = v11[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[v12]);
  v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
  *(_QWORD *)&a1[v11[6]] = *(_QWORD *)&a2[v11[6]];
  swift_bridgeObjectRelease();
  v16 = v11[7];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v20 = *(_QWORD *)v18;
  v19 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = v20;
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  v21 = *(int *)(a3 + 20);
  v22 = &a1[v21];
  v23 = &a2[v21];
  *v22 = *v23;
  *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
  swift_release();
  return a1;
}

uint64_t sub_21CF5BFD4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21CF5BFE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;
  int v9;

  v6 = OUTLINED_FUNCTION_3_29();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  v9 = v8 - 1;
  if (v9 < 0)
    v9 = -1;
  return (v9 + 1);
}

uint64_t sub_21CF5C064()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21CF5C070(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = OUTLINED_FUNCTION_0_40();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = OUTLINED_FUNCTION_76_1();
    return __swift_storeEnumTagSinglePayload(v9, v10, v11, v12);
  }
  else
  {
    *(_QWORD *)(v5 + *(int *)(a4 + 20) + 8) = v4;
  }
  return result;
}

uint64_t sub_21CF5C0D0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for PopoverSelector();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_21CF5C140()
{
  sub_21CF5D004((uint64_t)&unk_2553329E8);
}

unint64_t sub_21CF5C16C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_2553329F0;
  if (!qword_2553329F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255332920);
    sub_21CE553B0((uint64_t)&unk_2553329F8);
    v3[0] = v2;
    v3[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_2553329F0);
  }
  return result;
}

uint64_t sub_21CF5C1F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21CF5C200()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for PopoverSelectorView.ButtonView(0);
  v2 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64)
      + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  v3 = sub_21D7C4668();
  if (!OUTLINED_FUNCTION_29_3(v3))
    OUTLINED_FUNCTION_30_4();
  v4 = OUTLINED_FUNCTION_3_29();
  OUTLINED_FUNCTION_15_14(v4);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_7_18();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + v2 + 56))
    __swift_destroy_boxed_opaque_existential_1(v0 + v2 + 32);
  return swift_deallocObject();
}

uint64_t sub_21CF5C2C0()
{
  type metadata accessor for PopoverSelectorView.ButtonView(0);
  return sub_21CF5AC14();
}

unint64_t sub_21CF5C310()
{
  unint64_t result;

  result = qword_255332A10;
  if (!qword_255332A10)
  {
    result = MEMORY[0x2207938C0](&unk_21D7D22A4, &type metadata for PopoverButton);
    atomic_store(result, (unint64_t *)&qword_255332A10);
  }
  return result;
}

uint64_t sub_21CF5C34C(uint64_t a1)
{
  destroy for PopoverButton(a1);
  return a1;
}

void sub_21CF5C378(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_21CF5AC84(*(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24), a1);
}

unint64_t sub_21CF5C380()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255332A28;
  if (!qword_255332A28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255332A20);
    sub_21CE553B0((uint64_t)&unk_255332A30);
    v3[0] = v2;
    v3[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255332A28);
  }
  return result;
}

uint64_t sub_21CF5C404()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  type metadata accessor for PopoverSelectorView.ButtonView(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 72))
    __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  v1 = sub_21D7C4668();
  if (!OUTLINED_FUNCTION_29_3(v1))
    OUTLINED_FUNCTION_30_4();
  v2 = OUTLINED_FUNCTION_3_29();
  OUTLINED_FUNCTION_15_14(v2);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_7_18();
  return swift_deallocObject();
}

uint64_t sub_21CF5C4C4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  type metadata accessor for PopoverSelectorView.ButtonView(0);
  return sub_21CF5AF20(a1, (_QWORD *)(v2 + 16), a2);
}

unint64_t sub_21CF5C514()
{
  unint64_t result;

  result = qword_255332A50;
  if (!qword_255332A50)
  {
    result = MEMORY[0x2207938C0](&unk_21D7D2254, &type metadata for PopoverItemContent);
    atomic_store(result, (unint64_t *)&qword_255332A50);
  }
  return result;
}

uint64_t destroy for PopoverItemContent(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 64))
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for PopoverItemContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = a2 + 40;
  v7 = *(_QWORD *)(a2 + 64);
  sub_21D7C4C20();
  sub_21D7C4C20();
  if (v7)
  {
    v8 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v7;
    *(_QWORD *)(a1 + 72) = v8;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8))(a1 + 40, v6, v7);
  }
  else
  {
    v9 = *(_OWORD *)(v6 + 16);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v6;
    *(_OWORD *)(a1 + 56) = v9;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(v6 + 32);
  }
  v10 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v10;
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for PopoverItemContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 64);
  if (!*(_QWORD *)(a1 + 64))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 64) = v4;
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 40, a2 + 40);
      goto LABEL_8;
    }
LABEL_7:
    v5 = *(_OWORD *)(a2 + 40);
    v6 = *(_OWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 40) = v5;
    *(_OWORD *)(a1 + 56) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
LABEL_8:
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  return a1;
}

void *__swift_memcpy97_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x61uLL);
}

uint64_t assignWithTake for PopoverItemContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 64))
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  v6 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  swift_release();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_release();
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for PopoverItemContent(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 97))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PopoverItemContent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 96) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 97) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 97) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PopoverItemContent()
{
  return &type metadata for PopoverItemContent;
}

uint64_t destroy for PopoverButton(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 56))
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for PopoverButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = a2 + 32;
  v7 = *(_QWORD *)(a2 + 56);
  sub_21D7C4C20();
  sub_21D7C4C20();
  if (v7)
  {
    v8 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v7;
    *(_QWORD *)(a1 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8))(a1 + 32, v6, v7);
  }
  else
  {
    v9 = *(_OWORD *)(v6 + 16);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v6;
    *(_OWORD *)(a1 + 48) = v9;
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(v6 + 32);
  }
  v10 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v10;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for PopoverButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_21D7C4C20();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 56);
  if (!*(_QWORD *)(a1 + 56))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 56) = v4;
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 32, a2 + 32);
      goto LABEL_8;
    }
LABEL_7:
    v5 = *(_OWORD *)(a2 + 32);
    v6 = *(_OWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 32) = v5;
    *(_OWORD *)(a1 + 48) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
LABEL_8:
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy112_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x70uLL);
}

uint64_t assignWithTake for PopoverButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 56))
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  swift_release();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_release();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PopoverButton(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 112))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PopoverButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PopoverButton()
{
  return &type metadata for PopoverButton;
}

unint64_t sub_21CF5CC60()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[5];

  result = qword_255332A58;
  if (!qword_255332A58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255332A60);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255332A08);
    v3 = sub_21CF5C310();
    sub_21CE553B0((uint64_t)&unk_255332A18);
    v5[1] = &type metadata for PopoverButton;
    v5[2] = v2;
    v5[3] = v3;
    v5[4] = v4;
    v5[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x2207938C0](MEMORY[0x24BDF5578], v1, v5);
    atomic_store(result, (unint64_t *)&qword_255332A58);
  }
  return result;
}

uint64_t sub_21CF5CD20()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21CF5CD30()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21CF5CD40(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for PopoverButton(a2, a1);
  return a2;
}

uint64_t sub_21CF5CD74()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 72))
    __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21CF5CDC8()
{
  return sub_21CF5B758();
}

uint64_t sub_21CF5CDD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21CF5B7AC(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_21CF5CDE0(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for PopoverItemContent(a2, a1);
  return a2;
}

uint64_t sub_21CF5CE14()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 80))
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21CF5CE60()
{
  return sub_21CF5B528();
}

uint64_t *sub_21CF5CE70(uint64_t *a1)
{
  sub_21CDFDC1C(a1[3], a1[4], a1[5], a1[6]);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_21CF5CEC4()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255332A68);
  sub_21D7C195C();
  sub_21CE553B0((uint64_t)&unk_255332A90);
  sub_21CDF81B4((uint64_t)&unk_255332A98);
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_21CF5CF68()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_255332AB0;
  if (!qword_255332AB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255332AA8);
    sub_21CF5D004((uint64_t)&unk_255332AB8);
    v3 = v2;
    sub_21CE553B0((uint64_t)&unk_255332AF8);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_255332AB0);
  }
  return result;
}

void sub_21CF5D004(uint64_t a1)
{
  unint64_t *v1;
  uint64_t *v2;
  uint64_t (*v3)(void);
  uint64_t (*v4)(void);
  uint64_t v5;
  _QWORD v6[2];

  if (!OUTLINED_FUNCTION_115(a1))
  {
    v4 = v3;
    v5 = OUTLINED_FUNCTION_16_9(0, v2);
    v6[0] = v4();
    v6[1] = MEMORY[0x24BDECC60];
    atomic_store(MEMORY[0x2207938C0](MEMORY[0x24BDED308], v5, v6), v1);
  }
  OUTLINED_FUNCTION_54_1();
}

unint64_t sub_21CF5D05C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255332AC8;
  if (!qword_255332AC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255332AD0);
    sub_21CF5D0E8((uint64_t)&unk_255332AD8);
    v3[0] = v2;
    v3[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x2207938C0](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255332AC8);
  }
  return result;
}

void sub_21CF5D0E8(uint64_t a1)
{
  unint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[2];

  if (!OUTLINED_FUNCTION_115(a1))
  {
    v4 = v3;
    v5 = OUTLINED_FUNCTION_16_9(0, v2);
    sub_21CE553B0(v4);
    v7 = v6;
    sub_21CE553B0((uint64_t)&qword_253F66D90);
    v9[0] = v7;
    v9[1] = v8;
    atomic_store(MEMORY[0x2207938C0](MEMORY[0x24BDED308], v5, v9), v1);
  }
  OUTLINED_FUNCTION_54_1();
}

uint64_t OUTLINED_FUNCTION_0_40()
{
  return type metadata accessor for PopoverSelector();
}

uint64_t OUTLINED_FUNCTION_3_29()
{
  return type metadata accessor for PopoverSelector();
}

uint64_t OUTLINED_FUNCTION_7_18()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_15_14(uint64_t a1)
{
  uint64_t v1;

  return __swift_destroy_boxed_opaque_existential_1(v1 + *(int *)(a1 + 20));
}

uint64_t sub_21CF5D1A0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = sub_21D7C4314();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_21CF5D228(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = sub_21D7C4314();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10;
  v12 = v7 + v10;
  v13 = *(_DWORD *)(v6 + 80) | v10;
  v14 = (*(_BYTE *)(v6 + 80) | v10);
  v15 = v13 & 0x100000;
  if (v14 > 7 || v15 != 0 || (v12 & (unint64_t)~v11) + *(_QWORD *)(v9 + 64) > 0x18)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  else
  {
    v19 = v8;
    v20 = ~v11;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v12) & v20, ((unint64_t)a2 + v12) & v20, v19);
  }
  return a1;
}

uint64_t sub_21CF5D308(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = *(_QWORD *)(v3 + 64);
  v5 = sub_21D7C4314();
  return (*(uint64_t (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))((v4 + a1 + *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80), v5);
}

uint64_t sub_21CF5D35C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_21D7C4314();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_21CF5D3CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_21D7C4314();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 24))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_21CF5D43C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_21D7C4314();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_21CF5D4AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_21D7C4314();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 40))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_21CF5D51C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;
  uint64_t v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = sub_21D7C4314();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v7)
    v11 = v7;
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = v8;
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = *(_QWORD *)(v6 + 64) + v13;
  if (a2 <= v11)
    goto LABEL_23;
  v15 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v16 = 8 * v15;
  if (v15 <= 3)
  {
    v18 = ((a2 - v11 + ~(-1 << v16)) >> v16) + 1;
    if (HIWORD(v18))
    {
      v17 = *(_DWORD *)(a1 + v15);
      if (!v17)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v18 > 0xFF)
    {
      v17 = *(unsigned __int16 *)(a1 + v15);
      if (!*(_WORD *)(a1 + v15))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v18 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v7 >= v10)
        {
          v21 = a1;
          v10 = v7;
          v12 = v5;
        }
        else
        {
          v21 = (v14 + a1) & ~v13;
        }
        return __swift_getEnumTagSinglePayload(v21, v10, v12);
      }
      return 0;
    }
  }
  v17 = *(unsigned __int8 *)(a1 + v15);
  if (!*(_BYTE *)(a1 + v15))
    goto LABEL_23;
LABEL_14:
  v19 = (v17 - 1) << v16;
  if (v15 > 3)
    v19 = 0;
  if ((_DWORD)v15)
  {
    if (v15 <= 3)
      v20 = v15;
    else
      v20 = 4;
    __asm { BR              X12 }
  }
  return v11 + v19 + 1;
}

void sub_21CF5D6AC(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  size_t v11;
  char v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(sub_21D7C4314() - 8);
  if (*(_DWORD *)(v9 + 84) <= v8)
    v10 = v8;
  else
    v10 = *(_DWORD *)(v9 + 84);
  v11 = ((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
      + *(_QWORD *)(v9 + 64);
  v12 = 8 * v11;
  if (a3 <= v10)
  {
    v13 = 0;
  }
  else if (v11 <= 3)
  {
    v15 = ((a3 - v10 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v15))
    {
      v13 = 4u;
    }
    else if (v15 >= 0x100)
    {
      v13 = 2;
    }
    else
    {
      v13 = v15 > 1;
    }
  }
  else
  {
    v13 = 1u;
  }
  if (v10 < a2)
  {
    v14 = ~v10 + a2;
    if (v11 < 4)
    {
      if ((_DWORD)v11)
      {
        v16 = v14 & ~(-1 << v12);
        bzero(a1, v11);
        if ((_DWORD)v11 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if ((_DWORD)v11 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v14;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t type metadata accessor for CreateMusicItemStationAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CreateMusicItemStationAction);
}

uint64_t sub_21CF5D8BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 36);
  v5 = sub_21D7C4314();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_21CF5D8FC(const void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;

  sub_21CF5DDFC(a1, &v47);
  v1 = v47;
  if ((v57 & 1) != 0)
  {
    v2 = v48;
    v3 = v49;
    v4 = v50;
    v6 = v52;
    v5 = v53;
    v7 = v54;
    v8 = v55;
    v9 = v56;
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F67E28);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_21D7C9390;
    if (v2 == 1)
    {
      v1 = 0;
      v2 = 0;
      v3 = 0;
      v4 = 0;
    }
    else
    {
      sub_21D7C4C20();
      OUTLINED_FUNCTION_27_0();
    }
    *(_QWORD *)(inited + 32) = v1;
    *(_QWORD *)(inited + 40) = v2;
    *(_QWORD *)(inited + 48) = v3;
    *(_QWORD *)(inited + 56) = v4;
    if (v5 == 1)
    {
      *(_OWORD *)(inited + 80) = 0u;
      *(_OWORD *)(inited + 96) = 0u;
      *(_OWORD *)(inited + 64) = 0u;
      if (v2)
      {
LABEL_9:
        OUTLINED_FUNCTION_27_0();
        OUTLINED_FUNCTION_6_27();
        v21 = v20;
        v22 = *(_QWORD *)(v20 + 16);
        if (v22 >= *(_QWORD *)(v20 + 24) >> 1)
        {
          OUTLINED_FUNCTION_0_41();
          v21 = v40;
        }
        *(_QWORD *)(v21 + 16) = v22 + 1;
        v23 = v21 + 16 * v22;
        *(_QWORD *)(v23 + 32) = v1;
        *(_QWORD *)(v23 + 40) = v2;
      }
    }
    else
    {
      *(_QWORD *)(inited + 64) = v6;
      *(_QWORD *)(inited + 72) = v5;
      sub_21D7C4C20();
      if (v7)
      {
        v24 = sub_21D7C4C20();
        v25 = sub_21D3B63D4(v24);
        v27 = v26;
        swift_bridgeObjectRelease();
      }
      else
      {
        v25 = 0;
        v27 = 0;
      }
      *(_QWORD *)(inited + 80) = v25;
      *(_QWORD *)(inited + 88) = v27;
      *(_QWORD *)(inited + 96) = v8;
      *(_QWORD *)(inited + 104) = v9;
      sub_21D7C4C20();
      v1 = *(_QWORD *)(inited + 32);
      v2 = *(_QWORD *)(inited + 40);
      if (v2)
        goto LABEL_9;
    }
    if (*(_QWORD *)(inited + 56))
    {
      OUTLINED_FUNCTION_27_0();
      if ((OUTLINED_FUNCTION_26_0() & 1) == 0)
        OUTLINED_FUNCTION_99_0();
      OUTLINED_FUNCTION_5_29();
      if (v38)
        OUTLINED_FUNCTION_0_41();
      OUTLINED_FUNCTION_4_27();
    }
    if (*(_QWORD *)(inited + 72))
    {
      OUTLINED_FUNCTION_27_0();
      if ((OUTLINED_FUNCTION_26_0() & 1) == 0)
        OUTLINED_FUNCTION_99_0();
      OUTLINED_FUNCTION_5_29();
      if (v38)
        OUTLINED_FUNCTION_0_41();
      OUTLINED_FUNCTION_4_27();
    }
    if (*(_QWORD *)(inited + 88))
    {
      OUTLINED_FUNCTION_27_0();
      if ((OUTLINED_FUNCTION_26_0() & 1) == 0)
        OUTLINED_FUNCTION_99_0();
      OUTLINED_FUNCTION_5_29();
      if (v38)
        OUTLINED_FUNCTION_0_41();
      OUTLINED_FUNCTION_4_27();
    }
    if (*(_QWORD *)(inited + 104))
    {
      OUTLINED_FUNCTION_27_0();
      if ((OUTLINED_FUNCTION_26_0() & 1) == 0)
        OUTLINED_FUNCTION_99_0();
      OUTLINED_FUNCTION_5_29();
      if (v38)
        OUTLINED_FUNCTION_0_41();
      OUTLINED_FUNCTION_4_27();
    }
    swift_setDeallocating();
    sub_21D1D1040();
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F67920);
    sub_21CF5DE38();
    OUTLINED_FUNCTION_7_19();
    sub_21D7C5070();
    goto LABEL_60;
  }
  v11 = v48;
  v12 = v49;
  v14 = v50;
  v13 = v51;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F67E28);
  v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_21D7C93A0;
  *(_QWORD *)(v15 + 32) = v1;
  *(_QWORD *)(v15 + 40) = v11;
  OUTLINED_FUNCTION_1_15();
  if (v12)
  {
    v16 = sub_21D7C4C20();
    v17 = sub_21D3B63D4(v16);
    v19 = v18;
    swift_bridgeObjectRelease();
    v1 = *(_QWORD *)(v15 + 32);
    v11 = *(_QWORD *)(v15 + 40);
  }
  else
  {
    v17 = 0;
    v19 = 0;
  }
  *(_QWORD *)(v15 + 48) = v17;
  *(_QWORD *)(v15 + 56) = v19;
  *(_QWORD *)(v15 + 64) = v14;
  *(_QWORD *)(v15 + 72) = v13;
  if (v11)
  {
    OUTLINED_FUNCTION_1_15();
    OUTLINED_FUNCTION_27_0();
    OUTLINED_FUNCTION_6_27();
    v29 = v28;
    v30 = *(_QWORD *)(v28 + 16);
    if (v30 >= *(_QWORD *)(v28 + 24) >> 1)
    {
      OUTLINED_FUNCTION_2_39();
      v29 = v41;
    }
    *(_QWORD *)(v29 + 16) = v30 + 1;
    v31 = v29 + 16 * v30;
    *(_QWORD *)(v31 + 32) = v1;
    *(_QWORD *)(v31 + 40) = v11;
    v17 = *(_QWORD *)(v15 + 48);
    v19 = *(_QWORD *)(v15 + 56);
    if (!v19)
      goto LABEL_26;
    goto LABEL_21;
  }
  OUTLINED_FUNCTION_27_0();
  v29 = MEMORY[0x24BEE4AF8];
  if (v19)
  {
LABEL_21:
    sub_21D7C4C20();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_2_39();
      v29 = v42;
    }
    v32 = *(_QWORD *)(v29 + 16);
    if (v32 >= *(_QWORD *)(v29 + 24) >> 1)
    {
      OUTLINED_FUNCTION_2_39();
      v29 = v43;
    }
    *(_QWORD *)(v29 + 16) = v32 + 1;
    v33 = v29 + 16 * v32;
    *(_QWORD *)(v33 + 32) = v17;
    *(_QWORD *)(v33 + 40) = v19;
  }
LABEL_26:
  v34 = *(_QWORD *)(v15 + 72);
  if (v34)
  {
    v35 = *(_QWORD *)(v15 + 64);
    sub_21D7C4C20();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_2_39();
      v29 = v44;
    }
    v36 = *(_QWORD *)(v29 + 16);
    if (v36 >= *(_QWORD *)(v29 + 24) >> 1)
    {
      OUTLINED_FUNCTION_2_39();
      v29 = v45;
    }
    *(_QWORD *)(v29 + 16) = v36 + 1;
    v37 = v29 + 16 * v36;
    *(_QWORD *)(v37 + 32) = v35;
    *(_QWORD *)(v37 + 40) = v34;
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F67920);
  sub_21CF5DE38();
  OUTLINED_FUNCTION_7_19();
  sub_21D7C5070();
LABEL_60:
  swift_bridgeObjectRelease();
  type metadata accessor for PosterLockup();
  v46 = sub_21D7C5EF8();
  sub_21D7C51E4();
  sub_21D7C51E4();
  swift_bridgeObjectRelease();
  return v46;
}

void *sub_21CF5DDFC(const void *a1, void *a2)
{
  __swift_memcpy84_8(a2, a1);
  return a2;
}

unint64_t sub_21CF5DE38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_253F67928;
  if (!qword_253F67928)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F67920);
    result = MEMORY[0x2207938C0](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_253F67928);
  }
  return result;
}

void OUTLINED_FUNCTION_0_41()
{
  sub_21D038518();
}

void OUTLINED_FUNCTION_2_39()
{
  sub_21D038518();
}

void OUTLINED_FUNCTION_4_27()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v0 + 16) = v2;
  v5 = v0 + 16 * v4;
  *(_QWORD *)(v5 + 32) = v3;
  *(_QWORD *)(v5 + 40) = v1;
}

void OUTLINED_FUNCTION_6_27()
{
  sub_21D038518();
}

uint64_t OUTLINED_FUNCTION_7_19()
{
  return 2109216;
}

uint64_t sub_21CF5DEE8@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *boxed_opaque_existential_1;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v20;
  uint64_t v21;

  v9 = sub_21D7C4314();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  if ((a1 & 1) != 0)
  {
    sub_21D7C3FFC();
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F67DD0);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_21D7C8550;
    sub_21D7C42D8();
    *(_QWORD *)(v14 + 56) = type metadata accessor for DismissSearchFocusAction();
    *(_QWORD *)(v14 + 64) = sub_21CF5E0BC();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v14 + 32));
    (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 32))(boxed_opaque_existential_1, v13, v9);
    *(_QWORD *)(v14 + 96) = a2;
    *(_QWORD *)(v14 + 104) = a3;
    v16 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v14 + 72));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(v16, v4, a2);
    v17 = sub_21D7C43EC();
    v18 = MEMORY[0x24BE5CDC0];
    a4[3] = v17;
    a4[4] = v18;
    __swift_allocate_boxed_opaque_existential_1(a4);
    return sub_21D7C43E0();
  }
  else
  {
    a4[3] = a2;
    a4[4] = a3;
    v20 = __swift_allocate_boxed_opaque_existential_1(a4);
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(v20, v4, a2);
  }
}

uint64_t type metadata accessor for DismissSearchFocusAction()
{
  uint64_t result;

  result = qword_253F62590;
  if (!qword_253F62590)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_21CF5E0BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_253F62588;
  if (!qword_253F62588)
  {
    v1 = type metadata accessor for DismissSearchFocusAction();
    result = MEMORY[0x2207938C0](&unk_21D7D243C, v1);
    atomic_store(result, (unint64_t *)&qword_253F62588);
  }
  return result;
}

uint64_t sub_21CF5E0FC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21CF5E108()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_8();
  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t sub_21CF5E130()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21CF5E13C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_8();
  return __swift_storeEnumTagSinglePayload(v1, v0, v0, v2);
}

uint64_t sub_21CF5E168()
{
  uint64_t v0;
  uint64_t v2;

  type metadata accessor for AgeVerificationManager();
  sub_21D7C4494();
  sub_21D7C4D64();
  v0 = swift_allocObject();
  sub_21CF5E1EC(v2);
  swift_release();
  return v0;
}

uint64_t sub_21CF5E1EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  void *v15;
  os_unfair_lock_s *v16;
  id v17;
  id v18;
  uint64_t v20;
  void *v21;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F675E8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5E340);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v2 + OBJC_IVAR____TtC7MusicUI24ExplicitBadgingPresenter__verificationState;
  v21 = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F67B88);
  sub_21D7C0BD0();
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v12, v11, v8);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC7MusicUI24ExplicitBadgingPresenter_ageVerificationManager) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F673F8);
  sub_21CF5E96C();
  swift_retain();
  sub_21D7C4290();
  sub_21D7C429C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(os_unfair_lock_s **)(v13 + 16);
  swift_retain();
  os_unfair_lock_lock(v14);
  v15 = *(void **)(a1 + 32);
  v16 = *(os_unfair_lock_s **)(v13 + 16);
  v17 = v15;
  os_unfair_lock_unlock(v16);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  v21 = v15;
  v18 = v17;
  swift_retain();
  sub_21D7C0C0C();

  swift_release();
  return v2;
}

uint64_t (*sub_21CF5E404())()
{
  swift_retain();
  return sub_21CF5EA00;
}

void sub_21CF5E434(void *a1)
{
  id v2;
  char v3;
  id v4;
  void *v5;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_21D7C0C00();
  swift_release();
  swift_release();
  if (!a1)
  {
    if (!v5)
      return;

    goto LABEL_7;
  }
  if (!v5
    || (sub_21CF5EA04(),
        v2 = a1,
        v3 = sub_21D7C58E0(),
        v2,
        v2,
        v5,
        (v3 & 1) == 0))
  {
LABEL_7:
    swift_getKeyPath();
    swift_getKeyPath();
    v4 = a1;
    swift_retain();
    sub_21D7C0C0C();
  }
}

uint64_t (*sub_21CF5E540())(_QWORD *a1)
{
  uint64_t (*v0)();
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = sub_21CF5E404();
  v2 = v1;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v0;
  *(_QWORD *)(v3 + 24) = v2;
  return sub_21CF5E9DC;
}

uint64_t sub_21CF5E588(char a1)
{
  uint64_t v1;
  id v3;

  if ((a1 & 1) == 0)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F67D48);
  sub_21D7BFC1C();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_21D7C8560;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21D7C0C00();
  swift_release();
  swift_release();
  if (v3 && objc_msgSend(v3, sel_treatment) == (id)1)
    sub_21D7BFBF8();
  else
    sub_21D7BFC04();

  return v1;
}

uint64_t sub_21CF5E698()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_21D7C0C00();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_21CF5E708@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_21D7C0C00();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_21CF5E784(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  v2 = v1;
  swift_retain();
  return sub_21D7C0C0C();
}

uint64_t sub_21CF5E7F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC7MusicUI24ExplicitBadgingPresenter__verificationState;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5E340);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_21CF5E85C()
{
  return type metadata accessor for ExplicitBadgingPresenter();
}

uint64_t type metadata accessor for ExplicitBadgingPresenter()
{
  uint64_t result;

  result = qword_253F625B8;
  if (!qword_253F625B8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_21CF5E89C()
{
  unint64_t v0;

  sub_21CF5E914();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_21CF5E914()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_253F5E348)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_253F67B88);
    v0 = sub_21D7C0C24();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_253F5E348);
  }
}

unint64_t sub_21CF5E96C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_253F673F0;
  if (!qword_253F673F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F673F8);
    result = MEMORY[0x2207938C0](MEMORY[0x24BE5C5C8], v1);
    atomic_store(result, (unint64_t *)&qword_253F673F0);
  }
  return result;
}

uint64_t sub_21CF5E9B8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21CF5E9DC(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

unint64_t sub_21CF5EA04()
{
  unint64_t result;

  result = qword_255332B28;
  if (!qword_255332B28)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255332B28);
  }
  return result;
}

uint64_t sub_21CF5EA40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t);
  uint64_t v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F67510);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v15 - v11;
  sub_21D510760(a1, v10);
  sub_21CF5EB44(a1, a2, v12);
  v13 = *(void (**)(char *, uint64_t))(v7 + 8);
  v13(v10, v6);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(a3, v12, v6);
  sub_21CF5F198();
  sub_21D7C4500();
  return ((uint64_t (*)(char *, uint64_t))v13)(v12, v6);
}

uint64_t sub_21CF5EB44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t);
  void (*v21)(char *, uint64_t);
  _QWORD v23[2];

  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F67510);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)v23 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)v23 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v23 - v18;
  v23[0] = a1;
  v23[1] = a2;
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v20(v11, v3, v7);
  sub_21CDDF764();
  sub_21D7C4500();
  v23[0] = a1;
  v20(v14, (uint64_t)v11, v7);
  sub_21CF5F1D4();
  sub_21D7C4500();
  v21 = *(void (**)(char *, uint64_t))(v8 + 8);
  v21(v11, v7);
  v23[0] = a1;
  v20(v17, (uint64_t)v14, v7);
  sub_21CF5F210();
  sub_21D7C4500();
  v21(v14, v7);
  v23[0] = a1;
  v20(v19, (uint64_t)v17, v7);
  sub_21CF5F24C();
  sub_21D7C4500();
  v21(v17, v7);
  v20(a3, (uint64_t)v19, v7);
  sub_21CF5F198();
  sub_21D7C4500();
  return ((uint64_t (*)(char *, uint64_t))v21)(v19, v7);
}

void sub_21CF5ED54(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[12];

  v18[6] = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F67510);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v4 = MEMORY[0x24BDAC7A8](v3);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_70_5();
  v18[1] = v5;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_70_5();
  v18[2] = v7;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_70_5();
  v18[3] = v9;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_70_5();
  v18[4] = v11;
  OUTLINED_FUNCTION_88_1();
  MEMORY[0x24BDAC7A8](v12);
  v18[5] = (char *)v18 - v13;
  v14 = OUTLINED_FUNCTION_5_30();
  type metadata accessor for RemoveItemActionImplementation(v14, v15, v16, v17);
  OUTLINED_FUNCTION_73_2();
  v18[7] = sub_21D3D9508();
  OUTLINED_FUNCTION_5_26();
}

void sub_21CF5EEA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_9_21();
  sub_21D7C4518();
  OUTLINED_FUNCTION_86_2();
  v1 = OUTLINED_FUNCTION_5_30();
  type metadata accessor for RemoveSectionActionImplementation(v1, v2, v3, v4);
  OUTLINED_FUNCTION_73_2();
  *(_QWORD *)(v0 - 120) = sub_21D3D9508();
  OUTLINED_FUNCTION_5_26();
}

void sub_21CF5EEE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_9_21();
  OUTLINED_FUNCTION_4_28();
  OUTLINED_FUNCTION_86_2();
  OUTLINED_FUNCTION_6_28(v0);
  type metadata accessor for PlayAction();
  v2 = sub_21CDBFDBC(&qword_253F5F258, (uint64_t (*)(uint64_t))type metadata accessor for PlayAction, (uint64_t)&unk_21D7CA850);
  *(_QWORD *)(v1 - 88) = OUTLINED_FUNCTION_1_43(v2);
  OUTLINED_FUNCTION_73_2();
  OUTLINED_FUNCTION_0_42();
}

void sub_21CF5EF3C()
{
  OUTLINED_FUNCTION_5_26();
}

void sub_21CF5EF4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_13_13();
  OUTLINED_FUNCTION_7_20();
  swift_release();
  OUTLINED_FUNCTION_6_28(v0);
  type metadata accessor for PlayNextAction();
  v2 = sub_21CDBFDBC(&qword_253F5FBC0, (uint64_t (*)(uint64_t))type metadata accessor for PlayNextAction, (uint64_t)&unk_21D7F6DF0);
  *(_QWORD *)(v1 - 88) = OUTLINED_FUNCTION_1_43(v2);
  OUTLINED_FUNCTION_73_2();
  OUTLINED_FUNCTION_0_42();
}

void sub_21CF5EFA4()
{
  OUTLINED_FUNCTION_5_26();
}

void sub_21CF5EFB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_13_13();
  OUTLINED_FUNCTION_10_18();
  swift_release();
  OUTLINED_FUNCTION_6_28(v0);
  type metadata accessor for PlayLaterAction();
  v2 = sub_21CDBFDBC(&qword_253F5FE68, (uint64_t (*)(uint64_t))type metadata accessor for PlayLaterAction, (uint64_t)&unk_21D7FB4D0);
  *(_QWORD *)(v1 - 88) = OUTLINED_FUNCTION_1_43(v2);
  OUTLINED_FUNCTION_73_2();
  OUTLINED_FUNCTION_0_42();
}

void sub_21CF5F010()
{
  OUTLINED_FUNCTION_5_26();
}

void sub_21CF5F020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_13_13();
  OUTLINED_FUNCTION_4_28();
  swift_release();
  OUTLINED_FUNCTION_6_28(v0);
  type metadata accessor for ShuffleAction();
  v2 = sub_21CDBFDBC(&qword_253F5F9D8, (uint64_t (*)(uint64_t))type metadata accessor for ShuffleAction, (uint64_t)&unk_21D7D9A58);
  *(_QWORD *)(v1 - 88) = OUTLINED_FUNCTION_1_43(v2);
  OUTLINED_FUNCTION_73_2();
  OUTLINED_FUNCTION_0_42();
}

void sub_21CF5F078()
{
  OUTLINED_FUNCTION_5_26();
}

void sub_21CF5F088()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_13_13();
  OUTLINED_FUNCTION_7_20();
  swift_release();
  OUTLINED_FUNCTION_6_28(v1);
  *(_QWORD *)(v2 - 120) = nullsub_1(v0, v3, v4);
  v5 = OUTLINED_FUNCTION_5_30();
  type metadata accessor for MapFlowActionImplementation(v5, v6, v7, v8);
  OUTLINED_FUNCTION_73_2();
  OUTLINED_FUNCTION_5_26();
}

void sub_21CF5F0D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_9_21();
  OUTLINED_FUNCTION_4_28();
  OUTLINED_FUNCTION_86_2();
  OUTLINED_FUNCTION_6_28(v1);
  *(_QWORD *)(v2 - 120) = nullsub_1(v0, v3, v4);
  v5 = OUTLINED_FUNCTION_5_30();
  type metadata accessor for MapCreateStationActionImplementation(v5, v6, v7, v8);
  OUTLINED_FUNCTION_73_2();
  OUTLINED_FUNCTION_5_26();
}

void sub_21CF5F118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_9_21();
  OUTLINED_FUNCTION_7_20();
  OUTLINED_FUNCTION_86_2();
  OUTLINED_FUNCTION_6_28(v1);
  *(_QWORD *)(v2 - 120) = nullsub_1(v0, v3, v4);
  v5 = OUTLINED_FUNCTION_5_30();
  type metadata accessor for AddRecentSearchesActionImplementation(v5, v6, v7, v8);
  OUTLINED_FUNCTION_73_2();
  OUTLINED_FUNCTION_5_26();
}

uint64_t sub_21CF5F160()
{
  uint64_t v0;

  OUTLINED_FUNCTION_9_21();
  OUTLINED_FUNCTION_10_18();
  OUTLINED_FUNCTION_86_2();
  return OUTLINED_FUNCTION_6_28(v0);
}

unint64_t sub_21CF5F198()
{
  unint64_t result;

  result = qword_253F641F8[0];
  if (!qword_253F641F8[0])
  {
    result = MEMORY[0x2207938C0](&unk_21D804FD4, &type metadata for InvalidationActionImplementation);
    atomic_store(result, qword_253F641F8);
  }
  return result;
}

unint64_t sub_21CF5F1D4()
{
  unint64_t result;

  result = qword_253F62430;
  if (!qword_253F62430)
  {
    result = MEMORY[0x2207938C0](&unk_21D811464, &type metadata for PopActionImplementation);
    atomic_store(result, (unint64_t *)&qword_253F62430);
  }
  return result;
}

unint64_t sub_21CF5F210()
{
  unint64_t result;

  result = qword_253F63B18[0];
  if (!qword_253F63B18[0])
  {
    result = MEMORY[0x2207938C0](&unk_21D7FC2F8, &type metadata for PopToRootActionImplementation);
    atomic_store(result, qword_253F63B18);
  }
  return result;
}

unint64_t sub_21CF5F24C()
{
  unint64_t result;

  result = qword_253F64B30;
  if (!qword_253F64B30)
  {
    result = MEMORY[0x2207938C0](&unk_21D7D8E04, &type metadata for PushNowPlayingPageActionImplementation);
    atomic_store(result, (unint64_t *)&qword_253F64B30);
  }
  return result;
}

void OUTLINED_FUNCTION_0_42()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 120) = v0;
  *(_QWORD *)(v4 - 112) = v2;
  *(_QWORD *)(v4 - 104) = v1;
  *(_QWORD *)(v4 - 96) = v3;
  type metadata accessor for MapPlayActionImplementation();
}

uint64_t OUTLINED_FUNCTION_1_43(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return nullsub_1(v2, v1, a1);
}

uint64_t OUTLINED_FUNCTION_4_28()
{
  return sub_21D7C4518();
}

uint64_t OUTLINED_FUNCTION_5_30()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_6_28(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_7_20()
{
  return sub_21D7C4518();
}

uint64_t OUTLINED_FUNCTION_9_21()
{
  uint64_t v0;

  return v0 - 120;
}

uint64_t OUTLINED_FUNCTION_10_18()
{
  return sub_21D7C4518();
}

uint64_t OUTLINED_FUNCTION_13_13()
{
  uint64_t v0;

  return v0 - 88;
}

uint64_t BannerProvider.Banner.deinit()
{
  uint64_t v0;

  OUTLINED_FUNCTION_44_0();
  return v0;
}

uint64_t BannerProvider.Banner.__deallocating_deinit()
{
  OUTLINED_FUNCTION_44_0();
  OUTLINED_FUNCTION_247();
  return swift_deallocClassInstance();
}

uint64_t sub_21CF5F344@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_21CF5F3B4();
  *a1 = v3;
  return result;
}

uint64_t sub_21CF5F37C(unint64_t *a1)
{
  sub_21CE67384(*a1);
  return sub_21CF5F41C();
}

uint64_t sub_21CF5F3B4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21D7C0C00();
  OUTLINED_FUNCTION_86_2();
  return swift_release();
}

uint64_t sub_21CF5F41C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_50();
  return sub_21D7C0C0C();
}

void sub_21CF5F484(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332DD0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  sub_21CF5F560((uint64_t)v4);
}

uint64_t sub_21CF5F508()
{
  OUTLINED_FUNCTION_0_30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255332B38);
  sub_21D7C0BDC();
  return swift_endAccess();
}

void sub_21CF5F560(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332DD0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_63_2();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, a1, v3);
  OUTLINED_FUNCTION_0_30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255332B38);
  sub_21D7C0BE8();
  OUTLINED_FUNCTION_4_19();
  OUTLINED_FUNCTION_37_4(a1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_43_0();
}

void sub_21CF5F608()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  OUTLINED_FUNCTION_22();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332B38);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_28_2();
  v10 = *v7;
  v11 = v7[1];
  v12 = v0 + OBJC_IVAR____TtC7MusicUI14BannerProvider__placement;
  sub_21D7C0BD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v12, v1, v8);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC7MusicUI14BannerProvider_requestManager) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC7MusicUI14BannerProvider_cancellables) = MEMORY[0x24BEE4B08];
  v13 = (_QWORD *)(v0 + OBJC_IVAR____TtC7MusicUI14BannerProvider_placementID);
  *v13 = v10;
  v13[1] = v11;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC7MusicUI14BannerProvider_context) = v5;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC7MusicUI14BannerProvider_bootstrapState) = v3;
  OUTLINED_FUNCTION_27_13();
  sub_21CF5F750();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_9();
}

void sub_21CF5F6FC()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC7MusicUI14BannerProvider_requestManager))
  {
    OUTLINED_FUNCTION_50();
    sub_21CE67620();
    swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_0();
  }
}

uint64_t sub_21CF5F738(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC7MusicUI14BannerProvider_requestManager) = a1;
  return swift_release();
}

void sub_21CF5F750()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5E0E8);
  OUTLINED_FUNCTION_75_4();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_63_2();
  OUTLINED_FUNCTION_0_30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5E1F0);
  sub_21D7C0BDC();
  OUTLINED_FUNCTION_4_19();
  sub_21CDD363C(&qword_253F5E0E0, &qword_253F5E0E8);
  OUTLINED_FUNCTION_27_13();
  sub_21D7C0C84();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_37_4(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_0_30();
  OUTLINED_FUNCTION_82_5();
  OUTLINED_FUNCTION_4_19();
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_43_0();
}

void sub_21CF5F850(unint64_t *a1)
{
  unint64_t v1;
  id v2;
  id v3;

  v1 = *a1;
  if ((~*a1 & 0xF000000000000007) != 0)
  {
    if (v1 >> 62)
    {
      if (v1 >> 62 == 1)
      {
        v2 = (id)(v1 & 0x3FFFFFFFFFFFFFFFLL);
        v3 = (id)(v1 & 0x3FFFFFFFFFFFFFFFLL);
        sub_21CF5F41C();

      }
    }
    else
    {
      sub_21CE67574(*a1);
      sub_21CF5F908();
      sub_21CE675C0(v1);
    }
  }
}

void sub_21CF5F908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_22();
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5E0D8);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_69();
  v5 = v4 - v3;
  v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255332D60) - 8);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_63_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F601E0);
  OUTLINED_FUNCTION_42();
  sub_21D7C4C20();
  swift_retain();
  sub_21CF5FD40();
  OUTLINED_FUNCTION_0_30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5E1D0);
  sub_21D7C0BDC();
  OUTLINED_FUNCTION_92_2();
  sub_21CDD363C(&qword_253F5E0D0, &qword_253F5E0D8);
  sub_21D7C0C48();
  OUTLINED_FUNCTION_12_11(v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  swift_getKeyPath();
  sub_21CDD363C(&qword_255332D68, &qword_255332D60);
  sub_21D7C0C90();
  swift_release();
  OUTLINED_FUNCTION_37_4(v0, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  OUTLINED_FUNCTION_0_30();
  OUTLINED_FUNCTION_100_5();
  OUTLINED_FUNCTION_92_2();
  OUTLINED_FUNCTION_104();
  v7 = swift_retain();
  sub_21CF5F738(v7);
  swift_release();
  OUTLINED_FUNCTION_9();
}

uint64_t sub_21CF5FB00@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  if (*a1)
  {
    type metadata accessor for BannerProvider.Banner();
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = v3;
  }
  else
  {
    v4 = 0x8000000000000008;
  }
  *a2 = v4;
  return swift_retain();
}

void BannerProvider.deinit()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332B38);
  OUTLINED_FUNCTION_46(v0);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0();
}

uint64_t BannerProvider.__deallocating_deinit()
{
  BannerProvider.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_21CF5FBF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for BannerProvider();
  result = sub_21D7C0B94();
  *a1 = result;
  return result;
}

void sub_21CF5FC34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_50_9(v2, v3, v4, v5);
  OUTLINED_FUNCTION_101_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_61_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5E1C8);
  OUTLINED_FUNCTION_75_4();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_56_6();
  OUTLINED_FUNCTION_67_5(MEMORY[0x24BEE4B08]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5DF38);
  OUTLINED_FUNCTION_69_5();
  OUTLINED_FUNCTION_48_7();
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = v8;
  OUTLINED_FUNCTION_108_2(qword_253F600B8);
  OUTLINED_FUNCTION_146();
  OUTLINED_FUNCTION_95_5();
  OUTLINED_FUNCTION_34_10();
  OUTLINED_FUNCTION_22_12();
  OUTLINED_FUNCTION_66_7(qword_253F600C0);
  *(_QWORD *)(v0 + qword_253F60148) = v9;
  OUTLINED_FUNCTION_27_13();
  sub_21CF600F8();
  sub_21CF60B58((uint64_t)&unk_24E0F1D58, (uint64_t)&unk_24E0F1D80, (uint64_t)sub_21CF63200);
  OUTLINED_FUNCTION_86_2();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_9();
}

void sub_21CF5FD40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_50_9(v2, v3, v4, v5);
  OUTLINED_FUNCTION_101_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_61_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5E1D0);
  OUTLINED_FUNCTION_75_4();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_56_6();
  OUTLINED_FUNCTION_67_5(MEMORY[0x24BEE4B08]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F5DF40);
  OUTLINED_FUNCTION_69_5();
  OUTLINED_FUNCTION_48_7();
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = v8;
  OUTLINED_FUNCTION_108_2(qword_253F600B8);
  OUTLINED_FUNCTION_146();
  OUTLINED_FUNCTION_95_5();
  OUTLINED_FUNCTION_34_10();
  OUTLINED_FUNCTION_22_12();
  OUTLINED_FUNCTION_66_7(qword_253F600C0);
  *(_QWORD *)(v0 + qword_253F60148) = v9;
  OUTLINED_FUNCTION_27_13();
  sub_21CF600F8();
  sub_21CF60B58((uint64_t)&unk_24E0F1C68, (uint64_t)&unk_24E0F1C90, (uint64_t)sub_21CF62FF0);
  OUTLINED_FUNCTION_86_2();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_9();
}

void sub_21CF5FE4C(uint64_t (*a1)(void))
{
  uint64_t v1;
  uint64_t v2;

  v2 = a1();
  swift_release();
  if (!v2)
    *(_BYTE *)(v1 + 16) = 0;
  OUTLINED_FUNCTION_0();
}

uint64_t sub_21CF5FE74(uint64_t a1, void (*a2)(_QWORD), uint64_t a3, uint64_t (*a4)(void))
{
  a2(0);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  OUTLINED_FUNCTION_50();
  sub_21D7C0C0C();
  sub_21CF5FE4C(a4);
  return swift_release();
}

void sub_21CF5FF20()
{
  sub_21CF5F508();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_21CF5FF40()
{
  return type metadata accessor for BannerProvider();
}

uint64_t type metadata accessor for BannerProvider()
{
  uint64_t result;

  result = qword_255332B90;
  if (!qword_255332B90)
    return swift_getSingletonMetadata();
  return result;
}

void sub_21CF5FF80()
{
  unint64_t v0;

  sub_21CF6004C();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for BannerProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BannerProvider.placement.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of BannerProvider.$placement.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of BannerProvider.onAppear()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

void sub_21CF6004C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255332BA0)
  {
    v0 = sub_21D7C0C24();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255332BA0);
  }
}

ValueMetadata *type metadata accessor for BannerProvider.Placement()
{
  return &type metadata for BannerProvider.Placement;
}

uint64_t type metadata accessor for BannerProvider.Banner()
{
  return objc_opt_self();
}

uint64_t method lookup function for BannerProvider.Banner()
{
  return swift_lookUpClassMethod();
}

void sub_21CF600D0()
{
  sub_21CF600F8();
}

void sub_21CF600E4()
{
  sub_21CF600F8();
}

void sub_21CF600F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F679A0);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_61_2();
  if (*(_QWORD *)(v0 + 32))
  {
    OUTLINED_FUNCTION_50();
    sub_21D7C54F0();
    OUTLINED_FUNCTION_104();
  }
  v4 = sub_21D7C5490();
  OUTLINED_FUNCTION_58_2(v1, v5, v6, v4);
  sub_21D7C546C();
  OUTLINED_FUNCTION_27_13();
  v7 = sub_21D7C5460();
  v8 = (_QWORD *)OUTLINED_FUNCTION_121_0();
  v9 = MEMORY[0x24BEE6930];
  v8[2] = v7;
  v8[3] = v9;
  v8[4] = v2;
  sub_21D51E200();
  *(_QWORD *)(v2 + 32) = v10;
  swift_release();
  OUTLINED_FUNCTION_43_0();
}

uint64_t sub_21CF601E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[8] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F67AD0);
  v4[9] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5E188);
  v4[10] = v5;
  v4[11] = *(_QWORD *)(v5 - 8);
  v4[12] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5E018);
  v4[13] = v6;
  v4[14] = *(_QWORD *)(v6 - 8);
  v4[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F67480);
  v4[16] = swift_task_alloc();
  sub_21D7C546C();
  v4[17] = sub_21D7C5460();
  v4[18] = sub_21D7C5424();
  v4[19] = v7;
  return swift_task_switch();
}

uint64_t sub_21CF602EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;

  if ((sub_21D7C5508() & 1) != 0)
  {
    OUTLINED_FUNCTION_71_3();
    OUTLINED_FUNCTION_13_14();
    OUTLINED_FUNCTION_18_1();
    OUTLINED_FUNCTION_22_1();
    OUTLINED_FUNCTION_28_0();
    return OUTLINED_FUNCTION_23(*(uint64_t (**)(void))(v1 + 8));
  }
  else
  {
    v3 = OUTLINED_FUNCTION_19_13();
    OUTLINED_FUNCTION_58_2(v0, v4, v5, v3);
    sub_21D7C4C20();
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 160) = v6;
    v7 = (_QWORD *)OUTLINED_FUNCTION_81_4(v6, (uint64_t)sub_21CF6036C);
    return OUTLINED_FUNCTION_29_8(v7, v8);
  }
}

uint64_t sub_21CF6036C(uint64_t a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_9_22(a1);
  OUTLINED_FUNCTION_103(v1, &qword_253F67480);
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_7_0();
}

uint64_t sub_21CF603AC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  OUTLINED_FUNCTION_71_3();
  if ((sub_21D7C5508() & 1) != 0)
    goto LABEL_2;
  v2 = sub_21D555E00();
  v3 = 0x1F2C50000;
  if (v2)
  {
    v4 = sub_21D7C0978();
    OUTLINED_FUNCTION_104();
    v5 = OUTLINED_FUNCTION_111_2();

    if (v5)
    {
      sub_21D7C50F4();
      OUTLINED_FUNCTION_102_2();
    }
    else
    {
      v4 = 0;
      v2 = 0;
    }
  }
  else
  {
    v4 = 0;
  }
  v6 = *(_QWORD *)(v0 + 168);
  if (v6 && OUTLINED_FUNCTION_110_0())
  {
    sub_21D7C50F4();
    OUTLINED_FUNCTION_96_3();
    if (!v2)
      goto LABEL_11;
LABEL_14:
    if (v3)
    {
      if ((void *)v4 == v1 && v2 == v3)
      {
        v30 = *(void **)(v0 + 168);
        OUTLINED_FUNCTION_90_0();
        OUTLINED_FUNCTION_4();

        goto LABEL_25;
      }
      v4 = OUTLINED_FUNCTION_44_9();
      OUTLINED_FUNCTION_90_0();
      OUTLINED_FUNCTION_4();
      if ((v4 & 1) != 0)
        goto LABEL_2;
      if (!v6)
      {
LABEL_23:
        sub_21CF6112C();
        goto LABEL_25;
      }
LABEL_21:
      OUTLINED_FUNCTION_16_13();
      sub_21D7C0948();
      OUTLINED_FUNCTION_42();
      v8 = v1;
      v9 = sub_21D7C093C();
      swift_retain();
      sub_21CF61218();
      OUTLINED_FUNCTION_150();
      OUTLINED_FUNCTION_55_6();
      OUTLINED_FUNCTION_77_5();
      OUTLINED_FUNCTION_150();
      OUTLINED_FUNCTION_78_2();
      *(_QWORD *)(v0 + 56) = OUTLINED_FUNCTION_98_4();
      v10 = OUTLINED_FUNCTION_79_5();
      OUTLINED_FUNCTION_58_2(v4, v11, v12, v10);
      sub_21CDD363C(&qword_253F5E180, &qword_253F5E188);
      sub_21CDB6D4C(&qword_253F67AD8, (void (*)(uint64_t))sub_21CDD42A0);
      OUTLINED_FUNCTION_20_9();
      sub_21CDBDA44(v4, &qword_253F67AD0);

      OUTLINED_FUNCTION_58_7(v13, v14, v15, v16, v17, v18, v19, v20, v32, v34);
      v21 = OUTLINED_FUNCTION_121_0();
      *(_QWORD *)(v21 + 16) = v6;
      *(_QWORD *)(v21 + 24) = v9;
      sub_21CDD363C(&qword_255332DC8, &qword_253F5E018);
      OUTLINED_FUNCTION_55_6();
      OUTLINED_FUNCTION_27_13();
      OUTLINED_FUNCTION_45_7();
      v22 = OUTLINED_FUNCTION_86_2();
      OUTLINED_FUNCTION_57_5(v22, v23, v24, v25, v26, v27, v28, v29, v33, v35, v36, v37);
      OUTLINED_FUNCTION_0_30();
      OUTLINED_FUNCTION_100_5();
      swift_endAccess();

      OUTLINED_FUNCTION_150();
      OUTLINED_FUNCTION_104();
      *(_BYTE *)(v6 + 16) = 1;
      goto LABEL_25;
    }
LABEL_22:
    OUTLINED_FUNCTION_90_0();
    if (!v6)
      goto LABEL_23;
    goto LABEL_21;
  }
  v1 = 0;
  v3 = 0;
  if (v2)
    goto LABEL_14;
LABEL_11:
  if (v3)
    goto LABEL_22;
LABEL_2:

LABEL_25:
  OUTLINED_FUNCTION_13_14();
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_22_1();
  OUTLINED_FUNCTION_28_0();
  return OUTLINED_FUNCTION_25_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_21CF60668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[8] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F67AD0);
  v4[9] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5E188);
  v4[10] = v5;
  v4[11] = *(_QWORD *)(v5 - 8);
  v4[12] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F5E018);
  v4[13] = v6;
  v4[14] = *(_QWORD *)(v6 - 8);
  v4[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F67480);
  v4[16] = swift_task_alloc();
  sub_21D7C546C();
  v4[17] = sub_21D7C5460();
  v4[18] = sub_21D7C5424();
  v4[19] = v7;
  return swift_task_switch();
}

uint64_t sub_21CF60774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;

  if ((sub_21D7C5508() & 1) != 0)
  {
    OUTLINED_FUNCTION_71_3();
    OUTLINED_FUNCTION_13_14();
    OUTLINED_FUNCTION_18_1();
    OUTLINED_FUNCTION_22_1();
    OUTLINED_FUNCTION_28_0();
    return OUTLINED_FUNCTION_23(*(uint64_t (**)(void))(v1 + 8));
  }
  else
  {
    v3 = OUTLINED_FUNCTION_19_13();
    OUTLINED_FUNCTION_58_2(v0, v4, v5, v3);
    sub_21D7C4C20();
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 160) = v6;
    v7 = (_QWORD *)OUTLINED_FUNCTION_81_4(v6, (uint64_t)sub_21CF607F4);
    return OUTLINED_FUNCTION_29_8(v7, v8);
  }
}

uint64_t sub_21CF607F4(uint64_t a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_9_22(a1);
  OUTLINED_FUNCTION_103(v1, &qword_253F67480);
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_7_0();
}

uint64_t sub_21CF60834()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  OUTLINED_FUNCTION_71_3();
  if ((sub_21D7C5508() & 1) != 0)
    goto LABEL_2;
  v2 = sub_21D555E14();
  v3 = 0x1F2C50000;
  if (v2)
  {
    v4 = sub_21D7C0978();
    OUTLINED_FUNCTION_104();
    v5 = OUTLINED_FUNCTION_111_2();

    if (v5)
    {
      sub_21D7C50F4();
      OUTLINED_FUNCTION_102_2();
    }
    else
    {
      v4 = 0;
      v2 = 0;
    }
  }
  else
  {
    v4 = 0;
  }
  v6 = *(_QWORD *)(v0 + 168);
  if (v6 && OUTLINED_FUNCTION_110_0())
  {
    sub_21D7C50F4();
    OUTLINED_FUNCTION_96_3();
    if (!v2)
      goto LABEL_11;
LABEL_14:
    if (v3)
    {
      if ((void *)v4 == v1 && v2 == v3)
      {
        v30 = *(void **)(v0 + 168);
        OUTLINED_FUNCTION_90_0();
        OUTLINED_FUNCTION_4();

        goto LABEL_25;
      }
      v4 = OUTLINED_FUNCTION_44_9();
      OUTLINED_FUNCTION_90_0();
      OUTLINED_FUNCTION_4();
      if ((v4 & 1) != 0)
        goto LABEL_2;
      if (!v6)
      {
LABEL_23:
        sub_21CF6112C();
        goto LABEL_25;
      }
LABEL_21:
      OUTLINED_FUNCTION_16_13();
      sub_21D7C09CC();
      OUTLINED_FUNCTION_42();
      v8 = v1;
      v9 = sub_21D7C09C0();
      swift_retain();
      sub_21CF61218();
      OUTLINED_FUNCTION_150();
      OUTLINED_FUNCTION_55_6();
      OUTLINED_FUNCTION_77_5();
      OUTLINED_FUNCTION_150();
      OUTLINED_FUNCTION_78_2();
      *(_QWORD *)(v0 + 56) = OUTLINED_FUNCTION_98_4();
      v10 = OUTLINED_FUNCTION_79_5();
      OUTLINED_FUNCTION_58_2(v4, v11, v12, v10);
      sub_21CDD363C(&qword_253F5E180, &qword_253F5E188);
      sub_21CDB6D4C(&qword_253F67AD8, (void (*)(uint64_t))sub_21CDD42A0);
      OUTLINED_FUNCTION_20_9();
      sub_21CDBDA44(v4, &qword_253F67AD0);

      OUTLINED_FUNCTION_58_7(v13, v14, v15, v16, v17, v18, v19, v20, v32, v34);
      v21 = OUTLINED_FUNCTION_121_0();
      *(_QWORD *)(v21 + 16) = v6;
      *(_QWORD *)(v21 + 24) = v9;
      sub_21CDD363C(&qword_255332DC8, &qword_253F5E018);
      OUTLINED_FUNCTION_55_6();
      OUTLINED_FUNCTION_27_13();
      OUTLINED_FUNCTION_45_7();
      v22 = OUTLINED_FUNCTION_86_2();
      OUTLINED_FUNCTION_57_5(v22, v23, v24, v25, v26, v27, v28, v29, v33, v35, v36, v37);
      OUTLINED_FUNCTION_0_30();
      OUTLINED_FUNCTION_100_5();
      swift_endAccess();

      OUTLINED_FUNCTION_150();
      OUTLINED_FUNCTION_104();
      *(_BYTE *)(v6 + 16) = 1;
      goto LABEL_25;
    }
LABEL_22:
    OUTLINED_FUNCTION_90_0();
    if (!v6)
      goto LABEL_23;
    goto LABEL_21;
  }
  v1 = 0;
  v3 = 0;
  if (v2)
    goto LABEL_14;
LABEL_11:
  if (v3)
    goto LABEL_22;
LABEL_2:

LABEL_25:
  OUTLINED_FUNCTION_13_14();
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_22_1();
  OUTLINED_FUNCTION_28_0();
  return OUTLINED_FUNCTION_25_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_21CF60AF0(uint64_t result)
{
  if ((result & 1) != 0)
    return sub_21CF6112C();
  return result;
}

uint64_t sub_21CF60B24(uint64_t result)
{
  if ((result & 1) != 0)
    return sub_21CF6112C();
  return result;
}

void sub_21CF60B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = OUTLINED_FUNCTION_121_0();
  swift_weakInit();
  v5 = OUTLINED_FUNCTION_121_0();
  *(_QWORD *)(v5 + 16) = a3;
  *(_QWORD *)(v5 + 24) = v4;
  OUTLINED_FUNCTION_50();
  __swift_instantiateConcreteTypeFromMangledName(qword_253F4E6F0);
  sub_21CDD363C(&qword_253F5E068, qword_253F4E6F0);
  sub_21D7C0C84();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_0_30();
  OUTLINED_FUNCTION_82_5();
  swift_endAccess();
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_85_1();
}

uint64_t sub_21CF60C48()
{
  swift_weakDestroy();
  OUTLINED_FUNCTION_247();
  return swift_deallocObject();
}

uint64_t sub_21CF60C64(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t result;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  id v21;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7 = result;
    v8 = *(_QWORD *)(result + 40) == a1 && *(_QWORD *)(result + 48) == a2;
    if (!v8 && (sub_21D7C5D84() & 1) == 0)
      return swift_release();
    v9 = sub_21D555E00();
    if (v9)
    {
      v10 = (void *)sub_21D7C0978();
      swift_release();
      v11 = objc_msgSend(v10, sel_identifier);

      if (v11)
      {
        v12 = sub_21D7C50F4();
        v9 = v13;

        if (!a3)
          goto LABEL_18;
      }
      else
      {
        v12 = 0;
        v9 = 0;
        if (!a3)
          goto LABEL_18;
      }
    }
    else
    {
      v12 = 0;
      if (!a3)
        goto LABEL_18;
    }
    v14 = objc_msgSend(a3, sel_identifier);
    if (v14)
    {
      v15 = v14;
      v16 = sub_21D7C50F4();
      v18 = v17;

      if (v9)
        goto LABEL_19;
      goto LABEL_16;
    }
LABEL_18:
    v16 = 0;
    v18 = 0;
    if (v9)
    {
LABEL_19:
      if (v18)
      {
        if (v12 == v16 && v9 == v18)
        {
          swift_release();
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        v20 = sub_21D7C5D84();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v20 & 1) != 0)
          return swift_release();
        if (a3)
          goto LABEL_26;
        goto LABEL_28;
      }
LABEL_27:
      swift_bridgeObjectRelease();
      if (a3)
      {
LABEL_26:
        sub_21D7C0948();
        swift_allocObject();
        v21 = a3;
        sub_21D7C093C();
        swift_retain();
        sub_21CF61218();
        swift_release();
        swift_retain();
        sub_21CF6112C();
        swift_release_n();
        *(_BYTE *)(v7 + 16) = 2;
        return swift_release();
      }
LABEL_28:
      sub_21CF6112C();
      return swift_release();
    }
LABEL_16:
    if (!v18)
      return swift_release();
    goto LABEL_27;
  }
  return result;
}

uint64_t sub_21CF60EC8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t result;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  id v21;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7 = result;
    v8 = *(_QWORD *)(result + 40) == a1 && *(_QWORD *)(result + 48) == a2;
    if (!v8 && (sub_21D7C5D84() & 1) == 0)
      return swift_release();
    v9 = sub_21D555E14();
    if (v9)
    {
      v10 = (void *)sub_21D7C0978();
      swift_release();
      v11 = objc_msgSend(v10, sel_identifier);

      if (v11)
      {
        v12 = sub_21D7C50F4();
        v9 = v13;

        if (!a3)
          goto LABEL_18;
      }
      else
      {
        v12 = 0;
        v9 = 0;
        if (!a3)
          goto LABEL_18;
      }
    }
    else
    {
      v12 = 0;
      if (!a3)
        goto LABEL_18;
    }
    v14 = objc_msgSend(a3, sel_identifier);
    if (v14)
    {
      v15 = v14;
      v16 = sub_21D7C50F4();
      v18 = v17;

      if (v9)
        goto LABEL_19;
      goto LABEL_16;
    }
LABEL_18:
    v16 = 0;
    v18 = 0;
    if (v9)
    {
LABEL_19:
      if (v18)
      {
        if (v12 == v16 && v9 == v18)
        {
          swift_release();
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        v20 = sub_21D7C5D84();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v20 & 1) != 0)
          return swift_release();
        if (a3)
          goto LABEL_26;
        goto LABEL_28;
      }
LABEL_27:
      swift_bridgeObjectRelease();
      if (a3)
      {
LABEL_26:
        sub_21D7C09CC();
        swift_allocObject();
        v21 = a3;
        sub_21D7C09C0();
        swift_retain();
        sub_21CF61218();
        swift_release();
        swift_retain();
        sub_21CF6112C();
        swift_release_n();
        *(_BYTE *)(v7 + 16) = 2;
        return swift_release();
      }
LABEL_28:
      sub_21CF6112C();
      return swift_release();
    }
LABEL_16:
    if (!v18)
      return swift_release();
    goto LABEL_27;
  }
  return result;
}

uint64_t sub_21CF6112C()
{
  return sub_21D7C10A4();
}

uint64_t sub_21CF61178(uint64_t a1, uint64_t a2)
{
  swift_retain();
  return sub_21CF5FE74(a2, (void (*)(_QWORD))MEMORY[0x24BE084C8], (uint64_t)&off_253F4F480, sub_21D555E00);
}

uint64_t sub_21CF611C8(uint64_t a1, uint64_t a2)
{
  swift_retain();
  return sub_21CF5FE74(a2, (void (*)(_QWORD))MEMORY[0x24BE08548], (uint64_t)&off_253F4F498, sub_21D555E14);
}

void sub_21CF61218()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;

  OUTLINED_FUNCTION_22();
  v32 = v3;
  v33 = v4;
  v30 = v0;
  v31 = v5;
  v28 = v7;
  v29 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F67AD0);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_63_2();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332D70);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_69();
  v13 = v12 - v11;
  v26 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255332D78) - 8);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_28_2();
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255332D80);
  v27 = *(_QWORD *)(v15 - 8);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21D7C0954();
  OUTLINED_FUNCTION_78_2();
  v34 = (id)OUTLINED_FUNCTION_98_4();
  v19 = OUTLINED_FUNCTION_79_5();
  OUTLINED_FUNCTION_58_2(v1, v20, v21, v19);
  sub_21CDD363C(&qword_255332D88, &qword_255332D70);
  sub_21CDB6D4C(&qword_253F67AD8, (void (*)(uint64_t))sub_21CDD42A0);
  sub_21D7C0C60();
  sub_21CDBDA44(v1, &qword_253F67AD0);

  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v13, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255332D90);
  sub_21CDD363C(&qword_255332D98, &qword_255332D78);
  sub_21D7C0C3C();
  OUTLINED_FUNCTION_83(v2, *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8));
  OUTLINED_FUNCTION_121_0();
  v22 = v30;
  swift_weakInit();
  sub_21CDD363C(&qword_255332DA0, &qword_255332D80);
  sub_21D7C0C84();
  OUTLINED_FUNCTION_37();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v18, v15);
  OUTLINED_FUNCTION_0_30();
  OUTLINED_FUNCTION_82_5();
  OUTLINED_FUNCTION_92_2();
  OUTLINED_FUNCTION_104();
  v23 = *(void **)(v22 + 56);
  *(_QWORD *)(OUTLINED_FUNCTION_121_0() + 16) = v23;
  v24 = v23;
  sub_21D7C0960();
  OUTLINED_FUNCTION_9();
}

void sub_21CF614D0(void *a1, char a2)
{
  id v4;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v4 = a1;
    if ((a2 & 1) != 0)
      sub_21CF62B70();
    else
      sub_21CF61568();
    OUTLINED_FUNCTION_104();
    sub_21CF6302C(a1);
  }
  OUTLINED_FUNCTION_85_1();
}

void sub_21CF61568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  char v45;
  __n128 *v46;
  uint64_t v47;
  uint64_t EnumTagSinglePayload;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  __n128 *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  void (*v95)(char *, char *, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  __int128 v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;

  OUTLINED_FUNCTION_22();
  v103 = v1;
  v104 = v2;
  v108 = v3;
  v117 = v0;
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F679A0);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_13();
  *(_QWORD *)&v109 = v7;
  sub_21D7C3FC0();
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_2_13();
  OUTLINED_FUNCTION_97(v9);
  v10 = sub_21D7C4EFC();
  v102 = *(_QWORD *)(v10 - 8);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_2_13();
  OUTLINED_FUNCTION_97(v12);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F67630);
  v106 = *(_QWORD *)(v13 - 8);
  v107 = v13;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_2_13();
  v105 = v15;
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F67640);
  v98 = *(_QWORD *)(v99 - 8);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_2_13();
  OUTLINED_FUNCTION_97(v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F67480);
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_2_13();
  v110 = v19;
  v20 = sub_21D7C40F8();
  v115 = *(_QWORD *)(v20 - 8);
  v116 = v20;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_2_13();
  v114 = v22;
  v23 = sub_21D7C489C();
  v112 = *(_QWORD *)(v23 - 8);
  v113 = v23;
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_2_13();
  v111 = v25;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F5DD10);
  OUTLINED_FUNCTION_1_16();
  v27 = MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v94 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v94 - v30;
  v32 = OUTLINED_FUNCTION_0_7();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(_QWORD *)(v33 + 64);
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_97((uint64_t)&v94 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v35);
  v37 = (char *)&v94 - v36;
  v38 = objc_msgSend(v5, sel_originalRequest);
  v39 = objc_msgSend(v5, sel_selectedActionIdentifier);
  if (!v39)
  {
    sub_21D7C50F4();
    v39 = (id)sub_21D7C50C4();
    swift_bridgeObjectRelease();
  }
  v40 = objc_msgSend(v38, sel_locateActionWithIdentifier_, v39);

  v41 = v40;
  if (!v40)
  {
    EnumTagSinglePayload = OUTLINED_FUNCTION_93_4((uint64_t)v31, 1);
    goto LABEL_13;
  }
  v43 = OUTLINED_FUNCTION_91_5(v42, sel_style);
  if (v43 == (id)2)
  {
    OUTLINED_FUNCTION_85_3();
    if (!v45)
      v44 = swift_once();
    OUTLINED_FUNCTION_73_6(v44, (uint64_t)qword_253F81D40);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F67DC0);
    OUTLINED_FUNCTION_27_1();
    v46 = (__n128 *)OUTLINED_FUNCTION_0_43();
    OUTLINED_FUNCTION_80_5(v46, (__n128)xmmword_21D7C8560);
    OUTLINED_FUNCTION_137_0();
    OUTLINED_FUNCTION_84_5();
    OUTLINED_FUNCTION_65_4();
    v47 = sub_21CF6112C();
    goto LABEL_20;
  }
  v49 = OUTLINED_FUNCTION_91_5((uint64_t)v43, sel_deepLink);
  if (v49)
  {
    v50 = v49;
    sub_21D7BF6E8();

    v51 = 0;
  }
  else
  {
    v51 = 1;
  }
  OUTLINED_FUNCTION_93_4((uint64_t)v29, v51);
  sub_21CE8747C((uint64_t)v29, (uint64_t)v31);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v31, 1, v32);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
LABEL_13:
    OUTLINED_FUNCTION_103(EnumTagSinglePayload, (uint64_t *)&unk_253F5DD10);
    OUTLINED_FUNCTION_85_3();
    if (!v45)
      v52 = swift_once();
    OUTLINED_FUNCTION_73_6(v52, (uint64_t)qword_253F81D40);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F67DC0);
    OUTLINED_FUNCTION_27_1();
    v53 = (__n128 *)OUTLINED_FUNCTION_0_43();
    OUTLINED_FUNCTION_80_5(v53, (__n128)xmmword_21D7C8560);
    OUTLINED_FUNCTION_137_0();
    OUTLINED_FUNCTION_84_5();
    v47 = OUTLINED_FUNCTION_65_4();
    if (!v40)
      goto LABEL_30;
    goto LABEL_20;
  }
  v108 = v40;
  v95 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
  v95(v37, v31, v32);
  v96 = v33;
  if (qword_253F60200 != -1)
    swift_once();
  v54 = __swift_project_value_buffer(v10, (uint64_t)qword_253F81D40);
  v55 = v102;
  v56 = v101;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v102 + 16))(v101, v54, v10);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F67DC0);
  OUTLINED_FUNCTION_27_1();
  *(_OWORD *)(OUTLINED_FUNCTION_21_14() + 16) = xmmword_21D7C8560;
  OUTLINED_FUNCTION_36_1();
  OUTLINED_FUNCTION_79();
  sub_21D7C3FA8();
  v57 = sub_21D7BF688();
  v120 = MEMORY[0x24BEE0D00];
  v118 = v57;
  v119 = v58;
  sub_21D7C3F90();
  sub_21CDBDA44((uint64_t)&v118, &qword_253F67EB0);
  OUTLINED_FUNCTION_19_1();
  sub_21D7C3FCC();
  sub_21D7C4D28();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_37_4(v56, *(uint64_t (**)(uint64_t, uint64_t))(v55 + 8));
  v59 = sub_21D7C5490();
  OUTLINED_FUNCTION_58_2(v109, v60, v61, v59);
  v62 = v37;
  v94 = v37;
  v63 = v96;
  v64 = v100;
  (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v100, v62, v32);
  sub_21D7C546C();
  v65 = v117;
  OUTLINED_FUNCTION_55_6();
  v66 = sub_21D7C5460();
  v67 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
  v68 = swift_allocObject();
  v69 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v68 + 16) = v66;
  *(_QWORD *)(v68 + 24) = v69;
  v95((char *)(v68 + v67), v64, v32);
  *(_QWORD *)(v68 + ((v34 + v67 + 7) & 0xFFFFFFFFFFFFFFF8)) = v65;
  sub_21D51E200();
  swift_release();
  v47 = (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v94, v32);
  v41 = v108;
LABEL_20:
  v70 = OUTLINED_FUNCTION_91_5(v47, sel_clickstreamMetricsEvent);
  if (v70)
  {
    v71 = v70;
    sub_21D7C4FC8();

    sub_21D1C98C0();
    v73 = v72;
    OUTLINED_FUNCTION_4();
    if (v73)
    {
      OUTLINED_FUNCTION_85_3();
      if (!v45)
        v74 = swift_once();
      OUTLINED_FUNCTION_73_6(v74, (uint64_t)qword_253F81D40);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F67DC0);
      OUTLINED_FUNCTION_27_1();
      v75 = OUTLINED_FUNCTION_0_43();
      v109 = xmmword_21D7C8560;
      *(_OWORD *)(v75 + 16) = xmmword_21D7C8560;
      OUTLINED_FUNCTION_137_0();
      OUTLINED_FUNCTION_83_4();
      OUTLINED_FUNCTION_65_4();
      v76 = *(_QWORD *)(*(_QWORD *)(v117 + 56) + OBJC_IVAR____TtCO7MusicUI15UnifiedMessages11Coordinator_metricsOverlay);
      v77 = v111;
      if (v76)
      {
        sub_21D7C4C20();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v118 = v73;
        sub_21CF62D28(v76, (uint64_t)sub_21D26E8CC, 0, isUniquelyReferenced_nonNull_native, &v118);
        swift_bridgeObjectRelease();
      }
      sub_21D7C4890();
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F67E08);
      v79 = sub_21D7C4BE4();
      v80 = *(_QWORD *)(v79 - 8);
      v81 = (*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
      v82 = swift_allocObject();
      *(_OWORD *)(v82 + 16) = v109;
      v83 = v82 + v81;
      if (qword_253F676C0 != -1)
        swift_once();
      v84 = __swift_project_value_buffer(v79, (uint64_t)qword_253F81FB0);
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v80 + 16))(v83, v84, v79);
      if (*(_QWORD *)(v82 + 16))
      {
        sub_21D7AD094();
      }
      else
      {
        swift_setDeallocating();
        sub_21D1D1028();
      }
      v86 = v114;
      OUTLINED_FUNCTION_79();
      sub_21D7C40EC();
      swift_getKeyPath();
      swift_getKeyPath();
      v87 = v110;
      sub_21D7C0C00();
      OUTLINED_FUNCTION_104();
      OUTLINED_FUNCTION_86_2();
      v88 = sub_21D7C4260();
      if (__swift_getEnumTagSinglePayload(v87, 1, v88))
      {
        sub_21CDBDA44(v87, &qword_253F67480);
      }
      else
      {
        v89 = sub_21D7C41E8();
        sub_21CDBDA44(v87, &qword_253F67480);
        if (v89)
        {
          v118 = v89;
          v90 = v97;
          sub_21D7C486C();
          __swift_instantiateConcreteTypeFromMangledName(&qword_253F67850);
          sub_21D7C4884();
          (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v90, v99);
          swift_bridgeObjectRelease();
        }
      }
      v91 = sub_21D1D53B4();
      if (v91)
      {
        v118 = v91;
        v119 = v92;
        v93 = v105;
        sub_21D7C4860();
        __swift_instantiateConcreteTypeFromMangledName(&qword_253F67620);
        sub_21D7C4884();
        (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v93, v107);
        swift_unknownObjectRelease();
      }
      sub_21D7C44D0();

      OUTLINED_FUNCTION_37();
      (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v86, v116);
      (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v77, v113);
      goto LABEL_41;
    }
  }
LABEL_30:
  OUTLINED_FUNCTION_85_3();
  if (!v45)
    v85 = swift_once();
  OUTLINED_FUNCTION_73_6(v85, (uint64_t)qword_253F81D40);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F67DC0);
  OUTLINED_FUNCTION_27_1();
  *(_OWORD *)(OUTLINED_FUNCTION_0_43() + 16) = xmmword_21D7C8560;
  OUTLINED_FUNCTION_137_0();
  OUTLINED_FUNCTION_83_4();

  OUTLINED_FUNCTION_65_4();
LABEL_41:
  OUTLINED_FUNCTION_9();
}

uint64_t sub_21CF62060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[23] = a4;
  v5[24] = a5;
  sub_21D7C3FC0();
  v5[25] = swift_task_alloc();
  v6 = sub_21D7C4EFC();
  v5[26] = v6;
  v5[27] = *(_QWORD *)(v6 - 8);
  v5[28] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F67500);
  v5[29] = v7;
  v5[30] = *(_QWORD *)(v7 - 8);
  v5[31] = swift_task_alloc();
  v8 = sub_21D7C432C();
  v5[32] = v8;
  v5[33] = *(_QWORD *)(v8 - 8);
  v5[34] = swift_task_alloc();
  v5[35] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F67510);
  v5[36] = v9;
  v5[37] = *(_QWORD *)(v9 - 8);
  v5[38] = swift_task_alloc();
  v5[39] = type metadata accessor for ProcessDeepLinkAction();
  v5[40] = swift_task_alloc();
  sub_21D7C546C();
  v5[41] = sub_21D7C5460();
  v5[42] = sub_21D7C5424();
  v5[43] = v10;
  return swift_task_switch();
}

uint64_t sub_21CF621C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_8_21();
  v3 = OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_26_12(v3);
  OUTLINED_FUNCTION_46_7();
  OUTLINED_FUNCTION_146();
  OUTLINED_FUNCTION_28_10();
  *(_QWORD *)(v1 + 40) = v2;
  sub_21CDB6D4C(&qword_255331CF8, (void (*)(uint64_t))type metadata accessor for ProcessDeepLinkAction);
  OUTLINED_FUNCTION_103_3(v4);
  v6 = OUTLINED_FUNCTION_87_4(v5);
  OUTLINED_FUNCTION_61_6(v6, *MEMORY[0x24BE5D0A0], v7, v8, v9, v10, v11, v12, v16, v17, v18);
  v13 = OUTLINED_FUNCTION_53_6();
  OUTLINED_FUNCTION_40_9(v13);
  __swift_destroy_boxed_opaque_existential_1(v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F67768);
  sub_21CDD363C(&qword_253F67760, &qword_253F67768);
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 360) = v14;
  OUTLINED_FUNCTION_72_4(v14);
  return OUTLINED_FUNCTION_15_15();
}

uint64_t sub_21CF622BC()
{
  OUTLINED_FUNCTION_23_10();
  return OUTLINED_FUNCTION_7_0();
}

uint64_t sub_21CF622F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(void);
  int v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = *(_QWORD *)(v0 + 272);
  v1 = *(_QWORD *)(v0 + 280);
  v3 = *(_QWORD *)(v0 + 256);
  v4 = *(_QWORD *)(v0 + 264);
  swift_release();
  OUTLINED_FUNCTION_104();
  v5 = *(void (**)(void))(v4 + 16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v5)(v2, v1, v3);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88))(v2, v3);
  if (v6 == *MEMORY[0x24BE5CBF0] || v6 == *MEMORY[0x24BE5CBE0])
  {
    if (qword_253F60200 != -1)
      swift_once();
    v24 = *(_QWORD *)(v0 + 304);
    v26 = *(_QWORD *)(v0 + 320);
    v8 = *(_QWORD *)(v0 + 280);
    v21 = *(_QWORD *)(v0 + 296);
    v22 = *(_QWORD *)(v0 + 288);
    v9 = *(_QWORD *)(v0 + 256);
    v10 = *(_QWORD *)(v0 + 216);
    v11 = *(_QWORD *)(v0 + 224);
    v20 = *(_QWORD *)(v0 + 264);
    v12 = *(_QWORD *)(v0 + 208);
    v13 = __swift_project_value_buffer(v12, (uint64_t)qword_253F81D40);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v11, v13, v12);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F67DC0);
    OUTLINED_FUNCTION_27_1();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_21D7C8560;
    OUTLINED_FUNCTION_36_1();
    OUTLINED_FUNCTION_79();
    sub_21D7C3FA8();
    *(_QWORD *)(v0 + 144) = v9;
    __swift_allocate_boxed_opaque_existential_0Tm((uint64_t *)(v0 + 120));
    v5();
    sub_21D7C3F90();
    sub_21CDBDA44(v0 + 120, &qword_253F67EB0);
    OUTLINED_FUNCTION_19_1();
    sub_21D7C3FCC();
    sub_21D7C4D28();
    OUTLINED_FUNCTION_65_4();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
    OUTLINED_FUNCTION_12_11(v8, *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v24, v22);
    sub_21CF630E4(v26);
  }
  else
  {
    if (qword_253F60200 != -1)
      swift_once();
    v14 = *(_QWORD *)(v0 + 296);
    v23 = *(_QWORD *)(v0 + 304);
    v15 = *(_QWORD *)(v0 + 280);
    v16 = *(_QWORD *)(v0 + 264);
    v25 = *(_QWORD *)(v0 + 272);
    v27 = *(_QWORD *)(v0 + 320);
    v17 = *(_QWORD *)(v0 + 256);
    __swift_project_value_buffer(*(_QWORD *)(v0 + 208), (uint64_t)qword_253F81D40);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F67DC0);
    OUTLINED_FUNCTION_27_1();
    OUTLINED_FUNCTION_39_8();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_21D7C8560;
    OUTLINED_FUNCTION_137_0();
    sub_21D7C4D40();
    swift_bridgeObjectRelease();
    v18 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v18(v15, v17);
    OUTLINED_FUNCTION_12_11(v23, *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
    sub_21CF630E4(v27);
    v18(v25, v17);
  }
  swift_task_dealloc();
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_22_1();
  OUTLINED_FUNCTION_28_0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21CF62654()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_release();
  OUTLINED_FUNCTION_104();
  if (qword_253F60200 != -1)
    swift_once();
  v1 = *(void **)(v0 + 368);
  v12 = *(_QWORD *)(v0 + 304);
  v13 = *(_QWORD *)(v0 + 320);
  v10 = *(_QWORD *)(v0 + 296);
  v11 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 208);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_253F81D40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v3, v5, v4);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F67DC0);
  OUTLINED_FUNCTION_27_1();
  *(_OWORD *)(OUTLINED_FUNCTION_21_14() + 16) = xmmword_21D7C8560;
  sub_21D7C3FB4();
  OUTLINED_FUNCTION_79();
  sub_21D7C3FA8();
  v6 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v0 + 56) = 0xD000000000000015;
  *(_QWORD *)(v0 + 80) = v6;
  *(_QWORD *)(v0 + 64) = 0x800000021D81A190;
  sub_21D7C3F90();
  OUTLINED_FUNCTION_99_4();
  sub_21D7C3FA8();
  swift_getErrorValue();
  v7 = sub_21D7C5E08();
  *(_QWORD *)(v0 + 112) = v6;
  *(_QWORD *)(v0 + 88) = v7;
  *(_QWORD *)(v0 + 96) = v8;
  sub_21D7C3F90();
  OUTLINED_FUNCTION_99_4();
  sub_21D7C3FA8();
  sub_21D7C3FCC();
  sub_21D7C4D40();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v12, v11);
  sub_21CF630E4(v13);
  swift_task_dealloc();
  OUTLINED_FUNCTION_18_1();
  swift_task_dealloc();
  OUTLINED_FUNCTION_28_0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21CF628D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[23] = a4;
  v5[24] = a5;
  sub_21D7C3FC0();
  v5[25] = swift_task_alloc();
  v6 = sub_21D7C4EFC();
  v5[26] = v6;
  v5[27] = *(_QWORD *)(v6 - 8);
  v5[28] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F67500);
  v5[29] = v7;
  v5[30] = *(_QWORD *)(v7 - 8);
  v5[31] = swift_task_alloc();
  v8 = sub_21D7C432C();
  v5[32] = v8;
  v5[33] = *(_QWORD *)(v8 - 8);
  v5[34] = swift_task_alloc();
  v5[35] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F67510);
  v5[36] = v9;
  v5[37] = *(_QWORD *)(v9 - 8);
  v5[38] = swift_task_alloc();
  v5[39] = type metadata accessor for ProcessDeepLinkAction();
  v5[40] = swift_task_alloc();
  sub_21D7C546C();
  v5[41] = sub_21D7C5460();
  v5[42] = sub_21D7C5424();
  v5[43] = v10;
  return swift_task_switch();
}

uint64_t sub_21CF62A40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_8_21();
  v3 = OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_26_12(v3);
  OUTLINED_FUNCTION_46_7();
  OUTLINED_FUNCTION_146();
  OUTLINED_FUNCTION_28_10();
  *(_QWORD *)(v1 + 40) = v2;
  sub_21CDB6D4C(&qword_255331CF8, (void (*)(uint64_t))type metadata accessor for ProcessDeepLinkAction);
  OUTLINED_FUNCTION_103_3(v4);
  v6 = OUTLINED_FUNCTION_87_4(v5);
  OUTLINED_FUNCTION_61_6(v6, *MEMORY[0x24BE5D0A0], v7, v8, v9, v10, v11, v12, v16, v17, v18);
  v13 = OUTLINED_FUNCTION_53_6();
  OUTLINED_FUNCTION_40_9(v13);
  __swift_destroy_boxed_opaque_existential_1(v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F67768);
  sub_21CDD363C(&qword_253F67760, &qword_253F67768);
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 360) = v14;
  OUTLINED_FUNCTION_72_4(v14);
  return OUTLINED_FUNCTION_15_15();
}

uint64_t sub_21CF62B34()
{
  OUTLINED_FUNCTION_23_10();
  return OUTLINED_FUNCTION_7_0();
}

uint64_t sub_21CF62B70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9[4];

  sub_21D7C3FC0();
  OUTLINED_FUNCTION_1_16();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_69();
  v1 = sub_21D7C4EFC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_69();
  v5 = v4 - v3;
  if (qword_253F60200 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v1, (uint64_t)qword_253F81D40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v5, v6, v1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F67DC0);
  OUTLINED_FUNCTION_27_1();
  OUTLINED_FUNCTION_39_8();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_21D7C8560;
  OUTLINED_FUNCTION_36_1();
  sub_21D7C3FA8();
  swift_getErrorValue();
  v9[3] = v8;
  __swift_allocate_boxed_opaque_existential_0Tm(v9);
  (*(void (**)(void))(*(_QWORD *)(v8 - 8) + 16))();
  sub_21D7C3F90();
  sub_21CDBDA44((uint64_t)v9, &qword_253F67EB0);
  OUTLINED_FUNCTION_19_1();
  sub_21D7C3FCC();
  sub_21D7C4D40();
  OUTLINED_FUNCTION_90_0();
  return OUTLINED_FUNCTION_83(v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
}

uint64_t sub_21CF62D28(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  _OWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t result;
  _OWORD v25[2];
  _OWORD v26[2];
  __int128 v27;
  __int128 v28;
  uint64_t v29;

  sub_21D284E20(&v29);
  sub_21D7C4C20();
  swift_retain();
  sub_21D284E60(&v27);
  v7 = *((_QWORD *)&v27 + 1);
  if (!*((_QWORD *)&v27 + 1))
  {
LABEL_14:
    swift_release();
    swift_bridgeObjectRelease();
    sub_21CDBD944();
    return swift_release();
  }
  while (1)
  {
    v8 = v27;
    sub_21CE4033C(&v28, v26);
    v9 = *a5;
    v11 = sub_21D27FB2C();
    v12 = *(_QWORD *)(v9 + 16);
    v13 = (v10 & 1) == 0;
    v14 = v12 + v13;
    if (__OFADD__(v12, v13))
      break;
    v15 = v10;
    if (*(_QWORD *)(v9 + 24) >= v14)
    {
      if ((a4 & 1) != 0)
      {
        if ((v10 & 1) != 0)
          goto LABEL_9;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_253F67CF0);
        sub_21D7C5BB0();
        if ((v15 & 1) != 0)
          goto LABEL_9;
      }
    }
    else
    {
      sub_21D280A7C(v14, a4 & 1);
      v16 = sub_21D27FB2C();
      if ((v15 & 1) != (v17 & 1))
        goto LABEL_17;
      v11 = v16;
      if ((v15 & 1) != 0)
      {
LABEL_9:
        sub_21CF63120((uint64_t)v26, (uint64_t)v25);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
        swift_bridgeObjectRelease();
        v18 = (_OWORD *)(*(_QWORD *)(*a5 + 56) + 32 * v11);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
        sub_21CE4033C(v25, v18);
        goto LABEL_13;
      }
    }
    v19 = (_QWORD *)*a5;
    *(_QWORD *)(*a5 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    v20 = (_QWORD *)(v19[6] + 16 * v11);
    *v20 = v8;
    v20[1] = v7;
    sub_21CE4033C(v26, (_OWORD *)(v19[7] + 32 * v11));
    v21 = v19[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_16;
    v19[2] = v23;
LABEL_13:
    sub_21D284E60(&v27);
    v7 = *((_QWORD *)&v27 + 1);
    a4 = 1;
    if (!*((_QWORD *)&v27 + 1))
      goto LABEL_14;
  }
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  result = sub_21D7C5DCC();
  __break(1u);
  return result;
}

uint64_t sub_21CF62F40(unsigned __int8 *a1)
{
  return sub_21CF60AF0(*a1);
}

void sub_21CF62F48(uint64_t a1)
{
  sub_21CF614D0(*(void **)a1, *(_BYTE *)(a1 + 8));
}

uint64_t sub_21CF62F84(uint64_t *a1, void *a2)
{
  return sub_21CF60C64(*a1, a1[1], a2);
}

uint64_t sub_21CF62F98(unsigned __int8 *a1)
{
  return sub_21CF60B24(*a1);
}

void sub_21CF62FA0(uint64_t a1)
{
  sub_21CF614D0(*(void **)a1, *(_BYTE *)(a1 + 8));
}

uint64_t sub_21CF62FDC(uint64_t *a1, void *a2)
{
  return sub_21CF60EC8(*a1, a1[1], a2);
}

uint64_t sub_21CF62FF0(uint64_t *a1, void *a2)
{
  return sub_21CF62FDC(a1, a2);
}

void sub_21CF62FF8(uint64_t a1)
{
  uint64_t v1;

  sub_21D232A4C(a1, *(void (**)(uint64_t, _QWORD))(v1 + 16));
}

void sub_21CF63000(uint64_t a1)
{
  sub_21CF62FA0(a1);
}

uint64_t sub_21CF63008()
{
  uint64_t v0;

  OUTLINED_FUNCTION_247();
  return swift_deallocObject();
}

BOOL sub_21CF63024(void *a1, void (*a2)(uint64_t *))
{
  return sub_21D3B1C4C(a1, a2);
}

void sub_21CF6302C(id a1)
{

}

uint64_t sub_21CF63044()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_14_14();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_229(v0);
  v2 = OUTLINED_FUNCTION_5_10(v1);
  return sub_21CF628D8(v2, v3, v4, v5, v6);
}

uint64_t sub_21CF630A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ProcessDeepLinkAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21CF630E4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ProcessDeepLinkAction();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21CF63120(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_21CF6315C()
{
  uint64_t v0;

  return sub_21CF611C8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_21CF6317C()
{
  return 16;
}

__n128 sub_21CF63188(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_21CF63198()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_229(v0);
  v2 = OUTLINED_FUNCTION_60_5(v1);
  return sub_21CF60668(v2, v3, v4, v5);
}

uint64_t sub_21CF631F0(unsigned __int8 *a1)
{
  return sub_21CF62F98(a1);
}

void sub_21CF631F8(unint64_t *a1)
{
  sub_21CF5F850(a1);
}

uint64_t sub_21CF63200(uint64_t *a1, void *a2)
{
  return sub_21CF62F84(a1, a2);
}

uint64_t sub_21CF63208()
{
  swift_release();
  return swift_deallocObject();
}

void sub_21CF6322C(uint64_t a1)
{
  sub_21CF62F48(a1);
}

uint64_t objectdestroy_20Tm()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(OUTLINED_FUNCTION_0_7() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_83(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21CF632C0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_14_14();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_229(v0);
  v2 = OUTLINED_FUNCTION_5_10(v1);
  return sub_21CF62060(v2, v3, v4, v5, v6);
}

uint64_t sub_21CF6331C()
{
  uint64_t v0;

  return sub_21CF61178(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t objectdestroy_29Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21CF63364()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_229(v0);
  v2 = OUTLINED_FUNCTION_60_5(v1);
  return sub_21CF601E0(v2, v3, v4, v5);
}

uint64_t objectdestroy_34Tm()
{
  OUTLINED_FUNCTION_44_0();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21CF633E4(unsigned __int8 *a1)
{
  return sub_21CF62F40(a1);
}

uint64_t OUTLINED_FUNCTION_0_43()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_8_21()
{
  return sub_21D7C42D8();
}

uint64_t OUTLINED_FUNCTION_9_22(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 - 8) = *v1;
  *(_QWORD *)(v2 - 8) = *v1;
  *(_QWORD *)(v3 + 168) = a1;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_13_14()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_15_15()
{
  return sub_21D7C4D1C();
}

uint64_t OUTLINED_FUNCTION_16_13()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_19_13()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[8];
  v2 = *(_QWORD *)(v1 + 48);
  v0[5] = *(_QWORD *)(v1 + 40);
  v0[6] = v2;
  return sub_21D7C4260();
}

uint64_t OUTLINED_FUNCTION_20_9()
{
  return sub_21D7C0C60();
}

uint64_t OUTLINED_FUNCTION_21_14()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_22_12()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v1 - 88);
  return sub_21D7C4D64();
}

uint64_t OUTLINED_FUNCTION_23_10()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 368) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_26_12(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v2, v1, a1);
}

uint64_t OUTLINED_FUNCTION_27_13()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_28_10()
{
  return sub_21D7C4D64();
}

uint64_t OUTLINED_FUNCTION_29_8(_QWORD *a1, uint64_t a2)
{
  return sub_21D1D62C4(a1, a2);
}

uint64_t OUTLINED_FUNCTION_34_10()
{
  return sub_21D7C4D64();
}

uint64_t OUTLINED_FUNCTION_40_9(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v2 + 352) = a1;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
}

uint64_t OUTLINED_FUNCTION_44_9()
{
  return sub_21D7C5D84();
}

uint64_t OUTLINED_FUNCTION_45_7()
{
  return sub_21D7C0C84();
}

uint64_t OUTLINED_FUNCTION_46_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(v1 + *(int *)(v0 + 24), 1, 1, v2);
}

uint64_t OUTLINED_FUNCTION_48_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 32))(v3, v2, v1);
}

uint64_t OUTLINED_FUNCTION_50_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 - 104) = a2;
  *(_QWORD *)(v4 - 96) = a4;
  return sub_21D7C44DC();
}

uint64_t OUTLINED_FUNCTION_53_6()
{
  return sub_21D7C4530();
}

uint64_t OUTLINED_FUNCTION_55_6()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_56_6()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 16) = 0;
}

uint64_t OUTLINED_FUNCTION_57_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a12 + 8))(v12, v13);
}

uint64_t OUTLINED_FUNCTION_58_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a10 + 8))(v10, v11);
}

uint64_t OUTLINED_FUNCTION_60_5(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_61_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a10 + 104))(v11, a2, a11);
}

uint64_t OUTLINED_FUNCTION_66_7@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v2 + a1, v4, v3);
}

void OUTLINED_FUNCTION_67_5(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 24) = a1;
  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v2 - 88) = 0;
}

uint64_t OUTLINED_FUNCTION_69_5()
{
  return sub_21D7C0BD0();
}

uint64_t OUTLINED_FUNCTION_71_3()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_72_4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 280);
}

uint64_t OUTLINED_FUNCTION_73_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_project_value_buffer(v2, a2);
}

uint64_t OUTLINED_FUNCTION_77_5()
{
  return sub_21D7C0984();
}

unint64_t OUTLINED_FUNCTION_78_2()
{
  return sub_21CDD42A0();
}

uint64_t OUTLINED_FUNCTION_79_5()
{
  return sub_21D7C570C();
}

__n128 *OUTLINED_FUNCTION_80_5(__n128 *result, __n128 a2)
{
  result[1] = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_81_4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = a2;
  return v3;
}

uint64_t OUTLINED_FUNCTION_82_5()
{
  return sub_21D7C0B64();
}

uint64_t OUTLINED_FUNCTION_83_4()
{
  return sub_21D7C4D34();
}

uint64_t OUTLINED_FUNCTION_84_5()
{
  return sub_21D7C4D28();
}

uint64_t OUTLINED_FUNCTION_87_4(uint64_t a1)
{
  uint64_t v1;

  return sub_21CF630A0(v1, a1);
}

id OUTLINED_FUNCTION_91_5(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t OUTLINED_FUNCTION_92_2()
{
  return swift_endAccess();
}

uint64_t OUTLINED_FUNCTION_93_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_95_5()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_96_3()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_98_4()
{
  return sub_21D7C5724();
}

void OUTLINED_FUNCTION_99_4()
{
  uint64_t *v0;
  uint64_t v1;

  sub_21CDBDA44(v1, v0);
}

uint64_t OUTLINED_FUNCTION_100_5()
{
  return sub_21D7C0B64();
}

void OUTLINED_FUNCTION_102_2()
{
  void *v0;

}

void OUTLINED_FUNCTION_103_3(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  __swift_allocate_boxed_opaque_existential_0Tm(v1);
}

uint64_t OUTLINED_FUNCTION_108_2@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + a1) = v2;
  return type metadata accessor for UnifiedMessages.Coordinator();
}

id OUTLINED_FUNCTION_110_0()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, (SEL)(v1 + 72));
}

id OUTLINED_FUNCTION_111_2()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, (SEL)(v1 + 72));
}

_QWORD *sub_21CF638FC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (_QWORD *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
LABEL_10:
    swift_retain();
    return a1;
  }
  v8 = *(int *)(a3 + 20);
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_21D7C08AC();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  if ((*((_BYTE *)a2 + v12 + 40) & 1) == 0)
  {
    *(_QWORD *)v13 = *(_QWORD *)v14;
    v13[40] = 0;
    goto LABEL_10;
  }
  v15 = *((_QWORD *)v14 + 3);
  if (v15)
  {
    v16 = *((_QWORD *)v14 + 4);
    *((_QWORD *)v13 + 3) = v15;
    *((_QWORD *)v13 + 4) = v16;
    (**(void (***)(char *))(v15 - 8))(v13);
  }
  else
  {
    v17 = *((_OWORD *)v14 + 1);
    *(_OWORD *)v13 = *(_OWORD *)v14;
    *((_OWORD *)v13 + 1) = v17;
    *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
  }
  v13[40] = 1;
  return a1;
}

uint64_t sub_21CF63A38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_21D7C08AC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  result = a1 + *(int *)(a2 + 24);
  if ((*(_BYTE *)(result + 40) & 1) == 0)
    return swift_release();
  if (*(_QWORD *)(result + 24))
    return __swift_destroy_boxed_opaque_existential_1(result);
  return result;
}

_QWORD *sub_21CF63AF4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_21D7C08AC();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    *v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  if ((*((_BYTE *)a2 + v10 + 40) & 1) != 0)
  {
    v13 = *((_QWORD *)v12 + 3);
    if (v13)
    {
      v14 = *((_QWORD *)v12 + 4);
      *((_QWORD *)v11 + 3) = v13;
      *((_QWORD *)v11 + 4) = v14;
      (**(void (***)(char *))(v13 - 8))(v11);
    }
    else
    {
      v15 = *((_OWORD *)v12 + 1);
      *(_OWORD *)v11 = *(_OWORD *)v12;
      *((_OWORD *)v11 + 1) = v15;
      *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
    }
    v11[40] = 1;
  }
  else
  {
    *(_QWORD *)v11 = *(_QWORD *)v12;
    v11[40] = 0;
    swift_retain();
  }
  return a1;
}

_QWORD *sub_21CF63C10(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;

  *a1 = *a2;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_21CDBDA44((uint64_t)a1 + v6, &qword_253F65B18);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B18);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_21D7C08AC();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v10 = *(int *)(a3 + 24);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    sub_21CDBDA44((uint64_t)a1 + v10, &qword_253F65B00);
    if ((v12[40] & 1) != 0)
    {
      v13 = *((_QWORD *)v12 + 3);
      if (v13)
      {
        *((_QWORD *)v11 + 3) = v13;
        *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
        (**(void (***)(char *, char *))(v13 - 8))(v11, v12);
      }
      else
      {
        v14 = *(_OWORD *)v12;
        v15 = *((_OWORD *)v12 + 1);
        *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
        *(_OWORD *)v11 = v14;
        *((_OWORD *)v11 + 1) = v15;
      }
      v11[40] = 1;
    }
    else
    {
      *(_QWORD *)v11 = *(_QWORD *)v12;
      v11[40] = 0;
      swift_retain();
    }
  }
  return a1;
}

_QWORD *sub_21CF63D68(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F65B18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_21D7C08AC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = *(int *)(a3 + 24);
  v12 = (_OWORD *)((char *)a1 + v11);
  v13 = (_OWORD *)((char *)a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  *(_OWORD *)((char *)v12 + 25) = *(_OWORD *)((char *)v13 + 25);
  return a1;
}

