@implementation SBHIconManager

- (SBHFocusModeManager)focusModeManager
{
  return self->_focusModeManager;
}

- (BOOL)iconViewDisplaysAccessories:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  BOOL v7;

  v4 = a3;
  objc_msgSend(v4, "icon");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (-[SBHIconManager allowsBadgingForIcon:](self, "allowsBadgingForIcon:", v5))
  {
    objc_msgSend(v4, "location");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[SBHIconManager allowsBadgingForIconLocation:](self, "allowsBadgingForIconLocation:", v6);

  }
  else
  {
    v7 = 0;
  }

  return v7;
}

- (BOOL)allowsBadgingForIcon:(id)a3
{
  id v4;
  void *v5;
  char v6;

  v4 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v6 = objc_msgSend(v5, "iconManager:allowsBadgingForIcon:", self, v4);
  else
    v6 = 1;

  return v6;
}

- (SBHIconManagerDelegate)delegate
{
  return (SBHIconManagerDelegate *)objc_loadWeakRetained((id *)&self->_delegate);
}

void __44__SBHIconManager_iconViewShowingContextMenu__block_invoke(uint64_t a1, void *a2, _BYTE *a3)
{
  id v6;

  v6 = a2;
  if (objc_msgSend(v6, "isShowingContextMenu"))
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
    *a3 = 1;
  }

}

- (void)iconView:(id)a3 willRemoveIconImageView:(id)a4
{
  id v5;
  id v6;

  v5 = a4;
  -[SBHIconManager homescreenIconImageViewMap](self, "homescreenIconImageViewMap");
  v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "recycleView:", v5);

}

- (void)configureIconView:(id)a3 forIcon:(id)a4
{
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v10 = a3;
  v6 = a4;
  objc_msgSend(v10, "setAllowsCloseBox:", -[SBHIconManager iconsShouldAllowCloseBoxes](self, "iconsShouldAllowCloseBoxes"));
  objc_msgSend(v10, "setAllowsResizeHandle:", 1);
  objc_msgSend(v10, "setDelegate:", self);
  objc_msgSend(v10, "addObserver:", self);
  objc_msgSend(v10, "location");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((SBIconLocationGroupContainsLocation(CFSTR("SBIconLocationGroupRoot"), v7) & 1) != 0
    || objc_msgSend(v7, "isEqualToString:", CFSTR("SBIconLocationFolder")))
  {
    objc_msgSend(v10, "setDisplaysIconStatusInLabel:", 1);
  }
  -[SBHIconManager iconDragManager](self, "iconDragManager");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "configureIconView:", v10);
  objc_msgSend(v10, "setImageLoadingBehavior:", 1);
  -[SBHIconManager delegate](self, "delegate");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v9, "iconManager:configureIconView:forIcon:", self, v10, v6);

}

- (BOOL)iconsShouldAllowCloseBoxes
{
  void *v2;
  char v3;

  -[SBHIconManager iconDragManager](self, "iconDragManager");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isTrackingMultipleItemIconDrags") ^ 1;

  return v3;
}

- (void)recycleIconView:(id)a3
{
  id v4;
  id v5;

  v4 = a3;
  -[SBHIconManager iconViewMap](self, "iconViewMap");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "recycleView:", v4);

}

- (unint64_t)viewMap:(id)a3 maxRecycledViewsOfClass:(Class)a4
{
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  unint64_t maxIconViewsInHierarchy;

  v5 = a3;
  -[SBHIconManager iconViewMap](self, "iconViewMap");
  v6 = (id)objc_claimAutoreleasedReturnValue();

  if (v6 == v5
    || (-[SBHIconManager homescreenIconAccessoryViewMap](self, "homescreenIconAccessoryViewMap"),
        v7 = (id)objc_claimAutoreleasedReturnValue(),
        v7,
        v7 == v5)
    || (-[SBHIconManager homescreenIconLabelAccessoryViewMap](self, "homescreenIconLabelAccessoryViewMap"),
        v8 = (id)objc_claimAutoreleasedReturnValue(),
        v8,
        v8 == v5))
  {
    maxIconViewsInHierarchy = self->_maxIconViewsInHierarchy;
  }
  else
  {
    -[SBHIconManager homescreenIconImageViewMap](self, "homescreenIconImageViewMap");
    v9 = (id)objc_claimAutoreleasedReturnValue();

    if (v9 == v5)
    {
      maxIconViewsInHierarchy = -1;
    }
    else
    {
      -[SBHIconManager widgetBackgroundViewMap](self, "widgetBackgroundViewMap");
      v10 = (id)objc_claimAutoreleasedReturnValue();

      if (v10 == v5)
        maxIconViewsInHierarchy = 10;
      else
        maxIconViewsInHierarchy = 0;
    }
  }

  return maxIconViewsInHierarchy;
}

- (id)dequeueReusableIconViewOfClass:(Class)a3
{
  void *v4;
  void *v5;

  -[SBHIconManager iconViewMap](self, "iconViewMap");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "dequeueReusableViewOfClass:", a3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

- (id)iconViewMap
{
  SBHReusableViewMap *iconViewMap;
  SBHReusableViewMap *v4;
  SBHReusableViewMap *v5;
  void *v6;
  void *v7;

  iconViewMap = self->_iconViewMap;
  if (!iconViewMap)
  {
    v4 = -[SBHReusableViewMap initWithDelegate:]([SBHReusableViewMap alloc], "initWithDelegate:", self);
    v5 = self->_iconViewMap;
    self->_iconViewMap = v4;

    -[SBHIconManager listLayoutProvider](self, "listLayoutProvider");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "layoutForIconLocation:", CFSTR("SBIconLocationRoot"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    -[SBHReusableViewMap addRecycledViewsOfClass:upToCount:](self->_iconViewMap, "addRecycledViewsOfClass:upToCount:", -[SBHIconManager iconViewClass](self, "iconViewClass"), (objc_msgSend(v7, "numberOfColumnsForOrientation:", 1) + 2)* objc_msgSend(v7, "numberOfRowsForOrientation:", 1));
    iconViewMap = self->_iconViewMap;
  }
  return iconViewMap;
}

- (id)homescreenIconLabelAccessoryViewMap
{
  SBHReusableViewMap *homescreenIconLabelAccessoryViewMap;
  SBHReusableViewMap *v4;
  SBHReusableViewMap *v5;

  homescreenIconLabelAccessoryViewMap = self->_homescreenIconLabelAccessoryViewMap;
  if (!homescreenIconLabelAccessoryViewMap)
  {
    v4 = -[SBHReusableViewMap initWithDelegate:]([SBHReusableViewMap alloc], "initWithDelegate:", self);
    v5 = self->_homescreenIconLabelAccessoryViewMap;
    self->_homescreenIconLabelAccessoryViewMap = v4;

    homescreenIconLabelAccessoryViewMap = self->_homescreenIconLabelAccessoryViewMap;
  }
  return homescreenIconLabelAccessoryViewMap;
}

- (BOOL)iconViewDisplaysLabel:(id)a3
{
  id v4;
  void *v5;
  char v6;

  v4 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v6 = objc_msgSend(v5, "iconManager:iconViewDisplaysLabel:", self, v4);
  else
    v6 = 1;

  return v6;
}

- (id)recycledViewsContainerProviderForViewMap:(id)a3
{
  void *v4;
  void *v5;

  -[SBHIconManager delegate](self, "delegate", a3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v4, "recycledViewsContainerProviderForIconManager:", self);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v5 = 0;
  }

  return v5;
}

- (BOOL)isFolderPageManagementUIVisible
{
  void *v2;
  char v3;

  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isPageManagementUIVisible");

  return v3;
}

- (BOOL)isTransitioningHomeScreenState
{
  void *v2;
  char v3;

  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isTransitioningPageState");

  return v3;
}

- (BOOL)isShowingPullDownSearch
{
  void *v2;
  char v3;

  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isPullDownSearchVisible");

  return v3;
}

- (void)enumerateDisplayedIconViewsUsingBlock:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[SBHIconManager rootViewController](self, "rootViewController");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "enumerateDisplayedIconViewsUsingBlock:", v4);

  -[SBHIconManager floatingDockViewController](self, "floatingDockViewController");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "enumerateDisplayedIconViewsUsingBlock:", v4);

  -[SBHIconManager _effectiveTodayViewController](self, "_effectiveTodayViewController");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "enumerateDisplayedIconViewsUsingBlock:", v4);

  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  -[SBHIconManager _libraryViewControllers](self, "_libraryViewControllers", 0);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v9)
  {
    v10 = v9;
    v11 = *(_QWORD *)v14;
    do
    {
      v12 = 0;
      do
      {
        if (*(_QWORD *)v14 != v11)
          objc_enumerationMutation(v8);
        objc_msgSend(*(id *)(*((_QWORD *)&v13 + 1) + 8 * v12++), "enumerateDisplayedIconViewsUsingBlock:", v4);
      }
      while (v10 != v12);
      v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    }
    while (v10);
  }

}

- (BOOL)isEditing
{
  BOOL v2;
  _QWORD v4[5];
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  if (self->_editing)
  {
    v2 = 1;
  }
  else
  {
    v4[0] = MEMORY[0x1E0C809B0];
    v4[1] = 3221225472;
    v4[2] = __27__SBHIconManager_isEditing__block_invoke;
    v4[3] = &unk_1E8D8C5F8;
    v4[4] = &v5;
    -[SBHIconManager enumerateEditableViewControllersUsingBlock:](self, "enumerateEditableViewControllersUsingBlock:", v4);
    v2 = *((_BYTE *)v6 + 24) != 0;
  }
  _Block_object_dispose(&v5, 8);
  return v2;
}

- (void)enumerateEditableViewControllersUsingBlock:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[SBHIconManager rootViewController](self, "rootViewController");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager _enumerateEditableViewController:usingBlock:](self, "_enumerateEditableViewController:usingBlock:", v5, v4);

  -[SBHIconManager leadingCustomViewController](self, "leadingCustomViewController");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager _enumerateEditableViewController:usingBlock:](self, "_enumerateEditableViewController:usingBlock:", v6, v4);

  -[SBHIconManager overlayTodayViewController](self, "overlayTodayViewController");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager _enumerateEditableViewController:usingBlock:](self, "_enumerateEditableViewController:usingBlock:", v7, v4);

  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  -[SBHIconManager _libraryViewControllers](self, "_libraryViewControllers", 0);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v9)
  {
    v10 = v9;
    v11 = *(_QWORD *)v14;
    do
    {
      v12 = 0;
      do
      {
        if (*(_QWORD *)v14 != v11)
          objc_enumerationMutation(v8);
        -[SBHIconManager _enumerateEditableViewController:usingBlock:](self, "_enumerateEditableViewController:usingBlock:", *(_QWORD *)(*((_QWORD *)&v13 + 1) + 8 * v12++), v4);
      }
      while (v10 != v12);
      v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    }
    while (v10);
  }

}

- (void)_enumerateEditableViewController:(id)a3 usingBlock:(id)a4
{
  char v4;

  if (a3)
  {
    v4 = 0;
    (*((void (**)(id, id, char *))a4 + 2))(a4, a3, &v4);
  }
}

uint64_t __27__SBHIconManager_isEditing__block_invoke(uint64_t a1, void *a2, _BYTE *a3)
{
  uint64_t result;

  result = objc_msgSend(a2, "isEditing");
  if ((_DWORD)result)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 1;
    *a3 = 1;
  }
  return result;
}

- (id)_libraryViewControllers
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  _QWORD v8[2];

  v8[1] = *MEMORY[0x1E0C80C00];
  -[SBHIconManager delegate](self, "delegate");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v3, "libraryViewControllersForIconManager:", self);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v4 = 0;
  }
  -[SBHIconManager overlayLibraryViewController](self, "overlayLibraryViewController");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5 && (objc_msgSend(v4, "containsObject:", v5) & 1) == 0)
  {
    if (v4)
    {
      objc_msgSend(v4, "arrayByAddingObject:", v5);
      v6 = objc_claimAutoreleasedReturnValue();

      v4 = (void *)v6;
    }
    else
    {
      v8[0] = v5;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v8, 1);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
    }
  }

  return v4;
}

- (SBHRootFolderCustomViewPresenting)leadingCustomViewController
{
  return self->_leadingCustomViewController;
}

- (BOOL)hasOpenFolder
{
  void *v3;
  BOOL v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  -[SBHIconManager floatingDockViewController](self, "floatingDockViewController");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v3, "isPresentingFolder") & 1) != 0)
  {
    v4 = 1;
  }
  else if (-[SBHIconManager hasRootFolderController](self, "hasRootFolderController"))
  {
    -[SBHIconManager rootViewController](self, "rootViewController");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "deepestFolderController");
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    if (v6)
    {
      v4 = 1;
    }
    else
    {
      -[SBHIconManager rootFolderController](self, "rootFolderController");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "deepestFolderController");
      v8 = (void *)objc_claimAutoreleasedReturnValue();

      if (v8)
      {
        v4 = 1;
      }
      else
      {
        -[SBHIconManager _currentFolderController](self, "_currentFolderController");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "deepestFolderController");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        v4 = v10 != 0;

      }
    }

  }
  else
  {
    v4 = 0;
  }

  return v4;
}

- (void)enumerateIconViewQueryableChildrenWithOptions:(unint64_t)a3 usingBlock:(id)a4
{
  id v6;
  void (**v7)(_QWORD, _QWORD, _QWORD, _QWORD);
  int v8;
  int v9;
  void *v10;
  _BOOL4 v11;
  int v12;
  uint64_t *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  _BOOL4 v17;
  int v18;
  _BOOL4 v19;
  void *v20;
  int v21;
  uint64_t *v22;
  uint64_t *v23;
  BOOL v24;
  unint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t *v32;
  int v33;
  void *v34;
  void *v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  uint64_t *v40;
  void *v41;
  id v42;
  _QWORD v43[4];
  void (**v44)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t *v45;
  unint64_t v46;
  _QWORD v47[4];
  void (**v48)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t *v49;
  unint64_t v50;
  _QWORD v51[4];
  id v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  char v57;

  v6 = a4;
  v7 = (void (**)(_QWORD, _QWORD, _QWORD, _QWORD))v6;
  if ((a3 & 0x20) == 0)
    goto LABEL_3;
  a3 &= ~0x20uLL;
  v54 = 0;
  v55 = &v54;
  v56 = 0x2020000000;
  v57 = 0;
  v51[0] = MEMORY[0x1E0C809B0];
  v51[1] = 3221225472;
  v51[2] = __75__SBHIconManager_enumerateIconViewQueryableChildrenWithOptions_usingBlock___block_invoke;
  v51[3] = &unk_1E8D8CDD0;
  v52 = v6;
  v53 = &v54;
  -[SBHIconManager enumerateIconViewQueryableChildrenWithOptions:usingBlock:](self, "enumerateIconViewQueryableChildrenWithOptions:usingBlock:", a3 | 0x40, v51);
  v8 = *((unsigned __int8 *)v55 + 24);

  _Block_object_dispose(&v54, 8);
  if (!v8)
  {
LABEL_3:
    v54 = 0;
    v55 = &v54;
    if (((a3 & 3) != 0) | a3 & 1)
      v9 = 1;
    else
      v9 = (a3 >> 3) & 1;
    v56 = 0x2020000000;
    v57 = 0;
    -[SBHIconManager floatingDockViewController](self, "floatingDockViewController");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = (a3 & 0x80) != 0 || -[SBHIconManager isFloatingDockVisible](self, "isFloatingDockVisible");
    v12 = v9 ^ 1;
    if (v10)
    {
      if (v12 | v11)
      {
        v13 = v55;
        *((_BYTE *)v55 + 24) = 0;
        ((void (**)(_QWORD, void *, unint64_t, uint64_t *))v7)[2](v7, v10, a3, v13 + 3);
        if (*((_BYTE *)v55 + 24))
          goto LABEL_70;
      }
    }
    if ((a3 & 3) != 0 && -[SBHIconManager isShowingModalInteraction](self, "isShowingModalInteraction"))
      goto LABEL_70;
    -[SBHIconManager leadingTodayViewController](self, "leadingTodayViewController");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager overlayTodayViewController](self, "overlayTodayViewController");
    v15 = objc_claimAutoreleasedReturnValue();
    v41 = (void *)v15;
    if (v14)
      v16 = v14;
    else
      v16 = (void *)v15;
    v42 = v16;
    v17 = -[SBHIconManager isTodayViewEffectivelyVisible](self, "isTodayViewEffectivelyVisible");
    if (v14)
      v18 = objc_msgSend(v14, "isSpotlightVisible");
    else
      v18 = objc_msgSend(v41, "isSpotlightVisible");
    if (v42)
    {
      if ((v9 & (!v17 | v18) & 1) == 0)
      {
        v22 = v55;
        *((_BYTE *)v55 + 24) = 0;
        ((void (**)(_QWORD, id, unint64_t, uint64_t *))v7)[2](v7, v42, a3, v22 + 3);
        if (*((_BYTE *)v55 + 24))
          goto LABEL_69;
        v47[0] = MEMORY[0x1E0C809B0];
        v47[1] = 3221225472;
        v47[2] = __75__SBHIconManager_enumerateIconViewQueryableChildrenWithOptions_usingBlock___block_invoke_2;
        v47[3] = &unk_1E8D8CDF8;
        v48 = v7;
        v49 = &v54;
        v50 = a3;
        -[SBHIconManager enumerateAppPredictionViewControllersInIconLocationGroup:withOptions:usingBlock:](self, "enumerateAppPredictionViewControllersInIconLocationGroup:withOptions:usingBlock:", CFSTR("SBIconLocationGroupTodayView"), a3, v47);

        if (*((_BYTE *)v55 + 24))
        {
LABEL_69:

LABEL_70:
          _Block_object_dispose(&v54, 8);
          goto LABEL_71;
        }
      }
    }
    if (-[SBHIconManager isShowingOrTransitioningToTrailingCustomView](self, "isShowingOrTransitioningToTrailingCustomView"))
    {
      if (v10)
      {
        v19 = 1;
        goto LABEL_26;
      }
      -[SBHIconManager trailingLibraryViewController](self, "trailingLibraryViewController");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = 1;
    }
    else
    {
      v19 = -[SBHIconManager isMainDisplayLibraryViewVisible](self, "isMainDisplayLibraryViewVisible");
      if (v10)
      {
LABEL_26:
        objc_msgSend(v10, "libraryViewController");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        v21 = objc_msgSend(v10, "isPresentingLibrary");
        if (!v20)
          goto LABEL_41;
LABEL_34:
        if (v21 && v12 | v19)
        {
          v23 = v55;
          *((_BYTE *)v55 + 24) = 0;
          ((void (**)(_QWORD, void *, unint64_t, uint64_t *))v7)[2](v7, v20, a3, v23 + 3);
          v24 = v17 || v19;
          if ((a3 & 3) == 0)
            v24 = 0;
          if (*((_BYTE *)v55 + 24) || v24)
            goto LABEL_68;
          goto LABEL_43;
        }
LABEL_41:
        if ((a3 & 3) != 0 && (v17 || v19))
          goto LABEL_68;
LABEL_43:
        v25 = -[SBHIconManager contentVisibility](self, "contentVisibility");
        if ((a3 & 5) == 1 && v25 - 3 >= 0xFFFFFFFFFFFFFFFELL)
          goto LABEL_68;
        -[SBHIconManager _currentFolderController](self, "_currentFolderController");
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        if (self->_closingFolder
          || -[SBHIconManager isPerformingCancelledExpandTransition](self, "isPerformingCancelledExpandTransition"))
        {
          -[SBHIconManager rootFolderController](self, "rootFolderController");
          v27 = objc_claimAutoreleasedReturnValue();

          v26 = (void *)v27;
        }
        if (!v26)
          goto LABEL_54;
        v28 = v55;
        *((_BYTE *)v55 + 24) = 0;
        ((void (**)(_QWORD, void *, unint64_t, uint64_t *))v7)[2](v7, v26, a3, v28 + 3);
        if ((a3 & 1) == 0 || *((_BYTE *)v55 + 24))
        {
          if (!*((_BYTE *)v55 + 24))
          {
LABEL_54:
            -[SBHIconManager rootViewController](self, "rootViewController");
            v30 = objc_claimAutoreleasedReturnValue();
            v31 = (void *)v30;
            if (v26
              || !v30
              || (v32 = v55,
                  *((_BYTE *)v55 + 24) = 0,
                  ((void (**)(_QWORD, uint64_t, unint64_t, uint64_t *))v7)[2](v7, v30, a3, v32 + 3),
                  !*((_BYTE *)v55 + 24)))
            {
              if ((a3 & 0x40) != 0)
                goto LABEL_59;
              *((_BYTE *)v55 + 24) = 0;
              v43[0] = MEMORY[0x1E0C809B0];
              v43[1] = 3221225472;
              v43[2] = __75__SBHIconManager_enumerateIconViewQueryableChildrenWithOptions_usingBlock___block_invoke_3;
              v43[3] = &unk_1E8D8CDF8;
              v44 = v7;
              v45 = &v54;
              v46 = a3;
              -[SBHIconManager enumerateAppPredictionViewControllersInIconLocationGroup:withOptions:usingBlock:](self, "enumerateAppPredictionViewControllersInIconLocationGroup:withOptions:usingBlock:", CFSTR("SBIconLocationGroupRoot"), a3, v43);
              v33 = *((unsigned __int8 *)v55 + 24);

              if (!v33)
              {
LABEL_59:
                -[SBHIconManager trailingCustomViewController](self, "trailingCustomViewController");
                v34 = (void *)objc_claimAutoreleasedReturnValue();
                if ((objc_opt_respondsToSelector() & 1) != 0)
                {
                  -[SBHIconManager rootFolderController](self, "rootFolderController");
                  v35 = (void *)objc_claimAutoreleasedReturnValue();
                  v36 = objc_msgSend(v35, "pageState");

                  if (v36 == 4)
                  {
                    objc_msgSend(v34, "iconViewQueryable");
                    v37 = (void *)objc_claimAutoreleasedReturnValue();
                    if ((objc_opt_respondsToSelector() & 1) != 0)
                      v38 = v37;
                    else
                      v38 = 0;
                    v39 = v38;

                    v40 = v55;
                    *((_BYTE *)v55 + 24) = 0;
                    ((void (**)(_QWORD, id, unint64_t, uint64_t *))v7)[2](v7, v39, a3, v40 + 3);

                  }
                }

              }
            }

          }
        }
        else
        {
          -[SBHIconManager rootFolderController](self, "rootFolderController");
          v29 = (void *)objc_claimAutoreleasedReturnValue();

          if (v26 == v29)
            goto LABEL_54;
        }

LABEL_68:
        goto LABEL_69;
      }
      -[SBHIconManager overlayLibraryViewController](self, "overlayLibraryViewController");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
    }
    v21 = 1;
    if (!v20)
      goto LABEL_41;
    goto LABEL_34;
  }
LABEL_71:

}

- (SBHTodayViewControlling)overlayTodayViewController
{
  return self->_overlayTodayViewController;
}

- (BOOL)isOverlayTodayViewVisible
{
  return self->_overlayTodayViewVisible;
}

- (SBHIconRootViewProviding)rootViewController
{
  return self->_rootViewController;
}

- (id)_currentFolderController
{
  void *v3;
  void *v4;
  id v5;
  void *v6;

  -[SBHIconManager openedFolderController](self, "openedFolderController");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if (v3)
  {
    v5 = v3;
  }
  else
  {
    -[SBHIconManager rootFolderController](self, "rootFolderController");
    v5 = (id)objc_claimAutoreleasedReturnValue();
  }
  v6 = v5;

  return v6;
}

- (SBFolderController)openedFolderController
{
  void *v3;
  void *v4;
  void *v5;

  -[SBHIconManager floatingDockViewController](self, "floatingDockViewController");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "presentedFolderController");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v4)
  {
    -[SBHIconManager rootFolderController](self, "rootFolderController");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "deepestFolderController");
    v4 = (void *)objc_claimAutoreleasedReturnValue();

  }
  return (SBFolderController *)v4;
}

- (SBRootFolderController)rootFolderController
{
  return self->_rootFolderController;
}

- (SBFloatingDockViewController)floatingDockViewController
{
  return self->_floatingDockViewController;
}

- (BOOL)isMainDisplayLibraryViewVisible
{
  _BOOL4 v2;
  void *v4;
  int isKindOfClass;

  if (self->_mainDisplayLibraryViewVisible)
  {
    LOBYTE(v2) = 1;
  }
  else
  {
    -[SBHIconManager trailingCustomViewController](self, "trailingCustomViewController");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    if (v4)
    {
      objc_opt_class();
      isKindOfClass = objc_opt_isKindOfClass();
    }
    else
    {
      isKindOfClass = 0;
    }
    v2 = isKindOfClass & -[SBHIconManager isShowingOrTransitioningToTrailingCustomView](self, "isShowingOrTransitioningToTrailingCustomView");

  }
  return v2;
}

- (unint64_t)contentVisibility
{
  return self->_contentVisibility;
}

- (BOOL)isShowingModalInteraction
{
  void *v3;
  void *v4;

  -[SBHIconManager currentConfiguringIconView](self, "currentConfiguringIconView");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
    return 1;
  -[SBHIconManager currentPersonDetailInteraction](self, "currentPersonDetailInteraction");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4 || -[SBHIconManager isIconStylePickerVisible](self, "isIconStylePickerVisible");
}

- (SBHPeopleWidgetPersonDetailInteraction)currentPersonDetailInteraction
{
  return self->_currentPersonDetailInteraction;
}

- (SBIconView)currentConfiguringIconView
{
  return self->_currentConfiguringIconView;
}

- (SBHLibraryViewController)overlayLibraryViewController
{
  return self->_overlayLibraryViewController;
}

- (BOOL)isPerformingCancelledExpandTransition
{
  _BOOL4 v3;

  v3 = -[SBHIconManager isTransitioning](self, "isTransitioning");
  if (v3)
  {
    v3 = -[SBHomeScreenIconTransitionAnimator isCancelled](self->_currentTransitionAnimator, "isCancelled");
    if (v3)
      LOBYTE(v3) = -[SBHomeScreenIconTransitionAnimator currentOperation](self->_currentTransitionAnimator, "currentOperation") == 1;
  }
  return v3;
}

- (BOOL)isTransitioning
{
  void *v2;
  BOOL v3;

  -[SBHIconManager currentTransitionAnimator](self, "currentTransitionAnimator");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2 != 0;

  return v3;
}

- (SBHomeScreenIconTransitionAnimator)currentTransitionAnimator
{
  return self->_currentTransitionAnimator;
}

uint64_t __75__SBHIconManager_enumerateIconViewQueryableChildrenWithOptions_usingBlock___block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t result;
  char v7;

  v7 = 0;
  result = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  if (v7)
  {
    *a4 = 1;
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
  }
  return result;
}

void __51__SBHIconManager_iconViewForIcon_location_options___block_invoke(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;

  v10 = a2;
  if (objc_msgSend(v10, "isPresentingIconLocation:", *(_QWORD *)(a1 + 32)))
  {
    SBIconViewQueryingIconViewForIconInLocation(v10, *(void **)(a1 + 40), *(void **)(a1 + 32), a3);
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v9 = *(void **)(v8 + 40);
    *(_QWORD *)(v8 + 40) = v7;

  }
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40))
    *a4 = 1;

}

- (id)iconViewForIcon:(id)a3 location:(id)a4 options:(unint64_t)a5
{
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  _QWORD v14[4];
  id v15;
  id v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  void (*v22)(uint64_t);
  id v23;

  v8 = a3;
  v9 = a4;
  v18 = 0;
  v19 = &v18;
  v20 = 0x3032000000;
  v21 = __Block_byref_object_copy__19;
  v22 = __Block_byref_object_dispose__19;
  v23 = 0;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 3221225472;
  v14[2] = __51__SBHIconManager_iconViewForIcon_location_options___block_invoke;
  v14[3] = &unk_1E8D8CF48;
  v10 = v9;
  v15 = v10;
  v17 = &v18;
  v11 = v8;
  v16 = v11;
  -[SBHIconManager enumerateIconViewQueryableChildrenWithOptions:usingBlock:](self, "enumerateIconViewQueryableChildrenWithOptions:usingBlock:", a5, v14);
  v12 = (id)v19[5];

  _Block_object_dispose(&v18, 8);
  return v12;
}

- (SBHRootFolderCustomViewPresenting)trailingCustomViewController
{
  return self->_trailingCustomViewController;
}

- (BOOL)hasRootFolderController
{
  void *v2;
  BOOL v3;

  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2 != 0;

  return v3;
}

- (void)enumerateAppPredictionViewControllersInIconLocationGroup:(id)a3 withOptions:(unint64_t)a4 usingBlock:(id)a5
{
  id v8;
  id v9;
  _QWORD v10[4];
  id v11;

  v8 = a5;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = __98__SBHIconManager_enumerateAppPredictionViewControllersInIconLocationGroup_withOptions_usingBlock___block_invoke;
  v10[3] = &unk_1E8D8CE20;
  v11 = v8;
  v9 = v8;
  -[SBHIconManager enumerateAppPredictionViewControllersWithIconViewsInIconLocationGroup:withOptions:usingBlock:](self, "enumerateAppPredictionViewControllersWithIconViewsInIconLocationGroup:withOptions:usingBlock:", a3, a4, v10);

}

- (void)enumerateAppPredictionViewControllersWithIconViewsInIconLocationGroup:(id)a3 withOptions:(unint64_t)a4 usingBlock:(id)a5
{
  char v6;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void (**v20)(id, uint64_t, void *, char *);
  id v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  char v26;
  _BYTE v27[128];
  uint64_t v28;

  v6 = a4;
  v28 = *MEMORY[0x1E0C80C00];
  v21 = a3;
  v20 = (void (**)(id, uint64_t, void *, char *))a5;
  v26 = 0;
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  -[SBHIconManager _effectiveAppPredictionViewControllersForUniqueIdentifier](self, "_effectiveAppPredictionViewControllersForUniqueIdentifier");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "objectEnumerator");
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v22, v27, 16);
  if (v10)
  {
    v11 = v10;
    v12 = *(_QWORD *)v23;
    while (2)
    {
      for (i = 0; i != v11; ++i)
      {
        if (*(_QWORD *)v23 != v12)
          objc_enumerationMutation(v9);
        v14 = *(_QWORD *)(*((_QWORD *)&v22 + 1) + 8 * i);
        -[SBHIconManager _effectiveWidgetMultiplexingManager](self, "_effectiveWidgetMultiplexingManager");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "activeMultiplexingViewControllerForViewController:", v14);
        v16 = (void *)objc_claimAutoreleasedReturnValue();

        -[NSMapTable objectForKey:](self->_iconViewsForWidgetMultiplexingViewController, "objectForKey:", v16);
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        v18 = v17;
        if (v17)
        {
          if ((v6 & 1) == 0
            || (objc_msgSend(v17, "effectiveIconImageAlpha"), (BSFloatIsZero() & 1) == 0)
            && objc_msgSend(v18, "_isInAWindow"))
          {
            objc_msgSend(v18, "location");
            v19 = (void *)objc_claimAutoreleasedReturnValue();
            if (SBIconLocationGroupContainsLocation(v21, v19))
            {
              v26 = 0;
              v20[2](v20, v14, v18, &v26);
              if (v26)
              {

                goto LABEL_17;
              }
            }

          }
        }

      }
      v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v22, v27, 16);
      if (v11)
        continue;
      break;
    }
  }
LABEL_17:

}

- (id)_effectiveTodayViewController
{
  void *v3;

  if (-[SBHIconManager isTodayViewEffectivelyVisible](self, "isTodayViewEffectivelyVisible"))
  {
    if (-[SBHIconManager isCustomLeadingViewTodayView](self, "isCustomLeadingViewTodayView"))
      -[SBHIconManager leadingCustomViewController](self, "leadingCustomViewController");
    else
      -[SBHIconManager overlayTodayViewController](self, "overlayTodayViewController");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v3 = 0;
  }
  return v3;
}

- (BOOL)isFloatingDockVisible
{
  void *v3;
  void *v4;
  char v5;

  -[SBHIconManager floatingDockViewController](self, "floatingDockViewController");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v3)
    return 0;
  -[SBHIconManager delegate](self, "delegate");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v5 = objc_msgSend(v4, "isFloatingDockVisibleForIconManager:", self);
  else
    v5 = 1;

  return v5;
}

uint64_t __47__SBHIconManager_isDisplayingIconView_options___block_invoke_2(uint64_t a1, void *a2)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = objc_msgSend(a2, "isDisplayingIconView:", *(_QWORD *)(a1 + 32));
  return *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
}

- (BOOL)areAnyIconShareSheetsShowing
{
  void *v2;
  char v3;

  -[SBHIconManager iconShareSheetManager](self, "iconShareSheetManager");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "areAnyAppIconShareSheetsShowing");

  return v3;
}

- (SBHIconShareSheetManager)iconShareSheetManager
{
  return self->_iconShareSheetManager;
}

- (BOOL)allowsBadgingForIconLocation:(id)a3
{
  id v4;
  void *v5;
  char v6;

  v4 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v6 = objc_msgSend(v5, "iconManager:allowsBadgingForIconLocation:", self, v4);
  else
    v6 = 1;

  return v6;
}

- (id)iconView:(id)a3 labelImageWithParameters:(id)a4
{
  id v5;
  void *v6;
  void *v7;

  v5 = a4;
  -[SBHIconManager iconLabelImageCache](self, "iconLabelImageCache");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "labelImageForParameters:", v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

- (SBIconLabelImageCache)iconLabelImageCache
{
  SBIconLabelImageCache *labelImageCache;
  void *v4;
  void *v5;
  objc_class *v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  SBIconLabelImageCache *v12;
  void *v13;
  double v14;
  SBIconLabelImageCache *v15;
  SBIconLabelImageCache *v16;

  labelImageCache = self->_labelImageCache;
  if (!labelImageCache)
  {
    -[SBHIconManager listLayoutProvider](self, "listLayoutProvider");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "layoutForIconLocation:", CFSTR("SBIconLocationRoot"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    v6 = -[SBHIconManager iconViewClass](self, "iconViewClass");
    objc_msgSend((id)*MEMORY[0x1E0DC4730], "preferredContentSizeCategory");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[objc_class maxLabelSizeForListLayout:contentSizeCategory:options:](v6, "maxLabelSizeForListLayout:contentSizeCategory:options:", v5, v7, 0);
    v9 = v8;
    v11 = v10;

    v12 = [SBIconLabelImageCache alloc];
    objc_msgSend(MEMORY[0x1E0DC3BF8], "mainScreen");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "scale");
    v15 = -[SBIconLabelImageCache initWithMaxLabelSize:scale:](v12, "initWithMaxLabelSize:scale:", v9, v11, v14);
    v16 = self->_labelImageCache;
    self->_labelImageCache = v15;

    labelImageCache = self->_labelImageCache;
  }
  return labelImageCache;
}

void __56__SBHIconManager_revealIcon_animated_completionHandler___block_invoke_3(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[4];
  id v7;

  objc_msgSend(*(id *)(a1 + 32), "bestLocationForIcon:", *(_QWORD *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = *(void **)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(unsigned __int8 *)(a1 + 56);
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __56__SBHIconManager_revealIcon_animated_completionHandler___block_invoke_4;
  v6[3] = &unk_1E8D86600;
  v7 = *(id *)(a1 + 48);
  objc_msgSend(v3, "pushExpandedIcon:location:context:animated:completionHandler:", v4, v2, 0, v5, v6);

}

- (void)pushExpandedIcon:(id)a3 location:(id)a4 context:(id)a5 animated:(BOOL)a6 completionHandler:(id)a7
{
  id v11;
  id v12;
  id v13;
  NSObject *v14;
  void *v15;
  void *v16;
  NSObject *v17;
  SBHomeScreenIconTransitionAnimator *currentTransitionAnimator;
  NSObject *v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  NSObject *v25;
  void *v26;
  char v27;
  NSObject *v28;
  NSObject *v29;
  _BOOL4 v30;
  NSMutableArray *currentExpandCompletions;
  NSMutableArray *v32;
  NSMutableArray *v33;
  void *v34;
  void *v35;
  id *v36;
  _BOOL4 v37;
  id v38;
  _QWORD aBlock[4];
  id v40;
  id v41;
  id location;
  _QWORD v43[5];
  id v44;
  id v45;
  id v46;
  uint8_t buf[4];
  id v48;
  __int16 v49;
  id v50;
  __int16 v51;
  id v52;
  uint64_t v53;

  v37 = a6;
  v53 = *MEMORY[0x1E0C80C00];
  v11 = a3;
  v12 = a4;
  v13 = a5;
  v38 = a7;
  SBLogIcon();
  v14 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412802;
    v48 = v11;
    v49 = 2114;
    v50 = v12;
    v51 = 2112;
    v52 = v13;
    _os_log_impl(&dword_1CFEF3000, v14, OS_LOG_TYPE_DEFAULT, "push expanded icon %@ from location %{public}@ with context: %@", buf, 0x20u);
  }

  if (!v13
    || (objc_opt_respondsToSelector() & 1) == 0
    || (objc_msgSend(v13, "iconView"),
        v15 = (void *)objc_claimAutoreleasedReturnValue(),
        -[SBHIconManager floatingDockViewControllerForView:](self, "floatingDockViewControllerForView:", v15),
        v16 = (void *)objc_claimAutoreleasedReturnValue(),
        v15,
        !v16))
  {
    -[SBHIconManager floatingDockViewController](self, "floatingDockViewController");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
  }
  if (objc_msgSend(v16, "isPresentingIconLocation:", v12)
    && objc_msgSend(v11, "isFolderIcon"))
  {
    SBLogIcon();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1CFEF3000, v17, OS_LOG_TYPE_DEFAULT, "telling floating dock view controller to open folder", buf, 2u);
    }

    objc_msgSend(v16, "presentFolderForIcon:location:animated:completion:", v11, v12, v37, v38);
  }
  else
  {
    currentTransitionAnimator = self->_currentTransitionAnimator;
    if (currentTransitionAnimator)
    {
      if (-[SBHomeScreenIconTransitionAnimator currentOperation](currentTransitionAnimator, "currentOperation") == 1)
      {
        SBLogIcon();
        v19 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_1CFEF3000, v19, OS_LOG_TYPE_DEFAULT, "a folder is collapsing when trying to open folder", buf, 2u);
        }

        -[SBHomeScreenIconTransitionAnimator childViewController](self->_currentTransitionAnimator, "childViewController");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          objc_msgSend(v20, "folder");
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v21, "icon");
          v22 = (id)objc_claimAutoreleasedReturnValue();

        }
        else
        {
          v22 = 0;
        }
        SBLogIcon();
        v29 = objc_claimAutoreleasedReturnValue();
        v30 = os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT);
        if (v22 == v11)
        {
          if (v30)
          {
            *(_WORD *)buf = 0;
            _os_log_impl(&dword_1CFEF3000, v29, OS_LOG_TYPE_DEFAULT, "collapsing folder is the same as what we are trying to open; reversing",
              buf,
              2u);
          }

          if (v38)
          {
            currentExpandCompletions = self->_currentExpandCompletions;
            if (!currentExpandCompletions)
            {
              v32 = (NSMutableArray *)objc_alloc_init(MEMORY[0x1E0C99DE8]);
              v33 = self->_currentExpandCompletions;
              self->_currentExpandCompletions = v32;

              currentExpandCompletions = self->_currentExpandCompletions;
            }
            v34 = (void *)objc_msgSend(v38, "copy");
            v35 = _Block_copy(v34);
            -[NSMutableArray addObject:](currentExpandCompletions, "addObject:", v35);

          }
          -[SBHomeScreenIconTransitionAnimator reverse](self->_currentTransitionAnimator, "reverse");
        }
        else
        {
          if (v30)
          {
            *(_WORD *)buf = 0;
            _os_log_impl(&dword_1CFEF3000, v29, OS_LOG_TYPE_DEFAULT, "will wait to open folder until folder is finished closing", buf, 2u);
          }

          if (-[BSEventQueue isEmpty](self->_transitionEventQueue, "isEmpty"))
          {
            v43[0] = MEMORY[0x1E0C809B0];
            v43[1] = 3221225472;
            v43[2] = __79__SBHIconManager_pushExpandedIcon_location_context_animated_completionHandler___block_invoke;
            v43[3] = &unk_1E8D86330;
            v43[4] = self;
            v44 = v11;
            v45 = v12;
            v46 = v13;
            -[SBHIconManager _enqueueTransitionName:withHandler:](self, "_enqueueTransitionName:withHandler:", CFSTR("Request to open a folder while another folder is still closing"), v43);

          }
          if (v38)
            (*((void (**)(id, _QWORD))v38 + 2))(v38, 0);
        }

      }
      else if (v38)
      {
        SBLogIcon();
        v25 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_1CFEF3000, v25, OS_LOG_TYPE_DEFAULT, "a folder is transitioning (not collapsing) when trying to open folder; rejecting",
            buf,
            2u);
        }

        (*((void (**)(id, _QWORD))v38 + 2))(v38, 0);
      }
    }
    else
    {
      objc_initWeak(&location, self);
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 3221225472;
      aBlock[2] = __79__SBHIconManager_pushExpandedIcon_location_context_animated_completionHandler___block_invoke_417;
      aBlock[3] = &unk_1E8D8B090;
      objc_copyWeak(&v41, &location);
      v23 = v38;
      v40 = v23;
      v24 = _Block_copy(aBlock);
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        -[SBHIconManager openFolderIcon:location:animated:withCompletion:](self, "openFolderIcon:location:animated:withCompletion:", v11, v12, v37, v24, &v41);
      }
      else
      {
        -[SBHIconManager delegate](self, "delegate", &v41);
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        v27 = objc_opt_respondsToSelector();
        SBLogIcon();
        v28 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412546;
          v48 = v11;
          v49 = 1024;
          LODWORD(v50) = v27 & 1;
          _os_log_impl(&dword_1CFEF3000, v28, OS_LOG_TYPE_DEFAULT, "Unknown icon for pushing expanded icon: %@. Delegate can handle: %{BOOL}u", buf, 0x12u);
        }

        if ((v27 & 1) != 0)
        {
          objc_msgSend(v26, "iconManager:launchIcon:location:animated:completionHandler:", self, v11, v12, v37, v23);
        }
        else if (v23)
        {
          (*((void (**)(id, _QWORD))v23 + 2))(v23, 0);
        }

      }
      objc_destroyWeak(v36);
      objc_destroyWeak(&location);
    }
  }

}

- (id)bestLocationForIcon:(id)a3
{
  id v4;
  id v5;
  id v6;
  _QWORD v8[4];
  id v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  void (*v15)(uint64_t);
  id v16;

  v4 = a3;
  v11 = 0;
  v12 = &v11;
  v13 = 0x3032000000;
  v14 = __Block_byref_object_copy__19;
  v15 = __Block_byref_object_dispose__19;
  v16 = 0;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = __38__SBHIconManager_bestLocationForIcon___block_invoke;
  v8[3] = &unk_1E8D8AF78;
  v5 = v4;
  v9 = v5;
  v10 = &v11;
  -[SBHIconManager enumerateIconViewQueryableChildrenUsingBlock:](self, "enumerateIconViewQueryableChildrenUsingBlock:", v8);
  v6 = (id)v12[5];

  _Block_object_dispose(&v11, 8);
  return v6;
}

- (void)enumerateIconViewQueryableChildrenUsingBlock:(id)a3
{
  -[SBHIconManager enumerateIconViewQueryableChildrenWithOptions:usingBlock:](self, "enumerateIconViewQueryableChildrenWithOptions:usingBlock:", 0, a3);
}

- (void)_animateFolderIcon:(id)a3 open:(BOOL)a4 location:(id)a5 animated:(BOOL)a6 withCompletion:(id)a7
{
  _BOOL8 v8;
  _BOOL4 v10;
  id v12;
  id v13;
  void (**v14)(id, _QWORD);
  NSObject *v15;
  void *v16;
  void *v17;
  void *v18;
  _QWORD aBlock[5];
  void (**v20)(id, _QWORD);
  BOOL v21;
  BOOL v22;
  uint8_t buf[4];
  id v24;
  uint64_t v25;

  v8 = a6;
  v10 = a4;
  v25 = *MEMORY[0x1E0C80C00];
  v12 = a3;
  v13 = a5;
  v14 = (void (**)(id, _QWORD))a7;
  if (!v12 && v10)
    goto LABEL_5;
  if (v10)
  {
    if (!-[SBHIconManager canOpenFolderForIcon:](self, "canOpenFolderForIcon:", v12))
    {
LABEL_5:
      SBLogIcon();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v24 = v12;
        _os_log_impl(&dword_1CFEF3000, v15, OS_LOG_TYPE_INFO, "IGNORING. Icon = %@", buf, 0xCu);
      }

      if (v14)
        v14[2](v14, 0);
      goto LABEL_16;
    }
  }
  else if (!-[SBHIconManager canCloseFolders](self, "canCloseFolders"))
  {
    goto LABEL_5;
  }
  if (v8)
    -[SBHIconManager setAnimatingFolderOpeningOrClosing:](self, "setAnimatingFolderOpeningOrClosing:", 1);
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = __75__SBHIconManager__animateFolderIcon_open_location_animated_withCompletion___block_invoke;
  aBlock[3] = &unk_1E8D8CB30;
  aBlock[4] = self;
  v21 = v10;
  v22 = v8;
  v20 = v14;
  v16 = _Block_copy(aBlock);
  -[SBHIconManager _folderControllerForIcon:inLocation:](self, "_folderControllerForIcon:inLocation:", v12, v13);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = v17;
  if (v10)
    objc_msgSend(v17, "pushFolderIcon:location:animated:completion:", v12, v13, v8, v16);
  else
    objc_msgSend(v17, "popFolderAnimated:completion:", v8, v16);

LABEL_16:
}

- (void)openFolderIcon:(id)a3 location:(id)a4 animated:(BOOL)a5 withCompletion:(id)a6
{
  _BOOL8 v7;
  id v10;
  id v11;
  id v12;
  NSObject *v13;
  NSObject *v14;
  NSObject *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  _QWORD v21[4];
  id v22;
  SBHIconManager *v23;
  id v24;
  id v25;
  _QWORD v26[4];
  id v27;
  id v28;
  id v29;
  id v30;
  BOOL v31;
  uint8_t buf[4];
  id v33;
  __int16 v34;
  id v35;
  uint64_t v36;

  v7 = a5;
  v36 = *MEMORY[0x1E0C80C00];
  v10 = a3;
  v11 = a4;
  v12 = a6;
  SBLogIcon();
  v13 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412546;
    v33 = v10;
    v34 = 2114;
    v35 = v11;
    _os_log_impl(&dword_1CFEF3000, v13, OS_LOG_TYPE_DEFAULT, "open folder icon %@ location %{public}@", buf, 0x16u);
  }

  if (v10 && -[SBHIconManager canOpenFolderForIcon:](self, "canOpenFolderForIcon:", v10))
  {
    if (-[SBHIconManager isShowingIconContextMenu](self, "isShowingIconContextMenu"))
    {
      SBLogIcon();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1CFEF3000, v14, OS_LOG_TYPE_DEFAULT, "will wait until context menus are dismissed", buf, 2u);
      }

      objc_storeWeak((id *)&self->_pendingFolderIconToOpen, v10);
      objc_initWeak((id *)buf, self);
      v26[0] = MEMORY[0x1E0C809B0];
      v26[1] = 3221225472;
      v26[2] = __66__SBHIconManager_openFolderIcon_location_animated_withCompletion___block_invoke;
      v26[3] = &unk_1E8D8CB08;
      objc_copyWeak(&v30, (id *)buf);
      v29 = v12;
      v27 = v10;
      v28 = v11;
      v31 = v7;
      -[SBHIconManager performAfterIconContextMenuDismissesUsingBlock:](self, "performAfterIconContextMenuDismissesUsingBlock:", v26);

      objc_destroyWeak(&v30);
      objc_destroyWeak((id *)buf);
    }
    else
    {
      objc_storeWeak((id *)&self->_pendingFolderIconToOpen, 0);
      objc_msgSend(v10, "folder");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      -[SBHIconManager delegate](self, "delegate");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      if ((objc_opt_respondsToSelector() & 1) != 0)
        objc_msgSend(v17, "iconManager:willOpenFolder:", self, v16);
      -[SBHIconManager iconDragManager](self, "iconDragManager");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "noteFolderControllerWillOpen");
      v21[0] = MEMORY[0x1E0C809B0];
      v21[1] = 3221225472;
      v21[2] = __66__SBHIconManager_openFolderIcon_location_animated_withCompletion___block_invoke_2;
      v21[3] = &unk_1E8D876B0;
      v22 = v17;
      v23 = self;
      v24 = v16;
      v25 = v12;
      v19 = v16;
      v20 = v17;
      -[SBHIconManager _animateFolderIcon:open:location:animated:withCompletion:](self, "_animateFolderIcon:open:location:animated:withCompletion:", v10, 1, v11, v7, v21);
      if (!v7)
        -[SBHIconManager setAnimatingFolderOpeningOrClosing:](self, "setAnimatingFolderOpeningOrClosing:", 0);

    }
  }
  else
  {
    SBLogIcon();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v33 = v10;
      _os_log_impl(&dword_1CFEF3000, v15, OS_LOG_TYPE_INFO, "IGNORING. Icon = %@", buf, 0xCu);
    }

    if (v12)
      (*((void (**)(id, _QWORD))v12 + 2))(v12, 0);
  }

}

- (BOOL)isShowingIconContextMenu
{
  void *v2;
  NSObject *v3;
  void *v4;
  void *v5;
  objc_class *v6;
  void *v7;
  int v9;
  void *v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  -[SBHIconManager iconViewShowingContextMenu](self, "iconViewShowingContextMenu");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (v2)
  {
    SBLogIcon();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v2, "location");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v2, "icon");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v6 = (objc_class *)objc_opt_class();
      NSStringFromClass(v6);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = 138543618;
      v10 = v4;
      v11 = 2114;
      v12 = v7;
      _os_log_impl(&dword_1CFEF3000, v3, OS_LOG_TYPE_DEFAULT, "isShowingIconContextMenu at location '%{public}@' for icon type '%{public}@'", (uint8_t *)&v9, 0x16u);

    }
  }

  return v2 != 0;
}

- (id)iconViewShowingContextMenu
{
  id v2;
  _QWORD v4[5];
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  void (*v9)(uint64_t);
  id v10;

  v5 = 0;
  v6 = &v5;
  v7 = 0x3032000000;
  v8 = __Block_byref_object_copy__19;
  v9 = __Block_byref_object_dispose__19;
  v10 = 0;
  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __44__SBHIconManager_iconViewShowingContextMenu__block_invoke;
  v4[3] = &unk_1E8D8CB58;
  v4[4] = &v5;
  -[SBHIconManager enumerateDisplayedIconViewsUsingBlock:](self, "enumerateDisplayedIconViewsUsingBlock:", v4);
  v2 = (id)v6[5];
  _Block_object_dispose(&v5, 8);

  return v2;
}

- (BOOL)canOpenFolderForIcon:(id)a3
{
  id v4;
  void *v5;
  char v6;
  BOOL v7;
  void *v8;
  void *v9;
  char v10;
  void *v11;
  _BOOL4 v12;

  v4 = a3;
  if (objc_msgSend(v4, "isFolderIcon"))
  {
    -[SBHIconManager iconDragManager](self, "iconDragManager");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v5, "isTrackingDroppingIconDrags");

    if ((v6 & 1) == 0)
    {
      -[SBHIconManager floatingDockViewController](self, "floatingDockViewController");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = v8;
      if (v8)
      {
        v10 = objc_msgSend(v8, "isPresentingLibrary");
        objc_msgSend(v4, "folder");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        if ((v10 & 1) == 0)
          goto LABEL_9;
      }
      else
      {
        v12 = -[SBHIconManager isMainDisplayLibraryViewVisible](self, "isMainDisplayLibraryViewVisible");
        objc_msgSend(v4, "folder");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        if (!v12)
          goto LABEL_9;
      }
      if (!objc_msgSend(v11, "isLibraryCategoryFolder"))
      {
        v7 = 0;
        goto LABEL_11;
      }
LABEL_9:
      v7 = 1;
LABEL_11:

      goto LABEL_12;
    }
  }
  v7 = 0;
LABEL_12:

  return v7;
}

uint64_t __75__SBHIconManager__animateFolderIcon_open_location_animated_withCompletion___block_invoke(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  objc_msgSend(*(id *)(a1 + 32), "_folderDidFinishOpenClose:animated:success:", *(unsigned __int8 *)(a1 + 48), *(unsigned __int8 *)(a1 + 49), a2);
  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a2);
  return result;
}

- (void)setAnimatingFolderOpeningOrClosing:(BOOL)a3
{
  _BOOL4 v5;

  if (self->_animatingFolderOpeningOrClosing != a3)
  {
    v5 = -[SBHIconManager hasAnimatingFolder](self, "hasAnimatingFolder");
    self->_animatingFolderOpeningOrClosing = a3;
    if (v5 != -[SBHIconManager hasAnimatingFolder](self, "hasAnimatingFolder"))
      -[SBHIconManager hasAnimatingFolderChanged](self, "hasAnimatingFolderChanged");
  }
}

- (BOOL)isFolderOpenForIconDragManager:(id)a3
{
  void *v3;
  BOOL v4;

  -[SBHIconManager openedFolderController](self, "openedFolderController", a3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3 != 0;

  return v4;
}

- (BOOL)isAnimatingFolderIconTransitionForIconDragManager:(id)a3
{
  void *v3;
  void *v4;
  void *v5;
  char v6;

  -[SBHIconManager currentTransitionAnimator](self, "currentTransitionAnimator", a3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if (v3)
  {
    objc_msgSend(v3, "iconAnimator");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v5, "isAnimating");

  }
  else
  {
    v6 = 0;
  }

  return v6;
}

- (void)_folderDidFinishOpenClose:(BOOL)a3 animated:(BOOL)a4 success:(BOOL)a5
{
  SBFolder *closingFolder;

  if (!a3)
  {
    if (a5)
    {
      -[SBHIconManager _cleanupForClosingFolderAnimated:](self, "_cleanupForClosingFolderAnimated:", a4);
    }
    else
    {
      closingFolder = self->_closingFolder;
      self->_closingFolder = 0;

    }
  }
  if (-[SBHIconManager hasAnimatingFolder](self, "hasAnimatingFolder") && self->_iconToReveal)
    -[SBHIconManager finishInstallingIconAnimated:](self, "finishInstallingIconAnimated:", 1);
  -[SBHIconManager setAnimatingFolderOpeningOrClosing:](self, "setAnimatingFolderOpeningOrClosing:", 0);
}

- (BOOL)isAnimatingFolderCreation
{
  return self->_animatingFolderCreation;
}

- (BOOL)hasAnimatingFolder
{
  return -[SBHIconManager isAnimatingFolderOpeningOrClosing](self, "isAnimatingFolderOpeningOrClosing")
      || -[SBHIconManager isAnimatingFolderCreation](self, "isAnimatingFolderCreation");
}

- (BOOL)isAnimatingFolderOpeningOrClosing
{
  return self->_animatingFolderOpeningOrClosing;
}

- (id)_folderControllerForIcon:(id)a3 inLocation:(id)a4
{
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *i;
  void *v13;
  void *v14;
  char isKindOfClass;
  void *v16;
  void *v17;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[128];
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  if (!v7
    || !objc_msgSend(v6, "isFolderIcon")
    || !SBIconLocationGroupContainsLocation(CFSTR("SBIconLocationGroupAppLibrary"), v7))
  {
    goto LABEL_21;
  }
  -[SBHIconManager trailingCustomViewController](self, "trailingCustomViewController");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = 0u;
  v20 = 0u;
  v21 = 0u;
  v22 = 0u;
  -[SBHIconManager _libraryViewControllers](self, "_libraryViewControllers", 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = (id)objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
  if (v10)
  {
    v11 = *(_QWORD *)v20;
    while (2)
    {
      for (i = 0; i != v10; i = (char *)i + 1)
      {
        if (*(_QWORD *)v20 != v11)
          objc_enumerationMutation(v9);
        v13 = *(void **)(*((_QWORD *)&v19 + 1) + 8 * (_QWORD)i);
        if (objc_msgSend(v13, "isDisplayingIcon:", v6))
        {
          v10 = v13;
          goto LABEL_14;
        }
      }
      v10 = (id)objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
      if (v10)
        continue;
      break;
    }
  }
LABEL_14:

  objc_opt_self();
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  isKindOfClass = objc_opt_isKindOfClass();

  if ((isKindOfClass & 1) != 0)
  {
    v16 = v8;
  }
  else
  {
    if (!v10)
    {

LABEL_21:
      -[SBHIconManager rootFolderController](self, "rootFolderController");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      goto LABEL_22;
    }
    v16 = v10;
  }
  objc_msgSend(v16, "folderController");
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v17)
    goto LABEL_21;
LABEL_22:

  return v17;
}

- (Class)controllerClassForFolderClass:(Class)a3
{
  id v5;
  void *v6;
  void *v7;

  if (a3)
  {
    if (-[objc_class isRootFolderClass](a3, "isRootFolderClass"))
      v5 = (id)objc_opt_class();
    else
      v5 = (id)objc_opt_self();
    v6 = v5;
    -[SBHIconManager delegate](self, "delegate");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v6 = (void *)objc_msgSend(v7, "iconManager:folderControllerClassForFolderClass:proposedClass:", self, a3, v6);

  }
  else
  {
    v6 = 0;
  }
  return (Class)v6;
}

- (Class)controllerClassForFolder:(id)a3
{
  return -[SBHIconManager controllerClassForFolderClass:](self, "controllerClassForFolderClass:", objc_opt_class());
}

- (id)fakeStatusBarForFolderController:(id)a3
{
  id v4;
  void *v5;
  void *v6;

  v4 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v5, "iconManager:fakeStatusBarForFolderController:", self, v4);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v6 = 0;
  }

  return v6;
}

- (id)statusBarStyleRequestForFolderController:(id)a3
{
  id v4;
  void *v5;
  void *v6;

  v4 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v5, "iconManager:statusBarStyleRequestForFolderController:", self, v4);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v6 = 0;
  }

  return v6;
}

- (UIEdgeInsets)statusBarEdgeInsetsForFolderController:(id)a3
{
  id v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  UIEdgeInsets result;

  v4 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v5, "iconManager:statusBarEdgeInsetsForFolderController:", self, v4);
    v7 = v6;
    v9 = v8;
    v11 = v10;
    v13 = v12;
  }
  else
  {
    v7 = *MEMORY[0x1E0DC49E8];
    v9 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
    v11 = *(double *)(MEMORY[0x1E0DC49E8] + 16);
    v13 = *(double *)(MEMORY[0x1E0DC49E8] + 24);
  }

  v14 = v7;
  v15 = v9;
  v16 = v11;
  v17 = v13;
  result.right = v17;
  result.bottom = v16;
  result.left = v15;
  result.top = v14;
  return result;
}

- (id)folderControllerWantsToHideStatusBar:(id)a3 animated:(BOOL)a4
{
  _BOOL8 v4;
  id v6;
  void *v7;
  void *v8;

  v4 = a4;
  v6 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v7, "iconManager:wantsToHideStatusBarForFolderController:animated:", self, v6, v4);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v8 = 0;
  }

  return v8;
}

- (BOOL)isIconDragging
{
  void *v2;
  char v3;

  -[SBHIconManager iconDragManager](self, "iconDragManager");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isIconDragging");

  return v3;
}

- (BOOL)viewMap:(id)a3 shouldRecycleView:(id)a4
{
  id v6;
  id v7;
  id v8;

  v6 = a3;
  v7 = a4;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    LOBYTE(self) = -[SBHIconManager shouldRecycleIconView:](self, "shouldRecycleIconView:", v7);
  }
  else
  {
    -[SBHIconManager widgetBackgroundViewMap](self, "widgetBackgroundViewMap");
    v8 = (id)objc_claimAutoreleasedReturnValue();

    if (v8 == v6)
      LODWORD(self) = objc_msgSend(v7, "_wantsAutolayout") ^ 1;
    else
      LOBYTE(self) = 1;
  }

  return (char)self;
}

- (id)reasonToDisallowTapOnIconView:(id)a3
{
  id v4;
  void *v5;
  int v6;
  __CFString *v7;
  void *v8;
  char v9;
  void *v10;
  char v11;
  void *v12;

  v4 = a3;
  objc_msgSend(v4, "icon");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "isWidgetIcon");
  if (-[SBHIconManager isEditing](self, "isEditing") && (objc_msgSend(v5, "isLeafIcon") ^ 1 | v6) != 1)
  {
    v7 = CFSTR("editing");
  }
  else if ((objc_msgSend(v4, "isGrabbed") & 1) != 0)
  {
    v7 = CFSTR("icon is grabbed");
  }
  else
  {
    if (objc_msgSend(v5, "isFolderIcon")
      && !-[SBHIconManager canOpenFolderForIcon:](self, "canOpenFolderForIcon:", v5))
    {
      v7 = CFSTR("can't open folder icon");
      goto LABEL_27;
    }
    -[SBHIconManager iconDragManager](self, "iconDragManager");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "isTrackingDroppingIconDrags");

    if ((v9 & 1) != 0)
    {
      v7 = CFSTR("tracking dropping icon drags");
    }
    else
    {
      -[SBHIconManager iconDragManager](self, "iconDragManager");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v10, "isTrackingUserActiveIconDrags"))
      {
        v11 = objc_msgSend(v5, "isWidgetIcon");

        if ((v11 & 1) != 0)
        {
          v7 = CFSTR("can't open widget while dragging");
          goto LABEL_27;
        }
      }
      else
      {

      }
      if ((objc_msgSend(v5, "isLaunchEnabled") & 1) != 0
        || -[SBHIconManager isEditing](self, "isEditing") && objc_msgSend(v5, "isWidgetStackIcon"))
      {
        if ((objc_msgSend(v5, "isPlaceholder") & 1) != 0)
        {
          v7 = CFSTR("placeholder");
        }
        else if (-[SBHIconManager isDismissingMenuForFolderPresentation](self, "isDismissingMenuForFolderPresentation"))
        {
          v7 = CFSTR("dismissing menu for folder");
        }
        else
        {
          -[SBHIconManager delegate](self, "delegate");
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          if ((objc_opt_respondsToSelector() & 1) == 0
            || (objc_msgSend(v12, "iconManager:reasonToDisallowTapOnIconView:", self, v4),
                (v7 = (__CFString *)objc_claimAutoreleasedReturnValue()) == 0))
          {
            -[SBHIconManager reasonToDisallowInteractionOnIconView:](self, "reasonToDisallowInteractionOnIconView:", v4);
            v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
          }

        }
      }
      else
      {
        v7 = CFSTR("icon launch not enabled");
      }
    }
  }
LABEL_27:

  return v7;
}

- (BOOL)shouldRecycleIconView:(id)a3
{
  id v4;
  void *v5;
  char v6;
  void *v7;
  char v8;
  int v9;

  v4 = a3;
  if (!-[SBHIconManager recyclesIconViews](self, "recyclesIconViews"))
    goto LABEL_7;
  if ((objc_msgSend(v4, "_wantsAutolayout") & 1) != 0)
    goto LABEL_7;
  -[SBHIconManager iconDragManager](self, "iconDragManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "isTrackingDragOriginatingFromIconView:", v4);

  if ((v6 & 1) != 0
    || (-[SBHIconManager iconDragManager](self, "iconDragManager"),
        v7 = (void *)objc_claimAutoreleasedReturnValue(),
        v8 = objc_msgSend(v7, "isTrackingDropIntoDestinationIconView:", v4),
        v7,
        (v8 & 1) != 0)
    || (objc_msgSend(v4, "isShowingContextMenu") & 1) != 0
    || (objc_msgSend(v4, "isShowingConfigurationCard") & 1) != 0)
  {
LABEL_7:
    LOBYTE(v9) = 0;
  }
  else
  {
    v9 = objc_msgSend(v4, "isCursorActive") ^ 1;
  }

  return v9;
}

- (SBIconDragManager)iconDragManager
{
  return self->_iconDragManager;
}

- (BOOL)recyclesIconViews
{
  return self->_recyclesIconViews;
}

- (id)reasonToDisallowInteractionOnIconView:(id)a3
{
  id v4;
  void *v5;
  __CFString *v6;

  v4 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v5, "iconManager:reasonToDisallowInteractionOnIconView:", self, v4);
    v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else if (-[SBHIconManager shouldDisableUserInteractionForWidgetDiscoverability](self, "shouldDisableUserInteractionForWidgetDiscoverability"))
  {
    v6 = CFSTR("widget discoverability");
  }
  else
  {
    v6 = 0;
  }

  return v6;
}

- (BOOL)shouldDisableUserInteractionForWidgetDiscoverability
{
  return self->_shouldDisableUserInteractionForWidgetDiscoverability;
}

- (BOOL)isDismissingMenuForFolderPresentation
{
  return self->_dismissingMenuForFolderPresentation;
}

- (id)viewMap:(id)a3 makeNewViewOfClass:(Class)a4
{
  id v6;
  id v7;
  Class v8;
  void *v9;
  void *v10;
  uint64_t v11;
  SBIconView *v12;

  v6 = a3;
  -[SBHIconManager widgetBackgroundViewMap](self, "widgetBackgroundViewMap");
  v7 = (id)objc_claimAutoreleasedReturnValue();

  if (v7 == v6)
  {
    objc_msgSend(MEMORY[0x1E0DC3E88], "traitCollectionWithUserInterfaceStyle:", 0);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    +[SBIconView componentBackgroundViewOfType:compatibleWithTraitCollection:initialWeighting:](SBIconView, "componentBackgroundViewOfType:compatibleWithTraitCollection:initialWeighting:", 4, v10, 1.0);
    v11 = objc_claimAutoreleasedReturnValue();
LABEL_6:
    v9 = (void *)v11;

    return v9;
  }
  objc_opt_self();
  v8 = (Class)objc_claimAutoreleasedReturnValue();

  if (v8 == a4)
  {
    v12 = [SBIconView alloc];
    -[SBHIconManager listLayoutProvider](self, "listLayoutProvider");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = -[SBIconView initWithConfigurationOptions:listLayoutProvider:](v12, "initWithConfigurationOptions:listLayoutProvider:", 0, v10);
    goto LABEL_6;
  }
  v9 = 0;
  return v9;
}

- (id)widgetBackgroundViewMap
{
  SBHReusableViewMap *widgetBackgroundViewMap;
  SBHReusableViewMap *v4;
  SBHReusableViewMap *v5;

  widgetBackgroundViewMap = self->_widgetBackgroundViewMap;
  if (!widgetBackgroundViewMap)
  {
    v4 = -[SBHReusableViewMap initWithDelegate:]([SBHReusableViewMap alloc], "initWithDelegate:", self);
    v5 = self->_widgetBackgroundViewMap;
    self->_widgetBackgroundViewMap = v4;

    -[SBHReusableViewMap addRecycledViewsOfClass:upToCount:](self->_widgetBackgroundViewMap, "addRecycledViewsOfClass:upToCount:", objc_opt_class(), 2);
    widgetBackgroundViewMap = self->_widgetBackgroundViewMap;
  }
  return widgetBackgroundViewMap;
}

- (id)imageViewForIconView:(id)a3
{
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;

  v4 = a3;
  -[SBHIconManager homescreenIconImageViewMap](self, "homescreenIconImageViewMap");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v4, "expectedIconImageViewClass");

  objc_msgSend(v5, "viewOfClass:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

- (id)homescreenIconImageViewMap
{
  SBHReusableViewMap *homescreenIconImageViewMap;
  SBHReusableViewMap *v4;
  SBHReusableViewMap *v5;

  homescreenIconImageViewMap = self->_homescreenIconImageViewMap;
  if (!homescreenIconImageViewMap)
  {
    v4 = -[SBHReusableViewMap initWithDelegate:]([SBHReusableViewMap alloc], "initWithDelegate:", self);
    v5 = self->_homescreenIconImageViewMap;
    self->_homescreenIconImageViewMap = v4;

    -[SBHReusableViewMap addRecycledViewsOfClass:upToCount:](self->_homescreenIconImageViewMap, "addRecycledViewsOfClass:upToCount:", objc_opt_class(), 24);
    homescreenIconImageViewMap = self->_homescreenIconImageViewMap;
  }
  return homescreenIconImageViewMap;
}

- (void)iconTapped:(id)a3 modifierFlags:(int64_t)a4
{
  id v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  NSObject *v20;
  NSObject *v21;
  NSObject *v22;
  int v23;
  void *v24;
  uint8_t buf[4];
  id v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  -[SBHIconManager highlightIconView:](self, "highlightIconView:", v6);
  objc_msgSend(v6, "icon");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager delegate](self, "delegate");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager iconDragManager](self, "iconDragManager");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "noteIconTapped");
  if (objc_msgSend(v7, "isLeafIcon") && -[SBHIconManager isEditing](self, "isEditing"))
  {
    if (objc_msgSend(v6, "supportsStackConfigurationCard"))
    {
      SBLogIcon();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v26 = v6;
        _os_log_impl(&dword_1CFEF3000, v10, OS_LOG_TYPE_DEFAULT, "Starting stack configuration of icon due to tap: %@", buf, 0xCu);
      }

      objc_msgSend(v6, "presentStackConfigurationCard");
    }
    else if (objc_msgSend(v6, "supportsConfigurationCard"))
    {
      SBLogIcon();
      v21 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v26 = v6;
        _os_log_impl(&dword_1CFEF3000, v21, OS_LOG_TYPE_DEFAULT, "Starting configuration of icon due to tap: %@", buf, 0xCu);
      }

      objc_msgSend(v6, "presentConfigurationCard");
    }
    else
    {
      -[SBHIconManager clearHighlightedIcon](self, "clearHighlightedIcon");
      SBLogIcon();
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v26 = v6;
        _os_log_impl(&dword_1CFEF3000, v22, OS_LOG_TYPE_DEFAULT, "Ignoring tap to icon because of editing: %@", buf, 0xCu);
      }

    }
  }
  else if (objc_msgSend(v7, "isLaunchEnabled"))
  {
    if (objc_msgSend(v7, "isWidgetIcon")
      && (objc_msgSend(v7, "activeWidget"), (v11 = (void *)objc_claimAutoreleasedReturnValue()) != 0))
    {
      v12 = v11;
      objc_msgSend(v11, "uniqueIdentifier");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      -[SBHIconManager _effectiveWidgetMultiplexingManager](self, "_effectiveWidgetMultiplexingManager");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "viewControllerForIdentifier:", v13);
      v15 = (void *)objc_claimAutoreleasedReturnValue();

      if (objc_msgSend(v15, "sbh_isWidgetHostViewController"))
      {
        v16 = v15;
        objc_msgSend(v6, "customIconImageViewController");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v17, "sbh_isWidgetStackViewController"))
          v18 = v17;
        else
          v18 = 0;
        v19 = v18;
        if ((objc_msgSend(v19, "isWidgetHitTestingDisabled") & 1) == 0)
        {
          objc_msgSend(v19, "sbh_underlyingAvocadoHostViewControllers");
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          if ((objc_msgSend(v24, "containsObject:", v16) & 1) != 0)
          {
            v23 = objc_msgSend(v16, "shouldShareTouchesWithHost");

            if (v23)
              objc_msgSend(v16, "requestLaunch");
          }
          else
          {

          }
        }

      }
    }
    else
    {
      -[SBHIconManager launchActionsForIconView:](self, "launchActionsForIconView:", v6);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      -[SBHIconManager launchFromIconView:withActions:modifierFlags:](self, "launchFromIconView:withActions:modifierFlags:", v6, v12, a4);
    }

  }
  else
  {
    SBLogIcon();
    v20 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v26 = v6;
      _os_log_impl(&dword_1CFEF3000, v20, OS_LOG_TYPE_DEFAULT, "Ignoring tap to icon because launching is not allowed: %@", buf, 0xCu);
    }

    -[SBHIconManager clearHighlightedIcon](self, "clearHighlightedIcon");
    if ((objc_opt_respondsToSelector() & 1) != 0)
      objc_msgSend(v8, "iconManager:didReceiveTapOnLaunchDisabledIconView:", self, v6);
  }

}

- (id)launchActionsForIconView:(id)a3
{
  id v4;
  void *v5;
  void *v6;

  v4 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v5, "iconManager:launchActionsForIconView:", self, v4);
  else
    objc_msgSend(MEMORY[0x1E0C99E60], "set");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

- (void)iconTouchBegan:(id)a3
{
  id v4;
  NSObject *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  int v11;
  id v12;
  __int16 v13;
  id v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[SBHIconManager _addTouchedIconView:](self, "_addTouchedIconView:", v4);
  SBLogIcon();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v11 = 138412290;
    v12 = v4;
    _os_log_impl(&dword_1CFEF3000, v5, OS_LOG_TYPE_DEFAULT, "Icon touch began: %@", (uint8_t *)&v11, 0xCu);
  }

  objc_msgSend(v4, "icon");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager delegate](self, "delegate");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (-[SBHIconManager shouldHighlightTouchedIconView:](self, "shouldHighlightTouchedIconView:", v4))
    -[SBHIconManager highlightIconView:](self, "highlightIconView:", v4);
  -[SBHIconManager reasonToDisallowTapOnIconView:](self, "reasonToDisallowTapOnIconView:", v4);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (v8)
  {
    SBLogIcon();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      v11 = 138412546;
      v12 = v8;
      v13 = 2112;
      v14 = v4;
      _os_log_impl(&dword_1CFEF3000, v9, OS_LOG_TYPE_DEFAULT, "Icon tap not allowed because \"%@\": %@", (uint8_t *)&v11, 0x16u);
    }

  }
  else
  {
    if ((objc_opt_respondsToSelector() & 1) != 0)
      objc_msgSend(v7, "iconManager:possibleUserIconTapBegan:", self, v4);
    v10 = mach_absolute_time();
    objc_msgSend(v6, "possibleUserTapBeganWithAbsoluteTime:andContinuousTime:", v10, mach_continuous_time());
    if ((objc_opt_respondsToSelector() & 1) != 0)
      objc_msgSend(v7, "iconManager:possibleUserIconTapBeganAfterInformingIcon:", self, v4);
  }

}

- (void)highlightIconView:(id)a3
{
  id v4;
  id v5;
  NSObject *v6;
  _BOOL4 v7;
  const char *v8;
  _BYTE v9[22];
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[SBHIconManager highlightedIconView](self, "highlightedIconView");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  if (v5 == v4)
  {
    SBLogIcon();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)v9 = 138412290;
      *(_QWORD *)&v9[4] = v4;
      v8 = "Icon view is already highlighted: %@";
LABEL_10:
      _os_log_impl(&dword_1CFEF3000, v6, OS_LOG_TYPE_INFO, v8, v9, 0xCu);
    }
LABEL_11:

    goto LABEL_12;
  }
  SBLogIcon();
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = os_log_type_enabled(v6, OS_LOG_TYPE_INFO);
  if (!v5)
  {
    if (v7)
    {
      *(_DWORD *)v9 = 138412290;
      *(_QWORD *)&v9[4] = v4;
      v8 = "Highlighting icon view: %@";
      goto LABEL_10;
    }
    goto LABEL_11;
  }
  if (v7)
  {
    *(_DWORD *)v9 = 138412546;
    *(_QWORD *)&v9[4] = v5;
    *(_WORD *)&v9[12] = 2112;
    *(_QWORD *)&v9[14] = v4;
    _os_log_impl(&dword_1CFEF3000, v6, OS_LOG_TYPE_INFO, "Unhighlighting icon view '%@' to highlight '%@'", v9, 0x16u);
  }

  objc_msgSend(v5, "setHighlighted:", 0);
LABEL_12:
  objc_msgSend(v4, "setHighlighted:", 1, *(_OWORD *)v9);
  -[SBHIconManager setHighlightedIconView:](self, "setHighlightedIconView:", v4);

}

- (void)setHighlightedIconView:(id)a3
{
  objc_storeStrong((id *)&self->_highlightedIconView, a3);
}

- (void)clearHighlightedIcon
{
  void *v3;
  NSObject *v4;
  int v5;
  void *v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  -[SBHIconManager highlightedIconView](self, "highlightedIconView");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    SBLogIcon();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      v5 = 138412290;
      v6 = v3;
      _os_log_impl(&dword_1CFEF3000, v4, OS_LOG_TYPE_INFO, "Clearing highlight from icon view: %@", (uint8_t *)&v5, 0xCu);
    }

    objc_msgSend(v3, "setHighlighted:", 0);
    -[SBHIconManager setHighlightedIconView:](self, "setHighlightedIconView:", 0);
  }

}

- (SBIconView)highlightedIconView
{
  return self->_highlightedIconView;
}

- (BOOL)iconShouldAllowTap:(id)a3
{
  id v4;
  void *v5;
  NSObject *v6;
  _BOOL4 v7;
  void *v8;
  void *v9;
  const char *v10;
  NSObject *v11;
  uint32_t v12;
  int v14;
  void *v15;
  __int16 v16;
  void *v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[SBHIconManager reasonToDisallowTapOnIconView:](self, "reasonToDisallowTapOnIconView:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  SBLogIcon();
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
  if (v5)
  {
    if (v7)
    {
      objc_msgSend(v4, "icon");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "uniqueIdentifier");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = 138412546;
      v15 = v9;
      v16 = 2114;
      v17 = v5;
      v10 = "Disallowing tap for icon view '%@' for reason '%{public}@'";
      v11 = v6;
      v12 = 22;
LABEL_6:
      _os_log_impl(&dword_1CFEF3000, v11, OS_LOG_TYPE_DEFAULT, v10, (uint8_t *)&v14, v12);

    }
  }
  else if (v7)
  {
    objc_msgSend(v4, "icon");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "uniqueIdentifier");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = 138412290;
    v15 = v9;
    v10 = "Allowing tap for icon view '%@'";
    v11 = v6;
    v12 = 12;
    goto LABEL_6;
  }

  return v5 == 0;
}

- (BOOL)shouldHighlightTouchedIconView:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  char v8;
  int v9;

  v4 = a3;
  objc_msgSend(v4, "icon");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager reasonToDisallowTapOnIconView:](self, "reasonToDisallowTapOnIconView:", v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (v6
    || (objc_msgSend(v4, "isGrabbed") & 1) != 0
    || objc_msgSend(v5, "isFolderIcon")
    && !-[SBHIconManager canOpenFolderForIcon:](self, "canOpenFolderForIcon:", v5)
    || (-[SBHIconManager iconDragManager](self, "iconDragManager"),
        v7 = (void *)objc_claimAutoreleasedReturnValue(),
        v8 = objc_msgSend(v7, "isTrackingDroppingIconDrags"),
        v7,
        (v8 & 1) != 0))
  {
    LOBYTE(v9) = 0;
  }
  else
  {
    v9 = objc_msgSend(v4, "isPaused") ^ 1;
  }

  return v9;
}

- (void)icon:(id)a3 touchEnded:(BOOL)a4
{
  _BOOL4 v4;
  id v6;
  NSObject *v7;
  _BOOL4 v8;
  void *v9;
  void *v10;
  int v11;
  id v12;
  uint64_t v13;

  v4 = a4;
  v13 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  -[SBHIconManager _removeTouchedIconView:](self, "_removeTouchedIconView:", v6);
  SBLogIcon();
  v7 = objc_claimAutoreleasedReturnValue();
  v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
  if (v4)
  {
    if (v8)
    {
      v11 = 138412290;
      v12 = v6;
      _os_log_impl(&dword_1CFEF3000, v7, OS_LOG_TYPE_DEFAULT, "Icon touch canceled (tap gesture may still succeed): %@", (uint8_t *)&v11, 0xCu);
    }

    objc_msgSend(v6, "icon");
    v7 = objc_claimAutoreleasedReturnValue();
    -[NSObject possibleUserTapDidCancel](v7, "possibleUserTapDidCancel");
  }
  else if (v8)
  {
    v11 = 138412290;
    v12 = v6;
    _os_log_impl(&dword_1CFEF3000, v7, OS_LOG_TYPE_DEFAULT, "Icon touch ended: %@", (uint8_t *)&v11, 0xCu);
  }

  -[SBHIconManager iconEditingFeedbackBehavior](self, "iconEditingFeedbackBehavior");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v9, "isActive"))
    objc_msgSend(v9, "deactivate");
  -[SBHIconManager delegate](self, "delegate");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v10, "iconManager:touchesEndedForIconView:", self, v6);

}

- (void)_removeTouchedIconView:(id)a3
{
  NSMutableArray *iconTouchesFinishedBlocks;
  NSMutableArray *v5;
  NSMutableArray *v6;
  NSMutableArray *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  -[NSMutableSet removeObject:](self->_touchedIconViews, "removeObject:", a3);
  if (!-[NSMutableSet count](self->_touchedIconViews, "count"))
  {
    iconTouchesFinishedBlocks = self->_iconTouchesFinishedBlocks;
    if (iconTouchesFinishedBlocks)
    {
      v5 = iconTouchesFinishedBlocks;
      v6 = self->_iconTouchesFinishedBlocks;
      self->_iconTouchesFinishedBlocks = 0;

      v14 = 0u;
      v15 = 0u;
      v12 = 0u;
      v13 = 0u;
      v7 = v5;
      v8 = -[NSMutableArray countByEnumeratingWithState:objects:count:](v7, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
      if (v8)
      {
        v9 = v8;
        v10 = *(_QWORD *)v13;
        do
        {
          v11 = 0;
          do
          {
            if (*(_QWORD *)v13 != v10)
              objc_enumerationMutation(v7);
            (*(void (**)(_QWORD))(*(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * v11) + 16))(*(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * v11));
            ++v11;
          }
          while (v9 != v11);
          v9 = -[NSMutableArray countByEnumeratingWithState:objects:count:](v7, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
        }
        while (v9);
      }

    }
  }
}

- (UIImpactFeedbackGenerator)iconEditingFeedbackBehavior
{
  UIImpactFeedbackGenerator *iconEditingFeedbackBehavior;
  void *v4;
  void *v5;

  iconEditingFeedbackBehavior = self->_iconEditingFeedbackBehavior;
  if (!iconEditingFeedbackBehavior)
  {
    -[SBHIconManager rootViewController](self, "rootViewController");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "view");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager configureFeedbackView:](self, "configureFeedbackView:", v5);

    iconEditingFeedbackBehavior = self->_iconEditingFeedbackBehavior;
  }
  return iconEditingFeedbackBehavior;
}

- (void)_addTouchedIconView:(id)a3
{
  id v4;
  NSMutableSet *touchedIconViews;
  NSMutableSet *v6;
  NSMutableSet *v7;
  id v8;

  v4 = a3;
  touchedIconViews = self->_touchedIconViews;
  v8 = v4;
  if (!touchedIconViews)
  {
    v6 = (NSMutableSet *)objc_alloc_init(MEMORY[0x1E0C99E20]);
    v7 = self->_touchedIconViews;
    self->_touchedIconViews = v6;

    v4 = v8;
    touchedIconViews = self->_touchedIconViews;
  }
  -[NSMutableSet addObject:](touchedIconViews, "addObject:", v4);

}

- (SBHIconModel)iconModel
{
  return self->_iconModel;
}

- (void)cancelAllFolderScrolling
{
  id v3;

  if (-[SBHIconManager isScrolling](self, "isScrolling"))
  {
    -[SBHIconManager rootViewController](self, "rootViewController");
    v3 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "cancelScrolling");

  }
}

- (BOOL)isScrolling
{
  return -[SBHIconManager isRootFolderScrolling](self, "isRootFolderScrolling")
      || -[SBHIconManager isFolderScrolling](self, "isFolderScrolling");
}

- (BOOL)isRootFolderScrolling
{
  void *v2;
  char v3;

  -[SBHIconManager rootViewController](self, "rootViewController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isScrolling");

  return v3;
}

- (BOOL)isFolderScrolling
{
  void *v2;
  char v3;

  -[SBHIconManager openedFolderController](self, "openedFolderController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isScrolling");

  return v3;
}

- (BOOL)isIconIgnored:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  char v7;

  v4 = a3;
  -[SBHIconManager rootFolder](self, "rootFolder");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "ignoredList");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "directlyContainsIcon:", v4);

  return v7;
}

- (BOOL)_isShowingPullDownSearchOrTransitioning
{
  void *v3;
  void *v4;
  int v5;

  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v3, "isPullDownSearchVisibleOrTransitioning"))
  {
    -[SBHIconManager rootFolderController](self, "rootFolderController");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v4, "isOnLeadingCustomPage") ^ 1;

  }
  else
  {
    LOBYTE(v5) = 0;
  }

  return v5;
}

- (void)revealIcon:(id)a3 animated:(BOOL)a4 completionHandler:(id)a5
{
  _BOOL8 v6;
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  void (**v21)(_QWORD);
  void *v22;
  void *v23;
  id v24;
  void *v25;
  _QWORD v26[4];
  void (**v27)(_QWORD);
  _QWORD v28[4];
  id v29;
  id v30;
  id v31;
  id v32;
  SBHIconManager *v33;
  id v34;
  BOOL v35;
  _QWORD aBlock[4];
  id v37;
  id v38;
  id v39;
  BOOL v40;

  v6 = a4;
  v8 = a3;
  v9 = a5;
  -[SBHIconManager rootViewController](self, "rootViewController");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager rootFolder](self, "rootFolder");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "indexPathForIcon:", v8);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  if (v12)
  {
    objc_msgSend(v11, "folderContainingIndexPath:relativeIndexPath:", v12, 0);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager openedFolderController](self, "openedFolderController");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "folder");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = MEMORY[0x1E0C809B0];
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 3221225472;
    aBlock[2] = __56__SBHIconManager_revealIcon_animated_completionHandler___block_invoke;
    aBlock[3] = &unk_1E8D8C750;
    v25 = v10;
    v16 = v10;
    v37 = v16;
    v38 = v8;
    v40 = v6;
    v24 = v9;
    v39 = v9;
    v17 = _Block_copy(aBlock);
    v28[0] = v15;
    v28[1] = 3221225472;
    v28[2] = __56__SBHIconManager_revealIcon_animated_completionHandler___block_invoke_2;
    v28[3] = &unk_1E8D8C7A0;
    v18 = v13;
    v29 = v18;
    v30 = v11;
    v19 = v14;
    v31 = v19;
    v35 = v6;
    v32 = v16;
    v33 = self;
    v20 = v17;
    v34 = v20;
    v21 = (void (**)(_QWORD))_Block_copy(v28);
    v22 = v21;
    if (!v19 || v19 == v18)
    {
      v21[2](v21);
    }
    else
    {
      v26[0] = MEMORY[0x1E0C809B0];
      v26[1] = 3221225472;
      v26[2] = __56__SBHIconManager_revealIcon_animated_completionHandler___block_invoke_5;
      v26[3] = &unk_1E8D86600;
      v27 = v21;
      -[SBHIconManager popExpandedIconAnimated:completionHandler:](self, "popExpandedIconAnimated:completionHandler:", v6, v26);

    }
    v9 = v24;

    v10 = v25;
  }
  else if (v9)
  {
    (*((void (**)(id, _QWORD))v9 + 2))(v9, 0);
  }

}

uint64_t __56__SBHIconManager_revealIcon_animated_completionHandler___block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "revealIcon:animated:completionHandler:", *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 56), *(_QWORD *)(a1 + 48));
}

- (void)getListView:(id *)a3 folder:(id *)a4 relativePath:(id *)a5 forIndexPath:(id)a6
{
  id v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;

  v10 = a6;
  -[SBHIconManager rootFolder](self, "rootFolder");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = 0;
  objc_msgSend(v11, "folderContainingIndexPath:relativeIndexPath:", v10, &v20);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  v13 = v20;
  if (a3)
  {
    -[SBHIconManager rootFolderController](self, "rootFolderController");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "folderControllerForFolder:", v12);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v15, "isOpen"))
    {
      v16 = SBFolderRelativeListIndex(v13);
      objc_msgSend(v15, "iconListViewForIconListModelIndex:", v16);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      if (v17)
      {
LABEL_10:
        v19 = objc_retainAutorelease(v17);
        *a3 = v19;

        goto LABEL_11;
      }
      if (objc_msgSend(v12, "isRootFolder"))
      {
        if (v16 == 20000)
        {
          -[SBHIconManager _effectiveTodayViewController](self, "_effectiveTodayViewController");
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v18, "listView");
          v17 = (void *)objc_claimAutoreleasedReturnValue();

          goto LABEL_10;
        }
        if (v16 == 10000)
        {
          -[SBHIconManager floatingDockListView](self, "floatingDockListView");
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          goto LABEL_10;
        }
      }
    }
    v17 = 0;
    goto LABEL_10;
  }
LABEL_11:
  if (a4)
    *a4 = objc_retainAutorelease(v12);
  if (a5)
    *a5 = objc_retainAutorelease(v13);

}

- (SBRootFolder)rootFolder
{
  return self->_rootFolder;
}

void __56__SBHIconManager_revealIcon_animated_completionHandler___block_invoke_2(uint64_t a1)
{
  void *v2;
  void *v3;
  BOOL v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  _QWORD v9[5];
  id v10;
  id v11;
  char v12;

  v2 = *(void **)(a1 + 32);
  if (v2 == *(void **)(a1 + 40) || ((v3 = *(void **)(a1 + 48)) != 0 ? (v4 = v3 == v2) : (v4 = 0), v4))
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 72) + 16))();
  }
  else
  {
    objc_msgSend(v2, "icon");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = *(unsigned __int8 *)(a1 + 80);
    v9[0] = MEMORY[0x1E0C809B0];
    v9[1] = 3221225472;
    v9[2] = __56__SBHIconManager_revealIcon_animated_completionHandler___block_invoke_3;
    v9[3] = &unk_1E8D8C778;
    v7 = *(void **)(a1 + 56);
    v9[4] = *(_QWORD *)(a1 + 64);
    v10 = v5;
    v12 = v6;
    v11 = *(id *)(a1 + 72);
    v8 = v5;
    objc_msgSend(v7, "revealIcon:animated:completionHandler:", v8, v6, v9);

  }
}

- (void)folderControllerWillBeginScrolling:(id)a3
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  char v13;
  id v14;

  v14 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v4, "iconManager:folderControllerWillBeginScrolling:", self, v14);
  -[SBHIconManager iconDragManager](self, "iconDragManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "noteFolderBeganScrolling");

  -[SBHIconManager _discardEndEditingTimerAndDontResetUntilReasonIsRemoved:](self, "_discardEndEditingTimerAndDontResetUntilReasonIsRemoved:", CFSTR("FOLDER_IS_BEING_SCROLLED"));
  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "bringWidgetIntroductionPopoverToFront");

  -[SBHIconManager leadingTodayViewController](self, "leadingTodayViewController");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v7, "cancelTouchesOnIconViews");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager todayViewCancelTouchesScrollingAssertion](self, "todayViewCancelTouchesScrollingAssertion");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "invalidate");

    -[SBHIconManager setTodayViewCancelTouchesScrollingAssertion:](self, "setTodayViewCancelTouchesScrollingAssertion:", v8);
  }
  -[SBHIconManager trailingCustomViewController](self, "trailingCustomViewController");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager trailingLibraryViewController](self, "trailingLibraryViewController");
  v11 = objc_claimAutoreleasedReturnValue();
  if (v11)
  {
    v12 = (void *)v11;
    v13 = objc_opt_respondsToSelector();

    if ((v13 & 1) != 0)
      objc_msgSend(v10, "folderControllerWillBeginScrolling:", v14);
  }

}

- (void)folderControllerDidEndScrolling:(id)a3
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  _BOOL8 v8;
  id v9;

  v9 = a3;
  -[SBHIconManager iconToReveal](self, "iconToReveal");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
    -[SBHIconManager finishInstallingIconAnimated:](self, "finishInstallingIconAnimated:", 1);
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v5, "iconManager:folderControllerDidEndScrolling:", self, v9);
  -[SBHIconManager _removeReasonToNotResetEndEditingTimer:](self, "_removeReasonToNotResetEndEditingTimer:", CFSTR("FOLDER_IS_BEING_SCROLLED"));
  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "bringWidgetIntroductionPopoverToFront");

  -[SBHIconManager todayViewCancelTouchesScrollingAssertion](self, "todayViewCancelTouchesScrollingAssertion");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "invalidate");

  -[SBHIconManager setTodayViewCancelTouchesScrollingAssertion:](self, "setTodayViewCancelTouchesScrollingAssertion:", 0);
  v8 = -[SBHIconManager isShowingOrTransitioningToLeadingCustomView](self, "isShowingOrTransitioningToLeadingCustomView")|| -[SBHIconManager isShowingOrTransitioningToTrailingCustomView](self, "isShowingOrTransitioningToTrailingCustomView");
  -[SBRootFolderController setParallaxDisabled:forReason:](self->_rootFolderController, "setParallaxDisabled:forReason:", v8, CFSTR("Custom leading/trailing view is not visible"));

}

- (SBIcon)iconToReveal
{
  return self->_iconToReveal;
}

- (void)_removeReasonToNotResetEndEditingTimer:(id)a3
{
  BOOL v4;
  NSCountedSet *reasonsToNotRestartEditingTimer;
  id v6;

  v6 = a3;
  v4 = -[SBHIconManager isEditing](self, "isEditing");
  reasonsToNotRestartEditingTimer = self->_reasonsToNotRestartEditingTimer;
  if (v4)
  {
    -[NSCountedSet removeObject:](reasonsToNotRestartEditingTimer, "removeObject:", v6);
    -[SBHIconManager _restartEditingEndTimer](self, "_restartEditingEndTimer");
  }
  else
  {
    self->_reasonsToNotRestartEditingTimer = 0;

  }
}

- (void)_discardEndEditingTimerAndDontResetUntilReasonIsRemoved:(id)a3
{
  NSCountedSet *v4;
  NSCountedSet *reasonsToNotRestartEditingTimer;
  void *v6;
  void *v7;
  id v8;

  v8 = a3;
  if (-[SBHIconManager isEditing](self, "isEditing"))
  {
    if (!self->_reasonsToNotRestartEditingTimer)
    {
      v4 = (NSCountedSet *)objc_opt_new();
      reasonsToNotRestartEditingTimer = self->_reasonsToNotRestartEditingTimer;
      self->_reasonsToNotRestartEditingTimer = v4;

    }
    -[SBHIconManager editingEndTimer](self, "editingEndTimer");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (v6)
    {
      v7 = v6;
      objc_msgSend(v6, "invalidate");
      -[SBHIconManager setEditingEndTimer:](self, "setEditingEndTimer:", 0);

    }
    -[NSCountedSet addObject:](self->_reasonsToNotRestartEditingTimer, "addObject:", v8);
  }

}

- (id)customImageViewControllerForIconView:(id)a3
{
  id v5;
  void *v6;
  NSMapTable *widgetViewControllersForIconView;
  NSMapTable *v8;
  NSMapTable *v9;
  SBIconViewCustomImageViewController *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  char isKindOfClass;
  NSObject *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  id v21;
  void *v22;
  NSObject *v23;
  id v24;
  void *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  SBHMultiplexingWrapperViewController *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  void *v35;
  const char *v36;
  void *v37;
  void *v38;
  uint8_t buf[4];
  id v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  objc_msgSend(v5, "icon");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v6, "isWidgetIcon"))
  {
    widgetViewControllersForIconView = self->_widgetViewControllersForIconView;
    if (!widgetViewControllersForIconView)
    {
      objc_msgSend(MEMORY[0x1E0CB3748], "weakToWeakObjectsMapTable");
      v8 = (NSMapTable *)objc_claimAutoreleasedReturnValue();
      v9 = self->_widgetViewControllersForIconView;
      self->_widgetViewControllersForIconView = v8;

      widgetViewControllersForIconView = self->_widgetViewControllersForIconView;
    }
    -[NSMapTable objectForKey:](widgetViewControllersForIconView, "objectForKey:", v5);
    v10 = (SBIconViewCustomImageViewController *)objc_claimAutoreleasedReturnValue();
    if ((objc_opt_respondsToSelector() & 1) == 0
      || (-[SBIconViewCustomImageViewController icon](v10, "icon"),
          v11 = (void *)objc_claimAutoreleasedReturnValue(),
          v11,
          v11 == v6))
    {
      if (v10)
      {
LABEL_35:
        -[SBHIconManager _updateIconView:forCustomIconImageViewController:](self, "_updateIconView:forCustomIconImageViewController:", v5, v10);
        goto LABEL_36;
      }
    }
    else
    {

    }
    v12 = v6;
    objc_msgSend(v12, "activeDataSource");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "location");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v14, "isEqualToString:", CFSTR("SBIconLocationAddWidgetSheet"))
      && (objc_msgSend(v12, "isWidgetStackIcon") & 1) == 0
      && (objc_opt_self(),
          v15 = (void *)objc_claimAutoreleasedReturnValue(),
          isKindOfClass = objc_opt_isKindOfClass(),
          v15,
          (isKindOfClass & 1) != 0))
    {
      SBLogWidgets();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v40 = v5;
        _os_log_impl(&dword_1CFEF3000, v17, OS_LOG_TYPE_DEFAULT, "Creating new widget custom image view controller for icon view: %@", buf, 0xCu);
      }

      -[SBHIconManager _makeCustomViewControllerForWidgetIcon:dataSource:location:](self, "_makeCustomViewControllerForWidgetIcon:dataSource:location:", v12, v13, v14);
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = -[SBIconViewCustomImageViewController initWithContentViewController:]([SBIconViewCustomImageViewController alloc], "initWithContentViewController:", v18);

    }
    else
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        -[SBHIconManager _multiplexingViewControllerForIcon:dataSource:location:withPriority:](self, "_multiplexingViewControllerForIcon:dataSource:location:withPriority:", v12, v13, v14, objc_msgSend(v5, "customIconImageViewControllerPriority"));
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        v20 = objc_opt_class();
        v21 = v19;
        v37 = v14;
        if (v20)
        {
          if ((objc_opt_isKindOfClass() & 1) != 0)
            v22 = v21;
          else
            v22 = 0;
        }
        else
        {
          v22 = 0;
        }
        v24 = v22;

        -[SBHIconManager _updateWidgetMultiplexingViewController:forIconView:](self, "_updateWidgetMultiplexingViewController:forIconView:", v24, v5);
        -[SBHIconManager delegate](self, "delegate");
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        v36 = a2;
        if ((objc_opt_respondsToSelector() & 1) != 0)
          v26 = objc_msgSend(v25, "iconManager:canCustomElementAlignWithGrid:", self, v13);
        else
          v26 = 0;
        -[SBHIconManager _effectiveAppPredictionViewControllersForUniqueIdentifier](self, "_effectiveAppPredictionViewControllersForUniqueIdentifier");
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        v38 = v13;
        objc_msgSend(v13, "uniqueIdentifier");
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v27, "objectForKey:", v28);
        v29 = (void *)objc_claimAutoreleasedReturnValue();

        if (!v29)
        {
          objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Invalid condition not satisfying: %@"), CFSTR("appPredictionViewController != nil"));
          v35 = (void *)objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
            -[SBHIconManager customImageViewControllerForIconView:].cold.1(v36, (uint64_t)self, (uint64_t)v35);
          objc_msgSend(objc_retainAutorelease(v35), "UTF8String");
          _bs_set_crash_log_message();
          __break(0);
          JUMPOUT(0x1CFF1FC14);
        }
        v30 = [SBHMultiplexingWrapperViewController alloc];
        objc_msgSend(v5, "location");
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        v10 = -[SBHMultiplexingWrapperViewController initWithIcon:location:multiplexingViewController:appPredictionViewController:canAlignWithGrid:](v30, "initWithIcon:location:multiplexingViewController:appPredictionViewController:canAlignWithGrid:", v12, v31, v24, v29, v26);

        -[SBIconViewCustomImageViewController setDelegate:](v10, "setDelegate:", self);
        v14 = v37;
        v13 = v38;
      }
      else
      {
        SBLogWidgets();
        v23 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          v40 = v5;
          _os_log_impl(&dword_1CFEF3000, v23, OS_LOG_TYPE_DEFAULT, "Creating new widget stack view controller for icon view: %@", buf, 0xCu);
        }

        v10 = -[SBHWidgetStackViewController initWithIcon:iconListLayoutProvider:]([SBHWidgetStackViewController alloc], "initWithIcon:iconListLayoutProvider:", v12, self->_listLayoutProvider);
        -[SBIconViewCustomImageViewController setDataSource:](v10, "setDataSource:", self);
        -[SBIconViewCustomImageViewController setDelegate:](v10, "setDelegate:", self);
        -[SBIconViewCustomImageViewController setAutomaticallyUpdatesVisiblySettled:](v10, "setAutomaticallyUpdatesVisiblySettled:", 0);
        -[SBIconViewCustomImageViewController setShowsSquareCorners:](v10, "setShowsSquareCorners:", objc_msgSend(v5, "showsSquareCorners"));
      }
    }
    if ((objc_opt_respondsToSelector() & 1) != 0)
    {
      -[SBHIconManager rootFolderController](self, "rootFolderController");
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      v33 = objc_msgSend(v32, "iconImageViewControllerPresentationModeForIconView:", v5);

      -[SBIconViewCustomImageViewController setPresentationMode:](v10, "setPresentationMode:", v33);
    }
    -[NSMapTable setObject:forKey:](self->_widgetViewControllersForIconView, "setObject:forKey:", v10, v5);

    if (v10)
      goto LABEL_35;
  }
  else
  {
    if (objc_msgSend(v6, "isDebugIcon"))
    {
      v10 = -[SBHDebugIconViewController initWithIcon:]([SBHDebugIconViewController alloc], "initWithIcon:", v6);
      if (!v10)
        goto LABEL_36;
      goto LABEL_35;
    }
    v10 = 0;
  }
LABEL_36:

  return v10;
}

- (BOOL)folderController:(id)a3 canChangeCurrentPageIndexToIndex:(int64_t)a4
{
  id v6;
  void *v7;
  char v8;

  v6 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v8 = objc_msgSend(v7, "iconManager:folderController:canChangeCurrentPageIndexToIndex:", self, v6, a4);
  else
    v8 = 1;

  return v8;
}

- (double)minimumHomeScreenScaleForFolderController:(id)a3
{
  id v4;
  void *v5;
  double v6;
  double v7;

  v4 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = 1.0;
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v5, "iconManager:minimumHomeScreenScaleForFolderController:", self, v4);
    v6 = v7;
  }

  return v6;
}

- (id)parallaxSettingsForComponentsOfIconView:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  int v7;
  void *v8;
  void *v10;
  void *v11;

  v4 = a3;
  objc_msgSend(v4, "location");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (!-[SBHIconManager _shouldParallaxInIconLocation:](self, "_shouldParallaxInIconLocation:", v5)
    || !objc_msgSend(MEMORY[0x1E0DC3F10], "_motionEffectsSupported"))
  {
    goto LABEL_5;
  }
  -[SBHIconManager delegate](self, "delegate");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) == 0)
  {

    goto LABEL_8;
  }
  v7 = objc_msgSend(v6, "iconManager:supportsParallaxForIconView:", self, v4);

  if (v7)
  {
LABEL_8:
    +[SBHHomeScreenDomain rootSettings](SBHHomeScreenDomain, "rootSettings");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "iconSettings");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "badgeParallaxSettings");
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    goto LABEL_6;
  }
LABEL_5:
  v8 = 0;
LABEL_6:

  return v8;
}

- (BOOL)_shouldParallaxInIconLocation:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  char v7;

  v4 = a3;
  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "nonDockPresentedIconLocations");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "containsObject:", v4);

  return v7;
}

- (CHSWidgetExtensionProvider)widgetExtensionProvider
{
  return self->_widgetExtensionProvider;
}

- (void)iconView:(id)a3 willRemoveIconAccessoryView:(id)a4
{
  id v5;
  id v6;

  v5 = a4;
  -[SBHIconManager homescreenIconAccessoryViewMap](self, "homescreenIconAccessoryViewMap");
  v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "recycleView:", v5);

}

- (id)iconView:(id)a3 iconAccessoryViewOfClass:(Class)a4
{
  void *v5;
  void *v6;

  -[SBHIconManager homescreenIconAccessoryViewMap](self, "homescreenIconAccessoryViewMap", a3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "viewOfClass:", a4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

- (id)homescreenIconAccessoryViewMap
{
  SBHReusableViewMap *homescreenIconAccessoryViewMap;
  SBHReusableViewMap *v4;
  SBHReusableViewMap *v5;

  homescreenIconAccessoryViewMap = self->_homescreenIconAccessoryViewMap;
  if (!homescreenIconAccessoryViewMap)
  {
    v4 = -[SBHReusableViewMap initWithDelegate:]([SBHReusableViewMap alloc], "initWithDelegate:", self);
    v5 = self->_homescreenIconAccessoryViewMap;
    self->_homescreenIconAccessoryViewMap = v4;

    homescreenIconAccessoryViewMap = self->_homescreenIconAccessoryViewMap;
  }
  return homescreenIconAccessoryViewMap;
}

- (void)setEditing:(BOOL)a3
{
  -[SBHIconManager setEditing:withFeedbackBehavior:location:](self, "setEditing:withFeedbackBehavior:location:", a3, 0, *MEMORY[0x1E0C9D538], *(double *)(MEMORY[0x1E0C9D538] + 8));
}

void __104__SBHIconManager_nestingViewController_willPerformOperation_onViewController_withTransitionCoordinator___block_invoke_3(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  _QWORD v7[5];
  id v8;

  objc_msgSend(*(id *)(a1 + 32), "clearHighlightedIcon");
  if (*(_BYTE *)(a1 + 64))
  {
    v2 = *(id *)(a1 + 40);
    objc_msgSend(v2, "view");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "contentView");
    v4 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v4, "superview");
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    if (v5 != v3)
    {
      objc_msgSend(v3, "addSubview:", v4);
      objc_msgSend(v3, "setNeedsLayout");
    }

  }
  if (*(_QWORD *)(a1 + 48))
  {
    objc_msgSend(*(id *)(a1 + 32), "iconDragManager");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setIndexPath:whenRevertingIconsWithPathPrefix:", 0, *(_QWORD *)(a1 + 48));

  }
  objc_msgSend(*(id *)(a1 + 32), "setCurrentTransitionAnimator:", 0);
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = __104__SBHIconManager_nestingViewController_willPerformOperation_onViewController_withTransitionCoordinator___block_invoke_4;
  v7[3] = &unk_1E8D84EF0;
  v7[4] = *(_QWORD *)(a1 + 32);
  v8 = *(id *)(a1 + 56);
  dispatch_async(MEMORY[0x1E0C80D38], v7);

}

uint64_t __66__SBHIconManager_openFolderIcon_location_animated_withCompletion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  NSObject *v4;
  uint64_t result;
  _DWORD v6[2];
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  SBLogIcon();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v6[0] = 67109120;
    v6[1] = a2;
    _os_log_impl(&dword_1CFEF3000, v4, OS_LOG_TYPE_DEFAULT, "finished opening folder: %{BOOL}u", (uint8_t *)v6, 8u);
  }

  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(*(id *)(a1 + 32), "iconManager:didOpenFolder:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  result = *(_QWORD *)(a1 + 56);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a2);
  return result;
}

uint64_t __56__SBHIconManager_revealIcon_animated_completionHandler___block_invoke_4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

- (void)setCurrentTransitionAnimator:(id)a3
{
  objc_storeStrong((id *)&self->_currentTransitionAnimator, a3);
}

- (void)nestingViewController:(id)a3 willPerformOperation:(int64_t)a4 onViewController:(id)a5 withTransitionCoordinator:(id)a6
{
  id v10;
  id v11;
  id v12;
  id v13;
  char isKindOfClass;
  void *v15;
  int v16;
  BOOL v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t i;
  void *v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  _QWORD v47[5];
  id v48;
  id v49;
  id v50;
  char v51;
  _QWORD v52[5];
  BOOL v53;
  _BYTE v54[128];
  uint64_t v55;

  v55 = *MEMORY[0x1E0C80C00];
  v10 = a3;
  v11 = a5;
  v12 = a6;
  v13 = v11;
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();
  v15 = 0;
  v16 = isKindOfClass & 1;
  v17 = a4 == 1;
  if (a4 != 1 && (isKindOfClass & 1) != 0)
  {
    -[SBHIconManager rootFolder](self, "rootFolder");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "folder");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "indexPathForFolder:", v19);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    if (v15)
    {
      v39 = v19;
      v41 = v10;
      -[SBHIconManager rootViewController](self, "rootViewController");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      v21 = objc_msgSend(v20, "currentPageIndex");

      -[SBHIconManager rootFolderController](self, "rootFolderController");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      v23 = objc_msgSend(v22, "iconListModelIndexForPageIndex:", v21);

      if (objc_msgSend(v18, "isValidListIndex:", v23))
      {
        objc_msgSend(v18, "listAtIndex:", v23);
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        if (v24)
        {
          objc_msgSend(v18, "indexPathForFirstFreeSlotStartingAtList:avoidingFirstList:", v24, 0);
          v25 = (void *)objc_claimAutoreleasedReturnValue();
        }
        else
        {
          v25 = 0;
        }
      }
      else
      {
        v25 = 0;
        v24 = 0;
      }
      -[SBHIconManager iconDragManager](self, "iconDragManager");
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v26, "setIndexPath:whenRevertingIconsWithPathPrefix:", v25, v15);

      v27 = v15;
      v10 = v41;
      v17 = a4 == 1;
      v19 = v39;
    }

  }
  -[BSEventQueue acquireLockForReason:](self->_transitionEventQueue, "acquireLockForReason:", CFSTR("performingTransitionOperation"));
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  v52[0] = MEMORY[0x1E0C809B0];
  v52[1] = 3221225472;
  v52[2] = __104__SBHIconManager_nestingViewController_willPerformOperation_onViewController_withTransitionCoordinator___block_invoke;
  v52[3] = &unk_1E8D89BF0;
  v53 = v17;
  v52[4] = self;
  v47[0] = MEMORY[0x1E0C809B0];
  v47[1] = 3221225472;
  v47[2] = __104__SBHIconManager_nestingViewController_willPerformOperation_onViewController_withTransitionCoordinator___block_invoke_3;
  v47[3] = &unk_1E8D8D160;
  v47[4] = self;
  v51 = v16;
  v29 = v13;
  v48 = v29;
  v30 = v15;
  v49 = v30;
  v31 = v28;
  v50 = v31;
  objc_msgSend(v12, "animateAlongsideTransition:completion:", v52, v47);
  if (objc_msgSend(v12, "isAnimated"))
    objc_msgSend(v12, "animateAlongsideTransition:completion:", &__block_literal_global_834, 0);
  if (v16)
  {
    v40 = v30;
    v42 = v10;
    v32 = v29;
    v43 = 0u;
    v44 = 0u;
    v45 = 0u;
    v46 = 0u;
    v33 = (void *)-[NSHashTable copy](self->_folderPresentationObservers, "copy");
    v34 = objc_msgSend(v33, "countByEnumeratingWithState:objects:count:", &v43, v54, 16);
    if (v34)
    {
      v35 = v34;
      v36 = *(_QWORD *)v44;
      do
      {
        for (i = 0; i != v35; ++i)
        {
          if (*(_QWORD *)v44 != v36)
            objc_enumerationMutation(v33);
          objc_msgSend(*(id *)(*((_QWORD *)&v43 + 1) + 8 * i), "iconManager:willPerformTransitionWithFolder:presenting:withTransitionCoordinator:", self, v32, a4 == 1, v12);
        }
        v35 = objc_msgSend(v33, "countByEnumeratingWithState:objects:count:", &v43, v54, 16);
      }
      while (v35);
    }

    v30 = v40;
    v10 = v42;
  }
  -[SBHIconManager delegate](self, "delegate");
  v38 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v38, "iconManager:nestingViewController:willPerformOperation:onViewController:withTransitionCoordinator:", self, v10, a4, v29, v12);

}

void __104__SBHIconManager_nestingViewController_willPerformOperation_onViewController_withTransitionCoordinator___block_invoke(uint64_t a1, void *a2)
{
  char v3;
  void *v4;
  void *v5;
  id v6;
  _QWORD v7[5];

  v6 = a2;
  v3 = objc_msgSend(v6, "isCancelled");
  if (*(_BYTE *)(a1 + 40) && (v3 & 1) == 0 && (objc_msgSend(v6, "transitionWasRestarted") & 1) == 0)
  {
    v4 = (void *)MEMORY[0x1E0D01908];
    objc_msgSend(MEMORY[0x1E0D016B0], "settingsWithDuration:", 0.15);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v7[0] = MEMORY[0x1E0C809B0];
    v7[1] = 3221225472;
    v7[2] = __104__SBHIconManager_nestingViewController_willPerformOperation_onViewController_withTransitionCoordinator___block_invoke_2;
    v7[3] = &unk_1E8D84C50;
    v7[4] = *(_QWORD *)(a1 + 32);
    objc_msgSend(v4, "animateWithSettings:actions:", v5, v7);

  }
}

- (void)rootFolderController:(id)a3 setSuppressesEditingStateForExternalDockListViews:(BOOL)a4
{
  _BOOL8 v4;
  id v5;

  v4 = a4;
  -[SBHIconManager floatingDockViewController](self, "floatingDockViewController", a3);
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setSuppressesEditingStateForListViews:", v4);

}

- (void)folderControllerWillOpen:(id)a3
{
  void *v4;
  id v5;

  v5 = a3;
  -[SBHIconManager setPreviewInteractingIconView:](self, "setPreviewInteractingIconView:", 0);
  -[SBHIconManager _noteUserIsInteractingWithIcons](self, "_noteUserIsInteractingWithIcons");
  -[SBHIconManager delegate](self, "delegate");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v4, "iconManager:willOpenFolderController:", self, v5);

}

- (void)_restartEditingEndTimer
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  void *v9;
  id v10;
  id location;

  if (!-[NSCountedSet count](self->_reasonsToNotRestartEditingTimer, "count"))
  {
    -[SBHIconManager editingEndTimer](self, "editingEndTimer");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "invalidate");

    if (-[SBHIconManager isEditing](self, "isEditing") && !-[SBHIconManager isIconDragging](self, "isIconDragging"))
    {
      objc_initWeak(&location, self);
      v5 = (void *)MEMORY[0x1E0C99E88];
      v6 = MEMORY[0x1E0C809B0];
      v7 = 3221225472;
      v8 = __41__SBHIconManager__restartEditingEndTimer__block_invoke;
      v9 = &unk_1E8D88690;
      objc_copyWeak(&v10, &location);
      objc_msgSend(v5, "scheduledTimerWithTimeInterval:repeats:block:", 0, &v6, 30.0);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setTolerance:", 10.0, v6, v7, v8, v9);
      objc_destroyWeak(&v10);
      objc_destroyWeak(&location);
    }
    else
    {
      v4 = 0;
    }
    -[SBHIconManager setEditingEndTimer:](self, "setEditingEndTimer:", v4);

  }
}

- (void)setEditingEndTimer:(id)a3
{
  objc_storeStrong((id *)&self->_editingEndTimer, a3);
}

- (NSTimer)editingEndTimer
{
  return self->_editingEndTimer;
}

- (void)_noteUserIsInteractingWithIcons
{
  void *v3;

  -[SBHIconManager rootViewController](self, "rootViewController");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "noteUserIsInteractingWithIcons");

  -[SBHIconManager _restartEditingEndTimer](self, "_restartEditingEndTimer");
}

BOOL __47__SBHIconManager_firstIconViewForIcon_options___block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  objc_msgSend(a2, "firstIconViewForIcon:options:", *(_QWORD *)(a1 + 32), a3);
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v4;

  return *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) != 0;
}

- (id)firstIconViewForIcon:(id)a3 options:(unint64_t)a4
{
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  _QWORD v12[4];
  id v13;
  uint64_t *v14;
  _QWORD v15[4];
  id v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  void (*v22)(uint64_t);
  id v23;

  v7 = a3;
  v18 = 0;
  v19 = &v18;
  v20 = 0x3032000000;
  v21 = __Block_byref_object_copy__19;
  v22 = __Block_byref_object_dispose__19;
  v8 = MEMORY[0x1E0C809B0];
  v23 = 0;
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 3221225472;
  v15[2] = __47__SBHIconManager_firstIconViewForIcon_options___block_invoke;
  v15[3] = &unk_1E8D8AFC8;
  v17 = &v18;
  v16 = v7;
  v12[0] = v8;
  v12[1] = 3221225472;
  v12[2] = __47__SBHIconManager_firstIconViewForIcon_options___block_invoke_2;
  v12[3] = &unk_1E8D8AFF0;
  v14 = &v18;
  v9 = v16;
  v13 = v9;
  SBIconViewQueryingHandleMethodRecursion(self, a4, (uint64_t)a2, v15, v12);
  v10 = (id)v19[5];

  _Block_object_dispose(&v18, 8);
  return v10;
}

uint64_t __47__SBHIconManager_isDisplayingIconView_options___block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = objc_msgSend(a2, "isDisplayingIconView:options:", *(_QWORD *)(a1 + 32), a3);
  return *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
}

- (BOOL)isDisplayingIconView:(id)a3 options:(unint64_t)a4
{
  id v7;
  uint64_t v8;
  id v9;
  _QWORD v11[4];
  id v12;
  uint64_t *v13;
  _QWORD v14[4];
  id v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  char v20;

  v7 = a3;
  v17 = 0;
  v18 = &v17;
  v19 = 0x2020000000;
  v8 = MEMORY[0x1E0C809B0];
  v20 = 0;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 3221225472;
  v14[2] = __47__SBHIconManager_isDisplayingIconView_options___block_invoke;
  v14[3] = &unk_1E8D8AFC8;
  v16 = &v17;
  v15 = v7;
  v11[0] = v8;
  v11[1] = 3221225472;
  v11[2] = __47__SBHIconManager_isDisplayingIconView_options___block_invoke_2;
  v11[3] = &unk_1E8D8AFF0;
  v13 = &v17;
  v9 = v15;
  v12 = v9;
  SBIconViewQueryingHandleMethodRecursion(self, a4, (uint64_t)a2, v14, v11);
  LOBYTE(a4) = *((_BYTE *)v18 + 24);

  _Block_object_dispose(&v17, 8);
  return a4;
}

- (BOOL)presentHomeScreenIconsAnimated:(BOOL)a3
{
  _BOOL8 v3;
  _BOOL4 v5;
  void *v6;

  v3 = a3;
  if (-[SBHIconManager _isShowingPullDownSearchOrTransitioning](self, "_isShowingPullDownSearchOrTransitioning")
    || (v5 = -[SBHIconManager _isShowingLeadingCustomViewSearchOrTransitioning](self, "_isShowingLeadingCustomViewSearchOrTransitioning")))
  {
    -[SBHIconManager rootFolderController](self, "rootFolderController");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "performPageStateTransitionToState:reason:animated:completionHandler:", 0, CFSTR("dismiss spotlight or today view"), v3, 0);

    LOBYTE(v5) = 1;
  }
  return v5;
}

- (BOOL)_isShowingOrTransitioningToSearchableLeadingCustomView
{
  void *v2;
  char v3;

  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isLeadingCustomViewVisibleOrTransitionDestination");

  return v3;
}

- (BOOL)_isShowingLeadingCustomViewSearchOrTransitioning
{
  void *v2;
  char v3;

  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isLeadingCustomViewSearchVisibleOrTransitioning");

  return v3;
}

- (void)launchFromIconView:(id)a3 withActions:(id)a4 modifierFlags:(int64_t)a5
{
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void (**v19)(_QWORD);
  void *v20;
  void *v21;
  char v22;
  void *v23;
  char v24;
  NSObject *v25;
  _QWORD aBlock[4];
  id v27;
  id v28;
  SBHIconManager *v29;
  id v30;
  id v31;
  id v32;
  int64_t v33;
  uint8_t buf[4];
  id v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  objc_msgSend(v8, "icon");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "location");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager delegate](self, "delegate");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  SBLogIcon();
  v13 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v35 = v8;
    _os_log_impl(&dword_1CFEF3000, v13, OS_LOG_TYPE_DEFAULT, "Icon tapped: %@", buf, 0xCu);
  }

  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v12, "iconManager:willPrepareIconViewForLaunch:", self, v8);
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = __63__SBHIconManager_launchFromIconView_withActions_modifierFlags___block_invoke;
  aBlock[3] = &unk_1E8D8CC88;
  v14 = v8;
  v27 = v14;
  v15 = v10;
  v28 = v15;
  v29 = self;
  v30 = v9;
  v31 = v12;
  v32 = v11;
  v33 = a5;
  v16 = v11;
  v17 = v12;
  v18 = v9;
  v19 = (void (**)(_QWORD))_Block_copy(aBlock);
  -[SBHIconManager floatingDockViewControllerForView:](self, "floatingDockViewControllerForView:", v14);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v21 = v20;
  if (v20)
  {
    v22 = objc_msgSend(v20, "isPresentingLibrary");
  }
  else
  {
    if (-[SBHIconManager isShowingOrTransitioningToTrailingCustomView](self, "isShowingOrTransitioningToTrailingCustomView"))
    {
      -[SBHIconManager _currentFolderController](self, "_currentFolderController");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_16:
      v19[2](v19);
      goto LABEL_17;
    }
    v22 = -[SBHIconManager isMainDisplayLibraryViewVisible](self, "isMainDisplayLibraryViewVisible");
  }
  v24 = v22;
  -[SBHIconManager _currentFolderController](self, "_currentFolderController");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v24 & 1) != 0
    || -[SBHIconManager isShowingLeadingCustomView](self, "isShowingLeadingCustomView")
    || !objc_msgSend(v23, "isDisplayingIconView:", v14))
  {
    goto LABEL_16;
  }
  SBLogIcon();
  v25 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 138412290;
    v35 = v14;
    _os_log_impl(&dword_1CFEF3000, v25, OS_LOG_TYPE_INFO, "Telling current folder controller to prepare to launch: %@", buf, 0xCu);
  }

  objc_msgSend(v23, "prepareToLaunchTappedIcon:completionHandler:", v15, v19);
LABEL_17:
  -[SBHIconManager setPreviewInteractingIconView:](self, "setPreviewInteractingIconView:", 0);

}

- (void)setPreviewInteractingIconView:(id)a3
{
  SBIconView *v5;
  SBIconView *previewInteractingIconView;
  SBIconView *v7;
  void *v8;
  SBIconView *v9;

  v5 = (SBIconView *)a3;
  previewInteractingIconView = self->_previewInteractingIconView;
  if (previewInteractingIconView != v5)
  {
    v9 = v5;
    v7 = previewInteractingIconView;
    objc_storeStrong((id *)&self->_previewInteractingIconView, a3);
    if (v7)
    {
      -[SBHIconManager iconDragManager](self, "iconDragManager");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "informQuickActionPlatterDidFinishPresentation:", v7);

    }
    v5 = v9;
  }

}

- (id)floatingDockViewControllerForView:(id)a3
{
  id v4;
  void *v5;
  void *v6;

  v4 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v5, "iconManager:floatingDockViewControllerForView:", self, v4);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v6 = 0;
  }

  return v6;
}

void __63__SBHIconManager_launchFromIconView_withActions_modifierFlags___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  SBHIconLaunchContext *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  char v12;
  NSObject *v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  NSObject *v18;
  int v19;
  uint64_t v20;
  __int16 v21;
  uint64_t v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "icon");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = *(void **)(a1 + 40);

  if (v2 != v3)
  {
    SBLogIcon();
    v4 = (SBHIconLaunchContext *)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(&v4->super, OS_LOG_TYPE_DEFAULT))
    {
      v6 = *(_QWORD *)(a1 + 32);
      v5 = *(_QWORD *)(a1 + 40);
      v19 = 138412546;
      v20 = v5;
      v21 = 2112;
      v22 = v6;
      _os_log_impl(&dword_1CFEF3000, &v4->super, OS_LOG_TYPE_DEFAULT, "Skipping launch because icon and iconView no longer match. icon %@, iconView: %@", (uint8_t *)&v19, 0x16u);
    }
LABEL_4:

    return;
  }
  if (objc_msgSend(*(id *)(a1 + 40), "isFolderIcon"))
  {
    objc_msgSend(*(id *)(a1 + 48), "launchFolderFromIconView:withActions:modifierFlags:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 80));
    return;
  }
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    SBLogIcon();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v8 = *(_QWORD *)(a1 + 32);
      v9 = *(_QWORD *)(a1 + 80);
      v19 = 138412546;
      v20 = v8;
      v21 = 2048;
      v22 = v9;
      _os_log_impl(&dword_1CFEF3000, v7, OS_LOG_TYPE_DEFAULT, "Telling delegate to launch with actions: %@ modifierFlags: %ld", (uint8_t *)&v19, 0x16u);
    }

    objc_msgSend(*(id *)(a1 + 64), "iconManager:launchIconForIconView:withActions:modifierFlags:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 80));
  }
  else if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    SBLogIcon();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      v11 = *(_QWORD *)(a1 + 32);
      v19 = 138412290;
      v20 = v11;
      _os_log_impl(&dword_1CFEF3000, v10, OS_LOG_TYPE_DEFAULT, "Telling delegate to launch with actions: %@", (uint8_t *)&v19, 0xCu);
    }

    objc_msgSend(*(id *)(a1 + 64), "iconManager:launchIconForIconView:withActions:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 56));
  }
  else
  {
    v12 = objc_opt_respondsToSelector();
    SBLogIcon();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);
    if ((v12 & 1) == 0)
    {
      if (v14)
      {
        v16 = *(_QWORD *)(a1 + 32);
        v19 = 138412290;
        v20 = v16;
        _os_log_impl(&dword_1CFEF3000, v13, OS_LOG_TYPE_DEFAULT, "Instructing icon to launch manually: %@", (uint8_t *)&v19, 0xCu);
      }

      v4 = objc_alloc_init(SBHIconLaunchContext);
      -[SBHIconLaunchContext setIconView:](v4, "setIconView:", *(_QWORD *)(a1 + 32));
      v17 = objc_msgSend(*(id *)(a1 + 40), "performLaunchFromLocation:context:", *(_QWORD *)(a1 + 72), v4);
      SBLogIcon();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        v19 = 67109120;
        LODWORD(v20) = v17;
        _os_log_impl(&dword_1CFEF3000, v18, OS_LOG_TYPE_DEFAULT, "Icon handled launch: %{BOOL}u", (uint8_t *)&v19, 8u);
      }

      goto LABEL_4;
    }
    if (v14)
    {
      v15 = *(_QWORD *)(a1 + 32);
      v19 = 138412290;
      v20 = v15;
      _os_log_impl(&dword_1CFEF3000, v13, OS_LOG_TYPE_DEFAULT, "Telling delegate to launch: %@", (uint8_t *)&v19, 0xCu);
    }

    objc_msgSend(*(id *)(a1 + 64), "iconManager:launchIconForIconView:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 32));
  }
}

- (void)rootFolderControllerViewDidDisappear:(id)a3
{
  id v3;

  -[SBHIconManager usageMonitor](self, "usageMonitor", a3);
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "noteIconManagerRootFolderControllerViewDidDisappear");

}

void __38__SBHIconManager_bestLocationForIcon___block_invoke(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  void *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v6 = a2;
  objc_msgSend(v6, "presentedIconLocations");
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v7 = (id)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v14;
    while (2)
    {
      for (i = 0; i != v9; ++i)
      {
        if (*(_QWORD *)v14 != v10)
          objc_enumerationMutation(v7);
        v12 = *(void **)(*((_QWORD *)&v13 + 1) + 8 * i);
        if (objc_msgSend(v6, "isDisplayingIcon:inLocation:", *(_QWORD *)(a1 + 32), v12, (_QWORD)v13))
        {
          objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), v12);
          *a4 = 1;
          goto LABEL_11;
        }
      }
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
      if (v9)
        continue;
      break;
    }
  }
LABEL_11:

}

- (void)setContentVisibility:(unint64_t)a3
{
  NSObject *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  int v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  if (self->_contentVisibility != a3)
  {
    SBLogIcon();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      SBHStringFromContentVisibility(a3);
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = 138543362;
      v12 = v6;
      _os_log_impl(&dword_1CFEF3000, v5, OS_LOG_TYPE_DEFAULT, "Changing icon manager content visibility to %{public}@", (uint8_t *)&v11, 0xCu);

    }
    self->_contentVisibility = a3;
    -[SBHIconManager rootViewController](self, "rootViewController");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "setContentVisibility:", -[SBHIconManager effectiveRootFolderControllerContentVisibility](self, "effectiveRootFolderControllerContentVisibility"));

    -[SBHIconManager floatingDockViewController](self, "floatingDockViewController");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "libraryViewController");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "setContentVisibility:", a3);

    if (a3 == 2)
    {
      if (-[SBHIconManager isShowingModalInteraction](self, "isShowingModalInteraction"))
        -[SBHIconManager dismissModalInteractionsImmediately](self, "dismissModalInteractionsImmediately");
    }
    -[SBHIconManager usageMonitor](self, "usageMonitor");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "noteIconManagerContentOccludedChanged");

  }
}

- (SBHHomeScreenUsageMonitor)usageMonitor
{
  return self->_usageMonitor;
}

- (unint64_t)effectiveRootFolderControllerContentVisibility
{
  unint64_t v3;
  void *v4;

  v3 = -[SBHIconManager contentVisibility](self, "contentVisibility");
  if (!v3)
  {
    if (-[SBHIconManager isOverlayTodayViewVisible](self, "isOverlayTodayViewVisible"))
      v3 = -[SBHIconManager isOverlayTodayViewVisibilityTransitioning](self, "isOverlayTodayViewVisibilityTransitioning") ^ 1;
    else
      v3 = 0;
    if (-[SBHIconManager isMainDisplayLibraryViewVisible](self, "isMainDisplayLibraryViewVisible"))
    {
      if (!-[SBHIconManager isMainDisplayLibraryViewVisibilityTransitioning](self, "isMainDisplayLibraryViewVisibilityTransitioning"))
      {
        -[SBHIconManager trailingLibraryViewController](self, "trailingLibraryViewController");
        v4 = (void *)objc_claimAutoreleasedReturnValue();

        if (!v4)
          return 1;
      }
    }
  }
  return v3;
}

uint64_t __104__SBHIconManager_nestingViewController_willPerformOperation_onViewController_withTransitionCoordinator___block_invoke_2(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "clearHighlightedIcon");
}

- (BOOL)iconView:(id)a3 shouldContinueToUseBackgroundViewForComponents:(id)a4
{
  id v6;
  id v7;
  void *v8;
  char v9;

  v6 = a3;
  v7 = a4;
  -[SBHIconManager delegate](self, "delegate");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v9 = objc_msgSend(v8, "iconManager:shouldContinueToUseBackgroundView:forComponentsOfIconView:", self, v7, v6);
  else
    v9 = 0;

  return v9;
}

- (SBFolder)openedFolder
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  -[SBHIconManager floatingDockViewController](self, "floatingDockViewController");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "presentedFolderController");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "folder");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v5)
  {
    -[SBHIconManager openedFolderController](self, "openedFolderController");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "folder");
    v5 = (void *)objc_claimAutoreleasedReturnValue();

  }
  return (SBFolder *)v5;
}

- (BOOL)isEditingAllowed
{
  void *v3;
  char v4;

  -[SBHIconManager delegate](self, "delegate");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v4 = objc_msgSend(v3, "isEditingAllowedForIconManager:", self);
  else
    v4 = 1;

  return v4;
}

uint64_t __104__SBHIconManager_nestingViewController_willPerformOperation_onViewController_withTransitionCoordinator___block_invoke_4(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 720), "relinquishLock:", *(_QWORD *)(a1 + 40));
}

void __59__SBHIconManager_firstIconViewWithOptions_iconPassingTest___block_invoke(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  char v7;
  void *v8;
  id v9;

  v9 = a2;
  v7 = objc_opt_respondsToSelector();
  if ((v7 & 1) != 0)
  {
    objc_msgSend(v9, "firstIconViewWithOptions:iconPassingTest:", a3, *(_QWORD *)(a1 + 32));
    v8 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v8 = 0;
  }
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), v8);
  if ((v7 & 1) != 0)

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40))
    *a4 = 1;

}

- (id)firstIconViewWithOptions:(unint64_t)a3 iconPassingTest:(id)a4
{
  id v7;
  id v8;
  id v9;
  _QWORD v11[4];
  id v12;
  uint64_t *v13;
  SEL v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  void (*v19)(uint64_t);
  id v20;

  v7 = a4;
  v15 = 0;
  v16 = &v15;
  v17 = 0x3032000000;
  v18 = __Block_byref_object_copy__19;
  v19 = __Block_byref_object_dispose__19;
  v20 = 0;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = __59__SBHIconManager_firstIconViewWithOptions_iconPassingTest___block_invoke;
  v11[3] = &unk_1E8D8CF98;
  v13 = &v15;
  v14 = a2;
  v8 = v7;
  v12 = v8;
  -[SBHIconManager enumerateIconViewQueryableChildrenWithOptions:usingBlock:](self, "enumerateIconViewQueryableChildrenWithOptions:usingBlock:", a3, v11);
  v9 = (id)v16[5];

  _Block_object_dispose(&v15, 8);
  return v9;
}

- (void)setEditing:(BOOL)a3 withFeedbackBehavior:(id)a4 location:(CGPoint)a5
{
  double y;
  double x;
  id v9;
  _BOOL4 v10;
  OS_os_activity *v11;
  OS_os_activity *v12;
  uint64_t v13;
  OS_os_activity *editingActivity;
  void *v15;
  NSObject *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t i;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint8_t v31[128];
  uint8_t buf[4];
  int v33;
  uint64_t v34;

  y = a5.y;
  x = a5.x;
  v34 = *MEMORY[0x1E0C80C00];
  v9 = a4;
  if (!a3)
  {
    if (!-[SBHIconManager isEditing](self, "isEditing"))
      goto LABEL_20;
    self->_editing = 0;
LABEL_7:
    -[NSMutableSet removeAllObjects](self->_partialEditingIconLocations, "removeAllObjects");
    -[SBHIconManager _invalidateWallpaperTintColorDropper](self, "_invalidateWallpaperTintColorDropper");
    if (self->_editingActivity)
    {
      os_activity_scope_leave(&self->_editingActivityScope);
      editingActivity = self->_editingActivity;
      self->_editingActivity = 0;

    }
    -[SBHIconManager rootFolder](self, "rootFolder");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "enumerateAllIconsWithOptions:usingBlock:", 1, &__block_literal_global_203);

    v13 = 0;
    goto LABEL_10;
  }
  v10 = -[SBHIconManager isEditingAllowed](self, "isEditingAllowed");
  if (v10 == -[SBHIconManager isEditing](self, "isEditing"))
    goto LABEL_20;
  self->_editing = v10;
  if (!v10)
    goto LABEL_7;
  v11 = (OS_os_activity *)_os_activity_create(&dword_1CFEF3000, "editing mode", MEMORY[0x1E0C80FC8], OS_ACTIVITY_FLAG_DEFAULT);
  v12 = self->_editingActivity;
  self->_editingActivity = v11;

  os_activity_scope_enter((os_activity_t)self->_editingActivity, &self->_editingActivityScope);
  v13 = 1;
LABEL_10:
  SBLogIcon();
  v16 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109120;
    v33 = v13;
    _os_log_impl(&dword_1CFEF3000, v16, OS_LOG_TYPE_DEFAULT, "Editing state changed: %{BOOL}u", buf, 8u);
  }

  -[SBHIconManager setPreviewInteractingIconView:](self, "setPreviewInteractingIconView:", 0);
  -[SBHIconManager floatingDockViewController](self, "floatingDockViewController");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "setEditing:animated:", v13, 1);

  -[SBHIconManager rootViewController](self, "rootViewController");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "setEditing:animated:", v13, 1);

  -[SBHIconManager leadingCustomViewController](self, "leadingCustomViewController");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "setEditing:", v13);

  -[SBHIconManager trailingCustomViewController](self, "trailingCustomViewController");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v20, "setEditing:", v13);

  -[SBHIconManager overlayTodayViewController](self, "overlayTodayViewController");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v21, "setEditing:", v13);

  v29 = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  -[SBHIconManager _libraryViewControllers](self, "_libraryViewControllers", 0);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v27, v31, 16);
  if (v23)
  {
    v24 = v23;
    v25 = *(_QWORD *)v28;
    do
    {
      for (i = 0; i != v24; ++i)
      {
        if (*(_QWORD *)v28 != v25)
          objc_enumerationMutation(v22);
        objc_msgSend(*(id *)(*((_QWORD *)&v27 + 1) + 8 * i), "setEditing:animated:", v13, 1);
      }
      v24 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v27, v31, 16);
    }
    while (v24);
  }

  -[SBHIconManager editingDidChangeWithFeedbackBehavior:location:](self, "editingDidChangeWithFeedbackBehavior:location:", v9, x, y);
LABEL_20:

}

- (id)intentForWidget:(id)a3 ofIcon:(id)a4
{
  return -[SBHIconManager _intentForWidget:ofIcon:creatingIfNecessary:](self, "_intentForWidget:ofIcon:creatingIfNecessary:", a3, a4, 1);
}

- (id)_newIntentForDataSource:(id)a3 inIcon:(id)a4
{
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;

  v6 = a3;
  v7 = a4;
  -[SBHIconManager _archivedIntentForDataSource:inIcon:loadingIfNecessary:](self, "_archivedIntentForDataSource:inIcon:loadingIfNecessary:", v6, v7, 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v8)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      -[CHSWidgetExtensionProvider sbh_descriptorForWidgetIdentifiable:](self->_widgetExtensionProvider, "sbh_descriptorForWidgetIdentifiable:", v6);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "defaultIntentReference");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "intent");
      v8 = (void *)objc_claimAutoreleasedReturnValue();

      SBLogWidgetIntent();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
        -[SBHIconManager _newIntentForDataSource:inIcon:].cold.1(v7, v11);

    }
    else
    {
      v8 = 0;
    }
  }

  return v8;
}

- (id)_intentForWidget:(id)a3 ofIcon:(id)a4 creatingIfNecessary:(BOOL)a5
{
  _BOOL4 v5;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  v5 = a5;
  v8 = a3;
  v9 = a4;
  objc_msgSend(v8, "uniqueIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager _intentForDataSource:inIcon:creatingIfNecessary:](self, "_intentForDataSource:inIcon:creatingIfNecessary:", v8, v9, 0);
  v11 = (id)objc_claimAutoreleasedReturnValue();
  v12 = v11;
  if (!v11)
  {
    -[SBHIconManager _effectiveWidgetMultiplexingManager](self, "_effectiveWidgetMultiplexingManager");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "viewControllerForIdentifier:", v10);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    if (objc_msgSend(v14, "sbh_isWidgetHostViewController"))
    {
      objc_msgSend(v14, "widget");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "intentReference");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "intent");
      v12 = (void *)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      v12 = 0;
    }

    if (!v12 && v5)
    {
      -[SBHIconManager _intentForDataSource:inIcon:creatingIfNecessary:](self, "_intentForDataSource:inIcon:creatingIfNecessary:", v8, v9, 1);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
    }
  }

  return v12;
}

- (id)_intentForDataSource:(id)a3 inIcon:(id)a4 creatingIfNecessary:(BOOL)a5
{
  _BOOL4 v5;
  id v8;
  id v9;
  void *v10;
  id v11;
  char v12;
  char v13;
  NSMutableDictionary *widgetIntents;
  NSMutableDictionary *v15;
  NSMutableDictionary *v16;

  v5 = a5;
  v8 = a3;
  v9 = a4;
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v8, "uniqueIdentifier");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    if (v10)
    {
      -[NSMutableDictionary objectForKey:](self->_widgetIntents, "objectForKey:", v10);
      v11 = (id)objc_claimAutoreleasedReturnValue();
      v12 = 1;
      if (v11)
        goto LABEL_15;
      goto LABEL_8;
    }
    v11 = 0;
  }
  else
  {
    v11 = 0;
    v10 = 0;
  }
  v12 = 0;
LABEL_8:
  if (v5)
  {
    v11 = -[SBHIconManager _newIntentForDataSource:inIcon:](self, "_newIntentForDataSource:inIcon:", v8, v9);
    v13 = v12 ^ 1;
    if (!v11)
      v13 = 1;
    if ((v13 & 1) == 0)
    {
      widgetIntents = self->_widgetIntents;
      if (!widgetIntents)
      {
        v15 = (NSMutableDictionary *)objc_alloc_init(MEMORY[0x1E0C99E08]);
        v16 = self->_widgetIntents;
        self->_widgetIntents = v15;

        widgetIntents = self->_widgetIntents;
      }
      -[NSMutableDictionary setObject:forKey:](widgetIntents, "setObject:forKey:", v11, v10);
    }
  }
LABEL_15:

  return v11;
}

- (id)_archivedIntentForDataSource:(id)a3 inIcon:(id)a4 loadingIfNecessary:(BOOL)a5
{
  _BOOL4 v5;
  id v8;
  id v9;
  void *v10;
  void *v11;
  char v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  NSObject *v19;
  NSObject *v20;
  uint64_t v21;
  NSObject *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  void *v34;
  char v35;
  void *v36;
  char v37;
  NSMutableDictionary *archivedWidgetIntents;
  NSMutableDictionary *v39;
  NSMutableDictionary *v40;
  void *v41;
  id v42;
  id v43;
  uint8_t buf[4];
  uint64_t v45;
  __int16 v46;
  void *v47;
  __int16 v48;
  void *v49;
  __int16 v50;
  void *v51;
  uint64_t v52;

  v5 = a5;
  v52 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  if ((objc_opt_respondsToSelector() & 1) == 0)
  {
    v11 = 0;
    v10 = 0;
LABEL_7:
    v12 = 0;
    goto LABEL_8;
  }
  objc_msgSend(v8, "uniqueIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v10)
  {
    v11 = 0;
    goto LABEL_7;
  }
  -[NSMutableDictionary objectForKey:](self->_archivedWidgetIntents, "objectForKey:", v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = 1;
  if (v11)
    goto LABEL_23;
LABEL_8:
  if (v5)
  {
    -[SBHIconManager delegate](self, "delegate");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_opt_respondsToSelector() & 1) != 0)
    {
      objc_msgSend(v13, "iconManager:configurationDataForDataSource:ofIcon:", self, v8, v9);
      v14 = objc_claimAutoreleasedReturnValue();
      if (v14)
      {
        v15 = (void *)v14;
        v16 = (void *)MEMORY[0x1E0CB3710];
        objc_opt_self();
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        v43 = 0;
        objc_msgSend(v16, "unarchivedObjectOfClass:fromData:error:", v17, v15, &v43);
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        v18 = v43;

        SBLogWidgetIntent();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = v19;
        if (v11)
        {
          if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
          {
            v21 = objc_msgSend(v11, "_indexingHash");
            *(_DWORD *)buf = 134218242;
            v45 = v21;
            v46 = 2114;
            v47 = v15;
            _os_log_impl(&dword_1CFEF3000, v20, OS_LOG_TYPE_DEFAULT, "Successfully unarchived widget intent '%llu' from %{public}@", buf, 0x16u);
          }
        }
        else if (os_log_type_enabled(v19, OS_LOG_TYPE_FAULT))
        {
          -[SBHIconManager _archivedIntentForDataSource:inIcon:loadingIfNecessary:].cold.1();
        }
        v42 = v18;

        v29 = objc_opt_class();
        v30 = v8;
        if (v29)
        {
          if ((objc_opt_isKindOfClass() & 1) != 0)
            v31 = v30;
          else
            v31 = 0;
        }
        else
        {
          v31 = 0;
        }
        v32 = v31;

        objc_msgSend(v32, "extensionBundleIdentifier");
        v33 = (void *)objc_claimAutoreleasedReturnValue();

        if (objc_msgSend(v33, "isEqualToString:", CFSTR("com.apple.mobilecal.CalendarWidgetExtension")))
        {
          v41 = v15;
          objc_msgSend(v11, "_className");
          v34 = (void *)objc_claimAutoreleasedReturnValue();
          v35 = objc_msgSend(v34, "isEqualToString:", CFSTR("CalendarSpatialWidgetIntent"));

          if ((v35 & 1) == 0)
          {
            v15 = v41;
            v36 = v42;
            goto LABEL_36;
          }
          v33 = v11;
          v11 = 0;
          v15 = v41;
        }
        v36 = v42;

LABEL_36:
        v37 = v12 ^ 1;
        if (!v11)
          v37 = 1;
        if ((v37 & 1) == 0)
        {
          archivedWidgetIntents = self->_archivedWidgetIntents;
          if (!archivedWidgetIntents)
          {
            v39 = (NSMutableDictionary *)objc_alloc_init(MEMORY[0x1E0C99E08]);
            v40 = self->_archivedWidgetIntents;
            self->_archivedWidgetIntents = v39;

            archivedWidgetIntents = self->_archivedWidgetIntents;
          }
          -[NSMutableDictionary setObject:forKey:](archivedWidgetIntents, "setObject:forKey:", v11, v10);
        }
        goto LABEL_22;
      }
      if (__sb__runningInSpringBoard())
      {
        SBLogWidgetIntent();
        v22 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
        {
          objc_msgSend(v9, "applicationBundleID");
          v23 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v9, "activeDataSource");
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          SBHConfigurationIdentifierFromDataSource(v24);
          v25 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v9, "activeDataSource");
          v26 = (void *)objc_claimAutoreleasedReturnValue();
          SBHUniqueIdentifierOfDataSource(v26);
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138544130;
          v45 = (uint64_t)v9;
          v46 = 2114;
          v47 = v23;
          v48 = 2114;
          v49 = v25;
          v50 = 2114;
          v51 = v27;
          _os_log_impl(&dword_1CFEF3000, v22, OS_LOG_TYPE_DEFAULT, "Archived widget intent data not found for icon: %{public}@, bundleID=%{public}@, storageIdentifier: %{public}@, dataSourceUniqueIdentifier: %{public}@", buf, 0x2Au);

        }
LABEL_17:

      }
    }
    else if (__sb__runningInSpringBoard())
    {
      SBLogWidgetIntent();
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_FAULT))
        -[SBHIconManager _archivedIntentForDataSource:inIcon:loadingIfNecessary:].cold.2();
      goto LABEL_17;
    }
    v11 = 0;
LABEL_22:

  }
LABEL_23:

  return v11;
}

- (SBHIconManager)init
{
  SBHIconManager *v2;
  SBHomeScreenDefaults *v3;
  SBHomeScreenDefaults *homeScreenDefaults;
  SBHDefaultIconListLayoutProvider *v5;
  SBIconListLayoutProvider *listLayoutProvider;
  SBHWidgetMetricsProvider *v7;
  SBHWidgetMetricsProvider *widgetMetricsProvider;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  SBIconDragManager *v14;
  SBIconDragManager *iconDragManager;
  SBHIconShareSheetManager *v16;
  SBHIconShareSheetManager *iconShareSheetManager;
  SBHFocusModeManager *v18;
  SBHFocusModeManager *focusModeManager;
  id v20;
  uint64_t v21;
  BSEventQueue *transitionEventQueue;
  uint64_t v23;
  BOOL v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  SBHHomeScreenSettings *homeScreenSettings;
  uint64_t v29;
  SBHRootFolderSettings *rootFolderSettings;
  void *v31;
  uint64_t v32;
  SBFParallaxSettings *badgeParallaxSettings;
  void *v34;
  uint64_t v35;
  SBHWidgetIntroductionSettings *widgetIntroductionSettings;
  void *v37;
  void *v38;
  uint64_t v39;
  NSMutableSet *pendingWidgetIntentConfigurationInitializations;
  CHSWidgetExtensionProvider *v41;
  CHSWidgetExtensionProvider *widgetExtensionProvider;
  SBHWidgetIntroductionFeatureIntroductionItem *v43;
  SBHWidgetIntroductionFeatureIntroductionItem *widgetIntroductionItem;
  SBHFeatureIntroductionManager *v45;
  SBHFeatureIntroductionManager *featureIntroductionManager;
  void *v47;
  void *v48;
  objc_super v50;

  v50.receiver = self;
  v50.super_class = (Class)SBHIconManager;
  v2 = -[SBHIconManager init](&v50, sel_init);
  if (v2)
  {
    v3 = (SBHomeScreenDefaults *)objc_alloc_init(MEMORY[0x1E0DA9F98]);
    homeScreenDefaults = v2->_homeScreenDefaults;
    v2->_homeScreenDefaults = v3;

    v5 = objc_alloc_init(SBHDefaultIconListLayoutProvider);
    listLayoutProvider = v2->_listLayoutProvider;
    v2->_listLayoutProvider = (SBIconListLayoutProvider *)v5;

    v7 = objc_alloc_init(SBHWidgetMetricsProvider);
    widgetMetricsProvider = v2->_widgetMetricsProvider;
    v2->_widgetMetricsProvider = v7;

    -[SBHWidgetMetricsProvider setDelegate:](v2->_widgetMetricsProvider, "setDelegate:", v2);
    -[SBIconListLayoutProvider layoutForIconLocation:](v2->_listLayoutProvider, "layoutForIconLocation:", CFSTR("SBIconLocationDock"));
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = SBHIconListLayoutMaximumIconCount(v9);
    -[SBIconListLayoutProvider layoutForIconLocation:](v2->_listLayoutProvider, "layoutForIconLocation:", CFSTR("SBIconLocationRoot"));
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = 3 * SBHIconListLayoutMaximumIconCount(v11);
    -[SBIconListLayoutProvider layoutForIconLocation:](v2->_listLayoutProvider, "layoutForIconLocation:", CFSTR("SBIconLocationFolder"));
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v2->_maxIconViewsInHierarchy = v12 + v10 + SBHIconListLayoutMaximumIconCount(v13);

    v14 = objc_alloc_init(SBIconDragManager);
    iconDragManager = v2->_iconDragManager;
    v2->_iconDragManager = v14;

    -[SBIconDragManager setDelegate:](v2->_iconDragManager, "setDelegate:", v2);
    v16 = -[SBHIconShareSheetManager initWithIconManager:]([SBHIconShareSheetManager alloc], "initWithIconManager:", v2);
    iconShareSheetManager = v2->_iconShareSheetManager;
    v2->_iconShareSheetManager = v16;

    v18 = -[SBHFocusModeManager initWithIconManager:]([SBHFocusModeManager alloc], "initWithIconManager:", v2);
    focusModeManager = v2->_focusModeManager;
    v2->_focusModeManager = v18;

    v20 = objc_alloc(MEMORY[0x1E0D01770]);
    v21 = objc_msgSend(v20, "initWithName:onQueue:", CFSTR("com.apple.SpringBoardHome.iconManager.transitions"), MEMORY[0x1E0C80D38]);
    transitionEventQueue = v2->_transitionEventQueue;
    v2->_transitionEventQueue = (BSEventQueue *)v21;

    v23 = SBFEffectiveHomeButtonType();
    v24 = 1;
    v2->_showsDoneButtonWhileEditing = v23 == 2;
    if (v23 != 2)
    {
      objc_msgSend(MEMORY[0x1E0DC3708], "currentDevice");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      v26 = objc_msgSend(v25, "userInterfaceIdiom");

      v24 = (v26 & 0xFFFFFFFFFFFFFFFBLL) == 1;
    }
    v2->_showsDoneButtonWhileEditing = v24;
    v2->_showsAddWidgetButtonWhileEditing = 1;
    +[SBHHomeScreenDomain rootSettings](SBHHomeScreenDomain, "rootSettings");
    v27 = objc_claimAutoreleasedReturnValue();
    homeScreenSettings = v2->_homeScreenSettings;
    v2->_homeScreenSettings = (SBHHomeScreenSettings *)v27;

    -[PTSettings addKeyObserver:](v2->_homeScreenSettings, "addKeyObserver:", v2);
    -[SBHHomeScreenSettings rootFolderSettings](v2->_homeScreenSettings, "rootFolderSettings");
    v29 = objc_claimAutoreleasedReturnValue();
    rootFolderSettings = v2->_rootFolderSettings;
    v2->_rootFolderSettings = (SBHRootFolderSettings *)v29;

    -[PTSettings addKeyObserver:](v2->_rootFolderSettings, "addKeyObserver:", v2);
    -[SBHHomeScreenSettings iconSettings](v2->_homeScreenSettings, "iconSettings");
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v31, "badgeParallaxSettings");
    v32 = objc_claimAutoreleasedReturnValue();
    badgeParallaxSettings = v2->_badgeParallaxSettings;
    v2->_badgeParallaxSettings = (SBFParallaxSettings *)v32;

    -[SBFParallaxSettings addKeyObserver:](v2->_badgeParallaxSettings, "addKeyObserver:", v2);
    +[SBHHomeScreenDomain rootSettings](SBHHomeScreenDomain, "rootSettings");
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v34, "widgetIntroductionSettings");
    v35 = objc_claimAutoreleasedReturnValue();
    widgetIntroductionSettings = v2->_widgetIntroductionSettings;
    v2->_widgetIntroductionSettings = (SBHWidgetIntroductionSettings *)v35;

    -[PTSettings addKeyObserver:](v2->_widgetIntroductionSettings, "addKeyObserver:", v2);
    objc_storeStrong((id *)&v2->_defaultFirstPageWidgetSizeClass, CFSTR("SBHIconGridSizeClassSmall"));
    objc_storeStrong((id *)&v2->_defaultSecondPageWidgetSizeClass, CFSTR("SBHIconGridSizeClassSmall"));
    v2->_contentVisibility = 0;
    *(_WORD *)&v2->_recyclesIconViews = 257;
    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v37, "addObserver:selector:name:object:", v2, sel__reduceTransparencyStatusDidChange_, *MEMORY[0x1E0DC45B8], 0);
    objc_msgSend(v37, "addObserver:selector:name:object:", v2, sel__sizeCategoryDidChange_, *MEMORY[0x1E0DC48E8], 0);
    if (__sb__runningInSpringBoard())
    {
      -[SBHWidgetMetricsProvider systemDefaultMetricsSpecification](v2->_widgetMetricsProvider, "systemDefaultMetricsSpecification");
      v38 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0C99E20], "set");
      v39 = objc_claimAutoreleasedReturnValue();
      pendingWidgetIntentConfigurationInitializations = v2->_pendingWidgetIntentConfigurationInitializations;
      v2->_pendingWidgetIntentConfigurationInitializations = (NSMutableSet *)v39;

      v41 = (CHSWidgetExtensionProvider *)objc_alloc_init(MEMORY[0x1E0D101B0]);
      widgetExtensionProvider = v2->_widgetExtensionProvider;
      v2->_widgetExtensionProvider = v41;

      -[CHSWidgetExtensionProvider registerObserver:](v2->_widgetExtensionProvider, "registerObserver:", v2);
    }
    -[SBHIconManager _setupStateCaptureHandleIfNeeded](v2, "_setupStateCaptureHandleIfNeeded");
    v43 = objc_alloc_init(SBHWidgetIntroductionFeatureIntroductionItem);
    widgetIntroductionItem = v2->_widgetIntroductionItem;
    v2->_widgetIntroductionItem = v43;

    -[SBHWidgetIntroductionFeatureIntroductionItem setIconManager:](v2->_widgetIntroductionItem, "setIconManager:", v2);
    v45 = objc_alloc_init(SBHFeatureIntroductionManager);
    featureIntroductionManager = v2->_featureIntroductionManager;
    v2->_featureIntroductionManager = v45;

    -[SBHFeatureIntroductionManager addFeatureIntroductionItem:atLocations:](v2->_featureIntroductionManager, "addFeatureIntroductionItem:atLocations:", v2->_widgetIntroductionItem, 14);
    objc_msgSend(MEMORY[0x1E0CF96A8], "subjectMonitorRegistry");
    v47 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v47, "addMonitor:subjectMask:subscriptionOptions:", v2, 1, 1);
    v48 = (void *)objc_claimAutoreleasedReturnValue();
    objc_storeWeak((id *)&v2->_appPrototectionSubjectMonitorSubscription, v48);

  }
  return v2;
}

- (void)dealloc
{
  id WeakRetained;
  objc_super v4;

  -[BSInvalidatable invalidate](self->_stateCaptureHandle, "invalidate");
  WeakRetained = objc_loadWeakRetained((id *)&self->_appPrototectionSubjectMonitorSubscription);
  objc_msgSend(WeakRetained, "invalidate");

  v4.receiver = self;
  v4.super_class = (Class)SBHIconManager;
  -[SBHIconManager dealloc](&v4, sel_dealloc);
}

- (SBSearchGesture)searchGesture
{
  void *v2;
  void *v3;

  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "searchGesture");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return (SBSearchGesture *)v3;
}

- (int64_t)interfaceOrientation
{
  void *v3;
  int64_t v4;
  void *v5;
  void *v6;

  -[SBHIconManager delegate](self, "delegate");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    v4 = objc_msgSend(v3, "interfaceOrientationForIconManager:", self);
  }
  else
  {
    -[SBHIconManager rootViewController](self, "rootViewController");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = v5;
    if (v5)
      v4 = objc_msgSend(v5, "orientation");
    else
      v4 = 1;

  }
  return v4;
}

- (unint64_t)allowedInterfaceOrientations
{
  void *v3;
  unint64_t v4;

  -[SBHIconManager delegate](self, "delegate");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v4 = objc_msgSend(v3, "allowedInterfaceOrientationsForIconManager:", self);
  else
    v4 = 30;

  return v4;
}

- (unint64_t)possibleInterfaceOrientations
{
  void *v3;
  unint64_t v4;

  -[SBHIconManager delegate](self, "delegate");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v4 = objc_msgSend(v3, "possibleInterfaceOrientationsForIconManager:", self);
  else
    v4 = 30;

  return v4;
}

- (void)noteInterfaceOrientationChanged
{
  int64_t v3;
  void *v4;
  id v5;

  if (-[SBHIconManager hasRootViewController](self, "hasRootViewController"))
  {
    -[SBHIconManager rootFolderController](self, "rootFolderController");
    v5 = (id)objc_claimAutoreleasedReturnValue();
    v3 = -[SBHIconManager interfaceOrientation](self, "interfaceOrientation");
    objc_msgSend(v5, "setOrientation:", v3);
    objc_msgSend(v5, "folderView");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setOrientation:", v3);

  }
}

- (BOOL)hasRootViewController
{
  void *v2;
  BOOL v3;

  -[SBHIconManager rootViewController](self, "rootViewController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2 != 0;

  return v3;
}

- (void)setIconModel:(id)a3
{
  SBHIconModel *v5;
  void *v6;
  void *v7;
  SBHIconManager *v8;
  SBHReusableViewMap *homescreenIconAccessoryViewMap;
  SBHReusableViewMap *homescreenIconLabelAccessoryViewMap;
  SBHReusableViewMap *homescreenIconImageViewMap;
  SBIconLabelImageCache *labelImageCache;
  SBFolderIconImageCache *folderIconImageCache;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  _QWORD v19[5];

  v5 = (SBHIconModel *)a3;
  if (self->_iconModel != v5)
  {
    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "removeObserver:name:object:", self, CFSTR("SBIconModelWillReloadIconsNotification"), self->_iconModel);
    objc_msgSend(v6, "removeObserver:name:object:", self, CFSTR("SBIconModelDidReloadIconsNotification"), self->_iconModel);
    objc_msgSend(v6, "removeObserver:name:object:", self, CFSTR("SBIconModelWillLayoutIconStateNotification"), self->_iconModel);
    objc_msgSend(v6, "removeObserver:name:object:", self, CFSTR("SBIconModelDidLayoutIconStateNotification"), self->_iconModel);
    objc_msgSend(v6, "removeObserver:name:object:", self);
    -[SBHIconManager _endObservingLeafIconsInModel:](self, "_endObservingLeafIconsInModel:", self->_iconModel);
    -[SBHIconModel rootFolder](self->_iconModel, "rootFolder");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "removeFolderObserver:", self);

    -[SBHIconModel delegate](self->_iconModel, "delegate");
    v8 = (SBHIconManager *)objc_claimAutoreleasedReturnValue();

    if (v8 == self)
      -[SBHIconModel setDelegate:](self->_iconModel, "setDelegate:", 0);
    -[SBHIconManager _prepareToResetRootIconLists](self, "_prepareToResetRootIconLists");
    homescreenIconAccessoryViewMap = self->_homescreenIconAccessoryViewMap;
    self->_homescreenIconAccessoryViewMap = 0;

    homescreenIconLabelAccessoryViewMap = self->_homescreenIconLabelAccessoryViewMap;
    self->_homescreenIconLabelAccessoryViewMap = 0;

    homescreenIconImageViewMap = self->_homescreenIconImageViewMap;
    self->_homescreenIconImageViewMap = 0;

    labelImageCache = self->_labelImageCache;
    self->_labelImageCache = 0;

    -[SBHIconManager resetAllIconImageCaches](self, "resetAllIconImageCaches");
    folderIconImageCache = self->_folderIconImageCache;
    self->_folderIconImageCache = 0;

    objc_storeStrong((id *)&self->_iconModel, a3);
    if (-[SBHIconManager ownsIconModel](self, "ownsIconModel"))
      -[SBHIconModel setDelegate:](self->_iconModel, "setDelegate:", self);
    objc_msgSend(v6, "addObserver:selector:name:object:", self, sel__iconModelWillReloadIcons_, CFSTR("SBIconModelWillReloadIconsNotification"), self->_iconModel);
    objc_msgSend(v6, "addObserver:selector:name:object:", self, sel__iconModelDidReloadIcons_, CFSTR("SBIconModelDidReloadIconsNotification"), self->_iconModel);
    objc_msgSend(v6, "addObserver:selector:name:object:", self, sel__iconModelWillLayout_, CFSTR("SBIconModelWillLayoutIconStateNotification"), self->_iconModel);
    objc_msgSend(v6, "addObserver:selector:name:object:", self, sel__iconModelDidLayout_, CFSTR("SBIconModelDidLayoutIconStateNotification"), self->_iconModel);
    objc_msgSend(v6, "addObserver:selector:name:object:", self, sel__iconVisibilityChanged_, CFSTR("SBIconModelVisibilityDidChangeNotification"), self->_iconModel);
    -[SBHIconModel layoutIfNeeded](self->_iconModel, "layoutIfNeeded");
    -[SBHIconModel rootFolder](self->_iconModel, "rootFolder");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager setRootFolder:](self, "setRootFolder:", v14);
    -[SBHIconManager _rootFolderForRootViewControllerForRootFolder:](self, "_rootFolderForRootViewControllerForRootFolder:", v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager rootViewController](self, "rootViewController");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "setFolder:", v15);

    objc_msgSend(v6, "postNotificationName:object:", CFSTR("SBHIconManagerIconModelDidChange"), self);
    -[SBHIconManager _beginObservingLeafIconsInModel:](self, "_beginObservingLeafIconsInModel:", self->_iconModel);
    v17 = (void *)*MEMORY[0x1E0DC4730];
    v19[0] = MEMORY[0x1E0C809B0];
    v19[1] = 3221225472;
    v19[2] = __31__SBHIconManager_setIconModel___block_invoke;
    v19[3] = &unk_1E8D84C50;
    v19[4] = self;
    objc_msgSend(v17, "_performBlockAfterCATransactionCommits:", v19);
    -[SBHIconManager noteRootFolderDidMutate](self, "noteRootFolderDidMutate");
    -[SBHIconManager addWidgetSheetConfigurationManager](self, "addWidgetSheetConfigurationManager");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "setIconModel:", v5);

  }
}

uint64_t __31__SBHIconManager_setIconModel___block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_precacheDataForRootIcons");
}

- (void)setRootFolder:(id)a3
{
  SBRootFolder *v5;
  SBRootFolder *rootFolder;
  SBRootFolder **p_rootFolder;
  SBHIconManager *v8;
  SBHIconManager *v9;
  SBRootFolder *v10;

  v5 = (SBRootFolder *)a3;
  rootFolder = self->_rootFolder;
  if (rootFolder != v5)
  {
    v10 = v5;
    p_rootFolder = &self->_rootFolder;
    -[SBRootFolder delegate](rootFolder, "delegate");
    v8 = (SBHIconManager *)objc_claimAutoreleasedReturnValue();

    if (v8 == self)
      -[SBRootFolder setDelegate:](*p_rootFolder, "setDelegate:", 0);
    -[SBFolder removeFolderObserver:](self->_rootFolder, "removeFolderObserver:", self);
    -[SBFolder badgeBehaviorProvider](self->_rootFolder, "badgeBehaviorProvider");
    v9 = (SBHIconManager *)objc_claimAutoreleasedReturnValue();

    if (v9 == self)
      -[SBFolder setBadgeBehaviorProvider:](*p_rootFolder, "setBadgeBehaviorProvider:", 0);
    objc_storeStrong((id *)&self->_rootFolder, a3);
    if (-[SBHIconManager ownsIconModel](self, "ownsIconModel"))
    {
      -[SBRootFolder setDelegate:](self->_rootFolder, "setDelegate:", self);
      -[SBFolder setBadgeBehaviorProvider:](self->_rootFolder, "setBadgeBehaviorProvider:", self);
    }
    -[SBFolder addFolderObserver:](self->_rootFolder, "addFolderObserver:", self);
    v5 = v10;
  }

}

- (BOOL)relayout
{
  _BOOL4 v3;
  NSObject *v4;
  void *v5;

  v3 = -[SBHIconManager hasAnimatingFolder](self, "hasAnimatingFolder");
  if (v3)
  {
    -[SBHIconManager setNeedsRelayout:](self, "setNeedsRelayout:", 1);
    SBLogCommon();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      -[SBHIconManager relayout].cold.1();

  }
  else
  {
    -[SBHIconManager iconModel](self, "iconModel");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "layout");

    -[SBHIconManager setNeedsRelayout:](self, "setNeedsRelayout:", 0);
  }
  return !v3;
}

- (id)iconLocationForPrecachingImages
{
  return CFSTR("SBIconLocationRoot");
}

+ (id)defaultIconLocationForListsWithNonDefaultSizedIcons
{
  return CFSTR("SBIconLocationRootWithWidgets");
}

- (id)iconLocationForListsWithNonDefaultSizedIcons
{
  void *v2;
  __CFString *v3;
  void *v4;
  void *v5;
  int v6;
  int v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  _BOOL4 v24;
  __CFString *v25;
  __CFString *v29;

  -[SBHIconManager listLayoutProvider](self, "listLayoutProvider");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend((id)objc_opt_class(), "defaultIconLocationForListsWithNonDefaultSizedIcons");
  v3 = (__CFString *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "layoutForIconLocation:", CFSTR("SBIconLocationRoot"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "layoutForIconLocation:", v3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = SBHIconListLayoutListGridSize(v4, 1);
  v7 = SBHIconListLayoutListGridSize(v5, 1);
  objc_msgSend(v4, "layoutInsetsForOrientation:", 1);
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;
  objc_msgSend(v5, "layoutInsetsForOrientation:", 1);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v24 = SBHIconGridSizeEqualToIconGridSize(v6, v7);
  v25 = v3;
  if (v24)
  {
    if (v13 == v21 && v15 == v23 && v9 == v17 && v11 == v19)
      v25 = CFSTR("SBIconLocationRoot");
    else
      v25 = v3;
  }
  v29 = v25;

  return v29;
}

- (Class)iconViewClass
{
  void *v3;
  char v4;
  Class subclassIconViewClass;
  void *v6;
  objc_class *v7;
  id v8;
  void *v9;
  void *v10;

  objc_opt_self();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = -[SBHIconManager isMemberOfClass:](self, "isMemberOfClass:", v3);

  if ((v4 & 1) != 0)
    goto LABEL_2;
  subclassIconViewClass = self->_subclassIconViewClass;
  if (!subclassIconViewClass)
  {
    objc_opt_self();
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[SBHIconManager controllerClassForFolderClass:](self, "controllerClassForFolderClass:", v6);

    v8 = objc_alloc((Class)-[objc_class listViewClass](v7, "listViewClass"));
    -[SBHIconManager listLayoutProvider](self, "listLayoutProvider");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = (void *)objc_msgSend(v8, "initWithModel:layoutProvider:iconLocation:orientation:iconViewProvider:", 0, v9, CFSTR("SBIconLocationFolder"), 1, 0);

    self->_subclassIconViewClass = (Class)objc_msgSend(v10, "baseIconViewClass");
    subclassIconViewClass = self->_subclassIconViewClass;
    if (!subclassIconViewClass)
LABEL_2:
      subclassIconViewClass = (Class)(id)objc_opt_self();
  }
  return subclassIconViewClass;
}

- (id)cachingImageStyleConfiguration
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;

  -[SBHIconManager rootViewController](self, "rootViewController");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "traitCollection");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "sbh_iconImageStyleConfiguration");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v5)
  {
    -[SBHIconManager _fetchCurrentStyleConfiguration](self, "_fetchCurrentStyleConfiguration");
    v6 = objc_claimAutoreleasedReturnValue();
    if (!v6
      || (v7 = (void *)v6,
          +[SBHIconImageStyleConfiguration styleConfigurationWithHomeScreenConfiguration:](SBHIconImageStyleConfiguration, "styleConfigurationWithHomeScreenConfiguration:", v6), v5 = (void *)objc_claimAutoreleasedReturnValue(), v7, !v5))
    {
      +[SBHIconImageStyleConfiguration defaultStyleConfiguration](SBHIconImageStyleConfiguration, "defaultStyleConfiguration");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
    }
  }

  return v5;
}

- (id)cachingImageAppearances
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  const __CFString *v10;
  void *v11;
  void *v12;

  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99E08]), "initWithCapacity:", 2);
  -[SBHIconManager rootViewController](self, "rootViewController");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "traitCollection");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5
    || (v6 = (void *)MEMORY[0x1E0DC3E88],
        -[SBHIconManager _fetchCurrentStyleConfiguration](self, "_fetchCurrentStyleConfiguration"),
        v7 = (void *)objc_claimAutoreleasedReturnValue(),
        objc_msgSend(v6, "sbh_traitCollectionWithHomeScreenStyleConfiguration:", v7),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        v7,
        v5))
  {
    if (objc_msgSend(v5, "sbh_automaticallyChangesWithUserInterfaceStyle"))
    {
      if (objc_msgSend(v5, "userInterfaceStyle") == 2)
      {
        +[SBHIconImageAppearance darkAppearance](SBHIconImageAppearance, "darkAppearance");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v3, "setObject:forKey:", v8, CFSTR("primary"));

        +[SBHIconImageAppearance lightAppearance](SBHIconImageAppearance, "lightAppearance");
      }
      else
      {
        +[SBHIconImageAppearance lightAppearance](SBHIconImageAppearance, "lightAppearance");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v3, "setObject:forKey:", v11, CFSTR("primary"));

        +[SBHIconImageAppearance darkAppearance](SBHIconImageAppearance, "darkAppearance");
      }
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = CFSTR("secondary");
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0DC3E88], "sbh_iconImageAppearanceFromTraitCollection:", v5);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = CFSTR("primary");
    }
    objc_msgSend(v3, "setObject:forKey:", v9, v10);

  }
  if (!objc_msgSend(v3, "count"))
  {
    +[SBHIconImageAppearance defaultAppearance](SBHIconImageAppearance, "defaultAppearance");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "setObject:forKey:", v12, CFSTR("primary"));

  }
  return v3;
}

- (id)prioritizedCachingImageAppearances
{
  void *v2;
  void *v3;
  id v4;
  _QWORD v6[4];
  id v7;

  -[SBHIconManager cachingImageAppearances](self, "cachingImageAppearances");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99E08]), "initWithCapacity:", 2);
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __52__SBHIconManager_prioritizedCachingImageAppearances__block_invoke;
  v6[3] = &unk_1E8D8C460;
  v4 = v3;
  v7 = v4;
  objc_msgSend(v2, "enumerateKeysAndObjectsUsingBlock:", v6);

  return v4;
}

void __52__SBHIconManager_prioritizedCachingImageAppearances__block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  uint64_t v6;
  void *v7;
  id v8;

  v5 = a3;
  if (objc_msgSend(a2, "isEqualToString:", CFSTR("primary")))
    v6 = 3;
  else
    v6 = 1;
  v7 = *(void **)(a1 + 32);
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", v6);
  v8 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setObject:forKey:", v8, v5);

}

+ (id)prioritizedCachingImageAppearancesForIconImageStyleConfiguration:(id)a3 priority:(int64_t)a4
{
  objc_class *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  v5 = (objc_class *)MEMORY[0x1E0C99E08];
  v6 = a3;
  v7 = (void *)objc_msgSend([v5 alloc], "initWithCapacity:", 2);
  objc_msgSend(v6, "iconImageAppearanceWithUserInterfaceStyle:", 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", a4);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setObject:forKey:", v9, v8);

  v10 = objc_msgSend(v6, "configurationType");
  if (!v10)
  {
    v11 = objc_msgSend(v8, "appearanceType");
    if (v11 == 1)
    {
      +[SBHIconImageAppearance lightAppearance](SBHIconImageAppearance, "lightAppearance");
      v12 = objc_claimAutoreleasedReturnValue();
    }
    else
    {
      if (v11)
        goto LABEL_8;
      +[SBHIconImageAppearance darkAppearance](SBHIconImageAppearance, "darkAppearance");
      v12 = objc_claimAutoreleasedReturnValue();
    }
    v13 = (void *)v12;
    if (v12)
    {
      objc_msgSend(v7, "setObject:forKey:", &unk_1E8E16DB0, v12);

    }
  }
LABEL_8:

  return v7;
}

- (void)_precacheDataForRootIcons
{
  NSObject *v3;
  double Current;
  NSObject *v5;
  double v6;
  NSObject *v7;
  NSObject *v8;
  int v9;
  double v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  SBLogWidgets();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_signpost_enabled(v3))
  {
    LOWORD(v9) = 0;
    _os_signpost_emit_with_name_impl(&dword_1CFEF3000, v3, OS_SIGNPOST_INTERVAL_BEGIN, 0xEEEEB0B5B2B2EEEELL, "SBH_HOME_PRECACHE", " enableTelemetry=YES ", (uint8_t *)&v9, 2u);
  }

  Current = CFAbsoluteTimeGetCurrent();
  SBLogIcon();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v9) = 0;
    _os_log_impl(&dword_1CFEF3000, v5, OS_LOG_TYPE_DEFAULT, "Preparing to begin precaching images and labels for root icons", (uint8_t *)&v9, 2u);
  }

  -[SBHIconManager _precacheLabelsForRootIcons](self, "_precacheLabelsForRootIcons");
  -[SBHIconManager _precacheIntentsForRootIcons](self, "_precacheIntentsForRootIcons");
  -[SBHIconManager _precacheImagesForRootIcons](self, "_precacheImagesForRootIcons");
  v6 = CFAbsoluteTimeGetCurrent();
  SBLogIcon();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    v9 = 134217984;
    v10 = v6 - Current;
    _os_log_impl(&dword_1CFEF3000, v7, OS_LOG_TYPE_DEFAULT, "Finished starting background precache for images and labels in %fs", (uint8_t *)&v9, 0xCu);
  }

  SBLogWidgets();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_signpost_enabled(v8))
  {
    LOWORD(v9) = 0;
    _os_signpost_emit_with_name_impl(&dword_1CFEF3000, v8, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "SBH_HOME_PRECACHE", " enableTelemetry=YES ", (uint8_t *)&v9, 2u);
  }

}

- (void)_precacheLabelsForRootIcons
{
  void *v3;
  void *v4;
  uint64_t v5;
  double Current;
  NSObject *v7;
  os_signpost_id_t v8;
  NSObject *v9;
  NSObject *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  SBIconLabelImageParametersBuilder *v21;
  uint64_t v22;
  void (**v23)(void *, void *);
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  unint64_t v28;
  uint32_t v29;
  unint64_t v30;
  void *v31;
  void *v32;
  unint64_t v33;
  unint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t i;
  void *v40;
  const __CFString *v41;
  int v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  NSObject *v47;
  NSObject *v48;
  double v49;
  NSObject *v50;
  unint64_t precacheLabelsGeneration;
  os_signpost_id_t spid;
  SBIconLabelImageParametersBuilder *v53;
  id v54;
  void *v55;
  void *v56;
  unint64_t v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  _QWORD v64[4];
  id v65;
  void (**v66)(void *, void *);
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  _QWORD aBlock[4];
  SBIconLabelImageParametersBuilder *v72;
  id v73;
  uint8_t buf[4];
  double v75;
  __int16 v76;
  int v77;
  __int16 v78;
  _BOOL4 v79;
  __int16 v80;
  const __CFString *v81;
  __int16 v82;
  unint64_t v83;
  _BYTE v84[128];
  uint64_t v85;

  v85 = *MEMORY[0x1E0C80C00];
  -[SBHIconManager rootFolder](self, "rootFolder");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager currentRootIconList](self, "currentRootIconList");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "model");
  v5 = objc_claimAutoreleasedReturnValue();

  if (!v5)
  {
    objc_msgSend(v3, "firstList");
    v5 = objc_claimAutoreleasedReturnValue();
    if (!v5)
      goto LABEL_43;
  }
  v63 = v3;
  objc_msgSend((id)*MEMORY[0x1E0DC4730], "preferredContentSizeCategory");
  v62 = (void *)objc_claimAutoreleasedReturnValue();
  Current = CFAbsoluteTimeGetCurrent();
  SBLogLabels();
  v7 = objc_claimAutoreleasedReturnValue();
  v8 = os_signpost_id_generate(v7);

  SBLogLabels();
  v9 = objc_claimAutoreleasedReturnValue();
  v10 = v9;
  v57 = v8 - 1;
  if (v8 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v9))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1CFEF3000, v10, OS_SIGNPOST_INTERVAL_BEGIN, v8, "_precacheLabelsForRootIcons", ", buf, 2u);
  }
  v11 = (void *)v5;
  spid = v8;

  -[SBHIconManager iconImageCache](self, "iconImageCache");
  v12 = objc_claimAutoreleasedReturnValue();
  -[SBHIconManager folderIconImageCache](self, "folderIconImageCache");
  v13 = objc_claimAutoreleasedReturnValue();
  -[SBHIconManager iconLabelImageCache](self, "iconLabelImageCache");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager iconLocationForPrecachingImages](self, "iconLocationForPrecachingImages");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager legibilitySettings](self, "legibilitySettings");
  v16 = objc_claimAutoreleasedReturnValue();
  if (!v16)
  {
    objc_msgSend(MEMORY[0x1E0DC4270], "sharedInstanceForStyle:", 1);
    v16 = objc_claimAutoreleasedReturnValue();
  }
  v17 = objc_alloc(-[SBHIconManager iconViewClass](self, "iconViewClass"));
  -[SBHIconManager listLayoutProvider](self, "listLayoutProvider");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = (void *)objc_msgSend(v17, "initWithConfigurationOptions:listLayoutProvider:", 212, v18);

  objc_msgSend(v19, "setDelegate:", self);
  objc_msgSend(v19, "setIconImageCache:", v12);
  objc_msgSend(v19, "setFolderIconImageCache:", v13);
  objc_msgSend(v19, "setLocation:", v15);
  objc_msgSend(v19, "setLegibilitySettings:", v16);
  +[SBIconLabelViewSimpleFactory sharedInstance](SBIconLabelViewSimpleFactory, "sharedInstance");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "setIconLabelViewFactory:", v20);

  -[SBHIconManager cachingImageAppearances](self, "cachingImageAppearances");
  v56 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v56, "objectForKey:", CFSTR("primary"));
  v55 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "setOverrideIconImageAppearance:");
  v21 = objc_alloc_init(SBIconLabelImageParametersBuilder);
  v58 = v19;
  objc_msgSend(v19, "configureLabelImageParametersBuilder:", v21);
  v22 = MEMORY[0x1E0C809B0];
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = __45__SBHIconManager__precacheLabelsForRootIcons__block_invoke;
  aBlock[3] = &unk_1E8D8C488;
  v53 = v21;
  v72 = v53;
  v54 = v15;
  v73 = v54;
  v23 = (void (**)(void *, void *))_Block_copy(aBlock);
  v60 = (void *)v13;
  v61 = (void *)v12;
  v59 = (void *)v16;
  if (objc_msgSend(v14, "numberOfCachedImages"))
  {
    v24 = v11;
    if (self->_precacheLabelsGeneration)
    {
      v25 = (void *)objc_opt_new();
      objc_msgSend(v63, "icons");
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      v27 = (void *)objc_msgSend(v26, "mutableCopy");

      v28 = objc_msgSend(v27, "count");
      v29 = v28;
      if (v28 >= 5)
        v30 = 5;
      else
        v30 = v28;
      if (objc_msgSend(v25, "count") < v30)
      {
        do
        {
          if (!objc_msgSend(v27, "count"))
            break;
          objc_msgSend(v27, "objectAtIndex:", arc4random_uniform(v29));
          v31 = (void *)objc_claimAutoreleasedReturnValue();
          v23[2](v23, v31);
          v32 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v25, "bs_safeAddObject:", v32);
          objc_msgSend(v27, "removeObject:", v31);
          v33 = objc_msgSend(v27, "count");
          v29 = v33;
          v34 = v33 >= 5 ? 5 : v33;

        }
        while (objc_msgSend(v25, "count") < v34);
      }
      v69 = 0u;
      v70 = 0u;
      v67 = 0u;
      v68 = 0u;
      v35 = v25;
      v36 = objc_msgSend(v35, "countByEnumeratingWithState:objects:count:", &v67, v84, 16);
      v24 = v11;
      if (v36)
      {
        v37 = v36;
        v38 = *(_QWORD *)v68;
        while (2)
        {
          for (i = 0; i != v37; ++i)
          {
            if (*(_QWORD *)v68 != v38)
              objc_enumerationMutation(v35);
            objc_msgSend(v14, "cachedLabelImageForParameters:", *(_QWORD *)(*((_QWORD *)&v67 + 1) + 8 * i));
            v40 = (void *)objc_claimAutoreleasedReturnValue();

            if (!v40)
            {

              v41 = CFSTR("cache fault detected");
              v3 = v63;
              v22 = MEMORY[0x1E0C809B0];
              goto LABEL_32;
            }
          }
          v37 = objc_msgSend(v35, "countByEnumeratingWithState:objects:count:", &v67, v84, 16);
          if (v37)
            continue;
          break;
        }
      }

      v41 = 0;
      v42 = 0;
      v43 = 0.0;
      v3 = v63;
      goto LABEL_37;
    }
    v41 = CFSTR("first run");
  }
  else
  {
    v41 = CFSTR("no images currently cached; def need to rebuild");
    v24 = v11;
  }
  v3 = v63;
LABEL_32:
  v44 = objc_msgSend(v14, "numberOfCacheMisses");
  v64[0] = v22;
  v64[1] = 3221225472;
  v64[2] = __45__SBHIconManager__precacheLabelsForRootIcons__block_invoke_2;
  v64[3] = &unk_1E8D8C4B0;
  v35 = (id)objc_opt_new();
  v65 = v35;
  v66 = v23;
  objc_msgSend(v3, "enumerateAllIconsWithOptions:usingBlock:", 1, v64);
  objc_msgSend(v14, "ensureLabelImagesAreCached:", v35);
  v45 = objc_msgSend(v14, "numberOfCacheMisses");
  *(_QWORD *)&v43 = v45 - v44;
  if (v45 != v44)
  {
    SBLogLabels();
    v46 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134217984;
      v75 = v43;
      _os_log_impl(&dword_1CFEF3000, v46, OS_LOG_TYPE_DEFAULT, "_precacheLabelsForRootIcons: new cache hits: %lu", buf, 0xCu);
    }

  }
  v42 = 1;
  v27 = v65;
LABEL_37:

  SBLogLabels();
  v47 = objc_claimAutoreleasedReturnValue();
  v48 = v47;
  if (v57 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v47))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1CFEF3000, v48, OS_SIGNPOST_INTERVAL_END, spid, "_precacheLabelsForRootIcons", ", buf, 2u);
  }

  v49 = CFAbsoluteTimeGetCurrent();
  SBLogLabels();
  v50 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v50, OS_LOG_TYPE_DEFAULT))
  {
    precacheLabelsGeneration = self->_precacheLabelsGeneration;
    *(_DWORD *)buf = 134219010;
    v75 = v49 - Current;
    v76 = 1024;
    v77 = v42;
    v78 = 1024;
    v79 = *(_QWORD *)&v43 != 0;
    v80 = 2114;
    v81 = v41;
    v82 = 2048;
    v83 = precacheLabelsGeneration;
    _os_log_impl(&dword_1CFEF3000, v50, OS_LOG_TYPE_DEFAULT, "_precacheLabelsForRootIcons: %f; should prewarm? %{BOOL}u did prewarm? %{BOOL}u reason: %{public}@; generation %lu",
      buf,
      0x2Cu);
  }

  ++self->_precacheLabelsGeneration;
  -[SBHIconManager setPrecachedContentSizeCategory:](self, "setPrecachedContentSizeCategory:", v62);

LABEL_43:
}

uint64_t __45__SBHIconManager__precacheLabelsForRootIcons__block_invoke(uint64_t a1, uint64_t a2)
{
  objc_msgSend(*(id *)(a1 + 32), "setIcon:forLocation:", a2, *(_QWORD *)(a1 + 40));
  return objc_msgSend(*(id *)(a1 + 32), "buildParameters");
}

void __45__SBHIconManager__precacheLabelsForRootIcons__block_invoke_2(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  if ((objc_msgSend(v5, "isWidgetIcon") & 1) == 0)
  {
    v3 = *(void **)(a1 + 32);
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "bs_safeAddObject:", v4);

  }
}

- (void)_precacheIntentsForRootIcons
{
  id v3;
  _QWORD v4[5];

  -[SBHIconManager rootFolder](self, "rootFolder");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __46__SBHIconManager__precacheIntentsForRootIcons__block_invoke;
  v4[3] = &unk_1E8D85658;
  v4[4] = self;
  objc_msgSend(v3, "enumerateAllIconsWithOptions:usingBlock:", 1, v4);

}

void __46__SBHIconManager__precacheIntentsForRootIcons__block_invoke(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (objc_msgSend(v3, "isWidgetIcon"))
  {
    v4 = v3;
    v11 = 0u;
    v12 = 0u;
    v13 = 0u;
    v14 = 0u;
    objc_msgSend(v4, "iconDataSources", 0);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)v12;
      do
      {
        v9 = 0;
        do
        {
          if (*(_QWORD *)v12 != v8)
            objc_enumerationMutation(v5);
          v10 = (id)objc_msgSend(*(id *)(a1 + 32), "_intentForDataSource:inIcon:creatingIfNecessary:", *(_QWORD *)(*((_QWORD *)&v11 + 1) + 8 * v9++), v4, 1);
        }
        while (v7 != v9);
        v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
      }
      while (v7);
    }

  }
}

- (void)_precacheImagesForRootIcons
{
  void *v3;
  uint64_t v4;
  NSObject *v5;
  SBIconLabelImageCache *labelImageCache;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  NSMutableSet *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  NSObject *v29;
  id v30;
  void *v31;
  void *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _QWORD v37[4];
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[6];
  uint8_t v44[128];
  uint8_t buf[4];
  void *v46;
  __int16 v47;
  uint64_t v48;
  __int16 v49;
  SBIconLabelImageCache *v50;
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  -[SBHIconManager iconImageCache](self, "iconImageCache");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager folderIconImageCache](self, "folderIconImageCache");
  v4 = objc_claimAutoreleasedReturnValue();
  SBLogIcon();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    labelImageCache = self->_labelImageCache;
    *(_DWORD *)buf = 134218496;
    v46 = v3;
    v47 = 2048;
    v48 = v4;
    v49 = 2048;
    v50 = labelImageCache;
    _os_log_impl(&dword_1CFEF3000, v5, OS_LOG_TYPE_DEFAULT, "Precaching images for root icons. SBHIconImageCache: %p, SBFolderIconImageCache: %p, SBIconLabelImageCache: %p", buf, 0x20u);
  }
  v32 = (void *)v4;

  -[SBHIconManager iconPrecachingCancellation](self, "iconPrecachingCancellation");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "cancel");

  -[SBHIconManager setIconPrecachingCancellation:](self, "setIconPrecachingCancellation:", 0);
  objc_msgSend(v3, "buildCacheRequestWithReason:", CFSTR("precacheDataForRootIcons"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager cachingImageStyleConfiguration](self, "cachingImageStyleConfiguration");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager addAllIconsToCacheRequestBuilder:iconImageStyleConfiguration:highestPriority:lowerPriority:cacheOptions:](self, "addAllIconsToCacheRequestBuilder:iconImageStyleConfiguration:highestPriority:lowerPriority:cacheOptions:", v8, v9, 2, 1, 1);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend(v10, "count");
  v12 = MEMORY[0x1E0C809B0];
  v43[0] = MEMORY[0x1E0C809B0];
  v43[1] = 3221225472;
  v43[2] = __45__SBHIconManager__precacheImagesForRootIcons__block_invoke;
  v43[3] = &unk_1E8D8C4D8;
  v43[4] = self;
  v43[5] = v11;
  objc_msgSend(v8, "finalizeRequestWithCompletionHandler:", v43);
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager setIconPrecachingCancellation:](self, "setIconPrecachingCancellation:");
  -[SBHIconManager prioritizedCachingImageAppearances](self, "prioritizedCachingImageAppearances");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "iconImageInfo");
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v37[0] = v12;
  v37[1] = 3221225472;
  v37[2] = __45__SBHIconManager__precacheImagesForRootIcons__block_invoke_129;
  v37[3] = &unk_1E8D8C500;
  v30 = v3;
  v38 = v30;
  v39 = v15;
  v40 = v17;
  v41 = v19;
  v42 = v21;
  objc_msgSend(v13, "enumerateKeysAndObjectsUsingBlock:", v37);
  objc_msgSend((id)objc_opt_class(), "prioritizedCachingImageAppearancesForIconImageStyleConfiguration:priority:", v9, 1);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v33 = 0u;
  v34 = 0u;
  v35 = 0u;
  v36 = 0u;
  v23 = self->_additionalPrecachingIconImageCaches;
  v24 = -[NSMutableSet countByEnumeratingWithState:objects:count:](v23, "countByEnumeratingWithState:objects:count:", &v33, v44, 16);
  if (v24)
  {
    v25 = v24;
    v26 = *(_QWORD *)v34;
    do
    {
      v27 = 0;
      do
      {
        if (*(_QWORD *)v34 != v26)
          objc_enumerationMutation(v23);
        v28 = (id)objc_msgSend(*(id *)(*((_QWORD *)&v33 + 1) + 8 * v27++), "cacheImagesForIcons:prioritizedImageAppearances:reason:options:completionHandler:", v10, v22, CFSTR("precacheDataForRootIcons (additional caches)"), 0, 0);
      }
      while (v25 != v27);
      v25 = -[NSMutableSet countByEnumeratingWithState:objects:count:](v23, "countByEnumeratingWithState:objects:count:", &v33, v44, 16);
    }
    while (v25);
  }

  SBLogIcon();
  v29 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_1CFEF3000, v29, OS_LOG_TYPE_DEFAULT, "Finished starting background precache for images", buf, 2u);
  }

}

void __45__SBHIconManager__precacheImagesForRootIcons__block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  NSObject *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  int v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(*(id *)(a1 + 32), "iconPrecachingCancellation");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "identifier");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "requestIdentifier");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = BSEqualObjects();

  if (v7)
    objc_msgSend(*(id *)(a1 + 32), "setIconPrecachingCancellation:", 0);
  objc_msgSend(v3, "elapsedTime");
  v9 = v8;
  v10 = objc_msgSend(v3, "isFinished");
  SBLogIcon();
  v11 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    v12 = *(_QWORD *)(a1 + 40);
    v13 = 134218496;
    v14 = v12;
    v15 = 2048;
    v16 = v9;
    v17 = 1024;
    v18 = v10;
    _os_log_impl(&dword_1CFEF3000, v11, OS_LOG_TYPE_DEFAULT, "Finished background precaching %lu root icons in %f seconds. Finished: %{BOOL}u", (uint8_t *)&v13, 0x1Cu);
  }

}

void __45__SBHIconManager__precacheImagesForRootIcons__block_invoke_129(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  id v5;

  v3 = *(void **)(a1 + 32);
  v5 = a2;
  v4 = (id)objc_msgSend(v3, "genericImageWithImageAppearance:options:", v5, 0);
  +[SBHClockApplicationIconImageView precacheDataWithIconImageInfo:appearance:](SBHClockApplicationIconImageView, "precacheDataWithIconImageInfo:appearance:", v5, *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));

}

- (id)addAllIconsToCacheRequestBuilder:(id)a3 iconImageStyleConfiguration:(id)a4 highestPriority:(int64_t)a5 lowerPriority:(int64_t)a6 cacheOptions:(unint64_t)a7
{
  id v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  void *v31;
  void *v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  void *v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  _QWORD v46[4];
  id v47;
  id v48;
  id v49;
  id v50;
  _QWORD *v51;
  unint64_t v52;
  _QWORD v53[5];

  v11 = a3;
  v12 = a4;
  -[SBHIconManager rootFolder](self, "rootFolder");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  objc_msgSend((id)objc_opt_class(), "prioritizedCachingImageAppearancesForIconImageStyleConfiguration:priority:", v12, a5);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend((id)objc_opt_class(), "prioritizedCachingImageAppearancesForIconImageStyleConfiguration:priority:", v12, a6);
  v44 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager currentRootIconList](self, "currentRootIconList");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "model");
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  if (v17 && objc_msgSend(v13, "indexOfList:", v17) != 0x7FFFFFFFFFFFFFFFLL
    || (objc_msgSend(v13, "firstList"),
        v18 = objc_claimAutoreleasedReturnValue(),
        v17,
        (v17 = (void *)v18) != 0))
  {
    v42 = v12;
    objc_msgSend(v13, "dock");
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v39, "icons");
    v19 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "addIcons:prioritizedImageAppearances:options:", v19, v15, a7);
    v38 = (void *)v19;
    objc_msgSend(v14, "addObjectsFromArray:", v19);
    v53[0] = 0;
    v53[1] = v53;
    v53[2] = 0x2020000000;
    v53[3] = 3;
    v46[0] = MEMORY[0x1E0C809B0];
    v46[1] = 3221225472;
    v46[2] = __122__SBHIconManager_addAllIconsToCacheRequestBuilder_iconImageStyleConfiguration_highestPriority_lowerPriority_cacheOptions___block_invoke;
    v46[3] = &unk_1E8D8C550;
    v51 = v53;
    v40 = v15;
    v20 = v15;
    v47 = v20;
    v21 = v44;
    v48 = v21;
    v43 = v11;
    v22 = v11;
    v49 = v22;
    v52 = a7;
    v41 = v14;
    v23 = v14;
    v50 = v23;
    objc_msgSend(v13, "enumerateListsNearestToList:usingBlock:", v17, v46);
    -[SBHIconManager _libraryViewControllers](self, "_libraryViewControllers");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v24, "firstObject");
    v25 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v25, "podTopLevelDisplayedIcons");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    v27 = v26;
    if (v26)
    {
      objc_msgSend(v26, "sbh_arrayByRemovingObjectsFromArray:", v23);
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      if ((unint64_t)objc_msgSend(v13, "listCount") <= 2)
        v29 = v21;
      else
        v29 = v20;
      v30 = v29;
      objc_msgSend(v22, "addIcons:prioritizedImageAppearances:options:", v28, v30, a7);

    }
    objc_msgSend(v13, "ignoredList");
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v31, "icons");
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    v33 = v32;
    if (v27)
    {
      objc_msgSend(v32, "sbh_arrayByRemovingObjectsFromArray:", v27);
      v34 = (id)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v34 = v32;
    }
    v35 = v34;
    objc_msgSend(v22, "addIcons:prioritizedImageAppearances:options:", v34, v21, a7);
    objc_msgSend(v23, "addObjectsFromArray:", v33);
    v36 = v23;

    _Block_object_dispose(v53, 8);
    v12 = v42;
    v11 = v43;
    v15 = v40;
    v14 = v41;
  }

  return v14;
}

void __122__SBHIconManager_addAllIconsToCacheRequestBuilder_iconImageStyleConfiguration_highestPriority_lowerPriority_cacheOptions___block_invoke(uint64_t a1, void *a2)
{
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[4];
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _BYTE v27[128];
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v4 = 32;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24))
    v4 = 40;
  v5 = *(id *)(a1 + v4);
  objc_msgSend(a2, "icons");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v23, v27, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v24;
    v10 = MEMORY[0x1E0C809B0];
    do
    {
      for (i = 0; i != v8; ++i)
      {
        if (*(_QWORD *)v24 != v9)
          objc_enumerationMutation(v6);
        v12 = *(void **)(*((_QWORD *)&v23 + 1) + 8 * i);
        if (objc_msgSend(v12, "isFolderIcon"))
        {
          objc_msgSend(v12, "folder");
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          v18[0] = v10;
          v18[1] = 3221225472;
          v18[2] = __122__SBHIconManager_addAllIconsToCacheRequestBuilder_iconImageStyleConfiguration_highestPriority_lowerPriority_cacheOptions___block_invoke_2;
          v18[3] = &unk_1E8D8C528;
          v19 = *(id *)(a1 + 32);
          v20 = *(id *)(a1 + 40);
          v14 = *(id *)(a1 + 48);
          v15 = *(_QWORD *)(a1 + 72);
          v21 = v14;
          v22 = v15;
          objc_msgSend(v13, "enumerateListsUsingBlock:", v18);

        }
        else
        {
          objc_msgSend(*(id *)(a1 + 48), "addIcon:prioritizedImageAppearances:options:", v12, v5, *(_QWORD *)(a1 + 72));
        }
      }
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v23, v27, 16);
    }
    while (v8);
  }
  v16 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
  v17 = *(_QWORD *)(v16 + 24);
  if (v17)
    *(_QWORD *)(v16 + 24) = v17 - 1;
  objc_msgSend(*(id *)(a1 + 56), "addObjectsFromArray:", v6);

}

void __122__SBHIconManager_addAllIconsToCacheRequestBuilder_iconImageStyleConfiguration_highestPriority_lowerPriority_cacheOptions___block_invoke_2(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  id v7;

  objc_msgSend(a2, "icons");
  v5 = objc_claimAutoreleasedReturnValue();
  v7 = (id)v5;
  v6 = 40;
  if (!a3)
    v6 = 32;
  objc_msgSend(*(id *)(a1 + 48), "addIcons:prioritizedImageAppearances:options:", v5, *(_QWORD *)(a1 + v6), *(_QWORD *)(a1 + 56));

}

- (void)addAdditionalIconImageCacheForPrecaching:(id)a3
{
  id v4;
  NSMutableSet *additionalPrecachingIconImageCaches;
  NSMutableSet *v6;
  NSMutableSet *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;

  v4 = a3;
  additionalPrecachingIconImageCaches = self->_additionalPrecachingIconImageCaches;
  v12 = v4;
  if (!additionalPrecachingIconImageCaches)
  {
    v6 = (NSMutableSet *)objc_alloc_init(MEMORY[0x1E0C99E20]);
    v7 = self->_additionalPrecachingIconImageCaches;
    self->_additionalPrecachingIconImageCaches = v6;

    v4 = v12;
    additionalPrecachingIconImageCaches = self->_additionalPrecachingIconImageCaches;
  }
  -[NSMutableSet addObject:](additionalPrecachingIconImageCaches, "addObject:", v4);
  -[SBHIconManager iconsToRecacheForImageAppearanceChange](self, "iconsToRecacheForImageAppearanceChange");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager prioritizedCachingImageAppearances](self, "prioritizedCachingImageAppearances");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "allKeys");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = (id)objc_msgSend(v12, "cacheImagesForIcons:imageAppearances:priority:reason:options:completionHandler:", v8, v10, 0, CFSTR("add additional icon image cache"), 0, 0);

}

- (id)iconsToRecacheForImageAppearanceChange
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  _QWORD v13[4];
  id v14;
  _QWORD v15[4];
  id v16;

  v3 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  -[SBHIconManager rootFolder](self, "rootFolder");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager currentRootIconList](self, "currentRootIconList");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "model");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (v6)
  {
    objc_msgSend(v4, "dock");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "icons");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "addObjectsFromArray:", v8);
    v15[0] = MEMORY[0x1E0C809B0];
    v15[1] = 3221225472;
    v15[2] = __56__SBHIconManager_iconsToRecacheForImageAppearanceChange__block_invoke;
    v15[3] = &unk_1E8D877F8;
    v9 = v3;
    v16 = v9;
    objc_msgSend(v4, "enumerateListsNearestToList:usingBlock:", v6, v15);
    objc_msgSend(v4, "ignoredList");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "icons");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "addObjectsFromArray:", v11);

  }
  else
  {
    v13[0] = MEMORY[0x1E0C809B0];
    v13[1] = 3221225472;
    v13[2] = __56__SBHIconManager_iconsToRecacheForImageAppearanceChange__block_invoke_2;
    v13[3] = &unk_1E8D85658;
    v14 = v3;
    objc_msgSend(v4, "enumerateAllIconsWithOptions:usingBlock:", 1, v13);
    v7 = v14;
  }

  return v3;
}

void __56__SBHIconManager_iconsToRecacheForImageAppearanceChange__block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a2, "icons");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v13;
    do
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v13 != v6)
          objc_enumerationMutation(v3);
        v8 = *(void **)(*((_QWORD *)&v12 + 1) + 8 * i);
        if (objc_msgSend(v8, "isFolderIcon"))
        {
          objc_msgSend(v8, "folder");
          v9 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v9, "firstList");
          v10 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v10, "icons");
          v11 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(*(id *)(a1 + 32), "addObjectsFromArray:", v11);

        }
        else
        {
          objc_msgSend(*(id *)(a1 + 32), "addObject:", v8);
        }
      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v5);
  }

}

uint64_t __56__SBHIconManager_iconsToRecacheForImageAppearanceChange__block_invoke_2(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "addObject:", a2);
}

- (id)visibleIconsToRecacheForImageAppearanceChange
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  _QWORD v14[4];
  id v15;
  _QWORD v16[4];
  id v17;

  v3 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  -[SBHIconManager rootFolder](self, "rootFolder");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "dock");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = MEMORY[0x1E0C809B0];
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 3221225472;
  v16[2] = __63__SBHIconManager_visibleIconsToRecacheForImageAppearanceChange__block_invoke;
  v16[3] = &unk_1E8D8A850;
  v7 = v3;
  v17 = v7;
  objc_msgSend(v5, "enumerateIconsUsingBlock:", v16);
  -[SBHIconManager currentRootIconList](self, "currentRootIconList");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "model");
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v14[0] = v6;
  v14[1] = 3221225472;
  v14[2] = __63__SBHIconManager_visibleIconsToRecacheForImageAppearanceChange__block_invoke_2;
  v14[3] = &unk_1E8D8A850;
  v10 = v7;
  v15 = v10;
  objc_msgSend(v9, "enumerateIconsUsingBlock:", v14);
  v11 = v15;
  v12 = v10;

  return v12;
}

uint64_t __63__SBHIconManager_visibleIconsToRecacheForImageAppearanceChange__block_invoke(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "addObject:", a2);
}

uint64_t __63__SBHIconManager_visibleIconsToRecacheForImageAppearanceChange__block_invoke_2(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "addObject:", a2);
}

- (void)recacheIconImageDataForRootIconsInBackgroundWithIconImageStyleConfiguration:(id)a3 cacheOptions:(unint64_t)a4
{
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  NSMutableSet *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _QWORD v26[4];
  id v27;
  SBHIconManager *v28;
  uint64_t v29;
  uint8_t v30[128];
  uint8_t buf[4];
  uint64_t v32;
  __int16 v33;
  id v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  -[SBHIconManager iconImageCache](self, "iconImageCache");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v21, "buildCacheRequestWithReason:", CFSTR("recacheIconImageDataForRootIconsInBackgroundWithImageAppearance"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager addAllIconsToCacheRequestBuilder:iconImageStyleConfiguration:highestPriority:lowerPriority:cacheOptions:](self, "addAllIconsToCacheRequestBuilder:iconImageStyleConfiguration:highestPriority:lowerPriority:cacheOptions:", v7, v6, 4, 2, a4);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v8, "count");
  SBLogIcon();
  v10 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134218242;
    v32 = v9;
    v33 = 2114;
    v34 = v6;
    _os_log_impl(&dword_1CFEF3000, v10, OS_LOG_TYPE_DEFAULT, "Starting background recaching of %lu icons with configuration %{public}@.", buf, 0x16u);
  }

  v26[0] = MEMORY[0x1E0C809B0];
  v26[1] = 3221225472;
  v26[2] = __107__SBHIconManager_recacheIconImageDataForRootIconsInBackgroundWithIconImageStyleConfiguration_cacheOptions___block_invoke;
  v26[3] = &unk_1E8D88960;
  v29 = v9;
  v11 = v6;
  v27 = v11;
  v28 = self;
  objc_msgSend(v7, "finalizeRequestWithCompletionHandler:", v26);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager iconImageRecachingRequestCancellation](self, "iconImageRecachingRequestCancellation");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "cancel");

  -[SBHIconManager setIconImageRecachingRequestCancellation:](self, "setIconImageRecachingRequestCancellation:", v12);
  objc_msgSend((id)objc_opt_class(), "prioritizedCachingImageAppearancesForIconImageStyleConfiguration:priority:", v11, 1);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v15 = self->_additionalPrecachingIconImageCaches;
  v16 = -[NSMutableSet countByEnumeratingWithState:objects:count:](v15, "countByEnumeratingWithState:objects:count:", &v22, v30, 16);
  if (v16)
  {
    v17 = v16;
    v18 = *(_QWORD *)v23;
    do
    {
      v19 = 0;
      do
      {
        if (*(_QWORD *)v23 != v18)
          objc_enumerationMutation(v15);
        v20 = (id)objc_msgSend(*(id *)(*((_QWORD *)&v22 + 1) + 8 * v19++), "cacheImagesForIcons:prioritizedImageAppearances:reason:options:completionHandler:", v8, v14, CFSTR("recacheIconImageDataForRootIconsInBackgroundWithImageAppearance (additional cache)"), 0, 0);
      }
      while (v17 != v19);
      v17 = -[NSMutableSet countByEnumeratingWithState:objects:count:](v15, "countByEnumeratingWithState:objects:count:", &v22, v30, 16);
    }
    while (v17);
  }

}

void __107__SBHIconManager_recacheIconImageDataForRootIconsInBackgroundWithIconImageStyleConfiguration_cacheOptions___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  int v10;
  int v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __int16 v15;
  int v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  SBLogIcon();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5 = *(_QWORD *)(a1 + 48);
    v6 = *(_QWORD *)(a1 + 32);
    v11 = 134218498;
    v12 = v5;
    v13 = 2114;
    v14 = v6;
    v15 = 1024;
    v16 = objc_msgSend(v3, "isFinished");
    _os_log_impl(&dword_1CFEF3000, v4, OS_LOG_TYPE_DEFAULT, "Finished background recaching of %lu icons with configuration %{public}@. Success: %{BOOL}u", (uint8_t *)&v11, 0x1Cu);
  }

  objc_msgSend(*(id *)(a1 + 40), "iconImageRecachingRequestCancellation");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "identifier");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "requestIdentifier");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = BSEqualObjects();

  if (v10)
    objc_msgSend(*(id *)(a1 + 40), "setIconImageRecachingRequestCancellation:", 0);

}

- (void)recacheVisibleIconImageDataForRootIconsInBackgroundWithImageAppearance:(id)a3 cacheOptions:(unint64_t)a4
{
  id v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  _QWORD v14[4];
  id v15;
  SBHIconManager *v16;
  uint64_t v17;
  uint8_t buf[4];
  uint64_t v19;
  __int16 v20;
  id v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  -[SBHIconManager visibleIconsToRecacheForImageAppearanceChange](self, "visibleIconsToRecacheForImageAppearanceChange");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "count");
  SBLogIcon();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134218242;
    v19 = v8;
    v20 = 2114;
    v21 = v6;
    _os_log_impl(&dword_1CFEF3000, v9, OS_LOG_TYPE_DEFAULT, "Starting background recaching of %lu visible icons with appearance %{public}@.", buf, 0x16u);
  }

  -[SBHIconManager iconImageCache](self, "iconImageCache");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 3221225472;
  v14[2] = __102__SBHIconManager_recacheVisibleIconImageDataForRootIconsInBackgroundWithImageAppearance_cacheOptions___block_invoke;
  v14[3] = &unk_1E8D88960;
  v16 = self;
  v17 = v8;
  v15 = v6;
  v11 = v6;
  objc_msgSend(v10, "cacheImagesForIcons:imageAppearance:priority:reason:options:completionHandler:", v7, v11, 2, CFSTR("recacheVisibleIconImageDataForRootIconsInBackgroundWithImageAppearance"), a4, v14);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager visibleIconImageRecachingRequestCancellation](self, "visibleIconImageRecachingRequestCancellation");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "cancel");

  -[SBHIconManager setVisibleIconImageRecachingRequestCancellation:](self, "setVisibleIconImageRecachingRequestCancellation:", v12);
}

void __102__SBHIconManager_recacheVisibleIconImageDataForRootIconsInBackgroundWithImageAppearance_cacheOptions___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  int v10;
  int v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __int16 v15;
  int v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  SBLogIcon();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5 = *(_QWORD *)(a1 + 48);
    v6 = *(_QWORD *)(a1 + 32);
    v11 = 134218498;
    v12 = v5;
    v13 = 2114;
    v14 = v6;
    v15 = 1024;
    v16 = objc_msgSend(v3, "isFinished");
    _os_log_impl(&dword_1CFEF3000, v4, OS_LOG_TYPE_DEFAULT, "Finished background recaching of %lu visible icons with appearance %{public}@. Success: %{BOOL}u", (uint8_t *)&v11, 0x1Cu);
  }

  objc_msgSend(*(id *)(a1 + 40), "visibleIconImageRecachingRequestCancellation");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "identifier");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "requestIdentifier");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = BSEqualObjects();

  if (v10)
    objc_msgSend(*(id *)(a1 + 40), "setVisibleIconImageRecachingRequestCancellation:", 0);

}

- (void)purgeUnnecessaryAppearanceIconImageData
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  -[SBHIconManager prioritizedCachingImageAppearances](self, "prioritizedCachingImageAppearances");
  v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "allKeys");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  +[SBHIconImageAppearance tintableAppearance](SBHIconImageAppearance, "tintableAppearance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "arrayByAddingObject:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  -[SBHIconManager iconImageCache](self, "iconImageCache");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "purgeAllCachedImagesForAppearancesOtherThanAppearances:", v5);

}

- (void)updateVisibleIconsToShowLeafIcons:(id)a3 hideLeafIcons:(id)a4
{
  id v6;
  id v7;
  void *v8;
  void *v9;
  SBIconPreviousLocationTracker *v10;
  SBIconPreviousLocationTracker *previousIconLocationTracker;
  NSMapTable *v12;
  NSMapTable *previousIconLocations;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t j;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t k;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _BYTE v43[128];
  _BYTE v44[128];
  _BYTE v45[128];
  uint64_t v46;

  v46 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  -[SBHIconManager iconModel](self, "iconModel");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager rootFolder](self, "rootFolder");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (!self->_previousIconLocationTracker)
  {
    v10 = objc_alloc_init(SBIconPreviousLocationTracker);
    previousIconLocationTracker = self->_previousIconLocationTracker;
    self->_previousIconLocationTracker = v10;

  }
  if (!self->_previousIconLocations)
  {
    objc_msgSend(MEMORY[0x1E0CB3748], "weakToStrongObjectsMapTable");
    v12 = (NSMapTable *)objc_claimAutoreleasedReturnValue();
    previousIconLocations = self->_previousIconLocations;
    self->_previousIconLocations = v12;

  }
  v41 = 0u;
  v42 = 0u;
  v39 = 0u;
  v40 = 0u;
  v14 = v7;
  v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v39, v45, 16);
  if (v15)
  {
    v16 = v15;
    v17 = *(_QWORD *)v40;
    do
    {
      for (i = 0; i != v16; ++i)
      {
        if (*(_QWORD *)v40 != v17)
          objc_enumerationMutation(v14);
        v19 = *(_QWORD *)(*((_QWORD *)&v39 + 1) + 8 * i);
        -[SBIconPreviousLocationTracker captureLocationInfoForIcon:inModel:](self->_previousIconLocationTracker, "captureLocationInfoForIcon:inModel:", v19, v8);
        objc_msgSend(v9, "relativePathForIcon:listGridCellInfoOptions:", v19, 0);
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        -[NSMapTable setObject:forKey:](self->_previousIconLocations, "setObject:forKey:", v20, v19);

      }
      v16 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v39, v45, 16);
    }
    while (v16);
  }

  if (objc_msgSend(v6, "count"))
  {
    v37 = 0u;
    v38 = 0u;
    v35 = 0u;
    v36 = 0u;
    v21 = v6;
    v22 = objc_msgSend(v21, "countByEnumeratingWithState:objects:count:", &v35, v44, 16);
    if (v22)
    {
      v23 = v22;
      v24 = *(_QWORD *)v36;
      do
      {
        for (j = 0; j != v23; ++j)
        {
          if (*(_QWORD *)v36 != v24)
            objc_enumerationMutation(v21);
          -[SBHIconManager addNewIconToDesignatedLocation:options:](self, "addNewIconToDesignatedLocation:options:", *(_QWORD *)(*((_QWORD *)&v35 + 1) + 8 * j), 0);
        }
        v23 = objc_msgSend(v21, "countByEnumeratingWithState:objects:count:", &v35, v44, 16);
      }
      while (v23);
    }

    if (!objc_msgSend(v14, "count"))
      goto LABEL_31;
    goto LABEL_23;
  }
  if (objc_msgSend(v14, "count"))
  {
LABEL_23:
    v33 = 0u;
    v34 = 0u;
    v31 = 0u;
    v32 = 0u;
    v26 = v14;
    v27 = objc_msgSend(v26, "countByEnumeratingWithState:objects:count:", &v31, v43, 16);
    if (v27)
    {
      v28 = v27;
      v29 = *(_QWORD *)v32;
      do
      {
        for (k = 0; k != v28; ++k)
        {
          if (*(_QWORD *)v32 != v29)
            objc_enumerationMutation(v26);
          objc_msgSend(v9, "removeIcon:options:", *(_QWORD *)(*((_QWORD *)&v31 + 1) + 8 * k), 0x100000, (_QWORD)v31);
        }
        v28 = objc_msgSend(v26, "countByEnumeratingWithState:objects:count:", &v31, v43, 16);
      }
      while (v28);
    }

LABEL_31:
    -[SBHIconManager layoutIconListsWithAnimationType:](self, "layoutIconListsWithAnimationType:", -1, (_QWORD)v31);
    objc_msgSend(v8, "saveIconStateIfNeeded");
  }

}

- (void)_clearStashedIconsForRelayout
{
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id obj;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _BYTE v27[128];
  _BYTE v28[128];
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  -[SBHIconManager iconModel](self, "iconModel");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "leafIcons");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "allObjects");
  v4 = objc_claimAutoreleasedReturnValue();

  v16 = (void *)v4;
  -[SBHIconManager _stashedIconsWithRemovableDataSourcesForStashedIcons:newIcons:](self, "_stashedIconsWithRemovableDataSourcesForStashedIcons:newIcons:", self->_stashedLeafIconsForRelayout, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  self->_shouldStashIconsForRelayout = 0;
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  objc_msgSend(v5, "allKeys");
  obj = (id)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v23, v28, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v24;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v24 != v8)
          objc_enumerationMutation(obj);
        v10 = *(_QWORD *)(*((_QWORD *)&v23 + 1) + 8 * v9);
        v19 = 0u;
        v20 = 0u;
        v21 = 0u;
        v22 = 0u;
        objc_msgSend(v5, "objectForKey:", v10);
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v19, v27, 16);
        if (v12)
        {
          v13 = v12;
          v14 = *(_QWORD *)v20;
          do
          {
            v15 = 0;
            do
            {
              if (*(_QWORD *)v20 != v14)
                objc_enumerationMutation(v11);
              -[SBHIconManager _handleRemovedDataSource:ofIcon:](self, "_handleRemovedDataSource:ofIcon:", *(_QWORD *)(*((_QWORD *)&v19 + 1) + 8 * v15++), v10);
            }
            while (v13 != v15);
            v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v19, v27, 16);
          }
          while (v13);
        }

        ++v9;
      }
      while (v9 != v7);
      v7 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v23, v28, 16);
    }
    while (v7);
  }

  -[NSMutableArray removeAllObjects](self->_stashedLeafIconsForRelayout, "removeAllObjects");
}

- (id)_stashedIconsWithRemovableDataSourcesForStashedIcons:(id)a3 newIcons:(id)a4
{
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t j;
  void *v19;
  void *v20;
  void *v21;
  NSObject *v22;
  void *v23;
  id obj;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  void *v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint8_t buf[4];
  void *v48;
  _BYTE v49[128];
  _BYTE v50[128];
  _BYTE v51[128];
  uint64_t v52;

  v52 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v31 = a4;
  v26 = objc_alloc_init(MEMORY[0x1E0C99E08]);
  v43 = 0u;
  v44 = 0u;
  v45 = 0u;
  v46 = 0u;
  obj = v5;
  v28 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v43, v51, 16);
  if (v28)
  {
    v27 = *(_QWORD *)v44;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v44 != v27)
          objc_enumerationMutation(obj);
        v29 = v6;
        v7 = *(void **)(*((_QWORD *)&v43 + 1) + 8 * v6);
        v30 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
        v39 = 0u;
        v40 = 0u;
        v41 = 0u;
        v42 = 0u;
        objc_msgSend(v7, "iconDataSources");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v39, v50, 16);
        if (v9)
        {
          v10 = v9;
          v11 = *(_QWORD *)v40;
          v33 = v8;
          v34 = v7;
          v32 = *(_QWORD *)v40;
          do
          {
            for (i = 0; i != v10; ++i)
            {
              if (*(_QWORD *)v40 != v11)
                objc_enumerationMutation(v8);
              v13 = *(void **)(*((_QWORD *)&v39 + 1) + 8 * i);
              if ((objc_opt_respondsToSelector() & 1) != 0
                && objc_msgSend(v13, "iconSupportsConfiguration:", v7))
              {
                v37 = 0u;
                v38 = 0u;
                v35 = 0u;
                v36 = 0u;
                v14 = v31;
                v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v35, v49, 16);
                if (v15)
                {
                  v16 = v15;
                  v17 = *(_QWORD *)v36;
                  while (2)
                  {
                    for (j = 0; j != v16; ++j)
                    {
                      if (*(_QWORD *)v36 != v17)
                        objc_enumerationMutation(v14);
                      v19 = *(void **)(*((_QWORD *)&v35 + 1) + 8 * j);
                      objc_msgSend(v13, "uniqueIdentifier");
                      v20 = (void *)objc_claimAutoreleasedReturnValue();
                      objc_msgSend(v19, "firstIconDataSourceWithUniqueIdentifier:", v20);
                      v21 = (void *)objc_claimAutoreleasedReturnValue();

                      if (v21)
                      {

                        goto LABEL_23;
                      }
                    }
                    v16 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v35, v49, 16);
                    if (v16)
                      continue;
                    break;
                  }
                }

                objc_msgSend(v30, "addObject:", v13);
LABEL_23:
                v8 = v33;
                v7 = v34;
                v11 = v32;
              }
            }
            v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v39, v50, 16);
          }
          while (v10);
        }

        if (objc_msgSend(v30, "count"))
          objc_msgSend(v26, "setObject:forKey:", v30, v7);

        v6 = v29 + 1;
      }
      while (v29 + 1 != v28);
      v28 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v43, v51, 16);
    }
    while (v28);
  }

  SBLogWidgetIntent();
  v22 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend(v26, "allKeys");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412290;
    v48 = v23;
    _os_log_impl(&dword_1CFEF3000, v22, OS_LOG_TYPE_DEFAULT, "stashedIconsWithRemovableDataSources:%@", buf, 0xCu);

  }
  return v26;
}

- (void)resetRootIconLists
{
  -[SBHIconManager _prepareToResetRootIconLists](self, "_prepareToResetRootIconLists");
  -[SBHIconManager _finishResetRootIconLists](self, "_finishResetRootIconLists");
}

- (void)tearDownAndResetRootIconLists
{
  -[SBHIconManager _prepareToResetRootIconLists](self, "_prepareToResetRootIconLists");
  -[SBHIconManager _finishResetRootIconListsReusingPreviousControllers:](self, "_finishResetRootIconListsReusingPreviousControllers:", 0);
}

- (void)_prepareToResetRootIconLists
{
  NSObject *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  _QWORD v13[5];
  uint8_t buf[16];

  SBLogIcon();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_1CFEF3000, v3, OS_LOG_TYPE_DEFAULT, "_prepareToResetRootIconLists", buf, 2u);
  }

  -[SBHIconManager setResettingRootIconLists:](self, "setResettingRootIconLists:", 1);
  -[SBHIconManager rootFolder](self, "rootFolder");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    -[SBHIconManager _currentFolderController](self, "_currentFolderController");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "currentIconListView");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "model");
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v4, "indexPathForList:", v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "uniqueIdentifiersForIndexPath:", v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager setPostResetPathIdentifiers:](self, "setPostResetPathIdentifiers:", v9);
    v13[0] = MEMORY[0x1E0C809B0];
    v13[1] = 3221225472;
    v13[2] = __46__SBHIconManager__prepareToResetRootIconLists__block_invoke;
    v13[3] = &unk_1E8D85658;
    v13[4] = self;
    objc_msgSend(v4, "enumerateAllIconsWithOptions:usingBlock:", 1, v13);

  }
  -[NSMutableSet anyObject](self->_touchedIconViews, "anyObject");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "window");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "_eventRoutingScene");
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  if (v12)
    objc_msgSend((id)*MEMORY[0x1E0DC4730], "_cancelAllEventsOfType:onEventRoutingScene:", 0, v12);

}

void __46__SBHIconManager__prepareToResetRootIconLists__block_invoke(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  NSObject *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint8_t buf[4];
  id v23;
  _BYTE v24[128];
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (*(_BYTE *)(*(_QWORD *)(a1 + 32) + 352))
  {
    v4 = objc_opt_class();
    v5 = v3;
    if (v4)
    {
      if ((objc_opt_isKindOfClass() & 1) != 0)
        v6 = v5;
      else
        v6 = 0;
    }
    else
    {
      v6 = 0;
    }
    v7 = v6;

    v20 = 0u;
    v21 = 0u;
    v18 = 0u;
    v19 = 0u;
    objc_msgSend(v7, "iconDataSources", 0);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v18, v24, 16);
    if (v9)
    {
      v10 = v9;
      v11 = *(_QWORD *)v19;
      while (2)
      {
        for (i = 0; i != v10; ++i)
        {
          if (*(_QWORD *)v19 != v11)
            objc_enumerationMutation(v8);
          v13 = *(void **)(*((_QWORD *)&v18 + 1) + 8 * i);
          if ((objc_opt_respondsToSelector() & 1) != 0
            && objc_msgSend(v13, "iconSupportsConfiguration:", v7))
          {
            if (!*(_QWORD *)(*(_QWORD *)(a1 + 32) + 360))
            {
              v14 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
              v15 = *(_QWORD *)(a1 + 32);
              v16 = *(void **)(v15 + 360);
              *(_QWORD *)(v15 + 360) = v14;

            }
            SBLogWidgetIntent();
            v17 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 138412290;
              v23 = v7;
              _os_log_impl(&dword_1CFEF3000, v17, OS_LOG_TYPE_DEFAULT, "Stashing leaf icon:%@ during relayout", buf, 0xCu);
            }

            objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 360), "addObject:", v7);
            goto LABEL_22;
          }
        }
        v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v18, v24, 16);
        if (v10)
          continue;
        break;
      }
    }
LABEL_22:

  }
}

- (void)_finishResetRootIconLists
{
  -[SBHIconManager _finishResetRootIconListsReusingPreviousControllers:](self, "_finishResetRootIconListsReusingPreviousControllers:", 1);
}

- (void)_finishResetRootIconListsReusingPreviousControllers:(BOOL)a3
{
  NSObject *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  int64_t v13;
  void *v14;
  void *v15;
  void *v16;
  char isKindOfClass;
  uint8_t v18[16];

  SBLogIcon();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_1CFEF3000, v5, OS_LOG_TYPE_DEFAULT, "_finishResetRootIconLists", v18, 2u);
  }

  -[SBHIconManager delegate](self, "delegate");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager rootViewController](self, "rootViewController");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (!a3)
  {
    if ((objc_opt_respondsToSelector() & 1) != 0)
      objc_msgSend(v6, "iconManager:willDestroyRootFolderController:", self, v8);
    -[SBHIconManager setRootFolderController:](self, "setRootFolderController:", 0);

    if ((objc_opt_respondsToSelector() & 1) != 0)
      objc_msgSend(v6, "iconManager:willDestroyRootViewController:", self, v7);
    -[SBHIconManager setRootViewController:](self, "setRootViewController:", 0);

    v8 = 0;
    v7 = 0;
  }
  -[SBHIconModel rootFolder](self->_iconModel, "rootFolder");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v9)
  {
    -[SBHIconModel layout](self->_iconModel, "layout");
    -[SBHIconModel rootFolder](self->_iconModel, "rootFolder");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
  }
  -[SBHIconManager setRootFolder:](self, "setRootFolder:", v9);
  -[SBHIconManager ensureFixedIconLocationsIfNecessary](self, "ensureFixedIconLocationsIfNecessary");
  if (v7)
  {
    -[SBHIconManager _rootFolderForRootViewControllerForRootFolder:](self, "_rootFolderForRootViewControllerForRootFolder:", v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "setFolder:", v10);
    -[SBHIconManager iconImageCache](self, "iconImageCache");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "setIconImageCache:", v11);

    -[SBHIconManager folderIconImageCache](self, "folderIconImageCache");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "setFolderIconImageCache:", v12);

    v13 = -[SBHIconManager interfaceOrientation](self, "interfaceOrientation");
    objc_msgSend(v8, "setOrientation:", v13);
    objc_msgSend(v8, "folderView");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "setOrientation:", v13);

    -[SBHIconManager postResetPathIdentifiers](self, "postResetPathIdentifiers");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    if (v15)
    {
      objc_msgSend(v8, "restoreExpandedPathIdentifiers:", v15);
      -[SBHIconManager setPostResetPathIdentifiers:](self, "setPostResetPathIdentifiers:", 0);
    }
  }
  else
  {
    -[SBHIconManager _createAppropriateRootViewControllerForRootFolder:](self, "_createAppropriateRootViewControllerForRootFolder:", v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager setRootViewController:](self, "setRootViewController:", v10);
    objc_opt_self();
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    isKindOfClass = objc_opt_isKindOfClass();

    if ((isKindOfClass & 1) != 0)
      -[SBHIconManager setRootFolderController:](self, "setRootFolderController:", v10);
    objc_msgSend(v10, "setEditing:animated:", -[SBHIconManager isEditing](self, "isEditing"), 0);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      objc_msgSend(v6, "iconManager:didCreateRootViewController:", self, v10);
    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "postNotificationName:object:", CFSTR("SBHIconManagerRootViewControllerDidChange"), self);
  }

  -[SBHIconManager setResettingRootIconLists:](self, "setResettingRootIconLists:", 0);
}

- (id)_rootFolderForRootViewControllerForRootFolder:(id)a3
{
  return a3;
}

- (id)_createAppropriateRootViewControllerForRootFolder:(id)a3
{
  id v4;
  void *v5;
  int v6;
  uint64_t v7;
  void *v8;

  v4 = a3;
  -[SBHIconManager homeScreenSettings](self, "homeScreenSettings");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v5, "usesMinimumViableHomeScreen"))
  {

    goto LABEL_5;
  }
  v6 = MGGetBoolAnswer();

  if (!v6)
  {
LABEL_5:
    -[SBHIconManager _createRootFolderControllerForRootFolder:](self, "_createRootFolderControllerForRootFolder:", v4);
    v7 = objc_claimAutoreleasedReturnValue();
    goto LABEL_6;
  }
  -[SBHIconManager _createRootTableControllerForRootFolder:](self, "_createRootTableControllerForRootFolder:", v4);
  v7 = objc_claimAutoreleasedReturnValue();
LABEL_6:
  v8 = (void *)v7;

  return v8;
}

- (void)_configureRootFolderConfiguration:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  SBHLibraryOverscrollViewController *v9;
  NSObject *v10;
  uint8_t v11[16];

  v4 = a3;
  -[SBHIconManager listLayoutProvider](self, "listLayoutProvider");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setListLayoutProvider:", v5);

  objc_msgSend(v4, "setOrientation:", -[SBHIconManager interfaceOrientation](self, "interfaceOrientation"));
  objc_msgSend(v4, "setAllowedOrientations:", -[SBHIconManager possibleInterfaceOrientations](self, "possibleInterfaceOrientations"));
  objc_msgSend(v4, "setIconViewProvider:", self);
  -[SBHIconManager folderIconImageCache](self, "folderIconImageCache");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setFolderIconImageCache:", v6);

  -[SBHIconManager iconImageCache](self, "iconImageCache");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setIconImageCache:", v7);

  -[SBHIconManager legibilitySettings](self, "legibilitySettings");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setLegibilitySettings:", v8);

  objc_msgSend(v4, "setDelegate:", self);
  objc_msgSend(v4, "setFolderDelegate:", self);
  objc_msgSend(v4, "setShowsDoneButtonWhileEditing:", -[SBHIconManager showsDoneButtonWhileEditing](self, "showsDoneButtonWhileEditing"));
  if (-[SBHIconManager isFloatingDockSupported](self, "isFloatingDockSupported"))
  {
    v9 = objc_alloc_init(SBHLibraryOverscrollViewController);
    objc_msgSend(v4, "setTrailingCustomViewController:", v9);

    objc_msgSend(v4, "setDockExternal:", 1);
    SBLogIcon();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_1CFEF3000, v10, OS_LOG_TYPE_INFO, "making external dock since floating dock is supported", v11, 2u);
    }

  }
}

- (id)_createRootFolderControllerForRootFolder:(id)a3
{
  id v4;
  objc_class *v5;
  SBRootFolderControllerConfiguration *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  int v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = -[SBHIconManager controllerClassForFolderClass:](self, "controllerClassForFolderClass:", objc_opt_class());
  v6 = objc_alloc_init(SBRootFolderControllerConfiguration);
  -[SBFolderControllerConfiguration setFolder:](v6, "setFolder:", v4);

  -[SBHIconManager _configureRootFolderConfiguration:](self, "_configureRootFolderConfiguration:", v6);
  -[SBHIconManager delegate](self, "delegate");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v7, "iconManager:willUseRootFolderControllerConfiguration:", self, v6);
    -[SBHIconManager legibilitySettings](self, "legibilitySettings");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBRootFolderControllerConfiguration leadingCustomViewController](v6, "leadingCustomViewController");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    if (v9)
    {
      -[SBHIconManager setLeadingCustomViewController:](self, "setLeadingCustomViewController:", v9);
      objc_msgSend(v9, "setLegibilitySettings:", v8);
    }
    -[SBRootFolderControllerConfiguration trailingCustomViewController](v6, "trailingCustomViewController");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    if (v10)
    {
      -[SBHIconManager setTrailingCustomViewController:](self, "setTrailingCustomViewController:", v10);
      objc_msgSend(v10, "setLegibilitySettings:", v8);
    }

  }
  v11 = (void *)objc_msgSend([v5 alloc], "initWithConfiguration:", v6);
  objc_msgSend(v11, "setOpen:", 1);
  objc_msgSend(v11, "addPageStateObserver:", self);
  objc_msgSend(v11, "setContentVisibility:", -[SBHIconManager effectiveRootFolderControllerContentVisibility](self, "effectiveRootFolderControllerContentVisibility"));
  -[SBHIconManager setRootFolderController:](self, "setRootFolderController:", v11);
  -[SBHIconManager postResetPathIdentifiers](self, "postResetPathIdentifiers");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  if (v12)
  {
    if ((objc_msgSend(v11, "restoreExpandedPathIdentifiers:", v12) & 1) == 0)
    {
      SBLogCommon();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
      {
        v15 = 138412290;
        v16 = v12;
        _os_log_impl(&dword_1CFEF3000, v13, OS_LOG_TYPE_INFO, "_resetRootIconLists: restoreExpandedPathIdentifiers: failed with path '%@'.", (uint8_t *)&v15, 0xCu);
      }

    }
    -[SBHIconManager setPostResetPathIdentifiers:](self, "setPostResetPathIdentifiers:", 0);
  }
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v7, "iconManager:didCreateRootFolderController:", self, v11);

  return v11;
}

- (id)_createRootTableControllerForRootFolder:(id)a3
{
  id v4;
  SBHIconRootTableViewController *v5;
  void *v6;
  void *v7;
  void *v8;

  v4 = a3;
  v5 = objc_alloc_init(SBHIconRootTableViewController);
  -[SBHIconManager legibilitySettings](self, "legibilitySettings");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconRootTableViewController setLegibilitySettings:](v5, "setLegibilitySettings:", v6);

  -[SBHIconManager folderIconImageCache](self, "folderIconImageCache");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconRootTableViewController setFolderIconImageCache:](v5, "setFolderIconImageCache:", v7);

  -[SBHIconManager iconImageCache](self, "iconImageCache");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconRootTableViewController setIconImageCache:](v5, "setIconImageCache:", v8);

  -[SBHIconRootTableViewController setFolder:](v5, "setFolder:", v4);
  return v5;
}

- (void)_ensureRootFolderController
{
  void *v3;

  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v3)
    -[SBHIconManager _finishResetRootIconLists](self, "_finishResetRootIconLists");
}

- (void)setRootViewController:(id)a3
{
  SBHIconRootViewProviding *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  _QWORD v11[4];
  id v12;
  id location;
  _QWORD v14[3];

  v14[2] = *MEMORY[0x1E0C80C00];
  v5 = (SBHIconRootViewProviding *)a3;
  if (self->_rootViewController != v5)
  {
    -[SBHIconManager rootViewControllerUserInterfaceStyleObservation](self, "rootViewControllerUserInterfaceStyleObservation");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (v6)
      -[SBHIconRootViewProviding unregisterForTraitChanges:](self->_rootViewController, "unregisterForTraitChanges:", v6);
    objc_storeStrong((id *)&self->_rootViewController, a3);
    objc_initWeak(&location, self);
    objc_opt_self();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v14[0] = v7;
    objc_opt_self();
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v14[1] = v8;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v14, 2);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v11[0] = MEMORY[0x1E0C809B0];
    v11[1] = 3221225472;
    v11[2] = __40__SBHIconManager_setRootViewController___block_invoke;
    v11[3] = &unk_1E8D8C288;
    objc_copyWeak(&v12, &location);
    -[SBHIconRootViewProviding registerForTraitChanges:withHandler:](v5, "registerForTraitChanges:withHandler:", v9, v11);
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    -[SBHIconManager setRootViewControllerUserInterfaceStyleObservation:](self, "setRootViewControllerUserInterfaceStyleObservation:", v10);
    objc_destroyWeak(&v12);
    objc_destroyWeak(&location);

  }
}

void __40__SBHIconManager_setRootViewController___block_invoke(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;
  void *v5;
  void *v6;
  int v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  dispatch_time_t v12;
  id v13;
  _QWORD block[4];
  id v15;
  _QWORD v16[4];
  id v17;
  id v18;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(v3, "traitCollection");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v5, "sbh_iconImageStyleConfiguration");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(WeakRetained, "recacheIconImageDataForRootIconsInBackgroundWithIconImageStyleConfiguration:cacheOptions:", v6, 1);
  v7 = objc_msgSend(WeakRetained, "shouldClearStylePreviewManagerAfterRootTraitChange");
  v8 = MEMORY[0x1E0C809B0];
  if (v7)
  {
    objc_msgSend(WeakRetained, "setShouldClearStylePreviewManagerAfterRootTraitChange:", 0);
    objc_msgSend(WeakRetained, "stylePreviewManager");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = (void *)*MEMORY[0x1E0DC4730];
    v16[0] = v8;
    v16[1] = 3221225472;
    v16[2] = __40__SBHIconManager_setRootViewController___block_invoke_2;
    v16[3] = &unk_1E8D84EF0;
    v17 = v9;
    v18 = WeakRetained;
    v11 = v9;
    objc_msgSend(v10, "_performBlockAfterCATransactionCommits:", v16);

  }
  v12 = dispatch_time(0, 2000000000);
  block[0] = v8;
  block[1] = 3221225472;
  block[2] = __40__SBHIconManager_setRootViewController___block_invoke_3;
  block[3] = &unk_1E8D84C50;
  v15 = WeakRetained;
  v13 = WeakRetained;
  dispatch_after(v12, MEMORY[0x1E0C80D38], block);

}

void __40__SBHIconManager_setRootViewController___block_invoke_2(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 40), "stylePreviewManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v2 == v3)
  {
    objc_msgSend(*(id *)(a1 + 32), "invalidate");
    objc_msgSend(*(id *)(a1 + 40), "setStylePreviewManager:", 0);
  }
}

uint64_t __40__SBHIconManager_setRootViewController___block_invoke_3(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "purgeUnnecessaryAppearanceIconImageData");
}

- (void)setLeadingCustomViewController:(id)a3
{
  void *v5;
  char isKindOfClass;
  SBHRootFolderCustomViewPresenting *v7;

  v7 = (SBHRootFolderCustomViewPresenting *)a3;
  if (self->_leadingCustomViewController != v7)
  {
    objc_storeStrong((id *)&self->_leadingCustomViewController, a3);
    objc_opt_self();
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    isKindOfClass = objc_opt_isKindOfClass();

    if ((isKindOfClass & 1) != 0)
      -[SBHIconManager configureLibraryViewController:](self, "configureLibraryViewController:", v7);
  }

}

- (void)setTrailingCustomViewController:(id)a3
{
  void *v5;
  char isKindOfClass;
  SBHRootFolderCustomViewPresenting *v7;

  v7 = (SBHRootFolderCustomViewPresenting *)a3;
  if (self->_trailingCustomViewController != v7)
  {
    objc_storeStrong((id *)&self->_trailingCustomViewController, a3);
    objc_opt_self();
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    isKindOfClass = objc_opt_isKindOfClass();

    if ((isKindOfClass & 1) != 0)
      -[SBHIconManager configureLibraryViewController:](self, "configureLibraryViewController:", v7);
  }

}

- (void)configureLibraryViewController:(id)a3
{
  objc_msgSend(a3, "setBadgeBehaviorProvider:", self);
}

- (void)_ensureWidgetIsVisibleForDebuggingWithDescriptor:(id)a3 sizeClass:(int64_t)a4
{
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  _QWORD v13[4];
  id v14;
  id v15;
  SBHIconManager *v16;
  int64_t v17;

  v6 = a3;
  -[SBHIconManager iconModel](self, "iconModel");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "extensionBundleIdentifier");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "kind");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "widgetIconsContainingWidgetsMatchingExtensionBundleIdentifier:kind:sizeClass:", v8, v9, a4);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 3221225472;
  v13[2] = __77__SBHIconManager__ensureWidgetIsVisibleForDebuggingWithDescriptor_sizeClass___block_invoke;
  v13[3] = &unk_1E8D87570;
  v14 = v10;
  v15 = v6;
  v16 = self;
  v17 = a4;
  v11 = v6;
  v12 = v10;
  dispatch_async(MEMORY[0x1E0C80D38], v13);

}

void __77__SBHIconManager__ensureWidgetIsVisibleForDebuggingWithDescriptor_sizeClass___block_invoke(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  _BOOL4 v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  int v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  char v16;
  NSObject *v17;
  _QWORD v18[4];
  id v19;
  uint8_t buf[4];
  void *v21;
  __int16 v22;
  void *v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "firstObject");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  SBLogWidgets();
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);
  if (!v2)
  {
    if (v4)
    {
      objc_msgSend(*(id *)(a1 + 40), "extensionBundleIdentifier");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(a1 + 40), "kind");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v21 = v7;
      v22 = 2112;
      v23 = v8;
      _os_log_impl(&dword_1CFEF3000, v3, OS_LOG_TYPE_DEFAULT, "Installing new widget for debugging: %@ %@", buf, 0x16u);

    }
    objc_msgSend(*(id *)(a1 + 48), "rootFolderController");
    v3 = objc_claimAutoreleasedReturnValue();
    -[NSObject widgetIconForDescriptor:sizeClass:](v3, "widgetIconForDescriptor:sizeClass:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 56));
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSObject folder](v3, "folder");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = objc_msgSend(v9, "canAddIcon:", v2);

    -[NSObject folder](v3, "folder");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = v11;
    if (v10)
    {
      v12 = (id)objc_msgSend(v11, "addIcon:", v2);
LABEL_10:

      goto LABEL_11;
    }
    objc_msgSend(v11, "todayList");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = (id)objc_msgSend(v6, "insertIcon:atIndex:", v2, 0);
LABEL_9:

    goto LABEL_10;
  }
  if (v4)
  {
    objc_msgSend(*(id *)(a1 + 40), "extensionBundleIdentifier");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 40), "kind");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412546;
    v21 = v5;
    v22 = 2112;
    v23 = v6;
    _os_log_impl(&dword_1CFEF3000, v3, OS_LOG_TYPE_DEFAULT, "Found existing widgetIcon for debugging: %@ %@", buf, 0x16u);
    goto LABEL_9;
  }
LABEL_11:

  objc_msgSend(*(id *)(a1 + 48), "scrollToIconListContainingIcon:animate:", v2, 1);
  v18[0] = MEMORY[0x1E0C809B0];
  v18[1] = 3221225472;
  v18[2] = __77__SBHIconManager__ensureWidgetIsVisibleForDebuggingWithDescriptor_sizeClass___block_invoke_171;
  v18[3] = &unk_1E8D8C580;
  v19 = *(id *)(a1 + 40);
  objc_msgSend(v2, "firstWidgetPassingTest:", v18);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  if (v14)
  {
    objc_msgSend(v2, "activeWidget");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = objc_msgSend(v15, "isEqual:", v14);

    if ((v16 & 1) == 0)
    {
      SBLogWidgets();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v21 = v14;
        _os_log_impl(&dword_1CFEF3000, v17, OS_LOG_TYPE_DEFAULT, "Setting active targetWidget: %@", buf, 0xCu);
      }

      objc_msgSend(v2, "setActiveWidget:", v14);
    }
  }

}

uint64_t __77__SBHIconManager__ensureWidgetIsVisibleForDebuggingWithDescriptor_sizeClass___block_invoke_171(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;

  v3 = a2;
  objc_msgSend(v3, "extensionBundleIdentifier");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "extensionBundleIdentifier");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v4, "isEqualToString:", v5))
  {
    objc_msgSend(v3, "kind");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "kind");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v6, "isEqualToString:", v7);

  }
  else
  {
    v8 = 0;
  }

  return v8;
}

- (void)setListLayoutProvider:(id)a3
{
  -[SBHIconManager setListLayoutProvider:animated:](self, "setListLayoutProvider:animated:", a3, 0);
}

- (void)setListLayoutProvider:(id)a3 animated:(BOOL)a4
{
  _BOOL8 v4;
  SBIconListLayoutProvider *v7;
  _BOOL4 v8;
  _BOOL4 v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  void *v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  SBFolderIconImageCache *folderIconImageCache;
  SBIconLabelImageCache *labelImageCache;
  void *v30;
  SBIconListLayoutProvider *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  SBIconListLayoutProvider *v37;
  void *v38;
  void *v39;
  void *v40;
  SBIconListLayoutProvider *v41;
  _QWORD v42[4];
  SBIconListLayoutProvider *v43;
  BOOL v44;

  v4 = a4;
  v7 = (SBIconListLayoutProvider *)a3;
  if (self->_listLayoutProvider != v7)
  {
    v41 = v7;
    if (-[SBHIconManager hasRootViewController](self, "hasRootViewController"))
      v8 = -[SBHIconManager isResettingRootIconLists](self, "isResettingRootIconLists");
    else
      v8 = 1;
    v9 = SBHIconListLayoutProviderListGridSizeMatchesListLayoutProvider(self->_listLayoutProvider, v41, CFSTR("SBIconLocationRoot"), 1);
    if (!v8 && !v9)
      -[SBHIconManager _prepareToResetRootIconLists](self, "_prepareToResetRootIconLists");
    -[SBIconListLayoutProvider layoutForIconLocation:](v41, "layoutForIconLocation:", CFSTR("SBIconLocationRoot"));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "iconImageInfo");
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v18 = v17;
    -[SBHIconManager iconImageCache](self, "iconImageCache");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "iconImageInfo");
    v21 = v20;
    v23 = v22;
    v25 = v24;
    v27 = v26;

    if (!SBIconImageInfoEqualToIconImageInfo(v12, v14, v16, v18, v21, v23, v25, v27))
    {
      -[SBHIconManager resetAllIconImageCaches](self, "resetAllIconImageCaches");
      folderIconImageCache = self->_folderIconImageCache;
      self->_folderIconImageCache = 0;

    }
    labelImageCache = self->_labelImageCache;
    self->_labelImageCache = 0;

    -[SBHIconManager addWidgetSheetConfigurationManager](self, "addWidgetSheetConfigurationManager");
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v30, "setListLayoutProvider:", v41);

    v31 = self->_listLayoutProvider;
    objc_storeStrong((id *)&self->_listLayoutProvider, a3);
    if (v8 || v9)
    {
      if (!v8 && v9)
      {
        -[SBHIconManager usageMonitor](self, "usageMonitor");
        v32 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v32, "noteIconManagerListLayoutProviderChanged");

        -[SBHIconManager rootFolderController](self, "rootFolderController");
        v33 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v33, "setListLayoutProvider:animated:", v41, v4);
        -[SBHIconManager iconImageCache](self, "iconImageCache");
        v34 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v33, "setIconImageCache:", v34);

        -[SBHIconManager folderIconImageCache](self, "folderIconImageCache");
        v35 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v33, "setFolderIconImageCache:", v35);

        -[SBHIconManager todayViewControllers](self, "todayViewControllers");
        v36 = (void *)objc_claimAutoreleasedReturnValue();
        v42[0] = MEMORY[0x1E0C809B0];
        v42[1] = 3221225472;
        v42[2] = __49__SBHIconManager_setListLayoutProvider_animated___block_invoke;
        v42[3] = &unk_1E8D8C5A8;
        v37 = v41;
        v43 = v37;
        v44 = v4;
        objc_msgSend(v36, "enumerateObjectsUsingBlock:", v42);

        -[SBHIconManager floatingDockViewController](self, "floatingDockViewController");
        v38 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v38, "setListLayoutProvider:animated:", v37, v4);

        -[SBHIconManager updateAppPredictionViewControllersWithListLayoutProvider:oldListLayoutProvider:animated:](self, "updateAppPredictionViewControllersWithListLayoutProvider:oldListLayoutProvider:animated:", self->_listLayoutProvider, v31, v4);
      }
    }
    else
    {
      -[SBHIconManager _finishResetRootIconListsReusingPreviousControllers:](self, "_finishResetRootIconListsReusingPreviousControllers:", 0);
    }
    -[SBHIconManager delegate](self, "delegate");
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_opt_respondsToSelector() & 1) != 0)
      objc_msgSend(v39, "iconManagerListLayoutProviderDidChange:", self);
    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v40, "postNotificationName:object:", CFSTR("SBHIconManagerListLayoutProviderDidChange"), self);

    v7 = v41;
  }

}

uint64_t __49__SBHIconManager_setListLayoutProvider_animated___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setListLayoutProvider:animated:", *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
}

- (void)setListLayoutProviderLayoutOptions:(unint64_t)a3
{
  -[SBHIconManager setListLayoutProviderLayoutOptions:animated:](self, "setListLayoutProviderLayoutOptions:animated:", a3, 0);
}

- (void)setListLayoutProviderLayoutOptions:(unint64_t)a3 animated:(BOOL)a4
{
  _BOOL8 v4;
  void *v6;
  SBHDefaultIconListLayoutProvider *v7;

  if (self->_listLayoutProviderLayoutOptions != a3)
  {
    v4 = a4;
    self->_listLayoutProviderLayoutOptions = a3;
    v7 = -[SBHDefaultIconListLayoutProvider initWithLayoutOptions:]([SBHDefaultIconListLayoutProvider alloc], "initWithLayoutOptions:", a3);
    -[SBHIconManager setListLayoutProvider:animated:](self, "setListLayoutProvider:animated:", v7, v4);
    -[SBHIconManager floatingDockViewController](self, "floatingDockViewController");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager _updateMaximumEditingIconSizeForFloatingDockViewController:](self, "_updateMaximumEditingIconSizeForFloatingDockViewController:", v6);

  }
}

- (id)widgetMetricsProvider:(id)a3 listLayoutProviderForScreenType:(unint64_t)a4
{
  void *v6;
  SBHDefaultIconListLayoutProvider *v7;
  SBHDefaultIconListLayoutProvider *v8;

  -[SBHIconManager widgetMetricsDelegate](self, "widgetMetricsDelegate", a3);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v6, "iconManager:widgetMetricsListLayoutProviderForScreenType:", self, a4);
    v7 = (SBHDefaultIconListLayoutProvider *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v7 = -[SBHDefaultIconListLayoutProvider initWithScreenType:]([SBHDefaultIconListLayoutProvider alloc], "initWithScreenType:", a4);
  }
  v8 = v7;

  return v8;
}

- (void)setLegibilitySettings:(id)a3
{
  _UILegibilitySettings *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v5 = (_UILegibilitySettings *)a3;
  if (self->_legibilitySettings != v5)
  {
    objc_storeStrong((id *)&self->_legibilitySettings, a3);
    -[SBHIconManager _precacheLabelsForRootIcons](self, "_precacheLabelsForRootIcons");
    -[SBHIconManager rootViewController](self, "rootViewController");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setLegibilitySettings:", v5);

    -[SBHIconManager floatingDockViewController](self, "floatingDockViewController");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "setLegibilitySettings:", v5);

    -[SBHIconManager leadingCustomViewController](self, "leadingCustomViewController");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "setLegibilitySettings:", v5);

    -[SBHIconManager trailingCustomViewController](self, "trailingCustomViewController");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "setLegibilitySettings:", v5);

    -[SBHIconManager overlayTodayViewController](self, "overlayTodayViewController");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "setLegibilitySettings:", v5);

    v18 = 0u;
    v19 = 0u;
    v16 = 0u;
    v17 = 0u;
    -[SBHIconManager _libraryViewControllers](self, "_libraryViewControllers", 0);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
    if (v12)
    {
      v13 = v12;
      v14 = *(_QWORD *)v17;
      do
      {
        v15 = 0;
        do
        {
          if (*(_QWORD *)v17 != v14)
            objc_enumerationMutation(v11);
          objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v15++), "setLegibilitySettings:", v5);
        }
        while (v13 != v15);
        v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
      }
      while (v13);
    }

  }
}

- (void)setFloatingDockViewController:(id)a3
{
  SBFloatingDockViewController *v5;
  NSObject *v6;
  int v7;
  SBFloatingDockViewController *v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v5 = (SBFloatingDockViewController *)a3;
  if (self->_floatingDockViewController != v5)
  {
    SBLogIcon();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      v7 = 138543362;
      v8 = v5;
      _os_log_impl(&dword_1CFEF3000, v6, OS_LOG_TYPE_INFO, "setting floating dock view controller to %{public}@", (uint8_t *)&v7, 0xCu);
    }

    if (-[SBHIconManager hasRootViewController](self, "hasRootViewController"))
    {
      -[SBHIconManager _prepareToResetRootIconLists](self, "_prepareToResetRootIconLists");
      objc_storeStrong((id *)&self->_floatingDockViewController, a3);
      -[SBHIconManager configureFloatingDockViewController:](self, "configureFloatingDockViewController:", v5);
      -[SBHIconManager _finishResetRootIconLists](self, "_finishResetRootIconLists");
    }
    else
    {
      objc_storeStrong((id *)&self->_floatingDockViewController, a3);
      -[SBHIconManager configureFloatingDockViewController:](self, "configureFloatingDockViewController:", v5);
    }
  }

}

- (void)configureFloatingDockViewController:(id)a3
{
  id v4;
  id v5;

  v4 = a3;
  -[SBHIconManager legibilitySettings](self, "legibilitySettings");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setLegibilitySettings:", v5);
  -[SBHIconManager _updateMaximumEditingIconSizeForFloatingDockViewController:](self, "_updateMaximumEditingIconSizeForFloatingDockViewController:", v4);

}

- (void)_updateMaximumEditingIconSizeForFloatingDockViewController:(id)a3
{
  void *v4;
  void *v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;

  v11 = a3;
  -[SBHIconManager listLayoutProvider](self, "listLayoutProvider");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "layoutForIconLocation:", CFSTR("SBIconLocationFloatingDock"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v5, "floatingDockVisualConfiguration");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "maximumEditingIconSize");
    v8 = v7;
    v10 = v9;

  }
  else
  {
    v8 = *MEMORY[0x1E0C9D820];
    v10 = *(double *)(MEMORY[0x1E0C9D820] + 8);
  }
  objc_msgSend(v11, "setMaximumEditingIconSize:", v8, v10);

}

- (void)setOverlayTodayViewController:(id)a3
{
  SBHTodayViewControlling *v5;
  SBHTodayViewControlling *overlayTodayViewController;
  SBHTodayViewControlling *v7;
  void *v8;
  _BOOL4 v9;
  SBHTodayViewControlling *v10;

  v5 = (SBHTodayViewControlling *)a3;
  overlayTodayViewController = self->_overlayTodayViewController;
  if (overlayTodayViewController != v5)
  {
    v10 = v5;
    -[SBHTodayViewControlling removeObserver:](overlayTodayViewController, "removeObserver:", self);
    objc_storeStrong((id *)&self->_overlayTodayViewController, a3);
    v7 = self->_overlayTodayViewController;
    -[SBHIconManager legibilitySettings](self, "legibilitySettings");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHTodayViewControlling setLegibilitySettings:](v7, "setLegibilitySettings:", v8);

    v9 = -[SBHIconManager isUsageMonitoringEnabled](self, "isUsageMonitoringEnabled");
    v5 = v10;
    if (v9)
    {
      -[SBHTodayViewControlling addObserver:](self->_overlayTodayViewController, "addObserver:", self);
      v5 = v10;
    }
  }

}

- (void)setOverlayCoverSheetTodayViewController:(id)a3
{
  SBHTodayViewControlling *v5;
  SBHTodayViewControlling *overlayCoverSheetTodayViewController;
  _BOOL4 v7;
  SBHTodayViewControlling *v8;

  v5 = (SBHTodayViewControlling *)a3;
  overlayCoverSheetTodayViewController = self->_overlayCoverSheetTodayViewController;
  if (overlayCoverSheetTodayViewController != v5)
  {
    v8 = v5;
    -[SBHTodayViewControlling removeObserver:](overlayCoverSheetTodayViewController, "removeObserver:", self);
    objc_storeStrong((id *)&self->_overlayCoverSheetTodayViewController, a3);
    v7 = -[SBHIconManager isUsageMonitoringEnabled](self, "isUsageMonitoringEnabled");
    v5 = v8;
    if (v7)
    {
      -[SBHTodayViewControlling addObserver:](self->_overlayCoverSheetTodayViewController, "addObserver:", self);
      v5 = v8;
    }
  }

}

- (id)todayViewControllers
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager overlayTodayViewController](self, "overlayTodayViewController");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
    objc_msgSend(v3, "addObject:", v4);
  -[SBHIconManager overlayCoverSheetTodayViewController](self, "overlayCoverSheetTodayViewController");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
    objc_msgSend(v3, "addObject:", v5);
  -[SBHIconManager leadingTodayViewController](self, "leadingTodayViewController");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6)
    objc_msgSend(v3, "addObject:", v6);

  return v3;
}

- (id)leadingTodayViewController
{
  void *v2;
  void *v3;
  id v4;

  -[SBHIconManager leadingCustomViewController](self, "leadingCustomViewController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v3 = v2;
  else
    v3 = 0;
  v4 = v3;

  return v4;
}

- (void)setOverlayLibraryViewController:(id)a3
{
  SBHLibraryViewController *overlayLibraryViewController;
  void *v6;
  SBHLibraryViewController *v7;

  v7 = (SBHLibraryViewController *)a3;
  if (self->_overlayLibraryViewController != v7)
  {
    objc_storeStrong((id *)&self->_overlayLibraryViewController, a3);
    overlayLibraryViewController = self->_overlayLibraryViewController;
    -[SBHIconManager legibilitySettings](self, "legibilitySettings");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHLibraryViewController setLegibilitySettings:](overlayLibraryViewController, "setLegibilitySettings:", v6);

    -[SBHIconManager configureLibraryViewController:](self, "configureLibraryViewController:", v7);
  }

}

- (BOOL)isOverlayTodayOrLibraryViewVisible
{
  return -[SBHIconManager isOverlayTodayViewVisible](self, "isOverlayTodayViewVisible")
      || -[SBHIconManager isMainDisplayLibraryViewVisible](self, "isMainDisplayLibraryViewVisible");
}

- (id)trailingLibraryViewController
{
  void *v2;
  void *v3;
  void *v4;
  id v5;

  -[SBHIconManager trailingCustomViewController](self, "trailingCustomViewController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_self();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v4 = v2;
  else
    v4 = 0;
  v5 = v4;

  return v5;
}

- (BOOL)isTodayViewEffectivelyVisible
{
  BOOL v3;
  _BOOL4 v4;

  v3 = -[SBHIconManager isOverlayTodayViewVisible](self, "isOverlayTodayViewVisible");
  v4 = -[SBHIconManager isCustomLeadingViewTodayView](self, "isCustomLeadingViewTodayView");
  if (v4)
    LOBYTE(v4) = -[SBHIconManager isShowingLeadingCustomView](self, "isShowingLeadingCustomView");
  return v3 || v4;
}

- (BOOL)isCustomLeadingViewTodayView
{
  void *v2;
  char isKindOfClass;

  -[SBHIconManager leadingCustomViewController](self, "leadingCustomViewController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (v2)
  {
    objc_opt_class();
    isKindOfClass = objc_opt_isKindOfClass();
  }
  else
  {
    isKindOfClass = 0;
  }

  return isKindOfClass & 1;
}

- (BOOL)isFloatingDockSupported
{
  void *v3;
  char v4;

  -[SBHIconManager delegate](self, "delegate");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v4 = objc_msgSend(v3, "isFloatingDockSupportedForIconManager:", self);
  else
    v4 = 0;

  return v4;
}

- (void)setOverlayCoverSheetTodayViewVisible:(BOOL)a3
{
  _BOOL4 v3;
  void *v5;
  void *v6;
  id v7;

  if (self->_overlayCoverSheetTodayViewVisible != a3)
  {
    v3 = a3;
    self->_overlayCoverSheetTodayViewVisible = a3;
    -[SBHIconManager usageMonitor](self, "usageMonitor");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = v5;
    if (v3)
    {
      objc_msgSend(v5, "noteIconManagerCoverSheetTodayViewDidAppear");
      -[SBHIconManager overlayCoverSheetTodayViewController](self, "overlayCoverSheetTodayViewController");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      -[SBHIconManager informUsageMonitorOfVisibleIconRectsForTodayViewController:](self, "informUsageMonitorOfVisibleIconRectsForTodayViewController:", v6);

    }
    else
    {
      objc_msgSend(v5, "noteIconManagerCoverSheetTodayViewDidDisappear");
    }

  }
}

- (void)setOverlayTodayViewVisible:(BOOL)a3
{
  id v4;

  if (self->_overlayTodayViewVisible != a3)
  {
    self->_overlayTodayViewVisible = a3;
    -[SBHIconManager _updateOverlayOcclusionForRootFolderController](self, "_updateOverlayOcclusionForRootFolderController");
    -[SBHIconManager overlayTodayViewController](self, "overlayTodayViewController");
    v4 = (id)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager informUsageMonitorOfTodayViewVisibilityChange:](self, "informUsageMonitorOfTodayViewVisibilityChange:", v4);

  }
}

- (void)setOverlayTodayViewVisibilityTransitioning:(BOOL)a3
{
  if (self->_overlayTodayViewVisibilityTransitioning != a3)
  {
    self->_overlayTodayViewVisibilityTransitioning = a3;
    -[SBHIconManager _updateOverlayOcclusionForRootFolderController](self, "_updateOverlayOcclusionForRootFolderController");
  }
}

- (void)setOverlayTodayViewVisible:(BOOL)a3 todayViewTransitioning:(BOOL)a4
{
  _BOOL4 v4;
  int v5;
  int overlayTodayViewVisible;
  BOOL overlayTodayViewIsDismissingFromFullyPresented;
  void *v9;
  void *v10;
  id v11;

  v4 = a4;
  v5 = a3;
  overlayTodayViewVisible = self->_overlayTodayViewVisible;
  if (a4)
  {
    if (self->_overlayTodayViewVisibilityTransitioning)
      goto LABEL_10;
    overlayTodayViewIsDismissingFromFullyPresented = self->_overlayTodayViewVisible;
    goto LABEL_9;
  }
  if (!self->_overlayTodayViewVisibilityTransitioning)
    goto LABEL_10;
  if (a3)
    goto LABEL_8;
  overlayTodayViewIsDismissingFromFullyPresented = self->_overlayTodayViewIsDismissingFromFullyPresented;
  if (overlayTodayViewIsDismissingFromFullyPresented)
  {
    -[SBHIconManager rootFolderController](self, "rootFolderController");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "rootFolderView");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "_flashPageDotsForReason:", CFSTR("today-view-dismiss"));

LABEL_8:
    overlayTodayViewIsDismissingFromFullyPresented = 0;
  }
LABEL_9:
  self->_overlayTodayViewIsDismissingFromFullyPresented = overlayTodayViewIsDismissingFromFullyPresented;
LABEL_10:
  if (overlayTodayViewVisible == v5)
  {
    if (self->_overlayTodayViewVisibilityTransitioning != v4)
    {
      self->_overlayTodayViewVisible = v5;
      self->_overlayTodayViewVisibilityTransitioning = v4;
      -[SBHIconManager _updateOverlayOcclusionForRootFolderController](self, "_updateOverlayOcclusionForRootFolderController");
    }
  }
  else
  {
    self->_overlayTodayViewVisible = v5;
    self->_overlayTodayViewVisibilityTransitioning = v4;
    -[SBHIconManager _updateOverlayOcclusionForRootFolderController](self, "_updateOverlayOcclusionForRootFolderController");
    -[SBHIconManager overlayTodayViewController](self, "overlayTodayViewController");
    v11 = (id)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager informUsageMonitorOfTodayViewVisibilityChange:](self, "informUsageMonitorOfTodayViewVisibilityChange:", v11);

  }
}

- (void)informUsageMonitorOfTodayViewVisibilityChange:(id)a3
{
  void *v4;
  id v5;

  v5 = a3;
  -[SBHIconManager usageMonitor](self, "usageMonitor");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (-[SBHIconManager isOverlayTodayViewVisible](self, "isOverlayTodayViewVisible"))
  {
    objc_msgSend(v4, "noteIconManagerOverlayTodayViewDidAppear");
    -[SBHIconManager informUsageMonitorOfVisibleIconRectsForTodayViewController:](self, "informUsageMonitorOfVisibleIconRectsForTodayViewController:", v5);
  }
  else
  {
    objc_msgSend(v4, "noteIconManagerOverlayTodayViewDidDisappear");
  }

}

- (void)informUsageMonitorOfVisibleIconRectsForTodayViewController:(id)a3
{
  id v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  void (**v14)(void *, void *);
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  _QWORD v19[8];

  v4 = a3;
  if (-[SBHIconManager isUsageMonitoringEnabled](self, "isUsageMonitoringEnabled"))
  {
    objc_msgSend(v4, "scrollView");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "visibleBounds");
    v7 = v6;
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v19[0] = MEMORY[0x1E0C809B0];
    v19[1] = 3221225472;
    v19[2] = __77__SBHIconManager_informUsageMonitorOfVisibleIconRectsForTodayViewController___block_invoke;
    v19[3] = &__block_descriptor_64_e24_v16__0__SBIconListView_8l;
    *(double *)&v19[4] = v6;
    *(double *)&v19[5] = v8;
    *(double *)&v19[6] = v10;
    *(double *)&v19[7] = v12;
    v14 = (void (**)(void *, void *))_Block_copy(v19);
    objc_msgSend(v4, "listView");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "iconVisibilityInfoForRect:normalized:", 1, v7, v9, v11, v13);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v14[2](v14, v15);
    objc_msgSend(v16, "visibleIconRects");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager usageMonitor](self, "usageMonitor");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager overlayCoverSheetTodayViewController](self, "overlayCoverSheetTodayViewController");

    objc_msgSend(v18, "noteIconManagerTodayViewAtLocation:didScrollToRevealIcons:", 1, v17);
  }

}

void __77__SBHIconManager_informUsageMonitorOfVisibleIconRectsForTodayViewController___block_invoke(double *a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  char isKindOfClass;
  uint64_t v22;
  id v23;
  uint64_t v24;
  id obj;
  void *v26;
  void *v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _BYTE v37[128];
  _BYTE v38[128];
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(v3, "iconVisibilityInfoForRect:normalized:", 0, a1[4], a1[5], a1[6], a1[7]);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "icons");
  v33 = 0u;
  v34 = 0u;
  v35 = 0u;
  v36 = 0u;
  obj = (id)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v33, v38, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v34;
    v22 = *(_QWORD *)v34;
    v23 = v3;
    do
    {
      v8 = 0;
      v24 = v6;
      do
      {
        if (*(_QWORD *)v34 != v7)
          objc_enumerationMutation(obj);
        v9 = *(_QWORD *)(*((_QWORD *)&v33 + 1) + 8 * v8);
        objc_msgSend(v3, "displayedIconViewForIcon:", v9);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "customIconImageViewController");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v11, "sbh_isWidgetStackViewController"))
        {
          v27 = v10;
          v28 = v8;
          v31 = 0u;
          v32 = 0u;
          v29 = 0u;
          v30 = 0u;
          v26 = v11;
          objc_msgSend(v11, "widgetViewControllers");
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v29, v37, 16);
          if (v13)
          {
            v14 = v13;
            v15 = *(_QWORD *)v30;
            do
            {
              for (i = 0; i != v14; ++i)
              {
                if (*(_QWORD *)v30 != v15)
                  objc_enumerationMutation(v12);
                v17 = *(void **)(*((_QWORD *)&v29 + 1) + 8 * i);
                if (objc_msgSend(v17, "sbh_isMultiplexingViewController"))
                {
                  objc_msgSend(v17, "multiplexedViewController");
                  v18 = (id)objc_claimAutoreleasedReturnValue();
                }
                else
                {
                  v18 = v17;
                }
                v19 = v18;
                objc_opt_self();
                v20 = (void *)objc_claimAutoreleasedReturnValue();
                isKindOfClass = objc_opt_isKindOfClass();

                if ((isKindOfClass & 1) != 0)
                {
                  objc_msgSend(v4, "visibleRectForIcon:", v9);
                  objc_msgSend(v19, "setVisibleBounds:");
                }

              }
              v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v29, v37, 16);
            }
            while (v14);
          }

          v7 = v22;
          v3 = v23;
          v6 = v24;
          v10 = v27;
          v8 = v28;
          v11 = v26;
        }

        ++v8;
      }
      while (v8 != v6);
      v6 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v33, v38, 16);
    }
    while (v6);
  }

}

- (void)setMainDisplayLibraryViewVisible:(BOOL)a3
{
  if (self->_mainDisplayLibraryViewVisible != a3)
  {
    self->_mainDisplayLibraryViewVisible = a3;
    -[SBHIconManager _updateOverlayOcclusionForRootFolderController](self, "_updateOverlayOcclusionForRootFolderController");
  }
}

- (void)setMainDisplayLibraryViewVisibilityTransitioning:(BOOL)a3
{
  if (self->_mainDisplayLibraryViewVisibilityTransitioning != a3)
  {
    self->_mainDisplayLibraryViewVisibilityTransitioning = a3;
    -[SBHIconManager _updateOverlayOcclusionForRootFolderController](self, "_updateOverlayOcclusionForRootFolderController");
  }
}

- (void)setMainDisplayLibraryViewVisible:(BOOL)a3 libraryViewTransitioning:(BOOL)a4
{
  _BOOL4 v4;
  _BOOL4 v5;
  BOOL mainDisplayLibraryViewVisible;
  void *v8;
  void *v9;

  v4 = a4;
  v5 = a3;
  if (a4)
  {
    if (!self->_mainDisplayLibraryViewVisibilityTransitioning)
    {
      mainDisplayLibraryViewVisible = self->_mainDisplayLibraryViewVisible;
LABEL_9:
      self->_mainDisplayLibraryViewIsDismissingFromFullyPresented = mainDisplayLibraryViewVisible;
    }
  }
  else if (self->_mainDisplayLibraryViewVisibilityTransitioning)
  {
    if (!a3)
    {
      mainDisplayLibraryViewVisible = self->_mainDisplayLibraryViewIsDismissingFromFullyPresented;
      if (!mainDisplayLibraryViewVisible)
        goto LABEL_9;
      -[SBHIconManager rootFolderController](self, "rootFolderController");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "rootFolderView");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "_flashPageDotsForReason:", CFSTR("library-dismiss"));

    }
    mainDisplayLibraryViewVisible = 0;
    goto LABEL_9;
  }
  if (self->_mainDisplayLibraryViewVisible != v5 || self->_mainDisplayLibraryViewVisibilityTransitioning != v4)
  {
    self->_mainDisplayLibraryViewVisible = v5;
    self->_mainDisplayLibraryViewVisibilityTransitioning = v4;
    -[SBHIconManager _updateOverlayOcclusionForRootFolderController](self, "_updateOverlayOcclusionForRootFolderController");
  }
}

- (void)_updateOverlayOcclusionForRootFolderController
{
  _BOOL8 v4;
  unint64_t v5;
  SBRootFolderController *rootFolderController;
  id v7;

  v4 = self->_overlayTodayViewVisible || self->_mainDisplayLibraryViewVisible;
  v5 = -[SBHIconManager effectiveRootFolderControllerContentVisibility](self, "effectiveRootFolderControllerContentVisibility");
  -[SBRootFolderController setOccludedByOverlay:](self->_rootFolderController, "setOccludedByOverlay:", v4);
  -[SBFolderController setContentVisibility:](self->_rootFolderController, "setContentVisibility:", v5);
  rootFolderController = self->_rootFolderController;
  NSStringFromSelector(a2);
  v7 = (id)objc_claimAutoreleasedReturnValue();
  -[SBRootFolderController setParallaxDisabled:forReason:](rootFolderController, "setParallaxDisabled:forReason:", v4, v7);

}

- (void)presentTodayOverlay
{
  id v3;

  -[SBHIconManager delegate](self, "delegate");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v3, "presentTodayOverlayForIconManager:", self);

}

- (int64_t)listsFixedIconLocationBehavior
{
  void *v3;
  int64_t v4;

  -[SBHIconManager delegate](self, "delegate");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v4 = objc_msgSend(v3, "iconManagerListsFixedIconLocationBehavior:", self);
  else
    v4 = 0;

  return v4;
}

- (void)ensureFixedIconLocationsIfNecessary
{
  id v3;

  if (-[SBHIconManager listsFixedIconLocationBehavior](self, "listsFixedIconLocationBehavior"))
  {
    -[SBHIconManager rootFolder](self, "rootFolder");
    v3 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "enumerateListsWithOptions:usingBlock:", 4, &__block_literal_global_63);

  }
}

uint64_t __53__SBHIconManager_ensureFixedIconLocationsIfNecessary__block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "saveOnlyRequiredIconLocationsAsFixed");
}

- (void)setEditing:(BOOL)a3 withFeedbackBehavior:(id)a4
{
  -[SBHIconManager setEditing:withFeedbackBehavior:location:](self, "setEditing:withFeedbackBehavior:location:", a3, a4, *MEMORY[0x1E0C9D538], *(double *)(MEMORY[0x1E0C9D538] + 8));
}

void __59__SBHIconManager_setEditing_withFeedbackBehavior_location___block_invoke(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v3 = a2;
  if (objc_msgSend(v3, "isFolderIcon"))
  {
    objc_msgSend(v3, "folder");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "setCancelable:", 0);

  }
}

- (void)editingDidChange
{
  -[SBHIconManager editingDidChangeWithFeedbackBehavior:location:](self, "editingDidChangeWithFeedbackBehavior:location:", 0, *MEMORY[0x1E0C9D538], *(double *)(MEMORY[0x1E0C9D538] + 8));
}

- (void)editingDidChangeWithFeedbackBehavior:(id)a3 location:(CGPoint)a4
{
  double y;
  double x;
  _BOOL8 v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;

  y = a4.y;
  x = a4.x;
  v15 = a3;
  v7 = -[SBHIconManager isEditing](self, "isEditing");
  -[SBHIconManager iconModel](self, "iconModel");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (v7)
  {
    objc_msgSend(v15, "impactOccurredWithIntensity:atLocation:", 1.0, x, y);
    -[SBHIconManager _restartEditingEndTimer](self, "_restartEditingEndTimer");
    -[SBHIconManager displayEnterEditingModeFeatureIntroductions](self, "displayEnterEditingModeFeatureIntroductions");
  }
  else
  {
    -[SBHIconManager editingAutosaveDisableAssertion](self, "editingAutosaveDisableAssertion");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "invalidate");

    -[SBHIconManager setEditingAutosaveDisableAssertion:](self, "setEditingAutosaveDisableAssertion:", 0);
    objc_msgSend(v8, "saveIconStateIfNeeded");
    objc_msgSend(v8, "clearDesiredIconState");
    -[SBHIconManager editingEndTimer](self, "editingEndTimer");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "invalidate");

    -[SBHIconManager setEditingEndTimer:](self, "setEditingEndTimer:", 0);
  }
  -[SBHIconManager searchGesture](self, "searchGesture");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "setDisabled:forReason:", v7, CFSTR("SBHIconManager Editing"));

  -[SBHIconManager iconDragManager](self, "iconDragManager");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "noteIconManagerEditingDidChange");

  -[SBHIconManager delegate](self, "delegate");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v13, "iconManagerEditingDidChange:", self);
  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "postNotificationName:object:", CFSTR("SBHIconManagerEditingStateChanged"), self);

  if (!v7)
    -[SBHIconManager enumerateKnownIconViewsUsingBlock:](self, "enumerateKnownIconViewsUsingBlock:", &__block_literal_global_207);

}

uint64_t __64__SBHIconManager_editingDidChangeWithFeedbackBehavior_location___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "purgeCachedEditingViewData");
}

- (void)setEditing:(BOOL)a3 fromIconListView:(id)a4
{
  _BOOL8 v4;
  void *v6;
  id v7;

  v4 = a3;
  v7 = a4;
  if (-[SBHIconManager isEditingAllowed](self, "isEditingAllowed"))
  {
    -[SBHIconManager setEditing:](self, "setEditing:", v4);
  }
  else if (-[SBHIconManager isEditingAllowedForIconListView:](self, "isEditingAllowedForIconListView:", v7))
  {
    objc_msgSend(v7, "iconLocation");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager setEditing:forIconLocation:](self, "setEditing:forIconLocation:", v4, v6);

  }
}

- (void)setEditing:(BOOL)a3 fromIconView:(id)a4
{
  _BOOL8 v4;
  void *v6;
  id v7;

  v4 = a3;
  v7 = a4;
  if (-[SBHIconManager isEditingAllowedForIconView:](self, "isEditingAllowedForIconView:"))
  {
    if (-[SBHIconManager isEditingAllowed](self, "isEditingAllowed"))
    {
      -[SBHIconManager setEditing:](self, "setEditing:", v4);
    }
    else
    {
      objc_msgSend(v7, "location");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      -[SBHIconManager setEditing:forIconLocation:](self, "setEditing:forIconLocation:", v4, v6);

    }
  }

}

- (void)setEditing:(BOOL)a3 forIconLocation:(id)a4
{
  _BOOL8 v4;
  id v6;
  NSMutableSet *partialEditingIconLocations;
  NSMutableSet *v8;
  NSMutableSet *v9;
  void *v10;
  void *v11;
  id v12;

  v4 = a3;
  v6 = a4;
  partialEditingIconLocations = self->_partialEditingIconLocations;
  v12 = v6;
  if (v4)
  {
    if (!partialEditingIconLocations)
    {
      v8 = (NSMutableSet *)objc_alloc_init(MEMORY[0x1E0C99E20]);
      v9 = self->_partialEditingIconLocations;
      self->_partialEditingIconLocations = v8;

      v6 = v12;
      partialEditingIconLocations = self->_partialEditingIconLocations;
    }
    -[NSMutableSet addObject:](partialEditingIconLocations, "addObject:", v6);
  }
  else
  {
    -[NSMutableSet removeObject:](partialEditingIconLocations, "removeObject:");
  }
  if (SBIconLocationGroupContainsLocation(CFSTR("SBIconLocationGroupTodayView"), v12))
  {
    -[SBHIconManager leadingCustomViewController](self, "leadingCustomViewController");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "setEditing:", v4);

    -[SBHIconManager overlayTodayViewController](self, "overlayTodayViewController");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "setEditing:", v4);

LABEL_9:
    -[SBHIconManager editingDidChange](self, "editingDidChange");
    goto LABEL_10;
  }
  if (SBIconLocationGroupContainsLocation(CFSTR("SBIconLocationGroupFloatingDock"), v12))
    goto LABEL_9;
LABEL_10:

}

- (BOOL)isEditingForIconLocation:(id)a3
{
  id v4;
  char v5;

  v4 = a3;
  if (-[SBHIconManager isEditing](self, "isEditing"))
    v5 = 1;
  else
    v5 = -[NSMutableSet containsObject:](self->_partialEditingIconLocations, "containsObject:", v4);

  return v5;
}

- (BOOL)isEditingAllowedForIconLocation:(id)a3
{
  id v4;
  char v5;
  void *v6;

  v4 = a3;
  if (-[SBHIconManager isEditingAllowed](self, "isEditingAllowed")
    || -[SBHIconManager isIconContentPossiblyVisibleOverApplication](self, "isIconContentPossiblyVisibleOverApplication")&& ((SBIconLocationGroupContainsLocation(CFSTR("SBIconLocationGroupFloatingDock"), v4) & 1) != 0|| (objc_msgSend(v4, "isEqualToString:", CFSTR("SBIconLocationFolder")) & 1) != 0))
  {
    v5 = 1;
  }
  else
  {
    -[SBHIconManager delegate](self, "delegate");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v5 = objc_msgSend(v6, "iconManager:isPartialEditingAllowedForIconLocation:", self, v4);
    else
      v5 = 0;

  }
  return v5;
}

- (BOOL)isEditingAllowedForIconView:(id)a3
{
  id v4;
  void *v5;
  char v6;
  void *v7;
  BOOL v8;

  v4 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v6 = objc_msgSend(v5, "iconManager:isEditingAllowedForIconView:", self, v4);
  else
    v6 = 1;
  objc_msgSend(v4, "location");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = v6 & -[SBHIconManager isEditingAllowedForIconLocation:](self, "isEditingAllowedForIconLocation:", v7);

  return v8;
}

- (BOOL)isEditingAllowedForIconListView:(id)a3
{
  void *v4;

  objc_msgSend(a3, "iconLocation");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  LOBYTE(self) = -[SBHIconManager isEditingAllowedForIconLocation:](self, "isEditingAllowedForIconLocation:", v4);

  return (char)self;
}

- (BOOL)isEditingForIconListView:(id)a3
{
  void *v4;

  objc_msgSend(a3, "iconLocation");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  LOBYTE(self) = -[SBHIconManager isEditingForIconLocation:](self, "isEditingForIconLocation:", v4);

  return (char)self;
}

void __41__SBHIconManager__restartEditingEndTimer__block_invoke(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (objc_msgSend(WeakRetained, "isEditing"))
    objc_msgSend(WeakRetained, "setEditing:", 0);

}

- (void)configureFeedbackView:(id)a3
{
  objc_class *v4;
  id v5;
  id v6;
  UIImpactFeedbackGenerator *v7;
  UIImpactFeedbackGenerator *iconEditingFeedbackBehavior;
  id v9;

  v4 = (objc_class *)MEMORY[0x1E0DC3898];
  v5 = a3;
  v6 = [v4 alloc];
  objc_msgSend(MEMORY[0x1E0DC4208], "defaultConfiguration");
  v9 = (id)objc_claimAutoreleasedReturnValue();
  v7 = (UIImpactFeedbackGenerator *)objc_msgSend(v6, "initWithConfiguration:view:", v9, v5);

  iconEditingFeedbackBehavior = self->_iconEditingFeedbackBehavior;
  self->_iconEditingFeedbackBehavior = v7;

}

- (void)displayEnterEditingModeFeatureIntroductions
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  -[SBHIconManager delegate](self, "delegate");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  -[SBHIconManager featureIntroductionManager](self, "featureIntroductionManager", 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "featureIntroductionItemAtLocation:", 8);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "allObjects");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v13;
    do
    {
      v10 = 0;
      do
      {
        if (*(_QWORD *)v13 != v9)
          objc_enumerationMutation(v6);
        v11 = *(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * v10);
        if ((objc_opt_respondsToSelector() & 1) != 0)
          objc_msgSend(v3, "iconManager:displayFeatureIntroductionItem:atLocation:", self, v11, 8);
        ++v10;
      }
      while (v8 != v10);
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v8);
  }

}

- (void)displayFeatureIntroductionItemIfUnlocked:(id)a3
{
  void *v4;
  id v5;

  v5 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v4, "iconManager:displayFeatureIntroductionItemIfUnlocked:", self, v5);

}

- (BOOL)isIconTouched
{
  return -[NSMutableSet count](self->_touchedIconViews, "count") != 0;
}

- (void)performAfterAllIconTouchesFinishedUsingBlock:(id)a3
{
  void (**v4)(_QWORD);
  NSObject *v5;
  NSMutableArray *iconTouchesFinishedBlocks;
  NSMutableArray *v7;
  NSMutableArray *v8;
  void *v9;
  void *v10;
  uint8_t v11[16];

  v4 = (void (**)(_QWORD))a3;
  if (-[SBHIconManager isIconTouched](self, "isIconTouched"))
  {
    SBLogIcon();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_1CFEF3000, v5, OS_LOG_TYPE_DEFAULT, "Will perform block after icon touches are finished", v11, 2u);
    }

    iconTouchesFinishedBlocks = self->_iconTouchesFinishedBlocks;
    if (!iconTouchesFinishedBlocks)
    {
      v7 = (NSMutableArray *)objc_alloc_init(MEMORY[0x1E0C99DE8]);
      v8 = self->_iconTouchesFinishedBlocks;
      self->_iconTouchesFinishedBlocks = v7;

      iconTouchesFinishedBlocks = self->_iconTouchesFinishedBlocks;
    }
    v9 = (void *)objc_msgSend(v4, "copy");
    v10 = _Block_copy(v9);
    -[NSMutableArray addObject:](iconTouchesFinishedBlocks, "addObject:", v10);

  }
  else
  {
    v4[2](v4);
  }

}

- (void)clearHighlightedIcon:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  int v7;
  NSObject *v8;
  int v9;
  void *v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[SBHIconManager highlightedIconView](self, "highlightedIconView");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "icon");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "isEqual:", v4);

  if (v7)
  {
    SBLogIcon();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      v9 = 138412290;
      v10 = v5;
      _os_log_impl(&dword_1CFEF3000, v8, OS_LOG_TYPE_INFO, "Clearing highlight from icon view: %@", (uint8_t *)&v9, 0xCu);
    }

    objc_msgSend(v5, "setHighlighted:", 0);
    -[SBHIconManager setHighlightedIconView:](self, "setHighlightedIconView:", 0);
  }

}

- (SBIconListView)currentRootIconList
{
  void *v2;
  void *v3;

  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "currentIconListView");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return (SBIconListView *)v3;
}

- (id)rootIconListAtIndex:(int64_t)a3
{
  void *v3;
  void *v5;

  if (a3 == 10000)
  {
    -[SBHIconManager effectiveDockListView](self, "effectiveDockListView");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    -[SBHIconManager rootFolderController](self, "rootFolderController");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "iconListViewAtIndex:", a3);
    v3 = (void *)objc_claimAutoreleasedReturnValue();

  }
  return v3;
}

- (SBIconListView)dockListView
{
  void *v2;
  void *v3;

  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "dockListView");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return (SBIconListView *)v3;
}

- (SBIconListView)floatingDockListView
{
  void *v2;
  void *v3;

  -[SBHIconManager floatingDockViewController](self, "floatingDockViewController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "userIconListView");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return (SBIconListView *)v3;
}

- (SBIconListView)floatingDockSuggestionsListView
{
  void *v2;
  void *v3;

  -[SBHIconManager floatingDockViewController](self, "floatingDockViewController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "recentIconListView");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return (SBIconListView *)v3;
}

- (SBIconListView)effectiveDockListView
{
  void *v3;

  -[SBHIconManager dockListView](self, "dockListView");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v3)
  {
    -[SBHIconManager floatingDockListView](self, "floatingDockListView");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return (SBIconListView *)v3;
}

- (BOOL)_shouldRespondToIconCloseBoxes
{
  void *v2;
  char v3;

  -[SBHIconManager iconDragManager](self, "iconDragManager");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isTrackingActiveOrDroppingIconDrags") ^ 1;

  return v3;
}

- (void)enumerateDisplayedIconViewsForIcon:(id)a3 usingBlock:(id)a4
{
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  -[SBHIconManager rootViewController](self, "rootViewController");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "enumerateDisplayedIconViewsForIcon:usingBlock:", v6, v7);

  -[SBHIconManager floatingDockViewController](self, "floatingDockViewController");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "enumerateDisplayedIconViewsForIcon:usingBlock:", v6, v7);

  -[SBHIconManager _effectiveTodayViewController](self, "_effectiveTodayViewController");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "enumerateDisplayedIconViewsForIcon:usingBlock:", v6, v7);

  v18 = 0u;
  v19 = 0u;
  v16 = 0u;
  v17 = 0u;
  -[SBHIconManager _libraryViewControllers](self, "_libraryViewControllers", 0);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
  if (v12)
  {
    v13 = v12;
    v14 = *(_QWORD *)v17;
    do
    {
      v15 = 0;
      do
      {
        if (*(_QWORD *)v17 != v14)
          objc_enumerationMutation(v11);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v15++), "enumerateDisplayedIconViewsForIcon:usingBlock:", v6, v7);
      }
      while (v13 != v15);
      v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
    }
    while (v13);
  }

}

- (void)enumerateKnownIconViewsUsingBlock:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[SBHIconManager iconViewMap](self, "iconViewMap");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "enumerateRecycledViewsUsingBlock:", v4);

  -[SBHIconManager rootViewController](self, "rootViewController");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "enumerateDisplayedIconViewsUsingBlock:", v4);

  -[SBHIconManager floatingDockViewController](self, "floatingDockViewController");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "enumerateDisplayedIconViewsUsingBlock:", v4);

  -[SBHIconManager overlayTodayViewController](self, "overlayTodayViewController");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "enumerateDisplayedIconViewsUsingBlock:", v4);

  v16 = 0u;
  v17 = 0u;
  v14 = 0u;
  v15 = 0u;
  -[SBHIconManager _libraryViewControllers](self, "_libraryViewControllers", 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v10)
  {
    v11 = v10;
    v12 = *(_QWORD *)v15;
    do
    {
      v13 = 0;
      do
      {
        if (*(_QWORD *)v15 != v12)
          objc_enumerationMutation(v9);
        objc_msgSend(*(id *)(*((_QWORD *)&v14 + 1) + 8 * v13++), "enumerateDisplayedIconViewsUsingBlock:", v4);
      }
      while (v11 != v13);
      v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    }
    while (v11);
  }

}

- (void)_updateVisibleIconsViewsForAllowableCloseBoxes
{
  BOOL v3;
  _QWORD v4[5];
  BOOL v5;

  v3 = -[SBHIconManager iconsShouldAllowCloseBoxes](self, "iconsShouldAllowCloseBoxes");
  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __64__SBHIconManager__updateVisibleIconsViewsForAllowableCloseBoxes__block_invoke;
  v4[3] = &unk_1E8D89490;
  v4[4] = self;
  v5 = v3;
  -[SBHIconManager enumerateDisplayedIconViewsUsingBlock:](self, "enumerateDisplayedIconViewsUsingBlock:", v4);
}

void __64__SBHIconManager__updateVisibleIconsViewsForAllowableCloseBoxes__block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  _BOOL8 v4;
  id v5;

  v5 = a2;
  objc_msgSend(v5, "continuityItem");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {

LABEL_5:
    v4 = 0;
    goto LABEL_6;
  }
  if (!objc_msgSend(*(id *)(a1 + 32), "iconViewDisplaysCloseBox:", v5))
    goto LABEL_5;
  v4 = *(_BYTE *)(a1 + 40) != 0;
LABEL_6:
  objc_msgSend(v5, "setAllowsCloseBox:", v4);

}

- (BOOL)isIconVisiblyRepresented:(id)a3
{
  id v4;
  void *v5;
  void *v6;

  v4 = a3;
  -[SBHIconManager rootFolder](self, "rootFolder");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "indexPathForIcon:includingPlaceholders:", v4, 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6 != 0;
}

- (id)applicationWithBundleIdentifier:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;

  v4 = a3;
  -[SBHIconManager iconModel](self, "iconModel");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "applicationIconForBundleIdentifier:", v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "application");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

- (id)addApplicationPlaceholders:(id)a3
{
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  uint64_t v17;
  char v19;
  id obj;
  void *v21;
  id v22;
  _QWORD v23[4];
  id v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[SBHIconManager iconModel](self, "iconModel");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager rootFolder](self, "rootFolder");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E20], "set");
  v22 = (id)objc_claimAutoreleasedReturnValue();
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v6 = v4;
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v25, v29, 16);
  if (v7)
  {
    v8 = v7;
    v19 = 0;
    v9 = *(_QWORD *)v26;
    obj = v6;
    do
    {
      for (i = 0; i != v8; ++i)
      {
        if (*(_QWORD *)v26 != v9)
          objc_enumerationMutation(obj);
        v11 = *(void **)(*((_QWORD *)&v25 + 1) + 8 * i);
        objc_msgSend(v11, "applicationBundleIdentifier");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "applicationIconsForBundleIdentifier:", v12);
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        v23[0] = MEMORY[0x1E0C809B0];
        v23[1] = 3221225472;
        v23[2] = __45__SBHIconManager_addApplicationPlaceholders___block_invoke;
        v23[3] = &unk_1E8D8C688;
        v14 = v13;
        v24 = v14;
        -[SBHIconManager enumerateAllIconImageCachesUsingBlock:](self, "enumerateAllIconImageCachesUsingBlock:", v23);
        objc_msgSend(v5, "addApplicationPlaceholder:", v11);
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        if (v15)
        {
          objc_msgSend(v22, "addObject:", v15);
          objc_msgSend(v21, "indexPathForIcon:", v15);
          v16 = (void *)objc_claimAutoreleasedReturnValue();

          if (!v16)
          {
            if (objc_msgSend(v11, "isNewAppInstallFromStore"))
              v17 = 64;
            else
              v17 = 0;
            -[SBHIconManager addNewIconToDesignatedLocation:options:](self, "addNewIconToDesignatedLocation:options:", v15, v17);
            v19 = 1;
          }
        }

      }
      v6 = obj;
      v8 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v25, v29, 16);
    }
    while (v8);

    if ((v19 & 1) != 0)
      objc_msgSend(v5, "saveIconStateIfNeeded");
  }
  else
  {

  }
  return v22;
}

uint64_t __45__SBHIconManager_addApplicationPlaceholders___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "purgeCachedImagesForIcons:", *(_QWORD *)(a1 + 32));
}

- (id)replaceApplicationPlaceholderWithApplication:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v21;
  void *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  id v27;
  void *v28;
  _BYTE v29[128];
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[SBHIconManager iconModel](self, "iconModel");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager iconImageCache](self, "iconImageCache");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager prioritizedCachingImageAppearances](self, "prioritizedCachingImageAppearances");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "bundleIdentifier");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "applicationIconsForBundleIdentifier:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v9, "count"))
  {
    v25 = 0u;
    v26 = 0u;
    v23 = 0u;
    v24 = 0u;
    v10 = v9;
    v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v23, v29, 16);
    if (v11)
    {
      v12 = v11;
      v21 = v8;
      v22 = v5;
      v13 = *(_QWORD *)v24;
      do
      {
        for (i = 0; i != v12; ++i)
        {
          if (*(_QWORD *)v24 != v13)
            objc_enumerationMutation(v10);
          v15 = *(void **)(*((_QWORD *)&v23 + 1) + 8 * i);
          objc_msgSend(v15, "replaceIconDataSourcesWithApplication:", v4, v21, v22, (_QWORD)v23);
          v28 = v15;
          objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v28, 1);
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          v17 = (id)objc_msgSend(v6, "cacheImagesForIcons:prioritizedImageAppearances:reason:options:completionHandler:", v16, v7, CFSTR("replace app placeholder with app"), 0, 0);

        }
        v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v23, v29, 16);
      }
      while (v12);
      v9 = v10;
      v8 = v21;
      v5 = v22;
    }
    else
    {
      v9 = v10;
    }
  }
  else
  {
    objc_msgSend(v5, "addApplication:", v4);
    v10 = (id)objc_claimAutoreleasedReturnValue();
    if (v10)
    {
      -[SBHIconManager addNewIconToDesignatedLocation:options:](self, "addNewIconToDesignatedLocation:options:", v10, 4);
      v27 = v10;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v27, 1);
      v18 = objc_claimAutoreleasedReturnValue();

      v9 = (void *)v18;
    }
  }

  objc_msgSend(v9, "firstObject");
  v19 = (void *)objc_claimAutoreleasedReturnValue();

  return v19;
}

- (void)replaceApplicationPlaceholderWithApplication:(id)a3 completionHandler:(id)a4
{
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  SBLeafIcon *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  _QWORD v18[5];
  id v19;
  id v20;
  id v21;
  id v22;
  _QWORD v23[2];

  v23[1] = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  objc_msgSend(v6, "bundleIdentifier");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager iconImageCache](self, "iconImageCache");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager prioritizedCachingImageAppearances](self, "prioritizedCachingImageAppearances");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = -[SBLeafIcon initWithLeafIdentifier:applicationBundleID:]([SBLeafIcon alloc], "initWithLeafIdentifier:applicationBundleID:", v8, v8);
  v23[0] = v11;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v23, 1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v18[0] = MEMORY[0x1E0C809B0];
  v18[1] = 3221225472;
  v18[2] = __81__SBHIconManager_replaceApplicationPlaceholderWithApplication_completionHandler___block_invoke;
  v18[3] = &unk_1E8D8C6B0;
  v18[4] = self;
  v19 = v6;
  v20 = v9;
  v21 = v10;
  v22 = v7;
  v13 = v7;
  v14 = v10;
  v15 = v9;
  v16 = v6;
  v17 = (id)objc_msgSend(v15, "cacheImagesForIcons:prioritizedImageAppearances:reason:options:completionHandler:", v12, v14, CFSTR("replace app placeholder with dummy icon (async)"), 1, v18);

}

void __81__SBHIconManager_replaceApplicationPlaceholderWithApplication_completionHandler___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  _QWORD v10[2];

  v10[1] = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "iconModel");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "addApplication:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "rootFolder");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "indexPathForIcon:", v3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v5)
    objc_msgSend(*(id *)(a1 + 32), "addNewIconToDesignatedLocation:options:", v3, 4);
  v6 = *(void **)(a1 + 48);
  v10[0] = v3;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v10, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (id)objc_msgSend(v6, "cacheImagesForIcons:prioritizedImageAppearances:reason:options:completionHandler:", v7, *(_QWORD *)(a1 + 56), CFSTR("replace app placeholder with app (async)"), 1, 0);

  v9 = *(_QWORD *)(a1 + 64);
  if (v9)
    (*(void (**)(uint64_t, void *))(v9 + 16))(v9, v3);

}

- (void)uninstallIcon:(id)a3
{
  -[SBHIconManager uninstallIcon:animate:completion:](self, "uninstallIcon:animate:completion:", a3, 1, 0);
}

- (void)uninstallIcon:(id)a3 animate:(BOOL)a4
{
  -[SBHIconManager uninstallIcon:animate:completion:](self, "uninstallIcon:animate:completion:", a3, a4, 0);
}

- (void)uninstallIcon:(id)a3 animate:(BOOL)a4 completion:(id)a5
{
  _BOOL4 v6;
  id v8;
  id v9;
  NSObject *v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  NSObject *v14;
  _QWORD v15[4];
  id v16;
  SBHIconManager *v17;
  id v18;
  uint8_t buf[4];
  _BOOL4 v20;
  __int16 v21;
  id v22;
  uint64_t v23;

  v6 = a4;
  v23 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a5;
  if (v8)
  {
    if (!objc_msgSend(v8, "isUninstalled"))
    {
      SBLogIcon();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 67109378;
        v20 = v6;
        v21 = 2112;
        v22 = v8;
        _os_log_impl(&dword_1CFEF3000, v10, OS_LOG_TYPE_DEFAULT, "Uninstall icon animated=%{BOOL}u : %@", buf, 0x12u);
      }

      objc_msgSend(v8, "setUninstalled");
      v15[0] = MEMORY[0x1E0C809B0];
      v15[1] = 3221225472;
      v15[2] = __51__SBHIconManager_uninstallIcon_animate_completion___block_invoke;
      v15[3] = &unk_1E8D8C6D8;
      v16 = v8;
      v17 = self;
      v18 = v9;
      -[SBHIconManager removeIcon:options:completion:](self, "removeIcon:options:completion:", v16, v6, v15);

      goto LABEL_13;
    }
  }
  else
  {
    SBLogCommon();
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG);

    if (v12)
      NSLog(CFSTR("No icon given to uninstall!"));
    if ((objc_msgSend(0, "isUninstalled") & 1) == 0)
    {
      SBLogIcon();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
        -[SBHIconManager uninstallIcon:animate:completion:].cold.1();

      if (v9)
        goto LABEL_12;
      goto LABEL_13;
    }
  }
  SBLogIcon();
  v13 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109378;
    v20 = v6;
    v21 = 2112;
    v22 = v8;
    _os_log_impl(&dword_1CFEF3000, v13, OS_LOG_TYPE_DEFAULT, "Ignoring uninstall icon animated=%{BOOL}u because it is already uninstalled : %@", buf, 0x12u);
  }

  if (v9)
LABEL_12:
    (*((void (**)(id, _QWORD))v9 + 2))(v9, 0);
LABEL_13:

}

uint64_t __51__SBHIconManager_uninstallIcon_animate_completion___block_invoke(uint64_t a1, int a2)
{
  void *v4;
  char v5;
  uint64_t result;

  objc_msgSend(*(id *)(a1 + 32), "completeUninstall");
  if (a2)
  {
    if (objc_msgSend(*(id *)(a1 + 32), "isWidgetIcon"))
    {
      objc_msgSend(*(id *)(a1 + 40), "homeScreenDefaults");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = objc_msgSend(v4, "userDidUndoSuggestedWidget");

      if ((v5 & 1) == 0)
        objc_msgSend(*(id *)(a1 + 40), "updateWidgetDiscoverabilityUserPreferencesByDeletingWidget:", *(_QWORD *)(a1 + 32));
    }
  }
  result = *(_QWORD *)(a1 + 48);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  return result;
}

- (void)addIconToIgnoredList:(id)a3 options:(unint64_t)a4 completion:(id)a5
{
  char v6;
  id v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  int v24;
  uint64_t v25;
  uint64_t (*__ptr32 *v26)();
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  _BOOL4 v30;
  NSObject *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t j;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  id v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  _QWORD v47[4];
  id v48;
  _QWORD v49[4];
  id v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  _BYTE v59[128];
  uint8_t v60[128];
  uint8_t buf[4];
  int v62;
  __int16 v63;
  id v64;
  uint64_t v65;

  v6 = a4;
  v65 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a5;
  if (v8)
  {
    v10 = v6 & 1;
    SBLogIcon();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 67109378;
      v62 = v6 & 1;
      v63 = 2112;
      v64 = v8;
      _os_log_impl(&dword_1CFEF3000, v11, OS_LOG_TYPE_DEFAULT, "Uninstall icon animated=%{BOOL}u : %@", buf, 0x12u);
    }

    if (objc_msgSend(v8, "isFolderIcon")
      && !-[SBHIconManager canAddIconToIgnoredList:](self, "canAddIconToIgnoredList:", v8))
    {
      objc_msgSend(v8, "folder");
      v44 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v44, "allIcons");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = (void *)objc_msgSend(v12, "copy");

      v57 = 0u;
      v58 = 0u;
      v55 = 0u;
      v56 = 0u;
      v14 = v13;
      v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v55, v60, 16);
      if (v15)
      {
        v16 = v15;
        v17 = *(_QWORD *)v56;
        do
        {
          for (i = 0; i != v16; ++i)
          {
            if (*(_QWORD *)v56 != v17)
              objc_enumerationMutation(v14);
            v19 = *(_QWORD *)(*((_QWORD *)&v55 + 1) + 8 * i);
            if (-[SBHIconManager canAddIconToIgnoredList:](self, "canAddIconToIgnoredList:", v19))
              -[SBHIconManager removeIcon:options:completion:](self, "removeIcon:options:completion:", v19, 2, 0);
            else
              -[SBHIconManager addNewIconToDesignatedLocation:options:](self, "addNewIconToDesignatedLocation:options:", v19, 40);
          }
          v16 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v55, v60, 16);
        }
        while (v16);
      }

    }
    v20 = v10 | 2;
    -[SBHIconManager iconModel](self, "iconModel");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "applicationBundleID");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    if (v22)
    {
      objc_msgSend(v21, "applicationIconsForBundleIdentifier:", v22);
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      if ((v6 & 2) == 0)
        goto LABEL_19;
    }
    else
    {
      v23 = (void *)MEMORY[0x1E0C9AA60];
      if ((v6 & 2) == 0)
      {
LABEL_19:
        v24 = objc_msgSend(v8, "isApplicationIcon");
        v25 = MEMORY[0x1E0C809B0];
        v26 = &off_1D0190000;
        if (v24 && (unint64_t)objc_msgSend(v23, "count") >= 2)
        {
          if (objc_msgSend(v8, "leafIdentifierAndApplicationBundleIDMatches"))
          {
            v49[0] = v25;
            v49[1] = 3221225472;
            v49[2] = __58__SBHIconManager_addIconToIgnoredList_options_completion___block_invoke;
            v49[3] = &unk_1E8D8C700;
            v8 = v8;
            v50 = v8;
            v27 = objc_msgSend(v23, "indexOfObjectPassingTest:", v49);
            if (v27 == 0x7FFFFFFFFFFFFFFFLL)
            {
              v28 = 0;
            }
            else
            {
              objc_msgSend(v23, "objectAtIndex:", v27);
              v28 = objc_claimAutoreleasedReturnValue();
            }
            objc_msgSend(v21, "rootFolder");
            v37 = (void *)objc_claimAutoreleasedReturnValue();
            v38 = v37;
            v43 = (void *)v28;
            if (v28)
            {
              objc_msgSend(v37, "indexPathForIcon:", v28);
              v39 = (void *)objc_claimAutoreleasedReturnValue();
            }
            else
            {
              v39 = 0;
            }
            objc_msgSend(v38, "indexPathForIcon:", v8);
            v40 = (void *)objc_claimAutoreleasedReturnValue();
            v46 = v38;
            if (v40 && v39)
            {
              objc_msgSend(v38, "swapIconAtIndexPath:withIconAtIndexPath:options:", v40, v39, 0);
              v41 = v43;
              v42 = v43;

              v8 = v42;
            }
            else
            {
              v41 = v43;
            }

            v26 = &off_1D0190000;
            v25 = MEMORY[0x1E0C809B0];
          }
        }
        else
        {
          v10 |= 2uLL;
        }
        v47[0] = v25;
        v47[1] = *((_QWORD *)v26 + 254);
        v47[2] = __58__SBHIconManager_addIconToIgnoredList_options_completion___block_invoke_2;
        v47[3] = &unk_1E8D86600;
        v48 = v9;
        -[SBHIconManager removeIcon:options:completion:](self, "removeIcon:options:completion:", v8, v10, v47);

LABEL_43:
        goto LABEL_44;
      }
    }
    v45 = v21;
    v53 = 0u;
    v54 = 0u;
    v51 = 0u;
    v52 = 0u;
    v32 = v23;
    v33 = objc_msgSend(v32, "countByEnumeratingWithState:objects:count:", &v51, v59, 16);
    if (v33)
    {
      v34 = v33;
      v35 = *(_QWORD *)v52;
      do
      {
        for (j = 0; j != v34; ++j)
        {
          if (*(_QWORD *)v52 != v35)
            objc_enumerationMutation(v32);
          -[SBHIconManager removeIcon:options:completion:](self, "removeIcon:options:completion:", *(_QWORD *)(*((_QWORD *)&v51 + 1) + 8 * j), v20, 0);
        }
        v34 = objc_msgSend(v32, "countByEnumeratingWithState:objects:count:", &v51, v59, 16);
      }
      while (v34);
    }

    if (v9)
      (*((void (**)(id, uint64_t))v9 + 2))(v9, 1);
    v21 = v45;
    goto LABEL_43;
  }
  SBLogCommon();
  v29 = objc_claimAutoreleasedReturnValue();
  v30 = os_log_type_enabled(v29, OS_LOG_TYPE_DEBUG);

  if (v30)
    NSLog(CFSTR("No icon given to hide!"));
  SBLogIcon();
  v31 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
    -[SBHIconManager addIconToIgnoredList:options:completion:].cold.1();

  if (v9)
    (*((void (**)(id, _QWORD))v9 + 2))(v9, 0);
LABEL_44:

}

BOOL __58__SBHIconManager_addIconToIgnoredList_options_completion___block_invoke(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a1 + 32) != a2;
}

uint64_t __58__SBHIconManager_addIconToIgnoredList_options_completion___block_invoke_2(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  return result;
}

- (BOOL)canAddIconToIgnoredList:(id)a3
{
  id v4;
  BOOL v5;
  void *v6;

  v4 = a3;
  if (objc_msgSend(v4, "isLeafIcon") && (objc_msgSend(v4, "isWidgetIcon") & 1) == 0)
  {
    -[SBHIconManager delegate](self, "delegate");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = (objc_opt_respondsToSelector() & 1) == 0
      || objc_msgSend(v6, "iconManager:canAddIconToIgnoredList:", self, v4);

  }
  else
  {
    v5 = 0;
  }

  return v5;
}

- (void)removeIcon:(id)a3 options:(unint64_t)a4 completion:(id)a5
{
  id v8;
  void (**v9)(id, uint64_t);
  void *v10;
  void *v11;
  void *v12;
  unint64_t v13;
  id v14;
  id v15;
  void (**v16)(void *, id);
  id v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  NSObject *v22;
  _BOOL4 v23;
  NSObject *v24;
  NSObject *v25;
  void *v26;
  __CFString *v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  uint64_t v34;
  void (**v35)(id, uint64_t);
  void *v36;
  void *v37;
  void (**v38)(void *, id);
  _QWORD aBlock[4];
  id v40;
  id v41;
  unint64_t v42;
  unint64_t v43;

  v8 = a3;
  v9 = (void (**)(id, uint64_t))a5;
  if (v8)
  {
    -[SBHIconManager rootFolder](self, "rootFolder");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "indexPathForIcon:", v8);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager iconModel](self, "iconModel");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = -[SBHIconManager gridCellInfoOptions](self, "gridCellInfoOptions");
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 3221225472;
    aBlock[2] = __48__SBHIconManager_removeIcon_options_completion___block_invoke;
    aBlock[3] = &unk_1E8D8C728;
    v14 = v12;
    v40 = v14;
    v15 = v10;
    v41 = v15;
    v42 = v13;
    v43 = a4;
    v16 = (void (**)(void *, id))_Block_copy(aBlock);
    if (v11)
    {
      objc_msgSend(v15, "folderContainingIndexPath:relativeIndexPath:", v11, 0);
      v17 = (id)objc_claimAutoreleasedReturnValue();
      -[SBHIconManager iconListViewForIndexPath:](self, "iconListViewForIndexPath:", v11);
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "displayedIconViewForIcon:", v8);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      v20 = v19;
      if (v19)
      {
        objc_msgSend(v19, "setAllowsEditingAnimation:", 0);
        objc_msgSend(v18, "markIcon:asNeedingAnimation:", v8, 0);
      }
      v37 = v20;
      objc_msgSend(v17, "startCoalescingContentChangesForReason:", CFSTR("SBUninstallIconCoalesceID"));
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      v16[2](v16, v8);
      v36 = v21;
      objc_msgSend(v21, "invalidate");
      if (v17 != v15 && objc_msgSend(v17, "isEmpty"))
      {
        if (-[SBHIconManager hasOpenFolder](self, "hasOpenFolder"))
        {
          -[SBHIconManager popExpandedIconAnimated:completionHandler:](self, "popExpandedIconAnimated:completionHandler:", 1, 0);
        }
        else
        {
          objc_msgSend(v17, "icon");
          v26 = (void *)objc_claimAutoreleasedReturnValue();
          -[SBHIconManager uninstallIcon:animate:](self, "uninstallIcon:animate:", v26, 1);

        }
      }
      v38 = v16;
      objc_msgSend(v8, "gridSizeClass");
      v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
      if (v27 == CFSTR("SBHIconGridSizeClassDefault"))
      {
        v34 = 0;
      }
      else
      {
        objc_msgSend(v8, "gridSizeClass");
        v35 = v9;
        v28 = v17;
        v29 = v15;
        v30 = v18;
        v31 = v14;
        v32 = v11;
        v33 = (void *)objc_claimAutoreleasedReturnValue();
        v34 = objc_msgSend(v33, "isEqualToString:", CFSTR("SBHIconGridSizeClassDefault")) ^ 1;

        v11 = v32;
        v14 = v31;
        v18 = v30;
        v15 = v29;
        v17 = v28;
        v9 = v35;
      }

      -[SBHIconManager layoutIconListsWithAnimationType:](self, "layoutIconListsWithAnimationType:", v34);
      if (v9)
        v9[2](v9, 1);

      v16 = v38;
    }
    else
    {
      SBLogIcon();
      v25 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
        -[SBHIconManager removeIcon:options:completion:].cold.2();

      if (objc_msgSend(v8, "isLeafIcon")
        && objc_msgSend(v14, "_shouldSkipAddingIcon:toRootFolder:", v8, v15))
      {
        v16[2](v16, v8);
      }
      if (v9)
        v9[2](v9, 0);
    }

  }
  else
  {
    SBLogCommon();
    v22 = objc_claimAutoreleasedReturnValue();
    v23 = os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG);

    if (v23)
      NSLog(CFSTR("No icon given to remove!"));
    SBLogIcon();
    v24 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
      -[SBHIconManager removeIcon:options:completion:].cold.1();

    if (v9)
      v9[2](v9, 0);
  }

}

void __48__SBHIconManager_removeIcon_options_completion___block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;

  v7 = a2;
  objc_msgSend(v7, "leafIdentifier");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "leafIconForIdentifier:", v3);
  v4 = (id)objc_claimAutoreleasedReturnValue();
  if (!v4)
    v4 = v7;
  objc_msgSend(*(id *)(a1 + 40), "removeIcon:options:listGridCellInfoOptions:", v4, 26214400, *(_QWORD *)(a1 + 48));
  objc_msgSend(*(id *)(a1 + 40), "ignoredList");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if ((*(_BYTE *)(a1 + 56) & 2) != 0 && objc_msgSend(v5, "isAllowedToContainIcon:", v4))
    objc_msgSend(v6, "addIcon:", v4);
  else
    objc_msgSend(*(id *)(a1 + 32), "removeIcon:", v4);
  objc_msgSend(*(id *)(a1 + 32), "saveIconStateIfNeeded");

}

- (void)addNewIconsToDesignatedLocations:(id)a3 saveIconState:(BOOL)a4
{
  _BOOL4 v4;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v4 = a4;
  v17 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v13;
    do
    {
      v10 = 0;
      do
      {
        if (*(_QWORD *)v13 != v9)
          objc_enumerationMutation(v6);
        -[SBHIconManager addNewIconToDesignatedLocation:options:](self, "addNewIconToDesignatedLocation:options:", *(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * v10++), 0);
      }
      while (v8 != v10);
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v8);
  }
  if (v4)
  {
    -[SBHIconManager iconModel](self, "iconModel");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "saveIconStateIfNeeded");

  }
}

- (void)addNewIconToDesignatedLocation:(id)a3 options:(unint64_t)a4
{
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  int v15;
  NSObject *v16;
  uint64_t v17;
  int v18;
  void *v19;
  void *v20;
  _QWORD v21[4];
  id v22;
  id v23;
  id v24;
  _QWORD v25[4];
  id v26;
  uint64_t v27;
  char v28;
  uint8_t buf[4];
  void *v30;
  __int16 v31;
  id v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  -[SBHIconManager iconModel](self, "iconModel");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v7, "isIconVisible:", v6) & 1) != 0)
  {
    -[SBHIconManager iconDragManager](self, "iconDragManager");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "leafIdentifier");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "swapTrackedIconWithIdentifier:withIcon:", v9, v6);
    if ((a4 & 8) != 0)
      -[SBHIconManager addReasonToIgnoreUserPreferenceForAddingNewIconsToHomeScreen:](self, "addReasonToIgnoreUserPreferenceForAddingNewIconsToHomeScreen:", CFSTR("SBHIconManagerAddNewIconOverridingUserPreference"));
    objc_msgSend(v7, "addIconToDesignatedLocation:options:listGridCellInfoOptions:", v6, (a4 >> 3) & 0xE | (a4 >> 2) & 1, -[SBHIconManager gridCellInfoOptions](self, "gridCellInfoOptions"));
    objc_msgSend(v7, "rootFolder");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "indexPathForIcon:", v6);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    if ((a4 & 8) != 0)
      -[SBHIconManager removeReasonToIgnoreUserPreferenceForAddingNewIconsToHomeScreen:](self, "removeReasonToIgnoreUserPreferenceForAddingNewIconsToHomeScreen:", CFSTR("SBHIconManagerAddNewIconOverridingUserPreference"));
    -[SBHIconManager layoutIconListsWithAnimationType:](self, "layoutIconListsWithAnimationType:", -1);
    -[SBHIconManager rootFolderController](self, "rootFolderController");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    if (v11)
    {
      v19 = v10;
      v20 = v8;
      -[SBHIconManager iconListViewForIndexPath:](self, "iconListViewForIndexPath:", v11);
      v13 = (id)objc_claimAutoreleasedReturnValue();
      if (v13)
      {
        objc_msgSend(v12, "visibleIconListViews");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        v15 = objc_msgSend(v14, "containsObject:", v13);

      }
      else
      {
        v15 = 0;
      }
      if ((a4 & 2) != 0)
      {
        v17 = objc_msgSend(v12, "pageIndexForIconListModelIndex:", SBFolderRelativeListIndex(v11));
        v25[0] = MEMORY[0x1E0C809B0];
        v25[1] = 3221225472;
        v25[2] = __57__SBHIconManager_addNewIconToDesignatedLocation_options___block_invoke;
        v25[3] = &unk_1E8D87520;
        v26 = v12;
        v27 = v17;
        v28 = a4 & 1;
        -[SBHIconManager performAfterIconContextMenuDismissesUsingBlock:](self, "performAfterIconContextMenuDismissesUsingBlock:", v25);

      }
      if ((a4 & 1) != 0)
        v18 = v15;
      else
        v18 = 0;
      v8 = v20;
      if (v18 == 1)
      {
        v21[0] = MEMORY[0x1E0C809B0];
        v21[1] = 3221225472;
        v21[2] = __57__SBHIconManager_addNewIconToDesignatedLocation_options___block_invoke_2;
        v21[3] = &unk_1E8D84F18;
        v22 = v12;
        v13 = v13;
        v23 = v13;
        v24 = v6;
        -[SBHIconManager performAfterIconContextMenuDismissesUsingBlock:](self, "performAfterIconContextMenuDismissesUsingBlock:", v21);

      }
      v10 = v19;
    }
    else
    {
      v13 = 0;
    }
    if ((a4 & 4) != 0)
      objc_msgSend(v7, "saveIconStateIfNeeded");

  }
  else
  {
    SBLogIcon();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      v30 = v7;
      v31 = 2112;
      v32 = v6;
      _os_log_impl(&dword_1CFEF3000, v16, OS_LOG_TYPE_DEFAULT, "addNewIconToDesignatedLocation:options: -- Triggering icon relayout for _iconModel '%@' because, apparently, '%@' isn't visible!", buf, 0x16u);
    }

    -[SBHIconManager relayout](self, "relayout");
  }

}

uint64_t __57__SBHIconManager_addNewIconToDesignatedLocation_options___block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setCurrentPageIndex:animated:completion:", *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 48), 0);
}

void __57__SBHIconManager_addNewIconToDesignatedLocation_options___block_invoke_2(uint64_t a1)
{
  void *v2;
  int v3;

  objc_msgSend(*(id *)(a1 + 32), "visibleIconListViews");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "containsObject:", *(_QWORD *)(a1 + 40));

  if (v3)
    objc_msgSend(*(id *)(a1 + 40), "popIcon:", *(_QWORD *)(a1 + 48));
}

- (void)addReasonToIgnoreUserPreferenceForAddingNewIconsToHomeScreen:(id)a3
{
  id v4;
  NSObject *v5;
  NSCountedSet *reasonsToIgnoreUserPreferenceForAddingNewIconsToHomeScreen;
  NSCountedSet *v7;
  NSCountedSet *v8;
  int v9;
  id v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  SBLogIcon();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v9 = 138412290;
    v10 = v4;
    _os_log_impl(&dword_1CFEF3000, v5, OS_LOG_TYPE_INFO, "Overriding user preference for adding new icons to the home screen for reason: %@", (uint8_t *)&v9, 0xCu);
  }

  reasonsToIgnoreUserPreferenceForAddingNewIconsToHomeScreen = self->_reasonsToIgnoreUserPreferenceForAddingNewIconsToHomeScreen;
  if (!reasonsToIgnoreUserPreferenceForAddingNewIconsToHomeScreen)
  {
    v7 = (NSCountedSet *)objc_alloc_init(MEMORY[0x1E0CB3550]);
    v8 = self->_reasonsToIgnoreUserPreferenceForAddingNewIconsToHomeScreen;
    self->_reasonsToIgnoreUserPreferenceForAddingNewIconsToHomeScreen = v7;

    reasonsToIgnoreUserPreferenceForAddingNewIconsToHomeScreen = self->_reasonsToIgnoreUserPreferenceForAddingNewIconsToHomeScreen;
  }
  -[NSCountedSet addObject:](reasonsToIgnoreUserPreferenceForAddingNewIconsToHomeScreen, "addObject:", v4);

}

- (void)removeReasonToIgnoreUserPreferenceForAddingNewIconsToHomeScreen:(id)a3
{
  id v4;
  NSObject *v5;
  int v6;
  id v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  SBLogIcon();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = 138412290;
    v7 = v4;
    _os_log_impl(&dword_1CFEF3000, v5, OS_LOG_TYPE_INFO, "End overriding user preference for adding new icons to the home screen for reason: %@", (uint8_t *)&v6, 0xCu);
  }

  -[NSCountedSet removeObject:](self->_reasonsToIgnoreUserPreferenceForAddingNewIconsToHomeScreen, "removeObject:", v4);
}

- (void)scrollToIconListContainingIcon:(id)a3 animate:(BOOL)a4
{
  _BOOL8 v4;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v16;

  v4 = a4;
  v6 = a3;
  -[SBHIconManager rootFolder](self, "rootFolder");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager rootFolder](self, "rootFolder");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "indexPathForIcon:", v6);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = 0;
  objc_msgSend(v7, "folderContainingIndexPath:relativeIndexPath:", v9, &v16);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = v16;

  if (v10)
  {
    v12 = SBFolderRelativeListIndex(v11);
    -[SBHIconManager rootFolder](self, "rootFolder");
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    if (v10 == v13)
    {
      if (v12 == 20000 || v12 == 40000)
      {
        -[SBHIconManager presentTodayOverlay](self, "presentTodayOverlay");
        goto LABEL_5;
      }
      if (v12 == 10000)
        goto LABEL_5;
      -[SBHIconManager rootFolderController](self, "rootFolderController");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "setCurrentPageIndex:animated:", objc_msgSend(v14, "pageIndexForIconListModelIndex:", v12), v4);
    }
    else
    {
      -[SBHIconManager _currentFolderController](self, "_currentFolderController");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "setCurrentPageIndexToListDirectlyContainingIcon:animated:", v6, v4);
    }

  }
LABEL_5:

}

- (BOOL)_shouldLibraryOverlayAllowSwipeToDismissGesture:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  int v12;
  uint64_t v13;

  v4 = a3;
  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "view");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "window");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "windowScene");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "view");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "window");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "windowScene");
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8 == v11
    && ((v13 = objc_msgSend(v5, "currentPageIndex"), v13 == objc_msgSend(v5, "trailingCustomViewPageIndex"))
     || objc_msgSend(v5, "destinationPageState") == 4))
  {
    v12 = objc_msgSend(v5, "isScrollTracking") ^ 1;
  }
  else
  {
    LOBYTE(v12) = 0;
  }

  return v12;
}

- (void)_scrollToLastIconPageIfNecessaryForLibraryOverlayDismissal:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  NSObject *v14;
  uint64_t v15;
  _DWORD v16[2];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "view");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "window");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "windowScene");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "view");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "window");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "windowScene");
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8 == v11)
  {
    v12 = objc_msgSend(v5, "currentPageIndex");
    if ((v12 == objc_msgSend(v5, "trailingCustomViewPageIndex") || objc_msgSend(v5, "destinationPageState") == 4)
      && (objc_msgSend(v5, "isScrollTracking") & 1) == 0
      && !-[SBHIconManager disablesScrollingToLastIconPageForLibraryDismissal](self, "disablesScrollingToLastIconPageForLibraryDismissal"))
    {
      v13 = -[SBHIconManager contentVisibility](self, "contentVisibility");
      SBLogIcon();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        v16[0] = 67109120;
        v16[1] = v13 != 2;
        _os_log_impl(&dword_1CFEF3000, v14, OS_LOG_TYPE_DEFAULT, "Scrolling to last icon page due to modal library dismissal; animating scroll: %{BOOL}u",
          (uint8_t *)v16,
          8u);
      }

      v15 = objc_msgSend(v5, "lastIconPageIndex");
      if (v13 == 2)
        objc_msgSend(v5, "setCurrentPageIndex:animated:", v15, 0);
      else
        objc_msgSend(v5, "scrollUsingDecelerationAnimationToPageIndex:withCompletionHandler:", v15, 0);
    }
  }

}

- (void)animateToDefaultStateWithCompletionHandler:(id)a3
{
  id v4;
  id v5;

  v4 = a3;
  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "scrollUsingDecelerationAnimationToDefaultPageWithCompletionHandler:", v4);

}

- (void)setIconToReveal:(id)a3
{
  -[SBHIconManager setIconToReveal:revealingPrevious:](self, "setIconToReveal:revealingPrevious:", a3, 0);
}

- (void)setIconToReveal:(id)a3 revealingPrevious:(BOOL)a4
{
  _BOOL4 v4;
  SBIcon *v7;
  SBIcon *iconToReveal;
  BOOL v9;
  SBIcon *v10;

  v4 = a4;
  v7 = (SBIcon *)a3;
  iconToReveal = self->_iconToReveal;
  if (iconToReveal != v7)
  {
    v10 = v7;
    if (iconToReveal)
      v9 = !v4;
    else
      v9 = 1;
    if (!v9 && (-[SBIcon isEqual:](iconToReveal, "isEqual:", v7) & 1) == 0)
      -[SBHIconManager addNewIconToDesignatedLocation:options:](self, "addNewIconToDesignatedLocation:options:", self->_iconToReveal, 4);
    objc_storeStrong((id *)&self->_iconToReveal, a3);
    v7 = v10;
  }

}

- (void)finishInstallingIconAnimated:(BOOL)a3
{
  _BOOL4 v3;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;

  v3 = a3;
  -[SBHIconManager rootFolder](self, "rootFolder");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBIcon leafIdentifier](self->_iconToReveal, "leafIdentifier");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "listsContainingLeafIconWithIdentifier:", v6);
  v10 = (id)objc_claimAutoreleasedReturnValue();

  if (!objc_msgSend(v10, "count"))
  {
    -[SBHIconManager iconToReveal](self, "iconToReveal");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if (v7)
    {
      if (v3)
        v8 = 5;
      else
        v8 = 4;
      -[SBHIconManager addNewIconToDesignatedLocation:options:](self, "addNewIconToDesignatedLocation:options:", v7, v8);
    }

  }
  -[SBHIconManager delegate](self, "delegate");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v9, "iconManagerDidFinishInstallForIcon:", self);
  -[SBHIconManager setIconToReveal:revealingPrevious:](self, "setIconToReveal:revealingPrevious:", 0, 0);
  -[SBHIconModel saveIconStateIfNeeded](self->_iconModel, "saveIconStateIfNeeded");

}

- (void)tryScrollToIconToRevealAnimated:(BOOL)a3
{
  void *v5;
  void *v6;
  void *v7;
  _QWORD v8[5];
  BOOL v9;

  v5 = (void *)MEMORY[0x1E0CB3940];
  MEMORY[0x1D17DE86C](a3, a2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "stringWithFormat:", CFSTR("tryScrollToIconToRevealAnimated:%@"), v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = __50__SBHIconManager_tryScrollToIconToRevealAnimated___block_invoke;
  v8[3] = &unk_1E8D85BB8;
  v8[4] = self;
  v9 = a3;
  -[SBHIconManager _enqueueTransitionName:withHandler:](self, "_enqueueTransitionName:withHandler:", v7, v8);

}

uint64_t __50__SBHIconManager_tryScrollToIconToRevealAnimated___block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_tryScrollToIconToRevealAnimated:", *(unsigned __int8 *)(a1 + 40));
}

- (void)_tryScrollToIconToRevealAnimated:(BOOL)a3
{
  _BOOL8 v3;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  char v10;
  SBHIconModel *iconModel;
  void *v12;
  SBIcon *v13;
  _QWORD v14[5];
  BOOL v15;

  v3 = a3;
  -[SBHIconManager rootViewController](self, "rootViewController");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager iconToReveal](self, "iconToReveal");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (v7)
  {
    if ((objc_msgSend(v6, "isLeadingCustomViewVisible") & 1) != 0
      || objc_msgSend(v6, "isPullDownSearchVisible"))
    {
      goto LABEL_4;
    }
    -[SBHIconManager rootFolder](self, "rootFolder");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "indexPathForIcon:", v7);
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    if (v9)
      goto LABEL_10;
    v10 = objc_msgSend(v7, "isLeafIcon");
    iconModel = self->_iconModel;
    if ((v10 & 1) != 0)
    {
      -[SBHIconModel indexPathForNewIcon:isDesignatedLocation:replaceExistingIconAtIndexPath:](iconModel, "indexPathForNewIcon:isDesignatedLocation:replaceExistingIconAtIndexPath:", v7, 0, 0);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      -[SBHIconModel rootFolder](iconModel, "rootFolder");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "indexPathForFirstFreeSlotAvoidingFirstList:", 1);
      v9 = (void *)objc_claimAutoreleasedReturnValue();

    }
    if (!v9)
    {
LABEL_4:
      -[SBHIconManager finishInstallingIconAnimated:](self, "finishInstallingIconAnimated:", 0);
    }
    else
    {
LABEL_10:
      v13 = self->_iconToReveal;
      -[SBHIconManager setIconToReveal:revealingPrevious:](self, "setIconToReveal:revealingPrevious:", 0, 0);
      -[SBHIconManager popToCurrentRootIconList](self, "popToCurrentRootIconList");
      -[SBHIconManager setIconToReveal:revealingPrevious:](self, "setIconToReveal:revealingPrevious:", v13, 0);
      v14[0] = MEMORY[0x1E0C809B0];
      v14[1] = 3221225472;
      v14[2] = __51__SBHIconManager__tryScrollToIconToRevealAnimated___block_invoke;
      v14[3] = &unk_1E8D87F20;
      v14[4] = self;
      v15 = v3;
      objc_msgSend(v5, "revealIcon:animated:completionHandler:", v7, v3, v14);

    }
  }

}

uint64_t __51__SBHIconManager__tryScrollToIconToRevealAnimated___block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "finishInstallingIconAnimated:", *(unsigned __int8 *)(a1 + 40));
}

uint64_t __56__SBHIconManager_revealIcon_animated_completionHandler___block_invoke_5(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

- (void)layoutIconListsWithAnimationType:(int64_t)a3
{
  -[SBHIconManager layoutIconListsWithAnimationType:forceRelayout:](self, "layoutIconListsWithAnimationType:forceRelayout:", a3, 0);
}

- (void)layoutIconListsWithAnimationType:(int64_t)a3 forceRelayout:(BOOL)a4
{
  _BOOL8 v4;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];
  _BYTE v29[128];
  uint64_t v30;

  v4 = a4;
  v30 = *MEMORY[0x1E0C80C00];
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "folderControllers");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v24, v29, 16);
  if (v9)
  {
    v10 = v9;
    v11 = *(_QWORD *)v25;
    do
    {
      v12 = 0;
      do
      {
        if (*(_QWORD *)v25 != v11)
          objc_enumerationMutation(v8);
        objc_msgSend(*(id *)(*((_QWORD *)&v24 + 1) + 8 * v12++), "layoutIconListsWithAnimationType:forceRelayout:", a3, v4);
      }
      while (v10 != v12);
      v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v24, v29, 16);
    }
    while (v10);
  }

  -[SBHIconManager floatingDockViewController](self, "floatingDockViewController");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "layoutUserControlledIconListsWithAnimationType:forceRelayout:", a3, v4);

  -[SBHIconManager _effectiveTodayViewController](self, "_effectiveTodayViewController");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "layoutIconListViewWithAnimationType:forceRelayout:", a3, v4);

  v22 = 0u;
  v23 = 0u;
  v20 = 0u;
  v21 = 0u;
  -[SBHIconManager _libraryViewControllers](self, "_libraryViewControllers", 0);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v20, v28, 16);
  if (v16)
  {
    v17 = v16;
    v18 = *(_QWORD *)v21;
    do
    {
      v19 = 0;
      do
      {
        if (*(_QWORD *)v21 != v18)
          objc_enumerationMutation(v15);
        objc_msgSend(*(id *)(*((_QWORD *)&v20 + 1) + 8 * v19++), "layoutIconListsWithAnimationType:forceRelayout:", a3, v4);
      }
      while (v17 != v19);
      v17 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v20, v28, 16);
    }
    while (v17);
  }

}

- (void)unscatterAnimated:(BOOL)a3 afterDelay:(double)a4 withCompletion:(id)a5
{
  _BOOL8 v6;
  id v8;
  void *v9;
  _QWORD v10[5];
  id v11;

  v6 = a3;
  v8 = a5;
  -[SBHIconManager setAnimatingForUnscatter:](self, "setAnimatingForUnscatter:", 1);
  -[SBHIconManager setEditing:](self, "setEditing:", 0);
  -[SBHIconManager _ensureRootFolderController](self, "_ensureRootFolderController");
  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (v9)
  {
    v10[0] = MEMORY[0x1E0C809B0];
    v10[1] = 3221225472;
    v10[2] = __62__SBHIconManager_unscatterAnimated_afterDelay_withCompletion___block_invoke;
    v10[3] = &unk_1E8D881C0;
    v10[4] = self;
    v11 = v8;
    objc_msgSend(v9, "unscatterAnimated:afterDelay:withCompletion:", v6, v10, a4);

  }
  else if (v8)
  {
    (*((void (**)(id, _QWORD))v8 + 2))(v8, 0);
  }

}

uint64_t __62__SBHIconManager_unscatterAnimated_afterDelay_withCompletion___block_invoke(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  objc_msgSend(*(id *)(a1 + 32), "setAnimatingForUnscatter:", 0);
  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a2);
  return result;
}

+ (double)defaultIconLayoutAnimationDuration
{
  return 0.225;
}

- (id)iconListViewForIndexPath:(id)a3
{
  id v4;

  v4 = 0;
  -[SBHIconManager getListView:folder:relativePath:forIndexPath:](self, "getListView:folder:relativePath:forIndexPath:", &v4, 0, 0, a3);
  return v4;
}

- (SBFolderIconImageCache)folderIconImageCache
{
  SBFolderIconImageCache *folderIconImageCache;
  uint64_t *p_folderIconImageCache;
  void *v5;
  void *v6;
  SBFolderIconImageCache *v7;
  SBFolderIconImageCache *v8;
  SBFolderIconImageCache *v9;
  void *v10;
  NSObject *v11;

  p_folderIconImageCache = (uint64_t *)&self->_folderIconImageCache;
  folderIconImageCache = self->_folderIconImageCache;
  if (!folderIconImageCache)
  {
    -[SBHIconManager listLayoutProvider](self, "listLayoutProvider");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "layoutForIconLocation:", CFSTR("SBIconLocationFolder"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    v7 = -[SBFolderIconImageCache initWithListLayout:]([SBFolderIconImageCache alloc], "initWithListLayout:", v6);
    v8 = self->_folderIconImageCache;
    self->_folderIconImageCache = v7;

    v9 = self->_folderIconImageCache;
    -[SBHIconManager iconImageCache](self, "iconImageCache");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBFolderIconImageCache setIconImageCache:](v9, "setIconImageCache:", v10);

    SBLogIcon();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
      -[SBHIconManager folderIconImageCache].cold.1(p_folderIconImageCache, v11);

    folderIconImageCache = (SBFolderIconImageCache *)*p_folderIconImageCache;
  }
  return folderIconImageCache;
}

- (SBHIconImageCache)iconImageCache
{
  SBHIconImageCache *iconImageCache;
  void *v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  SBHIconImageCache *v14;
  SBHIconImageCache *v15;
  void *v16;

  iconImageCache = self->_iconImageCache;
  if (!iconImageCache)
  {
    -[SBHIconManager listLayoutProvider](self, "listLayoutProvider");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "layoutForIconLocation:", CFSTR("SBIconLocationRoot"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "iconImageInfo");
    v7 = v6;
    v9 = v8;
    v11 = v10;
    v13 = v12;

    v14 = -[SBHIconImageCache initWithName:iconImageInfo:]([SBHIconImageCache alloc], "initWithName:iconImageInfo:", CFSTR("iconImages"), v7, v9, v11, v13);
    v15 = self->_iconImageCache;
    self->_iconImageCache = v14;

    -[SBHIconImageCache setPurgesCachedImagesImmediatelyUponIconUpdate:](self->_iconImageCache, "setPurgesCachedImagesImmediatelyUponIconUpdate:", 0);
    -[SBHIconManager delegate](self, "delegate");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_opt_respondsToSelector() & 1) != 0)
      objc_msgSend(v16, "iconManager:willUseIconImageCache:", self, self->_iconImageCache);

    iconImageCache = self->_iconImageCache;
  }
  return iconImageCache;
}

- (SBHIconImageCache)addWidgetSheetIconImageCache
{
  SBHIconImageCache *addWidgetSheetIconImageCache;
  void *v4;
  uint64_t v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  SBHIconImageCache *v13;
  SBHIconImageCache *v14;
  _BYTE v16[8];
  double v17;
  double v18;
  double v19;
  double v20;

  addWidgetSheetIconImageCache = self->_addWidgetSheetIconImageCache;
  if (!addWidgetSheetIconImageCache)
  {
    -[SBHIconManager delegate](self, "delegate");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v5 = objc_msgSend(v4, "addWidgetSheetStyleForIconManager:", self);
    else
      v5 = 0;
    objc_msgSend(MEMORY[0x1E0DC3BF8], "mainScreen");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "scale");
    v8 = v7;

    if (v5 == 1)
    {
      SBHAddWidgetSheetSplitViewIconMetricsForScale((uint64_t)v16, v8);
    }
    else
    {
      v9 = 0.0;
      v10 = 0.0;
      v11 = 0.0;
      v12 = 0.0;
      if (v5)
      {
LABEL_10:
        v13 = -[SBHIconImageCache initWithName:iconImageInfo:]([SBHIconImageCache alloc], "initWithName:iconImageInfo:", CFSTR("addWidgetSheetIconImageCache"), v9, v10, v11, v12);
        v14 = self->_addWidgetSheetIconImageCache;
        self->_addWidgetSheetIconImageCache = v13;

        addWidgetSheetIconImageCache = self->_addWidgetSheetIconImageCache;
        return addWidgetSheetIconImageCache;
      }
      SBHAddWidgetSheetCompactViewIconMetricsForScale((uint64_t)v16, v8);
    }
    v9 = v17;
    v10 = v18;
    v11 = v19;
    v12 = v20;
    goto LABEL_10;
  }
  return addWidgetSheetIconImageCache;
}

- (void)enumerateAllIconImageCachesUsingBlock:(id)a3
{
  void (**v4)(_QWORD);
  void (**v5)(_QWORD);

  v4 = (void (**)(_QWORD))a3;
  v5 = v4;
  if (self->_iconImageCache)
  {
    v4[2](v4);
    v4 = v5;
  }
  if (self->_addWidgetSheetIconImageCache)
  {
    v4[2](v5);
    v4 = v5;
  }

}

- (void)resetAllIconImageCaches
{
  SBHIconImageCache *iconImageCache;
  SBHIconImageCache *addWidgetSheetIconImageCache;

  -[SBHIconManager enumerateAllIconImageCachesUsingBlock:](self, "enumerateAllIconImageCachesUsingBlock:", &__block_literal_global_263);
  iconImageCache = self->_iconImageCache;
  self->_iconImageCache = 0;

  addWidgetSheetIconImageCache = self->_addWidgetSheetIconImageCache;
  self->_addWidgetSheetIconImageCache = 0;

}

uint64_t __41__SBHIconManager_resetAllIconImageCaches__block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "purgeAllCachedImages");
}

- (SBHAddWidgetSheetConfigurationManager)addWidgetSheetConfigurationManager
{
  SBHAddWidgetSheetConfigurationManager *addWidgetSheetConfigurationManager;
  SBHAddWidgetSheetConfigurationManager *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  SBHAddWidgetSheetConfigurationManager *v9;

  addWidgetSheetConfigurationManager = self->_addWidgetSheetConfigurationManager;
  if (!addWidgetSheetConfigurationManager)
  {
    v4 = -[SBHAddWidgetSheetConfigurationManager initWithWidgetExtensionProvider:]([SBHAddWidgetSheetConfigurationManager alloc], "initWithWidgetExtensionProvider:", self->_widgetExtensionProvider);
    -[SBHAddWidgetSheetConfigurationManager setConfigurationManagerDelegate:](v4, "setConfigurationManagerDelegate:", self);
    -[SBHIconManager iconModel](self, "iconModel");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHAddWidgetSheetConfigurationManager setIconModel:](v4, "setIconModel:", v5);

    -[SBHIconManager listLayoutProvider](self, "listLayoutProvider");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHAddWidgetSheetConfigurationManager setListLayoutProvider:](v4, "setListLayoutProvider:", v6);

    -[SBHIconManager delegate](self, "delegate");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v8 = objc_msgSend(v7, "addWidgetSheetStyleForIconManager:", self);
    else
      v8 = 0;
    -[SBHAddWidgetSheetConfigurationManager setAddWidgetSheetStyle:](v4, "setAddWidgetSheetStyle:", v8);
    v9 = self->_addWidgetSheetConfigurationManager;
    self->_addWidgetSheetConfigurationManager = v4;

    addWidgetSheetConfigurationManager = self->_addWidgetSheetConfigurationManager;
  }
  return addWidgetSheetConfigurationManager;
}

- (BOOL)isRootFolderContentVisible
{
  void *v3;
  char v4;

  -[SBHIconManager delegate](self, "delegate");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v4 = objc_msgSend(v3, "isRootFolderContentVisibleForIconManager:", self);
  else
    v4 = 1;

  return v4;
}

- (BOOL)isIconContentPossiblyVisibleOverApplication
{
  void *v3;
  char v4;

  -[SBHIconManager delegate](self, "delegate");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v4 = objc_msgSend(v3, "isIconContentPossiblyVisibleOverApplicationForIconManager:", self);
  else
    v4 = 0;

  return v4;
}

- (void)setIdleModeText:(id)a3
{
  id v4;
  id v5;

  v4 = a3;
  -[SBHIconManager rootViewController](self, "rootViewController");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setIdleText:", v4);

}

- (void)removeAllIconAnimations
{
  void *v3;
  void *v4;
  id v5;

  -[SBHIconManager currentRootIconList](self, "currentRootIconList");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "removeAllIconAnimations");

  -[SBHIconManager dockListView](self, "dockListView");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "layer");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "removeAllAnimations");

}

- (void)noteFloatingDockWillChangeHeight
{
  void *v2;
  id v3;

  -[SBHIconManager rootViewController](self, "rootViewController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "contentView");
  v3 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v3, "setNeedsLayout");
}

- (void)noteFloatingDockWillAnimateChangeInHeight
{
  void *v2;
  id v3;

  -[SBHIconManager rootViewController](self, "rootViewController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "contentView");
  v3 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v3, "layoutIfNeeded");
}

- (void)noteIconViewWillZoomDown:(id)a3
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  int v8;
  void *v9;
  int v10;
  void *v11;
  id v12;

  v12 = a3;
  -[SBHIconManager floatingDockViewControllerForView:](self, "floatingDockViewControllerForView:");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if (v4)
  {
    objc_msgSend(v4, "libraryViewController");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v5, "isPresentingLibrary") & 1) == 0)
      goto LABEL_7;
  }
  else
  {
    -[SBHIconManager overlayLibraryViewController](self, "overlayLibraryViewController");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (!-[SBHIconManager isMainDisplayLibraryViewVisible](self, "isMainDisplayLibraryViewVisible"))
      goto LABEL_7;
  }
  objc_msgSend(v12, "location");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = SBIconLocationGroupContainsLocation(CFSTR("SBIconLocationGroupAppLibrary"), v7);

  if (v8)
    objc_msgSend(v6, "noteIconViewWillZoomDown:", v12);
LABEL_7:
  if (-[SBHIconManager isOverlayTodayViewVisible](self, "isOverlayTodayViewVisible"))
  {
    -[SBHIconManager overlayTodayViewController](self, "overlayTodayViewController");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = objc_msgSend(v9, "isDisplayingIconView:", v12);

    if (v10)
    {
      -[SBHIconManager overlayTodayViewController](self, "overlayTodayViewController");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "noteIconViewWillZoomDown:", v12);

    }
  }

}

- (id)viewControllerForPresentingViewControllers
{
  void *v3;
  void *v4;

  -[SBHIconManager delegate](self, "delegate");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v3, "viewControllerForPresentingViewControllersForIconManager:", self);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v4 = 0;
  }

  return v4;
}

- (id)accessibilityTintColorForScreenRect:(CGRect)a3
{
  double height;
  double width;
  double y;
  double x;
  void *v8;
  void *v9;

  height = a3.size.height;
  width = a3.size.width;
  y = a3.origin.y;
  x = a3.origin.x;
  -[SBHIconManager delegate](self, "delegate");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v8, "iconManager:accessibilityTintColorForScreenRect:", self, x, y, width, height);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v9 = 0;
  }

  return v9;
}

- (void)moveIconToHiddenPage:(id)a3
{
  id v4;
  id v5;
  _QWORD v6[5];
  id v7;

  v4 = a3;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __39__SBHIconManager_moveIconToHiddenPage___block_invoke;
  v6[3] = &unk_1E8D853D8;
  v6[4] = self;
  v7 = v4;
  v5 = v4;
  -[SBHIconManager removeIcon:options:completion:](self, "removeIcon:options:completion:", v5, 1, v6);

}

void __39__SBHIconManager_moveIconToHiddenPage___block_invoke(uint64_t a1)
{
  id v2;

  objc_msgSend(*(id *)(a1 + 32), "rootFolder");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "removeIcon:options:", *(_QWORD *)(a1 + 40), 0);

}

- (BOOL)resetIconLayoutWithOptions:(unint64_t)a3
{
  char v3;
  void *v5;
  uint64_t v6;
  char v7;

  v3 = a3;
  -[SBHIconManager addReasonToIgnoreUserPreferenceForAddingNewIconsToHomeScreen:](self, "addReasonToIgnoreUserPreferenceForAddingNewIconsToHomeScreen:", CFSTR("resetIconLayout"));
  -[SBHIconManager iconModel](self, "iconModel");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v3 & 1;
  v7 = objc_msgSend(v5, "deleteIconStateWithOptions:", v6);
  objc_msgSend(v5, "clearDesiredIconStateWithOptions:", v6);
  -[SBHIconManager removeReasonToIgnoreUserPreferenceForAddingNewIconsToHomeScreen:](self, "removeReasonToIgnoreUserPreferenceForAddingNewIconsToHomeScreen:", CFSTR("resetIconLayout"));

  return v7;
}

- (BOOL)resetTodayLayout
{
  void *v2;
  void *v3;
  SBHIconStateUnarchiver *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  BOOL v9;
  BOOL v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  void *v21;
  void *v22;
  BOOL v23;
  void *v24;

  -[SBHIconManager iconModel](self, "iconModel");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "defaultIconState");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = -[SBHIconStateUnarchiver initWithArchive:iconModel:]([SBHIconStateUnarchiver alloc], "initWithArchive:iconModel:", v3, v2);
  -[SBHIconStateUnarchiver unarchive](v4, "unarchive");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v5, "isValid"))
  {
    objc_msgSend(v5, "rootFolder");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "rootFolder");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = v7;
    if (v6)
      v9 = v7 == 0;
    else
      v9 = 1;
    v10 = !v9;
    if (!v9)
    {
      objc_msgSend(v7, "todayList");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "favoriteTodayList");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v21, "icons");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "icons");
      v24 = v6;
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v21, "removeAllIcons");
      v23 = v10;
      v13 = v11;
      objc_msgSend(v11, "removeAllIcons");
      objc_msgSend(v2, "removeIcons:", v22);
      objc_msgSend(v2, "removeIcons:", v12);
      objc_msgSend(v24, "todayList");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "icons");
      v15 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v24, "favoriteTodayList");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "icons");
      v17 = (void *)objc_claimAutoreleasedReturnValue();

      v18 = (id)objc_msgSend(v21, "addIcons:", v15);
      v19 = (id)objc_msgSend(v13, "addIcons:", v17);
      objc_msgSend(v2, "saveIconStateIfNeeded");

      v6 = v24;
      v10 = v23;

    }
  }
  else
  {
    v10 = 0;
  }

  return v10;
}

- (BOOL)clearTodayLayout
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  -[SBHIconManager iconModel](self, "iconModel");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "rootFolder");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "todayList");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "removeAllIcons");

  objc_msgSend(v3, "favoriteTodayList");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "removeAllIcons");

  objc_msgSend(v2, "saveIconStateIfNeeded");
  return 1;
}

- (void)minimumHomeScreenScaleDidChange
{
  id v2;

  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "minimumHomeScreenScaleDidChange");

}

- (void)runDownloadingIconTest
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  BOOL v13;
  SBHFakeApplicationPlaceholder *v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v22;
  _QWORD v23[4];
  id v24;
  id v25;
  SBHIconManager *v26;
  _QWORD *v27;
  _QWORD v28[4];
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _BYTE v33[128];
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  -[SBHIconManager iconModel](self, "iconModel");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "leafIcons");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v22 = objc_alloc_init(MEMORY[0x1E0C99E08]);
  v4 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99E20]), "initWithCapacity:", objc_msgSend(v3, "count"));
  v29 = 0u;
  v30 = 0u;
  v31 = 0u;
  v32 = 0u;
  v5 = v3;
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v29, v33, 16);
  if (v6)
  {
    v7 = *(_QWORD *)v30;
    do
    {
      for (i = 0; i != v6; ++i)
      {
        if (*(_QWORD *)v30 != v7)
          objc_enumerationMutation(v5);
        v9 = *(void **)(*((_QWORD *)&v29 + 1) + 8 * i);
        if (objc_msgSend(v2, "isIconVisible:", v9))
        {
          objc_msgSend(v9, "applicationBundleID");
          v10 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v9, "application");
          v11 = objc_claimAutoreleasedReturnValue();
          v12 = (void *)v11;
          if (v10)
            v13 = v11 == 0;
          else
            v13 = 1;
          if (!v13)
          {
            v14 = objc_alloc_init(SBHFakeApplicationPlaceholder);
            -[SBHFakeApplicationPlaceholder setApplicationBundleIdentifier:](v14, "setApplicationBundleIdentifier:", v10);
            objc_msgSend(v9, "displayName");
            v15 = (void *)objc_claimAutoreleasedReturnValue();
            -[SBHFakeApplicationPlaceholder setApplicationDisplayName:](v14, "setApplicationDisplayName:", v15);

            objc_msgSend(v4, "addObject:", v14);
            objc_msgSend(v22, "setObject:forKey:", v12, v10);

          }
        }
      }
      v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v29, v33, 16);
    }
    while (v6);
  }

  v16 = -[SBHIconManager addApplicationPlaceholders:](self, "addApplicationPlaceholders:", v4);
  v28[0] = 0;
  v28[1] = v28;
  v28[2] = 0x2020000000;
  v28[3] = 0;
  v17 = (void *)MEMORY[0x1E0C99E88];
  v23[0] = MEMORY[0x1E0C809B0];
  v23[1] = 3221225472;
  v23[2] = __40__SBHIconManager_runDownloadingIconTest__block_invoke;
  v23[3] = &unk_1E8D8C808;
  v27 = v28;
  v18 = v4;
  v24 = v18;
  v19 = v22;
  v25 = v19;
  v26 = self;
  v20 = (id)objc_msgSend(v17, "scheduledTimerWithTimeInterval:repeats:block:", 1, v23, 0.25);

  _Block_object_dispose(v28, 8);
}

void __40__SBHIconManager_runDownloadingIconTest__block_invoke(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[128];
  _BYTE v27[128];
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8)
                                                                          + 24)
                                                              + 0.1;
  v24 = 0u;
  v25 = 0u;
  v22 = 0u;
  v23 = 0u;
  v4 = *(id *)(a1 + 32);
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v22, v27, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v23;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v23 != v7)
          objc_enumerationMutation(v4);
        objc_msgSend(*(id *)(*((_QWORD *)&v22 + 1) + 8 * v8++), "setProgress:", *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24));
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v22, v27, 16);
    }
    while (v6);
  }

  if (*(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) >= 1.0)
  {
    objc_msgSend(v3, "invalidate");
    v20 = 0u;
    v21 = 0u;
    v18 = 0u;
    v19 = 0u;
    v9 = *(id *)(a1 + 32);
    v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v18, v26, 16);
    if (v10)
    {
      v11 = v10;
      v12 = *(_QWORD *)v19;
      do
      {
        v13 = 0;
        do
        {
          if (*(_QWORD *)v19 != v12)
            objc_enumerationMutation(v9);
          v14 = *(void **)(a1 + 40);
          objc_msgSend(*(id *)(*((_QWORD *)&v18 + 1) + 8 * v13), "applicationBundleIdentifier", (_QWORD)v18);
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v14, "objectForKey:", v15);
          v16 = (void *)objc_claimAutoreleasedReturnValue();

          v17 = (id)objc_msgSend(*(id *)(a1 + 48), "replaceApplicationPlaceholderWithApplication:", v16);
          ++v13;
        }
        while (v11 != v13);
        v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v18, v26, 16);
      }
      while (v11);
    }

  }
}

- (void)runRemoveAndRestoreIconTest
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  _QWORD v11[4];
  id v12;
  SBHIconManager *v13;
  id v14;

  -[SBHIconManager iconModel](self, "iconModel");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "leafIcons");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v4, "mutableCopy");

  objc_msgSend(MEMORY[0x1E0C99E20], "set");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0C99E88];
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = __45__SBHIconManager_runRemoveAndRestoreIconTest__block_invoke;
  v11[3] = &unk_1E8D8C830;
  v12 = v5;
  v13 = self;
  v14 = v6;
  v8 = v6;
  v9 = v5;
  v10 = (id)objc_msgSend(v7, "scheduledTimerWithTimeInterval:repeats:block:", 1, v11, 0.1);

}

void __45__SBHIconManager_runRemoveAndRestoreIconTest__block_invoke(id *a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  _QWORD v8[4];
  id v9;
  id v10;

  v3 = a2;
  if (objc_msgSend(a1[4], "count"))
  {
    objc_msgSend(a1[4], "anyObject");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(a1[4], "removeObject:", v4);
    v8[0] = MEMORY[0x1E0C809B0];
    v8[1] = 3221225472;
    v8[2] = __45__SBHIconManager_runRemoveAndRestoreIconTest__block_invoke_2;
    v8[3] = &unk_1E8D853D8;
    v5 = a1[5];
    v9 = a1[6];
    v10 = v4;
    v6 = v4;
    objc_msgSend(v5, "removeIcon:options:completion:", v6, 1, v8);

  }
  else if (objc_msgSend(a1[6], "count"))
  {
    objc_msgSend(a1[6], "anyObject");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(a1[6], "removeObject:", v7);
    objc_msgSend(a1[5], "addNewIconToDesignatedLocation:options:", v7, 3);

  }
  else
  {
    objc_msgSend(v3, "invalidate");
  }

}

uint64_t __45__SBHIconManager_runRemoveAndRestoreIconTest__block_invoke_2(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "addObject:", *(_QWORD *)(a1 + 40));
}

- (void)addAllEligibleIconsToIgnoredList
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;

  -[SBHIconManager iconModel](self, "iconModel");
  v9 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "leafIcons");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager rootFolder](self, "rootFolder");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "ignoredList");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "allObjects");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "allowedIconsForIcons:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  v8 = (id)objc_msgSend(v5, "addIcons:", v7);
  objc_msgSend(v4, "pruneEmptyFolders");
  objc_msgSend(v4, "compactLists");

}

- (void)removeAllWidgetIcons
{
  void *v2;
  void *v3;
  id v4;

  -[SBHIconManager iconModel](self, "iconModel");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "widgetIcons");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "allObjects");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v4, "removeIcons:", v3);
}

- (void)removeWidgetIconsFromHomeScreen
{
  void *v2;
  id v3;
  id v4;
  id v5;
  _QWORD v6[4];
  id v7;

  -[SBHIconManager iconModel](self, "iconModel");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "rootFolder");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __49__SBHIconManager_removeWidgetIconsFromHomeScreen__block_invoke;
  v6[3] = &unk_1E8D877F8;
  v7 = v3;
  v4 = v3;
  objc_msgSend(v2, "enumerateListsWithOptions:usingBlock:", 4, v6);
  objc_msgSend(v5, "removeIcons:", v4);

}

void __49__SBHIconManager_removeWidgetIconsFromHomeScreen__block_invoke(uint64_t a1, void *a2)
{
  id v3;

  objc_msgSend(a2, "directlyContainedIconsPassingTest:", &__block_literal_global_278);
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "addObjectsFromArray:", v3);

}

uint64_t __49__SBHIconManager_removeWidgetIconsFromHomeScreen__block_invoke_2(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "isWidgetIcon");
}

- (void)shuffleWidgetStackForTestRecipe
{
  void *v2;
  void *v3;
  unint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint32_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  void *v13;
  id v14;

  -[SBHIconManager currentRootIconList](self, "currentRootIconList");
  v14 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "icons");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "bs_firstObjectPassingTest:", &__block_literal_global_280);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = objc_msgSend(v3, "iconDataSourceCount");
    objc_msgSend(v3, "iconDataSources");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "activeDataSource");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v5, "indexOfObject:", v6);

    v8 = arc4random();
    v9 = v8 % v4;
    if (v9 + 1 == v4)
      v10 = 0;
    else
      v10 = v9 + 1;
    if (v9 == v7)
      v11 = v10;
    else
      v11 = v8 % v4;
    objc_msgSend(v3, "iconDataSources");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "objectAtIndex:", v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v3, "setStackChangeReason:", 1);
    objc_msgSend(v3, "setActiveDataSource:", v13);

  }
}

uint64_t __49__SBHIconManager_shuffleWidgetStackForTestRecipe__block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "isWidgetStackIcon");
}

- (void)toggleSuggestedWidgetInStackForTestRecipe
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  SBHWidget *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  _QWORD v16[2];

  v16[1] = *MEMORY[0x1E0C80C00];
  -[SBHIconManager currentRootIconList](self, "currentRootIconList");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "icons");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "bs_firstObjectPassingTest:", &__block_literal_global_281);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (v5)
  {
    objc_msgSend(v5, "widgets");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "bs_firstObjectPassingTest:", &__block_literal_global_282);
    v7 = (id)objc_claimAutoreleasedReturnValue();

    if (v7)
    {
      objc_msgSend(v5, "setStackChangeReason:", 3);
      objc_msgSend(v5, "removeIconDataSource:", v7);
    }
    else
    {
      v8 = -[SBHWidget initWithKind:extensionBundleIdentifier:]([SBHWidget alloc], "initWithKind:extensionBundleIdentifier:", CFSTR("com.apple.weather"), CFSTR("com.apple.weather.widget"));
      v7 = -[SBHWidget copyWithSuggestionSource:](v8, "copyWithSuggestionSource:", 1);

      SBHWeatherWidgetTestIntent();
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "uniqueIdentifier");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "uniqueIdentifier");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      -[SBHIconManager setTemporaryIntent:forIconWithIdentifier:widgetUniqueIdentifier:](self, "setTemporaryIntent:forIconWithIdentifier:widgetUniqueIdentifier:", v9, v10, v11);

      objc_msgSend(v5, "setStackChangeReason:", 2);
      v16[0] = v7;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v16, 1);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = (void *)MEMORY[0x1E0CB36B8];
      objc_msgSend(v5, "iconDataSources");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "indexSetWithIndex:", objc_msgSend(v14, "count"));
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "insertIconDataSources:atIndexes:", v12, v15);

      objc_msgSend(v5, "setActiveDataSource:", v7);
    }

  }
}

uint64_t __59__SBHIconManager_toggleSuggestedWidgetInStackForTestRecipe__block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "isWidgetStackIcon");
}

BOOL __59__SBHIconManager_toggleSuggestedWidgetInStackForTestRecipe__block_invoke_2(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "suggestionSource") == 1;
}

- (void)organizeAllIconsIntoFoldersWithPageCount:(unint64_t)a3
{
  void *v5;
  void *v6;
  void *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  SBFolderIcon *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  id v28;
  void *v29;
  SBHIconManager *v30;
  void *v31;
  id v32;

  -[SBHIconManager iconModel](self, "iconModel");
  v32 = (id)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager rootFolder](self, "rootFolder");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v32, "visibleLeafIcons");
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  v30 = self;
  -[SBHIconManager listLayoutProvider](self, "listLayoutProvider");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "layoutForIconLocation:", CFSTR("SBIconLocationRoot"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  v29 = v7;
  v8 = SBHIconListLayoutMaximumIconCount(v7);
  v9 = objc_msgSend(v5, "maxListCount");
  if (v9 >= a3)
    v10 = a3;
  else
    v10 = v9;
  v11 = v10 * v8;
  v12 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", v10 * v8);
  v13 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", v10 * v8);
  if (v10 * v8)
  {
    v14 = 0;
    do
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Folder %lu"), ++v14, v29);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v32, "makeFolderWithDisplayName:", v15);
      v16 = (void *)objc_claimAutoreleasedReturnValue();

      v17 = -[SBFolderIcon initWithFolder:]([SBFolderIcon alloc], "initWithFolder:", v16);
      objc_msgSend(v12, "addObject:", v16);
      objc_msgSend(v13, "addObject:", v17);

    }
    while (v11 != v14);
  }
  v18 = (void *)objc_msgSend(v31, "mutableCopy");
  if (objc_msgSend(v18, "count"))
  {
    v19 = 0;
    do
    {
      objc_msgSend(v18, "anyObject");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "removeObject:", v20);
      objc_msgSend(v12, "objectAtIndex:", v19);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      v22 = (id)objc_msgSend(v21, "addIcon:", v20);
      v23 = objc_msgSend(v21, "containsIcon:", v20);
      if (v19 + 1 < v11)
        v24 = v19 + 1;
      else
        v24 = 0;
      if (v23)
        v19 = v24;

    }
    while (objc_msgSend(v18, "count"));
  }
  objc_msgSend(v5, "removeAllLists");
  for (; v10; --v10)
  {
    v25 = objc_msgSend(v13, "count");
    if (v8 >= v25)
      v26 = v25;
    else
      v26 = v8;
    objc_msgSend(v13, "subarrayWithRange:", 0, v26);
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "removeObjectsInRange:", 0, v26);
    v28 = (id)objc_msgSend(v5, "addListWithIcons:", v27);

  }
  -[SBHIconManager layoutIconListsWithAnimationType:](v30, "layoutIconListsWithAnimationType:", -1);
  -[SBHIconManager _precacheDataForRootIcons](v30, "_precacheDataForRootIcons");

}

- (void)organizeAllIconsAcrossPagesWithPageCount:(unint64_t)a3
{
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  id v23;

  -[SBHIconManager iconModel](self, "iconModel");
  v23 = (id)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager rootFolder](self, "rootFolder");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v23, "visibleLeafIcons");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "allObjects");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "sortedArrayUsingSelector:", sel_localizedCompareDisplayNames_);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  -[SBHIconManager listLayoutProvider](self, "listLayoutProvider");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "layoutForIconLocation:", CFSTR("SBIconLocationRoot"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  v11 = objc_msgSend(v5, "maxListCount");
  if (v11 >= a3)
    v12 = a3;
  else
    v12 = v11;
  v13 = objc_msgSend(v8, "count");
  v14 = v13 / v12;
  v15 = SBHIconListLayoutMaximumIconCount(v10);
  if (v13 / v12 >= v15)
    v14 = v15;
  objc_msgSend(v5, "removeAllLists");
  v16 = 0;
  v17 = v12;
  do
  {
    objc_msgSend(v8, "subarrayWithRange:", v16 * v14, v14);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = (id)objc_msgSend(v5, "addListWithIcons:", v18);

    ++v16;
    --v17;
  }
  while (v17);
  objc_msgSend(v8, "subarrayWithRange:", v14 * v12, v13 - v14 * v12);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "ignoredList");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v22 = (id)objc_msgSend(v21, "addIcons:", v20);

  -[SBHIconManager layoutIconListsWithAnimationType:](self, "layoutIconListsWithAnimationType:", -1);
}

- (void)randomizeAllIconsAcrossPagesWithPageCount:(unint64_t)a3
{
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  id v20;
  uint32_t v21;
  uint32_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  SBFolderIcon *v30;
  void *v31;
  uint64_t v32;
  unint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  __CFString *v38;
  __CFString *v39;
  void *v40;
  int v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  void *v49;
  id v50;
  void *v51;
  void *v52;
  SBHIconManager *v53;
  id v54;
  void *v55;
  uint32_t __upper_bound;
  unint64_t v57;
  void *v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  _BYTE v67[128];
  _BYTE v68[128];
  uint64_t v69;

  v69 = *MEMORY[0x1E0C80C00];
  -[SBHIconManager iconModel](self, "iconModel");
  v55 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager rootFolder](self, "rootFolder");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_alloc_init(MEMORY[0x1E0C99E20]);
  v63 = 0u;
  v64 = 0u;
  v65 = 0u;
  v66 = 0u;
  v58 = v5;
  objc_msgSend(v5, "lists");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v63, v68, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v64;
    do
    {
      for (i = 0; i != v9; ++i)
      {
        if (*(_QWORD *)v64 != v10)
          objc_enumerationMutation(v7);
        v12 = *(void **)(*((_QWORD *)&v63 + 1) + 8 * i);
        objc_opt_self();
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "addIconsOfClass:toSet:", v13, v6);

      }
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v63, v68, 16);
    }
    while (v9);
  }

  v53 = self;
  -[SBHIconManager listLayoutProvider](self, "listLayoutProvider");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "layoutForIconLocation:", CFSTR("SBIconLocationRoot"));
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  v16 = objc_msgSend(v58, "maxListCount");
  if (v16 >= a3)
    v17 = a3;
  else
    v17 = v16;
  v57 = v17;
  v18 = objc_msgSend(v6, "count");
  v51 = v15;
  v19 = SBHIconListLayoutMaximumIconCount(v15);
  objc_msgSend(v58, "removeAllLists");
  v20 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v54 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  if (v18 >= 8)
    v21 = 8;
  else
    v21 = v18;
  v22 = arc4random_uniform(v21);
  v23 = v22 + 1;
  if (v22 != -1)
  {
    v24 = 0;
    do
    {
      if (!objc_msgSend(v6, "count", v51))
        break;
      v25 = arc4random_uniform(2u) + 1;
      objc_msgSend(v55, "makeFolderWithDisplayName:", CFSTR("Folder"));
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      v27 = v26;
      while (objc_msgSend(v26, "iconCount") < v25 && objc_msgSend(v6, "count"))
      {
        objc_msgSend(v6, "anyObject");
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v27, "canAddIcon:", v28))
          v29 = (id)objc_msgSend(v27, "addIcon:", v28);
        else
          objc_msgSend(v20, "addObject:", v28);
        objc_msgSend(v6, "removeObject:", v28);

        v26 = v27;
      }
      v30 = -[SBFolderIcon initWithFolder:]([SBFolderIcon alloc], "initWithFolder:", v27);
      objc_msgSend(v20, "addObject:", v30);
      objc_msgSend(v54, "addObject:", v27);

      ++v24;
    }
    while (v24 != v23);
  }
  objc_msgSend(v6, "allObjects", v51);
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v20, "addObjectsFromArray:", v31);

  if (v57)
  {
    v32 = 0;
    __upper_bound = v19 - 4;
    do
    {
      v33 = arc4random_uniform(__upper_bound) + 4;
      objc_msgSend(v58, "addEmptyList");
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      if ((_DWORD)v33)
      {
        v35 = 0;
        while (objc_msgSend(v20, "count"))
        {
          v36 = arc4random_uniform(objc_msgSend(v20, "count"));
          objc_msgSend(v20, "objectAtIndex:", v36);
          v37 = (void *)objc_claimAutoreleasedReturnValue();
          if (objc_msgSend(v34, "allowsAddingIcon:", v37))
          {
            objc_msgSend(v34, "addIcon:", v37);
            objc_msgSend(v20, "removeObjectAtIndex:", v36);
          }
          else
          {
            objc_msgSend(v37, "gridSizeClass");
            v38 = (__CFString *)objc_claimAutoreleasedReturnValue();
            if (v38 == CFSTR("SBHIconGridSizeClassDefault"))
            {

LABEL_38:
              break;
            }
            v39 = v38;
            objc_msgSend(v37, "gridSizeClass");
            v40 = (void *)objc_claimAutoreleasedReturnValue();
            v41 = objc_msgSend(v40, "isEqualToString:", CFSTR("SBHIconGridSizeClassDefault"));

            if (v41)
              goto LABEL_38;
            --v35;
          }

          if (++v35 >= v33)
            break;
        }
      }

      ++v32;
    }
    while (v32 != v57);
  }
  while (objc_msgSend(v20, "count"))
  {
    v61 = 0u;
    v62 = 0u;
    v59 = 0u;
    v60 = 0u;
    v42 = v54;
    v43 = objc_msgSend(v42, "countByEnumeratingWithState:objects:count:", &v59, v67, 16);
    if (v43)
    {
      v44 = v43;
      v45 = *(_QWORD *)v60;
LABEL_43:
      v46 = 0;
      while (1)
      {
        if (*(_QWORD *)v60 != v45)
          objc_enumerationMutation(v42);
        v47 = *(void **)(*((_QWORD *)&v59 + 1) + 8 * v46);
        objc_msgSend(v20, "lastObject");
        v48 = objc_claimAutoreleasedReturnValue();
        if (!v48)
          break;
        v49 = (void *)v48;
        if (objc_msgSend(v47, "canAddIcon:", v48))
          v50 = (id)objc_msgSend(v47, "addIcon:", v49);
        objc_msgSend(v20, "removeLastObject");

        if (v44 == ++v46)
        {
          v44 = objc_msgSend(v42, "countByEnumeratingWithState:objects:count:", &v59, v67, 16);
          if (v44)
            goto LABEL_43;
          break;
        }
      }
    }

  }
  -[SBHIconManager layoutIconListsWithAnimationType:](v53, "layoutIconListsWithAnimationType:", -1);

}

- (void)replaceHomescreenWithWidgets
{
  void *v3;
  id v4;

  -[SBHIconManager delegate](self, "delegate");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "testSetupForIconManagerWidgetScrollTest:", self);
  v4 = (id)objc_claimAutoreleasedReturnValue();

  -[SBHIconManager _resetHomescreenIconStateTo:](self, "_resetHomescreenIconStateTo:", v4);
}

- (id)addWidgetsToEachPage
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _QWORD v29[4];
  id v30;
  _BYTE v31[128];
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  -[SBHIconManager rootFolder](self, "rootFolder");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager widgetExtensionProvider](self, "widgetExtensionProvider");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "sbh_descriptors");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "valueForKey:", CFSTR("extensionBundleIdentifier"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  -[SBHIconManager delegate](self, "delegate");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "testSetupForIconManagerAddWidgetsToEachPage:", self);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v29[0] = MEMORY[0x1E0C809B0];
  v29[1] = 3221225472;
  v29[2] = __38__SBHIconManager_addWidgetsToEachPage__block_invoke;
  v29[3] = &unk_1E8D8C8D8;
  v24 = v6;
  v30 = v24;
  objc_msgSend(v8, "bs_filter:", v29);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend(v3, "firstVisibleListIndex");
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v12 = v9;
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v26;
    while (2)
    {
      for (i = 0; i != v14; ++i)
      {
        if (*(_QWORD *)v26 != v15)
          objc_enumerationMutation(v12);
        -[SBHIconManager _iconForDescriptor:](self, "_iconForDescriptor:", *(_QWORD *)(*((_QWORD *)&v25 + 1) + 8 * i));
        v17 = objc_claimAutoreleasedReturnValue();
        if (v17)
        {
          v18 = (void *)v17;
          objc_msgSend(v3, "gridPathWithListAtIndex:gridCellIndex:listGridCellInfoOptions:", v11, 0, -[SBHIconManager gridCellInfoOptions](self, "gridCellInfoOptions"));
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          v20 = (id)objc_msgSend(v3, "insertIcon:atGridPath:options:", v18, v19, 2);
          v21 = objc_msgSend(v3, "nextVisibleListIndexAfterIndex:", v11);
          if (v21 == 0x7FFFFFFFFFFFFFFFLL)
          {

            goto LABEL_13;
          }
          v11 = v21;
          objc_msgSend(v10, "addObject:", v18);

        }
      }
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
      if (v14)
        continue;
      break;
    }
  }
LABEL_13:

  v22 = (void *)objc_msgSend(v10, "copy");
  return v22;
}

uint64_t __38__SBHIconManager_addWidgetsToEachPage__block_invoke(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;

  v3 = a2;
  v4 = objc_opt_class();
  v5 = v3;
  if (v4)
  {
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v6 = v5;
    else
      v6 = 0;
  }
  else
  {
    v6 = 0;
  }
  v7 = v6;

  v8 = *(void **)(a1 + 32);
  objc_msgSend(v7, "bundleIdentifier");
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v10 = objc_msgSend(v8, "containsObject:", v9);
  return v10;
}

- (void)setupHomeScreenForWidgetScrollPerformanceTest
{
  void *v3;
  id v4;

  -[SBHIconManager delegate](self, "delegate");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "testSetupForIconManagerWidgetScrollPerformanceTest:", self);
  v4 = (id)objc_claimAutoreleasedReturnValue();

  -[SBHIconManager _resetHomescreenIconStateTo:](self, "_resetHomescreenIconStateTo:", v4);
}

- (void)_resetHomescreenIconStateTo:(id)a3
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id obj;
  void *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];
  _BYTE v29[128];
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[SBHIconManager rootFolder](self, "rootFolder");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "removeAllLists");
  v26 = 0u;
  v27 = 0u;
  v24 = 0u;
  v25 = 0u;
  obj = v4;
  v5 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v24, v29, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v25;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v25 != v7)
          objc_enumerationMutation(obj);
        v9 = *(void **)(*((_QWORD *)&v24 + 1) + 8 * v8);
        objc_msgSend(v19, "addEmptyList");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        v20 = 0u;
        v21 = 0u;
        v22 = 0u;
        v23 = 0u;
        v11 = v9;
        v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v20, v28, 16);
        if (v12)
        {
          v13 = v12;
          v14 = *(_QWORD *)v21;
          do
          {
            v15 = 0;
            do
            {
              if (*(_QWORD *)v21 != v14)
                objc_enumerationMutation(v11);
              -[SBHIconManager _iconForDescriptor:](self, "_iconForDescriptor:", *(_QWORD *)(*((_QWORD *)&v20 + 1) + 8 * v15));
              v16 = (void *)objc_claimAutoreleasedReturnValue();
              if (v16)
                objc_msgSend(v10, "addIcon:", v16);

              ++v15;
            }
            while (v13 != v15);
            v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v20, v28, 16);
          }
          while (v13);
        }

        ++v8;
      }
      while (v8 != v6);
      v6 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v24, v29, 16);
    }
    while (v6);
  }

  objc_msgSend(v19, "model");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "saveIconStateIfNeeded");

}

- (id)_iconForDescriptor:(id)a3
{
  uint64_t v4;
  void (**v5)(void *, void *);
  id v6;
  SBHIconManager *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  SBWidgetIcon *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  NSObject *v21;
  void *v22;
  id v24;
  SBHIconManager *v25;
  id obj;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _QWORD aBlock[6];
  _QWORD v32[5];
  id v33;
  uint8_t buf[4];
  void *v35;
  _BYTE v36[128];
  _QWORD v37[3];

  v37[1] = *MEMORY[0x1E0C80C00];
  v24 = a3;
  v4 = objc_msgSend(v24, "sbh_iconDescriptorType");
  if ((unint64_t)(v4 - 2) >= 2)
  {
    if (v4 == 1)
    {
      v6 = v24;
      v7 = self;
      -[SBHIconManager iconModel](self, "iconModel");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "bundleIdentifier");
      v9 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v8, "leafIconForIdentifier:", v9);
      v10 = (void *)objc_claimAutoreleasedReturnValue();

      -[SBHIconManager iconModel](v7, "iconModel");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "addAdditionalIconMatchingIcon:", v10);
      v12 = (SBWidgetIcon *)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v32[0] = 0;
    v32[1] = v32;
    v32[2] = 0x3032000000;
    v32[3] = __Block_byref_object_copy__19;
    v32[4] = __Block_byref_object_dispose__19;
    v33 = 0;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 3221225472;
    aBlock[2] = __37__SBHIconManager__iconForDescriptor___block_invoke;
    aBlock[3] = &unk_1E8D8C900;
    aBlock[4] = self;
    aBlock[5] = v32;
    v25 = self;
    v5 = (void (**)(void *, void *))_Block_copy(aBlock);
    if (objc_msgSend(v24, "sbh_iconDescriptorType") == 3)
    {
      objc_msgSend(v24, "widgetIconDescriptors");
    }
    else
    {
      v37[0] = v24;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v37, 1);
    }
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = -[SBLeafIcon initWithUniqueLeafIdentifier]([SBWidgetIcon alloc], "initWithUniqueLeafIdentifier");
    v29 = 0u;
    v30 = 0u;
    v27 = 0u;
    v28 = 0u;
    obj = v13;
    v14 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v27, v36, 16);
    if (v14)
    {
      v15 = *(_QWORD *)v28;
      do
      {
        for (i = 0; i != v14; ++i)
        {
          if (*(_QWORD *)v28 != v15)
            objc_enumerationMutation(obj);
          v17 = *(void **)(*((_QWORD *)&v27 + 1) + 8 * i);
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0)
          {
            objc_msgSend(v17, "element");
            v18 = (void *)objc_claimAutoreleasedReturnValue();
            -[SBLeafIcon addIconDataSource:](v12, "addIconDataSource:", v18);
          }
          else
          {
            v5[2](v5, v17);
            v18 = (void *)objc_claimAutoreleasedReturnValue();
            if (v18)
            {
              -[SBHIconManager gridSizeClassDomain](v25, "gridSizeClassDomain");
              v19 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v18, "sbh_iconDataSourceInDomain:", v19);
              v20 = (void *)objc_claimAutoreleasedReturnValue();
              SBLogWidgets();
              v21 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)buf = 138543362;
                v35 = v20;
                _os_log_impl(&dword_1CFEF3000, v21, OS_LOG_TYPE_DEFAULT, "Widget %{public}@ created from descriptor.", buf, 0xCu);
              }

              -[SBLeafIcon addIconDataSource:](v12, "addIconDataSource:", v20);
            }
          }

        }
        v14 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v27, v36, 16);
      }
      while (v14);
    }

    objc_msgSend(v24, "sizeClass");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBIcon setGridSizeClass:](v12, "setGridSizeClass:", v22);

    _Block_object_dispose(v32, 8);
  }

  return v12;
}

id __37__SBHIconManager__iconForDescriptor___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  void *i;
  void *v20;
  void *v21;
  void *v22;
  id v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = objc_opt_class();
  v5 = v3;
  if (v4)
  {
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v6 = v5;
    else
      v6 = 0;
  }
  else
  {
    v6 = 0;
  }
  v7 = v6;

  if (v7)
  {
    objc_msgSend(v7, "bundleIdentifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "widgetIdentifier");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
    if (!v10)
    {
      objc_msgSend(*(id *)(a1 + 32), "widgetExtensionProvider");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "sbh_descriptors");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_msgSend(v12, "copy");
      v14 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
      v15 = *(void **)(v14 + 40);
      *(_QWORD *)(v14 + 40) = v13;

      v10 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
    }
    v27 = 0u;
    v28 = 0u;
    v25 = 0u;
    v26 = 0u;
    v16 = v10;
    v17 = (id)objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v25, v29, 16);
    if (v17)
    {
      v24 = v5;
      v18 = *(_QWORD *)v26;
      while (2)
      {
        for (i = 0; i != v17; i = (char *)i + 1)
        {
          if (*(_QWORD *)v26 != v18)
            objc_enumerationMutation(v16);
          v20 = *(void **)(*((_QWORD *)&v25 + 1) + 8 * (_QWORD)i);
          objc_msgSend(v20, "extensionBundleIdentifier");
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v20, "kind");
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          if (objc_msgSend(v8, "isEqual:", v21) && (objc_msgSend(v9, "isEqual:", v22) & 1) != 0)
          {
            v17 = v20;

            goto LABEL_21;
          }

        }
        v17 = (id)objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v25, v29, 16);
        if (v17)
          continue;
        break;
      }
LABEL_21:
      v5 = v24;
    }

  }
  else
  {
    v17 = 0;
  }

  return v17;
}

- (void)addWidgetStackToCurrentPage
{
  void *v3;
  void *v4;
  SBHTestWidgetStackIconDescriptor *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  id v16;

  -[SBHIconManager rootFolder](self, "rootFolder");
  v16 = (id)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager delegate](self, "delegate");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v3, "testSetupHomeScreenForWidgetScrollPerformanceTest:", self);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = -[SBHTestWidgetStackIconDescriptor initWithWidgetIconDescriptors:]([SBHTestWidgetStackIconDescriptor alloc], "initWithWidgetIconDescriptors:", v4);
    -[SBHIconManager _iconForDescriptor:](self, "_iconForDescriptor:", v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v6, "iconDataSources");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "objectAtIndex:", 2);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setActiveDataSource:", v8);

    objc_msgSend(MEMORY[0x1E0DC3708], "currentDevice");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = objc_msgSend(v9, "userInterfaceIdiom");

    if ((v10 & 0xFFFFFFFFFFFFFFFBLL) == 1)
    {
      objc_msgSend(v16, "todayList");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = (id)objc_msgSend(v11, "insertIcon:atIndex:", v6, 0);
      -[SBHIconManager _effectiveTodayViewController](self, "_effectiveTodayViewController");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "listView");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "layoutIconsNow");
    }
    else
    {
      -[SBHIconManager rootFolderController](self, "rootFolderController");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "folderView");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "gridPathWithListAtIndex:gridCellIndex:listGridCellInfoOptions:", objc_msgSend(v13, "iconListModelIndexForPageIndex:", objc_msgSend(v13, "currentPageIndex")), 0, -[SBHIconManager gridCellInfoOptions](self, "gridCellInfoOptions"));
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = (id)objc_msgSend(v16, "insertIcon:atGridPath:options:", v6, v14, 2);
      objc_msgSend(v11, "layoutIconListsWithAnimationType:forceRelayout:", -1, 0);
    }

  }
}

- (id)widgetIconWithWidgetExtensionIdentifiers:(id)a3 widgetKinds:(id)a4 sizeClass:(id)a5
{
  id v7;
  id v8;
  id v9;
  SBWidgetIcon *v10;

  v7 = a5;
  v8 = a4;
  v9 = a3;
  v10 = -[SBWidgetIcon initWithWidgetExtensionIdentifiers:widgetKinds:]([SBWidgetIcon alloc], "initWithWidgetExtensionIdentifiers:widgetKinds:", v9, v8);

  -[SBIcon setGridSizeClass:](v10, "setGridSizeClass:", v7);
  return v10;
}

- (void)addWidgets:(id)a3 toGridPath:(id)a4 overflowOptions:(unint64_t)a5
{
  id v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t i;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  unint64_t v32;
  unint64_t v33;
  void *v34;
  NSObject *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t j;
  unint64_t v41;
  void *v42;
  void *v43;
  unint64_t v44;
  void *v45;
  id v46;
  void *v47;
  void *v48;
  NSObject *v49;
  void *v50;
  void *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t k;
  uint64_t v57;
  void *v58;
  int v59;
  unint64_t v60;
  unint64_t v61;
  int64_t v62;
  void *v63;
  void *v64;
  id v65;
  NSObject *v66;
  id v67;
  NSObject *v68;
  id v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  id v74;
  void *v75;
  id v76;
  uint64_t v77;
  unint64_t v78;
  void *v79;
  uint64_t v80;
  id v81;
  id obj;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  uint8_t buf[4];
  id v96;
  __int16 v97;
  void *v98;
  __int16 v99;
  id v100;
  __int16 v101;
  int v102;
  _BYTE v103[128];
  _BYTE v104[128];
  _BYTE v105[128];
  uint64_t v106;

  v106 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  -[SBHIconManager rootFolder](self, "rootFolder");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if (-[SBHIconManager prototypeSettingSimpleBottomSnaking](self, "prototypeSettingSimpleBottomSnaking"))
  {
    v78 = a5;
    -[SBHIconManager iconGridSizeClassSizes](self, "iconGridSizeClassSizes");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v91 = 0u;
    v92 = 0u;
    v93 = 0u;
    v94 = 0u;
    obj = v8;
    v12 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v91, v105, 16);
    if (v12)
    {
      v13 = v12;
      v14 = v10;
      LODWORD(v15) = 0;
      v16 = *(_QWORD *)v92;
      do
      {
        for (i = 0; i != v13; ++i)
        {
          if (*(_QWORD *)v92 != v16)
            objc_enumerationMutation(obj);
          objc_msgSend(*(id *)(*((_QWORD *)&v91 + 1) + 8 * i), "gridSizeClass");
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          v15 = objc_msgSend(v11, "gridSizeAreaForGridSizeClass:", v18) + v15;

        }
        v13 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v91, v105, 16);
      }
      while (v13);
      v10 = v14;
    }
    else
    {
      v15 = 0;
    }

    objc_msgSend(v10, "listAtGridPath:", v9);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v21 = objc_msgSend(v20, "numberOfIcons");
    v22 = objc_msgSend(v20, "maxNumberOfIcons");
    if (v22 - v21 > v15)
      v23 = -1;
    else
      v23 = v22 - v15;
    v80 = v23;
    if (v23 < 0 || (v24 = v21 - 1, v21 - 1 < 0))
    {
      SBLogWidgetDiscoverabilityMigration();
      v68 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v68, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1CFEF3000, v68, OS_LOG_TYPE_DEFAULT, "Nothing to bump for onboarding widgets", buf, 2u);
      }

      v69 = (id)objc_msgSend(v10, "insertIcons:atGridPath:options:", obj, v9, v78);
    }
    else
    {
      v77 = objc_msgSend(v10, "indexOfList:", v20);
      objc_msgSend(MEMORY[0x1E0C99DE8], "array");
      v75 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0C99DE8], "array");
      v79 = (void *)objc_claimAutoreleasedReturnValue();
      v76 = v8;
      if (-[SBHIconManager prototypeSettingBumpLeastUsedApps](self, "prototypeSettingBumpLeastUsedApps"))
      {
        v72 = v21;
        v25 = v21 - v80;
        -[SBHIconManager atxIconRanker](self, "atxIconRanker");
        v26 = (void *)objc_claimAutoreleasedReturnValue();

        if (!v26)
        {
          v27 = objc_alloc_init(MEMORY[0x1E0CF8E80]);
          -[SBHIconManager setAtxIconRanker:](self, "setAtxIconRanker:", v27);

        }
        v71 = v21 - 1;
        v74 = v9;
        -[SBHIconManager atxIconRanker](self, "atxIconRanker");
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v28, "iconIndexesInAscendingOrderOfHistoricalUsageForPageIndex:", v77);
        v29 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(MEMORY[0x1E0C99E40], "orderedSetWithArray:", v29);
        v30 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v30, "array");
        v31 = (void *)objc_claimAutoreleasedReturnValue();

        v32 = objc_msgSend(v29, "count");
        if (v25 >= v32)
          v33 = v32;
        else
          v33 = v25;
        objc_msgSend(v31, "subarrayWithRange:", 0, v33);
        v34 = (void *)objc_claimAutoreleasedReturnValue();

        SBLogWidgetDiscoverabilityMigration();
        v35 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412546;
          v96 = v29;
          v97 = 2112;
          v98 = v34;
          _os_log_impl(&dword_1CFEF3000, v35, OS_LOG_TYPE_DEFAULT, "Home screen icon index ranking: %@, trimed ranking: %@", buf, 0x16u);
        }
        v70 = v29;
        v73 = v10;

        -[SBHWidgetIntroductionFeatureIntroductionItem defaultWidgetsIconsRestoringRecordOriginalIndex](self->_widgetIntroductionItem, "defaultWidgetsIconsRestoringRecordOriginalIndex");
        v36 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v36, "addObjectsFromArray:", v34);

        v89 = 0u;
        v90 = 0u;
        v87 = 0u;
        v88 = 0u;
        v81 = v34;
        v37 = objc_msgSend(v81, "countByEnumeratingWithState:objects:count:", &v87, v104, 16);
        if (v37)
        {
          v38 = v37;
          v39 = *(_QWORD *)v88;
          do
          {
            for (j = 0; j != v38; ++j)
            {
              if (*(_QWORD *)v88 != v39)
                objc_enumerationMutation(v81);
              v41 = objc_msgSend(*(id *)(*((_QWORD *)&v87 + 1) + 8 * j), "integerValue");
              if (v41 < objc_msgSend(v20, "numberOfIcons"))
              {
                objc_msgSend(v20, "iconAtIndex:", v41);
                v42 = (void *)objc_claimAutoreleasedReturnValue();
                -[SBHWidgetIntroductionFeatureIntroductionItem defaultWidgetsBumpedIconUsageRanking](self->_widgetIntroductionItem, "defaultWidgetsBumpedIconUsageRanking");
                v43 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v43, "addObject:", v42);

                if (!v41)
                  goto LABEL_36;
                v44 = v41 - 1;
                if (v44 >= objc_msgSend(v20, "numberOfIcons"))
                {
                  objc_msgSend(v20, "lastIcon");
                  v45 = (void *)objc_claimAutoreleasedReturnValue();
                  if (!v45)
                    goto LABEL_36;
LABEL_34:
                  v46 = v45;
                  v47 = v46;
                }
                else
                {
                  objc_msgSend(v20, "iconAtIndex:", v44);
                  v45 = (void *)objc_claimAutoreleasedReturnValue();
                  if (v45)
                    goto LABEL_34;
LABEL_36:
                  objc_msgSend(MEMORY[0x1E0C99E38], "null");
                  v46 = (id)objc_claimAutoreleasedReturnValue();
                  v47 = 0;
                }
                -[SBHWidgetIntroductionFeatureIntroductionItem defaultWidgetsIconsRestoringRecord](self->_widgetIntroductionItem, "defaultWidgetsIconsRestoringRecord");
                v48 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v48, "setObject:forKey:", v46, v42);

                continue;
              }
            }
            v38 = objc_msgSend(v81, "countByEnumeratingWithState:objects:count:", &v87, v104, 16);
          }
          while (v38);
        }

        SBLogWidgetDiscoverabilityMigration();
        v49 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v49, OS_LOG_TYPE_DEFAULT))
        {
          -[SBHWidgetIntroductionFeatureIntroductionItem defaultWidgetsBumpedIconUsageRanking](self->_widgetIntroductionItem, "defaultWidgetsBumpedIconUsageRanking");
          v50 = (void *)objc_claimAutoreleasedReturnValue();
          -[SBHWidgetIntroductionFeatureIntroductionItem defaultWidgetsIconsRestoringRecord](self->_widgetIntroductionItem, "defaultWidgetsIconsRestoringRecord");
          v51 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412546;
          v96 = v50;
          v97 = 2112;
          v98 = v51;
          _os_log_impl(&dword_1CFEF3000, v49, OS_LOG_TYPE_DEFAULT, "Adding onboarding widgets by overflow icons: %@ \n usage record: %@", buf, 0x16u);

        }
        v85 = 0u;
        v86 = 0u;
        v83 = 0u;
        v84 = 0u;
        objc_msgSend(v20, "icons");
        v52 = (void *)objc_claimAutoreleasedReturnValue();
        v53 = objc_msgSend(v52, "countByEnumeratingWithState:objects:count:", &v83, v103, 16);
        if (v53)
        {
          v54 = v53;
          v55 = *(_QWORD *)v84;
          do
          {
            for (k = 0; k != v54; ++k)
            {
              if (*(_QWORD *)v84 != v55)
                objc_enumerationMutation(v52);
              v57 = *(_QWORD *)(*((_QWORD *)&v83 + 1) + 8 * k);
              -[SBHWidgetIntroductionFeatureIntroductionItem defaultWidgetsBumpedIconUsageRanking](self->_widgetIntroductionItem, "defaultWidgetsBumpedIconUsageRanking");
              v58 = (void *)objc_claimAutoreleasedReturnValue();
              v59 = objc_msgSend(v58, "containsObject:", v57);

              if (v59)
              {
                objc_msgSend(v20, "removeIcon:", v57);
                objc_msgSend(v20, "addIcon:", v57);
              }
            }
            v54 = objc_msgSend(v52, "countByEnumeratingWithState:objects:count:", &v83, v103, 16);
          }
          while (v54);
        }

        v10 = v73;
        v9 = v74;
        v24 = v71;
        v21 = v72;
      }
      v60 = v77 + 1;
      if (v24 >= v80)
      {
        do
        {
          v61 = v21 - 1;
          if (v61 >= objc_msgSend(v20, "numberOfIcons"))
            break;
          objc_msgSend(v20, "iconAtIndex:", v61);
          v62 = v61;
          v63 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v20, "removeIcon:", v63);
          objc_msgSend(v75, "insertObject:atIndex:", v63, 0);
          objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathWithIconIndex:listIndex:", v62, v60);
          v64 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v79, "insertObject:atIndex:", v64, 0);

          v21 = v62;
        }
        while (v62 > v80);
      }
      if (objc_msgSend(v10, "listCount") <= v60)
        v65 = (id)objc_msgSend(v10, "addEmptyList");
      SBLogWidgetDiscoverabilityMigration();
      v66 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v66, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138413058;
        v96 = obj;
        v97 = 2112;
        v98 = v10;
        v99 = 2112;
        v100 = v9;
        v101 = 1024;
        v102 = v78;
        _os_log_impl(&dword_1CFEF3000, v66, OS_LOG_TYPE_DEFAULT, "Insert icons(%@) to rootFolder(%@) at gridPath(%@) with overflowOptions(%d)", buf, 0x26u);
      }

      v67 = (id)objc_msgSend(v10, "insertIcons:atGridPath:options:", obj, v9, v78);
      objc_msgSend(v10, "_swapInsertIcons:atIndexPaths:", v75, v79);

      v8 = v76;
    }

  }
  else
  {
    v19 = (id)objc_msgSend(v10, "insertIcons:atGridPath:options:", v8, v9, a5);
  }

}

- (void)addWidgetWithIdentifier:(id)a3 toPage:(int64_t)a4 withSizeClass:(id)a5
{
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v12 = a3;
  v8 = (void *)MEMORY[0x1E0C99D20];
  v9 = a5;
  v10 = a3;
  objc_msgSend(v8, "arrayWithObjects:count:", &v12, 1);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  -[SBHIconManager addWidgetStackWithIdentifiers:toPage:withSizeClass:](self, "addWidgetStackWithIdentifiers:toPage:withSizeClass:", v11, a4, v9, v12, v13);
}

- (void)addWidgetStackWithIdentifiers:(id)a3 toPage:(int64_t)a4 withSizeClass:(id)a5
{
  id v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t i;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  SBHIconManager *v25;
  id v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  void *v31;
  _BYTE v32[128];
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v26 = a5;
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = self;
  -[SBHIconManager rootFolder](self, "rootFolder");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "gridPathWithListAtIndex:gridCellIndex:listGridCellInfoOptions:", a4, 0, 0);
  v24 = (void *)objc_claimAutoreleasedReturnValue();

  v29 = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v12 = v8;
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v27, v32, 16);
  if (v13)
  {
    v14 = v13;
    v15 = 0;
    v16 = *(_QWORD *)v28;
    do
    {
      for (i = 0; i != v14; ++i)
      {
        if (*(_QWORD *)v28 != v16)
          objc_enumerationMutation(v12);
        v18 = *(void **)(*((_QWORD *)&v27 + 1) + 8 * i);
        if (objc_msgSend(v18, "containsString:", CFSTR(",")))
        {
          objc_msgSend(v18, "componentsSeparatedByString:", CFSTR(","));
          v19 = (void *)objc_claimAutoreleasedReturnValue();

          objc_msgSend(v19, "objectAtIndexedSubscript:", 0);
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v9, "addObject:", v20);

          if ((unint64_t)objc_msgSend(v19, "count") < 2)
            objc_msgSend(MEMORY[0x1E0C99E38], "null");
          else
            objc_msgSend(v19, "objectAtIndexedSubscript:", 1);
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          v15 = v19;
        }
        else
        {
          objc_msgSend(v9, "addObject:", v18);
          objc_msgSend(MEMORY[0x1E0C99E38], "null");
          v21 = (void *)objc_claimAutoreleasedReturnValue();
        }
        objc_msgSend(v10, "addObject:", v21);

      }
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v27, v32, 16);
    }
    while (v14);
  }
  else
  {
    v15 = 0;
  }

  -[SBHIconManager widgetIconWithWidgetExtensionIdentifiers:widgetKinds:sizeClass:](v25, "widgetIconWithWidgetExtensionIdentifiers:widgetKinds:sizeClass:", v9, v10, v26);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v31 = v22;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v31, 1);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager addWidgets:toGridPath:overflowOptions:](v25, "addWidgets:toGridPath:overflowOptions:", v23, v24, 2);

}

- (void)removeFirstWidgetFromRootFolderListAtIndex:(unint64_t)a3
{
  void *v4;
  void *v5;
  void *v6;
  id v7;

  -[SBHIconManager rootFolder](self, "rootFolder");
  v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "listAtIndex:", a3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "directlyContainedIconsPassingTest:", &__block_literal_global_312);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v5, "count"))
  {
    objc_msgSend(v5, "firstObject");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "removeIcon:options:", v6, 0x800000);

  }
}

uint64_t __61__SBHIconManager_removeFirstWidgetFromRootFolderListAtIndex___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "isWidgetIcon");
}

- (void)addDebugIconOfSizeClass:(id)a3 toPage:(unint64_t)a4 iconIndex:(unint64_t)a5
{
  id v8;
  SBDebugIcon *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;

  v8 = a3;
  v9 = -[SBLeafIcon initWithUniqueLeafIdentifier]([SBDebugIcon alloc], "initWithUniqueLeafIdentifier");
  -[SBIcon setGridSizeClass:](v9, "setGridSizeClass:", v8);

  -[SBHIconManager rootFolder](self, "rootFolder");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathWithIconIndex:listIndex:", a5, a4);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = v11;
  v12 = (id)objc_msgSend(v10, "insertIcon:atIndexPath:options:", v9, &v14, 2);
  v13 = v14;

}

- (void)addDebugIconOfSizeClass:(id)a3 toPage:(unint64_t)a4 coordinate:(SBIconCoordinate)a5
{
  int64_t row;
  int64_t column;
  id v9;

  row = a5.row;
  column = a5.column;
  v9 = a3;
  -[SBHIconManager addDebugIconOfSizeClass:toPage:coordinate:orientation:](self, "addDebugIconOfSizeClass:toPage:coordinate:orientation:", v9, a4, column, row, -[SBHIconManager interfaceOrientation](self, "interfaceOrientation"));

}

- (void)addDebugIconOfSizeClass:(id)a3 toPage:(unint64_t)a4 coordinate:(SBIconCoordinate)a5 orientation:(int64_t)a6
{
  int64_t row;
  int64_t column;
  id v11;
  void *v12;
  unint64_t v13;
  void *v14;
  uint64_t v15;
  SBHIconGridPath *v16;
  void *v17;
  SBHIconGridPath *v18;
  SBDebugIcon *v19;
  id v20;
  id v21;

  row = a5.row;
  column = a5.column;
  v11 = a3;
  -[SBHIconManager rootFolder](self, "rootFolder");
  v21 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v21, "listAtIndex:", a4);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = -[SBHIconManager gridCellInfoOptionsForOrientation:](self, "gridCellInfoOptionsForOrientation:", a6);
  objc_msgSend(v12, "gridCellInfoWithOptions:", v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = objc_msgSend(v14, "gridCellIndexForCoordinate:", column, row);
  v16 = [SBHIconGridPath alloc];
  objc_msgSend(v12, "uniqueIdentifier");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = -[SBHIconGridPath initWithFolderIdentifier:listIdentifier:gridCellIndex:gridCellInfoOptions:](v16, "initWithFolderIdentifier:listIdentifier:gridCellIndex:gridCellInfoOptions:", 0, v17, v15, v13);

  v19 = -[SBLeafIcon initWithUniqueLeafIdentifier]([SBDebugIcon alloc], "initWithUniqueLeafIdentifier");
  -[SBIcon setGridSizeClass:](v19, "setGridSizeClass:", v11);

  v20 = (id)objc_msgSend(v21, "insertIcon:atGridPath:options:", v19, v18, 2);
}

- (id)debuggingActiveWidgetInfo
{
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  char isKindOfClass;
  void *v16;
  id v17;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _QWORD v23[4];
  id v24;
  _QWORD v25[4];
  id v26;
  _QWORD aBlock[4];
  id v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE v44[128];
  uint64_t v45;

  v45 = *MEMORY[0x1E0C80C00];
  v3 = objc_alloc_init(MEMORY[0x1E0C99E20]);
  v40 = 0;
  v41 = &v40;
  v42 = 0x2020000000;
  v43 = 0;
  v36 = 0;
  v37 = &v36;
  v38 = 0x2020000000;
  v39 = 0;
  v32 = 0;
  v33 = &v32;
  v34 = 0x2020000000;
  v35 = 0;
  v4 = MEMORY[0x1E0C809B0];
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = __43__SBHIconManager_debuggingActiveWidgetInfo__block_invoke;
  aBlock[3] = &unk_1E8D8C948;
  v5 = v3;
  v28 = v5;
  v29 = &v40;
  v30 = &v36;
  v31 = &v32;
  v25[0] = v4;
  v25[1] = 3221225472;
  v25[2] = __43__SBHIconManager_debuggingActiveWidgetInfo__block_invoke_2;
  v25[3] = &unk_1E8D8C970;
  v6 = _Block_copy(aBlock);
  v26 = v6;
  -[SBHIconManager enumerateDisplayedIconViewsUsingBlock:](self, "enumerateDisplayedIconViewsUsingBlock:", v25);
  -[SBHIconManager _effectiveWidgetMultiplexingManager](self, "_effectiveWidgetMultiplexingManager");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v23[0] = v4;
  v23[1] = 3221225472;
  v23[2] = __43__SBHIconManager_debuggingActiveWidgetInfo__block_invoke_3;
  v23[3] = &unk_1E8D8C998;
  v8 = v6;
  v24 = v8;
  objc_msgSend(v7, "enumerateAllViewControllersUsingBlock:", v23);

  v21 = 0u;
  v22 = 0u;
  v19 = 0u;
  v20 = 0u;
  -[NSMapTable keyEnumerator](self->_iconViewsForCustomIconImageViewController, "keyEnumerator", 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v19, v44, 16);
  if (v10)
  {
    v11 = *(_QWORD *)v20;
    do
    {
      v12 = 0;
      do
      {
        if (*(_QWORD *)v20 != v11)
          objc_enumerationMutation(v9);
        v13 = *(void **)(*((_QWORD *)&v19 + 1) + 8 * v12);
        objc_opt_self();
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        isKindOfClass = objc_opt_isKindOfClass();

        if ((isKindOfClass & 1) != 0)
        {
          objc_msgSend(v13, "contentViewController");
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          (*((void (**)(id, void *))v8 + 2))(v8, v16);

        }
        ++v12;
      }
      while (v10 != v12);
      v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v19, v44, 16);
    }
    while (v10);
  }

  v17 = objc_alloc_init(MEMORY[0x1E0DAAE28]);
  objc_msgSend(v17, "setLiveWidgetCount:", v41[3]);
  objc_msgSend(v17, "setStaticWidgetCount:", v37[3]);
  objc_msgSend(v17, "setFakeWidgetCount:", v33[3]);

  _Block_object_dispose(&v32, 8);
  _Block_object_dispose(&v36, 8);
  _Block_object_dispose(&v40, 8);

  return v17;
}

void __43__SBHIconManager_debuggingActiveWidgetInfo__block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  char isKindOfClass;
  uint64_t v5;
  id v6;
  _QWORD *v7;
  uint64_t v8;
  id v9;

  v9 = a2;
  if ((objc_msgSend(*(id *)(a1 + 32), "containsObject:") & 1) == 0)
  {
    objc_opt_self();
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    isKindOfClass = objc_opt_isKindOfClass();

    if ((isKindOfClass & 1) != 0)
    {
      v5 = objc_msgSend(v9, "presentationMode");
      if (v5 != 1 && v5 != 3)
      {
        v6 = v9;
        if (v5 != 2)
        {
LABEL_11:
          objc_msgSend(*(id *)(a1 + 32), "addObject:", v6);
          goto LABEL_12;
        }
        v7 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
LABEL_10:
        ++*v7;
        goto LABEL_11;
      }
      v8 = *(_QWORD *)(a1 + 48);
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 56);
    }
    v7 = (_QWORD *)(*(_QWORD *)(v8 + 8) + 24);
    v6 = v9;
    goto LABEL_10;
  }
LABEL_12:

}

void __43__SBHIconManager_debuggingActiveWidgetInfo__block_invoke_2(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  id v10;
  void *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a2, "customIconImageViewController");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v3, "sbh_isWidgetStackViewController"))
  {
    v14 = 0u;
    v15 = 0u;
    v12 = 0u;
    v13 = 0u;
    objc_msgSend(v3, "widgetViewControllers", 0);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)v13;
      do
      {
        for (i = 0; i != v6; ++i)
        {
          if (*(_QWORD *)v13 != v7)
            objc_enumerationMutation(v4);
          v9 = *(void **)(*((_QWORD *)&v12 + 1) + 8 * i);
          if (objc_msgSend(v9, "sbh_isMultiplexingViewController"))
          {
            objc_msgSend(v9, "multiplexedViewController");
            v10 = (id)objc_claimAutoreleasedReturnValue();
          }
          else
          {
            v10 = v9;
          }
          v11 = v10;
          if (v10)
            (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

        }
        v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
      }
      while (v6);
    }

  }
}

uint64_t __43__SBHIconManager_debuggingActiveWidgetInfo__block_invoke_3(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

- (void)setUsageMonitoringEnabled:(BOOL)a3
{
  _BOOL4 v3;
  SBHHomeScreenUsageMonitor *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  void *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  if (self->_usageMonitoringEnabled != a3)
  {
    v3 = a3;
    self->_usageMonitoringEnabled = a3;
    if (a3)
      v5 = -[SBHHomeScreenUsageMonitor initWithIconManager:]([SBHHomeScreenUsageMonitor alloc], "initWithIconManager:", self);
    else
      v5 = 0;
    -[SBHIconManager setUsageMonitor:](self, "setUsageMonitor:", v5);
    -[SBHIconManager todayViewControllers](self, "todayViewControllers");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = 0u;
    v13 = 0u;
    v14 = 0u;
    v15 = 0u;
    v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)v13;
      do
      {
        for (i = 0; i != v8; ++i)
        {
          if (*(_QWORD *)v13 != v9)
            objc_enumerationMutation(v6);
          v11 = *(void **)(*((_QWORD *)&v12 + 1) + 8 * i);
          if (v3)
            objc_msgSend(v11, "addObserver:", self);
          else
            objc_msgSend(v11, "removeObserver:", self);
        }
        v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
      }
      while (v8);
    }

  }
}

- (void)dismissFolderPageManagementUI
{
  id v2;

  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "exitPageManagementUIWithCompletionHandler:", 0);

}

- (id)silhouetteLayoutForPageAtIndex:(unint64_t)a3
{
  void *v5;
  void *v6;
  void *v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  CGFloat v24;
  CGFloat Height;
  id v26;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  CGFloat v32;
  CGFloat v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  void *v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  void *v56;
  double v57;
  CGFloat v58;
  double v59;
  CGFloat v60;
  double v61;
  CGFloat v62;
  double v63;
  CGFloat v64;
  double v65;
  double v66;
  void *v67;
  void *v68;
  id v69;
  void *v70;
  void *v71;
  double v72;
  double v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  void *v80;
  double v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  void *v90;
  double v92;
  double v93;
  double v94;
  id v95;
  id v96;
  void *v97;
  CGFloat v98;
  _QWORD v99[4];
  id v100;
  id v101;
  CGFloat v102;
  double v103;
  double v104;
  CGFloat v105;
  _QWORD v106[4];
  id v107;
  id v108;
  CGFloat v109;
  double v110;
  double v111;
  CGFloat v112;
  _QWORD v113[4];
  id v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD aBlock[4];
  id v121;
  CGFloat v122;
  CGRect v123;

  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v5, "iconListViewCount") <= a3)
  {
    v68 = 0;
  }
  else
  {
    objc_msgSend(v5, "rootFolderView");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "iconListViewAtIndex:", a3);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "bounds");
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v15 = v14;
    objc_msgSend(v7, "bounds");
    v17 = v16;
    v19 = v18;
    v21 = v20;
    v23 = v22;
    v98 = v9;
    v123.origin.x = v9;
    v92 = v11;
    v93 = v13;
    v123.origin.y = v11;
    v123.size.width = v13;
    v24 = v15;
    v123.size.height = v15;
    Height = CGRectGetHeight(v123);
    objc_msgSend(v7, "requireAllIconsShownForReason:", CFSTR("silhouetteLayout"));
    v97 = (void *)objc_claimAutoreleasedReturnValue();
    v26 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
    v27 = MEMORY[0x1E0C809B0];
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 3221225472;
    aBlock[2] = __49__SBHIconManager_silhouetteLayoutForPageAtIndex___block_invoke;
    aBlock[3] = &unk_1E8D8C9C0;
    v94 = Height;
    v122 = Height;
    v96 = v26;
    v121 = v96;
    v113[0] = v27;
    v113[1] = 3221225472;
    v113[2] = __49__SBHIconManager_silhouetteLayoutForPageAtIndex___block_invoke_2;
    v113[3] = &unk_1E8D8C9E8;
    v28 = _Block_copy(aBlock);
    v115 = v28;
    v114 = v7;
    v116 = v17;
    v117 = v19;
    v118 = v21;
    v119 = v23;
    v95 = v114;
    objc_msgSend(v114, "enumerateIconViewsUsingBlock:", v113);
    -[SBHIconManager floatingDockViewController](self, "floatingDockViewController");
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    if (v29)
    {
      v106[0] = v27;
      v106[1] = 3221225472;
      v106[2] = __49__SBHIconManager_silhouetteLayoutForPageAtIndex___block_invoke_3;
      v106[3] = &unk_1E8D8CA10;
      v108 = v28;
      v30 = v6;
      v31 = v6;
      v107 = v31;
      v32 = v92;
      v33 = v93;
      v109 = v9;
      v110 = v92;
      v111 = v93;
      v112 = v24;
      objc_msgSend(v29, "enumerateDisplayedIconViewsUsingBlock:", v106);
      objc_msgSend(v29, "dockView");
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v34, "backgroundView");
      v35 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v34, "window");
      v36 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v36, "screen");
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v37, "coordinateSpace");
      v38 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v35, "frame");
      v40 = v39;
      v42 = v41;
      v44 = v43;
      v46 = v45;
      objc_msgSend(v35, "superview");
      v47 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v47, "convertRect:toCoordinateSpace:", v38, v40, v42, v44, v46);
      v49 = v48;
      v51 = v50;
      v53 = v52;
      v55 = v54;

      v56 = v31;
      v6 = v30;
      objc_msgSend(v56, "convertRect:fromCoordinateSpace:", v38, v49, v51, v53, v55);
      v58 = v57;
      v60 = v59;
      v62 = v61;
      v64 = v63;
      objc_msgSend(v34, "currentDockContinuousCornerRadius");
      v66 = v65;

      v67 = v108;
    }
    else
    {
      objc_msgSend(v5, "dockIconListView");
      v67 = (void *)objc_claimAutoreleasedReturnValue();
      v99[0] = v27;
      v99[1] = 3221225472;
      v99[2] = __49__SBHIconManager_silhouetteLayoutForPageAtIndex___block_invoke_4;
      v99[3] = &unk_1E8D8C9E8;
      v101 = v28;
      v69 = v6;
      v100 = v69;
      v32 = v92;
      v33 = v93;
      v102 = v9;
      v103 = v92;
      v104 = v93;
      v105 = v24;
      objc_msgSend(v67, "enumerateIconViewsUsingBlock:", v99);
      objc_msgSend(v69, "dockView");
      v70 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v70, "backgroundView");
      v71 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v71, "frame");
      v73 = v72;
      v75 = v74;
      v77 = v76;
      v79 = v78;
      objc_msgSend(v71, "superview");
      v80 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v69, "convertRect:fromView:", v80, v73, v75, v77, v79);
      v58 = v81;
      v60 = v82;
      v62 = v83;
      v64 = v84;

      objc_msgSend(v71, "_cornerRadius");
      v66 = v85;

    }
    v86 = SBHNormalizedRectFromSubRect(v98, v32, v33, v24, v58, v60, v62, v64);
    v90 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0DAAE88]), "initWithFrame:cornerRadius:", v86, v87, v88, v89, v66 / v94);
    objc_msgSend(v97, "invalidate");
    v68 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0DAAEB8]), "initWithIcons:dock:", v96, v90);

  }
  return v68;
}

void __49__SBHIconManager_silhouetteLayoutForPageAtIndex___block_invoke(uint64_t a1, void *a2, void *a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7)
{
  id v13;
  id v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  id v32;

  v13 = a3;
  v14 = a2;
  objc_msgSend(v14, "iconImageVisibleFrame");
  objc_msgSend(v13, "convertRect:fromView:", v14);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;

  v23 = SBHNormalizedRectFromSubRect(a4, a5, a6, a7, v16, v18, v20, v22);
  v25 = v24;
  v27 = v26;
  v29 = v28;
  objc_msgSend(v14, "iconImageInfo");
  v31 = v30;

  v32 = (id)objc_msgSend(objc_alloc(MEMORY[0x1E0DAAE88]), "initWithFrame:cornerRadius:", v23, v25, v27, v29, v31 / *(double *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 32), "addObject:", v32);

}

uint64_t __49__SBHIconManager_silhouetteLayoutForPageAtIndex___block_invoke_2(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD, double, double, double, double))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), a2, *(_QWORD *)(a1 + 32), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
}

uint64_t __49__SBHIconManager_silhouetteLayoutForPageAtIndex___block_invoke_3(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD, double, double, double, double))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), a2, *(_QWORD *)(a1 + 32), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
}

uint64_t __49__SBHIconManager_silhouetteLayoutForPageAtIndex___block_invoke_4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD, double, double, double, double))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), a2, *(_QWORD *)(a1 + 32), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
}

- (id)iconsToRecacheForIconStylePickerPreview
{
  void *v2;
  id v3;
  id v4;
  _QWORD v6[4];
  id v7;

  -[SBHIconManager rootViewController](self, "rootViewController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __57__SBHIconManager_iconsToRecacheForIconStylePickerPreview__block_invoke;
  v6[3] = &unk_1E8D85CC0;
  v4 = v3;
  v7 = v4;
  objc_msgSend(v2, "enumerateDisplayedIconViewsUsingBlock:", v6);

  return v4;
}

void __57__SBHIconManager_iconsToRecacheForIconStylePickerPreview__block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD v10[4];
  id v11;
  uint64_t v12;
  uint64_t v13;

  v9 = a2;
  objc_msgSend(v9, "icon");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "addObject:", v3);
  if (objc_msgSend(v3, "isFolderIcon"))
  {
    objc_msgSend(v3, "folder");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v9, "visibleMiniIconListIndex");
    v6 = objc_msgSend(v9, "firstVisibleMiniIconIndex");
    v7 = objc_msgSend(v9, "lastVisibleMiniIconIndex");
    objc_msgSend(v4, "listAtIndex:", v5);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v10[0] = MEMORY[0x1E0C809B0];
    v10[1] = 3221225472;
    v10[2] = __57__SBHIconManager_iconsToRecacheForIconStylePickerPreview__block_invoke_2;
    v10[3] = &unk_1E8D8CA38;
    v12 = v6;
    v13 = v7;
    v11 = *(id *)(a1 + 32);
    objc_msgSend(v8, "enumerateIconsUsingBlock:", v10);

  }
}

void __57__SBHIconManager_iconsToRecacheForIconStylePickerPreview__block_invoke_2(uint64_t a1, void *a2, unint64_t a3)
{
  id v5;
  id v6;

  v5 = a2;
  if (*(_QWORD *)(a1 + 40) <= a3 && *(_QWORD *)(a1 + 48) >= a3)
  {
    v6 = v5;
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v5);
    v5 = v6;
  }

}

- (id)iconViewsToPreviewForIconStylePicker
{
  void *v2;
  id v3;
  id v4;
  _QWORD v6[4];
  id v7;

  -[SBHIconManager rootViewController](self, "rootViewController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __54__SBHIconManager_iconViewsToPreviewForIconStylePicker__block_invoke;
  v6[3] = &unk_1E8D85CC0;
  v4 = v3;
  v7 = v4;
  objc_msgSend(v2, "enumerateDisplayedIconViewsUsingBlock:", v6);

  return v4;
}

uint64_t __54__SBHIconManager_iconViewsToPreviewForIconStylePicker__block_invoke(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "addObject:", a2);
}

- (NSString)description
{
  return (NSString *)-[SBHIconManager descriptionWithMultilinePrefix:](self, "descriptionWithMultilinePrefix:", CFSTR("\t"));
}

- (void)cancelAllDrags
{
  id v2;

  -[SBHIconManager iconDragManager](self, "iconDragManager");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "cancelAllDrags");

}

- (BOOL)iconDragManager:(id)a3 canBeginIconDragForIconView:(id)a4
{
  id v5;
  void *v6;
  void *v7;
  BOOL v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v5 = a4;
  -[SBHIconManager delegate](self, "delegate");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0
    && !objc_msgSend(v6, "iconManagerCanBeginIconDrags:", self)
    || (objc_opt_respondsToSelector() & 1) != 0
    && !objc_msgSend(v6, "iconManager:canBeginDragForIconView:", self, v5)
    || (-[SBHIconManager reasonToDisallowInteractionOnIconView:](self, "reasonToDisallowInteractionOnIconView:", v5),
        v7 = (void *)objc_claimAutoreleasedReturnValue(),
        v7,
        v7))
  {
    v8 = 0;
  }
  else
  {
    v9 = objc_msgSend(v5, "draggingStartLocation");
    v10 = (void *)MEMORY[0x1E0CF9688];
    objc_msgSend(v5, "icon");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "applicationBundleID");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "applicationWithBundleIdentifier:", v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    v8 = v9 != 4 || (objc_msgSend(v13, "isHidden") & 1) == 0;
  }

  return v8;
}

- (void)iconDragManager:(id)a3 iconView:(id)a4 willAnimateDragLiftWithAnimator:(id)a5 session:(id)a6
{
  id v7;
  id v8;

  v7 = a4;
  -[SBHIconManager _restartEditingEndTimer](self, "_restartEditingEndTimer");
  objc_msgSend(v7, "icon");
  v8 = (id)objc_claimAutoreleasedReturnValue();

  -[SBHIconManager clearHighlightedIcon:](self, "clearHighlightedIcon:", v8);
}

- (void)iconDragManagerIconDraggingDidChange:(id)a3
{
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v4 = objc_msgSend(a3, "isIconDragging");
  -[SBHIconManager _restartEditingEndTimer](self, "_restartEditingEndTimer");
  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setAllowsAutoscrollToLeadingCustomView:", v4 ^ 1);

  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "postNotificationName:object:", CFSTR("SBHIconManagerIconDraggingChanged"), self);

  -[SBHIconManager searchGesture](self, "searchGesture");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setDisabled:forReason:", v4, CFSTR("SBHIconManager Dragging"));

  -[SBHIconManager _updateVisibleIconsViewsForAllowableCloseBoxes](self, "_updateVisibleIconsViewsForAllowableCloseBoxes");
  -[SBHIconManager delegate](self, "delegate");
  v8 = (id)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v8, "iconManagerIconDraggingDidChange:", self);

}

- (void)iconDragManager:(id)a3 wantsAnimatedRemovalOfIcon:(id)a4
{
  -[SBHIconManager uninstallIcon:animate:](self, "uninstallIcon:animate:", a4, 1);
}

- (id)iconDragManager:(id)a3 dragPreviewForIconView:(id)a4
{
  id v5;
  void *v6;
  void *v7;

  v5 = a4;
  -[SBHIconManager delegate](self, "delegate");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v6, "iconManager:dragPreviewForIconView:", self, v5);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v7 = 0;
  }

  return v7;
}

- (id)windowForIconDragPreviewsForIconDragManager:(id)a3 forWindowScene:(id)a4
{
  id v5;
  void *v6;
  void *v7;

  v5 = a4;
  -[SBHIconManager delegate](self, "delegate");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v6, "windowForIconDragPreviewsForIconManager:forWindowScene:", self, v5);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v7 = 0;
  }

  return v7;
}

- (id)iconDragManager:(id)a3 targetedDragPreviewForIconView:(id)a4 item:(id)a5 session:(id)a6 previewParameters:(id)a7
{
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  void *v16;

  v11 = a4;
  v12 = a5;
  v13 = a6;
  v14 = a7;
  -[SBHIconManager delegate](self, "delegate");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v15, "iconManager:targetedDragPreviewForIconView:item:session:previewParameters:", self, v11, v12, v13, v14);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v16 = 0;
  }

  return v16;
}

- (id)rootViewForIconDragManager:(id)a3
{
  void *v3;
  void *v4;

  -[SBHIconManager rootFolderController](self, "rootFolderController", a3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "view");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

- (void)iconDragManager:(id)a3 willBeginIconDragWithUniqueIdentifier:(id)a4 numberOfDraggedItems:(unint64_t)a5
{
  void *v7;
  id v8;

  v8 = a4;
  -[SBHIconManager delegate](self, "delegate");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v7, "iconManager:willBeginIconDragWithUniqueIdentifier:numberOfDraggedItems:", self, v8, a5);

}

- (void)iconDragManager:(id)a3 didAddItemsToIconDragWithUniqueIdentifier:(id)a4 numberOfDraggedItems:(unint64_t)a5
{
  void *v7;
  id v8;

  v8 = a4;
  -[SBHIconManager delegate](self, "delegate");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v7, "iconManager:didAddItemsToIconDragWithUniqueIdentifier:numberOfDraggedItems:", self, v8, a5);

}

- (void)iconDragManager:(id)a3 didEndIconDragWithUniqueIdentifier:(id)a4 numberOfDraggedItems:(unint64_t)a5
{
  void *v7;
  id v8;

  v8 = a4;
  -[SBHIconManager delegate](self, "delegate");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v7, "iconManager:didEndIconDragWithUniqueIdentifier:numberOfDraggedItems:", self, v8, a5);

}

- (void)iconDragManager:(id)a3 iconDropSessionDidEnter:(id)a4
{
  void *v5;
  id v6;

  v6 = a4;
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v5, "iconManager:iconDropSessionDidEnter:", self, v6);

}

- (BOOL)iconDragManager:(id)a3 canBeginDragForIconView:(id)a4
{
  id v5;
  void *v6;
  char v7;

  v5 = a4;
  -[SBHIconManager delegate](self, "delegate");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v7 = objc_msgSend(v6, "iconManager:canBeginDragForIconView:", self, v5);
  else
    v7 = 1;

  return v7;
}

- (BOOL)iconDragManager:(id)a3 canAddDragItemsToSession:(id)a4 fromIconView:(id)a5
{
  id v7;
  id v8;
  void *v9;
  char v10;

  v7 = a4;
  v8 = a5;
  -[SBHIconManager delegate](self, "delegate");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v10 = objc_msgSend(v9, "iconManager:canAddDragItemsToSession:fromIconView:", self, v7, v8);
  else
    v10 = 1;

  return v10;
}

- (BOOL)iconDragManager:(id)a3 canAcceptDropInSession:(id)a4 inIconListView:(id)a5
{
  id v7;
  id v8;
  void *v9;
  char v10;

  v7 = a4;
  v8 = a5;
  -[SBHIconManager delegate](self, "delegate");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v10 = objc_msgSend(v9, "iconManager:canAcceptDropInSession:inIconListView:", self, v7, v8);
  else
    v10 = 1;

  return v10;
}

- (double)iconDragManager:(id)a3 additionalDragLiftScaleForIconView:(id)a4
{
  id v5;
  void *v6;
  double v7;
  double v8;

  v5 = a4;
  -[SBHIconManager delegate](self, "delegate");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = 0.0;
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v6, "iconManager:additionalDragLiftScaleForIconView:", self, v5);
    v7 = v8;
  }

  return v7;
}

- (int64_t)iconDragManager:(id)a3 draggingStartLocationForIconView:(id)a4 proposedStartLocation:(int64_t)a5
{
  id v7;
  void *v8;

  v7 = a4;
  -[SBHIconManager delegate](self, "delegate");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    a5 = objc_msgSend(v8, "iconManager:draggingStartLocationForIconView:proposedStartLocation:", self, v7, a5);

  return a5;
}

- (void)presentTodayOverlayForIconDragManager:(id)a3
{
  id v4;

  -[SBHIconManager delegate](self, "delegate", a3);
  v4 = (id)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v4, "presentTodayOverlayForIconManager:", self);

}

- (void)dismissTodayOverlayForIconDragManager:(id)a3
{
  id v4;

  -[SBHIconManager delegate](self, "delegate", a3);
  v4 = (id)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v4, "dismissTodayOverlayForIconManager:", self);

}

- (void)presentLibraryForIconDragManager:(id)a3 windowScene:(id)a4
{
  void *v5;
  id v6;

  v6 = a4;
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v5, "presentLibraryForIconManager:windowScene:animated:", self, v6, 1);

}

- (void)dismissLibraryForIconDragManager:(id)a3 windowScene:(id)a4
{
  void *v5;
  id v6;

  v6 = a4;
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v5, "dismissLibraryForIconManager:windowScene:animated:", self, v6, 1);

}

- (double)defaultIconLayoutAnimationDurationForIconDragManager:(id)a3
{
  double result;

  objc_msgSend((id)objc_opt_class(), "defaultIconLayoutAnimationDuration");
  return result;
}

- (BOOL)iconDragManager:(id)a3 shouldDuplicateIconsInDragSession:(id)a4
{
  void *v4;
  void *v5;
  void *v6;
  unint64_t v7;
  unsigned int v8;

  objc_msgSend(a4, "items", a3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "firstObject");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "sbh_appDragLocalContext");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "startLocation");
  v8 = (v7 < 8) & (0xB0u >> v7);

  return v8;
}

- (BOOL)allowsSnappingIconsToGridForIconDragManager:(id)a3
{
  return 1;
}

- (BOOL)iconDragManager:(id)a3 canSnapIconsToGridInLocation:(id)a4
{
  return SBIconLocationGroupContainsLocation(CFSTR("SBIconLocationGroupRoot"), a4);
}

- (void)iconDragManager:(id)a3 didSpringLoadIconView:(id)a4
{
  void *v5;
  id v6;

  v6 = a4;
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v5, "iconManager:didSpringLoadIconView:", self, v6);

}

- (id)iconDragManager:(id)a3 launchActionsForIconView:(id)a4
{
  return -[SBHIconManager launchActionsForIconView:](self, "launchActionsForIconView:", a4);
}

- (id)iconDragManager:(id)a3 launchURLForIconView:(id)a4
{
  return -[SBHIconManager launchURLForIconView:](self, "launchURLForIconView:", a4);
}

- (void)iconDragManager:(id)a3 folderController:(id)a4 draggedIconShouldDropFromListView:(id)a5
{
  -[SBHIconManager _closeFolderController:animated:withCompletion:](self, "_closeFolderController:animated:withCompletion:", a4, 1, 0);
}

- (BOOL)iconDragManager:(id)a3 dragsSupportSystemDragsForIconView:(id)a4
{
  id v5;
  void *v6;
  char v7;

  v5 = a4;
  -[SBHIconManager delegate](self, "delegate");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v7 = objc_msgSend(v6, "iconManager:dragsSupportSystemDragsForIconView:", self, v5);
  else
    v7 = 1;

  return v7;
}

- (id)iconDragManager:(id)a3 localizedFolderNameForCombiningIcon:(id)a4 withIcon:(id)a5
{
  return -[SBHIconManager _proposedFolderNameForGrabbedIcon:recipientIcon:](self, "_proposedFolderNameForGrabbedIcon:recipientIcon:", a4, a5);
}

- (void)iconDragManager:(id)a3 wantsScrollToIconListContainingIcon:(id)a4 animated:(BOOL)a5
{
  -[SBHIconManager scrollToIconListContainingIcon:animate:](self, "scrollToIconListContainingIcon:animate:", a4, a5);
}

- (void)insertIcons:(id)a3 intoWidgetStack:(id)a4
{
  id v6;
  id v7;
  id v8;

  v6 = a4;
  v7 = a3;
  -[SBHIconManager iconModel](self, "iconModel");
  v8 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "addDataSourcesFromWidgetIcons:", v7);

  objc_msgSend(v8, "removeIcons:", v7);
}

- (void)addSuggestedActiveWidgetToStack:(id)a3
{
  void *v4;
  id v5;
  id v6;

  v6 = a3;
  objc_msgSend(v6, "firstSuggestedIconDataSource");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = -[SBHIconManager promoteSuggestedWidget:withinStack:](self, "promoteSuggestedWidget:withinStack:", v4, v6);

}

- (id)promoteSuggestedWidget:(id)a3 withinStack:(id)a4
{
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  char isKindOfClass;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  NSObject *v20;
  void *v21;
  void *v23;
  uint8_t buf[4];
  void *v25;
  __int16 v26;
  void *v27;
  __int16 v28;
  void *v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  v8 = v7;
  v9 = 0;
  if (!v6 || !v7)
    goto LABEL_18;
  objc_msgSend(v6, "uniqueIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager _effectiveWidgetMultiplexingManager](self, "_effectiveWidgetMultiplexingManager");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "viewControllerForIdentifier:", v10);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    if (!objc_msgSend(v6, "suggestionSource"))
      NSLog(CFSTR("SBHWidget does not come from a suggestion source!"));
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      v9 = 0;
      goto LABEL_11;
    }
    if (!objc_msgSend(v6, "suggestionSource"))
      NSLog(CFSTR("FakeWidget does not come from a suggestion source!"));
  }
  v9 = (void *)objc_msgSend(v6, "copyWithSuggestionSource:", 0);
LABEL_11:
  objc_msgSend(v8, "replaceIconDataSource:withIconDataSource:", v6, v9);
  objc_opt_self();
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  isKindOfClass = objc_opt_isKindOfClass();

  if ((isKindOfClass & 1) != 0)
  {
    objc_msgSend(v12, "widget");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "intentReference");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "intent");
    v17 = (void *)objc_claimAutoreleasedReturnValue();

    if (v17)
    {
      objc_msgSend(v15, "extensionIdentity");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "extensionBundleIdentifier");
      v23 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v15, "kind");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      SBLogIcon();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412802;
        v25 = v23;
        v26 = 2112;
        v27 = v19;
        v28 = 2112;
        v29 = v17;
        _os_log_impl(&dword_1CFEF3000, v20, OS_LOG_TYPE_DEFAULT, "Saving intent for 'added' suggested widget (%@ - %@): %@", buf, 0x20u);
      }

      -[SBHIconManager _archiveConfiguration:forDataSource:ofIcon:](self, "_archiveConfiguration:forDataSource:ofIcon:", v17, v9, v8);
    }

  }
  -[SBHIconManager usageMonitor](self, "usageMonitor");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v21, "noteUserAddedWidgetIconStackSuggestion:", v8);

LABEL_18:
  return v9;
}

- (void)hideSuggestedWidgetFromStack:(id)a3
{
  void *v4;
  id v5;

  v5 = a3;
  -[SBHIconManager usageMonitor](self, "usageMonitor");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "noteUserDislikedWidgetIconStackSuggestion:", v5);

  objc_msgSend(v5, "removeFirstSuggestedIconDataSource");
}

- (void)hideSiriSuggestionOnWidgetFromStack:(id)a3
{
  id v4;
  id v5;

  v4 = a3;
  -[SBHIconManager usageMonitor](self, "usageMonitor");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "noteUserDislikedSiriSuggestionOnWidgetIconStackSuggestion:", v4);

}

- (void)removeWidget:(id)a3 fromStack:(id)a4
{
  objc_msgSend(a4, "removeIconDataSource:", a3);
}

- (id)gridPathForIcon:(id)a3
{
  id v4;
  void *v5;
  void *v6;

  v4 = a3;
  -[SBHIconManager rootFolder](self, "rootFolder");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "gridPathForIcon:listGridCellInfoOptions:", v4, -[SBHIconManager gridCellInfoOptions](self, "gridCellInfoOptions"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

- (void)saveGridPath:(id)a3 asPriorLocationBeforeResizeForIcon:(id)a4
{
  id v6;
  NSMapTable *previousIconGridPathsBeforeResize;
  NSMapTable *v8;
  NSMapTable *v9;
  id v10;

  v10 = a3;
  v6 = a4;
  previousIconGridPathsBeforeResize = self->_previousIconGridPathsBeforeResize;
  if (!previousIconGridPathsBeforeResize)
  {
    objc_msgSend(MEMORY[0x1E0CB3748], "weakToStrongObjectsMapTable");
    v8 = (NSMapTable *)objc_claimAutoreleasedReturnValue();
    v9 = self->_previousIconGridPathsBeforeResize;
    self->_previousIconGridPathsBeforeResize = v8;

    previousIconGridPathsBeforeResize = self->_previousIconGridPathsBeforeResize;
  }
  -[NSMapTable setObject:forKey:](previousIconGridPathsBeforeResize, "setObject:forKey:", v10, v6);

}

- (void)changeSizeOfWidgetIcon:(id)a3 toSizeClass:(id)a4
{
  -[SBHIconManager changeSizeOfWidgetIcon:toSizeClass:animated:completionHandler:](self, "changeSizeOfWidgetIcon:toSizeClass:animated:completionHandler:", a3, a4, 1, 0);
}

- (void)changeSizeOfWidgetIcon:(id)a3 toSizeClass:(id)a4 animated:(BOOL)a5 completionHandler:(id)a6
{
  id v10;
  id v11;
  void (**v12)(_QWORD);
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  int v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  BOOL v24;
  void *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  _QWORD v33[5];
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  void (**v43)(_QWORD);
  BOOL v44;

  v10 = a3;
  v11 = a4;
  v12 = (void (**)(_QWORD))a6;
  -[SBHIconManager rootFolder](self, "rootFolder");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "indexPathForIcon:", v10);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  if (v14)
  {
    objc_msgSend(v10, "gridSizeClass");
    v15 = objc_claimAutoreleasedReturnValue();
    if ((id)v15 == v11)
    {

    }
    else
    {
      v16 = (void *)v15;
      objc_msgSend(v10, "gridSizeClass");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = objc_msgSend(v17, "isEqualToString:", v11);

      if (!v18)
      {
        -[SBHIconManager prepareForUndo](self, "prepareForUndo");
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        -[SBHIconManager delegate](self, "delegate");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        -[SBHIconManager makeResizedCopyOfWidgetIcon:withGridSizeClass:](self, "makeResizedCopyOfWidgetIcon:withGridSizeClass:", v10, v11);
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        if ((objc_opt_respondsToSelector() & 1) != 0)
          objc_msgSend(v19, "iconManager:willChangeSizeOfIcon:toSizeClass:byReplacingWithIcon:", self, v10, v11, v20);
        v27 = v19;
        -[SBHIconManager preWarmCustomViewControllerForWidgetIcon:](self, "preWarmCustomViewControllerForWidgetIcon:", v20);
        v32 = (void *)objc_claimAutoreleasedReturnValue();
        -[SBHIconManager iconListViewForIndexPath:](self, "iconListViewForIndexPath:", v14);
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v21, "displayedIconViewForIcon:", v10);
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        -[NSMapTable objectForKey:](self->_previousIconGridPathsBeforeResize, "objectForKey:", v10);
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        -[SBHIconManager gridPathForIcon:](self, "gridPathForIcon:", v10);
        v29 = v22;
        v30 = (void *)objc_claimAutoreleasedReturnValue();
        if (v22)
        {
          v33[0] = MEMORY[0x1E0C809B0];
          v33[1] = 3221225472;
          v33[2] = __80__SBHIconManager_changeSizeOfWidgetIcon_toSizeClass_animated_completionHandler___block_invoke;
          v33[3] = &unk_1E8D8CA68;
          v33[4] = self;
          v34 = v10;
          v35 = v11;
          v36 = v20;
          v37 = v22;
          v38 = v21;
          v39 = v32;
          v23 = v20;
          v24 = a5;
          v25 = v28;
          v40 = v28;
          v41 = v31;
          v42 = v30;
          v44 = v24;
          v20 = v23;
          v43 = v12;
          objc_msgSend(v37, "performAfterContextMenusDismissUsingBlock:", v33);

        }
        else
        {
          LOBYTE(v26) = a5;
          v25 = v28;
          -[SBHIconManager continueChangingSizeOfWidgetIcon:toSizeClass:newIcon:displayedIconView:listView:resizedViewController:undoPreparation:previousIconGridPath:currentIconGridPath:animated:completionHandler:](self, "continueChangingSizeOfWidgetIcon:toSizeClass:newIcon:displayedIconView:listView:resizedViewController:undoPreparation:previousIconGridPath:currentIconGridPath:animated:completionHandler:", v10, v11, v20, 0, v21, v32, v28, v31, v30, v26, v12);
        }

        goto LABEL_13;
      }
    }
  }
  if (v12)
    v12[2](v12);
LABEL_13:

}

uint64_t __80__SBHIconManager_changeSizeOfWidgetIcon_toSizeClass_animated_completionHandler___block_invoke(uint64_t a1)
{
  uint64_t v2;

  LOBYTE(v2) = *(_BYTE *)(a1 + 120);
  return objc_msgSend(*(id *)(a1 + 32), "continueChangingSizeOfWidgetIcon:toSizeClass:newIcon:displayedIconView:listView:resizedViewController:undoPreparation:previousIconGridPath:currentIconGridPath:animated:completionHandler:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), v2, *(_QWORD *)(a1 + 112));
}

- (void)continueChangingSizeOfWidgetIcon:(id)a3 toSizeClass:(id)a4 newIcon:(id)a5 displayedIconView:(id)a6 listView:(id)a7 resizedViewController:(id)a8 undoPreparation:(id)a9 previousIconGridPath:(id)a10 currentIconGridPath:(id)a11 animated:(BOOL)a12 completionHandler:(id)a13
{
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  void (**v26)(_QWORD);
  void *v27;
  SBIconListViewIconSizeChangeAnimator *v28;
  void (**v29)(_QWORD);
  void *v30;
  void *v31;
  unint64_t v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  id v47;
  _QWORD aBlock[4];
  id v49;
  SBHIconManager *v50;
  id v51;
  id v52;
  id v53;
  id v54;
  _QWORD v55[3];

  v55[1] = *MEMORY[0x1E0C80C00];
  v44 = a3;
  v18 = a4;
  v19 = a5;
  v20 = a6;
  v45 = a9;
  v47 = a10;
  v21 = a13;
  v40 = a11;
  v22 = a7;
  -[SBHIconManager delegate](self, "delegate");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = __204__SBHIconManager_continueChangingSizeOfWidgetIcon_toSizeClass_newIcon_displayedIconView_listView_resizedViewController_undoPreparation_previousIconGridPath_currentIconGridPath_animated_completionHandler___block_invoke;
  aBlock[3] = &unk_1E8D8CA90;
  v42 = v23;
  v49 = v42;
  v50 = self;
  v24 = v44;
  v51 = v24;
  v43 = v18;
  v52 = v43;
  v25 = v19;
  v53 = v25;
  v41 = v21;
  v54 = v41;
  v26 = (void (**)(_QWORD))_Block_copy(aBlock);
  v46 = v20;
  if (a12)
  {
    -[SBHIconManager widgetMetricsProvider](self, "widgetMetricsProvider");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    v28 = -[SBIconListViewIconSizeChangeAnimator initWithIconView:widgetMetricsProvider:]([SBIconListViewIconSizeChangeAnimator alloc], "initWithIconView:widgetMetricsProvider:", v20, v27);
    -[SBIconListViewIconSizeChangeAnimator setDelegate:](v28, "setDelegate:", self);
    -[SBIconListViewIconSizeChangeAnimator addAnimationCompletionHandler:](v28, "addAnimationCompletionHandler:", v26);

  }
  else
  {
    v28 = 0;
  }
  v29 = v26;
  -[SBHIconManager iconModel](self, "iconModel");
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager rootFolder](self, "rootFolder");
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  v32 = -[SBHIconManager gridCellInfoOptions](self, "gridCellInfoOptions");
  v55[0] = v25;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v55, 1);
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  v34 = (id)objc_msgSend(v31, "replaceIcon:withIcons:options:listGridCellInfoOptions:", v24, v33, 8389634, v32);

  v35 = v47;
  if (v47)
    v36 = (id)objc_msgSend(v31, "insertIcon:atGridPath:options:", v25, v47, 1024);
  objc_msgSend(v30, "removeIcon:", v24);
  objc_msgSend(v30, "addIcon:", v25);
  objc_msgSend(v22, "layoutIconsIfNeededUsingAnimator:options:", v28, 0);
  -[SBHIconManager saveGridPath:asPriorLocationBeforeResizeForIcon:](self, "saveGridPath:asPriorLocationBeforeResizeForIcon:", v40, v25);

  objc_msgSend(v22, "undoManager");
  v37 = (void *)objc_claimAutoreleasedReturnValue();

  if (v37)
  {
    SBHBundle();
    v38 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v38, "localizedStringForKey:value:table:", CFSTR("UNDO_RESIZE"), &stru_1E8D8E958, CFSTR("SpringBoardHome"));
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v45, "registerWithUndoManager:actionName:observer:", v37, v39, 0);

    v35 = v47;
  }
  if (!a12)
    v29[2](v29);

}

uint64_t __204__SBHIconManager_continueChangingSizeOfWidgetIcon_toSizeClass_newIcon_displayedIconView_listView_resizedViewController_undoPreparation_previousIconGridPath_currentIconGridPath_animated_completionHandler___block_invoke(uint64_t a1)
{
  uint64_t result;

  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(*(id *)(a1 + 32), "iconManager:didChangeSizeOfIcon:toSizeClass:byReplacingWithIcon:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64));
  result = *(_QWORD *)(a1 + 72);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

- (id)makeResizedCopyOfWidgetIcon:(id)a3 withGridSizeClass:(id)a4
{
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  char v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  void *v17;
  void *v18;
  char isKindOfClass;
  void *v20;
  char v21;
  void *v22;
  void *v23;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  id obj;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _BYTE v34[128];
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  v28 = v6;
  v8 = (void *)objc_msgSend(v6, "copyWithUniqueLeafIdentifier");
  v25 = v7;
  objc_msgSend(v8, "setGridSizeClass:", v7);
  -[SBHIconManager delegate](self, "delegate");
  v9 = objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v10 = objc_opt_respondsToSelector();
  else
    v10 = 0;
  v27 = (void *)v9;
  objc_msgSend(v8, "iconDataSources");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = (void *)objc_msgSend(v11, "copy");

  v32 = 0u;
  v33 = 0u;
  v30 = 0u;
  v31 = 0u;
  obj = v12;
  v13 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v30, v34, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v31;
    v26 = v8;
    do
    {
      for (i = 0; i != v14; ++i)
      {
        if (*(_QWORD *)v31 != v15)
          objc_enumerationMutation(obj);
        v17 = *(void **)(*((_QWORD *)&v30 + 1) + 8 * i);
        objc_opt_self();
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        isKindOfClass = objc_opt_isKindOfClass();

        if ((isKindOfClass & 1) != 0
          || (objc_opt_self(),
              v20 = (void *)objc_claimAutoreleasedReturnValue(),
              v21 = objc_opt_isKindOfClass(),
              v20,
              (v21 & 1) != 0))
        {
          v22 = (void *)objc_msgSend(v17, "copyWithUniqueIdentifier");
          objc_msgSend(v8, "replaceIconDataSource:withIconDataSource:", v17, v22);
          if (v22 != 0 && (v10 & 1) != 0)
          {
            objc_msgSend(v27, "iconManager:configurationDataForDataSource:ofIcon:", self, v17, v28);
            v23 = (void *)objc_claimAutoreleasedReturnValue();
            v8 = v26;
            objc_msgSend(v27, "iconManager:dataSource:ofIcon:didUpdateConfigurationData:", self, v22, v26, v23);

          }
        }
        else
        {
          v22 = 0;
        }

      }
      v14 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v30, v34, 16);
    }
    while (v14);
  }

  return v8;
}

- (void)replaceWidgetIconWithAppIcon:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  NSObject *v19;
  NSMapTable *v20;
  NSMapTable *previousWidgetDataSourceBeforeResize;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  void *v31;
  void *v32;
  _QWORD v33[5];
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  NSObject *v42;
  id v43;
  id v44;

  v4 = a3;
  -[SBHIconManager rootFolder](self, "rootFolder");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "indexPathForIcon:", v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6)
  {
    v7 = objc_opt_class();
    v8 = v4;
    if (v7)
    {
      if ((objc_opt_isKindOfClass() & 1) != 0)
        v9 = v8;
      else
        v9 = 0;
    }
    else
    {
      v9 = 0;
    }
    v10 = v9;

    if (v10)
    {
      -[SBHIconManager prepareForUndo](self, "prepareForUndo");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      -[SBHIconManager iconModel](self, "iconModel");
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      -[SBHIconManager iconForReplacingWidgetIconWithAppIcon:](self, "iconForReplacingWidgetIconWithAppIcon:", v8);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "indexPathForIcon:includingPlaceholders:", v12, 0);
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = v12;
      v14 = v13;
      if (objc_msgSend(v13, "isLeafIcon"))
      {
        v14 = v13;
        if (v31)
        {
          objc_msgSend(v32, "addAdditionalIconMatchingIcon:", v13);
          v14 = (void *)objc_claimAutoreleasedReturnValue();

        }
      }
      if (v14)
      {
        v30 = v11;
        -[SBHIconManager iconListViewForIndexPath:](self, "iconListViewForIndexPath:", v6);
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v28, "displayedIconViewForIcon:", v10);
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        -[NSMapTable objectForKey:](self->_previousIconGridPathsBeforeResize, "objectForKey:", v8);
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        -[SBHIconManager gridPathForIcon:](self, "gridPathForIcon:", v8);
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        -[SBHIconManager delegate](self, "delegate");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        if ((objc_opt_respondsToSelector() & 1) != 0)
          objc_msgSend(v16, "iconManager:willChangeSizeOfIcon:toSizeClass:byReplacingWithIcon:", self, v8, CFSTR("SBHIconGridSizeClassDefault"), v14);
        v33[0] = MEMORY[0x1E0C809B0];
        v33[1] = 3221225472;
        v33[2] = __47__SBHIconManager_replaceWidgetIconWithAppIcon___block_invoke;
        v33[3] = &unk_1E8D8CAB8;
        v33[4] = self;
        v34 = v15;
        v27 = v16;
        v35 = v27;
        v36 = v8;
        v17 = v14;
        v37 = v17;
        v38 = v5;
        v18 = v10;
        v39 = v18;
        v26 = v25;
        v40 = v26;
        v41 = v32;
        v19 = v28;
        v42 = v19;
        v24 = v23;
        v43 = v24;
        v44 = v30;
        v29 = v34;
        objc_msgSend(v34, "performAfterContextMenusDismissUsingBlock:", v33);
        if (!self->_previousWidgetDataSourceBeforeResize)
        {
          objc_msgSend(MEMORY[0x1E0CB3748], "weakToStrongObjectsMapTable");
          v20 = (NSMapTable *)objc_claimAutoreleasedReturnValue();
          previousWidgetDataSourceBeforeResize = self->_previousWidgetDataSourceBeforeResize;
          self->_previousWidgetDataSourceBeforeResize = v20;

        }
        objc_msgSend(v18, "activeDataSource");
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        -[NSMapTable setObject:forKey:](self->_previousWidgetDataSourceBeforeResize, "setObject:forKey:", v22, v17);

        v11 = v30;
      }
      else
      {
        SBLogWidgets();
        v19 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
          -[SBHIconManager replaceWidgetIconWithAppIcon:].cold.1();
      }

    }
  }

}

void __47__SBHIconManager_replaceWidgetIconWithAppIcon___block_invoke(uint64_t a1)
{
  void *v2;
  SBIconListViewIconSizeChangeAnimator *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;

  objc_msgSend(*(id *)(a1 + 32), "widgetMetricsProvider");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = -[SBIconListViewIconSizeChangeAnimator initWithIconView:widgetMetricsProvider:]([SBIconListViewIconSizeChangeAnimator alloc], "initWithIconView:widgetMetricsProvider:", *(_QWORD *)(a1 + 40), v2);
  -[SBIconListViewIconSizeChangeAnimator setDelegate:](v3, "setDelegate:", *(_QWORD *)(a1 + 32));
  v12 = MEMORY[0x1E0C809B0];
  v13 = 3221225472;
  v14 = __47__SBHIconManager_replaceWidgetIconWithAppIcon___block_invoke_2;
  v15 = &unk_1E8D86330;
  v4 = *(id *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 32);
  v16 = v4;
  v17 = v5;
  v18 = *(id *)(a1 + 56);
  v19 = *(id *)(a1 + 64);
  -[SBIconListViewIconSizeChangeAnimator addAnimationCompletionHandler:](v3, "addAnimationCompletionHandler:", &v12);
  objc_msgSend(*(id *)(a1 + 72), "replaceIcon:withIcon:options:", *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 64), 8389634, v12, v13, v14, v15);
  v6 = *(_QWORD *)(a1 + 88);
  if (v6)
    v7 = (id)objc_msgSend(*(id *)(a1 + 72), "insertIcon:atGridPath:options:", *(_QWORD *)(a1 + 64), v6, 1024);
  objc_msgSend(*(id *)(a1 + 96), "removeIcon:", *(_QWORD *)(a1 + 80));
  objc_msgSend(*(id *)(a1 + 104), "layoutIconsIfNeededUsingAnimator:options:", v3, 0);
  objc_msgSend(*(id *)(a1 + 32), "saveGridPath:asPriorLocationBeforeResizeForIcon:", *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 64));
  objc_msgSend(*(id *)(a1 + 104), "undoManager");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (v8)
  {
    v9 = *(void **)(a1 + 120);
    SBHBundle();
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "localizedStringForKey:value:table:", CFSTR("UNDO_RESIZE"), &stru_1E8D8E958, CFSTR("SpringBoardHome"));
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "registerWithUndoManager:actionName:observer:", v8, v11, 0);

  }
}

uint64_t __47__SBHIconManager_replaceWidgetIconWithAppIcon___block_invoke_2(uint64_t a1)
{
  uint64_t result;

  result = objc_opt_respondsToSelector();
  if ((result & 1) != 0)
    return objc_msgSend(*(id *)(a1 + 32), "iconManager:didChangeSizeOfIcon:toSizeClass:byReplacingWithIcon:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), CFSTR("SBHIconGridSizeClassDefault"), *(_QWORD *)(a1 + 56));
  return result;
}

- (id)iconForReplacingWidgetIconWithAppIcon:(id)a3
{
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;

  v4 = a3;
  if (objc_msgSend(v4, "isLeafIcon"))
  {
    objc_msgSend(v4, "activeDataSource");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if (((objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
      && (objc_msgSend(v5, "containerBundleIdentifier"), (v6 = objc_claimAutoreleasedReturnValue()) != 0))
    {
      v7 = (void *)v6;
      -[SBHIconManager iconModel](self, "iconModel");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "applicationIconForBundleIdentifier:", v7);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      -[SBHIconManager delegate](self, "delegate");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      if ((objc_opt_respondsToSelector() & 1) != 0)
      {
        objc_msgSend(v10, "iconManager:applicationIconForReplacingIconWithAppIcon:proposedApplicationIcon:", self, v4, v9);
        v11 = objc_claimAutoreleasedReturnValue();

        v9 = (void *)v11;
      }

    }
    else
    {
      v9 = 0;
    }

  }
  else
  {
    v9 = 0;
  }

  return v9;
}

- (void)replaceAppIcon:(id)a3 withWidgetOfSize:(id)a4
{
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  SBWidgetIcon *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  SBWidgetIcon *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  _QWORD v35[4];
  id v36;
  SBHIconManager *v37;
  id v38;
  id v39;
  id v40;
  id v41;
  SBWidgetIcon *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;

  v6 = a3;
  v7 = a4;
  -[SBHIconManager rootFolder](self, "rootFolder");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "indexPathForIcon:", v6);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (v9)
  {
    -[SBHIconManager prepareForUndo](self, "prepareForUndo");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager iconDataSourceForReplacingAppIconWithWidgetIcon:](self, "iconDataSourceForReplacingAppIconWithWidgetIcon:", v6);
    v11 = objc_claimAutoreleasedReturnValue();
    if (v11)
    {
      v12 = (void *)v11;
      v33 = v8;
      v34 = v10;
      if ((objc_opt_respondsToSelector() & 1) != 0)
      {
        v13 = objc_msgSend(v12, "copyWithUniqueIdentifier");

        v12 = (void *)v13;
      }
      v14 = -[SBLeafIcon initWithUniqueLeafIdentifier]([SBWidgetIcon alloc], "initWithUniqueLeafIdentifier");
      v32 = v12;
      -[SBLeafIcon addIconDataSource:](v14, "addIconDataSource:", v12);
      -[SBIcon setGridSizeClass:](v14, "setGridSizeClass:", v7);
      -[SBHIconManager preWarmCustomViewControllerForWidgetIcon:](self, "preWarmCustomViewControllerForWidgetIcon:", v14);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v30 = v9;
      -[SBHIconManager iconListViewForIndexPath:](self, "iconListViewForIndexPath:", v9);
      v16 = v7;
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v17, "displayedIconViewForIcon:", v6);
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      -[NSMapTable objectForKey:](self->_previousIconGridPathsBeforeResize, "objectForKey:", v6);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      -[SBHIconManager gridPathForIcon:](self, "gridPathForIcon:", v6);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      -[SBHIconManager delegate](self, "delegate");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      if ((objc_opt_respondsToSelector() & 1) != 0)
        objc_msgSend(v21, "iconManager:willChangeSizeOfIcon:toSizeClass:byReplacingWithIcon:", self, v6, v16, v14);
      v35[0] = MEMORY[0x1E0C809B0];
      v35[1] = 3221225472;
      v35[2] = __50__SBHIconManager_replaceAppIcon_withWidgetOfSize___block_invoke;
      v35[3] = &unk_1E8D8CAB8;
      v36 = v15;
      v37 = self;
      v38 = v18;
      v39 = v21;
      v40 = v6;
      v41 = v16;
      v42 = v14;
      v22 = v15;
      v8 = v33;
      v43 = v33;
      v44 = v19;
      v45 = v17;
      v46 = v20;
      v31 = v16;
      v10 = v34;
      v47 = v34;
      v29 = v20;
      v28 = v17;
      v27 = v19;
      v23 = v14;
      v24 = v21;
      v25 = v18;
      v26 = v22;
      objc_msgSend(v25, "performAfterContextMenusDismissUsingBlock:", v35);

      v9 = v30;
      v7 = v31;
    }

  }
}

void __50__SBHIconManager_replaceAppIcon_withWidgetOfSize___block_invoke(uint64_t a1)
{
  void *v2;
  SBIconListViewIconSizeChangeAnimator *v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  _QWORD v14[4];
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;

  objc_msgSend(*(id *)(a1 + 40), "widgetMetricsProvider");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = -[SBIconListViewIconSizeChangeAnimator initWithIconView:widgetMetricsProvider:]([SBIconListViewIconSizeChangeAnimator alloc], "initWithIconView:widgetMetricsProvider:", *(_QWORD *)(a1 + 48), v2);
  -[SBIconListViewIconSizeChangeAnimator setDelegate:](v3, "setDelegate:", *(_QWORD *)(a1 + 40));
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 3221225472;
  v14[2] = __50__SBHIconManager_replaceAppIcon_withWidgetOfSize___block_invoke_2;
  v14[3] = &unk_1E8D84F40;
  v4 = *(id *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 40);
  v15 = v4;
  v16 = v5;
  v17 = *(id *)(a1 + 64);
  v18 = *(id *)(a1 + 72);
  v19 = *(id *)(a1 + 80);
  -[SBIconListViewIconSizeChangeAnimator addAnimationCompletionHandler:](v3, "addAnimationCompletionHandler:", v14);
  objc_msgSend(*(id *)(a1 + 40), "iconModel");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 88), "replaceIcon:withIcon:options:", *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 80), 8390154);
  if (objc_msgSend(*(id *)(a1 + 40), "canAddIconToIgnoredList:", *(_QWORD *)(a1 + 64)))
  {
    objc_msgSend(*(id *)(a1 + 88), "ignoredList");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "addIcon:", *(_QWORD *)(a1 + 64));

  }
  v8 = *(_QWORD *)(a1 + 96);
  if (v8)
    v9 = (id)objc_msgSend(*(id *)(a1 + 88), "insertIcon:atGridPath:options:", *(_QWORD *)(a1 + 80), v8, 1024);
  objc_msgSend(v6, "addIcon:", *(_QWORD *)(a1 + 80));
  objc_msgSend(*(id *)(a1 + 104), "layoutIconsIfNeededUsingAnimator:options:", v3, 0);
  objc_msgSend(*(id *)(a1 + 40), "saveGridPath:asPriorLocationBeforeResizeForIcon:", *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 80));
  objc_msgSend(*(id *)(a1 + 104), "undoManager");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if (v10)
  {
    v11 = *(void **)(a1 + 120);
    SBHBundle();
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "localizedStringForKey:value:table:", CFSTR("UNDO_RESIZE"), &stru_1E8D8E958, CFSTR("SpringBoardHome"));
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "registerWithUndoManager:actionName:observer:", v10, v13, 0);

  }
}

uint64_t __50__SBHIconManager_replaceAppIcon_withWidgetOfSize___block_invoke_2(uint64_t a1)
{
  uint64_t result;

  result = objc_opt_respondsToSelector();
  if ((result & 1) != 0)
    return objc_msgSend(*(id *)(a1 + 32), "iconManager:didChangeSizeOfIcon:toSizeClass:byReplacingWithIcon:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64));
  return result;
}

- (id)iconDataSourceForReplacingAppIconWithWidgetIcon:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;

  v4 = a3;
  -[NSMapTable objectForKey:](self->_previousWidgetDataSourceBeforeResize, "objectForKey:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v5)
  {
    objc_msgSend(v4, "applicationBundleID");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager widgetExtensionProvider](self, "widgetExtensionProvider");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "sbh_defaultDescriptorForContainerBundleIdentifier:", v6);
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    -[SBHIconManager gridSizeClassDomain](self, "gridSizeClassDomain");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "sbh_iconDataSourceInDomain:", v9);
    v5 = (void *)objc_claimAutoreleasedReturnValue();

  }
  -[SBHIconManager delegate](self, "delegate");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v10, "iconManager:widgetDataSourceForReplacingIconWithWidget:proposedWidgetDataSource:", self, v4, v5);
    v11 = objc_claimAutoreleasedReturnValue();

    v5 = (void *)v11;
  }

  return v5;
}

- (void)setTemporaryIntent:(id)a3 forIconWithIdentifier:(id)a4 widgetUniqueIdentifier:(id)a5
{
  id v8;
  id v9;
  void *v10;
  id v11;

  v11 = a3;
  v8 = a4;
  v9 = a5;
  -[SBHIconManager delegate](self, "delegate");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v10, "iconManager:setTemporaryIntent:forIconWithIdentifier:widgetUniqueIdentifier:", self, v11, v8, v9);

}

- (NSDictionary)widgetIntents
{
  return (NSDictionary *)objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithDictionary:", self->_widgetIntents);
}

- (BOOL)canCloseFolders
{
  void *v2;
  char v3;

  -[SBHIconManager iconDragManager](self, "iconDragManager");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isTrackingDroppingIconDrags") ^ 1;

  return v3;
}

- (BOOL)hasOpenFolderInLocation:(id)a3
{
  id v4;
  void *v5;
  BOOL v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  v4 = a3;
  -[SBHIconManager floatingDockViewController](self, "floatingDockViewController");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v5, "isPresentingIconLocation:", v4)
    && (objc_msgSend(v5, "isPresentingFolder") & 1) != 0)
  {
    v6 = 1;
  }
  else if (-[SBHIconManager hasRootFolderController](self, "hasRootFolderController"))
  {
    -[SBHIconManager rootViewController](self, "rootViewController");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v7, "isPresentingIconLocation:", v4)
      && (objc_msgSend(v7, "deepestFolderController"),
          v8 = (void *)objc_claimAutoreleasedReturnValue(),
          v8,
          v8))
    {
      v6 = 1;
    }
    else
    {
      -[SBHIconManager rootFolderController](self, "rootFolderController");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v9, "isPresentingIconLocation:", v4)
        && (objc_msgSend(v9, "deepestFolderController"),
            v10 = (void *)objc_claimAutoreleasedReturnValue(),
            v10,
            v10))
      {
        v6 = 1;
      }
      else
      {
        -[SBHIconManager _currentFolderController](self, "_currentFolderController");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v11, "isPresentingIconLocation:", v4))
        {
          objc_msgSend(v11, "deepestFolderController");
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          v6 = v12 != 0;

        }
        else
        {
          v6 = 0;
        }

      }
    }

  }
  else
  {
    v6 = 0;
  }

  return v6;
}

- (void)setAnimatingFolderCreation:(BOOL)a3
{
  _BOOL4 v5;

  if (self->_animatingFolderCreation != a3)
  {
    v5 = -[SBHIconManager hasAnimatingFolder](self, "hasAnimatingFolder");
    self->_animatingFolderCreation = a3;
    if (v5 != -[SBHIconManager hasAnimatingFolder](self, "hasAnimatingFolder"))
      -[SBHIconManager hasAnimatingFolderChanged](self, "hasAnimatingFolderChanged");
  }
}

- (void)hasAnimatingFolderChanged
{
  NSObject *v3;
  void *v4;
  uint8_t v5[16];

  if (!-[SBHIconManager hasAnimatingFolder](self, "hasAnimatingFolder") && self->_needsRelayout)
  {
    SBLogCommon();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1CFEF3000, v3, OS_LOG_TYPE_DEFAULT, "SBHIconManager: requesting delayed relayout because folder finished animating.", v5, 2u);
    }

    -[SBHIconManager relayout](self, "relayout");
  }
  -[SBHIconManager delegate](self, "delegate");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v4, "iconManagerFolderAnimatingDidChange:", self);

}

- (BOOL)allowsNestedFolders
{
  void *v2;
  void *v3;
  char v4;

  +[SBHHomeScreenDomain rootSettings](SBHHomeScreenDomain, "rootSettings");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "folderSettings");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "allowNestedFolders");

  return v4;
}

- (unint64_t)maxListCountForFolders
{
  void *v3;
  unint64_t v4;

  -[SBHIconManager delegate](self, "delegate");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v4 = objc_msgSend(v3, "maximumListCountForFoldersForIconManager:", self);
  else
    v4 = 15;

  return v4;
}

- (unint64_t)maxIconCountForDock
{
  _BOOL4 v3;
  __CFString **v4;
  __CFString *v5;
  void *v6;
  void *v7;
  unint64_t v8;

  v3 = -[SBHIconManager isFloatingDockSupported](self, "isFloatingDockSupported");
  v4 = SBIconLocationFloatingDock;
  if (!v3)
    v4 = SBIconLocationDock;
  v5 = *v4;
  -[SBHIconManager listLayoutProvider](self, "listLayoutProvider");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "layoutForIconLocation:", v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  v8 = SBHIconListLayoutMaximumIconCount(v7);
  return v8;
}

- (unint64_t)columnCountForTodayList
{
  void *v2;
  void *v3;
  unint64_t v4;

  -[SBHIconManager listLayoutProvider](self, "listLayoutProvider");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "layoutForIconLocation:", CFSTR("SBIconLocationTodayView"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v4 = objc_msgSend(v3, "numberOfColumnsForOrientation:", 1);
  return v4;
}

- (id)allowedGridSizeClassesForDock
{
  _BOOL4 v3;
  __CFString **v4;
  __CFString *v5;
  void *v6;
  void *v7;
  void *v8;

  v3 = -[SBHIconManager isFloatingDockSupported](self, "isFloatingDockSupported");
  v4 = SBIconLocationFloatingDock;
  if (!v3)
    v4 = SBIconLocationDock;
  v5 = *v4;
  -[SBHIconManager listLayoutProvider](self, "listLayoutProvider");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "layoutForIconLocation:", v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  SBHIconListLayoutSupportedIconGridSizeClasses(v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

- (id)allowedGridSizeClassesForTodayList
{
  void *v2;
  void *v3;
  void *v4;

  -[SBHIconManager listLayoutProvider](self, "listLayoutProvider");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "layoutForIconLocation:", CFSTR("SBIconLocationTodayView"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  SBHIconListLayoutSupportedIconGridSizeClasses(v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

- (SBHIconGridSize)listGridSizeForFolderClass:(Class)a3
{
  void *v4;
  void *v5;
  void *v6;
  int v7;
  unsigned int v8;
  int v9;

  -[objc_class iconLocation](-[SBHIconManager controllerClassForFolderClass:](self, "controllerClassForFolderClass:", a3), "iconLocation");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager listLayoutProvider](self, "listLayoutProvider");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "layoutForIconLocation:", v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (v6)
  {
    v7 = SBHIconListLayoutListGridSize(v6, 1);
    v8 = v7 & 0xFFFF0000;
    v9 = (unsigned __int16)v7;
  }
  else
  {
    v8 = 196608;
    v9 = 3;
  }

  return (SBHIconGridSize)(v8 | v9);
}

- (SBHIconGridSize)listWithNonDefaultSizedIconsGridSizeForFolderClass:(Class)a3
{
  void *v5;
  void *v6;
  char v7;
  void *v8;
  void *v9;
  SBHIconGridSize v10;

  -[SBHIconManager iconLocationForListsWithNonDefaultSizedIcons](self, "iconLocationForListsWithNonDefaultSizedIcons");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_self();
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (!-[objc_class isSubclassOfClass:](a3, "isSubclassOfClass:", v6))
  {

    goto LABEL_6;
  }
  v7 = objc_msgSend(v5, "isEqualToString:", CFSTR("SBIconLocationRoot"));

  if ((v7 & 1) != 0)
  {
LABEL_6:
    v10 = 0;
    goto LABEL_9;
  }
  -[SBHIconManager listLayoutProvider](self, "listLayoutProvider");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "layoutForIconLocation:", v5);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if (v9)
    v10 = (SBHIconGridSize)SBHIconListLayoutListGridSize(v9, 1);
  else
    v10 = 0;

LABEL_9:
  return v10;
}

- (BOOL)listsAllowRotatedLayoutForFolderClass:(Class)a3
{
  void *v5;
  void *v6;
  char v7;
  char v8;

  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_self();
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (!-[objc_class isSubclassOfClass:](a3, "isSubclassOfClass:", v6))
  {

    goto LABEL_5;
  }
  v7 = objc_opt_respondsToSelector();

  if ((v7 & 1) == 0)
  {
LABEL_5:
    v8 = 0;
    goto LABEL_6;
  }
  v8 = objc_msgSend(v5, "listsAllowRotatedLayoutForIconManager:", self);
LABEL_6:

  return v8;
}

- (int64_t)listsFixedIconLocationBehaviorForFolderClass:(Class)a3
{
  void *v5;

  objc_opt_self();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  LODWORD(a3) = -[objc_class isSubclassOfClass:](a3, "isSubclassOfClass:", v5);

  if ((_DWORD)a3)
    return -[SBHIconManager listsFixedIconLocationBehavior](self, "listsFixedIconLocationBehavior");
  else
    return 0;
}

- (id)iconGridSizeClassSizes
{
  void *v2;
  void *v3;
  void *v4;

  -[SBHIconManager listLayoutProvider](self, "listLayoutProvider");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "layoutForIconLocation:", CFSTR("SBIconLocationRoot"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  SBHIconListLayoutIconGridSizeClassSizes(v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

- (id)supportedGridSizeClassesForWidgetWithKind:(id)a3 extensionBundleIdentifier:(id)a4 containerBundleIdentifier:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  SBHIconGridSizeClassSet *v15;
  SBHIconGridSizeClassSet *v16;

  v8 = a5;
  v9 = a4;
  v10 = a3;
  -[SBHIconManager widgetExtensionProvider](self, "widgetExtensionProvider");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "sbh_descriptorWithKind:extensionBundleIdentifier:containerBundleIdentifier:", v10, v9, v8);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  -[SBHIconManager gridSizeClassDomain](self, "gridSizeClassDomain");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = v13;
  if (v12)
  {
    v15 = -[SBHIconGridSizeClassSet initWithCHSWidgetFamilyMask:inDomain:]([SBHIconGridSizeClassSet alloc], "initWithCHSWidgetFamilyMask:inDomain:", objc_msgSend(v12, "supportedFamilies"), v13);
  }
  else
  {
    objc_msgSend(v13, "allNonDefaultGridSizeClasses");
    v15 = (SBHIconGridSizeClassSet *)objc_claimAutoreleasedReturnValue();
  }
  v16 = v15;

  return v16;
}

- (id)gridSizeClassDomain
{
  void *v2;
  void *v3;

  -[SBHIconManager iconModel](self, "iconModel");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "gridSizeClassDomain");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

- (int64_t)currentIconListIndex
{
  void *v2;
  int64_t v3;

  -[SBHIconManager rootViewController](self, "rootViewController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "currentPageIndex");

  return v3;
}

- (id)folderControllerForFolder:(id)a3
{
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  int v10;

  v4 = a3;
  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "folderControllerForFolder:", v4);
  v6 = (id)objc_claimAutoreleasedReturnValue();

  if (!v6)
  {
    -[SBHIconManager floatingDockViewController](self, "floatingDockViewController");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "presentedFolderController");
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v8, "folder");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = objc_msgSend(v9, "isEqual:", v4);

    if (v10)
      v6 = v8;
    else
      v6 = 0;

  }
  return v6;
}

- (id)createNewFolderFromRecipientIcon:(id)a3 grabbedIcon:(id)a4
{
  id v6;
  void *v7;
  void *v8;
  void *v9;
  SBFolderIcon *v10;
  void *v11;

  v6 = a3;
  -[SBHIconManager _proposedFolderNameForGrabbedIcon:recipientIcon:](self, "_proposedFolderNameForGrabbedIcon:recipientIcon:", a4, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager iconModel](self, "iconModel");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "makeFolderWithDisplayName:", v7);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setCancelable:", 1);
  v10 = -[SBFolderIcon initWithFolder:]([SBFolderIcon alloc], "initWithFolder:", v9);
  -[SBHIconManager rootFolder](self, "rootFolder");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "replaceIcon:withIcon:", v6, v10);

  objc_msgSend(v8, "addIcon:", v10);
  return v9;
}

- (void)addIcons:(id)a3 intoFolderIcon:(id)a4 openFolderOnFinish:(BOOL)a5 completion:(id)a6
{
  id v9;
  id v10;
  void (**v11)(_QWORD);
  void *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  _BOOL4 v20;
  void *v21;
  id v22;

  v20 = a5;
  v9 = a3;
  v10 = a4;
  v11 = (void (**)(_QWORD))a6;
  objc_msgSend(v10, "folder");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "startCoalescingContentChangesForReason:", CFSTR("SBIconIntoFolderCoalesceID"));
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager rootFolder](self, "rootFolder");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v21, "indexPathForIcon:", v10);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v22 = 0;
  -[SBHIconManager getListView:folder:relativePath:forIndexPath:](self, "getListView:folder:relativePath:forIndexPath:", &v22, 0, 0, v14);
  v15 = v22;
  objc_msgSend(v15, "iconViewForIcon:", v10);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "superview");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "bringSubviewToFront:", v16);

  objc_msgSend(v16, "setAllowsEditingAnimation:", 0);
  v18 = (id)objc_msgSend(v12, "addIcons:", v9);
  if (v20)
  {
    -[SBHIconManager setAnimatingFolderCreation:](self, "setAnimatingFolderCreation:", 1);
    objc_msgSend(v16, "setAllowsEditingAnimation:", 1);
    objc_msgSend(v13, "invalidate");
    objc_msgSend(v16, "location");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager pushExpandedIcon:location:context:animated:completionHandler:](self, "pushExpandedIcon:location:context:animated:completionHandler:", v10, v19, 0, 1, 0);

    if (!v11)
      goto LABEL_6;
    goto LABEL_5;
  }
  objc_msgSend(v16, "setAllowsEditingAnimation:", 1);
  objc_msgSend(v13, "invalidate");
  if (v11)
LABEL_5:
    v11[2](v11);
LABEL_6:
  -[SBHIconManager setAnimatingFolderCreation:](self, "setAnimatingFolderCreation:", 0);

}

- (void)replaceFolderIcon:(id)a3 byContainedIcon:(id)a4 animated:(BOOL)a5
{
  _BOOL4 v5;
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  void *v20;
  void *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  id v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  id v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  double v55;
  double v56;
  void *v57;
  _QWORD v58[4];
  id v59;
  _QWORD v60[4];
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  _QWORD v66[4];
  id v67;
  id v68;
  id v69;
  id v70;

  v5 = a5;
  v8 = a4;
  v9 = a3;
  -[SBHIconManager rootFolder](self, "rootFolder");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "indexPathForIcon:", v9);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager iconListViewForIndexPath:](self, "iconListViewForIndexPath:", v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "iconViewForIcon:", v9);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "matchingIconViewWithConfigurationOptions:", 6);
  v57 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "frameForMiniIconAtIndex:", 0);
  v55 = v15;
  v56 = v14;
  v17 = v16;
  v19 = v18;
  objc_msgSend(v10, "replaceIcon:withIcon:", v9, v8);

  objc_msgSend(v12, "iconViewForIcon:", v8);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "layout");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v21, "iconImageInfo");
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v30 = SBHIconListLayoutFolderIconGridCellSize(v21);
  if (v5)
  {
    v32 = v30;
    v33 = v31;
    objc_msgSend(v12, "traitCollection");
    v51 = (void *)objc_claimAutoreleasedReturnValue();
    v53 = v11;
    v34 = objc_alloc(MEMORY[0x1E0DC3890]);
    objc_msgSend(v20, "iconImageSnapshot");
    v54 = v10;
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    v52 = v13;
    v36 = (void *)objc_msgSend(v34, "initWithImage:", v35);

    -[SBHIconManager folderIconImageCache](self, "folderIconImageCache");
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v37, "gridCellImageOfSize:forIcon:iconImageInfo:compatibleWithTraitCollection:", v8, v51, v32, v33, v23, v25, v27, v29);
    v50 = (void *)objc_claimAutoreleasedReturnValue();

    v38 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0DC3890]), "initWithImage:", v50);
    objc_msgSend(v57, "folderIconBackgroundView");
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "setIconImageAndAccessoryAlpha:", 0.0);
    objc_msgSend(v20, "setIconLabelAlpha:", 0.0);
    objc_msgSend(v20, "setRefusesRecipientStatus:", 1);
    objc_msgSend(v36, "layer");
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v40, "setAllowsEdgeAntialiasing:", 1);

    objc_msgSend(v38, "layer");
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v41, "setAllowsEdgeAntialiasing:", 1);

    objc_msgSend(v20, "iconImageCenter");
    objc_msgSend(v39, "setCenter:");
    objc_msgSend(v36, "setFrame:", v56, v55, v17, v19);
    objc_msgSend(v38, "setFrame:", v56, v55, v17, v19);
    objc_msgSend(v20, "addSubview:", v39);
    objc_msgSend(v20, "addSubview:", v36);
    objc_msgSend(v20, "addSubview:", v38);
    v42 = (void *)MEMORY[0x1E0DC3F10];
    v43 = MEMORY[0x1E0C809B0];
    v66[0] = MEMORY[0x1E0C809B0];
    v66[1] = 3221225472;
    v66[2] = __61__SBHIconManager_replaceFolderIcon_byContainedIcon_animated___block_invoke;
    v66[3] = &unk_1E8D86330;
    v44 = v20;
    v67 = v44;
    v68 = v36;
    v69 = v38;
    v70 = v39;
    v60[0] = v43;
    v60[1] = 3221225472;
    v60[2] = __61__SBHIconManager_replaceFolderIcon_byContainedIcon_animated___block_invoke_2;
    v60[3] = &unk_1E8D8CAE0;
    v61 = v12;
    v62 = v8;
    v63 = v70;
    v64 = v68;
    v65 = v69;
    v45 = v69;
    v46 = v68;
    v47 = v70;
    objc_msgSend(v42, "animateWithDuration:animations:completion:", v66, v60, 0.5);
    v48 = (void *)MEMORY[0x1E0DC3F10];
    v58[0] = v43;
    v11 = v53;
    v58[1] = 3221225472;
    v58[2] = __61__SBHIconManager_replaceFolderIcon_byContainedIcon_animated___block_invoke_4;
    v58[3] = &unk_1E8D84C50;
    v59 = v44;
    v49 = v48;
    v10 = v54;
    objc_msgSend(v49, "animateWithDuration:delay:options:animations:completion:", 0, v58, 0, 0.15, 0.35);

    v13 = v52;
  }

}

uint64_t __61__SBHIconManager_replaceFolderIcon_byContainedIcon_animated___block_invoke(id *a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;
  CGAffineTransform v12;

  objc_msgSend(a1[4], "iconImageFrame");
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  objc_msgSend(a1[5], "setFrame:");
  objc_msgSend(a1[6], "setFrame:", v3, v5, v7, v9);
  objc_msgSend(a1[6], "setAlpha:", 0.0);
  objc_msgSend(a1[7], "setAlpha:", 0.0);
  v10 = a1[7];
  CGAffineTransformMakeScale(&v12, 0.01, 0.01);
  return objc_msgSend(v10, "setTransform:", &v12);
}

void __61__SBHIconManager_replaceFolderIcon_byContainedIcon_animated___block_invoke_2(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  _QWORD v5[4];
  id v6;

  objc_msgSend(*(id *)(a1 + 32), "iconViewForIcon:", *(_QWORD *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setIconImageAlpha:", 1.0);
  objc_msgSend(v2, "setIconAccessoryAlpha:", 0.0);
  objc_msgSend(v2, "setRefusesRecipientStatus:", 0);
  v3 = (void *)MEMORY[0x1E0DC3F10];
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 3221225472;
  v5[2] = __61__SBHIconManager_replaceFolderIcon_byContainedIcon_animated___block_invoke_3;
  v5[3] = &unk_1E8D84C50;
  v6 = v2;
  v4 = v2;
  objc_msgSend(v3, "animateWithDuration:animations:", v5, 0.15);
  objc_msgSend(*(id *)(a1 + 48), "removeFromSuperview");
  objc_msgSend(*(id *)(a1 + 56), "removeFromSuperview");
  objc_msgSend(*(id *)(a1 + 64), "removeFromSuperview");

}

uint64_t __61__SBHIconManager_replaceFolderIcon_byContainedIcon_animated___block_invoke_3(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setIconAccessoryAlpha:", 1.0);
}

uint64_t __61__SBHIconManager_replaceFolderIcon_byContainedIcon_animated___block_invoke_4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setIconLabelAlpha:", 1.0);
}

- (id)localizedDefaultFolderName
{
  void *v3;
  void *v4;

  -[SBHIconManager delegate](self, "delegate");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v3, "localizedDefaultFolderNameForIconManager:", self);
  else
    objc_msgSend(MEMORY[0x1E0DC4008], "_localizedFolderNameForName:", CFSTR("Folder"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

- (id)localizedFolderNameForDefaultDisplayName:(id)a3
{
  id v4;
  void *v5;
  void *v6;

  v4 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v5, "iconManager:localizedFolderNameForDefaultDisplayName:", self, v4);
  else
    -[SBHIconManager localizedDefaultFolderName](self, "localizedDefaultFolderName");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

- (id)_proposedFolderNameForGrabbedIcon:(id)a3 recipientIcon:(id)a4
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  char v18;
  unint64_t v19;
  BOOL v20;
  SBHIconManager *v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;

  v22 = self;
  v5 = a3;
  v6 = a4;
  v25 = v5;
  objc_msgSend(v5, "folderTitleOptions");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v24 = v6;
  objc_msgSend(v6, "folderTitleOptions");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v7, "count");
  v10 = objc_msgSend(v8, "count");
  v28 = v9;
  v26 = v9 + v10 - 2;
  if (v26 >= 0)
  {
    v11 = v10;
    v12 = 0;
    v27 = v9 - 1;
    do
    {
      if (v12 >= v27)
        v13 = v28 - 1;
      else
        v13 = v12;
      if (v28 >= 1)
      {
        v14 = 0;
        do
        {
          objc_msgSend(v7, "objectAtIndex:", v14, v22);
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          if (v11 < 1)
          {
LABEL_13:

          }
          else
          {
            v16 = 1;
            while (1)
            {
              objc_msgSend(v8, "objectAtIndex:", v16 - 1);
              v17 = (void *)objc_claimAutoreleasedReturnValue();
              v18 = objc_msgSend(v15, "isEqualToString:", v17);

              if ((v18 & 1) != 0)
                break;
              if (v11 > v16)
              {
                v19 = v14 + v16++;
                if (v19 <= v12)
                  continue;
              }
              goto LABEL_13;
            }
            if (v15)
              goto LABEL_22;
          }
          v20 = v14++ == v13;
        }
        while (!v20);
      }
      v20 = v12++ == v26;
    }
    while (!v20);
  }
  objc_msgSend(v25, "folderFallbackTitle", v22);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v15)
  {
    objc_msgSend(v24, "folderFallbackTitle");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v15)
    {
      objc_msgSend(v23, "localizedDefaultFolderName");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
    }
  }
LABEL_22:

  return v15;
}

_QWORD *__79__SBHIconManager_pushExpandedIcon_location_context_animated_completionHandler___block_invoke(_QWORD *a1)
{
  _QWORD *result;

  result = (_QWORD *)a1[4];
  if (!result[81])
    return (_QWORD *)objc_msgSend(result, "pushExpandedIcon:location:context:animated:completionHandler:", a1[5], a1[6], a1[7], 1, 0);
  return result;
}

void __79__SBHIconManager_pushExpandedIcon_location_context_animated_completionHandler___block_invoke_417(uint64_t a1, uint64_t a2)
{
  id *WeakRetained;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t j;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];
  _BYTE v29[128];
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  v5 = *(_QWORD *)(a1 + 32);
  if (v5)
    (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v5, a2);
  if (WeakRetained)
  {
    v6 = WeakRetained[14];
    v7 = WeakRetained[15];
    v8 = WeakRetained[14];
    WeakRetained[14] = 0;

    v9 = WeakRetained[15];
    WeakRetained[15] = 0;

    v26 = 0u;
    v27 = 0u;
    v24 = 0u;
    v25 = 0u;
    v10 = v6;
    v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v24, v29, 16);
    if (v11)
    {
      v12 = v11;
      v13 = *(_QWORD *)v25;
      do
      {
        for (i = 0; i != v12; ++i)
        {
          if (*(_QWORD *)v25 != v13)
            objc_enumerationMutation(v10);
          (*(void (**)(void))(*(_QWORD *)(*((_QWORD *)&v24 + 1) + 8 * i) + 16))();
        }
        v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v24, v29, 16);
      }
      while (v12);
    }

    v22 = 0u;
    v23 = 0u;
    v20 = 0u;
    v21 = 0u;
    v15 = v7;
    v16 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v20, v28, 16);
    if (v16)
    {
      v17 = v16;
      v18 = *(_QWORD *)v21;
      do
      {
        for (j = 0; j != v17; ++j)
        {
          if (*(_QWORD *)v21 != v18)
            objc_enumerationMutation(v15);
          (*(void (**)(_QWORD))(*(_QWORD *)(*((_QWORD *)&v20 + 1) + 8 * j) + 16))(*(_QWORD *)(*((_QWORD *)&v20 + 1) + 8 * j));
        }
        v17 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v20, v28, 16);
      }
      while (v17);
    }

  }
}

- (void)pushExpandedIcon:(id)a3 location:(id)a4 context:(id)a5 forcePoppingPriorExpandedIcon:(BOOL)a6 animated:(BOOL)a7 completionHandler:(id)a8
{
  _BOOL8 v9;
  _BOOL4 v10;
  id v14;
  id v15;
  id v16;
  id v17;

  v9 = a7;
  v10 = a6;
  v17 = a3;
  v14 = a4;
  v15 = a5;
  v16 = a8;
  if (v10)
    -[SBHIconManager popExpandedIconAnimated:completionHandler:](self, "popExpandedIconAnimated:completionHandler:", 0, 0);
  -[SBHIconManager pushExpandedIcon:location:context:animated:completionHandler:](self, "pushExpandedIcon:location:context:animated:completionHandler:", v17, v14, v15, v9, v16);

}

- (void)popExpandedIconAnimated:(BOOL)a3 completionHandler:(id)a4
{
  -[SBHIconManager popExpandedIconFromLocation:interactionContext:animated:completionHandler:](self, "popExpandedIconFromLocation:interactionContext:animated:completionHandler:", CFSTR("SBIconLocationNone"), 0, a3, a4);
}

- (void)popExpandedIconFromLocation:(id)a3 interactionContext:(id)a4 animated:(BOOL)a5 completionHandler:(id)a6
{
  _BOOL8 v7;
  id v10;
  id v11;
  void (**v12)(id, _QWORD);
  void *v13;
  int v14;
  SBHomeScreenIconTransitionAnimator *currentTransitionAnimator;
  void (**v16)(id, _QWORD);
  void *v17;
  void *v18;
  void *v19;
  NSMutableArray *currentCollapseCompletions;
  NSMutableArray *v21;
  NSMutableArray *v22;
  void *v23;
  void *v24;
  id *v25;
  uint64_t aBlock;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  void *v29;
  id v30;
  id v31;
  id location;

  v7 = a5;
  v10 = a3;
  v11 = a4;
  v12 = (void (**)(id, _QWORD))a6;
  -[SBHIconManager floatingDockViewController](self, "floatingDockViewController");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = objc_msgSend(v13, "isPresentingFolder");
  if (objc_msgSend(v13, "isPresentingIconLocation:", v10))
  {
    if (!v14)
    {
LABEL_8:
      if (v12)
        v12[2](v12, 0);
      goto LABEL_20;
    }
LABEL_5:
    objc_msgSend(v13, "dismissPresentedFolderAnimated:completion:", v7, v12);
    goto LABEL_20;
  }
  if (v14)
    goto LABEL_5;
  currentTransitionAnimator = self->_currentTransitionAnimator;
  if (currentTransitionAnimator)
  {
    if (-[SBHomeScreenIconTransitionAnimator currentOperation](currentTransitionAnimator, "currentOperation"))
      goto LABEL_8;
    if (v12)
    {
      currentCollapseCompletions = self->_currentCollapseCompletions;
      if (!currentCollapseCompletions)
      {
        v21 = (NSMutableArray *)objc_alloc_init(MEMORY[0x1E0C99DE8]);
        v22 = self->_currentCollapseCompletions;
        self->_currentCollapseCompletions = v21;

        currentCollapseCompletions = self->_currentCollapseCompletions;
      }
      v23 = (void *)objc_msgSend(v12, "copy");
      v24 = _Block_copy(v23);
      -[NSMutableArray addObject:](currentCollapseCompletions, "addObject:", v24);

    }
    -[SBHomeScreenIconTransitionAnimator reverse](self->_currentTransitionAnimator, "reverse");
  }
  else
  {
    objc_initWeak(&location, self);
    v27 = 3221225472;
    v28 = __92__SBHIconManager_popExpandedIconFromLocation_interactionContext_animated_completionHandler___block_invoke;
    v29 = &unk_1E8D8B090;
    v25 = &v31;
    aBlock = MEMORY[0x1E0C809B0];
    objc_copyWeak(&v31, &location);
    v16 = v12;
    v30 = v16;
    v17 = _Block_copy(&aBlock);
    -[SBHIconManager setCurrentInteractionContext:](self, "setCurrentInteractionContext:", v11);
    -[SBHIconManager rootFolderController](self, "rootFolderController");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "deepestNestedDescendantViewController");
    v19 = (void *)objc_claimAutoreleasedReturnValue();

    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      -[SBHIconManager closeFolderAnimated:withCompletion:](self, "closeFolderAnimated:withCompletion:", v7, v17, &v31, aBlock, v27, v28, v29);
    }
    else if (v16)
    {
      v16[2](v16, 0);
    }

    objc_destroyWeak(v25);
    objc_destroyWeak(&location);
  }
LABEL_20:

}

void __92__SBHIconManager_popExpandedIconFromLocation_interactionContext_animated_completionHandler___block_invoke(uint64_t a1, uint64_t a2)
{
  id *WeakRetained;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];
  _BYTE v29[128];
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  v5 = *(_QWORD *)(a1 + 32);
  if (v5)
    (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v5, a2);
  if (WeakRetained)
  {
    v6 = WeakRetained[14];
    v7 = WeakRetained[15];
    v8 = WeakRetained[14];
    WeakRetained[14] = 0;

    v9 = WeakRetained[15];
    WeakRetained[15] = 0;

    objc_msgSend(WeakRetained, "setCurrentInteractionContext:", 0);
    v26 = 0u;
    v27 = 0u;
    v24 = 0u;
    v25 = 0u;
    v10 = v6;
    v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v24, v29, 16);
    if (v11)
    {
      v12 = v11;
      v13 = *(_QWORD *)v25;
      do
      {
        v14 = 0;
        do
        {
          if (*(_QWORD *)v25 != v13)
            objc_enumerationMutation(v10);
          (*(void (**)(void))(*(_QWORD *)(*((_QWORD *)&v24 + 1) + 8 * v14++) + 16))();
        }
        while (v12 != v14);
        v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v24, v29, 16);
      }
      while (v12);
    }

    v22 = 0u;
    v23 = 0u;
    v20 = 0u;
    v21 = 0u;
    v15 = v7;
    v16 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v20, v28, 16);
    if (v16)
    {
      v17 = v16;
      v18 = *(_QWORD *)v21;
      do
      {
        v19 = 0;
        do
        {
          if (*(_QWORD *)v21 != v18)
            objc_enumerationMutation(v15);
          (*(void (**)(_QWORD))(*(_QWORD *)(*((_QWORD *)&v20 + 1) + 8 * v19) + 16))(*(_QWORD *)(*((_QWORD *)&v20 + 1) + 8 * v19));
          ++v19;
        }
        while (v17 != v19);
        v17 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v20, v28, 16);
      }
      while (v17);
    }

  }
}

- (void)popToCurrentRootIconList
{
  void *v3;
  id v4;
  int v5;
  id v6;

  -[SBHIconManager openedFolderController](self, "openedFolderController");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  do
  {
    if (!v3)
      break;
    v4 = v3;
    -[SBHIconManager popExpandedIconAnimated:completionHandler:](self, "popExpandedIconAnimated:completionHandler:", 0, 0);
    -[SBHIconManager openedFolderController](self, "openedFolderController");
    v6 = (id)objc_claimAutoreleasedReturnValue();

    v5 = objc_msgSend(v6, "isEqual:", v4);
    v3 = v6;
  }
  while (!v5);

}

- (void)popToCurrentRootIconListWhenPossible
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __54__SBHIconManager_popToCurrentRootIconListWhenPossible__block_invoke;
  v2[3] = &unk_1E8D84C50;
  v2[4] = self;
  -[SBHIconManager _enqueueTransitionName:withHandler:](self, "_enqueueTransitionName:withHandler:", CFSTR("popToCurrentRootIconList"), v2);
}

uint64_t __54__SBHIconManager_popToCurrentRootIconListWhenPossible__block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "popToCurrentRootIconList");
}

- (BOOL)isPerformingExpandTransition
{
  void *v3;
  BOOL v4;

  if (!-[SBHIconManager isTransitioning](self, "isTransitioning"))
    return 0;
  -[SBHIconManager currentTransitionAnimator](self, "currentTransitionAnimator");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "currentOperation") == 0;

  return v4;
}

- (BOOL)isPerformingCancelledCollapseTransition
{
  void *v3;
  void *v4;
  BOOL v5;

  if (!-[SBHIconManager isTransitioning](self, "isTransitioning"))
    return 0;
  -[SBHIconManager currentTransitionAnimator](self, "currentTransitionAnimator");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v3, "isCancelled"))
  {
    -[SBHIconManager currentTransitionAnimator](self, "currentTransitionAnimator");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v4, "currentOperation") == 0;

  }
  else
  {
    v5 = 0;
  }

  return v5;
}

- (BOOL)isTrackingScroll
{
  void *v3;
  char v4;
  void *v6;
  char v7;

  -[SBHIconManager rootViewController](self, "rootViewController");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isScrollTracking");

  if ((v4 & 1) != 0)
    return 1;
  -[SBHIconManager openedFolderController](self, "openedFolderController");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "isScrollTracking");

  return v7;
}

void __66__SBHIconManager_openFolderIcon_location_animated_withCompletion___block_invoke(uint64_t a1)
{
  id WeakRetained;
  uint64_t v3;
  id v4;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  v4 = WeakRetained;
  if (WeakRetained
    && SBIconViewQueryingDisplayingIconInLocation(WeakRetained, *(void **)(a1 + 32), *(void **)(a1 + 40), 1))
  {
    objc_msgSend(v4, "openFolderIcon:location:animated:withCompletion:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 64), *(_QWORD *)(a1 + 48));
  }
  else
  {
    v3 = *(_QWORD *)(a1 + 48);
    if (v3)
      (*(void (**)(uint64_t, _QWORD))(v3 + 16))(v3, 0);
  }

}

- (void)closeFolderAnimated:(BOOL)a3 withCompletion:(id)a4
{
  _BOOL8 v4;
  id v6;
  void *v7;
  id v8;

  v4 = a3;
  v6 = a4;
  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "deepestFolderController");
  v8 = (id)objc_claimAutoreleasedReturnValue();

  -[SBHIconManager _closeFolderController:animated:withCompletion:](self, "_closeFolderController:animated:withCompletion:", v8, v4, v6);
}

- (void)_closeFolderController:(id)a3 animated:(BOOL)a4 withCompletion:(id)a5
{
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  NSObject *v16;
  _QWORD v17[5];
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  BOOL v23;
  uint8_t buf[4];
  id v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a5;
  if (v8 && -[SBHIconManager canCloseFolders](self, "canCloseFolders"))
  {
    -[SBHIconManager openedFolder](self, "openedFolder");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager setClosingFolder:](self, "setClosingFolder:", v10);
    -[SBHIconManager delegate](self, "delegate");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_opt_respondsToSelector() & 1) != 0)
      objc_msgSend(v11, "iconManager:willCloseFolder:", self, v10);
    -[SBHIconManager iconDragManager](self, "iconDragManager");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "noteFolderControllerWillClose:", v8);
    v17[0] = MEMORY[0x1E0C809B0];
    v17[1] = 3221225472;
    v17[2] = __65__SBHIconManager__closeFolderController_animated_withCompletion___block_invoke;
    v17[3] = &unk_1E8D8C7A0;
    v17[4] = self;
    v18 = v10;
    v23 = a4;
    v19 = v12;
    v20 = v8;
    v21 = v11;
    v22 = v9;
    v13 = v11;
    v14 = v12;
    v15 = v10;
    -[SBHIconManager _enqueueTransitionName:withHandler:](self, "_enqueueTransitionName:withHandler:", CFSTR("Close Folder"), v17);

  }
  else
  {
    SBLogIcon();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v25 = v8;
      _os_log_impl(&dword_1CFEF3000, v16, OS_LOG_TYPE_INFO, "IGNORING. Controller = %@", buf, 0xCu);
    }

    if (v9)
      (*((void (**)(id, _QWORD))v9 + 2))(v9, 0);
  }

}

void __65__SBHIconManager__closeFolderController_animated_withCompletion___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  void *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;

  v2 = *(void **)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 40), "icon");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = *(unsigned __int8 *)(a1 + 80);
  v8 = MEMORY[0x1E0C809B0];
  v9 = 3221225472;
  v10 = __65__SBHIconManager__closeFolderController_animated_withCompletion___block_invoke_2;
  v11 = &unk_1E8D895C8;
  v12 = *(id *)(a1 + 48);
  v13 = *(id *)(a1 + 56);
  v5 = *(id *)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(void **)(a1 + 40);
  v14 = v5;
  v15 = v6;
  v16 = v7;
  v17 = *(id *)(a1 + 72);
  objc_msgSend(v2, "_animateFolderIcon:open:location:animated:withCompletion:", v3, 0, CFSTR("SBIconLocationNone"), v4, &v8);

  if (!*(_BYTE *)(a1 + 80))
  {
    objc_msgSend(*(id *)(a1 + 32), "_cleanupForClosingFolderAnimated:", 0, v8, v9, v10, v11, v12, v13, v14, v15, v16);
    objc_msgSend(*(id *)(a1 + 32), "_compactRootListsAfterFolderCloseWithAnimation:", 0);
  }

}

uint64_t __65__SBHIconManager__closeFolderController_animated_withCompletion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  objc_msgSend(*(id *)(a1 + 32), "noteFolderControllerDidClose:", *(_QWORD *)(a1 + 40));
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(*(id *)(a1 + 48), "iconManager:didCloseFolder:", *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64));
  result = *(_QWORD *)(a1 + 72);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a2);
  return result;
}

- (void)_cleanupForClosingFolderAnimated:(BOOL)a3
{
  SBFolder *closingFolder;
  _BOOL8 v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  SBFolder *v10;
  id v11;

  closingFolder = self->_closingFolder;
  if (!closingFolder)
    return;
  v5 = a3;
  -[SBFolder compactLists](closingFolder, "compactLists");
  -[SBFolder icon](self->_closingFolder, "icon");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBFolder allIcons](self->_closingFolder, "allIcons");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "count");
  if (!-[SBFolder shouldRemoveWhenEmpty](self->_closingFolder, "shouldRemoveWhenEmpty"))
  {
    v9 = 0;
    v11 = v6;
LABEL_9:
    v6 = 0;
    goto LABEL_14;
  }
  if (v8)
  {
    v9 = 0;
    if (-[SBFolder isCancelable](self->_closingFolder, "isCancelable") && v8 == 1)
    {
      objc_msgSend(v7, "anyObject");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = 0;
    }
    else
    {
      v11 = v6;
      v6 = 0;
    }
    goto LABEL_14;
  }
  if (v6)
  {
    -[SBHIconManager uninstallIcon:animate:](self, "uninstallIcon:animate:", v6, v5);

    v11 = 0;
    v9 = 0;
    goto LABEL_9;
  }
  v11 = 0;
  v9 = 0;
LABEL_14:
  if (-[SBHIconManager hasAnimatingFolder](self, "hasAnimatingFolder") && self->_iconToReveal)
    -[SBHIconManager finishInstallingIconAnimated:](self, "finishInstallingIconAnimated:", 1);
  -[SBHIconManager setAnimatingFolderOpeningOrClosing:](self, "setAnimatingFolderOpeningOrClosing:", 0);
  if (v9)
  {
    if (v6)
      -[SBHIconManager replaceFolderIcon:byContainedIcon:animated:](self, "replaceFolderIcon:byContainedIcon:animated:", v6, v9, v5);
  }
  v10 = self->_closingFolder;
  self->_closingFolder = 0;

}

- (void)_compactRootListsAfterFolderCloseWithAnimation:(BOOL)a3
{
  if (a3)
    -[SBHIconManager layoutIconListsWithAnimationType:forceRelayout:](self, "layoutIconListsWithAnimationType:forceRelayout:", 0, 1);
}

- (void)_enqueueTransitionName:(id)a3 withHandler:(id)a4
{
  void *v5;
  id v6;

  objc_msgSend(MEMORY[0x1E0D01778], "eventWithName:handler:", a3, a4);
  v6 = (id)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager transitionEventQueue](self, "transitionEventQueue");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "executeOrInsertEvent:atPosition:", v6, 1);

}

- (unint64_t)gridCellInfoOptions
{
  return -[SBHIconManager gridCellInfoOptionsForOrientation:](self, "gridCellInfoOptionsForOrientation:", -[SBHIconManager interfaceOrientation](self, "interfaceOrientation"));
}

- (unint64_t)gridCellInfoOptionsForOrientation:(int64_t)a3
{
  return +[SBIconListView gridCellInfoOptionsWithInterfaceOrientation:reversedLayout:](SBIconListView, "gridCellInfoOptionsWithInterfaceOrientation:reversedLayout:", a3, 0);
}

- (void)presentLeadingCustomViewWithCompletion:(id)a3
{
  id v4;
  id v5;

  v4 = a3;
  -[SBHIconManager _ensureRootFolderController](self, "_ensureRootFolderController");
  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "performPageStateTransitionToState:reason:animated:completionHandler:", 2, CFSTR("activate leading custom view"), 1, v4);

}

- (void)presentTrailingCustomViewWithCompletion:(id)a3
{
  id v4;
  id v5;

  v4 = a3;
  -[SBHIconManager _ensureRootFolderController](self, "_ensureRootFolderController");
  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "performPageStateTransitionToState:reason:animated:completionHandler:", 4, CFSTR("activate trailing custom view"), 1, v4);

}

- (BOOL)presentSpotlightFromSource:(unint64_t)a3 animated:(BOOL)a4 completionHandler:(id)a5
{
  _BOOL8 v5;
  id v8;
  void *v9;
  char v10;

  v5 = a4;
  v8 = a5;
  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPresentationSource:", a3);
  if (a3 == 5)
    -[SBHIconManager popToCurrentRootIconList](self, "popToCurrentRootIconList");
  objc_msgSend(v9, "presentSpotlightAnimated:completionHandler:", v5, v8);
  v10 = objc_msgSend(v9, "isAnySearchVisibleOrTransitioning");
  objc_msgSend(v9, "setPresentationSource:", 0);

  return v10;
}

- (BOOL)dismissSpotlightOrTodayViewAnimated:(BOOL)a3
{
  BOOL v4;
  void *v5;

  v4 = -[SBHIconManager presentHomeScreenIconsAnimated:](self, "presentHomeScreenIconsAnimated:", a3);
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "dismissTodayOverlayForIconManager:", self);

  return v4;
}

- (BOOL)dismissSpotlightAnimated:(BOOL)a3 completionHandler:(id)a4
{
  _BOOL8 v4;
  id v6;
  void *v7;
  char v8;
  void *v9;

  v4 = a3;
  v6 = a4;
  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "isAnySearchVisibleOrTransitioning");

  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "dismissSpotlightAnimated:completionHandler:", v4, v6);

  return v8;
}

- (BOOL)isShowingPullDownOrLeadingCustomViewSearch
{
  return -[SBHIconManager isShowingPullDownSearchOrTransitioningToVisible](self, "isShowingPullDownSearchOrTransitioningToVisible")|| -[SBHIconManager _isShowingLeadingCustomViewSearch](self, "_isShowingLeadingCustomViewSearch");
}

- (BOOL)isShowingSpotlightOrLeadingCustomView
{
  return -[SBHIconManager isShowingPullDownSearchOrTransitioningToVisible](self, "isShowingPullDownSearchOrTransitioningToVisible")|| -[SBHIconManager _isShowingSearchableLeadingCustomView](self, "_isShowingSearchableLeadingCustomView");
}

- (BOOL)isShowingOrTransitioningToTrailingCustomView
{
  void *v2;
  char v3;

  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isTrailingCustomViewVisibleOrTransitionDestination");

  return v3;
}

- (BOOL)isShowingPullDownSearchOrTransitioningToVisible
{
  void *v2;
  char v3;

  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isPullDownSearchVisibleOrTransitioningToVisible");

  return v3;
}

- (BOOL)_isShowingLeadingCustomViewSearch
{
  void *v2;
  char v3;

  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isLeadingCustomViewSearchVisible");

  return v3;
}

- (BOOL)_isShowingSearchableLeadingCustomView
{
  void *v2;
  char v3;

  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isOnLeadingCustomPage");

  return v3;
}

- (void)dismissIconContextMenu
{
  id v2;

  -[SBHIconManager iconViewShowingContextMenu](self, "iconViewShowingContextMenu");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "dismissContextMenuWithCompletion:", 0);

}

- (void)performAfterIconContextMenuDismissesUsingBlock:(id)a3
{
  void (**v4)(_QWORD);
  void *v5;
  id v6;

  v4 = (void (**)(_QWORD))a3;
  -[SBHIconManager iconViewShowingContextMenu](self, "iconViewShowingContextMenu");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v5)
    objc_msgSend(v5, "performAfterContextMenusDismissUsingBlock:", v4);
  else
    v4[2](v4);

}

- (void)dismissIconShareSheets
{
  id v2;

  -[SBHIconManager iconShareSheetManager](self, "iconShareSheetManager");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "dismissIconShareSheetsIfNecessaryAndCleanUp");

}

- (id)prepareForUndo
{
  return -[SBHIconManagerUndoPreparation initWithIconManager:]([SBHIconManagerUndoPreparation alloc], "initWithIconManager:", self);
}

- (void)undoPreparation:(id)a3 registerWithUndoManager:(id)a4 actionName:(id)a5 observer:(id)a6
{
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  uint64_t v16;
  dispatch_time_t v17;
  _QWORD block[4];
  id v19;
  SBHIconManager *v20;
  _QWORD v21[4];
  id v22;

  v10 = a3;
  v11 = a4;
  v12 = a5;
  v13 = a6;
  objc_msgSend(v10, "originalRootFolder");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager rootFolder](self, "rootFolder");
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  if (v14 == v15)
  {
    objc_msgSend(v10, "setObserver:", v13);
    objc_msgSend(v11, "removeAllActionsWithTarget:", self);
    v16 = MEMORY[0x1E0C809B0];
    v21[0] = MEMORY[0x1E0C809B0];
    v21[1] = 3221225472;
    v21[2] = __78__SBHIconManager_undoPreparation_registerWithUndoManager_actionName_observer___block_invoke;
    v21[3] = &unk_1E8D86F40;
    v22 = v10;
    objc_msgSend(v11, "registerUndoWithTarget:handler:", self, v21);
    if (v12)
      objc_msgSend(v11, "setActionName:", v12);
    v17 = dispatch_time(0, 480000000000);
    block[0] = v16;
    block[1] = 3221225472;
    block[2] = __78__SBHIconManager_undoPreparation_registerWithUndoManager_actionName_observer___block_invoke_2;
    block[3] = &unk_1E8D84EF0;
    v19 = v11;
    v20 = self;
    dispatch_after(v17, MEMORY[0x1E0C80D38], block);

  }
}

uint64_t __78__SBHIconManager_undoPreparation_registerWithUndoManager_actionName_observer___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "undoChangeWithPreparation:", *(_QWORD *)(a1 + 32));
}

uint64_t __78__SBHIconManager_undoPreparation_registerWithUndoManager_actionName_observer___block_invoke_2(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "removeAllActionsWithTarget:", *(_QWORD *)(a1 + 40));
}

- (void)undoChangeWithPreparation:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  SBIconDragUndoLayoutDelegatePreModificationInfo *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  uint64_t j;
  void *v21;
  SBIconDragUndoLayoutDelegate *v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t k;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t m;
  void *v35;
  void *v36;
  void *v37;
  SBHIconManager *v38;
  void *v39;
  void *v40;
  void *v41;
  id obj;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  _BYTE v61[128];
  _BYTE v62[128];
  _BYTE v63[128];
  _BYTE v64[128];
  _QWORD v65[3];

  v65[1] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v5 = objc_claimAutoreleasedReturnValue();
  v40 = (void *)v5;
  if (v5)
  {
    v65[0] = v5;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v65, 1);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v6 = (void *)MEMORY[0x1E0C9AA60];
  }
  v7 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v57 = 0u;
  v58 = 0u;
  v59 = 0u;
  v60 = 0u;
  v8 = v6;
  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v57, v64, 16);
  if (v9)
  {
    v10 = v9;
    v11 = *(_QWORD *)v58;
    do
    {
      for (i = 0; i != v10; ++i)
      {
        if (*(_QWORD *)v58 != v11)
          objc_enumerationMutation(v8);
        v13 = -[SBIconDragUndoLayoutDelegatePreModificationInfo initWithRootFolderController:]([SBIconDragUndoLayoutDelegatePreModificationInfo alloc], "initWithRootFolderController:", *(_QWORD *)(*((_QWORD *)&v57 + 1) + 8 * i));
        objc_msgSend(v7, "addObject:", v13);

      }
      v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v57, v64, 16);
    }
    while (v10);
  }
  v39 = v8;

  -[SBHIconManager folderIconImageCache](self, "folderIconImageCache");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "purgeAllCachedFolderImages");

  objc_msgSend(v4, "observer");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "willUndo");
  v38 = self;
  -[SBHIconManager rootFolder](self, "rootFolder");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v41 = v4;
  objc_msgSend(v4, "unmodifiedOriginalRootFolder");
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  v36 = v16;
  v17 = (id)objc_msgSend(v16, "setListsFromFolder:");
  v37 = v15;
  objc_msgSend(v15, "didUndo");
  v55 = 0u;
  v56 = 0u;
  v53 = 0u;
  v54 = 0u;
  obj = v7;
  v44 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v53, v63, 16);
  v18 = 0;
  v19 = 0;
  if (v44)
  {
    v43 = *(_QWORD *)v54;
    do
    {
      for (j = 0; j != v44; ++j)
      {
        if (*(_QWORD *)v54 != v43)
          objc_enumerationMutation(obj);
        v21 = *(void **)(*((_QWORD *)&v53 + 1) + 8 * j);
        v22 = -[SBIconDragUndoLayoutDelegate initWithPreModificationInfo:]([SBIconDragUndoLayoutDelegate alloc], "initWithPreModificationInfo:", v21);
        if (v22)
        {
          v23 = v18;
          if (!v19)
            v19 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
          objc_msgSend(v21, "visibleListViews");
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          v49 = 0u;
          v50 = 0u;
          v51 = 0u;
          v52 = 0u;
          v25 = objc_msgSend(v24, "countByEnumeratingWithState:objects:count:", &v49, v62, 16);
          if (v25)
          {
            v26 = v25;
            v27 = *(_QWORD *)v50;
            do
            {
              for (k = 0; k != v26; ++k)
              {
                if (*(_QWORD *)v50 != v27)
                  objc_enumerationMutation(v24);
                objc_msgSend(*(id *)(*((_QWORD *)&v49 + 1) + 8 * k), "addOverridingLayoutDelegate:reason:", v22, CFSTR("UndoDrag"));
                v29 = (void *)objc_claimAutoreleasedReturnValue();
                if (v29)
                  objc_msgSend(v19, "addObject:", v29);

              }
              v26 = objc_msgSend(v24, "countByEnumeratingWithState:objects:count:", &v49, v62, 16);
            }
            while (v26);
          }
          v18 = v23;
          if (!v23)
            v18 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
          objc_msgSend(v18, "addObject:", v22);

        }
      }
      v44 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v53, v63, 16);
    }
    while (v44);
  }

  -[SBHIconManager layoutIconListsWithAnimationType:forceRelayout:](v38, "layoutIconListsWithAnimationType:forceRelayout:", 0, 0);
  v47 = 0u;
  v48 = 0u;
  v45 = 0u;
  v46 = 0u;
  v30 = v19;
  v31 = objc_msgSend(v30, "countByEnumeratingWithState:objects:count:", &v45, v61, 16);
  if (v31)
  {
    v32 = v31;
    v33 = *(_QWORD *)v46;
    do
    {
      for (m = 0; m != v32; ++m)
      {
        if (*(_QWORD *)v46 != v33)
          objc_enumerationMutation(v30);
        objc_msgSend(*(id *)(*((_QWORD *)&v45 + 1) + 8 * m), "invalidate");
      }
      v32 = objc_msgSend(v30, "countByEnumeratingWithState:objects:count:", &v45, v61, 16);
    }
    while (v32);
  }

}

+ (id)undoActionNameForDraggedIcons:(id)a3
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  const __CFString *v7;
  void *v8;
  int v10;

  v3 = a3;
  if (objc_msgSend(v3, "count") == 1)
  {
    objc_msgSend(v3, "firstObject");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v4, "isApplicationIcon"))
    {
      SBHBundle();
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v6 = v5;
      v7 = CFSTR("UNDO_DRAG_APP");
    }
    else if (objc_msgSend(v4, "isWidgetIcon"))
    {
      SBHBundle();
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v6 = v5;
      v7 = CFSTR("UNDO_DRAG_WIDGET");
    }
    else if (objc_msgSend(v4, "isFolderIcon"))
    {
      SBHBundle();
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v6 = v5;
      v7 = CFSTR("UNDO_DRAG_FOLDER");
    }
    else
    {
      v10 = objc_msgSend(v4, "isBookmarkIcon");
      SBHBundle();
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v6 = v5;
      if (v10)
        v7 = CFSTR("UNDO_DRAG_BOOKMARK");
      else
        v7 = CFSTR("UNDO_DRAG");
    }
    objc_msgSend(v5, "localizedStringForKey:value:table:", v7, &stru_1E8D8E958, CFSTR("SpringBoardHome"));
    v8 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    SBHBundle();
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "localizedStringForKey:value:table:", CFSTR("UNDO_DRAG"), &stru_1E8D8E958, CFSTR("SpringBoardHome"));
    v8 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v8;
}

- (void)removeAllUndoRegistrationsInUndoManager:(id)a3
{
  objc_msgSend(a3, "removeAllActionsWithTarget:", self);
}

- (void)getStatistics:(SBHIconManagerStatistics *)a3
{
  uint64_t v5;
  _QWORD v6[5];

  a3->var0 = self->_relayoutCount;
  a3->var2 = -[SBHReusableViewMap recycledViewCount](self->_iconViewMap, "recycledViewCount");
  a3->var3 = -[SBHReusableViewMap viewRecyclingCount](self->_iconViewMap, "viewRecyclingCount");
  a3->var4 = -[SBHReusableViewMap recycledViewCount](self->_homescreenIconAccessoryViewMap, "recycledViewCount");
  a3->var5 = -[SBHReusableViewMap viewRecyclingCount](self->_homescreenIconAccessoryViewMap, "viewRecyclingCount");
  a3->var6 = -[SBHReusableViewMap recycledViewCount](self->_homescreenIconLabelAccessoryViewMap, "recycledViewCount");
  a3->var7 = -[SBHReusableViewMap viewRecyclingCount](self->_homescreenIconLabelAccessoryViewMap, "viewRecyclingCount");
  a3->var8 = -[SBHReusableViewMap recycledViewCount](self->_homescreenIconImageViewMap, "recycledViewCount");
  a3->var9 = -[SBHReusableViewMap viewRecyclingCount](self->_homescreenIconImageViewMap, "viewRecyclingCount");
  a3->var10 = -[SBIconLabelImageCache numberOfCachedImages](self->_labelImageCache, "numberOfCachedImages");
  a3->var11 = -[SBIconLabelImageCache numberOfCacheHits](self->_labelImageCache, "numberOfCacheHits");
  a3->var12 = -[SBIconLabelImageCache numberOfCacheMisses](self->_labelImageCache, "numberOfCacheMisses");
  a3->var13 = -[SBHIconImageCache numberOfCachedImages](self->_iconImageCache, "numberOfCachedImages");
  a3->var14 = -[SBHIconImageCache numberOfCacheHits](self->_iconImageCache, "numberOfCacheHits");
  a3->var15 = -[SBHIconImageCache numberOfCacheMisses](self->_iconImageCache, "numberOfCacheMisses");
  a3->var16 = -[SBHIconImageCache numberOfMainThreadImageLoads](self->_iconImageCache, "numberOfMainThreadImageLoads");
  a3->var17 = -[SBHIconImageCache numberOfUnmaskedCachedImages](self->_iconImageCache, "numberOfUnmaskedCachedImages");
  a3->var18 = -[SBHIconImageCache numberOfUnmaskedCacheHits](self->_iconImageCache, "numberOfUnmaskedCacheHits");
  a3->var19 = -[SBHIconImageCache numberOfUnmaskedCacheMisses](self->_iconImageCache, "numberOfUnmaskedCacheMisses");
  a3->var20 = -[SBFolderIconImageCache numberOfCachedImages](self->_folderIconImageCache, "numberOfCachedImages");
  a3->var21 = -[SBFolderIconImageCache numberOfCacheHits](self->_folderIconImageCache, "numberOfCacheHits");
  a3->var22 = -[SBFolderIconImageCache numberOfCacheMisses](self->_folderIconImageCache, "numberOfCacheMisses");
  v5 = MEMORY[0x1E0C809B0];
  a3->var1 = 0;
  v6[0] = v5;
  v6[1] = 3221225472;
  v6[2] = __32__SBHIconManager_getStatistics___block_invoke;
  v6[3] = &__block_descriptor_40_e24_v24__0__SBIconView_8_B16l;
  v6[4] = a3;
  -[SBHIconManager enumerateDisplayedIconViewsUsingBlock:](self, "enumerateDisplayedIconViewsUsingBlock:", v6);
}

uint64_t __32__SBHIconManager_getStatistics___block_invoke(uint64_t result)
{
  ++*(_QWORD *)(*(_QWORD *)(result + 32) + 8);
  return result;
}

- (NSString)statisticsSummary
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  v14 = 0;
  v12 = 0u;
  v13 = 0u;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v6 = 0u;
  v7 = 0u;
  v4 = 0u;
  v5 = 0u;
  v3 = 0u;
  -[SBHIconManager getStatistics:](self, "getStatistics:", &v3);
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Relayouts: %lu\nDisplayed icon views: %lu\nRecycled icon views: %lu\nIcon view recyclings: %lu\nRecycled icon accessory views: %lu\nIcon accessory view recyclings: %lu\nRecycled icon label accessory views: %lu\nIcon label accessory view recyclings: %lu\nRecycled icon image views: %lu\nIcon image view recyclings: %lu\nLabel cache live/hits/misses: %lu/%lu/%lu\nImage cache live/hits/misses/main: %lu/%lu/%lu/%lu (unmasked: %lu/%lu/%lu)\nFolder image cache live/hits/misses: %lu/%lu/%lu"), v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14);
  return (NSString *)(id)objc_claimAutoreleasedReturnValue();
}

- (SBHProactivePageSuggestionsManager)proactivePageSuggestionsManager
{
  SBHProactivePageSuggestionsManager *proactivePageSuggestionsManager;
  SBHProactivePageSuggestionsManager *v4;
  SBHProactivePageSuggestionsManager *v5;

  proactivePageSuggestionsManager = self->_proactivePageSuggestionsManager;
  if (!proactivePageSuggestionsManager)
  {
    v4 = -[SBHProactivePageSuggestionsManager initWithIconManager:]([SBHProactivePageSuggestionsManager alloc], "initWithIconManager:", self);
    v5 = self->_proactivePageSuggestionsManager;
    self->_proactivePageSuggestionsManager = v4;

    proactivePageSuggestionsManager = self->_proactivePageSuggestionsManager;
  }
  return proactivePageSuggestionsManager;
}

- (id)_makeCustomViewControllerForWidgetIcon:(id)a3 dataSource:(id)a4 location:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;

  v8 = a5;
  v9 = a4;
  v10 = a3;
  objc_msgSend(v10, "gridSizeClass");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager _makeCustomViewControllerForWidgetIcon:dataSource:location:gridSizeClass:](self, "_makeCustomViewControllerForWidgetIcon:dataSource:location:gridSizeClass:", v10, v9, v8, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  return v12;
}

- (id)_makeCustomViewControllerForWidgetIcon:(id)a3 dataSource:(id)a4 location:(id)a5 gridSizeClass:(id)a6
{
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  BOOL v23;
  void *v24;
  SBHWidgetViewController *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  SBHWidgetViewController *v35;
  void *v36;
  NSHashTable *aliveWidgetViewControllersHashTable;
  NSHashTable *v38;
  NSHashTable *v39;
  void *v40;
  void *v41;
  uint64_t v42;
  void *v43;
  void *v44;
  void *v45;
  id APUIAppPredictionViewControllerClass;
  SBHWidgetViewController *v47;
  void *v48;
  SBHWidgetViewController *v49;
  SBHWidgetViewController *v50;
  void *v51;
  void *v52;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  id v58;
  unsigned int v59;
  id v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;

  v10 = a3;
  v11 = a4;
  v12 = a5;
  v13 = a6;
  -[SBHIconManager delegate](self, "delegate");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_self();
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v60 = v11;
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v16 = v11;
  else
    v16 = 0;
  v17 = v16;

  objc_msgSend(v17, "kind");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "extensionBundleIdentifier");
  v19 = objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "containerBundleIdentifier");
  v20 = objc_claimAutoreleasedReturnValue();
  -[SBHIconManager gridSizeClassDomain](self, "gridSizeClassDomain");
  v21 = objc_claimAutoreleasedReturnValue();
  if (v17)
    v22 = v18 == 0;
  else
    v22 = 1;
  v23 = v22 || v19 == 0;
  v65 = v13;
  v63 = (void *)v20;
  v64 = (void *)v19;
  v62 = (void *)v21;
  if (v23)
  {
    if ((objc_opt_respondsToSelector() & 1) != 0)
    {
      v24 = v60;
      objc_msgSend(v14, "iconManager:viewControllerForCustomIcon:element:", self, v10, v60);
      v25 = (SBHWidgetViewController *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v25 = 0;
      v24 = v60;
    }
  }
  else
  {
    v26 = (void *)v21;
    v59 = 1;
    v58 = v10;
    -[SBHIconManager _intentForWidget:ofIcon:creatingIfNecessary:](self, "_intentForWidget:ofIcon:creatingIfNecessary:", v17, v10, 1);
    v27 = objc_claimAutoreleasedReturnValue();
    v28 = objc_msgSend(v26, "chsWidgetFamilyForIconGridSizeClass:", v13);
    v55 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D10038]), "initWithExtensionBundleIdentifier:containerBundleIdentifier:deviceIdentifier:", v19, v20, 0);
    v56 = (void *)v27;
    v57 = v18;
    v29 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D10148]), "initWithExtensionIdentity:kind:family:intent:activityIdentifier:", v55, v18, v28, v27, 0);
    -[SBHIconManager metricsForCHSWidget:inLocation:](self, "metricsForCHSWidget:inLocation:", v29, v12);
    v30 = objc_claimAutoreleasedReturnValue();
    v31 = objc_msgSend(v12, "isEqualToString:", CFSTR("SBIconLocationAddWidgetSheet"));
    v32 = objc_msgSend(v17, "suggestionSource");
    v33 = SBIconLocationGroupContainsLocation(CFSTR("SBIconLocationGroupTodayView"), v12);
    if ((v33 & 1) == 0)
    {
      if ((objc_opt_respondsToSelector() & 1) != 0)
        v59 = objc_msgSend(v14, "iconManagerWidgetsCanAppearInSecureEnvironment:", self);
      else
        v59 = 0;
    }
    if (v32 == 3)
      v34 = 1;
    else
      v34 = v31;
    v35 = [SBHWidgetViewController alloc];
    objc_msgSend(v17, "uniqueIdentifier");
    v36 = (void *)objc_claimAutoreleasedReturnValue();
    v54 = (void *)v30;
    v25 = -[SBHWidgetViewController initWithWidget:metrics:widgetConfigurationIdentifier:](v35, "initWithWidget:metrics:widgetConfigurationIdentifier:", v29, v30, v36);

    aliveWidgetViewControllersHashTable = self->_aliveWidgetViewControllersHashTable;
    if (!aliveWidgetViewControllersHashTable)
    {
      objc_msgSend(MEMORY[0x1E0CB3690], "weakObjectsHashTable");
      v38 = (NSHashTable *)objc_claimAutoreleasedReturnValue();
      v39 = self->_aliveWidgetViewControllersHashTable;
      self->_aliveWidgetViewControllersHashTable = v38;

      aliveWidgetViewControllersHashTable = self->_aliveWidgetViewControllersHashTable;
    }
    -[NSHashTable addObject:](aliveWidgetViewControllersHashTable, "addObject:", v25);
    -[SBHWidgetViewController setDelegate:](v25, "setDelegate:", self);
    -[SBHWidgetViewController setContentType:](v25, "setContentType:", v34);
    -[SBHWidgetViewController setCanAppearInSecureEnvironment:](v25, "setCanAppearInSecureEnvironment:", v59);
    -[SBHWidgetViewController setDrawSystemBackgroundMaterialIfNecessary:](v25, "setDrawSystemBackgroundMaterialIfNecessary:", v31);
    -[SBHIconManager widgetExtensionProvider](self, "widgetExtensionProvider");
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHWidgetViewController sbh_setWidgetExtensionProvider:](v25, "sbh_setWidgetExtensionProvider:", v40);

    v24 = v60;
    if ((objc_opt_respondsToSelector() & 1) != 0)
      objc_msgSend(v14, "iconManager:configureColorSchemeForWidgetViewController:", self, v25);
    v10 = v58;
    if ((objc_opt_respondsToSelector() & 1) != 0)
      objc_msgSend(v14, "iconManager:configureBackgroundViewPolicyForWidgetViewController:", self, v25);
    if ((objc_opt_respondsToSelector() & 1) != 0)
    {
      objc_msgSend(v14, "iconManager:customDisplayConfigurationForWidgetViewController:", self, v25);
      v41 = (void *)objc_claimAutoreleasedReturnValue();
      -[SBHWidgetViewController sbh_setCustomDisplayConfiguration:](v25, "sbh_setCustomDisplayConfiguration:", v41);

    }
    -[SBHWidgetViewController setShouldShareTouchesWithHost:](v25, "setShouldShareTouchesWithHost:", 1);
    if ((_DWORD)v31)
      v42 = 2;
    else
      v42 = 0;
    -[SBHWidgetViewController setVisibility:](v25, "setVisibility:", v42);
    if (!v56)
      -[SBHIconManager _loadAndSaveDefaultIntentIfNecessaryForWidget:ofIcon:viewController:](self, "_loadAndSaveDefaultIntentIfNecessaryForWidget:ofIcon:viewController:", v17, v58, v25);

    v18 = v57;
  }
  v43 = (void *)MEMORY[0x1E0CB3940];
  objc_msgSend(v24, "icon:displayNameForLocation:", v10, CFSTR("SBIconLocationRoot"));
  v44 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v43, "stringWithFormat:", CFSTR("widget:%@"), v44);
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHWidgetViewController setAccessibilityValue:](v25, "setAccessibilityValue:", v45);

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v61 = v14;
    APUIAppPredictionViewControllerClass = getAPUIAppPredictionViewControllerClass();
    v47 = v25;
    v48 = v18;
    if (APUIAppPredictionViewControllerClass)
    {
      if ((objc_opt_isKindOfClass() & 1) != 0)
        v49 = v47;
      else
        v49 = 0;
    }
    else
    {
      v49 = 0;
    }
    v50 = v49;

    -[SBHIconManager setListLayoutProvider:forAppPredictionViewController:animated:](self, "setListLayoutProvider:forAppPredictionViewController:animated:", self->_listLayoutProvider, v50, 1);
    -[SBHIconManager updateLargeIconsEnabledForAppPredictionViewController:animated:](self, "updateLargeIconsEnabledForAppPredictionViewController:animated:", v50, 0);
    -[SBHIconManager _effectiveAppPredictionViewControllersForUniqueIdentifier](self, "_effectiveAppPredictionViewControllersForUniqueIdentifier");
    v51 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v24, "uniqueIdentifier");
    v52 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v51, "setObject:forKey:", v50, v52);

    v18 = v48;
    v14 = v61;
  }

  return v25;
}

- (void)updateWidgetViewControllersWithRenderScheme:(id)a3
{
  id v4;
  void *v5;
  id v6;
  _QWORD v7[4];
  id v8;

  v4 = a3;
  -[SBHIconManager _effectiveWidgetMultiplexingManager](self, "_effectiveWidgetMultiplexingManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = __62__SBHIconManager_updateWidgetViewControllersWithRenderScheme___block_invoke;
  v7[3] = &unk_1E8D8CB80;
  v8 = v4;
  v6 = v4;
  objc_msgSend(v5, "enumerateAllViewControllersUsingBlock:", v7);

}

void __62__SBHIconManager_updateWidgetViewControllersWithRenderScheme___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;

  v3 = a2;
  v4 = objc_opt_class();
  v7 = v3;
  if (v4)
  {
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v5 = v7;
    else
      v5 = 0;
  }
  else
  {
    v5 = 0;
  }
  v6 = v5;

  objc_msgSend(v6, "setRenderScheme:", *(_QWORD *)(a1 + 32));
}

- (void)updateWidgetViewControllersWithCustomDisplayConfiguration:(id)a3
{
  id v4;
  void *v5;
  id v6;
  _QWORD v7[4];
  id v8;

  v4 = a3;
  -[SBHIconManager _effectiveWidgetMultiplexingManager](self, "_effectiveWidgetMultiplexingManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = __76__SBHIconManager_updateWidgetViewControllersWithCustomDisplayConfiguration___block_invoke;
  v7[3] = &unk_1E8D8CB80;
  v8 = v4;
  v6 = v4;
  objc_msgSend(v5, "enumerateAllViewControllersUsingBlock:", v7);

}

void __76__SBHIconManager_updateWidgetViewControllersWithCustomDisplayConfiguration___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;

  v3 = a2;
  v4 = objc_opt_class();
  v7 = v3;
  if (v4)
  {
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v5 = v7;
    else
      v5 = 0;
  }
  else
  {
    v5 = 0;
  }
  v6 = v5;

  objc_msgSend(v6, "sbh_setCustomDisplayConfiguration:", *(_QWORD *)(a1 + 32));
}

- (void)_loadAndSaveDefaultIntentIfNecessaryForWidget:(id)a3 ofIcon:(id)a4 viewController:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  void (**v24)(void *, void *, void *);
  void *v25;
  void *v26;
  NSObject *v27;
  NSMutableSet *pendingWidgetIntentConfigurationInitializations;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  _QWORD v34[4];
  id v35;
  id v36;
  id v37;
  void (**v38)(void *, void *, void *);
  id v39;
  _QWORD aBlock[5];
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id location;
  uint8_t buf[4];
  id v50;
  __int16 v51;
  id v52;
  __int16 v53;
  uint64_t v54;
  uint64_t v55;

  v55 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  -[SBHIconManager _intentForWidget:ofIcon:creatingIfNecessary:](self, "_intentForWidget:ofIcon:creatingIfNecessary:", v8, v9, 1);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if (v11)
  {
    -[SBHIconManager iconModel](self, "iconModel");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "widgetIcons");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v13, "containsObject:", v9) & 1) != 0)
    {
      -[SBHIconManager _archivedIntentForDataSource:inIcon:loadingIfNecessary:](self, "_archivedIntentForDataSource:inIcon:loadingIfNecessary:", v8, v9, 1);
      v14 = (void *)objc_claimAutoreleasedReturnValue();

      if (!v14)
        -[SBHIconManager _archiveConfiguration:forDataSource:ofIcon:](self, "_archiveConfiguration:forDataSource:ofIcon:", v11, v8, v9);
    }
    else
    {

    }
  }
  else
  {
    objc_msgSend(v10, "widget");
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = (void *)v15;
    if (v15)
      v17 = (void *)v15;
    else
      v17 = v8;
    v18 = v17;
    objc_msgSend(v18, "extensionIdentity");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "extensionBundleIdentifier");
    v20 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v18, "kind");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_initWeak(&location, v10);
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 3221225472;
    aBlock[2] = __86__SBHIconManager__loadAndSaveDefaultIntentIfNecessaryForWidget_ofIcon_viewController___block_invoke;
    aBlock[3] = &unk_1E8D8CBA8;
    aBlock[4] = self;
    v33 = v18;
    v41 = v33;
    v31 = v20;
    v42 = v31;
    v32 = v21;
    v43 = v32;
    v22 = v9;
    v44 = v22;
    v23 = v8;
    v45 = v23;
    objc_copyWeak(&v47, &location);
    v30 = v16;
    v46 = v30;
    v24 = (void (**)(void *, void *, void *))_Block_copy(aBlock);
    -[SBHIconManager widgetExtensionProvider](self, "widgetExtensionProvider");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v25, "sbh_descriptorForWidgetIdentifiable:", v33);
    v26 = (void *)objc_claimAutoreleasedReturnValue();

    if (v26)
    {
      v24[2](v24, v26, &__block_literal_global_476);
    }
    else
    {
      SBLogIcon();
      v27 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412802;
        v50 = v31;
        v51 = 2112;
        v52 = v32;
        v53 = 2112;
        v54 = 0;
        _os_log_impl(&dword_1CFEF3000, v27, OS_LOG_TYPE_DEFAULT, "Missing intent and no descriptor intent found for widget: %@ - %@ - descriptor: %@", buf, 0x20u);
      }

      objc_initWeak((id *)buf, self);
      pendingWidgetIntentConfigurationInitializations = self->_pendingWidgetIntentConfigurationInitializations;
      v34[0] = MEMORY[0x1E0C809B0];
      v34[1] = 3221225472;
      v34[2] = __86__SBHIconManager__loadAndSaveDefaultIntentIfNecessaryForWidget_ofIcon_viewController___block_invoke_477;
      v34[3] = &unk_1E8D8CBF0;
      objc_copyWeak(&v39, (id *)buf);
      v35 = v23;
      v36 = v22;
      v37 = v33;
      v38 = v24;
      v29 = _Block_copy(v34);
      -[NSMutableSet addObject:](pendingWidgetIntentConfigurationInitializations, "addObject:", v29);

      objc_destroyWeak(&v39);
      objc_destroyWeak((id *)buf);
    }

    objc_destroyWeak(&v47);
    objc_destroyWeak(&location);

  }
}

void __86__SBHIconManager__loadAndSaveDefaultIntentIfNecessaryForWidget_ofIcon_viewController___block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  void (**v4)(id, uint64_t);
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  int v15;
  void *v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  id WeakRetained;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  __int16 v27;
  uint64_t v28;
  __int16 v29;
  void *v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  BSDispatchQueueAssertMain();
  objc_msgSend(*(id *)(a1 + 32), "widgetExtensionProvider");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "sbh_descriptorForWidgetIdentifiable:", *(_QWORD *)(a1 + 40));
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "defaultIntentReference");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "intent");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  SBLogIcon();
  v9 = objc_claimAutoreleasedReturnValue();
  v10 = v9;
  if (v8)
  {
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      v11 = *(_QWORD *)(a1 + 48);
      v12 = *(_QWORD *)(a1 + 56);
      v25 = 138412802;
      v26 = v11;
      v27 = 2112;
      v28 = v12;
      v29 = 2112;
      v30 = v8;
      _os_log_impl(&dword_1CFEF3000, v10, OS_LOG_TYPE_DEFAULT, "Default default intent for widget(%@ - %@): %@", (uint8_t *)&v25, 0x20u);
    }

    objc_msgSend(*(id *)(a1 + 32), "iconModel");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "widgetIcons");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = objc_msgSend(v14, "containsObject:", *(_QWORD *)(a1 + 64));

    objc_msgSend(*(id *)(a1 + 32), "_archivedIntentForDataSource:inIcon:loadingIfNecessary:", *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 64), 0);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    if (v15 && !v16)
    {
      SBLogIcon();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v18 = *(_QWORD *)(a1 + 48);
        v19 = *(_QWORD *)(a1 + 56);
        v25 = 138412802;
        v26 = v18;
        v27 = 2112;
        v28 = v19;
        v29 = 2112;
        v30 = v8;
        _os_log_impl(&dword_1CFEF3000, v17, OS_LOG_TYPE_DEFAULT, "Saving new default intent for widget (%@ - %@): %@", (uint8_t *)&v25, 0x20u);
      }

      objc_msgSend(*(id *)(a1 + 32), "_archiveConfiguration:forDataSource:ofIcon:", v8, *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 64));
    }
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 88));
    objc_msgSend(WeakRetained, "widget");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v22 = *(void **)(a1 + 80);

    if (v21 == v22)
    {
      objc_msgSend(*(id *)(a1 + 80), "widgetByReplacingIntent:", v8);
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(WeakRetained, "setWidget:", v23);

    }
    v4[2](v4, 1);

  }
  else
  {
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      __86__SBHIconManager__loadAndSaveDefaultIntentIfNecessaryForWidget_ofIcon_viewController___block_invoke_cold_1(a1, v10, v24);

    v4[2](v4, 0);
  }

}

void __86__SBHIconManager__loadAndSaveDefaultIntentIfNecessaryForWidget_ofIcon_viewController___block_invoke_477(uint64_t a1, void *a2)
{
  id WeakRetained;
  void *v4;
  void *v5;
  void (**v6)(id, uint64_t);

  v6 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  if (WeakRetained)
  {
    objc_msgSend(*(id *)(a1 + 32), "resetDisplayName");
    objc_msgSend(*(id *)(a1 + 40), "updateLabel");
    objc_msgSend(WeakRetained, "widgetExtensionProvider");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "sbh_descriptorForWidgetIdentifiable:", *(_QWORD *)(a1 + 48));
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  }
  else
  {
    v6[2](v6, 1);
  }

}

- (void)performAfterCachingWidgetIntentsUsingBlock:(id)a3
{
  void (**v4)(_QWORD);
  NSMutableArray *v5;
  NSMutableArray *performAfterPendingWidgetIntentConfigurationBlocks;
  void *v7;
  NSMutableArray *v8;
  void *v9;
  dispatch_time_t v10;
  id v11;
  _QWORD v12[5];
  id v13;

  v4 = (void (**)(_QWORD))a3;
  if (-[NSMutableSet count](self->_pendingWidgetIntentConfigurationInitializations, "count")
    || -[NSMutableSet count](self->_activeWidgetIntentConfigurationInitializations, "count"))
  {
    if (!self->_performAfterPendingWidgetIntentConfigurationBlocks)
    {
      v5 = (NSMutableArray *)objc_alloc_init(MEMORY[0x1E0C99DE8]);
      performAfterPendingWidgetIntentConfigurationBlocks = self->_performAfterPendingWidgetIntentConfigurationBlocks;
      self->_performAfterPendingWidgetIntentConfigurationBlocks = v5;

    }
    v7 = (void *)objc_msgSend(v4, "copy");
    v8 = self->_performAfterPendingWidgetIntentConfigurationBlocks;
    v9 = _Block_copy(v7);
    -[NSMutableArray addObject:](v8, "addObject:", v9);

    if (-[NSMutableSet count](self->_pendingWidgetIntentConfigurationInitializations, "count"))
      -[SBHIconManager _processPendingDefaultIntents](self, "_processPendingDefaultIntents");
    v10 = dispatch_time(0, 30000000000);
    v12[0] = MEMORY[0x1E0C809B0];
    v12[1] = 3221225472;
    v12[2] = __61__SBHIconManager_performAfterCachingWidgetIntentsUsingBlock___block_invoke;
    v12[3] = &unk_1E8D84D28;
    v12[4] = self;
    v13 = v7;
    v11 = v7;
    dispatch_after(v10, MEMORY[0x1E0C80D38], v12);

  }
  else
  {
    v4[2](v4);
  }

}

void __61__SBHIconManager_performAfterCachingWidgetIntentsUsingBlock___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 280);
  v3 = _Block_copy(*(const void **)(a1 + 40));
  LODWORD(v2) = objc_msgSend(v2, "containsObject:", v3);

  if ((_DWORD)v2)
  {
    v4 = *(void **)(*(_QWORD *)(a1 + 32) + 280);
    v5 = _Block_copy(*(const void **)(a1 + 40));
    objc_msgSend(v4, "removeObject:", v5);

    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  }
}

- (id)intentForDataSource:(id)a3 ofIcon:(id)a4
{
  return -[SBHIconManager _intentForDataSource:inIcon:creatingIfNecessary:](self, "_intentForDataSource:inIcon:creatingIfNecessary:", a3, a4, 1);
}

- (id)_stackConfigurationForStackIcon:(id)a3
{
  id v4;
  _BOOL4 v5;
  SBHStackConfiguration *v6;
  void *v7;
  void *v8;

  v4 = a3;
  v5 = -[SBHIconManager _alwaysPresentStackConfigurationSheet](self, "_alwaysPresentStackConfigurationSheet");
  if ((objc_msgSend(v4, "isWidgetStackIcon") & 1) != 0 || v5)
  {
    v6 = objc_alloc_init(SBHStackConfiguration);
    -[SBHStackConfiguration setAllowsSuggestions:](v6, "setAllowsSuggestions:", objc_msgSend(v4, "allowsSuggestions"));
    -[SBHStackConfiguration setAllowsExternalSuggestions:](v6, "setAllowsExternalSuggestions:", objc_msgSend(v4, "allowsExternalSuggestions"));
    objc_msgSend(v4, "iconDataSources");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHStackConfiguration setDataSources:](v6, "setDataSources:", v7);

    objc_msgSend(v4, "gridSizeClass");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHStackConfiguration setSizeClass:](v6, "setSizeClass:", v8);

  }
  else
  {
    v6 = 0;
  }

  return v6;
}

- (id)containerBundleIdentifierForDataSource:(id)a3
{
  return SBHContainerBundleIdentifierForDataSource(a3);
}

- (void)checkForInvalidWidgets
{
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  void *v12;
  void *v13;
  void *v14;
  SBHIconGridSizeClassSet *v15;
  NSObject *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  NSObject *v21;
  NSObject *v22;
  NSObject *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t j;
  void *v29;
  void *v30;
  void *v31;
  NSObject *v32;
  NSObject *v33;
  void *v34;
  id obj;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  SBHIconManager *v40;
  id v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint8_t v58[128];
  uint8_t buf[4];
  void *v60;
  _BYTE v61[128];
  _BYTE v62[128];
  uint64_t v63;

  v63 = *MEMORY[0x1E0C80C00];
  -[SBHIconManager widgetExtensionProvider](self, "widgetExtensionProvider");
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager iconModel](self, "iconModel");
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v34, "widgetIcons");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager delegate](self, "delegate");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v40 = self;
  -[SBHIconManager gridSizeClassDomain](self, "gridSizeClassDomain");
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  v39 = objc_opt_respondsToSelector();
  v54 = 0u;
  v55 = 0u;
  v56 = 0u;
  v57 = 0u;
  obj = v3;
  v37 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v54, v62, 16);
  if (v37)
  {
    v36 = *(_QWORD *)v55;
    v44 = v4;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v55 != v36)
          objc_enumerationMutation(obj);
        v38 = v5;
        v6 = *(void **)(*((_QWORD *)&v54 + 1) + 8 * v5);
        objc_msgSend(v6, "gridSizeClass");
        v43 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "widgets");
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        v50 = 0u;
        v51 = 0u;
        v52 = 0u;
        v53 = 0u;
        v41 = v7;
        v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v50, v61, 16);
        if (v8)
        {
          v9 = v8;
          v10 = *(_QWORD *)v51;
          do
          {
            for (i = 0; i != v9; ++i)
            {
              if (*(_QWORD *)v51 != v10)
                objc_enumerationMutation(v41);
              v12 = *(void **)(*((_QWORD *)&v50 + 1) + 8 * i);
              objc_msgSend(v45, "sbh_descriptorForWidgetIdentifiable:", v12);
              v13 = (void *)objc_claimAutoreleasedReturnValue();
              v14 = v13;
              if (v13)
              {
                v15 = -[SBHIconGridSizeClassSet initWithCHSWidgetFamilyMask:inDomain:]([SBHIconGridSizeClassSet alloc], "initWithCHSWidgetFamilyMask:inDomain:", objc_msgSend(v13, "supportedFamilies"), v42);
                if (!-[SBHIconGridSizeClassSet containsGridSizeClass:](v15, "containsGridSizeClass:", v43))
                {
                  SBLogWidgets();
                  v16 = objc_claimAutoreleasedReturnValue();
                  if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
                  {
                    *(_DWORD *)buf = 138412290;
                    v60 = v12;
                    _os_log_impl(&dword_1CFEF3000, v16, OS_LOG_TYPE_DEFAULT, "Icon size class no longer supported for widget; removing widget: %@",
                      buf,
                      0xCu);
                  }

                  objc_msgSend(v6, "removeIconDataSource:", v12);
                  v4 = v44;
                }
                objc_msgSend(v14, "extensionIdentity");
                v17 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v17, "containerBundleIdentifier");
                v18 = (void *)objc_claimAutoreleasedReturnValue();

                if ((objc_opt_respondsToSelector() & 1) != 0)
                {
                  objc_msgSend(v4, "iconManager:containerBundleIdentifierForDescriptor:", v40, v14);
                  v19 = objc_claimAutoreleasedReturnValue();

                  v18 = (void *)v19;
                }
                objc_msgSend(MEMORY[0x1E0CF9688], "applicationWithBundleIdentifier:", v18);
                v20 = (void *)objc_claimAutoreleasedReturnValue();
                if ((objc_msgSend(v20, "isLocked") & 1) != 0 || objc_msgSend(v20, "isHidden"))
                {
                  SBLogWidgets();
                  v21 = objc_claimAutoreleasedReturnValue();
                  if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
                  {
                    *(_DWORD *)buf = 138412290;
                    v60 = v12;
                    _os_log_impl(&dword_1CFEF3000, v21, OS_LOG_TYPE_DEFAULT, "Icon is locked or hidden; removing widget: %@",
                      buf,
                      0xCu);
                  }

                  objc_msgSend(v6, "removeIconDataSource:", v12);
                }

                v4 = v44;
              }
              else if ((v39 & 1) != 0 && objc_msgSend(v4, "iconManager:isWidgetValid:", v40, v12))
              {
                SBLogWidgets();
                v22 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
                {
                  *(_DWORD *)buf = 138412290;
                  v60 = v12;
                  _os_log_impl(&dword_1CFEF3000, v22, OS_LOG_TYPE_DEFAULT, "No widget descriptor found for widget, but delegate says to keep it: %@", buf, 0xCu);
                }

              }
              else
              {
                SBLogWidgets();
                v23 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
                {
                  *(_DWORD *)buf = 138412290;
                  v60 = v12;
                  _os_log_impl(&dword_1CFEF3000, v23, OS_LOG_TYPE_DEFAULT, "No widget descriptor found for widget; removing widget: %@",
                    buf,
                    0xCu);
                }

                objc_msgSend(v6, "removeIconDataSource:", v12);
              }

            }
            v9 = objc_msgSend(v41, "countByEnumeratingWithState:objects:count:", &v50, v61, 16);
          }
          while (v9);
        }
        objc_msgSend(v6, "iconDataSourcesOfClass:", objc_opt_class());
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        v46 = 0u;
        v47 = 0u;
        v48 = 0u;
        v49 = 0u;
        v25 = objc_msgSend(v24, "countByEnumeratingWithState:objects:count:", &v46, v58, 16);
        if (v25)
        {
          v26 = v25;
          v27 = *(_QWORD *)v47;
          do
          {
            for (j = 0; j != v26; ++j)
            {
              if (*(_QWORD *)v47 != v27)
                objc_enumerationMutation(v24);
              v29 = *(void **)(*((_QWORD *)&v46 + 1) + 8 * j);
              objc_msgSend(v29, "containerBundleIdentifier");
              v30 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(MEMORY[0x1E0CF9688], "applicationWithBundleIdentifier:", v30);
              v31 = (void *)objc_claimAutoreleasedReturnValue();
              if ((objc_msgSend(v31, "isLocked") & 1) != 0 || objc_msgSend(v31, "isHidden"))
              {
                SBLogWidgets();
                v32 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
                {
                  *(_DWORD *)buf = 138412290;
                  v60 = v29;
                  _os_log_impl(&dword_1CFEF3000, v32, OS_LOG_TYPE_DEFAULT, "Icon is locked or hidden; removing fake widget: %@",
                    buf,
                    0xCu);
                }

                objc_msgSend(v6, "removeIconDataSource:", v29);
              }

            }
            v26 = objc_msgSend(v24, "countByEnumeratingWithState:objects:count:", &v46, v58, 16);
          }
          while (v26);
        }
        v4 = v44;
        if (!objc_msgSend(v6, "iconDataSourceCount"))
        {
          SBLogWidgets();
          v33 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138412290;
            v60 = v6;
            _os_log_impl(&dword_1CFEF3000, v33, OS_LOG_TYPE_DEFAULT, "Last widget removed for widget icon; removing icon: %@",
              buf,
              0xCu);
          }

          -[SBHIconManager removeIcon:options:completion:](v40, "removeIcon:options:completion:", v6, 1, 0);
        }

        v5 = v38 + 1;
      }
      while (v38 + 1 != v37);
      v37 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v54, v62, 16);
    }
    while (v37);
  }

}

- (void)checkForInvalidCustomElements
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_3_4(&dword_1CFEF3000, v0, v1, "Unable to validate custom widgets; validation is not implemented by delegate: %@",
    v2);
  OUTLINED_FUNCTION_3();
}

- (id)metricsForCHSWidget:(id)a3 inLocation:(id)a4
{
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;

  v6 = a3;
  v7 = a4;
  -[SBHIconManager delegate](self, "delegate");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) == 0
    || (objc_msgSend(v8, "iconManager:metricsForCHSWidget:inLocation:", self, v6, v7),
        (v9 = (void *)objc_claimAutoreleasedReturnValue()) == 0))
  {
    -[SBHIconManager widgetMetricsProvider](self, "widgetMetricsProvider");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "systemMetricsForWidget:", v6);
    v9 = (void *)objc_claimAutoreleasedReturnValue();

  }
  return v9;
}

- (void)iconListView:(id)a3 didAddIconView:(id)a4
{
  void *v5;
  int IsAppPrediction;
  void *v7;
  void *v8;
  id v9;

  v9 = a4;
  objc_msgSend(v9, "location");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  IsAppPrediction = SBHIconLocationIsAppPrediction(v5);

  if (IsAppPrediction)
  {
    -[SBHIconManager appPredictionViewControllerForIconView:](self, "appPredictionViewControllerForIconView:", v9);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager listLayoutProvider](self, "listLayoutProvider");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager _stompOnIconView:inAppPredictionViewController:listLayoutProvider:animated:](self, "_stompOnIconView:inAppPredictionViewController:listLayoutProvider:animated:", v9, v7, v8, 0);

  }
}

- (void)widgetHostViewController:(id)a3 requestsLaunch:(id)a4
{
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  int v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  NSObject *v27;
  uint64_t v28;
  void *v29;
  NSObject *v30;
  void *v31;
  uint64_t v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  SBHPeopleWidgetPersonDetailInteraction *v37;
  void *v38;
  void *v39;
  char v40;
  char v41;
  void *v42;
  void *v43;
  char *v44;
  char v45;
  uint64_t v46;
  void *v47;
  void *v48;
  void *v49;
  id v50;
  void *v51;
  id v52;

  v6 = a3;
  v7 = a4;
  -[SBHIconManager _effectiveWidgetMultiplexingManager](self, "_effectiveWidgetMultiplexingManager");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "activeMultiplexingViewControllerForViewController:", v6);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  -[NSMapTable objectForKey:](self->_iconViewsForWidgetMultiplexingViewController, "objectForKey:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v10, "isShowingContextMenu") & 1) == 0 && !-[SBHIconManager isEditing](self, "isEditing"))
  {
    -[SBHIconManager currentStylePickerViewController](self, "currentStylePickerViewController");
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v11)
    {
      objc_msgSend(v10, "icon");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_opt_class();
      v14 = v12;
      if (v13)
      {
        if ((objc_opt_isKindOfClass() & 1) != 0)
          v15 = v14;
        else
          v15 = 0;
      }
      else
      {
        v15 = 0;
      }
      v16 = v15;

      objc_msgSend(v16, "activeWidget");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      if (!v17)
        goto LABEL_50;
      objc_msgSend(v6, "widget");
      v50 = v16;
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "extensionIdentity");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v19, "extensionBundleIdentifier");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v17, "extensionBundleIdentifier");
      v51 = v17;
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      v22 = objc_msgSend(v20, "isEqualToString:", v21);

      v17 = v51;
      v16 = v50;
      if (!v22)
        goto LABEL_50;
      -[SBHIconManager delegate](self, "delegate");
      v23 = objc_claimAutoreleasedReturnValue();
      objc_msgSend(v51, "extensionBundleIdentifier");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      v49 = (void *)v23;
      if ((objc_opt_respondsToSelector() & 1) != 0)
      {
        v52 = 0;
        v47 = v24;
        v25 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CA5848]), "initWithBundleIdentifier:error:", v24, &v52);
        v26 = v52;
        if (!v25)
        {
          SBLogWidgets();
          v27 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
            -[SBHIconManager widgetHostViewController:requestsLaunch:].cold.2();

        }
        objc_msgSend(v25, "containingBundleRecord");
        v28 = objc_claimAutoreleasedReturnValue();
        v29 = (void *)v28;
        if (v25 && !v28)
        {
          SBLogWidgets();
          v30 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
            -[SBHIconManager widgetHostViewController:requestsLaunch:].cold.1();

        }
        objc_msgSend(v29, "bundleIdentifier");
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        if (v31)
          v45 = objc_msgSend(v49, "iconManager:isIconVisibleForBundleIdentifier:", self, v31);
        else
          v45 = 0;

        v24 = v47;
      }
      else
      {
        v45 = 0;
      }
      objc_msgSend(v7, "launchAction");
      v46 = objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "url");
      v32 = objc_claimAutoreleasedReturnValue();
      v48 = (void *)v32;
      if (v32)
      {
        objc_msgSend(v51, "containerBundleIdentifier");
        v33 = (void *)objc_claimAutoreleasedReturnValue();
        if ((objc_msgSend(v33, "isEqualToString:", CFSTR("com.apple.PeopleViewService")) & 1) != 0)
        {
          -[SBHHomeScreenSettings widgetSettings](self->_homeScreenSettings, "widgetSettings");
          v34 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v34, "personDetailInteractionSettings");
          v35 = (void *)objc_claimAutoreleasedReturnValue();
          LODWORD(v44) = objc_msgSend(v35, "usesCardStyle");

          v32 = (uint64_t)v48;
          v17 = v51;

          if ((_DWORD)v44)
          {
            -[SBHIconManager _personDetailInteractionContextForPersonURL:iconView:](self, "_personDetailInteractionContextForPersonURL:iconView:", v48, v10);
            v36 = (void *)objc_claimAutoreleasedReturnValue();
            v37 = -[SBHPeopleWidgetPersonDetailInteraction initWithInteractionContext:]([SBHPeopleWidgetPersonDetailInteraction alloc], "initWithInteractionContext:", v36);
            -[SBHPeopleWidgetPersonDetailInteraction setModalInteractionDelegate:](v37, "setModalInteractionDelegate:", self);
            -[SBHPeopleWidgetPersonDetailInteraction beginInteractionAnimated:](v37, "beginInteractionAnimated:", 1);

            v16 = v50;
            v17 = v51;
LABEL_30:
            v38 = (void *)v46;
LABEL_49:

            -[SBHHomeScreenUsageMonitor noteUserTappedWidgetIcon:withURL:](self->_usageMonitor, "noteUserTappedWidgetIcon:withURL:", v16, v48);
LABEL_50:

            goto LABEL_51;
          }
        }
        else
        {

        }
      }
      if ((objc_opt_respondsToSelector() & 1) != 0)
      {
        objc_msgSend(v49, "iconManager:bundleIdentifierToLaunchForWidgetURL:", self, v32);
        v36 = (void *)objc_claimAutoreleasedReturnValue();
        if (v36)
        {
          objc_msgSend(v17, "containerBundleIdentifier");
          v39 = (void *)objc_claimAutoreleasedReturnValue();
          v40 = objc_msgSend(v36, "isEqualToString:", v39);

          v41 = v32 ? v45 : 1;
          if ((v41 & 1) == 0)
          {
            v42 = (void *)v46;
            if ((v40 & 1) != 0 || !objc_msgSend(v7, "isEntitledToOpenSystemProcesses"))
            {
              v16 = v50;
            }
            else
            {
              v44 = sel_iconManager_widgetWantsLaunchForBundleIdentifier_withAction_;
              v16 = v50;
              if ((objc_opt_respondsToSelector() & 1) != 0
                || (objc_opt_respondsToSelector() & 1) != 0
                || (objc_opt_respondsToSelector() & 1) != 0)
              {
                if ((objc_opt_respondsToSelector() & 1) == 0)
                {
                  v17 = v51;
                  if ((objc_opt_respondsToSelector() & 1) != 0)
                  {
                    v38 = (void *)v46;
                    objc_msgSend(v49, "iconManager:widgetWantsLaunchForBundleIdentifier:withAction:", self, v36, v46);
                    goto LABEL_49;
                  }
                  objc_msgSend(v49, "iconManager:wantsLaunchForWidgetURL:", self, v32);
                  goto LABEL_30;
                }
                objc_msgSend(v49, "iconManager:iconView:widgetWantsLaunchForBundleIdentifier:withAction:", self, v10, v36, v46);
                v38 = (void *)v46;
LABEL_48:
                v17 = v51;
                goto LABEL_49;
              }
            }
LABEL_47:
            -[SBHIconManager highlightIconView:](self, "highlightIconView:", v10, v44);
            objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", v42);
            v38 = v42;
            v43 = (void *)objc_claimAutoreleasedReturnValue();
            -[SBHIconManager launchFromIconView:withActions:modifierFlags:](self, "launchFromIconView:withActions:modifierFlags:", v10, v43, 0);

            goto LABEL_48;
          }
        }
      }
      else
      {
        v36 = 0;
      }
      v16 = v50;
      v42 = (void *)v46;
      goto LABEL_47;
    }
  }
LABEL_51:

}

- (void)widgetHostViewControllerUsesSystemBackgroundMaterialDidChange:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;

  v4 = a3;
  -[SBHIconManager _effectiveWidgetMultiplexingManager](self, "_effectiveWidgetMultiplexingManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "activeMultiplexingViewControllerForViewController:", v4);
  v15 = (id)objc_claimAutoreleasedReturnValue();

  -[NSMapTable objectForKey:](self->_iconViewsForWidgetMultiplexingViewController, "objectForKey:", v15);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[NSMapTable objectForKey:](self->_widgetViewControllersForIconView, "objectForKey:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (v7)
  {
    objc_msgSend(v6, "icon");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBFolder indexPathForIcon:](self->_rootFolder, "indexPathForIcon:", v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager iconListViewForIndexPath:](self, "iconListViewForIndexPath:", v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "_insertOrRemoveCaptureOnlyBackgroundViewIfNecessaryForIconView:", v6);
    v11 = objc_opt_class();
    v12 = v7;
    if (v11)
    {
      if ((objc_opt_isKindOfClass() & 1) != 0)
        v13 = v12;
      else
        v13 = 0;
    }
    else
    {
      v13 = 0;
    }
    v14 = v13;

    objc_msgSend(v14, "evaluateBackground");
  }

}

- (BOOL)_determineIfAvocadoHostViewControllerIsVisible:(id)a3
{
  id v4;
  id v5;
  void *v6;
  _QWORD aBlock[5];
  id v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char v14;

  v4 = a3;
  v11 = 0;
  v12 = &v11;
  v13 = 0x2020000000;
  v14 = 0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = __65__SBHIconManager__determineIfAvocadoHostViewControllerIsVisible___block_invoke;
  aBlock[3] = &unk_1E8D8CC18;
  aBlock[4] = self;
  v5 = v4;
  v9 = v5;
  v10 = &v11;
  v6 = _Block_copy(aBlock);
  -[SBHIconManager enumerateDisplayedIconViewsUsingBlock:](self, "enumerateDisplayedIconViewsUsingBlock:", v6);
  LOBYTE(self) = *((_BYTE *)v12 + 24);

  _Block_object_dispose(&v11, 8);
  return (char)self;
}

void __65__SBHIconManager__determineIfAvocadoHostViewControllerIsVisible___block_invoke(uint64_t a1, void *a2, _BYTE *a3)
{
  void *v5;
  void *v6;
  int v7;
  int v8;
  void *v9;

  objc_msgSend(a2, "customIconImageViewController");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v5)
  {
    v9 = v5;
    v7 = objc_msgSend(v5, "sbh_isWidgetStackViewController");
    v6 = v9;
    if (v7)
    {
      v8 = objc_msgSend(*(id *)(a1 + 32), "_determineIfAvocadoHostViewControllerIsVisible:withinStackViewController:", *(_QWORD *)(a1 + 40), v9);
      v6 = v9;
      if (v8)
      {
        *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 1;
        *a3 = 1;
      }
    }
  }

}

- (BOOL)_determineIfAvocadoHostViewControllerIsVisible:(id)a3 withinStackViewController:(id)a4
{
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  void *v10;
  id v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  objc_msgSend(a4, "widgetViewControllers", 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v7)
  {
    v8 = *(_QWORD *)v14;
    while (2)
    {
      for (i = 0; i != v7; ++i)
      {
        if (*(_QWORD *)v14 != v8)
          objc_enumerationMutation(v6);
        v10 = *(void **)(*((_QWORD *)&v13 + 1) + 8 * i);
        objc_msgSend(v10, "multiplexedViewController");
        v11 = (id)objc_claimAutoreleasedReturnValue();

        if (v11 == v5)
        {
          LOBYTE(v7) = objc_msgSend(v10, "bs_isAppearingOrAppeared");
          goto LABEL_11;
        }
      }
      v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
      if (v7)
        continue;
      break;
    }
  }
LABEL_11:

  return v7;
}

- (void)multiplexingManager:(id)a3 willRemoveViewController:(id)a4 forIdentifier:(id)a5
{
  id v7;
  void *v8;
  id v9;

  v9 = a4;
  v7 = a5;
  if (objc_msgSend(v9, "sbh_isWidgetHostViewController"))
    objc_msgSend(v9, "invalidate");
  -[SBHIconManager delegate](self, "delegate");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v8, "iconManager:willRemoveViewControllerForIdentifier:", self, v7);

}

- (BOOL)multiplexingManager:(id)a3 shouldCacheRecentViewController:(id)a4 forIdentifier:(id)a5
{
  id v7;
  id v8;
  BOOL v9;
  void *v10;
  void *v11;
  void *v12;
  int v13;
  NSObject *v14;
  NSObject *v15;
  void *v16;
  NSObject *v17;
  void *v18;
  int v20;
  void *v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v7 = a4;
  v8 = a5;
  if ((objc_msgSend(v8, "hasSuffix:", CFSTR(":Preview")) & 1) != 0)
  {
    v9 = 0;
  }
  else
  {
    -[SBHIconManager iconModel](self, "iconModel");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "widgetIconsContainingWidgetsMatchingUniqueIdentifier:", v8);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v11, "count"))
    {
      -[SBHIconManager delegate](self, "delegate");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      if ((objc_opt_respondsToSelector() & 1) != 0
        && !objc_msgSend(v12, "iconManager:shouldCacheRecentViewController:forIdentifier:", self, v7, v8))
      {
        SBLogWidgetCleanup();
        v17 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
        {
          SBHWidgetViewControllerSysdiagnoseDescription(v7);
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          v20 = 138543362;
          v21 = v18;
          _os_log_impl(&dword_1CFEF3000, v17, OS_LOG_TYPE_DEFAULT, "Discarding %{public}@; will not cache",
            (uint8_t *)&v20,
            0xCu);

        }
        v9 = 0;
      }
      else
      {
        v13 = objc_msgSend(v7, "bs_isAppearingOrAppeared");
        SBLogWidgetCleanup();
        v14 = objc_claimAutoreleasedReturnValue();
        v15 = v14;
        if (v13)
        {
          if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
            -[SBHIconManager multiplexingManager:shouldCacheRecentViewController:forIdentifier:].cold.1(v7, v15);

          objc_msgSend(v7, "bs_beginAppearanceTransition:animated:", 0, 0);
          objc_msgSend(v7, "bs_endAppearanceTransition");
        }
        else
        {
          if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
          {
            SBHWidgetViewControllerSysdiagnoseDescription(v7);
            v16 = (void *)objc_claimAutoreleasedReturnValue();
            v20 = 138543362;
            v21 = v16;
            _os_log_impl(&dword_1CFEF3000, v15, OS_LOG_TYPE_DEFAULT, "Choosing to cache Avo %{public}@ ", (uint8_t *)&v20, 0xCu);

          }
        }
        v9 = 1;
      }

    }
    else
    {
      v9 = 0;
    }

  }
  return v9;
}

- (id)_multiplexingViewControllerForIcon:(id)a3 dataSource:(id)a4 location:(id)a5 withPriority:(unint64_t)a6
{
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  NSObject *v18;
  void *v19;
  int v21;
  id v22;
  __int16 v23;
  id v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v10 = a3;
  v11 = a4;
  v12 = a5;
  objc_msgSend(v11, "uniqueIdentifier");
  v13 = objc_claimAutoreleasedReturnValue();
  v14 = (void *)v13;
  v15 = 0;
  if (v10 && v11 && v13)
  {
    -[SBHIconManager _effectiveWidgetMultiplexingManager](self, "_effectiveWidgetMultiplexingManager");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0
      && objc_msgSend(v12, "isEqualToString:", CFSTR("SBIconLocationAddWidgetSheet")))
    {
      objc_msgSend(v14, "stringByAppendingString:", CFSTR(":Preview"));
      v17 = objc_claimAutoreleasedReturnValue();

      v14 = (void *)v17;
    }
    if ((objc_msgSend(v16, "hasViewControllerForIdentifier:", v14) & 1) == 0)
    {
      SBLogIcon();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
      {
        v21 = 138412546;
        v22 = v10;
        v23 = 2112;
        v24 = v11;
        _os_log_impl(&dword_1CFEF3000, v18, OS_LOG_TYPE_INFO, "Creating new view controller for icon: %@, data source: %@", (uint8_t *)&v21, 0x16u);
      }

      -[SBHIconManager _makeCustomViewControllerForWidgetIcon:dataSource:location:](self, "_makeCustomViewControllerForWidgetIcon:dataSource:location:", v10, v11, v12);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "setViewController:forIdentifier:", v19, v14);

    }
    v15 = (void *)objc_msgSend(v16, "newMultiplexingViewControllerForIdentifier:atLevel:", v14, (double)a6);

  }
  return v15;
}

- (id)widgetStackViewController:(id)a3 viewControllerForDataSource:(id)a4
{
  id v6;
  id v7;
  void *v8;
  void *v9;
  __CFString *v10;
  uint64_t v11;
  void *v12;
  char isKindOfClass;
  void *v14;

  v6 = a3;
  v7 = a4;
  objc_msgSend(v6, "widgetIcon");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  -[NSMapTable objectForKey:](self->_iconViewsForCustomIconImageViewController, "objectForKey:", v6);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (v9)
    goto LABEL_2;
  if ((objc_opt_respondsToSelector() & 1) == 0)
  {
LABEL_8:
    NSLog(CFSTR("missing iconView for widget stack view controller data source"));
    v10 = CFSTR("SBIconLocationRoot");
    v9 = 0;
    v11 = 0;
    goto LABEL_9;
  }
  objc_msgSend(v6, "host");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_self();
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  isKindOfClass = objc_opt_isKindOfClass();

  if ((isKindOfClass & 1) == 0)
  {

    goto LABEL_8;
  }
  if (!v9)
    goto LABEL_8;
LABEL_2:
  objc_msgSend(v9, "location");
  v10 = (__CFString *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend(v9, "customIconImageViewControllerPriority");
LABEL_9:
  -[SBHIconManager _multiplexingViewControllerForIcon:dataSource:location:withPriority:](self, "_multiplexingViewControllerForIcon:dataSource:location:withPriority:", v8, v7, v10, v11);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  -[SBHIconManager _updateWidgetMultiplexingViewController:forIconView:](self, "_updateWidgetMultiplexingViewController:forIconView:", v14, v9);
  return v14;
}

- (id)widgetStackViewController:(id)a3 containerBundleIdentifierForDataSource:(id)a4
{
  return -[SBHIconManager containerBundleIdentifierForDataSource:](self, "containerBundleIdentifierForDataSource:", a4);
}

- (id)widgetStackViewController:(id)a3 containerApplicationNameForDataSource:(id)a4
{
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  -[SBHIconManager containerBundleIdentifierForDataSource:](self, "containerBundleIdentifierForDataSource:", a4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    -[SBHIconManager applicationWithBundleIdentifier:](self, "applicationWithBundleIdentifier:", v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = v6;
    if (v6)
    {
      objc_msgSend(v6, "displayName");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v8 = 0;
    }

  }
  else
  {
    v8 = 0;
  }

  return v8;
}

- (BOOL)widgetStackViewController:(id)a3 isDataSourceBlockedForScreenTimeExpiration:(id)a4
{
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  char v10;
  BOOL v11;

  -[SBHIconManager containerBundleIdentifierForDataSource:](self, "containerBundleIdentifierForDataSource:", a4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    -[SBHIconManager iconModel](self, "iconModel");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager delegate](self, "delegate");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "applicationIconForBundleIdentifier:", v5);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = v8;
    if (v8)
    {
      v10 = objc_msgSend(v8, "isTimedOut");
    }
    else
    {
      if ((objc_opt_respondsToSelector() & 1) == 0)
      {
        v11 = 0;
        goto LABEL_9;
      }
      v10 = objc_msgSend(v7, "iconManager:isTimedOutForDataSourceContainerBundleIdentifier:", self, v5);
    }
    v11 = v10;
LABEL_9:

    goto LABEL_10;
  }
  v11 = 0;
LABEL_10:

  return v11;
}

- (void)widgetStackViewController:(id)a3 didActivateDataSource:(id)a4 fromUserInteraction:(BOOL)a5
{
  _BOOL4 v5;
  id v8;
  id v9;
  void *v10;
  void *v11;
  NSObject *v12;
  void *v13;
  NSObject *v14;
  int v15;
  id v16;
  __int16 v17;
  void *v18;
  uint64_t v19;

  v5 = a5;
  v19 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  objc_msgSend(v8, "widgetIcon");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = v10;
  if (v9 && (objc_msgSend(v10, "hasIconDataSource:", v9) & 1) == 0)
  {
    SBLogIcon();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      -[SBHIconManager widgetStackViewController:didActivateDataSource:fromUserInteraction:].cold.1((uint64_t)v9, v11, v14);

  }
  else
  {
    if (v5)
    {
      objc_msgSend(v11, "setStackChangeReason:", 1);
      objc_msgSend(v11, "setLastUserSelectedDataSource:", v9);
      SBLogIcon();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend(v11, "uniqueIdentifier");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        v15 = 138412546;
        v16 = v9;
        v17 = 2112;
        v18 = v13;
        _os_log_impl(&dword_1CFEF3000, v12, OS_LOG_TYPE_DEFAULT, "Activating data source due to user scroll and setting last user selected data source: %@ for: %@", (uint8_t *)&v15, 0x16u);

      }
    }
    else
    {
      objc_msgSend(v11, "setStackChangeReason:", 5);
      SBLogIcon();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(v15) = 0;
        _os_log_impl(&dword_1CFEF3000, v12, OS_LOG_TYPE_DEFAULT, "Activating data source due to other scroll view interaction", (uint8_t *)&v15, 2u);
      }
    }

    objc_msgSend(v11, "setActiveDataSource:", v9);
    -[SBHIconManager _updateCaptureOnlyBackgroundViewForCustomIconImageViewController:](self, "_updateCaptureOnlyBackgroundViewForCustomIconImageViewController:", v8);
  }

}

- (void)widgetStackViewController:(id)a3 didRemoveViewController:(id)a4
{
  void *v5;
  id v6;

  v6 = a4;
  -[SBHIconManager _effectiveWidgetMultiplexingManager](self, "_effectiveWidgetMultiplexingManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "discardMultiplexingViewController:", v6);

  -[NSMapTable removeObjectForKey:](self->_iconViewsForWidgetMultiplexingViewController, "removeObjectForKey:", v6);
}

- (void)widgetStackViewController:(id)a3 didFinishUsingBackgroundView:(id)a4
{
  void *v5;
  id v6;

  v6 = a4;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    -[SBHIconManager widgetBackgroundViewMap](self, "widgetBackgroundViewMap");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "recycleView:", v6);

  }
}

- (void)multiplexingWrapperViewControllerWillChangeGridAlignment:(id)a3
{
  id v4;

  v4 = a3;
  if ((objc_msgSend(v4, "isGridAligned") & 1) == 0)
    -[SBHIconManager _updateCaptureOnlyBackgroundViewForCustomIconImageViewController:](self, "_updateCaptureOnlyBackgroundViewForCustomIconImageViewController:", v4);

}

- (void)multiplexingWrapperViewControllerDidChangeGridAlignment:(id)a3
{
  id v4;

  v4 = a3;
  if ((objc_msgSend(v4, "isGridAligned") & 1) == 0)
    -[SBHIconManager _updateCaptureOnlyBackgroundViewForCustomIconImageViewController:](self, "_updateCaptureOnlyBackgroundViewForCustomIconImageViewController:", v4);

}

- (void)_updateCaptureOnlyBackgroundViewForCustomIconImageViewController:(id)a3
{
  char v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v10 = a3;
  v4 = objc_opt_respondsToSelector();
  v5 = v10;
  if ((v4 & 1) != 0)
  {
    objc_msgSend(v10, "icon");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBFolder indexPathForIcon:](self->_rootFolder, "indexPathForIcon:", v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager iconListViewForIndexPath:](self, "iconListViewForIndexPath:", v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v8, "containsIcon:", v6))
    {
      -[NSMapTable objectForKey:](self->_iconViewsForCustomIconImageViewController, "objectForKey:", v10);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      if (v9)
        objc_msgSend(v8, "_insertOrRemoveCaptureOnlyBackgroundViewIfNecessaryForIconView:", v9);

    }
    v5 = v10;
  }

}

- (void)_reduceTransparencyStatusDidChange:(id)a3
{
  BOOL IsReduceTransparencyEnabled;
  SBIconLabelImageCache *labelImageCache;
  _QWORD v6[4];
  BOOL v7;

  IsReduceTransparencyEnabled = UIAccessibilityIsReduceTransparencyEnabled();
  labelImageCache = self->_labelImageCache;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __53__SBHIconManager__reduceTransparencyStatusDidChange___block_invoke;
  v6[3] = &__block_descriptor_33_e36_B16__0__SBIconLabelImageParameters_8l;
  v7 = IsReduceTransparencyEnabled;
  -[SBIconLabelImageCache removeLabelImagesWithParametersPassingTest:](labelImageCache, "removeLabelImagesWithParametersPassingTest:", v6);
  -[SBHIconManager _precacheDataForRootIcons](self, "_precacheDataForRootIcons");
}

BOOL __53__SBHIconManager__reduceTransparencyStatusDidChange___block_invoke(uint64_t a1, void *a2)
{
  int v2;

  v2 = *(unsigned __int8 *)(a1 + 32);
  return v2 != objc_msgSend(a2, "isAccessibilityReduceTransparencyEnabled");
}

- (void)_sizeCategoryDidChange:(id)a3
{
  SBIconLabelImageCache *labelImageCache;
  id v5;
  _QWORD v6[5];

  -[SBHIconManager precachedContentSizeCategory](self, "precachedContentSizeCategory", a3);
  v5 = (id)objc_claimAutoreleasedReturnValue();
  labelImageCache = self->_labelImageCache;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __41__SBHIconManager__sizeCategoryDidChange___block_invoke;
  v6[3] = &unk_1E8D8CC60;
  v6[4] = v5;
  -[SBIconLabelImageCache removeLabelImagesWithParametersPassingTest:](labelImageCache, "removeLabelImagesWithParametersPassingTest:", v6);
  -[SBHIconManager _precacheLabelsForRootIcons](self, "_precacheLabelsForRootIcons");

}

uint64_t __41__SBHIconManager__sizeCategoryDidChange___block_invoke(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v3;

  objc_msgSend(a2, "contentSizeCategory");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = BSEqualObjects() ^ 1;

  return v3;
}

- (void)launchFolderFromIconView:(id)a3 withActions:(id)a4 modifierFlags:(int64_t)a5
{
  id v7;
  id v8;
  void *v9;
  void *v10;
  SBHIconLaunchContext *v11;
  void *v12;
  int v13;
  void *v14;
  void *v15;
  void *v16;
  NSObject *v17;
  void *v18;
  _QWORD v19[4];
  id v20;
  id v21;
  id v22;
  SBHIconLaunchContext *v23;
  id v24;
  id buf[2];

  v7 = a3;
  v8 = a4;
  objc_msgSend(v7, "icon");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "location");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_alloc_init(SBHIconLaunchContext);
  -[SBHIconLaunchContext setIconView:](v11, "setIconView:", v7);
  -[SBHIconLaunchContext setActions:](v11, "setActions:", v8);
  +[SBHIconViewContextMenuStateController sharedInstance](SBHIconViewContextMenuStateController, "sharedInstance");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = objc_msgSend(v12, "areAnyIconViewContextMenusShowing");

  if (!v13)
    goto LABEL_4;
  -[SBHIconManager previewInteractingIconView](self, "previewInteractingIconView");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "icon");
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  if (v9 != v15)
  {
    +[SBHIconViewContextMenuStateController sharedInstance](SBHIconViewContextMenuStateController, "sharedInstance");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "earlyTerminateAnyContextMenuAnimations");

LABEL_4:
    -[SBHIconManager pushExpandedIcon:location:context:forcePoppingPriorExpandedIcon:animated:completionHandler:](self, "pushExpandedIcon:location:context:forcePoppingPriorExpandedIcon:animated:completionHandler:", v9, v10, v11, 1, 1, 0);
    goto LABEL_5;
  }
  SBLogIcon();
  v17 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
  {
    LOWORD(buf[0]) = 0;
    _os_log_impl(&dword_1CFEF3000, v17, OS_LOG_TYPE_INFO, "Dismissing quick actions before opening folder", (uint8_t *)buf, 2u);
  }

  -[SBHIconManager setDismissingMenuForFolderPresentation:](self, "setDismissingMenuForFolderPresentation:", 1);
  objc_initWeak(buf, self);
  +[SBHIconViewContextMenuStateController sharedInstance](SBHIconViewContextMenuStateController, "sharedInstance");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v19[0] = MEMORY[0x1E0C809B0];
  v19[1] = 3221225472;
  v19[2] = __69__SBHIconManager_launchFolderFromIconView_withActions_modifierFlags___block_invoke;
  v19[3] = &unk_1E8D8CCB0;
  objc_copyWeak(&v24, buf);
  v20 = v9;
  v21 = v7;
  v22 = v10;
  v23 = v11;
  objc_msgSend(v18, "dismissAppIconForceTouchControllers:", v19);

  -[SBHIconManager dismissIconShareSheets](self, "dismissIconShareSheets");
  objc_destroyWeak(&v24);
  objc_destroyWeak(buf);
LABEL_5:

}

void __69__SBHIconManager_launchFolderFromIconView_withActions_modifierFlags___block_invoke(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  int v4;
  NSObject *v5;
  uint8_t v6[16];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  objc_msgSend(WeakRetained, "setDismissingMenuForFolderPresentation:", 0);
  if (objc_msgSend(WeakRetained, "isDisplayingIcon:", *(_QWORD *)(a1 + 32))
    && (objc_msgSend(*(id *)(a1 + 40), "icon"),
        v3 = (void *)objc_claimAutoreleasedReturnValue(),
        v4 = objc_msgSend(v3, "isEqual:", *(_QWORD *)(a1 + 32)),
        v3,
        v4))
  {
    objc_msgSend(WeakRetained, "pushExpandedIcon:location:context:forcePoppingPriorExpandedIcon:animated:completionHandler:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), 1, 1, 0);
  }
  else
  {
    SBLogIcon();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_1CFEF3000, v5, OS_LOG_TYPE_DEFAULT, "Skipping opening folder after dismissing quick actions", v6, 2u);
    }

  }
}

- (void)iconTapped:(id)a3
{
  -[SBHIconManager iconTapped:modifierFlags:](self, "iconTapped:modifierFlags:", a3, 0);
}

- (BOOL)icon:(id)a3 canReceiveGrabbedIcon:(id)a4
{
  id v6;
  void *v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  void *v12;

  v6 = a4;
  objc_msgSend(a3, "icon");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (-[SBHIconManager hasOpenFolder](self, "hasOpenFolder"))
  {
    if ((objc_msgSend(v6, "isWidgetIcon") & 1) != 0)
      v8 = 0;
    else
      v8 = -[SBHIconManager allowsNestedFolders](self, "allowsNestedFolders");
  }
  else if (objc_msgSend(v7, "isWidgetIcon") && objc_msgSend(v6, "isWidgetIcon"))
  {
    v9 = objc_msgSend(v7, "iconDataSourcesExcludingSuggestionsCount");
    v10 = objc_msgSend(v6, "iconDataSourcesExcludingSuggestionsCount") + v9;
    +[SBHHomeScreenDomain rootSettings](SBHHomeScreenDomain, "rootSettings");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "widgetSettings");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    LOBYTE(v10) = v10 > objc_msgSend(v12, "maximumWidgetsInAStack");

    v8 = v10 ^ 1;
  }
  else
  {
    v8 = 1;
  }

  return v8 & 1;
}

- (void)iconCloseBoxTapped:(id)a3
{
  id v4;
  NSObject *v5;
  void *v6;
  void *v7;
  void *v8;
  int v9;
  id v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  SBLogIcon();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v9 = 138412290;
    v10 = v4;
    _os_log_impl(&dword_1CFEF3000, v5, OS_LOG_TYPE_DEFAULT, "Icon close box tapped: %@", (uint8_t *)&v9, 0xCu);
  }

  -[SBHIconManager _noteUserIsInteractingWithIcons](self, "_noteUserIsInteractingWithIcons");
  -[SBHIconManager _restartEditingEndTimer](self, "_restartEditingEndTimer");
  if (-[SBHIconManager _shouldRespondToIconCloseBoxes](self, "_shouldRespondToIconCloseBoxes"))
  {
    -[SBHIconManager delegate](self, "delegate");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_opt_respondsToSelector() & 1) != 0)
      objc_msgSend(v6, "iconManager:iconCloseBoxTapped:", self, v4);
    objc_msgSend(v4, "icon");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "location");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_opt_respondsToSelector() & 1) != 0)
      objc_msgSend(v6, "iconManager:wantsUninstallForIcon:location:", self, v7, v8);

  }
}

- (BOOL)iconViewDisplaysCloseBox:(id)a3
{
  id v4;
  void *v5;
  char v6;

  v4 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v6 = objc_msgSend(v5, "iconManager:iconViewDisplaysCloseBox:", self, v4);
  else
    v6 = 1;

  return v6;
}

- (BOOL)iconViewDisplaysResizeHandle:(id)a3
{
  void *v3;
  char v4;

  objc_msgSend(a3, "icon");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isWidgetIcon");

  return v4;
}

- (BOOL)iconViewCanBecomeFocused:(id)a3
{
  void *v4;
  _BOOL4 v5;

  -[SBHIconManager delegate](self, "delegate", a3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0 && objc_msgSend(v4, "isFocusAllowedForIconManager:", self))
    v5 = !-[SBHIconManager isEditing](self, "isEditing");
  else
    LOBYTE(v5) = 0;

  return v5;
}

- (unint64_t)focusEffectTypeForIconView:(id)a3
{
  id v4;
  void *v5;
  unint64_t v6;

  v4 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v6 = objc_msgSend(v5, "iconManager:focusEffectTypeForIconView:", self, v4);
  else
    v6 = 0;

  return v6;
}

- (BOOL)iconView:(id)a3 editingModeGestureRecognizerDidFire:(id)a4
{
  id v5;
  _BOOL4 v6;
  int v7;

  v5 = a3;
  v6 = -[SBHIconManager isEditingAllowed](self, "isEditingAllowed");
  v7 = !v6 | -[SBHIconManager isEditing](self, "isEditing");
  if ((v7 & 1) != 0)
  {
    if (!v6 && -[SBHIconManager isEditingAllowedForIconView:](self, "isEditingAllowedForIconView:", v5))
      -[SBHIconManager setEditing:fromIconView:](self, "setEditing:fromIconView:", 1, v5);
  }
  else
  {
    -[SBHIconManager setEditing:](self, "setEditing:", 1);
  }

  return v7 ^ 1;
}

- (id)launchURLForIconView:(id)a3
{
  id v4;
  void *v5;
  void *v6;

  v4 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v5, "iconManager:launchURLForIconView:", self, v4);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v6 = 0;
  }

  return v6;
}

- (id)containerViewForPresentingContextMenuForIconView:(id)a3
{
  id v4;
  void *v5;
  void *v6;

  v4 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v5, "iconManager:containerViewForPresentingContextMenuForIconView:", self, v4);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v6 = 0;
  }

  return v6;
}

- (void)iconView:(id)a3 willUseContextMenuStyle:(id)a4
{
  id v6;
  void *v7;
  id v8;

  v8 = a3;
  v6 = a4;
  -[SBHIconManager delegate](self, "delegate");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v7, "iconManager:iconView:willUseContextMenuStyle:", self, v8, v6);

}

- (id)iconView:(id)a3 iconLabelAccessoryViewOfType:(int64_t)a4
{
  void *v5;
  void *v6;

  -[SBHIconManager homescreenIconLabelAccessoryViewMap](self, "homescreenIconLabelAccessoryViewMap", a3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "viewOfClass:", SBViewClassForIconLabelAccessoryType(a4));
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

- (void)iconView:(id)a3 willRemoveIconLabelAccessoryView:(id)a4
{
  id v5;
  id v6;

  v5 = a4;
  -[SBHIconManager homescreenIconLabelAccessoryViewMap](self, "homescreenIconLabelAccessoryViewMap");
  v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "recycleView:", v5);

}

- (int64_t)closeBoxTypeForIconView:(id)a3
{
  id v4;
  void *v5;
  int64_t v6;

  v4 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v6 = objc_msgSend(v5, "iconManager:closeBoxTypeForIconView:proposedType:", self, v4, 0);
  else
    v6 = 0;

  return v6;
}

- (id)supportedGridSizeClassesForIconView:(id)a3
{
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  void *v10;
  char isKindOfClass;
  id v12;
  void *v13;
  void *v14;
  SBHIconGridSizeClassSet *v15;
  void *v16;
  void *v17;
  void *v18;
  id v20;
  void *v21;
  id v22;
  void *v23;
  _QWORD v25[4];
  id v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _BYTE v36[128];
  uint64_t v37;

  v37 = *MEMORY[0x1E0C80C00];
  v20 = a3;
  objc_msgSend(v20, "icon");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v21, "isWidgetIcon"))
    goto LABEL_24;
  v22 = v21;
  objc_msgSend(v22, "iconDataSources");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager gridSizeClassDomain](self, "gridSizeClassDomain");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v34 = 0u;
  v35 = 0u;
  v32 = 0u;
  v33 = 0u;
  v4 = v3;
  v5 = 0;
  v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v32, v36, 16);
  if (v6)
  {
    v7 = *(_QWORD *)v33;
    while (1)
    {
      for (i = 0; i != v6; ++i)
      {
        if (*(_QWORD *)v33 != v7)
          objc_enumerationMutation(v4);
        v9 = *(void **)(*((_QWORD *)&v32 + 1) + 8 * i);
        objc_opt_self();
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        isKindOfClass = objc_opt_isKindOfClass();

        if ((isKindOfClass & 1) != 0)
        {
          v12 = v9;
          -[SBHIconManager widgetExtensionProvider](self, "widgetExtensionProvider");
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v13, "sbh_descriptorForWidgetIdentifiable:", v12);
          v14 = (void *)objc_claimAutoreleasedReturnValue();

          v15 = -[SBHIconGridSizeClassSet initWithCHSWidgetFamilyMask:inDomain:]([SBHIconGridSizeClassSet alloc], "initWithCHSWidgetFamilyMask:inDomain:", objc_msgSend(v14, "supportedFamilies"), v23);
          if (!v15)
            continue;
        }
        else
        {
          if ((objc_opt_respondsToSelector() & 1) == 0)
            continue;
          objc_msgSend(v9, "supportedGridSizeClassesForIcon:", v22);
          v15 = (SBHIconGridSizeClassSet *)objc_claimAutoreleasedReturnValue();
          if (!v15)
            continue;
        }
        if (v5)
          objc_msgSend(v5, "intersectGridSizeClassSet:", v15);
        else
          v5 = (void *)-[SBHIconGridSizeClassSet mutableCopy](v15, "mutableCopy");

      }
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v32, v36, 16);
      if (!v6)
        break;
    }
  }

  objc_msgSend(v20, "location");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v5, "containsGridSizeClass:", CFSTR("SBHIconGridSizeClassNewsLargeTall"))
    && SBIconLocationGroupContainsLocation(CFSTR("SBIconLocationGroupTodayView"), v16))
  {
    -[SBHIconManager rootFolder](self, "rootFolder");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v28 = 0;
    v29 = &v28;
    v30 = 0x2020000000;
    v31 = 0;
    v25[0] = MEMORY[0x1E0C809B0];
    v25[1] = 3221225472;
    v25[2] = __54__SBHIconManager_supportedGridSizeClassesForIconView___block_invoke;
    v25[3] = &unk_1E8D8CCD8;
    v26 = v22;
    v27 = &v28;
    objc_msgSend(v17, "enumerateTodayListIconsUsingBlock:", v25);
    if (*((_BYTE *)v29 + 24))
      objc_msgSend(v5, "removeGridSizeClass:", CFSTR("SBHIconGridSizeClassNewsLargeTall"));

    _Block_object_dispose(&v28, 8);
  }

  if (!v5)
  {
LABEL_24:
    -[SBHIconManager gridSizeClassDomain](self, "gridSizeClassDomain");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "allGridSizeClasses");
    v5 = (void *)objc_claimAutoreleasedReturnValue();

  }
  return v5;
}

void __54__SBHIconManager_supportedGridSizeClassesForIconView___block_invoke(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  __CFString *v6;
  __CFString *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;

  v12 = a2;
  objc_msgSend(v12, "gridSizeClass");
  v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
  v7 = v6;
  if (v6 != CFSTR("SBHIconGridSizeClassNewsLargeTall"))
  {
    objc_msgSend(v12, "gridSizeClass");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v8, "isEqualToString:", CFSTR("SBHIconGridSizeClassNewsLargeTall")) & 1) == 0)
    {

      v10 = v12;
      goto LABEL_8;
    }
    v9 = *(id *)(a1 + 32);

    v10 = v12;
    if (v9 == v12)
      goto LABEL_8;
    goto LABEL_6;
  }
  v11 = *(id *)(a1 + 32);

  v10 = v12;
  if (v11 != v12)
  {
LABEL_6:
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
    *a4 = 1;
  }
LABEL_8:

}

- (id)supportedIconGridSizeClassesForResizeOfIconView:(id)a3
{
  id v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;

  v4 = a3;
  -[SBHIconManager supportedGridSizeClassesForIconView:](self, "supportedGridSizeClassesForIconView:", v4);
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "icon");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v6, "isWidgetStackIcon"))
  {
    v5 = v5;
    v7 = v5;
  }
  else
  {
    v8 = (void *)MEMORY[0x1E0CF9688];
    objc_msgSend(v4, "icon");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "applicationBundleID");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "applicationWithBundleIdentifier:", v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    if (objc_msgSend(v11, "isLocked"))
    {
      +[SBHIconGridSizeClassSet gridSizeClassSetForDefaultGridSizeClass](SBHIconGridSizeClassSet, "gridSizeClassSetForDefaultGridSizeClass");
      v12 = (id)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      if (objc_msgSend(v6, "isWidgetIcon"))
      {
        v13 = v6;
        objc_msgSend(v13, "activeDataSource");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
        {
          objc_msgSend(v14, "containerBundleIdentifier");

        }
        -[SBHIconManager iconForReplacingWidgetIconWithAppIcon:](self, "iconForReplacingWidgetIconWithAppIcon:", v13);
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v15, "isApplicationIcon"))
        {
          objc_msgSend(v15, "application");
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          v17 = v16;
          if (v16 && (objc_msgSend(v16, "hasHiddenTag") & 1) == 0)
          {
            objc_msgSend(v5, "gridSizeClassSetByAddingGridSizeClass:", CFSTR("SBHIconGridSizeClassDefault"));
            v18 = objc_claimAutoreleasedReturnValue();

            v5 = (id)v18;
          }
        }
        else
        {
          v17 = 0;
        }

      }
      if (objc_msgSend(v6, "isApplicationIcon"))
      {
        -[SBHIconManager iconDataSourceForReplacingAppIconWithWidgetIcon:](self, "iconDataSourceForReplacingAppIconWithWidgetIcon:", v6);
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        if ((objc_opt_respondsToSelector() & 1) != 0)
          objc_msgSend(v19, "supportedGridSizeClassesForIcon:", v6);
        else
          +[SBHIconGridSizeClassSet gridSizeClassSetForDefaultGridSizeClass](SBHIconGridSizeClassSet, "gridSizeClassSetForDefaultGridSizeClass");
        v20 = objc_claimAutoreleasedReturnValue();

        v5 = (id)v20;
      }
      v12 = v5;
      v5 = v12;
    }
    v7 = v12;

  }
  return v7;
}

- (id)iconView:(id)a3 backgroundViewForComponentsOfType:(int64_t)a4
{
  id v6;
  void *v7;
  void *v8;
  void *v9;
  int v10;
  void *v11;

  v6 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) == 0
    || (objc_msgSend(v7, "iconManager:backgroundViewForComponentsOfType:forIconView:", self, a4, v6),
        (v8 = (void *)objc_claimAutoreleasedReturnValue()) == 0))
  {
    if ((objc_opt_respondsToSelector() & 1) == 0
      || (objc_msgSend(v7, "iconManager:backgroundViewForComponentsOfIconView:", self, v6),
          (v8 = (void *)objc_claimAutoreleasedReturnValue()) == 0))
    {
      objc_msgSend(v6, "icon");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = objc_msgSend(v9, "isWidgetIcon");

      v8 = 0;
      if (a4 == 4 && v10)
      {
        -[SBHIconManager widgetBackgroundViewMap](self, "widgetBackgroundViewMap");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v11, "viewOfClass:", objc_opt_class());
        v8 = (void *)objc_claimAutoreleasedReturnValue();

      }
    }
  }

  return v8;
}

- (id)screenSnapshotProviderForComponentsOfIconView:(id)a3
{
  id v4;
  void *v5;
  void *v6;

  v4 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v5, "iconManager:screenSnapshotProviderForComponentsOfIconView:", self, v4);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v6 = 0;
  }

  return v6;
}

- (id)accessibilityTintColorForIconView:(id)a3
{
  id v4;
  void *v5;
  void *v6;

  v4 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v5, "iconManager:accessibilityTintColorForIconView:", self, v4);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v6 = 0;
  }

  return v6;
}

- (void)iconViewDidBeginTrackingPossibleResize:(id)a3 context:(id)a4
{
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;

  v17 = a3;
  v6 = a4;
  objc_msgSend(v17, "icon");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v7, "isWidgetIcon"))
  {
    v8 = v7;
    objc_msgSend(v17, "nextSmallerGridSizeClassForResize");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    if (v9)
    {
      -[SBHIconManager preWarmCustomViewControllerForWidgetIcon:withGridSizeClass:](self, "preWarmCustomViewControllerForWidgetIcon:withGridSizeClass:", v8, v9);
      v10 = objc_claimAutoreleasedReturnValue();
      if (v10)
      {
        v11 = (void *)v10;
        objc_msgSend(v6, "setObject:forKey:", v10, CFSTR("smallerViewController"));

      }
    }
    objc_msgSend(v17, "nextLargerGridSizeClassForResize");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    if (v12)
    {
      -[SBHIconManager preWarmCustomViewControllerForWidgetIcon:withGridSizeClass:](self, "preWarmCustomViewControllerForWidgetIcon:withGridSizeClass:", v8, v12);
      v13 = objc_claimAutoreleasedReturnValue();
      if (v13)
      {
        v14 = (void *)v13;
        objc_msgSend(v6, "setObject:forKey:", v13, CFSTR("largerViewController"));

      }
    }
    -[SBHIconManager rootFolderController](self, "rootFolderController");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "disableAutoScrollForReason:", CFSTR("icon resize"));
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    if (v16)
      objc_msgSend(v6, "setObject:forKey:", v16, CFSTR("autoScrollAssertion"));

  }
}

- (id)preWarmCustomViewControllerForWidgetIcon:(id)a3 withGridSizeClass:(id)a4
{
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  int v11;
  void *v12;
  void *v13;

  v6 = a3;
  v7 = a4;
  objc_msgSend(v6, "gridSizeClass");
  v8 = objc_claimAutoreleasedReturnValue();
  if ((id)v8 == v7)
  {

    goto LABEL_5;
  }
  v9 = (void *)v8;
  objc_msgSend(v6, "gridSizeClass");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend(v10, "isEqualToString:", v7);

  if (v11)
  {
LABEL_5:
    -[SBHIconManager preWarmCustomViewControllerForWidgetIcon:](self, "preWarmCustomViewControllerForWidgetIcon:", v6);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    goto LABEL_6;
  }
  -[SBHIconManager makeResizedCopyOfWidgetIcon:withGridSizeClass:](self, "makeResizedCopyOfWidgetIcon:withGridSizeClass:", v6, v7);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager preWarmCustomViewControllerForWidgetIcon:](self, "preWarmCustomViewControllerForWidgetIcon:", v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

LABEL_6:
  return v13;
}

- (id)preWarmCustomViewControllerForWidgetIcon:(id)a3
{
  id v4;
  void *v5;
  void *v6;

  v4 = a3;
  objc_msgSend(v4, "activeDataSource");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager _multiplexingViewControllerForIcon:dataSource:location:withPriority:](self, "_multiplexingViewControllerForIcon:dataSource:location:withPriority:", v4, v5, CFSTR("SBIconLocationRoot"), 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "beginAppearanceTransition:animated:", 1, 0);
  objc_msgSend(v6, "endAppearanceTransition");
  return v6;
}

- (id)_customViewControllerForResizingIcon:(id)a3 gridSizeClass:(id)a4 dataSource:(id)a5 location:(id)a6
{
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  char isKindOfClass;
  void *v16;
  char v17;
  SBHLeafIconCustomImageViewController *v18;
  SBHLeafIconCustomImageViewController *v20;
  void *v21;

  v10 = a3;
  v11 = a4;
  v12 = a5;
  v13 = a6;
  objc_opt_self();
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  isKindOfClass = objc_opt_isKindOfClass();

  if ((isKindOfClass & 1) != 0
    || (objc_opt_self(),
        v16 = (void *)objc_claimAutoreleasedReturnValue(),
        v17 = objc_opt_isKindOfClass(),
        v16,
        (v17 & 1) != 0))
  {
    -[SBHIconManager _makeCustomViewControllerForWidgetIcon:dataSource:location:gridSizeClass:](self, "_makeCustomViewControllerForWidgetIcon:dataSource:location:gridSizeClass:", v10, v12, v13, v11);
    v18 = (SBHLeafIconCustomImageViewController *)objc_claimAutoreleasedReturnValue();
  }
  else if (v11 && !objc_msgSend(v11, "isEqualToString:", CFSTR("SBHIconGridSizeClassDefault")))
  {
    v18 = 0;
  }
  else
  {
    v20 = [SBHLeafIconCustomImageViewController alloc];
    -[SBHIconManager iconImageCache](self, "iconImageCache");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = -[SBHLeafIconCustomImageViewController initWithIcon:iconImageCache:](v20, "initWithIcon:iconImageCache:", v10, v21);

  }
  return v18;
}

- (void)iconView:(id)a3 wantsResizeToGridSizeClass:(id)a4 completionHandler:(id)a5
{
  void (**v8)(_QWORD);
  void *v9;
  id v10;

  v10 = a4;
  v8 = (void (**)(_QWORD))a5;
  objc_msgSend(a3, "icon");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v9, "isWidgetIcon"))
  {
    -[SBHIconManager changeSizeOfWidgetIcon:toSizeClass:animated:completionHandler:](self, "changeSizeOfWidgetIcon:toSizeClass:animated:completionHandler:", v9, v10, 1, v8);
    -[SBHIconManager _restartEditingEndTimer](self, "_restartEditingEndTimer");
  }
  else if (v8)
  {
    v8[2](v8);
  }

}

- (void)iconViewDidEndTrackingPossibleResize:(id)a3 context:(id)a4
{
  id v4;
  id v5;

  v4 = a4;
  objc_msgSend(v4, "objectForKey:", CFSTR("autoScrollAssertion"));
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "invalidate");
  objc_msgSend(v4, "removeObjectForKey:", CFSTR("autoScrollAssertion"));

}

- (id)resizeGestureHandlerForIconView:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  SBWidgetIconResizeGestureHandler *v10;
  uint64_t v11;
  SBWidgetIconResizeGestureHandler *i;
  void *v13;
  uint64_t v14;
  void *v15;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  objc_msgSend(v4, "icon");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v5, "isWidgetIcon"))
  {
    objc_msgSend(v5, "activeDataSource");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (v6)
    {
      -[SBHIconManager rootFolderController](self, "rootFolderController");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "rootFolderView");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "iconListViewDisplayingIconView:", v4);
      v9 = (void *)objc_claimAutoreleasedReturnValue();

      if (v9)
      {
LABEL_16:
        -[SBHIconManager _discardEndEditingTimerAndDontResetUntilReasonIsRemoved:](self, "_discardEndEditingTimerAndDontResetUntilReasonIsRemoved:", CFSTR("widget resize"));
        -[SBHIconManager widgetMetricsProvider](self, "widgetMetricsProvider");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        v10 = -[SBWidgetIconResizeGestureHandler initWithIconView:iconListView:widgetMetricsProvider:]([SBWidgetIconResizeGestureHandler alloc], "initWithIconView:iconListView:widgetMetricsProvider:", v4, v9, v15);
        -[SBWidgetIconResizeGestureHandler setDelegate:](v10, "setDelegate:", self);

      }
      else
      {
        v19 = 0u;
        v20 = 0u;
        v17 = 0u;
        v18 = 0u;
        -[SBHIconManager todayViewControllers](self, "todayViewControllers", 0);
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        v10 = (SBWidgetIconResizeGestureHandler *)objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
        if (v10)
        {
          v11 = *(_QWORD *)v18;
          while (2)
          {
            for (i = 0; i != v10; i = (SBWidgetIconResizeGestureHandler *)((char *)i + 1))
            {
              if (*(_QWORD *)v18 != v11)
                objc_enumerationMutation(v9);
              v13 = *(void **)(*((_QWORD *)&v17 + 1) + 8 * (_QWORD)i);
              if ((objc_msgSend(v13, "isDisplayingIconView:", v4) & 1) != 0)
              {
                objc_msgSend(v13, "listView");
                v14 = objc_claimAutoreleasedReturnValue();

                v9 = (void *)v14;
                goto LABEL_16;
              }
            }
            v10 = (SBWidgetIconResizeGestureHandler *)objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
            if (v10)
              continue;
            break;
          }
        }
      }

    }
    else
    {
      v10 = 0;
    }

  }
  else
  {
    v10 = 0;
  }

  return v10;
}

- (BOOL)iconViewShouldBeginShortcutsPresentation:(id)a3
{
  id v4;
  void *v5;
  BOOL v6;
  void *v8;
  void *v9;
  int v10;
  id WeakRetained;

  v4 = a3;
  -[SBHIconManager reasonToDisallowInteractionOnIconView:](self, "reasonToDisallowInteractionOnIconView:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5
    || (-[SBHIconManager previewInteractingIconView](self, "previewInteractingIconView"),
        (v5 = (void *)objc_claimAutoreleasedReturnValue()) != 0))
  {

  }
  else if (!-[SBHIconManager isEditing](self, "isEditing"))
  {
    -[SBHIconManager currentTransitionAnimator](self, "currentTransitionAnimator");
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v8)
    {
      objc_msgSend(v4, "icon");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = objc_msgSend(v9, "isFolderIcon");

      if (!v10
        || (WeakRetained = objc_loadWeakRetained((id *)&self->_pendingFolderIconToOpen),
            WeakRetained,
            !WeakRetained))
      {
        -[SBHIconManager _setupApplicationShortcutItemsForPresentation:](self, "_setupApplicationShortcutItemsForPresentation:", v4);
        v6 = 1;
        goto LABEL_5;
      }
    }
  }
  v6 = 0;
LABEL_5:

  return v6;
}

- (void)_setupApplicationShortcutItemsForPresentation:(id)a3
{
  void *v4;
  void *v5;
  id v6;

  v6 = a3;
  -[SBHIconManager setPreviewInteractingIconView:](self, "setPreviewInteractingIconView:");
  -[SBHIconManager delegate](self, "delegate");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v4, "iconManager:applicationShortcutItemsForIconView:", self, v6);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v5 = 0;
  }
  objc_msgSend(v6, "setApplicationShortcutItems:", v5);

}

- (void)iconViewShortcutsPresentationWillFinish:(id)a3
{
  -[SBHIconManager setPreviewInteractingIconView:](self, "setPreviewInteractingIconView:", 0);
}

- (void)iconViewShortcutsPresentationDidCancel:(id)a3
{
  -[SBHIconManager setPreviewInteractingIconView:](self, "setPreviewInteractingIconView:", 0);
}

- (id)iconView:(id)a3 applicationShortcutItemsWithProposedItems:(id)a4
{
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, void *);
  void *v16;
  SBHIconManager *v17;
  id v18;

  v6 = a4;
  objc_msgSend(a3, "location");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)MEMORY[0x1E0CB3880];
  v13 = MEMORY[0x1E0C809B0];
  v14 = 3221225472;
  v15 = __69__SBHIconManager_iconView_applicationShortcutItemsWithProposedItems___block_invoke;
  v16 = &unk_1E8D8CD00;
  v17 = self;
  v18 = v7;
  v9 = v7;
  objc_msgSend(v8, "predicateWithBlock:", &v13);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "filteredArrayUsingPredicate:", v10, v13, v14, v15, v16, v17);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

uint64_t __69__SBHIconManager_iconView_applicationShortcutItemsWithProposedItems___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  int v5;
  uint64_t v6;
  void *v7;
  int v8;

  v3 = a2;
  objc_msgSend(v3, "type");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "isEqualToString:", CFSTR("com.apple.springboardhome.application-shortcut-item.rearrange-icons"));

  if (!v5)
  {
LABEL_6:
    objc_msgSend(v3, "type");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "isEqualToString:", CFSTR("com.apple.springboardhome.application-shortcut-item.delete-app"));

    if (!v8 || objc_msgSend(*(id *)(a1 + 32), "isRootFolderContentVisible"))
    {
      v6 = 1;
      goto LABEL_10;
    }
LABEL_9:
    v6 = 0;
    goto LABEL_10;
  }
  if (!objc_msgSend(*(id *)(a1 + 32), "isRootFolderContentVisible"))
    goto LABEL_9;
  if (!SBIconLocationGroupContainsLocation(CFSTR("SBIconLocationGroupTodayView"), *(void **)(a1 + 40)))
  {
    if ((SBIconLocationGroupContainsLocation(CFSTR("SBIconLocationGroupAppLibrary"), *(void **)(a1 + 40)) & 1) != 0)
      goto LABEL_9;
    goto LABEL_6;
  }
  v6 = objc_msgSend(*(id *)(a1 + 32), "isOverlayCoverSheetTodayViewVisible") ^ 1;
LABEL_10:

  return v6;
}

- (BOOL)iconView:(id)a3 shouldActivateApplicationShortcutItem:(id)a4 atIndex:(unint64_t)a5
{
  id v8;
  id v9;
  void *v10;
  id WeakRetained;
  BOOL v12;

  v8 = a3;
  v9 = a4;
  -[SBHIconManager delegate](self, "delegate");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0
    && !objc_msgSend(v10, "iconManager:shouldActivateApplicationShortcutItem:atIndex:forIconView:", self, v9, a5, v8)|| (WeakRetained = objc_loadWeakRetained((id *)&self->_pendingFolderIconToOpen), WeakRetained, WeakRetained))
  {
    v12 = 0;
  }
  else
  {
    -[SBHIconManager setPreviewInteractingIconView:](self, "setPreviewInteractingIconView:", 0);
    v12 = 1;
  }

  return v12;
}

- (unint64_t)supportedMultitaskingShortcutActionsForIconView:(id)a3
{
  id v4;
  void *v5;
  unint64_t v6;

  v4 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v6 = objc_msgSend(v5, "iconManager:supportedMultitaskingShortcutActionsForIconView:", self, v4);
  else
    v6 = 0;

  return v6;
}

- (BOOL)iconView:(id)a3 supportsConfigurationForDataSource:(id)a4
{
  id v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v20;
  void *v21;
  _QWORD v22[4];
  id v23;

  v6 = a3;
  v7 = a4;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v8 = v7;
    if (v8)
    {
      -[SBHIconManager widgetExtensionProvider](self, "widgetExtensionProvider");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "sbh_descriptors");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v22[0] = MEMORY[0x1E0C809B0];
      v22[1] = 3221225472;
      v22[2] = __62__SBHIconManager_iconView_supportsConfigurationForDataSource___block_invoke;
      v22[3] = &unk_1E8D8CD28;
      v11 = v8;
      v23 = v11;
      objc_msgSend(v10, "bs_firstObjectPassingTest:", v22);
      v12 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v12, "intentType");
      v13 = (void *)objc_claimAutoreleasedReturnValue();

      if (v13)
      {
        objc_msgSend(v6, "icon");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v14, "isWidgetIcon"))
        {
          objc_msgSend(v6, "icon");
          v15 = (void *)objc_claimAutoreleasedReturnValue();
        }
        else
        {
          v15 = 0;
        }

        -[SBHIconManager _intentForWidget:ofIcon:creatingIfNecessary:](self, "_intentForWidget:ofIcon:creatingIfNecessary:", v11, v15, 0);
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          LOBYTE(self) = 1;
        }
        else
        {
          objc_msgSend(v16, "_codableDescription");
          self = (SBHIconManager *)objc_claimAutoreleasedReturnValue();
          -[SBHIconManager attributes](self, "attributes");
          v21 = v9;
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v17, "allValues");
          v20 = v15;
          v18 = (void *)objc_claimAutoreleasedReturnValue();

          v9 = v21;
          LOBYTE(self) = objc_msgSend(v18, "bs_containsObjectPassingTest:", &__block_literal_global_645);

          v15 = v20;
        }

      }
      if (v13)
      {

        goto LABEL_21;
      }
    }

LABEL_20:
    LOBYTE(self) = 0;
    goto LABEL_21;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    LOBYTE(self) = 1;
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
      goto LABEL_20;
    LOBYTE(self) = _os_feature_enabled_impl();
  }
LABEL_21:

  return self & 1;
}

uint64_t __62__SBHIconManager_iconView_supportsConfigurationForDataSource___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;

  v3 = a2;
  objc_msgSend(v3, "extensionBundleIdentifier");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "extensionBundleIdentifier");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v4, "isEqualToString:", v5))
  {
    objc_msgSend(v3, "kind");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "kind");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v6, "isEqualToString:", v7);

  }
  else
  {
    v8 = 0;
  }

  return v8;
}

uint64_t __62__SBHIconManager_iconView_supportsConfigurationForDataSource___block_invoke_2(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "isConfigurable");
}

- (id)iconView:(id)a3 configurationInteractionForDataSource:(id)a4
{
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  void *v14;
  SBHSpecialWidgetDescriptor *v15;
  uint64_t v16;
  id v17;
  void *v18;
  SBHSpecialWidgetDescriptor *v19;
  id v20;
  SBHWidgetConfigurationInteraction *v21;
  void *v22;
  void *v23;
  SBHWidgetConfigurationInteraction *v24;
  NSObject *v25;
  NSObject *v26;

  v6 = a4;
  objc_msgSend(a3, "icon");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_opt_class();
  v9 = v7;
  if (v8)
  {
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v10 = v9;
    else
      v10 = 0;
  }
  else
  {
    v10 = 0;
  }
  v11 = v10;

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v12 = objc_opt_class();
    v13 = v6;
    if (v12)
    {
      if ((objc_opt_isKindOfClass() & 1) != 0)
        v14 = v13;
      else
        v14 = 0;
    }
    else
    {
      v14 = 0;
    }
    v17 = v14;

    -[SBHIconManager widgetExtensionProvider](self, "widgetExtensionProvider");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "sbh_descriptorForWidgetIdentifiable:", v17);
    v19 = (SBHSpecialWidgetDescriptor *)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager _intentForWidget:ofIcon:creatingIfNecessary:](self, "_intentForWidget:ofIcon:creatingIfNecessary:", v17, v11, 0);
    v20 = (id)objc_claimAutoreleasedReturnValue();

    if (!v19)
      goto LABEL_26;
    goto LABEL_21;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v15 = [SBHSpecialWidgetDescriptor alloc];
    v16 = 2;
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v15 = [SBHSpecialWidgetDescriptor alloc];
      v16 = 6;
    }
    else
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0)
      {
        SBLogIcon();
        v25 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
          -[SBHIconManager iconView:configurationInteractionForDataSource:].cold.2();

        v20 = 0;
        v19 = 0;
        goto LABEL_26;
      }
      v15 = [SBHSpecialWidgetDescriptor alloc];
      v16 = 3;
    }
  }
  v19 = -[SBHSpecialWidgetDescriptor initWithType:](v15, "initWithType:", v16);
  v20 = -[SBHIconManager _newIntentForDataSource:inIcon:](self, "_newIntentForDataSource:inIcon:", v6, v11);
  if (v19)
  {
LABEL_21:
    if (v20)
    {
      v21 = [SBHWidgetConfigurationInteraction alloc];
      objc_msgSend(v11, "gridSizeClass");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      -[SBHIconManager gridSizeClassDomain](self, "gridSizeClassDomain");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      v24 = -[SBHWidgetConfigurationInteraction initWithDescriptor:gridSizeClass:gridSizeClassDomain:intent:configuredDataSource:](v21, "initWithDescriptor:gridSizeClass:gridSizeClassDomain:intent:configuredDataSource:", v19, v22, v23, v20, v6);

      goto LABEL_29;
    }
  }
LABEL_26:
  SBLogIcon();
  v26 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
    -[SBHIconManager iconView:configurationInteractionForDataSource:].cold.1();

  v24 = 0;
LABEL_29:

  return v24;
}

- (id)stackConfigurationInteractionForIconView:(id)a3
{
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  _BOOL4 v11;
  SBHStackConfigurationInteraction *v12;
  id v13;
  SBHStackConfigurationInteraction *v14;
  void *v15;
  uint64_t v16;
  char v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  uint64_t v22;
  id v23;
  void *v24;
  void *v25;
  uint64_t v26;
  id v27;
  void *v28;
  void *v30;
  void *v31;
  SBHStackConfigurationInteraction *v32;

  v4 = a3;
  objc_msgSend(v4, "icon");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_opt_class();
  v7 = v5;
  if (v6)
  {
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v8 = v7;
    else
      v8 = 0;
  }
  else
  {
    v8 = 0;
  }
  v9 = v8;

  -[SBHIconManager delegate](self, "delegate");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = -[SBHIconManager _alwaysPresentStackConfigurationSheet](self, "_alwaysPresentStackConfigurationSheet");
  if ((objc_msgSend(v9, "isWidgetStackIcon") & 1) != 0 || v11)
  {
    -[SBHIconManager _stackConfigurationForStackIcon:](self, "_stackConfigurationForStackIcon:", v9);
    v12 = (SBHStackConfigurationInteraction *)objc_claimAutoreleasedReturnValue();
    if (v12)
    {
      -[SBHIconManager rootFolderController](self, "rootFolderController");
      v13 = (id)objc_claimAutoreleasedReturnValue();
      v14 = [SBHStackConfigurationInteraction alloc];
      -[SBHIconManager listLayoutProvider](self, "listLayoutProvider");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v32 = v12;
      v12 = -[SBHStackConfigurationInteraction initWithConfiguration:iconView:iconViewProvider:listLayoutProvider:](v14, "initWithConfiguration:iconView:iconViewProvider:listLayoutProvider:", v12, v4, self, v15);

      -[SBHIconManager iconView:containerViewControllerForConfigurationInteraction:](self, "iconView:containerViewControllerForConfigurationInteraction:", v4, v12);
      v16 = objc_claimAutoreleasedReturnValue();
      if ((objc_opt_respondsToSelector() & 1) == 0
        || (v17 = objc_opt_respondsToSelector(), v18 = (void *)v16, (v17 & 1) == 0))
      {
        v18 = v13;
      }
      v19 = v18;
      -[SBHStackConfigurationInteraction setPresenter:](v12, "setPresenter:", v19);
      objc_msgSend(v4, "window");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      v21 = v20;
      if (v20)
        objc_msgSend(v20, "interfaceOrientation");
      if (v19 == v13)
        objc_msgSend(v13, "showsAddWidgetButtonWhileEditingAllowedOrientations");
      v22 = SBFInterfaceOrientationMaskContainsInterfaceOrientation();
      v31 = (void *)v16;
      if ((objc_opt_respondsToSelector() & 1) != 0)
      {
        objc_msgSend(v10, "iconManager:stackConfigurationInteractionDelegateForIconView:", self, v4);
        v23 = (id)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v23 = v13;
      }
      v24 = v23;
      -[SBHStackConfigurationInteraction setStackConfigurationDelegate:](v12, "setStackConfigurationDelegate:", v23);
      v30 = v19;
      v25 = v13;
      v26 = v22;
      if ((objc_opt_respondsToSelector() & 1) != 0)
      {
        objc_msgSend(v10, "iconManager:stackConfigurationViewControllerAppearanceDelegateForIconView:", self, v4);
        v27 = (id)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v27 = v25;
      }
      v28 = v27;
      -[SBHStackConfigurationInteraction setAppearanceDelegate:](v12, "setAppearanceDelegate:", v27);
      -[SBHStackConfigurationInteraction setShowsAddButton:](v12, "setShowsAddButton:", v26);
      -[SBHStackConfigurationInteraction setShowsDoneButton:](v12, "setShowsDoneButton:", -[SBHIconManager showsDoneButtonWhileEditing](self, "showsDoneButtonWhileEditing"));

    }
  }
  else
  {
    v12 = 0;
  }

  return v12;
}

- (id)iconView:(id)a3 containerViewControllerForConfigurationInteraction:(id)a4
{
  id v5;
  void *v6;
  void *v7;

  v5 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v6, "iconManager:containerViewControllerForConfigurationOfIconView:", self, v5);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v7 = 0;
  }

  return v7;
}

- (id)iconView:(id)a3 containerViewForConfigurationInteraction:(id)a4
{
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;

  v6 = a4;
  v7 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v8, "iconManager:containerViewForConfigurationOfIconView:", self, v7);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    -[SBHIconManager iconView:containerViewControllerForConfigurationInteraction:](self, "iconView:containerViewControllerForConfigurationInteraction:", v7, v6);
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v10, "view");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = v10;
  }

  return v9;
}

- (CGRect)iconView:(id)a3 contentBoundingRectForConfigurationInteraction:(id)a4
{
  id v6;
  id v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  CGRect result;

  v6 = a4;
  v7 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v8, "iconManager:contentBoundingRectForConfigurationOfIconView:", self, v7);
    v10 = v9;
    v12 = v11;
    v14 = v13;
    v16 = v15;
  }
  else
  {
    -[SBHIconManager iconView:containerViewForConfigurationInteraction:](self, "iconView:containerViewForConfigurationInteraction:", v7, v6);
    v17 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v17, "bounds");
    v10 = v18;
    v12 = v19;
    v14 = v20;
    v16 = v21;
    v7 = v17;
  }

  v22 = v10;
  v23 = v12;
  v24 = v14;
  v25 = v16;
  result.size.height = v25;
  result.size.width = v24;
  result.origin.y = v23;
  result.origin.x = v22;
  return result;
}

- (int64_t)iconView:(id)a3 userInterfaceStyleForConfigurationInteraction:(id)a4
{
  id v5;
  void *v6;
  int64_t v7;
  void *v8;

  v5 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    v7 = objc_msgSend(v6, "iconManager:userInterfaceStyleForConfigurationOfIconView:", self, v5);
  }
  else
  {
    objc_msgSend(v5, "traitCollection");
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    v7 = objc_msgSend(v8, "userInterfaceStyle");
    v5 = v8;
  }

  return v7;
}

- (id)iconView:(id)a3 homeScreenContentViewForConfigurationInteraction:(id)a4
{
  id v5;
  void *v6;
  void *v7;
  void *v8;

  v5 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v6, "iconManager:homeScreenContentViewForConfigurationOfIconView:", self, v5);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    -[SBHIconManager rootFolderController](self, "rootFolderController");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "view");
    v7 = (void *)objc_claimAutoreleasedReturnValue();

  }
  return v7;
}

- (void)iconView:(id)a3 configurationDidUpdateWithInteraction:(id)a4
{
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t i;
  void *v25;
  NSMutableArray *v26;
  NSMutableArray *movedStackConfigDataSources;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t j;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  NSMutableArray *v36;
  void *v37;
  NSMutableArray *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  id v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  id v48;
  id v49;
  void *v50;
  id v51;
  id obj;
  void *v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  void *v62;
  _BYTE v63[128];
  _BYTE v64[128];
  uint64_t v65;

  v65 = *MEMORY[0x1E0C80C00];
  v6 = a4;
  objc_msgSend(a3, "icon");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v7, "isLeafIcon"))
  {
    v8 = v7;
    if (objc_msgSend(v8, "isWidgetIcon"))
      v9 = v8;
    else
      v9 = 0;
    v10 = v9;
    objc_msgSend(v6, "configuration");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = objc_opt_class();
    v13 = v11;
    if (v12)
    {
      if ((objc_opt_isKindOfClass() & 1) != 0)
        v14 = v13;
      else
        v14 = 0;
    }
    else
    {
      v14 = 0;
    }
    v15 = v14;

    if (v15)
    {
      v49 = v8;
      v50 = v7;
      v51 = v6;
      objc_msgSend(v10, "setAllowsSuggestions:", objc_msgSend(v15, "allowsSuggestions"));
      objc_msgSend(v10, "setAllowsExternalSuggestions:", objc_msgSend(v15, "allowsExternalSuggestions"));
      v48 = v15;
      objc_msgSend(v15, "dataSources");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "iconDataSources");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "differenceFromArray:", v17);
      v18 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v18, "insertions");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v19, "bs_mapNoNulls:", &__block_literal_global_670);
      v53 = (void *)objc_claimAutoreleasedReturnValue();

      v60 = 0u;
      v61 = 0u;
      v58 = 0u;
      v59 = 0u;
      objc_msgSend(v18, "removals");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      v21 = objc_msgSend(v20, "countByEnumeratingWithState:objects:count:", &v58, v64, 16);
      if (v21)
      {
        v22 = v21;
        v23 = *(_QWORD *)v59;
        do
        {
          for (i = 0; i != v22; ++i)
          {
            if (*(_QWORD *)v59 != v23)
              objc_enumerationMutation(v20);
            objc_msgSend(*(id *)(*((_QWORD *)&v58 + 1) + 8 * i), "object");
            v25 = (void *)objc_claimAutoreleasedReturnValue();
            if (objc_msgSend(v53, "containsObject:", v25))
            {
              v26 = self->_movedStackConfigDataSources;
              if (!v26)
                v26 = (NSMutableArray *)objc_alloc_init(MEMORY[0x1E0C99DE8]);
              -[NSMutableArray addObject:](v26, "addObject:", v25);
              movedStackConfigDataSources = self->_movedStackConfigDataSources;
              self->_movedStackConfigDataSources = v26;

            }
            objc_msgSend(v10, "removeIconDataSource:", v25);

          }
          v22 = objc_msgSend(v20, "countByEnumeratingWithState:objects:count:", &v58, v64, 16);
        }
        while (v22);
      }

      v56 = 0u;
      v57 = 0u;
      v54 = 0u;
      v55 = 0u;
      v47 = v18;
      objc_msgSend(v18, "insertions");
      obj = (id)objc_claimAutoreleasedReturnValue();
      v28 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v54, v63, 16);
      if (v28)
      {
        v29 = v28;
        v30 = *(_QWORD *)v55;
        do
        {
          for (j = 0; j != v29; ++j)
          {
            if (*(_QWORD *)v55 != v30)
              objc_enumerationMutation(obj);
            v32 = *(void **)(*((_QWORD *)&v54 + 1) + 8 * j);
            objc_msgSend(v32, "object");
            v33 = (void *)objc_claimAutoreleasedReturnValue();
            v62 = v33;
            objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v62, 1);
            v34 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(MEMORY[0x1E0CB36B8], "indexSetWithIndex:", objc_msgSend(v32, "index"));
            v35 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "insertIconDataSources:atIndexes:", v34, v35);

            v36 = self->_movedStackConfigDataSources;
            objc_msgSend(v32, "object");
            v37 = (void *)objc_claimAutoreleasedReturnValue();
            LODWORD(v36) = -[NSMutableArray containsObject:](v36, "containsObject:", v37);

            if ((_DWORD)v36)
            {
              v38 = self->_movedStackConfigDataSources;
              objc_msgSend(v32, "object");
              v39 = (void *)objc_claimAutoreleasedReturnValue();
              -[NSMutableArray removeObject:](v38, "removeObject:", v39);

            }
          }
          v29 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v54, v63, 16);
        }
        while (v29);
      }

      -[SBHIconManager rootFolder](self, "rootFolder");
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v40, "markIconStateDirty");

      v7 = v50;
      v6 = v51;
      v15 = v48;
      v8 = v49;
    }
    else
    {
      objc_msgSend(v6, "configuredDataSource");
      v41 = (void *)objc_claimAutoreleasedReturnValue();
      v42 = v41;
      if (v41)
      {
        v43 = v41;
      }
      else
      {
        objc_msgSend(v8, "activeDataSource");
        v43 = (id)objc_claimAutoreleasedReturnValue();
      }
      v44 = v43;

      objc_msgSend(v6, "configuration");
      v45 = (void *)objc_claimAutoreleasedReturnValue();
      -[SBHIconManager _handleUpdatedConfiguration:forDataSource:ofIcon:archiving:](self, "_handleUpdatedConfiguration:forDataSource:ofIcon:archiving:", v45, v44, v8, 1);

    }
    -[SBHIconManager usageMonitor](self, "usageMonitor");
    v46 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v46, "noteUserConfiguredIcon:", v8);

  }
}

uint64_t __65__SBHIconManager_iconView_configurationDidUpdateWithInteraction___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "object");
}

- (void)_handleUpdatedConfiguration:(id)a3 forDataSource:(id)a4 ofIcon:(id)a5 archiving:(BOOL)a6
{
  _BOOL4 v6;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  NSObject *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  __objc2_class *v27;
  id v28;
  NSObject *v29;
  void *v30;
  _BOOL4 v31;
  SBHIconManager *v32;
  id v33;
  uint8_t buf[4];
  id v35;
  __int16 v36;
  void *v37;
  __int16 v38;
  void *v39;
  __int16 v40;
  void *v41;
  uint64_t v42;

  v6 = a6;
  v42 = *MEMORY[0x1E0C80C00];
  v10 = a3;
  v11 = a4;
  v12 = a5;
  v13 = v11;
  if (objc_msgSend(v12, "isWidgetIcon"))
    v14 = v12;
  else
    v14 = 0;
  v15 = v14;
  v16 = objc_opt_class();
  v17 = v13;
  if (v16)
  {
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v18 = v17;
    else
      v18 = 0;
  }
  else
  {
    v18 = 0;
  }
  v19 = v18;

  if (!v19)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v27 = SBHShortcutsFolderElement;
    }
    else
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        v27 = SBHShortcutsSingleElement;
      }
      else
      {
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0)
        {
          v20 = 0;
          if (!v6)
            goto LABEL_25;
          goto LABEL_21;
        }
        v27 = SBHFilesElement;
      }
    }
    v20 = objc_alloc_init(v27);
    if (!v6)
      goto LABEL_25;
LABEL_21:
    if (v20)
      v28 = v20;
    else
      v28 = v17;
    -[SBHIconManager _archiveConfiguration:forDataSource:ofIcon:](self, "_archiveConfiguration:forDataSource:ofIcon:", v10, v28, v12);
    goto LABEL_25;
  }
  v20 = (id)objc_msgSend(v19, "copyWithUniqueIdentifier");
  SBLogWidgets();
  v21 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend(v19, "extensionBundleIdentifier");
    v31 = v6;
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "uniqueIdentifier");
    v32 = self;
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "extensionBundleIdentifier");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "uniqueIdentifier");
    v33 = v15;
    v25 = v10;
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138544130;
    v35 = v22;
    v36 = 2114;
    v37 = v23;
    v38 = 2114;
    v39 = v24;
    v40 = 2114;
    v41 = v26;
    _os_log_impl(&dword_1CFEF3000, v21, OS_LOG_TYPE_DEFAULT, "Widget %{public}@ %{public}@ created to replace widget %{public}@ %{public}@.", buf, 0x2Au);

    v10 = v25;
    v15 = v33;

    self = v32;
    v6 = v31;
  }

  if (v6)
    goto LABEL_21;
LABEL_25:
  if (v20)
  {
    objc_msgSend(v15, "replaceIconDataSource:withIconDataSource:", v17, v20);
    SBLogIcon();
    v29 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v15, "uniqueIdentifier");
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v35 = v20;
      v36 = 2112;
      v37 = v30;
      _os_log_impl(&dword_1CFEF3000, v29, OS_LOG_TYPE_DEFAULT, "Setting last user selected data source due to configuration update: %@ for: %@", buf, 0x16u);

    }
    objc_msgSend(v15, "setLastUserSelectedDataSource:", v20);
  }

}

- (void)_archiveConfiguration:(id)a3 forDataSource:(id)a4 ofIcon:(id)a5
{
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  NSObject *v19;
  NSMutableDictionary *archivedWidgetIntents;
  NSMutableDictionary *v21;
  NSMutableDictionary *v22;
  NSMutableDictionary *widgetIntents;
  NSMutableDictionary *v24;
  NSMutableDictionary *v25;
  id v26;

  v8 = a3;
  v9 = a4;
  v10 = a5;
  v11 = objc_opt_class();
  v12 = v8;
  if (v11)
  {
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v13 = v12;
    else
      v13 = 0;
  }
  else
  {
    v13 = 0;
  }
  v14 = v13;

  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v9, "uniqueIdentifier");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v15 = 0;
  }
  v26 = 0;
  objc_msgSend(MEMORY[0x1E0CB36F8], "archivedDataWithRootObject:requiringSecureCoding:error:", v12, 1, &v26);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = v26;
  v18 = v17;
  if (!v16 || v17)
  {
    SBLogIcon();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_FAULT))
      -[SBHIconManager _archiveConfiguration:forDataSource:ofIcon:].cold.1();
  }
  else
  {
    -[SBHIconManager delegate](self, "delegate");
    v19 = objc_claimAutoreleasedReturnValue();
    if ((objc_opt_respondsToSelector() & 1) != 0)
      -[NSObject iconManager:dataSource:ofIcon:didUpdateConfigurationData:](v19, "iconManager:dataSource:ofIcon:didUpdateConfigurationData:", self, v9, v10, v16);
    if (v14 && v15)
    {
      archivedWidgetIntents = self->_archivedWidgetIntents;
      if (!archivedWidgetIntents)
      {
        v21 = (NSMutableDictionary *)objc_alloc_init(MEMORY[0x1E0C99E08]);
        v22 = self->_archivedWidgetIntents;
        self->_archivedWidgetIntents = v21;

        archivedWidgetIntents = self->_archivedWidgetIntents;
      }
      -[NSMutableDictionary setObject:forKey:](archivedWidgetIntents, "setObject:forKey:", v14, v15);
    }
  }

  if (v14 && v15)
  {
    widgetIntents = self->_widgetIntents;
    if (!widgetIntents)
    {
      v24 = (NSMutableDictionary *)objc_alloc_init(MEMORY[0x1E0C99E08]);
      v25 = self->_widgetIntents;
      self->_widgetIntents = v24;

      widgetIntents = self->_widgetIntents;
    }
    -[NSMutableDictionary setObject:forKey:](widgetIntents, "setObject:forKey:", v14, v15);
  }

}

- (void)iconView:(id)a3 configurationWillBeginWithInteraction:(id)a4
{
  id v6;
  id v7;
  void *v8;
  id v9;

  v9 = a3;
  v6 = a4;
  -[SBHIconManager currentConfiguringIconView](self, "currentConfiguringIconView");
  v7 = (id)objc_claimAutoreleasedReturnValue();
  if (v7 != v9)
  {
    -[SBHIconManager dismissModalInteractionsImmediately](self, "dismissModalInteractionsImmediately");
    -[SBHIconManager setCurrentConfiguringIconView:](self, "setCurrentConfiguringIconView:", v9);
  }
  -[SBHIconManager _discardEndEditingTimerAndDontResetUntilReasonIsRemoved:](self, "_discardEndEditingTimerAndDontResetUntilReasonIsRemoved:", CFSTR("IconViewConfiguration"));
  -[SBHIconManager delegate](self, "delegate");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v8, "iconManager:iconView:configurationWillBeginWithInteraction:", self, v9, v6);

}

- (void)iconView:(id)a3 configurationWillEndWithInteraction:(id)a4
{
  id v6;
  void *v7;
  id v8;

  v8 = a3;
  v6 = a4;
  -[SBHIconManager delegate](self, "delegate");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v7, "iconManager:iconView:configurationWillEndWithInteraction:", self, v8, v6);

}

- (void)iconView:(id)a3 configurationDidEndWithInteraction:(id)a4
{
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;

  v10 = a3;
  v6 = a4;
  -[SBHIconManager currentConfiguringIconView](self, "currentConfiguringIconView");
  v7 = (id)objc_claimAutoreleasedReturnValue();

  if (v7 == v10)
    -[SBHIconManager setCurrentConfiguringIconView:](self, "setCurrentConfiguringIconView:", 0);
  -[SBHIconManager _removeReasonToNotResetEndEditingTimer:](self, "_removeReasonToNotResetEndEditingTimer:", CFSTR("IconViewConfiguration"));
  -[SBHIconManager delegate](self, "delegate");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v8, "iconManager:iconView:configurationDidEndWithInteraction:", self, v10, v6);
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v10, "icon");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    if (!objc_msgSend(v9, "iconDataSourceCount"))
      -[SBHIconManager uninstallIcon:animate:](self, "uninstallIcon:animate:", v9, 1);

  }
}

- (BOOL)_alwaysPresentStackConfigurationSheet
{
  void *v3;
  char v4;

  -[SBHIconManager delegate](self, "delegate");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v4 = objc_msgSend(v3, "iconManagerAllowsWidgetStackWithSingleWidgetToPresentStackConfigurationSheet:", self);
  else
    v4 = 0;

  return v4;
}

- (double)verticalMarginPercentageForConfigurationOfIconView:(id)a3
{
  id v4;
  void *v5;
  double v6;
  double v7;

  v4 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = -1.0;
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v5, "iconManager:verticalMarginPercentageForConfigurationOfIconView:", self, v4);
    v6 = v7;
  }

  return v6;
}

- (void)modalInteractionWillBegin:(id)a3
{
  id v4;
  id v5;
  void *v6;
  id v7;

  v7 = a3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    -[SBHIconManager currentPersonDetailInteraction](self, "currentPersonDetailInteraction");
    v4 = (id)objc_claimAutoreleasedReturnValue();
    v5 = v7;
    if (v4 != v5)
    {
      -[SBHIconManager dismissModalInteractionsImmediately](self, "dismissModalInteractionsImmediately");
      -[SBHIconManager setCurrentPersonDetailInteraction:](self, "setCurrentPersonDetailInteraction:", v5);
    }

  }
  -[SBHIconManager delegate](self, "delegate");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v6, "iconManager:modalInteractionWillBegin:", self, v7);

}

- (void)modalInteractionDidEnd:(id)a3
{
  id v4;
  void *v5;
  id v6;

  v6 = a3;
  -[SBHIconManager currentPersonDetailInteraction](self, "currentPersonDetailInteraction");
  v4 = (id)objc_claimAutoreleasedReturnValue();

  if (v4 == v6)
    -[SBHIconManager setCurrentPersonDetailInteraction:](self, "setCurrentPersonDetailInteraction:", 0);
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v5, "iconManager:modalInteractionDidEnd:", self, v6);

}

- (id)_containerViewControllerForPersonDetailInteractionTargetingIconView:(id)a3
{
  id v4;
  void *v5;
  void *v6;

  v4 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v5, "iconManager:containerViewControllerForModalInteractionFromIconView:", self, v4);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v6 = 0;
  }

  return v6;
}

- (id)_containerViewForPersonDetailInteractionTargetingIconView:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;

  v4 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v5, "iconManager:containerViewForModalInteractionFromIconView:", self, v4);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    -[SBHIconManager _containerViewControllerForPersonDetailInteractionTargetingIconView:](self, "_containerViewControllerForPersonDetailInteractionTargetingIconView:", v4);
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v7, "view");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = v7;
  }

  return v6;
}

- (id)_homeScreenContentViewForPersonDetailInteractionTargetingIconView:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;

  v4 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v5, "iconManager:homeScreenContentViewForModalInteractionFromIconView:", self, v4);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    -[SBHIconManager rootFolderController](self, "rootFolderController");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "view");
    v6 = (void *)objc_claimAutoreleasedReturnValue();

  }
  return v6;
}

- (id)_personDetailInteractionContextForPersonURL:(id)a3 iconView:(id)a4
{
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  SBHPeopleWidgetPersonDetailInteractionContext *v16;

  v6 = a4;
  v7 = a3;
  objc_msgSend(v6, "representativeIconViewForModalInteractions");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager _containerViewControllerForPersonDetailInteractionTargetingIconView:](self, "_containerViewControllerForPersonDetailInteractionTargetingIconView:", v6);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager _containerViewForPersonDetailInteractionTargetingIconView:](self, "_containerViewForPersonDetailInteractionTargetingIconView:", v6);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager _homeScreenContentViewForPersonDetailInteractionTargetingIconView:](self, "_homeScreenContentViewForPersonDetailInteractionTargetingIconView:", v6);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "bounds");
  objc_msgSend(v11, "convertRect:toView:", v10);
  v16 = -[SBHPeopleWidgetPersonDetailInteractionContext initWithPersonURL:sourceIconView:referenceIconView:containerViewController:containerView:homeScreenContentView:homeScreenContentFrame:]([SBHPeopleWidgetPersonDetailInteractionContext alloc], "initWithPersonURL:sourceIconView:referenceIconView:containerViewController:containerView:homeScreenContentView:homeScreenContentFrame:", v7, v8, v6, v9, v10, v11, v12, v13, v14, v15);

  return v16;
}

- (id)widgetInsertionRippleIconAnimatorForIcon:(id)a3 iconListView:(id)a4 withReferenceIconView:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  SBHWidgetInsertionRippleIconAnimator *v18;
  SBHWidgetInsertionRippleIconAnimator *v19;
  _QWORD v21[5];

  v8 = a3;
  v9 = a4;
  v10 = a5;
  if (v9)
    goto LABEL_3;
  -[SBHIconManager rootFolder](self, "rootFolder");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "indexPathForIcon:", v8);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager iconListViewForIndexPath:](self, "iconListViewForIndexPath:", v12);
  v9 = (id)objc_claimAutoreleasedReturnValue();

  if (v9)
  {
LABEL_3:
    objc_msgSend(v9, "iconLocation");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    if (SBIconLocationGroupContainsLocation(CFSTR("SBIconLocationGroupRoot"), v13))
    {
      -[SBHIconManager dockListView](self, "dockListView");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v14 = 0;
    }
    v15 = objc_msgSend(v13, "isEqualToString:", CFSTR("SBIconLocationStackConfiguration"));
    -[SBHIconManager listLayoutProvider](self, "listLayoutProvider");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "layoutForIconLocation:", CFSTR("SBIconLocationRoot"));
    v17 = (void *)objc_claimAutoreleasedReturnValue();

    v18 = [SBHWidgetInsertionRippleIconAnimator alloc];
    v21[0] = MEMORY[0x1E0C809B0];
    v21[1] = 3221225472;
    v21[2] = __94__SBHIconManager_widgetInsertionRippleIconAnimatorForIcon_iconListView_withReferenceIconView___block_invoke;
    v21[3] = &unk_1E8D84C50;
    v21[4] = self;
    v19 = -[SBHWidgetInsertionRippleIconAnimator initWithIconListView:widgetIcon:referenceLayout:referenceIconView:additionalIconListView:preludeBlock:](v18, "initWithIconListView:widgetIcon:referenceLayout:referenceIconView:additionalIconListView:preludeBlock:", v9, v8, v17, v10, v14, v21);
    -[SBHWidgetInsertionRippleIconAnimator setKeepsJumpingIconAboveListViewAsLongAsPossible:](v19, "setKeepsJumpingIconAboveListViewAsLongAsPossible:", v15);

  }
  else
  {
    v19 = 0;
  }

  return v19;
}

uint64_t __94__SBHIconManager_widgetInsertionRippleIconAnimatorForIcon_iconListView_withReferenceIconView___block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_willAnimateWidgetInsertion");
}

- (void)_willAnimateWidgetInsertion
{
  id v3;

  -[SBHIconManager delegate](self, "delegate");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v3, "iconManagerWillAnimateWidgetInsertion:", self);

}

- (void)popModalInteraction
{
  void *v3;
  id v4;

  -[SBHIconManager currentConfiguringIconView](self, "currentConfiguringIconView");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "popConfigurationCard");
  objc_msgSend(v4, "popStackConfigurationCard");
  -[SBHIconManager currentPersonDetailInteraction](self, "currentPersonDetailInteraction");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "endInteractionAnimated:", 1);

}

- (void)dismissModalInteractions
{
  void *v3;
  id v4;

  -[SBHIconManager currentConfiguringIconView](self, "currentConfiguringIconView");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "dismissConfigurationCard");
  objc_msgSend(v4, "dismissStackConfigurationCard");
  -[SBHIconManager setIconStylePickerVisible:](self, "setIconStylePickerVisible:", 0);
  -[SBHIconManager currentPersonDetailInteraction](self, "currentPersonDetailInteraction");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "endInteractionAnimated:", 1);

}

- (void)dismissModalInteractionsImmediately
{
  void *v3;
  id v4;

  -[SBHIconManager currentConfiguringIconView](self, "currentConfiguringIconView");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "dismissConfigurationCardImmediately");
  objc_msgSend(v4, "dismissStackConfigurationCardImmediately");
  -[SBHIconManager _dismissStylePickerViewControllerImmediately](self, "_dismissStylePickerViewControllerImmediately");
  -[SBHIconManager currentPersonDetailInteraction](self, "currentPersonDetailInteraction");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "endInteractionAnimated:", 0);

}

- (void)iconView:(id)a3 didChangeCustomImageViewController:(id)a4
{
  id v6;
  id v7;
  void *v8;
  char isKindOfClass;
  id v10;
  void *v11;
  void *v12;
  NSMapTable *iconViewsForWidgetMultiplexingViewController;
  void *v14;
  void *v15;
  char v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  id v21;

  v21 = a3;
  v6 = a4;
  if (objc_msgSend(v6, "sbh_isWidgetStackViewController"))
  {
    v7 = v6;
    objc_msgSend(v7, "setDelegate:", 0);
    objc_msgSend(v7, "setDataSource:", 0);

  }
  objc_opt_self();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  isKindOfClass = objc_opt_isKindOfClass();

  if ((isKindOfClass & 1) != 0)
  {
    v10 = v6;
    -[SBHIconManager _effectiveWidgetMultiplexingManager](self, "_effectiveWidgetMultiplexingManager");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "multiplexingViewController");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "discardMultiplexingViewController:", v12);

    iconViewsForWidgetMultiplexingViewController = self->_iconViewsForWidgetMultiplexingViewController;
    objc_msgSend(v10, "multiplexingViewController");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSMapTable removeObjectForKey:](iconViewsForWidgetMultiplexingViewController, "removeObjectForKey:", v14);

    objc_msgSend(v10, "setDelegate:", 0);
  }
  objc_opt_self();
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = objc_opt_isKindOfClass();

  if ((v16 & 1) != 0)
  {
    objc_msgSend(v6, "contentViewController");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v17, "sbh_isWidgetHostViewController"))
      objc_msgSend(v17, "invalidate");

  }
  -[NSMapTable objectForKey:](self->_widgetViewControllersForIconView, "objectForKey:", v21);
  v18 = (id)objc_claimAutoreleasedReturnValue();
  if (v18 == v6)
  {
    objc_msgSend(v6, "removeFromParentViewController");
    -[NSMapTable removeObjectForKey:](self->_widgetViewControllersForIconView, "removeObjectForKey:", v21);
  }
  -[NSMapTable removeObjectForKey:](self->_iconViewsForCustomIconImageViewController, "removeObjectForKey:", v6);
  objc_msgSend(v21, "customIconImageViewController");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager _updateIconView:forCustomIconImageViewController:](self, "_updateIconView:forCustomIconImageViewController:", v21, v19);
  -[SBHIconManager _updateCaptureOnlyBackgroundViewForCustomIconImageViewController:](self, "_updateCaptureOnlyBackgroundViewForCustomIconImageViewController:", v19);
  if (objc_msgSend(v19, "sbh_isWidgetStackViewController"))
  {
    v20 = v19;
    objc_msgSend(v20, "setDelegate:", self);
    objc_msgSend(v20, "setDataSource:", self);

  }
}

- (void)_updateIconView:(id)a3 forCustomIconImageViewController:(id)a4
{
  id v6;
  NSMapTable *iconViewsForCustomIconImageViewController;
  NSMapTable *v8;
  NSMapTable *v9;
  id v10;

  v10 = a3;
  v6 = a4;
  iconViewsForCustomIconImageViewController = self->_iconViewsForCustomIconImageViewController;
  if (!iconViewsForCustomIconImageViewController)
  {
    objc_msgSend(MEMORY[0x1E0CB3748], "weakToWeakObjectsMapTable");
    v8 = (NSMapTable *)objc_claimAutoreleasedReturnValue();
    v9 = self->_iconViewsForCustomIconImageViewController;
    self->_iconViewsForCustomIconImageViewController = v8;

    iconViewsForCustomIconImageViewController = self->_iconViewsForCustomIconImageViewController;
  }
  -[NSMapTable setObject:forKey:](iconViewsForCustomIconImageViewController, "setObject:forKey:", v10, v6);

}

- (void)_updateWidgetMultiplexingViewController:(id)a3 forIconView:(id)a4
{
  id v6;
  NSMapTable *iconViewsForWidgetMultiplexingViewController;
  NSMapTable *v8;
  NSMapTable *v9;
  id v10;

  v10 = a3;
  v6 = a4;
  iconViewsForWidgetMultiplexingViewController = self->_iconViewsForWidgetMultiplexingViewController;
  if (!iconViewsForWidgetMultiplexingViewController)
  {
    objc_msgSend(MEMORY[0x1E0CB3748], "weakToWeakObjectsMapTable");
    v8 = (NSMapTable *)objc_claimAutoreleasedReturnValue();
    v9 = self->_iconViewsForWidgetMultiplexingViewController;
    self->_iconViewsForWidgetMultiplexingViewController = v8;

    iconViewsForWidgetMultiplexingViewController = self->_iconViewsForWidgetMultiplexingViewController;
  }
  -[NSMapTable setObject:forKey:](iconViewsForWidgetMultiplexingViewController, "setObject:forKey:", v6, v10);

}

- (void)iconView:(id)a3 dropSessionDidEnter:(id)a4
{
  id v6;
  void *v7;
  id v8;

  v8 = a3;
  v6 = a4;
  -[SBHIconManager delegate](self, "delegate");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v7, "iconManager:iconView:contentDropSessionDidEnter:", self, v8, v6);

}

- (void)iconView:(id)a3 dropSessionDidExit:(id)a4
{
  id v6;
  void *v7;
  id v8;

  v8 = a3;
  v6 = a4;
  -[SBHIconManager delegate](self, "delegate");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v7, "iconManager:iconView:contentDropSessionDidExit:", self, v8, v6);

}

- (void)leafIcon:(id)a3 didRemoveIconDataSource:(id)a4
{
  -[SBHIconManager _handleRemovedDataSource:ofIcon:](self, "_handleRemovedDataSource:ofIcon:", a4, a3);
}

- (void)_beginObservingLeafIconsInModel:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  objc_opt_self();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "iconsOfClass:", v5, 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v12;
    do
    {
      v10 = 0;
      do
      {
        if (*(_QWORD *)v12 != v9)
          objc_enumerationMutation(v6);
        objc_msgSend(*(id *)(*((_QWORD *)&v11 + 1) + 8 * v10++), "addObserver:", self);
      }
      while (v8 != v10);
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    }
    while (v8);
  }

}

- (void)_endObservingLeafIconsInModel:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  objc_opt_self();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "iconsOfClass:", v5, 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v12;
    do
    {
      v10 = 0;
      do
      {
        if (*(_QWORD *)v12 != v9)
          objc_enumerationMutation(v6);
        objc_msgSend(*(id *)(*((_QWORD *)&v11 + 1) + 8 * v10++), "removeObserver:", self);
      }
      while (v8 != v10);
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    }
    while (v8);
  }

}

uint64_t __75__SBHIconManager_enumerateIconViewQueryableChildrenWithOptions_usingBlock___block_invoke_2(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24))
    *a3 = 1;
  return result;
}

uint64_t __75__SBHIconManager_enumerateIconViewQueryableChildrenWithOptions_usingBlock___block_invoke_3(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24))
    *a3 = 1;
  return result;
}

uint64_t __98__SBHIconManager_enumerateAppPredictionViewControllersInIconLocationGroup_withOptions_usingBlock___block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

- (void)enumerateIconViewsDisplayedInAppPredictionsInLocationGroup:(id)a3 withOptions:(unint64_t)a4 usingBlock:(id)a5
{
  id v8;
  void *v9;
  id v10;
  _QWORD v11[4];
  id v12;

  v10 = a3;
  v8 = a5;
  if (!objc_msgSend(v10, "isEqualToString:", CFSTR("SBIconLocationGroupTodayView")))
    goto LABEL_6;
  -[SBHIconManager _effectiveTodayViewController](self, "_effectiveTodayViewController");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (v9 && ((a4 & 1) == 0 || -[SBHIconManager isTodayViewEffectivelyVisible](self, "isTodayViewEffectivelyVisible")))
  {

LABEL_6:
    v11[0] = MEMORY[0x1E0C809B0];
    v11[1] = 3221225472;
    v11[2] = __100__SBHIconManager_enumerateIconViewsDisplayedInAppPredictionsInLocationGroup_withOptions_usingBlock___block_invoke;
    v11[3] = &unk_1E8D8CE20;
    v12 = v8;
    -[SBHIconManager enumerateAppPredictionViewControllersWithIconViewsInIconLocationGroup:withOptions:usingBlock:](self, "enumerateAppPredictionViewControllersWithIconViewsInIconLocationGroup:withOptions:usingBlock:", v10, a4, v11);
    v9 = v12;
  }

}

void __100__SBHIconManager_enumerateIconViewsDisplayedInAppPredictionsInLocationGroup_withOptions_usingBlock___block_invoke(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD v6[4];
  id v7;
  uint64_t v8;

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __100__SBHIconManager_enumerateIconViewsDisplayedInAppPredictionsInLocationGroup_withOptions_usingBlock___block_invoke_2;
  v6[3] = &unk_1E8D8CE48;
  v7 = *(id *)(a1 + 32);
  v8 = a4;
  objc_msgSend(a2, "enumerateDisplayedIconViewsUsingBlock:", v6);

}

uint64_t __100__SBHIconManager_enumerateIconViewsDisplayedInAppPredictionsInLocationGroup_withOptions_usingBlock___block_invoke_2(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  if (*a3)
    **(_BYTE **)(a1 + 40) = 1;
  return result;
}

- (id)appPredictionsIconViewDisplayingIconView:(id)a3 options:(unint64_t)a4
{
  id v6;
  void *v7;
  void *v8;
  id v9;
  _QWORD v11[4];
  id v12;
  uint64_t *v13;
  unint64_t v14;
  _QWORD v15[4];
  id v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  void (*v23)(uint64_t);
  id v24;

  v6 = a3;
  v19 = 0;
  v20 = &v19;
  v21 = 0x3032000000;
  v22 = __Block_byref_object_copy__19;
  v23 = __Block_byref_object_dispose__19;
  v24 = 0;
  -[SBHIconManager _effectiveTodayViewController](self, "_effectiveTodayViewController");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (v7 && ((a4 & 1) == 0 || -[SBHIconManager isTodayViewEffectivelyVisible](self, "isTodayViewEffectivelyVisible")))
  {
    v15[0] = MEMORY[0x1E0C809B0];
    v15[1] = 3221225472;
    v15[2] = __67__SBHIconManager_appPredictionsIconViewDisplayingIconView_options___block_invoke;
    v15[3] = &unk_1E8D8CE70;
    v16 = v6;
    v17 = &v19;
    v18 = a4;
    -[SBHIconManager enumerateAppPredictionViewControllersWithIconViewsInIconLocationGroup:withOptions:usingBlock:](self, "enumerateAppPredictionViewControllersWithIconViewsInIconLocationGroup:withOptions:usingBlock:", CFSTR("SBIconLocationGroupTodayView"), a4, v15);

  }
  v8 = (void *)v20[5];
  if (!v8)
  {
    v11[0] = MEMORY[0x1E0C809B0];
    v11[1] = 3221225472;
    v11[2] = __67__SBHIconManager_appPredictionsIconViewDisplayingIconView_options___block_invoke_2;
    v11[3] = &unk_1E8D8CE70;
    v12 = v6;
    v13 = &v19;
    v14 = a4;
    -[SBHIconManager enumerateAppPredictionViewControllersWithIconViewsInIconLocationGroup:withOptions:usingBlock:](self, "enumerateAppPredictionViewControllersWithIconViewsInIconLocationGroup:withOptions:usingBlock:", CFSTR("SBIconLocationGroupRoot"), a4, v11);

    v8 = (void *)v20[5];
  }
  v9 = v8;

  _Block_object_dispose(&v19, 8);
  return v9;
}

void __67__SBHIconManager_appPredictionsIconViewDisplayingIconView_options___block_invoke(uint64_t a1, void *a2, void *a3, _BYTE *a4)
{
  id v8;

  v8 = a3;
  if (SBIconViewQueryingDisplayingIconView(a2, *(void **)(a1 + 32), *(_QWORD *)(a1 + 48)))
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a3);
    *a4 = 1;
  }

}

void __67__SBHIconManager_appPredictionsIconViewDisplayingIconView_options___block_invoke_2(uint64_t a1, void *a2, void *a3, _BYTE *a4)
{
  id v8;

  v8 = a3;
  if (SBIconViewQueryingDisplayingIconView(a2, *(void **)(a1 + 32), *(_QWORD *)(a1 + 48)))
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a3);
    *a4 = 1;
  }

}

- (id)appPredictionViewControllerForIconView:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  id v7;
  _QWORD v9[4];
  id v10;
  uint64_t *v11;
  _QWORD v12[4];
  id v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  void (*v19)(uint64_t);
  id v20;

  v4 = a3;
  v15 = 0;
  v16 = &v15;
  v17 = 0x3032000000;
  v18 = __Block_byref_object_copy__19;
  v19 = __Block_byref_object_dispose__19;
  v20 = 0;
  -[SBHIconManager _effectiveTodayViewController](self, "_effectiveTodayViewController");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    v12[0] = MEMORY[0x1E0C809B0];
    v12[1] = 3221225472;
    v12[2] = __57__SBHIconManager_appPredictionViewControllerForIconView___block_invoke;
    v12[3] = &unk_1E8D8CE98;
    v13 = v4;
    v14 = &v15;
    -[SBHIconManager enumerateAppPredictionViewControllersInIconLocationGroup:withOptions:usingBlock:](self, "enumerateAppPredictionViewControllersInIconLocationGroup:withOptions:usingBlock:", CFSTR("SBIconLocationGroupTodayView"), 0, v12);

  }
  v6 = (void *)v16[5];
  if (!v6)
  {
    v9[0] = MEMORY[0x1E0C809B0];
    v9[1] = 3221225472;
    v9[2] = __57__SBHIconManager_appPredictionViewControllerForIconView___block_invoke_2;
    v9[3] = &unk_1E8D8CE98;
    v10 = v4;
    v11 = &v15;
    -[SBHIconManager enumerateAppPredictionViewControllersInIconLocationGroup:withOptions:usingBlock:](self, "enumerateAppPredictionViewControllersInIconLocationGroup:withOptions:usingBlock:", CFSTR("SBIconLocationGroupRoot"), 0, v9);

    v6 = (void *)v16[5];
  }
  v7 = v6;

  _Block_object_dispose(&v15, 8);
  return v7;
}

void __57__SBHIconManager_appPredictionViewControllerForIconView___block_invoke(uint64_t a1, void *a2, _BYTE *a3)
{
  id v6;

  v6 = a2;
  if (SBIconViewQueryingDisplayingIconView(v6, *(void **)(a1 + 32), 0))
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
    *a3 = 1;
  }

}

void __57__SBHIconManager_appPredictionViewControllerForIconView___block_invoke_2(uint64_t a1, void *a2, _BYTE *a3)
{
  id v6;

  v6 = a2;
  if (SBIconViewQueryingDisplayingIconView(v6, *(void **)(a1 + 32), 0))
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
    *a3 = 1;
  }

}

- (void)refreshAppPredictionBadges
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  -[SBHIconManager _effectiveAppPredictionViewControllersForUniqueIdentifier](self, "_effectiveAppPredictionViewControllersForUniqueIdentifier", 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectEnumerator");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v9;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v3);
        objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v7++), "enumerateDisplayedIconViewsUsingBlock:", &__block_literal_global_711);
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v5);
  }

}

void __44__SBHIconManager_refreshAppPredictionBadges__block_invoke(uint64_t a1, void *a2)
{
  id v2;

  objc_msgSend(a2, "icon");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "noteBadgeDidChange");

}

- (void)updateAppPredictionViewControllersWithListLayoutProvider:(id)a3 oldListLayoutProvider:(id)a4 animated:(BOOL)a5
{
  _BOOL8 v5;
  id v8;
  NSMutableDictionary *appPredictionViewControllersForUniqueIdentifierForLayoutOptions;
  void *v10;
  void *v11;
  void *v12;
  NSMutableDictionary *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t j;
  uint64_t v27;
  void *v28;
  id obj;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _BYTE v39[128];
  _BYTE v40[128];
  _QWORD v41[4];

  v5 = a5;
  v41[2] = *MEMORY[0x1E0C80C00];
  v8 = a3;
  appPredictionViewControllersForUniqueIdentifierForLayoutOptions = self->_appPredictionViewControllersForUniqueIdentifierForLayoutOptions;
  _SBHLayoutOptionsKeyTypeForListLayoutProvider(a4);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  -[NSMutableDictionary objectForKey:](appPredictionViewControllersForUniqueIdentifierForLayoutOptions, "objectForKey:", v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = v11;
  if (!v11)
  {
    objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
  }
  v41[0] = v12;
  v13 = self->_appPredictionViewControllersForUniqueIdentifierForLayoutOptions;
  _SBHLayoutOptionsKeyTypeForListLayoutProvider(v8);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  -[NSMutableDictionary objectForKey:](v13, "objectForKey:", v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = v15;
  if (!v15)
  {
    objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
  }
  v41[1] = v16;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v41, 2);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v15)

  if (!v11)
  v28 = v17;
  objc_msgSend(v17, "bs_compactMap:", &__block_literal_global_713);
  v35 = 0u;
  v36 = 0u;
  v37 = 0u;
  v38 = 0u;
  obj = (id)objc_claimAutoreleasedReturnValue();
  v18 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v35, v40, 16);
  if (v18)
  {
    v19 = v18;
    v30 = *(_QWORD *)v36;
    do
    {
      for (i = 0; i != v19; ++i)
      {
        if (*(_QWORD *)v36 != v30)
          objc_enumerationMutation(obj);
        v21 = *(void **)(*((_QWORD *)&v35 + 1) + 8 * i);
        v31 = 0u;
        v32 = 0u;
        v33 = 0u;
        v34 = 0u;
        v22 = v21;
        v23 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v31, v39, 16);
        if (v23)
        {
          v24 = v23;
          v25 = *(_QWORD *)v32;
          do
          {
            for (j = 0; j != v24; ++j)
            {
              if (*(_QWORD *)v32 != v25)
                objc_enumerationMutation(v22);
              v27 = *(_QWORD *)(*((_QWORD *)&v31 + 1) + 8 * j);
              -[SBHIconManager updateLargeIconsEnabledForAppPredictionViewController:animated:](self, "updateLargeIconsEnabledForAppPredictionViewController:animated:", v27, v5);
              -[SBHIconManager setListLayoutProvider:forAppPredictionViewController:animated:](self, "setListLayoutProvider:forAppPredictionViewController:animated:", v8, v27, v5);
            }
            v24 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v31, v39, 16);
          }
          while (v24);
        }

      }
      v19 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v35, v40, 16);
    }
    while (v19);
  }

}

uint64_t __106__SBHIconManager_updateAppPredictionViewControllersWithListLayoutProvider_oldListLayoutProvider_animated___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "allValues");
}

- (void)setListLayoutProvider:(id)a3 forAppPredictionViewController:(id)a4 animated:(BOOL)a5
{
  id v8;
  id v9;
  _QWORD v10[5];
  id v11;
  id v12;
  BOOL v13;

  v9 = a3;
  v8 = a4;
  if ((objc_opt_respondsToSelector() & 1) == 0)
  {
    v10[0] = MEMORY[0x1E0C809B0];
    v10[1] = 3221225472;
    v10[2] = __80__SBHIconManager_setListLayoutProvider_forAppPredictionViewController_animated___block_invoke;
    v10[3] = &unk_1E8D8CF20;
    v10[4] = self;
    v11 = v8;
    v12 = v9;
    v13 = a5;
    objc_msgSend(v11, "enumerateDisplayedIconViewsUsingBlock:", v10);

  }
}

uint64_t __80__SBHIconManager_setListLayoutProvider_forAppPredictionViewController_animated___block_invoke(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "_stompOnIconView:inAppPredictionViewController:listLayoutProvider:animated:", a2, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(unsigned __int8 *)(a1 + 56));
}

- (void)_stompOnIconView:(id)a3 inAppPredictionViewController:(id)a4 listLayoutProvider:(id)a5 animated:(BOOL)a6
{
  _BOOL8 v6;
  id v10;
  id v11;
  id v12;
  id APUIAppPredictionViewControllerClass;
  id v14;
  id v15;
  id v16;
  int v17;
  NSObject *v18;
  void *v19;
  void *v20;
  void *v21;
  int v22;
  void *v23;
  uint64_t v24;

  v6 = a6;
  v24 = *MEMORY[0x1E0C80C00];
  v10 = a3;
  v11 = a4;
  v12 = a5;
  if ((objc_opt_respondsToSelector() & 1) == 0)
  {
    APUIAppPredictionViewControllerClass = getAPUIAppPredictionViewControllerClass();
    v14 = v11;
    if (APUIAppPredictionViewControllerClass)
      v15 = (objc_opt_isKindOfClass() & 1) != 0 ? v14 : 0;
    else
      v15 = 0;
    v16 = v15;

    v17 = objc_msgSend(v16, "supportsLargeIcons");
    if (v17)
    {
      SBLogIcon();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend(v10, "icon");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v19, "displayName");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        v22 = 138543362;
        v23 = v20;
        _os_log_impl(&dword_1CFEF3000, v18, OS_LOG_TYPE_DEFAULT, "Stomping on list layout provider for app prediction client icon with display name: %{public}@", (uint8_t *)&v22, 0xCu);

      }
      objc_msgSend(v10, "setListLayoutProvider:animated:", v12, v6);
      -[SBHIconManager iconImageCache](self, "iconImageCache");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "setIconImageCache:", v21);

    }
  }

}

- (void)updateLargeIconsEnabledForAppPredictionViewController:(id)a3 animated:(BOOL)a4
{
  _BOOL8 v4;
  unint64_t v6;
  id v7;

  v4 = a4;
  v7 = a3;
  v6 = -[SBHIconManager listLayoutProviderLayoutOptions](self, "listLayoutProviderLayoutOptions");
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v7, "setLargeIconsEnabled:animated:", (v6 >> 3) & 1, v4);

}

- (id)iconViewForIcon:(id)a3 location:(id)a4
{
  return -[SBHIconManager iconViewForIcon:location:options:](self, "iconViewForIcon:location:options:", a3, a4, 0);
}

- (id)firstIconViewForIcon:(id)a3 inLocations:(id)a4
{
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  _QWORD v12[4];
  id v13;
  id v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  void (*v20)(uint64_t);
  id v21;

  v6 = a3;
  v7 = a4;
  v16 = 0;
  v17 = &v16;
  v18 = 0x3032000000;
  v19 = __Block_byref_object_copy__19;
  v20 = __Block_byref_object_dispose__19;
  v21 = 0;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 3221225472;
  v12[2] = __51__SBHIconManager_firstIconViewForIcon_inLocations___block_invoke;
  v12[3] = &unk_1E8D8CF70;
  v15 = &v16;
  v8 = v6;
  v13 = v8;
  v9 = v7;
  v14 = v9;
  -[SBHIconManager enumerateIconViewQueryableChildrenUsingBlock:](self, "enumerateIconViewQueryableChildrenUsingBlock:", v12);
  v10 = (id)v17[5];

  _Block_object_dispose(&v16, 8);
  return v10;
}

void __51__SBHIconManager_firstIconViewForIcon_inLocations___block_invoke(_QWORD *a1, void *a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  objc_msgSend(a2, "firstIconViewForIcon:inLocations:", a1[4], a1[5]);
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = *(_QWORD *)(a1[6] + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v6;

  if (*(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 40))
    *a4 = 1;
}

- (id)firstIconViewForIcon:(id)a3
{
  id v4;
  id v5;
  id v6;
  _QWORD v8[4];
  id v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  void (*v15)(uint64_t);
  id v16;

  v4 = a3;
  v11 = 0;
  v12 = &v11;
  v13 = 0x3032000000;
  v14 = __Block_byref_object_copy__19;
  v15 = __Block_byref_object_dispose__19;
  v16 = 0;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = __39__SBHIconManager_firstIconViewForIcon___block_invoke;
  v8[3] = &unk_1E8D8CFC0;
  v10 = &v11;
  v5 = v4;
  v9 = v5;
  -[SBHIconManager enumerateIconViewQueryableChildrenWithOptions:usingBlock:](self, "enumerateIconViewQueryableChildrenWithOptions:usingBlock:", 1, v8);
  v6 = (id)v12[5];

  _Block_object_dispose(&v11, 8);
  return v6;
}

void __39__SBHIconManager_firstIconViewForIcon___block_invoke(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  objc_msgSend(a2, "firstIconViewForIcon:", *(_QWORD *)(a1 + 32));
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v6;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40))
    *a4 = 1;
}

- (id)firstIconViewForIcon:(id)a3 excludingLocations:(id)a4
{
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  _QWORD v12[4];
  id v13;
  id v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  void (*v20)(uint64_t);
  id v21;

  v6 = a3;
  v7 = a4;
  v16 = 0;
  v17 = &v16;
  v18 = 0x3032000000;
  v19 = __Block_byref_object_copy__19;
  v20 = __Block_byref_object_dispose__19;
  v21 = 0;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 3221225472;
  v12[2] = __58__SBHIconManager_firstIconViewForIcon_excludingLocations___block_invoke;
  v12[3] = &unk_1E8D8CF70;
  v15 = &v16;
  v8 = v6;
  v13 = v8;
  v9 = v7;
  v14 = v9;
  -[SBHIconManager enumerateIconViewQueryableChildrenWithOptions:usingBlock:](self, "enumerateIconViewQueryableChildrenWithOptions:usingBlock:", 1, v12);
  v10 = (id)v17[5];

  _Block_object_dispose(&v16, 8);
  return v10;
}

void __58__SBHIconManager_firstIconViewForIcon_excludingLocations___block_invoke(_QWORD *a1, void *a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  objc_msgSend(a2, "firstIconViewForIcon:excludingLocations:", a1[4], a1[5]);
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = *(_QWORD *)(a1[6] + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v6;

  if (*(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 40))
    *a4 = 1;
}

- (BOOL)isDisplayingIcon:(id)a3 inLocation:(id)a4
{
  return -[SBHIconManager isDisplayingIcon:inLocation:options:](self, "isDisplayingIcon:inLocation:options:", a3, a4, 0);
}

- (BOOL)isDisplayingIcon:(id)a3 inLocation:(id)a4 options:(unint64_t)a5
{
  id v8;
  id v9;
  id v10;
  id v11;
  _QWORD v13[4];
  id v14;
  id v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  char v20;

  v8 = a3;
  v9 = a4;
  v17 = 0;
  v18 = &v17;
  v19 = 0x2020000000;
  v20 = 0;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 3221225472;
  v13[2] = __54__SBHIconManager_isDisplayingIcon_inLocation_options___block_invoke;
  v13[3] = &unk_1E8D8CF48;
  v10 = v9;
  v14 = v10;
  v16 = &v17;
  v11 = v8;
  v15 = v11;
  -[SBHIconManager enumerateIconViewQueryableChildrenWithOptions:usingBlock:](self, "enumerateIconViewQueryableChildrenWithOptions:usingBlock:", a5, v13);
  LOBYTE(a5) = *((_BYTE *)v18 + 24);

  _Block_object_dispose(&v17, 8);
  return a5;
}

void __54__SBHIconManager_isDisplayingIcon_inLocation_options___block_invoke(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v7;

  v7 = a2;
  if (objc_msgSend(v7, "isPresentingIconLocation:", *(_QWORD *)(a1 + 32)))
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = SBIconViewQueryingDisplayingIconInLocation(v7, *(void **)(a1 + 40), *(void **)(a1 + 32), a3);
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24))
    *a4 = 1;

}

- (BOOL)isDisplayingIconView:(id)a3 inLocation:(id)a4
{
  id v6;
  id v7;
  id v8;
  id v9;
  _QWORD v11[4];
  id v12;
  id v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  char v18;

  v6 = a3;
  v7 = a4;
  v15 = 0;
  v16 = &v15;
  v17 = 0x2020000000;
  v18 = 0;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = __50__SBHIconManager_isDisplayingIconView_inLocation___block_invoke;
  v11[3] = &unk_1E8D8CF48;
  v8 = v7;
  v12 = v8;
  v14 = &v15;
  v9 = v6;
  v13 = v9;
  -[SBHIconManager enumerateIconViewQueryableChildrenUsingBlock:](self, "enumerateIconViewQueryableChildrenUsingBlock:", v11);
  LOBYTE(self) = *((_BYTE *)v16 + 24);

  _Block_object_dispose(&v15, 8);
  return (char)self;
}

void __50__SBHIconManager_isDisplayingIconView_inLocation___block_invoke(_QWORD *a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v6;

  v6 = a2;
  if (objc_msgSend(v6, "isPresentingIconLocation:", a1[4]))
    *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) = objc_msgSend(v6, "isDisplayingIconView:inLocation:", a1[5], a1[4]);
  if (*(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24))
    *a4 = 1;

}

- (BOOL)isDisplayingIcon:(id)a3 inLocations:(id)a4
{
  id v6;
  id v7;
  id v8;
  id v9;
  _QWORD v11[4];
  id v12;
  id v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  char v18;

  v6 = a3;
  v7 = a4;
  v15 = 0;
  v16 = &v15;
  v17 = 0x2020000000;
  v18 = 0;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = __47__SBHIconManager_isDisplayingIcon_inLocations___block_invoke;
  v11[3] = &unk_1E8D8CF48;
  v8 = v7;
  v12 = v8;
  v14 = &v15;
  v9 = v6;
  v13 = v9;
  -[SBHIconManager enumerateIconViewQueryableChildrenUsingBlock:](self, "enumerateIconViewQueryableChildrenUsingBlock:", v11);
  LOBYTE(self) = *((_BYTE *)v16 + 24);

  _Block_object_dispose(&v15, 8);
  return (char)self;
}

void __47__SBHIconManager_isDisplayingIcon_inLocations___block_invoke(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v6 = a2;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v7 = *(id *)(a1 + 32);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v14;
    while (2)
    {
      for (i = 0; i != v9; ++i)
      {
        if (*(_QWORD *)v14 != v10)
          objc_enumerationMutation(v7);
        v12 = *(_QWORD *)(*((_QWORD *)&v13 + 1) + 8 * i);
        if (objc_msgSend(v6, "isPresentingIconLocation:", v12, (_QWORD)v13))
          *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = objc_msgSend(v6, "isDisplayingIcon:inLocation:", *(_QWORD *)(a1 + 40), v12);
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24))
        {
          *a4 = 1;
          goto LABEL_13;
        }
      }
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
      if (v9)
        continue;
      break;
    }
  }
LABEL_13:

}

- (BOOL)isDisplayingIconView:(id)a3
{
  id v4;
  id v5;
  _QWORD v7[4];
  id v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char v13;

  v4 = a3;
  v10 = 0;
  v11 = &v10;
  v12 = 0x2020000000;
  v13 = 0;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = __39__SBHIconManager_isDisplayingIconView___block_invoke;
  v7[3] = &unk_1E8D8CFC0;
  v9 = &v10;
  v5 = v4;
  v8 = v5;
  -[SBHIconManager enumerateIconViewQueryableChildrenWithOptions:usingBlock:](self, "enumerateIconViewQueryableChildrenWithOptions:usingBlock:", 1, v7);
  LOBYTE(self) = *((_BYTE *)v11 + 24);

  _Block_object_dispose(&v10, 8);
  return (char)self;
}

uint64_t __39__SBHIconManager_isDisplayingIconView___block_invoke(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  uint64_t result;

  result = objc_msgSend(a2, "isDisplayingIconView:", *(_QWORD *)(a1 + 32));
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = result;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24))
    *a4 = 1;
  return result;
}

- (BOOL)isIconCurrentlyOnscreen:(id)a3
{
  return -[SBHIconManager isDisplayingIcon:options:](self, "isDisplayingIcon:options:", a3, 17);
}

- (BOOL)isDisplayingIcon:(id)a3
{
  return -[SBHIconManager isDisplayingIcon:queryOptions:](self, "isDisplayingIcon:queryOptions:", a3, 5);
}

- (BOOL)isDisplayingIcon:(id)a3 queryOptions:(unint64_t)a4
{
  char v4;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  char v17;
  BOOL v18;

  v4 = a4;
  v6 = a3;
  if ((v4 & 1) != 0)
  {
    v10 = 0;
    if ((v4 & 2) != 0)
      goto LABEL_12;
  }
  else
  {
    -[SBHIconManager rootFolder](self, "rootFolder");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "indexPathForIcon:", v6);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "folderContainingIndexPath:relativeIndexPath:", v8, 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "icon");
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    if ((v4 & 2) != 0)
    {
LABEL_12:
      if ((v4 & 4) == 0)
      {
        -[SBHIconManager _effectiveTodayViewController](self, "_effectiveTodayViewController");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        v14 = v13;
        if (v13 && (objc_msgSend(v13, "isDisplayingIcon:", v6) & 1) != 0)
        {

          goto LABEL_22;
        }

      }
      if (-[SBHIconManager isRootFolderContentVisible](self, "isRootFolderContentVisible"))
      {
        -[SBHIconManager _currentFolderController](self, "_currentFolderController");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        v16 = v15;
        if (v10 && (objc_msgSend(v15, "isDisplayingIcon:", v10) & 1) != 0)
        {

          goto LABEL_22;
        }
        v17 = objc_msgSend(v16, "isDisplayingIcon:", v6);

        if ((v17 & 1) != 0)
          goto LABEL_22;
      }
      v18 = 0;
      goto LABEL_24;
    }
  }
  -[SBHIconManager floatingDockViewController](self, "floatingDockViewController");
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v11)
    goto LABEL_12;
  -[SBHIconManager floatingDockViewController](self, "floatingDockViewController");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  if (!-[SBHIconManager isFloatingDockVisible](self, "isFloatingDockVisible")
    || (!v10 || (objc_msgSend(v12, "isDisplayingIcon:", v10) & 1) == 0)
    && (objc_msgSend(v12, "isDisplayingIcon:", v6) & 1) == 0)
  {

    goto LABEL_12;
  }

LABEL_22:
  v18 = 1;
LABEL_24:

  return v18;
}

- (id)bestHomeScreenLocationForIcon:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  __CFString **v7;
  __CFString *v8;
  void *v9;

  v4 = a3;
  -[SBHIconManager rootFolder](self, "rootFolder");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "indexPathForIcon:", v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (v6)
  {
    if ((objc_msgSend(v5, "isIconAtIndexPathInDock:", v6) & 1) != 0)
    {
      v7 = SBIconLocationDock;
LABEL_9:
      v8 = *v7;
      goto LABEL_10;
    }
    if ((objc_msgSend(v5, "isIconAtIndexPathInTodayList:", v6) & 1) == 0
      && (objc_msgSend(v5, "isIconAtIndexPathInIgnoredList:", v6) & 1) == 0)
    {
      objc_msgSend(v5, "folderContainingIndexPath:relativeIndexPath:", v6, 0);
      v9 = (void *)objc_claimAutoreleasedReturnValue();

      v7 = SBIconLocationFolder;
      if (v9 == v5)
        v7 = SBIconLocationRoot;
      goto LABEL_9;
    }
  }
  v8 = 0;
LABEL_10:

  return v8;
}

BOOL __47__SBHIconManager_firstIconViewForIcon_options___block_invoke_2(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  objc_msgSend(a2, "firstIconViewForIcon:", *(_QWORD *)(a1 + 32));
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

  return *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) != 0;
}

- (BOOL)isDisplayingIcon:(id)a3 options:(unint64_t)a4
{
  id v7;
  uint64_t v8;
  id v9;
  _QWORD v11[4];
  id v12;
  uint64_t *v13;
  _QWORD v14[4];
  id v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  char v20;

  v7 = a3;
  v17 = 0;
  v18 = &v17;
  v19 = 0x2020000000;
  v8 = MEMORY[0x1E0C809B0];
  v20 = 0;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 3221225472;
  v14[2] = __43__SBHIconManager_isDisplayingIcon_options___block_invoke;
  v14[3] = &unk_1E8D8AFC8;
  v16 = &v17;
  v15 = v7;
  v11[0] = v8;
  v11[1] = 3221225472;
  v11[2] = __43__SBHIconManager_isDisplayingIcon_options___block_invoke_2;
  v11[3] = &unk_1E8D8AFF0;
  v13 = &v17;
  v9 = v15;
  v12 = v9;
  SBIconViewQueryingHandleMethodRecursion(self, a4, (uint64_t)a2, v14, v11);
  LOBYTE(a4) = *((_BYTE *)v18 + 24);

  _Block_object_dispose(&v17, 8);
  return a4;
}

uint64_t __43__SBHIconManager_isDisplayingIcon_options___block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = objc_msgSend(a2, "isDisplayingIcon:options:", *(_QWORD *)(a1 + 32), a3);
  return *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
}

uint64_t __43__SBHIconManager_isDisplayingIcon_options___block_invoke_2(uint64_t a1, void *a2)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = objc_msgSend(a2, "isDisplayingIcon:", *(_QWORD *)(a1 + 32));
  return *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
}

- (BOOL)isIconViewRecycled:(id)a3
{
  id v4;
  void *v5;
  char v6;

  v4 = a3;
  -[SBHIconManager iconViewMap](self, "iconViewMap");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "isViewRecycled:", v4);

  return v6;
}

- (BOOL)isPresentingIconLocation:(id)a3
{
  id v4;
  void *v5;
  BOOL v6;
  void *v7;
  void *v8;
  double v9;

  v4 = a3;
  -[SBHIconManager _currentFolderController](self, "_currentFolderController");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v5, "isPresentingIconLocation:", v4) & 1) != 0)
  {
    v6 = 1;
  }
  else
  {
    -[SBHIconManager floatingDockViewController](self, "floatingDockViewController");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = v7;
    v6 = 0;
    if (v7)
    {
      objc_msgSend(v7, "dockOffscreenProgress");
      if (v9 < 1.0 && (objc_msgSend(v8, "isPresentingIconLocation:", v4) & 1) != 0)
        v6 = 1;
    }

  }
  return v6;
}

- (NSSet)presentedIconLocations
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  double v9;
  void *v10;

  objc_msgSend(MEMORY[0x1E0C99E20], "set");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager _currentFolderController](self, "_currentFolderController");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if (v4)
  {
    objc_msgSend(v4, "presentedIconLocations");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "unionSet:", v6);

  }
  -[SBHIconManager floatingDockViewController](self, "floatingDockViewController");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = v7;
  if (v7)
  {
    objc_msgSend(v7, "dockOffscreenProgress");
    if (v9 < 1.0)
    {
      objc_msgSend(v8, "presentedIconLocations");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "unionSet:", v10);

    }
  }

  return (NSSet *)v3;
}

- (BOOL)folderControllerShouldClose:(id)a3 withPinchGesture:(id)a4
{
  id v6;
  void *v7;
  SBWorkspaceInteractionContext *v8;

  v6 = a4;
  objc_msgSend(a3, "originatingIconLocation");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6)
    v8 = -[SBWorkspaceInteractionContext initWithGestureRecognizer:]([SBWorkspaceInteractionContext alloc], "initWithGestureRecognizer:", v6);
  else
    v8 = 0;
  -[SBHIconManager popExpandedIconFromLocation:interactionContext:animated:completionHandler:](self, "popExpandedIconFromLocation:interactionContext:animated:completionHandler:", v7, v8, 1, 0);

  return 0;
}

- (void)folderControllerShouldBeginEditing:(id)a3 withHaptic:(BOOL)a4
{
  void *v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  void *v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  void *v18;
  id v19;

  v19 = a3;
  if (-[SBHIconManager isEditingAllowed](self, "isEditingAllowed"))
  {
    objc_msgSend(v19, "view");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "view");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "center");
    v9 = v8;
    v11 = v10;
    -[SBHIconManager iconEditingFeedbackBehavior](self, "iconEditingFeedbackBehavior");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "view");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "convertPoint:toView:", v13, v9, v11);
    v15 = v14;
    v17 = v16;

    if (a4)
    {
      -[SBHIconManager iconEditingFeedbackBehavior](self, "iconEditingFeedbackBehavior");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      -[SBHIconManager setEditing:withFeedbackBehavior:location:](self, "setEditing:withFeedbackBehavior:location:", 1, v18, v15, v17);

    }
    else
    {
      -[SBHIconManager setEditing:withFeedbackBehavior:location:](self, "setEditing:withFeedbackBehavior:location:", 1, 0, v15, v17);
    }
  }

}

- (void)folderControllerShouldEndEditing:(id)a3
{
  -[SBHIconManager setEditing:](self, "setEditing:", 0);
}

- (void)folderController:(id)a3 didBeginEditingTitle:(id)a4
{
  -[SBHIconManager _discardEndEditingTimerAndDontResetUntilReasonIsRemoved:](self, "_discardEndEditingTimerAndDontResetUntilReasonIsRemoved:", CFSTR("FOLDER_TITLE_IS_BEING_EDITED"), a4);
}

- (void)folderController:(id)a3 didEndEditingTitle:(id)a4
{
  -[SBHIconManager _removeReasonToNotResetEndEditingTimer:](self, "_removeReasonToNotResetEndEditingTimer:", CFSTR("FOLDER_TITLE_IS_BEING_EDITED"), a4);
}

- (UIEdgeInsets)contentOverlayInsetsFromParentIfAvailableForFolderController:(id)a3
{
  id v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  UIEdgeInsets result;

  v4 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v5, "iconManager:contentOverlayInsetsFromParentIfAvailableForFolderController:", self, v4);
    v7 = v6;
    v9 = v8;
    v11 = v10;
    v13 = v12;
  }
  else
  {
    v7 = *MEMORY[0x1E0DC49E8];
    v9 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
    v11 = *(double *)(MEMORY[0x1E0DC49E8] + 16);
    v13 = *(double *)(MEMORY[0x1E0DC49E8] + 24);
  }

  v14 = v7;
  v15 = v9;
  v16 = v11;
  v17 = v13;
  result.right = v17;
  result.bottom = v16;
  result.left = v15;
  result.top = v14;
  return result;
}

- (void)folderControllerWillClose:(id)a3
{
  void *v4;
  id v5;

  v5 = a3;
  -[SBHIconManager _noteUserIsInteractingWithIcons](self, "_noteUserIsInteractingWithIcons");
  -[SBHIconManager delegate](self, "delegate");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v4, "iconManager:willCloseFolderController:", self, v5);

}

- (void)folderController:(id)a3 willRemoveFakeStatusBar:(id)a4
{
  id v6;
  void *v7;
  id v8;

  v8 = a3;
  v6 = a4;
  -[SBHIconManager delegate](self, "delegate");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v7, "iconManager:willRemoveFakeStatusBar:forFolderController:", self, v6, v8);

}

- (void)folderController:(id)a3 willUseIconTransitionAnimator:(id)a4 forOperation:(int64_t)a5 onViewController:(id)a6 animated:(BOOL)a7
{
  id v8;

  v8 = a4;
  objc_msgSend(v8, "setDelegate:", self);
  -[SBHIconManager setCurrentTransitionAnimator:](self, "setCurrentTransitionAnimator:", v8);

}

- (void)rootFolderController:(id)a3 wantsToAdjustLeadingCustomContentForEdgeBounceForScrollOffset:(CGPoint)a4
{
  double y;
  double x;
  id v7;

  y = a4.y;
  x = a4.x;
  -[SBHIconManager delegate](self, "delegate", a3);
  v7 = (id)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v7, "iconManager:wantsToAdjustLeadingCustomContentForEdgeBounceForScrollOffset:", self, x, y);

}

- (double)distanceToTopOfSpotlightIconsForRootFolderController:(id)a3
{
  void *v4;
  double v5;
  double v6;

  -[SBHIconManager delegate](self, "delegate", a3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = 0.0;
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v4, "distanceToTopOfSpotlightIconsForIconManager:", self);
    v5 = v6;
  }

  return v5;
}

- (double)maxExternalDockHeightForRootFolderController:(id)a3
{
  void *v3;
  double v4;
  double v5;

  -[SBHIconManager floatingDockViewController](self, "floatingDockViewController", a3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "maximumContentHeight");
  v5 = v4;

  return v5;
}

- (double)externalDockHeightForRootFolderController:(id)a3
{
  void *v3;
  double v4;
  double v5;

  -[SBHIconManager floatingDockViewController](self, "floatingDockViewController", a3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "contentHeight");
  v5 = v4;

  return v5;
}

- (double)preferredExternalDockVerticalMarginForRootFolderController:(id)a3
{
  void *v3;
  double v4;
  double v5;

  -[SBHIconManager floatingDockViewController](self, "floatingDockViewController", a3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "preferredVerticalMargin");
  v5 = v4;

  return v5;
}

- (id)backgroundViewForDockForRootFolderController:(id)a3
{
  id v4;
  void *v5;
  void *v6;

  v4 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v5, "iconManager:backgroundViewForDockForRootFolderController:", self, v4);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v6 = 0;
  }

  return v6;
}

- (id)backgroundViewForEditingDoneButtonForRootFolderController:(id)a3
{
  id v4;
  void *v5;
  void *v6;

  v4 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v5, "iconManager:backgroundViewForEditingDoneButtonForRootFolderController:", self, v4);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v6 = 0;
  }

  return v6;
}

- (BOOL)rootFolderControllerCanUseSeparateWindowForRotation:(id)a3
{
  void *v4;
  char v5;

  -[SBHIconManager delegate](self, "delegate", a3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v5 = objc_msgSend(v4, "iconManagerCanUseSeparateWindowForRotation:", self);
  else
    v5 = 1;

  return v5;
}

- (void)rootFolderController:(id)a3 statusBarInsetsDidChange:(UIEdgeInsets)a4
{
  double right;
  double bottom;
  double left;
  double top;
  id v9;

  right = a4.right;
  bottom = a4.bottom;
  left = a4.left;
  top = a4.top;
  -[SBHIconManager delegate](self, "delegate", a3);
  v9 = (id)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v9, "iconManager:statusBarInsetsDidChange:", self, top, left, bottom, right);

}

- (void)rootFolderController:(id)a3 willUseTransitionContext:(id)a4 toTransitionToState:(int64_t)a5
{
  id v8;
  void *v9;
  id v10;

  v10 = a3;
  v8 = a4;
  -[SBHIconManager delegate](self, "delegate");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v9, "iconManager:rootFolderController:willUseTransitionContext:toTransitionToState:", self, v10, v8, a5);

}

- (void)rootFolderController:(id)a3 willUsePropertyAnimator:(id)a4 toTransitionToState:(int64_t)a5
{
  id v8;
  void *v9;
  id v10;

  v10 = a3;
  v8 = a4;
  -[SBHIconManager delegate](self, "delegate");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v9, "iconManager:rootFolderController:willUsePropertyAnimator:toTransitionToState:", self, v10, v8, a5);

}

- (void)rootFolderController:(id)a3 didOverscrollOnFirstPageByAmount:(double)a4
{
  void *v6;
  id v7;

  v7 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v6, "iconManager:rootFolderController:didOverscrollOnFirstPageByAmount:", self, v7, a4);

}

- (void)rootFolderController:(id)a3 didEndOverscrollOnFirstPageWithVelocity:(double)a4 translation:(double)a5
{
  void *v8;
  id v9;

  v9 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v8, "iconManager:rootFolderController:didEndOverscrollOnFirstPageWithVelocity:translation:", self, v9, a4, a5);

}

- (void)rootFolderController:(id)a3 didOverscrollOnLastPageByAmount:(double)a4
{
  void *v6;
  id v7;

  v7 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v6, "iconManager:rootFolderController:didOverscrollOnLastPageByAmount:", self, v7, a4);

}

- (void)rootFolderController:(id)a3 didEndOverscrollOnLastPageWithVelocity:(double)a4 translation:(double)a5
{
  void *v8;
  id v9;

  v9 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v8, "iconManager:rootFolderController:didEndOverscrollOnLastPageWithVelocity:translation:", self, v9, a4, a5);

}

- (void)rootFolderControllerViewWillAppear:(id)a3
{
  id v3;

  -[SBHIconManager usageMonitor](self, "usageMonitor", a3);
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "noteIconManagerRootFolderControllerViewWillAppear");

}

- (void)rootFolderController:(id)a3 viewDidTransitionToSize:(CGSize)a4
{
  id v4;

  -[SBHIconManager iconShareSheetManager](self, "iconShareSheetManager", a3, a4.width, a4.height);
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "showIconShareSheetsIfAnyWereHiddenForRotationAnimation");

}

- (void)iconSizeButtonTriggered
{
  -[SBHIconManager _updateShouldUseHomeScreenLargeIconSize:](self, "_updateShouldUseHomeScreenLargeIconSize:", -[SBHIconStyleLabelHidingView shouldUseLargeIcons](self->_labelHidingView, "shouldUseLargeIcons"));
}

- (id)_fetchCurrentStyleConfiguration
{
  void *v3;
  void *v4;

  -[SBHIconManager delegate](self, "delegate");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v3, "iconStylePickerConfigurationForIconManager:", self);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v4 = 0;
  }

  return v4;
}

- (void)_updateStyleConfiguration:(id)a3
{
  void *v4;
  id v5;

  v5 = a3;
  -[SBHIconManager delegate](self, "delegate");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v4, "updateStyleConfiguration:forIconManager:", v5, self);

}

- (void)_updateShouldUseHomeScreenLargeIconSize:(BOOL)a3
{
  id v4;

  if (-[SBHIconManager _shouldUseHomeScreenLargeIconSize](self, "_shouldUseHomeScreenLargeIconSize") != a3)
  {
    -[SBHIconManager delegate](self, "delegate");
    v4 = (id)objc_claimAutoreleasedReturnValue();
    if ((objc_opt_respondsToSelector() & 1) != 0)
      objc_msgSend(v4, "iconManagerWantsIconSizeToggled:", self);

  }
}

- (BOOL)_shouldUseHomeScreenLargeIconSize
{
  void *v3;
  char v4;

  -[SBHIconManager delegate](self, "delegate");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v4 = objc_msgSend(v3, "shouldUseHomeScreenLargeIconSizeForIconManager:", self);
  else
    v4 = 0;

  return v4;
}

- (void)toggleHomeScreenWallpaperDim:(id)a3
{
  void *v4;
  id v5;

  -[SBHIconManager delegate](self, "delegate", a3);
  v5 = (id)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v5, "iconManagerToggleHomeScreenWallpaperDimming:", self);
  -[UIBarButtonItem customView](self->_dimBarButtonItem, "customView");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setDimmed:animated:", -[SBHIconManager currentHomeScreenWallpaperDimState](self, "currentHomeScreenWallpaperDimState"), 1);

}

- (BOOL)currentHomeScreenWallpaperDimState
{
  void *v3;
  char v4;

  -[SBHIconManager delegate](self, "delegate");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v4 = objc_msgSend(v3, "isHomeScreenWallpaperDimmedForIconManager:", self);
  else
    v4 = 0;

  return v4;
}

- (void)_engageWallpaperTintColorDropper:(id)a3
{
  NSObject *v4;
  NSObject *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  _UIColorSampler *v12;
  _UIColorSampler *eyeDropperColorSampler;
  NSObject *v14;
  _UIColorSampler *v15;
  id v16;
  id v17;
  _QWORD v18[4];
  id v19;
  SBHIconManager *v20;
  id v21;
  _QWORD v22[4];
  id v23;
  NSObject *v24;
  uint8_t buf[16];

  SBLogIconStylePicker();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_1CFEF3000, v4, OS_LOG_TYPE_DEFAULT, "Activating tint color eyedropper...", buf, 2u);
  }

  if (self->_isHomeScreenTintColorEyeDropperActive)
  {
    SBLogIconStylePicker();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1CFEF3000, v5, OS_LOG_TYPE_DEFAULT, "Eye dropper is already active, bailing.", buf, 2u);
    }
  }
  else
  {
    self->_isHomeScreenTintColorEyeDropperActive = 1;
    -[SBHIconManager rootViewController](self, "rootViewController");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager currentStylePickerViewController](self, "currentStylePickerViewController");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "navigationController");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "sheetPresentationController");
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    v10 = MEMORY[0x1E0C809B0];
    v22[0] = MEMORY[0x1E0C809B0];
    v22[1] = 3221225472;
    v22[2] = __51__SBHIconManager__engageWallpaperTintColorDropper___block_invoke;
    v22[3] = &unk_1E8D84EF0;
    v11 = v9;
    v23 = v11;
    v5 = v6;
    v24 = v5;
    objc_msgSend(v11, "animateChanges:", v22);
    v12 = (_UIColorSampler *)objc_opt_new();
    eyeDropperColorSampler = self->_eyeDropperColorSampler;
    self->_eyeDropperColorSampler = v12;

    -[_UIColorSampler setFloatEyedropperOnStart:](self->_eyeDropperColorSampler, "setFloatEyedropperOnStart:", 1);
    SBLogIconStylePicker();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1CFEF3000, v14, OS_LOG_TYPE_DEFAULT, "Showing tint color eyedropper", buf, 2u);
    }

    v15 = self->_eyeDropperColorSampler;
    v18[0] = v10;
    v18[1] = 3221225472;
    v18[2] = __51__SBHIconManager__engageWallpaperTintColorDropper___block_invoke_793;
    v18[3] = &unk_1E8D8CFF0;
    v19 = v11;
    v20 = self;
    v21 = v7;
    v16 = v7;
    v17 = v11;
    -[_UIColorSampler showSamplerWithSelectionHandler:](v15, "showSamplerWithSelectionHandler:", v18);

  }
}

void __51__SBHIconManager__engageWallpaperTintColorDropper___block_invoke(uint64_t a1)
{
  void *v2;
  id v3;

  objc_msgSend(*(id *)(a1 + 32), "invalidateDetents");
  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "postNotificationName:object:", CFSTR("SBHIconManagerWillPresentEyeDropperNotification"), 0);

  objc_msgSend(*(id *)(a1 + 40), "contentView");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setAlpha:", 0.0);

}

void __51__SBHIconManager__engageWallpaperTintColorDropper___block_invoke_793(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  id v6;

  v3 = a2;
  v5 = *(id *)(a1 + 32);
  v6 = *(id *)(a1 + 48);
  v4 = v3;
  BSDispatchMain();

}

uint64_t __51__SBHIconManager__engageWallpaperTintColorDropper___block_invoke_2(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  SBLogIconStylePicker();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    v3 = *(_QWORD *)(a1 + 32);
    v5 = 138543362;
    v6 = v3;
    _os_log_impl(&dword_1CFEF3000, v2, OS_LOG_TYPE_DEFAULT, "Eyedropper called selection handler with color: %{public}@", (uint8_t *)&v5, 0xCu);
  }

  objc_msgSend(*(id *)(a1 + 40), "invalidateDetents");
  result = objc_msgSend(*(id *)(a1 + 48), "_invalidateWallpaperTintColorDropper");
  if (*(_QWORD *)(a1 + 32))
  {
    result = objc_opt_respondsToSelector();
    if ((result & 1) != 0)
      return objc_msgSend(*(id *)(a1 + 56), "_navigateHomeScreenColorPickerSlidersToColor:", *(_QWORD *)(a1 + 32));
  }
  return result;
}

- (void)_invalidateWallpaperTintColorDropper
{
  NSObject *v3;
  void *v4;
  NSObject *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  _UIColorSampler *eyeDropperColorSampler;
  _QWORD aBlock[4];
  id v13;
  uint8_t buf[16];

  SBLogIconStylePicker();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_1CFEF3000, v3, OS_LOG_TYPE_DEFAULT, "Invalidating tint color eyedropper...", buf, 2u);
  }

  if (self->_isHomeScreenTintColorEyeDropperActive)
  {
    self->_isHomeScreenTintColorEyeDropperActive = 0;
    -[SBHIconManager rootViewController](self, "rootViewController");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager currentStylePickerViewController](self, "currentStylePickerViewController");
    v5 = objc_claimAutoreleasedReturnValue();
    -[NSObject navigationController](v5, "navigationController");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "sheetPresentationController");
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 3221225472;
    aBlock[2] = __54__SBHIconManager__invalidateWallpaperTintColorDropper__block_invoke;
    aBlock[3] = &unk_1E8D84C50;
    v13 = v4;
    v8 = v4;
    v9 = _Block_copy(aBlock);
    v10 = v9;
    if (v7)
      objc_msgSend(v7, "animateChanges:", v9);
    else
      (*((void (**)(void *))v9 + 2))(v9);
    eyeDropperColorSampler = self->_eyeDropperColorSampler;
    self->_eyeDropperColorSampler = 0;

  }
  else
  {
    SBLogIconStylePicker();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1CFEF3000, v5, OS_LOG_TYPE_DEFAULT, "Eyedropper is not active, bailing", buf, 2u);
    }
  }

}

void __54__SBHIconManager__invalidateWallpaperTintColorDropper__block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NSObject *v4;
  uint8_t v5[16];

  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "postNotificationName:object:", CFSTR("SBHIconManagerDidDismissEyeDropperNotification"), 0);

  objc_msgSend(*(id *)(a1 + 32), "contentView");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setAlpha:", 1.0);

  SBLogIconStylePicker();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1CFEF3000, v4, OS_LOG_TYPE_DEFAULT, "Finished invalidating tint color eyedropper", v5, 2u);
  }

}

- (void)rootFolderController:(id)a3 willPresentPageManagementWithLayoutManager:(id)a4 animator:(id)a5 context:(id)a6
{
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;

  v15 = a4;
  v9 = a5;
  v10 = a6;
  -[SBHIconManager iconDragManager](self, "iconDragManager");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "cancelAllDrags");

  -[SBHIconManager _discardEndEditingTimerAndDontResetUntilReasonIsRemoved:](self, "_discardEndEditingTimerAndDontResetUntilReasonIsRemoved:", CFSTR("FolderPageManagement"));
  -[SBHIconManager delegate](self, "delegate");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    -[SBHIconManager focusModeManager](self, "focusModeManager");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "activeFocusMode");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "setActiveFocusMode:", v14);
    objc_msgSend(v12, "iconManager:willPresentPageManagementWithLayoutManager:animator:context:", self, v15, v9, v10);

  }
}

- (void)rootFolderController:(id)a3 willDismissPageManagementUsingAnimator:(id)a4 context:(id)a5
{
  id v7;
  void *v8;
  void *v9;
  id v10;

  v10 = a4;
  v7 = a5;
  -[SBHIconManager iconDragManager](self, "iconDragManager");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "cancelAllDrags");

  -[SBHIconManager _removeReasonToNotResetEndEditingTimer:](self, "_removeReasonToNotResetEndEditingTimer:", CFSTR("FolderPageManagement"));
  -[SBHIconManager delegate](self, "delegate");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v9, "iconManager:willDismissPageManagementUsingAnimator:context:", self, v10, v7);

}

- (void)rootFolderController:(id)a3 didDismissPageManagementWithLayoutManager:(id)a4 context:(id)a5
{
  id v7;
  void *v8;
  id v9;

  v9 = a4;
  v7 = a5;
  -[SBHIconManager delegate](self, "delegate");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v8, "iconManager:didDismissPageManagementWithLayoutManager:context:", self, v9, v7);

}

- (id)_effectiveWidgetMultiplexingManager
{
  NSMutableDictionary *v3;
  NSMutableDictionary *widgetMultiplexingManagersForLayoutOptions;
  void *v5;
  SBHMultiplexingManager *v6;

  if (!self->_widgetMultiplexingManagersForLayoutOptions)
  {
    objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
    v3 = (NSMutableDictionary *)objc_claimAutoreleasedReturnValue();
    widgetMultiplexingManagersForLayoutOptions = self->_widgetMultiplexingManagersForLayoutOptions;
    self->_widgetMultiplexingManagersForLayoutOptions = v3;

  }
  _SBHLayoutOptionsKeyTypeForListLayoutProvider(self->_listLayoutProvider);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[NSMutableDictionary objectForKey:](self->_widgetMultiplexingManagersForLayoutOptions, "objectForKey:", v5);
  v6 = (SBHMultiplexingManager *)objc_claimAutoreleasedReturnValue();
  if (!v6)
  {
    v6 = -[SBHMultiplexingManager initWithDelegate:]([SBHMultiplexingManager alloc], "initWithDelegate:", self);
    -[SBHMultiplexingManager setCachedRecentViewControllerCountLimit:](v6, "setCachedRecentViewControllerCountLimit:", 10);
    -[NSMutableDictionary setObject:forKey:](self->_widgetMultiplexingManagersForLayoutOptions, "setObject:forKey:", v6, v5);
  }

  return v6;
}

- (id)_effectiveAppPredictionViewControllersForUniqueIdentifier
{
  NSMutableDictionary *v3;
  NSMutableDictionary *appPredictionViewControllersForUniqueIdentifierForLayoutOptions;
  void *v5;
  void *v6;

  if (!self->_appPredictionViewControllersForUniqueIdentifierForLayoutOptions)
  {
    objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
    v3 = (NSMutableDictionary *)objc_claimAutoreleasedReturnValue();
    appPredictionViewControllersForUniqueIdentifierForLayoutOptions = self->_appPredictionViewControllersForUniqueIdentifierForLayoutOptions;
    self->_appPredictionViewControllersForUniqueIdentifierForLayoutOptions = v3;

  }
  _SBHLayoutOptionsKeyTypeForListLayoutProvider(self->_listLayoutProvider);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[NSMutableDictionary objectForKey:](self->_appPredictionViewControllersForUniqueIdentifierForLayoutOptions, "objectForKey:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v6)
  {
    objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSMutableDictionary setObject:forKey:](self->_appPredictionViewControllersForUniqueIdentifierForLayoutOptions, "setObject:forKey:", v6, v5);
  }

  return v6;
}

- (id)rootFolderController:(id)a3 draggedIconForStackConfigurationInteractionForIdentifier:(id)a4
{
  id v5;
  void *v6;
  void *v7;

  v5 = a4;
  -[SBHIconManager iconDragManager](self, "iconDragManager");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "draggedIconForIdentifier:", v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

- (void)rootFolderController:(id)a3 handleInsertionForWidgetIcon:(id)a4 withReferenceIconView:(id)a5 fromPresenter:(id)a6 dismissViewControllerHandler:(id)a7
{
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  SBHIconManager *v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  SBHIconManager *v33;
  id v34;
  id v35;
  id v36;
  void (**v37)(_QWORD);
  id v38;
  void (**v39)(_QWORD);
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  uint64_t v44;
  id v45;
  void *v46;
  SBHIconGridPath *v47;
  id v48;
  void *v49;
  void *v50;
  id v51;
  SBHIconGridPath *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  void *v56;
  id v57;
  void *v58;
  void *v59;
  void *v60;
  _QWORD v61[4];
  id v62;
  id v63;
  id v64;
  _QWORD v65[4];
  id v66;
  id v67;
  id v68;
  SBHIconManager *v69;
  id v70;
  id v71;
  _QWORD v72[4];
  id v73;
  id v74;
  SBHIconManager *v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  _QWORD aBlock[6];

  v12 = a3;
  v13 = a4;
  v14 = a5;
  v15 = a6;
  v16 = a7;
  v58 = v12;
  objc_msgSend(v12, "folder");
  v59 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v59, "todayList");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = objc_opt_class();
  v19 = v15;
  if (v18)
  {
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v20 = v19;
    else
      v20 = 0;
  }
  else
  {
    v20 = 0;
  }
  v21 = v20;

  -[SBHIconManager _effectiveTodayViewController](self, "_effectiveTodayViewController");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = self;
  v24 = MEMORY[0x1E0C809B0];
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = __133__SBHIconManager_rootFolderController_handleInsertionForWidgetIcon_withReferenceIconView_fromPresenter_dismissViewControllerHandler___block_invoke;
  aBlock[3] = &unk_1E8D8D020;
  aBlock[4] = v23;
  v60 = v19;
  v25 = _Block_copy(aBlock);
  v72[0] = v24;
  v72[1] = 3221225472;
  v72[2] = __133__SBHIconManager_rootFolderController_handleInsertionForWidgetIcon_withReferenceIconView_fromPresenter_dismissViewControllerHandler___block_invoke_2;
  v72[3] = &unk_1E8D8D110;
  v26 = v13;
  v73 = v26;
  v27 = v17;
  v74 = v27;
  v75 = v23;
  v28 = v21;
  v76 = v28;
  v57 = v14;
  v77 = v57;
  v29 = v25;
  v79 = v29;
  v30 = v16;
  v80 = v30;
  v31 = v22;
  v78 = v31;
  v32 = _Block_copy(v72);
  v65[0] = v24;
  v33 = v23;
  v65[1] = 3221225472;
  v65[2] = __133__SBHIconManager_rootFolderController_handleInsertionForWidgetIcon_withReferenceIconView_fromPresenter_dismissViewControllerHandler___block_invoke_8;
  v65[3] = &unk_1E8D8D138;
  v34 = v31;
  v66 = v34;
  v35 = v27;
  v67 = v35;
  v36 = v26;
  v68 = v36;
  v37 = (void (**)(_QWORD))v30;
  v69 = v33;
  v70 = v37;
  v38 = v32;
  v71 = v38;
  v39 = (void (**)(_QWORD))_Block_copy(v65);
  if (objc_msgSend(v60, "presenterType") == 1)
  {
    v39[2](v39);
LABEL_11:
    v42 = v58;
    goto LABEL_19;
  }
  if (objc_msgSend(v60, "presenterType") == 2 && v28)
  {
    objc_msgSend(v28, "iconListView");
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v40, "model");
    v41 = (void *)objc_claimAutoreleasedReturnValue();

    (*((void (**)(id, void *))v38 + 2))(v38, v41);
    goto LABEL_11;
  }
  v56 = v29;
  v42 = v58;
  objc_msgSend(v58, "currentIconListModel");
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v43, "isAllowedToContainIcon:", v36))
  {
    v54 = -[SBHIconManager gridCellInfoOptions](v33, "gridCellInfoOptions");
    v44 = objc_msgSend(v43, "bestGridCellIndexForInsertingIcon:gridCellInfoOptions:", v36);
    v55 = v43;
    if (v44 == 0x7FFFFFFFFFFFFFFFLL)
    {
      v45 = (id)objc_msgSend(v59, "addIcon:toListAtIndex:options:", v36, objc_msgSend(v59, "indexOfList:", v43), 10);
    }
    else
    {
      v53 = v44;
      v52 = [SBHIconGridPath alloc];
      objc_msgSend(v43, "uniqueIdentifier");
      v46 = (void *)objc_claimAutoreleasedReturnValue();
      v47 = -[SBHIconGridPath initWithFolderIdentifier:listIdentifier:gridCellIndex:gridCellInfoOptions:](v52, "initWithFolderIdentifier:listIdentifier:gridCellIndex:gridCellInfoOptions:", 0, v46, v53, v54);

      v42 = v58;
      v48 = (id)objc_msgSend(v59, "insertIcon:atGridPath:options:", v36, v47, 16777218);

    }
    objc_msgSend(v42, "setCurrentPageIndexToListDirectlyContainingIcon:animated:", v36, 0);
    objc_msgSend(v42, "currentIconListView");
    v49 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager widgetInsertionRippleIconAnimatorForIcon:iconListView:withReferenceIconView:](v33, "widgetInsertionRippleIconAnimatorForIcon:iconListView:withReferenceIconView:", v36, 0, v57);
    v50 = (void *)objc_claimAutoreleasedReturnValue();
    v61[0] = MEMORY[0x1E0C809B0];
    v61[1] = 3221225472;
    v61[2] = __133__SBHIconManager_rootFolderController_handleInsertionForWidgetIcon_withReferenceIconView_fromPresenter_dismissViewControllerHandler___block_invoke_9;
    v61[3] = &unk_1E8D8D048;
    v64 = v56;
    v62 = v36;
    v63 = v49;
    v51 = v49;
    objc_msgSend(v50, "animateWithCompletion:", v61);
    v37[2](v37);

    v42 = v58;
    v43 = v55;
  }
  else
  {
    v39[2](v39);
  }

  v29 = v56;
LABEL_19:

}

void __133__SBHIconManager_rootFolderController_handleInsertionForWidgetIcon_withReferenceIconView_fromPresenter_dismissViewControllerHandler___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v5 = a2;
  objc_msgSend(a3, "displayedIconViewForIcon:", v5);
  v9 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "activeWidget");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (v9 && v6)
  {
    objc_msgSend(*(id *)(a1 + 32), "widgetExtensionProvider");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "sbh_descriptorForWidgetIdentifiable:", v6);
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    if (objc_msgSend(v9, "supportsConfigurationCard")
      && objc_msgSend(v8, "promptsForUserConfiguration"))
    {
      objc_msgSend(v9, "presentConfigurationCard");
    }

  }
}

void __133__SBHIconManager_rootFolderController_handleInsertionForWidgetIcon_withReferenceIconView_fromPresenter_dismissViewControllerHandler___block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  SBIconListLayoutBlockObserver *v13;
  id v14;
  void (**v15)(_QWORD, double);
  SBIconListLayoutBlockObserver *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  id v26;
  _QWORD v27[4];
  SBIconListLayoutBlockObserver *v28;
  id v29;
  _QWORD *v30;
  _QWORD v31[4];
  SBIconListLayoutBlockObserver *v32;
  id v33;
  id v34;
  _QWORD aBlock[5];
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  _QWORD *v43;
  _QWORD v44[3];
  char v45;

  v3 = a2;
  +[SBPlaceholderIcon placeholderForIcon:](SBPlaceholderIcon, "placeholderForIcon:", *(_QWORD *)(a1 + 32));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "addIcon:", v4);
  if (objc_msgSend(v3, "directlyContainsIcon:", v4))
  {
    v5 = *(id *)(a1 + 40);
    if (v5 == v3)
    {
      objc_msgSend(*(id *)(a1 + 48), "rootFolder");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "indexPathForIcon:", v4);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(a1 + 48), "iconListViewForIndexPath:", v8);
      v6 = (void *)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      objc_msgSend(*(id *)(a1 + 56), "iconListView");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
    }
    v44[0] = 0;
    v44[1] = v44;
    v44[2] = 0x2020000000;
    v45 = 0;
    v9 = MEMORY[0x1E0C809B0];
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 3221225472;
    aBlock[2] = __133__SBHIconManager_rootFolderController_handleInsertionForWidgetIcon_withReferenceIconView_fromPresenter_dismissViewControllerHandler___block_invoke_3;
    aBlock[3] = &unk_1E8D8D098;
    v10 = *(_QWORD *)(a1 + 48);
    v43 = v44;
    aBlock[4] = v10;
    v36 = v3;
    v11 = v4;
    v37 = v11;
    v38 = *(id *)(a1 + 32);
    v26 = v6;
    v39 = v26;
    v40 = *(id *)(a1 + 64);
    v41 = *(id *)(a1 + 80);
    v42 = *(id *)(a1 + 88);
    v12 = _Block_copy(aBlock);
    v31[0] = v9;
    v31[1] = 3221225472;
    v31[2] = __133__SBHIconManager_rootFolderController_handleInsertionForWidgetIcon_withReferenceIconView_fromPresenter_dismissViewControllerHandler___block_invoke_6;
    v31[3] = &unk_1E8D8D0C0;
    v13 = objc_alloc_init(SBIconListLayoutBlockObserver);
    v32 = v13;
    v14 = v11;
    v33 = v14;
    v15 = v12;
    v34 = v15;
    -[SBIconListLayoutBlockObserver setDidAddIconViewBlock:](v13, "setDidAddIconViewBlock:", v31);
    objc_msgSend(v26, "addLayoutObserver:", v13);
    v27[0] = v9;
    v27[1] = 3221225472;
    v27[2] = __133__SBHIconManager_rootFolderController_handleInsertionForWidgetIcon_withReferenceIconView_fromPresenter_dismissViewControllerHandler___block_invoke_7;
    v27[3] = &unk_1E8D8D0E8;
    v16 = v13;
    v28 = v16;
    v30 = v44;
    v29 = *(id *)(a1 + 88);
    v17 = _Block_copy(v27);
    if (v5 == v3)
    {
      v22 = *(void **)(a1 + 72);
      objc_msgSend(MEMORY[0x1E0DC3708], "currentDevice");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      v24 = objc_msgSend(v23, "userInterfaceIdiom");

      objc_msgSend(v22, "scrollIconToVisible:atPosition:animated:completion:", v14, 0, (v24 & 0xFFFFFFFFFFFFFFFBLL) == 1, v17);
      objc_msgSend(*(id *)(a1 + 72), "listView");
    }
    else
    {
      v18 = *(void **)(a1 + 56);
      objc_msgSend(MEMORY[0x1E0DC3708], "currentDevice");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      v20 = objc_msgSend(v19, "userInterfaceIdiom");

      objc_msgSend(v18, "scrollIconToVisible:animated:completion:", v14, (v20 & 0xFFFFFFFFFFFFFFFBLL) == 1, v17);
      objc_msgSend(*(id *)(a1 + 56), "iconListView");
    }
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "displayedIconViewForIcon:", v14);
    v25 = (void *)objc_claimAutoreleasedReturnValue();

    if (v25)
    {
      -[SBIconListLayoutBlockObserver invalidate](v16, "invalidate");
      v15[2](v15, 0.0);
    }

    _Block_object_dispose(v44, 8);
  }
  else
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 88) + 16))();
  }

}

void __133__SBHIconManager_rootFolderController_handleInsertionForWidgetIcon_withReferenceIconView_fromPresenter_dismissViewControllerHandler___block_invoke_3(uint64_t a1, double a2)
{
  uint64_t v2;
  dispatch_time_t v4;
  void *v5;
  _QWORD v6[5];
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;

  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 96) + 8);
  if (!*(_BYTE *)(v2 + 24))
  {
    *(_BYTE *)(v2 + 24) = 1;
    v4 = dispatch_time(0, (uint64_t)(a2 * 1000000000.0));
    v6[0] = MEMORY[0x1E0C809B0];
    v6[1] = 3221225472;
    v6[2] = __133__SBHIconManager_rootFolderController_handleInsertionForWidgetIcon_withReferenceIconView_fromPresenter_dismissViewControllerHandler___block_invoke_4;
    v6[3] = &unk_1E8D8D070;
    v5 = *(void **)(a1 + 40);
    v6[4] = *(_QWORD *)(a1 + 32);
    v7 = v5;
    v8 = *(id *)(a1 + 48);
    v9 = *(id *)(a1 + 56);
    v10 = *(id *)(a1 + 64);
    v11 = *(id *)(a1 + 72);
    v12 = *(id *)(a1 + 80);
    v13 = *(id *)(a1 + 88);
    dispatch_after(v4, MEMORY[0x1E0C80D38], v6);

  }
}

void __133__SBHIconManager_rootFolderController_handleInsertionForWidgetIcon_withReferenceIconView_fromPresenter_dismissViewControllerHandler___block_invoke_4(uint64_t a1)
{
  id v2;
  void *v3;
  _QWORD v4[4];
  id v5;
  id v6;
  id v7;

  v2 = (id)objc_msgSend(*(id *)(a1 + 40), "replaceIcon:withIcon:gridCellInfoOptions:mutationOptions:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), objc_msgSend(*(id *)(a1 + 32), "gridCellInfoOptions"), 0);
  objc_msgSend(*(id *)(a1 + 64), "layoutAndCreateIcon:", *(_QWORD *)(a1 + 56));
  objc_msgSend(*(id *)(a1 + 32), "widgetInsertionRippleIconAnimatorForIcon:iconListView:withReferenceIconView:", *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __133__SBHIconManager_rootFolderController_handleInsertionForWidgetIcon_withReferenceIconView_fromPresenter_dismissViewControllerHandler___block_invoke_5;
  v4[3] = &unk_1E8D8D048;
  v7 = *(id *)(a1 + 80);
  v5 = *(id *)(a1 + 56);
  v6 = *(id *)(a1 + 64);
  objc_msgSend(v3, "animateWithCompletion:", v4);
  (*(void (**)(void))(*(_QWORD *)(a1 + 88) + 16))();

}

uint64_t __133__SBHIconManager_rootFolderController_handleInsertionForWidgetIcon_withReferenceIconView_fromPresenter_dismissViewControllerHandler___block_invoke_5(_QWORD *a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

void __133__SBHIconManager_rootFolderController_handleInsertionForWidgetIcon_withReferenceIconView_fromPresenter_dismissViewControllerHandler___block_invoke_6(uint64_t a1, uint64_t a2, void *a3)
{
  void *v5;
  int v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  __n128 v10;
  id v11;

  v11 = *(id *)(a1 + 32);
  objc_msgSend(a3, "icon");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "isEqual:", *(_QWORD *)(a1 + 40));

  if (v6)
  {
    v7 = *(_QWORD *)(a1 + 48);
    objc_msgSend(MEMORY[0x1E0DC3708], "currentDevice");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "userInterfaceIdiom");

    v10.n128_u64[0] = 0x3FD3333333333333;
    if ((v9 & 0xFFFFFFFFFFFFFFFBLL) != 1)
      v10.n128_f64[0] = 0.0;
    (*(void (**)(uint64_t, __n128))(v7 + 16))(v7, v10);
    objc_msgSend(v11, "invalidate");
  }

}

uint64_t __133__SBHIconManager_rootFolderController_handleInsertionForWidgetIcon_withReferenceIconView_fromPresenter_dismissViewControllerHandler___block_invoke_7(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = objc_msgSend(*(id *)(a1 + 32), "invalidate");
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  if (!*(_BYTE *)(v3 + 24))
  {
    *(_BYTE *)(v3 + 24) = 1;
    return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  }
  return result;
}

uint64_t __133__SBHIconManager_rootFolderController_handleInsertionForWidgetIcon_withReferenceIconView_fromPresenter_dismissViewControllerHandler___block_invoke_8(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 32))
    return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 72) + 16))();
  objc_msgSend(*(id *)(a1 + 40), "addIcon:", *(_QWORD *)(a1 + 48));
  (*(void (**)(void))(*(_QWORD *)(a1 + 64) + 16))();
  return objc_msgSend(*(id *)(a1 + 56), "presentTodayOverlay");
}

uint64_t __133__SBHIconManager_rootFolderController_handleInsertionForWidgetIcon_withReferenceIconView_fromPresenter_dismissViewControllerHandler___block_invoke_9(_QWORD *a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

- (void)rootFolderController:(id)a3 noteDragItemWasConsumedExternallyForDropSession:(id)a4
{
  id v5;
  id v6;

  v5 = a4;
  -[SBHIconManager iconDragManager](self, "iconDragManager");
  v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "noteDragItemWasConsumedExternallyForDropSession:", v5);

}

- (void)rootFolderController:(id)a3 noteDidRemoveSuggestedWidgetIcon:(id)a4
{
  -[SBHIconManager hideSuggestedWidgetFromStack:](self, "hideSuggestedWidgetFromStack:", a4);
}

- (id)rootFolderController:(id)a3 dragPreviewForIconView:(id)a4
{
  id v5;
  void *v6;
  void *v7;

  v5 = a4;
  -[SBHIconManager delegate](self, "delegate");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v6, "iconManager:dragPreviewForIconView:", self, v5);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v7 = 0;
  }

  return v7;
}

- (id)windowForStackConfigurationIconDragPreviewsForRootFolderController:(id)a3 forWindowScene:(id)a4
{
  id v5;
  void *v6;
  void *v7;

  v5 = a4;
  -[SBHIconManager delegate](self, "delegate");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v6, "windowForIconDragPreviewsForIconManager:forWindowScene:", self, v5);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v7 = 0;
  }

  return v7;
}

- (id)rootFolderController:(id)a3 promoteSuggestedWidget:(id)a4 withinStack:(id)a5
{
  return -[SBHIconManager promoteSuggestedWidget:withinStack:](self, "promoteSuggestedWidget:withinStack:", a4, a5);
}

- (BOOL)rootFolderController:(id)a3 allowsRemovalOfIconDataSourceWithinStack:(id)a4
{
  id v5;
  void *v6;
  char v7;

  v5 = a4;
  -[SBHIconManager delegate](self, "delegate");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v7 = objc_msgSend(v6, "iconManager:allowsRemovalOfIconDataSourceWithinStack:", self, v5);
  else
    v7 = 1;

  return v7;
}

- (void)rootFolderController:(id)a3 willPresentWidgetEditingViewController:(id)a4
{
  void *v5;
  id v6;

  -[SBHIconManager delegate](self, "delegate", a3, a4);
  v6 = (id)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v6, "iconManagerWillPresentWidgetEditing:", self);
  -[SBHIconManager _discardEndEditingTimerAndDontResetUntilReasonIsRemoved:](self, "_discardEndEditingTimerAndDontResetUntilReasonIsRemoved:", CFSTR("WIDGET_EDITING_PRESENTED"));
  -[SBHIconManager _effectiveWidgetMultiplexingManager](self, "_effectiveWidgetMultiplexingManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "discardCachedRecentViewControllers");

}

- (void)rootFolderController:(id)a3 didPresentWidgetEditingViewController:(id)a4
{
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v8 = a4;
  -[SBHIconManager _effectiveTodayViewController](self, "_effectiveTodayViewController");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v5, "keepIconImageViewControllersStaticForReason:", CFSTR("WIDGET_EDITING_PRESENTED"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (v6)
    {
      objc_msgSend(v8, "userInfo");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "setObject:forKey:", v6, CFSTR("WIDGET_EDITING_PRESENTED"));

    }
  }

}

- (void)rootFolderController:(id)a3 willDismissWidgetEditingViewController:(id)a4
{
  id v4;
  void *v5;
  void *v6;
  id v7;

  v4 = a4;
  objc_msgSend(v4, "userInfo");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "objectForKey:", CFSTR("WIDGET_EDITING_PRESENTED"));
  v7 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v7, "invalidate");
  objc_msgSend(v4, "userInfo");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "removeObjectForKey:", CFSTR("WIDGET_EDITING_PRESENTED"));
}

- (void)rootFolderController:(id)a3 didDismissWidgetEditingViewController:(id)a4
{
  id v5;

  -[SBHIconManager delegate](self, "delegate", a3, a4);
  v5 = (id)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v5, "iconManagerDidDismissWidgetEditing:", self);
  -[SBHIconManager _removeReasonToNotResetEndEditingTimer:](self, "_removeReasonToNotResetEndEditingTimer:", CFSTR("WIDGET_EDITING_PRESENTED"));

}

- (void)rootFolderController:(id)a3 prepareAddSheetViewController:(id)a4
{
  void *v5;
  id v6;

  v6 = a4;
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v5, "iconManager:prepareAddSheetViewController:", self, v6);

}

- (void)rootFolderController:(id)a3 willPresentAddSheetViewController:(id)a4
{
  id v4;

  -[SBHIconManager usageMonitor](self, "usageMonitor", a3, a4);
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "noteAddWidgetSheetWillPresent");

}

- (unint64_t)addWidgetSheetStyleForRootFolderController:(id)a3
{
  void *v3;
  unint64_t v4;

  -[SBHIconManager addWidgetSheetConfigurationManager](self, "addWidgetSheetConfigurationManager", a3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "addWidgetSheetStyle");

  return v4;
}

- (void)rootFolderControllerDidAcceptWidgetIntroduction:(id)a3
{
  void *v4;
  id v5;

  -[SBHIconManager usageMonitor](self, "usageMonitor", a3);
  v5 = (id)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager defaultFirstPageWidgetDescriptors](self, "defaultFirstPageWidgetDescriptors");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "noteWidgetDiscoverabilityDidAcceptSuggestion:", v4);

}

- (void)rootFolderControllerDidUndoWidgetIntroduction:(id)a3
{
  void *v4;
  id v5;

  -[SBHIconManager undoDefaultWidgets:](self, "undoDefaultWidgets:", 0);
  -[SBHIconManager usageMonitor](self, "usageMonitor");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager defaultFirstPageWidgetDescriptors](self, "defaultFirstPageWidgetDescriptors");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "noteWidgetDiscoverabilityDidRejectSuggestion:", v4);

}

- (void)rootFolderControllerDidEditWidgetIntroduction:(id)a3
{
  id v3;

  -[SBHIconManager usageMonitor](self, "usageMonitor", a3);
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "noteWidgetDiscoverabilityDidEnterEditingMode");

}

- (BOOL)rootFolderControllerDidSetPrototypeSettingEditAsUndo:(id)a3
{
  BOOL v3;
  void *v4;

  if (-[SBHIconManager prototypeSettingEditButtonAsUndo](self, "prototypeSettingEditButtonAsUndo", a3))
    return 1;
  if (!__sb__runningInSpringBoard())
  {
    objc_msgSend(MEMORY[0x1E0DC3708], "currentDevice");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v3 = objc_msgSend(v4, "userInterfaceIdiom") == 0;

    return v3;
  }
  return !SBFEffectiveDeviceClass() || SBFEffectiveDeviceClass() == 1;
}

- (unint64_t)widgetSheetPresenterTypeForRootFolderController:(id)a3
{
  return -[SBHIconManager isTodayViewEffectivelyVisible](self, "isTodayViewEffectivelyVisible", a3);
}

- (id)nestingViewController:(id)a3 interactionControllerForAnimationController:(id)a4
{
  void *v5;
  SBPinchInteractionProgress *v6;
  void *v7;
  void *v8;
  void *v9;
  double v10;
  SBHintInteractor *v11;
  void *v13;
  void *v14;
  void *v15;
  double v16;
  double v17;
  double v18;

  if (self->_currentTransitionAnimator == a4 && objc_msgSend(a4, "operation", a3) == 1)
  {
    -[SBHIconManager currentInteractionContext](self, "currentInteractionContext");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "interactionProgress");
    v6 = (SBPinchInteractionProgress *)objc_claimAutoreleasedReturnValue();
    if (v6)
      goto LABEL_4;
    objc_msgSend(v5, "gestureRecognizer");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = v13;
    if (!v13
      || (unint64_t)(objc_msgSend(v13, "state") - 1) > 1
      || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
    {
      v6 = 0;
      v11 = 0;
LABEL_17:

      goto LABEL_18;
    }
    +[SBHHomeScreenDomain rootSettings](SBHHomeScreenDomain, "rootSettings");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "folderSettings");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "minPinchScale");
    v17 = v16;

    v6 = -[SBPinchInteractionProgress initWithPinchGesture:minPinchScale:]([SBPinchInteractionProgress alloc], "initWithPinchGesture:minPinchScale:", v8, v17);
    if (v6)
    {
LABEL_4:
      -[UIInteractionProgress percentComplete](v6, "percentComplete");
      if (BSFloatLessThanFloat())
      {
        +[SBHHomeScreenDomain rootSettings](SBHHomeScreenDomain, "rootSettings");
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "iconAnimationSettings");
        v8 = (void *)objc_claimAutoreleasedReturnValue();

        -[SBHomeScreenIconTransitionAnimator childViewController](self->_currentTransitionAnimator, "childViewController");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
          objc_msgSend(v8, "maxFolderCloseHintProgress");
        else
          objc_msgSend(v8, "maxAppSuspendHintProgress");
        v18 = v10;

        v11 = -[SBHintInteractor initWithInteractionProgress:maxHintProgress:]([SBHintInteractor alloc], "initWithInteractionProgress:maxHintProgress:", v6, v18);
        goto LABEL_17;
      }
    }
    v11 = 0;
LABEL_18:

    return v11;
  }
  v11 = 0;
  return v11;
}

uint64_t __104__SBHIconManager_nestingViewController_willPerformOperation_onViewController_withTransitionCoordinator___block_invoke_5(uint64_t a1, void *a2)
{
  uint64_t result;

  result = objc_msgSend(a2, "isInteractive");
  if ((result & 1) == 0)
    return objc_msgSend(MEMORY[0x1E0DC3F10], "_recenterMotionEffects");
  return result;
}

- (id)animator:(id)a3 animationSettingsForOperation:(unint64_t)a4 childViewController:(id)a5
{
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;

  v8 = a3;
  v9 = a5;
  objc_msgSend(v8, "iconAnimator");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager delegate](self, "delegate");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) == 0)
  {
    +[SBHHomeScreenDomain rootSettings](SBHHomeScreenDomain, "rootSettings");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "iconAnimationSettings");
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      objc_msgSend(v14, "reducedMotionSettings");
      v15 = objc_claimAutoreleasedReturnValue();
    }
    else
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        if (a4)
          objc_msgSend(v14, "folderCloseSettings");
        else
          objc_msgSend(v14, "folderOpenSettings");
      }
      else
      {
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          if (a4)
            objc_msgSend(v14, "crossfadeSuspendSettings");
          else
            objc_msgSend(v14, "crossfadeLaunchSettings");
        }
        else
        {
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) == 0)
          {
            v12 = 0;
LABEL_20:

            goto LABEL_21;
          }
          if (a4)
            objc_msgSend(v14, "centerSuspendSettings");
          else
            objc_msgSend(v14, "centerLaunchSettings");
        }
      }
      v15 = objc_claimAutoreleasedReturnValue();
    }
    v12 = (void *)v15;
    goto LABEL_20;
  }
  objc_msgSend(v11, "iconManager:animator:animationSettingsForOperation:childViewController:", self, v8, a4, v9);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_21:

  return v12;
}

- (BOOL)animator:(id)a3 canAlterViewHierarchyDuringCleanupUsingBlock:(id)a4
{
  -[SBHIconManager performAfterAllIconTouchesFinishedUsingBlock:](self, "performAfterAllIconTouchesFinishedUsingBlock:", a4);
  return 0;
}

- (SBHIconGridSize)iconModel:(id)a3 listGridSizeForFolderClass:(Class)a4
{
  return (SBHIconGridSize)-[SBHIconManager listGridSizeForFolderClass:](self, "listGridSizeForFolderClass:", a4);
}

- (SBHIconGridSize)iconModel:(id)a3 listWithNonDefaultSizedIconsGridSizeForFolderClass:(Class)a4
{
  return (SBHIconGridSize)-[SBHIconManager listWithNonDefaultSizedIconsGridSizeForFolderClass:](self, "listWithNonDefaultSizedIconsGridSizeForFolderClass:", a4);
}

- (unint64_t)iconModel:(id)a3 maxRowCountForListInRootFolderWithInterfaceOrientation:(int64_t)a4
{
  void *v5;
  void *v6;
  unint64_t v7;

  -[SBHIconManager listLayoutProvider](self, "listLayoutProvider", a3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "layoutForIconLocation:", CFSTR("SBIconLocationRoot"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "numberOfRowsForOrientation:", a4);

  return v7;
}

- (unint64_t)iconModel:(id)a3 maxColumnCountForListInRootFolderWithInterfaceOrientation:(int64_t)a4
{
  void *v5;
  void *v6;
  unint64_t v7;

  -[SBHIconManager listLayoutProvider](self, "listLayoutProvider", a3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "layoutForIconLocation:", CFSTR("SBIconLocationRoot"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "numberOfColumnsForOrientation:", a4);

  return v7;
}

- (unint64_t)maxRowCountForFavoriteTodayListForIconModel:(id)a3
{
  return 4;
}

- (id)gridSizeClassSizesForIconModel:(id)a3
{
  void *v3;
  void *v4;
  void *v5;

  -[SBHIconManager listLayoutProvider](self, "listLayoutProvider", a3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "layoutForIconLocation:", CFSTR("SBIconLocationRoot"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  SBHIconListLayoutIconGridSizeClassSizes(v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

- (id)iconModel:(id)a3 allowedGridSizeClassesForFolderClass:(Class)a4
{
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  -[objc_class iconLocation](-[SBHIconManager controllerClassForFolderClass:](self, "controllerClassForFolderClass:", a4), "iconLocation");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager listLayoutProvider](self, "listLayoutProvider");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "layoutForIconLocation:", v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if (v7)
    SBHIconListLayoutSupportedIconGridSizeClasses(v7);
  else
    +[SBHIconGridSizeClassSet gridSizeClassSetForDefaultGridSizeClass](SBHIconGridSizeClassSet, "gridSizeClassSetForDefaultGridSizeClass");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

- (id)iconModel:(id)a3 supportedGridSizeClassesForWidgetWithKind:(id)a4 extensionBundleIdentifier:(id)a5 containerBundleIdentifier:(id)a6
{
  return -[SBHIconManager supportedGridSizeClassesForWidgetWithKind:extensionBundleIdentifier:containerBundleIdentifier:](self, "supportedGridSizeClassesForWidgetWithKind:extensionBundleIdentifier:containerBundleIdentifier:", a4, a5, a6);
}

- (id)listRotatedLayoutClusterGridSizeClassForIconModel:(id)a3
{
  void *v3;
  void *v4;
  void *v5;

  -[SBHIconManager listLayoutProvider](self, "listLayoutProvider", a3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "layoutForIconLocation:", CFSTR("SBIconLocationRoot"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  SBHIconListLayoutRotatedLayoutGridCellClusterSizeClass(v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

- (BOOL)iconModel:(id)a3 listsAllowRotatedLayoutForFolderClass:(Class)a4
{
  return -[SBHIconManager listsAllowRotatedLayoutForFolderClass:](self, "listsAllowRotatedLayoutForFolderClass:", a4);
}

- (int64_t)iconModel:(id)a3 listsFixedIconLocationBehaviorForFolderClass:(Class)a4
{
  return -[SBHIconManager listsFixedIconLocationBehaviorForFolderClass:](self, "listsFixedIconLocationBehaviorForFolderClass:", a4);
}

- (id)iconModel:(id)a3 customInsertionRelativePathForIcon:(id)a4 inRootFolder:(id)a5
{
  return -[NSMapTable objectForKey:](self->_previousIconLocations, "objectForKey:", a4);
}

- (id)iconModel:(id)a3 customInsertionIndexPathForIcon:(id)a4 inRootFolder:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  SBFolderIcon *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  id v26;
  _QWORD v28[4];
  id v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t);
  void (*v40)(uint64_t);
  id v41;

  v8 = a3;
  v9 = a4;
  v10 = a5;
  v36 = 0;
  v37 = &v36;
  v38 = 0x3032000000;
  v39 = __Block_byref_object_copy__19;
  v40 = __Block_byref_object_dispose__19;
  v41 = 0;
  -[SBIconPreviousLocationTracker previousLocationInfoForIcon:](self->_previousIconLocationTracker, "previousLocationInfoForIcon:", v9);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = v11;
  if (v11)
  {
    objc_msgSend(v11, "folder");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "folderName");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = v14;
    if (v13)
    {
      objc_msgSend(v13, "indexPathForFirstFreeSlotAvoidingFirstList:", 0);
      v16 = objc_claimAutoreleasedReturnValue();
      v17 = (void *)v37[5];
      v37[5] = v16;

    }
    else if (v14)
    {
      v32 = 0;
      v33 = &v32;
      v34 = 0x2020000000;
      v35 = 0;
      v28[0] = MEMORY[0x1E0C809B0];
      v28[1] = 3221225472;
      v28[2] = __73__SBHIconManager_iconModel_customInsertionIndexPathForIcon_inRootFolder___block_invoke;
      v28[3] = &unk_1E8D8D1C8;
      v18 = v14;
      v29 = v18;
      v30 = &v36;
      v31 = &v32;
      objc_msgSend(v10, "enumerateAllIconsUsingBlock:", v28);
      if (!*((_BYTE *)v33 + 24))
      {
        objc_msgSend(v8, "makeFolderWithDisplayName:", v18);
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        v20 = -[SBFolderIcon initWithFolder:]([SBFolderIcon alloc], "initWithFolder:", v19);
        objc_msgSend(v10, "addIcon:", v20);
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        -[SBHIconManager iconModel](self, "iconModel");
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v22, "addIcon:", v20);

        objc_msgSend(v19, "indexPathForFirstFreeSlotAvoidingFirstList:", 0);
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v23, "bs_indexPathByAddingPrefix:", v21);
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = (void *)v37[5];
        v37[5] = v24;

      }
      _Block_object_dispose(&v32, 8);
    }

  }
  v26 = (id)v37[5];

  _Block_object_dispose(&v36, 8);
  return v26;
}

void __73__SBHIconManager_iconModel_customInsertionIndexPathForIcon_inRootFolder___block_invoke(uint64_t a1, void *a2, void *a3, _BYTE *a4)
{
  id v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;

  v14 = a2;
  v7 = a3;
  if (objc_msgSend(v14, "isFolderIcon"))
  {
    objc_msgSend(v14, "folder");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "displayName");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(*(id *)(a1 + 32), "isEqualToString:", v9))
    {
      objc_msgSend(v8, "indexPathForFirstFreeSlotAvoidingFirstList:", 0);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "bs_indexPathByAddingPrefix:", v7);
      v11 = objc_claimAutoreleasedReturnValue();
      v12 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
      v13 = *(void **)(v12 + 40);
      *(_QWORD *)(v12 + 40) = v11;

      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 1;
      *a4 = 1;

    }
  }

}

- (BOOL)canSaveIconState:(id)a3
{
  char v3;
  void *v5;

  if (self->_iconModel != a3)
    return 0;
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v3 = objc_msgSend(v5, "iconManagerCanSaveIconState:", self);
  else
    v3 = 1;

  return v3;
}

- (void)didSaveIconState:(id)a3
{
  id v4;

  if (self->_iconModel == a3)
  {
    -[SBHIconManager delegate](self, "delegate");
    v4 = (id)objc_claimAutoreleasedReturnValue();
    if ((objc_opt_respondsToSelector() & 1) != 0)
      objc_msgSend(v4, "iconManagerDidSaveIconState:", self);

  }
}

- (void)didDeleteIconState:(id)a3
{
  if (self->_iconModel == a3 && (objc_msgSend(a3, "isLayingOut") & 1) == 0)
    -[SBHIconManager noteIconStateChangedExternally](self, "noteIconStateChangedExternally");
}

- (id)defaultIconStateForIconModel:(id)a3
{
  void *v3;
  void *v5;

  if (self->_iconModel == a3)
  {
    -[SBHIconManager delegate](self, "delegate");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_opt_respondsToSelector() & 1) != 0)
    {
      objc_msgSend(v5, "defaultIconStateForIconManager:", self);
      v3 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v3 = (void *)MEMORY[0x1E0C9AA70];
    }

  }
  else
  {
    v3 = (void *)MEMORY[0x1E0C9AA70];
  }
  return v3;
}

- (BOOL)iconModel:(id)a3 shouldAvoidPlacingIconOnFirstPage:(id)a4
{
  id v6;
  char v7;
  void *v8;

  v6 = a4;
  if (self->_iconModel == a3)
  {
    -[SBHIconManager delegate](self, "delegate");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v7 = objc_msgSend(v8, "iconManager:shouldAvoidPlacingIconOnFirstPage:", self, v6);
    else
      v7 = 0;

  }
  else
  {
    v7 = 0;
  }

  return v7;
}

- (BOOL)iconModel:(id)a3 shouldPlaceIconOnIgnoredList:(id)a4
{
  id v6;
  char v7;
  void *v9;

  v6 = a4;
  if (self->_iconModel == a3
    && !-[NSCountedSet count](self->_reasonsToIgnoreUserPreferenceForAddingNewIconsToHomeScreen, "count"))
  {
    -[SBHIconManager delegate](self, "delegate");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v7 = objc_msgSend(v9, "iconManager:shouldPlaceIconOnIgnoredList:", self, v6);
    else
      v7 = 0;

  }
  else
  {
    v7 = 0;
  }

  return v7;
}

- (void)iconModel:(id)a3 launchIcon:(id)a4 fromLocation:(id)a5 context:(id)a6
{
  SBHIconModel *v10;
  id v11;
  id v12;
  id v13;
  NSObject *v14;
  SBHIconModel *iconModel;
  void *v16;
  void *v17;
  NSObject *v18;
  NSObject *v19;
  int v20;
  id v21;
  __int16 v22;
  SBHIconModel *v23;
  __int16 v24;
  SBHIconModel *v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v10 = (SBHIconModel *)a3;
  v11 = a4;
  v12 = a5;
  v13 = a6;
  if (self->_iconModel == v10)
  {
    if (objc_msgSend(v11, "isFolderIcon"))
    {
      objc_msgSend(v11, "folder");
      v14 = objc_claimAutoreleasedReturnValue();
      -[SBHIconManager rootFolderController](self, "rootFolderController");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "folderControllerForFolder:", v14);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      SBLogIcon();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        v20 = 138412290;
        v21 = v11;
        _os_log_impl(&dword_1CFEF3000, v18, OS_LOG_TYPE_DEFAULT, "SBHIconManager will open folder from icon %@", (uint8_t *)&v20, 0xCu);
      }

      if (objc_msgSend(v17, "isOpen"))
      {
        SBLogIcon();
        v19 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
        {
          LOWORD(v20) = 0;
          _os_log_impl(&dword_1CFEF3000, v19, OS_LOG_TYPE_DEFAULT, "need to close previous folder before opening new one", (uint8_t *)&v20, 2u);
        }

        -[SBHIconManager popExpandedIconAnimated:completionHandler:](self, "popExpandedIconAnimated:completionHandler:", 0, 0);
      }
      -[SBHIconManager pushExpandedIcon:location:context:animated:completionHandler:](self, "pushExpandedIcon:location:context:animated:completionHandler:", v11, v12, v13, 1, 0);

    }
    else
    {
      objc_msgSend(v13, "iconView");
      v14 = objc_claimAutoreleasedReturnValue();
      if (!v14)
        goto LABEL_15;
      -[SBHIconManager launchActionsForIconView:](self, "launchActionsForIconView:", v14);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      -[SBHIconManager launchFromIconView:withActions:modifierFlags:](self, "launchFromIconView:withActions:modifierFlags:", v14, v16, 0);
    }

    goto LABEL_15;
  }
  SBLogIcon();
  v14 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    iconModel = self->_iconModel;
    v20 = 138412802;
    v21 = v11;
    v22 = 2048;
    v23 = v10;
    v24 = 2048;
    v25 = iconModel;
    _os_log_impl(&dword_1CFEF3000, v14, OS_LOG_TYPE_DEFAULT, "SBHIconManager asked to launch an icon (%@) from an unknown icon model (model: %p, ours: %p", (uint8_t *)&v20, 0x20u);
  }
LABEL_15:

}

- (id)iconModel:(id)a3 localizedFolderNameForDefaultDisplayName:(id)a4
{
  return -[SBHIconManager localizedFolderNameForDefaultDisplayName:](self, "localizedFolderNameForDefaultDisplayName:", a4);
}

- (void)iconModel:(id)a3 didAddIcon:(id)a4
{
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v5 = a4;
  if (objc_msgSend(v5, "isLeafIcon"))
  {
    objc_msgSend(v5, "addObserver:", self);
    if (objc_msgSend(v5, "isWidgetIcon"))
    {
      v6 = v5;
      v13 = 0u;
      v14 = 0u;
      v15 = 0u;
      v16 = 0u;
      objc_msgSend(v6, "widgets", 0);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
      if (v8)
      {
        v9 = v8;
        v10 = *(_QWORD *)v14;
        do
        {
          v11 = 0;
          do
          {
            if (*(_QWORD *)v14 != v10)
              objc_enumerationMutation(v7);
            -[SBHIconManager _loadAndSaveDefaultIntentIfNecessaryForWidget:ofIcon:viewController:](self, "_loadAndSaveDefaultIntentIfNecessaryForWidget:ofIcon:viewController:", *(_QWORD *)(*((_QWORD *)&v13 + 1) + 8 * v11++), v6, 0);
          }
          while (v9 != v11);
          v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
        }
        while (v9);
      }

      -[SBHIconManager delegate](self, "delegate");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      if ((objc_opt_respondsToSelector() & 1) != 0)
        objc_msgSend(v12, "iconManagerDidAddOrRemoveWidgetIcon:", self);

    }
  }

}

- (void)iconModel:(id)a3 willRemoveIcon:(id)a4
{
  id v5;
  void *v6;
  SBIconLabelImageCache *labelImageCache;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _QWORD v35[4];
  id v36;
  _QWORD v37[4];
  id v38;
  _BYTE v39[128];
  _BYTE v40[128];
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v5 = a4;
  objc_msgSend(v5, "displayNameForLocation:", CFSTR("SBIconLocationRoot"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  labelImageCache = self->_labelImageCache;
  v8 = MEMORY[0x1E0C809B0];
  v37[0] = MEMORY[0x1E0C809B0];
  v37[1] = 3221225472;
  v37[2] = __43__SBHIconManager_iconModel_willRemoveIcon___block_invoke;
  v37[3] = &unk_1E8D8CC60;
  v9 = v6;
  v38 = v9;
  -[SBIconLabelImageCache removeLabelImagesWithParametersPassingTest:](labelImageCache, "removeLabelImagesWithParametersPassingTest:", v37);
  v35[0] = v8;
  v35[1] = 3221225472;
  v35[2] = __43__SBHIconManager_iconModel_willRemoveIcon___block_invoke_2;
  v35[3] = &unk_1E8D8C688;
  v10 = v5;
  v36 = v10;
  -[SBHIconManager enumerateAllIconImageCachesUsingBlock:](self, "enumerateAllIconImageCachesUsingBlock:", v35);
  if (objc_msgSend(v10, "isLeafIcon"))
  {
    objc_msgSend(v10, "removeObserver:", self);
    v11 = v10;
    objc_msgSend(v11, "iconDataSources");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v31 = 0u;
    v32 = 0u;
    v33 = 0u;
    v34 = 0u;
    v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v31, v40, 16);
    if (v13)
    {
      v14 = v13;
      v15 = *(_QWORD *)v32;
      do
      {
        v16 = 0;
        do
        {
          if (*(_QWORD *)v32 != v15)
            objc_enumerationMutation(v12);
          -[SBHIconManager _handleRemovedDataSource:ofIcon:](self, "_handleRemovedDataSource:ofIcon:", *(_QWORD *)(*((_QWORD *)&v31 + 1) + 8 * v16++), v11);
        }
        while (v14 != v16);
        v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v31, v40, 16);
      }
      while (v14);
    }

  }
  if (objc_msgSend(v10, "isWidgetIcon"))
  {
    v26 = v9;
    v29 = 0u;
    v30 = 0u;
    v27 = 0u;
    v28 = 0u;
    objc_msgSend(v10, "iconDataSources");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v27, v39, 16);
    if (v18)
    {
      v19 = v18;
      v20 = *(_QWORD *)v28;
      do
      {
        v21 = 0;
        do
        {
          if (*(_QWORD *)v28 != v20)
            objc_enumerationMutation(v17);
          v22 = *(void **)(*((_QWORD *)&v27 + 1) + 8 * v21);
          if ((objc_opt_respondsToSelector() & 1) != 0)
          {
            objc_msgSend(v22, "uniqueIdentifier");
            v23 = (void *)objc_claimAutoreleasedReturnValue();
            -[SBHIconManager _effectiveWidgetMultiplexingManager](self, "_effectiveWidgetMultiplexingManager");
            v24 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v24, "discardCachedRecentViewControllersForIdentifier:", v23);

          }
          ++v21;
        }
        while (v19 != v21);
        v19 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v27, v39, 16);
      }
      while (v19);
    }

    -[SBHIconManager delegate](self, "delegate");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_opt_respondsToSelector() & 1) != 0)
      objc_msgSend(v25, "iconManagerDidAddOrRemoveWidgetIcon:", self);

    v9 = v26;
  }

}

uint64_t __43__SBHIconManager_iconModel_willRemoveIcon___block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  uint64_t v4;

  objc_msgSend(a2, "text");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isEqualToString:", *(_QWORD *)(a1 + 32));

  return v4;
}

void __43__SBHIconManager_iconModel_willRemoveIcon___block_invoke_2(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v5 = *(_QWORD *)(a1 + 32);
  v2 = (void *)MEMORY[0x1E0C99D20];
  v3 = a2;
  objc_msgSend(v2, "arrayWithObjects:count:", &v5, 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "purgeCachedImagesForIcons:", v4, v5, v6);

}

- (void)_handleRemovedDataSource:(id)a3 ofIcon:(id)a4
{
  id v6;
  id v7;
  NSObject *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint8_t v21[128];
  uint8_t buf[4];
  id v23;
  __int16 v24;
  id v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  SBLogWidgets();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412546;
    v23 = v6;
    v24 = 2112;
    v25 = v7;
    _os_log_impl(&dword_1CFEF3000, v8, OS_LOG_TYPE_DEFAULT, "handleRemovedDataSource:%@ ofIcon:%@", buf, 0x16u);
  }

  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  -[SBHIconModel widgetIcons](self->_iconModel, "widgetIcons", 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
  if (v10)
  {
    v11 = v10;
    v12 = *(_QWORD *)v18;
LABEL_5:
    v13 = 0;
    while (1)
    {
      if (*(_QWORD *)v18 != v12)
        objc_enumerationMutation(v9);
      v14 = *(void **)(*((_QWORD *)&v17 + 1) + 8 * v13);
      if ((objc_msgSend(v14, "isEqual:", v7) & 1) == 0 && (objc_msgSend(v14, "hasIconDataSource:", v6) & 1) != 0)
        goto LABEL_21;
      if (v11 == ++v13)
      {
        v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
        if (v11)
          goto LABEL_5;
        break;
      }
    }
  }

  if ((-[NSMutableArray containsObject:](self->_movedStackConfigDataSources, "containsObject:", v6) & 1) == 0)
  {
    if (!self->_shouldStashIconsForRelayout
      && (objc_opt_respondsToSelector() & 1) != 0
      && objc_msgSend(v6, "iconSupportsConfiguration:", v7))
    {
      -[SBHIconManager delegate](self, "delegate");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      if ((objc_opt_respondsToSelector() & 1) != 0)
        objc_msgSend(v15, "iconManager:didRemoveConfigurableDataSource:ofIcon:", self, v6, v7);

    }
    if ((objc_opt_respondsToSelector() & 1) != 0)
    {
      objc_msgSend(v6, "uniqueIdentifier");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      -[NSMutableDictionary removeObjectForKey:](self->_widgetIntents, "removeObjectForKey:", v9);
      -[NSMutableDictionary removeObjectForKey:](self->_archivedWidgetIntents, "removeObjectForKey:", v9);
      -[SBHIconManager _effectiveWidgetMultiplexingManager](self, "_effectiveWidgetMultiplexingManager");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "discardCachedRecentViewControllersForIdentifier:", v9);

LABEL_21:
    }
  }

}

- (Class)iconModel:(id)a3 iconClassForApplicationWithBundleIdentifier:(id)a4 proposedClass:(Class)a5
{
  id v7;
  void *v8;
  objc_class *v9;

  v7 = a4;
  -[SBHIconManager delegate](self, "delegate");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    a5 = (Class)objc_msgSend(v8, "iconManager:iconClassForApplicationWithBundleIdentifier:proposedClass:", self, v7, a5);
  v9 = a5;

  return v9;
}

- (void)_iconModelWillReloadIcons:(id)a3
{
  -[SBHIconManager enumerateAllIconImageCachesUsingBlock:](self, "enumerateAllIconImageCachesUsingBlock:", &__block_literal_global_859);
}

uint64_t __44__SBHIconManager__iconModelWillReloadIcons___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "purgeAllCachedImages");
}

- (void)_iconModelDidReloadIcons:(id)a3
{
  SBIcon *iconToReveal;
  SBHIconModel *iconModel;
  void *v6;
  void *v7;

  -[SBHIconManager _precacheDataForRootIcons](self, "_precacheDataForRootIcons", a3);
  iconToReveal = self->_iconToReveal;
  if (iconToReveal)
  {
    iconModel = self->_iconModel;
    -[SBIcon leafIdentifier](iconToReveal, "leafIdentifier");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHIconModel leafIconForIdentifier:](iconModel, "leafIconForIdentifier:", v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v7)
      -[SBHIconManager setIconToReveal:revealingPrevious:](self, "setIconToReveal:revealingPrevious:", 0, 0);
  }
}

- (void)_iconModelWillLayout:(id)a3
{
  self->_shouldStashIconsForRelayout = 1;
  -[SBHIconManager _prepareToResetRootIconLists](self, "_prepareToResetRootIconLists", a3);
}

- (void)_iconModelDidLayout:(id)a3
{
  id v4;

  -[SBHIconModel rootFolder](self->_iconModel, "rootFolder", a3);
  v4 = (id)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager setRootFolder:](self, "setRootFolder:", v4);
  -[NSMutableDictionary removeAllObjects](self->_widgetIntents, "removeAllObjects");
  -[NSMutableDictionary removeAllObjects](self->_archivedWidgetIntents, "removeAllObjects");
  -[SBHIconManager _precacheDataForRootIcons](self, "_precacheDataForRootIcons");
  self->_shouldStashIconsForRelayout = 0;
  -[SBHIconManager _clearStashedIconsForRelayout](self, "_clearStashedIconsForRelayout");
  -[SBHIconManager _finishResetRootIconLists](self, "_finishResetRootIconLists");
  -[SBHIconManager noteRootFolderDidMutate](self, "noteRootFolderDidMutate");
  ++self->_relayoutCount;

}

- (void)_iconVisibilityChanged:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v4 = a3;
  objc_msgSend(v4, "userInfo");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "objectForKey:", CFSTR("SBIconModelIconsToShowKey"));
  v8 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v4, "userInfo");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "objectForKey:", CFSTR("SBIconModelIconsToHideKey"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  -[SBHIconManager updateVisibleIconsToShowLeafIcons:hideLeafIcons:](self, "updateVisibleIconsToShowLeafIcons:hideLeafIcons:", v8, v7);
}

- (void)noteIconStateChangedExternally
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __48__SBHIconManager_noteIconStateChangedExternally__block_invoke;
  v2[3] = &unk_1E8D84C50;
  v2[4] = self;
  -[SBHIconManager _enqueueTransitionName:withHandler:](self, "_enqueueTransitionName:withHandler:", CFSTR("noteIconStateChangedExternally"), v2);
}

void __48__SBHIconManager_noteIconStateChangedExternally__block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NSObject *v4;
  void *v5;
  void *v6;
  uint8_t v7[16];

  objc_msgSend(*(id *)(a1 + 32), "setEditing:", 0);
  if (objc_msgSend(*(id *)(a1 + 32), "hasOpenFolder"))
    objc_msgSend(*(id *)(a1 + 32), "popToCurrentRootIconList");
  objc_msgSend(*(id *)(a1 + 32), "delegate");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v2, "iconManagerDidNoteIconStateChangedExternally:", *(_QWORD *)(a1 + 32));
  objc_msgSend(*(id *)(a1 + 32), "iconModel");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "clearDesiredIconState");
  objc_msgSend(v3, "reloadIcons");
  SBLogCommon();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1CFEF3000, v4, OS_LOG_TYPE_INFO, "Relaying out icon model due because the icon state changed externally.", v7, 2u);
  }

  objc_msgSend(*(id *)(a1 + 32), "relayout");
  objc_msgSend(*(id *)(a1 + 32), "rootFolderController");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "rootFolderController");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setCurrentPageIndex:animated:", objc_msgSend(v6, "defaultPageIndex"), 0);

}

- (void)noteRootFolderDidMutate
{
  NSMapTable *previousIconGridPathsBeforeResize;
  id v4;

  previousIconGridPathsBeforeResize = self->_previousIconGridPathsBeforeResize;
  self->_previousIconGridPathsBeforeResize = 0;

  -[SBHIconManager iconDragManager](self, "iconDragManager");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "noteRootFolderDidMutate");

}

- (BOOL)rootFolder:(id)a3 canBounceIcon:(id)a4
{
  void *v4;
  char v5;

  -[SBHIconManager iconDragManager](self, "iconDragManager", a3, a4);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "isIconDragging");

  return v5;
}

- (id)iconLocationForList:(id)a3 inFolder:(id)a4 ofRootFolder:(id)a5
{
  id v8;
  id v9;
  id v10;
  id v11;
  __CFString *v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  __CFString **v17;
  __CFString *v18;

  v8 = a3;
  v9 = a4;
  v10 = a5;
  -[SBHIconManager rootFolder](self, "rootFolder");
  v11 = (id)objc_claimAutoreleasedReturnValue();
  v12 = CFSTR("SBIconLocationNone");
  objc_msgSend(v10, "todayList");
  v13 = objc_claimAutoreleasedReturnValue();
  if ((id)v13 == v8)
  {

    goto LABEL_9;
  }
  v14 = (void *)v13;
  objc_msgSend(v10, "favoriteTodayList");
  v15 = (id)objc_claimAutoreleasedReturnValue();

  if (v15 == v8)
  {
LABEL_9:
    v17 = SBIconLocationTodayView;
    goto LABEL_10;
  }
  objc_msgSend(v10, "dock");
  v16 = (id)objc_claimAutoreleasedReturnValue();

  if (v16 == v8)
  {
    v17 = SBIconLocationDock;
    goto LABEL_10;
  }
  if (v9 && !objc_msgSend(v9, "isRootFolder"))
  {
    v17 = SBIconLocationFolder;
    goto LABEL_10;
  }
  if (v11 == v10)
  {
    v17 = SBIconLocationRoot;
LABEL_10:
    v18 = *v17;

    v12 = v18;
  }

  return v12;
}

- (BOOL)rootFolder:(id)a3 canAddIcon:(id)a4 toIconList:(id)a5 inFolder:(id)a6
{
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  BOOL v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  int v20;
  void *v21;
  id v22;

  v10 = a3;
  v11 = a4;
  v12 = a5;
  v13 = a6;
  -[SBHIconManager rootFolder](self, "rootFolder");
  v14 = (id)objc_claimAutoreleasedReturnValue();

  if (v14 == v10)
  {
    -[SBHIconManager iconLocationForList:inFolder:ofRootFolder:](self, "iconLocationForList:inFolder:ofRootFolder:", v12, v13, v10);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager listLayoutProvider](self, "listLayoutProvider");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "layoutForIconLocation:", v16);
    v18 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v11, "gridSizeClass");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v20 = SBHIconListLayoutSupportsIconGridSizeClass(v18, v19);

    if (v20)
    {
      -[SBHIconManager delegate](self, "delegate");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = 0;
      if ((objc_opt_respondsToSelector() & 1) == 0
        || objc_msgSend(v21, "iconManager:canAddIcon:toIconList:inFolder:", self, v11, v12, v13))
      {
        objc_msgSend(v10, "ignoredList");
        v22 = (id)objc_claimAutoreleasedReturnValue();

        if (v22 != v12 || -[SBHIconManager canAddIconToIgnoredList:](self, "canAddIconToIgnoredList:", v11))
          v15 = 1;
      }

    }
    else
    {
      v15 = 0;
    }

  }
  else
  {
    v15 = 1;
  }

  return v15;
}

- (BOOL)rootFolder:(id)a3 isGridLayoutValid:(id)a4 forIconList:(id)a5 inFolder:(id)a6
{
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  unsigned int v18;
  uint64_t v19;
  BOOL v20;

  v10 = a3;
  v11 = a4;
  v12 = a5;
  -[SBHIconManager iconLocationForList:inFolder:ofRootFolder:](self, "iconLocationForList:inFolder:ofRootFolder:", v12, a6, v10);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  if (SBIconLocationGroupContainsLocation(CFSTR("SBIconLocationGroupRoot"), v13))
  {
    -[SBHIconManager listLayoutProvider](self, "listLayoutProvider");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "layoutForIconLocation:", v13);
    v15 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v12, "allowedGridSizeClasses");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    if (SBHIconListLayoutSupportsIconGridSizeClass(v15, CFSTR("SBHIconGridSizeClassExtraLarge"))
      && objc_msgSend(v16, "containsGridSizeClass:", CFSTR("SBHIconGridSizeClassExtraLarge")))
    {
      objc_msgSend(v10, "iconGridSizeClassSizes");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = objc_msgSend(v17, "gridSizeForGridSizeClass:", CFSTR("SBHIconGridSizeClassExtraLarge"));
      v19 = v18;
      v20 = SBHIconGridSizeGetArea(v18) < 2
         || (unint64_t)objc_msgSend(v11, "countOfIconsOfSize:", v19) < 3;

    }
    else
    {
      v20 = 1;
    }

  }
  else
  {
    v20 = 1;
  }

  return v20;
}

- (id)rootFolder:(id)a3 shouldBounceIcon:(id)a4 afterInsertingIcons:(id)a5 forIconList:(id)a6 inFolder:(id)a7
{
  id v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  uint64_t v17;
  id v18;
  _QWORD v20[4];
  id v21;

  v12 = a4;
  v13 = a5;
  v14 = a6;
  -[SBHIconManager iconLocationForList:inFolder:ofRootFolder:](self, "iconLocationForList:inFolder:ofRootFolder:", v14, a7, a3);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  if (SBIconLocationGroupContainsLocation(CFSTR("SBIconLocationGroupRoot"), v15))
  {
    objc_msgSend(v14, "directlyContainedIconsPassingTest:", &__block_literal_global_866);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    if ((unint64_t)objc_msgSend(v16, "count") >= 3)
    {
      v20[0] = MEMORY[0x1E0C809B0];
      v20[1] = 3221225472;
      v20[2] = __87__SBHIconManager_rootFolder_shouldBounceIcon_afterInsertingIcons_forIconList_inFolder___block_invoke_2;
      v20[3] = &unk_1E8D87A40;
      v21 = v13;
      v17 = objc_msgSend(v16, "indexOfObjectWithOptions:passingTest:", 2, v20);
      if (v17 != 0x7FFFFFFFFFFFFFFFLL)
      {
        objc_msgSend(v16, "objectAtIndex:", v17);
        v18 = (id)objc_claimAutoreleasedReturnValue();

        goto LABEL_7;
      }

    }
  }
  v18 = v12;
LABEL_7:

  return v18;
}

uint64_t __87__SBHIconManager_rootFolder_shouldBounceIcon_afterInsertingIcons_forIconList_inFolder___block_invoke(uint64_t a1, void *a2)
{
  id v2;
  __CFString *v3;
  void *v4;
  uint64_t v5;

  v2 = a2;
  objc_msgSend(v2, "gridSizeClass");
  v3 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (v3 == CFSTR("SBHIconGridSizeClassExtraLarge"))
  {
    v5 = 1;
  }
  else
  {
    objc_msgSend(v2, "gridSizeClass");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v4, "isEqualToString:", CFSTR("SBHIconGridSizeClassExtraLarge"));

  }
  return v5;
}

uint64_t __87__SBHIconManager_rootFolder_shouldBounceIcon_afterInsertingIcons_forIconList_inFolder___block_invoke_2(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "containsObject:", a2) ^ 1;
}

- (void)rootFolder:(id)a3 wantsToDoPageHidingEducationWithCompletion:(id)a4
{
  id v5;
  void *v6;
  _QWORD v7[5];
  id v8;

  v5 = a4;
  -[SBHIconManager delegate](self, "delegate");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    v7[0] = MEMORY[0x1E0C809B0];
    v7[1] = 3221225472;
    v7[2] = __72__SBHIconManager_rootFolder_wantsToDoPageHidingEducationWithCompletion___block_invoke;
    v7[3] = &unk_1E8D881C0;
    v7[4] = self;
    v8 = v5;
    objc_msgSend(v6, "iconManager:prepareForPageHidingEducationWithCompletionHandler:", self, v7);

  }
  else if (v5)
  {
    (*((void (**)(id, _QWORD))v5 + 2))(v5, 0);
  }

}

uint64_t __72__SBHIconManager_rootFolder_wantsToDoPageHidingEducationWithCompletion___block_invoke(uint64_t a1, int a2)
{
  uint64_t v3;
  void *v4;
  uint64_t result;

  if (a2 && objc_msgSend(*(id *)(a1 + 32), "isEditingAllowed"))
  {
    v3 = 1;
    objc_msgSend(*(id *)(a1 + 32), "setEditing:withFeedbackBehavior:location:", 1, 0, *MEMORY[0x1E0C9D538], *(double *)(MEMORY[0x1E0C9D538] + 8));
    objc_msgSend(*(id *)(a1 + 32), "rootFolderController");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "_doPageManagementEducation");

  }
  else
  {
    v3 = 0;
  }
  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, v3);
  return result;
}

- (void)addPageStateObserver:(id)a3
{
  id v4;
  NSHashTable *pageStateObservers;
  NSHashTable *v6;
  NSHashTable *v7;
  id v8;

  v4 = a3;
  pageStateObservers = self->_pageStateObservers;
  v8 = v4;
  if (!pageStateObservers)
  {
    objc_msgSend(MEMORY[0x1E0CB3690], "weakObjectsHashTable");
    v6 = (NSHashTable *)objc_claimAutoreleasedReturnValue();
    v7 = self->_pageStateObservers;
    self->_pageStateObservers = v6;

    v4 = v8;
    pageStateObservers = self->_pageStateObservers;
  }
  -[NSHashTable addObject:](pageStateObservers, "addObject:", v4);

}

- (void)removePageStateObserver:(id)a3
{
  -[NSHashTable removeObject:](self->_pageStateObservers, "removeObject:", a3);
}

- (void)enumeratePageStateObserversUsingBlock:(id)a3
{
  void (**v4)(id, _QWORD);
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v4 = (void (**)(id, _QWORD))a3;
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  -[NSHashTable allObjects](self->_pageStateObservers, "allObjects", 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v11;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v11 != v8)
          objc_enumerationMutation(v5);
        v4[2](v4, *(_QWORD *)(*((_QWORD *)&v10 + 1) + 8 * v9++));
      }
      while (v7 != v9);
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    }
    while (v7);
  }

}

- (void)rootFolderPageStateProvider:(id)a3 willBeginTransitionToState:(int64_t)a4 animated:(BOOL)a5 interactive:(BOOL)a6
{
  id v10;
  id v11;
  _QWORD v12[4];
  id v13;
  int64_t v14;
  BOOL v15;
  BOOL v16;

  v10 = a3;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 3221225472;
  v12[2] = __94__SBHIconManager_rootFolderPageStateProvider_willBeginTransitionToState_animated_interactive___block_invoke;
  v12[3] = &unk_1E8D854D8;
  v13 = v10;
  v14 = a4;
  v15 = a5;
  v16 = a6;
  v11 = v10;
  -[SBHIconManager enumeratePageStateObserversUsingBlock:](self, "enumeratePageStateObserversUsingBlock:", v12);
  -[SBHIconManager setCanPresentOverscrollLibraryForPageTransition:](self, "setCanPresentOverscrollLibraryForPageTransition:", 1);
  -[SBHIconManager setCanDismissOverscrollLibraryForPageTransition:](self, "setCanDismissOverscrollLibraryForPageTransition:", 1);

}

uint64_t __94__SBHIconManager_rootFolderPageStateProvider_willBeginTransitionToState_animated_interactive___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "rootFolderPageStateProvider:willBeginTransitionToState:animated:interactive:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 48), *(unsigned __int8 *)(a1 + 49));
}

- (void)rootFolderPageStateProvider:(id)a3 didContinueTransitionToState:(int64_t)a4 progress:(double)a5
{
  id v8;
  id v9;
  uint64_t v10;
  _QWORD v11[4];
  id v12;
  int64_t v13;
  double v14;

  v8 = a3;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = __84__SBHIconManager_rootFolderPageStateProvider_didContinueTransitionToState_progress___block_invoke;
  v11[3] = &unk_1E8D85540;
  v9 = v8;
  v12 = v9;
  v13 = a4;
  v14 = a5;
  -[SBHIconManager enumeratePageStateObserversUsingBlock:](self, "enumeratePageStateObserversUsingBlock:", v11);
  if (a4 == 4)
  {
    if (a5 > 0.5 || objc_msgSend(v9, "pageState") == 4)
    {
      if (-[SBHIconManager canPresentOverscrollLibraryForPageTransition](self, "canPresentOverscrollLibraryForPageTransition")&& !-[SBHIconManager isTrackingScroll](self, "isTrackingScroll"))
      {
        v10 = 1;
LABEL_13:
        -[SBHIconManager _updateOverscrollModalLibraryForScrollToPresented:](self, "_updateOverscrollModalLibraryForScrollToPresented:", v10);
        -[SBHIconManager setCanPresentOverscrollLibraryForPageTransition:](self, "setCanPresentOverscrollLibraryForPageTransition:", v10 ^ 1);
        goto LABEL_14;
      }
    }
    else if (-[SBHIconManager canDismissOverscrollLibraryForPageTransition](self, "canDismissOverscrollLibraryForPageTransition"))
    {
      v10 = 0;
      goto LABEL_13;
    }
  }
  else if (!a4
         && a5 > 0.5
         && -[SBHIconManager canDismissOverscrollLibraryForPageTransition](self, "canDismissOverscrollLibraryForPageTransition"))
  {
    -[SBHIconManager _updateOverscrollModalLibraryForScrollToPresented:](self, "_updateOverscrollModalLibraryForScrollToPresented:", 0);
    v10 = 0;
LABEL_14:
    -[SBHIconManager setCanDismissOverscrollLibraryForPageTransition:](self, "setCanDismissOverscrollLibraryForPageTransition:", v10);
  }

}

uint64_t __84__SBHIconManager_rootFolderPageStateProvider_didContinueTransitionToState_progress___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "rootFolderPageStateProvider:didContinueTransitionToState:progress:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(double *)(a1 + 48));
}

- (void)rootFolderPageStateProvider:(id)a3 willEndTransitionToState:(int64_t)a4 successfully:(BOOL)a5
{
  id v8;
  id v9;
  _QWORD v10[4];
  id v11;
  int64_t v12;
  BOOL v13;

  v8 = a3;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = __84__SBHIconManager_rootFolderPageStateProvider_willEndTransitionToState_successfully___block_invoke;
  v10[3] = &unk_1E8D85568;
  v11 = v8;
  v12 = a4;
  v13 = a5;
  v9 = v8;
  -[SBHIconManager enumeratePageStateObserversUsingBlock:](self, "enumeratePageStateObserversUsingBlock:", v10);

}

uint64_t __84__SBHIconManager_rootFolderPageStateProvider_willEndTransitionToState_successfully___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "rootFolderPageStateProvider:willEndTransitionToState:successfully:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
}

- (void)rootFolderPageStateProvider:(id)a3 didEndTransitionFromState:(int64_t)a4 toState:(int64_t)a5 successfully:(BOOL)a6
{
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, void *);
  void *v15;
  id v16;
  int64_t v17;
  int64_t v18;
  BOOL v19;

  v10 = a3;
  v12 = MEMORY[0x1E0C809B0];
  v13 = 3221225472;
  v14 = __93__SBHIconManager_rootFolderPageStateProvider_didEndTransitionFromState_toState_successfully___block_invoke;
  v15 = &unk_1E8D85590;
  v11 = v10;
  v16 = v11;
  v17 = a4;
  v18 = a5;
  v19 = a6;
  -[SBHIconManager enumeratePageStateObserversUsingBlock:](self, "enumeratePageStateObserversUsingBlock:", &v12);
  if (objc_msgSend(v11, "pageState", v12, v13, v14, v15) == 4)
    -[SBHIconManager _updateOverscrollModalLibraryForScrollToPresented:](self, "_updateOverscrollModalLibraryForScrollToPresented:", 1);

}

uint64_t __93__SBHIconManager_rootFolderPageStateProvider_didEndTransitionFromState_toState_successfully___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "rootFolderPageStateProvider:didEndTransitionFromState:toState:successfully:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(unsigned __int8 *)(a1 + 56));
}

- (void)_updateOverscrollModalLibraryForScrollToPresented:(BOOL)a3
{
  _BOOL4 v3;
  void *v5;
  void *v6;
  void *v7;
  int v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  _QWORD v14[2];

  v3 = a3;
  v14[1] = *MEMORY[0x1E0C80C00];
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    -[SBHIconManager _currentFolderController](self, "_currentFolderController");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "iconManager:floatingDockViewControllerForViewController:", self, v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v7 = 0;
  }
  v8 = objc_msgSend(v7, "isPresentingLibrary");
  if (v3)
  {
    if ((v8 & 1) == 0)
    {
      objc_msgSend(v7, "presentLibraryAnimated:completion:", 1, 0);
      v13 = *MEMORY[0x1E0DABD80];
      v14[0] = &unk_1E8E16DC8;
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v14, &v13, 1);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = (void *)MEMORY[0x1E0DA9D78];
      v11 = v9;
      objc_msgSend(v10, "sharedInstance");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "emitEvent:withPayload:", 53, v11);

    }
  }
  else if (v8)
  {
    objc_msgSend(v7, "dismissLibraryAnimated:completion:", 1, 0);
  }

}

- (BOOL)isLibraryPresentationModal
{
  return 0;
}

- (BOOL)hasBackgroundBlur
{
  return 0;
}

- (BOOL)isPresentingLibraryInMostForegroundState:(id)a3
{
  return objc_msgSend(a3, "bs_isAppearingOrAppeared");
}

- (id)acquireUseSnapshotAsBackgroundViewAssertionForReason:(id)a3
{
  return 0;
}

- (void)libraryViewControllerDidPresent:(id)a3
{
  void *v4;
  _BOOL4 v5;
  BSInvalidatable *v6;
  BSInvalidatable *trailingCustomLibraryPrewarmAssertion;
  void *v8;

  -[SBHIconManager trailingLibraryViewController](self, "trailingLibraryViewController", a3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    v8 = v4;
    v5 = -[SBHIconManager isShowingOrTransitioningToTrailingCustomView](self, "isShowingOrTransitioningToTrailingCustomView");
    v4 = v8;
    if (v5 && !self->_trailingCustomLibraryPrewarmAssertion)
    {
      objc_msgSend(v8, "acquireLibrarySearchPrewarmAssertionForReason:", CFSTR("Coplanar trailing custom library is presented"));
      v6 = (BSInvalidatable *)objc_claimAutoreleasedReturnValue();
      trailingCustomLibraryPrewarmAssertion = self->_trailingCustomLibraryPrewarmAssertion;
      self->_trailingCustomLibraryPrewarmAssertion = v6;

      v4 = v8;
    }
  }

}

- (void)libraryViewControllerDidDismiss:(id)a3
{
  void *v4;
  BOOL v5;
  BSInvalidatable *trailingCustomLibraryPrewarmAssertion;
  void *v7;

  -[SBHIconManager trailingLibraryViewController](self, "trailingLibraryViewController", a3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    v7 = v4;
    v5 = -[SBHIconManager isShowingOrTransitioningToTrailingCustomView](self, "isShowingOrTransitioningToTrailingCustomView");
    v4 = v7;
    if (!v5)
    {
      -[BSInvalidatable invalidate](self->_trailingCustomLibraryPrewarmAssertion, "invalidate");
      trailingCustomLibraryPrewarmAssertion = self->_trailingCustomLibraryPrewarmAssertion;
      self->_trailingCustomLibraryPrewarmAssertion = 0;

      v4 = v7;
    }
  }

}

- (void)libraryViewController:(id)a3 willPresentSearchController:(id)a4
{
  if (-[SBHIconManager isEditing](self, "isEditing", a3, a4))
  {
    -[SBHIconManager setEditing:](self, "setEditing:", 0);
    self->_editingShouldBeReEnabledAfterLibrarySearchControllerIsDismissed = 1;
  }
}

- (void)libraryViewController:(id)a3 willDismissSearchController:(id)a4
{
  id v6;
  id v7;

  v7 = a3;
  v6 = a4;
  if (self->_editingShouldBeReEnabledAfterLibrarySearchControllerIsDismissed
    && -[SBHIconManager isEditingAllowed](self, "isEditingAllowed"))
  {
    -[SBHIconManager setEditing:](self, "setEditing:", 1);
  }
  self->_editingShouldBeReEnabledAfterLibrarySearchControllerIsDismissed = 0;

}

- (void)libraryViewController:(id)a3 willLaunchIcon:(id)a4 fromLocation:(id)a5
{
  if (objc_msgSend(a5, "isEqual:", CFSTR("SBIconLocationAppLibrarySearch"), a4))
    self->_editingShouldBeReEnabledAfterLibrarySearchControllerIsDismissed = 0;
}

- (void)libraryViewController:(id)a3 didAcceptDrop:(id)a4
{
  id v5;
  id v6;

  v5 = a4;
  -[SBHIconManager iconDragManager](self, "iconDragManager");
  v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "noteDragItemWasConsumedExternallyForDropSession:", v5);

}

- (void)todayViewController:(id)a3 didChangePresentationProgress:(double)a4 newPresentationProgress:(double)a5 fromLeading:(BOOL)a6
{
  id v8;
  id v9;

  v8 = a3;
  if (a5 <= 1.0)
  {
    v9 = v8;
    -[SBHIconManager _todayViewControllerSuppressesEditingStateForListViews:](self, "_todayViewControllerSuppressesEditingStateForListViews:", a5 == 1.0);
    v8 = v9;
  }

}

- (void)_todayViewControllerSuppressesEditingStateForListViews:(BOOL)a3
{
  _BOOL8 v3;
  void *v5;
  void *v6;
  id v7;

  v3 = a3;
  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "rootFolderView");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setSuppressesEditingStateForListViews:", v3);

  -[SBHIconManager floatingDockViewController](self, "floatingDockViewController");
  v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setSuppressesEditingStateForListViews:", v3);

}

- (void)addFolderPresentationObserver:(id)a3
{
  id v4;
  NSHashTable *folderPresentationObservers;
  NSHashTable *v6;
  NSHashTable *v7;
  id v8;

  v4 = a3;
  folderPresentationObservers = self->_folderPresentationObservers;
  v8 = v4;
  if (!folderPresentationObservers)
  {
    objc_msgSend(MEMORY[0x1E0CB3690], "weakObjectsHashTable");
    v6 = (NSHashTable *)objc_claimAutoreleasedReturnValue();
    v7 = self->_folderPresentationObservers;
    self->_folderPresentationObservers = v6;

    v4 = v8;
    folderPresentationObservers = self->_folderPresentationObservers;
  }
  -[NSHashTable addObject:](folderPresentationObservers, "addObject:", v4);

}

- (void)removeFolderPresentationObserver:(id)a3
{
  NSHashTable *folderPresentationObservers;

  -[NSHashTable removeObject:](self->_folderPresentationObservers, "removeObject:", a3);
  if (!-[NSHashTable count](self->_folderPresentationObservers, "count"))
  {
    folderPresentationObservers = self->_folderPresentationObservers;
    self->_folderPresentationObservers = 0;

  }
}

- (void)extensionsDidChangeForExtensionProvider:(id)a3
{
  BSDispatchMain();
}

void __58__SBHIconManager_extensionsDidChangeForExtensionProvider___block_invoke(uint64_t a1)
{
  id v2;

  objc_msgSend(*(id *)(a1 + 32), "checkForInvalidWidgets");
  objc_msgSend(*(id *)(a1 + 32), "_processPendingDefaultIntents");
  objc_msgSend(*(id *)(a1 + 32), "rootFolderController");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "updatePresentedWidgetEditingViewController");

}

- (void)_processPendingDefaultIntents
{
  NSMutableSet *pendingWidgetIntentConfigurationInitializations;
  uint64_t v4;
  int v5;
  NSMutableSet *activeWidgetIntentConfigurationInitializations;
  NSMutableSet *v7;
  NSMutableSet *v8;
  NSObject *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _QWORD v18[4];
  uint8_t v19[128];
  uint8_t buf[4];
  int v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  BSDispatchQueueAssertMain();
  pendingWidgetIntentConfigurationInitializations = self->_pendingWidgetIntentConfigurationInitializations;
  ++self->_descriptorsChangedSequenceNumber;
  v4 = -[NSMutableSet count](pendingWidgetIntentConfigurationInitializations, "count");
  if (v4)
  {
    v5 = v4;
    activeWidgetIntentConfigurationInitializations = self->_activeWidgetIntentConfigurationInitializations;
    if (!activeWidgetIntentConfigurationInitializations)
    {
      v7 = (NSMutableSet *)objc_alloc_init(MEMORY[0x1E0C99E20]);
      v8 = self->_activeWidgetIntentConfigurationInitializations;
      self->_activeWidgetIntentConfigurationInitializations = v7;

      activeWidgetIntentConfigurationInitializations = self->_activeWidgetIntentConfigurationInitializations;
    }
    -[NSMutableSet unionSet:](activeWidgetIntentConfigurationInitializations, "unionSet:", self->_pendingWidgetIntentConfigurationInitializations);
    -[NSMutableSet removeAllObjects](self->_pendingWidgetIntentConfigurationInitializations, "removeAllObjects");
    v18[0] = 0;
    v18[1] = v18;
    v18[2] = 0x2020000000;
    v18[3] = 0;
    SBLogIcon();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 67109120;
      v21 = v5;
      _os_log_impl(&dword_1CFEF3000, v9, OS_LOG_TYPE_DEFAULT, "Descriptors changed. Attempting %d default intent loading operations", buf, 8u);
    }

    v16 = 0u;
    v17 = 0u;
    v14 = 0u;
    v15 = 0u;
    v10 = (void *)-[NSMutableSet copy](self->_activeWidgetIntentConfigurationInitializations, "copy");
    v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v14, v19, 16);
    if (v11)
    {
      v12 = *(_QWORD *)v15;
      do
      {
        for (i = 0; i != v11; ++i)
        {
          if (*(_QWORD *)v15 != v12)
            objc_enumerationMutation(v10);
          (*(void (**)(void))(*(_QWORD *)(*((_QWORD *)&v14 + 1) + 8 * i) + 16))();
        }
        v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v14, v19, 16);
      }
      while (v11);
    }

    _Block_object_dispose(v18, 8);
  }
}

uint64_t __47__SBHIconManager__processPendingDefaultIntents__block_invoke()
{
  return BSDispatchMain();
}

void __47__SBHIconManager__processPendingDefaultIntents__block_invoke_2(uint64_t a1)
{
  int v2;
  const void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  NSObject *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  id *v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint8_t v25[128];
  uint8_t buf[4];
  int v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24);
  v2 = *(unsigned __int8 *)(a1 + 72);
  v4 = *(_QWORD *)(a1 + 32);
  v3 = *(const void **)(a1 + 40);
  if (v2)
  {
    v5 = *(void **)(v4 + 272);
    v6 = _Block_copy(v3);
    objc_msgSend(v5, "removeObject:", v6);
  }
  else
  {
    v7 = *(void **)(v4 + 264);
    v6 = _Block_copy(v3);
    objc_msgSend(v7, "addObject:", v6);
  }

  SBLogIcon();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    v9 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 272), "count");
    *(_DWORD *)buf = 67109120;
    v27 = v9;
    _os_log_impl(&dword_1CFEF3000, v8, OS_LOG_TYPE_DEFAULT, "Remaining default intent operations: %d", buf, 8u);
  }

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) == *(_QWORD *)(a1 + 56))
  {
    v10 = *(_QWORD *)(a1 + 32);
    if (*(_QWORD *)(a1 + 64) != *(_QWORD *)(v10 + 256))
    {
      v11 = objc_msgSend(*(id *)(v10 + 264), "count");
      v12 = *(id **)(a1 + 32);
      if (v11)
      {
        objc_msgSend(v12, "_processPendingDefaultIntents");
      }
      else if (objc_msgSend(v12[34], "count"))
      {
        v13 = *(id *)(*(_QWORD *)(a1 + 32) + 280);
        v14 = *(_QWORD *)(a1 + 32);
        v15 = *(void **)(v14 + 280);
        *(_QWORD *)(v14 + 280) = 0;

        v23 = 0u;
        v24 = 0u;
        v21 = 0u;
        v22 = 0u;
        v16 = v13;
        v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
        if (v17)
        {
          v18 = v17;
          v19 = *(_QWORD *)v22;
          do
          {
            v20 = 0;
            do
            {
              if (*(_QWORD *)v22 != v19)
                objc_enumerationMutation(v16);
              (*(void (**)(_QWORD))(*(_QWORD *)(*((_QWORD *)&v21 + 1) + 8 * v20) + 16))(*(_QWORD *)(*((_QWORD *)&v21 + 1) + 8 * v20));
              ++v20;
            }
            while (v18 != v20);
            v18 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
          }
          while (v18);
        }

      }
    }
  }
}

- (NSArray)defaultFirstPageSuggestedWidgetIcons
{
  NSArray *defaultFirstPageSuggestedWidgetIcons;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  NSObject *v15;
  NSObject *v16;
  SBWidgetIcon *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t j;
  void *v23;
  NSObject *v24;
  NSObject *v25;
  NSObject *v26;
  NSObject *v27;
  NSObject *v28;
  NSObject *v29;
  NSObject *v30;
  void *v31;
  int v32;
  void *v33;
  NSObject *v34;
  void *v35;
  NSObject *v36;
  char v37;
  NSObject *v38;
  void *v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t k;
  void *v46;
  NSArray *v47;
  NSArray *v48;
  void *v49;
  id obj;
  uint64_t v51;
  id v52;
  void *v53;
  void *v54;
  uint64_t v55;
  SBWidgetIcon *v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  _BYTE v74[128];
  uint8_t v75[128];
  uint8_t buf[4];
  NSObject *v77;
  _BYTE v78[128];
  _BYTE v79[128];
  uint64_t v80;

  v80 = *MEMORY[0x1E0C80C00];
  defaultFirstPageSuggestedWidgetIcons = self->_defaultFirstPageSuggestedWidgetIcons;
  if (defaultFirstPageSuggestedWidgetIcons)
    return defaultFirstPageSuggestedWidgetIcons;
  -[SBHIconManager delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager gridSizeClassDomain](self, "gridSizeClassDomain");
  v54 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager defaultFirstPageWidgetDescriptors](self, "defaultFirstPageWidgetDescriptors");
  v6 = objc_claimAutoreleasedReturnValue();
  v49 = (void *)v6;
  if (v6)
  {
    v7 = (void *)v6;
    v52 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
    -[SBHIconManager defaultFirstPageWidgetSizeClass](self, "defaultFirstPageWidgetSizeClass");
    v53 = (void *)objc_claimAutoreleasedReturnValue();
    v70 = 0u;
    v71 = 0u;
    v72 = 0u;
    v73 = 0u;
    obj = v7;
    v55 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v70, v79, 16);
    if (v55)
    {
      v51 = *(_QWORD *)v71;
      do
      {
        v8 = 0;
        do
        {
          if (*(_QWORD *)v71 != v51)
            objc_enumerationMutation(obj);
          v57 = v8;
          v9 = *(void **)(*((_QWORD *)&v70 + 1) + 8 * v8);
          v66 = 0u;
          v67 = 0u;
          v68 = 0u;
          v69 = 0u;
          v10 = v9;
          v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v66, v78, 16);
          if (v11)
          {
            v12 = v11;
            v13 = *(_QWORD *)v67;
            do
            {
              for (i = 0; i != v12; ++i)
              {
                if (*(_QWORD *)v67 != v13)
                  objc_enumerationMutation(v10);
                v15 = *(NSObject **)(*((_QWORD *)&v66 + 1) + 8 * i);
                SBLogWidgetDiscoverabilityMigration();
                v16 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
                {
                  *(_DWORD *)buf = 138412290;
                  v77 = v15;
                  _os_log_impl(&dword_1CFEF3000, v16, OS_LOG_TYPE_DEFAULT, "[ContainerBundleIdentifier debugging] avocado descriptors from proactive = %@", buf, 0xCu);
                }

              }
              v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v66, v78, 16);
            }
            while (v12);
          }

          v17 = -[SBWidgetIcon initWithCHSWidgetDescriptors:inDomain:]([SBWidgetIcon alloc], "initWithCHSWidgetDescriptors:inDomain:", v10, v54);
          v62 = 0u;
          v63 = 0u;
          v64 = 0u;
          v65 = 0u;
          v56 = v17;
          -[SBWidgetIcon widgets](v17, "widgets");
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          v19 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v62, v75, 16);
          if (v19)
          {
            v20 = v19;
            v21 = *(_QWORD *)v63;
            do
            {
              for (j = 0; j != v20; ++j)
              {
                if (*(_QWORD *)v63 != v21)
                  objc_enumerationMutation(v18);
                v23 = *(void **)(*((_QWORD *)&v62 + 1) + 8 * j);
                SBLogWidgetDiscoverabilityMigration();
                v24 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
                {
                  objc_msgSend(v23, "containerBundleIdentifier");
                  v25 = objc_claimAutoreleasedReturnValue();
                  *(_DWORD *)buf = 138412290;
                  v77 = v25;
                  _os_log_impl(&dword_1CFEF3000, v24, OS_LOG_TYPE_DEFAULT, "[ContainerBundleIdentifier debugging] container bundle identifier = %@", buf, 0xCu);

                }
              }
              v20 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v62, v75, 16);
            }
            while (v20);
          }

          -[SBIcon setGridSizeClass:](v56, "setGridSizeClass:", v53);
          objc_msgSend(v52, "addObject:", v56);

          v8 = v57 + 1;
        }
        while (v57 + 1 != v55);
        v55 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v70, v79, 16);
      }
      while (v55);
    }

    v26 = v52;
    SBLogWidgetDiscoverabilityMigration();
    v27 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v77 = v26;
      _os_log_impl(&dword_1CFEF3000, v27, OS_LOG_TYPE_DEFAULT, "Proactive provided widgets %@", buf, 0xCu);
    }

    v28 = v26;
  }
  else
  {
    if ((objc_opt_respondsToSelector() & 1) == 0)
    {
      v28 = 0;
      goto LABEL_33;
    }
    objc_msgSend(v5, "fallbackDefaultFirstPageWidgetsForIconManager:", self);
    v28 = objc_claimAutoreleasedReturnValue();
    SBLogWidgetDiscoverabilityMigration();
    v26 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v77 = v28;
      _os_log_impl(&dword_1CFEF3000, v26, OS_LOG_TYPE_DEFAULT, "Fallback widgets %@", buf, 0xCu);
    }
  }

LABEL_33:
  v29 = v28;
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v30 = objc_claimAutoreleasedReturnValue();
  -[SBHIconManager homeScreenDefaults](self, "homeScreenDefaults");
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  v32 = objc_msgSend(v31, "isSidebarPinned");

  if (v32)
  {
    -[SBHIconManager rootFolder](self, "rootFolder");
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v33, "favoriteTodayList");
    v34 = objc_claimAutoreleasedReturnValue();

    -[NSObject icons](v34, "icons");
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSObject addObjectsFromArray:](v30, "addObjectsFromArray:", v35);

    SBLogWidgetDiscoverabilityMigration();
    v36 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v77 = v30;
      _os_log_impl(&dword_1CFEF3000, v36, OS_LOG_TYPE_DEFAULT, "Pinned widgets %@", buf, 0xCu);
    }

  }
  else
  {
    SBLogWidgetDiscoverabilityMigration();
    v34 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1CFEF3000, v34, OS_LOG_TYPE_DEFAULT, "Sidebar is not pinned.", buf, 2u);
    }
  }

  v37 = objc_opt_respondsToSelector();
  SBLogWidgetDiscoverabilityMigration();
  v38 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109120;
    LODWORD(v77) = v37 & 1;
    _os_log_impl(&dword_1CFEF3000, v38, OS_LOG_TYPE_DEFAULT, "Call builder %d", buf, 8u);
  }

  v39 = v29;
  if ((v37 & 1) != 0)
  {
    objc_msgSend(v5, "iconManager:willAddDefaultFirstPageWidgetsBasedOnPinnedWidgets:suggestionWidgets:", self, v30, v29);
    v39 = (void *)objc_claimAutoreleasedReturnValue();

  }
  objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", objc_msgSend(v39, "count"));
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  v58 = 0u;
  v59 = 0u;
  v60 = 0u;
  v61 = 0u;
  v41 = v39;
  v42 = objc_msgSend(v41, "countByEnumeratingWithState:objects:count:", &v58, v74, 16);
  if (v42)
  {
    v43 = v42;
    v44 = *(_QWORD *)v59;
    do
    {
      for (k = 0; k != v43; ++k)
      {
        if (*(_QWORD *)v59 != v44)
          objc_enumerationMutation(v41);
        v46 = (void *)objc_msgSend(*(id *)(*((_QWORD *)&v58 + 1) + 8 * k), "copyWithSuggestionSource:", 2);
        objc_msgSend(v40, "addObject:", v46);

      }
      v43 = objc_msgSend(v41, "countByEnumeratingWithState:objects:count:", &v58, v74, 16);
    }
    while (v43);
  }

  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithArray:", v40);
  v47 = (NSArray *)objc_claimAutoreleasedReturnValue();
  v48 = self->_defaultFirstPageSuggestedWidgetIcons;
  self->_defaultFirstPageSuggestedWidgetIcons = v47;

  return (NSArray *)v40;
}

- (void)prototypeSetDefaultSecondPageWidgetIcons
{
  void *v3;
  SBHWidget *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  _QWORD v10[2];

  v10[1] = *MEMORY[0x1E0C80C00];
  -[SBHIconManager widgetExtensionProvider](self, "widgetExtensionProvider");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = -[SBHWidget initWithKind:extensionBundleIdentifier:]([SBHWidget alloc], "initWithKind:extensionBundleIdentifier:", CFSTR("com.apple.tv"), CFSTR("com.apple.tv.TVWidgetExtension"));
  objc_msgSend(v3, "sbh_descriptorForWidgetIdentifiable:", v4);
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = (void *)v5;
  if (v5)
  {
    v9 = v5;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v9, 1);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v10[0] = v7;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v10, 1);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager setDefaultSecondPageWidgetDescriptors:](self, "setDefaultSecondPageWidgetDescriptors:", v8);

    -[SBHIconManager setDefaultSecondPageWidgetSizeClass:](self, "setDefaultSecondPageWidgetSizeClass:", CFSTR("SBHIconGridSizeClassExtraLarge"));
  }

}

- (NSArray)defaultSecondPageSuggestedWidgetIcons
{
  NSArray *defaultSecondPageSuggestedWidgetIcons;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  SBWidgetIcon *v14;
  NSArray *v15;
  NSArray *v16;
  void *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  defaultSecondPageSuggestedWidgetIcons = self->_defaultSecondPageSuggestedWidgetIcons;
  if (defaultSecondPageSuggestedWidgetIcons)
    return defaultSecondPageSuggestedWidgetIcons;
  -[SBHIconManager defaultSecondPageWidgetDescriptors](self, "defaultSecondPageWidgetDescriptors");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    v6 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
    -[SBHIconManager defaultSecondPageWidgetSizeClass](self, "defaultSecondPageWidgetSizeClass");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager gridSizeClassDomain](self, "gridSizeClassDomain");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = 0u;
    v19 = 0u;
    v20 = 0u;
    v21 = 0u;
    v17 = v5;
    v9 = v5;
    v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
    if (v10)
    {
      v11 = v10;
      v12 = *(_QWORD *)v19;
      do
      {
        for (i = 0; i != v11; ++i)
        {
          if (*(_QWORD *)v19 != v12)
            objc_enumerationMutation(v9);
          v14 = -[SBWidgetIcon initWithCHSWidgetDescriptors:suggestionSource:inDomain:]([SBWidgetIcon alloc], "initWithCHSWidgetDescriptors:suggestionSource:inDomain:", *(_QWORD *)(*((_QWORD *)&v18 + 1) + 8 * i), 2, v8);
          -[SBIcon setGridSizeClass:](v14, "setGridSizeClass:", v7);
          objc_msgSend(v6, "addObject:", v14);

        }
        v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
      }
      while (v11);
    }

    v5 = v17;
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithArray:", v6);
  v15 = (NSArray *)objc_claimAutoreleasedReturnValue();
  v16 = self->_defaultSecondPageSuggestedWidgetIcons;
  self->_defaultSecondPageSuggestedWidgetIcons = v15;

  return (NSArray *)v6;
}

- (void)beginStopUpdatingDefaultWidgetsBumpedIconRecord
{
  -[SBHWidgetIntroductionFeatureIntroductionItem setStopUpdatingDefaultWidgetsBumpedIconRecord:](self->_widgetIntroductionItem, "setStopUpdatingDefaultWidgetsBumpedIconRecord:", 1);
}

- (void)endStopUpdatingDefaultWidgetsBumpedIconRecord
{
  -[SBHWidgetIntroductionFeatureIntroductionItem setStopUpdatingDefaultWidgetsBumpedIconRecord:](self->_widgetIntroductionItem, "setStopUpdatingDefaultWidgetsBumpedIconRecord:", 0);
}

- (BOOL)rootFolderContainsWidgets
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  void *v7;
  void *v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  -[SBHIconManager rootFolder](self, "rootFolder", 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "lists");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v4)
  {
    v5 = *(_QWORD *)v11;
    while (2)
    {
      for (i = 0; i != v4; ++i)
      {
        if (*(_QWORD *)v11 != v5)
          objc_enumerationMutation(v3);
        v7 = *(void **)(*((_QWORD *)&v10 + 1) + 8 * i);
        objc_opt_self();
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        LOBYTE(v7) = objc_msgSend(v7, "directlyContainsIconOfClass:", v8);

        if ((v7 & 1) != 0)
        {
          LOBYTE(v4) = 1;
          goto LABEL_11;
        }
      }
      v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
      if (v4)
        continue;
      break;
    }
  }
LABEL_11:

  return v4;
}

- (void)saveOriginalIconStateForWidgetDiscoverability
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  NSObject *v7;
  _BOOL4 v8;
  const char *v9;
  NSObject *v10;
  uint32_t v11;
  id v12;
  uint8_t buf[4];
  id v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  -[SBHIconManager iconModel](self, "iconModel");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "saveIconStateIfNeeded");
  objc_msgSend(v3, "store");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = 0;
  objc_msgSend(v4, "loadCurrentIconState:", &v12);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v12;
  if (!v5)
  {
    SBLogWidgetDiscoverabilityMigration();
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
    if (v6)
    {
      if (v8)
      {
        *(_DWORD *)buf = 138412290;
        v14 = v6;
        v9 = "Save original icon state error: %@";
        v10 = v7;
        v11 = 12;
LABEL_8:
        _os_log_impl(&dword_1CFEF3000, v10, OS_LOG_TYPE_DEFAULT, v9, buf, v11);
      }
    }
    else if (v8)
    {
      *(_WORD *)buf = 0;
      v9 = "Save original icon state is empty";
      v10 = v7;
      v11 = 2;
      goto LABEL_8;
    }

    goto LABEL_10;
  }
  -[SBHWidgetIntroductionFeatureIntroductionItem setOriginalIconStateBeforeWidgetDiscoverability:](self->_widgetIntroductionItem, "setOriginalIconStateBeforeWidgetDiscoverability:", v5);
LABEL_10:

}

- (BOOL)applyOriginaliconStateForWidgetDiscoverability
{
  void *v3;
  void *v4;
  void *v5;
  int v6;
  id v7;
  NSObject *v8;
  _BOOL4 v9;
  const char *v10;
  NSObject *v11;
  uint32_t v12;
  id v14;
  uint8_t buf[4];
  id v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  -[SBHIconManager iconModel](self, "iconModel");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "saveIconStateIfNeeded");
  objc_msgSend(v3, "store");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHWidgetIntroductionFeatureIntroductionItem originalIconStateBeforeWidgetDiscoverability](self->_widgetIntroductionItem, "originalIconStateBeforeWidgetDiscoverability");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = 0;
  v6 = objc_msgSend(v4, "saveCurrentIconState:error:", v5, &v14);
  v7 = v14;

  if (!v6)
  {
    SBLogWidgetDiscoverabilityMigration();
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
    if (v7)
    {
      if (v9)
      {
        *(_DWORD *)buf = 138412290;
        v16 = v7;
        v10 = "Apply original icon state error: %@";
        v11 = v8;
        v12 = 12;
LABEL_8:
        _os_log_impl(&dword_1CFEF3000, v11, OS_LOG_TYPE_DEFAULT, v10, buf, v12);
      }
    }
    else if (v9)
    {
      *(_WORD *)buf = 0;
      v10 = "Apply original icon state failed";
      v11 = v8;
      v12 = 2;
      goto LABEL_8;
    }

    goto LABEL_10;
  }
  objc_msgSend(v3, "layout");
LABEL_10:

  return v6;
}

- (BOOL)addDefaultWidgetsToHomeScreen
{
  void *v3;
  int v4;
  NSObject *v5;
  NSObject *v6;
  _BOOL4 v7;
  uint8_t v9[16];
  uint8_t buf[16];

  -[SBHIconManager rootFolder](self, "rootFolder");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3 && !-[SBHIconManager rootFolderContainsWidgets](self, "rootFolderContainsWidgets"))
  {
    SBLogWidgetDiscoverabilityMigration();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1CFEF3000, v5, OS_LOG_TYPE_DEFAULT, "Saving original icon state", buf, 2u);
    }

    -[SBHIconManager saveOriginalIconStateForWidgetDiscoverability](self, "saveOriginalIconStateForWidgetDiscoverability");
    SBLogWidgetDiscoverabilityMigration();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1CFEF3000, v6, OS_LOG_TYPE_DEFAULT, "Adding default widgets to home screen.", v9, 2u);
    }

    -[SBHWidgetIntroductionFeatureIntroductionItem resetDefaultWidgetsUndoInfo](self->_widgetIntroductionItem, "resetDefaultWidgetsUndoInfo");
    v7 = -[SBHIconManager addDefaultFirstPageWidgetsToHomeScreen:](self, "addDefaultFirstPageWidgetsToHomeScreen:", 0);
    v4 = v7 | -[SBHIconManager addDefaultSecondPageWidgetsToHomeScreen:](self, "addDefaultSecondPageWidgetsToHomeScreen:", 0);
  }
  else
  {
    LOBYTE(v4) = 0;
  }

  return v4;
}

- (void)displayPronouncedContainerViewVisibility:(BOOL)a3 isVertical:(BOOL)a4
{
  _BOOL8 v4;
  _BOOL4 v5;
  void *v7;
  unsigned int v8;
  void *v9;
  unsigned int v10;
  void *v11;
  unsigned int v12;
  NSObject *v13;
  void *v14;
  void *v15;
  int v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  __int16 v20;
  uint64_t v21;
  __int16 v22;
  _BOOL8 v23;
  uint64_t v24;

  v4 = a4;
  v5 = a3;
  v24 = *MEMORY[0x1E0C80C00];
  -[SBHIconManager delegate](self, "delegate");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v8 = objc_msgSend(v7, "iconManagerShouldShowWidgetIntroductionPopoverForDefaultWidgets:", self);
  else
    v8 = 1;
  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "canShowWidgetIntroduction");

  -[SBHIconManager homeScreenDefaults](self, "homeScreenDefaults");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = objc_msgSend(v11, "shouldShowWidgetIntroductionPopover");

  SBLogWidgetDiscoverabilityMigration();
  v13 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    v16 = 134218752;
    v17 = v8;
    v18 = 2048;
    v19 = v10;
    v20 = 2048;
    v21 = v12;
    v22 = 2048;
    v23 = v5;
    _os_log_impl(&dword_1CFEF3000, v13, OS_LOG_TYPE_DEFAULT, "IM pronounced container: shouldShowPopover(%ld), rootFolderControllerCanShow(%ld), userDefaultsShouldShow(%ld), force(%ld)", (uint8_t *)&v16, 0x2Au);
  }

  if ((v8 & v10 & v12 & 1) != 0 || v5)
  {
    -[SBHIconManager usageMonitor](self, "usageMonitor");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "noteWidgetDiscoverabilityStarted");

    -[SBHIconManager updatePronouncedContainerViewVisibility:vertical:](self, "updatePronouncedContainerViewVisibility:vertical:", 1, v4);
    -[SBHIconManager homeScreenDefaults](self, "homeScreenDefaults");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "setShouldShowWidgetIntroductionPopover:", 0);

  }
}

- (BOOL)addDefaultFirstPageWidgetsToHomeScreen:(BOOL)a3
{
  uint64_t v3;
  __CFString *v5;
  NSObject *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  __CFString *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  __CFString *v17;
  void *v18;
  __CFString *v19;
  __CFString *v20;
  void *v21;
  void *v22;
  __CFString *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  uint64_t v39;
  void *v40;
  NSObject *v41;
  NSObject *v42;
  const __CFString *v43;
  void *v45;
  void *v46;
  __CFString *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  __CFString *v52;
  void *v53;
  unsigned int v54;
  unsigned int v55;
  void *v56;
  int v57;
  __CFString *v58;
  void *v59;
  void *v60;
  void *v61;
  uint8_t buf[4];
  const __CFString *v63;
  uint64_t v64;

  v3 = a3;
  v64 = *MEMORY[0x1E0C80C00];
  -[SBHIconManager defaultFirstPageSuggestedWidgetIcons](self, "defaultFirstPageSuggestedWidgetIcons");
  v5 = (__CFString *)objc_claimAutoreleasedReturnValue();
  SBLogWidgetDiscoverabilityMigration();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v63 = v5;
    _os_log_impl(&dword_1CFEF3000, v6, OS_LOG_TYPE_DEFAULT, "Default first page widget icons %@", buf, 0xCu);
  }

  v7 = -[__CFString count](v5, "count");
  if (v7)
  {
    -[SBHIconManager rootFolder](self, "rootFolder");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "firstVisibleListIndex");

    -[SBHIconManager rootFolder](self, "rootFolder");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "listAtIndex:", v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    if (-[__CFString count](v5, "count") != 4)
      goto LABEL_30;
    -[__CFString objectAtIndex:](v5, "objectAtIndex:", 0);
    v60 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v60, "gridSizeClass");
    v12 = (__CFString *)objc_claimAutoreleasedReturnValue();
    if (v12 != CFSTR("SBHIconGridSizeClassSmall"))
    {
      v13 = v3;
      v14 = v11;
      -[__CFString objectAtIndex:](v5, "objectAtIndex:", 0);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "gridSizeClass");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      if (!objc_msgSend(v16, "isEqualToString:", CFSTR("SBHIconGridSizeClassSmall")))
      {

        v11 = v14;
        v3 = v13;
        goto LABEL_30;
      }
      v49 = v15;
      v10 = v16;
      v11 = v14;
      v3 = v13;
    }
    -[__CFString objectAtIndex:](v5, "objectAtIndex:", 1);
    v59 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v59, "gridSizeClass");
    v58 = (__CFString *)objc_claimAutoreleasedReturnValue();
    v56 = v10;
    if (v58 != CFSTR("SBHIconGridSizeClassSmall"))
    {
      -[__CFString objectAtIndex:](v5, "objectAtIndex:", 1);
      v51 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v51, "gridSizeClass");
      v50 = (void *)objc_claimAutoreleasedReturnValue();
      if (!objc_msgSend(v50, "isEqualToString:", CFSTR("SBHIconGridSizeClassSmall")))
      {
        v57 = 0;
        v17 = v58;
        goto LABEL_23;
      }
    }
    -[__CFString objectAtIndex:](v5, "objectAtIndex:", 2);
    v53 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v53, "gridSizeClass");
    v52 = (__CFString *)objc_claimAutoreleasedReturnValue();
    if (v52 == CFSTR("SBHIconGridSizeClassMedium"))
    {
      v47 = v12;
      v48 = v11;
      v54 = v3;
    }
    else
    {
      -[__CFString objectAtIndex:](v5, "objectAtIndex:", 2);
      v46 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v46, "gridSizeClass");
      v45 = (void *)objc_claimAutoreleasedReturnValue();
      if (!objc_msgSend(v45, "isEqualToString:", CFSTR("SBHIconGridSizeClassMedium")))
      {
        v57 = 0;
        v23 = v52;
        goto LABEL_21;
      }
      v47 = v12;
      v48 = v11;
      v54 = v3;
    }
    -[__CFString objectAtIndex:](v5, "objectAtIndex:", 3);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "gridSizeClass");
    v19 = (__CFString *)objc_claimAutoreleasedReturnValue();
    v20 = v19;
    if (v19 == CFSTR("SBHIconGridSizeClassLarge"))
    {

      v57 = 1;
    }
    else
    {
      -[__CFString objectAtIndex:](v5, "objectAtIndex:", 3);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v21, "gridSizeClass");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      v57 = objc_msgSend(v22, "isEqualToString:", CFSTR("SBHIconGridSizeClassLarge"));

    }
    v23 = v52;
    v3 = v54;
    v12 = v47;
    v11 = v48;
    if (v52 == CFSTR("SBHIconGridSizeClassMedium"))
    {
LABEL_22:

      v17 = v58;
      if (v58 == CFSTR("SBHIconGridSizeClassSmall"))
      {
LABEL_24:

        if (v12 == CFSTR("SBHIconGridSizeClassSmall"))
        {

          if (!v57)
            goto LABEL_30;
        }
        else
        {

          if ((v57 & 1) == 0)
            goto LABEL_30;
        }
        if ((unint64_t)objc_msgSend(v11, "numberOfIcons") >= 9)
        {
          -[SBHIconManager rootFolder](self, "rootFolder");
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v24, "gridPathWithListAtIndex:gridCellIndex:listGridCellInfoOptions:", 0, 0, -[SBHIconManager gridCellInfoOptionsForInsertingDefaultWidgets](self, "gridCellInfoOptionsForInsertingDefaultWidgets"));
          v25 = (void *)objc_claimAutoreleasedReturnValue();

          v26 = (void *)MEMORY[0x1E0C99D20];
          -[__CFString subarrayWithRange:](v5, "subarrayWithRange:", 0, 2);
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v26, "arrayWithArray:", v27);
          v61 = (void *)objc_claimAutoreleasedReturnValue();

          -[SBHIconManager rootFolder](self, "rootFolder");
          v28 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v28, "gridPathWithListAtIndex:gridCellIndex:listGridCellInfoOptions:", 0, 4, -[SBHIconManager gridCellInfoOptionsForInsertingDefaultWidgets](self, "gridCellInfoOptionsForInsertingDefaultWidgets"));
          v29 = (void *)objc_claimAutoreleasedReturnValue();

          v30 = (void *)MEMORY[0x1E0C99D20];
          -[__CFString objectAtIndex:](v5, "objectAtIndex:", 2);
          v55 = v3;
          v31 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v30, "arrayWithObject:", v31);
          v32 = (void *)objc_claimAutoreleasedReturnValue();

          -[SBHIconManager rootFolder](self, "rootFolder");
          v33 = v11;
          v34 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v34, "gridPathWithListAtIndex:gridCellIndex:listGridCellInfoOptions:", 0, 12, -[SBHIconManager gridCellInfoOptionsForInsertingDefaultWidgets](self, "gridCellInfoOptionsForInsertingDefaultWidgets"));
          v35 = (void *)objc_claimAutoreleasedReturnValue();

          v36 = (void *)MEMORY[0x1E0C99D20];
          -[__CFString lastObject](v5, "lastObject");
          v37 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v36, "arrayWithObject:", v37);
          v38 = (void *)objc_claimAutoreleasedReturnValue();

          -[SBHIconManager beginStopUpdatingDefaultWidgetsBumpedIconRecord](self, "beginStopUpdatingDefaultWidgetsBumpedIconRecord");
          -[SBHIconManager addWidgets:toGridPath:overflowOptions:](self, "addWidgets:toGridPath:overflowOptions:", v61, v25, 0);
          -[SBHIconManager addWidgets:toGridPath:overflowOptions:](self, "addWidgets:toGridPath:overflowOptions:", v32, v29, 0);
          -[SBHIconManager addWidgets:toGridPath:overflowOptions:](self, "addWidgets:toGridPath:overflowOptions:", v38, v35, 0);
          -[SBHIconManager endStopUpdatingDefaultWidgetsBumpedIconRecord](self, "endStopUpdatingDefaultWidgetsBumpedIconRecord");

          v11 = v33;
          v3 = v55;

          v39 = 1;
LABEL_33:

          -[SBHWidgetIntroductionFeatureIntroductionItem setIsVerticalWidgetIntroduction:](self->_widgetIntroductionItem, "setIsVerticalWidgetIntroduction:", v39);
          -[SBHWidgetIntroductionFeatureIntroductionItem setForceShowWidgetIntroduction:](self->_widgetIntroductionItem, "setForceShowWidgetIntroduction:", v3);

          goto LABEL_34;
        }
LABEL_30:
        -[SBHIconManager rootFolder](self, "rootFolder");
        v40 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v40, "gridPathWithListAtIndex:gridCellIndex:listGridCellInfoOptions:", v9, 0, -[SBHIconManager gridCellInfoOptionsForInsertingDefaultWidgets](self, "gridCellInfoOptionsForInsertingDefaultWidgets"));
        v25 = (void *)objc_claimAutoreleasedReturnValue();

        -[SBHIconManager beginStopUpdatingDefaultWidgetsBumpedIconRecord](self, "beginStopUpdatingDefaultWidgetsBumpedIconRecord");
        SBLogWidgetDiscoverabilityMigration();
        v41 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          v63 = v5;
          _os_log_impl(&dword_1CFEF3000, v41, OS_LOG_TYPE_DEFAULT, "Add first page default widget icons(%@) to model", buf, 0xCu);
        }

        -[SBHIconManager addWidgets:toGridPath:overflowOptions:](self, "addWidgets:toGridPath:overflowOptions:", v5, v25, 0);
        -[SBHIconManager endStopUpdatingDefaultWidgetsBumpedIconRecord](self, "endStopUpdatingDefaultWidgetsBumpedIconRecord");
        v39 = 0;
        goto LABEL_33;
      }
LABEL_23:

      goto LABEL_24;
    }
LABEL_21:

    goto LABEL_22;
  }
LABEL_34:
  SBLogWidgetDiscoverabilityMigration();
  v42 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT))
  {
    v43 = CFSTR("not added");
    if (v7)
      v43 = CFSTR("added");
    *(_DWORD *)buf = 138412290;
    v63 = v43;
    _os_log_impl(&dword_1CFEF3000, v42, OS_LOG_TYPE_DEFAULT, "First page widgets are %@", buf, 0xCu);
  }

  return v7 != 0;
}

- (BOOL)addDefaultSecondPageWidgetsToHomeScreen:(BOOL)a3
{
  void *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  void *v10;
  void *v11;
  void *v12;
  int v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  _BOOL4 v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  const __CFString *v27;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint8_t buf[4];
  const __CFString *v34;
  _BYTE v35[128];
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  if (a3)
    -[SBHIconManager prototypeSetDefaultSecondPageWidgetIcons](self, "prototypeSetDefaultSecondPageWidgetIcons");
  -[SBHIconManager defaultSecondPageSuggestedWidgetIcons](self, "defaultSecondPageSuggestedWidgetIcons");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v4, "count"))
  {
    v31 = 0u;
    v32 = 0u;
    v29 = 0u;
    v30 = 0u;
    v5 = v4;
    v6 = -[NSObject countByEnumeratingWithState:objects:count:](v5, "countByEnumeratingWithState:objects:count:", &v29, v35, 16);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)v30;
      while (2)
      {
        for (i = 0; i != v7; ++i)
        {
          if (*(_QWORD *)v30 != v8)
            objc_enumerationMutation(v5);
          objc_msgSend(*(id *)(*((_QWORD *)&v29 + 1) + 8 * i), "activeWidget", (_QWORD)v29);
          v10 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v10, "extensionBundleIdentifier");
          v11 = (void *)objc_claimAutoreleasedReturnValue();

          -[SBHIconManager rootFolder](self, "rootFolder");
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          v13 = objc_msgSend(v12, "containsWidgetWithExtensionBundleIdentifier:", v11);

          if (v13)
          {
            -[SBHIconManager proactiveWidgetSuggesterClient](self, "proactiveWidgetSuggesterClient");
            v20 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v20, "logEventForDefaultWidgetSuggestionType:event:", 1, 1);

            LOBYTE(v21) = 0;
            goto LABEL_24;
          }

        }
        v7 = -[NSObject countByEnumeratingWithState:objects:count:](v5, "countByEnumeratingWithState:objects:count:", &v29, v35, 16);
        if (v7)
          continue;
        break;
      }
    }

    -[SBHIconManager rootFolder](self, "rootFolder");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = objc_msgSend(v14, "firstVisibleListIndex");

    -[SBHIconManager rootFolder](self, "rootFolder");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = objc_msgSend(v16, "nextVisibleListIndexAfterIndex:", v15);

    -[SBHIconManager rootFolder](self, "rootFolder");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = v18;
    if (v17 == 0x7FFFFFFFFFFFFFFFLL)
      objc_msgSend(v18, "addEmptyListRemovingLeastRecentlyHiddenListIfNecessary");
    else
      objc_msgSend(v18, "listAtIndex:", v17);
    v22 = (void *)objc_claimAutoreleasedReturnValue();

    v21 = v22 != 0;
    if (v22)
    {
      -[SBHIconManager rootFolder](self, "rootFolder");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      v24 = objc_msgSend(v23, "indexOfList:", v22);

      -[SBHIconManager rootFolder](self, "rootFolder");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v25, "gridPathWithListAtIndex:gridCellIndex:listGridCellInfoOptions:", v24, 0, -[SBHIconManager gridCellInfoOptionsForInsertingDefaultWidgets](self, "gridCellInfoOptionsForInsertingDefaultWidgets"));
      v26 = (void *)objc_claimAutoreleasedReturnValue();

      -[SBHIconManager beginStopUpdatingDefaultWidgetsBumpedIconRecord](self, "beginStopUpdatingDefaultWidgetsBumpedIconRecord");
      -[SBHIconManager addWidgets:toGridPath:overflowOptions:](self, "addWidgets:toGridPath:overflowOptions:", v5, v26, 0);
      -[SBHIconManager endStopUpdatingDefaultWidgetsBumpedIconRecord](self, "endStopUpdatingDefaultWidgetsBumpedIconRecord");

    }
  }
  else
  {
    v21 = 0;
  }
  SBLogWidgetDiscoverabilityMigration();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v27 = CFSTR("not added");
    if (v21)
      v27 = CFSTR("added");
    *(_DWORD *)buf = 138412290;
    v34 = v27;
    _os_log_impl(&dword_1CFEF3000, v5, OS_LOG_TYPE_DEFAULT, "Second page widgets are %@", buf, 0xCu);
  }
LABEL_24:

  return v21;
}

- (BOOL)deviceTypeSupportModalWidgetIntroduction
{
  return -[SBHWidgetIntroductionFeatureIntroductionItem deviceTypeSupportModalWidgetIntroduction](self->_widgetIntroductionItem, "deviceTypeSupportModalWidgetIntroduction");
}

- (void)immediateDownloadSpringBoardHomeTrialSettingsWhenNeeded
{
  -[SBHWidgetIntroductionFeatureIntroductionItem immediateDownloadSpringBoardHomeTrialSettingsWhenNeeded](self->_widgetIntroductionItem, "immediateDownloadSpringBoardHomeTrialSettingsWhenNeeded");
}

- (BOOL)userHasUsedWidget
{
  void *v2;
  unsigned int v3;
  NSObject *v4;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99EA0]), "initWithSuiteName:", CFSTR("com.apple.DuetExpertCenter.AppPredictionExpert"));
  v3 = objc_msgSend(v2, "BOOLForKey:", CFSTR("hasHadWidgetsOnHomeScreen"));
  SBLogWidgetDiscoverabilityMigration();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v6 = 134217984;
    v7 = v3;
    _os_log_impl(&dword_1CFEF3000, v4, OS_LOG_TYPE_DEFAULT, "User has had widget = %ld", (uint8_t *)&v6, 0xCu);
  }

  return v3;
}

- (void)undoDefaultWidgets:(BOOL)a3
{
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  -[SBHIconManager updatePronouncedContainerViewVisibility:vertical:](self, "updatePronouncedContainerViewVisibility:vertical:", 0, 0);
  if (!-[SBHIconManager applyOriginaliconStateForWidgetDiscoverability](self, "applyOriginaliconStateForWidgetDiscoverability"))
  {
    -[SBHIconManager defaultFirstPageSuggestedWidgetIcons](self, "defaultFirstPageSuggestedWidgetIcons");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager defaultSecondPageSuggestedWidgetIcons](self, "defaultSecondPageSuggestedWidgetIcons");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager iconModel](self, "iconModel");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0DC3708], "currentDevice");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "userInterfaceIdiom");

    if ((v9 & 0xFFFFFFFFFFFFFFFBLL) == 1)
      objc_msgSend(v7, "removeIcons:", v6);
    objc_msgSend(v7, "removeIcons:", v5);

  }
  if (!a3)
  {
    -[SBHIconManager homeScreenDefaults](self, "homeScreenDefaults");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "setUserDidUndoSuggestedWidget:", 1);

    -[SBHWidgetIntroductionFeatureIntroductionItem resetDefaultWidgetsUndoInfo](self->_widgetIntroductionItem, "resetDefaultWidgetsUndoInfo");
    -[SBHIconManager widgetIntroductionSettings](self, "widgetIntroductionSettings");
    v11 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "setShowWidgetIntroConvenienceControl:", 0);

  }
}

- (void)undoDefaultTVWidget
{
  void *v3;
  void *v4;
  id v5;

  -[SBHIconManager updatePronouncedContainerViewVisibility:vertical:](self, "updatePronouncedContainerViewVisibility:vertical:", 0, 0);
  -[SBHIconManager defaultSecondPageSuggestedWidgetIcons](self, "defaultSecondPageSuggestedWidgetIcons");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager iconModel](self, "iconModel");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "removeIcons:", v5);
  -[SBHIconManager widgetIntroductionSettings](self, "widgetIntroductionSettings");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setShowXLTVWidget:", 0);

}

- (BOOL)rootFolderContainsSuggestedWidget
{
  void *v3;
  char v4;
  BOOL v5;
  void *v6;
  _QWORD v8[6];
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  char v12;

  -[SBHIconManager homeScreenDefaults](self, "homeScreenDefaults");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "userDidUndoSuggestedWidget");

  if ((v4 & 1) != 0)
    return 0;
  v9 = 0;
  v10 = &v9;
  v11 = 0x2020000000;
  v12 = 0;
  -[SBHIconManager rootFolder](self, "rootFolder");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = __51__SBHIconManager_rootFolderContainsSuggestedWidget__block_invoke;
  v8[3] = &unk_1E8D8CCD8;
  v8[4] = self;
  v8[5] = &v9;
  objc_msgSend(v6, "enumerateAllIconsUsingBlock:", v8);

  v5 = *((_BYTE *)v10 + 24) != 0;
  _Block_object_dispose(&v9, 8);
  return v5;
}

void __51__SBHIconManager_rootFolderContainsSuggestedWidget__block_invoke(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v6;
  char isKindOfClass;
  id v8;

  v8 = a2;
  objc_opt_self();
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  isKindOfClass = objc_opt_isKindOfClass();

  if ((isKindOfClass & 1) != 0 && objc_msgSend(*(id *)(a1 + 32), "widgetIconIsOnboardingWidget:", v8))
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
    *a4 = 1;
  }

}

- (void)updateWidgetDiscoverabilityUserPreferencesByDeletingWidget:(id)a3
{
  void *v4;
  _BOOL4 v5;
  void *v6;
  int v7;
  void *v8;
  id v9;

  v9 = a3;
  -[SBHIconManager homeScreenDefaults](self, "homeScreenDefaults");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v4, "userHasDeletedSuggestedWidget") & 1) == 0)
  {
    v5 = -[SBHIconManager widgetIconIsOnboardingWidget:](self, "widgetIconIsOnboardingWidget:", v9);

    if (!v5)
      goto LABEL_5;
    -[SBHIconManager homeScreenDefaults](self, "homeScreenDefaults");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setUserHasDeletedSuggestedWidget:", 1);
  }

LABEL_5:
  if (!-[SBHIconManager rootFolderContainsSuggestedWidget](self, "rootFolderContainsSuggestedWidget"))
  {
    -[SBHIconManager homeScreenDefaults](self, "homeScreenDefaults");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "setUserDidUndoSuggestedWidget:", 1);
    goto LABEL_9;
  }
  -[SBHIconManager defaultSecondPageSuggestedWidgetIcons](self, "defaultSecondPageSuggestedWidgetIcons");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "containsObject:", v9);

  if (v7)
  {
    -[SBHIconManager proactiveWidgetSuggesterClient](self, "proactiveWidgetSuggesterClient");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "logEventForDefaultWidgetSuggestionType:event:", 1, 3);
LABEL_9:

  }
}

- (void)disableUserInteractionForWidgetDiscoverability
{
  void *v3;

  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setScrollingDisabled:forReason:", 1, CFSTR("SBHIconManager WidgetDiscoverability"));

  -[SBHIconManager setShouldDisableUserInteractionForWidgetDiscoverability:](self, "setShouldDisableUserInteractionForWidgetDiscoverability:", 1);
}

- (void)enableUserInteractionForWidgetDiscoverability
{
  void *v3;

  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setScrollingDisabled:forReason:", 0, CFSTR("SBHIconManager WidgetDiscoverability"));

  -[SBHIconManager setShouldDisableUserInteractionForWidgetDiscoverability:](self, "setShouldDisableUserInteractionForWidgetDiscoverability:", 0);
}

- (void)updatePronouncedContainerViewVisibility:(BOOL)a3 vertical:(BOOL)a4
{
  _BOOL8 v4;
  _BOOL8 v5;
  id v6;

  v4 = a4;
  v5 = a3;
  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "updatePronouncedContainerViewVisibilityIfPossible:vertical:", v5, v4);

}

- (BOOL)prototypeSettingShowWidgetIntroduction
{
  void *v2;
  char v3;

  -[SBHIconManager widgetIntroductionSettings](self, "widgetIntroductionSettings");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "showWidgetIntroConvenienceControl");

  return v3;
}

- (BOOL)prototypeSettingEditButtonAsUndo
{
  void *v2;
  char v3;

  -[SBHIconManager widgetIntroductionSettings](self, "widgetIntroductionSettings");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "editButtonAsUndo");

  return v3;
}

- (BOOL)prototypeSettingSimpleBottomSnaking
{
  void *v2;
  char v3;

  -[SBHIconManager widgetIntroductionSettings](self, "widgetIntroductionSettings");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "simpleBottomSnaking");

  return v3;
}

- (BOOL)prototypeSettingBumpLeastUsedApps
{
  void *v2;
  char v3;

  -[SBHIconManager widgetIntroductionSettings](self, "widgetIntroductionSettings");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "bumpLeastUsedApps");

  return v3;
}

- (BOOL)prototypeSettingShowExtraLargeTVWidget
{
  void *v2;
  char v3;

  -[SBHIconManager widgetIntroductionSettings](self, "widgetIntroductionSettings");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "showXLTVWidget");

  return v3;
}

- (void)scrollToDefaultWidgets
{
  id v2;

  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setCurrentPageIndex:animated:completion:", objc_msgSend(v2, "firstIconPageIndex"), 0, 0);

}

- (void)prepareModalWidgetIntroductionWidgetViewSnapshots
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  void *v29;
  void *v30;
  void *v31;
  NSObject *v32;
  void *v33;
  void *v34;
  NSObject *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  uint8_t buf[4];
  void *v47;
  __int16 v48;
  void *v49;
  uint64_t v50;
  CGPoint v51;
  CGPoint v52;
  CGPoint v53;
  CGPoint v54;

  v50 = *MEMORY[0x1E0C80C00];
  -[SBHIconManager defaultFirstPageSuggestedWidgetIcons](self, "defaultFirstPageSuggestedWidgetIcons");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "lastObject");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  -[SBHIconManager rootViewController](self, "rootViewController");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "firstIconViewForIcon:options:", v4, 64);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "iconImageCenter");
  objc_msgSend(v6, "convertPoint:toView:", 0);
  v8 = v7;
  v10 = v9;
  objc_msgSend(v6, "iconImageSize");
  v12 = v11;
  v14 = v13;
  v15 = (void *)MEMORY[0x1E0C99D20];
  -[SBHIconManager onboardingWidgetPreviewsForWidgetIcon:](self, "onboardingWidgetPreviewsForWidgetIcon:", v4);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "arrayWithArray:", v16);
  v45 = (void *)objc_claimAutoreleasedReturnValue();

  -[SBHIconManager defaultFirstPageSuggestedWidgetIcons](self, "defaultFirstPageSuggestedWidgetIcons");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "firstObject");
  v18 = (void *)objc_claimAutoreleasedReturnValue();

  -[SBHIconManager rootViewController](self, "rootViewController");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "firstIconViewForIcon:options:", v18, 64);
  v20 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v20, "iconImageCenter");
  objc_msgSend(v20, "convertPoint:toView:", 0);
  v22 = v21;
  v24 = v23;
  objc_msgSend(v20, "iconImageSize");
  v26 = v25;
  v28 = v27;
  v29 = (void *)MEMORY[0x1E0C99D20];
  -[SBHIconManager onboardingWidgetPreviewsForWidgetIcon:](self, "onboardingWidgetPreviewsForWidgetIcon:", v18);
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v29, "arrayWithArray:", v30);
  v31 = (void *)objc_claimAutoreleasedReturnValue();

  SBLogWidgetDiscoverabilityMigration();
  v32 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend(v20, "iconImageCenter");
    NSStringFromCGPoint(v51);
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "iconImageCenter");
    NSStringFromCGPoint(v52);
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412546;
    v47 = v33;
    v48 = 2112;
    v49 = v34;
    _os_log_impl(&dword_1CFEF3000, v32, OS_LOG_TYPE_DEFAULT, "Static original widget center(%@); falling original widget center(%@)",
      buf,
      0x16u);

  }
  SBLogWidgetDiscoverabilityMigration();
  v35 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
  {
    v53.x = v22;
    v53.y = v24;
    NSStringFromCGPoint(v53);
    v36 = (void *)objc_claimAutoreleasedReturnValue();
    v54.x = v8;
    v54.y = v10;
    NSStringFromCGPoint(v54);
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412546;
    v47 = v36;
    v48 = 2112;
    v49 = v37;
    _os_log_impl(&dword_1CFEF3000, v35, OS_LOG_TYPE_DEFAULT, "Static widget center(%@); falling widget center(%@)",
      buf,
      0x16u);

  }
  -[SBHWidgetIntroductionFeatureIntroductionItem modalIntroductionViewController](self->_widgetIntroductionItem, "modalIntroductionViewController");
  v38 = (void *)objc_claimAutoreleasedReturnValue();

  if (v38)
  {
    -[SBHWidgetIntroductionFeatureIntroductionItem modalIntroductionViewController](self->_widgetIntroductionItem, "modalIntroductionViewController");
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v39, "setOnboardingFallingWidgetPreviews:", v45);

    -[SBHWidgetIntroductionFeatureIntroductionItem modalIntroductionViewController](self->_widgetIntroductionItem, "modalIntroductionViewController");
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v40, "setOnboardingFallingWidgetCenterPoint:", v8, v10);

    -[SBHWidgetIntroductionFeatureIntroductionItem modalIntroductionViewController](self->_widgetIntroductionItem, "modalIntroductionViewController");
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v41, "setOnboardingFallingWidgetBounds:", 0.0, 0.0, v12, v14);

    -[SBHWidgetIntroductionFeatureIntroductionItem modalIntroductionViewController](self->_widgetIntroductionItem, "modalIntroductionViewController");
    v42 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v42, "setOnboardingStaticWidgetPreviews:", v31);

    -[SBHWidgetIntroductionFeatureIntroductionItem modalIntroductionViewController](self->_widgetIntroductionItem, "modalIntroductionViewController");
    v43 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v43, "setOnboardingStaticWidgetCenterPoint:", v22, v24);

    -[SBHWidgetIntroductionFeatureIntroductionItem modalIntroductionViewController](self->_widgetIntroductionItem, "modalIntroductionViewController");
    v44 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v44, "setOnboardingStaticWidgetBounds:", 0.0, 0.0, v26, v28);

  }
}

- (id)_widgetIntroductionHomeScreenPreviewView
{
  void *v3;
  char v4;
  id WeakRetained;
  void *v6;

  -[SBHIconManager delegate](self, "delegate");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_opt_respondsToSelector();

  if ((v4 & 1) != 0)
  {
    WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
    objc_msgSend(WeakRetained, "widgetIntroductionPreviewViewForIconManager:", self);
    v6 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v6 = 0;
  }
  return v6;
}

- (void)invalidateOnboardingWidgetPreviewViewControllers
{
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  -[SBHIconManager chuisOnboardingWidgetViewControllers](self, "chuisOnboardingWidgetViewControllers");
  v3 = objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    v4 = (void *)v3;
    -[SBHIconManager chuisOnboardingWidgetViewControllers](self, "chuisOnboardingWidgetViewControllers");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v5, "count");

    if (v6)
    {
      v15 = 0u;
      v16 = 0u;
      v13 = 0u;
      v14 = 0u;
      -[SBHIconManager chuisOnboardingWidgetViewControllers](self, "chuisOnboardingWidgetViewControllers", 0);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
      if (v8)
      {
        v9 = v8;
        v10 = *(_QWORD *)v14;
        do
        {
          v11 = 0;
          do
          {
            if (*(_QWORD *)v14 != v10)
              objc_enumerationMutation(v7);
            objc_msgSend(*(id *)(*((_QWORD *)&v13 + 1) + 8 * v11++), "invalidate");
          }
          while (v9 != v11);
          v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
        }
        while (v9);
      }

      -[SBHIconManager chuisOnboardingWidgetViewControllers](self, "chuisOnboardingWidgetViewControllers");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "removeAllObjects");

    }
  }
  -[SBHIconManager setChuisOnboardingWidgetViewControllers:](self, "setChuisOnboardingWidgetViewControllers:", 0);
}

- (id)onboardingWidgetPreviewsForWidgetIcon:(id)a3
{
  id v4;
  void *v5;
  NSMutableArray *v6;
  NSMutableArray *chuisOnboardingWidgetViewControllers;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  BOOL v17;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v32;
  id v33;
  void *v34;
  void *v35;
  id obj;
  SBHIconManager *v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _BYTE v43[128];
  uint64_t v44;

  v44 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[SBHIconManager chuisOnboardingWidgetViewControllers](self, "chuisOnboardingWidgetViewControllers");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v5)
  {
    objc_msgSend(MEMORY[0x1E0C99DE8], "array");
    v6 = (NSMutableArray *)objc_claimAutoreleasedReturnValue();
    chuisOnboardingWidgetViewControllers = self->_chuisOnboardingWidgetViewControllers;
    self->_chuisOnboardingWidgetViewControllers = v6;

  }
  v37 = self;
  -[SBHIconManager gridSizeClassDomain](self, "gridSizeClassDomain");
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v33 = (id)objc_claimAutoreleasedReturnValue();
  v39 = 0u;
  v40 = 0u;
  v41 = 0u;
  v42 = 0u;
  v35 = v4;
  objc_msgSend(v4, "iconDataSources");
  obj = (id)objc_claimAutoreleasedReturnValue();
  v38 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v39, v43, 16);
  if (v38)
  {
    v8 = *(_QWORD *)v40;
    v32 = *(_QWORD *)v40;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v40 != v8)
          objc_enumerationMutation(obj);
        v10 = *(void **)(*((_QWORD *)&v39 + 1) + 8 * v9);
        objc_opt_self();
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        if ((objc_opt_isKindOfClass() & 1) != 0)
          v12 = v10;
        else
          v12 = 0;
        v13 = v12;

        objc_msgSend(v13, "kind");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "extensionBundleIdentifier");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "containerBundleIdentifier");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        if (v13)
          v17 = v14 == 0;
        else
          v17 = 1;
        if (!v17 && v15 != 0)
        {
          -[SBHIconManager _intentForWidget:ofIcon:creatingIfNecessary:](v37, "_intentForWidget:ofIcon:creatingIfNecessary:", v13, v35, 1);
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v35, "gridSizeClass");
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          v21 = objc_msgSend(v34, "chsWidgetFamilyForIconGridSizeClass:", v20);
          v22 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D10038]), "initWithExtensionBundleIdentifier:containerBundleIdentifier:deviceIdentifier:", v15, v16, 0);
          v23 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D10148]), "initWithExtensionIdentity:kind:family:intent:activityIdentifier:", v22, v14, v21, v19, 0);

          if (v23)
          {
            -[SBHIconManager widgetMetricsProvider](v37, "widgetMetricsProvider");
            v24 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v24, "systemMetricsForWidget:", v23);
            v25 = (void *)objc_claimAutoreleasedReturnValue();

            v26 = objc_alloc(MEMORY[0x1E0D10310]);
            objc_msgSend(v13, "uniqueIdentifier");
            v27 = (void *)objc_claimAutoreleasedReturnValue();
            v28 = (void *)objc_msgSend(v26, "initWithWidget:metrics:widgetConfigurationIdentifier:", v23, v25, v27);

            v8 = v32;
            -[SBHIconManager chuisOnboardingWidgetViewControllers](v37, "chuisOnboardingWidgetViewControllers");
            v29 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v29, "addObject:", v28);

            objc_msgSend(v28, "view");
            v30 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v33, "addObject:", v30);

          }
        }

        ++v9;
      }
      while (v38 != v9);
      v38 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v39, v43, 16);
    }
    while (v38);
  }

  return v33;
}

- (void)removeWidgetDiscoverabilityContainerViewsAndPopoverWhenNeeded:(BOOL)a3
{
  _BOOL4 v3;
  void *v5;
  void *v6;
  void *v7;
  BOOL v8;
  _QWORD v9[6];
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char v13;

  v3 = a3;
  -[SBHIconManager rootFolder](self, "rootFolder");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager rootFolder](self, "rootFolder");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "listAtIndex:", objc_msgSend(v6, "firstVisibleListIndex"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  v10 = 0;
  v11 = &v10;
  v12 = 0x2020000000;
  v13 = 0;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = __80__SBHIconManager_removeWidgetDiscoverabilityContainerViewsAndPopoverWhenNeeded___block_invoke;
  v9[3] = &unk_1E8D8D280;
  v9[4] = self;
  v9[5] = &v10;
  objc_msgSend(v7, "enumerateIconsWithOptions:usingBlock:", 0, v9);
  if (*((_BYTE *)v11 + 24))
    v8 = !v3;
  else
    v8 = 0;
  if (!v8)
    -[SBHIconManager updatePronouncedContainerViewVisibility:vertical:](self, "updatePronouncedContainerViewVisibility:vertical:", 0, -[SBHWidgetIntroductionFeatureIntroductionItem isVerticalWidgetIntroduction](self->_widgetIntroductionItem, "isVerticalWidgetIntroduction"));
  _Block_object_dispose(&v10, 8);

}

void __80__SBHIconManager_removeWidgetDiscoverabilityContainerViewsAndPopoverWhenNeeded___block_invoke(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v6;

  v6 = a2;
  if (objc_msgSend(v6, "isWidgetIcon"))
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = objc_msgSend(*(id *)(a1 + 32), "widgetIconIsOnboardingWidget:", v6);
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24))
      *a4 = 1;
  }

}

- (BOOL)widgetIconIsOnboardingWidget:(id)a3
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t i;
  void *v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  objc_msgSend(a3, "widgets", 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v4)
  {
    v5 = v4;
    v6 = 0;
    v7 = 0;
    v8 = *(_QWORD *)v13;
    do
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v13 != v8)
          objc_enumerationMutation(v3);
        v10 = *(void **)(*((_QWORD *)&v12 + 1) + 8 * i);
        if (objc_msgSend(v10, "suggestionSource") == 2)
        {
          v7 = 1;
        }
        else if (objc_msgSend(v10, "suggestionSource") != 2)
        {
          v6 |= objc_msgSend(v10, "suggestionSource") != 1;
        }
      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v5);
  }
  else
  {
    v6 = 0;
    v7 = 0;
  }

  return v7 & ~v6 & 1;
}

- (id)captureHomeScreenOnboardingSnapshot
{
  NSObject *v3;
  uint8_t v5[16];

  SBLogWidgetDiscoverabilityMigration();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1CFEF3000, v3, OS_LOG_TYPE_DEFAULT, "Capture home screen preview for widget discoverability introduction", v5, 2u);
  }

  -[SBHIconManager _widgetIntroductionHomeScreenPreviewView](self, "_widgetIntroductionHomeScreenPreviewView");
  return (id)objc_claimAutoreleasedReturnValue();
}

- (void)folder:(id)a3 didAddIcons:(id)a4 removedIcons:(id)a5
{
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  unsigned int v13;
  void *v14;
  unint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t i;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  int v41;
  void *v42;
  id v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  char v48;
  void *v49;
  int v50;
  void *v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  uint64_t v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  int v67;
  void *v68;
  void *v69;
  int v70;
  void *v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t j;
  uint64_t v77;
  void *v78;
  void *v79;
  id v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  void *v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  id obj;
  unint64_t v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  id v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  _BYTE v103[128];
  _BYTE v104[128];
  _BYTE v105[128];
  uint64_t v106;

  v106 = *MEMORY[0x1E0C80C00];
  v6 = a5;
  -[SBHIconManager noteRootFolderDidMutate](self, "noteRootFolderDidMutate");
  if (!-[SBHWidgetIntroductionFeatureIntroductionItem stopUpdatingDefaultWidgetsBumpedIconRecord](self->_widgetIntroductionItem, "stopUpdatingDefaultWidgetsBumpedIconRecord"))
  {
    -[SBHIconManager beginStopUpdatingDefaultWidgetsBumpedIconRecord](self, "beginStopUpdatingDefaultWidgetsBumpedIconRecord");
    -[SBHIconManager iconGridSizeClassSizes](self, "iconGridSizeClassSizes");
    v82 = (void *)objc_claimAutoreleasedReturnValue();
    v99 = 0u;
    v100 = 0u;
    v101 = 0u;
    v102 = 0u;
    v80 = v6;
    objc_msgSend(v6, "allObjects");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v99, v105, 16);
    if (v8)
    {
      v9 = v8;
      v10 = *(_QWORD *)v100;
      v84 = v7;
      v81 = *(_QWORD *)v100;
      do
      {
        v11 = 0;
        v83 = v9;
        do
        {
          if (*(_QWORD *)v100 != v10)
            objc_enumerationMutation(v7);
          v12 = *(void **)(*((_QWORD *)&v99 + 1) + 8 * v11);
          if (objc_msgSend(v12, "isWidgetIcon")
            && -[SBHIconManager widgetIconIsOnboardingWidget:](self, "widgetIconIsOnboardingWidget:", v12))
          {
            obj = v12;
            objc_msgSend(obj, "gridSizeClass");
            v86 = objc_claimAutoreleasedReturnValue();
            v13 = objc_msgSend(v82, "gridSizeAreaForGridSizeClass:");
            -[SBHWidgetIntroductionFeatureIntroductionItem defaultWidgetsBumpedIconUsageRanking](self->_widgetIntroductionItem, "defaultWidgetsBumpedIconUsageRanking");
            v14 = (void *)objc_claimAutoreleasedReturnValue();
            v15 = objc_msgSend(v14, "count");

            if (v15 >= v13)
              v15 = v13;
            -[SBHIconManager rootFolder](self, "rootFolder");
            v16 = (void *)objc_claimAutoreleasedReturnValue();
            -[SBHIconManager rootFolder](self, "rootFolder");
            v17 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v16, "listAtIndex:", objc_msgSend(v17, "firstVisibleListIndex"));
            v18 = (void *)objc_claimAutoreleasedReturnValue();

            v19 = objc_msgSend(v18, "maxNumberOfIcons");
            v20 = objc_msgSend(v18, "numberOfIcons");
            v89 = v15;
            if (v20 + v15 <= v19)
              v21 = v20;
            else
              v21 = v19 - v15;
            -[SBHIconManager rootFolder](self, "rootFolder");
            v22 = (void *)objc_claimAutoreleasedReturnValue();
            -[SBHWidgetIntroductionFeatureIntroductionItem defaultWidgetsBumpedIconUsageRanking](self->_widgetIntroductionItem, "defaultWidgetsBumpedIconUsageRanking");
            v23 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v23, "firstObject");
            v24 = (void *)objc_claimAutoreleasedReturnValue();
            v25 = objc_msgSend(v22, "indexOfListContainingIcon:", v24);

            v87 = v11;
            v85 = v18;
            if (v25 != 0x7FFFFFFFFFFFFFFFLL)
            {
              v97 = 0u;
              v98 = 0u;
              v95 = 0u;
              v96 = 0u;
              -[SBHWidgetIntroductionFeatureIntroductionItem defaultWidgetsIconsRestoringRecordOriginalIndex](self->_widgetIntroductionItem, "defaultWidgetsIconsRestoringRecordOriginalIndex");
              v26 = (void *)objc_claimAutoreleasedReturnValue();
              v27 = objc_msgSend(v26, "countByEnumeratingWithState:objects:count:", &v95, v104, 16);
              if (v27)
              {
                v28 = v27;
                v29 = *(_QWORD *)v96;
                do
                {
                  for (i = 0; i != v28; ++i)
                  {
                    if (*(_QWORD *)v96 != v29)
                      objc_enumerationMutation(v26);
                    v31 = objc_msgSend(*(id *)(*((_QWORD *)&v95 + 1) + 8 * i), "integerValue");
                    if (v31 < v21)
                      v21 = v31;
                  }
                  v28 = objc_msgSend(v26, "countByEnumeratingWithState:objects:count:", &v95, v104, 16);
                }
                while (v28);
              }

            }
            if (v89)
            {
              v32 = 0;
              while (1)
              {
                -[SBHWidgetIntroductionFeatureIntroductionItem defaultWidgetsBumpedIconUsageRanking](self->_widgetIntroductionItem, "defaultWidgetsBumpedIconUsageRanking");
                v33 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v33, "firstObject");
                v34 = (void *)objc_claimAutoreleasedReturnValue();

                v35 = v34;
                -[SBHWidgetIntroductionFeatureIntroductionItem defaultWidgetsIconsRestoringRecordKeyForIcon:](self->_widgetIntroductionItem, "defaultWidgetsIconsRestoringRecordKeyForIcon:", v35);
                v36 = (void *)objc_claimAutoreleasedReturnValue();
                -[SBHWidgetIntroductionFeatureIntroductionItem defaultWidgetsIconsRestoringRecord](self->_widgetIntroductionItem, "defaultWidgetsIconsRestoringRecord");
                v37 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v37, "objectForKey:", v36);
                v38 = (void *)objc_claimAutoreleasedReturnValue();

                -[SBHWidgetIntroductionFeatureIntroductionItem defaultWidgetsIconsRestoringRecord](self->_widgetIntroductionItem, "defaultWidgetsIconsRestoringRecord");
                v39 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v39, "allKeys");
                v40 = (void *)objc_claimAutoreleasedReturnValue();
                v41 = objc_msgSend(v40, "containsObject:", v38);

                if (v41)
                {
                  v42 = v35;
                  do
                  {
                    v43 = v38;

                    -[SBHWidgetIntroductionFeatureIntroductionItem defaultWidgetsIconsRestoringRecordKeyForIcon:](self->_widgetIntroductionItem, "defaultWidgetsIconsRestoringRecordKeyForIcon:", v43);
                    v44 = (void *)objc_claimAutoreleasedReturnValue();
                    -[SBHWidgetIntroductionFeatureIntroductionItem defaultWidgetsIconsRestoringRecord](self->_widgetIntroductionItem, "defaultWidgetsIconsRestoringRecord");
                    v45 = (void *)objc_claimAutoreleasedReturnValue();
                    objc_msgSend(v45, "objectForKey:", v44);
                    v38 = (void *)objc_claimAutoreleasedReturnValue();

                    -[SBHWidgetIntroductionFeatureIntroductionItem defaultWidgetsIconsRestoringRecord](self->_widgetIntroductionItem, "defaultWidgetsIconsRestoringRecord");
                    v46 = (void *)objc_claimAutoreleasedReturnValue();
                    objc_msgSend(v46, "allKeys");
                    v47 = (void *)objc_claimAutoreleasedReturnValue();
                    v48 = objc_msgSend(v47, "containsObject:", v38);

                    v42 = v43;
                  }
                  while ((v48 & 1) != 0);
                }
                else
                {
                  v43 = v35;
                }
                objc_msgSend(MEMORY[0x1E0C99E38], "null");
                v49 = (void *)objc_claimAutoreleasedReturnValue();
                v50 = objc_msgSend(v38, "isEqual:", v49);

                if (v50)
                  break;
                if (v38)
                {
                  -[SBHIconManager rootFolder](self, "rootFolder");
                  v54 = (id)objc_claimAutoreleasedReturnValue();
                  v55 = (id)objc_msgSend(v54, "insertIcon:afterIcon:options:listGridCellInfoOptions:", v35, v38, 0, 0);
                  goto LABEL_36;
                }
LABEL_37:
                -[SBHWidgetIntroductionFeatureIntroductionItem defaultWidgetsIconsRestoringRecord](self->_widgetIntroductionItem, "defaultWidgetsIconsRestoringRecord");
                v56 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v56, "removeObjectForKey:", v35);

                -[SBHWidgetIntroductionFeatureIntroductionItem defaultWidgetsBumpedIconUsageRanking](self->_widgetIntroductionItem, "defaultWidgetsBumpedIconUsageRanking");
                v57 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v57, "removeObjectAtIndex:", 0);

                -[SBHWidgetIntroductionFeatureIntroductionItem defaultWidgetsIconsRestoringRecordOriginalIndex](self->_widgetIntroductionItem, "defaultWidgetsIconsRestoringRecordOriginalIndex");
                v58 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v58, "removeObjectAtIndex:", 0);

                if (++v32 == v89)
                  goto LABEL_38;
              }
              objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathWithIconIndex:listIndex:", 0, 0);
              v51 = (void *)objc_claimAutoreleasedReturnValue();
              -[SBHIconManager rootFolder](self, "rootFolder");
              v52 = (void *)objc_claimAutoreleasedReturnValue();
              v94 = v51;
              v53 = (id)objc_msgSend(v52, "insertIcon:atIndexPath:options:", v35, &v94, 0);
              v54 = v94;

LABEL_36:
              goto LABEL_37;
            }
LABEL_38:
            -[SBHIconManager rootFolder](self, "rootFolder");
            v59 = (void *)objc_claimAutoreleasedReturnValue();
            -[SBHIconManager rootFolder](self, "rootFolder");
            v60 = (void *)objc_claimAutoreleasedReturnValue();
            v61 = objc_msgSend(v59, "nextVisibleListIndexAfterIndex:", objc_msgSend(v60, "firstVisibleListIndex"));

            objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathWithIconIndex:listIndex:", v21, v61);
            v62 = (void *)objc_claimAutoreleasedReturnValue();
            -[SBHIconManager rootFolder](self, "rootFolder");
            v63 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v63, "_swapRestoreIconCount:toLocation:", v89, v62);

            -[SBHIconManager removeWidgetDiscoverabilityContainerViewsAndPopoverWhenNeeded:](self, "removeWidgetDiscoverabilityContainerViewsAndPopoverWhenNeeded:", 0);
            v9 = v83;
            v7 = v84;
            v10 = v81;
            v64 = v85;
            v65 = (void *)v86;
LABEL_51:

            v11 = v87;
            goto LABEL_52;
          }
          -[SBHWidgetIntroductionFeatureIntroductionItem defaultWidgetsBumpedIconUsageRanking](self->_widgetIntroductionItem, "defaultWidgetsBumpedIconUsageRanking");
          v66 = (void *)objc_claimAutoreleasedReturnValue();
          v67 = objc_msgSend(v66, "containsObject:", v12);

          if (v67)
          {
            -[SBHWidgetIntroductionFeatureIntroductionItem defaultWidgetsIconsRestoringRecord](self->_widgetIntroductionItem, "defaultWidgetsIconsRestoringRecord");
            v68 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v68, "allValues");
            v69 = (void *)objc_claimAutoreleasedReturnValue();
            v70 = objc_msgSend(v69, "containsObject:", v12);

            if (v70)
            {
              v92 = 0u;
              v93 = 0u;
              v90 = 0u;
              v91 = 0u;
              -[SBHWidgetIntroductionFeatureIntroductionItem defaultWidgetsIconsRestoringRecord](self->_widgetIntroductionItem, "defaultWidgetsIconsRestoringRecord");
              v71 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v71, "allKeys");
              v72 = (void *)objc_claimAutoreleasedReturnValue();

              obj = v72;
              v73 = objc_msgSend(v72, "countByEnumeratingWithState:objects:count:", &v90, v103, 16);
              if (v73)
              {
                v74 = v73;
                v87 = v11;
                v75 = *(_QWORD *)v91;
                while (2)
                {
                  for (j = 0; j != v74; ++j)
                  {
                    if (*(_QWORD *)v91 != v75)
                      objc_enumerationMutation(obj);
                    v77 = *(_QWORD *)(*((_QWORD *)&v90 + 1) + 8 * j);
                    -[SBHWidgetIntroductionFeatureIntroductionItem defaultWidgetsIconsRestoringRecord](self->_widgetIntroductionItem, "defaultWidgetsIconsRestoringRecord");
                    v78 = (void *)objc_claimAutoreleasedReturnValue();
                    objc_msgSend(v78, "objectForKey:", v77);
                    v65 = (void *)objc_claimAutoreleasedReturnValue();

                    if (objc_msgSend(v65, "isEqual:", v12))
                    {
                      -[SBHWidgetIntroductionFeatureIntroductionItem defaultWidgetsIconsRestoringRecord](self->_widgetIntroductionItem, "defaultWidgetsIconsRestoringRecord");
                      v79 = (void *)objc_claimAutoreleasedReturnValue();
                      objc_msgSend(v79, "removeObjectForKey:", v77);

                      -[SBHWidgetIntroductionFeatureIntroductionItem defaultWidgetsBumpedIconUsageRanking](self->_widgetIntroductionItem, "defaultWidgetsBumpedIconUsageRanking");
                      v64 = (void *)objc_claimAutoreleasedReturnValue();
                      objc_msgSend(v64, "removeObject:", v77);
                      v7 = v84;
                      goto LABEL_51;
                    }

                  }
                  v74 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v90, v103, 16);
                  if (v74)
                    continue;
                  break;
                }
                v11 = v87;
                v7 = v84;
              }
LABEL_52:

            }
          }
          ++v11;
        }
        while (v11 != v9);
        v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v99, v105, 16);
      }
      while (v9);
    }

    -[SBHIconManager endStopUpdatingDefaultWidgetsBumpedIconRecord](self, "endStopUpdatingDefaultWidgetsBumpedIconRecord");
    v6 = v80;
  }

}

- (void)folder:(id)a3 didReplaceIcon:(id)a4 withIcon:(id)a5
{
  id v6;
  void *v7;
  void *v8;
  int v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[128];
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v6 = a4;
  -[SBHIconManager noteRootFolderDidMutate](self, "noteRootFolderDidMutate");
  if (!-[SBHWidgetIntroductionFeatureIntroductionItem stopUpdatingDefaultWidgetsBumpedIconRecord](self->_widgetIntroductionItem, "stopUpdatingDefaultWidgetsBumpedIconRecord"))
  {
    if (objc_msgSend(v6, "isWidgetIcon")
      && -[SBHIconManager widgetIconIsOnboardingWidget:](self, "widgetIconIsOnboardingWidget:", v6))
    {
      -[SBHIconManager removeWidgetDiscoverabilityContainerViewsAndPopoverWhenNeeded:](self, "removeWidgetDiscoverabilityContainerViewsAndPopoverWhenNeeded:", 0);
    }
    -[SBHWidgetIntroductionFeatureIntroductionItem defaultWidgetsIconsRestoringRecord](self->_widgetIntroductionItem, "defaultWidgetsIconsRestoringRecord");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "allValues");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "containsObject:", v6);

    if (v9)
    {
      v22 = 0u;
      v23 = 0u;
      v20 = 0u;
      v21 = 0u;
      -[SBHWidgetIntroductionFeatureIntroductionItem defaultWidgetsIconsRestoringRecord](self->_widgetIntroductionItem, "defaultWidgetsIconsRestoringRecord", 0);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "allKeys");
      v11 = (void *)objc_claimAutoreleasedReturnValue();

      v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
      if (v12)
      {
        v13 = v12;
        v14 = *(_QWORD *)v21;
        while (2)
        {
          for (i = 0; i != v13; ++i)
          {
            if (*(_QWORD *)v21 != v14)
              objc_enumerationMutation(v11);
            v16 = *(_QWORD *)(*((_QWORD *)&v20 + 1) + 8 * i);
            -[SBHWidgetIntroductionFeatureIntroductionItem defaultWidgetsIconsRestoringRecord](self->_widgetIntroductionItem, "defaultWidgetsIconsRestoringRecord");
            v17 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v17, "objectForKey:", v16);
            v18 = (void *)objc_claimAutoreleasedReturnValue();

            if (objc_msgSend(v18, "isEqual:", v6))
            {
              -[SBHWidgetIntroductionFeatureIntroductionItem defaultWidgetsIconsRestoringRecord](self->_widgetIntroductionItem, "defaultWidgetsIconsRestoringRecord");
              v19 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v19, "setObject:forKey:", v6, v16);

              goto LABEL_16;
            }

          }
          v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
          if (v13)
            continue;
          break;
        }
      }
LABEL_16:

    }
  }

}

- (void)folder:(id)a3 listHiddenDidChange:(id)a4
{
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;

  v8 = a4;
  -[SBHIconManager noteRootFolderDidMutate](self, "noteRootFolderDidMutate");
  -[SBHIconManager rootFolder](self, "rootFolder");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "firstVisibleListIndex");
  if (v6 != 0x7FFFFFFFFFFFFFFFLL)
  {
    objc_msgSend(v5, "listAtIndex:", v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v7, "isEqual:", v8))
      -[SBHWidgetIntroductionFeatureIntroductionItem setStopUpdatingDefaultWidgetsBumpedIconRecord:](self->_widgetIntroductionItem, "setStopUpdatingDefaultWidgetsBumpedIconRecord:", objc_msgSend(v8, "isHidden"));

  }
}

- (id)addWidgetSheetViewControllerForAddWidgetSheetConfigurationManager:(id)a3
{
  void *v4;
  void *v5;

  -[SBHIconManager delegate](self, "delegate", a3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v4, "addWidgetSheetViewControllerForIconManager:", self);
  else
    -[SBRootFolderController addSheetViewController](self->_rootFolderController, "addSheetViewController");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

- (id)addWidgetSheetConfigurationManager:(id)a3 vendorNameForAppWithBundleIdentifier:(id)a4
{
  void *v4;
  __CFString *v5;

  -[SBHIconManager applicationWithBundleIdentifier:](self, "applicationWithBundleIdentifier:", a4);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v4, "vendorName");
    v5 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v5 = 0;
  }
  if (!-[__CFString length](v5, "length")
    && (objc_opt_respondsToSelector() & 1) != 0
    && objc_msgSend(v4, "isAppleApplication"))
  {

    v5 = CFSTR("Apple");
  }

  return v5;
}

- (id)rootFolderForAddWidgetSheetConfigurationManager:(id)a3
{
  return self->_rootFolder;
}

- (id)homeScreenDefaultsForAddWidgetSheetConfigurationManager:(id)a3
{
  return self->_homeScreenDefaults;
}

- (id)addWidgetSheetConfigurationManager:(id)a3 containerBundleIdentiferForDescriptor:(id)a4
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;

  v5 = a4;
  objc_msgSend(v5, "extensionIdentity");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "containerBundleIdentifier");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  -[SBHIconManager delegate](self, "delegate");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v8, "iconManager:containerBundleIdentifierForDescriptor:", self, v5);
    v9 = objc_claimAutoreleasedReturnValue();

    v7 = (void *)v9;
  }

  return v7;
}

- (id)beginHidingIconsFromLayout:(id)a3 reason:(id)a4 options:(unint64_t)a5
{
  id v8;
  id v9;
  SBHIconLayoutHidingCompoundAssertion *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[128];
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = -[SBHIconLayoutHidingCompoundAssertion initWithInvalidationHandler:icons:reason:options:]([SBHIconLayoutHidingCompoundAssertion alloc], "initWithInvalidationHandler:icons:reason:options:", 0, v8, v9, a5);
  -[SBHIconManager rootFolderController](self, "rootFolderController");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconLayoutHidingCompoundAssertion addAssertionFromChild:](v10, "addAssertionFromChild:", v11);

  -[SBHIconManager folderIconImageCache](self, "folderIconImageCache");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconLayoutHidingCompoundAssertion addAssertionFromChild:](v10, "addAssertionFromChild:", v12);

  -[SBHIconManager floatingDockListView](self, "floatingDockListView");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  if (v13)
    -[SBHIconLayoutHidingCompoundAssertion addAssertionFromChild:](v10, "addAssertionFromChild:", v13);
  v23 = 0u;
  v24 = 0u;
  v21 = 0u;
  v22 = 0u;
  -[SBHIconManager todayViewControllers](self, "todayViewControllers", 0);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
  if (v15)
  {
    v16 = v15;
    v17 = *(_QWORD *)v22;
    do
    {
      v18 = 0;
      do
      {
        if (*(_QWORD *)v22 != v17)
          objc_enumerationMutation(v14);
        objc_msgSend(*(id *)(*((_QWORD *)&v21 + 1) + 8 * v18), "listView");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        -[SBHIconLayoutHidingCompoundAssertion addAssertionFromChild:](v10, "addAssertionFromChild:", v19);

        ++v18;
      }
      while (v16 != v18);
      v16 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
    }
    while (v16);
  }

  return v10;
}

- (void)setIconStylePickerVisible:(BOOL)a3
{
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;

  if (self->_iconStylePickerVisible != a3)
  {
    self->_iconStylePickerVisible = a3;
    -[SBHIconManager currentStylePickerViewController](self, "currentStylePickerViewController");
    v13 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = v5;
    if (a3)
    {
      objc_msgSend(v5, "postNotificationName:object:", CFSTR("SBHIconManagerWillPresentStyleEditingSheetNotification"), 0);

    }
    else
    {
      objc_msgSend(v5, "postNotificationName:object:", CFSTR("SBHIconManagerDidDismissStyleEditingSheetNotification"), 0);

      v7 = v13;
      if (!v13)
      {
LABEL_7:

        return;
      }
      objc_msgSend(v13, "navigationController");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "sheetPresentationController");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "sourceView");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "removeFromSuperview");

      objc_msgSend(v13, "navigationController");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "presentingViewController");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "dismissViewControllerAnimated:completion:", 1, 0);

      -[SBHIconManager setCurrentStylePickerViewController:](self, "setCurrentStylePickerViewController:", 0);
    }
    v7 = v13;
    goto LABEL_7;
  }
}

- (void)_dismissStylePickerViewControllerImmediately
{
  void *v3;
  void *v4;
  id v5;

  -[SBHIconManager currentStylePickerViewController](self, "currentStylePickerViewController");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "navigationController");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "presentingViewController");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "dismissViewControllerAnimated:completion:", 1, 0);

  -[SBHIconManager setCurrentStylePickerViewController:](self, "setCurrentStylePickerViewController:", 0);
  -[SBHIconManager setIconStylePickerVisible:](self, "setIconStylePickerVisible:", 0);

}

- (void)stylePickerViewController:(id)a3 didUpdateHomeScreenConfiguration:(id)a4
{
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  _BOOL4 v19;
  _BOOL4 v20;
  char v21;
  id v22;
  _QWORD v23[5];
  id v24;

  v6 = a4;
  v7 = a3;
  objc_getAssociatedObject(v7, &SBHLastHomeScreenConfigurationKey);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager rootViewController](self, "rootViewController");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0DC3E88], "sbh_highestLevelTraitCollectionForViewController:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  +[SBHIconImageStyleConfiguration styleConfigurationWithHomeScreenConfiguration:](SBHIconImageStyleConfiguration, "styleConfigurationWithHomeScreenConfiguration:", v6);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager stylePreviewManager](self, "stylePreviewManager");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "setImageStyleConfiguration:", v11);
  objc_msgSend(v11, "iconImageAppearanceWithUserInterfaceStyle:", objc_msgSend(v10, "userInterfaceStyle"));
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = (void *)MEMORY[0x1E0C99E88];
  v23[0] = MEMORY[0x1E0C809B0];
  v23[1] = 3221225472;
  v23[2] = __77__SBHIconManager_stylePickerViewController_didUpdateHomeScreenConfiguration___block_invoke;
  v23[3] = &unk_1E8D8D2C0;
  v23[4] = self;
  v24 = v13;
  v22 = v13;
  objc_msgSend(v14, "scheduledTimerWithTimeInterval:repeats:block:", 0, v23, 0.25);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager visibleIconTintLimitedDelayedUpdateTimer](self, "visibleIconTintLimitedDelayedUpdateTimer");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "invalidate");

  -[SBHIconManager setVisibleIconTintLimitedDelayedUpdateTimer:](self, "setVisibleIconTintLimitedDelayedUpdateTimer:", v15);
  -[SBHIconManager visibleIconImageRecachingRequestCancellation](self, "visibleIconImageRecachingRequestCancellation");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "cancel");

  -[SBHIconManager setVisibleIconImageRecachingRequestCancellation:](self, "setVisibleIconImageRecachingRequestCancellation:", 0);
  -[SBHIconManager setDidChangeIconStyleWithColorPicker:](self, "setDidChangeIconStyleWithColorPicker:", 1);
  objc_setAssociatedObject(v7, &SBHLastHomeScreenConfigurationKey, v6, (void *)1);
  -[SBHIconManager _applyBarButtonItemsToStylePicker:forHomeScreenConfiguration:](self, "_applyBarButtonItemsToStylePicker:forHomeScreenConfiguration:", v7, v6);

  v18 = objc_msgSend(v6, "styleType");
  if (v18 != objc_msgSend(v8, "styleType"))
  {
    v19 = -[SBHIconManager currentHomeScreenWallpaperDimState](self, "currentHomeScreenWallpaperDimState");
    v20 = (v18 & 0xFFFFFFFFFFFFFFFDLL) == 0 && v19;
    v21 = (v18 & 0xFFFFFFFFFFFFFFFDLL) != 1 || v19;
    if (v20 || (v21 & 1) == 0)
      -[SBHIconManager toggleHomeScreenWallpaperDim:](self, "toggleHomeScreenWallpaperDim:", 0);
  }

}

uint64_t __77__SBHIconManager_stylePickerViewController_didUpdateHomeScreenConfiguration___block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "recacheVisibleIconImageDataForRootIconsInBackgroundWithImageAppearance:cacheOptions:", *(_QWORD *)(a1 + 40), 0);
}

- (void)stylePickerViewControllerDidFinish:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  _QWORD v16[4];
  id v17;
  id v18;
  SBHIconManager *v19;

  v4 = a3;
  -[SBHIconManager setCurrentStylePickerViewController:](self, "setCurrentStylePickerViewController:", 0);
  -[SBHIconManager setIconStylePickerVisible:](self, "setIconStylePickerVisible:", 0);
  -[SBHIconManager visibleIconTintLimitedDelayedUpdateTimer](self, "visibleIconTintLimitedDelayedUpdateTimer");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "invalidate");

  -[SBHIconManager setVisibleIconTintLimitedDelayedUpdateTimer:](self, "setVisibleIconTintLimitedDelayedUpdateTimer:", 0);
  objc_getAssociatedObject(v4, &SBHLastHomeScreenConfigurationKey);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (v6)
    -[SBHIconManager _updateStyleConfiguration:](self, "_updateStyleConfiguration:", v6);
  +[SBHIconImageStyleConfiguration styleConfigurationWithHomeScreenConfiguration:](SBHIconImageStyleConfiguration, "styleConfigurationWithHomeScreenConfiguration:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager rootViewController](self, "rootViewController");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0DC3E88], "sbh_highestLevelTraitCollectionForViewController:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "sbh_iconImageAppearanceWithHomeScreenStyleConfiguration:", v6);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager iconImageCache](self, "iconImageCache");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager visibleIconsToRecacheForImageAppearanceChange](self, "visibleIconsToRecacheForImageAppearanceChange");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 3221225472;
  v16[2] = __53__SBHIconManager_stylePickerViewControllerDidFinish___block_invoke;
  v16[3] = &unk_1E8D8D2E8;
  v17 = v8;
  v18 = v10;
  v19 = self;
  v13 = v10;
  v14 = v8;
  v15 = (id)objc_msgSend(v11, "cacheImagesForIcons:imageAppearance:priority:reason:options:completionHandler:", v12, v13, 4, CFSTR("stylePickerDidFinish"), 0, v16);
  if (-[SBHIconManager didChangeIconStyleWithColorPicker](self, "didChangeIconStyleWithColorPicker"))
    -[SBHIconManager recacheIconImageDataForRootIconsInBackgroundWithIconImageStyleConfiguration:cacheOptions:](self, "recacheIconImageDataForRootIconsInBackgroundWithIconImageStyleConfiguration:cacheOptions:", v7, 1);

}

void __53__SBHIconManager_stylePickerViewControllerDidFinish___block_invoke(uint64_t a1)
{
  void *v2;
  int v3;
  void *v4;
  void *v5;
  id v6;

  objc_msgSend(*(id *)(a1 + 32), "traitCollection");
  v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "sbh_iconImageAppearance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isEqual:", *(_QWORD *)(a1 + 40));
  v4 = *(void **)(a1 + 48);
  if (v3)
  {
    objc_msgSend(v4, "stylePreviewManager");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "invalidate");

    objc_msgSend(*(id *)(a1 + 48), "setStylePreviewManager:", 0);
  }
  else
  {
    objc_msgSend(v4, "setShouldClearStylePreviewManagerAfterRootTraitChange:", 1);
  }

}

- (void)stylePickerViewController:(id)a3 didUpdateDesiredDetent:(double)a4
{
  void *v4;
  void *v5;
  id v6;
  _QWORD v7[4];
  id v8;

  objc_msgSend(a3, "navigationController", a4);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "sheetPresentationController");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = __67__SBHIconManager_stylePickerViewController_didUpdateDesiredDetent___block_invoke;
  v7[3] = &unk_1E8D84C50;
  v8 = v5;
  v6 = v5;
  objc_msgSend(v6, "animateChanges:", v7);

}

uint64_t __67__SBHIconManager_stylePickerViewController_didUpdateDesiredDetent___block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "invalidateDetents");
}

- (void)_presentStylePickerViewController
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __51__SBHIconManager__presentStylePickerViewController__block_invoke;
  v2[3] = &unk_1E8D8BE88;
  v2[4] = self;
  -[SBHIconManager _fetchWallpaperProminentColor:](self, "_fetchWallpaperProminentColor:", v2);
}

void __51__SBHIconManager__presentStylePickerViewController__block_invoke(uint64_t a1, void *a2)
{
  id v2;
  id v3;

  v3 = a2;
  v2 = v3;
  BSDispatchMain();

}

void __51__SBHIconManager__presentStylePickerViewController__block_invoke_2(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  objc_msgSend(*(id *)(a1 + 32), "persistedHomeScreenColorConfiguration");
  v8 = (id)objc_claimAutoreleasedReturnValue();
  v2 = (void *)objc_msgSend(v8, "mutableCopy");
  v3 = v2;
  if (v2)
  {
    v4 = v2;
  }
  else
  {
    getPUIMutableStylePickerConfigurationClass();
    v4 = (id)objc_opt_new();
  }
  v5 = v4;

  if (objc_msgSend(v8, "styleType") != 3)
    objc_msgSend(v5, "setAccentColor:", *(_QWORD *)(a1 + 40));
  objc_msgSend(v5, "setSuggestedAccentColor:", *(_QWORD *)(a1 + 40));
  objc_msgSend(getPUIMutableStylePickerConfigurationClass(), "defaultStylePickerConfigurationForRole:", 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setHomeScreenConfiguration:", v5);
  v7 = (void *)objc_msgSend(objc_alloc((Class)getPUIStylePickerComponentsClass()), "initWithComponent:", *MEMORY[0x1E0D7FDA0]);
  objc_msgSend(v6, "setComponents:", v7);

  objc_msgSend(*(id *)(a1 + 32), "_presentStylePickerViewControllerForStylePickerConfiguration:", v6);
}

- (void)_applyBarButtonItemsToStylePicker:(id)a3 forHomeScreenConfiguration:(id)a4
{
  id v6;
  uint64_t v7;
  SBHStyleTintButton *v8;
  SBHStyleTintButton *eyeDropperControl;
  SBHStyleTintButton *v10;
  void *v11;
  double v12;
  double v13;
  SBHWallpaperDimControl *v14;
  SBHWallpaperDimControl *wallpaperDimButton;
  UIBarButtonItem *dimBarButtonItem;
  void *v17;
  UIBarButtonItem *v18;
  UIBarButtonItem *v19;
  void *v20;
  UIBarButtonItem *eyeDropperBarButtonItem;
  UIBarButtonItem *v22;
  UIBarButtonItem *v23;
  void *v24;
  UIBarButtonItem *v25;
  _QWORD v26[2];

  v26[1] = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = objc_msgSend(a4, "styleType");
  if (!self->_eyeDropperControl)
  {
    v8 = (SBHStyleTintButton *)objc_opt_new();
    eyeDropperControl = self->_eyeDropperControl;
    self->_eyeDropperControl = v8;

    v10 = self->_eyeDropperControl;
    objc_msgSend(MEMORY[0x1E0DC3870], "_systemImageNamed:", CFSTR("eyedropper"));
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHStyleTintButton configureForImage:animated:](v10, "configureForImage:animated:", v11, 0);

    -[SBHStyleTintButton addTarget:action:forControlEvents:](self->_eyeDropperControl, "addTarget:action:forControlEvents:", self, sel__engageWallpaperTintColorDropper_, 64);
    -[SBHStyleTintButton sizeToFit](self->_eyeDropperControl, "sizeToFit");
  }
  if (!self->_wallpaperDimButton)
  {
    -[SBHStyleTintButton bounds](self->_eyeDropperControl, "bounds");
    v14 = -[SBHWallpaperDimControl initWithFrame:]([SBHWallpaperDimControl alloc], "initWithFrame:", 0.0, 0.0, v12, v13);
    wallpaperDimButton = self->_wallpaperDimButton;
    self->_wallpaperDimButton = v14;

    -[SBHWallpaperDimControl addTarget:action:forControlEvents:](self->_wallpaperDimButton, "addTarget:action:forControlEvents:", self, sel_toggleHomeScreenWallpaperDim_, 64);
  }
  dimBarButtonItem = self->_dimBarButtonItem;
  if (dimBarButtonItem)
  {
    -[UIBarButtonItem customView](dimBarButtonItem, "customView");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "setDimmed:animated:", -[SBHIconManager currentHomeScreenWallpaperDimState](self, "currentHomeScreenWallpaperDimState"), 1);

  }
  else
  {
    v18 = (UIBarButtonItem *)objc_msgSend(objc_alloc(MEMORY[0x1E0DC34F0]), "initWithCustomView:", self->_wallpaperDimButton);
    v19 = self->_dimBarButtonItem;
    self->_dimBarButtonItem = v18;

    -[SBHWallpaperDimControl setDimmed:animated:](self->_wallpaperDimButton, "setDimmed:animated:", -[SBHIconManager currentHomeScreenWallpaperDimState](self, "currentHomeScreenWallpaperDimState"), 0);
  }
  v26[0] = self->_dimBarButtonItem;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v26, 1);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setLeadingBarButtonItems:", v20);

  if (v7 == 3)
  {
    eyeDropperBarButtonItem = self->_eyeDropperBarButtonItem;
    if (!eyeDropperBarButtonItem)
    {
      v22 = (UIBarButtonItem *)objc_msgSend(objc_alloc(MEMORY[0x1E0DC34F0]), "initWithCustomView:", self->_eyeDropperControl);
      v23 = self->_eyeDropperBarButtonItem;
      self->_eyeDropperBarButtonItem = v22;

      eyeDropperBarButtonItem = self->_eyeDropperBarButtonItem;
    }
    v25 = eyeDropperBarButtonItem;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v25, 1);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setTrailingBarButtonItems:", v24);

  }
  else
  {
    objc_msgSend(v6, "setTrailingBarButtonItems:", MEMORY[0x1E0C9AA60]);
  }

}

- (void)_presentStylePickerViewControllerForStylePickerConfiguration:(id)a3
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  SBHIconStyleLabelHidingView *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  void *v24;
  uint64_t v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double MaxY;
  void *v33;
  void *v34;
  double v35;
  double v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  SBHIconStylePreviewManager *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  id v59;
  uint64_t v60;
  void *v61;
  SBHIconStylePreviewManager *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  SBHIconStyleLabelHidingView *obj;
  void *v72;
  SBHNavigationController *v73;
  id object;
  id v75;
  _QWORD v76[4];
  id v77;
  id location;
  void *v79;
  void *v80;
  _QWORD v81[3];
  CGRect v82;

  v81[1] = *MEMORY[0x1E0C80C00];
  v75 = a3;
  -[SBHIconManager currentStylePickerViewController](self, "currentStylePickerViewController");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v4)
  {
    object = (id)objc_msgSend(objc_alloc((Class)getPUIStylePickerViewControllerClass()), "initWithStylePickerConfiguration:", v75);
    SBHBundle();
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "localizedStringForKey:value:table:", CFSTR("STYLE_PICKER_TITLE"), &stru_1E8D8E958, CFSTR("SpringBoardHome"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(object, "setTitle:", v6);

    objc_msgSend(object, "setDelegate:", self);
    -[SBHIconManager setCurrentStylePickerViewController:](self, "setCurrentStylePickerViewController:", object);
    objc_msgSend(v75, "homeScreenConfiguration");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_setAssociatedObject(object, &SBHLastHomeScreenConfigurationKey, v7, (void *)1);

    v73 = -[SBHNavigationController initWithRootViewController:]([SBHNavigationController alloc], "initWithRootViewController:", object);
    objc_msgSend(MEMORY[0x1E0DC3658], "clearColor");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHNavigationController setModalPresentedBackgroundColor:](v73, "setModalPresentedBackgroundColor:", v8);

    -[SBHNavigationController setModalPresentationStyle:](v73, "setModalPresentationStyle:", 2);
    objc_initWeak(&location, self);
    v9 = [SBHIconStyleLabelHidingView alloc];
    v10 = objc_loadWeakRetained(&location);
    obj = -[SBHIconStyleLabelHidingView initWithTarget:action:](v9, "initWithTarget:action:", v10, sel_iconSizeButtonTriggered);

    -[SBHIconStyleLabelHidingView setShouldUseLargeIcons:](obj, "setShouldUseLargeIcons:", -[SBHIconManager _shouldUseHomeScreenLargeIconSize](self, "_shouldUseHomeScreenLargeIconSize"));
    objc_storeStrong((id *)&self->_labelHidingView, obj);
    v68 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0DC34F0]), "initWithCustomView:", obj);
    v81[0] = v68;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v81, 1);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(object, "setCenterBarButtonItems:", v11);

    objc_msgSend(v75, "homeScreenConfiguration");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager _applyBarButtonItemsToStylePicker:forHomeScreenConfiguration:](self, "_applyBarButtonItemsToStylePicker:forHomeScreenConfiguration:", object, v12);

    -[SBHIconManager rootFolderController](self, "rootFolderController");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "contentView");
    v69 = (void *)objc_claimAutoreleasedReturnValue();

    -[SBHNavigationController sheetPresentationController](v73, "sheetPresentationController");
    v72 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0DC3708], "currentDevice");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = objc_msgSend(v14, "userInterfaceIdiom");

    if ((v15 & 0xFFFFFFFFFFFFFFFBLL) == 1)
    {
      objc_msgSend(v69, "bounds");
      v17 = v16;
      v19 = v18;
      v21 = v20;
      v23 = v22;
      objc_msgSend(v69, "_screen");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v24, "scale");
      v60 = v25;
      UIRectCenteredXInRectScale();
      v27 = v26;
      v29 = v28;
      v31 = v30;

      v82.origin.x = v17;
      v82.origin.y = v19;
      v82.size.width = v21;
      v82.size.height = v23;
      MaxY = CGRectGetMaxY(v82);
      objc_msgSend(v69, "viewWithTag:", 748373893, v60);
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      if (!v33)
      {
        v33 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0DC3F10]), "initWithFrame:", v27, MaxY + -20.0, v29, v31);
        objc_msgSend(v33, "setAutoresizingMask:", 18);
        objc_msgSend(v33, "setTag:", 748373893);
        objc_msgSend(v33, "setUserInteractionEnabled:", 0);
        objc_msgSend(MEMORY[0x1E0DC3658], "clearColor");
        v34 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v33, "setBackgroundColor:", v34);

        objc_msgSend(v69, "addSubview:", v33);
      }
      objc_msgSend(v72, "setSourceView:", v33);
      objc_msgSend(object, "desiredDetent");
      v36 = v35;
      -[SBHNavigationController setPreferredContentSize:](v73, "setPreferredContentSize:", 500.0, v35);
      objc_msgSend(object, "setPreferredContentSize:", 500.0, v36);
      objc_msgSend(v72, "traitOverrides");
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v37, "setVerticalSizeClass:", 1);

      objc_msgSend(v72, "traitOverrides");
      v38 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v38, "setHorizontalSizeClass:", 1);

      -[SBHNavigationController traitOverrides](v73, "traitOverrides");
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v39, "setVerticalSizeClass:", 1);

      -[SBHNavigationController traitOverrides](v73, "traitOverrides");
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v40, "setHorizontalSizeClass:", 1);

      objc_msgSend(v72, "setPreferredCornerRadius:", SBHAddWidgetSheetPreferredSheetCornerRadiusForStyle(1));
    }
    else
    {
      objc_msgSend(v72, "setPreferredCornerRadius:", SBHAddWidgetSheetPreferredSheetCornerRadiusForStyle(0));
    }
    objc_msgSend(v72, "_setShouldDismissWhenTappedOutside:", 1);
    v41 = (void *)MEMORY[0x1E0DC3C78];
    v76[0] = MEMORY[0x1E0C809B0];
    v76[1] = 3221225472;
    v76[2] = __79__SBHIconManager__presentStylePickerViewControllerForStylePickerConfiguration___block_invoke;
    v76[3] = &unk_1E8D8D310;
    objc_copyWeak(&v77, &location);
    objc_msgSend(v41, "customDetentWithIdentifier:resolver:", CFSTR("stylePickerViewControllerDetent"), v76);
    v61 = (void *)objc_claimAutoreleasedReturnValue();
    v80 = v61;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v80, 1);
    v67 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v72, "setDetents:", v67);
    -[SBHIconManager setIconStylePickerVisible:](self, "setIconStylePickerVisible:", 1);
    -[SBHIconManager listViewsToUpdateDuringColorPicking](self, "listViewsToUpdateDuringColorPicking");
    v66 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager additionalIconViewsToUpdateDuringColorPicking](self, "additionalIconViewsToUpdateDuringColorPicking");
    v65 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager iconImageCache](self, "iconImageCache");
    v70 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager folderIconImageCache](self, "folderIconImageCache");
    v64 = (void *)objc_claimAutoreleasedReturnValue();
    v42 = -[SBHIconStylePreviewManager initWithIconListViews:additionalIconViews:iconImageCache:folderIconImageCache:]([SBHIconStylePreviewManager alloc], "initWithIconListViews:additionalIconViews:iconImageCache:folderIconImageCache:", v66, v65, v70, v64);
    -[SBHIconManager setStylePreviewManager:](self, "setStylePreviewManager:", v42);
    v62 = v42;
    -[SBHIconManager rootFolderController](self, "rootFolderController");
    v43 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v43, "rootFolderView");
    v44 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v44, "pageControl");
    v63 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v44, "dockView");
    v45 = (void *)objc_claimAutoreleasedReturnValue();
    v79 = v63;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v79, 1);
    v46 = (void *)objc_claimAutoreleasedReturnValue();
    v47 = v46;
    if (v45)
    {
      objc_msgSend(v46, "arrayByAddingObject:", v45);
      v48 = objc_claimAutoreleasedReturnValue();

      v47 = (void *)v48;
    }
    -[SBHIconStylePreviewManager setAdditionalViewsAffectedByUserInterfaceStyle:](v62, "setAdditionalViewsAffectedByUserInterfaceStyle:", v47);
    objc_msgSend(MEMORY[0x1E0DC3708], "currentDevice");
    v49 = (void *)objc_claimAutoreleasedReturnValue();
    v50 = objc_msgSend(v49, "userInterfaceIdiom");

    if ((v50 & 0xFFFFFFFFFFFFFFFBLL) == 1)
    {
      -[SBHIconManager floatingDockViewController](self, "floatingDockViewController");
      v51 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v51, "parentViewController");
      v52 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v52, "presentViewController:animated:completion:", v73, 1, 0);

    }
    else
    {
      -[SBHIconManager rootFolderController](self, "rootFolderController");
      v51 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v51, "presentViewController:animated:completion:", v73, 1, 0);
    }

    -[SBHIconManager setEditing:](self, "setEditing:", 0);
    -[SBHIconManager visibleIconsToRecacheForImageAppearanceChange](self, "visibleIconsToRecacheForImageAppearanceChange");
    v53 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHIconManager iconsToRecacheForImageAppearanceChange](self, "iconsToRecacheForImageAppearanceChange");
    v54 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v70, "buildCacheRequestWithReason:", CFSTR("presentStylePicker"));
    v55 = (void *)objc_claimAutoreleasedReturnValue();
    +[SBHIconImageAppearance tintableAppearance](SBHIconImageAppearance, "tintableAppearance");
    v56 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v55, "addIcons:imageAppearance:priority:options:", v53, v56, 3, 0);
    objc_msgSend(v55, "addIcons:imageAppearance:priority:options:", v54, v56, 2, 0);
    +[SBHIconImageAppearance lightAppearance](SBHIconImageAppearance, "lightAppearance");
    v57 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v55, "addIcons:imageAppearance:priority:options:", v53, v57, 3, 0);

    +[SBHIconImageAppearance darkAppearance](SBHIconImageAppearance, "darkAppearance");
    v58 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v55, "addIcons:imageAppearance:priority:options:", v53, v58, 3, 0);

    v59 = (id)objc_msgSend(v55, "finalizeRequestWithCompletionHandler:", 0);
    -[SBHIconManager setDidChangeIconStyleWithColorPicker:](self, "setDidChangeIconStyleWithColorPicker:", 0);

    objc_destroyWeak(&v77);
    objc_destroyWeak(&location);

  }
}

double __79__SBHIconManager__presentStylePickerViewControllerForStylePickerConfiguration___block_invoke(uint64_t a1)
{
  _BYTE *WeakRetained;
  _BYTE *v2;
  void *v3;
  double v4;
  double v5;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend(WeakRetained, "currentStylePickerViewController");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "desiredDetent");
    v5 = v4;

    if (v2[392])
      v5 = -v5;
  }
  else
  {
    v5 = 0.0;
  }

  return v5;
}

- (void)_fetchWallpaperProminentColor:(id)a3
{
  void (**v4)(id, uint64_t);
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void (**v10)(id, uint64_t);

  v4 = (void (**)(id, uint64_t))a3;
  if (v4)
  {
    v10 = v4;
    if (os_variant_has_internal_content())
    {
      objc_msgSend(MEMORY[0x1E0C99EA0], "standardUserDefaults");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "stringForKey:", CFSTR("KEYNOTE_OVERRIDE_PROMINENT_COLOR"));
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      if (v6)
      {
        objc_msgSend(MEMORY[0x1E0DC3658], "sbh_colorWithHexString:", v6);
        v7 = objc_claimAutoreleasedReturnValue();
        if (v7)
        {
          v8 = (void *)v7;
          v10[2](v10, v7);

LABEL_10:
          v4 = v10;
          goto LABEL_11;
        }
      }

    }
    -[SBHIconManager delegate](self, "delegate");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_opt_respondsToSelector() & 1) != 0)
    {
      objc_msgSend(v5, "iconManagerPreferredProminentPosterColor:handler:", self, v10);
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0DC3658], "orangeColor");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v10[2](v10, (uint64_t)v9);

    }
    goto LABEL_10;
  }
LABEL_11:

}

- (id)listViewsToUpdateDuringColorPicking
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  _QWORD v14[4];
  id v15;
  _QWORD v16[4];
  id v17;

  v3 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  -[SBHIconManager currentRootIconList](self, "currentRootIconList");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
    objc_msgSend(v3, "addObject:", v4);
  -[SBHIconManager dockListView](self, "dockListView");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
    objc_msgSend(v3, "addObject:", v5);
  -[SBHIconManager floatingDockViewController](self, "floatingDockViewController");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = MEMORY[0x1E0C809B0];
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 3221225472;
  v16[2] = __53__SBHIconManager_listViewsToUpdateDuringColorPicking__block_invoke;
  v16[3] = &unk_1E8D8D338;
  v8 = v3;
  v17 = v8;
  objc_msgSend(v6, "enumerateIconListsUsingBlock:", v16);
  -[SBHIconManager todayViewControllers](self, "todayViewControllers");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v14[0] = v7;
  v14[1] = 3221225472;
  v14[2] = __53__SBHIconManager_listViewsToUpdateDuringColorPicking__block_invoke_2;
  v14[3] = &unk_1E8D8D360;
  v10 = v8;
  v15 = v10;
  objc_msgSend(v9, "enumerateObjectsUsingBlock:", v14);

  v11 = v15;
  v12 = v10;

  return v12;
}

uint64_t __53__SBHIconManager_listViewsToUpdateDuringColorPicking__block_invoke(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "addObject:", a2);
}

void __53__SBHIconManager_listViewsToUpdateDuringColorPicking__block_invoke_2(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  objc_msgSend(a2, "listView");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "addObject:", v3);

}

- (id)additionalIconViewsToUpdateDuringColorPicking
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  void *v11;
  void *v12;
  void *v13;
  _QWORD v15[4];
  id v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v3 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  -[SBHIconManager _effectiveAppPredictionViewControllersForUniqueIdentifier](self, "_effectiveAppPredictionViewControllersForUniqueIdentifier");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "objectEnumerator");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v18;
    v9 = MEMORY[0x1E0C809B0];
    do
    {
      for (i = 0; i != v7; ++i)
      {
        if (*(_QWORD *)v18 != v8)
          objc_enumerationMutation(v5);
        v11 = *(void **)(*((_QWORD *)&v17 + 1) + 8 * i);
        if (objc_msgSend(v11, "bs_isAppearingOrAppeared"))
        {
          v15[0] = v9;
          v15[1] = 3221225472;
          v15[2] = __63__SBHIconManager_additionalIconViewsToUpdateDuringColorPicking__block_invoke;
          v15[3] = &unk_1E8D85CC0;
          v16 = v3;
          objc_msgSend(v11, "enumerateDisplayedIconViewsUsingBlock:", v15);

        }
      }
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
    }
    while (v7);
  }

  -[SBHIconManager floatingDockViewController](self, "floatingDockViewController");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "libraryPodIconViewIfLoaded");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  if (v13)
    objc_msgSend(v3, "addObject:", v13);

  return v3;
}

uint64_t __63__SBHIconManager_additionalIconViewsToUpdateDuringColorPicking__block_invoke(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "addObject:", a2);
}

- (void)enumerateViewsToUpdateDuringColorPickingUsingListViewBlock:(id)a3 iconViewBlock:(id)a4
{
  void (**v6)(id, void *);
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void (**v12)(id, void *);
  id v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  void *v22;
  void *v23;
  void (**v24)(id, void *);
  void *v25;
  void *v26;
  _QWORD v27[4];
  id v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _QWORD v33[4];
  void (**v34)(id, void *);
  id v35;
  _QWORD v36[4];
  void (**v37)(id, void *);
  id v38;
  _QWORD v39[4];
  id v40;
  _QWORD v41[4];
  id v42;
  _BYTE v43[128];
  uint64_t v44;

  v44 = *MEMORY[0x1E0C80C00];
  v6 = (void (**)(id, void *))a3;
  v7 = a4;
  -[SBHIconManager currentRootIconList](self, "currentRootIconList");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = MEMORY[0x1E0C809B0];
  if (v8)
  {
    v6[2](v6, v8);
    if (v7)
    {
      v41[0] = v9;
      v41[1] = 3221225472;
      v41[2] = __91__SBHIconManager_enumerateViewsToUpdateDuringColorPickingUsingListViewBlock_iconViewBlock___block_invoke;
      v41[3] = &unk_1E8D8C970;
      v42 = v7;
      objc_msgSend(v8, "enumerateDisplayedIconViewsUsingBlock:", v41);

    }
  }
  v26 = v8;
  -[SBHIconManager dockListView](self, "dockListView");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if (v10)
  {
    v6[2](v6, v10);
    if (v7)
    {
      v39[0] = v9;
      v39[1] = 3221225472;
      v39[2] = __91__SBHIconManager_enumerateViewsToUpdateDuringColorPickingUsingListViewBlock_iconViewBlock___block_invoke_2;
      v39[3] = &unk_1E8D8C970;
      v40 = v7;
      objc_msgSend(v10, "enumerateDisplayedIconViewsUsingBlock:", v39);

    }
  }
  v25 = v10;
  -[SBHIconManager floatingDockViewController](self, "floatingDockViewController");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v36[0] = v9;
  v36[1] = 3221225472;
  v36[2] = __91__SBHIconManager_enumerateViewsToUpdateDuringColorPickingUsingListViewBlock_iconViewBlock___block_invoke_3;
  v36[3] = &unk_1E8D8D388;
  v12 = v6;
  v37 = v12;
  v13 = v7;
  v38 = v13;
  objc_msgSend(v11, "enumerateIconListsUsingBlock:", v36);
  -[SBHIconManager todayViewControllers](self, "todayViewControllers");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v33[0] = v9;
  v33[1] = 3221225472;
  v33[2] = __91__SBHIconManager_enumerateViewsToUpdateDuringColorPickingUsingListViewBlock_iconViewBlock___block_invoke_5;
  v33[3] = &unk_1E8D8D3B0;
  v24 = v12;
  v34 = v24;
  v15 = v13;
  v35 = v15;
  objc_msgSend(v14, "enumerateObjectsUsingBlock:", v33);

  v31 = 0u;
  v32 = 0u;
  v29 = 0u;
  v30 = 0u;
  -[SBHIconManager _effectiveAppPredictionViewControllersForUniqueIdentifier](self, "_effectiveAppPredictionViewControllersForUniqueIdentifier");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "objectEnumerator");
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v29, v43, 16);
  if (v18)
  {
    v19 = v18;
    v20 = *(_QWORD *)v30;
    do
    {
      for (i = 0; i != v19; ++i)
      {
        if (*(_QWORD *)v30 != v20)
          objc_enumerationMutation(v17);
        v22 = *(void **)(*((_QWORD *)&v29 + 1) + 8 * i);
        if (objc_msgSend(v22, "bs_isAppearingOrAppeared", v24))
        {
          v27[0] = v9;
          v27[1] = 3221225472;
          v27[2] = __91__SBHIconManager_enumerateViewsToUpdateDuringColorPickingUsingListViewBlock_iconViewBlock___block_invoke_7;
          v27[3] = &unk_1E8D8C970;
          v28 = v15;
          objc_msgSend(v22, "enumerateDisplayedIconViewsUsingBlock:", v27);

        }
      }
      v19 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v29, v43, 16);
    }
    while (v19);
  }

  if (v15)
  {
    objc_msgSend(v11, "libraryPodIconViewIfLoaded");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    if (v23)
      (*((void (**)(id, void *))v15 + 2))(v15, v23);

  }
}

uint64_t __91__SBHIconManager_enumerateViewsToUpdateDuringColorPickingUsingListViewBlock_iconViewBlock___block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t __91__SBHIconManager_enumerateViewsToUpdateDuringColorPickingUsingListViewBlock_iconViewBlock___block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void __91__SBHIconManager_enumerateViewsToUpdateDuringColorPickingUsingListViewBlock_iconViewBlock___block_invoke_3(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  _QWORD v5[4];
  id v6;

  v4 = a2;
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  v3 = *(void **)(a1 + 40);
  if (v3)
  {
    v5[0] = MEMORY[0x1E0C809B0];
    v5[1] = 3221225472;
    v5[2] = __91__SBHIconManager_enumerateViewsToUpdateDuringColorPickingUsingListViewBlock_iconViewBlock___block_invoke_4;
    v5[3] = &unk_1E8D8C970;
    v6 = v3;
    objc_msgSend(v4, "enumerateDisplayedIconViewsUsingBlock:", v5);

  }
}

uint64_t __91__SBHIconManager_enumerateViewsToUpdateDuringColorPickingUsingListViewBlock_iconViewBlock___block_invoke_4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void __91__SBHIconManager_enumerateViewsToUpdateDuringColorPickingUsingListViewBlock_iconViewBlock___block_invoke_5(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  _QWORD v8[4];
  id v9;

  v3 = a2;
  v4 = *(_QWORD *)(a1 + 32);
  v7 = v3;
  objc_msgSend(v3, "listView");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v5);

  if (*(_QWORD *)(a1 + 40))
  {
    objc_msgSend(v7, "listView");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v8[0] = MEMORY[0x1E0C809B0];
    v8[1] = 3221225472;
    v8[2] = __91__SBHIconManager_enumerateViewsToUpdateDuringColorPickingUsingListViewBlock_iconViewBlock___block_invoke_6;
    v8[3] = &unk_1E8D8C970;
    v9 = *(id *)(a1 + 40);
    objc_msgSend(v6, "enumerateDisplayedIconViewsUsingBlock:", v8);

  }
}

uint64_t __91__SBHIconManager_enumerateViewsToUpdateDuringColorPickingUsingListViewBlock_iconViewBlock___block_invoke_6(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t __91__SBHIconManager_enumerateViewsToUpdateDuringColorPickingUsingListViewBlock_iconViewBlock___block_invoke_7(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

- (id)persistedHomeScreenColorConfiguration
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  SBHDefaultIconListLayoutProvider *v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  BOOL v32;
  double v33;
  double v34;
  BOOL v35;
  double v36;
  double v37;
  BOOL v38;
  void *v39;
  uint64_t v40;
  double v42;

  -[SBHIconManager _fetchCurrentStyleConfiguration](self, "_fetchCurrentStyleConfiguration");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v3)
  {
    getPUIMutableStylePickerHomeScreenConfigurationClass();
    v4 = (void *)objc_opt_new();
    -[SBHomeScreenDefaults iconTintColor](self->_homeScreenDefaults, "iconTintColor");
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    if (v5)
    {
      -[SBHomeScreenDefaults iconTintColor](self->_homeScreenDefaults, "iconTintColor");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setAccentColor:", v6);

      objc_msgSend(v4, "setStyleType:", 3);
    }
    v3 = (void *)objc_msgSend(v4, "copy");

  }
  v7 = -[SBHIconManager interfaceOrientation](self, "interfaceOrientation");
  v8 = -[SBHDefaultIconListLayoutProvider initWithLayoutOptions:]([SBHDefaultIconListLayoutProvider alloc], "initWithLayoutOptions:", 0);
  -[SBHDefaultIconListLayoutProvider layoutForIconLocation:](v8, "layoutForIconLocation:", CFSTR("SBIconLocationRoot"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "iconImageInfo");
  v11 = v10;
  v13 = v12;
  objc_msgSend(v9, "iconImageInfo");
  v42 = v14;
  v15 = SBHIconListLayoutListIconSpacing(v9, v7);
  v17 = v16;
  objc_msgSend(v9, "layoutInsetsForOrientation:", v7);
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v25 = v24;
  objc_msgSend(v3, "layoutInsets");
  v32 = v29 == v21 && v26 == v19 && v28 == v25 && v27 == v23;
  if (!v32
    || ((objc_msgSend(v3, "iconSpacing"), v34 == v15) ? (v35 = v33 == v17) : (v35 = 0),
        !v35
     || ((objc_msgSend(v3, "iconSize"), v37 == v11) ? (v38 = v36 == v13) : (v38 = 0),
         !v38 || (objc_msgSend(v3, "iconContinuousCornerRadius"), (BSFloatEqualToFloat() & 1) == 0))))
  {
    v39 = (void *)objc_msgSend(v3, "mutableCopy");
    objc_msgSend(v39, "setIconSize:", v11, v13);
    objc_msgSend(v39, "setIconContinuousCornerRadius:", v42);
    objc_msgSend(v39, "setLayoutInsets:", v19, v21, v23, v25);
    objc_msgSend(v39, "setIconSpacing:", v15, v17);
    v40 = objc_msgSend(v39, "copy");

    v3 = (void *)v40;
  }

  return v3;
}

- (void)settings:(id)a3 changedValueForKey:(id)a4
{
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  int v16;
  __objc2_class **v17;
  void *v18;
  id v19;

  v19 = a3;
  v6 = a4;
  -[SBHIconManager homeScreenSettings](self, "homeScreenSettings");
  v7 = (id)objc_claimAutoreleasedReturnValue();

  if (v7 == v19)
  {
    if (!objc_msgSend(v6, "isEqualToString:", CFSTR("usesMinimumViableHomeScreen")))
    {
      if (objc_msgSend(v6, "isEqualToString:", CFSTR("avocadoEnabled")))
      {
        -[SBHIconManager relayout](self, "relayout");
      }
      else if (!objc_msgSend(v6, "isEqualToString:", CFSTR("avocadoTodayPageEnabled")))
      {
        goto LABEL_24;
      }
    }
    -[SBHIconManager tearDownAndResetRootIconLists](self, "tearDownAndResetRootIconLists");
    goto LABEL_24;
  }
  -[SBHIconManager rootFolderSettings](self, "rootFolderSettings");
  v8 = (id)objc_claimAutoreleasedReturnValue();

  if (v8 == v19)
  {
    -[SBHIconManager rootFolderSettings](self, "rootFolderSettings");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v6, "isEqualToString:", CFSTR("adjustableLayoutEnabled")))
    {
      v16 = objc_msgSend(v15, "isAdjustableLayoutEnabled");
      v17 = off_1E8D81570;
      if (!v16)
        v17 = off_1E8D81668;
      v18 = (void *)objc_msgSend(objc_alloc(*v17), "initWithLayoutOptions:", -[SBHIconManager listLayoutProviderLayoutOptions](self, "listLayoutProviderLayoutOptions"));
      -[SBHIconManager setListLayoutProvider:](self, "setListLayoutProvider:", v18);

    }
    else if (objc_msgSend(v15, "shouldRebuildLayoutOnChangesToValueForKey:", v6)
           && objc_msgSend(v15, "isAdjustableLayoutEnabled"))
    {
      -[SBHIconManager tearDownAndResetRootIconLists](self, "tearDownAndResetRootIconLists");
    }

  }
  else
  {
    -[SBHIconManager badgeParallaxSettings](self, "badgeParallaxSettings");
    v9 = (id)objc_claimAutoreleasedReturnValue();

    if (v9 == v19)
    {
      -[SBHIconManager enumerateKnownIconViewsUsingBlock:](self, "enumerateKnownIconViewsUsingBlock:", &__block_literal_global_945);
    }
    else
    {
      -[SBHIconManager widgetIntroductionSettings](self, "widgetIntroductionSettings");
      v10 = (id)objc_claimAutoreleasedReturnValue();

      if (v10 == v19)
      {
        if (objc_msgSend(v6, "isEqualToString:", CFSTR("showWidgetIntroConvenienceControl")))
        {
          if (-[SBHIconManager prototypeSettingShowWidgetIntroduction](self, "prototypeSettingShowWidgetIntroduction"))
          {
            -[SBHIconManager homeScreenDefaults](self, "homeScreenDefaults");
            v11 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v11, "setShouldAddDefaultWidgetsToHomeScreen:", 1);

            -[SBHIconManager homeScreenDefaults](self, "homeScreenDefaults");
            v12 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v12, "setShouldShowWidgetIntroductionPopover:", 1);

            if (!-[SBHIconManager rootFolderContainsWidgets](self, "rootFolderContainsWidgets"))
            {
              -[SBHIconManager addDefaultFirstPageWidgetsToHomeScreen:](self, "addDefaultFirstPageWidgetsToHomeScreen:", 1);
              -[SBHIconManager addDefaultSecondPageWidgetsToHomeScreen:](self, "addDefaultSecondPageWidgetsToHomeScreen:", 0);
            }
            -[SBHIconManager homeScreenDefaults](self, "homeScreenDefaults");
            v13 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v13, "setShouldAddDefaultWidgetsToHomeScreen:", 0);

            -[SBHIconManager homeScreenDefaults](self, "homeScreenDefaults");
            v14 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v14, "setShouldShowWidgetIntroductionPopover:", 0);

          }
          else
          {
            -[SBHIconManager undoDefaultWidgets:](self, "undoDefaultWidgets:", 0);
          }
        }
        else if (objc_msgSend(v6, "isEqualToString:", CFSTR("showXLTVWidget")))
        {
          if (-[SBHIconManager prototypeSettingShowExtraLargeTVWidget](self, "prototypeSettingShowExtraLargeTVWidget"))
            -[SBHIconManager addDefaultSecondPageWidgetsToHomeScreen:](self, "addDefaultSecondPageWidgetsToHomeScreen:", 1);
          else
            -[SBHIconManager undoDefaultTVWidget](self, "undoDefaultTVWidget");
        }
      }
    }
  }
LABEL_24:

}

uint64_t __46__SBHIconManager_settings_changedValueForKey___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "updateParallaxSettings");
}

- (id)descriptionWithMultilinePrefix:(id)a3
{
  void *v3;
  void *v4;

  -[SBHIconManager descriptionBuilderWithMultilinePrefix:](self, "descriptionBuilderWithMultilinePrefix:", a3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "build");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

- (id)descriptionBuilderWithMultilinePrefix:(id)a3
{
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;

  objc_msgSend(MEMORY[0x1E0D01748], "builderWithObject:", self);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (id)objc_msgSend(v4, "appendBool:withName:", -[SBHIconManager isEditing](self, "isEditing"), CFSTR("isEditing"));
  -[SBHIconManager iconModel](self, "iconModel");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (id)objc_msgSend(v4, "appendObject:withName:", v6, CFSTR("model"));

  -[SBHIconManager listLayoutProvider](self, "listLayoutProvider");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (id)objc_msgSend(v4, "appendObject:withName:", v8, CFSTR("listLayoutProvider"));

  -[SBHIconManager rootViewController](self, "rootViewController");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = (id)objc_msgSend(v4, "appendObject:withName:", v10, CFSTR("rootViewController"));

  v12 = (id)objc_msgSend(v4, "appendObject:withName:skipIfNil:", self->_touchedIconViews, CFSTR("touchedIconViews"), 1);
  v13 = (id)objc_msgSend(v4, "appendBool:withName:ifEqualTo:", -[SBHIconManager isIconDragging](self, "isIconDragging"), CFSTR("isIconDragging"), 1);
  v14 = (id)objc_msgSend(v4, "appendBool:withName:ifEqualTo:", -[SBHIconManager ownsIconModel](self, "ownsIconModel"), CFSTR("ownsIconModel"), 0);
  if (-[NSCountedSet count](self->_reasonsToIgnoreUserPreferenceForAddingNewIconsToHomeScreen, "count"))
    v15 = (id)objc_msgSend(v4, "appendObject:withName:", self->_reasonsToIgnoreUserPreferenceForAddingNewIconsToHomeScreen, CFSTR("reasonsToIgnoreUserPreferenceForAddingNewIconsToHomeScreen"));
  return v4;
}

- (id)succinctDescription
{
  void *v2;
  void *v3;

  -[SBHIconManager succinctDescriptionBuilder](self, "succinctDescriptionBuilder");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "build");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

- (id)succinctDescriptionBuilder
{
  return (id)objc_msgSend(MEMORY[0x1E0D01748], "builderWithObject:", self);
}

- (void)_setupStateCaptureHandleIfNeeded
{
  id v3;
  BSInvalidatable *v4;
  BSInvalidatable *stateCaptureHandle;
  id v6;
  id location;

  if (!self->_stateCaptureHandle)
  {
    objc_initWeak(&location, self);
    v3 = MEMORY[0x1E0C80D38];
    objc_copyWeak(&v6, &location);
    BSLogAddStateCaptureBlockWithTitle();
    v4 = (BSInvalidatable *)objc_claimAutoreleasedReturnValue();
    stateCaptureHandle = self->_stateCaptureHandle;
    self->_stateCaptureHandle = v4;

    objc_destroyWeak(&v6);
    objc_destroyWeak(&location);
  }
}

id __50__SBHIconManager__setupStateCaptureHandleIfNeeded__block_invoke(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  void *v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend(WeakRetained, "_stateCaptureString");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v3 = 0;
  }

  return v3;
}

- (id)_stateCaptureString
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  _QWORD v14[5];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v3 = (void *)objc_opt_new();
  -[SBHIconManager rootFolder](self, "rootFolder");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "bs_safeAddObject:", v4);
  v17 = 0u;
  v18 = 0u;
  v15 = 0u;
  v16 = 0u;
  -[SBHIconManager _libraryViewControllers](self, "_libraryViewControllers");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v16;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v16 != v8)
          objc_enumerationMutation(v5);
        objc_msgSend(*(id *)(*((_QWORD *)&v15 + 1) + 8 * v9), "categoriesRootFolder");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v3, "bs_safeAddObject:", v10);

        ++v9;
      }
      while (v7 != v9);
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
    }
    while (v7);
  }

  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 3221225472;
  v14[2] = __37__SBHIconManager__stateCaptureString__block_invoke;
  v14[3] = &unk_1E8D8D3F8;
  v14[4] = self;
  objc_msgSend(v3, "bs_map:", v14);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "description");
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  return v12;
}

uint64_t __37__SBHIconManager__stateCaptureString__block_invoke(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "_dumpRootFolderForStateCapture:", a2);
}

- (id)_dumpRootFolderForStateCapture:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  _QWORD v14[5];
  id v15;

  v4 = a3;
  objc_msgSend(v4, "badgeBehaviorProvider");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_opt_new();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("<%@: %p>"), objc_opt_class(), v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setObject:forKeyedSubscript:", v7, CFSTR("delegate"));

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", v5 != 0);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setObject:forKeyedSubscript:", v8, CFSTR("delegate supports badge checking"));

  if (v5)
  {
    v9 = (void *)objc_opt_new();
    v14[0] = MEMORY[0x1E0C809B0];
    v14[1] = 3221225472;
    v14[2] = __49__SBHIconManager__dumpRootFolderForStateCapture___block_invoke;
    v14[3] = &unk_1E8D8A198;
    v14[4] = self;
    v15 = v9;
    v10 = v9;
    objc_msgSend(v4, "enumerateAllIconsWithOptions:usingBlock:", 1, v14);
    v11 = (void *)objc_msgSend(v10, "copy");
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v11, CFSTR("icons supporting badges"));

  }
  objc_msgSend(v4, "description");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setObject:forKeyedSubscript:", v12, CFSTR("description"));

  return v6;
}

void __49__SBHIconManager__dumpRootFolderForStateCapture___block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  if ((objc_msgSend(v5, "isFolderIcon") & 1) == 0
    && (objc_msgSend(v5, "isWidgetIcon") & 1) == 0
    && (objc_msgSend(v5, "isWidgetStackIcon") & 1) == 0
    && objc_msgSend(v5, "isLeafIcon")
    && objc_msgSend(*(id *)(a1 + 32), "allowsBadgingForIcon:", v5))
  {
    v3 = *(void **)(a1 + 40);
    objc_msgSend(v5, "leafIdentifier");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "addObject:", v4);

  }
}

- (void)updateIconViewAccessoryVisibility
{
  id v3;

  -[SBHIconManager refreshAppPredictionBadges](self, "refreshAppPredictionBadges");
  -[SBHIconManager rootFolder](self, "rootFolder");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "enumerateAllIconsWithOptions:usingBlock:", 1, &__block_literal_global_981);

}

void __51__SBHIconManager_updateIconViewAccessoryVisibility__block_invoke(uint64_t a1, void *a2)
{
  id v2;

  v2 = a2;
  if ((objc_msgSend(v2, "isFolderIcon") & 1) == 0)
    objc_msgSend(v2, "noteBadgeDidChange");

}

- (void)resizeGestureHandler:(id)a3 didFinishWithGridSizeClass:(id)a4
{
  void *v6;
  void *v7;
  id v8;
  id v9;

  v9 = a4;
  objc_msgSend(a3, "iconView");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "icon");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "gridSizeClass");
  v8 = (id)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v7, "isWidgetIcon") && v8 != v9 && (objc_msgSend(v8, "isEqualToString:", v9) & 1) == 0)
    -[SBHIconManager changeSizeOfWidgetIcon:toSizeClass:animated:completionHandler:](self, "changeSizeOfWidgetIcon:toSizeClass:animated:completionHandler:", v7, v9, 0, 0);
  -[SBHIconManager _removeReasonToNotResetEndEditingTimer:](self, "_removeReasonToNotResetEndEditingTimer:", CFSTR("widget resize"));

}

- (id)resizeGestureHandler:(id)a3 intentForWidget:(id)a4
{
  id v6;
  void *v7;
  void *v8;
  void *v9;

  v6 = a4;
  objc_msgSend(a3, "iconView");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "icon");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  -[SBHIconManager _intentForWidget:ofIcon:creatingIfNecessary:](self, "_intentForWidget:ofIcon:creatingIfNecessary:", v6, v8, 1);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return v9;
}

- (id)resizeGestureHandler:(id)a3 viewControllerForIconDataSource:(id)a4 icon:(id)a5 gridSizeClass:(id)a6
{
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;

  v10 = a6;
  v11 = a5;
  v12 = a4;
  objc_msgSend(a3, "iconView");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "location");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager _customViewControllerForResizingIcon:gridSizeClass:dataSource:location:](self, "_customViewControllerForResizingIcon:gridSizeClass:dataSource:location:", v11, v10, v12, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  return v15;
}

- (id)iconSizeChangeAnimator:(id)a3 intentForWidget:(id)a4
{
  id v6;
  void *v7;
  void *v8;
  void *v9;

  v6 = a4;
  objc_msgSend(a3, "iconView");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "icon");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  -[SBHIconManager _intentForWidget:ofIcon:creatingIfNecessary:](self, "_intentForWidget:ofIcon:creatingIfNecessary:", v6, v8, 1);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return v9;
}

- (id)iconSizeChangeAnimator:(id)a3 viewControllerForIconDataSource:(id)a4 icon:(id)a5 gridSizeClass:(id)a6
{
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;

  v10 = a6;
  v11 = a5;
  v12 = a4;
  objc_msgSend(a3, "iconView");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "location");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBHIconManager _customViewControllerForResizingIcon:gridSizeClass:dataSource:location:](self, "_customViewControllerForResizingIcon:gridSizeClass:dataSource:location:", v11, v10, v12, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  return v15;
}

- (void)appProtectionSubjectsChanged:(id)a3 forSubscription:(id)a4
{
  id v5;
  id v6;
  _QWORD v7[4];
  id v8;
  SBHIconManager *v9;

  v5 = a4;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = __63__SBHIconManager_appProtectionSubjectsChanged_forSubscription___block_invoke;
  v7[3] = &unk_1E8D84EF0;
  v8 = v5;
  v9 = self;
  v6 = v5;
  dispatch_async(MEMORY[0x1E0C80D38], v7);

}

void __63__SBHIconManager_appProtectionSubjectsChanged_forSubscription___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 40), "appPrototectionSubjectMonitorSubscription");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  LODWORD(v2) = objc_msgSend(v2, "isEqual:", v3);

  if ((_DWORD)v2)
    objc_msgSend(*(id *)(a1 + 40), "checkForInvalidWidgets");
}

- (void)setDelegate:(id)a3
{
  objc_storeWeak((id *)&self->_delegate, a3);
}

- (void)setRootFolderController:(id)a3
{
  objc_storeStrong((id *)&self->_rootFolderController, a3);
}

- (SBHTodayViewControlling)overlayCoverSheetTodayViewController
{
  return self->_overlayCoverSheetTodayViewController;
}

- (BOOL)isOverlayTodayViewVisibilityTransitioning
{
  return self->_overlayTodayViewVisibilityTransitioning;
}

- (BOOL)isOverlayCoverSheetTodayViewVisible
{
  return self->_overlayCoverSheetTodayViewVisible;
}

- (BOOL)isMainDisplayLibraryViewVisibilityTransitioning
{
  return self->_mainDisplayLibraryViewVisibilityTransitioning;
}

- (BOOL)isDockPinnedForRotation
{
  return self->_dockPinnedForRotation;
}

- (void)setDockPinnedForRotation:(BOOL)a3
{
  self->_dockPinnedForRotation = a3;
}

- (BOOL)showsDoneButtonWhileEditing
{
  return self->_showsDoneButtonWhileEditing;
}

- (void)setShowsDoneButtonWhileEditing:(BOOL)a3
{
  self->_showsDoneButtonWhileEditing = a3;
}

- (BOOL)showsAddWidgetButtonWhileEditing
{
  return self->_showsAddWidgetButtonWhileEditing;
}

- (void)setShowsAddWidgetButtonWhileEditing:(BOOL)a3
{
  self->_showsAddWidgetButtonWhileEditing = a3;
}

- (SBHFeatureIntroductionManager)featureIntroductionManager
{
  return self->_featureIntroductionManager;
}

- (_UILegibilitySettings)legibilitySettings
{
  return self->_legibilitySettings;
}

- (SBIconListLayoutProvider)listLayoutProvider
{
  return self->_listLayoutProvider;
}

- (unint64_t)listLayoutProviderLayoutOptions
{
  return self->_listLayoutProviderLayoutOptions;
}

- (BOOL)isAnimatingForUnscatter
{
  return self->_animatingForUnscatter;
}

- (void)setAnimatingForUnscatter:(BOOL)a3
{
  self->_animatingForUnscatter = a3;
}

- (void)setAddWidgetSheetConfigurationManager:(id)a3
{
  objc_storeStrong((id *)&self->_addWidgetSheetConfigurationManager, a3);
}

- (BOOL)isSidebarVisible
{
  return self->_sidebarVisible;
}

- (BOOL)isSidebarEffectivelyVisible
{
  return self->_sidebarEffectivelyVisible;
}

- (BOOL)isSidebarVisibilityGestureActive
{
  return self->_sidebarVisibilityGestureActive;
}

- (BOOL)showsBadgesInAppLibrary
{
  return self->_showsBadgesInAppLibrary;
}

- (BOOL)isUsageMonitoringEnabled
{
  return self->_usageMonitoringEnabled;
}

- (void)setUsageMonitor:(id)a3
{
  objc_storeStrong((id *)&self->_usageMonitor, a3);
}

- (APSubjectMonitorSubscription)appPrototectionSubjectMonitorSubscription
{
  return (APSubjectMonitorSubscription *)objc_loadWeakRetained((id *)&self->_appPrototectionSubjectMonitorSubscription);
}

- (void)setAppPrototectionSubjectMonitorSubscription:(id)a3
{
  objc_storeWeak((id *)&self->_appPrototectionSubjectMonitorSubscription, a3);
}

- (NSArray)postResetPathIdentifiers
{
  return self->_postResetPathIdentifiers;
}

- (void)setPostResetPathIdentifiers:(id)a3
{
  objc_setProperty_nonatomic_copy(self, a2, a3, 704);
}

- (BOOL)needsRelayout
{
  return self->_needsRelayout;
}

- (void)setNeedsRelayout:(BOOL)a3
{
  self->_needsRelayout = a3;
}

- (SBFolder)closingFolder
{
  return self->_closingFolder;
}

- (void)setClosingFolder:(id)a3
{
  objc_storeStrong((id *)&self->_closingFolder, a3);
}

- (BSEventQueue)transitionEventQueue
{
  return self->_transitionEventQueue;
}

- (SBWorkspaceInteractionContext)currentInteractionContext
{
  return self->_currentInteractionContext;
}

- (void)setCurrentInteractionContext:(id)a3
{
  objc_storeStrong((id *)&self->_currentInteractionContext, a3);
}

- (SBHHomeScreenSettings)homeScreenSettings
{
  return self->_homeScreenSettings;
}

- (SBHRootFolderSettings)rootFolderSettings
{
  return self->_rootFolderSettings;
}

- (NSString)precachedContentSizeCategory
{
  return self->_precachedContentSizeCategory;
}

- (void)setPrecachedContentSizeCategory:(id)a3
{
  objc_setProperty_nonatomic_copy(self, a2, a3, 752);
}

- (PUIStylePickerViewController)currentStylePickerViewController
{
  return (PUIStylePickerViewController *)objc_loadWeakRetained((id *)&self->_currentStylePickerViewController);
}

- (void)setCurrentStylePickerViewController:(id)a3
{
  objc_storeWeak((id *)&self->_currentStylePickerViewController, a3);
}

- (BOOL)isResettingRootIconLists
{
  return self->_resettingRootIconLists;
}

- (void)setResettingRootIconLists:(BOOL)a3
{
  self->_resettingRootIconLists = a3;
}

- (BOOL)canPresentOverscrollLibraryForPageTransition
{
  return self->_canPresentOverscrollLibraryForPageTransition;
}

- (void)setCanPresentOverscrollLibraryForPageTransition:(BOOL)a3
{
  self->_canPresentOverscrollLibraryForPageTransition = a3;
}

- (BOOL)canDismissOverscrollLibraryForPageTransition
{
  return self->_canDismissOverscrollLibraryForPageTransition;
}

- (void)setCanDismissOverscrollLibraryForPageTransition:(BOOL)a3
{
  self->_canDismissOverscrollLibraryForPageTransition = a3;
}

- (BSInvalidatable)editingAutosaveDisableAssertion
{
  return self->_editingAutosaveDisableAssertion;
}

- (void)setEditingAutosaveDisableAssertion:(id)a3
{
  objc_storeStrong((id *)&self->_editingAutosaveDisableAssertion, a3);
}

- (void)setCurrentConfiguringIconView:(id)a3
{
  objc_storeStrong((id *)&self->_currentConfiguringIconView, a3);
}

- (void)setCurrentPersonDetailInteraction:(id)a3
{
  objc_storeStrong((id *)&self->_currentPersonDetailInteraction, a3);
}

- (SBFParallaxSettings)badgeParallaxSettings
{
  return self->_badgeParallaxSettings;
}

- (ATXHomeScreenPageIconRanker)atxIconRanker
{
  return self->_atxIconRanker;
}

- (void)setAtxIconRanker:(id)a3
{
  objc_storeStrong((id *)&self->_atxIconRanker, a3);
}

- (SBHWidgetIntroductionSettings)widgetIntroductionSettings
{
  return self->_widgetIntroductionSettings;
}

- (void)setDefaultFirstPageSuggestedWidgetIcons:(id)a3
{
  objc_storeStrong((id *)&self->_defaultFirstPageSuggestedWidgetIcons, a3);
}

- (void)setDefaultSecondPageSuggestedWidgetIcons:(id)a3
{
  objc_storeStrong((id *)&self->_defaultSecondPageSuggestedWidgetIcons, a3);
}

- (void)setShouldDisableUserInteractionForWidgetDiscoverability:(BOOL)a3
{
  self->_shouldDisableUserInteractionForWidgetDiscoverability = a3;
}

- (NSMutableArray)chuisOnboardingWidgetViewControllers
{
  return self->_chuisOnboardingWidgetViewControllers;
}

- (void)setChuisOnboardingWidgetViewControllers:(id)a3
{
  objc_storeStrong((id *)&self->_chuisOnboardingWidgetViewControllers, a3);
}

- (void)setDismissingMenuForFolderPresentation:(BOOL)a3
{
  self->_dismissingMenuForFolderPresentation = a3;
}

- (BSInvalidatable)todayViewCancelTouchesScrollingAssertion
{
  return self->_todayViewCancelTouchesScrollingAssertion;
}

- (void)setTodayViewCancelTouchesScrollingAssertion:(id)a3
{
  objc_storeStrong((id *)&self->_todayViewCancelTouchesScrollingAssertion, a3);
}

- (SBHIconImageCacheRequestIdentifying)iconImageRecachingRequestCancellation
{
  return self->_iconImageRecachingRequestCancellation;
}

- (void)setIconImageRecachingRequestCancellation:(id)a3
{
  objc_storeStrong((id *)&self->_iconImageRecachingRequestCancellation, a3);
}

- (SBHIconImageCacheRequestIdentifying)visibleIconImageRecachingRequestCancellation
{
  return self->_visibleIconImageRecachingRequestCancellation;
}

- (void)setVisibleIconImageRecachingRequestCancellation:(id)a3
{
  objc_storeStrong((id *)&self->_visibleIconImageRecachingRequestCancellation, a3);
}

- (SBHIconImageCacheRequestIdentifying)iconPrecachingCancellation
{
  return self->_iconPrecachingCancellation;
}

- (void)setIconPrecachingCancellation:(id)a3
{
  objc_storeStrong((id *)&self->_iconPrecachingCancellation, a3);
}

- (BOOL)didChangeIconStyleWithColorPicker
{
  return self->_didChangeIconStyleWithColorPicker;
}

- (void)setDidChangeIconStyleWithColorPicker:(BOOL)a3
{
  self->_didChangeIconStyleWithColorPicker = a3;
}

- (BOOL)isIconStylePickerVisible
{
  return self->_iconStylePickerVisible;
}

- (NSTimer)visibleIconTintLimitedDelayedUpdateTimer
{
  return self->_visibleIconTintLimitedDelayedUpdateTimer;
}

- (void)setVisibleIconTintLimitedDelayedUpdateTimer:(id)a3
{
  objc_storeStrong((id *)&self->_visibleIconTintLimitedDelayedUpdateTimer, a3);
}

- (UITraitChangeRegistration)rootViewControllerUserInterfaceStyleObservation
{
  return self->_rootViewControllerUserInterfaceStyleObservation;
}

- (void)setRootViewControllerUserInterfaceStyleObservation:(id)a3
{
  objc_storeStrong((id *)&self->_rootViewControllerUserInterfaceStyleObservation, a3);
}

- (SBHIconStylePreviewManager)stylePreviewManager
{
  return self->_stylePreviewManager;
}

- (void)setStylePreviewManager:(id)a3
{
  objc_storeStrong((id *)&self->_stylePreviewManager, a3);
}

- (BOOL)shouldClearStylePreviewManagerAfterRootTraitChange
{
  return self->_shouldClearStylePreviewManagerAfterRootTraitChange;
}

- (void)setShouldClearStylePreviewManagerAfterRootTraitChange:(BOOL)a3
{
  self->_shouldClearStylePreviewManagerAfterRootTraitChange = a3;
}

- (SBHomeScreenDefaults)homeScreenDefaults
{
  return self->_homeScreenDefaults;
}

- (SBIconView)previewInteractingIconView
{
  return self->_previewInteractingIconView;
}

- (SBHWidgetMetricsProvider)widgetMetricsProvider
{
  return self->_widgetMetricsProvider;
}

- (SBHIconManagerWidgetMetricsDelegate)widgetMetricsDelegate
{
  return (SBHIconManagerWidgetMetricsDelegate *)objc_loadWeakRetained((id *)&self->_widgetMetricsDelegate);
}

- (void)setWidgetMetricsDelegate:(id)a3
{
  objc_storeWeak((id *)&self->_widgetMetricsDelegate, a3);
}

- (NSArray)defaultFirstPageWidgetDescriptors
{
  return self->_defaultFirstPageWidgetDescriptors;
}

- (void)setDefaultFirstPageWidgetDescriptors:(id)a3
{
  objc_setProperty_nonatomic_copy(self, a2, a3, 944);
}

- (NSString)defaultFirstPageWidgetSizeClass
{
  return self->_defaultFirstPageWidgetSizeClass;
}

- (void)setDefaultFirstPageWidgetSizeClass:(id)a3
{
  objc_storeStrong((id *)&self->_defaultFirstPageWidgetSizeClass, a3);
}

- (NSArray)defaultSecondPageWidgetDescriptors
{
  return self->_defaultSecondPageWidgetDescriptors;
}

- (void)setDefaultSecondPageWidgetDescriptors:(id)a3
{
  objc_setProperty_nonatomic_copy(self, a2, a3, 960);
}

- (NSString)defaultSecondPageWidgetSizeClass
{
  return self->_defaultSecondPageWidgetSizeClass;
}

- (void)setDefaultSecondPageWidgetSizeClass:(id)a3
{
  objc_storeStrong((id *)&self->_defaultSecondPageWidgetSizeClass, a3);
}

- (BOOL)internalForceShowWidgetDiscoverability
{
  return self->_internalForceShowWidgetDiscoverability;
}

- (void)setInternalForceShowWidgetDiscoverability:(BOOL)a3
{
  self->_internalForceShowWidgetDiscoverability = a3;
}

- (unint64_t)gridCellInfoOptionsForInsertingDefaultWidgets
{
  return self->_gridCellInfoOptionsForInsertingDefaultWidgets;
}

- (void)setGridCellInfoOptionsForInsertingDefaultWidgets:(unint64_t)a3
{
  self->_gridCellInfoOptionsForInsertingDefaultWidgets = a3;
}

- (ATXDefaultWidgetSuggesterClient)proactiveWidgetSuggesterClient
{
  return self->_proactiveWidgetSuggesterClient;
}

- (void)setProactiveWidgetSuggesterClient:(id)a3
{
  objc_storeStrong((id *)&self->_proactiveWidgetSuggesterClient, a3);
}

- (BOOL)disablesScrollingToLastIconPageForLibraryDismissal
{
  return self->_disablesScrollingToLastIconPageForLibraryDismissal;
}

- (void)setDisablesScrollingToLastIconPageForLibraryDismissal:(BOOL)a3
{
  self->_disablesScrollingToLastIconPageForLibraryDismissal = a3;
}

- (SBHWidgetIntroductionFeatureIntroductionItem)widgetIntroductionItem
{
  return self->_widgetIntroductionItem;
}

- (void)setWidgetIntroductionItem:(id)a3
{
  objc_storeStrong((id *)&self->_widgetIntroductionItem, a3);
}

- (void)setRecyclesIconViews:(BOOL)a3
{
  self->_recyclesIconViews = a3;
}

- (BOOL)ownsIconModel
{
  return self->_ownsIconModel;
}

- (void)setOwnsIconModel:(BOOL)a3
{
  self->_ownsIconModel = a3;
}

- (void).cxx_destruct
{
  objc_storeStrong((id *)&self->_widgetIntroductionItem, 0);
  objc_storeStrong((id *)&self->_proactiveWidgetSuggesterClient, 0);
  objc_storeStrong((id *)&self->_defaultSecondPageWidgetSizeClass, 0);
  objc_storeStrong((id *)&self->_defaultSecondPageWidgetDescriptors, 0);
  objc_storeStrong((id *)&self->_defaultFirstPageWidgetSizeClass, 0);
  objc_storeStrong((id *)&self->_defaultFirstPageWidgetDescriptors, 0);
  objc_destroyWeak((id *)&self->_widgetMetricsDelegate);
  objc_storeStrong((id *)&self->_widgetMetricsProvider, 0);
  objc_storeStrong((id *)&self->_previewInteractingIconView, 0);
  objc_storeStrong((id *)&self->_homeScreenDefaults, 0);
  objc_storeStrong((id *)&self->_stylePreviewManager, 0);
  objc_storeStrong((id *)&self->_rootViewControllerUserInterfaceStyleObservation, 0);
  objc_storeStrong((id *)&self->_visibleIconTintLimitedDelayedUpdateTimer, 0);
  objc_storeStrong((id *)&self->_iconPrecachingCancellation, 0);
  objc_storeStrong((id *)&self->_visibleIconImageRecachingRequestCancellation, 0);
  objc_storeStrong((id *)&self->_iconImageRecachingRequestCancellation, 0);
  objc_storeStrong((id *)&self->_todayViewCancelTouchesScrollingAssertion, 0);
  objc_storeStrong((id *)&self->_chuisOnboardingWidgetViewControllers, 0);
  objc_storeStrong((id *)&self->_defaultSecondPageSuggestedWidgetIcons, 0);
  objc_storeStrong((id *)&self->_defaultFirstPageSuggestedWidgetIcons, 0);
  objc_storeStrong((id *)&self->_widgetIntroductionSettings, 0);
  objc_storeStrong((id *)&self->_atxIconRanker, 0);
  objc_storeStrong((id *)&self->_badgeParallaxSettings, 0);
  objc_storeStrong((id *)&self->_currentPersonDetailInteraction, 0);
  objc_storeStrong((id *)&self->_currentConfiguringIconView, 0);
  objc_storeStrong((id *)&self->_editingAutosaveDisableAssertion, 0);
  objc_destroyWeak((id *)&self->_currentStylePickerViewController);
  objc_storeStrong((id *)&self->_leadingCustomViewController, 0);
  objc_storeStrong((id *)&self->_trailingCustomViewController, 0);
  objc_storeStrong((id *)&self->_precachedContentSizeCategory, 0);
  objc_storeStrong((id *)&self->_rootFolderSettings, 0);
  objc_storeStrong((id *)&self->_homeScreenSettings, 0);
  objc_storeStrong((id *)&self->_currentInteractionContext, 0);
  objc_storeStrong((id *)&self->_transitionEventQueue, 0);
  objc_storeStrong((id *)&self->_closingFolder, 0);
  objc_storeStrong((id *)&self->_postResetPathIdentifiers, 0);
  objc_storeStrong((id *)&self->_editingEndTimer, 0);
  objc_storeStrong((id *)&self->_highlightedIconView, 0);
  objc_destroyWeak((id *)&self->_appPrototectionSubjectMonitorSubscription);
  objc_storeStrong((id *)&self->_usageMonitor, 0);
  objc_storeStrong((id *)&self->_iconShareSheetManager, 0);
  objc_storeStrong((id *)&self->_iconDragManager, 0);
  objc_storeStrong((id *)&self->_currentTransitionAnimator, 0);
  objc_storeStrong((id *)&self->_addWidgetSheetConfigurationManager, 0);
  objc_storeStrong((id *)&self->_widgetExtensionProvider, 0);
  objc_storeStrong((id *)&self->_iconToReveal, 0);
  objc_storeStrong((id *)&self->_listLayoutProvider, 0);
  objc_storeStrong((id *)&self->_legibilitySettings, 0);
  objc_storeStrong((id *)&self->_featureIntroductionManager, 0);
  objc_storeStrong((id *)&self->_focusModeManager, 0);
  objc_storeStrong((id *)&self->_overlayLibraryViewController, 0);
  objc_storeStrong((id *)&self->_overlayCoverSheetTodayViewController, 0);
  objc_storeStrong((id *)&self->_overlayTodayViewController, 0);
  objc_storeStrong((id *)&self->_floatingDockViewController, 0);
  objc_storeStrong((id *)&self->_rootViewController, 0);
  objc_storeStrong((id *)&self->_rootFolderController, 0);
  objc_storeStrong((id *)&self->_rootFolder, 0);
  objc_storeStrong((id *)&self->_iconModel, 0);
  objc_destroyWeak((id *)&self->_delegate);
  objc_storeStrong((id *)&self->_proactivePageSuggestionsManager, 0);
  objc_storeStrong((id *)&self->_trailingCustomLibraryPrewarmAssertion, 0);
  objc_storeStrong((id *)&self->_additionalPrecachingIconImageCaches, 0);
  objc_storeStrong((id *)&self->_eyeDropperBarButtonItem, 0);
  objc_storeStrong((id *)&self->_dimBarButtonItem, 0);
  objc_storeStrong((id *)&self->_wallpaperDimButton, 0);
  objc_storeStrong((id *)&self->_eyeDropperControl, 0);
  objc_storeStrong((id *)&self->_eyeDropperColorSampler, 0);
  objc_storeStrong((id *)&self->_labelHidingView, 0);
  objc_storeStrong((id *)&self->_previousIconGridPathsBeforeResize, 0);
  objc_storeStrong((id *)&self->_previousWidgetDataSourceBeforeResize, 0);
  objc_storeStrong((id *)&self->_stashedLeafIconsForRelayout, 0);
  objc_storeStrong((id *)&self->_movedStackConfigDataSources, 0);
  objc_storeStrong((id *)&self->_partialEditingIconLocations, 0);
  objc_destroyWeak((id *)&self->_pendingFolderIconToOpen);
  objc_storeStrong((id *)&self->_stateCaptureHandle, 0);
  objc_storeStrong((id *)&self->_editingActivity, 0);
  objc_storeStrong((id *)&self->_reasonsToIgnoreUserPreferenceForAddingNewIconsToHomeScreen, 0);
  objc_storeStrong((id *)&self->_performAfterPendingWidgetIntentConfigurationBlocks, 0);
  objc_storeStrong((id *)&self->_activeWidgetIntentConfigurationInitializations, 0);
  objc_storeStrong((id *)&self->_pendingWidgetIntentConfigurationInitializations, 0);
  objc_storeStrong((id *)&self->_archivedWidgetIntents, 0);
  objc_storeStrong((id *)&self->_widgetIntents, 0);
  objc_storeStrong((id *)&self->_appPredictionViewControllersForUniqueIdentifierForLayoutOptions, 0);
  objc_storeStrong((id *)&self->_iconViewsForWidgetMultiplexingViewController, 0);
  objc_storeStrong((id *)&self->_iconViewsForCustomIconImageViewController, 0);
  objc_storeStrong((id *)&self->_widgetViewControllersForIconView, 0);
  objc_storeStrong((id *)&self->_aliveWidgetViewControllersHashTable, 0);
  objc_storeStrong((id *)&self->_widgetMultiplexingManagersForLayoutOptions, 0);
  objc_storeStrong((id *)&self->_addWidgetSheetIconImageCache, 0);
  objc_storeStrong((id *)&self->_iconImageCache, 0);
  objc_storeStrong((id *)&self->_folderIconImageCache, 0);
  objc_storeStrong((id *)&self->_previousIconLocations, 0);
  objc_storeStrong((id *)&self->_previousIconLocationTracker, 0);
  objc_storeStrong((id *)&self->_currentCollapseCompletions, 0);
  objc_storeStrong((id *)&self->_currentExpandCompletions, 0);
  objc_storeStrong((id *)&self->_folderPresentationObservers, 0);
  objc_storeStrong((id *)&self->_pageStateObservers, 0);
  objc_storeStrong((id *)&self->_reasonsToNotRestartEditingTimer, 0);
  objc_storeStrong((id *)&self->_iconTouchesFinishedBlocks, 0);
  objc_storeStrong((id *)&self->_touchedIconViews, 0);
  objc_storeStrong((id *)&self->_iconEditingFeedbackBehavior, 0);
  objc_storeStrong((id *)&self->_labelImageCache, 0);
  objc_storeStrong((id *)&self->_widgetBackgroundViewMap, 0);
  objc_storeStrong((id *)&self->_homescreenIconImageViewMap, 0);
  objc_storeStrong((id *)&self->_homescreenIconLabelAccessoryViewMap, 0);
  objc_storeStrong((id *)&self->_homescreenIconAccessoryViewMap, 0);
  objc_storeStrong((id *)&self->_iconViewMap, 0);
}

- (void)relayout
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_4_0(&dword_1CFEF3000, v0, v1, "SBIconModel: delaying relayout because folder is animating or icon is dropping", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_1_2();
}

- (void)uninstallIcon:animate:completion:.cold.1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_4_0(&dword_1CFEF3000, v0, v1, "No icon given to uninstallIcon:animate:completion:", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_1_2();
}

- (void)addIconToIgnoredList:options:completion:.cold.1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_4_0(&dword_1CFEF3000, v0, v1, "No icon given to addIconToIgnoredList:options:completion:", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_1_2();
}

- (void)removeIcon:options:completion:.cold.1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_4_0(&dword_1CFEF3000, v0, v1, "No icon given to removeIcon:options:completion:", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_1_2();
}

- (void)removeIcon:options:completion:.cold.2()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_4_0(&dword_1CFEF3000, v0, v1, "Icon given to removeIcon:options:completion: not found in root folder", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_1_2();
}

- (void)folderIconImageCache
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v2 = *a1;
  v3 = 134217984;
  v4 = v2;
  _os_log_debug_impl(&dword_1CFEF3000, a2, OS_LOG_TYPE_DEBUG, "Creating new SBFolderIconImageCache: %p", (uint8_t *)&v3, 0xCu);
  OUTLINED_FUNCTION_3();
}

- (void)replaceWidgetIconWithAppIcon:.cold.1()
{
  __int16 v0;
  os_log_t v1;
  uint8_t v2[22];
  __int16 v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  OUTLINED_FUNCTION_1();
  v3 = v0;
  v4 = 0;
  _os_log_error_impl(&dword_1CFEF3000, v1, OS_LOG_TYPE_ERROR, "Unable to replace widget icon with app icon. Something is nil. existingAppIcon:%@ existingAppiconIndexPath:%@ matchingIcon:%@", v2, 0x20u);
}

void __86__SBHIconManager__loadAndSaveDefaultIntentIfNecessaryForWidget_ofIcon_viewController___block_invoke_cold_1(uint64_t a1, NSObject *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  __int16 v7;
  uint64_t v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = 138412546;
  v6 = v3;
  v7 = 2112;
  v8 = v4;
  OUTLINED_FUNCTION_4_4(&dword_1CFEF3000, a2, a3, "Default intent asked for but not provided: %@ - %@", (uint8_t *)&v5);
  OUTLINED_FUNCTION_3();
}

- (void)_newIntentForDataSource:(void *)a1 inIcon:(NSObject *)a2 .cold.1(void *a1, NSObject *a2)
{
  void *v4;
  void *v5;
  void *v6;
  int v7;
  void *v8;
  __int16 v9;
  void *v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "applicationBundleID");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1, "activeDataSource");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  SBHConfigurationIdentifierFromDataSource(v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = 138543874;
  v8 = a1;
  v9 = 2114;
  v10 = v4;
  v11 = 2114;
  v12 = v6;
  _os_log_debug_impl(&dword_1CFEF3000, a2, OS_LOG_TYPE_DEBUG, "Replacing widget icon's intent configuration data with default intent because the archived intent could not be found: %{public}@, bundleID=%{public}@,  dataSourceStorageIdentifier: %{public}@", (uint8_t *)&v7, 0x20u);

}

- (void)_archivedIntentForDataSource:inIcon:loadingIfNecessary:.cold.1()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_6_1(&dword_1CFEF3000, v0, v1, "Error unarchiving INIntent for data source %{public}@: %{public}@");
  OUTLINED_FUNCTION_3();
}

- (void)_archivedIntentForDataSource:inIcon:loadingIfNecessary:.cold.2()
{
  os_log_t v0;
  uint8_t v1[16];

  OUTLINED_FUNCTION_7();
  _os_log_fault_impl(&dword_1CFEF3000, v0, OS_LOG_TYPE_FAULT, "Archived widget intent data not found because there was no delegate for the SBHIconManager.", v1, 2u);
  OUTLINED_FUNCTION_1_2();
}

- (void)widgetHostViewController:requestsLaunch:.cold.1()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_3_4(&dword_1CFEF3000, v0, v1, "No containing bundle record found for extension with identifier '%@'", v2);
  OUTLINED_FUNCTION_3();
}

- (void)widgetHostViewController:requestsLaunch:.cold.2()
{
  NSObject *v0;
  uint8_t v1[24];
  uint64_t v2;

  v2 = *MEMORY[0x1E0C80C00];
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_4_4(&dword_1CFEF3000, v0, (uint64_t)v0, "No record found for extension with identifier '%@': %@", v1);
  OUTLINED_FUNCTION_3();
}

- (void)multiplexingManager:(void *)a1 shouldCacheRecentViewController:(NSObject *)a2 forIdentifier:.cold.1(void *a1, NSObject *a2)
{
  void *v3;
  uint64_t v4;
  uint8_t v5[24];
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  SBHWidgetViewControllerSysdiagnoseDescription(a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_3_4(&dword_1CFEF3000, a2, v4, "Forcing %{public}@ to end appearance transition to disappeared", v5);

}

- (void)widgetStackViewController:(uint64_t)a1 didActivateDataSource:(void *)a2 fromUserInteraction:(NSObject *)a3 .cold.1(uint64_t a1, void *a2, NSObject *a3)
{
  void *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  void *v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a2, "uniqueIdentifier");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = 138412546;
  v8 = a1;
  v9 = 2112;
  v10 = v5;
  OUTLINED_FUNCTION_4_4(&dword_1CFEF3000, a3, v6, "Trying to active data source due to user scroll but the data source is unknown! %@ for: %@", (uint8_t *)&v7);

}

- (void)customImageViewControllerForIconView:(uint64_t)a3 .cold.1(const char *a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  objc_class *v6;
  void *v7;
  int v8;
  void *v9;
  __int16 v10;
  void *v11;
  __int16 v12;
  uint64_t v13;
  __int16 v14;
  const __CFString *v15;
  __int16 v16;
  int v17;
  __int16 v18;
  uint64_t v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  NSStringFromSelector(a1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (objc_class *)objc_opt_class();
  NSStringFromClass(v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = 138544642;
  v9 = v5;
  v10 = 2114;
  v11 = v7;
  v12 = 2048;
  v13 = a2;
  v14 = 2114;
  v15 = CFSTR("SBHIconManager.m");
  v16 = 1024;
  v17 = 8092;
  v18 = 2114;
  v19 = a3;
  _os_log_error_impl(&dword_1CFEF3000, MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR, "failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@", (uint8_t *)&v8, 0x3Au);

}

- (void)iconView:configurationInteractionForDataSource:.cold.1()
{
  NSObject *v0;
  uint8_t v1[24];
  uint64_t v2;

  v2 = *MEMORY[0x1E0C80C00];
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_4_4(&dword_1CFEF3000, v0, (uint64_t)v0, "Can't create SBHWidgetConfigurationInteraction because missing widgetDescriptor (%@) or widgetIntent (%@)", v1);
  OUTLINED_FUNCTION_3();
}

- (void)iconView:configurationInteractionForDataSource:.cold.2()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_3_4(&dword_1CFEF3000, v0, v1, "Can't create a CHSWidgetDescriptor because missing actionable dataSource (%@)", v2);
  OUTLINED_FUNCTION_3();
}

- (void)_archiveConfiguration:forDataSource:ofIcon:.cold.1()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_6_1(&dword_1CFEF3000, v0, v1, "Error archiving configuration for icon %{public}@ -- error: %{public}@");
  OUTLINED_FUNCTION_3();
}

@end
