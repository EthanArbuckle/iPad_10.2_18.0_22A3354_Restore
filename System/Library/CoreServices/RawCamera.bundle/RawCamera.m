uint64_t sub_1D5280580(unsigned __int8 *a1, unint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  int v9;
  unint64_t v10;
  unint64_t v11;
  unsigned __int8 *v12;
  unsigned __int8 *v13;
  unsigned __int8 *v14;
  __int16 v15;
  unint64_t v16;
  BOOL v17;
  unint64_t v18;
  int v19;
  unsigned __int16 v20;
  uint64_t v21;
  uint64_t v22;

  if (a2 < 0xA)
    return 0;
  v21 = v3;
  v22 = v4;
  v20 = 42;
  result = sub_1D52C0354(a1, a2, &v20);
  if ((_DWORD)result)
  {
    v9 = *a1;
    v10 = *((unsigned int *)a1 + 1);
    if (v9 == 77)
    {
      v11 = bswap32(v10);
      if (a2 - 2 > v11)
      {
        v12 = &a1[v11];
        v13 = &a1[v11 + 1];
        v14 = v12;
        goto LABEL_8;
      }
    }
    else if (a2 - 2 > v10)
    {
      v13 = &a1[v10];
      v12 = v13 + 1;
      v14 = v13;
LABEL_8:
      v15 = *v13 | (*v12 << 8);
      v16 = (unint64_t)&a1[a2];
      if (v15)
        v17 = (unint64_t)(v14 + 4) > v16;
      else
        v17 = 1;
      if (!v17)
      {
        v18 = (unint64_t)(v14 + 16);
        while (1)
        {
          if (v9 == 77)
          {
            if (*(unsigned __int8 *)(v18 - 14) == 198)
            {
              v19 = *(unsigned __int8 *)(v18 - 13);
              goto LABEL_18;
            }
          }
          else if (*(unsigned __int8 *)(v18 - 13) == 198)
          {
            v19 = *(unsigned __int8 *)(v18 - 14);
LABEL_18:
            if (v19 == 18)
              return 1;
          }
          if (--v15)
          {
            v17 = v18 > v16;
            v18 += 12;
            if (!v17)
              continue;
          }
          break;
        }
      }
      if (!v15)
        return 0;
    }
    if ((sub_1D52EB764(CFSTR("com.adobe.raw-image"), a3) & 1) != 0)
      return 1;
    else
      return sub_1D52EB764(CFSTR("com.dxo.raw-image"), a3);
  }
  return result;
}

uint64_t sub_1D52806D4(unsigned __int8 *a1, unint64_t a2, void *a3)
{
  uint64_t result;
  int v6;
  signed int v7;
  BOOL v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  unsigned int v12;
  unint64_t v13;
  unsigned __int8 *v14;
  unsigned __int8 *v15;
  int v16;
  unsigned __int16 v17;

  if ((sub_1D52EB764(CFSTR("com.leafamerica.raw-image"), a3) & 1) != 0)
    return 1;
  if (a2 < 0xA)
    return 0;
  v17 = 42;
  result = sub_1D52C0354(a1, a2, &v17);
  if ((_DWORD)result)
  {
    v6 = *a1;
    v7 = v6 == 77 ? bswap32(*((_DWORD *)a1 + 1)) : *((_DWORD *)a1 + 1);
    result = 0;
    if ((v7 & 0x80000000) == 0 && a2 - 1 > v7)
    {
      v8 = v6 == 77;
      if (v6 == 77)
        v9 = v7;
      else
        v9 = v7 + 1;
      v10 = a1[v9];
      if (v8)
        v11 = v7 + 1;
      else
        v11 = v7;
      LOWORD(v12) = a1[v11] | (unsigned __int16)(v10 << 8);
      v13 = v7 + 2;
      if (v8)
        v14 = a1 + 1;
      else
        v14 = a1;
      if (v8)
        v15 = a1;
      else
        v15 = a1 + 1;
      do
      {
        v12 = (unsigned __int16)v12 + 0xFFFF;
        if (v13 < a2 - 1)
          result = HIWORD(v12);
        else
          result = 0;
        if ((_DWORD)result != 1)
          break;
        v16 = v14[v13] | (v15[v13] << 8);
        v13 += 12;
      }
      while (v16 != 34310);
    }
  }
  return result;
}

uint64_t sub_1D52807D4(unsigned __int8 *a1, unint64_t a2, void *a3)
{
  uint64_t result;
  unsigned __int16 v5;

  v5 = 42;
  result = sub_1D52C0354(a1, a2, &v5);
  if ((_DWORD)result)
    return sub_1D52EB764(CFSTR("com.hasselblad.fff-raw-image"), a3);
  return result;
}

BOOL sub_1D528081C(unsigned __int8 *a1, unint64_t a2, void *a3)
{
  int v5;
  int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  int *v10;
  int v11;
  char v12;
  BOOL v13;
  char v14;
  unsigned int *v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  int *v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  int *v27;
  int v28;
  unsigned int v29;
  char *v30;
  int v31;
  uint64_t v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  int *v36;
  unsigned int *v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  void *v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  unint64_t v52;
  int v53;

  v52 = a2;
  LOWORD(v53) = 42;
  if (!sub_1D52C0354(a1, a2, (unsigned __int16 *)&v53))
    return 0;
  sub_1D5282FE0(&v51, &v52);
  if (v51 >= 10)
  {
    v5 = *((_DWORD *)a1 + 1);
    if (v5 == 0x8000000 || v5 == 8)
    {
      v6 = *a1;
      v7 = *((unsigned __int16 *)a1 + 4);
      v8 = bswap32(v7) >> 16;
      if (v6 == 77)
        LOWORD(v7) = v8;
      v49 = 10;
      v50 = (unsigned __int16)v7;
      v53 = v51;
      v9 = *sub_1D5290020(&v53, &v49);
      v48 = 12;
      v53 = v9;
      v10 = sub_1D530AAA8(&v53, &v48);
      if (*v10 < v50)
      {
        v49 = 10;
        v53 = v51;
        v11 = *sub_1D5290020(&v53, &v49);
        v48 = 12;
        v53 = v11;
        v50 = *sub_1D530AAA8(&v53, &v48);
      }
      v43 = a3;
      v12 = 0;
      v13 = 0;
      v44 = 0;
      v14 = 0;
      v15 = (unsigned int *)(a1 + 10);
      while ((int)sub_1D53097D8(&v50) > 0)
      {
        v16 = *v15;
        v17 = bswap32(*v15);
        if (v6 == 77)
          v18 = v17;
        else
          v18 = *v15;
        v19 = HIWORD(v17);
        if (v6 != 77)
          LOWORD(v19) = *v15;
        if (v18 == 116242)
          v12 = 1;
        if ((unsigned __int16)v19 == 50721)
          v14 = 1;
        if (v18 == 262474)
        {
          v20 = v15[2];
          v21 = bswap32(v20);
          if (v6 == 77)
            v20 = v21;
          v53 = v20;
          sub_1D5282F74(&v49, &v53);
          v48 = 2;
          v53 = v49;
          v22 = sub_1D5284C34(&v53, &v48);
          if (v51 >= *v22)
          {
            v32 = v49;
            v33 = *(unsigned __int16 *)&a1[v49];
            v34 = bswap32(v33) >> 16;
            if (v6 == 77)
              LOWORD(v33) = v34;
            v47 = 2;
            v48 = (unsigned __int16)v33;
            v53 = v49;
            v35 = *sub_1D5284C34(&v53, &v47);
            v45 = 12;
            v53 = v48;
            v46 = *sub_1D530AB18(&v53, &v45);
            v53 = v35;
            v36 = sub_1D5284C34(&v53, &v46);
            if (v51 >= *v36 && !v13)
            {
              v37 = (unsigned int *)&a1[v32 + 10];
              do
              {
                if ((int)sub_1D53097D8(&v48) < 1)
                  break;
                v38 = *(v37 - 2);
                v39 = bswap32(v38);
                if (v6 == 77)
                  v38 = v39;
                if (v38 == 196870)
                {
                  v40 = *v37;
                  v41 = bswap32(*v37);
                  if (v6 == 77)
                    v40 = v41;
                  v13 = v40 == 32803;
                }
                v37 += 3;
              }
              while (!v13);
            }
          }
          v16 = *v15;
          v17 = bswap32(*v15);
        }
        if (v6 == 77)
          v16 = v17;
        if (v16 == 131343)
        {
          v23 = v15[1];
          v24 = bswap32(v23);
          if (v6 == 77)
            v23 = v24;
          v53 = v23;
          sub_1D5282F74(&v49, &v53);
          v25 = v15[2];
          v26 = bswap32(v25);
          if (v6 == 77)
            v25 = v26;
          v53 = v25;
          sub_1D5282F74(&v48, &v53);
          if (v49 >= 5)
          {
            v53 = v48;
            v27 = sub_1D5284C34(&v53, &v49);
            if (v51 >= *v27)
            {
              v28 = sub_1D52ADF28((unsigned int *)&v48);
              v29 = sub_1D52ADF28((unsigned int *)&v49);
              v30 = strnstr((const char *)&a1[v28], "Hasselblad", v29);
              v31 = v44;
              if (v30)
                v31 = 1;
              v44 = v31;
            }
          }
        }
        v15 += 3;
      }
      a3 = v43;
      if ((v44 & 1) != 0 && (v14 & 1) != 0 && (v12 & 1) == 0 && v13)
        return 1;
    }
  }
  return (sub_1D52EB764(CFSTR("com.hasselblad.3fr-raw-image"), a3) & 1) != 0;
}

uint64_t sub_1D5280C4C(unsigned __int8 *a1, unint64_t a2, void *a3)
{
  uint64_t result;
  unsigned __int16 v5;

  v5 = 42;
  result = sub_1D52C0354(a1, a2, &v5);
  if ((_DWORD)result)
    return sub_1D52EB764(CFSTR("com.pentax.raw-image"), a3);
  return result;
}

uint64_t sub_1D5280C94(_BYTE *a1, unint64_t a2, void *a3)
{
  if (a2 >= 4 && *a1 == 73 && a1[1] == 73 && a1[2] == 42 && !a1[3])
    return sub_1D52EB764(CFSTR("com.sony.sr2-raw-image"), a3);
  else
    return 0;
}

BOOL sub_1D5280CE0(unsigned __int8 *a1, unint64_t a2, void *a3)
{
  unsigned __int16 v5;

  v5 = 42;
  return sub_1D52C0354(a1, a2, &v5)
      && ((sub_1D52EB764(CFSTR("com.sony.arw-raw-image"), a3) & 1) != 0
       || (sub_1D52EB764(CFSTR("com.sony.axr-raw-image"), a3) & 1) != 0);
}

uint64_t sub_1D5280D4C(unsigned __int8 *a1, unint64_t a2, void *a3)
{
  uint64_t result;
  unsigned __int16 v5;

  v5 = 42;
  result = sub_1D52C0354(a1, a2, &v5);
  if ((_DWORD)result)
    return sub_1D52EB764(CFSTR("com.epson.raw-image"), a3);
  return result;
}

uint64_t sub_1D5280D94(unsigned __int8 *a1, unint64_t a2, void *a3)
{
  uint64_t result;
  unsigned __int16 v5;

  v5 = 42;
  result = sub_1D52C0354(a1, a2, &v5);
  if ((_DWORD)result)
    return sub_1D52EB764(CFSTR("com.kodak.raw-image"), a3);
  return result;
}

char *sub_1D5280DDC(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5)
{
  char *v7;
  char *result;

  *(_DWORD *)(a1 + 224) = a2;
  *(_DWORD *)(a1 + 228) = a3;
  v7 = (char *)(a1 + 232);
  if (v7 != (char *)a4)
    sub_1D5282A44(v7, *(char **)a4, *(_QWORD *)(a4 + 8), (uint64_t)(*(_QWORD *)(a4 + 8) - *(_QWORD *)a4) >> 2);
  result = (char *)(a1 + 256);
  if (a1 + 256 != a5)
    return sub_1D5282A44(result, *(char **)a5, *(_QWORD *)(a5 + 8), (uint64_t)(*(_QWORD *)(a5 + 8) - *(_QWORD *)a5) >> 2);
  return result;
}

uint64_t sub_1D5280E40(uint64_t result, char a2)
{
  *(_BYTE *)(result + 393520) = a2;
  return result;
}

uint64_t sub_1D5280E50(_DWORD *a1)
{
  int v1;

  v1 = a1[17];
  if (((a1[70] + 2 * v1) & 0xFLL) != 0)
    return (2 * (a1[15] + 2 * v1) + 31) & 0x3FFFFFFE0;
  else
    return 2 * (a1[70] + 2 * v1);
}

uint64_t sub_1D5280E88(uint64_t a1)
{
  dispatch_once_t *v2;
  _QWORD block[5];

  v2 = (dispatch_once_t *)(a1 + 393512);
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = sub_1D5280F00;
  block[3] = &unk_1E996F870;
  block[4] = a1;
  if (*v2 != -1)
    dispatch_once(v2, block);
  return a1 + 288;
}

void sub_1D5280F00(uint64_t a1)
{
  _QWORD *v1;
  _WORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  const struct __class_type_info *v9;
  _QWORD *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  uint64_t v14;
  const struct __class_type_info *v15;
  const void *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  double *v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  NSObject *v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unsigned int v31;
  __int16 v32;
  uint64_t v33;
  int16x8_t v34;
  int16x8_t v35;
  uint64_t v36;
  uint8_t buf[8];
  __int128 v38;
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  v1 = *(_QWORD **)(a1 + 32);
  v2 = v1 + 49188;
  v4 = v1[24];
  v3 = v1[25];
  v5 = v3 - v4;
  if (v3 == v4 || (unint64_t)v5 > 0x20001)
  {
    v8 = v1[49191];
    v7 = v1[49192];
    if (v7 - v8 == 48)
    {
      *v2 = 3;
      if (v8 != v7)
      {
        v9 = (const struct __class_type_info *)&unk_1E996FA38;
        v36 = v7;
        do
        {
          v10 = __dynamic_cast(*(const void **)v8, v9, (const struct __class_type_info *)&unk_1E99A3A48, 0);
          v11 = *(std::__shared_weak_count **)(v8 + 8);
          if (v11)
          {
            p_shared_owners = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(p_shared_owners);
            while (__stxr(v13 + 1, p_shared_owners));
          }
          v14 = *((unsigned int *)v10 + 7);
          if (v14 > 2)
          {
            sub_1D540E834();
            v26 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)buf = 67109376;
              *(_DWORD *)&buf[4] = v14;
              LOWORD(v38) = 2048;
              *(_QWORD *)((char *)&v38 + 2) = 3;
              _os_log_impl(&dword_1D527F000, v26, OS_LOG_TYPE_INFO, "Plane %d will be ignored. Only expected up to %zu planes\n", buf, 0x12u);
            }

          }
          else
          {
            v15 = v9;
            v16 = (const void *)v10[6];
            v17 = v10[7];
            v18 = (v17 - (uint64_t)v16) >> 3;
            *(_QWORD *)buf = 0;
            v38 = 0uLL;
            sub_1D5282C70(buf, v16, v17, v18);
            v19 = 0;
            v20 = v18 - 1;
            v21 = *(double **)buf;
            v22 = v14 << 16;
            do
            {
              v23 = 0;
              v24 = 0.0;
              do
              {
                v25 = v21[v23];
                v24 = v24 + v25 * pow((float)((float)v19 / 65535.0), (double)v23++);
              }
              while (v20 >= v23);
              *((_WORD *)v1 + v19 + v22 + 144) = (int)(v24 * 65535.0);
              ++v19;
            }
            while (v19 != 0x10000);
            *(_QWORD *)&v38 = v21;
            operator delete(v21);
            v9 = v15;
            v7 = v36;
          }
          if (v11)
          {
            v27 = (unint64_t *)&v11->__shared_owners_;
            do
              v28 = __ldaxr(v27);
            while (__stlxr(v28 - 1, v27));
            if (!v28)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v8 += 16;
        }
        while (v8 != v7);
      }
    }
    else
    {
      v33 = 0;
      *v2 = 1;
      v34 = (int16x8_t)xmmword_1D5447F60;
      v35.i64[0] = 0x8000800080008;
      v35.i64[1] = 0x8000800080008;
      do
      {
        *(int16x8_t *)&v1[v33 + 36] = v34;
        v34 = vaddq_s16(v34, v35);
        v33 += 2;
      }
      while (v33 != 0x4000);
    }
  }
  else
  {
    v29 = 0;
    v30 = v5 >> 1;
    v31 = -1;
    do
    {
      *((_WORD *)v1 + v29 + 144) = *(_WORD *)(v4 + 2 * v29);
      v29 = v31 + 2;
      ++v31;
    }
    while (v30 > v29);
    if (!((v31 + 1) >> 16))
    {
      v32 = *((_WORD *)v1 + v31 + 144);
      do
        *((_WORD *)v1 + v29++ + 144) = v32;
      while ((_DWORD)v29 != 0x10000);
    }
    *v2 = 1;
  }
}

void sub_1D5281204(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  _Unwind_Resume(exception_object);
}

BOOL sub_1D5281224(uint64_t a1)
{
  void *v1;
  int ColorAsEncodedProfile;
  _BOOL8 v3;

  v1 = sub_1D528136C(a1, **(_DWORD **)(a1 + 232), **(_DWORD **)(a1 + 256));
  JxlDecoderCreate();
  JxlDecoderSubscribeEvents();
  if (JxlDecoderSetInput()
    || JxlDecoderProcessInput() != 64
    || JxlDecoderGetBasicInfo()
    || JxlDecoderProcessInput() != 256
    || (ColorAsEncodedProfile = JxlDecoderGetColorAsEncodedProfile(),
        v3 = ColorAsEncodedProfile == 0,
        !ColorAsEncodedProfile)
    && JxlDecoderSetPreferredColorProfile())
  {
    v3 = 0;
  }
  JxlDecoderDestroy();
  free(v1);
  return v3;
}

void *sub_1D528136C(uint64_t a1, int a2, unsigned int a3)
{
  void *v5;
  uint64_t v6;
  int v8;
  int v9;

  v9 = a2;
  v5 = malloc_type_malloc(a3 + 64, 0xA63E760BuLL);
  v6 = *(_QWORD *)(a1 + 24);
  sub_1D5282F74(&v8, &v9);
  (*(void (**)(uint64_t, int *, _QWORD))(*(_QWORD *)v6 + 40))(v6, &v8, 0);
  (*(void (**)(_QWORD, void *, _QWORD))(**(_QWORD **)(a1 + 24) + 32))(*(_QWORD *)(a1 + 24), v5, a3);
  return v5;
}

void sub_1D5281400(void *a1)
{
  void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    free(v1);
  __cxa_end_catch();
  JUMPOUT(0x1D52813E8);
}

void sub_1D5281424(void *a1)
{
  __cxa_begin_catch(a1);
  std::terminate();
}

void sub_1D5281434(os_signpost_id_t a1, uint64_t a2, int *a3, uint64_t a4, int *a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  NSObject *v10;
  NSObject *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  id v21;
  double x;
  double y;
  double width;
  uint64_t v25;
  double height;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  int *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unsigned __int16 *v39;
  uint64_t v40;
  unsigned int v41;
  unsigned int v42;
  uint64_t v43;
  __int16 v44;
  __int16 v45;
  __int16 v46;
  uint64_t v47;
  _WORD *v48;
  __int16 v49;
  uint64_t v50;
  uint64_t v51;
  void *exception;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void (**v61)(_QWORD);
  uint64_t v62;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  _WORD *v71;
  _QWORD v73[5];
  _OWORD buf[2];
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  _BYTE v84[28];
  uint64_t v85;
  CGRect v86;
  CGRect v87;
  CGRect v88;

  v85 = *MEMORY[0x1E0C80C00];
  sub_1D52EB058();
  v10 = objc_claimAutoreleasedReturnValue();
  v11 = v10;
  if (a1 + 1 >= 2 && os_signpost_enabled(v10))
  {
    LOWORD(buf[0]) = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v11, OS_SIGNPOST_INTERVAL_BEGIN, a1, "CDNGJPEGXLUnpacker::unpackTile", (const char *)&unk_1D548AF1A, (uint8_t *)buf, 2u);
  }

  v73[0] = MEMORY[0x1E0C809B0];
  v73[1] = 3221225472;
  v73[2] = sub_1D5281DBC;
  v73[3] = &unk_1E996F870;
  v73[4] = a1;
  v12 = MEMORY[0x1D82721B4](v73);
  v13 = a3;
  JxlDecoderCreate();
  v71 = (_WORD *)(a1 + 393504);
  if (!JxlThreadParallelRunnerCreate() || JxlDecoderSetParallelRunner())
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  JxlDecoderSubscribeEvents();
  if (JxlDecoderSetInput() || JxlDecoderProcessInput() != 64)
  {
    v53 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](v53, "RawCameraException");
    __cxa_throw(v53, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  memset(v84, 0, sizeof(v84));
  v83 = 0u;
  v82 = 0u;
  v81 = 0u;
  v80 = 0u;
  v79 = 0u;
  v78 = 0u;
  v77 = 0u;
  v76 = 0u;
  v75 = 0u;
  memset(buf, 0, sizeof(buf));
  if (JxlDecoderGetBasicInfo() || JxlDecoderProcessInput() != 256)
  {
    v54 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](v54, "RawCameraException");
    __cxa_throw(v54, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  if (!DWORD1(v75)
    && (JxlDecoderGetColorAsEncodedProfile() || JxlDecoderSetPreferredColorProfile()))
  {
    v59 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](v59, "RawCameraException");
    __cxa_throw(v59, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  if (a9)
    v14 = 3;
  else
    v14 = 4;
  if (JxlDecoderImageOutBufferSize())
  {
    v55 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](v55, "RawCameraException");
    __cxa_throw(v55, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v18 = a3[2];
  v17 = a3[3];
  if (!(2 * v14 * v17 * v18) && (v19 = *a3, v20 = a3[1], v20 == a5[1]) && v19 == *a5)
  {
    v21 = 0;
    x = (double)v19;
    y = (double)v20;
    width = (double)(int)v18;
    v25 = a2;
    height = (double)(int)v17;
  }
  else
  {
    objc_msgSend_dataWithLength_(MEMORY[0x1E0C99DF0], v15, 0, 0, v16);
    v21 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
    v13 = a3;
    v25 = objc_msgSend_mutableBytes(v21, v27, v28, v29, v30);
    v86.origin.x = (double)*a3;
    v86.origin.y = (double)a3[1];
    v86.size.width = (double)a3[2];
    v86.size.height = (double)a3[3];
    v88.origin.x = (double)*a5;
    v88.origin.y = (double)a5[1];
    v88.size.width = (double)a5[2];
    v88.size.height = (double)a5[3];
    v87 = CGRectIntersection(v86, v88);
    x = v87.origin.x;
    y = v87.origin.y;
    width = v87.size.width;
    height = v87.size.height;
  }
  if (JxlDecoderSetImageOutBuffer())
  {
    v56 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](v56, "RawCameraException");
    __cxa_throw(v56, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  if (JxlDecoderSetImageOutBitDepth() || JxlDecoderProcessInput() != 4096)
  {
    v57 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](v57, "RawCameraException");
    __cxa_throw(v57, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  if ((a4 & 1) != 0)
  {
    v58 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](v58, "RawCameraException");
    __cxa_throw(v58, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v61 = (void (**)(_QWORD))v12;
  v62 = v25;
  v60 = v21;
  v66 = (unint64_t)y;
  v65 = (unint64_t)(y + height);
  if ((unint64_t)y < v65)
  {
    v68 = (unint64_t)(*v71 != 1) << 16;
    v31 = (unint64_t)(x + width);
    v67 = (unint64_t)(*v71 != 1) << 17;
    while ((unint64_t)x >= v31)
    {
LABEL_49:
      if (++v66 == v65)
        goto LABEL_50;
    }
    v32 = (unint64_t)x;
    v33 = a2 + (((v66 - v13[1]) * a4) & 0xFFFFFFFFFFFFFFFELL);
    v34 = v62 + 2 * (v66 - a5[1]) * v14 * a5[2];
    while (1)
    {
      v35 = a5;
      v36 = v32 - *a5;
      v37 = v32 - *v13;
      v38 = v36 * v14;
      v39 = (unsigned __int16 *)(v34 + 2 * v36 * v14);
      v40 = *v39;
      if (!*(_BYTE *)(a1 + 393520))
        break;
      v41 = v39[1];
      v42 = v39[2];
      v43 = sub_1D530CBD0(a1);
      v44 = __rev16(v40);
      v45 = __rev16(v41);
      v46 = __rev16(v42);
      if (v43 != 2)
      {
        v44 = v40;
        v45 = v41;
      }
      v47 = v37 * v14;
      v48 = (_WORD *)(v33 + 2 * v47);
      *v48 = v44;
      if (v43 == 2)
        v49 = v46;
      else
        v49 = v42;
      v48[1] = v45;
      v48[2] = v49;
      v13 = a3;
      if ((a9 & 1) != 0)
        goto LABEL_46;
      if (qword_1EFF11DC8 != -1)
        goto LABEL_48;
LABEL_45:
      *(_WORD *)(v33 + 2 * v47 + 6) = HIWORD(xmmword_1EFF11DD0[0x1FFF]);
LABEL_46:
      ++v32;
      a5 = v35;
      if (v31 == v32)
        goto LABEL_49;
    }
    if (qword_1EFF11DC8 != -1)
      dispatch_once(&qword_1EFF11DC8, &unk_1E996FA18);
    v47 = v37 * v14;
    *(_WORD *)(v33 + 2 * v47) = *((_WORD *)xmmword_1EFF11DD0 + *(unsigned __int16 *)(a8 + 2 * v40));
    v50 = *(unsigned __int16 *)(v34 + 2 * v38 + 2);
    if (qword_1EFF11DC8 != -1)
      dispatch_once(&qword_1EFF11DC8, &unk_1E996FA18);
    v13 = a3;
    *(_WORD *)(v33 + 2 * v47 + 2) = *((_WORD *)xmmword_1EFF11DD0 + *(unsigned __int16 *)(a8 + 2 * (v68 | v50)));
    v51 = *(unsigned __int16 *)(v34 + 2 * v38 + 4);
    if (qword_1EFF11DC8 != -1)
      dispatch_once(&qword_1EFF11DC8, &unk_1E996FA18);
    *(_WORD *)(v33 + 2 * v47 + 4) = *((_WORD *)xmmword_1EFF11DD0 + *(unsigned __int16 *)(a8 + 2 * (v67 | v51)));
    if ((a9 & 1) != 0)
      goto LABEL_46;
    if (qword_1EFF11DC8 == -1)
      goto LABEL_45;
LABEL_48:
    dispatch_once(&qword_1EFF11DC8, &unk_1E996FA18);
    goto LABEL_45;
  }
LABEL_50:
  JxlThreadParallelRunnerDestroy();
  JxlDecoderDestroy();

  v61[2](v61);
}

void sub_1D5281CFC(_Unwind_Exception *a1)
{
  void (**v1)(_QWORD);
  void *v2;

  v1[2](v1);
  _Unwind_Resume(a1);
}

void sub_1D5281DBC(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  os_signpost_id_t v4;
  uint8_t v5[16];

  sub_1D52EB058();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = v2;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v3, OS_SIGNPOST_INTERVAL_END, v4, "CDNGJPEGXLUnpacker::unpackTile", (const char *)&unk_1D548AF1A, v5, 2u);
  }

}

void sub_1D5281E40(os_signpost_id_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  NSObject *v6;
  NSObject *v7;
  void (**v8)(_QWORD);
  int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  void *v18;
  int v19;
  unsigned int v20;
  void *exception;
  void *v22;
  NSObject *v25;
  NSObject *group;
  _QWORD block[9];
  int v28;
  __int128 v29;
  uint8_t buf[16];
  int v31;
  _QWORD v32[6];

  sub_1D52EB058();
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = v6;
  if (a1 + 1 >= 2 && os_signpost_enabled(v6))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v7, OS_SIGNPOST_INTERVAL_BEGIN, a1, "CDNGJPEGXLUnpacker", (const char *)&unk_1D548AF1A, buf, 2u);
  }

  v32[0] = MEMORY[0x1E0C809B0];
  v32[1] = 3221225472;
  v32[2] = sub_1D528226C;
  v32[3] = &unk_1E996F870;
  v32[4] = a1;
  v8 = (void (**)(_QWORD))MEMORY[0x1D82721B4](v32);
  v10 = *(_DWORD *)(a1 + 44);
  v9 = *(_DWORD *)(a1 + 48);
  v12 = *(_DWORD *)(a1 + 224);
  v11 = *(_DWORD *)(a1 + 228);
  *(_QWORD *)buf = (uint64_t)(*(_QWORD *)(a1 + 240) - *(_QWORD *)(a1 + 232)) >> 2;
  sub_1D5282FE0(&v31, (unint64_t *)buf);
  if (*(_QWORD *)(a1 + 240) - *(_QWORD *)(a1 + 232) != *(_QWORD *)(a1 + 264) - *(_QWORD *)(a1 + 256)
    || (v10 - 100000) < 0xFFFE7961
    || (v9 - 100000) < 0xFFFE7961
    || v12 - 100000 < 0xFFFE7961
    || v11 - 100000 < 0xFFFE7961
    || (v13 = v31, v31 >= 20000))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  if ((v9 + v11 - 1) / v11 * ((v10 + v12 - 1) / v12) != v31)
  {
    v22 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](v22, "RawCameraException");
    __cxa_throw(v22, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  group = dispatch_group_create();
  v25 = dispatch_queue_create("JPEGXL DNG Tile Unpacker Queue", MEMORY[0x1E0C80D50]);
  if ((_DWORD)v13)
  {
    v14 = 0;
    v15 = 0;
    v16 = 0;
    v17 = 4 * v13;
    do
    {
      *(_DWORD *)buf = v15;
      *(_DWORD *)&buf[4] = v16;
      *(_DWORD *)&buf[8] = v12;
      *(_DWORD *)&buf[12] = v11;
      if (sub_1D53ADDB8((int *)buf, a3))
      {
        v18 = sub_1D528136C(a1, *(_DWORD *)(*(_QWORD *)(a1 + 232) + v14), *(_DWORD *)(*(_QWORD *)(a1 + 256) + v14));
        if (v18)
        {
          v19 = *(_DWORD *)(*(_QWORD *)(a1 + 256) + v14);
          block[0] = MEMORY[0x1E0C809B0];
          block[1] = 3221225472;
          block[2] = sub_1D52822F0;
          block[3] = &unk_1E996F890;
          block[4] = a1;
          block[5] = v18;
          v28 = v19;
          block[6] = a2;
          block[7] = a3;
          block[8] = a4;
          v29 = *(_OWORD *)buf;
          dispatch_group_async(group, v25, block);
        }
      }
      if ((int)(v15 + v12) >= v10)
        v20 = v11;
      else
        v20 = 0;
      v16 += v20;
      if ((int)(v15 + v12) >= v10)
        v15 = 0;
      else
        v15 += v12;
      v14 += 4;
    }
    while (v17 != v14);
  }
  dispatch_group_wait(group, 0xFFFFFFFFFFFFFFFFLL);

  v8[2](v8);
}

void sub_1D52821F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1D528226C(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  os_signpost_id_t v4;
  uint8_t v5[16];

  sub_1D52EB058();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = v2;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v3, OS_SIGNPOST_INTERVAL_END, v4, "CDNGJPEGXLUnpacker", (const char *)&unk_1D548AF1A, v5, 2u);
  }

}

void sub_1D52822F0(uint64_t a1)
{
  os_signpost_id_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = v3 + *(unsigned int *)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(int **)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 64);
  v8 = (int *)(a1 + 76);
  v9 = sub_1D5280E88(v2);
  sub_1D5281434(v2, v5, v6, v7, v8, v3, v4, v9, 0);
  free(*(void **)(a1 + 40));
}

void sub_1D5282378(os_signpost_id_t a1)
{
  NSObject *v2;
  NSObject *v3;
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  void *v17;
  int v18;
  unsigned int v19;
  void *exception;
  void *v21;
  void (**v22)(_QWORD);
  int v23;
  NSObject *group;
  int v25;
  _QWORD block[7];
  int v27;
  unsigned int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  uint8_t buf[8];
  unsigned int v36;
  _QWORD v37[6];

  sub_1D52EB058();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (a1 + 1 >= 2 && os_signpost_enabled(v2))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v3, OS_SIGNPOST_INTERVAL_BEGIN, a1, "CDNGJPEGXLUnpacker", (const char *)&unk_1D548AF1A, buf, 2u);
  }

  v37[0] = MEMORY[0x1E0C809B0];
  v37[1] = 3221225472;
  v37[2] = sub_1D52827A8;
  v37[3] = &unk_1E996F870;
  v37[4] = a1;
  v4 = MEMORY[0x1D82721B4](v37);
  v5 = *(_DWORD *)(a1 + 44);
  v25 = *(_DWORD *)(a1 + 48);
  v7 = *(_DWORD *)(a1 + 224);
  v6 = *(_DWORD *)(a1 + 228);
  *(_QWORD *)buf = (uint64_t)(*(_QWORD *)(a1 + 240) - *(_QWORD *)(a1 + 232)) >> 2;
  sub_1D528304C(&v36, (unint64_t *)buf);
  v8 = v36;
  v23 = (*(uint64_t (**)(os_signpost_id_t))(*(_QWORD *)a1 + 40))(a1);
  if (*(_QWORD *)(a1 + 240) - *(_QWORD *)(a1 + 232) != *(_QWORD *)(a1 + 264) - *(_QWORD *)(a1 + 256)
    || v5 - 100000 < 0xFFFE7961
    || (v25 - 100000) < 0xFFFE7961
    || v7 - 100000 < 0xFFFE7961
    || v6 - 100000 < 0xFFFE7961
    || v8 >> 5 >= 0x271)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  if ((v25 + v6 - 1) / v6 * ((v5 + v7 - 1) / v7) != (_DWORD)v8)
  {
    v21 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](v21, "RawCameraException");
    __cxa_throw(v21, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v22 = (void (**)(_QWORD))v4;
  group = dispatch_group_create();
  v9 = dispatch_queue_create("JPEGXL DNG Tile Unpacker Queue", MEMORY[0x1E0C80D50]);
  v10 = sub_1D530B618(a1);
  if ((_DWORD)v8)
  {
    v11 = v10;
    v12 = 0;
    v13 = v8;
    v14 = 0;
    v15 = 0;
    v16 = 4 * v13;
    do
    {
      v17 = sub_1D528136C(a1, *(_DWORD *)(*(_QWORD *)(a1 + 232) + v12), *(_DWORD *)(*(_QWORD *)(a1 + 256) + v12));
      if (v17)
      {
        v18 = *(_DWORD *)(*(_QWORD *)(a1 + 256) + v12);
        block[0] = MEMORY[0x1E0C809B0];
        block[1] = 3221225472;
        block[2] = sub_1D528282C;
        block[3] = &unk_1E996F8B0;
        block[4] = a1;
        block[5] = v17;
        block[6] = v11;
        v27 = v18;
        v28 = v5;
        v29 = v25;
        v30 = v23;
        v31 = v14;
        v32 = v15;
        v33 = v7;
        v34 = v6;
        dispatch_group_async(group, v9, block);
      }
      v12 += 4;
      if (v14 + v7 >= v5)
        v19 = v6;
      else
        v19 = 0;
      v15 += v19;
      if (v14 + v7 >= v5)
        v14 = 0;
      else
        v14 += v7;
    }
    while (v16 != v12);
  }
  dispatch_group_wait(group, 0xFFFFFFFFFFFFFFFFLL);

  v22[2](v22);
}

void sub_1D5282734(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1D52827A8(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  os_signpost_id_t v4;
  uint8_t v5[16];

  sub_1D52EB058();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = v2;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v3, OS_SIGNPOST_INTERVAL_END, v4, "CDNGJPEGXLUnpacker", (const char *)&unk_1D548AF1A, v5, 2u);
  }

}

void sub_1D528282C(uint64_t a1)
{
  os_signpost_id_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  int v15;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_DWORD *)(a1 + 60);
  v4 = *(_QWORD *)(a1 + 40) + *(unsigned int *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(_DWORD *)(a1 + 64);
  v14 = 0;
  sub_1D5282DF0(&v15, v3, v6);
  v7 = 2 * (*(_DWORD *)(a1 + 68) * *(_DWORD *)(a1 + 60));
  v8 = *(_DWORD *)(a1 + 80);
  v9 = *(_DWORD *)(a1 + 84);
  sub_1D5282DF0(&v12, *(_DWORD *)(a1 + 72), *(_DWORD *)(a1 + 76));
  sub_1D5282DF0(&v13, v8, v9);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = sub_1D5280E88(v2);
  sub_1D5281434(v2, v5, (int *)&v14, v7, &v12, v10, v4, v11, 1);
  free(*(void **)(a1 + 40));
}

_QWORD *sub_1D5282900(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void **v6;

  *(_QWORD *)a1 = off_1E996F8E0;
  v6 = (void **)(a1 + 393528);
  sub_1D5282E44(&v6);
  v2 = *(void **)(a1 + 256);
  if (v2)
  {
    *(_QWORD *)(a1 + 264) = v2;
    operator delete(v2);
  }
  v3 = *(void **)(a1 + 232);
  if (v3)
  {
    *(_QWORD *)(a1 + 240) = v3;
    operator delete(v3);
  }
  *(_QWORD *)a1 = &unk_1E998DB60;
  v4 = *(void **)(a1 + 192);
  if (v4)
  {
    *(_QWORD *)(a1 + 200) = v4;
    operator delete(v4);
  }
  return sub_1D5282F0C((_QWORD *)a1);
}

uint64_t sub_1D528298C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  _QWORD *v5;
  void **v7;

  *(_QWORD *)a1 = off_1E996F8E0;
  v7 = (void **)(a1 + 393528);
  sub_1D5282E44(&v7);
  v2 = *(void **)(a1 + 256);
  if (v2)
  {
    *(_QWORD *)(a1 + 264) = v2;
    operator delete(v2);
  }
  v3 = *(void **)(a1 + 232);
  if (v3)
  {
    *(_QWORD *)(a1 + 240) = v3;
    operator delete(v3);
  }
  *(_QWORD *)a1 = &unk_1E998DB60;
  v4 = *(void **)(a1 + 192);
  if (v4)
  {
    *(_QWORD *)(a1 + 200) = v4;
    operator delete(v4);
  }
  v5 = sub_1D5282F0C((_QWORD *)a1);
  return MEMORY[0x1D8271ADC](v5, 0x10B1C40CA2D56E9);
}

uint64_t sub_1D5282A2C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 222);
}

uint64_t sub_1D5282A34(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 220);
}

uint64_t sub_1D5282A3C(uint64_t result, __int16 a2)
{
  *(_WORD *)(result + 220) = a2;
  return result;
}

char *sub_1D5282A44(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  void **v12;
  char *v13;
  _BYTE *v14;
  unint64_t v15;
  char *v16;
  size_t v17;
  void *v18;
  char *v19;

  v7 = result;
  v8 = *((_QWORD *)result + 2);
  v9 = *(char **)result;
  if (a4 > (v8 - *(_QWORD *)result) >> 2)
  {
    if (v9)
    {
      *((_QWORD *)result + 1) = v9;
      operator delete(v9);
      v8 = 0;
      *v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 >> 62)
      sub_1D5282B8C();
    v10 = v8 >> 1;
    if (v8 >> 1 <= a4)
      v10 = a4;
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFFCLL)
      v11 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v11 = v10;
    result = sub_1D5282B4C(v7, v11);
    v13 = (char *)v7[1];
    v12 = (void **)(v7 + 1);
    v9 = v13;
LABEL_16:
    v17 = a3 - (_QWORD)__src;
    if (v17)
    {
      v18 = v9;
      v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  v12 = (void **)(result + 8);
  v14 = (_BYTE *)*((_QWORD *)result + 1);
  v15 = (v14 - v9) >> 2;
  if (v15 >= a4)
    goto LABEL_16;
  v16 = &__src[4 * v15];
  if (v14 != v9)
  {
    result = (char *)memmove(*(void **)result, __src, v14 - v9);
    v9 = (char *)*v12;
  }
  v17 = a3 - (_QWORD)v16;
  if (v17)
  {
    v18 = v9;
    v19 = v16;
LABEL_18:
    result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  *v12 = &v9[v17];
  return result;
}

char *sub_1D5282B4C(_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >> 62)
    sub_1D5282B8C();
  result = (char *)sub_1D5282BA0((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[4 * v4];
  return result;
}

void sub_1D5282B8C()
{
  sub_1D5282BD4("vector");
}

void *sub_1D5282BA0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62)
    sub_1D5282C48();
  return operator new(4 * a2);
}

void sub_1D5282BD4(const char *a1)
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_1D5282C24(exception, a1);
  __cxa_throw(exception, (struct type_info *)off_1E996E9C8, MEMORY[0x1E0DE42D0]);
}

void sub_1D5282C10(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_1D5282C24(std::logic_error *a1, const char *a2)
{
  std::logic_error *result;

  result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E0DE5020] + 16);
  return result;
}

void sub_1D5282C48()
{
  std::bad_array_new_length *exception;
  std::bad_array_new_length *v1;

  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x1E0DE4E98], MEMORY[0x1E0DE4390]);
}

_QWORD *sub_1D5282C70(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = sub_1D5282CE8(result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1D5282CCC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_1D5282CE8(_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >> 61)
    sub_1D5282B8C();
  result = (char *)sub_1D5282D28((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[8 * v4];
  return result;
}

void *sub_1D5282D28(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61)
    sub_1D5282C48();
  return operator new(8 * a2);
}

int64x2_t sub_1D5282D5C()
{
  uint64_t v0;
  int64x2_t result;
  int64x2_t v2;
  int64x2_t v3;
  float32x4_t v4;
  int64x2_t v5;
  int64x2_t v6;

  v0 = 0;
  result = (int64x2_t)xmmword_1D5447F80;
  v2 = (int64x2_t)xmmword_1D5447F90;
  v3 = (int64x2_t)xmmword_1D5447FA0;
  v4 = (float32x4_t)vdupq_n_s32(0x477FFF00u);
  v5 = (int64x2_t)xmmword_1D5447F70;
  v6 = vdupq_n_s64(8uLL);
  do
  {
    xmmword_1EFF11DD0[v0] = (__int128)vcvt_hight_f16_f32((int16x4_t)vcvt_f16_f32(vdivq_f32(vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vcvtq_f64_u64((uint64x2_t)v5)), vcvtq_f64_u64((uint64x2_t)v3)), v4)), vdivq_f32(vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vcvtq_f64_u64((uint64x2_t)v2)), vcvtq_f64_u64((uint64x2_t)result)), v4));
    v2 = vaddq_s64(v2, v6);
    v3 = vaddq_s64(v3, v6);
    v5 = vaddq_s64(v5, v6);
    result = vaddq_s64(result, v6);
    ++v0;
  }
  while (v0 != 0x2000);
  return result;
}

_DWORD *sub_1D5282DF0(_DWORD *a1, int a2, int a3)
{
  int v5;
  int v6;
  int v7;

  v6 = a3;
  v7 = a2;
  sub_1D5282F74(&v5, &v7);
  *a1 = v5;
  sub_1D5282F74(&v5, &v6);
  a1[1] = v5;
  return a1;
}

void sub_1D5282E44(void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = v2;
    if ((void *)v4 != v2)
    {
      do
        v4 = sub_1D5282EB4(v4 - 16);
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t sub_1D5282EB4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

_QWORD *sub_1D5282F0C(_QWORD *a1)
{
  void *v2;
  std::__shared_weak_count *v3;

  *a1 = off_1E9978008;
  sub_1D5282EB4((uint64_t)(a1 + 19));
  sub_1D5282EB4((uint64_t)(a1 + 17));
  v2 = (void *)a1[14];
  if (v2)
  {
    a1[15] = v2;
    operator delete(v2);
  }
  sub_1D5282EB4((uint64_t)(a1 + 11));
  sub_1D5282EB4((uint64_t)(a1 + 3));
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

int *sub_1D5282F74(int *result, int *a2)
{
  int v2;
  void *exception;

  *result = 0;
  v2 = *a2;
  *result = *a2;
  if (v2 < 0)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return result;
}

void sub_1D5282FCC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_DWORD *sub_1D5282FE0(_DWORD *result, unint64_t *a2)
{
  unint64_t v2;
  void *exception;

  v2 = *a2;
  *result = *a2;
  if (v2 >> 31)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return result;
}

void sub_1D5283038(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_DWORD *sub_1D528304C(_DWORD *result, unint64_t *a2)
{
  unint64_t v2;
  void *exception;

  v2 = *a2;
  *result = *a2;
  if (HIDWORD(v2))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return result;
}

void sub_1D52830A4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

id sub_1D52830B8(void *a1)
{
  id v1;
  uint64_t v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  const char *v41;
  uint64_t v42;

  v1 = a1;
  v2 = objc_opt_class();
  objc_msgSend_filterWithDefaultsForClass_(RAWFilter, v3, v2, v4, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v1, v7, (uint64_t)CFSTR("inputVersion"), v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = objc_msgSend_intValue(v10, v11, v12, v13, v14);

  objc_msgSend_array(MEMORY[0x1E0C99DE8], v16, v17, v18, v19);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = v20;
  if (v15 <= 6)
  {
    objc_msgSend_addObject_(v20, v21, (uint64_t)CFSTR("inputBaselineExposure"), v23, v24);
LABEL_4:
    objc_msgSend_addObjectsFromArray_(v25, v21, (uint64_t)&unk_1E99C81A8, v23, v24);
    goto LABEL_5;
  }
  if (v15 == 7)
    goto LABEL_4;
LABEL_5:
  v26 = (void *)objc_msgSend_mutableCopy(v1, v21, v22, v23, v24);
  objc_msgSend_removeObjectsForKeys_(v26, v27, (uint64_t)v25, v28, v29);
  if (v15 >= 8)
  {
    objc_msgSend_objectForKeyedSubscript_(v1, v30, (uint64_t)CFSTR("inputIsGenericDNG"), v31, v32);
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    v38 = objc_msgSend_BOOLValue(v33, v34, v35, v36, v37);

    if (v38)
      objc_msgSend_setObject_forKeyedSubscript_(v26, v30, (uint64_t)&unk_1E99C8718, (uint64_t)CFSTR("inputVersion"), v32);
  }
  v39 = objc_msgSend_takeAttributesFromDictionary_(v6, v30, (uint64_t)v26, v31, v32);
  v40 = sub_1D543E528(v39);
  objc_msgSend_setValue_forKey_(v6, v41, v40, (uint64_t)CFSTR("inputColorSpace"), v42);

  return v6;
}

void sub_1D528320C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v6 = v5;

  _Unwind_Resume(a1);
}

id sub_1D528325C(void *a1)
{
  id v1;
  uint64_t v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;

  v1 = a1;
  v2 = objc_opt_class();
  objc_msgSend_filterWithDefaultsForClass_(RAWFilter, v3, v2, v4, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v1, v7, (uint64_t)CFSTR("inputVersion"), v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = objc_msgSend_intValue(v10, v11, v12, v13, v14);

  objc_msgSend_array(MEMORY[0x1E0C99DE8], v16, v17, v18, v19);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = v20;
  if (v15 <= 7)
    objc_msgSend_addObjectsFromArray_(v20, v21, (uint64_t)&unk_1E99C81C0, v23, v24);
  v26 = (void *)objc_msgSend_mutableCopy(v1, v21, v22, v23, v24);
  objc_msgSend_removeObjectsForKeys_(v26, v27, (uint64_t)v25, v28, v29);
  objc_msgSend_takeAttributesFromDictionary_(v6, v30, (uint64_t)v26, v31, v32);

  return v6;
}

void sub_1D528332C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

id sub_1D5283370(void *a1)
{
  id v1;
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  const char *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  const char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  const char *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  const char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  const char *v66;
  uint64_t v67;
  const char *v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  const char *v72;
  uint64_t v73;
  uint64_t v74;
  const char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  const char *v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  const char *v85;
  uint64_t v86;
  const char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  const char *v91;
  uint64_t v92;
  const char *v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  const char *v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  const char *v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  const char *v106;
  uint64_t v107;
  const char *v108;
  uint64_t v109;
  const char *v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  const char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  const char *v118;
  uint64_t v119;
  const char *v120;
  uint64_t v121;
  uint64_t v122;

  v1 = a1;
  objc_msgSend_array(MEMORY[0x1E0C99DE8], v2, v3, v4, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v1, v7, (uint64_t)CFSTR("inputGainMapExecute"), v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend_BOOLValue(v10, v11, v12, v13, v14))
  {
    v18 = objc_opt_class();
    objc_msgSend_filterWithDefaultsForClass_(RAWFilter, v19, v18, v20, v21);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_takeAttributesFromDictionary_(v22, v23, (uint64_t)v1, v24, v25);
    objc_msgSend_addObject_(v6, v26, (uint64_t)v22, v27, v28);

  }
  objc_msgSend_objectForKeyedSubscript_(v1, v15, (uint64_t)CFSTR("inputVignetteExecute"), v16, v17);
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend_BOOLValue(v29, v30, v31, v32, v33))
  {
    v37 = objc_opt_class();
    objc_msgSend_filterWithDefaultsForClass_(RAWFilter, v38, v37, v39, v40);
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_takeAttributesFromDictionary_(v41, v42, (uint64_t)v1, v43, v44);
    objc_msgSend_addObject_(v6, v45, (uint64_t)v41, v46, v47);

  }
  objc_msgSend_objectForKeyedSubscript_(v1, v34, (uint64_t)CFSTR("inputVignetteTableExecute"), v35, v36);
  v48 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend_BOOLValue(v48, v49, v50, v51, v52))
  {
    v56 = objc_opt_class();
    objc_msgSend_filterWithDefaultsForClass_(RAWFilter, v57, v56, v58, v59);
    v60 = (void *)objc_claimAutoreleasedReturnValue();
    v64 = objc_msgSend_takeAttributesFromDictionary_(v60, v61, (uint64_t)v1, v62, v63);
    v65 = sub_1D543E528(v64);
    objc_msgSend_setValue_forKey_(v60, v66, v65, (uint64_t)CFSTR("inputColorSpace"), v67);
    objc_msgSend_addObject_(v6, v68, (uint64_t)v60, v69, v70);

  }
  objc_msgSend_objectForKeyedSubscript_(v1, v53, (uint64_t)CFSTR("inputLDCExecuteFlags"), v54, v55);
  v71 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v1, v72, (uint64_t)CFSTR("inputScales"), v73, v74);
  v79 = (void *)objc_claimAutoreleasedReturnValue();
  if (v79 && objc_msgSend_intValue(v71, v75, v76, v77, v78))
  {
    v80 = objc_opt_class();
    objc_msgSend_filterWithDefaultsForClass_(RAWFilter, v81, v80, v82, v83);
    v84 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setValue_forKey_(v84, v85, (uint64_t)v71, (uint64_t)CFSTR("inputLDCExecuteFlags"), v86);
    v89 = objc_msgSend_setValue_forKey_(v84, v87, (uint64_t)v79, (uint64_t)CFSTR("inputScales"), v88);
    v90 = sub_1D543E528(v89);
    objc_msgSend_setValue_forKey_(v84, v91, v90, (uint64_t)CFSTR("inputColorSpace"), v92);
    objc_msgSend_addObject_(v6, v93, (uint64_t)v84, v94, v95);

  }
  objc_msgSend_objectForKeyedSubscript_(v1, v75, (uint64_t)CFSTR("inputKr"), v77, v78);
  v96 = (void *)objc_claimAutoreleasedReturnValue();
  if (v96)
  {
    v97 = objc_opt_class();
    objc_msgSend_filterWithDefaultsForClass_(RAWFilter, v98, v97, v99, v100);
    v101 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_objectForKeyedSubscript_(v1, v102, (uint64_t)CFSTR("inputCenter"), v103, v104);
    v105 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setValue_forKey_(v101, v106, (uint64_t)v105, (uint64_t)CFSTR("inputCenter"), v107);

    objc_msgSend_setValue_forKey_(v101, v108, (uint64_t)v96, (uint64_t)CFSTR("inputKr"), v109);
    objc_msgSend_objectForKeyedSubscript_(v1, v110, (uint64_t)CFSTR("inputKt"), v111, v112);
    v113 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setValue_forKey_(v101, v114, (uint64_t)v113, (uint64_t)CFSTR("inputKt"), v115);

    v117 = sub_1D543E528(v116);
    objc_msgSend_setValue_forKey_(v101, v118, v117, (uint64_t)CFSTR("inputColorSpace"), v119);
    objc_msgSend_addObject_(v6, v120, (uint64_t)v101, v121, v122);

  }
  return v6;
}

void sub_1D52836A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

id sub_1D5283758(int a1, void *a2, int a3, int a4, _QWORD **a5, void *a6)
{
  id v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  const char *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  const char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  const char *v52;
  uint64_t v53;
  uint64_t v54;
  const char *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  void *v59;
  const char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  double v64;
  double v65;
  const char *v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  int v70;
  void *v71;
  const char *v72;
  uint64_t v73;
  const char *v74;
  uint64_t v75;
  const char *v76;
  uint64_t v77;
  uint64_t v78;
  void *v80;
  const char *v81;
  uint64_t v82;
  void *v83;
  const char *v84;
  uint64_t v85;
  const char *v86;
  uint64_t v87;
  uint64_t v88;
  const char *v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  void *v93;
  const char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  double v98;
  double v99;
  const char *v100;
  uint64_t v101;
  uint64_t v102;
  const char *v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  void *v107;
  const char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  double v112;
  double v113;
  const char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  void *v119;
  const char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void *v124;
  const char *v125;
  uint64_t v126;
  void *v127;
  const char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  const char *v132;
  uint64_t v133;
  uint64_t v134;
  void *v135;
  const char *v136;
  uint64_t v137;
  uint64_t v138;
  const char *v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  const char *v143;
  uint64_t v144;
  uint64_t v145;
  void *v146;
  const char *v147;
  uint64_t v148;
  uint64_t v149;
  CFTypeRef v150;
  CFTypeRef v151;
  uint64_t v152;
  const char *v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  const char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  const char *v161;
  uint64_t v162;
  uint64_t v163;
  const char *v164;
  uint64_t v165;
  uint64_t v166;
  const char *v167;
  uint64_t v168;
  uint64_t v169;
  const char *v170;
  uint64_t v171;
  uint64_t v172;
  void *v173;
  const char *v174;
  uint64_t v175;
  uint64_t v176;
  const char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  const char *v181;
  uint64_t v182;
  uint64_t v183;
  void *v184;
  const char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  const char *v189;
  uint64_t v190;
  uint64_t v191;
  void *v192;
  const char *v193;
  uint64_t v194;
  uint64_t v195;
  const char *v196;
  uint64_t v197;
  const char *v198;
  uint64_t v199;
  uint64_t v200;
  const char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  const char *v206;
  uint64_t v207;
  uint64_t v208;
  void *v209;
  const char *v210;
  uint64_t v211;
  void *v212;
  const char *v213;
  uint64_t v214;
  uint64_t v215;
  void *v216;
  const char *v217;
  uint64_t v218;
  uint64_t v219;
  int v220;
  uint64_t v221;
  const char *v222;
  uint64_t v223;
  uint64_t v224;
  void *v225;
  CFTypeRef v226;
  const char *v227;
  uint64_t v228;
  const char *v229;
  uint64_t v230;
  uint64_t v231;
  const char *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  const char *v236;
  uint64_t v237;
  uint64_t v238;
  void *v239;
  const char *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  const char *v244;
  uint64_t v245;
  const char *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  const char *v250;
  uint64_t v251;
  uint64_t v252;
  void *v253;
  const char *v254;
  uint64_t v255;
  uint64_t v256;
  char *v257;
  const char *v258;
  uint64_t v259;
  char *v260;
  const char *v261;
  uint64_t v262;
  uint64_t v263;
  const char *v264;
  uint64_t v265;
  uint64_t v266;
  void *v267;
  void *v269;
  void *context;
  id v271;
  void *v272;
  CGAffineTransform v273;
  _BYTE v274[24];
  uint64_t v275;
  uint64_t v276;

  v11 = a2;
  v271 = a6;
  v272 = v11;
  sub_1D528419C((uint64_t)v274, a5);
  objc_msgSend_array(MEMORY[0x1E0C99DE8], v12, v13, v14, v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  context = (void *)MEMORY[0x1D8272058]();
  v21 = (void *)objc_msgSend_mutableCopy(v11, v17, v18, v19, v20);
  v22 = (void *)MEMORY[0x1D82721B4](v271);
  objc_msgSend_setObject_forKey_(v21, v23, (uint64_t)v22, (uint64_t)CFSTR("valueBlock"), v24);

  objc_msgSend_objectForKeyedSubscript_(v21, v25, (uint64_t)CFSTR("inputVersion"), v26, v27);
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  v33 = objc_msgSend_intValue(v28, v29, v30, v31, v32);

  objc_msgSend_objectForKeyedSubscript_(v21, v34, (uint64_t)CFSTR("inputLinearized"), v35, v36);
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  v42 = objc_msgSend_intValue(v37, v38, v39, v40, v41);

  objc_msgSend_objectForKeyedSubscript_(v21, v43, (uint64_t)CFSTR("inputIsNoiseReductionEnabled"), v44, v45);
  v46 = (void *)objc_claimAutoreleasedReturnValue();
  v51 = objc_msgSend_BOOLValue(v46, v47, v48, v49, v50);

  objc_msgSend_objectForKeyedSubscript_(v21, v52, (uint64_t)CFSTR("inputScaleFactor"), v53, v54);
  v58 = (void *)objc_claimAutoreleasedReturnValue();
  if (v58)
  {
    objc_msgSend_objectForKeyedSubscript_(v21, v55, (uint64_t)CFSTR("inputScaleFactor"), v56, v57);
    v59 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_doubleValue(v59, v60, v61, v62, v63);
    v65 = v64;

  }
  else
  {
    v65 = 1.0;
  }

  v69 = a1 ^ 1;
  if (a4 == 3)
    v70 = a1;
  else
    v70 = a1 ^ 1;
  if (a3 != 3)
    v70 = 0;
  if (a4)
  {
    if (a3 && a4 == 1)
    {
      if (v70)
        goto LABEL_13;
LABEL_26:
      if (!v69)
        goto LABEL_17;
      goto LABEL_27;
    }
    if ((a3 & 0xFFFFFFFE) == 2 && (a4 & 0xFFFFFFFE) == 2)
      v69 = a1;
    else
      v69 = 0;
  }
  a1 = v69;
  if (!v70)
    goto LABEL_26;
LABEL_13:
  sub_1D528325C(v21);
  v71 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setValue_forKey_(v71, v72, 0, (uint64_t)CFSTR("inputCropRect"), v73);
  if (v65 >= 1.0)
    objc_msgSend_setValue_forKey_(v71, v74, MEMORY[0x1E0C9AAA0], (uint64_t)CFSTR("inputDraftMode"), v75);
  else
    objc_msgSend_setValue_forKey_(v71, v74, MEMORY[0x1E0C9AAB0], (uint64_t)CFSTR("inputDraftMode"), v75);
  objc_msgSend_addObject_(v16, v76, (uint64_t)v71, v77, v78);

  if (!v69)
  {
LABEL_17:
    if (!a1)
      goto LABEL_65;
    goto LABEL_43;
  }
LABEL_27:
  if (v65 < 1.0)
  {
    objc_msgSend_filterWithName_(MEMORY[0x1E0C9DDB8], v66, (uint64_t)CFSTR("CIAffineTransform"), v67, v68);
    v80 = (void *)objc_claimAutoreleasedReturnValue();
    memset(&v273, 0, sizeof(v273));
    CGAffineTransformMakeScale(&v273, v65, v65);
    objc_msgSend_valueWithBytes_objCType_(MEMORY[0x1E0CB3B18], v81, (uint64_t)&v273, (uint64_t)"{CGAffineTransform=dddddd}", v82);
    v83 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setValue_forKey_(v80, v84, (uint64_t)v83, (uint64_t)CFSTR("inputTransform"), v85);

    objc_msgSend_addObject_(v16, v86, (uint64_t)v80, v87, v88);
  }
  objc_msgSend_objectForKeyedSubscript_(v21, v66, (uint64_t)CFSTR("inputXScale"), v67, v68);
  v92 = (void *)objc_claimAutoreleasedReturnValue();
  if (v92)
  {
    objc_msgSend_objectForKeyedSubscript_(v21, v89, (uint64_t)CFSTR("inputXScale"), v90, v91);
    v93 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_doubleValue(v93, v94, v95, v96, v97);
    v99 = v98;

  }
  else
  {
    v99 = 1.0;
  }

  objc_msgSend_objectForKeyedSubscript_(v21, v100, (uint64_t)CFSTR("inputYScale"), v101, v102);
  v106 = (void *)objc_claimAutoreleasedReturnValue();
  if (v106)
  {
    objc_msgSend_objectForKeyedSubscript_(v21, v103, (uint64_t)CFSTR("inputYScale"), v104, v105);
    v107 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_doubleValue(v107, v108, v109, v110, v111);
    v113 = v112;

  }
  else
  {
    v113 = 1.0;
  }

  if (fabs(v99 + -1.0) > 0.01 || fabs(v113 + -1.0) > 0.01)
  {
    v118 = (void *)MEMORY[0x1E0C9DDB8];
    objc_msgSend_numberWithDouble_(MEMORY[0x1E0CB37E8], v114, v115, v116, v117, v113);
    v119 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_numberWithDouble_(MEMORY[0x1E0CB37E8], v120, v121, v122, v123, v99 / v113);
    v124 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_filterWithName_keysAndValues_(v118, v125, (uint64_t)CFSTR("CILanczosScaleTransform"), (uint64_t)CFSTR("inputScale"), v126, v119, CFSTR("inputAspectRatio"), v124, 0);
    v127 = (void *)objc_claimAutoreleasedReturnValue();

    if (v127)
      objc_msgSend_addObject_(v16, v128, (uint64_t)v127, v129, v130);

  }
  v131 = objc_opt_class();
  objc_msgSend_filterWithDefaultsForClass_(RAWFilter, v132, v131, v133, v134);
  v135 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_takeAttributesFromDictionary_(v135, v136, (uint64_t)v21, v137, v138);
  objc_msgSend_addObject_(v16, v139, (uint64_t)v135, v140, v141);

  if (v51)
  {
    sub_1D52830B8(v21);
    v142 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_addObject_(v16, v143, (uint64_t)v142, v144, v145);

  }
  sub_1D5283370(v21);
  v146 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObjectsFromArray_(v16, v147, (uint64_t)v146, v148, v149);

  if (a1)
  {
LABEL_43:
    if (v33 < 7)
      v150 = sub_1D543E884();
    else
      v150 = sub_1D543E794();
    v151 = v150;
    v152 = objc_opt_class();
    objc_msgSend_filterWithDefaultsForClass_(RAWFilter, v153, v152, v154, v155);
    v156 = (void *)objc_claimAutoreleasedReturnValue();
    v269 = (void *)objc_msgSend_mutableCopy(v21, v157, v158, v159, v160);
    if (!v42)
      objc_msgSend_removeObjectForKey_(v269, v161, (uint64_t)CFSTR("inputBlacks"), v162, v163);
    objc_msgSend_takeAttributesFromDictionary_(v156, v161, (uint64_t)v269, v162, v163);
    if (!v42)
    {
      objc_msgSend_setValue_forKey_(v156, v164, (uint64_t)&unk_1E99C8730, (uint64_t)CFSTR("inputRange"), v166);
      objc_msgSend_setValue_forKey_(v156, v167, (uint64_t)&unk_1E99CC108, (uint64_t)CFSTR("inputFactor"), v168);
    }
    objc_msgSend_addObject_(v16, v164, (uint64_t)v156, v165, v166);
    v169 = objc_opt_class();
    objc_msgSend_filterWithDefaultsForClass_(RAWFilter, v170, v169, v171, v172);
    v173 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend_takeAttributesFromDictionary_(v173, v174, (uint64_t)v21, v175, v176);
    objc_msgSend_addObject_(v16, v177, (uint64_t)v173, v178, v179);
    v180 = objc_opt_class();
    objc_msgSend_filterWithDefaultsForClass_(RAWFilter, v181, v180, v182, v183);
    v184 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_addObject_(v16, v185, (uint64_t)v184, v186, v187);

    v188 = objc_opt_class();
    objc_msgSend_filterWithDefaultsForClass_(RAWFilter, v189, v188, v190, v191);
    v192 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend_takeAttributesFromDictionary_(v192, v193, (uint64_t)v21, v194, v195);
    objc_msgSend_setValue_forKey_(v192, v196, (uint64_t)v151, (uint64_t)CFSTR("inputColorSpace"), v197);
    objc_msgSend_addObject_(v16, v198, (uint64_t)v192, v199, v200);
    if (v33 < 9)
    {
      v212 = v192;
    }
    else
    {
      v205 = objc_opt_class();
      objc_msgSend_filterWithDefaultsForClass_(RAWFilter, v206, v205, v207, v208);
      v209 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend_setValue_forKey_(v209, v210, (uint64_t)v151, (uint64_t)CFSTR("inputColorSpace"), v211);
      v212 = v209;
      objc_msgSend_addObject_(v16, v213, (uint64_t)v209, v214, v215);
    }
    objc_msgSend_allKeys(v21, v201, v202, v203, v204);
    v216 = (void *)objc_claimAutoreleasedReturnValue();
    v220 = objc_msgSend_containsObject_(v216, v217, (uint64_t)CFSTR("inputMapPointsV"), v218, v219);

    if (v220)
    {
      v221 = objc_opt_class();
      objc_msgSend_filterWithDefaultsForClass_(RAWFilter, v222, v221, v223, v224);
      v225 = (void *)objc_claimAutoreleasedReturnValue();

      v226 = sub_1D543E974();
      objc_msgSend_setValue_forKey_(v225, v227, (uint64_t)v226, (uint64_t)CFSTR("inputColorSpace"), v228);
      objc_msgSend_takeAttributesFromDictionary_(v225, v229, (uint64_t)v21, v230, v231);
      v212 = v225;
      objc_msgSend_addObject_(v16, v232, (uint64_t)v225, v233, v234);
    }
    v235 = objc_opt_class();
    objc_msgSend_filterWithDefaultsForClass_(RAWFilter, v236, v235, v237, v238);
    v239 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend_setDefaults(v239, v240, v241, v242, v243);
    objc_msgSend_setValue_forKey_(v239, v244, (uint64_t)v151, (uint64_t)CFSTR("inputColorSpace"), v245);
    if (v33 >= 6)
    {
      objc_msgSend_takeAttributesFromDictionary_forKeys_(v239, v246, (uint64_t)v21, (uint64_t)&unk_1E99C81D8, v248);
      if (v33 >= 7)
        objc_msgSend_takeAttributesFromDictionary_forKeys_(v239, v246, (uint64_t)v21, (uint64_t)&unk_1E99C81F0, v248);
    }
    objc_msgSend_addObject_(v16, v246, (uint64_t)v239, v247, v248);
    v249 = objc_opt_class();
    objc_msgSend_filterWithDefaultsForClass_(RAWFilter, v250, v249, v251, v252);
    v253 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend_takeAttributesFromDictionary_(v253, v254, (uint64_t)v21, v255, v256);
    v257 = getenv("RAWCAMERA_BOOSTSPACE");
    if (v257)
    {
      v260 = v257;
      if ((__tolower(*v257) != 97 || v260[1]) && __tolower(*v260) == 98 && !v260[1])
        v151 = sub_1D543E6A4();
    }
    objc_msgSend_setValue_forKey_(v253, v258, (uint64_t)v151, (uint64_t)CFSTR("inputColorSpace"), v259);
    objc_msgSend_addObject_(v16, v261, (uint64_t)v253, v262, v263);

  }
LABEL_65:

  objc_autoreleasePoolPop(context);
  objc_msgSend_arrayWithArray_(MEMORY[0x1E0C99D20], v264, (uint64_t)v16, v265, v266);
  v267 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&v273.a = &v276;
  sub_1D5282E44((void ***)&v273);
  *(_QWORD *)&v273.a = &v275;
  sub_1D5282E44((void ***)&v273);
  *(_QWORD *)&v273.a = v274;
  sub_1D5282E44((void ***)&v273);

  return v267;
}

void sub_1D528402C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  void *v15;
  void *v16;
  void *v17;
  va_list va;

  va_start(va, a15);

  sub_1D5284148((void **)va);
  _Unwind_Resume(a1);
}

void **sub_1D5284148(void **a1)
{
  void **v3;

  v3 = a1 + 6;
  sub_1D5282E44(&v3);
  v3 = a1 + 3;
  sub_1D5282E44(&v3);
  v3 = a1;
  sub_1D5282E44(&v3);
  return a1;
}

uint64_t sub_1D528419C(uint64_t a1, _QWORD **a2)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  sub_1D5284254((char *)a1, *a2, a2[1], ((char *)a2[1] - (char *)*a2) >> 4);
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  sub_1D5284254((char *)(a1 + 24), a2[3], a2[4], ((char *)a2[4] - (char *)a2[3]) >> 4);
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  sub_1D5284254((char *)(a1 + 48), a2[6], a2[7], ((char *)a2[7] - (char *)a2[6]) >> 4);
  return a1;
}

void sub_1D5284228(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1D5282E44((void ***)va);
  sub_1D5282E44((void ***)va);
  _Unwind_Resume(a1);
}

char *sub_1D5284254(char *result, _QWORD *a2, _QWORD *a3, unint64_t a4)
{
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  if (a4)
  {
    v6 = result;
    result = sub_1D52842F4(result, a4);
    v7 = (_QWORD *)*((_QWORD *)v6 + 1);
    while (a2 != a3)
    {
      *v7 = *a2;
      v8 = a2[1];
      v7[1] = v8;
      if (v8)
      {
        v9 = (unint64_t *)(v8 + 8);
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      a2 += 2;
      v7 += 2;
    }
    *((_QWORD *)v6 + 1) = v7;
  }
  return result;
}

void sub_1D52842E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  sub_1D5282E44(&a9);
  _Unwind_Resume(a1);
}

char *sub_1D52842F4(_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >> 60)
    sub_1D5282B8C();
  result = (char *)sub_1D5284334((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[16 * v4];
  return result;
}

void *sub_1D5284334(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60)
    sub_1D5282C48();
  return operator new(16 * a2);
}

double sub_1D5284368@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  double result;
  double v5[3];
  uint64_t v6;
  uint64_t v7;

  v6 = a2;
  v7 = a1;
  sub_1D5285544(&v7, &v6, v5);
  result = v5[0];
  *a3 = *(_OWORD *)v5;
  return result;
}

double sub_1D52843AC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, _OWORD *a4@<X8>)
{
  double result;
  double v6[3];
  unsigned __int8 v7;
  uint64_t v8;

  v8 = a1;
  v7 = a3;
  sub_1D5285708(&v8, a2, &v7, v6);
  result = v6[0];
  *a4 = *(_OWORD *)v6;
  return result;
}

double sub_1D52843FC@<D0>(const void *a1@<X0>, _OWORD *a2@<X8>)
{
  double result;
  __int128 v4;
  const void *v5;

  v5 = a1;
  sub_1D528582C(&v5, &v4);
  result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_1D528443C(uint64_t a1, const void *a2)
{
  *(_QWORD *)a1 = &off_1E996FA58;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 2;
  sub_1D528594C((_DWORD *)(a1 + 32), qword_1D5447FD8);
  *(_DWORD *)(a1 + 36) = 0;
  *(_QWORD *)(a1 + 40) = a2;
  if (a2)
    CFRetain(a2);
  return a1;
}

void sub_1D5284498(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_1D52844B0(_QWORD *a1)
{
  const void *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_1E996FA58;
  v2 = (const void *)a1[5];
  if (v2)
    CFRelease(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

uint64_t sub_1D5284500(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 40))
    return CGImageReadSessionIsFinal();
  else
    return 1;
}

_QWORD *sub_1D5284514@<X0>(_QWORD *a1@<X8>)
{
  return sub_1D52850A0(a1, "");
}

uint64_t sub_1D5284524(uint64_t a1)
{
  int v2;
  unsigned int v4;
  int v5;
  unsigned int v6;

  v2 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  v4 = 0;
  v5 = v2;
  (*(void (**)(uint64_t, unsigned int *, uint64_t))(*(_QWORD *)a1 + 40))(a1, &v4, 2);
  v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  sub_1D52859B8(&v6, &v4);
  (*(void (**)(uint64_t, int *, _QWORD))(*(_QWORD *)a1 + 40))(a1, &v5, 0);
  return v6;
}

void sub_1D52845AC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned int a10, int a11)
{
  __cxa_begin_catch(a1);
  a10 = 0;
  sub_1D5285A24(&a11, &a10);
  __cxa_end_catch();
  JUMPOUT(0x1D5284598);
}

void sub_1D52845D0(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_1D52845E4(uint64_t a1)
{
  return *(_QWORD *)(a1 + 24);
}

uint64_t sub_1D52845EC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t sub_1D52845F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1D52845FC(uint64_t result, _DWORD *a2)
{
  *(_DWORD *)(result + 32) = *a2;
  return result;
}

uint64_t sub_1D5284608(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_1D5284610(_QWORD *a1, uint64_t a2, uint64_t a3, int *a4)
{
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t v11;
  int v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16[3];

  sub_1D5285A94(&v14, a1 + 1);
  sub_1D5285B08(&v13, a4);
  sub_1D5285164(v16, &v14, (uint64_t)&v13, 0);
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  v11 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*a1 + 32))(a1, a2, a3);
  sub_1D5285200(v16);
  return v11;
}

void sub_1D52846D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_1D5285200((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52846FC(uint64_t a1)
{
  unsigned __int8 v2;

  v2 = 0;
  sub_1D5284728(a1, (uint64_t)&v2, 1);
  return v2;
}

uint64_t sub_1D5284728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  void *exception;

  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 32))(a1);
  if (a3 != result)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return result;
}

void sub_1D5284788(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D528479C(uint64_t a1)
{
  unsigned __int16 v3;

  v3 = 0;
  sub_1D5284728(a1, (uint64_t)&v3, 2);
  if (*(_QWORD *)(a1 + 24) == 2)
    return bswap32(v3) >> 16;
  else
    return v3;
}

uint64_t sub_1D52847F8(uint64_t a1)
{
  unsigned int v3;

  v3 = 0;
  sub_1D5284728(a1, (uint64_t)&v3, 4);
  if (*(_QWORD *)(a1 + 24) == 2)
    return bswap32(v3);
  else
    return v3;
}

unint64_t sub_1D5284850(uint64_t a1)
{
  unint64_t v3;

  v3 = 0;
  sub_1D5284728(a1, (uint64_t)&v3, 8);
  if (*(_QWORD *)(a1 + 24) == 2)
    return bswap64(v3);
  else
    return v3;
}

uint64_t sub_1D52848A8(uint64_t a1)
{
  char v2;

  v2 = 0;
  sub_1D5284728(a1, (uint64_t)&v2, 1);
  return v2;
}

uint64_t sub_1D52848D4(uint64_t a1)
{
  unsigned int v2;
  unsigned __int16 v4;

  v4 = 0;
  sub_1D5284728(a1, (uint64_t)&v4, 2);
  if (*(_QWORD *)(a1 + 24) == 2)
    v2 = bswap32(v4) >> 16;
  else
    LOWORD(v2) = v4;
  return (__int16)v2;
}

float sub_1D5284934(uint64_t a1)
{
  float result;

  LODWORD(result) = sub_1D52847F8(a1);
  return result;
}

double sub_1D528494C(uint64_t a1)
{
  return COERCE_DOUBLE(sub_1D5284850(a1));
}

float sub_1D5284964(uint64_t a1)
{
  float v2;

  v2 = (float)(int)sub_1D52847F8(a1);
  return v2 / (float)(int)sub_1D52847F8(a1);
}

float sub_1D52849A0(uint64_t a1)
{
  float v2;

  v2 = (float)sub_1D52847F8(a1);
  return v2 / (float)sub_1D52847F8(a1);
}

BOOL sub_1D52849DC(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  _BOOL4 v10;
  _DWORD *v11;
  unsigned int v12;
  unsigned int v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *exception;
  int v19;
  unsigned int v20;
  unsigned int v21;
  void *__p[26];

  __p[25] = *(void **)MEMORY[0x1E0C80C00];
  v6 = *a2;
  if (*a2 > 0xC7)
  {
    if (v6 >= 0x40000)
    {
      exception = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1D8271938](exception, "RawCameraException");
      __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
    }
    v19 = 1;
    v21 = v6;
    v11 = sub_1D5285B70(&v21, &v19);
    sub_1D5285340(__p, *v11);
    v12 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 32))(a1);
    v8 = v12;
    v20 = v12;
    v13 = *a2;
    v10 = v12 == *a2;
    if (v12 == v13)
    {
      *((_BYTE *)__p[0] + v12) = 0;
      sub_1D528530C((std::string *)a3, (char *)__p[0]);
    }
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
  }
  else
  {
    v7 = (*(uint64_t (**)(uint64_t, void **))(*(_QWORD *)a1 + 32))(a1, __p);
    v8 = v7;
    v20 = v7;
    v9 = *a2;
    v10 = v7 == *a2;
    if (v7 == v9)
    {
      *((_BYTE *)__p + v7) = 0;
      sub_1D528530C((std::string *)a3, (char *)__p);
    }
  }
  v14 = (void *)*(unsigned __int8 *)(a3 + 23);
  if ((char)v14 < 0)
    v14 = *(void **)(a3 + 8);
  __p[0] = v14;
  sub_1D528304C(&v21, (unint64_t *)__p);
  if (v21 < v8)
  {
    v15 = (void *)*(unsigned __int8 *)(a3 + 23);
    if ((char)v15 < 0)
      v15 = *(void **)(a3 + 8);
    __p[0] = v15;
    sub_1D5282FE0(&v21, (unint64_t *)__p);
    LODWORD(__p[0]) = 1;
    sub_1D5284C34(&v21, __p);
    sub_1D5284CA4((int *)&v21, &v20);
    (*(void (**)(uint64_t, unsigned int *, uint64_t))(*(_QWORD *)a1 + 40))(a1, &v21, 1);
  }
  if (!v10)
    return 0;
  v16 = *(unsigned __int8 *)(a3 + 23);
  if ((v16 & 0x80u) != 0)
    v16 = *(_QWORD *)(a3 + 8);
  return v16 != 0;
}

void sub_1D5284BFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_DWORD *sub_1D5284C34(_DWORD *result, _DWORD *a2)
{
  BOOL v2;
  void *exception;

  v2 = __OFADD__(*result, *a2);
  *result += *a2;
  if (v2)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return result;
}

void sub_1D5284C90(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

int *sub_1D5284CA4(int *result, unsigned int *a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  void *exception;

  v2 = *result - (unint64_t)*a2;
  *result = v2;
  v5 = v2 == (uint64_t)(v2 << 31) >> 31;
  v3 = (int)v2 & 0x1FFFFFFFFLL;
  v4 = v2 & 0x1FFFFFFFFLL;
  v5 = v5 && v4 == v3;
  if (!v5)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return result;
}

void sub_1D5284D18(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D5284D2C@<X0>(_QWORD *a1@<X0>, unsigned int *a2@<X1>, uint64_t *a3@<X8>)
{
  unsigned int v6;
  uint64_t result;
  _WORD *v8;
  _WORD *v9;
  void *exception;
  uint64_t v11;
  int v12;

  v11 = 2;
  v12 = *a2;
  v6 = *sub_1D5285BEC(&v12, &v11);
  if ((*(unsigned int (**)(_QWORD *))(*a1 + 16))(a1) < v6)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  sub_1D52853F0(a3, *a2);
  result = sub_1D5284728((uint64_t)a1, *a3, a3[1] - *a3);
  if (a1[3] != 1)
  {
    v8 = (_WORD *)*a3;
    v9 = (_WORD *)a3[1];
    while (v8 != v9)
    {
      *v8 = bswap32((unsigned __int16)*v8) >> 16;
      ++v8;
    }
  }
  return result;
}

void sub_1D5284E10(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D5284E3C@<X0>(_QWORD *a1@<X0>, unsigned int *a2@<X1>, uint64_t *a3@<X8>)
{
  unsigned int v6;
  uint64_t result;
  unsigned int *v8;
  unsigned int *v9;
  void *exception;
  uint64_t v11;
  int v12;

  v11 = 4;
  v12 = *a2;
  v6 = *sub_1D5285BEC(&v12, &v11);
  if ((*(unsigned int (**)(_QWORD *))(*a1 + 16))(a1) < v6)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  sub_1D52854D0(a3, *a2);
  result = sub_1D5284728((uint64_t)a1, *a3, a3[1] - *a3);
  if (a1[3] != 1)
  {
    v8 = (unsigned int *)*a3;
    v9 = (unsigned int *)a3[1];
    while (v8 != v9)
    {
      *v8 = bswap32(*v8);
      ++v8;
    }
  }
  return result;
}

void sub_1D5284F1C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

double sub_1D5284F48@<D0>(uint64_t a1@<X0>, _DWORD *a2@<X1>, _OWORD *a3@<X8>)
{
  int v6;
  int v7;
  uint64_t v8;
  double result;
  void *exception;
  double v11[3];
  unsigned __int8 v12;
  uint64_t v13;

  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 16))(a1) < *a2)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v6 = *(_DWORD *)(a1 + 36);
  LODWORD(v13) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  LODWORD(v11[0]) = v6;
  v7 = *sub_1D5284C34(v11, &v13);
  v8 = operator new[]();
  sub_1D5284728(a1, v8, *a2);
  v13 = v8;
  v12 = 1;
  sub_1D5285708(&v13, (uint64_t)a2, &v12, v11);
  result = v11[0];
  *a3 = *(_OWORD *)v11;
  *(_QWORD *)(*(_QWORD *)&result + 24) = *(_QWORD *)(a1 + 24);
  *(_DWORD *)(*(_QWORD *)&result + 36) = v7;
  return result;
}

void sub_1D5285060(void *a1)
{
  _QWORD *v1;
  uint64_t v2;

  __cxa_begin_catch(a1);
  MEMORY[0x1D8271AC4](v2, 0x1000C8077774924);
  *v1 = 0;
  v1[1] = 0;
  __cxa_end_catch();
  JUMPOUT(0x1D5285018);
}

void sub_1D5285088(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52850A0(_QWORD *a1, char *__s)
{
  size_t v4;
  size_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8)
    sub_1D5285150();
  v5 = v4;
  if (v4 >= 0x17)
  {
    v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v7 = v4 | 7;
    v8 = v7 + 1;
    v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v4;
    v6 = a1;
    if (!v4)
      goto LABEL_9;
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((_BYTE *)v6 + v5) = 0;
  return a1;
}

void sub_1D5285150()
{
  sub_1D5282BD4("basic_string");
}

uint64_t *sub_1D5285164(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v7 = *a2;
  v8 = a2[1];
  *a1 = *a2;
  a1[1] = v8;
  if (v8)
  {
    v9 = (unint64_t *)(v8 + 8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
    v7 = *a1;
  }
  *((_DWORD *)a1 + 4) = 0;
  if (v7)
  {
    *((_DWORD *)a1 + 4) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 48))(v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)*a1 + 40))(*a1, a3, a4);
  }
  return a1;
}

void sub_1D52851E8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1D5282EB4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D5285200(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  if (v2)
    (*(void (**)(uint64_t, uint64_t *, _QWORD))(*(_QWORD *)v2 + 40))(v2, a1 + 2, 0);
  return sub_1D5282EB4((uint64_t)a1);
}

void sub_1D528523C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1D5282EB4(v1);
  _Unwind_Resume(a1);
}

std::string *sub_1D5285250(std::string *__dst, const std::string::value_type *__src, size_t __len)
{
  unint64_t v6;
  std::string *v7;
  std::string::size_type size;
  std::string::size_type v9;
  unint64_t v10;

  LODWORD(v6) = SHIBYTE(__dst->__r_.__value_.__r.__words[2]);
  if ((v6 & 0x80000000) != 0)
  {
    v10 = __dst->__r_.__value_.__r.__words[2];
    v9 = (v10 & 0x7FFFFFFFFFFFFFFFLL) - 1;
    if (v9 < __len)
    {
      size = __dst->__r_.__value_.__l.__size_;
      goto LABEL_6;
    }
    v6 = HIBYTE(v10);
    v7 = (std::string *)__dst->__r_.__value_.__r.__words[0];
  }
  else
  {
    v7 = __dst;
    if (__len > 0x16)
    {
      size = HIBYTE(__dst->__r_.__value_.__r.__words[2]);
      v9 = 22;
LABEL_6:
      std::string::__grow_by_and_replace(__dst, v9, __len - v9, size, 0, size, __len, __src);
      return __dst;
    }
  }
  if (__len)
  {
    memmove(v7, __src, __len);
    LOBYTE(v6) = *((_BYTE *)&__dst->__r_.__value_.__s + 23);
  }
  if ((v6 & 0x80) != 0)
    __dst->__r_.__value_.__l.__size_ = __len;
  else
    *((_BYTE *)&__dst->__r_.__value_.__s + 23) = __len & 0x7F;
  v7->__r_.__value_.__s.__data_[__len] = 0;
  return __dst;
}

std::string *sub_1D528530C(std::string *a1, char *__s)
{
  size_t v4;

  v4 = strlen(__s);
  return sub_1D5285250(a1, __s, v4);
}

_QWORD *sub_1D5285340(_QWORD *a1, size_t a2)
{
  char *v4;
  char *v5;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_1D52853B0(a1, a2);
    v4 = (char *)a1[1];
    v5 = &v4[a2];
    bzero(v4, a2);
    a1[1] = v5;
  }
  return a1;
}

void sub_1D5285394(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_1D52853B0(_QWORD *a1, size_t __sz)
{
  char *result;

  if ((__sz & 0x8000000000000000) != 0)
    sub_1D5282B8C();
  result = (char *)operator new(__sz);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[__sz];
  return result;
}

_QWORD *sub_1D52853F0(_QWORD *a1, uint64_t a2)
{
  char *v4;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_1D5285464(a1, a2);
    v4 = (char *)a1[1];
    bzero(v4, 2 * a2);
    a1[1] = &v4[2 * a2];
  }
  return a1;
}

void sub_1D5285448(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_1D5285464(_QWORD *a1, uint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 < 0)
    sub_1D5282B8C();
  result = (char *)sub_1D52854A0((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[2 * v4];
  return result;
}

void *sub_1D52854A0(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
    sub_1D5282C48();
  return operator new(2 * a2);
}

_QWORD *sub_1D52854D0(_QWORD *a1, unint64_t a2)
{
  char *v4;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_1D5282B4C(a1, a2);
    v4 = (char *)a1[1];
    bzero(v4, 4 * a2);
    a1[1] = &v4[4 * a2];
  }
  return a1;
}

void sub_1D5285528(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D5285544(_QWORD *a1@<X1>, _QWORD *a2@<X2>, _QWORD *a3@<X8>)
{
  _QWORD *v6;

  v6 = operator new(0x70uLL);
  sub_1D52855AC(v6, a1, a2);
  *a3 = v6 + 3;
  a3[1] = v6;
  sub_1D5285658((uint64_t)a3, v6 + 4, (uint64_t)(v6 + 3));
}

void sub_1D5285598(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52855AC(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  a1[2] = 0;
  *a1 = &unk_1E996FAF8;
  a1[1] = 0;
  sub_1D528FD90(a1 + 3, *a2, *a3);
  return a1;
}

void sub_1D52855EC(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D5285600(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E996FAF8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D5285614(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E996FAF8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D5285648(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a1 + 24) + 56))(a1 + 24);
}

void sub_1D5285658(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t *p_shared_weak_owners;
  unint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  if (a2)
  {
    v4 = (std::__shared_weak_count *)a2[1];
    if (!v4 || v4->__shared_owners_ == -1)
    {
      v5 = *(std::__shared_weak_count **)(a1 + 8);
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
        p_shared_weak_owners = (unint64_t *)&v5->__shared_weak_owners_;
        do
          v9 = __ldxr(p_shared_weak_owners);
        while (__stxr(v9 + 1, p_shared_weak_owners));
        v4 = (std::__shared_weak_count *)a2[1];
      }
      *a2 = a3;
      a2[1] = v5;
      if (v4)
        std::__shared_weak_count::__release_weak(v4);
      if (v5)
      {
        v10 = (unint64_t *)&v5->__shared_owners_;
        do
          v11 = __ldaxr(v10);
        while (__stlxr(v11 - 1, v10));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
          std::__shared_weak_count::__release_weak(v5);
        }
      }
    }
  }
}

void sub_1D5285708(_QWORD *a1@<X1>, uint64_t a2@<X2>, unsigned __int8 *a3@<X3>, _QWORD *a4@<X8>)
{
  _QWORD *v8;

  v8 = operator new(0x68uLL);
  sub_1D5285780(v8, a1, a2, a3);
  *a4 = v8 + 3;
  a4[1] = v8;
  sub_1D5285658((uint64_t)a4, v8 + 4, (uint64_t)(v8 + 3));
}

void sub_1D528576C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D5285780(_QWORD *a1, _QWORD *a2, uint64_t a3, unsigned __int8 *a4)
{
  a1[2] = 0;
  *a1 = &unk_1E996FB48;
  a1[1] = 0;
  sub_1D5290274(a1 + 3, *a2, a3, *a4);
  return a1;
}

void sub_1D52857C0(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52857D4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E996FB48;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52857E8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E996FB48;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D528581C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a1 + 24) + 56))(a1 + 24);
}

void sub_1D528582C(const void **a1@<X1>, _QWORD *a2@<X8>)
{
  _QWORD *v4;

  v4 = operator new(0x1058uLL);
  sub_1D528588C((uint64_t)v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  sub_1D5285658((uint64_t)a2, v4 + 4, (uint64_t)(v4 + 3));
}

void sub_1D5285878(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D528588C(uint64_t a1, const void **a2)
{
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = &unk_1E996FB98;
  sub_1D528443C(a1 + 24, *a2);
  *(_QWORD *)(a1 + 24) = &unk_1E9975218;
  *(_QWORD *)(a1 + 72) = 0;
  *(_BYTE *)(a1 + 80) = 0;
  return a1;
}

void sub_1D52858E0(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52858F4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E996FB98;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D5285908(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E996FB98;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D528593C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a1 + 24) + 56))(a1 + 24);
}

_DWORD *sub_1D528594C(_DWORD *result, uint64_t *a2)
{
  uint64_t v2;
  void *exception;

  v2 = *a2;
  *result = *a2;
  if (v2 != (int)v2)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return result;
}

void sub_1D52859A4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_DWORD *sub_1D52859B8(_DWORD *result, unsigned int *a2)
{
  uint64_t v2;
  void *exception;

  v2 = *a2;
  *result = v2;
  if (v2 != (int)v2)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return result;
}

void sub_1D5285A10(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_DWORD *sub_1D5285A24(_DWORD *result, unsigned int *a2)
{
  uint64_t v2;
  void *exception;

  *result = 0;
  v2 = *a2;
  *result = v2;
  if (v2 != (int)v2)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return result;
}

void sub_1D5285A80(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D5285A94(_QWORD *a1, _QWORD *a2)
{
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;

  v3 = (std::__shared_weak_count *)a2[1];
  *a1 = *a2;
  if (!v3)
  {
    a1[1] = 0;
LABEL_5:
    sub_1D5285AD4();
  }
  v4 = std::__shared_weak_count::lock(v3);
  a1[1] = v4;
  if (!v4)
    goto LABEL_5;
  return a1;
}

void sub_1D5285AD4()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x1E0DE4F80] + 16;
  __cxa_throw(exception, MEMORY[0x1E0DE4E28], MEMORY[0x1E0DE43F0]);
}

int *sub_1D5285B08(int *result, int *a2)
{
  int v2;
  void *exception;

  v2 = *a2;
  *result = *a2;
  if (v2 < 0)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return result;
}

void sub_1D5285B5C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_DWORD *sub_1D5285B70(_DWORD *result, int *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *exception;

  v2 = *result + (uint64_t)*a2;
  v3 = v2 << 31 >> 31;
  *result = v2;
  if (v3 != v2 || v3 < 0)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return result;
}

void sub_1D5285BD8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_DWORD *sub_1D5285BEC(_DWORD *result, _QWORD *a2)
{
  uint64_t v2;
  unint64_t v3;
  void *exception;

  v2 = (*result * (unsigned __int128)(unint64_t)*a2) >> 64;
  v3 = *result * *a2;
  *result = v3;
  if (v2 || HIDWORD(v3))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return result;
}

void sub_1D5285C58(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

id sub_1D5285C6C(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  id v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD v16[4];
  id v17;

  objc_msgSend_dictionary(MEMORY[0x1E0C99E08], a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 3221225472;
  v16[2] = sub_1D5285D0C;
  v16[3] = &unk_1E996FBE0;
  v17 = v6;
  v7 = v6;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(a1, v8, (uint64_t)v16, v9, v10);
  objc_msgSend_dictionaryWithDictionary_(MEMORY[0x1E0C99D80], v11, (uint64_t)v7, v12, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  return v14;
}

void sub_1D5285D0C(uint64_t a1, void *a2, void *a3)
{
  void *v4;
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  id v12;

  v4 = *(void **)(a1 + 32);
  v5 = a2;
  objc_msgSend_makeSerializable(a3, v6, v7, v8, v9);
  v12 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKey_(v4, v10, (uint64_t)v12, (uint64_t)v5, v11);

}

uint64_t sub_1D5285D6C(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return objc_msgSend_keypathValueDictionary_(a1, a2, (uint64_t)&stru_1E99A7480, a4, a5);
}

id sub_1D5285D78(void *a1, uint64_t a2, void *a3)
{
  id v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, void *, void *);
  void *v23;
  id v24;
  id v25;

  v4 = a3;
  objc_msgSend_dictionary(MEMORY[0x1E0C99E08], v5, v6, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = MEMORY[0x1E0C809B0];
  v21 = 3221225472;
  v22 = sub_1D5285E40;
  v23 = &unk_1E996FC08;
  v24 = v9;
  v25 = v4;
  v10 = v4;
  v11 = v9;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(a1, v12, (uint64_t)&v20, v13, v14);
  objc_msgSend_dictionaryWithDictionary_(MEMORY[0x1E0C99D80], v15, (uint64_t)v11, v16, v17, v20, v21, v22, v23);
  v18 = (void *)objc_claimAutoreleasedReturnValue();

  return v18;
}

void sub_1D5285E40(uint64_t a1, void *a2, void *a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  const __CFString *v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  const __CFString *v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  const char *v45;
  uint64_t v46;
  uint64_t v47;
  const __CFString *v48;
  const char *v49;
  uint64_t v50;
  id v51;

  v51 = a2;
  v5 = a3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    v11 = *(void **)(a1 + 32);
    v10 = *(void **)(a1 + 40);
    v12 = objc_msgSend_length(v10, v6, v7, v8, v9);
    v16 = CFSTR(".");
    if (!v12)
      v16 = &stru_1E99A7480;
    objc_msgSend_stringByAppendingFormat_(v10, v13, (uint64_t)CFSTR("%@%@"), v14, v15, v16, v51);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(v11, v18, (uint64_t)v5, (uint64_t)v17, v19);
  }
  else
  {
    if ((objc_opt_respondsToSelector() & 1) != 0)
    {
      v25 = *(void **)(a1 + 32);
      v24 = *(void **)(a1 + 40);
      v26 = objc_msgSend_length(v24, v20, v21, v22, v23);
      v30 = CFSTR(".");
      if (!v26)
        v30 = &stru_1E99A7480;
      objc_msgSend_stringByAppendingFormat_(v24, v27, (uint64_t)CFSTR("%@%@"), v28, v29, v30, v51);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_keypathValueDictionary_(v5, v31, (uint64_t)v17, v32, v33);
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_addEntriesFromDictionary_(v25, v35, (uint64_t)v34, v36, v37);
    }
    else
    {
      objc_msgSend_description(v5, v20, v21, v22, v23);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v39 = *(void **)(a1 + 32);
      v38 = *(void **)(a1 + 40);
      v44 = objc_msgSend_length(v38, v40, v41, v42, v43);
      v48 = CFSTR(".");
      if (!v44)
        v48 = &stru_1E99A7480;
      objc_msgSend_stringByAppendingFormat_(v38, v45, (uint64_t)CFSTR("%@%@"), v46, v47, v48, v51);
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_setObject_forKeyedSubscript_(v39, v49, (uint64_t)v17, (uint64_t)v34, v50);
    }

  }
}

id sub_1D528601C(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  id v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[4];
  id v13;

  objc_msgSend_dictionary(MEMORY[0x1E0C99E08], a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 3221225472;
  v12[2] = sub_1D52860A0;
  v12[3] = &unk_1E996FBE0;
  v7 = v6;
  v13 = v7;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(a1, v8, (uint64_t)v12, v9, v10);

  return v7;
}

void sub_1D52860A0(uint64_t a1, void *a2, void *a3)
{
  void *v4;
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  id v12;

  v4 = *(void **)(a1 + 32);
  v5 = a2;
  objc_msgSend_makeSerializable(a3, v6, v7, v8, v9);
  v12 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKey_(v4, v10, (uint64_t)v12, (uint64_t)v5, v11);

}

uint64_t sub_1D5286100(uint64_t a1)
{
  dispatch_once_t *v2;
  _QWORD block[5];

  v2 = (dispatch_once_t *)(a1 + 131656);
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = sub_1D5286178;
  block[3] = &unk_1E996F870;
  block[4] = a1;
  if (*v2 != -1)
    dispatch_once(v2, block);
  return a1 + 584;
}

void sub_1D5286178(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  char *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  unint64_t v9;
  _WORD *v10;
  uint64_t v12;
  int16x8_t v13;
  int16x8_t v14;
  uint64_t v15;
  unint64_t v16;
  unsigned __int16 v17;
  unint64_t v18;
  unsigned __int16 v19;
  unint64_t v20;
  int v21;
  char *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int *v26;
  char *v27;
  uint64_t v28;
  void *__p;
  char *v30;
  uint64_t v31;

  v1 = *(_QWORD *)(a1 + 32);
  if (!*(_BYTE *)(v1 + 248))
    sub_1D5287C98();
  __p = 0;
  v30 = 0;
  v31 = 0;
  sub_1D5287CCC(&__p, *(const void **)(v1 + 224), *(_QWORD *)(v1 + 232), (uint64_t)(*(_QWORD *)(v1 + 232) - *(_QWORD *)(v1 + 224)) >> 1);
  if (!*(_BYTE *)(v1 + 216))
    sub_1D5287C98();
  v26 = 0;
  v27 = 0;
  v28 = 0;
  sub_1D5287D44(&v26, *(const void **)(v1 + 192), *(_QWORD *)(v1 + 200), (uint64_t)(*(_QWORD *)(v1 + 200) - *(_QWORD *)(v1 + 192)) >> 2);
  v2 = (char *)v26;
  v3 = v27 - (char *)v26;
  v4 = (char *)__p;
  if (v27 - (char *)v26 != v30 - (_BYTE *)__p || v27 == (char *)v26)
    goto LABEL_17;
  v5 = 0;
  v6 = 0;
  v7 = v3 >> 2;
  v8 = v3 >> 2 != 0;
  v9 = (v3 >> 2) - 1;
  if (v9 == 0 || !v8)
    v7 = 1;
  v10 = (char *)__p + 2;
  do
  {
    if (v6)
    {
      if (!*(v10 - 1) && *v10 == 0)
        break;
    }
    v10 += 2;
    if (v9 == v6)
      v5 = 1;
    ++v6;
  }
  while (v7 != v6);
  if ((v5 & 1) != 0)
  {
    if (!*(_BYTE *)(v1 + 258))
      sub_1D5287C98();
    v15 = *(unsigned __int16 *)(v1 + 256);
    if (*(_WORD *)(v1 + 256))
    {
      v16 = 0;
      v17 = *((_WORD *)__p + 3);
      v18 = *((unsigned __int16 *)__p + 2);
      v19 = *((_WORD *)__p + 1);
      v20 = 1;
      v21 = *(unsigned __int16 *)__p;
      do
      {
        if (v20 < v9 && v16 >= v18)
        {
          ++v20;
          v22 = &v4[4 * v20];
          v21 = v18;
          v18 = *(unsigned __int16 *)v22;
          v19 = v17;
          v17 = *((_WORD *)v22 + 1);
        }
        v23 = *(unsigned int *)&v2[4 * v20 - 4] * (unint64_t)(v16 - v21);
        if (v23 >= 0xFFFFFFFF)
          LODWORD(v23) = -1;
        *(_WORD *)(v1 + 584 + 2 * v16++) = v19 + ((v23 >> 15) & 1) + WORD1(v23);
      }
      while (v15 != v16);
      v24 = v15;
    }
    else
    {
      v24 = 0;
    }
    v25 = 2 * v24;
    do
    {
      *(_WORD *)(v1 + 584 + v25) = v15;
      v25 += 2;
    }
    while (v25 != 0x20000);
  }
  else
  {
LABEL_17:
    v12 = 0;
    v13 = (int16x8_t)xmmword_1D5447F60;
    v14.i64[0] = 0x8000800080008;
    v14.i64[1] = 0x8000800080008;
    do
    {
      *(int16x8_t *)(v1 + 584 + v12) = v13;
      v13 = vaddq_s16(v13, v14);
      v12 += 16;
    }
    while (v12 != 0x20000);
  }
  if (v2)
  {
    v27 = v2;
    operator delete(v2);
    v4 = (char *)__p;
  }
  if (v4)
  {
    v30 = v4;
    operator delete(v4);
  }
}

void sub_1D5286360(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  if (a12)
    operator delete(a12);
  _Unwind_Resume(exception_object);
}

void *sub_1D5286394(uint64_t a1, int a2, unsigned int a3)
{
  void *v5;
  uint64_t v6;
  int v8;
  int v9;

  v9 = a2;
  v5 = malloc_type_malloc(a3 + 64, 0x5AC26551uLL);
  v6 = *(_QWORD *)(a1 + 24);
  sub_1D5282F74(&v8, &v9);
  (*(void (**)(uint64_t, int *, _QWORD))(*(_QWORD *)v6 + 40))(v6, &v8, 0);
  (*(void (**)(_QWORD, void *, _QWORD))(**(_QWORD **)(a1 + 24) + 32))(*(_QWORD *)(a1 + 24), v5, a3);
  return v5;
}

void sub_1D5286428(void *a1)
{
  void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    free(v1);
  __cxa_end_catch();
  JUMPOUT(0x1D5286410);
}

void sub_1D528644C(os_signpost_id_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 *a6, uint64_t a7)
{
  NSObject *v12;
  NSObject *v13;
  void (**v14)(_QWORD);
  _WORD *v15;
  unint64_t v16;
  size_t v17;
  uint64_t *v18;
  uint64_t *v19;
  __int16 *v20;
  int v21;
  unint64_t v22;
  __int16 *v23;
  __int16 v24;
  uint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unsigned __int8 *v31;
  int v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void *exception;
  void *__p;
  _BYTE *v39;
  uint64_t v40;
  uint8_t buf[8];
  __int16 *v42;
  uint64_t v43;
  _QWORD v44[9];

  v44[7] = *MEMORY[0x1E0C80C00];
  sub_1D52EB058();
  v12 = objc_claimAutoreleasedReturnValue();
  v13 = v12;
  if (a1 + 1 >= 2 && os_signpost_enabled(v12))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v13, OS_SIGNPOST_INTERVAL_BEGIN, a1, "CPanasonicHuffmanUnpacker::unpackTile", (const char *)&unk_1D548AF1A, buf, 2u);
  }

  v44[0] = MEMORY[0x1E0C809B0];
  v44[1] = 3221225472;
  v44[2] = sub_1D5286B90;
  v44[3] = &unk_1E996F870;
  v44[4] = a1;
  v14 = (void (**)(_QWORD))MEMORY[0x1D82721B4](v44);
  if (qword_1EFF324E0 != -1)
    dispatch_once(&qword_1EFF324E0, &unk_1E996FC28);
  if (!*(_BYTE *)(a1 + 304) || !*(_BYTE *)(a1 + 336))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  *(_QWORD *)buf = 0;
  v42 = 0;
  v43 = 0;
  sub_1D5287CCC(buf, *(const void **)(a1 + 280), *(_QWORD *)(a1 + 288), (uint64_t)(*(_QWORD *)(a1 + 288) - *(_QWORD *)(a1 + 280)) >> 1);
  if (!*(_BYTE *)(a1 + 336))
    sub_1D5287C98();
  __p = 0;
  v39 = 0;
  v40 = 0;
  sub_1D5287CCC(&__p, *(const void **)(a1 + 312), *(_QWORD *)(a1 + 320), (uint64_t)(*(_QWORD *)(a1 + 320) - *(_QWORD *)(a1 + 312)) >> 1);
  v15 = __p;
  v16 = v39 - (_BYTE *)__p;
  if (v39 == __p)
  {
    v19 = 0;
    v18 = 0;
  }
  else
  {
    if (v16 >= 0x3FFFFFFFFFFFFFFFLL)
      sub_1D5282B8C();
    v17 = 4 * v16;
    v18 = (uint64_t *)operator new(4 * v16);
    bzero(v18, v17);
    v19 = (uint64_t *)((char *)v18 + v17);
  }
  v20 = *(__int16 **)buf;
  if (v42 != *(__int16 **)buf)
  {
    v21 = 0;
    v22 = ((uint64_t)v42 - *(_QWORD *)buf) >> 1;
    v23 = *(__int16 **)buf;
    do
    {
      v24 = *v23;
      v23 += 2;
      v25 = &v18[(unsigned __int16)v21 >> 1];
      *(_WORD *)v25 = v24;
      *((_WORD *)v25 + 1) = v20[(unsigned __int16)v21 | 1];
      *((_WORD *)v25 + 2) = v15[(unsigned __int16)v21 >> 1];
      *((_WORD *)v25 + 3) = (unsigned __int16)v21 >> 1;
      v21 += 2;
    }
    while (v22 > (unsigned __int16)v21);
  }
  v26 = v19 - v18;
  v27 = 126 - 2 * __clz(v26);
  if (v19 == v18)
    v28 = 0;
  else
    v28 = v27;
  sub_1D5287DBC((uint64_t)v18, v19, v28, 1);
  v29 = 0;
  v30 = 56;
  v31 = a6;
  do
  {
    v32 = *v31++;
    v29 |= (unint64_t)byte_1EFF324E8[v32] << v30;
    v30 -= 8;
  }
  while (v30 != -8);
  if ((unint64_t)(a7 - (_QWORD)a6) < 3
    || (*(_DWORD *)(a5 + 4) <= (*(_DWORD *)(a5 + 4) + *(_DWORD *)(a5 + 12) - 1)
      ? (v33 = *(_DWORD *)(a3 + 12) * *(_DWORD *)(a3 + 8) == 0)
      : (v33 = 1),
        v33 || v19 == v18))
  {
    if (v18)
LABEL_34:
      operator delete(v18);
    if (__p)
    {
      v39 = __p;
      operator delete(__p);
    }
    if (*(_QWORD *)buf)
    {
      v42 = *(__int16 **)buf;
      operator delete(*(void **)buf);
    }
    v14[2](v14);

  }
  else
  {
    if (v26 <= 1)
      v34 = 1;
    else
      v34 = v19 - v18;
    v35 = v34;
    v36 = (char *)v18 + 4;
    while (((v29 >> (64 - *((_WORD *)v36 - 2))) & ~(-1 << *((_WORD *)v36 - 2))) != *((unsigned __int16 *)v36 - 1))
    {
      v36 += 8;
      if (!--v35)
        goto LABEL_34;
    }
  }
}

void sub_1D5286AD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void (**a9)(_QWORD), uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, uint64_t a20,void *a21,uint64_t a22)
{
  void *v22;

  operator delete(v22);
  if (__p)
    operator delete(__p);
  if (a21)
    operator delete(a21);
  a9[2](a9);

  _Unwind_Resume(a1);
}

void sub_1D5286B90(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  os_signpost_id_t v4;
  uint8_t v5[16];

  sub_1D52EB058();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = v2;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v3, OS_SIGNPOST_INTERVAL_END, v4, "CPanasonicHuffmanUnpacker::unpackTile", (const char *)&unk_1D548AF1A, v5, 2u);
  }

}

void sub_1D5286C14()
{
  uint64_t i;
  int8x16_t v1;

  for (i = 0; i != 256; ++i)
  {
    v1 = (int8x16_t)vdupq_n_s32(i);
    *(uint8x8_t *)v1.i8 = vshl_u8((uint8x8_t)vmovn_s16(vuzp1q_s16((int16x8_t)vshlq_u32((uint32x4_t)vandq_s8(v1, (int8x16_t)xmmword_1D54480F0), (uint32x4_t)xmmword_1D5448120), (int16x8_t)vshlq_u32((uint32x4_t)vandq_s8(v1, (int8x16_t)xmmword_1D5448100), (uint32x4_t)xmmword_1D5448110))), (uint8x8_t)0x1020304050607);
    byte_1EFF324E8[i] = v1.i8[0] | v1.i8[4] | ((v1.i32[0] | v1.i32[1]) >> 16) | ((unsigned __int16)(v1.i16[0] | v1.i16[2] | ((v1.i32[0] | v1.i32[1]) >> 16)) >> 8);
  }
}

void sub_1D5286C90(os_signpost_id_t a1)
{
  NSObject *v2;
  NSObject *v3;
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  NSObject *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  BOOL v18;
  int v19;
  int v20;
  int v21;
  char *v22;
  __int16 *v23;
  __int16 v24;
  __int16 v25;
  __int16 v26;
  void *exception;
  void *v28;
  void (**v29)(_QWORD);
  NSObject *group;
  _QWORD block[8];
  int v32;
  int v33;
  int v34;
  __int16 v35;
  __int16 v36;
  __int16 v37;
  __int16 v38;
  _QWORD v39[5];
  uint8_t buf[16];

  sub_1D52EB058();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (a1 + 1 >= 2 && os_signpost_enabled(v2))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v3, OS_SIGNPOST_INTERVAL_BEGIN, a1, "CPanasonicHuffmanUnpacker", (const char *)&unk_1D548AF1A, buf, 2u);
  }

  v39[0] = MEMORY[0x1E0C809B0];
  v39[1] = 3221225472;
  v39[2] = sub_1D528727C;
  v39[3] = &unk_1E996F870;
  v39[4] = a1;
  v4 = MEMORY[0x1D82721B4](v39);
  if (!*(_BYTE *)(a1 + 216)
    || !*(_BYTE *)(a1 + 248)
    || !*(_BYTE *)(a1 + 258)
    || !*(_BYTE *)(a1 + 262)
    || !*(_BYTE *)(a1 + 266)
    || !*(_BYTE *)(a1 + 270)
    || !*(_BYTE *)(a1 + 274)
    || !*(_BYTE *)(a1 + 346)
    || !*(_BYTE *)(a1 + 350)
    || !*(_BYTE *)(a1 + 376)
    || !*(_BYTE *)(a1 + 408)
    || !*(_BYTE *)(a1 + 440)
    || !*(_BYTE *)(a1 + 472)
    || !*(_BYTE *)(a1 + 504))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v5 = *(unsigned __int16 *)(a1 + 344);
  v6 = *(unsigned __int16 *)(a1 + 348);
  v7 = *(_DWORD *)(a1 + 44);
  v8 = *(_DWORD *)(a1 + 48);
  v9 = (*(uint64_t (**)(os_signpost_id_t))(*(_QWORD *)a1 + 40))(a1);
  if (*(_QWORD *)(a1 + 536) - *(_QWORD *)(a1 + 528) != *(_QWORD *)(a1 + 560) - *(_QWORD *)(a1 + 552)
    || (v7 - 100000) < 0xFFFE7961
    || (v8 - 100000) < 0xFFFE7961)
  {
    v28 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](v28, "RawCameraException");
    __cxa_throw(v28, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v10 = v9;
  v29 = (void (**)(_QWORD))v4;
  group = dispatch_group_create();
  v11 = dispatch_queue_create("Panasonic Huffman Tile Unpacker Queue", MEMORY[0x1E0C80D50]);
  v12 = sub_1D530B618(a1);
  v13 = v6 * (unint64_t)v5;
  if (v13)
  {
    v14 = v12;
    v15 = 0;
    v16 = 0;
    do
    {
      if (!*(_BYTE *)(a1 + 376))
        sub_1D5287C98();
      if (!*(_BYTE *)(a1 + 440))
        sub_1D5287C98();
      v17 = *(_DWORD *)(*(_QWORD *)(a1 + 416) + v16);
      v19 = v17 + 7;
      v18 = v17 < -7;
      v20 = v17 + 14;
      if (!v18)
        v20 = v19;
      v21 = v20 >> 3;
      v22 = (char *)sub_1D5286394(a1, *(_DWORD *)(*(_QWORD *)(a1 + 352) + v16), v20 >> 3);
      if (v22)
      {
        if (!*(_BYTE *)(a1 + 408))
          sub_1D5287C98();
        if (!*(_BYTE *)(a1 + 472))
          sub_1D5287C98();
        if (!*(_BYTE *)(a1 + 504))
          sub_1D5287C98();
        v23 = (__int16 *)(*(_QWORD *)(a1 + 384) + v16);
        v24 = *v23;
        LOWORD(v23) = v23[1];
        v25 = *(_WORD *)(*(_QWORD *)(a1 + 448) + v15);
        v26 = *(_WORD *)(*(_QWORD *)(a1 + 480) + v15);
        block[0] = MEMORY[0x1E0C809B0];
        block[1] = 3221225472;
        block[2] = sub_1D5287300;
        block[3] = &unk_1E996FC48;
        block[4] = a1;
        block[5] = v14;
        v32 = v7;
        v33 = v8;
        v34 = v10;
        v35 = v24;
        v36 = (__int16)v23;
        v37 = v25;
        v38 = v26;
        block[6] = v22;
        block[7] = &v22[v21];
        dispatch_group_async(group, v11, block);
      }
      v16 += 4;
      v15 += 2;
      --v13;
    }
    while (v13);
  }
  dispatch_group_wait(group, 0xFFFFFFFFFFFFFFFFLL);

  v29[2](v29);
}

void sub_1D52871D0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1D528727C(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  os_signpost_id_t v4;
  uint8_t v5[16];

  sub_1D52EB058();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = v2;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v3, OS_SIGNPOST_INTERVAL_END, v4, "CPanasonicHuffmanUnpacker", (const char *)&unk_1D548AF1A, v5, 2u);
  }

}

void sub_1D5287300(uint64_t a1)
{
  os_signpost_id_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint32x4_t v9;
  uint64_t v10;
  int v11;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_DWORD *)(a1 + 64);
  v5 = *(_DWORD *)(a1 + 68);
  v10 = 0;
  sub_1D5282DF0(&v11, v4, v5);
  v6 = 2 * (*(_DWORD *)(a1 + 72) * *(_DWORD *)(a1 + 64));
  v9 = vmovl_u16(*(uint16x4_t *)(a1 + 76));
  v7 = *(unsigned __int8 **)(a1 + 48);
  v8 = *(_QWORD *)(a1 + 56);
  sub_1D5286100(v2);
  sub_1D528644C(v2, v3, (uint64_t)&v10, v6, (uint64_t)&v9, v7, v8);
  free(*(void **)(a1 + 48));
}

char *sub_1D52873A4(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5)
{
  char *v7;
  char *result;

  *(_DWORD *)(a1 + 516) = a2;
  *(_DWORD *)(a1 + 520) = a3;
  v7 = (char *)(a1 + 528);
  if (v7 != (char *)a4)
    sub_1D5282A44(v7, *(char **)a4, *(_QWORD *)(a4 + 8), (uint64_t)(*(_QWORD *)(a4 + 8) - *(_QWORD *)a4) >> 2);
  result = (char *)(a1 + 552);
  if (a1 + 552 != a5)
    return sub_1D5282A44(result, *(char **)a5, *(_QWORD *)(a5 + 8), (uint64_t)(*(_QWORD *)(a5 + 8) - *(_QWORD *)a5) >> 2);
  return result;
}

uint64_t sub_1D528740C(_DWORD *a1)
{
  int v1;

  v1 = a1[17];
  if (((a1[144] + 2 * v1) & 0xFLL) != 0)
    return (2 * (a1[15] + 2 * v1) + 31) & 0x3FFFFFFE0;
  else
    return 2 * (a1[144] + 2 * v1);
}

void sub_1D5287444(os_signpost_id_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  NSObject *v6;
  NSObject *v7;
  uint64_t v8;
  int v9;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  int v20;
  BOOL v21;
  int v22;
  int v23;
  BOOL v24;
  int v25;
  signed int v26;
  char *v27;
  void *v28;
  void *exception;
  void *v30;
  void *v31;
  void (**v32)(_QWORD);
  NSObject *v35;
  NSObject *group;
  _QWORD block[10];
  __int128 v38;
  uint8_t buf[16];
  _QWORD v40[6];

  sub_1D52EB058();
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = v6;
  if (a1 + 1 >= 2 && os_signpost_enabled(v6))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v7, OS_SIGNPOST_INTERVAL_BEGIN, a1, "CPanasonicHuffmanUnpacker", (const char *)&unk_1D548AF1A, buf, 2u);
  }

  v40[0] = MEMORY[0x1E0C809B0];
  v40[1] = 3221225472;
  v40[2] = sub_1D5287AD0;
  v40[3] = &unk_1E996F870;
  v40[4] = a1;
  v8 = MEMORY[0x1D82721B4](v40);
  if (!*(_BYTE *)(a1 + 216)
    || !*(_BYTE *)(a1 + 248)
    || !*(_BYTE *)(a1 + 258)
    || !*(_BYTE *)(a1 + 262)
    || !*(_BYTE *)(a1 + 266)
    || !*(_BYTE *)(a1 + 270)
    || !*(_BYTE *)(a1 + 274)
    || !*(_BYTE *)(a1 + 346)
    || !*(_BYTE *)(a1 + 350)
    || !*(_BYTE *)(a1 + 376)
    || !*(_BYTE *)(a1 + 408)
    || !*(_BYTE *)(a1 + 440)
    || !*(_BYTE *)(a1 + 472)
    || !*(_BYTE *)(a1 + 504))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v9 = *(_DWORD *)(a1 + 44);
  if ((v9 - 100000) < 0xFFFE7961
    || (v10 = *(_DWORD *)(a1 + 48), (v10 - 100000) < 0xFFFE7961))
  {
    v30 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](v30, "RawCameraException");
    __cxa_throw(v30, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v11 = *(unsigned __int16 *)(a1 + 348) * (unint64_t)*(unsigned __int16 *)(a1 + 344);
  if (v11 >> 5 >= 0x271)
  {
    v31 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](v31, "RawCameraException");
    __cxa_throw(v31, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v32 = (void (**)(_QWORD))v8;
  group = dispatch_group_create();
  v35 = dispatch_queue_create("Panasonic Huffman Tile Unpacker Queue", MEMORY[0x1E0C80D50]);
  if (v11)
  {
    v12 = 0;
    v13 = 1;
    do
    {
      if (!*(_BYTE *)(a1 + 376))
        sub_1D5287C98();
      if (!*(_BYTE *)(a1 + 440))
        sub_1D5287C98();
      v14 = *(_DWORD *)(*(_QWORD *)(a1 + 416) + 4 * v12);
      v15 = v14 + 7;
      v21 = v14 < -7;
      v16 = v14 + 14;
      if (v21)
        v17 = v16;
      else
        v17 = v15;
      if (!*(_BYTE *)(a1 + 408))
        sub_1D5287C98();
      if (!*(_BYTE *)(a1 + 472))
        sub_1D5287C98();
      if (!*(_BYTE *)(a1 + 504))
        sub_1D5287C98();
      v18 = *(_QWORD *)(a1 + 384);
      v19 = *(unsigned __int16 *)(v18 + 2 * (v13 - 1));
      v20 = *(unsigned __int16 *)(*(_QWORD *)(a1 + 448) + 2 * v12);
      v21 = v9 <= v19 || v9 < v20;
      if (v21
        || ((v22 = *(unsigned __int16 *)(v18 + 2 * v13),
             v23 = *(unsigned __int16 *)(*(_QWORD *)(a1 + 480) + 2 * v12),
             v10 > v22)
          ? (v24 = v10 < v23)
          : (v24 = 1),
            v24))
      {
        v28 = __cxa_allocate_exception(0x10uLL);
        MEMORY[0x1D8271938](v28, "RawCameraException");
        __cxa_throw(v28, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
      }
      v25 = *(_DWORD *)(*(_QWORD *)(a1 + 352) + 4 * v12);
      *(_DWORD *)buf = v19;
      *(_DWORD *)&buf[4] = v22;
      *(_DWORD *)&buf[8] = v20;
      *(_DWORD *)&buf[12] = v23;
      if (sub_1D53ADDB8((int *)buf, a3))
      {
        v26 = v17 >> 3;
        v27 = (char *)sub_1D5286394(a1, v25, v26);
        if (v27)
        {
          block[0] = MEMORY[0x1E0C809B0];
          block[1] = 3221225472;
          block[2] = sub_1D5287B54;
          block[3] = &unk_1E996FC68;
          block[4] = a1;
          block[5] = a2;
          block[6] = a3;
          block[7] = a4;
          v38 = *(_OWORD *)buf;
          block[8] = v27;
          block[9] = &v27[v26];
          dispatch_group_async(group, v35, block);
        }
      }
      ++v12;
      v13 += 2;
    }
    while (v11 != v12);
  }
  dispatch_group_wait(group, 0xFFFFFFFFFFFFFFFFLL);

  v32[2](v32);
}

void sub_1D5287A04(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1D5287AD0(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  os_signpost_id_t v4;
  uint8_t v5[16];

  sub_1D52EB058();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = v2;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v3, OS_SIGNPOST_INTERVAL_END, v4, "CPanasonicHuffmanUnpacker", (const char *)&unk_1D548AF1A, v5, 2u);
  }

}

void sub_1D5287B54(uint64_t a1)
{
  os_signpost_id_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = a1 + 80;
  v7 = *(unsigned __int8 **)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 72);
  sub_1D5286100(v2);
  sub_1D528644C(v2, v3, v4, v5, v6, v7, v8);
  free(*(void **)(a1 + 64));
}

_QWORD *sub_1D5287BD4(_QWORD *a1)
{
  void *v2;
  void *v3;

  *a1 = &off_1E996FC98;
  v2 = (void *)a1[69];
  if (v2)
  {
    a1[70] = v2;
    operator delete(v2);
  }
  v3 = (void *)a1[66];
  if (v3)
  {
    a1[67] = v3;
    operator delete(v3);
  }
  sub_1D5288714((uint64_t)(a1 + 24));
  return sub_1D5282F0C(a1);
}

void sub_1D5287C28(_QWORD *a1)
{
  void *v2;
  void *v3;

  *a1 = &off_1E996FC98;
  v2 = (void *)a1[69];
  if (v2)
  {
    a1[70] = v2;
    operator delete(v2);
  }
  v3 = (void *)a1[66];
  if (v3)
  {
    a1[67] = v3;
    operator delete(v3);
  }
  sub_1D5288714((uint64_t)(a1 + 24));
  sub_1D5282F0C(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D5287C90(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 512);
}

void sub_1D5287C98()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x1E0DE5048] + 16;
  __cxa_throw(exception, MEMORY[0x1E0DE4E90], MEMORY[0x1E0DE4380]);
}

_QWORD *sub_1D5287CCC(_QWORD *result, const void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = sub_1D5285464(result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1D5287D28(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_1D5287D44(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = sub_1D5282B4C(result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1D5287DA0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D5287DBC(uint64_t result, uint64_t *a2, uint64_t a3, char a4)
{
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  BOOL v28;
  unsigned int v29;
  uint64_t *v30;
  uint64_t *v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  BOOL v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  int64_t v57;
  int64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  unsigned int v65;
  uint64_t *v66;
  uint64_t v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int v84;
  uint64_t *v85;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;

  v7 = (uint64_t *)result;
LABEL_2:
  v8 = v7;
  while (2)
  {
    v7 = v8;
    v9 = (char *)a2 - (char *)v8;
    v10 = a2 - v8;
    switch(v10)
    {
      case 0uLL:
      case 1uLL:
        return result;
      case 2uLL:
        v38 = *v8;
        if ((unsigned __int16)*(a2 - 1) < (unsigned __int16)*v8)
        {
          *v8 = *(a2 - 1);
          *(a2 - 1) = v38;
        }
        return result;
      case 3uLL:
        return (uint64_t)sub_1D5288440(v8, v8 + 1, a2 - 1);
      case 4uLL:
        return (uint64_t)sub_1D528868C(v8, v8 + 1, v8 + 2, a2 - 1);
      case 5uLL:
        v39 = v8 + 1;
        v40 = v8 + 2;
        v41 = v8 + 3;
        result = (uint64_t)sub_1D528868C(v8, v8 + 1, v8 + 2, v8 + 3);
        v42 = v8[3];
        if ((unsigned __int16)*(a2 - 1) < (unsigned __int16)v42)
        {
          *v41 = *(a2 - 1);
          *(a2 - 1) = v42;
          v43 = *v41;
          v44 = *v40;
          v45 = (unsigned __int16)*v41;
          if (v45 < (unsigned __int16)*v40)
          {
            *v40 = v43;
            *v41 = v44;
            v46 = *v39;
            if (v45 < (unsigned __int16)*v39)
            {
              v8[1] = v43;
              v8[2] = v46;
              v47 = *v8;
              if (v45 < (unsigned __int16)*v8)
              {
                *v8 = v43;
                v8[1] = v47;
              }
            }
          }
        }
        return result;
      default:
        if (v9 <= 191)
        {
          v48 = v8 + 1;
          v50 = v8 == a2 || v48 == a2;
          if ((a4 & 1) != 0)
          {
            if (!v50)
            {
              v51 = 0;
              v52 = v8;
              do
              {
                v54 = *v52;
                v53 = v52[1];
                v52 = v48;
                if ((unsigned __int16)v53 < (unsigned __int16)v54)
                {
                  v55 = v51;
                  while (1)
                  {
                    *(uint64_t *)((char *)v8 + v55 + 8) = v54;
                    if (!v55)
                      break;
                    v54 = *(uint64_t *)((char *)v8 + v55 - 8);
                    v55 -= 8;
                    if ((unsigned __int16)v53 >= (unsigned __int16)v54)
                    {
                      v56 = (uint64_t *)((char *)v8 + v55 + 8);
                      goto LABEL_80;
                    }
                  }
                  v56 = v8;
LABEL_80:
                  *v56 = v53;
                }
                v48 = v52 + 1;
                v51 += 8;
              }
              while (v52 + 1 != a2);
            }
          }
          else if (!v50)
          {
            do
            {
              v88 = *v7;
              v87 = v7[1];
              v7 = v48;
              if ((unsigned __int16)v87 < (unsigned __int16)v88)
              {
                v89 = v48;
                do
                {
                  *v89 = v88;
                  v88 = *(v89 - 2);
                  --v89;
                }
                while ((unsigned __int16)v87 < (unsigned __int16)v88);
                *v89 = v87;
              }
              ++v48;
            }
            while (v7 + 1 != a2);
          }
          return result;
        }
        if (!a3)
        {
          if (v8 != a2)
          {
            v57 = (v10 - 2) >> 1;
            v58 = v57;
            do
            {
              v59 = v58;
              if (v57 >= v58)
              {
                v60 = (2 * v58) | 1;
                v61 = &v8[v60];
                v62 = *v61;
                if (2 * v59 + 2 < (uint64_t)v10)
                {
                  result = (unsigned __int16)*v61;
                  if (result < (unsigned __int16)v61[1])
                  {
                    v62 = v61[1];
                    ++v61;
                    v60 = 2 * v59 + 2;
                  }
                }
                v63 = &v8[v59];
                v64 = *v63;
                v65 = (unsigned __int16)*v63;
                if (v65 <= (unsigned __int16)v62)
                {
                  do
                  {
                    v66 = v61;
                    *v63 = v62;
                    if (v57 < v60)
                      break;
                    result = (2 * v60) | 1;
                    v61 = &v8[result];
                    v67 = 2 * v60 + 2;
                    v62 = *v61;
                    if (v67 < (uint64_t)v10)
                    {
                      v68 = (unsigned __int16)*v61;
                      if (v68 < (unsigned __int16)v61[1])
                      {
                        v62 = v61[1];
                        ++v61;
                        result = v67;
                      }
                    }
                    v63 = v66;
                    v60 = result;
                  }
                  while (v65 <= (unsigned __int16)v62);
                  *v66 = v64;
                }
              }
              v58 = v59 - 1;
            }
            while (v59);
            v69 = (unint64_t)v9 >> 3;
            do
            {
              v70 = 0;
              v71 = *v8;
              v72 = v8;
              do
              {
                v73 = &v72[v70];
                v76 = v73[1];
                v74 = v73 + 1;
                v75 = v76;
                v77 = (2 * v70) | 1;
                v78 = 2 * v70 + 2;
                if (v78 < v69)
                {
                  result = (unsigned __int16)v75;
                  if ((unsigned __int16)v75 < (unsigned __int16)v74[1])
                  {
                    v75 = v74[1];
                    ++v74;
                    v77 = v78;
                  }
                }
                *v72 = v75;
                v72 = v74;
                v70 = v77;
              }
              while (v77 <= (uint64_t)((unint64_t)(v69 - 2) >> 1));
              if (v74 == --a2)
              {
                *v74 = v71;
              }
              else
              {
                *v74 = *a2;
                *a2 = v71;
                v79 = (char *)v74 - (char *)v8 + 8;
                if (v79 >= 9)
                {
                  v80 = (((unint64_t)v79 >> 3) - 2) >> 1;
                  v81 = &v8[v80];
                  v82 = *v81;
                  v83 = *v74;
                  v84 = (unsigned __int16)*v74;
                  if (v84 > (unsigned __int16)*v81)
                  {
                    do
                    {
                      v85 = v81;
                      *v74 = v82;
                      if (!v80)
                        break;
                      v80 = (v80 - 1) >> 1;
                      v81 = &v8[v80];
                      v82 = *v81;
                      v74 = v85;
                    }
                    while (v84 > (unsigned __int16)*v81);
                    *v85 = v83;
                  }
                }
              }
            }
            while (v69-- > 2);
          }
          return result;
        }
        v11 = v10 >> 1;
        v12 = &v8[v10 >> 1];
        if ((unint64_t)v9 < 0x401)
        {
          result = (uint64_t)sub_1D5288440(&v7[v10 >> 1], v7, a2 - 1);
        }
        else
        {
          sub_1D5288440(v7, &v7[v10 >> 1], a2 - 1);
          sub_1D5288440(v7 + 1, v12 - 1, a2 - 2);
          sub_1D5288440(v7 + 2, &v7[v11 + 1], a2 - 3);
          result = (uint64_t)sub_1D5288440(v12 - 1, v12, &v7[v11 + 1]);
          v13 = *v7;
          *v7 = *v12;
          *v12 = v13;
        }
        --a3;
        v14 = *v7;
        if ((a4 & 1) == 0)
        {
          v15 = (unsigned __int16)*v7;
          if (*((unsigned __int16 *)v7 - 4) < (unsigned __int16)v14)
            goto LABEL_12;
          if (v15 >= *((unsigned __int16 *)a2 - 4))
          {
            v30 = v7 + 1;
            do
            {
              v8 = v30;
              if (v30 >= a2)
                break;
              ++v30;
            }
            while (v15 >= *(unsigned __int16 *)v8);
          }
          else
          {
            v8 = v7;
            do
              v29 = *((unsigned __int16 *)v8++ + 4);
            while (v15 >= v29);
          }
          v31 = a2;
          if (v8 < a2)
          {
            v31 = a2;
            do
              v32 = *((unsigned __int16 *)v31-- - 4);
            while (v15 < v32);
          }
          if (v8 < v31)
          {
            v33 = *v8;
            v34 = *v31;
            do
            {
              *v8 = v34;
              *v31 = v33;
              do
              {
                v35 = v8[1];
                ++v8;
                v33 = v35;
              }
              while (v15 >= (unsigned __int16)v35);
              do
              {
                v36 = *--v31;
                v34 = v36;
              }
              while (v15 < (unsigned __int16)v36);
            }
            while (v8 < v31);
          }
          v37 = v8 - 1;
          if (v8 - 1 != v7)
            *v7 = *v37;
          a4 = 0;
          *v37 = v14;
          continue;
        }
        v15 = (unsigned __int16)*v7;
LABEL_12:
        v16 = 0;
        do
          v17 = v7[++v16];
        while (v15 > (unsigned __int16)v17);
        v18 = &v7[v16];
        v19 = a2;
        if (v16 == 1)
        {
          v19 = a2;
          do
          {
            if (v18 >= v19)
              break;
            v21 = *((unsigned __int16 *)v19-- - 4);
          }
          while (v21 >= v15);
        }
        else
        {
          do
            v20 = *((unsigned __int16 *)v19-- - 4);
          while (v20 >= v15);
        }
        if (v18 >= v19)
        {
          v27 = v18 - 1;
        }
        else
        {
          v22 = *v19;
          v23 = &v7[v16];
          v24 = v19;
          do
          {
            *v23 = v22;
            *v24 = v17;
            do
            {
              v25 = v23[1];
              ++v23;
              v17 = v25;
            }
            while (v15 > (unsigned __int16)v25);
            do
            {
              v26 = *--v24;
              v22 = v26;
            }
            while (v15 <= (unsigned __int16)v26);
          }
          while (v23 < v24);
          v27 = v23 - 1;
        }
        if (v27 != v7)
          *v7 = *v27;
        *v27 = v14;
        if (v18 < v19)
        {
LABEL_33:
          result = sub_1D5287DBC(v7, v27, a3, a4 & 1);
          a4 = 0;
          v8 = v27 + 1;
          continue;
        }
        v28 = sub_1D52884C0(v7, v27);
        v8 = v27 + 1;
        result = sub_1D52884C0(v27 + 1, a2);
        if (!(_DWORD)result)
        {
          if (v28)
            continue;
          goto LABEL_33;
        }
        a2 = v27;
        if (!v28)
          goto LABEL_2;
        return result;
    }
  }
}

uint64_t *sub_1D5288440(uint64_t *result, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;

  v3 = *a2;
  v4 = *result;
  v5 = (unsigned __int16)*a2;
  v6 = *a3;
  v7 = (unsigned __int16)*a3;
  if (v5 >= (unsigned __int16)*result)
  {
    if (v7 < v5)
    {
      *a2 = v6;
      *a3 = v3;
      v8 = *result;
      if ((unsigned __int16)*a2 < (unsigned __int16)*result)
      {
        *result = *a2;
        *a2 = v8;
      }
    }
  }
  else
  {
    if (v7 >= v5)
    {
      v9 = (unsigned __int16)*result;
      *result = v3;
      *a2 = v4;
      if (v9 <= (unsigned __int16)*a3)
        return result;
      *a2 = *a3;
    }
    else
    {
      *result = v6;
    }
    *a3 = v4;
  }
  return result;
}

BOOL sub_1D52884C0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  _BOOL8 result;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;

  v4 = a2 - a1;
  result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      v6 = *a1;
      if ((unsigned __int16)*(a2 - 1) < (unsigned __int16)*a1)
      {
        *a1 = *(a2 - 1);
        *(a2 - 1) = v6;
      }
      return result;
    case 3:
      sub_1D5288440(a1, a1 + 1, a2 - 1);
      return 1;
    case 4:
      sub_1D528868C(a1, a1 + 1, a1 + 2, a2 - 1);
      return 1;
    case 5:
      v17 = a1 + 1;
      v18 = a1 + 2;
      v19 = a1 + 3;
      sub_1D528868C(a1, a1 + 1, a1 + 2, a1 + 3);
      v20 = a1[3];
      if ((unsigned __int16)*(a2 - 1) < (unsigned __int16)v20)
      {
        *v19 = *(a2 - 1);
        *(a2 - 1) = v20;
        v21 = *v19;
        v22 = *v18;
        v23 = (unsigned __int16)*v19;
        if (v23 < (unsigned __int16)*v18)
        {
          *v18 = v21;
          *v19 = v22;
          v24 = *v17;
          if (v23 < (unsigned __int16)*v17)
          {
            a1[1] = v21;
            a1[2] = v24;
            v25 = *a1;
            if (v23 < (unsigned __int16)*a1)
            {
              *a1 = v21;
              a1[1] = v25;
            }
          }
        }
      }
      return 1;
    default:
      v7 = a1 + 2;
      sub_1D5288440(a1, a1 + 1, a1 + 2);
      v8 = a1 + 3;
      if (a1 + 3 == a2)
        return 1;
      v9 = 0;
      v10 = 24;
      break;
  }
  while (1)
  {
    v11 = *v8;
    v12 = *v7;
    v13 = (unsigned __int16)*v8;
    if (v13 < (unsigned __int16)*v7)
    {
      v14 = v10;
      while (1)
      {
        *(uint64_t *)((char *)a1 + v14) = v12;
        v15 = v14 - 8;
        if (v14 == 8)
          break;
        v12 = *(uint64_t *)((char *)a1 + v14 - 16);
        v14 -= 8;
        if (v13 >= (unsigned __int16)v12)
        {
          v16 = (uint64_t *)((char *)a1 + v15);
          goto LABEL_13;
        }
      }
      v16 = a1;
LABEL_13:
      *v16 = v11;
      if (++v9 == 8)
        return v8 + 1 == a2;
    }
    v7 = v8;
    v10 += 8;
    if (++v8 == a2)
      return 1;
  }
}

uint64_t *sub_1D528868C(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t *result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = sub_1D5288440(a1, a2, a3);
  v9 = *a3;
  if ((unsigned __int16)*a4 < (unsigned __int16)*a3)
  {
    *a3 = *a4;
    *a4 = v9;
    v10 = *a2;
    if ((unsigned __int16)*a3 < (unsigned __int16)*a2)
    {
      *a2 = *a3;
      *a3 = v10;
      v11 = *a1;
      if ((unsigned __int16)*a2 < (unsigned __int16)*a1)
      {
        *a1 = *a2;
        *a2 = v11;
      }
    }
  }
  return result;
}

uint64_t sub_1D5288714(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  if (*(_BYTE *)(a1 + 312))
  {
    v2 = *(void **)(a1 + 288);
    if (v2)
    {
      *(_QWORD *)(a1 + 296) = v2;
      operator delete(v2);
    }
  }
  if (*(_BYTE *)(a1 + 280))
  {
    v3 = *(void **)(a1 + 256);
    if (v3)
    {
      *(_QWORD *)(a1 + 264) = v3;
      operator delete(v3);
    }
  }
  if (*(_BYTE *)(a1 + 248))
  {
    v4 = *(void **)(a1 + 224);
    if (v4)
    {
      *(_QWORD *)(a1 + 232) = v4;
      operator delete(v4);
    }
  }
  if (*(_BYTE *)(a1 + 216))
  {
    v5 = *(void **)(a1 + 192);
    if (v5)
    {
      *(_QWORD *)(a1 + 200) = v5;
      operator delete(v5);
    }
  }
  if (*(_BYTE *)(a1 + 184))
  {
    v6 = *(void **)(a1 + 160);
    if (v6)
    {
      *(_QWORD *)(a1 + 168) = v6;
      operator delete(v6);
    }
  }
  if (*(_BYTE *)(a1 + 144))
  {
    v7 = *(void **)(a1 + 120);
    if (v7)
    {
      *(_QWORD *)(a1 + 128) = v7;
      operator delete(v7);
    }
  }
  if (*(_BYTE *)(a1 + 112))
  {
    v8 = *(void **)(a1 + 88);
    if (v8)
    {
      *(_QWORD *)(a1 + 96) = v8;
      operator delete(v8);
    }
  }
  if (*(_BYTE *)(a1 + 56))
  {
    v9 = *(void **)(a1 + 32);
    if (v9)
    {
      *(_QWORD *)(a1 + 40) = v9;
      operator delete(v9);
    }
  }
  if (*(_BYTE *)(a1 + 24))
  {
    v10 = *(void **)a1;
    if (*(_QWORD *)a1)
    {
      *(_QWORD *)(a1 + 8) = v10;
      operator delete(v10);
    }
  }
  return a1;
}

void sub_1D528880C(void *a1@<X0>, _QWORD *a2@<X8>)
{
  id v3;

  v3 = a1;
  sub_1D528FB3C(&v3, a2);

}

void sub_1D5288850(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{

  _Unwind_Resume(a1);
}

__CFString *sub_1D5288864(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  v5 = a1;
  if (*(char *)(a1 + 23) < 0)
  {
    v5 = *(_QWORD *)a1;
    if (!*(_QWORD *)a1)
      return &stru_1E99A7480;
  }
  objc_msgSend_stringWithUTF8String_(MEMORY[0x1E0CB3940], a2, v5, a4, a5);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

_QWORD *sub_1D52888A4(_QWORD *a1, void *a2)
{
  id v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;

  v3 = a2;
  v8 = v3;
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1E996FD90;
  if (v3)
  {
    v9 = objc_msgSend_mutableCopy(v3, v4, v5, v6, v7);
  }
  else
  {
    objc_msgSend_dictionary(MEMORY[0x1E0C99E08], v4, v5, v6, v7);
    v9 = objc_claimAutoreleasedReturnValue();
  }
  v10 = (void *)a1[1];
  a1[1] = v9;

  return a1;
}

void sub_1D5288918(_Unwind_Exception *a1)
{
  void *v1;
  uint64_t v2;

  _Unwind_Resume(a1);
}

void sub_1D5288938(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;

  v3 = MEMORY[0x1D82721B4](a2);
  v4 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v3;

}

uint64_t sub_1D5288964(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *exception;
  void *v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  (*(void (**)(uint64_t, const __CFString *))(v1 + 16))(v1, CFSTR("methodNumber"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    v10 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](v10, "RawCameraException");
    __cxa_throw(v10, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v7 = objc_msgSend_shortValue(v2, v3, v4, v5, v6);

  return v7;
}

void sub_1D5288A38(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1D5288A6C(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _WORD **a6@<X8>)
{
  char *v8;
  void *__p[2];
  char v10;
  __int16 v11;

  v11 = 0;
  v8 = (char *)objc_msgSend_UTF8String(off_1EFF31FA0[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v8);
  sub_1D5288C68(a1, (uint64_t)__p, &v11);
  if (v10 < 0)
    operator delete(__p[0]);
  sub_1D528EA60(a6, 4, &v11);
  sub_1D52850A0(__p, "black0");
  if (a6[1] == *a6)
    sub_1D528EAE0();
  sub_1D5288C68(a1, (uint64_t)__p, *a6);
  if (v10 < 0)
    operator delete(__p[0]);
  sub_1D52850A0(__p, "black1");
  if ((unint64_t)((char *)a6[1] - (char *)*a6) <= 2)
    sub_1D528EAE0();
  sub_1D5288C68(a1, (uint64_t)__p, *a6 + 1);
  if (v10 < 0)
    operator delete(__p[0]);
  sub_1D52850A0(__p, "black2");
  if ((unint64_t)((char *)a6[1] - (char *)*a6) <= 4)
    sub_1D528EAE0();
  sub_1D5288C68(a1, (uint64_t)__p, *a6 + 2);
  if (v10 < 0)
    operator delete(__p[0]);
  sub_1D52850A0(__p, "black3");
  if ((unint64_t)((char *)a6[1] - (char *)*a6) <= 6)
    sub_1D528EAE0();
  sub_1D5288C68(a1, (uint64_t)__p, *a6 + 3);
  if (v10 < 0)
    operator delete(__p[0]);
}

void sub_1D5288C08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  uint64_t v14;
  void *v16;

  v16 = *(void **)v14;
  if (*(_QWORD *)v14)
  {
    *(_QWORD *)(v14 + 8) = v16;
    operator delete(v16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D5288C68(uint64_t a1, uint64_t a2, _WORD *a3)
{
  void *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isKindOfClass;
  uint64_t v10;
  uint64_t v11;

  sub_1D528BFC4(a1, a2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();
  if ((isKindOfClass & 1) != 0)
  {
    v10 = objc_msgSend_longLongValue(v4, v5, v6, v7, v8);
    v11 = 0xFFFFLL;
    if (v10 < 0xFFFF)
      v11 = v10;
    *a3 = v11 & ~(unsigned __int16)(v11 >> 63);
  }

  return isKindOfClass & 1;
}

void sub_1D5288CE0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_1D5288CF4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  unsigned __int16 v10;

  v10 = 4095;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF31FA8[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288C68(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D5288D5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D5288D78(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 1.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF31FB0[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D5288DE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D5288DFC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  void *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isKindOfClass;
  uint64_t v10;

  sub_1D528BFC4(a1, a2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();
  if ((isKindOfClass & 1) != 0)
  {
    objc_msgSend_doubleValue(v4, v5, v6, v7, v8);
    *a3 = v10;
  }

  return isKindOfClass & 1;
}

void sub_1D5288E60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1D5288E70(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  char *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  char *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void *__p[2];
  char v32;
  __int16 v33;

  v33 = 4095;
  v8 = (char *)objc_msgSend_UTF8String(off_1EFF31FB8[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v8);
  sub_1D5288C68(a1, (uint64_t)__p, &v33);
  if (v32 < 0)
    operator delete(__p[0]);
  sub_1D528EA60(a6, 4, &v33);
  v13 = (char *)objc_msgSend_UTF8String(off_1EFF31FC0[0], v9, v10, v11, v12);
  sub_1D52850A0(__p, v13);
  v14 = sub_1D5288C68(a1, (uint64_t)__p, (_WORD *)*a6);
  v19 = v14;
  if (v32 < 0)
  {
    operator delete(__p[0]);
    if (!v19)
      return;
  }
  else if (!v14)
  {
    return;
  }
  v20 = (char *)objc_msgSend_UTF8String(off_1EFF31FC8[0], v15, v16, v17, v18);
  sub_1D52850A0(__p, v20);
  sub_1D5288C68(a1, (uint64_t)__p, (_WORD *)(*a6 + 2));
  if (v32 < 0)
    operator delete(__p[0]);
  v25 = (char *)objc_msgSend_UTF8String(off_1EFF31FD0[0], v21, v22, v23, v24);
  sub_1D52850A0(__p, v25);
  sub_1D5288C68(a1, (uint64_t)__p, (_WORD *)(*a6 + 4));
  if (v32 < 0)
    operator delete(__p[0]);
  v30 = (char *)objc_msgSend_UTF8String(off_1EFF31FD8[0], v26, v27, v28, v29);
  sub_1D52850A0(__p, v30);
  sub_1D5288C68(a1, (uint64_t)__p, (_WORD *)(*a6 + 6));
  if (v32 < 0)
    operator delete(__p[0]);
}

void sub_1D5288FEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  uint64_t v14;
  void *v16;

  if (a14 < 0)
    operator delete(__p);
  v16 = *(void **)v14;
  if (*(_QWORD *)v14)
  {
    *(_QWORD *)(v14 + 8) = v16;
    operator delete(v16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D528904C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  unsigned __int8 v10;

  v10 = 0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF31FE0[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D52890CC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D52890B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D52890CC(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  void *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isKindOfClass;

  sub_1D528BFC4(a1, a2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();
  if ((isKindOfClass & 1) != 0)
    *a3 = objc_msgSend_BOOLValue(v4, v5, v6, v7, v8);

  return isKindOfClass & 1;
}

void sub_1D5289130(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1D5289140(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  char *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  char *v10;
  char *v11;
  void *__p[2];
  char v13;
  char *v14;
  char *v15;
  char *v16;

  v4 = getenv("RAWCAMERA_M1");
  if (v4)
  {
    v9 = v4;
    sub_1D528EB68(&v14, 9uLL);
    if (sscanf(v9, "{ { %lg , %lg , %lg } , { %lg , %lg , %lg } , { %lg , %lg , %lg } }", v14, v14 + 8, v14 + 16, v14 + 24, v14 + 32, v14 + 40, v14 + 48, v14 + 56, v14 + 64) == 9)
    {
      sub_1D5338D3C((uint64_t)a2, 3u, 3u);
      sub_1D533A15C(a2, (uint64_t)&v14);
      v10 = v14;
      if (!v14)
        return;
      v15 = v14;
      goto LABEL_14;
    }
    if (v14)
    {
      v15 = v14;
      operator delete(v14);
    }
  }
  v11 = (char *)objc_msgSend_UTF8String(off_1EFF31FE8[0], v5, v6, v7, v8);
  sub_1D52850A0(__p, v11);
  sub_1D52892E8(a1, (uint64_t)__p, &v14);
  if (v13 < 0)
    operator delete(__p[0]);
  if (sub_1D5339398((unsigned int *)&v14))
    sub_1D5338BF8(a2, (uint64_t)&v14);
  else
    sub_1D5338F84(3u, (uint64_t)a2);
  v10 = v15;
  if (v15)
  {
    v16 = v15;
LABEL_14:
    operator delete(v10);
  }
}

void sub_1D528928C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  uint64_t v23;
  uint64_t v24;
  void *v26;
  void *v27;

  v26 = *(void **)(v23 + 8);
  if (v26)
  {
    *(_QWORD *)(v23 + 16) = v26;
    operator delete(v26);
  }
  v27 = *(void **)(v24 - 64);
  if (v27)
  {
    *(_QWORD *)(v24 - 56) = v27;
    operator delete(v27);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D52892E8(uint64_t a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  unint64_t v4;
  unsigned int v5;
  void *__p;
  _BYTE *v7;
  uint64_t v8;

  __p = 0;
  v7 = 0;
  v8 = 0;
  if (sub_1D528C200(a1, a2, (char *)&__p))
  {
    v4 = ((v7 - (_BYTE *)__p) >> 3) / 3uLL;
    sub_1D528304C(&v5, &v4);
    sub_1D5338D3C((uint64_t)a3, v5, 3u);
    sub_1D533A15C(a3, (uint64_t)&__p);
  }
  else
  {
    sub_1D5339168(a3);
  }
  if (__p)
  {
    v7 = __p;
    operator delete(__p);
  }
}

void sub_1D5289384(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  uint64_t v13;
  void *v15;

  v15 = *(void **)(v13 + 8);
  if (v15)
  {
    *(_QWORD *)(v13 + 16) = v15;
    operator delete(v15);
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1D52893C0(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  char *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  char *v10;
  char *v11;
  void *__p[2];
  char v13;
  char *v14;
  char *v15;
  char *v16;

  v4 = getenv("RAWCAMERA_M2");
  if (v4)
  {
    v9 = v4;
    sub_1D528EB68(&v14, 9uLL);
    if (sscanf(v9, "{ { %lg , %lg , %lg } , { %lg , %lg , %lg } , { %lg , %lg , %lg } }", v14, v14 + 8, v14 + 16, v14 + 24, v14 + 32, v14 + 40, v14 + 48, v14 + 56, v14 + 64) == 9)
    {
      sub_1D5338D3C((uint64_t)a2, 3u, 3u);
      sub_1D533A15C(a2, (uint64_t)&v14);
      v10 = v14;
      if (!v14)
        return;
      v15 = v14;
      goto LABEL_14;
    }
    if (v14)
    {
      v15 = v14;
      operator delete(v14);
    }
  }
  v11 = (char *)objc_msgSend_UTF8String(off_1EFF31FF0[0], v5, v6, v7, v8);
  sub_1D52850A0(__p, v11);
  sub_1D52892E8(a1, (uint64_t)__p, &v14);
  if (v13 < 0)
    operator delete(__p[0]);
  if (sub_1D5339398((unsigned int *)&v14))
    sub_1D5338BF8(a2, (uint64_t)&v14);
  else
    sub_1D5338F84(3u, (uint64_t)a2);
  v10 = v15;
  if (v15)
  {
    v16 = v15;
LABEL_14:
    operator delete(v10);
  }
}

void sub_1D528950C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  uint64_t v23;
  uint64_t v24;
  void *v26;
  void *v27;

  v26 = *(void **)(v23 + 8);
  if (v26)
  {
    *(_QWORD *)(v23 + 16) = v26;
    operator delete(v26);
  }
  v27 = *(void **)(v24 - 64);
  if (v27)
  {
    *(_QWORD *)(v24 - 56) = v27;
    operator delete(v27);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D5289568(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  char *v8;
  void *__p[2];
  char v10;
  unsigned int v11;
  void *v12;
  void *v13;

  v8 = (char *)objc_msgSend_UTF8String(off_1EFF31FF8[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v8);
  sub_1D52892E8(a1, (uint64_t)__p, &v11);
  if (v10 < 0)
    operator delete(__p[0]);
  if (sub_1D5339398(&v11))
    sub_1D5338BF8(a6, (uint64_t)&v11);
  else
    sub_1D5339168(a6);
  if (v12)
  {
    v13 = v12;
    operator delete(v12);
  }
}

void sub_1D52895FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1D528962C(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  char *v8;
  void *__p[2];
  char v10;
  unsigned int v11;
  void *v12;
  void *v13;

  v8 = (char *)objc_msgSend_UTF8String(off_1EFF32000[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v8);
  sub_1D52892E8(a1, (uint64_t)__p, &v11);
  if (v10 < 0)
    operator delete(__p[0]);
  if (sub_1D5339398(&v11))
    sub_1D5338BF8(a6, (uint64_t)&v11);
  else
    sub_1D5339168(a6);
  if (v12)
  {
    v13 = v12;
    operator delete(v12);
  }
}

void sub_1D52896C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1D52896F0(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  char *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int v14;
  int v15;
  unsigned int v16;
  void *v17;
  void *v18;
  void *__p;
  void *v20;
  void *v21;
  double v22;
  uint64_t v23;
  void *v24;
  void *v25;

  v8 = (char *)objc_msgSend_UTF8String(off_1EFF32008[0], a2, a3, a4, a5);
  sub_1D52850A0(&__p, v8);
  sub_1D52892E8(a1, (uint64_t)&__p, &v23);
  if (SHIBYTE(v21) < 0)
    operator delete(__p);
  if (sub_1D5339398((unsigned int *)&v23) == 3 && sub_1D53393A0((uint64_t)&v23) == 3)
  {
    sub_1D5338BF8(a6, (uint64_t)&v23);
    goto LABEL_15;
  }
  v22 = 0.0;
  v13 = (char *)objc_msgSend_UTF8String(off_1EFF32008[0], v9, v10, v11, v12);
  sub_1D52850A0(&__p, v13);
  v14 = sub_1D5288DFC(a1, (uint64_t)&__p, &v22);
  v15 = v14;
  if (SHIBYTE(v21) < 0)
  {
    operator delete(__p);
    if (v15)
      goto LABEL_8;
LABEL_14:
    sub_1D5338F84(3u, (uint64_t)a6);
    goto LABEL_15;
  }
  if (!v14)
    goto LABEL_14;
LABEL_8:
  sub_1D5338F84(3u, (uint64_t)&v16);
  sub_1D5339590(&v16, (uint64_t)&__p, v22);
  sub_1D53393A8(&v23, (uint64_t)&__p);
  if (v20)
  {
    v21 = v20;
    operator delete(v20);
  }
  if (v17)
  {
    v18 = v17;
    operator delete(v17);
  }
  sub_1D5338BF8(a6, (uint64_t)&v23);
LABEL_15:
  if (v24)
  {
    v25 = v24;
    operator delete(v24);
  }
}

void sub_1D5289840(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  uint64_t v16;
  void *v18;

  if (__p)
    operator delete(__p);
  if (a11)
    operator delete(a11);
  v18 = *(void **)(v16 - 56);
  if (v18)
  {
    *(_QWORD *)(v16 - 48) = v18;
    operator delete(v18);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1D52898C0(uint64_t a1)
{
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v7;
  void *__p[2];
  char v9;
  char v10;

  if ((int)sub_1D5288964(a1) > 6)
    return 0;
  v10 = 1;
  v7 = (char *)objc_msgSend_UTF8String(off_1EFF32010[0], v2, v3, v4, v5);
  sub_1D52850A0(__p, v7);
  sub_1D52890CC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10 != 0;
}

void sub_1D5289944(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D5289960(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  unsigned __int8 v10;

  v10 = 0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32018[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D52890CC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D52899C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL sub_1D52899E0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  __int16 v10;

  v10 = 0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32020[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288C68(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10 != 0;
}

void sub_1D5289A4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D5289A68(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  unsigned __int8 v10;

  v10 = 0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32028[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D52890CC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D5289ACC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D5289AE8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  unsigned __int8 v10;

  v10 = 1;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32030[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D52890CC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D5289B50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D5289B6C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  unsigned __int8 v10;

  v10 = 1;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32038[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D52890CC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D5289BD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D5289BF0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  unsigned __int8 v10;

  v10 = 1;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32040[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D52890CC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D5289C58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL sub_1D5289C74(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  __int16 v10;

  v10 = 1;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32048[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288C68(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10 != 0;
}

void sub_1D5289CE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D5289D00(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.08;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32050[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return fmin(fmax(v10, 0.0), 0.2);
}

void sub_1D5289D88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D5289DA4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.12;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32058[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return fmin(fmax(v10, 0.0), 0.3);
}

void sub_1D5289E2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D5289E48(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32060[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D5289EAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D5289EC8(uint64_t a1)
{
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *exception;
  void *__p[2];
  char v10;
  double v11;

  if ((int)sub_1D5288964(a1) <= 6)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v11 = 0.9;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32068[0], v2, v3, v4, v5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v11);
  if (v10 < 0)
    operator delete(__p[0]);
  return v11;
}

void sub_1D5289F74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D5289FA0(uint64_t a1)
{
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *exception;
  void *__p[2];
  char v10;
  double v11;

  if ((int)sub_1D5288964(a1) <= 6)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v11 = 0.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32070[0], v2, v3, v4, v5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v11);
  if (v10 < 0)
    operator delete(__p[0]);
  return v11;
}

void sub_1D528A040(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528A06C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 1.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32078[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528A0D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528A0F0(uint64_t a1)
{
  char *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  char v9;
  void *__p[2];
  char v12;
  double v13;

  v13 = 0.0;
  v2 = getenv("RAWCAMERA_HUEMAG_MR");
  if (!v2)
  {
    v7 = (char *)objc_msgSend_UTF8String(off_1EFF32080[0], v3, v4, v5, v6);
    sub_1D52850A0(__p, v7);
    v8 = sub_1D5288DFC(a1, (uint64_t)__p, &v13);
    v9 = v8;
    if (v12 < 0)
    {
      operator delete(__p[0]);
      if ((v9 & 1) != 0)
        return v13;
    }
    else if ((v8 & 1) != 0)
    {
      return v13;
    }
    return 0.0;
  }
  sscanf(v2, "%lf", &v13);
  return v13;
}

void sub_1D528A190(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528A1AC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  int v7;
  double result;
  void *__p[2];
  char v10;
  double v11;

  v11 = 0.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32088[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  v7 = sub_1D5288DFC(a1, (uint64_t)__p, &v11);
  if (v10 < 0)
    operator delete(__p[0]);
  result = v11;
  if (!v7)
    return 0.0;
  return result;
}

void sub_1D528A220(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528A23C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  int v7;
  double result;
  void *__p[2];
  char v10;
  double v11;

  v11 = 0.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32090[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  v7 = sub_1D5288DFC(a1, (uint64_t)__p, &v11);
  if (v10 < 0)
    operator delete(__p[0]);
  result = v11;
  if (!v7)
    return 0.0;
  return result;
}

void sub_1D528A2B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528A2CC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  int v7;
  double result;
  void *__p[2];
  char v10;
  double v11;

  v11 = 0.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32098[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  v7 = sub_1D5288DFC(a1, (uint64_t)__p, &v11);
  if (v10 < 0)
    operator delete(__p[0]);
  result = v11;
  if (!v7)
    return 0.0;
  return result;
}

void sub_1D528A340(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528A35C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  int v7;
  double result;
  void *__p[2];
  char v10;
  double v11;

  v11 = 0.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF320A0[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  v7 = sub_1D5288DFC(a1, (uint64_t)__p, &v11);
  if (v10 < 0)
    operator delete(__p[0]);
  result = v11;
  if (!v7)
    return 0.0;
  return result;
}

void sub_1D528A3D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528A3EC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  int v7;
  double result;
  void *__p[2];
  char v10;
  double v11;

  v11 = 0.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF320A8[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  v7 = sub_1D5288DFC(a1, (uint64_t)__p, &v11);
  if (v10 < 0)
    operator delete(__p[0]);
  result = v11;
  if (!v7)
    return 0.0;
  return result;
}

void sub_1D528A460(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D528A47C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  unsigned __int8 v10;

  v10 = 1;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF320B0[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D52890CC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528A4E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D528A500(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  unsigned __int8 v10;

  v10 = 1;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF320B8[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D52890CC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528A568(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528A584(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF320C0[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return fmin(fmax(v10, -1.0), 1.0);
}

void sub_1D528A5F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528A614(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF320C8[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return fmin(fmax(v10, -1.0), 1.0);
}

void sub_1D528A688(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528A6A4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF320D0[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return fmin(fmax(v10, -1.0), 1.0);
}

void sub_1D528A718(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D528A734(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  unsigned int v10;

  v10 = 0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF320D8[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D528A7C4(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  if (v10 >= 0x9C41)
    return 40000;
  else
    return v10;
}

void sub_1D528A7A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D528A7C4(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  void *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  sub_1D528BFC4(a1, a2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && (v9 = objc_msgSend_longLongValue(v4, v5, v6, v7, v8), !HIDWORD(v9)))
  {
    *a3 = v9;
    v10 = 1;
  }
  else
  {
    v10 = 0;
  }

  return v10;
}

void sub_1D528A830(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

double sub_1D528A844(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 1.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF320E0[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528A8AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528A8C8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 1.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF320E8[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528A930(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528A94C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 2.67;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF320F0[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return fmin(fmax(v10, 0.0), 5.0);
}

void sub_1D528A9D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528A9EC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 26.15;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF320F8[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return fmin(fmax(v10, 0.3), 200.0);
}

void sub_1D528AA74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528AA90(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 2.2;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32100[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return fmin(fmax(v10, 1.2), 2.3);
}

void sub_1D528AB18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528AB34(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32108[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528AB98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528ABB4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 400.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32110[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528AC1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528AC38(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32118[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528AC9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528ACB8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32120[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return fmin(fmax(v10, 0.0), 5.0);
}

void sub_1D528AD2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528AD48(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 1.5;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32128[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return fmin(fmax(v10, 0.0), 5.0);
}

void sub_1D528ADC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528ADDC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 3.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32130[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return fmin(fmax(v10, 0.0), 10.0);
}

void sub_1D528AE54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528AE70(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 4.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32138[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528AED8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528AEF4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.00145;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32140[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528AF68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528AF84(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.004;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32148[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528AFF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528B014(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.0031;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32150[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528B088(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528B0A4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.027;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32158[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528B118(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528B134(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 4.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32160[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528B19C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528B1B8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 2.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32168[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return fmin(fmax(v10, 1.0), 10.0);
}

void sub_1D528B230(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528B24C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 24.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32170[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528B2B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528B2D0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.27;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32178[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return fmin(fmax(v10, 0.0), 0.75);
}

void sub_1D528B354(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528B370(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.27;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32180[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return fmin(fmax(v10, 0.0), 0.75);
}

void sub_1D528B3F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528B410(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.0025;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32188[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return fmin(fmax(v10, 0.0), 0.02);
}

void sub_1D528B498(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528B4B4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.0025;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32190[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return fmin(fmax(v10, 0.0), 0.02);
}

void sub_1D528B53C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528B558(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32198[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528B5BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528B5D8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.15;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF321A0[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528B644(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528B660(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.43;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF321A8[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528B6D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528B6F0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.0883;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF321B0[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528B764(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528B780(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.000028;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF321B8[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528B7F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528B810(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.0000000431;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF321C0[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528B884(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528B8A0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.8725;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF321C8[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528B914(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528B930(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.00017;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF321D0[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528B9A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528B9C0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.0000069973;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF321D8[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528BA34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528BA50(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 400.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF321E0[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528BAB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528BAD4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 2.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF321E8[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528BB3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528BB58(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF321F0[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528BBBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D528BBD8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  __int16 v10;

  v10 = 3;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF321F8[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288C68(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  if ((unint64_t)v10 >= 0xA)
    return 3;
  else
    return dword_1D544836C[v10];
}

void sub_1D528BC5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL sub_1D528BC78(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  __int16 v10;

  v10 = 0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32200[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288C68(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10 == 1;
}

void sub_1D528BCE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528BD00(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32208[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528BD64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1D528BD80(uint64_t a1@<X0>, double **a2@<X8>)
{
  double *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  float v22;
  float v23;
  float v24;
  float v25;
  float v26;
  float v27;
  float v28;
  float v29;
  void *__p[2];
  char v31;

  sub_1D52C1058(a2);
  v4 = *a2;
  *(_OWORD *)v4 = xmmword_1D54481C0;
  *((_OWORD *)v4 + 1) = xmmword_1D54481D0;
  *((_OWORD *)v4 + 2) = xmmword_1D54481E0;
  *((_OWORD *)v4 + 3) = xmmword_1D54481F0;
  v9 = (char *)objc_msgSend_UTF8String(off_1EFF32210[0], v5, v6, v7, v8);
  sub_1D52850A0(__p, v9);
  sub_1D528BFC4(a1, (uint64_t)__p);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if (v31 < 0)
    operator delete(__p[0]);
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0 || objc_msgSend_count(v10, v11, v12, v13, v14) == 8)
    {
      v15 = 0;
      while (1)
      {
        objc_msgSend_objectAtIndexedSubscript_(v10, v11, v15, v13, v14);
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
          break;
LABEL_16:

        if (++v15 == 8)
          goto LABEL_17;
      }
      objc_msgSend_doubleValue(v16, v17, v18, v19, v20);
      switch(v15)
      {
        case 0:
          v22 = v21;
          **a2 = v22;
          goto LABEL_16;
        case 1:
          v23 = v21;
          (*a2)[2] = v23;
          goto LABEL_16;
        case 2:
          v24 = v21;
          (*a2)[1] = v24;
          goto LABEL_16;
        case 3:
          v25 = v21;
          (*a2)[4] = v25;
          goto LABEL_16;
        case 4:
          v26 = v21;
          (*a2)[3] = v26;
          goto LABEL_16;
        case 5:
          v27 = v21;
          (*a2)[6] = v27;
          goto LABEL_16;
        case 6:
          v28 = v21;
          (*a2)[5] = v28;
          goto LABEL_16;
        case 7:
          v29 = v21;
          (*a2)[7] = v29;

          break;
        default:
          goto LABEL_16;
      }
    }
  }
LABEL_17:

}

void sub_1D528BF78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;

  if (a15 < 0)
    operator delete(__p);
  sub_1D5282EB4(v15);
  _Unwind_Resume(a1);
}

id sub_1D528BFC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  int v24;

  v24 = sub_1D5288964(a1);
  v4 = sub_1D52B488C(&v24);
  if (*(char *)(a2 + 23) >= 0)
    objc_msgSend_stringWithFormat_(MEMORY[0x1E0CB3940], v5, (uint64_t)CFSTR("%s_%d"), v6, v7, a2, v4);
  else
    objc_msgSend_stringWithFormat_(MEMORY[0x1E0CB3940], v5, (uint64_t)CFSTR("%s_%d"), v6, v7, *(_QWORD *)a2, v4);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D528E50C(a1);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v9, v10, (uint64_t)v8, v11, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  if (v13)
  {
    sub_1D528E728(a1, v13);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    if (*(char *)(a2 + 23) >= 0)
      objc_msgSend_stringWithUTF8String_(MEMORY[0x1E0CB3940], v14, a2, v15, v16);
    else
      objc_msgSend_stringWithUTF8String_(MEMORY[0x1E0CB3940], v14, *(_QWORD *)a2, v15, v16);
    v18 = objc_claimAutoreleasedReturnValue();

    sub_1D528E50C(a1);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_objectForKeyedSubscript_(v19, v20, v18, v21, v22);
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    sub_1D528E728(a1, v13);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (void *)v18;
  }

  return v17;
}

void sub_1D528C0F8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1D528C12C(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char *v8;
  BOOL v9;
  BOOL v10;
  void *__p[2];
  char v12;
  void *v13[2];
  uint64_t v14;

  v13[0] = 0;
  v13[1] = 0;
  v14 = 0;
  v8 = (char *)objc_msgSend_UTF8String(off_1EFF32218[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v8);
  v9 = sub_1D528C200(a1, (uint64_t)__p, (char *)v13);
  v10 = v9;
  if (v12 < 0)
  {
    operator delete(__p[0]);
    if (v10)
      goto LABEL_3;
  }
  else if (v9)
  {
LABEL_3:
    *(_OWORD *)a6 = *(_OWORD *)v13;
    *(_QWORD *)(a6 + 16) = v14;
    return;
  }
  *(_QWORD *)a6 = 0;
  *(_QWORD *)(a6 + 8) = 0;
  *(_QWORD *)(a6 + 16) = 0;
  if (v13[0])
  {
    v13[1] = v13[0];
    operator delete(v13[0]);
  }
}

void sub_1D528C1CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17)
{
  if (a15 < 0)
    operator delete(__p);
  if (a16)
    operator delete(a16);
  _Unwind_Resume(exception_object);
}

BOOL sub_1D528C200(uint64_t a1, uint64_t a2, char *a3)
{
  void *v4;
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  unint64_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  void *__p;
  _BYTE *v25;

  sub_1D528BFC4(a1, a2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v5 = v4;
    v10 = objc_msgSend_count(v5, v6, v7, v8, v9);
    v23 = 0;
    sub_1D528F9B4(&__p, v10, &v23);
    if (v10)
    {
      v14 = 0;
      v15 = 0;
      while (1)
      {
        objc_msgSend_objectAtIndexedSubscript_(v5, v11, v15, v12, v13);
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0)
          break;
        objc_msgSend_doubleValue(v16, v17, v18, v19, v20);
        if (v15 >= (v25 - (_BYTE *)__p) >> 3)
          sub_1D528EAE0();
        *((_QWORD *)__p + v15) = v21;

        v14 = ++v15 >= v10;
        if (v10 == v15)
          goto LABEL_7;
      }

    }
    else
    {
LABEL_7:
      if (&__p != (void **)a3)
        sub_1D528FA34(a3, (char *)__p, (uint64_t)v25, (v25 - (_BYTE *)__p) >> 3);
      v14 = 1;
    }
    if (__p)
    {
      v25 = __p;
      operator delete(__p);
    }

  }
  else
  {
    v14 = 0;
  }

  return v14;
}

void sub_1D528C354(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  void *v11;
  void *v12;

  if (__p)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_1D528C3A0(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X8>)
{
  char *v8;
  BOOL v9;
  BOOL v10;
  void *v11;
  void *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *__p[2];
  char v19;
  void *v20;
  _BYTE *v21;
  uint64_t v22;

  v20 = 0;
  v21 = 0;
  v22 = 0;
  v8 = (char *)objc_msgSend_UTF8String(off_1EFF32220[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v8);
  v9 = sub_1D528C200(a1, (uint64_t)__p, (char *)&v20);
  v10 = v9;
  if (v19 < 0)
  {
    operator delete(__p[0]);
    if (!v10)
      goto LABEL_4;
  }
  else if (!v9)
  {
    goto LABEL_4;
  }
  v12 = v20;
  v11 = v21;
  v13 = v21 - (_BYTE *)v20;
  if ((unint64_t)(((v21 - (_BYTE *)v20) >> 3) - 5) <= 0xFFFFFFFFFFFFFFFDLL)
  {
LABEL_4:
    sub_1D5338BEC(a6);
    goto LABEL_10;
  }
  v14 = v13 >> 3;
  sub_1D5338D3C((uint64_t)a6, v13 >> 3, v13 >> 3);
  sub_1D5339324(a6);
  if (v11 != v12)
  {
    v15 = 0;
    do
    {
      v16 = *((_QWORD *)v20 + v15);
      __p[0] = (void *)sub_1D5339044((uint64_t)a6, v15);
      __p[1] = v17;
      *(_QWORD *)sub_1D53390D4((uint64_t)__p, v15++) = v16;
    }
    while (v15 < v14);
  }
LABEL_10:
  if (v20)
  {
    v21 = v20;
    operator delete(v20);
  }
}

void sub_1D528C4C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16)
{
  uint64_t v16;
  void *v18;

  v18 = *(void **)(v16 + 8);
  if (v18)
  {
    *(_QWORD *)(v16 + 16) = v18;
    operator delete(v18);
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1D528C514(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char *v8;
  BOOL v9;
  BOOL v10;
  void *__p[2];
  char v12;
  void *v13[2];
  uint64_t v14;

  v13[0] = 0;
  v13[1] = 0;
  v14 = 0;
  v8 = (char *)objc_msgSend_UTF8String(off_1EFF32228[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v8);
  v9 = sub_1D528C200(a1, (uint64_t)__p, (char *)v13);
  v10 = v9;
  if (v12 < 0)
  {
    operator delete(__p[0]);
    if (v10)
      goto LABEL_3;
  }
  else if (v9)
  {
LABEL_3:
    *(_OWORD *)a6 = *(_OWORD *)v13;
    *(_QWORD *)(a6 + 16) = v14;
    return;
  }
  *(_QWORD *)a6 = 0;
  *(_QWORD *)(a6 + 8) = 0;
  *(_QWORD *)(a6 + 16) = 0;
  if (v13[0])
  {
    v13[1] = v13[0];
    operator delete(v13[0]);
  }
}

void sub_1D528C5B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17)
{
  if (a15 < 0)
    operator delete(__p);
  if (a16)
    operator delete(a16);
  _Unwind_Resume(exception_object);
}

double sub_1D528C5E8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32230[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528C64C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528C668(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 3.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32238[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528C6D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528C6EC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 3.1623;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32240[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528C760(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528C77C(uint64_t a1)
{
  char *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *__p[2];
  char v10;
  double v11;

  v11 = 0.0;
  v2 = getenv("MS_AMT");
  if (v2)
  {
    sscanf(v2, "%lf", &v11);
  }
  else
  {
    v7 = (char *)objc_msgSend_UTF8String(off_1EFF32248[0], v3, v4, v5, v6);
    sub_1D52850A0(__p, v7);
    sub_1D5288DFC(a1, (uint64_t)__p, &v11);
    if (v10 < 0)
      operator delete(__p[0]);
  }
  return v11;
}

void sub_1D528C808(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528C824(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32250[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return fmin(fmax(v10, 0.0), 1.3);
}

void sub_1D528C89C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528C8B8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.5;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32258[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return fmin(fmax(v10, 0.0), 1.0);
}

void sub_1D528C930(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D528C94C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  unsigned __int8 v10;

  v10 = 0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32260[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D52890CC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528C9B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528C9CC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.5;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32268[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return fmin(fmax(v10, 0.0), 1.0);
}

void sub_1D528CA44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528CA60(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32270[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return fmin(fmax(v10, -2.0), 2.0);
}

void sub_1D528CAD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528CAF0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32278[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return fmin(fmax(v10, 0.0), 1.0);
}

void sub_1D528CB64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528CB80(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32280[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return fmin(fmax(v10, 0.0), 4.0);
}

void sub_1D528CBF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1D528CC10(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  BOOL v4;
  BOOL v5;
  void *__p[2];
  char v7;
  void *v8[2];
  uint64_t v9;

  v8[0] = 0;
  v8[1] = 0;
  v9 = 0;
  sub_1D52850A0(__p, "isoab");
  v4 = sub_1D528C200(a1, (uint64_t)__p, (char *)v8);
  v5 = v4;
  if (v7 < 0)
  {
    operator delete(__p[0]);
    if (v5)
      goto LABEL_3;
  }
  else if (v4)
  {
LABEL_3:
    *(_OWORD *)a2 = *(_OWORD *)v8;
    *(_QWORD *)(a2 + 16) = v9;
    return;
  }
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
}

void sub_1D528CCA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17)
{
  if (a15 < 0)
    operator delete(__p);
  if (a16)
    operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D528CCDC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  unsigned __int16 v10;

  v10 = 0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32290[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288C68(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528CD40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528CD5C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.000734;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32298[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528CDD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528CDEC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.01351;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF322A0[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528CE60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528CE7C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF322A8[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528CEE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D528CEFC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  unsigned __int16 v10;

  v10 = 1;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF322B0[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288C68(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528CF64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528CF80(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.0001128;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF322B8[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528CFF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528D010(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = -0.06729;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF322C0[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528D084(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528D0A0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = -5.241;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF322C8[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528D114(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D528D130(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  unsigned __int16 v10;

  v10 = 0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF322D0[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288C68(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528D194(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D528D1B0(uint64_t a1)
{
  void *__p[2];
  char v4;
  unsigned __int16 v5;

  v5 = 0;
  sub_1D52850A0(__p, "hnat");
  sub_1D5288C68(a1, (uint64_t)__p, &v5);
  if (v4 < 0)
    operator delete(__p[0]);
  return v5;
}

void sub_1D528D20C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528D228(uint64_t a1)
{
  void *__p[2];
  char v4;
  double v5;

  v5 = 0.0;
  sub_1D52850A0(__p, "hbf");
  sub_1D5288DFC(a1, (uint64_t)__p, &v5);
  if (v4 < 0)
    operator delete(__p[0]);
  return v5;
}

void sub_1D528D284(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528D2A0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF322E8[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528D304(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528D320(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF322F0[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528D384(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528D3A0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF322F8[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528D404(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D528D420(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  unsigned __int16 v10;

  v10 = 0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32300[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288C68(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528D484(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528D4A0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32308[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528D504(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528D520(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32310[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528D584(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528D5A0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32318[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528D604(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D528D620(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  unsigned __int16 v10;

  v10 = 0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32320[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288C68(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528D684(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528D6A0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32328[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528D704(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528D720(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32330[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528D784(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528D7A0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32338[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528D804(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D528D820(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  unsigned __int16 v10;

  v10 = 0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32340[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288C68(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528D884(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528D8A0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32348[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528D904(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528D920(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32350[0], a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528D984(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528D9A0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  void *__p[2];
  char v9;
  double v10;

  v10 = 0.0;
  v6 = (char *)objc_msgSend_UTF8String(off_1EFF32358, a2, a3, a4, a5);
  sub_1D52850A0(__p, v6);
  sub_1D5288DFC(a1, (uint64_t)__p, &v10);
  if (v9 < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1D528DA04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1D528DA20(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BOOL4 v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL4 v9;
  double *v10;
  _QWORD *v11;
  _QWORD *v12;
  unsigned int v13;
  unsigned int v14;
  unint64_t v15;
  char *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  char *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  const char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  char *v43;
  const char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  const char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char v59;
  char v60;
  int v61;
  const char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  const char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  const char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  const char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  const char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  char *v87;
  const char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  const char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  const char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  const char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  char *v108;
  const char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  const char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  const char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  const char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  char *v129;
  const char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  const char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  double v140;
  double v141;
  double v142;
  double v143;
  double v144;
  double v145;
  int v146;
  _QWORD *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  double v159;
  double v160;
  unsigned __int16 v161;
  double v162;
  double v163;
  double v164;
  double v165;
  double v166;
  double v167;
  unsigned __int16 v168;
  __int128 v169;
  char v170;
  double *v171;
  double *v172;
  uint64_t v173;

  v171 = 0;
  v172 = 0;
  v173 = 0;
  sub_1D52850A0(&v169, "isoab");
  v4 = sub_1D528C200(a1, (uint64_t)&v169, (char *)&v171);
  v9 = v4;
  if (v170 < 0)
  {
    operator delete((void *)v169);
    if (v9)
      goto LABEL_3;
LABEL_10:
    v168 = 0;
    v16 = (char *)objc_msgSend_UTF8String(off_1EFF32290[0], v5, v6, v7, v8);
    sub_1D52850A0(&v169, v16);
    sub_1D5288C68(a1, (uint64_t)&v169, &v168);
    if (v170 < 0)
      operator delete((void *)v169);
    v21 = v168;
    v167 = 0.000734;
    v22 = (char *)objc_msgSend_UTF8String(off_1EFF32298[0], v17, v18, v19, v20);
    sub_1D52850A0(&v169, v22);
    sub_1D5288DFC(a1, (uint64_t)&v169, &v167);
    if (v170 < 0)
      operator delete((void *)v169);
    v166 = 0.01351;
    v27 = (char *)objc_msgSend_UTF8String(off_1EFF322A0[0], v23, v24, v25, v26);
    sub_1D52850A0(&v169, v27);
    sub_1D5288DFC(a1, (uint64_t)&v169, &v166);
    if (v170 < 0)
      operator delete((void *)v169);
    v165 = 0.0;
    v32 = (char *)objc_msgSend_UTF8String(off_1EFF322A8[0], v28, v29, v30, v31);
    sub_1D52850A0(&v169, v32);
    sub_1D5288DFC(a1, (uint64_t)&v169, &v165);
    if (v170 < 0)
      operator delete((void *)v169);
    v168 = 1;
    v37 = (char *)objc_msgSend_UTF8String(off_1EFF322B0[0], v33, v34, v35, v36);
    sub_1D52850A0(&v169, v37);
    sub_1D5288C68(a1, (uint64_t)&v169, &v168);
    if (v170 < 0)
      operator delete((void *)v169);
    v42 = v168;
    v164 = 0.0001128;
    v43 = (char *)objc_msgSend_UTF8String(off_1EFF322B8[0], v38, v39, v40, v41);
    sub_1D52850A0(&v169, v43);
    sub_1D5288DFC(a1, (uint64_t)&v169, &v164);
    if (v170 < 0)
      operator delete((void *)v169);
    v163 = -0.06729;
    v48 = (char *)objc_msgSend_UTF8String(off_1EFF322C0[0], v44, v45, v46, v47);
    sub_1D52850A0(&v169, v48);
    sub_1D5288DFC(a1, (uint64_t)&v169, &v163);
    if (v170 < 0)
      operator delete((void *)v169);
    v162 = -5.241;
    v53 = (char *)objc_msgSend_UTF8String(off_1EFF322C8[0], v49, v50, v51, v52);
    sub_1D52850A0(&v169, v53);
    sub_1D5288DFC(a1, (uint64_t)&v169, &v162);
    if (v170 < 0)
      operator delete((void *)v169);
    v161 = 0;
    v58 = (char *)objc_msgSend_UTF8String(off_1EFF322D0[0], v54, v55, v56, v57);
    sub_1D52850A0(&v169, v58);
    sub_1D5288C68(a1, (uint64_t)&v169, &v161);
    if (v170 < 0)
      operator delete((void *)v169);
    sub_1D52850A0(&v169, "hnat");
    v59 = sub_1D5288C68(a1, (uint64_t)&v169, &v168);
    v60 = v59;
    if (v170 < 0)
    {
      operator delete((void *)v169);
      if ((v60 & 1) != 0)
        goto LABEL_30;
    }
    else if ((v59 & 1) != 0)
    {
LABEL_30:
      v61 = v168;
      v160 = 0.0;
      sub_1D52850A0(&v169, "hbf");
      sub_1D5288DFC(a1, (uint64_t)&v169, &v160);
      if (v170 < 0)
        operator delete((void *)v169);
      v159 = 0.0;
      v66 = (char *)objc_msgSend_UTF8String(off_1EFF322E8[0], v62, v63, v64, v65);
      sub_1D52850A0(&v169, v66);
      sub_1D5288DFC(a1, (uint64_t)&v169, &v159);
      if (v170 < 0)
        operator delete((void *)v169);
      v158 = 0;
      v71 = (char *)objc_msgSend_UTF8String(off_1EFF322F0[0], v67, v68, v69, v70);
      sub_1D52850A0(&v169, v71);
      sub_1D5288DFC(a1, (uint64_t)&v169, &v158);
      if (v170 < 0)
        operator delete((void *)v169);
      v157 = 0;
      v76 = (char *)objc_msgSend_UTF8String(off_1EFF322F8[0], v72, v73, v74, v75);
      sub_1D52850A0(&v169, v76);
      sub_1D5288DFC(a1, (uint64_t)&v169, &v157);
      if (v170 < 0)
        operator delete((void *)v169);
      v81 = (char *)objc_msgSend_UTF8String(off_1EFF32300[0], v77, v78, v79, v80);
      sub_1D52850A0(&v169, v81);
      sub_1D5288C68(a1, (uint64_t)&v169, &v168);
      if (v170 < 0)
        operator delete((void *)v169);
      v86 = v168;
      v156 = 0;
      v87 = (char *)objc_msgSend_UTF8String(off_1EFF32308[0], v82, v83, v84, v85);
      sub_1D52850A0(&v169, v87);
      sub_1D5288DFC(a1, (uint64_t)&v169, &v156);
      if (v170 < 0)
        operator delete((void *)v169);
      v155 = 0;
      v92 = (char *)objc_msgSend_UTF8String(off_1EFF32310[0], v88, v89, v90, v91);
      sub_1D52850A0(&v169, v92);
      sub_1D5288DFC(a1, (uint64_t)&v169, &v155);
      if (v170 < 0)
        operator delete((void *)v169);
      v154 = 0;
      v97 = (char *)objc_msgSend_UTF8String(off_1EFF32318[0], v93, v94, v95, v96);
      sub_1D52850A0(&v169, v97);
      sub_1D5288DFC(a1, (uint64_t)&v169, &v154);
      if (v170 < 0)
        operator delete((void *)v169);
      v102 = (char *)objc_msgSend_UTF8String(off_1EFF32320[0], v98, v99, v100, v101);
      sub_1D52850A0(&v169, v102);
      sub_1D5288C68(a1, (uint64_t)&v169, &v168);
      if (v170 < 0)
        operator delete((void *)v169);
      v107 = v168;
      v153 = 0;
      v108 = (char *)objc_msgSend_UTF8String(off_1EFF32328[0], v103, v104, v105, v106);
      sub_1D52850A0(&v169, v108);
      sub_1D5288DFC(a1, (uint64_t)&v169, &v153);
      if (v170 < 0)
        operator delete((void *)v169);
      v152 = 0;
      v113 = (char *)objc_msgSend_UTF8String(off_1EFF32330[0], v109, v110, v111, v112);
      sub_1D52850A0(&v169, v113);
      sub_1D5288DFC(a1, (uint64_t)&v169, &v152);
      if (v170 < 0)
        operator delete((void *)v169);
      v151 = 0;
      v118 = (char *)objc_msgSend_UTF8String(off_1EFF32338[0], v114, v115, v116, v117);
      sub_1D52850A0(&v169, v118);
      sub_1D5288DFC(a1, (uint64_t)&v169, &v151);
      if (v170 < 0)
        operator delete((void *)v169);
      v123 = (char *)objc_msgSend_UTF8String(off_1EFF32340[0], v119, v120, v121, v122);
      sub_1D52850A0(&v169, v123);
      sub_1D5288C68(a1, (uint64_t)&v169, &v168);
      if (v170 < 0)
        operator delete((void *)v169);
      v128 = v168;
      v150 = 0;
      v129 = (char *)objc_msgSend_UTF8String(off_1EFF32348[0], v124, v125, v126, v127);
      sub_1D52850A0(&v169, v129);
      sub_1D5288DFC(a1, (uint64_t)&v169, &v150);
      if (v170 < 0)
        operator delete((void *)v169);
      v149 = 0;
      v134 = (char *)objc_msgSend_UTF8String(off_1EFF32350[0], v130, v131, v132, v133);
      sub_1D52850A0(&v169, v134);
      sub_1D5288DFC(a1, (uint64_t)&v169, &v149);
      if (v170 < 0)
        operator delete((void *)v169);
      v148 = 0;
      v139 = (char *)objc_msgSend_UTF8String(off_1EFF32358, v135, v136, v137, v138);
      sub_1D52850A0(&v169, v139);
      sub_1D5288DFC(a1, (uint64_t)&v169, &v148);
      if (v170 < 0)
        operator delete((void *)v169);
      sub_1D528E42C(v21, v42, v161, v61, v86, v107, v128, &v169, v167, v166, v165, v164, v163, v162, v160, v159, v158, v157, v156,
        v155,
        v154,
        v153,
        v152,
        v151,
        v150,
        v149,
        v148);
      *(_OWORD *)a2 = v169;
LABEL_65:
      v10 = v171;
      if (!v171)
        return;
      goto LABEL_66;
    }
    v141 = v166;
    v140 = v167;
    v142 = v165;
    v144 = v163;
    v143 = v164;
    v145 = v162;
    v146 = v161;
    v147 = operator new(0x68uLL);
    v147[2] = 0;
    *v147 = &unk_1E996FF78;
    v147[1] = 0;
    *(_QWORD *)a2 = sub_1D528F210((uint64_t)(v147 + 3), v21, v42, v146, v140, v141, v142, v143, v144, v145);
    *(_QWORD *)(a2 + 8) = v147;
    goto LABEL_65;
  }
  if (!v4)
    goto LABEL_10;
LABEL_3:
  v10 = v171;
  if ((unint64_t)((char *)v172 - (char *)v171) < 0x18 || (v172 - v171) % 3uLL)
  {
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    if (!v10)
      return;
    goto LABEL_66;
  }
  v11 = operator new(0x38uLL);
  v11[2] = 0;
  *v11 = &unk_1E996FDE0;
  v11[1] = 0;
  v11[3] = &unk_1E996FE30;
  v12 = v11 + 3;
  v11[6] = 0;
  v11[5] = 0;
  v11[4] = v11 + 5;
  *(_QWORD *)&v169 = v11 + 3;
  *((_QWORD *)&v169 + 1) = v11;
  v13 = 2;
  v14 = 1;
  do
  {
    (*(void (**)(_QWORD *, _QWORD, double, double))(*v12 + 24))(v12, v10[v13 - 2], v10[v13 - 1], v10[v13]);
    v15 = v14;
    v10 = v171;
    v13 += 3;
    ++v14;
  }
  while (v15 < (v172 - v171) / 3uLL);
  *(_QWORD *)a2 = v12;
  *(_QWORD *)(a2 + 8) = v11;
  if (v10)
  {
LABEL_66:
    v172 = v10;
    operator delete(v10);
  }
}

void sub_1D528E30C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)(v1 - 152);
  if (v3)
  {
    *(_QWORD *)(v1 - 144) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_1D528E42C@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, int a7@<W6>, _QWORD *a8@<X8>, double a9@<D0>, double a10@<D1>, double a11@<D2>, double a12@<D3>, double a13@<D4>, double a14@<D5>, double a15@<D6>, double a16@<D7>, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v28;
  int v29;
  int v30;
  double v31;
  double v32;
  int v33;
  int v34;
  double v35;
  double v36;
  double v37;
  int v38;
  double v39;
  double v40;
  double v41;
  int v42;

  v42 = a1;
  v40 = a10;
  v41 = a9;
  v39 = a11;
  v38 = a2;
  v36 = a13;
  v37 = a12;
  v35 = a14;
  v33 = a4;
  v34 = a3;
  v31 = a16;
  v32 = a15;
  v29 = a6;
  v30 = a5;
  v28 = a7;
  return sub_1D528F3A4(&v42, &v41, &v40, &v39, &v38, &v37, &v36, a8, &v35, &v34, &v33, &v32, &v31, (double *)&a17, (double *)&a18, &v30, (double *)&a19, (double *)&a20, (double *)&a21,
           &v29,
           (double *)&a22,
           (double *)&a23,
           (double *)&a24,
           &v28,
           (double *)&a25,
           (double *)&a26,
           (double *)&a27);
}

id sub_1D528E50C(uint64_t a1)
{
  void *v1;
  id v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const char *v32;
  uint64_t v33;
  id v34;
  void *exception;

  v1 = *(void **)(a1 + 8);
  if (!v1)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v3 = v1;
  objc_msgSend_objectForKeyedSubscript_(v3, v4, (uint64_t)CFSTR("otrc_2"), v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v7)
    objc_msgSend_setObject_forKeyedSubscript_(v3, v8, (uint64_t)&unk_1E99C8208, (uint64_t)CFSTR("otrc_2"), v10);
  objc_msgSend_objectForKeyedSubscript_(v3, v8, (uint64_t)CFSTR("otrc_3"), v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v11)
    objc_msgSend_setObject_forKeyedSubscript_(v3, v12, (uint64_t)&unk_1E99C8208, (uint64_t)CFSTR("otrc_3"), v14);
  objc_msgSend_objectForKeyedSubscript_(v3, v12, (uint64_t)CFSTR("otrc_4"), v13, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v15)
    objc_msgSend_setObject_forKeyedSubscript_(v3, v16, (uint64_t)&unk_1E99C8208, (uint64_t)CFSTR("otrc_4"), v18);
  objc_msgSend_objectForKeyedSubscript_(v3, v16, (uint64_t)CFSTR("otrc_5"), v17, v18);
  v19 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v19)
    objc_msgSend_setObject_forKeyedSubscript_(v3, v20, (uint64_t)&unk_1E99C8208, (uint64_t)CFSTR("otrc_5"), v22);
  objc_msgSend_objectForKeyedSubscript_(v3, v20, (uint64_t)CFSTR("otrc_6"), v21, v22);
  v23 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v23)
    objc_msgSend_setObject_forKeyedSubscript_(v3, v24, (uint64_t)&unk_1E99C8208, (uint64_t)CFSTR("otrc_6"), v26);
  objc_msgSend_objectForKeyedSubscript_(v3, v24, (uint64_t)CFSTR("otrc_7"), v25, v26);
  v27 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v27)
    objc_msgSend_setObject_forKeyedSubscript_(v3, v28, (uint64_t)&unk_1E99C8208, (uint64_t)CFSTR("otrc_7"), v30);
  objc_msgSend_objectForKeyedSubscript_(v3, v28, (uint64_t)CFSTR("otrc_8"), v29, v30);
  v31 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v31)
    objc_msgSend_setObject_forKeyedSubscript_(v3, v32, (uint64_t)&unk_1E99C8208, (uint64_t)CFSTR("otrc_8"), v33);
  v34 = *(id *)(a1 + 8);

  return v34;
}

void sub_1D528E708(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_1D528E728(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *exception;
  const void *v18;
  void *v19;
  _QWORD v20[5];

  v3 = a2;
  objc_opt_class();
  v4 = v3;
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v20[0] = MEMORY[0x1E0C809B0];
    v20[1] = 3221225472;
    v20[2] = sub_1D528E914;
    v20[3] = &unk_1E996FDA0;
    v20[4] = a1;
    v5 = (void *)MEMORY[0x1D82721B4](v20);
    v6 = objc_retainAutorelease(v3);
    objc_msgSend_UTF8String(v6, v7, v8, v9, v10);
    sub_1D53BFE04();
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v11)
    {
      exception = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1D8271938](exception, "RawCameraException");
      __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
    }
    v4 = v11;
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      objc_msgSend_description(v4, v12, v13, v14, v15);
      v18 = (const void *)objc_claimAutoreleasedReturnValue();
      CFShow(v18);
      v19 = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1D8271938](v19, "RawCameraException");
      __cxa_throw(v19, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
    }

  }
  return v4;
}

void sub_1D528E8AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  __cxa_free_exception(v5);

  _Unwind_Resume(a1);
}

id sub_1D528E914(uint64_t a1, char *a2)
{
  uint64_t v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *__p[2];
  char v16;

  v2 = *(_QWORD *)(a1 + 32);
  sub_1D52850A0(__p, a2);
  sub_1D5288864((uint64_t)__p, v3, v4, v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (v16 < 0)
    operator delete(__p[0]);
  sub_1D53C2B44();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v8, v9, (uint64_t)v7, v10, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v12)
  {
    v13 = *(_QWORD *)(v2 + 16);
    if (v13)
    {
      (*(void (**)(uint64_t, void *))(v13 + 16))(v13, v7);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v12 = 0;
    }
  }

  return v12;
}

void sub_1D528E9B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1D528E9D8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  JUMPOUT(0x1D528E9D0);
}

uint64_t sub_1D528E9F0(uint64_t a1)
{

  return a1;
}

void sub_1D528EA20(uint64_t a1)
{

  JUMPOUT(0x1D8271ADCLL);
}

_QWORD *sub_1D528EA60(_QWORD *a1, uint64_t a2, _WORD *a3)
{
  _WORD *v6;
  _WORD *v7;
  uint64_t v8;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_1D5285464(a1, a2);
    v6 = (_WORD *)a1[1];
    v7 = &v6[a2];
    v8 = 2 * a2;
    do
    {
      *v6++ = *a3;
      v8 -= 2;
    }
    while (v8);
    a1[1] = v7;
  }
  return a1;
}

void sub_1D528EAC4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D528EAE0()
{
  sub_1D528EAF4("vector");
}

void sub_1D528EAF4(const char *a1)
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_1D528EB44(exception, a1);
  __cxa_throw(exception, (struct type_info *)off_1E996E9D0, MEMORY[0x1E0DE42E0]);
}

void sub_1D528EB30(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_1D528EB44(std::logic_error *a1, const char *a2)
{
  std::logic_error *result;

  result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E0DE5028] + 16);
  return result;
}

_QWORD *sub_1D528EB68(_QWORD *a1, unint64_t a2)
{
  char *v4;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_1D5282CE8(a1, a2);
    v4 = (char *)a1[1];
    bzero(v4, 8 * a2);
    a1[1] = &v4[8 * a2];
  }
  return a1;
}

void sub_1D528EBC0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D528EBDC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E996FDE0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D528EBF0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E996FDE0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D528EC24(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_1D528EC34(uint64_t a1)
{
  *(_QWORD *)a1 = &unk_1E996FE30;
  sub_1D528EEB8(a1 + 8, *(_QWORD **)(a1 + 16));
  return a1;
}

void sub_1D528EC6C(uint64_t a1)
{
  *(_QWORD *)a1 = &unk_1E996FE30;
  sub_1D528EEB8(a1 + 8, *(_QWORD **)(a1 + 16));
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D528ECB4()
{
  return 1;
}

void sub_1D528ECBC(uint64_t a1, unsigned int a2, double a3, double a4)
{
  double *v7;
  char *v8;
  void *__p;
  _BYTE *v10;
  unsigned int v11;
  unsigned int *v12;

  v11 = a2;
  sub_1D528EB68(&__p, 2uLL);
  v7 = (double *)__p;
  *(double *)__p = a3;
  v7[1] = a4;
  v12 = &v11;
  v8 = (char *)(sub_1D528EF08((uint64_t **)(a1 + 8), &v11, (uint64_t)&unk_1D544A5C4, &v12) + 5);
  if (v8 != (char *)&__p)
    sub_1D528FA34(v8, (char *)__p, (uint64_t)v10, (v10 - (_BYTE *)__p) >> 3);
  if (__p)
  {
    v10 = __p;
    operator delete(__p);
  }
}

void sub_1D528ED5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D528ED78(uint64_t a1, unsigned int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  unsigned int v7;
  BOOL v8;
  uint64_t *v9;
  const void *v10;
  uint64_t v11;
  void *__p;
  void *v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a1 + 16);
  v2 = a1 + 16;
  v3 = v4;
  v5 = 0.0;
  if (v4)
  {
    v6 = v2;
    do
    {
      v7 = *(_DWORD *)(v3 + 32);
      v8 = v7 >= a2;
      if (v7 >= a2)
        v9 = (uint64_t *)v3;
      else
        v9 = (uint64_t *)(v3 + 8);
      if (v8)
        v6 = v3;
      v3 = *v9;
    }
    while (*v9);
    if (v6 != v2 && *(_DWORD *)(v6 + 32) <= a2)
    {
      v10 = *(const void **)(v6 + 40);
      v11 = *(_QWORD *)(v6 + 48);
      if (v11 - (_QWORD)v10 == 16)
      {
        __p = 0;
        v14 = 0;
        v15 = 0;
        sub_1D5282C70(&__p, v10, v11, 2uLL);
        v5 = *(double *)__p;
        v14 = __p;
        operator delete(__p);
      }
    }
  }
  return v5;
}

double sub_1D528EE10(uint64_t a1, unsigned int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  unsigned int v7;
  BOOL v8;
  uint64_t *v9;
  const void *v10;
  uint64_t v11;
  void *__p;
  void *v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a1 + 16);
  v2 = a1 + 16;
  v3 = v4;
  v5 = 0.0;
  if (v4)
  {
    v6 = v2;
    do
    {
      v7 = *(_DWORD *)(v3 + 32);
      v8 = v7 >= a2;
      if (v7 >= a2)
        v9 = (uint64_t *)v3;
      else
        v9 = (uint64_t *)(v3 + 8);
      if (v8)
        v6 = v3;
      v3 = *v9;
    }
    while (*v9);
    if (v6 != v2 && *(_DWORD *)(v6 + 32) <= a2)
    {
      v10 = *(const void **)(v6 + 40);
      v11 = *(_QWORD *)(v6 + 48);
      if (v11 - (_QWORD)v10 == 16)
      {
        __p = 0;
        v14 = 0;
        v15 = 0;
        sub_1D5282C70(&__p, v10, v11, 2uLL);
        v5 = *((double *)__p + 1);
        v14 = __p;
        operator delete(__p);
      }
    }
  }
  return v5;
}

uint64_t sub_1D528EEA8()
{
  return 0;
}

double sub_1D528EEB0()
{
  return 0.0;
}

void sub_1D528EEB8(uint64_t a1, _QWORD *a2)
{
  void *v4;

  if (a2)
  {
    sub_1D528EEB8(a1, *a2);
    sub_1D528EEB8(a1, a2[1]);
    v4 = (void *)a2[5];
    if (v4)
    {
      a2[6] = v4;
      operator delete(v4);
    }
    operator delete(a2);
  }
}

uint64_t **sub_1D528EF08(uint64_t **a1, unsigned int *a2, uint64_t a3, _DWORD **a4)
{
  uint64_t *v6;
  uint64_t **v7;
  unsigned int v8;
  uint64_t **v9;
  unsigned int v10;
  _DWORD *v11;

  v7 = a1 + 1;
  v6 = a1[1];
  if (v6)
  {
    v8 = *a2;
    while (1)
    {
      while (1)
      {
        v9 = (uint64_t **)v6;
        v10 = *((_DWORD *)v6 + 8);
        if (v8 >= v10)
          break;
        v6 = *v9;
        v7 = v9;
        if (!*v9)
          goto LABEL_10;
      }
      if (v10 >= v8)
        break;
      v6 = v9[1];
      if (!v6)
      {
        v7 = v9 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    v9 = a1 + 1;
LABEL_10:
    v11 = operator new(0x40uLL);
    v11[8] = **a4;
    *((_QWORD *)v11 + 6) = 0;
    *((_QWORD *)v11 + 7) = 0;
    *((_QWORD *)v11 + 5) = 0;
    sub_1D528EFCC(a1, (uint64_t)v9, v7, (uint64_t *)v11);
    return (uint64_t **)v11;
  }
  return v9;
}

uint64_t *sub_1D528EFCC(uint64_t **a1, uint64_t a2, uint64_t **a3, uint64_t *a4)
{
  uint64_t *v5;
  uint64_t *result;

  *a4 = 0;
  a4[1] = 0;
  a4[2] = a2;
  *a3 = a4;
  v5 = (uint64_t *)**a1;
  if (v5)
  {
    *a1 = v5;
    a4 = *a3;
  }
  result = sub_1D528F020(a1[1], a4);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return result;
}

uint64_t *sub_1D528F020(uint64_t *result, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  _BYTE *v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t **v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *((_BYTE *)a2 + 24) = a2 == result;
  if (a2 != result)
  {
    do
    {
      v2 = (uint64_t *)a2[2];
      if (*((_BYTE *)v2 + 24))
        return result;
      v3 = (uint64_t *)v2[2];
      v4 = (uint64_t *)*v3;
      if ((uint64_t *)*v3 == v2)
      {
        v7 = v3[1];
        if (!v7 || (v8 = *(unsigned __int8 *)(v7 + 24), v5 = (_BYTE *)(v7 + 24), v8))
        {
          if ((uint64_t *)*v2 == a2)
          {
            v9 = (uint64_t **)a2[2];
          }
          else
          {
            v9 = (uint64_t **)v2[1];
            v10 = *v9;
            v2[1] = (uint64_t)*v9;
            if (v10)
            {
              v10[2] = (uint64_t)v2;
              v3 = (uint64_t *)v2[2];
            }
            v9[2] = v3;
            *(_QWORD *)(v2[2] + 8 * (*(_QWORD *)v2[2] != (_QWORD)v2)) = v9;
            *v9 = v2;
            v2[2] = (uint64_t)v9;
            v3 = v9[2];
            v2 = (uint64_t *)*v3;
          }
          *((_BYTE *)v9 + 24) = 1;
          *((_BYTE *)v3 + 24) = 0;
          v13 = v2[1];
          *v3 = v13;
          if (v13)
            *(_QWORD *)(v13 + 16) = v3;
          v2[2] = v3[2];
          *(_QWORD *)(v3[2] + 8 * (*(_QWORD *)v3[2] != (_QWORD)v3)) = v2;
          v2[1] = (uint64_t)v3;
          goto LABEL_27;
        }
      }
      else if (!v4 || (v6 = *((unsigned __int8 *)v4 + 24), v5 = v4 + 3, v6))
      {
        if ((uint64_t *)*v2 == a2)
        {
          v11 = a2[1];
          *v2 = v11;
          if (v11)
          {
            *(_QWORD *)(v11 + 16) = v2;
            v3 = (uint64_t *)v2[2];
          }
          a2[2] = (uint64_t)v3;
          *(_QWORD *)(v2[2] + 8 * (*(_QWORD *)v2[2] != (_QWORD)v2)) = a2;
          a2[1] = (uint64_t)v2;
          v2[2] = (uint64_t)a2;
          v3 = (uint64_t *)a2[2];
        }
        else
        {
          a2 = (uint64_t *)a2[2];
        }
        *((_BYTE *)a2 + 24) = 1;
        *((_BYTE *)v3 + 24) = 0;
        v2 = (uint64_t *)v3[1];
        v12 = *v2;
        v3[1] = *v2;
        if (v12)
          *(_QWORD *)(v12 + 16) = v3;
        v2[2] = v3[2];
        *(_QWORD *)(v3[2] + 8 * (*(_QWORD *)v3[2] != (_QWORD)v3)) = v2;
        *v2 = (uint64_t)v3;
LABEL_27:
        v3[2] = (uint64_t)v2;
        return result;
      }
      *((_BYTE *)v2 + 24) = 1;
      a2 = v3;
      *((_BYTE *)v3 + 24) = v3 == result;
      *v5 = 1;
    }
    while (v3 != result);
  }
  return result;
}

void sub_1D528F1B8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E996FF78;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D528F1CC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E996FF78;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D528F200(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_1D528F210(uint64_t result, int a2, int a3, int a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  double v10;
  double v11;
  double v12;
  double v13;

  *(_QWORD *)result = &unk_1E996FFC8;
  *(_DWORD *)(result + 8) = a2;
  *(double *)(result + 32) = a7;
  *(_DWORD *)(result + 40) = a3;
  *(double *)(result + 64) = a10;
  *(_DWORD *)(result + 72) = a4;
  if (a2)
  {
    v10 = fmin(fmax(a5, -0.1), 0.1);
    v11 = fmin(fmax(a6, -0.01), 0.02);
    *(double *)(result + 32) = fmin(fmax(a7, -0.5), 1.5);
  }
  else
  {
    v10 = fmin(fmax(a5, -0.01), 0.02);
    v11 = fmin(fmax(a6, -0.5), 1.5);
  }
  *(double *)(result + 16) = v10;
  *(double *)(result + 24) = v11;
  if (a3)
  {
    v12 = fmin(fmax(a8, -0.001), 0.2);
    v13 = fmin(fmax(a9, -5.0), 1.0);
    *(double *)(result + 64) = fmin(fmax(a10, -1000.0), 1000.0);
  }
  else
  {
    v12 = fmin(fmax(a8, -0.5), 0.5);
    v13 = fmin(fmax(a9, -1000.0), 1000.0);
  }
  *(double *)(result + 48) = v12;
  *(double *)(result + 56) = v13;
  return result;
}

void sub_1D528F328()
{
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D528F33C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 8);
}

double sub_1D528F344(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

double sub_1D528F34C(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

double sub_1D528F354(uint64_t a1)
{
  double result;

  result = 0.0;
  if (*(_DWORD *)(a1 + 8) == 1)
    return *(double *)(a1 + 32);
  return result;
}

uint64_t sub_1D528F36C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

double sub_1D528F374(uint64_t a1)
{
  return *(double *)(a1 + 48);
}

double sub_1D528F37C(uint64_t a1)
{
  return *(double *)(a1 + 56);
}

double sub_1D528F384(uint64_t a1)
{
  double result;

  result = 0.0;
  if (*(_DWORD *)(a1 + 40) == 1)
    return *(double *)(a1 + 64);
  return result;
}

uint64_t sub_1D528F39C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 72);
}

_QWORD *sub_1D528F3A4@<X0>(int *a1@<X1>, double *a2@<X2>, double *a3@<X3>, double *a4@<X4>, int *a5@<X5>, double *a6@<X6>, double *a7@<X7>, _QWORD *a8@<X8>, double *a9, int *a10, int *a11, double *a12, double *a13, double *a14, double *a15, int *a16, double *a17, double *a18, double *a19, int *a20,double *a21,double *a22,double *a23,int *a24,double *a25,double *a26,double *a27)
{
  _QWORD *v35;
  _QWORD *result;

  v35 = operator new(0xE8uLL);
  result = sub_1D528F4D4(v35, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27);
  *a8 = v35 + 3;
  a8[1] = v35;
  return result;
}

void sub_1D528F4C0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D528F4D4(_QWORD *a1, int *a2, double *a3, double *a4, double *a5, int *a6, double *a7, double *a8, double *a9, int *a10, int *a11, double *a12, double *a13, double *a14, double *a15, int *a16, double *a17, double *a18, double *a19, int *a20,double *a21,double *a22,double *a23,int *a24,double *a25,double *a26,double *a27)
{
  a1[2] = 0;
  *a1 = &unk_1E9970100;
  a1[1] = 0;
  sub_1D528F5B8((uint64_t)(a1 + 3), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27);
  return a1;
}

void sub_1D528F54C(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D528F560(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9970100;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D528F574(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9970100;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D528F5A8(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_1D528F5B8(uint64_t a1, int *a2, double *a3, double *a4, double *a5, int *a6, double *a7, double *a8, double *a9, int *a10, int *a11, double *a12, double *a13, double *a14, double *a15, int *a16, double *a17, double *a18, double *a19, int *a20,double *a21,double *a22,double *a23,int *a24,double *a25,double *a26,double *a27)
{
  return sub_1D528F68C(a1, *a2, *a6, *a10, *a11, *a16, *a20, *a24, *a3, *a4, *a5, *a7, *a8, *a9, *a12, *a13, *a14, *a15, *a17,
           *a18,
           *a19,
           *a21,
           *a22,
           *a23,
           *a25,
           *a26,
           *a27);
}

uint64_t sub_1D528F68C(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, double a17, double a18, double a19, double a20,double a21,double a22,double a23,double a24,double a25,double a26,double a27)
{
  uint64_t result;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;

  result = sub_1D528F210(a1, a2, a3, a4, a9, a10, a11, a12, a13, a14);
  *(_QWORD *)result = &unk_1E9970150;
  *(_DWORD *)(result + 76) = a5;
  *(double *)(result + 104) = a18;
  *(_DWORD *)(result + 112) = a6;
  *(double *)(result + 120) = a19;
  *(double *)(result + 128) = a20;
  *(double *)(result + 136) = a21;
  *(_DWORD *)(result + 144) = a7;
  *(double *)(result + 152) = a22;
  *(double *)(result + 160) = a23;
  *(double *)(result + 168) = a24;
  *(_DWORD *)(result + 176) = a8;
  *(double *)(result + 184) = a25;
  *(double *)(result + 192) = a26;
  *(double *)(result + 200) = a27;
  *(double *)(result + 80) = fmin(fmax(a15, 0.0), 1.0);
  if (a5)
  {
    v32 = fmin(fmax(a16, -0.1), 0.1);
    v33 = fmin(fmax(a17, -0.01), 0.02);
    *(double *)(result + 104) = fmin(fmax(a18, -0.5), 1.5);
  }
  else
  {
    v32 = fmin(fmax(a16, -0.01), 0.02);
    v33 = fmin(fmax(a17, -0.5), 1.5);
  }
  *(double *)(result + 88) = v32;
  *(double *)(result + 96) = v33;
  if (a6)
  {
    v34 = fmin(fmax(a19, -0.001), 0.2);
    v35 = fmin(fmax(a20, -5.0), 1.0);
    *(double *)(result + 136) = fmin(fmax(a21, -1000.0), 1000.0);
  }
  else
  {
    v34 = fmin(fmax(a19, -0.5), 0.5);
    v35 = fmin(fmax(a20, -1000.0), 1000.0);
  }
  *(double *)(result + 120) = v34;
  *(double *)(result + 128) = v35;
  if (a7)
  {
    v36 = fmin(fmax(a22, -0.1), 0.1);
    v37 = fmin(fmax(a23, -0.01), 0.02);
    *(double *)(result + 168) = fmin(fmax(a24, -0.5), 1.5);
  }
  else
  {
    v36 = fmin(fmax(a22, -0.01), 0.02);
    v37 = fmin(fmax(a23, -0.5), 1.5);
  }
  *(double *)(result + 152) = v36;
  *(double *)(result + 160) = v37;
  if (a8)
  {
    v38 = fmin(fmax(a25, -0.001), 0.2);
    v39 = fmin(fmax(a26, -5.0), 1.0);
    *(double *)(result + 200) = fmin(fmax(a27, -1000.0), 1000.0);
  }
  else
  {
    v38 = fmin(fmax(a25, -0.5), 0.5);
    v39 = fmin(fmax(a26, -1000.0), 1000.0);
  }
  *(double *)(result + 184) = v38;
  *(double *)(result + 192) = v39;
  return result;
}

void sub_1D528F918()
{
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D528F92C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 76);
}

double sub_1D528F934(uint64_t a1)
{
  return *(double *)(a1 + 80);
}

double sub_1D528F93C(uint64_t a1)
{
  return *(double *)(a1 + 88);
}

double sub_1D528F944(uint64_t a1)
{
  return *(double *)(a1 + 96);
}

double sub_1D528F94C(uint64_t a1)
{
  return *(double *)(a1 + 104);
}

uint64_t sub_1D528F954(uint64_t a1)
{
  return *(unsigned int *)(a1 + 112);
}

double sub_1D528F95C(uint64_t a1)
{
  return *(double *)(a1 + 120);
}

double sub_1D528F964(uint64_t a1)
{
  return *(double *)(a1 + 128);
}

double sub_1D528F96C(uint64_t a1)
{
  return *(double *)(a1 + 136);
}

uint64_t sub_1D528F974(uint64_t a1)
{
  return *(unsigned int *)(a1 + 144);
}

double sub_1D528F97C(uint64_t a1)
{
  return *(double *)(a1 + 152);
}

double sub_1D528F984(uint64_t a1)
{
  return *(double *)(a1 + 160);
}

double sub_1D528F98C(uint64_t a1)
{
  return *(double *)(a1 + 168);
}

uint64_t sub_1D528F994(uint64_t a1)
{
  return *(unsigned int *)(a1 + 176);
}

double sub_1D528F99C(uint64_t a1)
{
  return *(double *)(a1 + 184);
}

double sub_1D528F9A4(uint64_t a1)
{
  return *(double *)(a1 + 192);
}

double sub_1D528F9AC(uint64_t a1)
{
  return *(double *)(a1 + 200);
}

_QWORD *sub_1D528F9B4(_QWORD *a1, unint64_t a2, _QWORD *a3)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_1D5282CE8(a1, a2);
    v6 = (_QWORD *)a1[1];
    v7 = &v6[a2];
    v8 = 8 * a2;
    do
    {
      *v6++ = *a3;
      v8 -= 8;
    }
    while (v8);
    a1[1] = v7;
  }
  return a1;
}

void sub_1D528FA18(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_1D528FA34(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  void **v12;
  char *v13;
  _BYTE *v14;
  unint64_t v15;
  char *v16;
  size_t v17;
  void *v18;
  char *v19;

  v7 = result;
  v8 = *((_QWORD *)result + 2);
  v9 = *(char **)result;
  if (a4 > (v8 - *(_QWORD *)result) >> 3)
  {
    if (v9)
    {
      *((_QWORD *)result + 1) = v9;
      operator delete(v9);
      v8 = 0;
      *v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 >> 61)
      sub_1D5282B8C();
    v10 = v8 >> 2;
    if (v8 >> 2 <= a4)
      v10 = a4;
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8)
      v11 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v11 = v10;
    result = sub_1D5282CE8(v7, v11);
    v13 = (char *)v7[1];
    v12 = (void **)(v7 + 1);
    v9 = v13;
LABEL_16:
    v17 = a3 - (_QWORD)__src;
    if (v17)
    {
      v18 = v9;
      v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  v12 = (void **)(result + 8);
  v14 = (_BYTE *)*((_QWORD *)result + 1);
  v15 = (v14 - v9) >> 3;
  if (v15 >= a4)
    goto LABEL_16;
  v16 = &__src[8 * v15];
  if (v14 != v9)
  {
    result = (char *)memmove(*(void **)result, __src, v14 - v9);
    v9 = (char *)*v12;
  }
  v17 = a3 - (_QWORD)v16;
  if (v17)
  {
    v18 = v9;
    v19 = v16;
LABEL_18:
    result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  *v12 = &v9[v17];
  return result;
}

_QWORD *sub_1D528FB3C@<X0>(void **a1@<X1>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _QWORD *result;

  v4 = operator new(0x30uLL);
  result = sub_1D528FB94(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_1D528FB80(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D528FB94(_QWORD *a1, void **a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1E9970288;
  sub_1D52888A4(a1 + 3, *a2);
  return a1;
}

void sub_1D528FBD0(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D528FBE4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9970288;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D528FBF8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9970288;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D528FC2C(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_1D528FC3C(uint64_t a1, char *a2, const void *a3)
{
  FILE *v5;
  int *v6;
  void *exception;
  char __str[128];
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  *(_QWORD *)sub_1D528443C(a1, a3) = &off_1E99702D8;
  *(_QWORD *)(a1 + 48) = fopen(a2, "r");
  sub_1D52850A0((_QWORD *)(a1 + 56), a2);
  *(_DWORD *)(a1 + 80) = 0;
  v5 = *(FILE **)(a1 + 48);
  if (!v5)
  {
    v6 = __error();
    snprintf(__str, 0x80uLL, "Failed to open file[%d]: %s\n", *v6, __str);
    v5 = *(FILE **)(a1 + 48);
    if (!v5)
    {
      exception = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1D8271938](exception, "RawCameraException");
      __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
    }
  }
  setvbuf(v5, 0, 0, 0x4000uLL);
  return a1;
}

void sub_1D528FD50(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_1D52844B0(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D528FD94(uint64_t a1)
{
  FILE *v2;

  *(_QWORD *)a1 = &off_1E99702D8;
  v2 = *(FILE **)(a1 + 48);
  if (v2)
  {
    fclose(v2);
    *(_QWORD *)(a1 + 48) = 0;
  }
  if (*(char *)(a1 + 79) < 0)
    operator delete(*(void **)(a1 + 56));
  return sub_1D52844B0((_QWORD *)a1);
}

void sub_1D528FDE4(uint64_t a1)
{
  sub_1D528FD94(a1);
  JUMPOUT(0x1D8271ADCLL);
}

char *sub_1D528FE08@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  if (result[79] < 0)
    return (char *)sub_1D5290130((_BYTE *)a2, *((void **)result + 7), *((_QWORD *)result + 8));
  *(_OWORD *)a2 = *(_OWORD *)(result + 56);
  *(_QWORD *)(a2 + 16) = *((_QWORD *)result + 9);
  return result;
}

uint64_t sub_1D528FE34(uint64_t a1)
{
  int v2;
  stat v4;
  unsigned int v5;

  v2 = fileno(*(FILE **)(a1 + 48));
  if (v2 < 1 || !fstat(v2, &v4))
    return sub_1D5284524(a1);
  sub_1D528304C(&v5, (unint64_t *)&v4.st_size);
  return v5;
}

uint64_t sub_1D528FE94(uint64_t a1, void *__ptr, size_t a3)
{
  uint64_t v5;
  FILE *v6;
  size_t v8;
  unsigned int v9;

  v8 = fread(__ptr, 1uLL, a3, *(FILE **)(a1 + 48));
  sub_1D528304C(&v9, &v8);
  v5 = v9;
  if (a3 != v9)
  {
    v6 = *(FILE **)(a1 + 48);
    if (!ferror(v6))
    {
      feof(v6);
      return v9;
    }
  }
  return v5;
}

uint64_t sub_1D528FF10(uint64_t a1, int *a2, int a3)
{
  FILE *v6;
  _DWORD *v7;
  uint64_t result;
  void *exception;
  int v10;
  int v11;

  v10 = 0;
  if (!a3)
    v10 = sub_1D52845F4(a1);
  v6 = *(FILE **)(a1 + 48);
  v11 = *a2;
  v7 = sub_1D5284C34(&v11, &v10);
  result = fseeko(v6, (int)*v7, a3);
  if ((_DWORD)result)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return result;
}

void sub_1D528FFB4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D528FFC8(uint64_t a1)
{
  off_t v3;
  unsigned int v4;

  v3 = ftello(*(FILE **)(a1 + 48));
  sub_1D528594C(&v4, &v3);
  LODWORD(v3) = sub_1D52845F4(a1);
  sub_1D5290020(&v4, &v3);
  return v4;
}

_DWORD *sub_1D5290020(_DWORD *result, _DWORD *a2)
{
  BOOL v2;
  void *exception;

  v2 = __OFSUB__(*result, *a2);
  *result -= *a2;
  if (v2)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return result;
}

void sub_1D529007C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D5290090(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 80);
  *(_DWORD *)(a1 + 80) = v1 + 1;
  if (!v1)
    flockfile(*(FILE **)(a1 + 48));
}

void sub_1D52900AC(uint64_t a1)
{
  int v1;
  int v2;
  void *exception;

  v1 = *(_DWORD *)(a1 + 80);
  if (v1 <= 0)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v2 = v1 - 1;
  *(_DWORD *)(a1 + 80) = v2;
  if (!v2)
    funlockfile(*(FILE **)(a1 + 48));
}

void sub_1D529011C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *sub_1D5290130(_BYTE *__dst, void *__src, unint64_t a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v5 = __dst;
  if (a3 > 0x16)
  {
    if (a3 >= 0x7FFFFFFFFFFFFFF8)
      sub_1D5285150();
    v6 = (a3 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a3 | 7) != 0x17)
      v6 = a3 | 7;
    v7 = v6 + 1;
    v8 = operator new(v6 + 1);
    v5[1] = a3;
    v5[2] = v7 | 0x8000000000000000;
    *v5 = v8;
    v5 = v8;
  }
  else
  {
    __dst[23] = a3;
  }
  return memmove(v5, __src, a3 + 1);
}

uint64_t sub_1D52901BC(uint64_t a1, uint64_t a2, _DWORD *a3, char a4)
{
  uint64_t v8;
  void *exception;

  v8 = sub_1D528443C(a1, 0);
  *(_QWORD *)v8 = &off_1E9970358;
  *(_QWORD *)(v8 + 48) = a2;
  *(_DWORD *)(v8 + 56) = *a3;
  *(_QWORD *)(v8 + 64) = a2;
  *(_BYTE *)(v8 + 72) = a4;
  if (!a2)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return a1;
}

void sub_1D5290250(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_1D52844B0(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D5290278(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)a1 = &off_1E9970358;
  if (*(_BYTE *)(a1 + 72))
  {
    v2 = *(_QWORD *)(a1 + 48);
    if (v2)
      MEMORY[0x1D8271AC4](v2, 0x1000C8077774924);
  }
  return sub_1D52844B0((_QWORD *)a1);
}

void sub_1D52902CC(uint64_t a1)
{
  sub_1D5290278(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52902F0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_1D52902F8(uint64_t a1, void *a2, unint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  uint64_t v6;
  unint64_t v10;
  unint64_t *v11;
  uint64_t v12;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16[3];
  size_t __len;

  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = v3 >= v4;
  v6 = v3 - v4;
  if (v5 && ((v10 = *(unsigned int *)(a1 + 56), v6 < 0) || v6 < v10))
  {
    v15 = v6;
    v16[0] = v10;
    *(_QWORD *)v16 = *sub_1D52904FC(v16, &v15);
    v14 = a3;
    if (a3 >= *(_QWORD *)v16)
      v11 = (unint64_t *)v16;
    else
      v11 = &v14;
    sub_1D528304C(&__len, v11);
    v12 = __len;
    memmove(a2, *(const void **)(a1 + 64), __len);
    *(_QWORD *)(a1 + 64) += v12;
  }
  else
  {
    v16[0] = 0;
    sub_1D5285A24(&__len, v16);
    return __len;
  }
  return v12;
}

uint64_t sub_1D52903C0(uint64_t a1, int *a2, int a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  BOOL v7;
  uint64_t v8;
  void *exception;

  if (a3)
  {
    if (a3 == 1)
    {
      v4 = *(_QWORD *)(a1 + 64) + *a2;
    }
    else
    {
      if (a3 != 2)
      {
        v4 = *(_QWORD *)(a1 + 64);
        goto LABEL_9;
      }
      v4 = *(_QWORD *)(a1 + 48) + *(unsigned int *)(a1 + 56) + *a2;
    }
  }
  else
  {
    v5 = *(_QWORD *)(a1 + 48) + *a2;
    v4 = v5 + (int)sub_1D52845F4(a1);
  }
  *(_QWORD *)(a1 + 64) = v4;
LABEL_9:
  v6 = *(_QWORD *)(a1 + 48);
  v7 = v4 >= v6;
  v8 = v4 - v6;
  if (!v7 || v8 >= 0 && v8 > (unint64_t)*(unsigned int *)(a1 + 56))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return 0;
}

void sub_1D529048C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52904A0(uint64_t a1)
{
  uint64_t v3;
  unsigned int v4;

  v3 = *(_QWORD *)(a1 + 64) - *(_QWORD *)(a1 + 48);
  sub_1D528594C(&v4, &v3);
  LODWORD(v3) = sub_1D52845F4(a1);
  sub_1D5290020(&v4, &v3);
  return v4;
}

_DWORD *sub_1D52904FC(_DWORD *result, _QWORD *a2)
{
  uint64_t v2;
  BOOL v3;
  unint64_t v4;
  void *exception;

  v2 = *result;
  v3 = __OFSUB__(v2, *a2);
  v4 = v2 - *a2;
  *result = v4;
  if (v3 || HIDWORD(v4))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return result;
}

void sub_1D5290560(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D5290574(uint64_t a1, uint64_t *a2, char a3, void *a4, void *a5)
{
  id v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  id v21;
  id v22;

  v22 = a4;
  v9 = a5;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = off_1E99703D8;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = -1;
  v10 = a2[1];
  *(_QWORD *)(a1 + 80) = *a2;
  *(_QWORD *)(a1 + 88) = v10;
  if (v10)
  {
    v11 = (unint64_t *)(v10 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  *(_BYTE *)(a1 + 96) = a3;
  *(_BYTE *)(a1 + 97) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  v21 = v9;
  *(_QWORD *)(a1 + 112) = v21;
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 120) = a1 + 128;
  *(_QWORD *)(a1 + 136) = 0;
  *(_QWORD *)(a1 + 152) = 0;
  *(_QWORD *)(a1 + 144) = a1 + 152;
  *(_QWORD *)(a1 + 176) = 0;
  *(_QWORD *)(a1 + 168) = a1 + 176;
  *(_QWORD *)(a1 + 160) = 0;
  *(_QWORD *)(a1 + 184) = 0;
  *(_QWORD *)(a1 + 200) = 0;
  *(_QWORD *)(a1 + 192) = a1 + 200;
  *(_QWORD *)(a1 + 208) = 0;
  *(_QWORD *)(a1 + 224) = 0;
  *(_QWORD *)(a1 + 216) = a1 + 224;
  *(_QWORD *)(a1 + 232) = 0;
  *(_QWORD *)(a1 + 256) = 0;
  *(_QWORD *)(a1 + 248) = 0;
  *(_QWORD *)(a1 + 240) = a1 + 248;
  *(_QWORD *)(a1 + 264) = a1 + 272;
  *(_QWORD *)(a1 + 272) = 0;
  *(_QWORD *)(a1 + 280) = 0;
  *(_QWORD *)(a1 + 296) = 0;
  *(_QWORD *)(a1 + 288) = a1 + 296;
  *(_QWORD *)(a1 + 304) = 0;
  *(_QWORD *)(a1 + 320) = 0;
  *(_QWORD *)(a1 + 312) = a1 + 320;
  *(_QWORD *)(a1 + 344) = 0;
  *(_QWORD *)(a1 + 336) = a1 + 344;
  *(_QWORD *)(a1 + 328) = 0;
  *(_QWORD *)(a1 + 352) = 0;
  *(_QWORD *)(a1 + 368) = 0;
  *(_QWORD *)(a1 + 360) = a1 + 368;
  *(_QWORD *)(a1 + 392) = 0;
  *(_QWORD *)(a1 + 376) = 0;
  *(_QWORD *)(a1 + 384) = a1 + 392;
  *(_QWORD *)(a1 + 416) = 0;
  *(_QWORD *)(a1 + 424) = 0;
  *(_QWORD *)(a1 + 400) = 0;
  *(_QWORD *)(a1 + 408) = a1 + 416;
  *(_QWORD *)(a1 + 432) = a1 + 440;
  *(_QWORD *)(a1 + 440) = 0;
  *(_QWORD *)(a1 + 464) = 0;
  *(_QWORD *)(a1 + 472) = 0;
  *(_QWORD *)(a1 + 448) = 0;
  *(_QWORD *)(a1 + 456) = a1 + 464;
  *(_QWORD *)(a1 + 488) = 0;
  *(_QWORD *)(a1 + 496) = 0;
  *(_QWORD *)(a1 + 480) = a1 + 488;
  sub_1D52908C8((_QWORD *)(a1 + 80), a2);
  v17 = v22;
  if (v22)
  {
    v18 = v22;
  }
  else
  {
    objc_msgSend_dictionary(MEMORY[0x1E0C99E08], v13, v14, v15, v16, a1 + 360, a1 + 336, a1 + 312, a1 + 288, a1 + 264, a1 + 216, a1 + 192, a1 + 168, a1 + 144, a1 + 120, a1 + 24, v21);
    v18 = (id)objc_claimAutoreleasedReturnValue();
    v17 = 0;
  }
  v19 = *(void **)(a1 + 104);
  *(_QWORD *)(a1 + 104) = v18;

  return a1;
}

void sub_1D52907C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  std::__shared_weak_count *v29;

  sub_1D52940F4(v25, *(char **)(v23 + 488));
  sub_1D52940F4(v27, *(char **)(v23 + 464));
  sub_1D52940F4(v26, *(char **)(v23 + 440));
  sub_1D52940F4(v24, *(char **)(v23 + 416));
  sub_1D52940F4(v22, *(char **)(v23 + 392));
  sub_1D52940F4(a9, *(char **)(v23 + 368));
  sub_1D52940F4(a10, *(char **)(v23 + 344));
  sub_1D52940F4(a11, *(char **)(v23 + 320));
  sub_1D52940F4(a12, *(char **)(v23 + 296));
  sub_1D5294068(a13, *(_QWORD **)(v23 + 272));
  sub_1D5294068(v21, *(_QWORD **)(v23 + 248));
  sub_1D5294068(a14, *(_QWORD **)(v23 + 224));
  sub_1D5294068(a15, *(_QWORD **)(v23 + 200));
  sub_1D5294068(a16, *(_QWORD **)(v23 + 176));
  sub_1D5294068(a17, *(_QWORD **)(v23 + 152));
  sub_1D5294068(a18, *(_QWORD **)(v23 + 128));

  sub_1D5282EB4(a21);
  sub_1D5282EB4(a19);
  v29 = *(std::__shared_weak_count **)(v23 + 16);
  if (v29)
    std::__shared_weak_count::__release_weak(v29);

  _Unwind_Resume(a1);
}

_QWORD *sub_1D52908C8(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v4 = *a2;
  v3 = a2[1];
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = (std::__shared_weak_count *)a1[1];
  *a1 = v4;
  a1[1] = v3;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  return a1;
}

uint64_t sub_1D5290940(uint64_t a1)
{
  return *(_QWORD *)(a1 + 40);
}

uint64_t sub_1D5290948(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = a2;
  return result;
}

uint64_t sub_1D5290950(_QWORD *a1)
{
  if (a1[6])
    return a1[6];
  else
    return (*(uint64_t (**)(_QWORD *))(*a1 + 88))(a1);
}

uint64_t sub_1D529096C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 48) = a2;
  return result;
}

uint64_t sub_1D5290974(_QWORD *a1)
{
  if (a1[7])
    return a1[7];
  else
    return (*(uint64_t (**)(_QWORD *))(*a1 + 88))(a1);
}

uint64_t sub_1D5290990(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 56) = a2;
  return result;
}

uint64_t sub_1D5290998(uint64_t a1)
{
  unsigned int v2;

  sub_1D528594C(&v2, (uint64_t *)(a1 + 64));
  return v2;
}

uint64_t sub_1D52909C0(uint64_t result, int *a2)
{
  *(_QWORD *)(result + 64) = *a2;
  return result;
}

uint64_t sub_1D52909CC(uint64_t a1)
{
  unsigned int v2;

  sub_1D528594C(&v2, (uint64_t *)(a1 + 72));
  return v2;
}

uint64_t sub_1D52909F4(uint64_t result, int *a2)
{
  *(_QWORD *)(result + 72) = *a2;
  return result;
}

uint64_t sub_1D5290A00(void **a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  void **v6;
  _QWORD *v7;
  uint64_t v8;
  void *__p[2];
  char v11;

  v5 = (uint64_t)(a1 + 30);
  (*((void (**)(void **__return_ptr))*a1 + 49))(__p);
  v6 = sub_1D5294144(v5, __p);
  if (a1 + 31 == v6 || (v7 = v6[7], v6[8] == v7))
  {
    v8 = 0;
  }
  else
  {
    *a3 = *v7;
    v8 = 1;
  }
  if (v11 < 0)
    operator delete(__p[0]);
  return v8;
}

void sub_1D5290A90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D5290AAC(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v9;
  void **v10;
  uint64_t v11;
  void **v12;
  _QWORD *v13;
  int v14;
  unint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  _BOOL8 v26;
  void *exception;
  void *__p[2];
  char v30;

  v7 = (uint64_t)(a1 + 33);
  if (a4)
  {
    v9 = 0;
    v10 = a1 + 34;
    v11 = 0;
    do
    {
      (*((void (**)(void **__return_ptr, void **, uint64_t))*a1 + 49))(__p, a1, a2);
      v12 = sub_1D5294144(v7, __p);
      if (v10 == v12 || (v13 = v12[7], v9 + a4 >= (unint64_t)(((_BYTE *)v12[8] - (_BYTE *)v13) >> 3)))
      {
        v14 = 0;
      }
      else
      {
        v11 = v13[v9 + a4];
        v14 = 1;
      }
      if (v30 < 0)
        operator delete(__p[0]);
      if (!v14)
      {
        exception = __cxa_allocate_exception(0x10uLL);
        MEMORY[0x1D8271938](exception, "RawCameraException");
        __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
      }
      v16 = *(_QWORD **)(a3 + 8);
      v15 = *(_QWORD *)(a3 + 16);
      if ((unint64_t)v16 >= v15)
      {
        v18 = *(_QWORD **)a3;
        v19 = ((uint64_t)v16 - *(_QWORD *)a3) >> 3;
        v20 = v19 + 1;
        if ((unint64_t)(v19 + 1) >> 61)
          sub_1D5282B8C();
        v21 = v15 - (_QWORD)v18;
        if (v21 >> 2 > v20)
          v20 = v21 >> 2;
        if ((unint64_t)v21 >= 0x7FFFFFFFFFFFFFF8)
          v22 = 0x1FFFFFFFFFFFFFFFLL;
        else
          v22 = v20;
        if (v22)
        {
          v23 = (char *)sub_1D5282D28(a3 + 16, v22);
          v18 = *(_QWORD **)a3;
          v16 = *(_QWORD **)(a3 + 8);
        }
        else
        {
          v23 = 0;
        }
        v24 = &v23[8 * v19];
        *(_QWORD *)v24 = v11;
        v17 = v24 + 8;
        while (v16 != v18)
        {
          v25 = *--v16;
          *((_QWORD *)v24 - 1) = v25;
          v24 -= 8;
        }
        *(_QWORD *)a3 = v24;
        *(_QWORD *)(a3 + 8) = v17;
        *(_QWORD *)(a3 + 16) = &v23[8 * v22];
        if (v18)
          operator delete(v18);
      }
      else
      {
        *v16 = v11;
        v17 = v16 + 1;
      }
      *(_QWORD *)(a3 + 8) = v17;
      ++v9;
    }
    while (v9 != 4);
    return 1;
  }
  else
  {
    (*((void (**)(void **__return_ptr, void **, uint64_t))*a1 + 49))(__p, a1, a2);
    v26 = sub_1D5290CE0(v7, __p, (char *)a3);
    if (v30 < 0)
      operator delete(__p[0]);
  }
  return v26;
}

void sub_1D5290CB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL sub_1D5290CE0(uint64_t a1, void **a2, char *a3)
{
  void **v5;
  void **v6;
  void **v7;

  v5 = sub_1D5294144(a1, a2);
  v6 = v5;
  v7 = (void **)(a1 + 8);
  if (v7 != v5 && v5 + 7 != (void **)a3)
    sub_1D528FA34(a3, (char *)v5[7], (uint64_t)v5[8], ((_BYTE *)v5[8] - (_BYTE *)v5[7]) >> 3);
  return v7 != v6;
}

void sub_1D5290D44(uint64_t a1@<X0>, int a2@<W1>, void **a3@<X8>)
{
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  double *v12;
  double v13;
  double v14;
  double v15;
  double *v16;
  double v17;
  double v18;
  double *v19;
  double v20;
  double *v21;
  double v22;
  double *v23;
  double *v24;
  double *v25;
  double *v26;
  unint64_t v27;
  double *v28;
  unint64_t v29;
  double *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void *__p;
  __int128 v35;
  void *v36;
  double *v37;
  uint64_t v38;
  void *v39;
  double *v40;
  uint64_t v41;
  double *v42;
  double *v43;
  uint64_t v44;

  v42 = 0;
  sub_1D528F9B4(a3, 4uLL, &v42);
  v42 = 0;
  v43 = 0;
  v44 = 0;
  v39 = 0;
  v40 = 0;
  v41 = 0;
  v36 = 0;
  v37 = 0;
  v38 = 0;
  sub_1D52850A0(&__p, "IFD0:SUBIFD0");
  v6 = (*(uint64_t (**)(uint64_t, void **, double **, _QWORD))(*(_QWORD *)a1 + 248))(a1, &__p, &v42, 0);
  v7 = v6;
  if (SHIBYTE(v35) < 0)
  {
    operator delete(__p);
    if ((v7 & 1) != 0)
      goto LABEL_7;
  }
  else if ((v6 & 1) != 0)
  {
    goto LABEL_7;
  }
  sub_1D52850A0(&__p, "IFD0");
  (*(void (**)(uint64_t, void **, double **, _QWORD))(*(_QWORD *)a1 + 248))(a1, &__p, &v42, 0);
  if (SHIBYTE(v35) < 0)
    operator delete(__p);
LABEL_7:
  sub_1D52850A0(&__p, "IFD0:SUBIFD0:DeltaH");
  v8 = (*(uint64_t (**)(uint64_t, void **, void **, _QWORD))(*(_QWORD *)a1 + 248))(a1, &__p, &v39, 0);
  v9 = v8;
  if (SHIBYTE(v35) < 0)
  {
    operator delete(__p);
    if ((v9 & 1) != 0)
      goto LABEL_13;
  }
  else if ((v8 & 1) != 0)
  {
    goto LABEL_13;
  }
  sub_1D52850A0(&__p, "IFD0:DeltaH");
  (*(void (**)(uint64_t, void **, void **, _QWORD))(*(_QWORD *)a1 + 248))(a1, &__p, &v39, 0);
  if (SHIBYTE(v35) < 0)
    operator delete(__p);
LABEL_13:
  sub_1D52850A0(&__p, "IFD0:SUBIFD0:DeltaV");
  v10 = (*(uint64_t (**)(uint64_t, void **, void **, _QWORD))(*(_QWORD *)a1 + 248))(a1, &__p, &v36, 0);
  v11 = v10;
  if (SHIBYTE(v35) < 0)
  {
    operator delete(__p);
    if ((v11 & 1) != 0)
      goto LABEL_18;
  }
  else if ((v10 & 1) != 0)
  {
    goto LABEL_18;
  }
  sub_1D52850A0(&__p, "IFD0:DeltaV");
  (*(void (**)(uint64_t, void **, void **, _QWORD))(*(_QWORD *)a1 + 248))(a1, &__p, &v36, 0);
  if (SHIBYTE(v35) < 0)
  {
    operator delete(__p);
    if (a2)
      goto LABEL_19;
    goto LABEL_35;
  }
LABEL_18:
  if (a2)
  {
LABEL_19:
    v12 = v42;
    if (v43 == v42)
    {
      v15 = 0.0;
    }
    else
    {
      v13 = 0.0;
      do
      {
        v14 = *v12++;
        v13 = v13 + v14;
      }
      while (v12 != v43);
      v15 = round(v13 / (double)(unint64_t)(v43 - v42));
    }
    v16 = (double *)v39;
    if (v40 != v39)
    {
      v17 = 0.0;
      do
      {
        v18 = *v16++;
        v17 = v17 + v18;
      }
      while (v16 != v40);
      v15 = v15 + round(v17 / (double)(unint64_t)(((char *)v40 - (_BYTE *)v39) >> 3));
    }
    v19 = (double *)v36;
    if (v37 != v36)
    {
      v20 = 0.0;
      v21 = (double *)v36;
      do
      {
        v22 = *v21++;
        v20 = v20 + v22;
      }
      while (v21 != v37);
      v15 = v15 + floor(v20 / (double)(unint64_t)(((char *)v37 - (_BYTE *)v36) >> 3));
    }
    v23 = (double *)*a3;
    if ((unint64_t)((_BYTE *)a3[1] - (_BYTE *)*a3) <= 0x18)
      sub_1D528EAE0();
    v23[2] = v15;
    v23[3] = v15;
    *v23 = v15;
    v23[1] = v15;
    goto LABEL_46;
  }
LABEL_35:
  v33 = 0;
  sub_1D528F9B4(&__p, 4uLL, &v33);
  v24 = (double *)*a3;
  if (*a3)
  {
    a3[1] = v24;
    operator delete(v24);
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
  }
  v25 = (double *)__p;
  *a3 = __p;
  v26 = (double *)v35;
  *(_OWORD *)(a3 + 1) = v35;
  v19 = (double *)v36;
  if (v26 != v25)
  {
    v27 = 0;
    v28 = v42;
    v29 = v43 - v42;
    v30 = (double *)v39;
    v31 = ((char *)v40 - (_BYTE *)v39) >> 3;
    v32 = ((char *)v37 - (_BYTE *)v36) >> 3;
    do
    {
      if (v29 > v27)
        v25[v27] = v28[v27] + v25[v27];
      if (v31 > v27)
        v25[v27] = v30[v27] + v25[v27];
      if (v32 > v27)
        v25[v27] = v19[v27] + v25[v27];
      ++v27;
    }
    while (v26 - v25 > (unint64_t)v27);
  }
LABEL_46:
  if (v19)
  {
    v37 = v19;
    operator delete(v19);
  }
  if (v39)
  {
    v40 = (double *)v39;
    operator delete(v39);
  }
  if (v42)
  {
    v43 = v42;
    operator delete(v42);
  }
}

void sub_1D5291108(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, uint64_t a19, void *a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  void *v24;
  void *v25;

  if (__p)
    operator delete(__p);
  if (a20)
    operator delete(a20);
  v24 = *(void **)(v22 - 56);
  if (v24)
  {
    *(_QWORD *)(v22 - 48) = v24;
    operator delete(v24);
  }
  v25 = *(void **)v21;
  if (*(_QWORD *)v21)
  {
    *(_QWORD *)(v21 + 8) = v25;
    operator delete(v25);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D529119C(void **a1)
{
  uint64_t v2;
  void **v3;
  unsigned int *v4;
  uint64_t v5;
  void *__p[2];
  char v8;

  v2 = (uint64_t)(a1 + 24);
  (*((void (**)(void **__return_ptr))*a1 + 49))(__p);
  v3 = sub_1D5294144(v2, __p);
  if (a1 + 25 == v3 || (v4 = (unsigned int *)v3[7], v3[8] == v4))
    v5 = 0;
  else
    v5 = *v4;
  if (v8 < 0)
    operator delete(__p[0]);
  return v5;
}

void sub_1D5291218(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D5291234(void **a1)
{
  uint64_t v2;
  void **v3;
  unsigned __int16 *v4;
  uint64_t v5;
  void *__p[2];
  char v8;

  v2 = (uint64_t)(a1 + 27);
  (*((void (**)(void **__return_ptr))*a1 + 49))(__p);
  v3 = sub_1D5294144(v2, __p);
  if (a1 + 28 == v3 || (v4 = (unsigned __int16 *)v3[7], v3[8] == v4))
    v5 = 0;
  else
    v5 = *v4;
  if (v8 < 0)
    operator delete(__p[0]);
  return v5;
}

void sub_1D52912B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D52912CC(void **a1, uint64_t a2, char a3)
{
  uint64_t v6;
  void **v7;
  void **v8;
  double v9;
  double v10;
  void *__p[2];
  char v13;

  v6 = (uint64_t)(a1 + 36);
  (*((void (**)(void **__return_ptr))*a1 + 49))(__p);
  v7 = sub_1D5294144(v6, __p);
  v8 = v7;
  if (a1 + 37 == v7)
    v9 = -1.0;
  else
    v9 = *((double *)v7 + 7);
  if (v13 < 0)
    operator delete(__p[0]);
  if (a1 + 37 == v8 && (a3 & 1) != 0)
  {
    (*((void (**)(void **__return_ptr, void **, uint64_t))*a1 + 49))(__p, a1, a2);
    v10 = (*((double (**)(void **, void **))*a1 + 36))(a1, __p);
    if (v13 < 0)
      operator delete(__p[0]);
    v9 = -1.0;
    if (v10 > -100.0)
      return exp2(-v10);
  }
  return v9;
}

void sub_1D52913CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D52913EC(double a1)
{
  return exp2(-a1);
}

double sub_1D52913F4(void **a1)
{
  uint64_t v2;
  void **v3;
  double v4;
  void *__p[2];
  char v7;

  v2 = (uint64_t)(a1 + 39);
  (*((void (**)(void **__return_ptr))*a1 + 49))(__p);
  v3 = sub_1D5294144(v2, __p);
  if (a1 + 40 == v3)
    v4 = -101.0;
  else
    v4 = *((double *)v3 + 7);
  if (v7 < 0)
    operator delete(__p[0]);
  return v4;
}

void sub_1D5291470(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D529148C(void **a1, uint64_t a2)
{
  uint64_t v4;
  void **v5;
  void **v6;
  double v7;
  void **v8;
  double v9;
  void *__p[2];
  char v12;

  v4 = (uint64_t)(a1 + 42);
  (*((void (**)(void **__return_ptr))*a1 + 49))(__p);
  v5 = sub_1D5294144(v4, __p);
  v6 = v5;
  if (a1 + 43 == v5)
    v7 = -1.0;
  else
    v7 = *((double *)v5 + 7);
  if (v12 < 0)
    operator delete(__p[0]);
  if (a1 + 43 == v6)
  {
    (*((void (**)(void **__return_ptr, void **, uint64_t))*a1 + 49))(__p, a1, a2);
    v8 = sub_1D5294144((uint64_t)(a1 + 45), __p);
    if (a1 + 46 == v8)
      v9 = -0.5;
    else
      v9 = *((double *)v8 + 7) * 0.5;
    if (v12 < 0)
      operator delete(__p[0]);
    return exp2(v9);
  }
  return v7;
}

void sub_1D5291580(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_1D52915A0(void **a1)
{
  uint64_t v2;
  void **v3;
  double v4;
  void *__p[2];
  char v7;

  v2 = (uint64_t)(a1 + 48);
  (*((void (**)(void **__return_ptr))*a1 + 49))(__p);
  v3 = sub_1D5294144(v2, __p);
  if (a1 + 49 == v3)
    v4 = -1.0;
  else
    v4 = *((double *)v3 + 7);
  if (v7 < 0)
    operator delete(__p[0]);
  return v4;
}

void sub_1D5291618(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D5291634(void **a1)
{
  uint64_t v2;
  void **v3;
  uint64_t v4;
  void *__p[2];
  char v7;

  v2 = (uint64_t)(a1 + 57);
  (*((void (**)(void **__return_ptr))*a1 + 49))(__p);
  v3 = sub_1D5294144(v2, __p);
  if (a1 + 58 == v3)
    v4 = 0;
  else
    v4 = *((unsigned int *)v3 + 14);
  if (v7 < 0)
    operator delete(__p[0]);
  return v4;
}

void sub_1D52916A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D52916C0(void **a1)
{
  uint64_t v2;
  void **v3;
  uint64_t v4;
  void *__p[2];
  char v7;

  v2 = (uint64_t)(a1 + 60);
  (*((void (**)(void **__return_ptr))*a1 + 49))(__p);
  v3 = sub_1D5294144(v2, __p);
  if (a1 + 61 == v3)
    v4 = 0;
  else
    v4 = *((unsigned int *)v3 + 14);
  if (v7 < 0)
    operator delete(__p[0]);
  return v4;
}

void sub_1D5291730(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D529174C()
{
  return 0;
}

double *sub_1D5291754@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5338F84(3u, a1);
}

double *sub_1D529175C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5338F84(3u, a1);
}

double sub_1D5291764()
{
  return 0.0;
}

uint64_t sub_1D529176C()
{
  return 0;
}

void sub_1D5291774(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

double sub_1D5291780()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1EFF325F8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_1EFF325F8))
  {
    qword_1EFF325E8 = 0;
    unk_1EFF325F0 = 0;
    __cxa_guard_release(&qword_1EFF325F8);
  }
  return *(double *)&qword_1EFF325E8;
}

uint64_t sub_1D52917E4@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  void *exception;

  v2 = *(_QWORD *)(result + 80);
  if (!v2)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v3 = *(_QWORD *)(result + 88);
  *a2 = v2;
  a2[1] = v3;
  if (v3)
  {
    v4 = (unint64_t *)(v3 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_1D5291854(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *sub_1D5291868@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  void *result;

  if (*(char *)(a1 + 23) < 0)
    return sub_1D5290130((_BYTE *)a2, *(void **)a1, *(_QWORD *)(a1 + 8));
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_QWORD *)(a2 + 16) = *(_QWORD *)(a1 + 16);
  return result;
}

id sub_1D5291894(uint64_t a1)
{
  void *v1;
  void *exception;

  v1 = *(void **)(a1 + 104);
  if (!v1)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return v1;
}

void sub_1D52918E4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52918F8()
{
  return 0;
}

uint64_t sub_1D5291900()
{
  return 0;
}

uint64_t sub_1D5291908(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 224))(a1);
}

uint64_t sub_1D5291914()
{
  return 0;
}

uint64_t sub_1D529191C()
{
  return 0;
}

uint64_t sub_1D5291924()
{
  return 0;
}

uint64_t sub_1D529192C(uint64_t a1)
{
  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 440))(a1);
  return 0;
}

uint64_t sub_1D5291950(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 448))(a1);
}

uint64_t sub_1D529195C(uint64_t a1)
{
  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 440))(a1);
  return 0;
}

double sub_1D5291980()
{
  return *MEMORY[0x1E0C9D648];
}

uint64_t sub_1D5291994()
{
  return 0x40000000400;
}

void sub_1D529199C(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

void sub_1D52919A8(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

uint64_t sub_1D52919B4()
{
  return 0;
}

uint64_t sub_1D52919BC()
{
  return 0xFFFFLL;
}

uint64_t sub_1D52919C4()
{
  return 16;
}

uint64_t sub_1D52919CC()
{
  return 1;
}

uint64_t sub_1D52919D4()
{
  return 0;
}

void sub_1D52919DC(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t sub_1D52919E4()
{
  return 0;
}

void sub_1D52919EC(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

void sub_1D52919F8(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  _QWORD v5[3];
  void **v6;

  (*(void (**)(_QWORD *__return_ptr))(*(_QWORD *)a1 + 584))(v5);
  sub_1D5291A70((uint64_t)v5, a2, a3);
  v6 = (void **)v5;
  sub_1D5282E44(&v6);
}

void sub_1D5291A58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_1D5282E44((void ***)va);
  _Unwind_Resume(a1);
}

void sub_1D5291A70(uint64_t a1@<X1>, unint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t *v4;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  int v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  std::__shared_weak_count *v23;

  v4 = *(uint64_t **)a1;
  if (*(_QWORD *)(a1 + 8) == *(_QWORD *)a1)
  {
    *a3 = 0;
    a3[1] = 0;
    return;
  }
  v7 = *v4;
  v8 = (std::__shared_weak_count *)v4[1];
  v22 = *v4;
  v23 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
  }
  if (!v7)
  {
    *a3 = 0;
    a3[1] = 0;
    if (!v8)
      return;
    goto LABEL_30;
  }
  v11 = *(_DWORD *)(v7 + 16);
  v12 = *(uint64_t **)a1;
  if (*(_QWORD *)(a1 + 8) != *(_QWORD *)a1)
  {
    v13 = 0;
    v14 = 0;
    while (1)
    {
      v15 = v12[v13];
      if (!v15)
        break;
      if (a2 > 0xA0)
      {
        v16 = sub_1D5337D88(v22);
        v17 = sub_1D5337D88(*(_QWORD *)(*(_QWORD *)a1 + v13 * 8));
      }
      else
      {
        v16 = sub_1D5337D88(v15);
        v17 = sub_1D5337D88(v22);
      }
      if ((int)v16 <= (int)v17 && SHIDWORD(v16) <= SHIDWORD(v17))
      {
        sub_1D52908C8(&v22, (uint64_t *)(*(_QWORD *)a1 + v13 * 8));
        if (!v11)
          v11 = *(_DWORD *)(v22 + 16);
      }
      ++v14;
      v12 = *(uint64_t **)a1;
      v13 += 2;
      if (v14 >= (uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 4)
      {
        v7 = v22;
        if (!*(_DWORD *)(v22 + 16))
          goto LABEL_26;
        goto LABEL_28;
      }
    }
    *a3 = 0;
    a3[1] = 0;
    v8 = v23;
    if (!v23)
      return;
LABEL_30:
    v20 = (unint64_t *)&v8->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
    return;
  }
  if (!v11)
  {
LABEL_26:
    if (v11)
      *(_DWORD *)(v7 + 16) = v11;
  }
LABEL_28:
  v19 = v23;
  *a3 = v7;
  a3[1] = (uint64_t)v19;
}

void sub_1D5291BFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D5291C1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  void *__p[2];
  char v8;
  unsigned int v9;

  v9 = 0;
  v4 = a1 + 168;
  (*(void (**)(void **__return_ptr))(*(_QWORD *)a1 + 392))(__p);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, void **, unsigned int *))(*(_QWORD *)a3 + 16))(a3, v4, __p, &v9);
  if (v8 < 0)
    operator delete(__p[0]);
  if (v5)
    return v9;
  else
    return 0;
}

void sub_1D5291C94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1D5291CB0(uint64_t a1@<X0>, void **a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void **a5@<X8>)
{
  int v10;
  int v11;
  double v12;
  _DWORD *v13;
  uint64_t v14;
  unint64_t v15;
  double *v16;
  _BOOL4 v17;
  _BYTE *v18;
  void *v19;
  void *__p;
  _BYTE *v21;
  void *v22;
  void *v23;
  _BYTE *v24;
  uint64_t v25;

  v23 = 0;
  v24 = 0;
  v25 = 0;
  (*(void (**)(void **__return_ptr))(*(_QWORD *)a1 + 392))(&__p);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t, void **, uint64_t, void **))(*(_QWORD *)a3 + 24))(a3, a1 + 120, &__p, a4, &v23);
  v11 = v10;
  if (SHIBYTE(v22) < 0)
  {
    operator delete(__p);
    if (v11)
    {
LABEL_3:
      sub_1D528EB68(a5, (v24 - (_BYTE *)v23) >> 2);
      v13 = v23;
      if (v24 == v23)
      {
        v13 = v24;
        if (!v24)
          return;
      }
      else
      {
        v14 = 0;
        v15 = (v24 - (_BYTE *)v23) >> 2;
        v16 = (double *)*a5;
        if (v15 <= 1)
          v15 = 1;
        do
        {
          LODWORD(v12) = v13[v14];
          v12 = (double)*(unint64_t *)&v12;
          v16[v14++] = v12;
        }
        while (v15 != v14);
      }
      goto LABEL_15;
    }
  }
  else if (v10)
  {
    goto LABEL_3;
  }
  __p = 0;
  v21 = 0;
  v22 = 0;
  v17 = sub_1D5290CE0(a1 + 144, a2, (char *)&__p);
  v18 = __p;
  if (v17 && (v19 = v21, v21 - (_BYTE *)__p == 24))
  {
    *a5 = __p;
    a5[1] = v19;
    a5[2] = v22;
  }
  else
  {
    *a5 = 0;
    a5[1] = 0;
    a5[2] = 0;
    if (v18)
    {
      v21 = v18;
      operator delete(v18);
    }
  }
  v13 = v23;
  if (v23)
  {
LABEL_15:
    v24 = v13;
    operator delete(v13);
  }
}

void sub_1D5291E0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  if (__p)
    operator delete(__p);
  if (a15)
    operator delete(a15);
  _Unwind_Resume(exception_object);
}

void sub_1D5291E58(uint64_t a1@<X0>, int *a2@<X1>, unsigned int *a3@<X2>, int a4@<W3>, _QWORD *a5@<X8>)
{
  int v9;
  int v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  int v14;
  unsigned int v15;
  BOOL v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  __int128 v26;
  int v27;

  v27 = a4;
  sub_1D52917E4(a1, &v26);
  v9 = (**(uint64_t (***)(_QWORD))v26)(v26);
  v10 = v9;
  v11 = (std::__shared_weak_count *)*((_QWORD *)&v26 + 1);
  if (!*((_QWORD *)&v26 + 1))
    goto LABEL_5;
  v12 = (unint64_t *)(*((_QWORD *)&v26 + 1) + 8);
  do
    v13 = __ldaxr(v12);
  while (__stlxr(v13 - 1, v12));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
    if (!v10)
      goto LABEL_18;
  }
  else
  {
LABEL_5:
    if (!v9)
      goto LABEL_18;
  }
  LODWORD(v26) = *a2;
  v14 = *sub_1D5294254((int *)&v26, a3);
  sub_1D52917E4(a1, &v26);
  v15 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)v26 + 16))(v26);
  v17 = v14 < 0 || v15 >= v14;
  v18 = (std::__shared_weak_count *)*((_QWORD *)&v26 + 1);
  if (*((_QWORD *)&v26 + 1))
  {
    v19 = (unint64_t *)(*((_QWORD *)&v26 + 1) + 8);
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  if (!v17)
  {
    *a5 = 0;
    a5[1] = 0;
    return;
  }
LABEL_18:
  *a5 = 0;
  a5[1] = 0;
  v21 = *a3;
  if ((_DWORD)v21)
  {
    v25 = sub_1D5292028(a1, *a2, v21);
    sub_1D52942DC(&v25, &v27, a2, a3, &v26);
    sub_1D5292548((uint64_t)a5, &v26);
    v22 = (std::__shared_weak_count *)*((_QWORD *)&v26 + 1);
    if (*((_QWORD *)&v26 + 1))
    {
      v23 = (unint64_t *)(*((_QWORD *)&v26 + 1) + 8);
      do
        v24 = __ldaxr(v23);
      while (__stlxr(v24 - 1, v23));
      if (!v24)
      {
        ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
        std::__shared_weak_count::__release_weak(v22);
      }
    }
  }
}

void sub_1D5291FFC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1D5282EB4((uint64_t)va);
  _Unwind_Resume(a1);
}

unint64_t sub_1D5292028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unsigned int v15;
  uint64_t v16;
  unsigned int v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  __int16 v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  int v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  unsigned int v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unsigned __int16 v40;
  uint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  BOOL v45;
  _BOOL4 v46;
  unint64_t v48;
  int v49;
  uint64_t v50;
  std::__shared_weak_count *v51;
  uint64_t v52;
  std::__shared_weak_count *v53;
  uint64_t v54[3];
  uint64_t v55;

  v55 = a2;
  if (a3)
  {
    v3 = a3;
    sub_1D52917E4(a1, &v52);
    sub_1D528594C(&v50, &v55);
    sub_1D5285164(v54, &v52, (uint64_t)&v50, 0);
    v5 = v53;
    if (v53)
    {
      p_shared_owners = (unint64_t *)&v53->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    sub_1D52917E4(a1, &v50);
    sub_1D5293C20(&v52, &v50, 2);
    v8 = v51;
    if (v51)
    {
      v9 = (unint64_t *)&v51->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
    sub_1D52917E4(a1, &v50);
    v11 = sub_1D528479C(v50);
    v12 = v51;
    if (v51)
    {
      v13 = (unint64_t *)&v51->__shared_owners_;
      do
        v14 = __ldaxr(v13);
      while (__stlxr(v14 - 1, v13));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    v15 = 0;
    v16 = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 616))(a1, v11))
    {
      do
      {
        sub_1D52917E4(a1, &v50);
        v17 = sub_1D528479C(v50);
        v18 = v51;
        if (v51)
        {
          v19 = (unint64_t *)&v51->__shared_owners_;
          do
            v20 = __ldaxr(v19);
          while (__stlxr(v20 - 1, v19));
          if (!v20)
          {
            ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
            std::__shared_weak_count::__release_weak(v18);
          }
        }
        sub_1D52917E4(a1, &v50);
        v21 = sub_1D528479C(v50);
        v22 = v51;
        if (v51)
        {
          v23 = (unint64_t *)&v51->__shared_owners_;
          do
            v24 = __ldaxr(v23);
          while (__stlxr(v24 - 1, v23));
          if (!v24)
          {
            ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
            std::__shared_weak_count::__release_weak(v22);
          }
        }
        sub_1D52917E4(a1, &v50);
        v25 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v50 + 48))(v50);
        v26 = v51;
        if (v51)
        {
          v27 = (unint64_t *)&v51->__shared_owners_;
          do
            v28 = __ldaxr(v27);
          while (__stlxr(v28 - 1, v27));
          if (!v28)
          {
            ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
            std::__shared_weak_count::__release_weak(v26);
          }
        }
        if (v17 < 0xFF01)
          break;
        if (v17 == 65472)
        {
          sub_1D52917E4(a1, &v50);
          sub_1D52846FC(v50);
          v29 = v51;
          if (v51)
          {
            v30 = (unint64_t *)&v51->__shared_owners_;
            do
              v31 = __ldaxr(v30);
            while (__stlxr(v31 - 1, v30));
            if (!v31)
            {
              ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
              std::__shared_weak_count::__release_weak(v29);
            }
          }
          sub_1D52917E4(a1, &v50);
          v32 = sub_1D528479C(v50);
          v33 = v51;
          if (v51)
          {
            v34 = (unint64_t *)&v51->__shared_owners_;
            do
              v35 = __ldaxr(v34);
            while (__stlxr(v35 - 1, v34));
            if (!v35)
            {
              ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
              std::__shared_weak_count::__release_weak(v33);
            }
          }
          sub_1D52917E4(a1, &v50);
          v36 = sub_1D528479C(v50);
          v37 = v51;
          if (v51)
          {
            v38 = (unint64_t *)&v51->__shared_owners_;
            do
              v39 = __ldaxr(v38);
            while (__stlxr(v39 - 1, v38));
            if (!v39)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
          v15 = v36;
          v16 = v32;
        }
        v40 = v21 - 2;
        v3 = v3 - 4 - (unsigned __int16)(v21 - 2);
        if (v3 >= 0)
        {
          sub_1D52917E4(a1, &v50);
          v41 = v50;
          v48 = v25 + (unint64_t)v40;
          sub_1D528594C(&v49, (uint64_t *)&v48);
          (*(void (**)(uint64_t, int *, _QWORD))(*(_QWORD *)v41 + 40))(v41, &v49, 0);
          v42 = v51;
          if (v51)
          {
            v43 = (unint64_t *)&v51->__shared_owners_;
            do
              v44 = __ldaxr(v43);
            while (__stlxr(v44 - 1, v43));
            if (!v44)
            {
              ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
              std::__shared_weak_count::__release_weak(v42);
            }
          }
        }
        v45 = !v15 || (_DWORD)v16 == 0;
        v46 = v45;
      }
      while (v3 >= 5 && v46 && v17 != 65498);
    }
    sub_1D5293C98(&v52);
    sub_1D5285200(v54);
  }
  else
  {
    v15 = 0;
    v16 = 0;
  }
  return v15 | (unint64_t)(v16 << 32);
}

void sub_1D5292474(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, char a17)
{
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1D529244CLL);
}

uint64_t sub_1D5292548(uint64_t a1, __int128 *a2)
{
  __int128 v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  v3 = *a2;
  *(_QWORD *)a2 = 0;
  *((_QWORD *)a2 + 1) = 0;
  v4 = *(std::__shared_weak_count **)(a1 + 8);
  *(_OWORD *)a1 = v3;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  return a1;
}

BOOL sub_1D52925AC(uint64_t a1, int a2)
{
  return a2 == 65496;
}

void sub_1D52925BC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  const std::string::value_type *v8;
  std::string::size_type v9;
  std::string *v10;
  __int128 v11;
  void **v12;
  std::string::size_type v13;
  uint64_t v14;
  int v15;
  const std::string::value_type *v16;
  std::string::size_type v17;
  std::string v18;
  void *__p[2];
  int64_t v20;
  uint64_t v21;
  uint64_t v22;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 8))(&v21);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  v3 = v21;
  if (v22 != v21)
  {
    v4 = 0;
    v5 = 0;
    do
    {
      v6 = *(unsigned __int8 *)(a2 + 23);
      if ((v6 & 0x80u) != 0)
        v6 = *(_QWORD *)(a2 + 8);
      if (v6)
      {
        sub_1D52850A0(&v18, ".");
        v7 = *(char *)(v21 + v4 + 23);
        if (v7 >= 0)
          v8 = (const std::string::value_type *)(v21 + v4);
        else
          v8 = *(const std::string::value_type **)(v21 + v4);
        if (v7 >= 0)
          v9 = *(unsigned __int8 *)(v21 + v4 + 23);
        else
          v9 = *(_QWORD *)(v21 + v4 + 8);
        v10 = std::string::append(&v18, v8, v9);
        v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
        v20 = v10->__r_.__value_.__r.__words[2];
        *(_OWORD *)__p = v11;
        v10->__r_.__value_.__l.__size_ = 0;
        v10->__r_.__value_.__r.__words[2] = 0;
        v10->__r_.__value_.__r.__words[0] = 0;
        if (v20 >= 0)
          v12 = __p;
        else
          v12 = (void **)__p[0];
        if (v20 >= 0)
          v13 = HIBYTE(v20);
        else
          v13 = (std::string::size_type)__p[1];
        std::string::append((std::string *)a2, (const std::string::value_type *)v12, v13);
        if (SHIBYTE(v20) < 0)
          operator delete(__p[0]);
        if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v18.__r_.__value_.__l.__data_);
      }
      else
      {
        v14 = v3 + v4;
        v15 = *(char *)(v14 + 23);
        if (v15 >= 0)
          v16 = (const std::string::value_type *)v14;
        else
          v16 = *(const std::string::value_type **)v14;
        if (v15 >= 0)
          v17 = *(unsigned __int8 *)(v14 + 23);
        else
          v17 = *(_QWORD *)(v14 + 8);
        std::string::append((std::string *)a2, v16, v17);
      }
      ++v5;
      v3 = v21;
      v4 += 24;
    }
    while (v5 < 0xAAAAAAAAAAAAAAABLL * ((v22 - v21) >> 3));
  }
  __p[0] = &v21;
  sub_1D5293CCC((void ***)__p);
}

void sub_1D5292734(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  uint64_t v22;

  if (*(char *)(v22 + 23) < 0)
    operator delete(*(void **)v22);
  a16 = &a22;
  sub_1D5293CCC((void ***)&a16);
  _Unwind_Resume(a1);
}

void sub_1D5292794(_QWORD *a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  if (v2)
  {
    v3 = (unint64_t *)(v2 + 8);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
}

void sub_1D52927B8(_QWORD *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  int v21;
  int v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  BOOL v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  __int128 v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t *v46;
  uint64_t v47;
  unint64_t *v48;
  unint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  std::__shared_weak_count *v53;
  unint64_t *v54;
  unint64_t v55;
  std::__shared_weak_count *v56;
  unint64_t *v57;
  unint64_t v58;
  double v59;
  int v60;
  double v61;
  __int128 v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  std::__shared_weak_count *v66;
  unint64_t *v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  unint64_t *v70;
  unint64_t v71;
  std::__shared_weak_count *v72;
  unint64_t *v73;
  unint64_t v74;
  std::__shared_weak_count *v75;
  unint64_t *v76;
  unint64_t v77;
  void *v78;
  void *v79;
  __int128 v80;
  std::__shared_weak_count *v81;
  unint64_t *v82;
  unint64_t v83;
  std::__shared_weak_count *v84;
  unint64_t *v85;
  unint64_t v86;
  std::__shared_weak_count *v87;
  unint64_t *v88;
  unint64_t v89;
  std::__shared_weak_count *v90;
  unint64_t *v91;
  unint64_t v92;
  std::__shared_weak_count *v93;
  unint64_t *v94;
  unint64_t v95;
  void *exception;
  void *v97;
  void *v98;
  void *v99;
  void *v100;
  std::__shared_weak_count *v101;
  char v102;
  double v103;
  void *v104[3];
  void *v105[2];
  uint64_t v106;
  std::__shared_weak_count *v107;
  uint64_t v108;
  std::__shared_weak_count *v109;
  __int128 v110;
  void *__p[2];
  char v112;

  if (((*(uint64_t (**)(_QWORD *))(*a1 + 64))(a1) & 1) == 0)
  {
    *a3 = 0;
    a3[1] = 0;
    return;
  }
  (*(void (**)(void **__return_ptr, _QWORD *))*a1)(__p, a1);
  sub_1D5288864((uint64_t)__p, v6, v7, v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if (v112 < 0)
    operator delete(__p[0]);
  if (!v10)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  sub_1D54344F4(v10, &v110);
  if (objc_msgSend_hasPrefix_(v10, v11, (uint64_t)CFSTR("dng."), v12, v13))
  {
    (*(void (**)(void **__return_ptr, _QWORD *, __int128 *, void *))(*a1 + 624))(__p, a1, &v110, v10);
    v14 = *(_OWORD *)__p;
    __p[0] = 0;
    __p[1] = 0;
    v15 = (std::__shared_weak_count *)*((_QWORD *)&v110 + 1);
    v110 = v14;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldaxr(p_shared_owners);
      while (__stlxr(v17 - 1, p_shared_owners));
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
    v18 = (std::__shared_weak_count *)__p[1];
    if (__p[1])
    {
      v19 = (unint64_t *)((char *)__p[1] + 8);
      do
        v20 = __ldaxr(v19);
      while (__stlxr(v20 - 1, v19));
      if (!v20)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
  }
  *a3 = 0;
  a3[1] = 0;
  v21 = (*(uint64_t (**)(_QWORD *))(*a1 + 408))(a1);
  v22 = (*(uint64_t (**)(_QWORD *))(*a1 + 72))(a1);
  if ((_QWORD)v110 && sub_1D53BC104(v110))
  {
    sub_1D52908C8(a1 + 3, (uint64_t *)&v110);
    sub_1D5285A94(v105, a1 + 1);
    sub_1D53BE48C((uint64_t *)v105, __p);
    sub_1D5292548((uint64_t)a3, (__int128 *)__p);
    v23 = (std::__shared_weak_count *)__p[1];
    if (__p[1])
    {
      v24 = (unint64_t *)((char *)__p[1] + 8);
      do
        v25 = __ldaxr(v24);
      while (__stlxr(v25 - 1, v24));
      if (!v25)
      {
        ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
        std::__shared_weak_count::__release_weak(v23);
      }
    }
    v26 = (std::__shared_weak_count *)v105[1];
    if (v105[1])
    {
      v27 = (unint64_t *)((char *)v105[1] + 8);
      do
        v28 = __ldaxr(v27);
      while (__stlxr(v28 - 1, v27));
      if (!v28)
      {
        ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
        std::__shared_weak_count::__release_weak(v26);
      }
    }
    if (*a3)
      v29 = *a2 == 0;
    else
      v29 = 1;
    if (v29)
      goto LABEL_162;
    (*(void (**)(void **__return_ptr))(*(_QWORD *)*a3 + 144))(__p);
    if (__p[1] == __p[0]
      || (*(unsigned int (**)(_QWORD))(*(_QWORD *)*a3 + 176))(*a3)
      && (*(unsigned int (**)(_QWORD))(*(_QWORD *)*a3 + 2152))(*a3)
      && (*(unsigned int (**)(_QWORD *))(*a1 + 528))(a1) != 3
      && (*(unsigned int (**)(_QWORD *))(*a1 + 528))(a1) != 1)
    {
      v98 = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1D8271938](v98, "RawCameraException");
      __cxa_throw(v98, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
    }
    if (sub_1D52B4F90(*a2))
    {
      v106 = 0;
      v107 = 0;
      sub_1D52B4778((__int128 *)__p[0], &v106, &v108);
      v30 = v107;
      if (v107)
      {
        v31 = (unint64_t *)&v107->__shared_owners_;
        do
          v32 = __ldaxr(v31);
        while (__stlxr(v32 - 1, v31));
        if (!v32)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
    }
    else
    {
      v47 = a2[1];
      v108 = *a2;
      v109 = (std::__shared_weak_count *)v47;
      if (v47)
      {
        v48 = (unint64_t *)(v47 + 8);
        do
          v49 = __ldxr(v48);
        while (__stxr(v49 + 1, v48));
      }
    }
    (*(void (**)(_QWORD, uint64_t *))(*(_QWORD *)*a3 + 136))(*a3, &v108);
    if (sub_1D52B4ED0(v108))
    {
      sub_1D54344F4(CFSTR("dng.adobe.generic"), v105);
      sub_1D52908C8(a1 + 3, (uint64_t *)v105);
      sub_1D5285A94(&v100, a1 + 1);
      sub_1D5294404(&v100, v104);
      sub_1D5292548((uint64_t)a3, (__int128 *)v104);
      v50 = (std::__shared_weak_count *)v104[1];
      if (v104[1])
      {
        v51 = (unint64_t *)((char *)v104[1] + 8);
        do
          v52 = __ldaxr(v51);
        while (__stlxr(v52 - 1, v51));
        if (!v52)
        {
          ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
          std::__shared_weak_count::__release_weak(v50);
        }
      }
      v53 = v101;
      if (v101)
      {
        v54 = (unint64_t *)&v101->__shared_owners_;
        do
          v55 = __ldaxr(v54);
        while (__stlxr(v55 - 1, v54));
        if (!v55)
        {
          ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
          std::__shared_weak_count::__release_weak(v53);
        }
      }
      if (*a3)
        (*(void (**)(_QWORD, uint64_t *))(*(_QWORD *)*a3 + 136))(*a3, &v108);
      v56 = (std::__shared_weak_count *)v105[1];
      if (v105[1])
      {
        v57 = (unint64_t *)((char *)v105[1] + 8);
        do
          v58 = __ldaxr(v57);
        while (__stlxr(v58 - 1, v57));
        if (!v58)
        {
          ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
          std::__shared_weak_count::__release_weak(v56);
        }
      }
    }
    if (v21)
    {
      (*(void (**)(void **__return_ptr))(*(_QWORD *)*a3 + 1016))(v105);
      (*(void (**)(void **__return_ptr, _QWORD *, _QWORD))(*a1 + 256))(v104, a1, 0);
      v59 = (*(double (**)(_QWORD))(*(_QWORD *)*a3 + 896))(*a3);
      v103 = 0.0;
      sub_1D52850A0(&v100, "IFD0:SUBIFD0");
      v60 = (*(uint64_t (**)(_QWORD *, void **, double *))(*a1 + 240))(a1, &v100, &v103);
      if (v102 < 0)
        operator delete(v100);
      if (v60)
      {
        if (vabdd_f64(v103, v59) > 5.0)
        {
          if (v104[0])
          {
            v104[1] = v104[0];
            operator delete(v104[0]);
          }
          if (v105[0])
          {
            v105[1] = v105[0];
            operator delete(v105[0]);
          }
          goto LABEL_112;
        }
        v61 = vabdd_f64(*(double *)v104[0], *(double *)v105[0]);
        v104[1] = v104[0];
        operator delete(v104[0]);
        if (v105[0])
        {
          v105[1] = v105[0];
          operator delete(v105[0]);
        }
        if (v61 > 5.0)
        {
LABEL_112:
          sub_1D54344F4(CFSTR("dng.adobe.generic"), v105);
          v62 = *(_OWORD *)v105;
          v105[0] = 0;
          v105[1] = 0;
          v63 = (std::__shared_weak_count *)*((_QWORD *)&v110 + 1);
          v110 = v62;
          if (v63)
          {
            v64 = (unint64_t *)&v63->__shared_owners_;
            do
              v65 = __ldaxr(v64);
            while (__stlxr(v65 - 1, v64));
            if (!v65)
            {
              ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
              std::__shared_weak_count::__release_weak(v63);
            }
          }
          v66 = (std::__shared_weak_count *)v105[1];
          if (v105[1])
          {
            v67 = (unint64_t *)((char *)v105[1] + 8);
            do
              v68 = __ldaxr(v67);
            while (__stlxr(v68 - 1, v67));
            if (!v68)
            {
              ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
              std::__shared_weak_count::__release_weak(v66);
            }
          }
          if ((_QWORD)v110)
          {
            sub_1D52908C8(a1 + 3, (uint64_t *)&v110);
            sub_1D5285A94(v104, a1 + 1);
            sub_1D5294404(v104, v105);
            sub_1D5292548((uint64_t)a3, (__int128 *)v105);
            v69 = (std::__shared_weak_count *)v105[1];
            if (v105[1])
            {
              v70 = (unint64_t *)((char *)v105[1] + 8);
              do
                v71 = __ldaxr(v70);
              while (__stlxr(v71 - 1, v70));
              if (!v71)
              {
                ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
                std::__shared_weak_count::__release_weak(v69);
              }
            }
            v72 = (std::__shared_weak_count *)v104[1];
            if (v104[1])
            {
              v73 = (unint64_t *)((char *)v104[1] + 8);
              do
                v74 = __ldaxr(v73);
              while (__stlxr(v74 - 1, v73));
              if (!v74)
              {
                ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
                std::__shared_weak_count::__release_weak(v72);
              }
            }
            goto LABEL_133;
          }
LABEL_173:
          v99 = __cxa_allocate_exception(0x10uLL);
          MEMORY[0x1D8271938](v99, "RawCameraException");
          __cxa_throw(v99, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
        }
      }
      else
      {
        if (v104[0])
        {
          v104[1] = v104[0];
          operator delete(v104[0]);
        }
        if (v105[0])
        {
          v105[1] = v105[0];
          operator delete(v105[0]);
        }
      }
    }
    if ((v22 & v21) != 0)
    {
      if (((*(uint64_t (**)(_QWORD))(*(_QWORD *)*a3 + 192))(*a3) & 1) == 0)
        goto LABEL_112;
      if (!*a3 || ((*(uint64_t (**)(_QWORD))(*(_QWORD *)*a3 + 192))(*a3) & 1) == 0)
        goto LABEL_173;
    }
LABEL_133:
    v75 = v109;
    if (v109)
    {
      v76 = (unint64_t *)&v109->__shared_owners_;
      do
        v77 = __ldaxr(v76);
      while (__stlxr(v77 - 1, v76));
      if (!v77)
      {
        ((void (*)(std::__shared_weak_count *))v75->__on_zero_shared)(v75);
        std::__shared_weak_count::__release_weak(v75);
      }
    }
    v105[0] = __p;
    sub_1D5293CCC((void ***)v105);
    goto LABEL_139;
  }
  if (!v21)
  {
    __p[0] = 0;
    __p[1] = 0;
    sub_1D5292548((uint64_t)a3, (__int128 *)__p);
    v43 = (std::__shared_weak_count *)__p[1];
    if (!__p[1])
      goto LABEL_139;
    v46 = (unint64_t *)((char *)__p[1] + 8);
    do
      v45 = __ldaxr(v46);
    while (__stlxr(v45 - 1, v46));
    goto LABEL_68;
  }
  sub_1D54344F4(CFSTR("dng.adobe.generic"), __p);
  v33 = *(_OWORD *)__p;
  __p[0] = 0;
  __p[1] = 0;
  v34 = (std::__shared_weak_count *)*((_QWORD *)&v110 + 1);
  v110 = v33;
  if (v34)
  {
    v35 = (unint64_t *)&v34->__shared_owners_;
    do
      v36 = __ldaxr(v35);
    while (__stlxr(v36 - 1, v35));
    if (!v36)
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
    }
  }
  v37 = (std::__shared_weak_count *)__p[1];
  if (__p[1])
  {
    v38 = (unint64_t *)((char *)__p[1] + 8);
    do
      v39 = __ldaxr(v38);
    while (__stlxr(v39 - 1, v38));
    if (!v39)
    {
      ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
      std::__shared_weak_count::__release_weak(v37);
    }
  }
  if (!(_QWORD)v110)
  {
    v97 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](v97, "RawCameraException");
    goto LABEL_171;
  }
  sub_1D52908C8(a1 + 3, (uint64_t *)&v110);
  sub_1D5285A94(v105, a1 + 1);
  sub_1D5294404(v105, __p);
  sub_1D5292548((uint64_t)a3, (__int128 *)__p);
  v40 = (std::__shared_weak_count *)__p[1];
  if (__p[1])
  {
    v41 = (unint64_t *)((char *)__p[1] + 8);
    do
      v42 = __ldaxr(v41);
    while (__stlxr(v42 - 1, v41));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
  }
  v43 = (std::__shared_weak_count *)v105[1];
  if (v105[1])
  {
    v44 = (unint64_t *)((char *)v105[1] + 8);
    do
      v45 = __ldaxr(v44);
    while (__stlxr(v45 - 1, v44));
LABEL_68:
    if (!v45)
    {
      ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
      std::__shared_weak_count::__release_weak(v43);
    }
  }
LABEL_139:
  if (!*a3
    || ((*(void (**)(void **__return_ptr))(*(_QWORD *)*a3 + 144))(__p),
        v79 = __p[0],
        v78 = __p[1],
        v105[0] = __p,
        sub_1D5293CCC((void ***)v105),
        v78 == v79))
  {
    sub_1D54344F4(CFSTR("unsupported"), __p);
    v80 = *(_OWORD *)__p;
    __p[0] = 0;
    __p[1] = 0;
    v81 = (std::__shared_weak_count *)*((_QWORD *)&v110 + 1);
    v110 = v80;
    if (v81)
    {
      v82 = (unint64_t *)&v81->__shared_owners_;
      do
        v83 = __ldaxr(v82);
      while (__stlxr(v83 - 1, v82));
      if (!v83)
      {
        ((void (*)(std::__shared_weak_count *))v81->__on_zero_shared)(v81);
        std::__shared_weak_count::__release_weak(v81);
      }
    }
    v84 = (std::__shared_weak_count *)__p[1];
    if (__p[1])
    {
      v85 = (unint64_t *)((char *)__p[1] + 8);
      do
        v86 = __ldaxr(v85);
      while (__stlxr(v86 - 1, v85));
      if (!v86)
      {
        ((void (*)(std::__shared_weak_count *))v84->__on_zero_shared)(v84);
        std::__shared_weak_count::__release_weak(v84);
      }
    }
    if ((_QWORD)v110)
    {
      sub_1D52908C8(a1 + 3, (uint64_t *)&v110);
      sub_1D5285A94(v105, a1 + 1);
      sub_1D5294508(v105, __p);
      sub_1D5292548((uint64_t)a3, (__int128 *)__p);
      v87 = (std::__shared_weak_count *)__p[1];
      if (__p[1])
      {
        v88 = (unint64_t *)((char *)__p[1] + 8);
        do
          v89 = __ldaxr(v88);
        while (__stlxr(v89 - 1, v88));
        if (!v89)
        {
          ((void (*)(std::__shared_weak_count *))v87->__on_zero_shared)(v87);
          std::__shared_weak_count::__release_weak(v87);
        }
      }
      v90 = (std::__shared_weak_count *)v105[1];
      if (v105[1])
      {
        v91 = (unint64_t *)((char *)v105[1] + 8);
        do
          v92 = __ldaxr(v91);
        while (__stlxr(v92 - 1, v91));
        if (!v92)
        {
          ((void (*)(std::__shared_weak_count *))v90->__on_zero_shared)(v90);
          std::__shared_weak_count::__release_weak(v90);
        }
      }
      goto LABEL_162;
    }
    v97 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](v97, "RawCameraException");
LABEL_171:
    __cxa_throw(v97, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
LABEL_162:
  v93 = (std::__shared_weak_count *)*((_QWORD *)&v110 + 1);
  if (*((_QWORD *)&v110 + 1))
  {
    v94 = (unint64_t *)(*((_QWORD *)&v110 + 1) + 8);
    do
      v95 = __ldaxr(v94);
    while (__stlxr(v95 - 1, v94));
    if (!v95)
    {
      ((void (*)(std::__shared_weak_count *))v93->__on_zero_shared)(v93);
      std::__shared_weak_count::__release_weak(v93);
    }
  }

}

void sub_1D5293330(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, void **a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,char a26,uint64_t a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  void *v35;
  uint64_t v36;

  sub_1D5282EB4((uint64_t)&a20);
  sub_1D5282EB4((uint64_t)&a26);
  a20 = &a30;
  sub_1D5293CCC(&a20);
  sub_1D5282EB4(v36);
  sub_1D5282EB4((uint64_t)&a28);

  _Unwind_Resume(a1);
}

void sub_1D52934D0(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  unint64_t v5;
  __int128 v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  int v27;
  void *__p[2];
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t *v34;

  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  (*(void (**)(void **__return_ptr))(*(_QWORD *)a1 + 216))(__p);
  v4 = a2[2];
  v5 = a2[1];
  if (v5 >= v4)
  {
    v7 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *a2) >> 3);
    v8 = v7 + 1;
    if (v7 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v9 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v4 - *a2) >> 3);
    if (2 * v9 > v8)
      v8 = 2 * v9;
    if (v9 >= 0x555555555555555)
      v10 = 0xAAAAAAAAAAAAAAALL;
    else
      v10 = v8;
    v34 = a2 + 2;
    if (v10)
      v11 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v10);
    else
      v11 = 0;
    v12 = &v11[24 * v7];
    v30 = v11;
    v31 = v12;
    v33 = &v11[24 * v10];
    v13 = *(_OWORD *)__p;
    *((_QWORD *)v12 + 2) = v29;
    *(_OWORD *)v12 = v13;
    __p[1] = 0;
    v29 = 0;
    __p[0] = 0;
    v32 = v12 + 24;
    sub_1D5293D58(a2, &v30);
    v14 = a2[1];
    sub_1D5293F24((uint64_t)&v30);
    v15 = SHIBYTE(v29);
    a2[1] = v14;
    if (v15 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v6 = *(_OWORD *)__p;
    *(_QWORD *)(v5 + 16) = v29;
    *(_OWORD *)v5 = v6;
    a2[1] = v5 + 24;
  }
  (*(void (**)(void **__return_ptr, uint64_t))(*(_QWORD *)a1 + 224))(__p, a1);
  v17 = a2[1];
  v16 = a2[2];
  if (v17 >= v16)
  {
    v19 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v17 - *a2) >> 3);
    v20 = v19 + 1;
    if (v19 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v21 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v16 - *a2) >> 3);
    if (2 * v21 > v20)
      v20 = 2 * v21;
    if (v21 >= 0x555555555555555)
      v22 = 0xAAAAAAAAAAAAAAALL;
    else
      v22 = v20;
    v34 = a2 + 2;
    if (v22)
      v23 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v22);
    else
      v23 = 0;
    v24 = &v23[24 * v19];
    v30 = v23;
    v31 = v24;
    v33 = &v23[24 * v22];
    v25 = *(_OWORD *)__p;
    *((_QWORD *)v24 + 2) = v29;
    *(_OWORD *)v24 = v25;
    __p[1] = 0;
    v29 = 0;
    __p[0] = 0;
    v32 = v24 + 24;
    sub_1D5293D58(a2, &v30);
    v26 = a2[1];
    sub_1D5293F24((uint64_t)&v30);
    v27 = SHIBYTE(v29);
    a2[1] = v26;
    if (v27 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v18 = *(_OWORD *)__p;
    *(_QWORD *)(v17 + 16) = v29;
    *(_OWORD *)v17 = v18;
    a2[1] = v17 + 24;
  }
}

void sub_1D5293734(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  sub_1D5293F24((uint64_t)&a15);
  if (a14 < 0)
    operator delete(__p);
  sub_1D5293CCC((void ***)&__p);
  _Unwind_Resume(a1);
}

std::string *sub_1D5293780@<X0>(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string::size_type size;
  char *v4;
  char *v5;
  std::string::size_type v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v10;
  unsigned int v11;
  int v12;
  uint64_t v13;
  int v14;
  char *v15;
  std::string *v16;
  std::string *result;
  std::string::size_type v18;
  char v19;
  std::string *v20;
  std::string::size_type v21;
  std::string *v22;
  std::string::size_type v23;

  (*(void (**)(std::string *__return_ptr))(*(_QWORD *)a1 + 224))(a2);
  size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  if ((size & 0x80u) == 0)
    v4 = (char *)a2;
  else
    v4 = (char *)a2->__r_.__value_.__r.__words[0];
  if ((size & 0x80u) != 0)
    size = a2->__r_.__value_.__l.__size_;
  if (!size)
    goto LABEL_24;
  v5 = &v4[size];
  v6 = size - 1;
  v7 = MEMORY[0x1E0C80978];
  do
  {
    v8 = *v4;
    if ((v8 & 0x80000000) != 0 ? __maskrune(v8, 0x4000uLL) : *(_DWORD *)(v7 + 4 * v8 + 60) & 0x4000)
      break;
    ++v4;
    --v6;
  }
  while (v4 != v5);
  if (v4 == v5 || v4 + 1 == v5)
  {
LABEL_24:
    v5 = v4;
  }
  else
  {
    v10 = 1;
    v5 = v4;
    do
    {
      v11 = v4[v10];
      if ((v11 & 0x80000000) != 0)
        v12 = __maskrune(v11, 0x4000uLL);
      else
        v12 = *(_DWORD *)(v7 + 4 * v11 + 60) & 0x4000;
      if (!v12)
        *v5++ = v4[v10];
      ++v10;
      --v6;
    }
    while (v6);
  }
  v13 = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  v14 = (char)v13;
  v15 = (char *)a2 + v13;
  if (v14 >= 0)
  {
    v16 = a2;
  }
  else
  {
    v15 = (char *)(a2->__r_.__value_.__r.__words[0] + a2->__r_.__value_.__l.__size_);
    v16 = (std::string *)a2->__r_.__value_.__r.__words[0];
  }
  result = std::string::erase(a2, v5 - (char *)v16, v15 - v5);
  v18 = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  v19 = v18;
  v20 = (std::string *)a2->__r_.__value_.__r.__words[0];
  v21 = a2->__r_.__value_.__l.__size_;
  if ((v18 & 0x80u) == 0)
    v22 = a2;
  else
    v22 = (std::string *)a2->__r_.__value_.__r.__words[0];
  if ((v18 & 0x80u) == 0)
    v23 = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  else
    v23 = a2->__r_.__value_.__l.__size_;
  if (v23)
  {
    do
    {
      if (v22->__r_.__value_.__s.__data_[0] == 47)
        v22->__r_.__value_.__s.__data_[0] = 95;
      v22 = (std::string *)((char *)v22 + 1);
      --v23;
    }
    while (v23);
    v18 = HIBYTE(a2->__r_.__value_.__r.__words[2]);
    v20 = (std::string *)a2->__r_.__value_.__r.__words[0];
    v21 = a2->__r_.__value_.__l.__size_;
    v19 = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  }
  if (v19 < 0)
    v18 = v21;
  else
    v20 = a2;
  for (; v18; --v18)
  {
    if (v20->__r_.__value_.__s.__data_[0] == 58)
      v20->__r_.__value_.__s.__data_[0] = 95;
    v20 = (std::string *)((char *)v20 + 1);
  }
  return result;
}

void sub_1D5293928(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

std::string *sub_1D529394C@<X0>(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string::size_type size;
  char *v4;
  char *v5;
  std::string::size_type v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v10;
  unsigned int v11;
  int v12;
  uint64_t v13;
  int v14;
  char *v15;
  std::string *v16;
  std::string *result;
  std::string::size_type v18;
  char v19;
  std::string *v20;
  std::string::size_type v21;
  std::string *v22;
  std::string::size_type v23;

  (*(void (**)(std::string *__return_ptr))(*(_QWORD *)a1 + 232))(a2);
  size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  if ((size & 0x80u) == 0)
    v4 = (char *)a2;
  else
    v4 = (char *)a2->__r_.__value_.__r.__words[0];
  if ((size & 0x80u) != 0)
    size = a2->__r_.__value_.__l.__size_;
  if (!size)
    goto LABEL_24;
  v5 = &v4[size];
  v6 = size - 1;
  v7 = MEMORY[0x1E0C80978];
  do
  {
    v8 = *v4;
    if ((v8 & 0x80000000) != 0 ? __maskrune(v8, 0x4000uLL) : *(_DWORD *)(v7 + 4 * v8 + 60) & 0x4000)
      break;
    ++v4;
    --v6;
  }
  while (v4 != v5);
  if (v4 == v5 || v4 + 1 == v5)
  {
LABEL_24:
    v5 = v4;
  }
  else
  {
    v10 = 1;
    v5 = v4;
    do
    {
      v11 = v4[v10];
      if ((v11 & 0x80000000) != 0)
        v12 = __maskrune(v11, 0x4000uLL);
      else
        v12 = *(_DWORD *)(v7 + 4 * v11 + 60) & 0x4000;
      if (!v12)
        *v5++ = v4[v10];
      ++v10;
      --v6;
    }
    while (v6);
  }
  v13 = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  v14 = (char)v13;
  v15 = (char *)a2 + v13;
  if (v14 >= 0)
  {
    v16 = a2;
  }
  else
  {
    v15 = (char *)(a2->__r_.__value_.__r.__words[0] + a2->__r_.__value_.__l.__size_);
    v16 = (std::string *)a2->__r_.__value_.__r.__words[0];
  }
  result = std::string::erase(a2, v5 - (char *)v16, v15 - v5);
  v18 = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  v19 = v18;
  v20 = (std::string *)a2->__r_.__value_.__r.__words[0];
  v21 = a2->__r_.__value_.__l.__size_;
  if ((v18 & 0x80u) == 0)
    v22 = a2;
  else
    v22 = (std::string *)a2->__r_.__value_.__r.__words[0];
  if ((v18 & 0x80u) == 0)
    v23 = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  else
    v23 = a2->__r_.__value_.__l.__size_;
  if (v23)
  {
    do
    {
      if (v22->__r_.__value_.__s.__data_[0] == 47)
        v22->__r_.__value_.__s.__data_[0] = 95;
      v22 = (std::string *)((char *)v22 + 1);
      --v23;
    }
    while (v23);
    v18 = HIBYTE(a2->__r_.__value_.__r.__words[2]);
    v20 = (std::string *)a2->__r_.__value_.__r.__words[0];
    v21 = a2->__r_.__value_.__l.__size_;
    v19 = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  }
  if (v19 < 0)
    v18 = v21;
  else
    v20 = a2;
  for (; v18; --v18)
  {
    if (v20->__r_.__value_.__s.__data_[0] == 58)
      v20->__r_.__value_.__s.__data_[0] = 95;
    v20 = (std::string *)((char *)v20 + 1);
  }
  return result;
}

void sub_1D5293AF4(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void sub_1D5293B18(uint64_t a1@<X8>)
{
  void **v1[3];
  void **v2[3];
  _QWORD *v3[3];
  void ***v4;

  memset(v3, 0, sizeof(v3));
  memset(v2, 0, sizeof(v2));
  memset(v1, 0, sizeof(v1));
  sub_1D5293FAC(a1, v3, v2, v1);
  v4 = v1;
  sub_1D5282E44((void ***)&v4);
  v1[0] = (void **)v2;
  sub_1D5282E44(v1);
  v2[0] = (void **)v3;
  sub_1D5282E44(v2);
}

void sub_1D5293B9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void ***a9, uint64_t a10, uint64_t a11, void **a12, uint64_t a13, uint64_t a14, char a15)
{
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v16 - 40) = v15;
  sub_1D5282E44((void ***)(v16 - 40));
  a9 = &a12;
  sub_1D5282E44((void ***)&a9);
  a12 = (void **)&a15;
  sub_1D5282E44(&a12);
  _Unwind_Resume(a1);
}

uint64_t sub_1D5293BD4()
{
  return 0;
}

uint64_t sub_1D5293BDC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 96);
}

uint64_t sub_1D5293BE4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 97);
}

uint64_t sub_1D5293BEC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 97) = a2;
  return result;
}

uint64_t sub_1D5293BF4()
{
  return 538976288;
}

uint64_t sub_1D5293BFC(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 208))(a1);
}

_QWORD *sub_1D5293C08@<X0>(_QWORD *a1@<X8>)
{
  return sub_1D52850A0(a1, "");
}

float sub_1D5293C18()
{
  return 0.0;
}

uint64_t *sub_1D5293C20(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v5 = *a2;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
    v5 = *a1;
  }
  a1[2] = 0;
  if (v5)
  {
    a1[2] = sub_1D52845E4(v5);
    sub_1D52845EC(*a1, a3);
  }
  return a1;
}

void sub_1D5293C84(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1D5282EB4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D5293C98(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  if (v2)
    sub_1D52845EC(v2, a1[2]);
  return sub_1D5282EB4((uint64_t)a1);
}

void sub_1D5293CCC(void ***a1)
{
  void **v2;

  v2 = *a1;
  if (*v2)
  {
    sub_1D5293D0C((uint64_t *)v2);
    operator delete(**a1);
  }
}

void sub_1D5293D0C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t i;

  v2 = *a1;
  for (i = a1[1]; i != v2; i -= 24)
  {
    if (*(char *)(i - 1) < 0)
      operator delete(*(void **)(i - 24));
  }
  a1[1] = v2;
}

uint64_t sub_1D5293D58(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_1D5293E10((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *sub_1D5293DCC(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL)
    sub_1D5282C48();
  return operator new(24 * a2);
}

uint64_t sub_1D5293E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  __int128 v10;
  _QWORD v12[3];
  char v13;
  __int128 v14;
  __int128 v15;

  v7 = a7;
  *(_QWORD *)&v15 = a6;
  *((_QWORD *)&v15 + 1) = a7;
  v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 != a5)
  {
    v9 = a7;
    do
    {
      v10 = *(_OWORD *)(a3 - 24);
      *(_QWORD *)(v9 - 8) = *(_QWORD *)(a3 - 8);
      *(_OWORD *)(v9 - 24) = v10;
      v9 -= 24;
      *(_QWORD *)(a3 - 16) = 0;
      *(_QWORD *)(a3 - 8) = 0;
      *(_QWORD *)(a3 - 24) = 0;
      v7 -= 24;
      a3 -= 24;
    }
    while (a3 != a5);
    *((_QWORD *)&v15 + 1) = v9;
  }
  v13 = 1;
  sub_1D5293EAC((uint64_t)v12);
  return a6;
}

uint64_t sub_1D5293EAC(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_1D5293EE0(a1);
  return a1;
}

void sub_1D5293EE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8);
  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    v1 += 24;
  }
}

uint64_t sub_1D5293F24(uint64_t a1)
{
  sub_1D5293F58(a1, *(void ***)(a1 + 8));
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void sub_1D5293F58(uint64_t a1, void **a2)
{
  void **v2;
  void **v5;

  v2 = *(void ***)(a1 + 16);
  if (v2 != a2)
  {
    do
    {
      v5 = v2 - 3;
      *(_QWORD *)(a1 + 16) = v2 - 3;
      if (*((char *)v2 - 1) < 0)
      {
        operator delete(*v5);
        v5 = *(void ***)(a1 + 16);
      }
      v2 = v5;
    }
    while (v5 != a2);
  }
}

uint64_t sub_1D5293FAC(uint64_t a1, _QWORD **a2, _QWORD **a3, _QWORD **a4)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  sub_1D5284254((char *)a1, *a2, a2[1], ((char *)a2[1] - (char *)*a2) >> 4);
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  sub_1D5284254((char *)(a1 + 24), *a3, a3[1], ((char *)a3[1] - (char *)*a3) >> 4);
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  sub_1D5284254((char *)(a1 + 48), *a4, a4[1], ((char *)a4[1] - (char *)*a4) >> 4);
  return a1;
}

void sub_1D529403C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1D5282E44((void ***)va);
  sub_1D5282E44((void ***)va);
  _Unwind_Resume(a1);
}

void sub_1D5294068(uint64_t a1, _QWORD *a2)
{
  if (a2)
  {
    sub_1D5294068(a1, *a2);
    sub_1D5294068(a1, a2[1]);
    sub_1D52940B0((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void sub_1D52940B0(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(_QWORD *)(a1 + 32) = v2;
    operator delete(v2);
  }
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
}

void sub_1D52940F4(uint64_t a1, char *a2)
{
  if (a2)
  {
    sub_1D52940F4(a1, *(_QWORD *)a2);
    sub_1D52940F4(a1, *((_QWORD *)a2 + 1));
    if (a2[55] < 0)
      operator delete(*((void **)a2 + 4));
    operator delete(a2);
  }
}

void **sub_1D5294144(uint64_t a1, void **a2)
{
  void **v2;
  _QWORD *v3;
  void **v5;
  char v6;
  _QWORD *v7;

  v2 = (void **)(a1 + 8);
  v3 = *(_QWORD **)(a1 + 8);
  if (!v3)
    return v2;
  v5 = (void **)(a1 + 8);
  do
  {
    v6 = sub_1D52941C0(v3 + 4, a2);
    if (v6 >= 0)
      v7 = v3;
    else
      v7 = v3 + 1;
    if (v6 >= 0)
      v5 = (void **)v3;
    v3 = (_QWORD *)*v7;
  }
  while (*v7);
  if (v5 == v2 || (sub_1D52941C0(a2, v5 + 4) & 0x80) != 0)
    return v2;
  return v5;
}

uint64_t sub_1D52941C0(_QWORD *a1, void **a2)
{
  size_t v2;
  size_t v3;
  int v4;
  void *v5;
  size_t v6;

  v2 = *((unsigned __int8 *)a1 + 23);
  v3 = a1[1];
  if ((v2 & 0x80u) != 0)
  {
    a1 = (_QWORD *)*a1;
    v2 = v3;
  }
  v4 = *((char *)a2 + 23);
  if (v4 >= 0)
    v5 = a2;
  else
    v5 = *a2;
  if (v4 >= 0)
    v6 = *((unsigned __int8 *)a2 + 23);
  else
    v6 = (size_t)a2[1];
  return sub_1D52941F8(a1, v2, v5, v6);
}

uint64_t sub_1D52941F8(const void *a1, size_t a2, void *__s2, size_t a4)
{
  size_t v7;
  int v8;

  if (a4 >= a2)
    v7 = a2;
  else
    v7 = a4;
  v8 = memcmp(a1, __s2, v7);
  if (v8)
  {
    if ((v8 & 0x80000000) == 0)
      return 1;
  }
  else
  {
    if (a2 == a4)
      return 0;
    if (a2 >= a4)
      return 1;
  }
  return 255;
}

int *sub_1D5294254(int *result, unsigned int *a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  void *exception;

  v2 = *result + (unint64_t)*a2;
  *result = v2;
  v5 = v2 == (uint64_t)(v2 << 31) >> 31;
  v3 = (int)v2 & 0x1FFFFFFFFLL;
  v4 = v2 & 0x1FFFFFFFFLL;
  v5 = v5 && v4 == v3;
  if (!v5)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return result;
}

void sub_1D52942C8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52942DC@<X0>(_QWORD *a1@<X1>, int *a2@<X2>, int *a3@<X3>, unsigned int *a4@<X4>, _QWORD *a5@<X8>)
{
  _QWORD *v10;
  _QWORD *result;

  v10 = operator new(0x48uLL);
  result = sub_1D5294354(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;
  return result;
}

void sub_1D5294340(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D5294354(_QWORD *a1, _QWORD *a2, int *a3, int *a4, unsigned int *a5)
{
  a1[2] = 0;
  *a1 = &unk_1E9970698;
  a1[1] = 0;
  sub_1D5338038((uint64_t)(a1 + 3), a2, *a3, *a4, *a5);
  return a1;
}

void sub_1D5294398(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52943AC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9970698;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52943C0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9970698;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52943F4(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_1D5294404(_QWORD *a1@<X1>, _QWORD *a2@<X8>)
{
  _QWORD *v4;

  v4 = operator new(0x1C0uLL);
  sub_1D5294464(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  sub_1D5285658((uint64_t)a2, v4 + 4, (uint64_t)(v4 + 3));
}

void sub_1D5294450(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D5294464(_QWORD *a1, _QWORD *a2)
{
  a1[2] = 0;
  *a1 = &unk_1E99706E8;
  a1[1] = 0;
  sub_1D533C74C((uint64_t)(a1 + 3), a2);
  return a1;
}

void sub_1D529449C(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52944B0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E99706E8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52944C4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E99706E8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52944F8(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_1D5294508(_QWORD *a1@<X1>, _QWORD *a2@<X8>)
{
  _QWORD *v4;

  v4 = operator new(0x1A8uLL);
  sub_1D5294568(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  sub_1D5285658((uint64_t)a2, v4 + 4, (uint64_t)(v4 + 3));
}

void sub_1D5294554(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D5294568(_QWORD *a1, _QWORD *a2)
{
  a1[2] = 0;
  *a1 = &unk_1E9970738;
  a1[1] = 0;
  sub_1D5295668((uint64_t)(a1 + 3), a2);
  a1[41] = a1 + 42;
  a1[42] = 0;
  a1[45] = 0;
  a1[46] = 0;
  a1[43] = 0;
  a1[44] = a1 + 45;
  a1[47] = a1 + 48;
  a1[48] = 0;
  a1[51] = 0;
  a1[52] = 0;
  a1[49] = 0;
  a1[50] = a1 + 51;
  a1[3] = &unk_1E9970788;
  return a1;
}

void sub_1D52945D8(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52945EC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9970738;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D5294600(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9970738;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D5294634(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_1D5294648(uint64_t a1)
{
  sub_1D5294858(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D529466C@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  void *exception;

  v2 = *(_QWORD *)(result + 48);
  if (!v2)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v3 = *(_QWORD *)(result + 56);
  *a2 = v2;
  a2[1] = v3;
  if (v3)
  {
    v4 = (unint64_t *)(v3 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_1D52946DC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52946F0(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v6;
  std::__shared_weak_count *v7;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 112))(&v6);
  v1 = sub_1D52B4E44(v6);
  v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_1D5294768(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D529477C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v6;
  std::__shared_weak_count *v7;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 112))(&v6);
  v1 = sub_1D52B4ED0(v6);
  v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_1D52947F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1D5294808()
{
  void *exception;

  exception = __cxa_allocate_exception(0x10uLL);
  MEMORY[0x1D8271938](exception, "RawCameraException");
  __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
}

void sub_1D5294844(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D5294858(uint64_t a1)
{
  *(_QWORD *)a1 = &unk_1E99A4140;
  sub_1D529496C(a1 + 376, *(_QWORD **)(a1 + 384));
  sub_1D529496C(a1 + 352, *(_QWORD **)(a1 + 360));
  sub_1D529496C(a1 + 328, *(_QWORD **)(a1 + 336));
  sub_1D529496C(a1 + 304, *(_QWORD **)(a1 + 312));
  return sub_1D52948B8(a1);
}

uint64_t sub_1D52948B8(uint64_t a1)
{
  void *v2;
  void *v3;
  std::__shared_weak_count *v4;

  *(_QWORD *)a1 = off_1E9971358;

  sub_1D5282EB4(a1 + 264);
  sub_1D5282EB4(a1 + 248);
  sub_1D5282EB4(a1 + 216);
  sub_1D5282EB4(a1 + 184);
  sub_1D5282EB4(a1 + 168);
  v2 = *(void **)(a1 + 144);
  if (v2)
  {
    *(_QWORD *)(a1 + 152) = v2;
    operator delete(v2);
  }
  v3 = *(void **)(a1 + 120);
  if (v3)
  {
    *(_QWORD *)(a1 + 128) = v3;
    operator delete(v3);
  }
  sub_1D5282EB4(a1 + 96);
  sub_1D5282EB4(a1 + 80);
  sub_1D5282EB4(a1 + 48);
  sub_1D5282EB4(a1 + 24);
  v4 = *(std::__shared_weak_count **)(a1 + 16);
  if (v4)
    std::__shared_weak_count::__release_weak(v4);
  return a1;
}

void sub_1D529496C(uint64_t a1, _QWORD *a2)
{
  if (a2)
  {
    sub_1D529496C(a1, *a2);
    sub_1D529496C(a1, a2[1]);
    sub_1D5282EB4((uint64_t)(a2 + 5));
    operator delete(a2);
  }
}

void sub_1D5294D50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, void *a13)
{
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1D5294F38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_1D5295408(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_1D5295414(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_1D5281424(a1);
  _Unwind_Resume(a1);
}

void sub_1D5295430(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;

  objc_msgSend_kernelsWithString_messageLog_(MEMORY[0x1E0C9DDD0], a2, (uint64_t)CFSTR("kernel vec4 apply1DLumaLUT (sampler src, sampler lut, float lutSize) __attribute__ ((preserves_opacity)) { \n vec4 c = sample(src, samplerCoord(src)); float luma = 0.299*c.r + 0.587*c.g + 0.114*c.b; float u = (c.b - luma)*0.565; float v = (c.r - luma)*0.713; luma = clamp(luma, 0.0, 1.0); float f = sample(lut, vec2(luma*lutSize, 0.5)).r; luma = f*luma; c.r = luma + 1.403*v; c.g = luma - 0.344*u - 0.714*v; c.b = luma + 1.770*u; return c; } \n vec4 highlightAndShadowFunc (vec4 c, vec4 param1, vec4 param2) __attribute__ ((preserves_opacity)) { \n float luma = 0.299*c.r + 0.587*c.g + 0.114*c.b; float u = (c.b - luma)*0.565; float v = (c.r - luma)*0.713; luma = clamp(luma, 0.0, 1.0); float highlightAmount = param1.x; float highlightCutoff = param1.y; float shadowAmount = param1.z; float shadowCutoff = param1.w; float gain = param2.x; gain = gain * (luma < shadowCutoff ? shadowAmount : (luma > highlightCutoff ? highlightAmount : 1.0)); luma = luma * gain; c.rgb *= gain; return c; } \n kernel vec4 highlightAndShadow (sampler src, vec4 param1, vec4 param2) __attribute__ ((preserves_opacity)) { \n vec4 c = sample(src, samplerCoord(src)); return highlightAndShadowFunc(c, param1, param2); } \n kernel vec4 localHighlightAndShadow (sampler src, sampler control, vec4 param1, vec4 param2) __attribute__ ((preserves_opacity)) { \n vec4 c = sample(src, samplerCoord(src)); vec4 m = sample(control, samplerCoord(control)); float highlightMultiplier = m.r + 1.0; float shadowMultiplier = m.g + 1.0; param2.x /= highlightMultiplier; param2.x *= shadowMultiplier; return param2.y < 1.0 ? highlightAndShadowFunc(c, param1, param2) : m; } \n kernel vec4 processControl (sampler control, vec4 param1, vec4 param2) __attribute__ ((preserves_opacity)) { \n vec4 m = sample(control, samplerCoord(control)); float luma = 0.299*m.r + 0.587*m.g + 0.114*m.b; float highlightCutoff = param1.y; float shadowCutoff = param1.w; float highlightMultiplier = luma > highlightCutoff ? 1.0 + (luma-highlightCutoff)/(1.0-highlightCutoff) : 1.0; float shadowMultiplier = luma < shadowCutoff ? 1.0 + (shadowCutoff - luma)/(shadowCutoff) : 1.0; return vec4(highlightMultiplier - 1.0, shadowMultiplier - 1.0, 0.0, 1.0); } \n"),
    0,
    a5);
  v15 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectAtIndex_(v15, v5, 2, v6, v7);
  v8 = objc_claimAutoreleasedReturnValue();
  v9 = (void *)qword_1EFF32608;
  qword_1EFF32608 = v8;

  objc_msgSend_objectAtIndex_(v15, v10, 3, v11, v12);
  v13 = objc_claimAutoreleasedReturnValue();
  v14 = (void *)qword_1EFF32610;
  qword_1EFF32610 = v13;

}

void sub_1D52954B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1D52954C4(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  os_signpost_id_t v4;
  uint8_t v5[16];

  sub_1D52EB19C();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = v2;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v3, OS_SIGNPOST_INTERVAL_END, v4, "RAWLocalToneMap", (const char *)&unk_1D548AF1A, v5, 2u);
  }

}

void sub_1D5295614(_QWORD *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  sub_1D533ECFC();
  (*(void (**)(_QWORD))(*(_QWORD *)*a1 + 168))(*a1);
  sub_1D52927B8((_QWORD *)*a1, a2, a3);
}

void sub_1D5295660(_QWORD **a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  sub_1D52927B8(*a1, a2, a3);
}

uint64_t sub_1D5295668(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  void *exception;
  _QWORD v16[5];
  uint64_t v17;
  std::__shared_weak_count *v18;

  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = off_1E9971358;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  v4 = *(_QWORD *)(*a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(*a2 + 24);
  *(_QWORD *)(a1 + 56) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_OWORD *)(a1 + 80) = 0u;
  *(_BYTE *)(a1 + 64) = 0;
  *(_BYTE *)(a1 + 72) = 0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_BYTE *)(a1 + 112) = 0;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  v17 = 0;
  v18 = 0;
  sub_1D52B471C(&v17, (_QWORD *)(a1 + 184));
  v7 = v18;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  *(_QWORD *)(a1 + 207) = 0;
  *(_QWORD *)(a1 + 200) = 0;
  v10 = a2[1];
  *(_QWORD *)(a1 + 216) = *a2;
  *(_QWORD *)(a1 + 224) = v10;
  if (v10)
  {
    v11 = (unint64_t *)(v10 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  *(_OWORD *)(a1 + 248) = 0u;
  *(_QWORD *)(a1 + 232) = 0;
  *(_DWORD *)(a1 + 240) = 0;
  *(_QWORD *)(a1 + 288) = 0;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_DWORD *)(a1 + 280) = 0;
  *(_QWORD *)(a1 + 296) = dispatch_queue_create("RawCamera-Provider-Render-Queue", 0);
  v13 = *(_QWORD *)(a1 + 48);
  if (!v13)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 3221225472;
  v16[2] = sub_1D529590C;
  v16[3] = &unk_1E9971ED8;
  v16[4] = a1;
  sub_1D5288938(v13, (uint64_t)v16);
  return a1;
}

void sub_1D529585C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void **v23;
  void *v24;
  void *v25;
  std::__shared_weak_count *v26;

  sub_1D5282EB4((uint64_t)&a17);
  sub_1D5282EB4(v22);
  v24 = (void *)v17[18];
  if (v24)
  {
    v17[19] = v24;
    operator delete(v24);
  }
  v25 = *v23;
  if (*v23)
  {
    v17[16] = v25;
    operator delete(v25);
  }
  sub_1D5282EB4(v21);
  sub_1D5282EB4(v20);
  sub_1D5282EB4(v19);
  sub_1D5282EB4(v18);
  v26 = (std::__shared_weak_count *)v17[2];
  if (v26)
    std::__shared_weak_count::__release_weak(v26);
  _Unwind_Resume(a1);
}

id sub_1D529590C(uint64_t a1)
{
  (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 88))(*(_QWORD *)(a1 + 32));
  return (id)objc_claimAutoreleasedReturnValue();
}

id sub_1D5295930(uint64_t a1, void *a2)
{
  __CFString *v3;
  uint64_t v4;
  void *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count_vtbl *v11;
  std::__shared_weak_count *shared_owners;
  unint64_t *v13;
  unint64_t v14;
  void *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  CGImageSource *v40;
  CGImageSource *v41;
  CFDictionaryRef v42;
  char v43;
  int v44;
  std::__shared_weak_count *v45;
  unint64_t *v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  uint64_t v55;
  int v56;
  std::__shared_weak_count **v57;
  std::__shared_weak_count *v58;
  uint64_t v59;
  std::__shared_weak_count *v60;
  void *v61;
  std::__shared_weak_count *v62;
  std::__shared_weak_count_vtbl *v63;
  std::__shared_weak_count *v64;
  std::__shared_weak_count *v65;
  std::__shared_weak_count *v66;

  v3 = a2;
  (*(void (**)(std::__shared_weak_count **__return_ptr, uint64_t))(*(_QWORD *)a1 + 160))(&v65, a1);
  ((void (*)(std::__shared_weak_count *, __CFString *))v65->__vftable[1].~__shared_weak_count)(v65, v3);
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = (void *)v4;
  v6 = v66;
  if (!v66)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v66->__shared_owners_;
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (v5)
      goto LABEL_51;
  }
  else
  {
LABEL_5:
    if (v4)
      goto LABEL_51;
  }
  (*(void (**)(std::__shared_weak_count **__return_ptr, uint64_t))(*(_QWORD *)a1 + 288))(&v65, a1);
  v9 = v65;
  v10 = v66;
  if (v65 != v66)
  {
    v5 = 0;
    while (1)
    {
      v11 = v9->__vftable;
      shared_owners = (std::__shared_weak_count *)v9->__shared_owners_;
      v63 = v9->__vftable;
      v64 = shared_owners;
      if (shared_owners)
      {
        v13 = (unint64_t *)&shared_owners->__shared_owners_;
        do
          v14 = __ldxr(v13);
        while (__stxr(v14 + 1, v13));
      }
      if (v11)
      {
        v15 = __dynamic_cast(v11, (const struct __class_type_info *)&unk_1E997EBF0, (const struct __class_type_info *)&unk_1E997EC58, 0);
        if (v15)
          break;
      }
      v61 = 0;
      v62 = 0;
LABEL_33:
      v44 = 0;
LABEL_34:
      v48 = v62;
      if (v62)
      {
        v49 = (unint64_t *)&v62->__shared_owners_;
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (!v50)
        {
          ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
          std::__shared_weak_count::__release_weak(v48);
        }
      }
      v51 = v64;
      if (v64)
      {
        v52 = (unint64_t *)&v64->__shared_owners_;
        do
          v53 = __ldaxr(v52);
        while (__stlxr(v53 - 1, v52));
        if (!v53)
        {
          ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
          std::__shared_weak_count::__release_weak(v51);
        }
      }
      if (!v44)
      {
        v9 = (std::__shared_weak_count *)((char *)v9 + 16);
        if (v9 != v10)
          continue;
      }
      goto LABEL_50;
    }
    v61 = v15;
    v62 = shared_owners;
    if (shared_owners)
    {
      v16 = (unint64_t *)&shared_owners->__shared_owners_;
      do
        v17 = __ldxr(v16);
      while (__stxr(v17 + 1, v16));
    }
    (*(void (**)(std::__shared_weak_count ***__return_ptr, uint64_t))(*(_QWORD *)a1 + 160))(&v57, a1);
    sub_1D52917E4((uint64_t)v57, &v59);
    v18 = v58;
    if (v58)
    {
      v19 = (unint64_t *)&v58->__shared_owners_;
      do
        v20 = __ldaxr(v19);
      while (__stlxr(v20 - 1, v19));
      if (!v20)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
    v21 = v61;
    v55 = (*(uint64_t (**)(void *))(*(_QWORD *)v61 + 16))(v61);
    sub_1D528594C(&v56, &v55);
    sub_1D5285164((uint64_t *)&v57, &v59, (uint64_t)&v56, 0);
    v22 = (void *)MEMORY[0x1E0C99DF0];
    v23 = (*(uint64_t (**)(void *))(*(_QWORD *)v21 + 24))(v21);
    objc_msgSend_dataWithLength_(v22, v24, v23, v25, v26);
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    v28 = v59;
    v29 = objc_retainAutorelease(v27);
    v34 = objc_msgSend_mutableBytes(v29, v30, v31, v32, v33);
    v39 = objc_msgSend_length(v29, v35, v36, v37, v38);
    sub_1D5284728(v28, v34, v39);
    v40 = CGImageSourceCreateWithData((CFDataRef)v29, 0);
    v41 = v40;
    if (v40)
    {
      v42 = CGImageSourceCopyAuxiliaryDataInfoAtIndex(v40, 0, v3);

      CFRelease(v41);
      if (v42)
      {
        v43 = 0;
        v44 = 2;
        v5 = v42;
LABEL_27:

        sub_1D5285200((uint64_t *)&v57);
        v45 = v60;
        if (v60)
        {
          v46 = (unint64_t *)&v60->__shared_owners_;
          do
            v47 = __ldaxr(v46);
          while (__stlxr(v47 - 1, v46));
          if (!v47)
          {
            ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
            std::__shared_weak_count::__release_weak(v45);
          }
        }
        if ((v43 & 1) == 0)
          goto LABEL_34;
        goto LABEL_33;
      }
      v5 = 0;
    }
    v44 = 0;
    v43 = 1;
    goto LABEL_27;
  }
  v5 = 0;
LABEL_50:
  v57 = &v65;
  sub_1D5282E44((void ***)&v57);
LABEL_51:

  return v5;
}

void sub_1D5295CA4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_1D5295D3C(uint64_t a1)
{
  void *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v6;
  std::__shared_weak_count *v7;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 160))(&v6);
  (*(void (**)(uint64_t))(*(_QWORD *)v6 + 48))(v6);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_1D5295DC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D5295DD4(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v6;
  std::__shared_weak_count *v7;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 160))(&v6);
  v1 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 176))(v6);
  v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_1D5295E54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1D5295E68(uint64_t *a1@<X0>, _QWORD *a2@<X8>, double a3@<D0>)
{
  __n128 v5;
  uint64_t *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  __int128 *v13;
  __int128 *v14;
  uint64_t *v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  __int128 *v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  int v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  BOOL v36;
  void *v37;
  void *exception;
  uint64_t v39;
  std::__shared_weak_count *v40;
  uint64_t v41;
  std::__shared_weak_count *v42;
  __int128 v43;
  __int128 *v44;
  __int128 *v45;
  uint64_t v46;
  std::__shared_weak_count *v47;

  v5.n128_f64[0] = sub_1D52B58AC(a3);
  v7 = *v6;
  v8 = (std::__shared_weak_count *)v6[1];
  v46 = *v6;
  v47 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
  }
  if (v7)
  {
    *a2 = v7;
    a2[1] = v8;
    v46 = 0;
    v47 = 0;
    goto LABEL_27;
  }
  v12 = a1 + 10;
  v11 = a1[10];
  if (!v11)
  {
    (*(void (**)(__int128 **__return_ptr, uint64_t *, __n128))(*a1 + 144))(&v44, a1, v5);
    v13 = v44;
    v14 = v45;
    if (v45 == v44)
    {
      exception = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1D8271938](exception, "RawCameraException");
      __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
    }
    v15 = a1 + 23;
    if (a1[23])
    {
      if (!sub_1D52B4F90(a1[23]))
      {
LABEL_22:
        if (!*v12)
        {
          if (*v15)
          {
            v28 = v44;
            if (v44 != v45)
            {
              do
              {
                v39 = 0;
                v40 = 0;
                sub_1D52B4778(v28, &v39, &v43);
                v29 = v40;
                if (v40)
                {
                  v30 = (unint64_t *)&v40->__shared_owners_;
                  do
                    v31 = __ldaxr(v30);
                  while (__stlxr(v31 - 1, v30));
                  if (!v31)
                  {
                    ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
                    std::__shared_weak_count::__release_weak(v29);
                  }
                }
                v32 = sub_1D52B4E44(v43);
                if (v32 == sub_1D52B4E44(*v15))
                  sub_1D52908C8(a1 + 10, a1 + 23);
                v33 = (std::__shared_weak_count *)*((_QWORD *)&v43 + 1);
                if (*((_QWORD *)&v43 + 1))
                {
                  v34 = (unint64_t *)(*((_QWORD *)&v43 + 1) + 8);
                  do
                    v35 = __ldaxr(v34);
                  while (__stlxr(v35 - 1, v34));
                  if (!v35)
                  {
                    ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
                    std::__shared_weak_count::__release_weak(v33);
                  }
                }
                v28 = (__int128 *)((char *)v28 + 24);
                if (*v12)
                  v36 = 1;
                else
                  v36 = v28 == v45;
              }
              while (!v36);
            }
          }
        }
        *(_QWORD *)&v43 = &v44;
        sub_1D5293CCC((void ***)&v43);
        v11 = *v12;
        if (!*v12)
        {
          v37 = __cxa_allocate_exception(0x10uLL);
          MEMORY[0x1D8271938](v37, "RawCameraException");
          __cxa_throw(v37, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
        }
        goto LABEL_24;
      }
      v13 = v44;
      v14 = v45;
    }
    if (v14 != v13)
    {
      v41 = 0;
      v42 = 0;
      sub_1D52B4778(v13, &v41, &v43);
      sub_1D5292548((uint64_t)(a1 + 10), &v43);
      v16 = (std::__shared_weak_count *)*((_QWORD *)&v43 + 1);
      if (*((_QWORD *)&v43 + 1))
      {
        v17 = (unint64_t *)(*((_QWORD *)&v43 + 1) + 8);
        do
          v18 = __ldaxr(v17);
        while (__stlxr(v18 - 1, v17));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      v19 = v42;
      if (v42)
      {
        v20 = (unint64_t *)&v42->__shared_owners_;
        do
          v21 = __ldaxr(v20);
        while (__stlxr(v21 - 1, v20));
        if (!v21)
        {
          ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
          std::__shared_weak_count::__release_weak(v19);
        }
      }
    }
    goto LABEL_22;
  }
LABEL_24:
  v22 = a1[11];
  *a2 = v11;
  a2[1] = v22;
  if (v22)
  {
    v23 = (unint64_t *)(v22 + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
LABEL_27:
  v25 = v47;
  if (v47)
  {
    v26 = (unint64_t *)&v47->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v25->__on_zero_shared)(v25, v5);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
}

void sub_1D529616C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, void **a14, uint64_t a15, char a16)
{
  uint64_t v16;

  sub_1D5282EB4((uint64_t)&a12);
  a14 = (void **)&a16;
  sub_1D5293CCC(&a14);
  sub_1D5282EB4(v16 - 64);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52961E4(uint64_t a1, uint64_t *a2)
{
  return sub_1D52908C8((_QWORD *)(a1 + 184), a2);
}

void sub_1D52961EC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  uint64_t v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  __int128 v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  char *v27;
  __int128 v28;
  uint64_t v29;
  int v30;
  unint64_t v31;
  unint64_t v32;
  __int128 v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char *v38;
  char *v39;
  __int128 v40;
  uint64_t v41;
  int v42;
  __n128 *v43;
  __n128 *v44;
  uint64_t v45;
  unint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  int v53;
  void *v54;
  void **v55;
  char *v56;
  void **v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t i;
  void *__p[2];
  uint64_t v63;
  void *__dst[2];
  _QWORD *v65;
  char *v66;
  uint64_t v67;
  char v68;

  (*(void (**)(void **__return_ptr))(*(_QWORD *)a1 + 72))(__dst);
  sub_1D53BC57C((uint64_t)__dst[0], (uint64_t *)a2);
  v4 = (std::__shared_weak_count *)__dst[1];
  if (__dst[1])
  {
    v5 = (unint64_t *)((char *)__dst[1] + 8);
    do
      v6 = __ldaxr(v5);
    while (__stlxr(v6 - 1, v5));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 176))(a1))
  {
    if ((*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 200))(a1, 9))
    {
      sub_1D52850A0(__p, "8.dng");
      v7 = *(_QWORD *)(a2 + 16);
      v8 = *(_QWORD *)(a2 + 8);
      if (v8 >= v7)
      {
        v10 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v8 - *(_QWORD *)a2) >> 3);
        v11 = v10 + 1;
        if (v10 + 1 > 0xAAAAAAAAAAAAAAALL)
          sub_1D5282B8C();
        v12 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v7 - *(_QWORD *)a2) >> 3);
        if (2 * v12 > v11)
          v11 = 2 * v12;
        if (v12 >= 0x555555555555555)
          v13 = 0xAAAAAAAAAAAAAAALL;
        else
          v13 = v11;
        v67 = a2 + 16;
        if (v13)
          v14 = (char *)sub_1D5293DCC(a2 + 16, v13);
        else
          v14 = 0;
        v15 = &v14[24 * v10];
        __dst[0] = v14;
        __dst[1] = v15;
        v66 = &v14[24 * v13];
        v16 = *(_OWORD *)__p;
        *((_QWORD *)v15 + 2) = v63;
        *(_OWORD *)v15 = v16;
        __p[1] = 0;
        v63 = 0;
        __p[0] = 0;
        v65 = v15 + 24;
        sub_1D5293D58((uint64_t *)a2, __dst);
        v17 = *(_QWORD *)(a2 + 8);
        sub_1D5293F24((uint64_t)__dst);
        v18 = SHIBYTE(v63);
        *(_QWORD *)(a2 + 8) = v17;
        if (v18 < 0)
          operator delete(__p[0]);
      }
      else
      {
        v9 = *(_OWORD *)__p;
        *(_QWORD *)(v8 + 16) = v63;
        *(_OWORD *)v8 = v9;
        *(_QWORD *)(a2 + 8) = v8 + 24;
      }
    }
    if ((*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 200))(a1, 8))
    {
      sub_1D52850A0(__p, "7.dng");
      v19 = *(_QWORD *)(a2 + 16);
      v20 = *(_QWORD *)(a2 + 8);
      if (v20 >= v19)
      {
        v22 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v20 - *(_QWORD *)a2) >> 3);
        v23 = v22 + 1;
        if (v22 + 1 > 0xAAAAAAAAAAAAAAALL)
          sub_1D5282B8C();
        v24 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v19 - *(_QWORD *)a2) >> 3);
        if (2 * v24 > v23)
          v23 = 2 * v24;
        if (v24 >= 0x555555555555555)
          v25 = 0xAAAAAAAAAAAAAAALL;
        else
          v25 = v23;
        v67 = a2 + 16;
        if (v25)
          v26 = (char *)sub_1D5293DCC(a2 + 16, v25);
        else
          v26 = 0;
        v27 = &v26[24 * v22];
        __dst[0] = v26;
        __dst[1] = v27;
        v66 = &v26[24 * v25];
        v28 = *(_OWORD *)__p;
        *((_QWORD *)v27 + 2) = v63;
        *(_OWORD *)v27 = v28;
        __p[1] = 0;
        v63 = 0;
        __p[0] = 0;
        v65 = v27 + 24;
        sub_1D5293D58((uint64_t *)a2, __dst);
        v29 = *(_QWORD *)(a2 + 8);
        sub_1D5293F24((uint64_t)__dst);
        v30 = SHIBYTE(v63);
        *(_QWORD *)(a2 + 8) = v29;
        if (v30 < 0)
          operator delete(__p[0]);
      }
      else
      {
        v21 = *(_OWORD *)__p;
        *(_QWORD *)(v20 + 16) = v63;
        *(_OWORD *)v20 = v21;
        *(_QWORD *)(a2 + 8) = v20 + 24;
      }
    }
    if ((*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 200))(a1, 7))
    {
      sub_1D52850A0(__p, "6.dng");
      v31 = *(_QWORD *)(a2 + 16);
      v32 = *(_QWORD *)(a2 + 8);
      if (v32 >= v31)
      {
        v34 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v32 - *(_QWORD *)a2) >> 3);
        v35 = v34 + 1;
        if (v34 + 1 > 0xAAAAAAAAAAAAAAALL)
          sub_1D5282B8C();
        v36 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v31 - *(_QWORD *)a2) >> 3);
        if (2 * v36 > v35)
          v35 = 2 * v36;
        if (v36 >= 0x555555555555555)
          v37 = 0xAAAAAAAAAAAAAAALL;
        else
          v37 = v35;
        v67 = a2 + 16;
        if (v37)
          v38 = (char *)sub_1D5293DCC(a2 + 16, v37);
        else
          v38 = 0;
        v39 = &v38[24 * v34];
        __dst[0] = v38;
        __dst[1] = v39;
        v66 = &v38[24 * v37];
        v40 = *(_OWORD *)__p;
        *((_QWORD *)v39 + 2) = v63;
        *(_OWORD *)v39 = v40;
        __p[1] = 0;
        v63 = 0;
        __p[0] = 0;
        v65 = v39 + 24;
        sub_1D5293D58((uint64_t *)a2, __dst);
        v41 = *(_QWORD *)(a2 + 8);
        sub_1D5293F24((uint64_t)__dst);
        v42 = SHIBYTE(v63);
        *(_QWORD *)(a2 + 8) = v41;
        if (v42 < 0)
          operator delete(__p[0]);
      }
      else
      {
        v33 = *(_OWORD *)__p;
        *(_QWORD *)(v32 + 16) = v63;
        *(_OWORD *)v32 = v33;
        *(_QWORD *)(a2 + 8) = v32 + 24;
      }
    }
    v43 = *(__n128 **)a2;
    v44 = *(__n128 **)(a2 + 8);
    v45 = (uint64_t)v44 - *(_QWORD *)a2;
    v46 = 0xAAAAAAAAAAAAAAABLL * (v45 >> 3);
    if (v45 < 1)
    {
      v47 = 0;
      v49 = 0;
    }
    else
    {
      v47 = sub_1D529EB58(0xAAAAAAAAAAAAAAABLL * (v45 >> 3));
      v49 = v48;
    }
    sub_1D529EBC0(v43, v44, v46, (uint64_t)v47, v49);
    if (v47)
      operator delete(v47);
    v50 = *(_QWORD *)a2;
    if (*(_QWORD *)a2 != *(_QWORD *)(a2 + 8))
    {
LABEL_55:
      if (*(char *)(v50 + 23) < 0)
      {
        sub_1D5290130(__dst, *(void **)v50, *(_QWORD *)(v50 + 8));
      }
      else
      {
        v51 = *(_OWORD *)v50;
        v65 = *(_QWORD **)(v50 + 16);
        *(_OWORD *)__dst = v51;
      }
      v52 = HIBYTE(v65);
      v53 = SHIBYTE(v65);
      v54 = __dst[0];
      if (SHIBYTE(v65) >= 0)
      {
        v55 = __dst;
      }
      else
      {
        v52 = (uint64_t)__dst[1];
        v55 = (void **)__dst[0];
      }
      if (v52 >= 4)
      {
        v56 = (char *)v55 + v52;
        v57 = v55;
        do
        {
          v58 = (char *)memchr(v57, 46, v52 - 3);
          if (!v58)
            break;
          if (*(_DWORD *)v58 == 1735287854)
          {
            if (v58 == v56 || v58 - (char *)v55 == -1)
              break;
            if (v53 < 0)
              operator delete(v54);
            v50 += 24;
            if (v50 != *(_QWORD *)(a2 + 8))
              goto LABEL_55;
            return;
          }
          v57 = (void **)(v58 + 1);
          v52 = v56 - (char *)v57;
        }
        while (v56 - (char *)v57 >= 4);
      }
      if (v50 != *(_QWORD *)a2)
      {
        sub_1D529E59C((uint64_t)&v68, (__int128 *)(v50 + 24), *(__int128 **)(a2 + 8), v50);
        v60 = v59;
        for (i = *(_QWORD *)(a2 + 8); i != v60; i -= 24)
        {
          if (*(char *)(i - 1) < 0)
            operator delete(*(void **)(i - 24));
        }
        *(_QWORD *)(a2 + 8) = v60;
        sub_1D5296844((uint64_t *)a2, *(_QWORD *)a2, (__int128 *)__dst);
        LOBYTE(v53) = HIBYTE(v65);
      }
      if ((v53 & 0x80) != 0)
        operator delete(__dst[0]);
    }
  }
}

void sub_1D52967AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  sub_1D5293F24((uint64_t)&a16);
  if (a15 < 0)
    operator delete(__p);
  sub_1D5293CCC((void ***)&__p);
  _Unwind_Resume(a1);
}

__int128 *sub_1D5296844(uint64_t *a1, uint64_t a2, __int128 *a3)
{
  __int128 *v4;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char *v16;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v4 = (__int128 *)a2;
  v6 = a1[1];
  v9 = a1[2];
  v7 = (uint64_t)(a1 + 2);
  v8 = v9;
  if (v6 >= v9)
  {
    v10 = *a1;
    v11 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v6 - *a1) >> 3) + 1;
    if (v11 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v12 = 0xAAAAAAAAAAAAAAABLL * ((a2 - v10) >> 3);
    v13 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v8 - v10) >> 3);
    v14 = 2 * v13;
    if (2 * v13 <= v11)
      v14 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v6 - *a1) >> 3) + 1;
    if (v13 >= 0x555555555555555)
      v15 = 0xAAAAAAAAAAAAAAALL;
    else
      v15 = v14;
    v22 = v7;
    if (v15)
      v16 = (char *)sub_1D5293DCC(v7, v15);
    else
      v16 = 0;
    v18 = v16;
    v19 = &v16[24 * v12];
    v20 = v19;
    v21 = &v16[24 * v15];
    sub_1D529E6D4(&v18, a3);
    v4 = (__int128 *)sub_1D529E85C((uint64_t)a1, &v18, v4);
    sub_1D5293F24((uint64_t)&v18);
  }
  else if (a2 == v6)
  {
    sub_1D529E60C(a1, a3);
  }
  else
  {
    sub_1D529E668((uint64_t)a1, a2, v6, a2 + 24);
    if (v4 <= a3)
      a3 = (__int128 *)((char *)a3 + 24 * (a1[1] > (unint64_t)a3));
    std::string::operator=((std::string *)v4, (const std::string *)a3);
  }
  return v4;
}

void sub_1D52969A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1D5293F24((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52969B4(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v6;
  std::__shared_weak_count *v7;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 160))(&v6);
  v1 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 88))(v6);
  v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_1D5296A34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D5296A48(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v6;
  std::__shared_weak_count *v7;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 160))(&v6);
  v1 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 104))(v6);
  v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_1D5296AC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D5296ADC(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v6;
  std::__shared_weak_count *v7;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 160))(&v6);
  v1 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 120))(v6);
  v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_1D5296B5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D5296B70@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;

  v4 = a1[23];
  if (v4 && (sub_1D52B4ED0(v4) & 1) == 0)
    return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*a1 + 104))(a1);
  else
    return sub_1D52850A0(a2, "");
}

uint64_t sub_1D5296BC8(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 80))(a1);
}

void sub_1D5296BD4(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  __int128 v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  __int128 v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  void *exception;
  _QWORD v32[5];
  __int128 v33;
  __int128 v34;
  __int128 v35;

  v5 = a1 + 12;
  v4 = a1[12];
  if (v4)
    goto LABEL_41;
  v35 = 0uLL;
  v6 = a1[23];
  if (v6 && (sub_1D52B4ED0(v6) & 1) == 0)
  {
    (*(void (**)(__int128 *__return_ptr, uint64_t *))(*a1 + 72))(&v33, a1);
    sub_1D53BC064(v33, &v34);
    v17 = v34;
    v34 = 0uLL;
    v18 = (std::__shared_weak_count *)*((_QWORD *)&v35 + 1);
    v35 = v17;
    if (v18)
    {
      p_shared_owners = (unint64_t *)&v18->__shared_owners_;
      do
        v20 = __ldaxr(p_shared_owners);
      while (__stlxr(v20 - 1, p_shared_owners));
      if (!v20)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
    v21 = (std::__shared_weak_count *)*((_QWORD *)&v34 + 1);
    if (*((_QWORD *)&v34 + 1))
    {
      v22 = (unint64_t *)(*((_QWORD *)&v34 + 1) + 8);
      do
        v23 = __ldaxr(v22);
      while (__stlxr(v23 - 1, v22));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
        std::__shared_weak_count::__release_weak(v21);
      }
    }
    v14 = (std::__shared_weak_count *)*((_QWORD *)&v33 + 1);
    if (!*((_QWORD *)&v33 + 1))
      goto LABEL_33;
    v24 = (unint64_t *)(*((_QWORD *)&v33 + 1) + 8);
    do
      v16 = __ldaxr(v24);
    while (__stlxr(v16 - 1, v24));
  }
  else
  {
    sub_1D54344F4(CFSTR("dng.adobe.generic"), &v34);
    sub_1D53BC064(v34, &v33);
    v7 = v33;
    v33 = 0uLL;
    v8 = (std::__shared_weak_count *)*((_QWORD *)&v35 + 1);
    v35 = v7;
    if (v8)
    {
      v9 = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
    v11 = (std::__shared_weak_count *)*((_QWORD *)&v33 + 1);
    if (*((_QWORD *)&v33 + 1))
    {
      v12 = (unint64_t *)(*((_QWORD *)&v33 + 1) + 8);
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    v14 = (std::__shared_weak_count *)*((_QWORD *)&v34 + 1);
    if (!*((_QWORD *)&v34 + 1))
      goto LABEL_33;
    v15 = (unint64_t *)(*((_QWORD *)&v34 + 1) + 8);
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
  }
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
LABEL_33:
  v32[0] = MEMORY[0x1E0C809B0];
  v32[1] = 3221225472;
  v32[2] = sub_1D5296ED8;
  v32[3] = &unk_1E9971ED8;
  v32[4] = a1;
  sub_1D5288938(v35, (uint64_t)v32);
  if ((_QWORD)v35)
    sub_1D52908C8(v5, (uint64_t *)&v35);
  v25 = (std::__shared_weak_count *)*((_QWORD *)&v35 + 1);
  if (*((_QWORD *)&v35 + 1))
  {
    v26 = (unint64_t *)(*((_QWORD *)&v35 + 1) + 8);
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  v4 = *v5;
  if (!*v5)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
LABEL_41:
  v28 = a1[13];
  *a2 = v4;
  a2[1] = v28;
  if (v28)
  {
    v29 = (unint64_t *)(v28 + 8);
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
  }
}

void sub_1D5296E90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  va_list va;

  va_start(va, a7);
  sub_1D5282EB4((uint64_t)va);
  sub_1D5282EB4(v7 - 48);
  _Unwind_Resume(a1);
}

id sub_1D5296ED8(uint64_t a1)
{
  (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 88))(*(_QWORD *)(a1 + 32));
  return (id)objc_claimAutoreleasedReturnValue();
}

uint64_t sub_1D5296EFC@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  void *exception;

  v2 = *(_QWORD *)(result + 216);
  if (!v2)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v3 = *(_QWORD *)(result + 224);
  *a2 = v2;
  a2[1] = v3;
  if (v3)
  {
    v4 = (unint64_t *)(v3 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_1D5296F6C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

double sub_1D5296F80()
{
  return 1.0;
}

uint64_t sub_1D5296F88(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v6;
  std::__shared_weak_count *v7;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 160))(&v6);
  v1 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 408))(v6);
  v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_1D5297008(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D529701C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v6;
  std::__shared_weak_count *v7;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 160))(&v6);
  v1 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 416))(v6);
  v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_1D529709C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52970B0()
{
  return 0;
}

uint64_t sub_1D52970B8()
{
  return 1;
}

uint64_t sub_1D52970C0()
{
  return 0;
}

uint64_t sub_1D52970C8()
{
  return 0;
}

void sub_1D52970D0(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 160))(&v4);
  (*(void (**)(uint64_t))(*(_QWORD *)v4 + 216))(v4);
  v1 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_1D5297150(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1D5297164(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 160))(&v4);
  (*(void (**)(uint64_t))(*(_QWORD *)v4 + 224))(v4);
  v1 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_1D52971E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1D52971F8(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 160))(&v4);
  (*(void (**)(uint64_t))(*(_QWORD *)v4 + 232))(v4);
  v1 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_1D5297278(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t (***sub_1D529728C(uint64_t a1))(_QWORD)
{
  uint64_t (***result)(_QWORD);

  result = *(uint64_t (****)(_QWORD))(a1 + 24);
  if (result)
    return sub_1D530CBE0((uint64_t)result);
  return result;
}

uint64_t sub_1D529729C(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  if (v2 && (sub_1D530CC1C(v2) & 1) == 0)
    sub_1D52972D4(a1);
  return 1;
}

void sub_1D52972D4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *v3;
  unint64_t v4;
  __int128 v5;

  v5 = 0uLL;
  sub_1D5292548(a1 + 24, &v5);
  v2 = (std::__shared_weak_count *)*((_QWORD *)&v5 + 1);
  if (*((_QWORD *)&v5 + 1))
  {
    v3 = (unint64_t *)(*((_QWORD *)&v5 + 1) + 8);
    do
      v4 = __ldaxr(v3);
    while (__stlxr(v4 - 1, v3));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  *(_DWORD *)(a1 + 40) = 0;
}

_QWORD *sub_1D5297344(uint64_t a1, uint64_t *a2)
{
  return sub_1D52908C8((_QWORD *)(a1 + 248), a2);
}

uint64_t sub_1D529734C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v6;
  std::__shared_weak_count *v7;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 160))(&v6);
  v1 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 568))(v6);
  v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_1D52973CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52973E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  void *__p[2];
  char v8;
  uint64_t v9;
  std::__shared_weak_count *v10;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 160))(&v9);
  v1 = v9;
  sub_1D52850A0(__p, "IFD0:EXIF");
  v2 = (*(uint64_t (**)(uint64_t, void **))(*(_QWORD *)v1 + 264))(v1, __p);
  if (v8 < 0)
    operator delete(__p[0]);
  v3 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  return v2;
}

void sub_1D5297488(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0)
    operator delete(__p);
  sub_1D5282EB4((uint64_t)&a16);
  _Unwind_Resume(a1);
}

double sub_1D52974B4(uint64_t a1)
{
  uint64_t v1;
  double v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  void *__p[2];
  char v8;
  uint64_t v9;
  std::__shared_weak_count *v10;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 160))(&v9);
  v1 = v9;
  sub_1D52850A0(__p, "IFD0:EXIF");
  v2 = (*(double (**)(uint64_t, void **, uint64_t))(*(_QWORD *)v1 + 280))(v1, __p, 1);
  if (v8 < 0)
    operator delete(__p[0]);
  v3 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  return v2;
}

void sub_1D5297568(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0)
    operator delete(__p);
  sub_1D5282EB4((uint64_t)&a16);
  _Unwind_Resume(a1);
}

double sub_1D5297594(uint64_t a1)
{
  uint64_t v1;
  double v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  void *__p[2];
  char v8;
  uint64_t v9;
  std::__shared_weak_count *v10;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 160))(&v9);
  v1 = v9;
  sub_1D52850A0(__p, "IFD0:EXIF");
  v2 = (*(double (**)(uint64_t, void **))(*(_QWORD *)v1 + 296))(v1, __p);
  if (v8 < 0)
    operator delete(__p[0]);
  v3 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  return v2;
}

void sub_1D5297644(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0)
    operator delete(__p);
  sub_1D5282EB4((uint64_t)&a16);
  _Unwind_Resume(a1);
}

void sub_1D5297670(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 160))(&v4);
  (*(void (**)(uint64_t))(*(_QWORD *)v4 + 584))(v4);
  v1 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_1D52976F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1D5297704(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 160))(&v6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v6 + 592))(v6, a2);
  v3 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_1D529778C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52977A0(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  const char *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  char isEqualToString;
  std::__shared_weak_count *v38;
  unint64_t *p_shared_owners;
  unint64_t v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  const char *v48;
  uint64_t v49;
  uint64_t v50;
  const char *v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  void *v55;
  uint64_t v57;
  std::__shared_weak_count *v58;

  v3 = a2;
  v7 = v3;
  if (!*(_QWORD *)(a1 + 184))
  {
    sub_1D52B4BA8(v3, &v57);
    (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)a1 + 136))(a1, &v57);
    v38 = v58;
    if (v58)
    {
      p_shared_owners = (unint64_t *)&v58->__shared_owners_;
      do
        v40 = __ldaxr(p_shared_owners);
      while (__stlxr(v40 - 1, p_shared_owners));
      if (!v40)
      {
        ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
        std::__shared_weak_count::__release_weak(v38);
      }
    }
  }
  *(_BYTE *)(a1 + 200) = sub_1D5297AC0(v7, CFSTR("kCGImageSourceDisableVendorLensCACorrection"), v4, v5, v6) & 1;
  *(_BYTE *)(a1 + 201) = (sub_1D5297AC0(v7, CFSTR("kCGImageSourceDisableVendorLensDistortionCorrection"), v8, v9, v10) & 4) != 0;
  *(_BYTE *)(a1 + 202) = (sub_1D5297AC0(v7, CFSTR("kCGImageSourceDisableVendorLensVignettingCorrection"), v11, v12, v13) & 2) != 0;
  *(_BYTE *)(a1 + 203) = sub_1D5297B04(v7, CFSTR("kCGImageSourceAltMode"), v14, v15, v16);
  objc_msgSend_objectForKeyedSubscript_(v7, v17, *MEMORY[0x1E0CBD258], v18, v19);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v21 = sub_1D536BF40(v20);
  sub_1D5297B48((_DWORD *)a1, v21);

  *(_BYTE *)(a1 + 212) = sub_1D5297B04(v7, (const char *)*MEMORY[0x1E0CBD200], v22, v23, v24);
  *(_BYTE *)(a1 + 213) = sub_1D5297B04(v7, CFSTR("kCGImageSourceAddThumbnailInformation"), v25, v26, v27);
  sub_1D5297C60(v7, (void *)*MEMORY[0x1E0CBD210], 0);
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, void *))(*(_QWORD *)a1 + 2880))(a1, v28);

  sub_1D5297D18(v7, CFSTR("kCGImageSourceRawPropertiesHint"), v29, v30, v31);
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  v36 = v32;
  if (v32)
    isEqualToString = objc_msgSend_isEqualToString_(v32, v33, (uint64_t)CFSTR("ImportOnly"), v34, v35);
  else
    isEqualToString = 0;
  *(_BYTE *)(a1 + 214) = isEqualToString;
  v41 = (const char *)*MEMORY[0x1E0CBD290];
  if (sub_1D5297D80(v7, (void *)*MEMORY[0x1E0CBD290]))
  {
    v45 = sub_1D5297AC0(v7, v41, v42, v43, v44);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 552))(a1, v45);
  }
  sub_1D5297D18(v7, (const char *)*MEMORY[0x1E0CBD1A0], v42, v43, v44);
  v46 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D5297C60(v7, (void *)*MEMORY[0x1E0CBD1A8], 0);
  v47 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend_isEqualToString_(v46, v48, *MEMORY[0x1E0CBD1B0], v49, v50) & 1) != 0)
  {
    v54 = 1;
  }
  else
  {
    if (!objc_msgSend_isEqualToString_(v46, v51, *MEMORY[0x1E0CBD1B8], v52, v53))
      goto LABEL_17;
    v54 = 2;
  }
  *(_DWORD *)(a1 + 280) = v54;
LABEL_17:
  objc_msgSend_objectForKeyedSubscript_(v47, v51, *MEMORY[0x1E0CBD2D8], v52, v53);
  v55 = (void *)objc_claimAutoreleasedReturnValue();
  if (v55)
    objc_storeStrong((id *)(a1 + 288), v55);

  return 1;
}

void sub_1D5297A64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;

  sub_1D5282EB4((uint64_t)&a9);

  _Unwind_Resume(a1);
}

uint64_t sub_1D5297AC0(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D529EA84(a1, a2, a3, a4, a5);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend_intValue(v5, v6, v7, v8, v9);

  return v10;
}

void sub_1D5297AF4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_1D5297B04(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D529EA84(a1, a2, a3, a4, a5);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend_BOOLValue(v5, v6, v7, v8, v9);

  return v10;
}

void sub_1D5297B38(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1D5297B48(_DWORD *a1, int a2)
{
  void *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  void *exception;
  id v14;

  sub_1D536C28C(a2);
  v14 = (id)objc_claimAutoreleasedReturnValue();
  (*(void (**)(_DWORD *))(*(_QWORD *)a1 + 2760))(a1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend_containsObject_(v4, v5, (uint64_t)v14, v6, v7))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  a1[51] = a2;
  a1[52] = a2;
  sub_1D536C28C(3);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = objc_msgSend_containsObject_(v4, v9, (uint64_t)v8, v10, v11);

  if (v12)
    a1[51] = 3;

}

void sub_1D5297C1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  __cxa_free_exception(v11);

  _Unwind_Resume(a1);
}

uint64_t sub_1D5297C58(uint64_t result, char a2)
{
  *(_BYTE *)(result + 212) = a2;
  return result;
}

id sub_1D5297C60(void *a1, void *a2, int a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  void *v12;

  v5 = a1;
  v9 = a2;
  if (v9 || !a3)
  {
    objc_msgSend_objectForKeyedSubscript_(v5, v6, (uint64_t)v9, v7, v8);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v12 = v11;
    else
      v12 = 0;
    v10 = v12;

  }
  else
  {
    v10 = v5;
  }

  return v10;
}

void sub_1D5297CF8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id sub_1D5297D18(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  void *v6;
  id v7;

  objc_msgSend_objectForKeyedSubscript_(a1, a2, (uint64_t)a2, a4, a5);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v6 = v5;
  else
    v6 = 0;
  v7 = v6;

  return v7;
}

void sub_1D5297D70(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

BOOL sub_1D5297D80(void *a1, void *a2)
{
  id v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  _BOOL8 v9;

  v3 = a1;
  v7 = a2;
  if (v3)
  {
    objc_msgSend_objectForKeyedSubscript_(v3, v4, (uint64_t)v7, v5, v6);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = v8 != 0;

  }
  else
  {
    v9 = 0;
  }

  return v9;
}

void sub_1D5297DE8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t sub_1D5297DFC()
{
  return 0;
}

uint64_t sub_1D5297E04()
{
  return 0;
}

uint64_t sub_1D5297E0C()
{
  return 0;
}

uint64_t sub_1D5297E14()
{
  return 0;
}

uint64_t sub_1D5297E1C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 200);
}

uint64_t sub_1D5297E24(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 201);
}

uint64_t sub_1D5297E2C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 202);
}

uint64_t sub_1D5297E34(uint64_t a1)
{
  return *(unsigned int *)(a1 + 204);
}

uint64_t sub_1D5297E3C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 208);
}

BOOL sub_1D5297E44(uint64_t a1)
{
  return *(_DWORD *)(a1 + 208) == 0;
}

uint64_t sub_1D5297E54(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 212);
}

uint64_t sub_1D5297E5C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 203);
}

CFTypeRef sub_1D5297E64(uint64_t a1)
{
  int v2;
  id v3;
  void *v4;
  CFTypeRef v5;
  CFTypeRef v6;
  CFTypeRef v7;
  void *exception;

  if ((*(int (**)(uint64_t))(*(_QWORD *)a1 + 120))(a1) < 8)
  {
    v6 = sub_1D543EAE8();
    goto LABEL_10;
  }
  v2 = *(_DWORD *)(a1 + 280);
  if (v2 == 2)
  {
    v3 = *(id *)(a1 + 288);
    v4 = v3;
    if (v3)
      goto LABEL_5;
    v5 = sub_1D543EB6C();
    goto LABEL_14;
  }
  if (v2 != 1)
  {
    v6 = sub_1D543EB6C();
LABEL_10:
    v7 = v6;
    if (!v6)
      goto LABEL_15;
    return v7;
  }
  v3 = *(id *)(a1 + 288);
  v4 = v3;
  if (v3)
  {
LABEL_5:
    v5 = sub_1D543ED64(v3);
    goto LABEL_14;
  }
  v5 = sub_1D543EC5C();
LABEL_14:
  v7 = v5;

  if (!v7)
  {
LABEL_15:
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return v7;
}

void sub_1D5297F40(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_1D5297F64(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 213);
}

uint64_t sub_1D5297F6C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 214);
}

double sub_1D5297F74()
{
  return 0.0;
}

uint64_t sub_1D5297F7C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v6;
  std::__shared_weak_count *v7;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 160))(&v6);
  v1 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 424))(v6);
  v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_1D5297FFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D5298010(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v6;
  std::__shared_weak_count *v7;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 160))(&v6);
  v1 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 432))(v6);
  v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_1D5298090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52980A4()
{
  return 0;
}

BOOL sub_1D52980AC(uint64_t a1)
{
  void *exception;

  if ((*(int (**)(uint64_t))(*(_QWORD *)a1 + 120))(a1) <= 6)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return (*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 816))(a1) - 4 < 0xFFFFFFFD;
}

void sub_1D5298128(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D529813C(uint64_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  size_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t *p_shared_owners;
  _DWORD *v29;
  std::__shared_weak_count *v30;

  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 360))(a1)
    && ((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 352))(a1) & 1) == 0)
  {
    (*(void (**)(_DWORD **__return_ptr, uint64_t))(*(_QWORD *)a1 + 2872))(&v29, a1);
    (*(void (**)(_DWORD *, uint64_t, int *, uint64_t))(*(_QWORD *)v29 + 80))(v29, a2, a3, a4);
    v25 = v30;
    if (!v30)
      return;
    p_shared_owners = (unint64_t *)&v30->__shared_owners_;
    do
      v27 = __ldaxr(p_shared_owners);
    while (__stlxr(v27 - 1, p_shared_owners));
    goto LABEL_26;
  }
  v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 432))(a1);
  v10 = v9;
  (*(void (**)(_DWORD **__return_ptr, uint64_t))(*(_QWORD *)a1 + 392))(&v29, a1);
  v11 = v29[14];
  v12 = sub_1D530D4CC((uint64_t)v29);
  v13 = *a3;
  v14 = a3[1];
  if ((int)v14 <= SHIDWORD(v8))
    v15 = HIDWORD(v8);
  else
    v15 = a3[1];
  v16 = HIDWORD(v8) + HIDWORD(v10);
  if (HIDWORD(v8) + HIDWORD(v10) >= a3[3] + (int)v14)
    v16 = a3[3] + v14;
  if (v13 <= (int)v8)
    v17 = v8;
  else
    v17 = *a3;
  v18 = v16 - v15;
  if (v16 > v15)
  {
    v19 = 2 * v11;
    v20 = a3[2] + v13;
    if ((int)v8 + (int)v10 < v20)
      v20 = v8 + v10;
    v21 = 2 * (v20 - v17);
    if (v14 <= v8 >> 32)
      v22 = v8 >> 32;
    else
      v22 = a3[1];
    v23 = v19;
    v24 = (char *)(v12 + (v22 - (v8 >> 32)) * v19 + 2 * (v17 - (int)v8));
    do
    {
      memcpy((void *)(a2 + ((int)v22 - a3[1]) * (int)a4 + 2 * (v17 - *a3)), v24, v21);
      LODWORD(v22) = v22 + 1;
      v24 += v23;
      --v18;
    }
    while (v18);
  }
  v25 = v30;
  if (v30)
  {
    v26 = (unint64_t *)&v30->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
LABEL_26:
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
}

void sub_1D5298330(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1D5298354(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  _QWORD v11[2];
  __int128 v12;

  v4 = (*(uint64_t (**)(uint64_t *))(*a1 + 360))(a1);
  v5 = *a1;
  if ((v4 & 1) != 0)
  {
    (*(void (**)(uint64_t *))(v5 + 384))(a1);
    v6 = *a2;
    v11[0] = (*(uint64_t (**)(uint64_t *))(*a1 + 432))(a1);
    v11[1] = v7;
    sub_1D530D4F8(v6, (unsigned int *)v11, &v12);
    sub_1D5292548((uint64_t)a2, &v12);
    v8 = (std::__shared_weak_count *)*((_QWORD *)&v12 + 1);
    if (*((_QWORD *)&v12 + 1))
    {
      v9 = (unint64_t *)(*((_QWORD *)&v12 + 1) + 8);
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    (*(void (**)(uint64_t *))(v5 + 392))(a1);
  }
}

void sub_1D5298434(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1D5282EB4(v1);
  _Unwind_Resume(a1);
}

void sub_1D5298448(_DWORD *a1)
{
  int v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  void *exception;
  uint64_t v7;
  std::__shared_weak_count *v8;

  v2 = a1[10];
  if (!v2)
  {
    (*(void (**)(_DWORD *))(*(_QWORD *)a1 + 2920))(a1);
    v2 = a1[10];
  }
  if (v2 != 1)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  (*(void (**)(uint64_t *__return_ptr, _DWORD *))(*(_QWORD *)a1 + 2872))(&v7, a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v7 + 24))(v7);
  v3 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_1D5298524(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1D5298548(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  void *exception;
  uint64_t v6;
  std::__shared_weak_count *v7;

  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 2928))(a1);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)a1 + 2872))(&v6, a1);
  if (!v6)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v6 + 16))(v6);
  v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
}

void sub_1D5298614(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;

  __cxa_free_exception(v9);
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1D5298638(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 376))(&v12);
  v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 456))(a1);
  v6 = v5;
  v10 = v4;
  v11 = v5;
  if (fabs((*(double (**)(uint64_t))(*(_QWORD *)a1 + 2640))(a1) + -1.0) > 0.00001
    || fabs((*(double (**)(uint64_t))(*(_QWORD *)a1 + 2648))(a1) + -1.0) > 0.00001)
  {
    LODWORD(v11) = vcvtmd_s64_f64((*(double (**)(uint64_t))(*(_QWORD *)a1 + 2640))(a1) * (double)(int)v6);
    HIDWORD(v11) = vcvtmd_s64_f64((*(double (**)(uint64_t))(*(_QWORD *)a1 + 2648))(a1) * (double)SHIDWORD(v6));
  }
  sub_1D530D4F8(v12, (unsigned int *)&v10, a2);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_1D5298774(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_1D5282EB4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1D5298788(uint64_t a1)
{
  int v2;
  uint64_t v3;

  v2 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 176))(a1);
  v3 = 424;
  if (v2)
    v3 = 416;
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + v3))(a1);
}

uint64_t sub_1D52987CC(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v6;
  std::__shared_weak_count *v7;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 160))(&v6);
  v1 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 440))(v6);
  v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_1D529884C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D5298860(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v6;
  std::__shared_weak_count *v7;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 160))(&v6);
  v1 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 440))(v6);
  v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_1D52988E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52988F4(uint64_t a1)
{
  int v2;
  uint64_t v3;

  v2 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 176))(a1);
  v3 = 448;
  if (v2)
    v3 = 440;
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + v3))(a1);
}

uint64_t sub_1D5298938(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v6;
  std::__shared_weak_count *v7;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 160))(&v6);
  v1 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 448))(v6);
  v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_1D52989C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52989DC(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v6;
  std::__shared_weak_count *v7;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 160))(&v6);
  v1 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 448))(v6);
  v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_1D5298A6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

unint64_t sub_1D5298A80(uint64_t *a1)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = (*(uint64_t (**)(uint64_t *))(*a1 + 176))(a1);
  v3 = *a1;
  if (v2)
  {
    v4 = (*(uint64_t (**)(uint64_t *))(v3 + 464))(a1);
    v5 = HIDWORD(v4);
    (*(void (**)(uint64_t *))(*a1 + 440))(a1);
    (*(uint64_t (**)(uint64_t *))(*a1 + 560))(a1);
  }
  else
  {
    v6 = (*(uint64_t (**)(uint64_t *))(v3 + 472))(a1);
    LODWORD(v4) = v6;
    v5 = HIDWORD(v6);
  }
  return v4 | ((unint64_t)v5 << 32);
}

uint64_t sub_1D5298B5C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v6;
  std::__shared_weak_count *v7;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 160))(&v6);
  v1 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 456))(v6);
  v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_1D5298BEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

unint64_t sub_1D5298C00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  void *exception;
  uint64_t v11;
  std::__shared_weak_count *v12;

  if ((*(int (**)(uint64_t))(*(_QWORD *)a1 + 120))(a1) <= 6)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    goto LABEL_12;
  }
  v2 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 432))(a1);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)a1 + 160))(&v11, a1);
  v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 464))(v11);
  v5 = v4;
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  if ((int)v5 <= (int)v3 - (int)v2 || HIDWORD(v3) - HIDWORD(v2) >= SHIDWORD(v5))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
LABEL_12:
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return (v3 - v2) | ((unint64_t)(HIDWORD(v3) - HIDWORD(v2)) << 32);
}

void sub_1D5298D4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D5298D78(uint64_t a1)
{
  double v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v7;
  std::__shared_weak_count *v8;

  if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 488))(a1))
    return *MEMORY[0x1E0C9D648];
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)a1 + 160))(&v7, a1);
  v2 = (*(double (**)(uint64_t))(*(_QWORD *)v7 + 472))(v7);
  v3 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  return v2;
}

void sub_1D5298E4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D5298E60(uint64_t a1)
{
  void *exception;

  if ((*(int (**)(uint64_t))(*(_QWORD *)a1 + 120))(a1) <= 6)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 456))(a1);
}

void sub_1D5298ECC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D5298EE0(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 496))(a1);
}

unint64_t sub_1D5298EEC(uint64_t a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 432))(a1);
  return v1 & 0xFFFFFFFEFFFFFFFCLL;
}

unint64_t sub_1D5298F10(unsigned int *a1)
{
  _BOOL4 v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  void *exception;

  if ((*(int (**)(unsigned int *))(*(_QWORD *)a1 + 120))(a1) <= 6)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v2 = sub_1D536C2C0(a1[52]);
  v3 = *(_QWORD *)a1;
  if (v2)
  {
    (*(void (**)(unsigned int *))(v3 + 432))(a1);
    v5 = HIDWORD(v4);
  }
  else
  {
    v6 = (*(uint64_t (**)(unsigned int *))(v3 + 544))(a1);
    (*(void (**)(unsigned int *))(*(_QWORD *)a1 + 496))(a1);
    v5 = HIDWORD(v4);
    if (v6)
    {
      LODWORD(v4) = (int)v4 / v6;
      v5 = ((int)v5 / v6);
    }
  }
  return v4 | (v5 << 32);
}

void sub_1D5298FCC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D5298FE0(uint64_t a1)
{
  unint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  void *exception;
  uint64_t v13;
  std::__shared_weak_count *v14;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 160))(&v13);
  v2 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v13 + 480))(v13);
  v3 = v14;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if ((v2 - 20000) <= 0xFFFFB1E0 || (HIDWORD(v2) - 20000) <= 0xFFFFB1E0)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  if (v2 > 0x3FF)
    LODWORD(v6) = v2;
  else
    LODWORD(v6) = (v2 >> 1)
                + 1024
                + (unsigned __int16)((v2 >> 1) + 1024)
                / (unsigned __int16)v2
                * (unsigned __int16)v2
                - (unsigned __int16)((v2 >> 1) + 1024);
  if (HIDWORD(v2) <= 0x3FF)
    v7 = (((v2 >> 33) & 0x7FFF) + 1024) / WORD2(v2) * WORD2(v2);
  else
    v7 = HIDWORD(v2);
  v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 408))(a1);
  if ((int)v6 >= v8)
    v6 = v8;
  else
    v6 = v6;
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 408))(a1);
  if ((int)v7 >= SHIDWORD(v9))
    v10 = HIDWORD(v9);
  else
    v10 = v7;
  return v6 | (v10 << 32);
}

void sub_1D5299158(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1D5299180(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 160))(&v4);
  (*(void (**)(uint64_t))(*(_QWORD *)v4 + 488))(v4);
  v1 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_1D5299200(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1D5299214(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 160))(&v4);
  (*(void (**)(uint64_t))(*(_QWORD *)v4 + 496))(v4);
  v1 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_1D5299294(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D52992A8(uint64_t a1)
{
  unsigned int v2;
  float v3;

  v2 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 544))(a1);
  v3 = 1.0;
  if (v2 >= 2)
    v3 = (float)(*(unsigned int (**)(uint64_t, float))(*(_QWORD *)a1 + 544))(a1, 1.0);
  return (float)(1.0 / v3);
}

uint64_t sub_1D5299304(uint64_t a1)
{
  unsigned int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  CGFloat v8;
  CGFloat v9;
  int v10;
  CGFloat v11;
  int v12;
  CGFloat v13;
  CGFloat v14;
  CGAffineTransform v16;
  CGAffineTransform v17;
  double v18[2];
  double v19[2];
  uint64_t v20;
  uint64_t v21;
  CGRect v22;
  CGRect v23;
  CGRect v24;
  CGRect v25;

  v2 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 544))(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 432))(a1);
  if (v2 >= 2)
    v5 = v3 / (int)v2;
  else
    v5 = v3;
  if (v2 >= 2)
    v6 = v4 / (int)v2;
  else
    v6 = v4;
  v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 432))(a1);
  v8 = (double)(int)v7;
  v9 = (double)SHIDWORD(v7);
  v11 = (double)v10;
  v13 = (double)v12;
  v14 = (*(double (**)(uint64_t))(*(_QWORD *)a1 + 528))(a1);
  memset(&v17, 0, sizeof(v17));
  CGAffineTransformMakeScale(&v17, v14, v14);
  v22.origin.x = v8;
  v22.origin.y = v9;
  v22.size.width = v11;
  v22.size.height = v13;
  v23 = CGRectInset(v22, 0.00100000005, 0.00100000005);
  v16 = v17;
  v24 = CGRectApplyAffineTransform(v23, &v16);
  v25 = CGRectIntegral(v24);
  v18[0] = v25.origin.x;
  v18[1] = v25.origin.y;
  v19[0] = (*(double (**)(uint64_t))(*(_QWORD *)a1 + 2640))(a1) * (double)v5;
  v19[1] = (*(double (**)(uint64_t))(*(_QWORD *)a1 + 2648))(a1) * (double)v6;
  sub_1D529EAEC(&v20, v18);
  sub_1D529EAEC(&v21, v19);
  return v20;
}

uint64_t sub_1D5299468(uint64_t a1)
{
  unsigned int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  CGFloat v8;
  CGFloat v9;
  int v10;
  CGFloat v11;
  int v12;
  CGFloat v13;
  CGFloat v14;
  CGAffineTransform v16;
  CGAffineTransform v17;
  double v18[2];
  double v19[2];
  uint64_t v20;
  uint64_t v21;
  CGRect v22;
  CGRect v23;
  CGRect v24;
  CGRect v25;

  v2 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 544))(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 496))(a1);
  if (v2 >= 2)
    v5 = v3 / (int)v2;
  else
    v5 = v3;
  if (v2 >= 2)
    v6 = v4 / (int)v2;
  else
    v6 = v4;
  v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 456))(a1);
  v8 = (double)(int)v7;
  v9 = (double)SHIDWORD(v7);
  v11 = (double)v10;
  v13 = (double)v12;
  v14 = (*(double (**)(uint64_t))(*(_QWORD *)a1 + 528))(a1);
  memset(&v17, 0, sizeof(v17));
  CGAffineTransformMakeScale(&v17, v14, v14);
  v22.origin.x = v8;
  v22.origin.y = v9;
  v22.size.width = v11;
  v22.size.height = v13;
  v23 = CGRectInset(v22, 0.00100000005, 0.00100000005);
  v16 = v17;
  v24 = CGRectApplyAffineTransform(v23, &v16);
  v25 = CGRectIntegral(v24);
  v18[0] = v25.origin.x;
  v18[1] = v25.origin.y;
  v19[0] = (double)v5;
  v19[1] = (double)v6;
  sub_1D529EAEC(&v20, v18);
  sub_1D529EAEC(&v21, v19);
  return v20;
}

uint64_t sub_1D52995A0(unsigned int *a1)
{
  void *exception;

  if ((*(int (**)(unsigned int *))(*(_QWORD *)a1 + 120))(a1) <= 6)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return a1[58];
}

void sub_1D5299604(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D5299618(unsigned int a1)
{
  unsigned int v1;

  if (a1 <= 3)
    v1 = 2 * (a1 > 1);
  else
    v1 = 4;
  if (a1 <= 7)
    return v1;
  else
    return 8;
}

uint64_t sub_1D5299640(uint64_t result, unsigned int a2)
{
  int v2;
  int v3;

  if (a2 <= 3)
    v2 = 2 * (a2 > 1);
  else
    v2 = 4;
  if (a2 <= 7)
    v3 = v2;
  else
    v3 = 8;
  *(_DWORD *)(result + 232) = v3;
  return result;
}

uint64_t sub_1D529966C()
{
  return 0x100000001;
}

uint64_t sub_1D5299674()
{
  return 0x200000004;
}

uint64_t sub_1D5299680(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v6;
  std::__shared_weak_count *v7;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 160))(&v6);
  v1 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 520))(v6);
  v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_1D5299700(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D5299714(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v6;
  std::__shared_weak_count *v7;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 160))(&v6);
  v1 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 528))(v6);
  v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_1D5299794(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52997A8(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v6;
  std::__shared_weak_count *v7;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 160))(&v6);
  v1 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 536))(v6);
  v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_1D5299828(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D529983C()
{
  return 8;
}

uint64_t sub_1D5299844()
{
  return 3;
}

void sub_1D529984C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  __int128 v12;

  v5 = (uint64_t *)(a1 + 168);
  v4 = *(_QWORD *)(a1 + 168);
  if (!v4)
  {
    sub_1D5371040(0, &v12);
    sub_1D5292548((uint64_t)v5, &v12);
    v6 = (std::__shared_weak_count *)*((_QWORD *)&v12 + 1);
    if (*((_QWORD *)&v12 + 1))
    {
      v7 = (unint64_t *)(*((_QWORD *)&v12 + 1) + 8);
      do
        v8 = __ldaxr(v7);
      while (__stlxr(v8 - 1, v7));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
    v4 = *v5;
  }
  v9 = *(_QWORD *)(a1 + 176);
  *a2 = v4;
  a2[1] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
}

void sub_1D52998FC(uint64_t a1, void *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *v4;
  unint64_t v5;
  __int128 v6;

  sub_1D5371040(a2, &v6);
  sub_1D5292548(a1 + 168, &v6);
  v3 = (std::__shared_weak_count *)*((_QWORD *)&v6 + 1);
  if (*((_QWORD *)&v6 + 1))
  {
    v4 = (unint64_t *)(*((_QWORD *)&v6 + 1) + 8);
    do
      v5 = __ldaxr(v4);
    while (__stlxr(v5 - 1, v4));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

uint64_t sub_1D5299970@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  __int16 v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  void *exception;

  result = (*(uint64_t (**)(uint64_t *))(*a1 + 120))(a1);
  if ((int)result <= 6
    || (v5 = a1[3]) == 0
    && (((*(void (**)(uint64_t *))(*a1 + 2896))(a1), !a1[3])
     || (v6 = (*(uint64_t (**)(uint64_t *))(*a1 + 864))(a1),
         result = sub_1D530C458(a1[3], v6 - 5),
         (v5 = a1[3]) == 0)))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v7 = a1[4];
  *a2 = v5;
  a2[1] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  return result;
}

void sub_1D5299A58(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D5299A70(_QWORD *a1)
{
  int v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int v9;

  v2 = (*(uint64_t (**)(_QWORD *))(*a1 + 176))(a1);
  v3 = 2912;
  if (v2)
    v3 = 2904;
  result = (*(uint64_t (**)(_QWORD *))(*a1 + v3))(a1);
  v5 = a1[3];
  if (v5)
  {
    v8 = (*(uint64_t (**)(_QWORD *))(*a1 + 344))(a1);
    sub_1D528304C(&v9, &v8);
    (*(void (**)(uint64_t, int *))(*(_QWORD *)v5 + 32))(v5, &v9);
    v6 = a1[3];
    v7 = (*(uint64_t (**)(_QWORD *))(*a1 + 56))(a1);
    return sub_1D530CBD8(v6, v7);
  }
  return result;
}

void sub_1D5299B1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *v5;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  _QWORD v10[2];
  uint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  __int128 v14;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 160))(&v12);
  v2 = v12;
  v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 408))(a1);
  v10[0] = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 432))(a1);
  v10[1] = v3;
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t *, _QWORD *))(*(_QWORD *)v2 + 552))(&v14, v2, &v11, v10);
  sub_1D5292548(a1 + 24, &v14);
  v4 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (*((_QWORD *)&v14 + 1))
  {
    v5 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
    do
      v6 = __ldaxr(v5);
    while (__stlxr(v6 - 1, v5));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_1D5299C14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_1D5282EB4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1D5299C2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *v5;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  _QWORD v10[2];
  uint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  __int128 v14;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 160))(&v12);
  v2 = v12;
  v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 408))(a1);
  v10[0] = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 432))(a1);
  v10[1] = v3;
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t *, _QWORD *))(*(_QWORD *)v2 + 552))(&v14, v2, &v11, v10);
  sub_1D5292548(a1 + 24, &v14);
  v4 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (*((_QWORD *)&v14 + 1))
  {
    v5 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
    do
      v6 = __ldaxr(v5);
    while (__stlxr(v6 - 1, v5));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_1D5299D24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_1D5282EB4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1D5299D3C(_DWORD *a1)
{
  std::__shared_weak_count *v2;
  uint64_t v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  if (!a1[10])
  {
    (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 2872))(&v14);
    v3 = v14;
    v2 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v5 = __ldaxr(p_shared_owners);
      while (__stlxr(v5 - 1, p_shared_owners));
      if (!v5)
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
    if (v3)
    {
      (*(void (**)(uint64_t *__return_ptr, _DWORD *))(*(_QWORD *)a1 + 2872))(&v14, a1);
      (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)v14 + 24))(&v12);
      v6 = v13;
      if (v13)
      {
        v7 = (unint64_t *)&v13->__shared_owners_;
        do
          v8 = __ldaxr(v7);
        while (__stlxr(v8 - 1, v7));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      v9 = v15;
      if (v15)
      {
        v10 = (unint64_t *)&v15->__shared_owners_;
        do
          v11 = __ldaxr(v10);
        while (__stlxr(v11 - 1, v10));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
      a1[10] = 1;
    }
  }
}

void sub_1D5299E5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_1D5282EB4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1D5299E70(_DWORD *a1)
{
  int v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;

  v2 = a1[10];
  if (!v2)
  {
    (*(void (**)(_DWORD *))(*(_QWORD *)a1 + 2920))(a1);
    v2 = a1[10];
  }
  if (v2 == 1)
  {
    (*(void (**)(uint64_t *__return_ptr, _DWORD *))(*(_QWORD *)a1 + 2872))(&v20, a1);
    v4 = v20;
    v3 = v21;
    if (v21)
    {
      p_shared_owners = (unint64_t *)&v21->__shared_owners_;
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    if (v4)
    {
      (*(void (**)(_DWORD *))(*(_QWORD *)a1 + 2144))(a1);
      (*(void (**)(uint64_t *__return_ptr, _DWORD *))(*(_QWORD *)a1 + 2872))(&v20, a1);
      v18 = 0;
      v19 = 0;
      sub_1D530CC64(v20, &v19, &v18);
      v7 = v21;
      if (v21)
      {
        v8 = (unint64_t *)&v21->__shared_owners_;
        do
          v9 = __ldaxr(v8);
        while (__stlxr(v9 - 1, v8));
        if (!v9)
        {
          ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
          std::__shared_weak_count::__release_weak(v7);
        }
      }
      (*(void (**)(uint64_t *__return_ptr, _DWORD *))(*(_QWORD *)a1 + 2872))(&v20, a1);
      (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)v20 + 16))(&v16);
      v10 = v17;
      if (v17)
      {
        v11 = (unint64_t *)&v17->__shared_owners_;
        do
          v12 = __ldaxr(v11);
        while (__stlxr(v12 - 1, v11));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      v13 = v21;
      if (v21)
      {
        v14 = (unint64_t *)&v21->__shared_owners_;
        do
          v15 = __ldaxr(v14);
        while (__stlxr(v15 - 1, v14));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      a1[10] = 2;
    }
  }
}

void sub_1D529A024(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_1D5282EB4((uint64_t)va);
  _Unwind_Resume(a1);
}

id sub_1D529A03C(uint64_t a1)
{
  void *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v6;
  std::__shared_weak_count *v7;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 160))(&v6);
  (*(void (**)(uint64_t))(*(_QWORD *)v6 + 560))(v6);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_1D529A0C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1D529A0D4(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  id *v7;
  std::__shared_weak_count *v8;

  (*(void (**)(id **__return_ptr))(*(_QWORD *)a1 + 72))(&v7);
  sub_1D53BBEFC(v7);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D529A17C(v3, a2);

  v4 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void sub_1D529A15C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;

  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1D529A17C(void *a1@<X0>, _QWORD *a2@<X8>)
{
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;

  v13 = objc_retainAutorelease(a1);
  if (objc_msgSend_UTF8String(v13, v3, v4, v5, v6))
  {
    v7 = objc_retainAutorelease(v13);
    v12 = (char *)objc_msgSend_UTF8String(v7, v8, v9, v10, v11);
    sub_1D52850A0(a2, v12);
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }

}

void sub_1D529A1DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1D529A1F0(uint64_t a1@<X0>, _WORD **a2@<X8>)
{
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  sub_1D5288A6C(v10, v3, v4, v5, v6, a2);
  v7 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_1D529A268(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D529A27C(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D5288CF4(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529A2F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529A308(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D5288D78(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529A388(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1D529A39C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  sub_1D5288E70(v10, v3, v4, v5, v6, a2);
  v7 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_1D529A414(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D529A428(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528904C(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529A4A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1D529A4B4(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v6);
  sub_1D5289140(v6, a2);
  v3 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_1D529A52C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1D529A540(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v6);
  sub_1D52893C0(v6, a2);
  v3 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_1D529A5B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1D529A5CC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  sub_1D5289568(v10, v3, v4, v5, v6, a2);
  v7 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_1D529A644(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1D529A658(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  sub_1D528962C(v10, v3, v4, v5, v6, a2);
  v7 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_1D529A6D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1D529A6E4(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  sub_1D52896F0(v10, v3, v4, v5, v6, a2);
  v7 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_1D529A75C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

BOOL sub_1D529A770(uint64_t a1)
{
  _BOOL8 v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v6;
  std::__shared_weak_count *v7;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v6);
  v1 = sub_1D52898C0(v6);
  v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_1D529A7E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D529A7FC(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D5289960(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529A874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

BOOL sub_1D529A888(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BOOL8 v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D52899E0(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529A900(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D529A914(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D5289A68(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529A98C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D529A9A0(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D5289AE8(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529AA18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D529AA2C(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D5289B6C(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529AAA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D529AAB8(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D5289BF0(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529AB30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

BOOL sub_1D529AB44(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BOOL8 v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D5289C74(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529ABBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529ABD0(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D5289D00(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529AC50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529AC64(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D5289DA4(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529ACE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529ACF8(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D5289E48(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529AD78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529AD8C(uint64_t a1)
{
  double v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v6;
  std::__shared_weak_count *v7;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v6);
  v1 = sub_1D5289EC8(v6);
  v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_1D529AE0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529AE20(uint64_t a1)
{
  double v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v6;
  std::__shared_weak_count *v7;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v6);
  v1 = sub_1D5289FA0(v6);
  v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_1D529AEA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529AEB4(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528A06C(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529AF34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529AF48(uint64_t a1)
{
  double v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v6;
  std::__shared_weak_count *v7;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v6);
  v1 = sub_1D528A0F0(v6);
  v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_1D529AFC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529AFDC(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528A1AC(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529B05C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529B070(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528A23C(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529B0F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529B104(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528A2CC(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529B184(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529B198(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528A35C(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529B218(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529B22C(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528A3EC(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529B2AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D529B2C0(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528A47C(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529B338(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D529B34C(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528A500(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529B3C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529B3D8(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528A584(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529B458(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529B46C(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528A614(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529B4EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529B500(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528A6A4(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529B580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D529B594(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528A734(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529B60C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529B620(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528A844(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529B6A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529B6B4(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528A8C8(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529B734(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529B748(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528A94C(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529B7C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529B7DC(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528A9EC(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529B85C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529B870(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528AA90(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529B8F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529B904(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528AB34(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529B984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529B998(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528ABB4(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529BA18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529BA2C(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528AC38(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529BAAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529BAC0(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528ACB8(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529BB40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529BB54(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528AD48(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529BBD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529BBE8(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528ADDC(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529BC68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529BC7C(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528AE70(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529BCFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529BD10(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528AEF4(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529BD90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529BDA4(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528AF84(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529BE24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529BE38(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528B014(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529BEB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529BECC(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528B0A4(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529BF4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529BF60(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528B134(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529BFE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529BFF4(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528B1B8(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529C074(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529C088(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528B24C(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529C108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529C11C(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528B2D0(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529C19C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529C1B0(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528B370(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529C230(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529C244(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528B410(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529C2C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529C2D8(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528B4B4(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529C358(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529C36C(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528B558(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529C3EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529C400(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528B5D8(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529C480(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529C494(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528B660(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529C514(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529C528(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528B6F0(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529C5A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529C5BC(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528B780(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529C63C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529C650(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528B810(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529C6D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529C6E4(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528B8A0(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529C764(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529C778(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528B930(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529C7F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529C80C(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528B9C0(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529C88C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529C8A0(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528BA50(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529C920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529C934(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528BAD4(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529C9B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529C9C8(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528BB58(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529CA48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D529CA5C(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528BBD8(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529CAD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

BOOL sub_1D529CAE8(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BOOL8 v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528BC78(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529CB60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529CB74(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528BD00(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529CBF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1D529CC08(uint64_t a1@<X0>, double **a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v6);
  sub_1D528BD80(v6, a2);
  v3 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_1D529CC80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1D529CC94(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  sub_1D528C12C(v10, v3, v4, v5, v6, a2);
  v7 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_1D529CD0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1D529CD20(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  sub_1D528C3A0(v10, v3, v4, v5, v6, a2);
  v7 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_1D529CD98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1D529CDAC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  sub_1D528C514(v10, v3, v4, v5, v6, a2);
  v7 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_1D529CE24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529CE38(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528C5E8(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529CEB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529CECC(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528C668(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529CF4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529CF60(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528C6EC(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529CFE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529CFF4(uint64_t a1)
{
  double v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v6;
  std::__shared_weak_count *v7;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v6);
  v1 = sub_1D528C77C(v6);
  v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_1D529D074(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529D088(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528C824(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529D108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529D11C(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528C8B8(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529D19C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D529D1B0(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528C94C(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529D228(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529D23C(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528C9CC(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529D2BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529D2D0(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528CA60(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529D350(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529D364(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528CAF0(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529D3E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1D529D3F8(uint64_t a1)
{
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  void *exception;
  uint64_t v10;
  std::__shared_weak_count *v11;

  if ((*(int (**)(uint64_t))(*(_QWORD *)a1 + 120))(a1) <= 6)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)a1 + 152))(&v10, a1);
  sub_1D528CB80(v10, v2, v3, v4, v5);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  (*(double (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)a1 + 2664))(a1, 0, 0);
}

void sub_1D529D4E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1D529D50C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v6);
  sub_1D528CC10(v6, a2);
  v3 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_1D529D584(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D529D598(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528CCDC(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529D610(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529D624(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528CD5C(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529D6A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529D6B8(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528CDEC(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529D738(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529D74C(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528CE7C(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529D7CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D529D7E0(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528CEFC(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529D858(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529D86C(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528CF80(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529D8EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529D900(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528D010(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529D980(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529D994(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528D0A0(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529DA14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D529DA28(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528D130(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529DAA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D529DAB4(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v6;
  std::__shared_weak_count *v7;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v6);
  v1 = sub_1D528D1B0(v6);
  v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_1D529DB2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529DB40(uint64_t a1)
{
  double v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v6;
  std::__shared_weak_count *v7;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v6);
  v1 = sub_1D528D228(v6);
  v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_1D529DBC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529DBD4(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528D2A0(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529DC54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529DC68(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528D320(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529DCE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529DCFC(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528D3A0(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529DD7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D529DD90(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528D420(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529DE08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529DE1C(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528D4A0(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529DE9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529DEB0(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528D520(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529DF30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529DF44(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528D5A0(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529DFC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D529DFD8(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528D620(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529E050(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529E064(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528D6A0(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529E0E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529E0F8(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528D720(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529E178(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529E18C(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528D7A0(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529E20C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D529E220(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528D820(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529E298(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529E2AC(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528D8A0(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529E32C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529E340(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528D920(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529E3C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_1D529E3D4(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v10);
  v5 = sub_1D528D9A0(v10, v1, v2, v3, v4);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D529E454(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1D529E468(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 152))(&v6);
  sub_1D528DA20(v6, a2);
  v3 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_1D529E4E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

float sub_1D529E4F4(uint64_t a1)
{
  float v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v6;
  std::__shared_weak_count *v7;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 160))(&v6);
  v1 = (*(float (**)(uint64_t))(*(_QWORD *)v6 + 576))(v6);
  v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_1D529E57C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1D529E590(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

__int128 *sub_1D529E59C(uint64_t a1, __int128 *a2, __int128 *a3, uint64_t a4)
{
  __int128 *v5;
  __int128 v7;

  v5 = a2;
  if (a2 != a3)
  {
    do
    {
      if (*(char *)(a4 + 23) < 0)
        operator delete(*(void **)a4);
      v7 = *v5;
      *(_QWORD *)(a4 + 16) = *((_QWORD *)v5 + 2);
      *(_OWORD *)a4 = v7;
      a4 += 24;
      *((_BYTE *)v5 + 23) = 0;
      *(_BYTE *)v5 = 0;
      v5 = (__int128 *)((char *)v5 + 24);
    }
    while (v5 != a3);
    return a3;
  }
  return v5;
}

_QWORD *sub_1D529E60C(_QWORD *result, __int128 *a2)
{
  _QWORD *v2;
  uint64_t v3;
  __int128 v4;

  v2 = result;
  v3 = result[1];
  if (*((char *)a2 + 23) < 0)
  {
    result = sub_1D5290130((_BYTE *)result[1], *(void **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v4 = *a2;
    *(_QWORD *)(v3 + 16) = *((_QWORD *)a2 + 2);
    *(_OWORD *)v3 = v4;
  }
  v2[1] = v3 + 24;
  return result;
}

void sub_1D529E660(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_1D529E668(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  char v12;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = a2 + v6 - a4;
  v8 = v6;
  if (v7 < a3)
  {
    v9 = v7;
    v8 = *(_QWORD *)(a1 + 8);
    do
    {
      v10 = *(_OWORD *)v9;
      *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
      *(_OWORD *)v8 = v10;
      v8 += 24;
      *(_QWORD *)(v9 + 8) = 0;
      *(_QWORD *)(v9 + 16) = 0;
      *(_QWORD *)v9 = 0;
      v9 += 24;
    }
    while (v9 < a3);
  }
  *(_QWORD *)(a1 + 8) = v8;
  return sub_1D529E90C((uint64_t)&v12, a2, v7, v6);
}

_QWORD *sub_1D529E6D4(_QWORD *result, __int128 *a2)
{
  _QWORD *v3;
  uint64_t v4;
  __int128 *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  __int128 v25;
  int64x2_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  int64x2_t v30;
  uint64_t v31;
  uint64_t v32;

  v3 = result;
  v4 = result[2];
  if (v4 == result[3])
  {
    v5 = (__int128 *)result[1];
    if ((unint64_t)v5 <= *result)
    {
      v11 = v4 - *result;
      v10 = v11 == 0;
      v12 = 0x5555555555555556 * (v11 >> 3);
      if (v10)
        v13 = 1;
      else
        v13 = v12;
      v14 = v13 >> 2;
      v15 = result[4];
      v32 = v3[4];
      v16 = (char *)sub_1D5293DCC(v15, v13);
      v18 = &v16[24 * v14];
      v19 = v3[1];
      v20 = v3[2] - v19;
      if (v20)
      {
        v21 = v20 / 24;
        v22 = &v18[24 * v21];
        v23 = 24 * v21;
        v24 = &v16[24 * v14];
        do
        {
          v25 = *(_OWORD *)v19;
          *((_QWORD *)v24 + 2) = *(_QWORD *)(v19 + 16);
          *(_OWORD *)v24 = v25;
          v24 += 24;
          *(_QWORD *)(v19 + 8) = 0;
          *(_QWORD *)(v19 + 16) = 0;
          *(_QWORD *)v19 = 0;
          v19 += 24;
          v23 -= 24;
        }
        while (v23);
        v26 = *(int64x2_t *)(v3 + 1);
      }
      else
      {
        v26 = vdupq_n_s64(v19);
        v22 = &v16[24 * v14];
      }
      v29 = *v3;
      *v3 = v16;
      v3[1] = v18;
      v30 = v26;
      v27 = v3[3];
      v3[2] = v22;
      v3[3] = &v16[24 * v17];
      v31 = v27;
      result = (_QWORD *)sub_1D5293F24((uint64_t)&v29);
      v4 = v3[2];
    }
    else
    {
      v6 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v5 - *result) >> 3);
      if (v6 >= -1)
        v7 = v6 + 1;
      else
        v7 = v6 + 2;
      v8 = -3 * (v7 >> 1);
      result = sub_1D529E59C((uint64_t)&v29, v5, (__int128 *)v4, (uint64_t)v5 - 24 * (v7 >> 1));
      v4 = v9;
      v3[1] += 8 * v8;
      v3[2] = v9;
    }
  }
  if (*((char *)a2 + 23) < 0)
  {
    result = sub_1D5290130((_BYTE *)v4, *(void **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v28 = *a2;
    *(_QWORD *)(v4 + 16) = *((_QWORD *)a2 + 2);
    *(_OWORD *)v4 = v28;
  }
  v3[2] += 24;
  return result;
}

uint64_t sub_1D529E85C(uint64_t a1, _QWORD *a2, __int128 *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a2[1];
  v7 = a1 + 16;
  sub_1D5293E10(a1 + 16, (uint64_t)a3, (uint64_t)a3, *(_QWORD *)a1, *(_QWORD *)a1, v6, v6);
  a2[1] = v8;
  a2[2] = sub_1D529E990(v7, a3, *(__int128 **)(a1 + 8), a2[2]);
  v9 = *(_QWORD *)a1;
  *(_QWORD *)a1 = a2[1];
  a2[1] = v9;
  v10 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = a2[2];
  a2[2] = v10;
  v11 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = a2[3];
  a2[3] = v11;
  *a2 = a2[1];
  return v6;
}

uint64_t sub_1D529E90C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  if (a3 != a2)
  {
    v6 = a3;
    do
    {
      v7 = a4 - 24;
      if (*(char *)(a4 - 1) < 0)
        operator delete(*(void **)v7);
      v8 = *(_OWORD *)(v6 - 24);
      *(_QWORD *)(v7 + 16) = *(_QWORD *)(v6 - 8);
      *(_OWORD *)v7 = v8;
      *(_BYTE *)(v6 - 1) = 0;
      *(_BYTE *)(v6 - 24) = 0;
      a4 = v7;
      v6 -= 24;
    }
    while (v6 != a2);
  }
  return a3;
}

uint64_t sub_1D529E990(uint64_t a1, __int128 *a2, __int128 *a3, uint64_t a4)
{
  uint64_t v4;
  __int128 v5;
  _QWORD v7[3];
  char v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a4;
  v10 = a4;
  v9 = a4;
  v7[0] = a1;
  v7[1] = &v9;
  v7[2] = &v10;
  if (a2 != a3)
  {
    do
    {
      v5 = *a2;
      *(_QWORD *)(v4 + 16) = *((_QWORD *)a2 + 2);
      *(_OWORD *)v4 = v5;
      v4 += 24;
      *((_QWORD *)a2 + 1) = 0;
      *((_QWORD *)a2 + 2) = 0;
      *(_QWORD *)a2 = 0;
      a2 = (__int128 *)((char *)a2 + 24);
    }
    while (a2 != a3);
    v10 = v4;
  }
  v8 = 1;
  sub_1D529EA0C((uint64_t)v7);
  return v4;
}

uint64_t sub_1D529EA0C(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_1D529EA40(a1);
  return a1;
}

void sub_1D529EA40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = **(_QWORD **)(a1 + 16);
  v2 = **(_QWORD **)(a1 + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 - 1) < 0)
      operator delete(*(void **)(v1 - 24));
    v1 -= 24;
  }
}

id sub_1D529EA84(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  void *v6;
  id v7;

  objc_msgSend_objectForKeyedSubscript_(a1, a2, (uint64_t)a2, a4, a5);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v6 = v5;
  else
    v6 = 0;
  v7 = v6;

  return v7;
}

void sub_1D529EADC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

_DWORD *sub_1D529EAEC(_DWORD *a1, double *a2)
{
  unint64_t v5;
  int v6;

  v5 = llround(*a2);
  sub_1D528594C(&v6, (uint64_t *)&v5);
  *a1 = v6;
  v5 = llround(a2[1]);
  sub_1D528594C(&v6, (uint64_t *)&v5);
  a1[1] = v6;
  return a1;
}

void *sub_1D529EB58(uint64_t a1)
{
  unint64_t v1;
  const std::nothrow_t *v2;
  void *result;
  BOOL v4;

  if (a1 < 1)
    return 0;
  if (a1 >= 0x555555555555555)
    v1 = 0x555555555555555;
  else
    v1 = a1;
  v2 = (const std::nothrow_t *)MEMORY[0x1E0DE4E10];
  while (1)
  {
    result = operator new(24 * v1, v2);
    if (result)
      break;
    v4 = v1 > 1;
    v1 >>= 1;
    if (!v4)
      return 0;
  }
  return result;
}

void sub_1D529EBC0(__n128 *a1, __n128 *a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  __n128 *v5;
  __n128 *v6;
  __n128 *v7;
  __n128 v8;
  int64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  __int8 *v16;
  uint64_t v17;
  __n128 *v18;
  __n128 *v19;
  __int128 v20;
  __n128 v21;
  _BOOL4 v22;
  void *v23;
  void *v24;
  int v25;
  uint64_t i;
  char *v27;
  void **v28;
  void **v29;
  __int128 v30;
  _BOOL4 v31;
  __n128 *v32;
  _BOOL4 v33;
  unint64_t v34;
  __n128 v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __n128 v42;
  _BOOL4 v43;
  int v44;
  __n128 v45;
  __n128 v46;
  uint64_t v47;
  char *v48;
  _BYTE *v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  _BYTE *v54;
  __int128 v55;
  uint64_t v56;
  void *v58[2];
  unint64_t v59;
  void *__dst[2];
  unint64_t v61;
  void *__p[2];
  uint64_t v63;
  void *v64[2];
  _BYTE v65[7];
  char v66;
  _DWORD v67[2];
  __n128 v68;
  unint64_t v69;
  __int128 v70;
  uint64_t v71;

  if (a3 < 2)
    return;
  v5 = a2;
  v6 = a1;
  if (a3 == 2)
  {
    v7 = (__n128 *)((char *)a2 - 24);
    if (a2[-1].n128_i8[15] < 0)
    {
      sub_1D5290130(__dst, (void *)a2[-2].n128_u64[1], a2[-1].n128_u64[0]);
    }
    else
    {
      v8 = *v7;
      v61 = a2[-1].n128_u64[1];
      *(__n128 *)__dst = v8;
    }
    if (v6[1].n128_i8[7] < 0)
    {
      sub_1D5290130(v58, (void *)v6->n128_u64[0], v6->n128_u64[1]);
    }
    else
    {
      v15 = *v6;
      v59 = v6[1].n128_u64[0];
      *(__n128 *)v58 = v15;
    }
    v33 = sub_1D529F1DC((uint64_t *)__dst, (uint64_t)v58);
    if (SHIBYTE(v59) < 0)
      operator delete(v58[0]);
    if (SHIBYTE(v61) < 0)
      operator delete(__dst[0]);
    if (v33)
    {
      v34 = v6[1].n128_u64[0];
      v35 = *v6;
      v36 = v5[-1].n128_u64[1];
      *v6 = *v7;
      v6[1].n128_u64[0] = v36;
      *v7 = v35;
      v5[-1].n128_u64[1] = v34;
    }
    return;
  }
  if ((uint64_t)a3 > 0)
  {
    v12 = a3 >> 1;
    v13 = (char *)a1 + 24 * (a3 >> 1);
    if ((uint64_t)a3 <= a5)
    {
      sub_1D529F314(a1, (__n128 *)((char *)a1 + 24 * (a3 >> 1)), a3 >> 1, a4);
      v37 = a4 + 24 * v12;
      sub_1D529F314((__n128 *)((char *)v6 + 24 * (a3 >> 1)), v5, a3 - v12, v37);
      v64[0] = (void *)a3;
      v38 = a4 + 24 * a3;
      v39 = v37;
      v40 = a4;
      while (v39 != v38)
      {
        if (*(char *)(v39 + 23) < 0)
        {
          sub_1D5290130(&v70, *(void **)v39, *(_QWORD *)(v39 + 8));
        }
        else
        {
          v41 = *(_OWORD *)v39;
          v71 = *(_QWORD *)(v39 + 16);
          v70 = v41;
        }
        if (*(char *)(v40 + 23) < 0)
        {
          sub_1D5290130(&v68, *(void **)v40, *(_QWORD *)(v40 + 8));
        }
        else
        {
          v42 = *(__n128 *)v40;
          v69 = *(_QWORD *)(v40 + 16);
          v68 = v42;
        }
        v43 = sub_1D529F1DC((uint64_t *)&v70, (uint64_t)&v68);
        if (SHIBYTE(v69) < 0)
          operator delete((void *)v68.n128_u64[0]);
        if (SHIBYTE(v71) < 0)
          operator delete((void *)v70);
        v44 = v6[1].n128_i8[7];
        if (v43)
        {
          if (v44 < 0)
            operator delete((void *)v6->n128_u64[0]);
          v45 = *(__n128 *)v39;
          v6[1].n128_u64[0] = *(_QWORD *)(v39 + 16);
          *v6 = v45;
          *(_BYTE *)(v39 + 23) = 0;
          *(_BYTE *)v39 = 0;
          v39 += 24;
        }
        else
        {
          if (v44 < 0)
            operator delete((void *)v6->n128_u64[0]);
          v46 = *(__n128 *)v40;
          v6[1].n128_u64[0] = *(_QWORD *)(v40 + 16);
          *v6 = v46;
          *(_BYTE *)(v40 + 23) = 0;
          *(_BYTE *)v40 = 0;
          v40 += 24;
        }
        v6 = (__n128 *)((char *)v6 + 24);
        if (v40 == v37)
        {
          if (v39 != v38)
          {
            v47 = 0;
            do
            {
              v48 = (char *)v6 + v47;
              if (v6[1].n128_i8[v47 + 7] < 0)
                operator delete(*(void **)v48);
              v49 = (_BYTE *)(v39 + v47);
              v50 = *(_OWORD *)(v39 + v47);
              *((_QWORD *)v48 + 2) = *(_QWORD *)(v39 + v47 + 16);
              *(_OWORD *)v48 = v50;
              v49[23] = 0;
              *v49 = 0;
              v51 = v39 + v47 + 24;
              v47 += 24;
            }
            while (v51 != v38);
          }
          goto LABEL_88;
        }
      }
      if (v40 != v37)
      {
        v52 = 0;
        do
        {
          v53 = (char *)v6 + v52;
          if (v6[1].n128_i8[v52 + 7] < 0)
            operator delete(*(void **)v53);
          v54 = (_BYTE *)(v40 + v52);
          v55 = *(_OWORD *)(v40 + v52);
          *((_QWORD *)v53 + 2) = *(_QWORD *)(v40 + v52 + 16);
          *(_OWORD *)v53 = v55;
          v54[23] = 0;
          *v54 = 0;
          v56 = v40 + v52 + 24;
          v52 += 24;
        }
        while (v56 != v37);
      }
LABEL_88:
      if (a4)
        sub_1D52A0150((unint64_t *)v64, a4);
    }
    else
    {
      sub_1D529EBC0(a1, (char *)a1 + 24 * (a3 >> 1), a3 >> 1, a4, a5);
      v14 = a3 - v12;
      sub_1D529EBC0(v13, v5, v14, a4, a5);
      sub_1D529F938((__int128 *)v6, v13, (uint64_t)v5, v12, v14, a4, a5);
    }
    return;
  }
  if (a1 == a2)
    return;
  v16 = &a1[1].n128_i8[8];
  if (&a1[1].n128_i8[8] == (__int8 *)a2)
    return;
  v17 = 0;
  v18 = a1;
  do
  {
    v19 = (__n128 *)v16;
    if (v18[2].n128_i8[15] < 0)
    {
      sub_1D5290130(&v70, *(void **)v16, v18[2].n128_u64[0]);
    }
    else
    {
      v20 = *(_OWORD *)v16;
      v71 = *((_QWORD *)v16 + 2);
      v70 = v20;
    }
    if (v18[1].n128_i8[7] < 0)
    {
      sub_1D5290130(&v68, (void *)v18->n128_u64[0], v18->n128_u64[1]);
    }
    else
    {
      v21 = *v18;
      v69 = v18[1].n128_u64[0];
      v68 = v21;
    }
    v22 = sub_1D529F1DC((uint64_t *)&v70, (uint64_t)&v68);
    if (SHIBYTE(v69) < 0)
      operator delete((void *)v68.n128_u64[0]);
    if (SHIBYTE(v71) < 0)
    {
      operator delete((void *)v70);
      if (!v22)
        goto LABEL_48;
    }
    else if (!v22)
    {
      goto LABEL_48;
    }
    v23 = (void *)v19->n128_u64[0];
    v24 = (void *)v18[2].n128_u64[0];
    v67[0] = v18[2].n128_u32[2];
    *(_DWORD *)((char *)v67 + 3) = *(unsigned __int32 *)((char *)&v18[2].n128_u32[2] + 3);
    v25 = v18[2].n128_i8[15];
    v19->n128_u64[1] = 0;
    v19[1].n128_u64[0] = 0;
    v19->n128_u64[0] = 0;
    for (i = v17; ; i -= 24)
    {
      v27 = (char *)v6 + i;
      v28 = (void **)((char *)&v6[1].n128_u64[1] + i);
      if (v6[2].n128_i8[i + 15] < 0)
        operator delete(*v28);
      *(_OWORD *)v28 = *(_OWORD *)v27;
      *(unint64_t *)((char *)&v6[2].n128_u64[1] + i) = *((_QWORD *)v27 + 2);
      v27[23] = 0;
      *v27 = 0;
      if (!i)
      {
        v32 = v6;
        goto LABEL_47;
      }
      if (v25 < 0)
      {
        sub_1D5290130(v64, v23, (unint64_t)v24);
      }
      else
      {
        v64[0] = v23;
        v64[1] = v24;
        *(_DWORD *)v65 = v67[0];
        *(_DWORD *)&v65[3] = *(_DWORD *)((char *)v67 + 3);
        v66 = v25;
      }
      v29 = (void **)((char *)&v6[-1] + i - 8);
      if (v6->n128_i8[i - 1] < 0)
      {
        sub_1D5290130(__p, *v29, *(unint64_t *)((char *)v6[-1].n128_u64 + i));
      }
      else
      {
        v30 = *(_OWORD *)v29;
        v63 = *(uint64_t *)((char *)&v6->n128_i64[-1] + i);
        *(_OWORD *)__p = v30;
      }
      v31 = sub_1D529F1DC((uint64_t *)v64, (uint64_t)__p);
      if (SHIBYTE(v63) < 0)
        operator delete(__p[0]);
      if (v66 < 0)
        break;
      if (!v31)
        goto LABEL_45;
LABEL_43:
      ;
    }
    operator delete(v64[0]);
    if (v31)
      goto LABEL_43;
LABEL_45:
    v32 = (__n128 *)((char *)v6 + i);
    if (v6[1].n128_i8[i + 7] < 0)
      operator delete((void *)v32->n128_u64[0]);
LABEL_47:
    v32->n128_u64[0] = (unint64_t)v23;
    v32->n128_u64[1] = (unint64_t)v24;
    v32[1].n128_u32[0] = v67[0];
    *(unsigned __int32 *)((char *)v32[1].n128_u32 + 3) = *(_DWORD *)((char *)v67 + 3);
    v32[1].n128_u8[7] = v25;
    v5 = a2;
LABEL_48:
    v16 = &v19[1].n128_i8[8];
    v17 += 24;
    v18 = v19;
  }
  while (&v19[1].n128_i8[8] != (__int8 *)v5);
}

void sub_1D529F150(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  if (a20 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL sub_1D529F1DC(uint64_t *a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  int v5;
  const char *v6;
  uint64_t v7;
  int v8;
  _QWORD *v9;
  char *v10;
  void *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int64_t v15;
  char *v16;
  void *v17;
  char *v18;
  _BOOL4 v22;

  v3 = a1;
  v4 = *((unsigned __int8 *)a1 + 23);
  if (*((char *)a1 + 23) < 0)
    a1 = (uint64_t *)*a1;
  v5 = atoi((const char *)a1);
  v6 = (const char *)a2;
  if (*(char *)(a2 + 23) < 0)
    v6 = *(const char **)a2;
  v7 = *(unsigned __int8 *)(a2 + 23);
  v8 = atoi(v6);
  if ((v4 & 0x80) != 0)
  {
    v9 = v3;
    v3 = (_QWORD *)*v3;
    v4 = v9[1];
  }
  v10 = (char *)v3 + v4;
  if (v4 >= 4)
  {
    v11 = v3;
    do
    {
      v12 = (char *)memchr(v11, 46, v4 - 3);
      if (!v12)
        break;
      v13 = v12;
      if (*(_DWORD *)v12 == 1735287854)
        goto LABEL_13;
      v11 = v12 + 1;
      v4 = v10 - (v13 + 1);
    }
    while (v4 > 3);
  }
  v13 = v10;
LABEL_13:
  if ((v7 & 0x80) != 0)
  {
    v14 = a2;
    a2 = *(_QWORD *)a2;
    v7 = *(_QWORD *)(v14 + 8);
  }
  v15 = v13 - (char *)v3;
  v16 = (char *)(a2 + v7);
  if (v7 >= 4)
  {
    v17 = (void *)a2;
    do
    {
      v18 = (char *)memchr(v17, 46, v7 - 3);
      if (!v18)
        break;
      if (*(_DWORD *)v18 == 1735287854)
        goto LABEL_21;
      v17 = v18 + 1;
      v7 = v16 - (_BYTE *)v17;
    }
    while (v16 - (_BYTE *)v17 > 3);
  }
  v18 = v16;
LABEL_21:
  v22 = (v13 == v10 || v15 == -1) && v18 != v16 && &v18[-a2 + 1] != 0;
  if (v5 == v8)
    return v22;
  else
    return v5 > v8;
}

__n128 sub_1D529F314(__n128 *a1, __n128 *a2, unint64_t a3, uint64_t a4)
{
  __n128 *v6;
  __n128 *v7;
  __n128 result;
  __int128 v9;
  __int8 *v10;
  uint64_t v11;
  __n128 *v12;
  __n128 *v13;
  __n128 v14;
  _BOOL4 v15;
  __n128 *v16;
  __n128 *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  void **v21;
  _BOOL4 v22;
  uint64_t v23;
  __n128 *v24;
  uint64_t v25;
  __n128 *v26;
  __n128 *v27;
  __n128 v28;
  __n128 v29;
  _BOOL4 v30;
  unint64_t v31;
  char *v32;
  __n128 *v33;
  __n128 v34;
  _BOOL4 v35;
  __n128 *v36;
  __n128 *v37;
  __n128 v38;
  uint64_t v39;
  __n128 *v40;
  unint64_t *v41;
  uint64_t v43;
  void *v44[2];
  unint64_t v45;
  void *v46[2];
  unint64_t v47;
  void *v48[2];
  uint64_t v49;
  void *v50[2];
  uint64_t v51;
  void *__p[2];
  unint64_t v53;
  __n128 __dst;
  uint64_t v55;

  if (!a3)
    return result;
  v6 = a2;
  v7 = a1;
  if (a3 == 2)
  {
    __dst.n128_u64[0] = 0;
    if (a2[-1].n128_i8[15] < 0)
    {
      sub_1D5290130(v46, (void *)a2[-2].n128_u64[1], a2[-1].n128_u64[0]);
    }
    else
    {
      v9 = *(__int128 *)((char *)&a2[-2] + 8);
      v47 = a2[-1].n128_u64[1];
      *(_OWORD *)v46 = v9;
    }
    if (v7[1].n128_i8[7] < 0)
    {
      sub_1D5290130(v44, (void *)v7->n128_u64[0], v7->n128_u64[1]);
    }
    else
    {
      v34 = *v7;
      v45 = v7[1].n128_u64[0];
      *(__n128 *)v44 = v34;
    }
    v35 = sub_1D529F1DC((uint64_t *)v46, (uint64_t)v44);
    if (SHIBYTE(v45) < 0)
      operator delete(v44[0]);
    if (SHIBYTE(v47) < 0)
      operator delete(v46[0]);
    if (v35)
      v36 = (__n128 *)((char *)v6 - 24);
    else
      v36 = v7;
    if (v35)
      v37 = v7;
    else
      v37 = (__n128 *)((char *)v6 - 24);
    v38 = *v36;
    *(_QWORD *)(a4 + 16) = v36[1].n128_u64[0];
    *(__n128 *)a4 = v38;
    v36->n128_u64[1] = 0;
    v36[1].n128_u64[0] = 0;
    v36->n128_u64[0] = 0;
    result = *v37;
    *(_QWORD *)(a4 + 40) = v37[1].n128_u64[0];
    *(__n128 *)(a4 + 24) = result;
    v37->n128_u64[1] = 0;
    v37[1].n128_u64[0] = 0;
    v37->n128_u64[0] = 0;
    return result;
  }
  if (a3 == 1)
  {
    result = *a1;
    *(_QWORD *)(a4 + 16) = a1[1].n128_u64[0];
    *(__n128 *)a4 = result;
    a1->n128_u64[1] = 0;
    a1[1].n128_u64[0] = 0;
    a1->n128_u64[0] = 0;
    return result;
  }
  if ((uint64_t)a3 > 8)
  {
    v24 = (__n128 *)((char *)a1 + 24 * (a3 >> 1));
    sub_1D529EBC0(a1, v24, a3 >> 1, a4, a3 >> 1);
    sub_1D529EBC0((char *)v7 + 24 * (a3 >> 1), v6, a3 - (a3 >> 1), a4 + 24 * (a3 >> 1), a3 - (a3 >> 1));
    v25 = 0;
    v26 = (__n128 *)a4;
    v27 = (__n128 *)((char *)v7 + 24 * (a3 >> 1));
    while (1)
    {
      if (v27 == v6)
      {
        if (v7 != v24)
        {
          v39 = 0;
          do
          {
            v40 = (__n128 *)((char *)v26 + v39 * 8);
            v41 = &v7->n128_u64[v39];
            result = *(__n128 *)((char *)v7 + v39 * 8);
            v40[1].n128_u64[0] = v7[1].n128_u64[v39];
            *v40 = result;
            v41[1] = 0;
            v41[2] = 0;
            *v41 = 0;
            v39 += 3;
          }
          while ((__n128 *)((char *)v7 + v39 * 8) != v24);
        }
        return result;
      }
      if (v27[1].n128_i8[7] < 0)
      {
        sub_1D5290130(&__dst, (void *)v27->n128_u64[0], v27->n128_u64[1]);
      }
      else
      {
        v28 = *v27;
        v55 = v27[1].n128_i64[0];
        __dst = v28;
      }
      if (v7[1].n128_i8[7] < 0)
      {
        sub_1D5290130(__p, (void *)v7->n128_u64[0], v7->n128_u64[1]);
      }
      else
      {
        v29 = *v7;
        v53 = v7[1].n128_u64[0];
        *(__n128 *)__p = v29;
      }
      v30 = sub_1D529F1DC((uint64_t *)&__dst, (uint64_t)__p);
      if (SHIBYTE(v53) < 0)
        operator delete(__p[0]);
      if (SHIBYTE(v55) < 0)
      {
        operator delete((void *)__dst.n128_u64[0]);
        if (!v30)
        {
LABEL_62:
          result = *v7;
          v26[1].n128_u64[0] = v7[1].n128_u64[0];
          *v26 = result;
          v7->n128_u64[1] = 0;
          v7[1].n128_u64[0] = 0;
          v7->n128_u64[0] = 0;
          v7 = (__n128 *)((char *)v7 + 24);
          goto LABEL_63;
        }
      }
      else if (!v30)
      {
        goto LABEL_62;
      }
      result = *v27;
      v26[1].n128_u64[0] = v27[1].n128_u64[0];
      *v26 = result;
      v27->n128_u64[1] = 0;
      v27[1].n128_u64[0] = 0;
      v27->n128_u64[0] = 0;
      v27 = (__n128 *)((char *)v27 + 24);
LABEL_63:
      ++v25;
      v26 = (__n128 *)((char *)v26 + 24);
      if (v7 == v24)
      {
        if (v27 != v6)
        {
          v31 = 0;
          do
          {
            v32 = (char *)v27 + v31;
            v33 = (__n128 *)((char *)v26 + v31);
            result = *(__n128 *)((char *)v27 + v31);
            v33[1].n128_u64[0] = v27[1].n128_u64[v31 / 8];
            *v33 = result;
            *((_QWORD *)v32 + 1) = 0;
            *((_QWORD *)v32 + 2) = 0;
            *(_QWORD *)v32 = 0;
            v31 += 24;
          }
          while ((__n128 *)((char *)v27 + v31) != v6);
        }
        return result;
      }
    }
  }
  if (a1 == a2)
    return result;
  result = *a1;
  *(_QWORD *)(a4 + 16) = a1[1].n128_u64[0];
  *(__n128 *)a4 = result;
  a1->n128_u64[1] = 0;
  a1[1].n128_u64[0] = 0;
  a1->n128_u64[0] = 0;
  v10 = &a1[1].n128_i8[8];
  if (&a1[1].n128_i8[8] == (__int8 *)a2)
    return result;
  v11 = 0;
  v43 = 1;
  v12 = (__n128 *)a4;
  do
  {
    v13 = (__n128 *)v10;
    if (v7[2].n128_i8[15] < 0)
    {
      sub_1D5290130(&__dst, *(void **)v10, v7[2].n128_u64[0]);
    }
    else
    {
      v14 = *(__n128 *)v10;
      v55 = *((_QWORD *)v10 + 2);
      __dst = v14;
    }
    if (v12[1].n128_i8[7] < 0)
    {
      sub_1D5290130(__p, (void *)v12->n128_u64[0], v12->n128_u64[1]);
    }
    else
    {
      *(__n128 *)__p = *v12;
      v53 = v12[1].n128_u64[0];
    }
    v15 = sub_1D529F1DC((uint64_t *)&__dst, (uint64_t)__p);
    if (SHIBYTE(v53) < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v55) < 0)
      operator delete((void *)__dst.n128_u64[0]);
    v16 = (__n128 *)((char *)v12 + 24);
    ++v43;
    if (!v15)
    {
      result = *v13;
      v12[2].n128_u64[1] = v13[1].n128_u64[0];
      *v16 = result;
      v13->n128_u64[1] = 0;
      v13[1].n128_u64[0] = 0;
      v13->n128_u64[0] = 0;
      goto LABEL_46;
    }
    *v16 = *v12;
    v12[2].n128_u64[1] = v12[1].n128_u64[0];
    v12->n128_u64[1] = 0;
    v12[1].n128_u64[0] = 0;
    v12->n128_u64[0] = 0;
    v17 = (__n128 *)a4;
    if (v12 == (__n128 *)a4)
      goto LABEL_43;
    v18 = v11;
    while (1)
    {
      if (v7[2].n128_i8[15] < 0)
      {
        sub_1D5290130(v50, (void *)v13->n128_u64[0], v7[2].n128_u64[0]);
      }
      else
      {
        v19 = *v13;
        v51 = v13[1].n128_i64[0];
        *(__n128 *)v50 = v19;
      }
      v20 = a4 + v18;
      v21 = (void **)(a4 + v18 - 24);
      if (*(char *)(a4 + v18 - 1) < 0)
      {
        sub_1D5290130(v48, *v21, *(_QWORD *)(v20 - 16));
      }
      else
      {
        *(_OWORD *)v48 = *(_OWORD *)v21;
        v49 = *(_QWORD *)(a4 + v18 - 8);
      }
      v22 = sub_1D529F1DC((uint64_t *)v50, (uint64_t)v48);
      if (SHIBYTE(v49) < 0)
        operator delete(v48[0]);
      if ((SHIBYTE(v51) & 0x80000000) == 0)
      {
        if (!v22)
        {
          v17 = (__n128 *)(a4 + v18);
          goto LABEL_42;
        }
        goto LABEL_36;
      }
      operator delete(v50[0]);
      if (!v22)
        break;
LABEL_36:
      v23 = a4 + v18;
      if (*(char *)(a4 + v18 + 23) < 0)
        operator delete(*(void **)v23);
      v12 = (__n128 *)((char *)v12 - 24);
      *(_OWORD *)v23 = *(_OWORD *)v21;
      *(_QWORD *)(v23 + 16) = *(_QWORD *)(a4 + v18 - 8);
      *(_BYTE *)(v20 - 1) = 0;
      *(_BYTE *)v21 = 0;
      v18 -= 24;
      if (!v18)
      {
        v17 = (__n128 *)a4;
        goto LABEL_42;
      }
    }
    v17 = v12;
LABEL_42:
    v6 = a2;
LABEL_43:
    if (v17[1].n128_i8[7] < 0)
      operator delete((void *)v17->n128_u64[0]);
    result = *v13;
    v17[1].n128_u64[0] = v13[1].n128_u64[0];
    *v17 = result;
    v7[2].n128_u8[15] = 0;
    v13->n128_u8[0] = 0;
LABEL_46:
    v10 = &v13[1].n128_i8[8];
    v11 += 24;
    v12 = v16;
    v7 = v13;
  }
  while (&v13[1].n128_i8[8] != (__int8 *)v6);
  return result;
}

void sub_1D529F84C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  uint64_t v31;
  uint64_t v32;

  if (a20 < 0)
    operator delete(__p);
  if (v31)
    sub_1D52A0150((unint64_t *)(v32 - 112), v31);
  _Unwind_Resume(exception_object);
}

void sub_1D529F938(__int128 *a1, char *a2, uint64_t a3, int64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  BOOL v17;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  unint64_t v23;
  __int128 v24;
  char *v25;
  __int128 v26;
  _BOOL4 v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  __int128 v35;
  __int128 v36;
  _BOOL4 v37;
  __int128 *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  __int128 v49;
  __int128 v50;
  _BOOL4 v51;
  BOOL v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  __int128 v59;
  __int128 *v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  _BOOL4 v64;
  int v65;
  __int128 v66;
  __int128 v67;
  char *v68;
  __int128 v69;
  __int128 v70;
  unint64_t i;
  __int128 *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 *v78;
  __int128 *v79;
  uint64_t v80;
  void *__p[2];
  uint64_t v82;
  void *__dst[2];
  uint64_t v84;
  char v85;
  void *v86[2];
  uint64_t v87;
  __int128 v88;
  uint64_t v89;

  v80 = a5;
  if (a5)
  {
    while (v80 > a7 && a4 > a7)
    {
      if (!a4)
        return;
      v13 = 0;
      v14 = -a4;
      while (1)
      {
        if (a2[23] < 0)
        {
          sub_1D5290130(__dst, *(void **)a2, *((_QWORD *)a2 + 1));
        }
        else
        {
          v15 = *(_OWORD *)a2;
          v84 = *((_QWORD *)a2 + 2);
          *(_OWORD *)__dst = v15;
        }
        if (*((char *)a1 + v13 + 23) < 0)
        {
          sub_1D5290130(__p, *(void **)((char *)a1 + v13), *(_QWORD *)((char *)a1 + v13 + 8));
        }
        else
        {
          v16 = *(__int128 *)((char *)a1 + v13);
          v82 = *(_QWORD *)((char *)a1 + v13 + 16);
          *(_OWORD *)__p = v16;
        }
        v17 = sub_1D529F1DC((uint64_t *)__dst, (uint64_t)__p);
        if (SHIBYTE(v82) < 0)
          operator delete(__p[0]);
        if (SHIBYTE(v84) < 0)
          operator delete(__dst[0]);
        if (v17)
          break;
        v13 += 24;
        if (__CFADD__(v14++, 1))
          return;
      }
      v19 = -v14;
      v72 = (__int128 *)((char *)a1 + v13);
      v75 = a6;
      v77 = a3;
      v78 = a1;
      v74 = a7;
      if (-v14 >= v80)
      {
        if (v14 == -1)
        {
          v68 = (char *)a1 + v13;
          v69 = *(__int128 *)((char *)a1 + v13);
          v89 = *(_QWORD *)((char *)a1 + v13 + 16);
          v88 = v69;
          v70 = *(_OWORD *)a2;
          *((_QWORD *)v68 + 2) = *((_QWORD *)a2 + 2);
          *(_OWORD *)v68 = v70;
          *(_OWORD *)a2 = v88;
          *((_QWORD *)a2 + 2) = v89;
          return;
        }
        if (v14 > 0)
          v19 = 1 - v14;
        v29 = v19 >> 1;
        v30 = (char *)a1 + 24 * (v19 >> 1);
        v28 = v29;
        v22 = &v30[v13];
        v31 = a3;
        v21 = a2;
        if (a2 != (char *)v31)
        {
          v32 = 0xAAAAAAAAAAAAAAABLL * ((v77 - (uint64_t)a2) >> 3);
          v33 = (uint64_t)v78 + 24 * v29 + v13;
          v21 = a2;
          do
          {
            v34 = &v21[24 * (v32 >> 1)];
            if (v34[23] < 0)
            {
              sub_1D5290130(&v88, *(void **)v34, *((_QWORD *)v34 + 1));
            }
            else
            {
              v35 = *(_OWORD *)v34;
              v89 = *((_QWORD *)v34 + 2);
              v88 = v35;
            }
            if (*(char *)(v33 + 23) < 0)
            {
              sub_1D5290130(v86, *(void **)v22, *(_QWORD *)(v33 + 8));
            }
            else
            {
              v36 = *(_OWORD *)v22;
              v87 = *((_QWORD *)v22 + 2);
              *(_OWORD *)v86 = v36;
            }
            v37 = sub_1D529F1DC((uint64_t *)&v88, (uint64_t)v86);
            if (SHIBYTE(v87) < 0)
              operator delete(v86[0]);
            if (SHIBYTE(v89) < 0)
              operator delete((void *)v88);
            if (v37)
              v32 += ~(v32 >> 1);
            else
              v32 >>= 1;
            if (v37)
              v21 = v34 + 24;
          }
          while (v32);
        }
        v73 = 0xAAAAAAAAAAAAAAABLL * ((v21 - a2) >> 3);
      }
      else
      {
        if (v80 >= 0)
          v20 = v80;
        else
          v20 = v80 + 1;
        v73 = v20 >> 1;
        v21 = &a2[24 * (v20 >> 1)];
        v22 = a2;
        if (a2 - (char *)a1 != v13)
        {
          v23 = 0xAAAAAAAAAAAAAAABLL * ((a2 - (char *)a1 - v13) >> 3);
          v22 = (char *)a1 + v13;
          do
          {
            if (v21[23] < 0)
            {
              sub_1D5290130(&v88, *(void **)v21, *((_QWORD *)v21 + 1));
            }
            else
            {
              v24 = *(_OWORD *)v21;
              v89 = *((_QWORD *)v21 + 2);
              v88 = v24;
            }
            v25 = &v22[24 * (v23 >> 1)];
            if (v25[23] < 0)
            {
              sub_1D5290130(v86, *(void **)v25, *((_QWORD *)v25 + 1));
            }
            else
            {
              v26 = *(_OWORD *)v25;
              v87 = *((_QWORD *)v25 + 2);
              *(_OWORD *)v86 = v26;
            }
            v27 = sub_1D529F1DC((uint64_t *)&v88, (uint64_t)v86);
            if (SHIBYTE(v87) < 0)
              operator delete(v86[0]);
            if (SHIBYTE(v89) < 0)
              operator delete((void *)v88);
            if (v27)
            {
              v23 >>= 1;
            }
            else
            {
              v22 = v25 + 24;
              v23 += ~(v23 >> 1);
            }
          }
          while (v23);
        }
        v28 = 0xAAAAAAAAAAAAAAABLL * ((v22 - (char *)v78 - v13) >> 3);
      }
      if (v22 == a2)
      {
        v38 = (__int128 *)v21;
      }
      else if (v21 == a2)
      {
        v38 = (__int128 *)v22;
      }
      else
      {
        v38 = sub_1D52A0228((__int128 *)v22, (__int128 *)a2, (__int128 *)v21);
      }
      a4 = -(uint64_t)(v28 + v14);
      v39 = v80 - v73;
      if ((uint64_t)(v28 + v73) >= (uint64_t)(v80 - (v28 + v73) - v14))
      {
        a6 = v75;
        sub_1D529F938(v38, v21, v77, -(uint64_t)(v28 + v14), v80 - v73, v75, v74);
        v39 = v73;
        a2 = v22;
        a7 = v74;
        a4 = v28;
        a3 = (uint64_t)v38;
        a1 = v72;
      }
      else
      {
        v40 = v22;
        a7 = v74;
        a6 = v75;
        sub_1D529F938((char *)v78 + v13, v40, v38, v28, v73, v75, v74);
        a1 = v38;
        a2 = v21;
        a3 = v77;
      }
      v80 = v39;
      if (!v39)
        return;
    }
    if (a4 <= v80)
    {
      if (a1 == (__int128 *)a2)
      {
        v42 = 0;
      }
      else
      {
        v55 = 0;
        v56 = (uint64_t)a1;
        v42 = 0;
        do
        {
          v57 = a6 + v55;
          v58 = (_QWORD *)((char *)a1 + v55);
          v59 = *(__int128 *)((char *)a1 + v55);
          *(_QWORD *)(v57 + 16) = *(_QWORD *)((char *)a1 + v55 + 16);
          *(_OWORD *)v57 = v59;
          v58[1] = 0;
          v58[2] = 0;
          *v58 = 0;
          ++v42;
          v55 += 24;
        }
        while ((char *)a1 + v55 != a2);
        if (v55)
        {
          v60 = (__int128 *)(a6 + v55);
          v61 = a6;
          while (a2 != (char *)a3)
          {
            if (a2[23] < 0)
            {
              sub_1D5290130(&v88, *(void **)a2, *((_QWORD *)a2 + 1));
            }
            else
            {
              v62 = *(_OWORD *)a2;
              v89 = *((_QWORD *)a2 + 2);
              v88 = v62;
            }
            if (*(char *)(v61 + 23) < 0)
            {
              sub_1D5290130(v86, *(void **)v61, *(_QWORD *)(v61 + 8));
            }
            else
            {
              v63 = *(_OWORD *)v61;
              v87 = *(_QWORD *)(v61 + 16);
              *(_OWORD *)v86 = v63;
            }
            v64 = sub_1D529F1DC((uint64_t *)&v88, (uint64_t)v86);
            if (SHIBYTE(v87) < 0)
              operator delete(v86[0]);
            if (SHIBYTE(v89) < 0)
              operator delete((void *)v88);
            v65 = *(char *)(v56 + 23);
            if (v64)
            {
              if (v65 < 0)
                operator delete(*(void **)v56);
              v66 = *(_OWORD *)a2;
              *(_QWORD *)(v56 + 16) = *((_QWORD *)a2 + 2);
              *(_OWORD *)v56 = v66;
              a2[23] = 0;
              *a2 = 0;
              a2 += 24;
            }
            else
            {
              if (v65 < 0)
                operator delete(*(void **)v56);
              v67 = *(_OWORD *)v61;
              *(_QWORD *)(v56 + 16) = *(_QWORD *)(v61 + 16);
              *(_OWORD *)v56 = v67;
              *(_BYTE *)(v61 + 23) = 0;
              *(_BYTE *)v61 = 0;
              v61 += 24;
            }
            v56 += 24;
            if (v60 == (__int128 *)v61)
              goto LABEL_129;
          }
          sub_1D529E59C((uint64_t)&v85, (__int128 *)v61, v60, v56);
        }
      }
    }
    else
    {
      if ((char *)a3 == a2)
        return;
      v79 = a1;
      v41 = 0;
      v42 = 0;
      do
      {
        v43 = a6 + v41;
        v44 = &a2[v41];
        v45 = *(_OWORD *)&a2[v41];
        *(_QWORD *)(v43 + 16) = *(_QWORD *)&a2[v41 + 16];
        *(_OWORD *)v43 = v45;
        *((_QWORD *)v44 + 1) = 0;
        *((_QWORD *)v44 + 2) = 0;
        *(_QWORD *)v44 = 0;
        ++v42;
        v41 += 24;
      }
      while (&a2[v41] != (char *)a3);
      if (v41)
      {
        v46 = a6 + v41;
        v47 = a3 - 24;
        v76 = a6;
        while (a2 != (char *)v79)
        {
          v48 = (char *)(v46 - 1);
          if (*(char *)(v46 - 1) < 0)
          {
            sub_1D5290130(&v88, *(void **)(v46 - 24), *(_QWORD *)(v46 - 16));
          }
          else
          {
            v49 = *(_OWORD *)(v46 - 24);
            v89 = *(_QWORD *)(v46 - 8);
            v88 = v49;
          }
          if (*(a2 - 1) < 0)
          {
            sub_1D5290130(v86, *((void **)a2 - 3), *((_QWORD *)a2 - 2));
          }
          else
          {
            v50 = *(_OWORD *)(a2 - 24);
            v87 = *((_QWORD *)a2 - 1);
            *(_OWORD *)v86 = v50;
          }
          v51 = sub_1D529F1DC((uint64_t *)&v88, (uint64_t)v86);
          if (SHIBYTE(v87) < 0)
            operator delete(v86[0]);
          if (SHIBYTE(v89) < 0)
            operator delete((void *)v88);
          v52 = !v51;
          if (v51)
            v53 = (uint64_t)(a2 - 24);
          else
            v53 = v46 - 24;
          if (v52)
          {
            v46 -= 24;
          }
          else
          {
            v48 = a2 - 1;
            a2 -= 24;
          }
          if (*(char *)(v47 + 23) < 0)
            operator delete(*(void **)v47);
          v54 = *(_OWORD *)v53;
          *(_QWORD *)(v47 + 16) = *(_QWORD *)(v53 + 16);
          *(_OWORD *)v47 = v54;
          v47 -= 24;
          *v48 = 0;
          *(_BYTE *)v53 = 0;
          a3 -= 24;
          a6 = v76;
          if (v46 == v76)
            goto LABEL_129;
        }
        sub_1D52A01A8((uint64_t)&v88, v46, a6, a3);
      }
    }
LABEL_129:
    if (a6 && v42)
    {
      for (i = 0; i < v42; ++i)
      {
        if (*(char *)(a6 + 23) < 0)
          operator delete(*(void **)a6);
        a6 += 24;
      }
    }
  }
}

void sub_1D52A00B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  uint64_t v26;
  unint64_t v27;
  unint64_t v29;
  uint64_t v30;

  if (v26)
  {
    v29 = 0;
    v30 = v26;
    do
    {
      if (*(char *)(v30 + 23) < 0)
        operator delete(*(void **)v30);
      ++v29;
      v30 += 24;
    }
    while (v29 < v27);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D52A0150(unint64_t *a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v5;

  v2 = *a1;
  if (*a1)
  {
    v5 = 0;
    do
    {
      if (*(char *)(a2 + 23) < 0)
      {
        operator delete(*(void **)a2);
        v2 = *a1;
      }
      ++v5;
      a2 += 24;
    }
    while (v5 < v2);
  }
}

uint64_t sub_1D52A01A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  __int128 v8;

  v4 = a4;
  v5 = a2;
  if (a2 != a3)
  {
    v7 = a4 - 24;
    do
    {
      if (*(char *)(v7 + 23) < 0)
        operator delete(*(void **)v7);
      v8 = *(_OWORD *)(v5 - 24);
      *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 - 8);
      *(_OWORD *)v7 = v8;
      v7 -= 24;
      *(_BYTE *)(v5 - 1) = 0;
      *(_BYTE *)(v5 - 24) = 0;
      v4 -= 24;
      v5 -= 24;
    }
    while (v5 != a3);
    return a3;
  }
  return v5;
}

__int128 *sub_1D52A0228(__int128 *a1, __int128 *a2, __int128 *a3)
{
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  __int128 *result;
  __int128 *i;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  __int128 *v11;
  __int128 *v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  v3 = *((_QWORD *)a1 + 2);
  v4 = *a1;
  v5 = *((_QWORD *)a2 + 2);
  *a1 = *a2;
  *((_QWORD *)a1 + 2) = v5;
  *a2 = v4;
  *((_QWORD *)a2 + 2) = v3;
  result = (__int128 *)((char *)a1 + 24);
  for (i = (__int128 *)((char *)a2 + 24); i != a3; i = (__int128 *)((char *)i + 24))
  {
    if (result == a2)
      a2 = i;
    v8 = *((_QWORD *)result + 2);
    v9 = *result;
    v10 = *((_QWORD *)i + 2);
    *result = *i;
    *((_QWORD *)result + 2) = v10;
    *i = v9;
    *((_QWORD *)i + 2) = v8;
    result = (__int128 *)((char *)result + 24);
  }
  if (result != a2)
  {
    v11 = result;
    v12 = a2;
    do
    {
      while (1)
      {
        v15 = *((_QWORD *)v11 + 2);
        v14 = *v11;
        v13 = *v12;
        *((_QWORD *)v11 + 2) = *((_QWORD *)v12 + 2);
        *v11 = v13;
        v11 = (__int128 *)((char *)v11 + 24);
        *((_QWORD *)v12 + 2) = v15;
        *v12 = v14;
        v12 = (__int128 *)((char *)v12 + 24);
        if (v12 == a3)
          break;
        if (v11 == a2)
          a2 = v12;
      }
      v12 = a2;
    }
    while (v11 != a2);
  }
  return result;
}

void sub_1D52A038C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1D52A05E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1D52A09F0(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_1D52A09FC(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_1D5281424(a1);
  _Unwind_Resume(a1);
}

void sub_1D52A0A18(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  os_signpost_id_t v4;
  uint8_t v5[16];

  sub_1D52EB19C();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = v2;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v3, OS_SIGNPOST_INTERVAL_END, v4, "RAWVignetteTable", (const char *)&unk_1D548AF1A, v5, 2u);
  }

}

double sub_1D52A0A9C(uint64_t a1, int a2)
{
  double result;

  if (a2)
    return 0.0;
  return result;
}

void sub_1D52A0BC4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1D52A0D08(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1D52A0E60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1D52A1150(_Unwind_Exception *exception_object, int a2)
{
  void (**v2)(_QWORD);
  void *v3;
  void *v4;
  void *v5;
  NSObject *v7;

  if (a2)
  {

    v2[2](v2);
    __cxa_begin_catch(exception_object);
    sub_1D540E834();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      sub_1D5444234();

    __cxa_end_catch();
    JUMPOUT(0x1D52A0F8CLL);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D52A1220(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  os_signpost_id_t v4;
  uint8_t v5[16];

  sub_1D52EB19C();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = v2;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v3, OS_SIGNPOST_INTERVAL_END, v4, "RAWLensCorrectionVignetteFilter", (const char *)&unk_1D548AF1A, v5, 2u);
  }

}

double sub_1D52A12A4(uint64_t a1, int a2)
{
  double result;

  if (a2 == 1)
    return 0.0;
  return result;
}

void sub_1D52A13D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1D52A1500(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1D52A19BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void (**v14)(_QWORD);
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  NSObject *v21;

  if (a2)
  {

    v14[2](v14);
    __cxa_begin_catch(exception_object);
    sub_1D540E834();
    v21 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
      sub_1D54442A4();

    __cxa_end_catch();
    JUMPOUT(0x1D52A1918);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D52A1ABC(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  os_signpost_id_t v4;
  uint8_t v5[16];

  sub_1D52EB19C();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = v2;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v3, OS_SIGNPOST_INTERVAL_END, v4, "RAWLensCorrectionLateralCAFilter", (const char *)&unk_1D548AF1A, v5, 2u);
  }

}

double sub_1D52A1B40(double a1, double a2, double a3, double a4, double a5, double a6, float a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  float v11;
  float v12;
  float v13;
  float v14;
  float v15;
  float v16;
  float v17;
  float v18;
  float v19;
  float v20;
  double v21;
  int v22;
  float v23;
  double v24;
  double v25;
  int v26;
  float v27;
  float v28;
  float v29;
  int v30;
  float *v31;
  int v32;
  uint64_t v33;
  float v34;
  float *v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float *v40;
  float v41;
  float v42;
  float v43;
  float v44;
  float v45;
  float v46;
  float v47;
  float v48;
  float v49;
  float v50;
  float v51;
  float v52;
  float v53;
  float v54;
  float v55;
  double result;
  CGRect v57;
  CGRect v58;
  CGRect v59;
  CGRect v60;

  v11 = a1;
  v12 = a2;
  v13 = a5;
  v14 = a6;
  v15 = v13 * 0.5;
  v16 = a3;
  v17 = a4;
  v18 = (float)((float)(v11 - v16) / v13) * (float)(a10 - 1);
  v19 = (float)(1.0 - (float)((float)(v12 - v17) / v14)) * (float)(a11 - 1);
  v20 = floorf(v18);
  v21 = (double)(a10 - 1);
  v22 = (int)fmin(fmax(v20, 0.0), v21);
  v23 = floorf(v19);
  v24 = (double)(a11 - 1);
  v25 = fmin(fmax(v23, 0.0), v24);
  v26 = (int)fmin(fmax((float)(v20 + 1.0), 0.0), v21);
  v27 = v14 * 0.5;
  v28 = v18 - (float)v22;
  v29 = v19 - (float)(int)v25;
  v30 = (int)v25 * a10;
  v31 = (float *)(a9 + 16 * (v30 + v22));
  v32 = (int)fmin(fmax((float)(v23 + 1.0), 0.0), v24) * a10;
  v33 = a9 + 16 * (v32 + v22);
  LODWORD(v21) = *(_DWORD *)v33;
  LODWORD(v25) = *(_DWORD *)(v33 + 4);
  LODWORD(v24) = *(_DWORD *)(v33 + 8);
  v34 = *(float *)(v33 + 12);
  v35 = (float *)(a9 + 16 * (v30 + v26));
  v36 = *v35;
  v37 = v35[1];
  v38 = v35[2];
  v39 = v35[3];
  v40 = (float *)(a9 + 16 * (v32 + v26));
  v41 = (float)((float)(1.0 - v28) * *v31) + (float)(v28 * v36);
  *(float *)&v21 = (float)(1.0 - v28) * *(float *)&v21;
  v42 = v28 * *v40;
  v43 = (float)(1.0 - v29) * (float)((float)((float)(1.0 - v28) * v31[1]) + (float)(v28 * v37));
  v44 = (float)(1.0 - v29) * (float)((float)((float)(1.0 - v28) * v31[2]) + (float)(v28 * v38));
  v45 = (float)(1.0 - v29) * (float)((float)((float)(1.0 - v28) * v31[3]) + (float)(v28 * v39));
  *(float *)&v25 = v29 * (float)((float)((float)(1.0 - v28) * *(float *)&v25) + (float)(v28 * v40[1]));
  *(float *)&v24 = v29 * (float)((float)((float)(1.0 - v28) * *(float *)&v24) + (float)(v28 * v40[2]));
  v46 = v29 * (float)((float)((float)(1.0 - v28) * v34) + (float)(v28 * v40[3]));
  v47 = (float)(v15
              * (float)((float)((float)((float)(1.0 - v29) * v41) + (float)(v29 * (float)(*(float *)&v21 + v42))) + 1.0))
      + v16;
  v48 = (float)(v27 * (float)((float)(v43 + *(float *)&v25) + 1.0)) + v17;
  v49 = (float)(v15 * (float)((float)(v44 + *(float *)&v24) + 1.0)) + v16;
  v50 = (float)(v27 * (float)((float)(v45 + v46) + 1.0)) + v17;
  v51 = (float)(1.0 - a7) * v11;
  v52 = (float)(1.0 - a7) * v12;
  v53 = v52 + (float)(v48 * a7);
  v54 = v51 + (float)(v49 * a7);
  v55 = v52 + (float)(v50 * a7);
  v57.origin.x = v11;
  v57.origin.y = v12;
  v59.origin.x = (float)(v51 + (float)(v47 * a7));
  v59.origin.y = v53;
  v57.size.width = 0.0;
  v57.size.height = 0.0;
  v59.size.width = 0.0;
  v59.size.height = 0.0;
  v58 = CGRectUnion(v57, v59);
  v60.origin.x = v54;
  v60.origin.y = v55;
  v60.size.width = 0.0;
  v60.size.height = 0.0;
  *(_QWORD *)&result = (unint64_t)CGRectUnion(v58, v60);
  return result;
}

double sub_1D52A1D90(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7, double a8, double a9)
{
  double v9;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  float v22;
  double v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat v35;
  CGFloat v36;
  CGFloat v37;
  CGFloat v38;
  CGFloat v39;
  CGFloat v40;
  CGFloat v41;
  CGFloat v42;
  CGFloat v43;
  CGFloat v44;
  CGFloat v45;
  CGFloat v46;
  CGFloat v47;
  float v51;
  CGRect v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;
  CGRect v58;
  CGRect v59;
  CGRect v60;
  CGRect v61;
  CGRect v62;
  CGRect v63;
  CGRect v64;
  CGRect v65;

  if ((int)a2 > 0)
    return a6;
  objc_msgSend_bytes(*(void **)(*(_QWORD *)(a1 + 32) + 96), a2, a3, a4, a5);
  objc_msgSend_intValue(*(void **)(*(_QWORD *)(a1 + 32) + 104), v11, v12, v13, v14);
  objc_msgSend_intValue(*(void **)(*(_QWORD *)(a1 + 32) + 112), v15, v16, v17, v18);
  v9 = *MEMORY[0x1E0C9D628];
  v19 = *(double *)(MEMORY[0x1E0C9D628] + 8);
  v21 = *(double *)(MEMORY[0x1E0C9D628] + 16);
  v20 = *(double *)(MEMORY[0x1E0C9D628] + 24);
  v22 = 0.0;
  v23 = 0.0;
  do
  {
    v51 = v22;
    v62.origin.x = (*(double (**)(double, double, double, double, double, double, float))(*(_QWORD *)(a1 + 40) + 16))(a6 + a8 * v23, a7, *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), *(float *)(a1 + 80));
    v62.origin.y = v24;
    v62.size.width = v25;
    v62.size.height = v26;
    v54.origin.x = v9;
    v54.origin.y = v19;
    v54.size.width = v21;
    v54.size.height = v20;
    v55 = CGRectUnion(v54, v62);
    x = v55.origin.x;
    y = v55.origin.y;
    width = v55.size.width;
    height = v55.size.height;
    v63.origin.x = (*(double (**)(double, double, double, double, double, double, float))(*(_QWORD *)(a1 + 40) + 16))(a6 + a8 * (1.0 - v23), a7 + a9, *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), *(float *)(a1 + 80));
    v63.origin.y = v31;
    v63.size.width = v32;
    v63.size.height = v33;
    v56.origin.x = x;
    v56.origin.y = y;
    v56.size.width = width;
    v56.size.height = height;
    v57 = CGRectUnion(v56, v63);
    v34 = v57.origin.x;
    v35 = v57.origin.y;
    v36 = v57.size.width;
    v37 = v57.size.height;
    v64.origin.x = (*(double (**)(double, double, double, double, double, double, float))(*(_QWORD *)(a1 + 40) + 16))(a6, a7 + a9 * (1.0 - v23), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), *(float *)(a1 + 80));
    v64.origin.y = v38;
    v64.size.width = v39;
    v64.size.height = v40;
    v58.origin.x = v34;
    v58.origin.y = v35;
    v58.size.width = v36;
    v58.size.height = v37;
    v59 = CGRectUnion(v58, v64);
    v41 = v59.origin.x;
    v42 = v59.origin.y;
    v43 = v59.size.width;
    v44 = v59.size.height;
    v65.origin.x = (*(double (**)(double, double, double, double, double, double, float))(*(_QWORD *)(a1 + 40) + 16))(a6 + a8, a7 + a9 * v23, *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), *(float *)(a1 + 80));
    v65.origin.y = v45;
    v65.size.width = v46;
    v65.size.height = v47;
    v60.origin.x = v41;
    v60.origin.y = v42;
    v60.size.width = v43;
    v60.size.height = v44;
    v61 = CGRectUnion(v60, v65);
    v9 = v61.origin.x;
    v19 = v61.origin.y;
    v21 = v61.size.width;
    v20 = v61.size.height;
    v22 = v51 + 0.125;
    v23 = (float)(v51 + 0.125);
  }
  while (v23 < 0.99999);
  return v9;
}

void sub_1D52A217C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1D52A22C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1D52A24A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1D52A28F0(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_1D52A28FC(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_1D5281424(a1);
  _Unwind_Resume(a1);
}

void sub_1D52A290C(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  JUMPOUT(0x1D52A286CLL);
}

void sub_1D52A2924(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  os_signpost_id_t v4;
  uint8_t v5[16];

  sub_1D52EB19C();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = v2;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v3, OS_SIGNPOST_INTERVAL_END, v4, "RAWLensCorrectionDistortionFilter", (const char *)&unk_1D548AF1A, v5, 2u);
  }

}

double sub_1D52A29A8(double a1, double a2, double a3, double a4, double a5, double a6, float a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  float v11;
  float v12;
  float v13;
  float v14;
  float v15;
  float v16;
  float v17;
  float v18;
  double v19;
  int v20;
  float v21;
  float v22;
  double v23;
  double v24;
  int v25;
  float v26;
  int v27;

  v11 = a1;
  v12 = a2;
  v13 = a5;
  v14 = a6;
  v15 = a3;
  v16 = a4;
  v17 = (float)((float)(v11 - v15) / v13) * (float)(a10 - 1);
  v18 = floorf(v17);
  v19 = (double)(a10 - 1);
  v20 = (int)fmin(fmax(v18, 0.0), v19);
  v21 = (float)(1.0 - (float)((float)(v12 - v16) / v14)) * (float)(a11 - 1);
  v22 = floorf(v21);
  v23 = (double)(a11 - 1);
  v24 = fmin(fmax(v22, 0.0), v23);
  v25 = (int)fmin(fmax((float)(v18 + 1.0), 0.0), v19);
  v26 = v17 - (float)v20;
  v27 = (int)fmin(fmax((float)(v22 + 1.0), 0.0), v23) * a10;
  return (float)((float)((float)(1.0 - a7) * v11)
               + (float)((float)((float)((float)(v13 * 0.5)
                                       * (float)((float)((float)((float)(1.0 - (float)(v21 - (float)(int)v24))
                                                               * (float)((float)((float)(1.0 - v26)
                                                                               * *(float *)(a9
                                                                                          + 8 * ((int)v24 * a10 + v20)))
                                                                       + (float)(v26
                                                                               * *(float *)(a9
                                                                                          + 8 * ((int)v24 * a10 + v25)))))
                                                       + (float)((float)(v21 - (float)(int)v24)
                                                               * (float)((float)((float)(1.0 - v26)
                                                                               * *(float *)(a9 + 8 * (v27 + v20)))
                                                                       + (float)(v26 * *(float *)(a9 + 8 * (v27 + v25))))))
                                               + 1.0))
                               + v15)
                       * a7));
}

double sub_1D52A2B38(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7, double a8, double a9)
{
  double v9;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  float v22;
  double v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat v35;
  CGFloat v36;
  CGFloat v37;
  CGFloat v38;
  CGFloat v39;
  CGFloat v40;
  CGFloat v41;
  CGFloat v42;
  CGFloat v43;
  CGFloat v44;
  CGFloat v45;
  CGFloat v46;
  CGFloat v47;
  float v51;
  CGRect v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;
  CGRect v58;
  CGRect v59;
  CGRect v60;
  CGRect v61;
  CGRect v62;
  CGRect v63;
  CGRect v64;
  CGRect v65;

  if ((int)a2 > 0)
    return a6;
  objc_msgSend_bytes(*(void **)(*(_QWORD *)(a1 + 32) + 96), a2, a3, a4, a5);
  objc_msgSend_intValue(*(void **)(*(_QWORD *)(a1 + 32) + 104), v11, v12, v13, v14);
  objc_msgSend_intValue(*(void **)(*(_QWORD *)(a1 + 32) + 112), v15, v16, v17, v18);
  v9 = *MEMORY[0x1E0C9D628];
  v19 = *(double *)(MEMORY[0x1E0C9D628] + 8);
  v21 = *(double *)(MEMORY[0x1E0C9D628] + 16);
  v20 = *(double *)(MEMORY[0x1E0C9D628] + 24);
  v22 = 0.0;
  v23 = 0.0;
  do
  {
    v51 = v22;
    v62.origin.x = (*(double (**)(double, double, double, double, double, double, float))(*(_QWORD *)(a1 + 40) + 16))(a6 + a8 * v23, a7, *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), *(float *)(a1 + 80));
    v62.origin.y = v24;
    v62.size.width = v25;
    v62.size.height = v26;
    v54.origin.x = v9;
    v54.origin.y = v19;
    v54.size.width = v21;
    v54.size.height = v20;
    v55 = CGRectUnion(v54, v62);
    x = v55.origin.x;
    y = v55.origin.y;
    width = v55.size.width;
    height = v55.size.height;
    v63.origin.x = (*(double (**)(double, double, double, double, double, double, float))(*(_QWORD *)(a1 + 40) + 16))(a6 + a8 * (1.0 - v23), a7 + a9, *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), *(float *)(a1 + 80));
    v63.origin.y = v31;
    v63.size.width = v32;
    v63.size.height = v33;
    v56.origin.x = x;
    v56.origin.y = y;
    v56.size.width = width;
    v56.size.height = height;
    v57 = CGRectUnion(v56, v63);
    v34 = v57.origin.x;
    v35 = v57.origin.y;
    v36 = v57.size.width;
    v37 = v57.size.height;
    v64.origin.x = (*(double (**)(double, double, double, double, double, double, float))(*(_QWORD *)(a1 + 40) + 16))(a6, a7 + a9 * (1.0 - v23), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), *(float *)(a1 + 80));
    v64.origin.y = v38;
    v64.size.width = v39;
    v64.size.height = v40;
    v58.origin.x = v34;
    v58.origin.y = v35;
    v58.size.width = v36;
    v58.size.height = v37;
    v59 = CGRectUnion(v58, v64);
    v41 = v59.origin.x;
    v42 = v59.origin.y;
    v43 = v59.size.width;
    v44 = v59.size.height;
    v65.origin.x = (*(double (**)(double, double, double, double, double, double, float))(*(_QWORD *)(a1 + 40) + 16))(a6 + a8, a7 + a9 * v23, *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), *(float *)(a1 + 80));
    v65.origin.y = v45;
    v65.size.width = v46;
    v65.size.height = v47;
    v60.origin.x = v41;
    v60.origin.y = v42;
    v60.size.width = v43;
    v60.size.height = v44;
    v61 = CGRectUnion(v60, v65);
    v9 = v61.origin.x;
    v19 = v61.origin.y;
    v21 = v61.size.width;
    v20 = v61.size.height;
    v22 = v51 + 0.125;
    v23 = (float)(v51 + 0.125);
  }
  while (v23 < 0.99999);
  return v9;
}

void sub_1D52A2E94(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void sub_1D52A2FA8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1D52A3024(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1D52A3148(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1D52A39F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object, uint64_t a11, uint64_t a12)
{
  void *v12;

  __cxa_guard_abort(&qword_1EFF32640);

  _Unwind_Resume(a1);
}

void sub_1D52A3C50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v13 = v12;

  _Unwind_Resume(a1);
}

void sub_1D52A410C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1D52A41FC(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  char isKindOfClass;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  const char *v27;
  char *v28;

  v5 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend_numberWithUnsignedInteger_(MEMORY[0x1E0CB37E8], v6, a3, v7, v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_stringValue(v9, v10, v11, v12, v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_dumpMemoryInfoKey_indent_(v5, v15, (uint64_t)v14, *(_QWORD *)(a1 + 40) + 1, v16);
    v28 = (char *)v5;
  }
  else
  {
    NSClassFromString(CFSTR("NSBlock"));
    isKindOfClass = objc_opt_isKindOfClass();
    v20 = (const char *)v5;
    if ((isKindOfClass & 1) != 0)
    {
      (*((void (**)(id, id))v5 + 2))(v5, v5);
      v21 = objc_claimAutoreleasedReturnValue();

      v20 = (const char *)v21;
    }
    v28 = (char *)v20;
    v22 = *(void **)(a1 + 32);
    objc_msgSend_numberWithUnsignedInteger_(MEMORY[0x1E0CB37E8], v20, a3, v18, v19);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_stringValue(v9, v23, v24, v25, v26);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_dumpObjCInfoKey_value_indent_(v22, v27, (uint64_t)v14, (uint64_t)v28, *(_QWORD *)(a1 + 40) + 1);
  }

}

void sub_1D52A4344(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1D52A4390(uint64_t a1, void *a2, void *a3)
{
  void (**v5)(_QWORD);
  const char *v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  id v10;

  v10 = a2;
  v5 = a3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    objc_msgSend_dumpMemoryInfoKey_indent_(v5, v6, (uint64_t)v10, *(_QWORD *)(a1 + 40) + 1, v7);

  NSClassFromString(CFSTR("NSBlock"));
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v5[2](v5);
    v9 = objc_claimAutoreleasedReturnValue();

    v5 = (void (**)(_QWORD))v9;
  }
  objc_msgSend_dumpObjCInfoKey_value_indent_(*(void **)(a1 + 32), v8, (uint64_t)v10, (uint64_t)v5, *(_QWORD *)(a1 + 40) + 1);

}

void sub_1D52A445C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1D52A4A74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{

  _Unwind_Resume(a1);
}

uint64_t sub_1D52A4BF4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return objc_msgSend_compare_(a2, (const char *)a2, a3, a4, a5);
}

uint64_t sub_1D52A4BFC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return objc_msgSend_compare_(a2, (const char *)a2, a3, a4, a5);
}

void sub_1D52A4D58(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1D52A4E20(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1D52A4F00(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

id sub_1D52A4FC8(uint64_t a1, uint64_t *a2, void *a3, void *a4)
{
  id v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  int v16;
  int v17;
  int v18;
  id v19;
  const char *v20;
  int v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const char *v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t *v32;
  unint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t *p_shared_owners;
  void *v44;
  const char *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  const char *v49;
  uint64_t v50;
  int v51;
  void *v52;
  const char *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  const char *v57;
  uint64_t v58;
  void *v59;
  const char *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  const char *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  const char *v68;
  uint64_t v69;
  void *v70;
  const char *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  const char *v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  const char *v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  const char *v83;
  uint64_t v84;
  void *v85;
  const char *v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  const char *v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  const char *v94;
  uint64_t v95;
  void *v96;
  const char *v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  const char *v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  const char *v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  const char *v109;
  uint64_t v110;
  int v111;
  int v112;
  void *v114;
  const char *v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  const char *v119;
  uint64_t v120;
  _QWORD v121[7];
  _QWORD v122[7];
  uint64_t v123;
  uint64_t *v124;
  uint64_t v125;
  __n128 (*v126)(__n128 *, __n128 *);
  uint64_t (*v127)(uint64_t);
  const char *v128;
  uint64_t v129;
  std::__shared_weak_count *v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  int v134;
  uint64_t v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t (*v138)(uint64_t, uint64_t);
  uint64_t (*v139)();
  const char *v140;
  int v141;
  _QWORD v142[2];
  _QWORD v143[2];
  _QWORD v144[4];
  _QWORD v145[3];
  _QWORD v146[2];
  _QWORD v147[4];
  _QWORD v148[3];
  _QWORD v149[3];

  v149[2] = *MEMORY[0x1E0C80C00];
  v7 = a3;
  v11 = a4;
  v13 = *(unsigned int *)(a1 + 4);
  if ((_DWORD)v13)
  {
    switch(*(_WORD *)(a1 + 2))
    {
      case 1:
        switch((int)v13)
        {
          case 1:
            objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v8, *(unsigned __int8 *)(a1 + 8), v13, v10);
            v14 = objc_claimAutoreleasedReturnValue();
            goto LABEL_57;
          case 2:
            objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v8, *(unsigned __int8 *)(a1 + 8), v13, v10);
            v52 = (void *)objc_claimAutoreleasedReturnValue();
            v146[0] = v52;
            objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v53, *(unsigned __int8 *)(a1 + 9), v54, v55);
            v56 = (void *)objc_claimAutoreleasedReturnValue();
            v146[1] = v56;
            objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v57, (uint64_t)v146, 2, v58);
            v15 = (void *)objc_claimAutoreleasedReturnValue();

            break;
          case 3:
            objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v8, *(unsigned __int8 *)(a1 + 8), v13, v10);
            v59 = (void *)objc_claimAutoreleasedReturnValue();
            v145[0] = v59;
            objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v60, *(unsigned __int8 *)(a1 + 9), v61, v62);
            v63 = (void *)objc_claimAutoreleasedReturnValue();
            v145[1] = v63;
            objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v64, *(unsigned __int8 *)(a1 + 10), v65, v66);
            v67 = (void *)objc_claimAutoreleasedReturnValue();
            v145[2] = v67;
            objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v68, (uint64_t)v145, 3, v69);
            v15 = (void *)objc_claimAutoreleasedReturnValue();

            break;
          case 4:
            objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v8, *(unsigned __int8 *)(a1 + 8), v13, v10);
            v70 = (void *)objc_claimAutoreleasedReturnValue();
            v144[0] = v70;
            objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v71, *(unsigned __int8 *)(a1 + 9), v72, v73);
            v74 = (void *)objc_claimAutoreleasedReturnValue();
            v144[1] = v74;
            objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v75, *(unsigned __int8 *)(a1 + 10), v76, v77);
            v78 = (void *)objc_claimAutoreleasedReturnValue();
            v144[2] = v78;
            objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v79, *(unsigned __int8 *)(a1 + 11), v80, v81);
            v82 = (void *)objc_claimAutoreleasedReturnValue();
            v144[3] = v82;
            objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v83, (uint64_t)v144, 4, v84);
            v15 = (void *)objc_claimAutoreleasedReturnValue();

            break;
          default:
            v111 = sub_1D52A5CC8(a1);
            sub_1D52A5D50(a1, a2, v111, *(_DWORD *)(a1 + 4), v7, v11);
            v14 = objc_claimAutoreleasedReturnValue();
            goto LABEL_57;
        }
        break;
      case 2:
        if (v13 <= 4)
        {
          v19 = objc_alloc(MEMORY[0x1E0CB3940]);
          v14 = objc_msgSend_initWithBytes_length_encoding_(v19, v20, a1 + 8, (*(_DWORD *)(a1 + 4) - 1), 1);
          goto LABEL_57;
        }
        v135 = 0;
        v136 = &v135;
        v137 = 0x3812000000;
        v138 = sub_1D52A709C;
        v139 = nullsub_2;
        v140 = "";
        v141 = sub_1D52A5CC8(a1);
        v131 = 0;
        v132 = &v131;
        v133 = 0x2020000000;
        v134 = *(_DWORD *)(a1 + 4);
        v123 = 0;
        v124 = &v123;
        v125 = 0x4012000000;
        v126 = sub_1D52A70AC;
        v127 = sub_1D52A70BC;
        v40 = *a2;
        v39 = a2[1];
        v128 = "";
        v129 = v40;
        v130 = (std::__shared_weak_count *)v39;
        if (v39)
        {
          v41 = (unint64_t *)(v39 + 8);
          do
            v42 = __ldxr(v41);
          while (__stxr(v42 + 1, v41));
        }
        v122[0] = MEMORY[0x1E0C809B0];
        v122[1] = 3221225472;
        v122[2] = sub_1D52A70C4;
        v122[3] = &unk_1E99720D0;
        v122[4] = &v123;
        v122[5] = &v135;
        v122[6] = &v131;
        v15 = (void *)MEMORY[0x1D82721B4](v122);
        _Block_object_dispose(&v123, 8);
        v34 = v130;
        if (!v130)
          goto LABEL_47;
        p_shared_owners = (unint64_t *)&v130->__shared_owners_;
        do
          v36 = __ldaxr(p_shared_owners);
        while (__stlxr(v36 - 1, p_shared_owners));
        goto LABEL_45;
      case 3:
        if ((_DWORD)v13 == 2)
        {
          objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v8, *(unsigned __int16 *)(a1 + 8), v13, v10);
          v44 = (void *)objc_claimAutoreleasedReturnValue();
          v142[0] = v44;
          objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v45, *(unsigned __int16 *)(a1 + 10), v46, v47);
          v48 = (void *)objc_claimAutoreleasedReturnValue();
          v142[1] = v48;
          objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v49, (uint64_t)v142, 2, v50);
          v15 = (void *)objc_claimAutoreleasedReturnValue();

          break;
        }
        if ((_DWORD)v13 == 1)
        {
LABEL_29:
          objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v8, *(unsigned __int16 *)(a1 + 8), v13, v10);
          v14 = objc_claimAutoreleasedReturnValue();
        }
        else
        {
          v16 = sub_1D52A5CC8(a1);
          sub_1D52A6178(a1, a2, v16, *(_DWORD *)(a1 + 4), v7, v11);
          v14 = objc_claimAutoreleasedReturnValue();
        }
        goto LABEL_57;
      case 4:
        if ((_DWORD)v13 == 1)
          goto LABEL_14;
        v17 = sub_1D52A5CC8(a1);
        sub_1D52A65A0(a1, a2, v17, *(_DWORD *)(a1 + 4), v7, v11);
        v14 = objc_claimAutoreleasedReturnValue();
        goto LABEL_57;
      case 5:
        v21 = sub_1D52A5CC8(a1);
        sub_1D52A6A7C(a1, a2, v21, *(_DWORD *)(a1 + 4), v7, v11);
        v14 = objc_claimAutoreleasedReturnValue();
        goto LABEL_57;
      case 6:
        switch((int)v13)
        {
          case 1:
            objc_msgSend_numberWithChar_(MEMORY[0x1E0CB37E8], v8, *(char *)(a1 + 8), v13, v10);
            v14 = objc_claimAutoreleasedReturnValue();
            goto LABEL_57;
          case 2:
            objc_msgSend_numberWithChar_(MEMORY[0x1E0CB37E8], v8, *(char *)(a1 + 8), v13, v10);
            v114 = (void *)objc_claimAutoreleasedReturnValue();
            v149[0] = v114;
            objc_msgSend_numberWithChar_(MEMORY[0x1E0CB37E8], v115, *(char *)(a1 + 9), v116, v117);
            v118 = (void *)objc_claimAutoreleasedReturnValue();
            v149[1] = v118;
            objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v119, (uint64_t)v149, 2, v120);
            v15 = (void *)objc_claimAutoreleasedReturnValue();

            break;
          case 3:
            objc_msgSend_numberWithChar_(MEMORY[0x1E0CB37E8], v8, *(char *)(a1 + 8), v13, v10);
            v85 = (void *)objc_claimAutoreleasedReturnValue();
            v148[0] = v85;
            objc_msgSend_numberWithChar_(MEMORY[0x1E0CB37E8], v86, *(char *)(a1 + 9), v87, v88);
            v89 = (void *)objc_claimAutoreleasedReturnValue();
            v148[1] = v89;
            objc_msgSend_numberWithChar_(MEMORY[0x1E0CB37E8], v90, *(char *)(a1 + 10), v91, v92);
            v93 = (void *)objc_claimAutoreleasedReturnValue();
            v148[2] = v93;
            objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v94, (uint64_t)v148, 3, v95);
            v15 = (void *)objc_claimAutoreleasedReturnValue();

            break;
          case 4:
            objc_msgSend_numberWithChar_(MEMORY[0x1E0CB37E8], v8, *(char *)(a1 + 8), v13, v10);
            v96 = (void *)objc_claimAutoreleasedReturnValue();
            v147[0] = v96;
            objc_msgSend_numberWithChar_(MEMORY[0x1E0CB37E8], v97, *(char *)(a1 + 9), v98, v99);
            v100 = (void *)objc_claimAutoreleasedReturnValue();
            v147[1] = v100;
            objc_msgSend_numberWithChar_(MEMORY[0x1E0CB37E8], v101, *(char *)(a1 + 10), v102, v103);
            v104 = (void *)objc_claimAutoreleasedReturnValue();
            v147[2] = v104;
            objc_msgSend_numberWithChar_(MEMORY[0x1E0CB37E8], v105, *(char *)(a1 + 11), v106, v107);
            v108 = (void *)objc_claimAutoreleasedReturnValue();
            v147[3] = v108;
            objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v109, (uint64_t)v147, 4, v110);
            v15 = (void *)objc_claimAutoreleasedReturnValue();

            break;
          default:
            v112 = sub_1D52A5CC8(a1);
            sub_1D52A5AB4(a1, a2, v112, *(_DWORD *)(a1 + 4), v7, v11);
            v14 = objc_claimAutoreleasedReturnValue();
            goto LABEL_57;
        }
        break;
      case 7:
        if (v13 <= 4)
        {
          objc_msgSend_dataWithBytes_length_(MEMORY[0x1E0C99D50], v8, a1 + 8, v13, v10);
          v14 = objc_claimAutoreleasedReturnValue();
          goto LABEL_57;
        }
        v135 = 0;
        v136 = &v135;
        v137 = 0x3812000000;
        v138 = sub_1D52A709C;
        v139 = nullsub_2;
        v140 = "";
        v141 = sub_1D52A5CC8(a1);
        v131 = 0;
        v132 = &v131;
        v133 = 0x2020000000;
        v134 = *(_DWORD *)(a1 + 4);
        v123 = 0;
        v124 = &v123;
        v125 = 0x4012000000;
        v126 = sub_1D52A70AC;
        v127 = sub_1D52A70BC;
        v31 = *a2;
        v30 = a2[1];
        v128 = "";
        v129 = v31;
        v130 = (std::__shared_weak_count *)v30;
        if (v30)
        {
          v32 = (unint64_t *)(v30 + 8);
          do
            v33 = __ldxr(v32);
          while (__stxr(v33 + 1, v32));
        }
        v121[0] = MEMORY[0x1E0C809B0];
        v121[1] = 3221225472;
        v121[2] = sub_1D52A7224;
        v121[3] = &unk_1E99720F8;
        v121[4] = &v123;
        v121[5] = &v135;
        v121[6] = &v131;
        v15 = (void *)MEMORY[0x1D82721B4](v121);
        _Block_object_dispose(&v123, 8);
        v34 = v130;
        if (v130)
        {
          v35 = (unint64_t *)&v130->__shared_owners_;
          do
            v36 = __ldaxr(v35);
          while (__stlxr(v36 - 1, v35));
LABEL_45:
          if (!v36)
          {
            ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
            std::__shared_weak_count::__release_weak(v34);
          }
        }
LABEL_47:
        _Block_object_dispose(&v131, 8);
        _Block_object_dispose(&v135, 8);
        break;
      case 8:
        if ((_DWORD)v13 == 1)
          goto LABEL_29;
        if ((_DWORD)v13 == 2)
        {
          objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v8, *(unsigned __int16 *)(a1 + 8), v13, v10);
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          v143[0] = v22;
          objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v23, *(unsigned __int16 *)(a1 + 10), v24, v25);
          v26 = (void *)objc_claimAutoreleasedReturnValue();
          v143[1] = v26;
          objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v27, (uint64_t)v143, 2, v28);
          v15 = (void *)objc_claimAutoreleasedReturnValue();

        }
        else
        {
          v51 = sub_1D52A5CC8(a1);
          sub_1D52A5F64(a1, a2, v51, *(_DWORD *)(a1 + 4), v7, v11);
          v14 = objc_claimAutoreleasedReturnValue();
LABEL_57:
          v15 = (void *)v14;
        }
        break;
      case 9:
        if ((_DWORD)v13 == 1)
          goto LABEL_14;
        v37 = sub_1D52A5CC8(a1);
        sub_1D52A638C(a1, a2, v37, *(_DWORD *)(a1 + 4), v7, v11);
        v14 = objc_claimAutoreleasedReturnValue();
        goto LABEL_57;
      case 0xA:
        v29 = sub_1D52A5CC8(a1);
        sub_1D52A67B4(a1, a2, v29, *(_DWORD *)(a1 + 4), v7, v11);
        v14 = objc_claimAutoreleasedReturnValue();
        goto LABEL_57;
      case 0xB:
        if ((_DWORD)v13 == 1)
        {
          LODWORD(v12) = *(_DWORD *)(a1 + 8);
          objc_msgSend_numberWithFloat_(MEMORY[0x1E0CB37E8], v8, v9, v13, v10, v12);
        }
        else
        {
          v38 = sub_1D52A5CC8(a1);
          sub_1D52A6D44(a1, a2, v38, *(_DWORD *)(a1 + 4), v7, v11);
        }
        v14 = objc_claimAutoreleasedReturnValue();
        goto LABEL_57;
      case 0xC:
        v18 = sub_1D52A5CC8(a1);
        sub_1D52A6F58(a1, a2, v18, *(_DWORD *)(a1 + 4));
        v14 = objc_claimAutoreleasedReturnValue();
        goto LABEL_57;
      case 0xD:
LABEL_14:
        objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v8, *(unsigned int *)(a1 + 8), v13, v10);
        v14 = objc_claimAutoreleasedReturnValue();
        goto LABEL_57;
      default:
        v15 = &unk_1E99C8748;
        break;
    }
  }
  else
  {
    v15 = 0;
  }

  return v15;
}

void sub_1D52A5988(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

id sub_1D52A5AB4(uint64_t a1, uint64_t *a2, int a3, int a4, void *a5, void *a6)
{
  id v11;
  id v12;
  std::__shared_weak_count *v13;
  uint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *v17;
  RAWTIFFIFDTable *v18;
  const char *v19;
  void *v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  _QWORD v25[8];
  _QWORD v26[3];
  int v27;
  _QWORD v28[6];
  int v29;
  _QWORD v30[7];
  std::__shared_weak_count *v31;

  v11 = a5;
  v12 = a6;
  v30[0] = 0;
  v30[1] = v30;
  v30[2] = 0x4012000000;
  v30[3] = sub_1D52A70AC;
  v30[4] = sub_1D52A70BC;
  v14 = *a2;
  v13 = (std::__shared_weak_count *)a2[1];
  v30[5] = "";
  v30[6] = v14;
  v31 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v16 = __ldxr(p_shared_owners);
    while (__stxr(v16 + 1, p_shared_owners));
  }
  v28[0] = 0;
  v28[1] = v28;
  v28[2] = 0x3812000000;
  v28[3] = sub_1D52A709C;
  v28[4] = nullsub_2;
  v28[5] = "";
  v29 = a3;
  v26[0] = 0;
  v26[1] = v26;
  v26[2] = 0x2020000000;
  v27 = a4;
  v25[0] = MEMORY[0x1E0C809B0];
  v25[1] = 3221225472;
  v25[2] = sub_1D52B24B0;
  v25[3] = &unk_1E99724A0;
  v25[4] = v30;
  v25[5] = v28;
  v25[6] = v26;
  v25[7] = a1;
  v17 = (void *)MEMORY[0x1D82721B4](v25);
  v18 = [RAWTIFFIFDTable alloc];
  v20 = (void *)objc_msgSend_initWithValueBlock_forwardNamespace_reverseNamespace_(v18, v19, (uint64_t)v17, (uint64_t)v11, (uint64_t)v12);

  _Block_object_dispose(v26, 8);
  _Block_object_dispose(v28, 8);
  _Block_object_dispose(v30, 8);
  v21 = v31;
  if (v31)
  {
    v22 = (unint64_t *)&v31->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
  }

  return v20;
}

void sub_1D52A5C84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v16;
  va_list va;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  va_list va1;

  va_start(va1, a10);
  va_start(va, a10);
  v16 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  v19 = va_arg(va1, _QWORD);
  v20 = va_arg(va1, _QWORD);

  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v14 - 128), 8);
  sub_1D5282EB4(v12);

  _Unwind_Resume(a1);
}

uint64_t sub_1D52A5CC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *exception;

  v2 = *(unsigned int *)(a1 + 4);
  v3 = sub_1D52A7528(*(unsigned __int16 *)(a1 + 2));
  if ((unint64_t)(v3 * v2) <= 4 && ((_DWORD)v2 != 1 || v3 != 4))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return *(unsigned int *)(a1 + 8);
}

void sub_1D52A5D3C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

id sub_1D52A5D50(uint64_t a1, uint64_t *a2, int a3, int a4, void *a5, void *a6)
{
  id v11;
  id v12;
  std::__shared_weak_count *v13;
  uint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *v17;
  RAWTIFFIFDTable *v18;
  const char *v19;
  void *v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  _QWORD v25[8];
  _QWORD v26[3];
  int v27;
  _QWORD v28[6];
  int v29;
  _QWORD v30[7];
  std::__shared_weak_count *v31;

  v11 = a5;
  v12 = a6;
  v30[0] = 0;
  v30[1] = v30;
  v30[2] = 0x4012000000;
  v30[3] = sub_1D52A70AC;
  v30[4] = sub_1D52A70BC;
  v14 = *a2;
  v13 = (std::__shared_weak_count *)a2[1];
  v30[5] = "";
  v30[6] = v14;
  v31 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v16 = __ldxr(p_shared_owners);
    while (__stxr(v16 + 1, p_shared_owners));
  }
  v28[0] = 0;
  v28[1] = v28;
  v28[2] = 0x3812000000;
  v28[3] = sub_1D52A709C;
  v28[4] = nullsub_2;
  v28[5] = "";
  v29 = a3;
  v26[0] = 0;
  v26[1] = v26;
  v26[2] = 0x2020000000;
  v27 = a4;
  v25[0] = MEMORY[0x1E0C809B0];
  v25[1] = 3221225472;
  v25[2] = sub_1D52B26C0;
  v25[3] = &unk_1E99724A0;
  v25[4] = v30;
  v25[5] = v28;
  v25[6] = v26;
  v25[7] = a1;
  v17 = (void *)MEMORY[0x1D82721B4](v25);
  v18 = [RAWTIFFIFDTable alloc];
  v20 = (void *)objc_msgSend_initWithValueBlock_forwardNamespace_reverseNamespace_(v18, v19, (uint64_t)v17, (uint64_t)v11, (uint64_t)v12);

  _Block_object_dispose(v26, 8);
  _Block_object_dispose(v28, 8);
  _Block_object_dispose(v30, 8);
  v21 = v31;
  if (v31)
  {
    v22 = (unint64_t *)&v31->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
  }

  return v20;
}

void sub_1D52A5F20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v16;
  va_list va;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  va_list va1;

  va_start(va1, a10);
  va_start(va, a10);
  v16 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  v19 = va_arg(va1, _QWORD);
  v20 = va_arg(va1, _QWORD);

  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v14 - 128), 8);
  sub_1D5282EB4(v12);

  _Unwind_Resume(a1);
}

id sub_1D52A5F64(uint64_t a1, uint64_t *a2, int a3, int a4, void *a5, void *a6)
{
  id v11;
  id v12;
  std::__shared_weak_count *v13;
  uint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *v17;
  RAWTIFFIFDTable *v18;
  const char *v19;
  void *v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  _QWORD v25[8];
  _QWORD v26[3];
  int v27;
  _QWORD v28[6];
  int v29;
  _QWORD v30[7];
  std::__shared_weak_count *v31;

  v11 = a5;
  v12 = a6;
  v30[0] = 0;
  v30[1] = v30;
  v30[2] = 0x4012000000;
  v30[3] = sub_1D52A70AC;
  v30[4] = sub_1D52A70BC;
  v14 = *a2;
  v13 = (std::__shared_weak_count *)a2[1];
  v30[5] = "";
  v30[6] = v14;
  v31 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v16 = __ldxr(p_shared_owners);
    while (__stxr(v16 + 1, p_shared_owners));
  }
  v28[0] = 0;
  v28[1] = v28;
  v28[2] = 0x3812000000;
  v28[3] = sub_1D52A709C;
  v28[4] = nullsub_2;
  v28[5] = "";
  v29 = a3;
  v26[0] = 0;
  v26[1] = v26;
  v26[2] = 0x2020000000;
  v27 = a4;
  v25[0] = MEMORY[0x1E0C809B0];
  v25[1] = 3221225472;
  v25[2] = sub_1D52B282C;
  v25[3] = &unk_1E99724A0;
  v25[4] = v30;
  v25[5] = v28;
  v25[6] = v26;
  v25[7] = a1;
  v17 = (void *)MEMORY[0x1D82721B4](v25);
  v18 = [RAWTIFFIFDTable alloc];
  v20 = (void *)objc_msgSend_initWithValueBlock_forwardNamespace_reverseNamespace_(v18, v19, (uint64_t)v17, (uint64_t)v11, (uint64_t)v12);

  _Block_object_dispose(v26, 8);
  _Block_object_dispose(v28, 8);
  _Block_object_dispose(v30, 8);
  v21 = v31;
  if (v31)
  {
    v22 = (unint64_t *)&v31->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
  }

  return v20;
}

void sub_1D52A6134(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v16;
  va_list va;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  va_list va1;

  va_start(va1, a10);
  va_start(va, a10);
  v16 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  v19 = va_arg(va1, _QWORD);
  v20 = va_arg(va1, _QWORD);

  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v14 - 128), 8);
  sub_1D5282EB4(v12);

  _Unwind_Resume(a1);
}

id sub_1D52A6178(uint64_t a1, uint64_t *a2, int a3, int a4, void *a5, void *a6)
{
  id v11;
  id v12;
  std::__shared_weak_count *v13;
  uint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *v17;
  RAWTIFFIFDTable *v18;
  const char *v19;
  void *v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  _QWORD v25[8];
  _QWORD v26[3];
  int v27;
  _QWORD v28[6];
  int v29;
  _QWORD v30[7];
  std::__shared_weak_count *v31;

  v11 = a5;
  v12 = a6;
  v30[0] = 0;
  v30[1] = v30;
  v30[2] = 0x4012000000;
  v30[3] = sub_1D52A70AC;
  v30[4] = sub_1D52A70BC;
  v14 = *a2;
  v13 = (std::__shared_weak_count *)a2[1];
  v30[5] = "";
  v30[6] = v14;
  v31 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v16 = __ldxr(p_shared_owners);
    while (__stxr(v16 + 1, p_shared_owners));
  }
  v28[0] = 0;
  v28[1] = v28;
  v28[2] = 0x3812000000;
  v28[3] = sub_1D52A709C;
  v28[4] = nullsub_2;
  v28[5] = "";
  v29 = a3;
  v26[0] = 0;
  v26[1] = v26;
  v26[2] = 0x2020000000;
  v27 = a4;
  v25[0] = MEMORY[0x1E0C809B0];
  v25[1] = 3221225472;
  v25[2] = sub_1D52B2AA0;
  v25[3] = &unk_1E99724A0;
  v25[4] = v30;
  v25[5] = v28;
  v25[6] = v26;
  v25[7] = a1;
  v17 = (void *)MEMORY[0x1D82721B4](v25);
  v18 = [RAWTIFFIFDTable alloc];
  v20 = (void *)objc_msgSend_initWithValueBlock_forwardNamespace_reverseNamespace_(v18, v19, (uint64_t)v17, (uint64_t)v11, (uint64_t)v12);

  _Block_object_dispose(v26, 8);
  _Block_object_dispose(v28, 8);
  _Block_object_dispose(v30, 8);
  v21 = v31;
  if (v31)
  {
    v22 = (unint64_t *)&v31->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
  }

  return v20;
}

void sub_1D52A6348(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v16;
  va_list va;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  va_list va1;

  va_start(va1, a10);
  va_start(va, a10);
  v16 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  v19 = va_arg(va1, _QWORD);
  v20 = va_arg(va1, _QWORD);

  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v14 - 128), 8);
  sub_1D5282EB4(v12);

  _Unwind_Resume(a1);
}

id sub_1D52A638C(uint64_t a1, uint64_t *a2, int a3, int a4, void *a5, void *a6)
{
  id v11;
  id v12;
  std::__shared_weak_count *v13;
  uint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *v17;
  RAWTIFFIFDTable *v18;
  const char *v19;
  void *v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  _QWORD v25[8];
  _QWORD v26[3];
  int v27;
  _QWORD v28[6];
  int v29;
  _QWORD v30[7];
  std::__shared_weak_count *v31;

  v11 = a5;
  v12 = a6;
  v30[0] = 0;
  v30[1] = v30;
  v30[2] = 0x4012000000;
  v30[3] = sub_1D52A70AC;
  v30[4] = sub_1D52A70BC;
  v14 = *a2;
  v13 = (std::__shared_weak_count *)a2[1];
  v30[5] = "";
  v30[6] = v14;
  v31 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v16 = __ldxr(p_shared_owners);
    while (__stxr(v16 + 1, p_shared_owners));
  }
  v28[0] = 0;
  v28[1] = v28;
  v28[2] = 0x3812000000;
  v28[3] = sub_1D52A709C;
  v28[4] = nullsub_2;
  v28[5] = "";
  v29 = a3;
  v26[0] = 0;
  v26[1] = v26;
  v26[2] = 0x2020000000;
  v27 = a4;
  v25[0] = MEMORY[0x1E0C809B0];
  v25[1] = 3221225472;
  v25[2] = sub_1D52B2CA0;
  v25[3] = &unk_1E99724A0;
  v25[4] = v30;
  v25[5] = v28;
  v25[6] = v26;
  v25[7] = a1;
  v17 = (void *)MEMORY[0x1D82721B4](v25);
  v18 = [RAWTIFFIFDTable alloc];
  v20 = (void *)objc_msgSend_initWithValueBlock_forwardNamespace_reverseNamespace_(v18, v19, (uint64_t)v17, (uint64_t)v11, (uint64_t)v12);

  _Block_object_dispose(v26, 8);
  _Block_object_dispose(v28, 8);
  _Block_object_dispose(v30, 8);
  v21 = v31;
  if (v31)
  {
    v22 = (unint64_t *)&v31->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
  }

  return v20;
}

void sub_1D52A655C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v16;
  va_list va;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  va_list va1;

  va_start(va1, a10);
  va_start(va, a10);
  v16 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  v19 = va_arg(va1, _QWORD);
  v20 = va_arg(va1, _QWORD);

  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v14 - 128), 8);
  sub_1D5282EB4(v12);

  _Unwind_Resume(a1);
}

id sub_1D52A65A0(uint64_t a1, uint64_t *a2, int a3, int a4, void *a5, void *a6)
{
  id v11;
  id v12;
  std::__shared_weak_count *v13;
  uint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *v17;
  RAWTIFFIFDTable *v18;
  const char *v19;
  void *v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  _QWORD v25[8];
  _QWORD v26[3];
  int v27;
  _QWORD v28[6];
  int v29;
  _QWORD v30[7];
  std::__shared_weak_count *v31;

  v11 = a5;
  v12 = a6;
  v30[0] = 0;
  v30[1] = v30;
  v30[2] = 0x4012000000;
  v30[3] = sub_1D52A70AC;
  v30[4] = sub_1D52A70BC;
  v14 = *a2;
  v13 = (std::__shared_weak_count *)a2[1];
  v30[5] = "";
  v30[6] = v14;
  v31 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v16 = __ldxr(p_shared_owners);
    while (__stxr(v16 + 1, p_shared_owners));
  }
  v28[0] = 0;
  v28[1] = v28;
  v28[2] = 0x3812000000;
  v28[3] = sub_1D52A709C;
  v28[4] = nullsub_2;
  v28[5] = "";
  v29 = a3;
  v26[0] = 0;
  v26[1] = v26;
  v26[2] = 0x2020000000;
  v27 = a4;
  v25[0] = MEMORY[0x1E0C809B0];
  v25[1] = 3221225472;
  v25[2] = sub_1D52B2F10;
  v25[3] = &unk_1E99724A0;
  v25[4] = v30;
  v25[5] = v28;
  v25[6] = v26;
  v25[7] = a1;
  v17 = (void *)MEMORY[0x1D82721B4](v25);
  v18 = [RAWTIFFIFDTable alloc];
  v20 = (void *)objc_msgSend_initWithValueBlock_forwardNamespace_reverseNamespace_(v18, v19, (uint64_t)v17, (uint64_t)v11, (uint64_t)v12);

  _Block_object_dispose(v26, 8);
  _Block_object_dispose(v28, 8);
  _Block_object_dispose(v30, 8);
  v21 = v31;
  if (v31)
  {
    v22 = (unint64_t *)&v31->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
  }

  return v20;
}

void sub_1D52A6770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v16;
  va_list va;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  va_list va1;

  va_start(va1, a10);
  va_start(va, a10);
  v16 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  v19 = va_arg(va1, _QWORD);
  v20 = va_arg(va1, _QWORD);

  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v14 - 128), 8);
  sub_1D5282EB4(v12);

  _Unwind_Resume(a1);
}

id sub_1D52A67B4(uint64_t a1, uint64_t *a2, int a3, int a4, void *a5, void *a6)
{
  id v11;
  id v12;
  void *v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  void *v43;
  RAWTIFFIFDTable *v44;
  const char *v45;
  std::__shared_weak_count *v46;
  unint64_t *p_shared_owners;
  unint64_t v48;
  _QWORD v50[8];
  _QWORD v51[3];
  int v52;
  _QWORD v53[6];
  int v54;
  _QWORD v55[7];
  std::__shared_weak_count *v56;

  v11 = a5;
  v12 = a6;
  if (a4 == 1)
  {
    sub_1D52B2CC8(a1, a2, a3, 2u);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)MEMORY[0x1E0CB37E8];
    objc_msgSend_objectAtIndexedSubscript_(v13, v15, 0, v16, v17);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_doubleValue(v18, v19, v20, v21, v22);
    v24 = v23;
    objc_msgSend_objectAtIndexedSubscript_(v13, v25, 1, v26, v27);
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_doubleValue(v28, v29, v30, v31, v32);
    objc_msgSend_numberWithDouble_(v14, v34, v35, v36, v37, v24 / v33);
    v38 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v55[0] = 0;
    v55[1] = v55;
    v55[2] = 0x4012000000;
    v55[3] = sub_1D52A70AC;
    v55[4] = sub_1D52A70BC;
    v40 = *a2;
    v39 = a2[1];
    v55[5] = "";
    v55[6] = v40;
    v56 = (std::__shared_weak_count *)v39;
    if (v39)
    {
      v41 = (unint64_t *)(v39 + 8);
      do
        v42 = __ldxr(v41);
      while (__stxr(v42 + 1, v41));
    }
    v53[0] = 0;
    v53[1] = v53;
    v53[2] = 0x3812000000;
    v53[3] = sub_1D52A709C;
    v53[4] = nullsub_2;
    v53[5] = "";
    v54 = a3;
    v51[0] = 0;
    v51[1] = v51;
    v51[2] = 0x2020000000;
    v52 = a4;
    v50[0] = MEMORY[0x1E0C809B0];
    v50[1] = 3221225472;
    v50[2] = sub_1D52B310C;
    v50[3] = &unk_1E99724C8;
    v50[4] = v55;
    v50[5] = v53;
    v50[6] = v51;
    v50[7] = a1;
    v43 = (void *)MEMORY[0x1D82721B4](v50);
    v44 = [RAWTIFFIFDTable alloc];
    v38 = (void *)objc_msgSend_initWithValueBlock_forwardNamespace_reverseNamespace_(v44, v45, (uint64_t)v43, (uint64_t)v11, (uint64_t)v12);

    _Block_object_dispose(v51, 8);
    _Block_object_dispose(v53, 8);
    _Block_object_dispose(v55, 8);
    v46 = v56;
    if (v56)
    {
      p_shared_owners = (unint64_t *)&v56->__shared_owners_;
      do
        v48 = __ldaxr(p_shared_owners);
      while (__stlxr(v48 - 1, p_shared_owners));
      if (!v48)
      {
        ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
        std::__shared_weak_count::__release_weak(v46);
      }
    }
  }

  return v38;
}

void sub_1D52A6A0C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

id sub_1D52A6A7C(uint64_t a1, uint64_t *a2, int a3, int a4, void *a5, void *a6)
{
  id v11;
  id v12;
  void *v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  void *v43;
  RAWTIFFIFDTable *v44;
  const char *v45;
  std::__shared_weak_count *v46;
  unint64_t *p_shared_owners;
  unint64_t v48;
  _QWORD v50[8];
  _QWORD v51[3];
  int v52;
  _QWORD v53[6];
  int v54;
  _QWORD v55[7];
  std::__shared_weak_count *v56;

  v11 = a5;
  v12 = a6;
  if (a4 == 1)
  {
    sub_1D52B2F38(a1, a2, a3, 2u);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)MEMORY[0x1E0CB37E8];
    objc_msgSend_objectAtIndexedSubscript_(v13, v15, 0, v16, v17);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_doubleValue(v18, v19, v20, v21, v22);
    v24 = v23;
    objc_msgSend_objectAtIndexedSubscript_(v13, v25, 1, v26, v27);
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_doubleValue(v28, v29, v30, v31, v32);
    objc_msgSend_numberWithDouble_(v14, v34, v35, v36, v37, v24 / v33);
    v38 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v55[0] = 0;
    v55[1] = v55;
    v55[2] = 0x4012000000;
    v55[3] = sub_1D52A70AC;
    v55[4] = sub_1D52A70BC;
    v40 = *a2;
    v39 = a2[1];
    v55[5] = "";
    v55[6] = v40;
    v56 = (std::__shared_weak_count *)v39;
    if (v39)
    {
      v41 = (unint64_t *)(v39 + 8);
      do
        v42 = __ldxr(v41);
      while (__stxr(v42 + 1, v41));
    }
    v53[0] = 0;
    v53[1] = v53;
    v53[2] = 0x3812000000;
    v53[3] = sub_1D52A709C;
    v53[4] = nullsub_2;
    v53[5] = "";
    v54 = a3;
    v51[0] = 0;
    v51[1] = v51;
    v51[2] = 0x2020000000;
    v52 = a4;
    v50[0] = MEMORY[0x1E0C809B0];
    v50[1] = 3221225472;
    v50[2] = sub_1D52B3284;
    v50[3] = &unk_1E99724C8;
    v50[4] = v55;
    v50[5] = v53;
    v50[6] = v51;
    v50[7] = a1;
    v43 = (void *)MEMORY[0x1D82721B4](v50);
    v44 = [RAWTIFFIFDTable alloc];
    v38 = (void *)objc_msgSend_initWithValueBlock_forwardNamespace_reverseNamespace_(v44, v45, (uint64_t)v43, (uint64_t)v11, (uint64_t)v12);

    _Block_object_dispose(v51, 8);
    _Block_object_dispose(v53, 8);
    _Block_object_dispose(v55, 8);
    v46 = v56;
    if (v56)
    {
      p_shared_owners = (unint64_t *)&v56->__shared_owners_;
      do
        v48 = __ldaxr(p_shared_owners);
      while (__stlxr(v48 - 1, p_shared_owners));
      if (!v48)
      {
        ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
        std::__shared_weak_count::__release_weak(v46);
      }
    }
  }

  return v38;
}

void sub_1D52A6CD4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

id sub_1D52A6D44(uint64_t a1, uint64_t *a2, int a3, int a4, void *a5, void *a6)
{
  id v11;
  id v12;
  std::__shared_weak_count *v13;
  uint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *v17;
  RAWTIFFIFDTable *v18;
  const char *v19;
  void *v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  _QWORD v25[8];
  _QWORD v26[3];
  int v27;
  _QWORD v28[6];
  int v29;
  _QWORD v30[7];
  std::__shared_weak_count *v31;

  v11 = a5;
  v12 = a6;
  v30[0] = 0;
  v30[1] = v30;
  v30[2] = 0x4012000000;
  v30[3] = sub_1D52A70AC;
  v30[4] = sub_1D52A70BC;
  v14 = *a2;
  v13 = (std::__shared_weak_count *)a2[1];
  v30[5] = "";
  v30[6] = v14;
  v31 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v16 = __ldxr(p_shared_owners);
    while (__stxr(v16 + 1, p_shared_owners));
  }
  v28[0] = 0;
  v28[1] = v28;
  v28[2] = 0x3812000000;
  v28[3] = sub_1D52A709C;
  v28[4] = nullsub_2;
  v28[5] = "";
  v29 = a3;
  v26[0] = 0;
  v26[1] = v26;
  v26[2] = 0x2020000000;
  v27 = a4;
  v25[0] = MEMORY[0x1E0C809B0];
  v25[1] = 3221225472;
  v25[2] = sub_1D52B33FC;
  v25[3] = &unk_1E99724A0;
  v25[4] = v30;
  v25[5] = v28;
  v25[6] = v26;
  v25[7] = a1;
  v17 = (void *)MEMORY[0x1D82721B4](v25);
  v18 = [RAWTIFFIFDTable alloc];
  v20 = (void *)objc_msgSend_initWithValueBlock_forwardNamespace_reverseNamespace_(v18, v19, (uint64_t)v17, (uint64_t)v11, (uint64_t)v12);

  _Block_object_dispose(v26, 8);
  _Block_object_dispose(v28, 8);
  _Block_object_dispose(v30, 8);
  v21 = v31;
  if (v31)
  {
    v22 = (unint64_t *)&v31->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
  }

  return v20;
}

void sub_1D52A6F14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v16;
  va_list va;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  va_list va1;

  va_start(va1, a10);
  va_start(va, a10);
  v16 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  v19 = va_arg(va1, _QWORD);
  v20 = va_arg(va1, _QWORD);

  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v14 - 128), 8);
  sub_1D5282EB4(v12);

  _Unwind_Resume(a1);
}

id sub_1D52A6F58(uint64_t a1, uint64_t *a2, int a3, unsigned int a4)
{
  void *v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double *v12;
  double *v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  unsigned int v20;
  void *__p;
  double *v22;
  uint64_t v23[3];
  int v24;

  v24 = a3;
  sub_1D5285B08((int *)&__p, &v24);
  sub_1D5285164(v23, a2, (uint64_t)&__p, 0);
  sub_1D52B261C(a4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = *a2;
  v20 = a4;
  sub_1D52B366C(v7, &v20, (uint64_t *)&__p);
  v12 = (double *)__p;
  v13 = v22;
  if (__p != v22)
  {
    do
    {
      objc_msgSend_numberWithDouble_(MEMORY[0x1E0CB37E8], v8, v9, v10, v11, *v12);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_addObject_(v6, v15, (uint64_t)v14, v16, v17);

      ++v12;
    }
    while (v12 != v13);
  }
  objc_msgSend_arrayWithArray_(MEMORY[0x1E0C99D20], v8, (uint64_t)v6, v10, v11);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  if (__p)
  {
    v22 = (double *)__p;
    operator delete(__p);
  }

  sub_1D5285200(v23);
  return v18;
}

void sub_1D52A7050(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13)
{
  void *v13;

  if (__p)
    operator delete(__p);

  sub_1D5285200(&a13);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52A709C(uint64_t result, uint64_t a2)
{
  *(_DWORD *)(result + 48) = *(_DWORD *)(a2 + 48);
  return result;
}

__n128 sub_1D52A70AC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = a2[3];
  a1[3] = result;
  a2[3].n128_u64[0] = 0;
  a2[3].n128_u64[1] = 0;
  return result;
}

uint64_t sub_1D52A70BC(uint64_t a1)
{
  return sub_1D5282EB4(a1 + 48);
}

id sub_1D52A70C4(_QWORD *a1)
{
  uint64_t *v2;
  uint64_t v3;
  id v4;
  const char *v5;
  void *v6;
  unsigned int v8;
  void *__p[3];
  uint64_t v10[3];

  v2 = (uint64_t *)(*(_QWORD *)(a1[4] + 8) + 48);
  sub_1D5285B08((int *)__p, (int *)(*(_QWORD *)(a1[5] + 8) + 48));
  sub_1D5285164(v10, v2, (uint64_t)__p, 0);
  v3 = *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 48);
  v8 = *(_DWORD *)(*(_QWORD *)(a1[6] + 8) + 24);
  sub_1D52A71B8(v3, &v8, (uint64_t *)__p);
  v4 = objc_alloc(MEMORY[0x1E0CB3940]);
  v6 = (void *)objc_msgSend_initWithBytes_length_encoding_(v4, v5, (uint64_t)__p[0], (*(_DWORD *)(*(_QWORD *)(a1[6] + 8) + 24) - 1), 1);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  sub_1D5285200(v10);
  return v6;
}

void sub_1D52A7188(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_1D5285200(&a14);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52A71B8@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X1>, uint64_t *a3@<X8>)
{
  size_t v5;

  v5 = *a2;
  sub_1D52B36FC(a3, v5);
  sub_1D5284728(a1, *a3, v5);
  return sub_1D52845E4(a1);
}

void sub_1D52A7208(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

id sub_1D52A7224(_QWORD *a1)
{
  uint64_t *v2;
  uint64_t v3;
  const char *v4;
  uint64_t v5;
  void *v6;
  unsigned int v8;
  void *__p;
  _BYTE *v10;
  uint64_t v11[3];

  v2 = (uint64_t *)(*(_QWORD *)(a1[4] + 8) + 48);
  sub_1D5285B08((int *)&__p, (int *)(*(_QWORD *)(a1[5] + 8) + 48));
  sub_1D5285164(v11, v2, (uint64_t)&__p, 0);
  v3 = *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 48);
  v8 = *(_DWORD *)(*(_QWORD *)(a1[6] + 8) + 24);
  sub_1D52A7308(v3, &v8, (uint64_t *)&__p);
  objc_msgSend_dataWithBytes_length_(MEMORY[0x1E0C99D50], v4, (uint64_t)__p, v10 - (_BYTE *)__p, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (__p)
  {
    v10 = __p;
    operator delete(__p);
  }
  sub_1D5285200(v11);
  return v6;
}

void sub_1D52A72D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  sub_1D5285200(&a14);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52A7308@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X1>, uint64_t *a3@<X8>)
{
  size_t v5;

  v5 = *a2;
  sub_1D5285340(a3, v5);
  sub_1D5284728(a1, *a3, v5);
  return sub_1D52845E4(a1);
}

void sub_1D52A7358(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D52A7374(uint64_t a1, double *a2, uint64_t *a3, double a4)
{
  uint64_t result;
  double v8;
  double v9;
  int v10;
  double v11;
  int v12;
  int v13;
  uint64_t v14[3];

  result = 0;
  switch(*(_WORD *)(a1 + 2))
  {
    case 1:
      LOBYTE(a4) = *(_BYTE *)(a1 + 8);
      goto LABEL_5;
    case 3:
      LOWORD(a4) = *(_WORD *)(a1 + 8);
      goto LABEL_5;
    case 4:
      LODWORD(a4) = *(_DWORD *)(a1 + 8);
LABEL_5:
      v8 = (double)*(unint64_t *)&a4;
      goto LABEL_11;
    case 5:
      v12 = sub_1D52A5CC8(a1);
      sub_1D5285B08(&v13, &v12);
      sub_1D5285164(v14, a3, (uint64_t)&v13, 0);
      *a2 = (double)sub_1D52847F8(*a3);
      v9 = (double)sub_1D52847F8(*a3);
      goto LABEL_13;
    case 6:
      v10 = *(char *)(a1 + 8);
      goto LABEL_10;
    case 8:
      v10 = *(__int16 *)(a1 + 8);
      goto LABEL_10;
    case 9:
      v10 = *(_DWORD *)(a1 + 8);
LABEL_10:
      v8 = (double)v10;
LABEL_11:
      *a2 = v8;
      goto LABEL_16;
    case 0xA:
      v12 = sub_1D52A5CC8(a1);
      sub_1D5285B08(&v13, &v12);
      sub_1D5285164(v14, a3, (uint64_t)&v13, 0);
      *a2 = (double)(int)sub_1D52847F8(*a3);
      v9 = (double)(int)sub_1D52847F8(*a3);
LABEL_13:
      v11 = *a2 / v9;
      goto LABEL_15;
    case 0xB:
      v12 = sub_1D52A5CC8(a1);
      sub_1D5285B08(&v13, &v12);
      sub_1D5285164(v14, a3, (uint64_t)&v13, 0);
      v11 = sub_1D5284934(*a3);
LABEL_15:
      *a2 = v11;
      sub_1D5285200(v14);
LABEL_16:
      result = 1;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1D52A74F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1D5285200((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52A7528(int a1)
{
  int v1;
  uint64_t result;

  v1 = a1 - 1;
  result = 1;
  switch(v1)
  {
    case 0:
    case 1:
    case 5:
    case 6:
      return result;
    case 2:
    case 7:
      result = 2;
      break;
    case 3:
    case 8:
    case 10:
    case 12:
      result = 4;
      break;
    case 4:
    case 9:
    case 11:
      result = 8;
      break;
    default:
      result = 0;
      break;
  }
  return result;
}

uint64_t sub_1D52A7580(uint64_t a1, _WORD *a2)
{
  uint64_t result;

  result = 0;
  switch(*(_WORD *)(a1 + 2))
  {
    case 1:
      LOWORD(a1) = *(unsigned __int8 *)(a1 + 8);
      goto LABEL_6;
    case 3:
    case 8:
      LOWORD(a1) = *(_WORD *)(a1 + 8);
      goto LABEL_6;
    case 4:
    case 9:
      LODWORD(a1) = *(_DWORD *)(a1 + 8);
      goto LABEL_6;
    case 6:
      LOWORD(a1) = *(char *)(a1 + 8);
LABEL_6:
      *a2 = a1;
      result = 1;
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *sub_1D52A75D8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void **a3@<X8>)
{
  uint64_t v6;
  double v7;
  _QWORD *result;
  unint64_t v9;
  int v10;
  unsigned int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  double v15;
  double v16;
  double v17;
  int v18;
  int v19;
  double *v20;
  double *v21;
  double *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  double *v28;
  uint64_t v29;
  double *v30;
  void *exception;
  void *__p;
  double *v33;
  char *v34;
  int v35;
  uint64_t v36[3];

  v6 = *(unsigned int *)(a1 + 4);
  if ((unint64_t)(sub_1D52A7528(*(unsigned __int16 *)(a1 + 2)) * v6) > 4)
  {
    v35 = sub_1D52A5CC8(a1);
    sub_1D5285B08((int *)&__p, &v35);
    sub_1D5285164(v36, a2, (uint64_t)&__p, 0);
    __p = 0;
    v33 = 0;
    v34 = 0;
    v9 = *(unsigned int *)(a1 + 4);
    if (v9 >> 4 >= 0x271)
    {
      exception = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1D8271938](exception, "RawCameraException");
      __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
    }
    sub_1D52A7918(&__p, v9);
    if (*(_DWORD *)(a1 + 4))
    {
      v10 = 0;
      while (2)
      {
        switch(*(_WORD *)(a1 + 2))
        {
          case 1:
            v11 = sub_1D52846FC(*a2);
            goto LABEL_14;
          case 3:
            v11 = sub_1D528479C(*a2);
            goto LABEL_14;
          case 4:
            v11 = sub_1D52847F8(*a2);
LABEL_14:
            v17 = (double)v11;
            goto LABEL_20;
          case 5:
            v13 = sub_1D52847F8(*a2);
            v14 = sub_1D52847F8(*a2);
            v15 = (double)v13;
            v16 = (double)v14;
            goto LABEL_16;
          case 8:
            v12 = sub_1D52848D4(*a2);
            goto LABEL_18;
          case 9:
            v12 = sub_1D52847F8(*a2);
LABEL_18:
            v17 = (double)v12;
            goto LABEL_20;
          case 0xA:
            v18 = sub_1D52847F8(*a2);
            v19 = sub_1D52847F8(*a2);
            v15 = (double)v18;
            v16 = (double)v19;
LABEL_16:
            v17 = v15 / v16;
            goto LABEL_20;
          case 0xB:
            v17 = sub_1D5284934(*a2);
            goto LABEL_20;
          case 0xC:
            v17 = sub_1D528494C(*a2);
LABEL_20:
            v20 = v33;
            if (v33 >= (double *)v34)
            {
              v22 = (double *)__p;
              v23 = ((char *)v33 - (_BYTE *)__p) >> 3;
              v24 = v23 + 1;
              if ((unint64_t)(v23 + 1) >> 61)
                sub_1D5282B8C();
              v25 = v34 - (_BYTE *)__p;
              if ((v34 - (_BYTE *)__p) >> 2 > v24)
                v24 = v25 >> 2;
              if ((unint64_t)v25 >= 0x7FFFFFFFFFFFFFF8)
                v26 = 0x1FFFFFFFFFFFFFFFLL;
              else
                v26 = v24;
              if (v26)
              {
                v27 = (char *)sub_1D5282D28((uint64_t)&v34, v26);
                v22 = (double *)__p;
                v20 = v33;
              }
              else
              {
                v27 = 0;
              }
              v28 = (double *)&v27[8 * v23];
              *v28 = v17;
              v21 = v28 + 1;
              while (v20 != v22)
              {
                v29 = *((_QWORD *)v20-- - 1);
                *((_QWORD *)v28-- - 1) = v29;
              }
              __p = v28;
              v33 = v21;
              v34 = &v27[8 * v26];
              if (v22)
                operator delete(v22);
            }
            else
            {
              *v33 = v17;
              v21 = v20 + 1;
            }
            v33 = v21;
            if (++v10 >= *(_DWORD *)(a1 + 4))
              goto LABEL_40;
            continue;
          default:
            *a3 = 0;
            a3[1] = 0;
            a3[2] = 0;
            if (__p)
            {
              v33 = (double *)__p;
              operator delete(__p);
            }
            return (_QWORD *)sub_1D5285200(v36);
        }
      }
    }
    v21 = v33;
LABEL_40:
    v30 = (double *)v34;
    *a3 = __p;
    a3[1] = v21;
    a3[2] = v30;
    return (_QWORD *)sub_1D5285200(v36);
  }
  else
  {
    v36[0] = 0;
    result = (_QWORD *)sub_1D52A7374(a1, (double *)v36, a2, v7);
    if ((_DWORD)result)
    {
      return sub_1D528F9B4(a3, 1uLL, v36);
    }
    else
    {
      *a3 = 0;
      a3[1] = 0;
      a3[2] = 0;
    }
  }
  return result;
}

void sub_1D52A78D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  sub_1D5285200(&a14);
  _Unwind_Resume(a1);
}

void sub_1D52A7918(void **a1, unint64_t a2)
{
  uint64_t v3;
  _BYTE *v4;
  int64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v4 = a1[2];
  v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (_BYTE *)*a1) >> 3)
  {
    if (a2 >> 61)
      sub_1D5282B8C();
    v5 = (_BYTE *)a1[1] - (_BYTE *)*a1;
    v6 = (char *)sub_1D5282D28(v3, a2);
    v7 = &v6[v5 & 0xFFFFFFFFFFFFFFF8];
    v9 = &v6[8 * v8];
    v10 = (char *)*a1;
    v11 = (char *)a1[1];
    v12 = v7;
    if (v11 != *a1)
    {
      v12 = v7;
      do
      {
        v13 = *((_QWORD *)v11 - 1);
        v11 -= 8;
        *((_QWORD *)v12 - 1) = v13;
        v12 -= 8;
      }
      while (v11 != v10);
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
      operator delete(v10);
  }
}

void sub_1D52A79AC(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6;
  unsigned int v7;
  __int16 v8;
  __int16 v9;
  unint64_t v10;
  _WORD *v11;
  _WORD *v12;
  _WORD *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __int16 v21;
  unint64_t v22;
  int v23;
  __int16 v24;
  unsigned __int16 v25;
  __int16 v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  __int16 v36;
  char *v37;
  void *exception;
  void *__p;
  char *v40;
  char *v41;
  int v42;
  uint64_t v43[3];

  v6 = *(unsigned int *)(a1 + 4);
  if (sub_1D52A7528(*(unsigned __int16 *)(a1 + 2)) * v6 > 4)
  {
    v42 = sub_1D52A5CC8(a1);
    sub_1D5285B08((int *)&__p, &v42);
    sub_1D5285164(v43, a2, (uint64_t)&__p, 0);
    __p = 0;
    v40 = 0;
    v41 = 0;
    v22 = *(unsigned int *)(a1 + 4);
    if (v22 >> 4 >= 0x271)
    {
      exception = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1D8271938](exception, "RawCameraException");
      __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
    }
    sub_1D52A7D98(&__p, v22);
    if (*(_DWORD *)(a1 + 4))
    {
      v23 = 0;
      while (2)
      {
        switch(*(_WORD *)(a1 + 2))
        {
          case 1:
            v24 = sub_1D52846FC(*a2);
            goto LABEL_33;
          case 3:
            v24 = sub_1D528479C(*a2);
            goto LABEL_33;
          case 4:
          case 9:
            v24 = sub_1D52847F8(*a2);
            goto LABEL_33;
          case 5:
          case 0xA:
            v25 = sub_1D52847F8(*a2);
            v26 = v25 / (unsigned __int16)sub_1D52847F8(*a2);
            goto LABEL_34;
          case 8:
            v24 = sub_1D52848D4(*a2);
LABEL_33:
            v26 = v24;
LABEL_34:
            v27 = v40;
            if (v40 >= v41)
            {
              v29 = (char *)__p;
              v30 = v40 - (_BYTE *)__p;
              if (v40 - (_BYTE *)__p <= -3)
                sub_1D5282B8C();
              v31 = v30 >> 1;
              if (v41 - (_BYTE *)__p <= (unint64_t)((v30 >> 1) + 1))
                v32 = v31 + 1;
              else
                v32 = v41 - (_BYTE *)__p;
              if ((unint64_t)(v41 - (_BYTE *)__p) >= 0x7FFFFFFFFFFFFFFELL)
                v33 = 0x7FFFFFFFFFFFFFFFLL;
              else
                v33 = v32;
              if (v33)
              {
                v34 = (char *)sub_1D52854A0((uint64_t)&v41, v33);
                v29 = (char *)__p;
                v27 = v40;
              }
              else
              {
                v34 = 0;
              }
              v35 = &v34[2 * v31];
              *(_WORD *)v35 = v26;
              v28 = v35 + 2;
              while (v27 != v29)
              {
                v36 = *((_WORD *)v27 - 1);
                v27 -= 2;
                *((_WORD *)v35 - 1) = v36;
                v35 -= 2;
              }
              __p = v35;
              v40 = v28;
              v41 = &v34[2 * v33];
              if (v29)
                operator delete(v29);
            }
            else
            {
              *(_WORD *)v40 = v26;
              v28 = v27 + 2;
            }
            v40 = v28;
            if (++v23 >= *(_DWORD *)(a1 + 4))
              goto LABEL_54;
            continue;
          default:
            *(_QWORD *)a3 = 0;
            *(_QWORD *)(a3 + 8) = 0;
            *(_QWORD *)(a3 + 16) = 0;
            if (__p)
            {
              v40 = (char *)__p;
              operator delete(__p);
            }
            goto LABEL_55;
        }
      }
    }
    v28 = v40;
LABEL_54:
    v37 = v41;
    *(_QWORD *)a3 = __p;
    *(_QWORD *)(a3 + 8) = v28;
    *(_QWORD *)(a3 + 16) = v37;
LABEL_55:
    sub_1D5285200(v43);
  }
  else
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)(a3 + 16) = 0;
    if ((_DWORD)v6)
    {
      sub_1D52A7D98((void **)a3, v6);
      if (*(_DWORD *)(a1 + 4))
      {
        v7 = 0;
        do
        {
          LODWORD(v43[0]) = v7;
          v8 = sub_1D52A7E28(a1, (unsigned int *)v43);
          v9 = v8;
          v11 = *(_WORD **)(a3 + 8);
          v10 = *(_QWORD *)(a3 + 16);
          if ((unint64_t)v11 >= v10)
          {
            v13 = *(_WORD **)a3;
            v14 = (uint64_t)v11 - *(_QWORD *)a3;
            if (v14 <= -3)
              sub_1D5282B8C();
            v15 = v14 >> 1;
            v16 = v10 - (_QWORD)v13;
            if (v16 <= (v14 >> 1) + 1)
              v17 = v15 + 1;
            else
              v17 = v16;
            if (v16 >= 0x7FFFFFFFFFFFFFFELL)
              v18 = 0x7FFFFFFFFFFFFFFFLL;
            else
              v18 = v17;
            if (v18)
            {
              v19 = (char *)sub_1D52854A0(a3 + 16, v18);
              v13 = *(_WORD **)a3;
              v11 = *(_WORD **)(a3 + 8);
            }
            else
            {
              v19 = 0;
            }
            v20 = &v19[2 * v15];
            *(_WORD *)v20 = v9;
            v12 = v20 + 2;
            while (v11 != v13)
            {
              v21 = *--v11;
              *((_WORD *)v20 - 1) = v21;
              v20 -= 2;
            }
            *(_QWORD *)a3 = v20;
            *(_QWORD *)(a3 + 8) = v12;
            *(_QWORD *)(a3 + 16) = &v19[2 * v18];
            if (v13)
              operator delete(v13);
          }
          else
          {
            *v11 = v8;
            v12 = v11 + 1;
          }
          *(_QWORD *)(a3 + 8) = v12;
          ++v7;
        }
        while (v7 < *(_DWORD *)(a1 + 4));
      }
    }
  }
}

void sub_1D52A7D38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  uint64_t v14;
  void *v16;

  v16 = *(void **)v14;
  if (*(_QWORD *)v14)
  {
    *(_QWORD *)(v14 + 8) = v16;
    operator delete(v16);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D52A7D98(void **a1, unint64_t a2)
{
  uint64_t v3;
  _BYTE *v4;
  int64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  __int16 v13;

  v4 = a1[2];
  v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (_BYTE *)*a1) >> 1)
  {
    if ((a2 & 0x8000000000000000) != 0)
      sub_1D5282B8C();
    v5 = (_BYTE *)a1[1] - (_BYTE *)*a1;
    v6 = (char *)sub_1D52854A0(v3, a2);
    v7 = &v6[v5 & 0xFFFFFFFFFFFFFFFELL];
    v9 = &v6[2 * v8];
    v10 = (char *)*a1;
    v11 = (char *)a1[1];
    v12 = v7;
    if (v11 != *a1)
    {
      v12 = v7;
      do
      {
        v13 = *((_WORD *)v11 - 1);
        v11 -= 2;
        *((_WORD *)v12 - 1) = v13;
        v12 -= 2;
      }
      while (v11 != v10);
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
      operator delete(v10);
  }
}

uint64_t sub_1D52A7E28(uint64_t a1, unsigned int *a2)
{
  uint64_t v2;
  void *exception;

  v2 = *a2;
  if (v2 >= 2)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return *(unsigned __int16 *)(a1 + 2 * v2 + 8);
}

void sub_1D52A7E84(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

double sub_1D52A7E98(uint64_t a1, uint64_t *a2, char a3, void *a4, void *a5)
{
  uint64_t v5;
  double result;

  v5 = sub_1D5290574(a1, a2, a3, a4, a5);
  *(_QWORD *)v5 = off_1E9972128;
  *(_QWORD *)(v5 + 528) = 0;
  *(_QWORD *)(v5 + 520) = 0;
  *(_QWORD *)(v5 + 504) = 0;
  *(_QWORD *)(v5 + 512) = v5 + 520;
  *(_QWORD *)(v5 + 552) = 0;
  *(_QWORD *)(v5 + 544) = 0;
  *(_QWORD *)(v5 + 536) = v5 + 544;
  *(_QWORD *)(v5 + 576) = 0;
  *(_QWORD *)(v5 + 568) = 0;
  *(_QWORD *)(v5 + 560) = v5 + 568;
  *(_QWORD *)(v5 + 600) = 0;
  *(_QWORD *)(v5 + 592) = 0;
  *(_QWORD *)(v5 + 584) = v5 + 592;
  *(_QWORD *)(v5 + 624) = 0;
  *(_QWORD *)(v5 + 616) = 0;
  *(_QWORD *)(v5 + 608) = v5 + 616;
  *(_QWORD *)(v5 + 640) = 0;
  *(_QWORD *)(v5 + 648) = 0;
  *(_QWORD *)(v5 + 632) = v5 + 640;
  *(_QWORD *)(v5 + 672) = 0;
  *(_QWORD *)(v5 + 664) = 0;
  *(_QWORD *)(v5 + 656) = v5 + 664;
  *(_QWORD *)(v5 + 688) = 0;
  *(_QWORD *)(v5 + 696) = 0;
  *(_QWORD *)(v5 + 680) = v5 + 688;
  *(_QWORD *)(v5 + 712) = 0;
  *(_QWORD *)(v5 + 720) = 0;
  *(_QWORD *)(v5 + 704) = v5 + 712;
  *(_QWORD *)(v5 + 736) = 0;
  *(_QWORD *)(v5 + 744) = 0;
  *(_QWORD *)(v5 + 728) = v5 + 736;
  *(_QWORD *)(v5 + 760) = 0;
  *(_QWORD *)(v5 + 768) = 0;
  *(_QWORD *)(v5 + 752) = v5 + 760;
  *(_QWORD *)(v5 + 792) = 0;
  *(_QWORD *)(v5 + 784) = 0;
  *(_QWORD *)(v5 + 776) = v5 + 784;
  *(_QWORD *)(v5 + 816) = 0;
  *(_QWORD *)(v5 + 808) = 0;
  *(_QWORD *)(v5 + 800) = v5 + 808;
  *(_QWORD *)(v5 + 832) = 0;
  *(_QWORD *)(v5 + 840) = 0;
  *(_QWORD *)(v5 + 824) = v5 + 832;
  *(_QWORD *)(v5 + 856) = 0;
  *(_QWORD *)(v5 + 864) = 0;
  *(_QWORD *)(v5 + 848) = v5 + 856;
  *(_QWORD *)(v5 + 880) = 0;
  *(_QWORD *)(v5 + 888) = 0;
  *(_QWORD *)(v5 + 872) = v5 + 880;
  *(_QWORD *)(v5 + 904) = 0;
  *(_QWORD *)(v5 + 912) = 0;
  *(_QWORD *)(v5 + 896) = v5 + 904;
  *(_QWORD *)(v5 + 936) = 0;
  *(_QWORD *)(v5 + 928) = 0;
  *(_QWORD *)(v5 + 920) = v5 + 928;
  *(_QWORD *)(v5 + 960) = 0;
  *(_QWORD *)(v5 + 952) = 0;
  *(_QWORD *)(v5 + 944) = v5 + 952;
  *(_QWORD *)(v5 + 984) = 0;
  *(_QWORD *)(v5 + 976) = 0;
  *(_QWORD *)(v5 + 968) = v5 + 976;
  *(_QWORD *)(v5 + 1008) = 0;
  *(_QWORD *)(v5 + 1000) = 0;
  *(_QWORD *)(v5 + 992) = v5 + 1000;
  *(_WORD *)(v5 + 1016) = 0;
  *(_DWORD *)(v5 + 1020) = 0;
  result = 0.0;
  *(_QWORD *)(v5 + 1024) = 0;
  *(_QWORD *)(v5 + 1048) = 0;
  *(_QWORD *)(v5 + 1040) = 0;
  *(_QWORD *)(v5 + 1032) = v5 + 1040;
  *(_QWORD *)(v5 + 1072) = 0;
  *(_QWORD *)(v5 + 1064) = 0;
  *(_QWORD *)(v5 + 1056) = v5 + 1064;
  *(_QWORD *)(v5 + 1096) = 0;
  *(_QWORD *)(v5 + 1088) = 0;
  *(_QWORD *)(v5 + 1080) = v5 + 1088;
  *(_QWORD *)(v5 + 1120) = 0;
  *(_QWORD *)(v5 + 1112) = 0;
  *(_QWORD *)(v5 + 1104) = v5 + 1112;
  *(_QWORD *)(v5 + 1144) = 0;
  *(_QWORD *)(v5 + 1136) = 0;
  *(_QWORD *)(v5 + 1128) = v5 + 1136;
  *(_QWORD *)(v5 + 1168) = 0;
  *(_QWORD *)(v5 + 1160) = 0;
  *(_QWORD *)(v5 + 1152) = v5 + 1160;
  *(_DWORD *)(v5 + 1176) = 10;
  return result;
}

void sub_1D52A8080(void **a1)
{
  NSObject *v2;
  NSObject *v3;
  void (**v4)(_QWORD);
  void *v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  uint8_t *v19;
  void *v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  void *exception;
  void (***v34)(_QWORD);
  std::__shared_weak_count *v35;
  const void **v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  std::__shared_weak_count *v39;
  uint8_t buf[8];
  std::__shared_weak_count *v41;
  char v42;
  _QWORD v43[5];

  sub_1D52EAFEC();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if ((unint64_t)a1 + 1 >= 2 && os_signpost_enabled(v2))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v3, OS_SIGNPOST_INTERVAL_BEGIN, (os_signpost_id_t)a1, "CTIFFImageParser", (const char *)&unk_1D548AF1A, buf, 2u);
  }

  v43[0] = MEMORY[0x1E0C809B0];
  v43[1] = 3221225472;
  v43[2] = sub_1D52A8618;
  v43[3] = &unk_1E996F870;
  v43[4] = a1;
  v4 = (void (**)(_QWORD))MEMORY[0x1D82721B4](v43);
  if (((*((uint64_t (**)(void **))*a1 + 7))(a1) & 1) == 0)
  {
    (*((void (**)(void **))*a1 + 50))(a1);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v5)
    {
LABEL_36:

      goto LABEL_37;
    }
    sub_1D52917E4((uint64_t)a1, buf);
    v6 = v41;
    v7 = *(_QWORD *)(*(_QWORD *)buf + 40);
    if (!v41)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v41->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
      if (v7)
      {
LABEL_9:
        sub_1D52917E4((uint64_t)a1, &v36);
        sub_1D52B1C58((uint64_t *)buf, (uint64_t *)&v36);
        v10 = v37;
        if (v37)
        {
          v11 = (unint64_t *)&v37->__shared_owners_;
          do
            v12 = __ldaxr(v11);
          while (__stlxr(v12 - 1, v11));
          if (!v12)
          {
            ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
            std::__shared_weak_count::__release_weak(v10);
          }
        }
        sub_1D52917E4((uint64_t)a1, &v36);
        sub_1D53FE130(v36[5], v5, a1[14]);
        v13 = v37;
        if (v37)
        {
          v14 = (unint64_t *)&v37->__shared_owners_;
          do
            v15 = __ldaxr(v14);
          while (__stlxr(v15 - 1, v14));
          if (!v15)
          {
            ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
            std::__shared_weak_count::__release_weak(v13);
          }
        }
        sub_1D5285200((uint64_t *)buf);
        goto LABEL_36;
      }
    }
    else
    {
LABEL_8:
      if (v7)
        goto LABEL_9;
    }
    sub_1D52917E4((uint64_t)a1, &v36);
    (*((void (**)(uint8_t *__return_ptr))*v36 + 1))(buf);
    v16 = v37;
    if (v37)
    {
      v17 = (unint64_t *)&v37->__shared_owners_;
      do
        v18 = __ldaxr(v17);
      while (__stlxr(v18 - 1, v17));
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    if (v42 < 0)
    {
      if (v41)
      {
        v19 = *(uint8_t **)buf;
        goto LABEL_33;
      }
    }
    else if (v42)
    {
      v19 = buf;
LABEL_33:
      sub_1D53FE74C((os_signpost_id_t)v19, v5, a1[14]);
LABEL_34:
      if (v42 < 0)
        operator delete(*(void **)buf);
      goto LABEL_36;
    }
    sub_1D52917E4((uint64_t)a1, &v38);
    LODWORD(v34) = 0;
    sub_1D52B1CC8((uint64_t)&v36, &v38, &v34);
    sub_1D53F4544(&v38, v5, a1[14], 0, &v34);
    if (!v34)
    {
      exception = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1D8271938](exception, "RawCameraException");
      __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
    }
    (**v34)(v34);
    v27 = v35;
    if (v35)
    {
      v28 = (unint64_t *)&v35->__shared_owners_;
      do
        v29 = __ldaxr(v28);
      while (__stlxr(v29 - 1, v28));
      if (!v29)
      {
        ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
        std::__shared_weak_count::__release_weak(v27);
      }
    }
    sub_1D52B1D54((uint64_t)&v36);
    v30 = v39;
    if (v39)
    {
      v31 = (unint64_t *)&v39->__shared_owners_;
      do
        v32 = __ldaxr(v31);
      while (__stlxr(v32 - 1, v31));
      if (!v32)
      {
        ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
        std::__shared_weak_count::__release_weak(v30);
      }
    }
    goto LABEL_34;
  }
LABEL_37:
  sub_1D52850A0(buf, "");
  (*((void (**)(void **, uint8_t *, uint64_t))*a1 + 84))(a1, buf, 42);
  if (v42 < 0)
    operator delete(*(void **)buf);
  sub_1D52917E4((uint64_t)a1, buf);
  (*((void (**)(void **, uint8_t *, const void ***))*a1 + 80))(a1, buf, &v36);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v21 = v41;
  if (v41)
  {
    v22 = (unint64_t *)&v41->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
  }
  sub_1D52A869C(v20);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  (*((void (**)(void **, void *, void *))*a1 + 85))(a1, v20, v24);
  v25 = objc_claimAutoreleasedReturnValue();
  v26 = a1[63];
  a1[63] = (void *)v25;

  v4[2](v4);
}

void sub_1D52A8504(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  void (**v22)(_QWORD);
  void *v23;

  sub_1D52B1D54((uint64_t)&a12);
  sub_1D5282EB4((uint64_t)&a15);
  if (a22 < 0)
    operator delete(__p);

  v22[2](v22);
  _Unwind_Resume(a1);
}

void sub_1D52A8618(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  os_signpost_id_t v4;
  uint8_t v5[16];

  sub_1D52EAFEC();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = v2;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v3, OS_SIGNPOST_INTERVAL_END, v4, "CTIFFImageParser", (const char *)&unk_1D548AF1A, v5, 2u);
  }

}

id sub_1D52A869C(void *a1)
{
  id v1;
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  _QWORD v11[5];
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  void (*v16)(uint64_t);
  id v17;

  v1 = a1;
  v12 = 0;
  v13 = &v12;
  v14 = 0x3032000000;
  v15 = sub_1D52A8B60;
  v16 = sub_1D52A8B70;
  objc_msgSend_dictionary(MEMORY[0x1E0C99E08], v2, v3, v4, v5);
  v17 = (id)objc_claimAutoreleasedReturnValue();
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = sub_1D52A8B78;
  v11[3] = &unk_1E9972440;
  v11[4] = &v12;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(v1, v6, (uint64_t)v11, v7, v8);
  v9 = (id)v13[5];
  _Block_object_dispose(&v12, 8);

  return v9;
}

void sub_1D52A8768(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  void *v20;

  _Block_object_dispose(&a15, 8);

  _Unwind_Resume(a1);
}

void sub_1D52A8794(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  void **v4;
  void *__p[2];
  char v6;

  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  sub_1D52850A0(__p, "IFD0");
  v4 = sub_1D5294144(a1 + 1032, __p);
  if ((void **)(a1 + 1040) != v4)
    std::string::operator=(a2, (const std::string *)(v4 + 7));
  if (v6 < 0)
    operator delete(__p[0]);
}

void sub_1D52A8808(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;

  if (*(char *)(v15 + 23) < 0)
    operator delete(*(void **)v15);
  _Unwind_Resume(exception_object);
}

void sub_1D52A883C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  void **v4;
  void *__p[2];
  char v6;

  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  sub_1D52850A0(__p, "IFD0");
  v4 = sub_1D5294144(a1 + 1056, __p);
  if ((void **)(a1 + 1064) != v4)
    std::string::operator=(a2, (const std::string *)(v4 + 7));
  if (v6 < 0)
    operator delete(__p[0]);
}

void sub_1D52A88B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;

  if (*(char *)(v15 + 23) < 0)
    operator delete(*(void **)v15);
  _Unwind_Resume(exception_object);
}

unint64_t sub_1D52A88E4(uint64_t a1)
{
  unint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  BOOL v7;
  unint64_t result;
  void *exception;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 384))(&v10);
  v2 = (*(unsigned int (**)(uint64_t))(*(_QWORD *)v10 + 16))(v10);
  v3 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 424))(a1);
  v7 = v2 >= v6;
  result = v2 - v6;
  if (result == 0 || !v7)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return result;
}

void sub_1D52A89B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

BOOL sub_1D52A89D8(uint64_t a1, void **a2, _DWORD *a3)
{
  void **v5;

  v5 = sub_1D5294144(a1 + 584, a2);
  if ((void **)(a1 + 592) != v5)
    *a3 = *((_DWORD *)v5 + 14);
  return a1 + 592 != (_QWORD)v5;
}

BOOL sub_1D52A8A1C(uint64_t a1, void **a2, _DWORD *a3)
{
  void **v5;

  v5 = sub_1D5294144(a1 + 608, a2);
  if ((void **)(a1 + 616) != v5)
    *a3 = *((_DWORD *)v5 + 14);
  return a1 + 616 != (_QWORD)v5;
}

BOOL sub_1D52A8A60(uint64_t a1, void **a2, _DWORD *a3)
{
  void **v5;

  v5 = sub_1D5294144(a1 + 632, a2);
  if ((void **)(a1 + 640) != v5)
    *a3 = *((_DWORD *)v5 + 14);
  return a1 + 640 != (_QWORD)v5;
}

uint64_t sub_1D52A8AA4(uint64_t a1, void **a2, unsigned int a3, _DWORD *a4)
{
  void **v7;
  _BYTE *v8;

  v7 = sub_1D5294144(a1 + 656, a2);
  if ((void **)(a1 + 664) == v7)
    return 0;
  v8 = v7[7];
  if (a3 >= (unint64_t)(((_BYTE *)v7[8] - v8) >> 2))
    return 0;
  *a4 = *(_DWORD *)&v8[4 * a3];
  return 1;
}

id sub_1D52A8B0C@<X0>(void *a1@<X4>, __int16 a2@<W5>, int a3@<W6>, void *a4@<X7>, uint64_t a5@<X8>)
{
  id v9;
  id result;

  v9 = a1;
  result = a4;
  *(_QWORD *)a5 = v9;
  *(_WORD *)(a5 + 8) = a2;
  *(_DWORD *)(a5 + 12) = a3;
  *(_QWORD *)(a5 + 16) = result;
  return result;
}

uint64_t sub_1D52A8B60(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1D52A8B70(uint64_t a1)
{

}

void sub_1D52A8B78(uint64_t a1, void *a2, void *a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  id v26;

  v26 = a2;
  v5 = a3;
  objc_msgSend_objectForKeyedSubscript_(v5, v6, (uint64_t)CFSTR("Name"), v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v14 = (void *)objc_msgSend_mutableCopy(v5, v10, v11, v12, v13);
    objc_msgSend_removeObjectForKey_(v14, v15, (uint64_t)CFSTR("Name"), v16, v17);
    objc_msgSend_setObject_forKeyedSubscript_(v14, v18, (uint64_t)v26, (uint64_t)CFSTR("TagID"), v19);
    objc_msgSend_dictionaryWithDictionary_(MEMORY[0x1E0C99D80], v20, (uint64_t)v14, v21, v22);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), v24, (uint64_t)v23, (uint64_t)v9, v25);

  }
}

void sub_1D52A8C64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

id sub_1D52A8CA4(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  const char *v4;
  void *v5;
  void *v6;
  const char *v7;
  void *v8;
  const char *v9;
  void *v10;
  _QWORD v12[5];
  _QWORD v13[5];
  _QWORD v14[3];
  _QWORD v15[3];
  _QWORD v16[3];
  _QWORD v17[3];
  _QWORD v18[24];
  _QWORD v19[26];

  v19[24] = *MEMORY[0x1E0C80C00];
  v18[0] = &unk_1E99C8760;
  v18[1] = &unk_1E99C8778;
  v19[0] = &unk_1E99CC588;
  v19[1] = &unk_1E99CC5B0;
  v18[2] = &unk_1E99C8790;
  v18[3] = &unk_1E99C87A8;
  v19[2] = &unk_1E99CC5D8;
  v19[3] = &unk_1E99CC600;
  v18[4] = &unk_1E99C87C0;
  v18[5] = &unk_1E99C87D8;
  v19[4] = &unk_1E99CC628;
  v19[5] = &unk_1E99CC650;
  v18[6] = &unk_1E99C87F0;
  v18[7] = &unk_1E99C8808;
  v19[6] = &unk_1E99CC678;
  v19[7] = &unk_1E99CC6A0;
  v18[8] = &unk_1E99C8820;
  v18[9] = &unk_1E99C8838;
  v19[8] = &unk_1E99CC6C8;
  v19[9] = &unk_1E99CC6F0;
  v18[10] = &unk_1E99C8850;
  v18[11] = &unk_1E99C8868;
  v19[10] = &unk_1E99CC718;
  v19[11] = &unk_1E99CC740;
  v18[12] = &unk_1E99C8880;
  v18[13] = &unk_1E99C8898;
  v19[12] = &unk_1E99CC768;
  v19[13] = &unk_1E99CC790;
  v18[14] = &unk_1E99C88B0;
  v18[15] = &unk_1E99C88C8;
  v19[14] = &unk_1E99CC7B8;
  v19[15] = &unk_1E99CC7E0;
  v18[16] = &unk_1E99C88E0;
  v18[17] = &unk_1E99C88F8;
  v19[16] = &unk_1E99CC808;
  v19[17] = &unk_1E99CC830;
  v18[18] = &unk_1E99C8910;
  v16[0] = CFSTR("Name");
  v16[1] = CFSTR("Type");
  v17[0] = CFSTR("SubIFD");
  v17[1] = &unk_1E99C8928;
  v2 = MEMORY[0x1E0C809B0];
  v16[2] = CFSTR("Namespace");
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 3221225472;
  v13[2] = sub_1D52A9054;
  v13[3] = &unk_1E9972460;
  v13[4] = a1;
  v3 = (void *)MEMORY[0x1D82721B4](v13);
  v17[2] = v3;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v4, (uint64_t)v17, (uint64_t)v16, 3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v19[18] = v5;
  v19[19] = &unk_1E99CC858;
  v18[19] = &unk_1E99C8940;
  v18[20] = &unk_1E99C8958;
  v19[20] = &unk_1E99CC880;
  v19[21] = &unk_1E99CC8A8;
  v18[21] = &unk_1E99C8970;
  v18[22] = &unk_1E99C89A0;
  v14[0] = CFSTR("Name");
  v14[1] = CFSTR("Type");
  v15[0] = CFSTR("Exif");
  v15[1] = &unk_1E99C8928;
  v14[2] = CFSTR("Namespace");
  v12[0] = v2;
  v12[1] = 3221225472;
  v12[2] = sub_1D52A9064;
  v12[3] = &unk_1E9972460;
  v12[4] = a1;
  v6 = (void *)MEMORY[0x1D82721B4](v12);
  v15[2] = v6;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v7, (uint64_t)v15, (uint64_t)v14, 3);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v18[23] = &unk_1E99C89B8;
  v19[22] = v8;
  v19[23] = &unk_1E99CC8D0;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v9, (uint64_t)v19, (uint64_t)v18, 24);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  return v10;
}

void sub_1D52A9020(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

uint64_t sub_1D52A9054(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 640))(*(_QWORD *)(a1 + 32));
}

uint64_t sub_1D52A9064(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 648))(*(_QWORD *)(a1 + 32));
}

id sub_1D52A9074(uint64_t a1)
{
  void *v1;
  const char *v2;
  void *v3;
  const char *v4;
  void *v5;
  _QWORD v7[5];
  _QWORD v8[4];
  _QWORD v9[4];
  _QWORD v10[33];
  _QWORD v11[34];

  v11[33] = *MEMORY[0x1E0C80C00];
  v10[0] = &unk_1E99C89D0;
  v10[1] = &unk_1E99C89E8;
  v11[0] = &unk_1E99CC8F8;
  v11[1] = &unk_1E99CC920;
  v10[2] = &unk_1E99C8A00;
  v10[3] = &unk_1E99C8A18;
  v11[2] = &unk_1E99CC948;
  v11[3] = &unk_1E99CC970;
  v10[4] = &unk_1E99C8A30;
  v10[5] = &unk_1E99C8A48;
  v11[4] = &unk_1E99CC998;
  v11[5] = &unk_1E99CC9C0;
  v10[6] = &unk_1E99C8A60;
  v10[7] = &unk_1E99C8A78;
  v11[6] = &unk_1E99CC9E8;
  v11[7] = &unk_1E99CCA10;
  v10[8] = &unk_1E99C8A90;
  v10[9] = &unk_1E99C8AA8;
  v11[8] = &unk_1E99CCA38;
  v11[9] = &unk_1E99CCA60;
  v10[10] = &unk_1E99C8AC0;
  v10[11] = &unk_1E99C8AD8;
  v11[10] = &unk_1E99CCA88;
  v11[11] = &unk_1E99CCAB0;
  v10[12] = &unk_1E99C8AF0;
  v10[13] = &unk_1E99C8B08;
  v11[12] = &unk_1E99CCAD8;
  v11[13] = &unk_1E99CCB00;
  v10[14] = &unk_1E99C8B20;
  v10[15] = &unk_1E99C8B38;
  v11[14] = &unk_1E99CCB28;
  v11[15] = &unk_1E99CCB50;
  v10[16] = &unk_1E99C8B50;
  v10[17] = &unk_1E99C8B68;
  v11[16] = &unk_1E99CCB78;
  v11[17] = &unk_1E99CCBA0;
  v10[18] = &unk_1E99C8B80;
  v10[19] = &unk_1E99C8B98;
  v11[18] = &unk_1E99CCBC8;
  v11[19] = &unk_1E99CCBF0;
  v10[20] = &unk_1E99C8BB0;
  v10[21] = &unk_1E99C8BC8;
  v11[20] = &unk_1E99CCC18;
  v11[21] = &unk_1E99CCC40;
  v10[22] = &unk_1E99C8BE0;
  v10[23] = &unk_1E99C8BF8;
  v11[22] = &unk_1E99CCC68;
  v11[23] = &unk_1E99CCC90;
  v10[24] = &unk_1E99C8C10;
  v10[25] = &unk_1E99C8C28;
  v11[24] = &unk_1E99CCCB8;
  v11[25] = &unk_1E99CCCE0;
  v10[26] = &unk_1E99C8C40;
  v10[27] = &unk_1E99C8C58;
  v11[26] = &unk_1E99CCD08;
  v11[27] = &unk_1E99CCD30;
  v11[28] = &unk_1E99CCD58;
  v10[28] = &unk_1E99C8C70;
  v10[29] = &unk_1E99C8C88;
  v8[0] = CFSTR("Name");
  v8[1] = CFSTR("Type");
  v9[0] = CFSTR("MakerNote");
  v9[1] = &unk_1E99C8CA0;
  v9[2] = &unk_1E99C8CB8;
  v8[2] = CFSTR("Count");
  v8[3] = CFSTR("Namespace");
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = sub_1D52A946C;
  v7[3] = &unk_1E9972460;
  v7[4] = a1;
  v1 = (void *)MEMORY[0x1D82721B4](v7);
  v9[3] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v2, (uint64_t)v9, (uint64_t)v8, 4);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v11[29] = v3;
  v11[30] = &unk_1E99CCD80;
  v10[30] = &unk_1E99C8CD0;
  v10[31] = &unk_1E99C8CE8;
  v10[32] = &unk_1E99C8D00;
  v11[31] = &unk_1E99CCDA8;
  v11[32] = &unk_1E99CCDD0;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v4, (uint64_t)v11, (uint64_t)v10, 33);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

void sub_1D52A9448(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t sub_1D52A946C(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 656))(*(_QWORD *)(a1 + 32));
}

uint64_t sub_1D52A947C()
{
  return MEMORY[0x1E0C9AA70];
}

uint64_t sub_1D52A9488()
{
  return 42;
}

uint64_t sub_1D52A9490(uint64_t a1, uint64_t a2, int a3)
{
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  int v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  int v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  int v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  _QWORD *v32;
  _QWORD **v33;
  _QWORD *v34;
  _QWORD **v35;
  unsigned int v36;
  _QWORD *v37;
  char v38;
  char v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  uint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  int v47;
  const std::string::value_type *v48;
  std::string::size_type v49;
  std::string *v50;
  __int128 v51;
  void *exception;
  uint64_t v54;
  unsigned int v55;
  std::string v56;
  void *__p[2];
  std::string::size_type v58;
  uint64_t v59;
  _QWORD v60[10];
  char v61;
  uint64_t v62;
  uint64_t *v63;
  _QWORD *v64[2];
  unsigned int v65;
  uint64_t v66[3];
  uint64_t v67[3];

  sub_1D52917E4(a1, &v59);
  LODWORD(v66[0]) = 0;
  sub_1D5285164(v67, &v59, (uint64_t)v66, 0);
  v6 = (std::__shared_weak_count *)v60[0];
  if (v60[0])
  {
    v7 = (unint64_t *)(v60[0] + 8);
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  sub_1D52917E4(a1, &v59);
  v9 = sub_1D528479C(v59);
  v10 = (std::__shared_weak_count *)v60[0];
  if (v60[0])
  {
    v11 = (unint64_t *)(v60[0] + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (v9 == 18761 || v9 == 19789)
  {
    if (v9 == 19789)
      v13 = 2;
    else
      v13 = 1;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 96))(a1, v13);
    sub_1D52917E4(a1, &v59);
    sub_1D5293C20(v66, &v59, v13);
    v14 = (std::__shared_weak_count *)v60[0];
    if (v60[0])
    {
      v15 = (unint64_t *)(v60[0] + 8);
      do
        v16 = __ldaxr(v15);
      while (__stlxr(v16 - 1, v15));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
        std::__shared_weak_count::__release_weak(v14);
      }
    }
    sub_1D52917E4(a1, &v59);
    v17 = sub_1D528479C(v59);
    v18 = (std::__shared_weak_count *)v60[0];
    if (v60[0])
    {
      v19 = (unint64_t *)(v60[0] + 8);
      do
        v20 = __ldaxr(v19);
      while (__stlxr(v20 - 1, v19));
      if (!v20)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
    if (v17 == a3 || v17 == (*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 664))(a1))
    {
      v65 = 0;
      sub_1D52917E4(a1, &v59);
      v55 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v59 + 16))(v59);
      v21 = (std::__shared_weak_count *)v60[0];
      if (v60[0])
      {
        v22 = (unint64_t *)(v60[0] + 8);
        do
          v23 = __ldaxr(v22);
        while (__stlxr(v23 - 1, v22));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      v24 = 0;
      v64[0] = 0;
      v64[1] = 0;
      v63 = (uint64_t *)v64;
      v25 = *MEMORY[0x1E0DE4F60];
      v54 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 24);
      v26 = MEMORY[0x1E0DE4FB8] + 16;
      while (1)
      {
        sub_1D52917E4(a1, &v59);
        v65 = sub_1D52847F8(v59);
        if (v65)
          v27 = v24 >= 0x14;
        else
          v27 = 1;
        v28 = !v27;
        v29 = (std::__shared_weak_count *)v60[0];
        if (v60[0])
        {
          v30 = (unint64_t *)(v60[0] + 8);
          do
            v31 = __ldaxr(v30);
          while (__stlxr(v31 - 1, v30));
          if (!v31)
          {
            ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
            std::__shared_weak_count::__release_weak(v29);
          }
        }
        if (!v28)
          break;
        v32 = v64[0];
        if (v64[0])
        {
          v33 = v64;
          do
          {
            v34 = v32;
            v35 = v33;
            v36 = *((_DWORD *)v32 + 7);
            v37 = v32 + 1;
            if (v36 >= v65)
            {
              v37 = v34;
              v33 = (_QWORD **)v34;
            }
            v32 = (_QWORD *)*v37;
          }
          while (v32);
          if (v33 != v64)
          {
            if (v36 < v65)
              v34 = v35;
            if (v65 >= *((_DWORD *)v34 + 7))
            {
              exception = __cxa_allocate_exception(0x10uLL);
              MEMORY[0x1D8271938](exception, "RawCameraException");
              __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
            }
          }
        }
        sub_1D52B37AC(&v63, &v65, &v65);
        if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) != 0)
        {
          if (v55 <= v65 + 390)
            goto LABEL_85;
        }
        else
        {
          sub_1D52917E4(a1, &v59);
          v38 = (**(uint64_t (***)(uint64_t))v59)(v59);
          if (v55 > v65 + 390)
            v39 = 1;
          else
            v39 = v38;
          v40 = (std::__shared_weak_count *)v60[0];
          if (v60[0])
          {
            v41 = (unint64_t *)(v60[0] + 8);
            do
              v42 = __ldaxr(v41);
            while (__stlxr(v42 - 1, v41));
            if (!v42)
            {
              ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
              std::__shared_weak_count::__release_weak(v40);
            }
          }
          if ((v39 & 1) == 0)
          {
LABEL_85:
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 184))(a1, 1);
            break;
          }
        }
        sub_1D52917E4(a1, &v59);
        v43 = v59;
        sub_1D5282F74((int *)__p, (int *)&v65);
        (*(void (**)(uint64_t, void **, _QWORD))(*(_QWORD *)v43 + 40))(v43, __p, 0);
        v44 = (std::__shared_weak_count *)v60[0];
        if (v60[0])
        {
          v45 = (unint64_t *)(v60[0] + 8);
          do
            v46 = __ldaxr(v45);
          while (__stlxr(v46 - 1, v45));
          if (!v46)
          {
            ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
            std::__shared_weak_count::__release_weak(v44);
          }
        }
        sub_1D52A9B48((uint64_t)&v59);
        sub_1D52B3864(&v59, (uint64_t)"IFD", 3);
        std::ostream::operator<<();
        sub_1D52B3B04((uint64_t)v60, &v56);
        v47 = *(char *)(a2 + 23);
        if (v47 >= 0)
          v48 = (const std::string::value_type *)a2;
        else
          v48 = *(const std::string::value_type **)a2;
        if (v47 >= 0)
          v49 = *(unsigned __int8 *)(a2 + 23);
        else
          v49 = *(_QWORD *)(a2 + 8);
        v50 = std::string::insert(&v56, 0, v48, v49);
        v51 = *(_OWORD *)&v50->__r_.__value_.__l.__data_;
        v58 = v50->__r_.__value_.__r.__words[2];
        *(_OWORD *)__p = v51;
        v50->__r_.__value_.__l.__size_ = 0;
        v50->__r_.__value_.__r.__words[2] = 0;
        v50->__r_.__value_.__r.__words[0] = 0;
        (*(void (**)(uint64_t, _QWORD, void **))(*(_QWORD *)a1 + 704))(a1, 0, __p);
        if (SHIBYTE(v58) < 0)
          operator delete(__p[0]);
        if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v56.__r_.__value_.__l.__data_);
        v59 = v25;
        *(_QWORD *)((char *)&v60[-1] + *(_QWORD *)(v25 - 24)) = v54;
        v60[0] = v26;
        if (v61 < 0)
          operator delete((void *)v60[8]);
        ++v24;
        std::streambuf::~streambuf();
        std::ostream::~ostream();
        MEMORY[0x1D8271A7C](&v62);
      }
      sub_1D52B376C((uint64_t)&v63, v64[0]);
    }
    sub_1D5293C98(v66);
  }
  return sub_1D5285200(v67);
}

void sub_1D52A9A44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,char a24)
{
  uint64_t v24;

  sub_1D5293C98((uint64_t *)(v24 - 144));
  sub_1D5285200((uint64_t *)(v24 - 120));
  _Unwind_Resume(a1);
}

uint64_t sub_1D52A9B48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  std::ios_base *v6;

  v2 = MEMORY[0x1E0DE4FE0];
  v3 = MEMORY[0x1E0DE4FE0] + 64;
  *(_QWORD *)(a1 + 112) = MEMORY[0x1E0DE4FE0] + 64;
  v4 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 8);
  v5 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 16);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + *(_QWORD *)(v4 - 24)) = v5;
  v6 = (std::ios_base *)(a1 + *(_QWORD *)(*(_QWORD *)a1 - 24));
  std::ios_base::init(v6, (void *)(a1 + 8));
  v6[1].__vftable = 0;
  v6[1].__fmtflags_ = -1;
  *(_QWORD *)a1 = v2 + 24;
  *(_QWORD *)(a1 + 112) = v3;
  std::streambuf::basic_streambuf();
  *(_QWORD *)(a1 + 8) = MEMORY[0x1E0DE4FB8] + 16;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_DWORD *)(a1 + 104) = 16;
  return a1;
}

void sub_1D52A9C0C(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::ostream::~ostream();
  MEMORY[0x1D8271A7C](v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52A9C34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = MEMORY[0x1E0DE4F60];
  v3 = *MEMORY[0x1E0DE4F60];
  *(_QWORD *)a1 = *MEMORY[0x1E0DE4F60];
  *(_QWORD *)(a1 + *(_QWORD *)(v3 - 24)) = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(a1 + 8) = MEMORY[0x1E0DE4FB8] + 16;
  if (*(char *)(a1 + 95) < 0)
    operator delete(*(void **)(a1 + 72));
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x1D8271A7C](a1 + 112);
  return a1;
}

id sub_1D52A9CB8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  int v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  RAWTIFFIFD *v19;
  const char *v20;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  const char *v24;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  int v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unsigned int v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  uint64_t v37;
  BOOL v38;
  int v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  _QWORD *v43;
  _QWORD **v44;
  _QWORD *v45;
  _QWORD **v46;
  unsigned int v47;
  _QWORD *v48;
  char v49;
  char v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  uint64_t (***v54)(_QWORD);
  const char *v55;
  uint64_t v56;
  uint64_t v57;
  std::__shared_weak_count *v58;
  unint64_t *v59;
  unint64_t v60;
  void *v61;
  void *v62;
  const char *v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  void *v67;
  void *exception;
  void *v70;
  void *v71;
  int v72;
  uint64_t (***v73)(_QWORD);
  std::__shared_weak_count *v74;
  uint64_t *v75;
  _QWORD *v76[2];
  unsigned int v77;
  uint64_t v78;
  std::__shared_weak_count *v79;
  uint64_t v80[3];

  v5 = a2;
  v6 = a3;
  sub_1D52917E4(a1, &v78);
  LODWORD(v75) = 0;
  sub_1D5285164(v80, &v78, (uint64_t)&v75, 0);
  v7 = v79;
  if (v79)
  {
    p_shared_owners = (unint64_t *)&v79->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  sub_1D52917E4(a1, &v78);
  v10 = sub_1D528479C(v78);
  v11 = v79;
  if (v79)
  {
    v12 = (unint64_t *)&v79->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v10 == 18761 || v10 == 19789)
  {
    if (v10 == 19789)
      v14 = 2;
    else
      v14 = 1;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 96))(a1, v14);
    objc_msgSend_array(MEMORY[0x1E0C99DE8], v15, v16, v17, v18);
    v71 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = [RAWTIFFIFD alloc];
    v70 = (void *)objc_msgSend_initWithNamespace_reverseNamespace_(v19, v20, (uint64_t)v5, (uint64_t)v6, v21);
    objc_msgSend_setObject_atIndexedSubscript_(v70, v22, (uint64_t)v71, 0, v23);
    objc_msgSend_setObject_forKeyedSubscript_(v70, v24, (uint64_t)v71, (uint64_t)CFSTR("IFD"), v25);
    sub_1D52917E4(a1, &v75);
    sub_1D5293C20(&v78, (uint64_t *)&v75, v14);
    v26 = (std::__shared_weak_count *)v76[0];
    if (v76[0])
    {
      v27 = v76[0] + 1;
      do
        v28 = __ldaxr(v27);
      while (__stlxr(v28 - 1, v27));
      if (!v28)
      {
        ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
        std::__shared_weak_count::__release_weak(v26);
      }
    }
    sub_1D52917E4(a1, &v75);
    v29 = sub_1D528479C((uint64_t)v75);
    v30 = (std::__shared_weak_count *)v76[0];
    if (v76[0])
    {
      v31 = v76[0] + 1;
      do
        v32 = __ldaxr(v31);
      while (__stlxr(v32 - 1, v31));
      if (!v32)
      {
        ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
        std::__shared_weak_count::__release_weak(v30);
      }
    }
    if (v29 == 42 || v29 == (*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 664))(a1))
    {
      v77 = 0;
      sub_1D52917E4(a1, &v75);
      v33 = (*(uint64_t (**)(uint64_t *))(*v75 + 16))(v75);
      v34 = (std::__shared_weak_count *)v76[0];
      if (v76[0])
      {
        v35 = v76[0] + 1;
        do
          v36 = __ldaxr(v35);
        while (__stlxr(v36 - 1, v35));
        if (!v36)
        {
          ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
          std::__shared_weak_count::__release_weak(v34);
        }
      }
      v37 = 0;
      v76[0] = 0;
      v76[1] = 0;
      v75 = (uint64_t *)v76;
      while (1)
      {
        sub_1D52917E4(a1, &v73);
        v77 = sub_1D52847F8((uint64_t)v73);
        if (v77)
          v38 = v37 >= 0x14;
        else
          v38 = 1;
        v39 = !v38;
        v40 = v74;
        if (v74)
        {
          v41 = (unint64_t *)&v74->__shared_owners_;
          do
            v42 = __ldaxr(v41);
          while (__stlxr(v42 - 1, v41));
          if (!v42)
          {
            ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
            std::__shared_weak_count::__release_weak(v40);
          }
        }
        if (!v39)
          break;
        v43 = v76[0];
        if (v76[0])
        {
          v44 = v76;
          do
          {
            v45 = v43;
            v46 = v44;
            v47 = *((_DWORD *)v43 + 7);
            v48 = v43 + 1;
            if (v47 >= v77)
            {
              v48 = v45;
              v44 = (_QWORD **)v45;
            }
            v43 = (_QWORD *)*v48;
          }
          while (v43);
          if (v44 != v76)
          {
            if (v47 < v77)
              v45 = v46;
            if (v77 >= *((_DWORD *)v45 + 7))
            {
              exception = __cxa_allocate_exception(0x10uLL);
              MEMORY[0x1D8271938](exception, "RawCameraException");
              __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
            }
          }
        }
        sub_1D52B37AC(&v75, &v77, &v77);
        if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) != 0)
        {
          if (v33 <= v77 + 390)
            goto LABEL_76;
        }
        else
        {
          sub_1D52917E4(a1, &v73);
          v49 = (**v73)(v73);
          if (v33 > v77 + 390)
            v50 = 1;
          else
            v50 = v49;
          v51 = v74;
          if (v74)
          {
            v52 = (unint64_t *)&v74->__shared_owners_;
            do
              v53 = __ldaxr(v52);
            while (__stlxr(v53 - 1, v52));
            if (!v53)
            {
              ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
              std::__shared_weak_count::__release_weak(v51);
            }
          }
          if ((v50 & 1) == 0)
          {
LABEL_76:
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 184))(a1, 1);
            break;
          }
        }
        sub_1D52917E4(a1, &v73);
        v54 = v73;
        sub_1D5282F74(&v72, (int *)&v77);
        ((void (*)(uint64_t (***)(_QWORD), int *, _QWORD))(*v54)[5])(v54, &v72, 0);
        v58 = v74;
        if (v74)
        {
          v59 = (unint64_t *)&v74->__shared_owners_;
          do
            v60 = __ldaxr(v59);
          while (__stlxr(v60 - 1, v59));
          if (!v60)
          {
            ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
            std::__shared_weak_count::__release_weak(v58);
          }
        }
        objc_msgSend_stringWithFormat_(MEMORY[0x1E0CB3940], v55, (uint64_t)CFSTR("%@[%d]"), v56, v57, CFSTR("IFD"), v37);
        v61 = (void *)objc_claimAutoreleasedReturnValue();
        (*(void (**)(uint64_t, _QWORD, void *, id, id))(*(_QWORD *)a1 + 712))(a1, 0, v61, v5, v6);
        v62 = (void *)objc_claimAutoreleasedReturnValue();

        if (v62)
          objc_msgSend_addObject_(v71, v63, (uint64_t)v62, v64, v65);
        v37 = (v37 + 1);

      }
      sub_1D52B376C((uint64_t)&v75, v76[0]);
      sub_1D5293C98(&v78);
      v67 = v70;
      v66 = v70;
    }
    else
    {
      sub_1D5293C98(&v78);
      v66 = 0;
      v67 = v70;
    }

  }
  else
  {
    v66 = 0;
  }
  sub_1D5285200(v80);

  return v66;
}

void sub_1D52AA258(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  void *v13;
  void *v14;
  uint64_t v15;
  va_list va;

  va_start(va, a13);
  sub_1D5293C98((uint64_t *)va);

  sub_1D5285200((uint64_t *)(v15 - 104));
  _Unwind_Resume(a1);
}

uint64_t sub_1D52AA374(uint64_t a1, uint64_t a2, _WORD *a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unsigned int v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  _WORD *v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unint64_t v26;
  void *exception;
  uint64_t v30;
  std::__shared_weak_count *v31;

  sub_1D52917E4(a1, &v30);
  v5 = sub_1D528479C(v30);
  v6 = v31;
  if (v31)
  {
    p_shared_owners = (unint64_t *)&v31->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  if (v5 > 0x200)
    return 0;
  v9 = v5;
  sub_1D52917E4(a1, &v30);
  (*(void (**)(uint64_t, _WORD *, uint64_t))(*(_QWORD *)v30 + 32))(v30, a3 + 2, 12 * v5);
  v10 = v31;
  if (v31)
  {
    v11 = (unint64_t *)&v31->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  *a3 = v5;
  sub_1D52917E4(a1, &v30);
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v30 + 16))(v30);
  v14 = v31;
  if (v31)
  {
    v15 = (unint64_t *)&v31->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  sub_1D52917E4(a1, &v30);
  v17 = sub_1D52845E4(v30);
  v18 = v31;
  if (!v31)
    goto LABEL_21;
  v19 = (unint64_t *)&v31->__shared_owners_;
  do
    v20 = __ldaxr(v19);
  while (__stlxr(v20 - 1, v19));
  if (!v20)
  {
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!(_DWORD)v5)
      return v5;
  }
  else
  {
LABEL_21:
    if (!(_DWORD)v5)
      return v5;
  }
  v21 = a3 + 4;
  do
  {
    if (v17 == 1)
    {
      v22 = (unsigned __int16)*(v21 - 1);
      v23 = *(_DWORD *)v21;
    }
    else
    {
      *(v21 - 2) = bswap32((unsigned __int16)*(v21 - 2)) >> 16;
      v24 = bswap32((unsigned __int16)*(v21 - 1));
      v22 = HIWORD(v24);
      *(v21 - 1) = HIWORD(v24);
      v23 = bswap32(*(_DWORD *)v21);
      *(_DWORD *)v21 = v23;
    }
    v25 = sub_1D52A7528(v22);
    v26 = v25 * (unint64_t)v23;
    if ((v26 & 0xFFFFFFFF00000000) != 0 || v26 >= v13)
    {
      exception = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1D8271938](exception, "RawCameraException");
      __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
    }
    if (v17 != 1)
    {
      if (v25 == 4 || v26 >= 5)
      {
        *((_DWORD *)v21 + 1) = bswap32(*((_DWORD *)v21 + 1));
      }
      else if (v25 == 2)
      {
        v21[2] = bswap32((unsigned __int16)v21[2]) >> 16;
        v21[3] = bswap32((unsigned __int16)v21[3]) >> 16;
      }
    }
    v21 += 6;
    --v9;
  }
  while (v9);
  return v5;
}

void sub_1D52AA62C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52AA664()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  _BOOL8 v6;
  uint64_t v7;
  unsigned int v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t *v12;
  BOOL v13;
  uint64_t v15;
  std::__shared_weak_count *v16;
  __int16 v17;
  uint64_t v18;
  unint64_t v19;
  unsigned int v20;

  v0 = MEMORY[0x1E0C80A78]();
  if (*(_DWORD *)(v0 + 1176) <= (int)v1)
    return 1;
  v3 = v2;
  v4 = v0;
  v5 = sub_1D52AA374(v0, v1, &v17);
  v6 = v5 != 0;
  if (v5)
  {
    LODWORD(v7) = v5;
    sub_1D52917E4(v4, &v15);
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v15 + 16))(v15);
    v9 = v16;
    if (v16)
    {
      p_shared_owners = (unint64_t *)&v16->__shared_owners_;
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v4 + 688))(v4, v3);
    v7 = v7;
    v12 = &v18;
    do
    {
      v15 = *v12;
      LODWORD(v16) = *((_DWORD *)v12 + 2);
      v19 = sub_1D52A7528(WORD1(v15)) * HIDWORD(v15);
      sub_1D528304C(&v20, &v19);
      if (v20)
        v13 = v20 >= v8;
      else
        v13 = 1;
      if (!v13)
        (*(void (**)(uint64_t, uint64_t, uint64_t *))(*(_QWORD *)v4 + 728))(v4, v3, &v15);
      v12 = (uint64_t *)((char *)v12 + 12);
      --v7;
    }
    while (v7);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v4 + 696))(v4, v3);
  }
  return v6;
}

void sub_1D52AA7DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1D5282EB4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52AA7F0(uint64_t a1)
{
  unint64_t v2;
  unsigned int v3;

  v2 = sub_1D52A7528(*(unsigned __int16 *)(a1 + 2)) * *(unsigned int *)(a1 + 4);
  sub_1D528304C(&v3, &v2);
  return v3;
}

id sub_1D52AA838()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  int v5;
  int v6;
  _DWORD *v7;
  id v8;
  RAWTIFFIFD *v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  unsigned int v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  uint64_t v18;
  _DWORD *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  const char *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  const char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  const char *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  const char *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  const char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  const char *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  const char *v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  const char *v74;
  uint64_t v75;
  uint64_t v76;
  void (**v77)(_QWORD, _QWORD, _QWORD);
  uint64_t v78;
  std::__shared_weak_count *v79;
  unint64_t *v80;
  unint64_t v81;
  void *v82;
  void *v83;
  std::__shared_weak_count *v84;
  unint64_t *v85;
  unint64_t v86;
  const char *v87;
  uint64_t v88;
  const char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  std::__shared_weak_count *v93;
  unint64_t *v94;
  unint64_t v95;
  int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  std::__shared_weak_count *v100;
  unint64_t *v101;
  unint64_t v102;
  uint64_t v103;
  const char *v104;
  uint64_t v105;
  uint64_t v106;
  std::__shared_weak_count *v107;
  unint64_t *v108;
  unint64_t v109;
  std::__shared_weak_count *v110;
  unint64_t *v111;
  unint64_t v112;
  uint64_t v113;
  std::__shared_weak_count *v114;
  unint64_t *v115;
  unint64_t v116;
  std::__shared_weak_count *v117;
  unint64_t *v118;
  unint64_t v119;
  const char *v120;
  uint64_t v121;
  uint64_t v122;
  std::__shared_weak_count *v123;
  unint64_t *v124;
  unint64_t v125;
  void *v126;
  const char *v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  int v131;
  void *v132;
  unsigned int v133;
  unsigned int v134;
  std::__shared_weak_count *v135;
  unint64_t *v136;
  unint64_t v137;
  uint64_t v138;
  std::__shared_weak_count *v139;
  unint64_t *v140;
  unint64_t v141;
  int v142;
  std::__shared_weak_count *v143;
  unint64_t *v144;
  unint64_t v145;
  unsigned int v146;
  unsigned int v147;
  std::__shared_weak_count *v148;
  unint64_t *v149;
  unint64_t v150;
  BOOL v151;
  uint64_t v152;
  const char *v153;
  uint64_t v154;
  uint64_t v155;
  std::__shared_weak_count *v156;
  unint64_t *v157;
  unint64_t v158;
  void *v159;
  const char *v160;
  uint64_t v161;
  uint64_t v162;
  void *v163;
  void *v164;
  const char *v165;
  uint64_t v166;
  void *v167;
  const char *v168;
  uint64_t v169;
  void *v170;
  char v171;
  id v172;
  void *v174;
  void *exception;
  uint64_t v176;
  unsigned int v177;
  id v178;
  id v179;
  void *v180;
  unsigned int v181;
  id v182;
  id v183;
  void *v184;
  id v185;
  uint64_t v186;
  std::__shared_weak_count *v187;
  uint64_t v188;
  std::__shared_weak_count *v189;
  uint64_t v190;
  std::__shared_weak_count *v191;
  uint64_t v192;
  std::__shared_weak_count *v193;
  int v194;
  uint64_t v195[3];
  uint64_t v196;
  int v197;
  void *__p;
  std::__shared_weak_count *v199;
  id v200;
  _WORD v201[3078];

  v0 = MEMORY[0x1E0C80A78]();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v7 = (_DWORD *)v0;
  v183 = v8;
  v182 = v4;
  v178 = v2;
  v181 = v6 + 1;
  if (v6 + 1 >= v7[294])
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v9 = [RAWTIFFIFD alloc];
  v12 = (void *)objc_msgSend_initWithNamespace_reverseNamespace_(v9, v10, (uint64_t)v182, (uint64_t)v178, v11);
  v180 = v12;
  sub_1D52850A0(&__p, "");
  v14 = sub_1D52AA374((uint64_t)v7, v13, v201);
  if (SHIBYTE(v200) < 0)
    operator delete(__p);
  sub_1D52917E4((uint64_t)v7, &__p);
  v177 = (*(uint64_t (**)(void *))(*(_QWORD *)__p + 16))(__p);
  v15 = v199;
  if (!v199)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v199->__shared_owners_;
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
    std::__shared_weak_count::__release_weak(v15);
    if (v14)
      goto LABEL_9;
  }
  else
  {
LABEL_8:
    if (v14)
    {
LABEL_9:
      v18 = 0;
      v176 = v14;
      do
      {
        v19 = &v201[6 * v18];
        v196 = *(_QWORD *)(v19 + 1);
        v197 = v19[3];
        __p = (void *)(sub_1D52A7528(WORD1(v196)) * HIDWORD(v196));
        sub_1D528304C(v195, (unint64_t *)&__p);
        if (!LODWORD(v195[0]) || LODWORD(v195[0]) >= v177)
          goto LABEL_123;
        v23 = (unsigned __int16)v196;
        objc_msgSend_numberWithUnsignedInteger_(MEMORY[0x1E0CB37E8], v20, (unsigned __int16)v196, v21, v22);
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_objectForKeyedSubscript_(v182, v25, (uint64_t)v24, v26, v27);
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_objectForKeyedSubscript_(v28, v29, (uint64_t)CFSTR("Name"), v30, v31);
        v32 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend_numberWithUnsignedInteger_(MEMORY[0x1E0CB37E8], v33, v23, v34, v35);
        v36 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_objectForKeyedSubscript_(v182, v37, (uint64_t)v36, v38, v39);
        v40 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_objectForKeyedSubscript_(v40, v41, (uint64_t)CFSTR("Type"), v42, v43);
        v44 = (void *)objc_claimAutoreleasedReturnValue();

        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
          WORD1(v196) = objc_msgSend_unsignedShortValue(v44, v45, v46, v47, v48);

        objc_msgSend_numberWithUnsignedInteger_(MEMORY[0x1E0CB37E8], v49, v23, v50, v51);
        v52 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_objectForKeyedSubscript_(v182, v53, (uint64_t)v52, v54, v55);
        v56 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_objectForKeyedSubscript_(v56, v57, (uint64_t)CFSTR("Count"), v58, v59);
        v60 = (void *)objc_claimAutoreleasedReturnValue();

        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
          HIDWORD(v196) = objc_msgSend_unsignedShortValue(v60, v61, v62, v63, v64);

        v65 = v182;
        v185 = v178;
        objc_msgSend_numberWithUnsignedInteger_(MEMORY[0x1E0CB37E8], v66, v23, v67, v68);
        v69 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_objectForKeyedSubscript_(v65, v70, (uint64_t)v69, v71, v72);
        v73 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_objectForKeyedSubscript_(v73, v74, (uint64_t)CFSTR("Namespace"), v75, v76);
        v77 = (void (**)(_QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue();

        if (v77)
        {
          sub_1D52917E4((uint64_t)v7, &__p);
          ((void (**)(_QWORD, void **, uint64_t *))v77)[2](v77, &__p, &v196);
          v78 = objc_claimAutoreleasedReturnValue();

          v79 = v199;
          if (v199)
          {
            v80 = (unint64_t *)&v199->__shared_owners_;
            do
              v81 = __ldaxr(v80);
            while (__stlxr(v81 - 1, v80));
            if (!v81)
            {
              ((void (*)(std::__shared_weak_count *))v79->__on_zero_shared)(v79);
              std::__shared_weak_count::__release_weak(v79);
            }
          }
          v65 = (id)v78;
        }

        sub_1D52917E4((uint64_t)v7, &__p);
        sub_1D52A869C(v65);
        v82 = (void *)objc_claimAutoreleasedReturnValue();
        sub_1D52A4FC8((uint64_t)&v196, (uint64_t *)&__p, v65, v82);
        v83 = (void *)objc_claimAutoreleasedReturnValue();

        v84 = v199;
        if (v199)
        {
          v85 = (unint64_t *)&v199->__shared_owners_;
          do
            v86 = __ldaxr(v85);
          while (__stlxr(v86 - 1, v85));
          if (!v86)
          {
            ((void (*)(std::__shared_weak_count *))v84->__on_zero_shared)(v84);
            std::__shared_weak_count::__release_weak(v84);
          }
        }
        (*(void (**)(void **__return_ptr, _DWORD *, void *, id, uint64_t, void *, _QWORD, _QWORD, void *))(*(_QWORD *)v7 + 632))(&__p, v7, v180, v183, v23, v32, WORD1(v196), HIDWORD(v196), v83);
        v184 = __p;

        WORD1(v196) = (_WORD)v199;
        HIDWORD(v196) = HIDWORD(v199);
        v179 = v200;

        if (WORD1(v196) == 37500)
        {
          sub_1D52917E4((uint64_t)v7, &v192);
          LODWORD(v188) = sub_1D52A5CC8((uint64_t)&v196);
          sub_1D5285B08((int *)&v190, (int *)&v188);
          sub_1D5285164(v195, &v192, (uint64_t)&v190, 0);
          v110 = v193;
          if (v193)
          {
            v111 = (unint64_t *)&v193->__shared_owners_;
            do
              v112 = __ldaxr(v111);
            while (__stlxr(v112 - 1, v111));
            if (!v112)
            {
              ((void (*)(std::__shared_weak_count *))v110->__on_zero_shared)(v110);
              std::__shared_weak_count::__release_weak(v110);
            }
          }
          if ((*(unsigned int (**)(_DWORD *, uint64_t *))(*(_QWORD *)v7 + 752))(v7, &v196))
          {
            sub_1D52917E4((uint64_t)v7, &v190);
            v113 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)v7 + 120))(v7);
            sub_1D5293C20(&v192, &v190, v113);
            v114 = v191;
            if (v191)
            {
              v115 = (unint64_t *)&v191->__shared_owners_;
              do
                v116 = __ldaxr(v115);
              while (__stlxr(v116 - 1, v115));
              if (!v116)
              {
                ((void (*)(std::__shared_weak_count *))v114->__on_zero_shared)(v114);
                std::__shared_weak_count::__release_weak(v114);
              }
            }
            sub_1D52917E4((uint64_t)v7, &v188);
            LODWORD(v186) = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)v7 + 136))(v7);
            sub_1D52B1CC8((uint64_t)&v190, &v188, &v186);
            v117 = v189;
            if (v189)
            {
              v118 = (unint64_t *)&v189->__shared_owners_;
              do
                v119 = __ldaxr(v118);
              while (__stlxr(v119 - 1, v118));
              if (!v119)
              {
                ((void (*)(std::__shared_weak_count *))v117->__on_zero_shared)(v117);
                std::__shared_weak_count::__release_weak(v117);
              }
            }
            sub_1D52917E4((uint64_t)v7, &v186);
            v194 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)v7 + 152))(v7);
            sub_1D5285164(&v188, &v186, (uint64_t)&v194, 0);
            v123 = v187;
            if (v187)
            {
              v124 = (unint64_t *)&v187->__shared_owners_;
              do
                v125 = __ldaxr(v124);
              while (__stlxr(v125 - 1, v124));
              if (!v125)
              {
                ((void (*)(std::__shared_weak_count *))v123->__on_zero_shared)(v123);
                std::__shared_weak_count::__release_weak(v123);
              }
            }
            if (v184)
              objc_msgSend_stringByAppendingFormat_(v183, v120, (uint64_t)CFSTR(".%@"), v121, v122, v184);
            else
              objc_msgSend_stringByAppendingFormat_(v183, v120, (uint64_t)CFSTR(".%lu"), v121, v122, v23);
            v164 = (void *)objc_claimAutoreleasedReturnValue();
            (*(void (**)(_DWORD *, _QWORD, void *, id, id))(*(_QWORD *)v7 + 712))(v7, v181, v164, v65, v185);
            v167 = (void *)objc_claimAutoreleasedReturnValue();
            if (v167)
              objc_msgSend_setObject_atIndexedSubscript_(v180, v165, (uint64_t)v167, v23, v166);

            (*(void (**)(_DWORD *))(*(_QWORD *)v7 + 760))(v7);
            sub_1D5285200(&v188);
            sub_1D52B1D54((uint64_t)&v190);
            sub_1D5293C98(&v192);
          }
          sub_1D5285200(v195);
          v126 = v179;
        }
        else
        {
          if (WORD1(v196) == 13)
          {
            sub_1D52917E4((uint64_t)v7, &v192);
            sub_1D52B1C58(v195, &v192);
            v93 = v193;
            if (v193)
            {
              v94 = (unint64_t *)&v193->__shared_owners_;
              do
                v95 = __ldaxr(v94);
              while (__stlxr(v95 - 1, v94));
              if (!v95)
              {
                ((void (*)(std::__shared_weak_count *))v93->__on_zero_shared)(v93);
                std::__shared_weak_count::__release_weak(v93);
              }
            }
            v96 = HIDWORD(v196);
            LODWORD(v188) = v197;
            if (HIDWORD(v196) == 1)
            {
              LODWORD(v186) = v197;
              sub_1D52917E4((uint64_t)v7, &v192);
              v97 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v192 + 16))(v192);
              v194 = 390;
              LODWORD(v190) = v97;
              v98 = *sub_1D52B3BEC(&v190, &v194);
              v99 = v186;
              v100 = v193;
              if (v193)
              {
                v101 = (unint64_t *)&v193->__shared_owners_;
                do
                  v102 = __ldaxr(v101);
                while (__stlxr(v102 - 1, v101));
                if (!v102)
                {
                  ((void (*)(std::__shared_weak_count *))v100->__on_zero_shared)(v100);
                  std::__shared_weak_count::__release_weak(v100);
                }
              }
              if (v98 >= v99)
              {
                sub_1D52917E4((uint64_t)v7, &v192);
                v103 = v192;
                sub_1D5282F74((int *)&v190, (int *)&v186);
                (*(void (**)(uint64_t, uint64_t *, _QWORD))(*(_QWORD *)v103 + 40))(v103, &v190, 0);
                v107 = v193;
                if (v193)
                {
                  v108 = (unint64_t *)&v193->__shared_owners_;
                  do
                    v109 = __ldaxr(v108);
                  while (__stlxr(v109 - 1, v108));
                  if (!v109)
                  {
                    ((void (*)(std::__shared_weak_count *))v107->__on_zero_shared)(v107);
                    std::__shared_weak_count::__release_weak(v107);
                  }
                }
                if (v184)
                  objc_msgSend_stringByAppendingFormat_(v183, v104, (uint64_t)CFSTR(".%@"), v105, v106, v184);
                else
                  objc_msgSend_stringByAppendingFormat_(v183, v104, (uint64_t)CFSTR(".%lu"), v105, v106, v23);
                v129 = (void *)objc_claimAutoreleasedReturnValue();
                (*(void (**)(_DWORD *, _QWORD, void *, id, id))(*(_QWORD *)v7 + 712))(v7, v181, v129, v65, v185);
                v170 = (void *)objc_claimAutoreleasedReturnValue();
                if (v170)
                  objc_msgSend_setObject_atIndexedSubscript_(v180, v168, (uint64_t)v170, v23, v169);

LABEL_120:
                v171 = 1;
LABEL_121:
                sub_1D5285200(v195);
                v126 = v179;
                if ((v171 & 1) == 0)
                {

                  v172 = 0;
                  v12 = v180;
                  goto LABEL_129;
                }
                goto LABEL_122;
              }
            }
            else
            {
              objc_msgSend_array(MEMORY[0x1E0C99DE8], v89, v90, v91, v92);
              v129 = (void *)objc_claimAutoreleasedReturnValue();
              if (!v96)
              {
LABEL_110:
                objc_msgSend_setObject_atIndexedSubscript_(v180, v127, (uint64_t)v129, v23, v128);
                goto LABEL_120;
              }
              v130 = 0;
              while (1)
              {
                LODWORD(v186) = v188;
                sub_1D52917E4((uint64_t)v7, &v192);
                v131 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v192 + 16))(v192);
                v132 = v129;
                v194 = 390;
                LODWORD(v190) = v131;
                v133 = *sub_1D52B3BEC(&v190, &v194);
                v134 = v186;
                v135 = v193;
                if (v193)
                {
                  v136 = (unint64_t *)&v193->__shared_owners_;
                  do
                    v137 = __ldaxr(v136);
                  while (__stlxr(v137 - 1, v136));
                  if (!v137)
                  {
                    ((void (*)(std::__shared_weak_count *))v135->__on_zero_shared)(v135);
                    std::__shared_weak_count::__release_weak(v135);
                  }
                }
                if (v133 < v134)
                  break;
                sub_1D52917E4((uint64_t)v7, &v192);
                v138 = v192;
                sub_1D5282F74((int *)&v190, (int *)&v188);
                (*(void (**)(uint64_t, uint64_t *, _QWORD))(*(_QWORD *)v138 + 40))(v138, &v190, 0);
                v139 = v193;
                if (v193)
                {
                  v140 = (unint64_t *)&v193->__shared_owners_;
                  do
                    v141 = __ldaxr(v140);
                  while (__stlxr(v141 - 1, v140));
                  if (!v141)
                  {
                    ((void (*)(std::__shared_weak_count *))v139->__on_zero_shared)(v139);
                    std::__shared_weak_count::__release_weak(v139);
                  }
                }
                sub_1D52917E4((uint64_t)v7, &v192);
                v142 = sub_1D52847F8(v192);
                LODWORD(v186) = v142;
                v143 = v193;
                if (v193)
                {
                  v144 = (unint64_t *)&v193->__shared_owners_;
                  do
                    v145 = __ldaxr(v144);
                  while (__stlxr(v145 - 1, v144));
                  if (!v145)
                  {
                    ((void (*)(std::__shared_weak_count *))v143->__on_zero_shared)(v143);
                    std::__shared_weak_count::__release_weak(v143);
                  }
                  v142 = v186;
                }
                if (!v142)
                  goto LABEL_131;
                sub_1D52917E4((uint64_t)v7, &v192);
                v146 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v192 + 16))(v192);
                v147 = v186;
                v148 = v193;
                if (v193)
                {
                  v149 = (unint64_t *)&v193->__shared_owners_;
                  do
                    v150 = __ldaxr(v149);
                  while (__stlxr(v150 - 1, v149));
                  if (!v150)
                  {
                    ((void (*)(std::__shared_weak_count *))v148->__on_zero_shared)(v148);
                    std::__shared_weak_count::__release_weak(v148);
                  }
                }
                v151 = v147 >= v146;
                v129 = v132;
                if (v151)
                {
LABEL_131:
                  v174 = __cxa_allocate_exception(0x10uLL);
                  MEMORY[0x1D8271938](v174, "RawCameraException");
                  __cxa_throw(v174, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
                }
                sub_1D52917E4((uint64_t)v7, &v192);
                v152 = v192;
                sub_1D5282F74((int *)&v190, (int *)&v186);
                (*(void (**)(uint64_t, uint64_t *, _QWORD))(*(_QWORD *)v152 + 40))(v152, &v190, 0);
                v156 = v193;
                if (v193)
                {
                  v157 = (unint64_t *)&v193->__shared_owners_;
                  do
                    v158 = __ldaxr(v157);
                  while (__stlxr(v158 - 1, v157));
                  if (!v158)
                  {
                    ((void (*)(std::__shared_weak_count *))v156->__on_zero_shared)(v156);
                    std::__shared_weak_count::__release_weak(v156);
                  }
                }
                if (v184)
                  objc_msgSend_stringByAppendingFormat_(v183, v153, (uint64_t)CFSTR(".%@[%lu]"), v154, v155, v184, v130);
                else
                  objc_msgSend_stringByAppendingFormat_(v183, v153, (uint64_t)CFSTR(".%lu[%lu]"), v154, v155, v23, v130);
                v159 = (void *)objc_claimAutoreleasedReturnValue();
                (*(void (**)(_DWORD *, _QWORD, void *, id, id))(*(_QWORD *)v7 + 712))(v7, v181, v159, v65, v185);
                v163 = (void *)objc_claimAutoreleasedReturnValue();
                if (v163)
                  objc_msgSend_addObject_(v132, v160, (uint64_t)v163, v161, v162);
                --v96;
                ++v130;

                LODWORD(v188) = v188 + 4;
                if (!v96)
                  goto LABEL_110;
              }

            }
            v171 = 0;
            goto LABEL_121;
          }
          v126 = v179;
          objc_msgSend_setObject_atIndexedSubscript_(v180, v87, (uint64_t)v179, v23, v88);
        }
LABEL_122:

        v12 = v180;
LABEL_123:
        ++v18;
      }
      while (v18 != v176);
    }
  }
  v172 = v12;
LABEL_129:

  return v172;
}

void sub_1D52AB538(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15, uint64_t a16, void *a17, void *a18, uint64_t a19, void *a20,char a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void *__p,uint64_t a39,void *a40)
{
  void *v40;

  sub_1D5285200(&a33);

  _Unwind_Resume(a1);
}

uint64_t sub_1D52AB850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  int v30;
  const std::string::value_type *v31;
  std::string::size_type v32;
  std::string *v33;
  __int128 v34;
  unsigned int v36;
  uint64_t v37;
  int v38;
  std::string v39;
  void *__p[2];
  std::string::size_type v41;
  uint64_t v42;
  _QWORD v43[10];
  char v44;
  uint64_t v45;
  unsigned int v46;
  unsigned int v47;
  uint64_t v48[3];

  sub_1D52917E4(a1, &v42);
  sub_1D52B1C58(v48, &v42);
  v6 = (std::__shared_weak_count *)v43[0];
  if (v43[0])
  {
    v7 = (unint64_t *)(v43[0] + 8);
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  if (*(_DWORD *)(a3 + 4) >= 0xAu)
    v9 = 10;
  else
    v9 = *(_DWORD *)(a3 + 4);
  v47 = *(_DWORD *)(a3 + 8);
  if (v9)
  {
    v10 = 0;
    v11 = *MEMORY[0x1E0DE4F60];
    v12 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 24);
    v37 = MEMORY[0x1E0DE4FB8] + 16;
    v38 = v9;
    do
    {
      v46 = v47;
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1))
      {
        sub_1D52917E4(a1, &v42);
        v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v42 + 16))(v42);
        LODWORD(v39.__r_.__value_.__l.__data_) = 390;
        LODWORD(__p[0]) = v13;
        v14 = *sub_1D52B3BEC(__p, (int *)&v39);
        v15 = v46;
        v16 = (std::__shared_weak_count *)v43[0];
        if (v43[0])
        {
          v17 = (unint64_t *)(v43[0] + 8);
          do
            v18 = __ldaxr(v17);
          while (__stlxr(v18 - 1, v17));
          if (!v18)
          {
            v36 = v14;
            ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
            std::__shared_weak_count::__release_weak(v16);
            v14 = v36;
          }
        }
        if (v14 < v15)
          break;
      }
      if (v9 != 1)
      {
        sub_1D52917E4(a1, &v42);
        v19 = v42;
        sub_1D5282F74((int *)__p, (int *)&v47);
        (*(void (**)(uint64_t, void **, _QWORD))(*(_QWORD *)v19 + 40))(v19, __p, 0);
        v20 = (std::__shared_weak_count *)v43[0];
        if (v43[0])
        {
          v21 = (unint64_t *)(v43[0] + 8);
          do
            v22 = __ldaxr(v21);
          while (__stlxr(v22 - 1, v21));
          if (!v22)
          {
            ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
            std::__shared_weak_count::__release_weak(v20);
          }
        }
        sub_1D52917E4(a1, &v42);
        v46 = sub_1D52847F8(v42);
        v23 = (std::__shared_weak_count *)v43[0];
        if (v43[0])
        {
          v24 = (unint64_t *)(v43[0] + 8);
          do
            v25 = __ldaxr(v24);
          while (__stlxr(v25 - 1, v24));
          if (!v25)
          {
            ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
            std::__shared_weak_count::__release_weak(v23);
          }
        }
      }
      sub_1D52917E4(a1, &v42);
      v26 = v42;
      sub_1D5282F74((int *)__p, (int *)&v46);
      (*(void (**)(uint64_t, void **, _QWORD))(*(_QWORD *)v26 + 40))(v26, __p, 0);
      v27 = (std::__shared_weak_count *)v43[0];
      if (v43[0])
      {
        v28 = (unint64_t *)(v43[0] + 8);
        do
          v29 = __ldaxr(v28);
        while (__stlxr(v29 - 1, v28));
        if (!v29)
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v27);
        }
      }
      sub_1D52A9B48((uint64_t)&v42);
      sub_1D52B3864(&v42, (uint64_t)":SUBIFD", 7);
      std::ostream::operator<<();
      sub_1D52B3B04((uint64_t)v43, &v39);
      v30 = *(char *)(a2 + 23);
      if (v30 >= 0)
        v31 = (const std::string::value_type *)a2;
      else
        v31 = *(const std::string::value_type **)a2;
      if (v30 >= 0)
        v32 = *(unsigned __int8 *)(a2 + 23);
      else
        v32 = *(_QWORD *)(a2 + 8);
      v33 = std::string::insert(&v39, 0, v31, v32);
      v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
      v41 = v33->__r_.__value_.__r.__words[2];
      *(_OWORD *)__p = v34;
      v33->__r_.__value_.__l.__size_ = 0;
      v33->__r_.__value_.__r.__words[2] = 0;
      v33->__r_.__value_.__r.__words[0] = 0;
      (*(void (**)(uint64_t, _QWORD, void **))(*(_QWORD *)a1 + 704))(a1, 0, __p);
      if (SHIBYTE(v41) < 0)
        operator delete(__p[0]);
      if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v39.__r_.__value_.__l.__data_);
      v47 += 4;
      v42 = v11;
      *(_QWORD *)((char *)&v43[-1] + *(_QWORD *)(v11 - 24)) = v12;
      v43[0] = v37;
      if (v44 < 0)
        operator delete((void *)v43[8]);
      ++v10;
      std::streambuf::~streambuf();
      std::ostream::~ostream();
      MEMORY[0x1D8271A7C](&v45);
      --v38;
    }
    while (v38);
  }
  sub_1D5285200(v48);
  return 1;
}

void sub_1D52ABC20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,char a26)
{
  sub_1D5282EB4((uint64_t)&a26);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52ABCC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t *v6;
  __int16 v8;
  uint64_t v9;

  v0 = MEMORY[0x1E0C80A78]();
  v2 = v1;
  v3 = v0;
  v4 = sub_1D52AA374(v0, v1, &v8);
  if (v4)
  {
    v5 = v4;
    v6 = &v9;
    do
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t *))(*(_QWORD *)v3 + 744))(v3, v2, v6);
      v6 = (uint64_t *)((char *)v6 + 12);
      --v5;
    }
    while (v5);
  }
  return 1;
}

uint64_t sub_1D52ABD50(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v6;
  std::__shared_weak_count *v7;
  int v8;

  sub_1D52917E4(a1, &v6);
  v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 48))(v6);
  (*(void (**)(uint64_t, int *))(*(_QWORD *)a1 + 160))(a1, &v8);
  v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return 1;
}

void sub_1D52ABDE0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1D5282EB4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52ABDF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t *v6;
  __int16 v8;
  uint64_t v9;

  v0 = MEMORY[0x1E0C80A78]();
  v2 = v1;
  v3 = v0;
  v4 = sub_1D52AA374(v0, v1, &v8);
  if (v4)
  {
    v5 = v4;
    v6 = &v9;
    do
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t *))(*(_QWORD *)v3 + 776))(v3, v2, v6);
      v6 = (uint64_t *)((char *)v6 + 12);
      --v5;
    }
    while (v5);
  }
  return 1;
}

void sub_1D52ABE88(uint64_t **a1, uint64_t a2, unsigned __int16 *a3)
{
  uint64_t v6;
  const std::string::value_type *v7;
  unint64_t v8;
  int v9;
  unsigned int v10;
  int v11;
  uint64_t *v12;
  int v13;
  std::string *v14;
  std::string *v15;
  double v16;
  char v17;
  uint64_t *v18;
  float v19;
  int v20;
  _BOOL4 v21;
  int v22;
  int v23;
  uint64_t *v25;
  uint64_t *v26;
  int v27;
  std::__shared_weak_count *size;
  unint64_t *v29;
  unint64_t v30;
  std::string::size_type v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  std::string::size_type v40;
  uint64_t v41;
  int v42;
  int v43;
  __int16 v44;
  std::__shared_weak_count *v45;
  unint64_t *p_shared_owners;
  unint64_t v47;
  void *v48;
  int v49;
  int v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  int v54;
  int v55;
  uint64_t *v56;
  double *v57;
  std::string::size_type v58;
  std::string *v59;
  int v60;
  unsigned int v61;
  std::__shared_weak_count *v62;
  unint64_t *v63;
  unint64_t v64;
  int v65;
  int *v66;
  char *v67;
  int v68;
  std::string::size_type v69;
  std::string::size_type v70;
  std::__shared_weak_count *v71;
  unint64_t *v72;
  unint64_t v73;
  _QWORD *v74;
  int v75;
  const std::string::value_type *v76;
  std::string::size_type v77;
  std::string *v78;
  __int128 v79;
  void *exception;
  std::string::size_type v81;
  std::string v82;
  void *__p[2];
  std::string::size_type v84;
  std::string __str;
  void *v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  __int128 *__src;
  std::__shared_weak_count *v93;
  char v94;
  uint64_t v95;

  v95 = *MEMORY[0x1E0C80C00];
  v6 = *(unsigned __int8 *)(a2 + 23);
  if ((v6 & 0x80u) == 0)
    v7 = (const std::string::value_type *)a2;
  else
    v7 = *(const std::string::value_type **)a2;
  if ((v6 & 0x80u) != 0)
    v6 = *(_QWORD *)(a2 + 8);
  if (v6)
  {
    v8 = 0;
    do
    {
      v9 = *(unsigned __int8 *)v7++;
      if (v9 == 58)
        ++v8;
      --v6;
    }
    while (v6);
    if (v8 >= 9)
    {
      exception = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1D8271938](exception, "RawCameraException");
      __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
    }
  }
  v10 = *a3;
  if (v10 <= 0x13C)
  {
    switch(*a3)
    {
      case 0xFEu:
        v13 = a3[1];
        if ((v13 == 4 || v13 == 9) && *((_DWORD *)a3 + 1) == 1)
        {
          v11 = *((_DWORD *)a3 + 2);
          __str.__r_.__value_.__r.__words[0] = a2;
          v12 = sub_1D52B3C68(a1 + 64, (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&__str);
          goto LABEL_250;
        }
        break;
      case 0x100u:
        v22 = a3[1];
        if (v22 == 3)
        {
          if (*((_DWORD *)a3 + 1) == 1)
          {
            v11 = sub_1D52AD670((uint64_t)a3);
            __str.__r_.__value_.__r.__words[0] = a2;
            v12 = sub_1D52B3C68(a1 + 67, (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&__str);
            goto LABEL_250;
          }
        }
        else if (v22 == 4 && *((_DWORD *)a3 + 1) == 1)
        {
          v11 = *((_DWORD *)a3 + 2);
          __str.__r_.__value_.__r.__words[0] = a2;
          v12 = sub_1D52B3C68(a1 + 67, (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&__str);
          goto LABEL_250;
        }
        break;
      case 0x101u:
        v23 = a3[1];
        if (v23 == 3)
        {
          if (*((_DWORD *)a3 + 1) == 1)
          {
            v11 = sub_1D52AD670((uint64_t)a3);
            __str.__r_.__value_.__r.__words[0] = a2;
            v12 = sub_1D52B3C68(a1 + 70, (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&__str);
            goto LABEL_250;
          }
        }
        else if (v23 == 4 && *((_DWORD *)a3 + 1) == 1)
        {
          v11 = *((_DWORD *)a3 + 2);
          __str.__r_.__value_.__r.__words[0] = a2;
          v12 = sub_1D52B3C68(a1 + 70, (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&__str);
          goto LABEL_250;
        }
        break;
      case 0x102u:
        if (a3[1] == 3)
        {
          memset(&__str, 0, sizeof(__str));
          if (!sub_1D52AD6B0((uint64_t)a1, (uint64_t)a3, (void **)&__str.__r_.__value_.__l.__data_))
            goto LABEL_192;
          v89 = a2;
          v15 = (std::string *)(sub_1D52B3E7C(a1 + 82, (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&v89) + 7);
          if (v15 == &__str)
            goto LABEL_192;
          goto LABEL_161;
        }
        break;
      case 0x103u:
        if (a3[1] - 5 >= 0xFFFFFFFE && *((_DWORD *)a3 + 1) == 1)
        {
          LODWORD(v89) = 0;
          sub_1D5285A24(&__str, (unsigned int *)&v89);
          v11 = sub_1D52A7E28((uint64_t)a3, (unsigned int *)&__str);
          __str.__r_.__value_.__r.__words[0] = a2;
          v12 = sub_1D52B3C68(a1 + 73, (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&__str);
          goto LABEL_250;
        }
        break;
      case 0x106u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          LODWORD(v89) = 0;
          sub_1D5285A24(&__str, (unsigned int *)&v89);
          v11 = sub_1D52A7E28((uint64_t)a3, (unsigned int *)&__str);
          __str.__r_.__value_.__r.__words[0] = a2;
          v12 = sub_1D52B3C68(a1 + 79, (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&__str);
          goto LABEL_250;
        }
        break;
      case 0x10Fu:
        if (a3[1] == 2)
        {
          memset(&__str, 0, sizeof(__str));
          if (sub_1D52ADD1C((uint64_t)a1, (uint64_t)a3, &__str, 1))
          {
            v89 = a2;
            v25 = sub_1D52B3FFC(a1 + 129, (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&v89);
            std::string::operator=((std::string *)(v25 + 7), &__str);
          }
          goto LABEL_172;
        }
        break;
      case 0x110u:
        if (a3[1] == 2)
        {
          memset(&__str, 0, sizeof(__str));
          if (sub_1D52ADD1C((uint64_t)a1, (uint64_t)a3, &__str, 1))
          {
            v89 = a2;
            v26 = sub_1D52B3FFC(a1 + 132, (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&v89);
            std::string::operator=((std::string *)(v26 + 7), &__str);
          }
          goto LABEL_172;
        }
        break;
      case 0x111u:
        if (a3[1] - 3 <= 1)
        {
          sub_1D52917E4((uint64_t)a1, &__str);
          v27 = sub_1D52845F4((uint64_t)__str.__r_.__value_.__l.__data_);
          size = (std::__shared_weak_count *)__str.__r_.__value_.__l.__size_;
          if (__str.__r_.__value_.__l.__size_)
          {
            v29 = (unint64_t *)(__str.__r_.__value_.__l.__size_ + 8);
            do
              v30 = __ldaxr(v29);
            while (__stlxr(v30 - 1, v29));
            if (!v30)
            {
              ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
              std::__shared_weak_count::__release_weak(size);
            }
          }
          memset(&__str, 0, sizeof(__str));
          if (!sub_1D52AD6B0((uint64_t)a1, (uint64_t)a3, (void **)&__str.__r_.__value_.__l.__data_))
            goto LABEL_192;
          if (v27)
          {
            v31 = __str.__r_.__value_.__r.__words[0];
            if (((__str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0]) & 0x3FFFFFFFCLL) != 0)
            {
              v32 = 0;
              v33 = ((__str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0]) >> 2);
              do
              {
                LODWORD(v89) = v27;
                LODWORD(__src) = *sub_1D5294254((int *)&v89, (unsigned int *)(v31 + v32));
                v34 = sub_1D52ADF28((unsigned int *)&__src);
                v31 = __str.__r_.__value_.__r.__words[0];
                *(_DWORD *)(__str.__r_.__value_.__r.__words[0] + v32) = v34;
                v32 += 4;
                --v33;
              }
              while (v33);
            }
          }
          v89 = a2;
          v15 = (std::string *)(sub_1D52B3E7C(a1 + 97, (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&v89) + 7);
          if (v15 == &__str)
            goto LABEL_192;
          goto LABEL_161;
        }
        break;
      case 0x112u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          LODWORD(v89) = 0;
          sub_1D5285A24(&__str, (unsigned int *)&v89);
          v11 = sub_1D52A7E28((uint64_t)a3, (unsigned int *)&__str);
          __str.__r_.__value_.__r.__words[0] = a2;
          v12 = sub_1D52B3C68(a1 + 88, (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&__str);
          goto LABEL_250;
        }
        break;
      case 0x115u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          LODWORD(v89) = 0;
          sub_1D5285A24(&__str, (unsigned int *)&v89);
          v11 = sub_1D52A7E28((uint64_t)a3, (unsigned int *)&__str);
          __str.__r_.__value_.__r.__words[0] = a2;
          v12 = sub_1D52B3C68(a1 + 85, (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&__str);
          goto LABEL_250;
        }
        break;
      case 0x116u:
        v35 = a3[1];
        if (v35 == 3)
        {
          if (*((_DWORD *)a3 + 1) == 1)
          {
            v11 = sub_1D52AD670((uint64_t)a3);
            __str.__r_.__value_.__r.__words[0] = a2;
            v12 = sub_1D52B3C68(a1 + 91, (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&__str);
            goto LABEL_250;
          }
        }
        else if (v35 == 4 && *((_DWORD *)a3 + 1) == 1)
        {
          v11 = *((_DWORD *)a3 + 2);
          __str.__r_.__value_.__r.__words[0] = a2;
          v12 = sub_1D52B3C68(a1 + 91, (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&__str);
          goto LABEL_250;
        }
        break;
      case 0x117u:
        if (a3[1] - 3 <= 1)
        {
          memset(&__str, 0, sizeof(__str));
          if (sub_1D52AD6B0((uint64_t)a1, (uint64_t)a3, (void **)&__str.__r_.__value_.__l.__data_))
          {
            v89 = a2;
            v15 = (std::string *)(sub_1D52B3E7C(a1 + 100, (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&v89) + 7);
            if (v15 != &__str)
LABEL_161:
              sub_1D5282A44((char *)v15, __str.__r_.__value_.__l.__data_, __str.__r_.__value_.__l.__size_, (uint64_t)(__str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0]) >> 2);
          }
          goto LABEL_192;
        }
        break;
      case 0x11Cu:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          LODWORD(v89) = 0;
          sub_1D5285A24(&__str, (unsigned int *)&v89);
          v11 = sub_1D52A7E28((uint64_t)a3, (unsigned int *)&__str);
          __str.__r_.__value_.__r.__words[0] = a2;
          v12 = sub_1D52B3C68(a1 + 94, (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&__str);
LABEL_250:
          *((_DWORD *)v12 + 14) = v11;
        }
        break;
      default:
        return;
    }
  }
  else
  {
    if (*a3 <= 0x2BBu)
    {
      if (*a3 > 0x200u)
      {
        switch(*a3)
        {
          case 0x211u:
            if ((((uint64_t (*)(uint64_t **))(*a1)[7])(a1) & 1) == 0 && a3[1] == 5 && *((_DWORD *)a3 + 1) == 3)
            {
              memset(&__str, 0, sizeof(__str));
              if (!sub_1D52ADF90((uint64_t)a1, (uint64_t)a3, (uint64_t)&__str))
                goto LABEL_192;
              v89 = a2;
              v15 = (std::string *)(sub_1D52B3E7C(a1 + 135, (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&v89) + 7);
              if (v15 == &__str)
                goto LABEL_192;
              goto LABEL_161;
            }
            break;
          case 0x212u:
            if ((((uint64_t (*)(uint64_t **))(*a1)[7])(a1) & 1) == 0 && a3[1] == 3 && *((_DWORD *)a3 + 1) == 2)
            {
              memset(&__str, 0, sizeof(__str));
              if (!sub_1D52AE554((uint64_t)a1, (uint64_t)a3, &__str.__r_.__value_.__l.__data_))
                goto LABEL_192;
              v89 = a2;
              v14 = (std::string *)(sub_1D52B3E7C(a1 + 138, (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&v89) + 7);
              if (v14 == &__str)
                goto LABEL_192;
              goto LABEL_32;
            }
            break;
          case 0x213u:
            if ((((uint64_t (*)(uint64_t **))(*a1)[7])(a1) & 1) == 0 && a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
            {
              v44 = sub_1D52AD670((uint64_t)a3);
              __str.__r_.__value_.__r.__words[0] = a2;
              *((_WORD *)sub_1D52B417C(a1 + 141, (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&__str) + 28) = v44;
            }
            break;
          case 0x214u:
            if ((((uint64_t (*)(uint64_t **))(*a1)[7])(a1) & 1) == 0 && a3[1] == 5 && *((_DWORD *)a3 + 1) == 6)
            {
              memset(&__str, 0, sizeof(__str));
              if (!sub_1D52ADF90((uint64_t)a1, (uint64_t)a3, (uint64_t)&__str))
                goto LABEL_192;
              v89 = a2;
              v15 = (std::string *)(sub_1D52B3E7C(a1 + 144, (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&v89) + 7);
              if (v15 == &__str)
                goto LABEL_192;
              goto LABEL_161;
            }
            break;
          default:
            if (v10 == 513)
            {
              if (a3[1] == 4 && *((_DWORD *)a3 + 1) == 1)
              {
                v49 = sub_1D52A5CC8((uint64_t)a3);
                sub_1D52917E4((uint64_t)a1, &__str);
                LODWORD(__p[0]) = sub_1D52845F4((uint64_t)__str.__r_.__value_.__l.__data_);
                LODWORD(__src) = sub_1D52ADF28((unsigned int *)__p);
                LODWORD(v89) = v49;
                v50 = *sub_1D52B0860(&v89, &__src);
                v89 = a2;
                *((_DWORD *)sub_1D52B3C68(a1 + 103, (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&v89) + 14) = v50;
                v51 = (std::__shared_weak_count *)__str.__r_.__value_.__l.__size_;
                if (__str.__r_.__value_.__l.__size_)
                {
                  v52 = (unint64_t *)(__str.__r_.__value_.__l.__size_ + 8);
                  do
                    v53 = __ldaxr(v52);
                  while (__stlxr(v53 - 1, v52));
                  if (!v53)
                  {
                    ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
                    std::__shared_weak_count::__release_weak(v51);
                  }
                }
              }
            }
            else if (v10 == 514 && a3[1] == 4 && *((_DWORD *)a3 + 1) == 1)
            {
              v11 = *((_DWORD *)a3 + 2);
              __str.__r_.__value_.__r.__words[0] = a2;
              v12 = sub_1D52B3C68(a1 + 106, (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&__str);
              goto LABEL_250;
            }
            break;
        }
      }
      else
      {
        switch(*a3)
        {
          case 0x13Du:
            if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
            {
              LODWORD(v89) = 0;
              sub_1D5285A24(&__str, (unsigned int *)&v89);
              v11 = sub_1D52A7E28((uint64_t)a3, (unsigned int *)&__str);
              __str.__r_.__value_.__r.__words[0] = a2;
              v12 = sub_1D52B3C68(a1 + 76, (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&__str);
              goto LABEL_250;
            }
            break;
          case 0x142u:
            if ((((uint64_t (*)(uint64_t **))(*a1)[7])(a1) & 1) == 0)
            {
              v36 = a3[1];
              if (v36 == 3)
              {
                if (*((_DWORD *)a3 + 1) == 1)
                {
                  v11 = sub_1D52AD670((uint64_t)a3);
                  __str.__r_.__value_.__r.__words[0] = a2;
                  v12 = sub_1D52B3C68(a1 + 109, (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&__str);
                  goto LABEL_250;
                }
              }
              else if (v36 == 4 && *((_DWORD *)a3 + 1) == 1)
              {
                v11 = *((_DWORD *)a3 + 2);
                __str.__r_.__value_.__r.__words[0] = a2;
                v12 = sub_1D52B3C68(a1 + 109, (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&__str);
                goto LABEL_250;
              }
            }
            break;
          case 0x143u:
            if ((((uint64_t (*)(uint64_t **))(*a1)[7])(a1) & 1) == 0)
            {
              v37 = a3[1];
              if (v37 == 3)
              {
                if (*((_DWORD *)a3 + 1) == 1)
                {
                  v11 = sub_1D52AD670((uint64_t)a3);
                  __str.__r_.__value_.__r.__words[0] = a2;
                  v12 = sub_1D52B3C68(a1 + 112, (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&__str);
                  goto LABEL_250;
                }
              }
              else if (v37 == 4 && *((_DWORD *)a3 + 1) == 1)
              {
                v11 = *((_DWORD *)a3 + 2);
                __str.__r_.__value_.__r.__words[0] = a2;
                v12 = sub_1D52B3C68(a1 + 112, (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&__str);
                goto LABEL_250;
              }
            }
            break;
          case 0x144u:
            if ((((uint64_t (*)(uint64_t **))(*a1)[7])(a1) & 1) == 0 && a3[1] == 4)
            {
              sub_1D52917E4((uint64_t)a1, &__str);
              v38 = sub_1D52845F4((uint64_t)__str.__r_.__value_.__l.__data_);
              sub_1D5282EB4((uint64_t)&__str);
              memset(&__str, 0, sizeof(__str));
              if (!sub_1D52AD6B0((uint64_t)a1, (uint64_t)a3, (void **)&__str.__r_.__value_.__l.__data_))
                goto LABEL_192;
              if (v38)
              {
                v89 = (uint64_t)(__str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0]) >> 2;
                sub_1D528304C(&__src, (unint64_t *)&v89);
                if ((_DWORD)__src)
                {
                  v39 = 0;
                  v40 = __str.__r_.__value_.__r.__words[0];
                  v41 = 4 * __src;
                  do
                  {
                    LODWORD(v89) = v38;
                    LODWORD(__src) = *sub_1D5294254((int *)&v89, (unsigned int *)(v40 + v39));
                    v42 = sub_1D52ADF28((unsigned int *)&__src);
                    v40 = __str.__r_.__value_.__r.__words[0];
                    *(_DWORD *)(__str.__r_.__value_.__r.__words[0] + v39) = v42;
                    v39 += 4;
                  }
                  while (v41 != v39);
                }
              }
              v89 = a2;
              v15 = (std::string *)(sub_1D52B3E7C(a1 + 115, (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&v89) + 7);
              if (v15 == &__str)
                goto LABEL_192;
              goto LABEL_161;
            }
            break;
          case 0x145u:
            if ((((uint64_t (*)(uint64_t **))(*a1)[7])(a1) & 1) == 0 && a3[1] - 3 <= 1)
            {
              memset(&__str, 0, sizeof(__str));
              if (!sub_1D52AD6B0((uint64_t)a1, (uint64_t)a3, (void **)&__str.__r_.__value_.__l.__data_))
                goto LABEL_192;
              v89 = a2;
              v15 = (std::string *)(sub_1D52B3E7C(a1 + 118, (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&v89) + 7);
              if (v15 == &__str)
                goto LABEL_192;
              goto LABEL_161;
            }
            break;
          case 0x14Au:
            v43 = a3[1];
            if (v43 == 4 || v43 == 13)
              ((void (*)(uint64_t **, uint64_t, unsigned __int16 *))(*a1)[90])(a1, a2, a3);
            break;
          default:
            return;
        }
      }
      return;
    }
    if (*a3 > 0x8768u)
    {
      if (*a3 > 0xC627u)
      {
        if (v10 == 50728)
        {
          if ((((uint64_t (*)(uint64_t **))(*a1)[7])(a1) & 1) == 0)
          {
            sub_1D52917E4((uint64_t)a1, &v89);
            sub_1D52A75D8((uint64_t)a3, &v89, (void **)&__str.__r_.__value_.__l.__data_);
            sub_1D5282EB4((uint64_t)&v89);
            v58 = __str.__r_.__value_.__l.__size_;
            v57 = (double *)__str.__r_.__value_.__r.__words[0];
            if (__str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0] == 24)
            {
              if (__str.__r_.__value_.__r.__words[0] < __str.__r_.__value_.__l.__size_)
              {
                do
                {
                  *v57 = 1.0 / *v57;
                  ++v57;
                }
                while ((unint64_t)v57 < v58);
              }
              v89 = a2;
              v59 = (std::string *)(sub_1D52B3E7C(a1 + 18, (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&v89) + 7);
              v57 = (double *)__str.__r_.__value_.__r.__words[0];
              if (v59 != &__str)
              {
                sub_1D528FA34((char *)v59, __str.__r_.__value_.__l.__data_, __str.__r_.__value_.__l.__size_, (uint64_t)(__str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0]) >> 3);
                v57 = (double *)__str.__r_.__value_.__r.__words[0];
              }
            }
            if (v57)
            {
              __str.__r_.__value_.__l.__size_ = (std::string::size_type)v57;
              v48 = v57;
              goto LABEL_194;
            }
          }
        }
        else if (v10 == 50933)
        {
          v20 = a3[1];
          if (v20 == 7 || v20 == 4)
          {
            sub_1D52917E4((uint64_t)a1, &__str);
            if (((**(uint64_t (***)(std::string::size_type))__str.__r_.__value_.__l.__data_)(__str.__r_.__value_.__r.__words[0]) & 1) != 0)
            {
              v21 = 1;
            }
            else
            {
              v60 = sub_1D52A5CC8((uint64_t)a3);
              LODWORD(__src) = sub_1D52AA7F0((uint64_t)a3);
              LODWORD(v89) = v60;
              v61 = *sub_1D52B0860(&v89, &__src);
              sub_1D52917E4((uint64_t)a1, &v89);
              v21 = v61 < (*(unsigned int (**)(uint64_t))(*(_QWORD *)v89 + 16))(v89);
              sub_1D5282EB4((uint64_t)&v89);
            }
            v62 = (std::__shared_weak_count *)__str.__r_.__value_.__l.__size_;
            if (__str.__r_.__value_.__l.__size_)
            {
              v63 = (unint64_t *)(__str.__r_.__value_.__l.__size_ + 8);
              do
                v64 = __ldaxr(v63);
              while (__stlxr(v64 - 1, v63));
              if (!v64)
              {
                ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
                std::__shared_weak_count::__release_weak(v62);
              }
            }
            if (!v21)
            {
              ((void (*)(uint64_t **, uint64_t))(*a1)[23])(a1, 1);
              return;
            }
            v89 = 0;
            v90 = 0;
            v91 = 0;
            v65 = sub_1D52AD6B0((uint64_t)a1, (uint64_t)a3, (void **)&v89);
            v66 = (int *)v89;
            if (v65)
            {
              v67 = v90;
              if ((char *)v89 != v90)
              {
                v68 = 0;
                v69 = *MEMORY[0x1E0DE4F60];
                v81 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 24);
                v70 = MEMORY[0x1E0DE4FB8] + 16;
                do
                {
                  sub_1D52917E4((uint64_t)a1, &__str);
                  sub_1D5282F74((int *)__p, v66);
                  sub_1D52B1CC8((uint64_t)&__src, (uint64_t *)&__str, __p);
                  v71 = (std::__shared_weak_count *)__str.__r_.__value_.__l.__size_;
                  if (__str.__r_.__value_.__l.__size_)
                  {
                    v72 = (unint64_t *)(__str.__r_.__value_.__l.__size_ + 8);
                    do
                      v73 = __ldaxr(v72);
                    while (__stlxr(v73 - 1, v72));
                    if (!v73)
                    {
                      ((void (*)(std::__shared_weak_count *))v71->__on_zero_shared)(v71);
                      std::__shared_weak_count::__release_weak(v71);
                    }
                  }
                  sub_1D52A9B48((uint64_t)&__str);
                  sub_1D52B3864(&__str, (uint64_t)":CAMERAPROFILES", 15);
                  v74 = (_QWORD *)std::ostream::operator<<();
                  sub_1D52B3864(v74, (uint64_t)":", 1);
                  sub_1D52B3B04((uint64_t)&__str.__r_.__value_.__l.__size_, &v82);
                  v75 = *(char *)(a2 + 23);
                  if (v75 >= 0)
                    v76 = (const std::string::value_type *)a2;
                  else
                    v76 = *(const std::string::value_type **)a2;
                  if (v75 >= 0)
                    v77 = *(unsigned __int8 *)(a2 + 23);
                  else
                    v77 = *(_QWORD *)(a2 + 8);
                  v78 = std::string::insert(&v82, 0, v76, v77);
                  v79 = *(_OWORD *)&v78->__r_.__value_.__l.__data_;
                  v84 = v78->__r_.__value_.__r.__words[2];
                  *(_OWORD *)__p = v79;
                  v78->__r_.__value_.__l.__size_ = 0;
                  v78->__r_.__value_.__r.__words[2] = 0;
                  v78->__r_.__value_.__r.__words[0] = 0;
                  ((void (*)(uint64_t **, void **, uint64_t))(*a1)[84])(a1, __p, 17234);
                  if (SHIBYTE(v84) < 0)
                    operator delete(__p[0]);
                  if (SHIBYTE(v82.__r_.__value_.__r.__words[2]) < 0)
                    operator delete(v82.__r_.__value_.__l.__data_);
                  __str.__r_.__value_.__r.__words[0] = v69;
                  *(std::string::size_type *)((char *)__str.__r_.__value_.__r.__words + *(_QWORD *)(v69 - 24)) = v81;
                  __str.__r_.__value_.__l.__size_ = v70;
                  if (v87 < 0)
                    operator delete(v86);
                  ++v68;
                  std::streambuf::~streambuf();
                  std::ostream::~ostream();
                  MEMORY[0x1D8271A7C](&v88);
                  sub_1D52B1D54((uint64_t)&__src);
                  ++v66;
                }
                while (v66 != (int *)v67);
                v66 = (int *)v89;
              }
            }
            if (v66)
            {
              v90 = (char *)v66;
              v48 = v66;
              goto LABEL_194;
            }
          }
        }
      }
      else if (v10 == 34665)
      {
        if (a3[1] == 4 && *((_DWORD *)a3 + 1) == 1)
        {
          sub_1D52850A0(&__str, ":EXIF");
          sub_1D52917E4((uint64_t)a1, &__src);
          LODWORD(v82.__r_.__value_.__l.__data_) = sub_1D52A5CC8((uint64_t)a3);
          sub_1D5285B08((int *)__p, (int *)&v82);
          sub_1D5285164(&v89, (uint64_t *)&__src, (uint64_t)__p, 0);
          v45 = v93;
          if (v93)
          {
            p_shared_owners = (unint64_t *)&v93->__shared_owners_;
            do
              v47 = __ldaxr(p_shared_owners);
            while (__stlxr(v47 - 1, p_shared_owners));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
              std::__shared_weak_count::__release_weak(v45);
            }
          }
          sub_1D52AEDB8((const void **)a2, (const void **)&__str.__r_.__value_.__l.__data_, (uint64_t)&__src);
          ((void (*)(uint64_t **, __int128 **))(*a1)[92])(a1, &__src);
          if (v94 < 0)
            operator delete(__src);
          sub_1D5285200(&v89);
LABEL_172:
          if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
          {
            v48 = (void *)__str.__r_.__value_.__r.__words[0];
            goto LABEL_194;
          }
        }
      }
      else if (v10 == 50717 && (((uint64_t (*)(uint64_t **))(*a1)[7])(a1) & 1) == 0)
      {
        v89 = 0;
        sub_1D52917E4((uint64_t)a1, &__str);
        v17 = sub_1D52A7374((uint64_t)a3, (double *)&v89, (uint64_t *)&__str, v16);
        sub_1D5282EB4((uint64_t)&__str);
        if ((v17 & 1) != 0)
        {
          __src = (__int128 *)v89;
          __str.__r_.__value_.__r.__words[0] = a2;
          v18 = sub_1D52B3E7C(a1 + 30, (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&__str);
          sub_1D528FA34((char *)v18 + 56, (char *)&__src, (uint64_t)&v93, 1uLL);
        }
      }
    }
    else if (*a3 > 0x828Du)
    {
      if (v10 == 33422)
      {
        if ((((uint64_t (*)(uint64_t **))(*a1)[7])(a1) & 1) != 0)
          return;
        memset(&__str, 0, sizeof(__str));
        v89 = 0;
        v90 = 0;
        v91 = 0;
        v54 = a3[1];
        if (v54 == 1 || v54 == 7)
        {
          if (sub_1D52AE940((uint64_t)(a1 + 121), (void **)a2, (char *)&__str)
            && __str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0] == 4)
          {
            v55 = *(unsigned __int16 *)__str.__r_.__value_.__l.__data_;
            LODWORD(__p[0]) = *(unsigned __int16 *)(__str.__r_.__value_.__r.__words[0] + 2);
            LODWORD(__src) = v55;
            if (*sub_1D52B42B4(&__src, (unsigned int *)__p) == *((_DWORD *)a3 + 1))
            {
              if (sub_1D52AE9A4((uint64_t)a1, (uint64_t)a3, (unint64_t *)&v89))
              {
                __src = (__int128 *)a2;
                v56 = sub_1D52B3E7C(a1 + 124, (void **)a2, (uint64_t)&unk_1D544A5C4, &__src) + 7;
                if (v56 != &v89)
                  sub_1D52B1E94(v56, (char *)v89, v90, (unint64_t)&v90[-v89]);
              }
            }
          }
          if (v89)
          {
            v90 = (char *)v89;
            operator delete((void *)v89);
          }
        }
LABEL_192:
        v48 = (void *)__str.__r_.__value_.__r.__words[0];
        if (!__str.__r_.__value_.__r.__words[0])
          return;
        __str.__r_.__value_.__l.__size_ = __str.__r_.__value_.__r.__words[0];
LABEL_194:
        operator delete(v48);
        return;
      }
      if (v10 == 33434
        && (((uint64_t (*)(uint64_t **))(*a1)[7])(a1) & 1) == 0
        && a3[1] == 5
        && *((_DWORD *)a3 + 1) == 1)
      {
        LODWORD(v89) = 0;
        if (sub_1D52AEE80((uint64_t)a1, (uint64_t)a3, (float *)&v89))
        {
          v19 = *(float *)&v89;
          __str.__r_.__value_.__r.__words[0] = a2;
          *((double *)sub_1D52B4328(a1 + 36, (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&__str) + 7) = v19;
        }
      }
    }
    else
    {
      if (v10 != 700)
      {
        if (v10 != 33421
          || (((uint64_t (*)(uint64_t **))(*a1)[7])(a1) & 1) != 0
          || a3[1] != 3
          || *((_DWORD *)a3 + 1) != 2)
        {
          return;
        }
        sub_1D52917E4((uint64_t)a1, &v89);
        sub_1D52A79AC((uint64_t)a3, &v89, (uint64_t)&__str);
        sub_1D5282EB4((uint64_t)&v89);
        v89 = a2;
        v14 = (std::string *)(sub_1D52B3E7C(a1 + 121, (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&v89) + 7);
        if (v14 != &__str)
LABEL_32:
          sub_1D52B1D94((char *)v14, __str.__r_.__value_.__l.__data_, __str.__r_.__value_.__l.__size_, (uint64_t)(__str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0]) >> 1);
        goto LABEL_192;
      }
      if ((((uint64_t (*)(uint64_t **))(*a1)[7])(a1) & 1) == 0 && a3[1] == 1)
        sub_1D5356AC4((xmlChar *)a1, a2, *((unsigned int *)a3 + 2), *((unsigned int *)a3 + 1));
    }
  }
}

void sub_1D52AD4C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D52AD670(uint64_t a1)
{
  unsigned int v3;
  unsigned int v4;

  v3 = 0;
  sub_1D5285A24(&v4, &v3);
  return sub_1D52A7E28(a1, &v4);
}

uint64_t sub_1D52AD6B0(uint64_t a1, uint64_t a2, void **a3)
{
  unsigned int v6;
  unsigned int v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  int v11;
  _DWORD *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  int v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  int v31;
  unsigned int v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  unint64_t v36;
  int v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  char *v50;
  int v51;
  int v53;
  unint64_t v54;
  char *v55;
  int v56;
  int v57;
  unint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char *v66;
  char *v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  int v77;
  void *exception;
  int v79;
  int v80;
  uint64_t v81;
  std::__shared_weak_count *v82;
  unint64_t v83;
  std::__shared_weak_count *v84;

  sub_1D52917E4(a1, &v83);
  v6 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v83 + 16))(v83);
  v7 = sub_1D52AA7F0(a2);
  v8 = v84;
  if (v84)
  {
    p_shared_owners = (unint64_t *)&v84->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (v6 < v7)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v11 = *(unsigned __int16 *)(a2 + 2);
  if (v11 == 3)
  {
    sub_1D52B1A40(a3, *(unsigned int *)(a2 + 4));
    a3[1] = *a3;
    v32 = *(_DWORD *)(a2 + 4);
    if (v32 < 3)
    {
      v83 = 0;
      if (v32)
      {
        do
        {
          sub_1D528304C(&v81, &v83);
          v56 = sub_1D52A7E28(a2, (unsigned int *)&v81);
          v57 = v56;
          v59 = (char *)a3[1];
          v58 = (unint64_t)a3[2];
          if ((unint64_t)v59 >= v58)
          {
            v61 = (char *)*a3;
            v62 = (v59 - (_BYTE *)*a3) >> 2;
            v63 = v62 + 1;
            if ((unint64_t)(v62 + 1) >> 62)
              sub_1D5282B8C();
            v64 = v58 - (_QWORD)v61;
            if (v64 >> 1 > v63)
              v63 = v64 >> 1;
            if ((unint64_t)v64 >= 0x7FFFFFFFFFFFFFFCLL)
              v65 = 0x3FFFFFFFFFFFFFFFLL;
            else
              v65 = v63;
            if (v65)
            {
              v66 = (char *)sub_1D5282BA0((uint64_t)(a3 + 2), v65);
              v61 = (char *)*a3;
              v59 = (char *)a3[1];
            }
            else
            {
              v66 = 0;
            }
            v67 = &v66[4 * v62];
            *(_DWORD *)v67 = v57;
            v60 = v67 + 4;
            while (v59 != v61)
            {
              v68 = *((_DWORD *)v59 - 1);
              v59 -= 4;
              *((_DWORD *)v67 - 1) = v68;
              v67 -= 4;
            }
            *a3 = v67;
            a3[1] = v60;
            a3[2] = &v66[4 * v65];
            if (v61)
              operator delete(v61);
          }
          else
          {
            *(_DWORD *)v59 = v56;
            v60 = v59 + 4;
          }
          a3[1] = v60;
          ++v83;
        }
        while (v83 < *(unsigned int *)(a2 + 4));
      }
      return 1;
    }
    sub_1D52917E4(a1, &v81);
    v79 = sub_1D52A5CC8(a2);
    sub_1D5285B08(&v80, &v79);
    sub_1D5285164((uint64_t *)&v83, &v81, (uint64_t)&v80, 0);
    v33 = v82;
    if (v82)
    {
      v34 = (unint64_t *)&v82->__shared_owners_;
      do
        v35 = __ldaxr(v34);
      while (__stlxr(v35 - 1, v34));
      if (!v35)
      {
        ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
        std::__shared_weak_count::__release_weak(v33);
      }
    }
    if (*(_DWORD *)(a2 + 4))
    {
      v36 = 0;
      do
      {
        sub_1D52917E4(a1, &v81);
        v37 = sub_1D528479C(v81);
        v38 = v82;
        if (v82)
        {
          v39 = (unint64_t *)&v82->__shared_owners_;
          do
            v40 = __ldaxr(v39);
          while (__stlxr(v40 - 1, v39));
          if (!v40)
          {
            ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
            std::__shared_weak_count::__release_weak(v38);
          }
        }
        v42 = (char *)a3[1];
        v41 = (unint64_t)a3[2];
        if ((unint64_t)v42 >= v41)
        {
          v44 = (char *)*a3;
          v45 = (v42 - (_BYTE *)*a3) >> 2;
          v46 = v45 + 1;
          if ((unint64_t)(v45 + 1) >> 62)
            sub_1D5282B8C();
          v47 = v41 - (_QWORD)v44;
          if (v47 >> 1 > v46)
            v46 = v47 >> 1;
          if ((unint64_t)v47 >= 0x7FFFFFFFFFFFFFFCLL)
            v48 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v48 = v46;
          if (v48)
          {
            v49 = (char *)sub_1D5282BA0((uint64_t)(a3 + 2), v48);
            v44 = (char *)*a3;
            v42 = (char *)a3[1];
          }
          else
          {
            v49 = 0;
          }
          v50 = &v49[4 * v45];
          *(_DWORD *)v50 = v37;
          v43 = v50 + 4;
          while (v42 != v44)
          {
            v51 = *((_DWORD *)v42 - 1);
            v42 -= 4;
            *((_DWORD *)v50 - 1) = v51;
            v50 -= 4;
          }
          *a3 = v50;
          a3[1] = v43;
          a3[2] = &v49[4 * v48];
          if (v44)
            operator delete(v44);
        }
        else
        {
          *(_DWORD *)v42 = v37;
          v43 = v42 + 4;
        }
        a3[1] = v43;
        ++v36;
      }
      while (v36 < *(unsigned int *)(a2 + 4));
    }
  }
  else
  {
    if (v11 != 4)
      return 0;
    sub_1D52B1A40(a3, *(unsigned int *)(a2 + 4));
    v12 = *a3;
    a3[1] = *a3;
    if (*(_DWORD *)(a2 + 4) < 2u)
    {
      v53 = *(_DWORD *)(a2 + 8);
      v54 = (unint64_t)a3[2];
      if ((unint64_t)v12 >= v54)
      {
        v69 = v54 - (_QWORD)v12;
        v70 = v69 >> 1;
        if ((unint64_t)(v69 >> 1) <= 1)
          v70 = 1;
        if ((unint64_t)v69 >= 0x7FFFFFFFFFFFFFFCLL)
          v71 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v71 = v70;
        v72 = (char *)sub_1D5282BA0((uint64_t)(a3 + 2), v71);
        v73 = (char *)*a3;
        v74 = (char *)a3[1];
        v76 = &v72[4 * v75];
        *(_DWORD *)v72 = v53;
        v55 = v72 + 4;
        while (v74 != v73)
        {
          v77 = *((_DWORD *)v74 - 1);
          v74 -= 4;
          *((_DWORD *)v72 - 1) = v77;
          v72 -= 4;
        }
        *a3 = v72;
        a3[1] = v55;
        a3[2] = v76;
        if (v73)
          operator delete(v73);
      }
      else
      {
        *v12 = v53;
        v55 = (char *)(v12 + 1);
      }
      a3[1] = v55;
      return 1;
    }
    sub_1D52917E4(a1, &v81);
    v79 = sub_1D52A5CC8(a2);
    sub_1D5285B08(&v80, &v79);
    sub_1D5285164((uint64_t *)&v83, &v81, (uint64_t)&v80, 0);
    v13 = v82;
    if (v82)
    {
      v14 = (unint64_t *)&v82->__shared_owners_;
      do
        v15 = __ldaxr(v14);
      while (__stlxr(v15 - 1, v14));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
        std::__shared_weak_count::__release_weak(v13);
      }
    }
    if (*(_DWORD *)(a2 + 4))
    {
      v16 = 0;
      do
      {
        sub_1D52917E4(a1, &v81);
        v17 = sub_1D52847F8(v81);
        v18 = v82;
        if (v82)
        {
          v19 = (unint64_t *)&v82->__shared_owners_;
          do
            v20 = __ldaxr(v19);
          while (__stlxr(v20 - 1, v19));
          if (!v20)
          {
            ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
            std::__shared_weak_count::__release_weak(v18);
          }
        }
        v22 = (char *)a3[1];
        v21 = (unint64_t)a3[2];
        if ((unint64_t)v22 >= v21)
        {
          v24 = (char *)*a3;
          v25 = (v22 - (_BYTE *)*a3) >> 2;
          v26 = v25 + 1;
          if ((unint64_t)(v25 + 1) >> 62)
            sub_1D5282B8C();
          v27 = v21 - (_QWORD)v24;
          if (v27 >> 1 > v26)
            v26 = v27 >> 1;
          if ((unint64_t)v27 >= 0x7FFFFFFFFFFFFFFCLL)
            v28 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v28 = v26;
          if (v28)
          {
            v29 = (char *)sub_1D5282BA0((uint64_t)(a3 + 2), v28);
            v24 = (char *)*a3;
            v22 = (char *)a3[1];
          }
          else
          {
            v29 = 0;
          }
          v30 = &v29[4 * v25];
          *(_DWORD *)v30 = v17;
          v23 = v30 + 4;
          while (v22 != v24)
          {
            v31 = *((_DWORD *)v22 - 1);
            v22 -= 4;
            *((_DWORD *)v30 - 1) = v31;
            v30 -= 4;
          }
          *a3 = v30;
          a3[1] = v23;
          a3[2] = &v29[4 * v28];
          if (v24)
            operator delete(v24);
        }
        else
        {
          *(_DWORD *)v22 = v17;
          v23 = v22 + 4;
        }
        a3[1] = v23;
        ++v16;
      }
      while (v16 < *(unsigned int *)(a2 + 4));
    }
  }
  sub_1D5285200((uint64_t *)&v83);
  return 1;
}

void sub_1D52ADC90(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1D5282EB4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52ADD1C(uint64_t a1, uint64_t a2, std::string *a3, int a4)
{
  unsigned int v7;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  _BOOL4 v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  std::string::value_type v18;
  int v20;
  int v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  uint64_t v24[3];
  std::string __str;

  memset(&__str, 0, sizeof(__str));
  v7 = *(_DWORD *)(a2 + 4);
  if (v7 <= 4)
  {
    if (v7)
    {
      v17 = 0;
      do
      {
        LODWORD(v24[0]) = v17;
        if (!sub_1D52B19D0(a2, (unsigned int *)v24))
          break;
        LODWORD(v24[0]) = v17;
        v18 = sub_1D52B19D0(a2, (unsigned int *)v24);
        std::string::push_back(&__str, v18);
        ++v17;
      }
      while (v17 < *(_DWORD *)(a2 + 4));
    }
  }
  else
  {
    sub_1D52917E4(a1, &v22);
    v20 = sub_1D52A5CC8(a2);
    sub_1D5285B08(&v21, &v20);
    sub_1D5285164(v24, &v22, (uint64_t)&v21, 0);
    v9 = v23;
    if (v23)
    {
      p_shared_owners = (unint64_t *)&v23->__shared_owners_;
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
    sub_1D52917E4(a1, &v22);
    v21 = *(_DWORD *)(a2 + 4);
    v12 = sub_1D52849DC(v22, (unsigned int *)&v21, (uint64_t)&__str);
    v13 = v23;
    if (v23)
    {
      v14 = (unint64_t *)&v23->__shared_owners_;
      do
        v15 = __ldaxr(v14);
      while (__stlxr(v15 - 1, v14));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
        std::__shared_weak_count::__release_weak(v13);
      }
    }
    sub_1D5285200(v24);
    if (!v12)
    {
      v16 = 0;
      goto LABEL_21;
    }
  }
  if (a4)
    sub_1D52E2624(&__str);
  std::string::operator=(a3, &__str);
  v16 = 1;
LABEL_21:
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  return v16;
}

void sub_1D52ADEC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D52ADF28(unsigned int *a1)
{
  uint64_t result;
  void *exception;

  result = *a1;
  if (result != (int)result)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return result;
}

void sub_1D52ADF7C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52ADF90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6;
  unsigned int v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  int v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  unsigned int v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unsigned int v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  float v24;
  unint64_t v25;
  float *v26;
  float *v27;
  float *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  float *v34;
  int v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  std::__shared_weak_count *v41;
  unint64_t *v42;
  unint64_t v43;
  int v44;
  std::__shared_weak_count *v45;
  unint64_t *v46;
  unint64_t v47;
  float v48;
  unint64_t v49;
  float *v50;
  float *v51;
  float *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char *v57;
  float *v58;
  int v59;
  void *exception;
  int v62;
  int v63;
  uint64_t v64;
  std::__shared_weak_count *v65;
  uint64_t v66;
  std::__shared_weak_count *v67;

  sub_1D52917E4(a1, &v66);
  v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v66 + 16))(v66);
  v7 = sub_1D52AA7F0(a2);
  v8 = v67;
  if (v67)
  {
    p_shared_owners = (unint64_t *)&v67->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (v6 < v7)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v11 = *(unsigned __int16 *)(a2 + 2);
  if (v11 == 10)
  {
    sub_1D52917E4(a1, &v64);
    v62 = sub_1D52A5CC8(a2);
    sub_1D5285B08(&v63, &v62);
    sub_1D5285164(&v66, &v64, (uint64_t)&v63, 0);
    v36 = v65;
    if (v65)
    {
      v37 = (unint64_t *)&v65->__shared_owners_;
      do
        v38 = __ldaxr(v37);
      while (__stlxr(v38 - 1, v37));
      if (!v38)
      {
        ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
        std::__shared_weak_count::__release_weak(v36);
      }
    }
    sub_1D52B1AD4((void **)a3, *(unsigned int *)(a2 + 4));
    *(_QWORD *)(a3 + 8) = *(_QWORD *)a3;
    if (*(_DWORD *)(a2 + 4))
    {
      v39 = 0;
      do
      {
        sub_1D52917E4(a1, &v64);
        v40 = sub_1D52847F8(v64);
        v41 = v65;
        if (v65)
        {
          v42 = (unint64_t *)&v65->__shared_owners_;
          do
            v43 = __ldaxr(v42);
          while (__stlxr(v43 - 1, v42));
          if (!v43)
          {
            ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
            std::__shared_weak_count::__release_weak(v41);
          }
        }
        sub_1D52917E4(a1, &v64);
        v44 = sub_1D52847F8(v64);
        v45 = v65;
        if (v65)
        {
          v46 = (unint64_t *)&v65->__shared_owners_;
          do
            v47 = __ldaxr(v46);
          while (__stlxr(v47 - 1, v46));
          if (!v47)
          {
            ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
            std::__shared_weak_count::__release_weak(v45);
          }
        }
        v48 = (double)v40 / (double)v44;
        v50 = *(float **)(a3 + 8);
        v49 = *(_QWORD *)(a3 + 16);
        if ((unint64_t)v50 >= v49)
        {
          v52 = *(float **)a3;
          v53 = ((uint64_t)v50 - *(_QWORD *)a3) >> 2;
          v54 = v53 + 1;
          if ((unint64_t)(v53 + 1) >> 62)
            sub_1D5282B8C();
          v55 = v49 - (_QWORD)v52;
          if (v55 >> 1 > v54)
            v54 = v55 >> 1;
          if ((unint64_t)v55 >= 0x7FFFFFFFFFFFFFFCLL)
            v56 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v56 = v54;
          if (v56)
          {
            v57 = (char *)sub_1D5282BA0(a3 + 16, v56);
            v52 = *(float **)a3;
            v50 = *(float **)(a3 + 8);
          }
          else
          {
            v57 = 0;
          }
          v58 = (float *)&v57[4 * v53];
          *v58 = v48;
          v51 = v58 + 1;
          while (v50 != v52)
          {
            v59 = *((_DWORD *)v50-- - 1);
            *((_DWORD *)v58-- - 1) = v59;
          }
          *(_QWORD *)a3 = v58;
          *(_QWORD *)(a3 + 8) = v51;
          *(_QWORD *)(a3 + 16) = &v57[4 * v56];
          if (v52)
            operator delete(v52);
        }
        else
        {
          *v50 = v48;
          v51 = v50 + 1;
        }
        *(_QWORD *)(a3 + 8) = v51;
        ++v39;
      }
      while (v39 < *(unsigned int *)(a2 + 4));
    }
    goto LABEL_78;
  }
  if (v11 == 5)
  {
    sub_1D52917E4(a1, &v64);
    v62 = sub_1D52A5CC8(a2);
    sub_1D5285B08(&v63, &v62);
    sub_1D5285164(&v66, &v64, (uint64_t)&v63, 0);
    v12 = v65;
    if (v65)
    {
      v13 = (unint64_t *)&v65->__shared_owners_;
      do
        v14 = __ldaxr(v13);
      while (__stlxr(v14 - 1, v13));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    sub_1D52B1AD4((void **)a3, *(unsigned int *)(a2 + 4));
    *(_QWORD *)(a3 + 8) = *(_QWORD *)a3;
    if (*(_DWORD *)(a2 + 4))
    {
      v15 = 0;
      do
      {
        sub_1D52917E4(a1, &v64);
        v16 = sub_1D52847F8(v64);
        v17 = v65;
        if (v65)
        {
          v18 = (unint64_t *)&v65->__shared_owners_;
          do
            v19 = __ldaxr(v18);
          while (__stlxr(v19 - 1, v18));
          if (!v19)
          {
            ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
            std::__shared_weak_count::__release_weak(v17);
          }
        }
        sub_1D52917E4(a1, &v64);
        v20 = sub_1D52847F8(v64);
        v21 = v65;
        if (v65)
        {
          v22 = (unint64_t *)&v65->__shared_owners_;
          do
            v23 = __ldaxr(v22);
          while (__stlxr(v23 - 1, v22));
          if (!v23)
          {
            ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
            std::__shared_weak_count::__release_weak(v21);
          }
        }
        v24 = (double)v16 / (double)v20;
        v26 = *(float **)(a3 + 8);
        v25 = *(_QWORD *)(a3 + 16);
        if ((unint64_t)v26 >= v25)
        {
          v28 = *(float **)a3;
          v29 = ((uint64_t)v26 - *(_QWORD *)a3) >> 2;
          v30 = v29 + 1;
          if ((unint64_t)(v29 + 1) >> 62)
            sub_1D5282B8C();
          v31 = v25 - (_QWORD)v28;
          if (v31 >> 1 > v30)
            v30 = v31 >> 1;
          if ((unint64_t)v31 >= 0x7FFFFFFFFFFFFFFCLL)
            v32 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v32 = v30;
          if (v32)
          {
            v33 = (char *)sub_1D5282BA0(a3 + 16, v32);
            v28 = *(float **)a3;
            v26 = *(float **)(a3 + 8);
          }
          else
          {
            v33 = 0;
          }
          v34 = (float *)&v33[4 * v29];
          *v34 = v24;
          v27 = v34 + 1;
          while (v26 != v28)
          {
            v35 = *((_DWORD *)v26-- - 1);
            *((_DWORD *)v34-- - 1) = v35;
          }
          *(_QWORD *)a3 = v34;
          *(_QWORD *)(a3 + 8) = v27;
          *(_QWORD *)(a3 + 16) = &v33[4 * v32];
          if (v28)
            operator delete(v28);
        }
        else
        {
          *v26 = v24;
          v27 = v26 + 1;
        }
        *(_QWORD *)(a3 + 8) = v27;
        ++v15;
      }
      while (v15 < *(unsigned int *)(a2 + 4));
    }
LABEL_78:
    sub_1D5285200(&v66);
    return 1;
  }
  return 0;
}

void sub_1D52AE4B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_1D5285200((uint64_t *)va);
  _Unwind_Resume(a1);
}

BOOL sub_1D52AE554(uint64_t a1, uint64_t a2, char **a3)
{
  unsigned int v6;
  unsigned int v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  int v11;
  unsigned int v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  __int16 v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int16 v32;
  __int16 v33;
  __int16 v34;
  unint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  __int16 v46;
  void *exception;
  int v49;
  int v50;
  uint64_t v51;
  std::__shared_weak_count *v52;
  unint64_t v53;
  std::__shared_weak_count *v54;

  sub_1D52917E4(a1, &v53);
  v6 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v53 + 16))(v53);
  v7 = sub_1D52AA7F0(a2);
  v8 = v54;
  if (v54)
  {
    p_shared_owners = (unint64_t *)&v54->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (v6 < v7)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v11 = *(unsigned __int16 *)(a2 + 2);
  if (v11 == 3)
  {
    a3[1] = *a3;
    v12 = *(_DWORD *)(a2 + 4);
    if (v12 < 3)
    {
      v53 = 0;
      if (v12)
      {
        do
        {
          sub_1D528304C(&v51, &v53);
          v33 = sub_1D52A7E28(a2, (unsigned int *)&v51);
          v34 = v33;
          v36 = a3[1];
          v35 = (unint64_t)a3[2];
          if ((unint64_t)v36 >= v35)
          {
            v38 = *a3;
            v39 = v36 - *a3;
            if (v39 <= -3)
              sub_1D5282B8C();
            v40 = v39 >> 1;
            v41 = v35 - (_QWORD)v38;
            if (v41 <= (v39 >> 1) + 1)
              v42 = v40 + 1;
            else
              v42 = v41;
            if (v41 >= 0x7FFFFFFFFFFFFFFELL)
              v43 = 0x7FFFFFFFFFFFFFFFLL;
            else
              v43 = v42;
            if (v43)
            {
              v44 = (char *)sub_1D52854A0((uint64_t)(a3 + 2), v43);
              v38 = *a3;
              v36 = a3[1];
            }
            else
            {
              v44 = 0;
            }
            v45 = &v44[2 * v40];
            *(_WORD *)v45 = v34;
            v37 = v45 + 2;
            while (v36 != v38)
            {
              v46 = *((_WORD *)v36 - 1);
              v36 -= 2;
              *((_WORD *)v45 - 1) = v46;
              v45 -= 2;
            }
            *a3 = v45;
            a3[1] = v37;
            a3[2] = &v44[2 * v43];
            if (v38)
              operator delete(v38);
          }
          else
          {
            *(_WORD *)v36 = v33;
            v37 = v36 + 2;
          }
          a3[1] = v37;
          ++v53;
        }
        while (v53 < *(unsigned int *)(a2 + 4));
      }
    }
    else
    {
      sub_1D52917E4(a1, &v51);
      v49 = sub_1D52A5CC8(a2);
      sub_1D5285B08(&v50, &v49);
      sub_1D5285164((uint64_t *)&v53, &v51, (uint64_t)&v50, 0);
      v13 = v52;
      if (v52)
      {
        v14 = (unint64_t *)&v52->__shared_owners_;
        do
          v15 = __ldaxr(v14);
        while (__stlxr(v15 - 1, v14));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      if (*(_DWORD *)(a2 + 4))
      {
        v16 = 0;
        do
        {
          sub_1D52917E4(a1, &v51);
          v17 = sub_1D528479C(v51);
          v18 = v52;
          if (v52)
          {
            v19 = (unint64_t *)&v52->__shared_owners_;
            do
              v20 = __ldaxr(v19);
            while (__stlxr(v20 - 1, v19));
            if (!v20)
            {
              ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
              std::__shared_weak_count::__release_weak(v18);
            }
          }
          v22 = a3[1];
          v21 = (unint64_t)a3[2];
          if ((unint64_t)v22 >= v21)
          {
            v24 = *a3;
            v25 = v22 - *a3;
            if (v25 <= -3)
              sub_1D5282B8C();
            v26 = v25 >> 1;
            v27 = v21 - (_QWORD)v24;
            if (v27 <= (v25 >> 1) + 1)
              v28 = v26 + 1;
            else
              v28 = v27;
            if (v27 >= 0x7FFFFFFFFFFFFFFELL)
              v29 = 0x7FFFFFFFFFFFFFFFLL;
            else
              v29 = v28;
            if (v29)
            {
              v30 = (char *)sub_1D52854A0((uint64_t)(a3 + 2), v29);
              v24 = *a3;
              v22 = a3[1];
            }
            else
            {
              v30 = 0;
            }
            v31 = &v30[2 * v26];
            *(_WORD *)v31 = v17;
            v23 = v31 + 2;
            while (v22 != v24)
            {
              v32 = *((_WORD *)v22 - 1);
              v22 -= 2;
              *((_WORD *)v31 - 1) = v32;
              v31 -= 2;
            }
            *a3 = v31;
            a3[1] = v23;
            a3[2] = &v30[2 * v29];
            if (v24)
              operator delete(v24);
          }
          else
          {
            *(_WORD *)v22 = v17;
            v23 = v22 + 2;
          }
          a3[1] = v23;
          ++v16;
        }
        while (v16 < *(unsigned int *)(a2 + 4));
      }
      sub_1D5285200((uint64_t *)&v53);
    }
  }
  return v11 == 3;
}

void sub_1D52AE8E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1D5282EB4((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_1D52AE940(uint64_t a1, void **a2, char *a3)
{
  void **v5;
  void **v6;
  void **v7;

  v5 = sub_1D5294144(a1, a2);
  v6 = v5;
  v7 = (void **)(a1 + 8);
  if (v7 != v5 && v5 + 7 != (void **)a3)
    sub_1D52B1D94(a3, (char *)v5[7], (uint64_t)v5[8], ((_BYTE *)v5[8] - (_BYTE *)v5[7]) >> 1);
  return v7 != v6;
}

uint64_t sub_1D52AE9A4(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  unsigned int v6;
  unsigned int v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  int v11;
  unsigned int v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  char v19;
  unint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  unint64_t v23;
  _BYTE *v24;
  unint64_t v25;
  unint64_t v26;
  size_t v27;
  char *v28;
  char *v29;
  _BYTE *v30;
  _BYTE *v31;
  char v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  char v36;
  char v37;
  unint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  unint64_t v41;
  _BYTE *v42;
  unint64_t v43;
  unint64_t v44;
  size_t v45;
  char *v46;
  char *v47;
  _BYTE *v48;
  _BYTE *v49;
  char v50;
  void *exception;
  int v53;
  int v54;
  uint64_t v55;
  std::__shared_weak_count *v56;
  unint64_t v57;
  std::__shared_weak_count *v58;

  sub_1D52917E4(a1, &v57);
  v6 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v57 + 16))(v57);
  v7 = sub_1D52AA7F0(a2);
  v8 = v58;
  if (v58)
  {
    p_shared_owners = (unint64_t *)&v58->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (v6 < v7)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v11 = *(unsigned __int16 *)(a2 + 2);
  if (v11 != 7 && v11 != 1)
    return 0;
  sub_1D52AFF3C(a3, *(unsigned int *)(a2 + 4));
  a3[1] = *a3;
  v13 = *(_DWORD *)(a2 + 4);
  if (v13 < 5)
  {
    v57 = 0;
    if (v13)
    {
      do
      {
        sub_1D528304C(&v55, &v57);
        v36 = sub_1D52B19D0(a2, (unsigned int *)&v55);
        v37 = v36;
        v39 = (_BYTE *)a3[1];
        v38 = a3[2];
        if ((unint64_t)v39 >= v38)
        {
          v41 = *a3;
          v42 = &v39[-*a3];
          v43 = (unint64_t)(v42 + 1);
          if ((uint64_t)(v42 + 1) < 0)
            sub_1D5282B8C();
          v44 = v38 - v41;
          if (2 * v44 > v43)
            v43 = 2 * v44;
          if (v44 >= 0x3FFFFFFFFFFFFFFFLL)
            v45 = 0x7FFFFFFFFFFFFFFFLL;
          else
            v45 = v43;
          if (v45)
            v46 = (char *)operator new(v45);
          else
            v46 = 0;
          v47 = &v42[(_QWORD)v46];
          v48 = &v42[(_QWORD)v46];
          *v48 = v37;
          v40 = v48 + 1;
          if (v39 != (_BYTE *)v41)
          {
            v49 = &v39[~v41];
            do
            {
              v50 = *--v39;
              (v49--)[(_QWORD)v46] = v50;
            }
            while (v39 != (_BYTE *)v41);
            v39 = (_BYTE *)*a3;
            v47 = v46;
          }
          *a3 = (unint64_t)v47;
          a3[1] = (unint64_t)v40;
          a3[2] = (unint64_t)&v46[v45];
          if (v39)
            operator delete(v39);
        }
        else
        {
          *v39 = v36;
          v40 = v39 + 1;
        }
        a3[1] = (unint64_t)v40;
        ++v57;
      }
      while (v57 < *(unsigned int *)(a2 + 4));
    }
  }
  else
  {
    sub_1D52917E4(a1, &v55);
    v53 = sub_1D52A5CC8(a2);
    sub_1D5285B08(&v54, &v53);
    sub_1D5285164((uint64_t *)&v57, &v55, (uint64_t)&v54, 0);
    v14 = v56;
    if (v56)
    {
      v15 = (unint64_t *)&v56->__shared_owners_;
      do
        v16 = __ldaxr(v15);
      while (__stlxr(v16 - 1, v15));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
        std::__shared_weak_count::__release_weak(v14);
      }
    }
    if (*(_DWORD *)(a2 + 4))
    {
      v17 = 0;
      do
      {
        sub_1D52917E4(a1, &v55);
        v18 = sub_1D52846FC(v55);
        v19 = v18;
        v21 = (_BYTE *)a3[1];
        v20 = a3[2];
        if ((unint64_t)v21 >= v20)
        {
          v23 = *a3;
          v24 = &v21[-*a3];
          v25 = (unint64_t)(v24 + 1);
          if ((uint64_t)(v24 + 1) < 0)
            sub_1D5282B8C();
          v26 = v20 - v23;
          if (2 * v26 > v25)
            v25 = 2 * v26;
          if (v26 >= 0x3FFFFFFFFFFFFFFFLL)
            v27 = 0x7FFFFFFFFFFFFFFFLL;
          else
            v27 = v25;
          if (v27)
            v28 = (char *)operator new(v27);
          else
            v28 = 0;
          v29 = &v24[(_QWORD)v28];
          v30 = &v24[(_QWORD)v28];
          *v30 = v19;
          v22 = v30 + 1;
          if (v21 != (_BYTE *)v23)
          {
            v31 = &v21[~v23];
            do
            {
              v32 = *--v21;
              (v31--)[(_QWORD)v28] = v32;
            }
            while (v21 != (_BYTE *)v23);
            v21 = (_BYTE *)*a3;
            v29 = v28;
          }
          *a3 = (unint64_t)v29;
          a3[1] = (unint64_t)v22;
          a3[2] = (unint64_t)&v28[v27];
          if (v21)
            operator delete(v21);
        }
        else
        {
          *v21 = v18;
          v22 = v21 + 1;
        }
        a3[1] = (unint64_t)v22;
        v33 = v56;
        if (v56)
        {
          v34 = (unint64_t *)&v56->__shared_owners_;
          do
            v35 = __ldaxr(v34);
          while (__stlxr(v35 - 1, v34));
          if (!v35)
          {
            ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
            std::__shared_weak_count::__release_weak(v33);
          }
        }
        ++v17;
      }
      while (v17 < *(unsigned int *)(a2 + 4));
    }
    sub_1D5285200((uint64_t *)&v57);
  }
  return 1;
}

void sub_1D52AED5C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1D5282EB4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52AEDB8@<X0>(const void **a1@<X0>, const void **a2@<X1>, uint64_t a3@<X8>)
{
  size_t v5;
  size_t v6;
  uint64_t result;
  char *v8;
  const void *v9;
  char *v10;
  const void *v11;

  if (*((char *)a1 + 23) >= 0)
    v5 = *((unsigned __int8 *)a1 + 23);
  else
    v5 = (size_t)a1[1];
  if (*((char *)a2 + 23) >= 0)
    v6 = *((unsigned __int8 *)a2 + 23);
  else
    v6 = (size_t)a2[1];
  result = sub_1D52B1FA0(a3, v6 + v5);
  if (*(char *)(result + 23) >= 0)
    v8 = (char *)result;
  else
    v8 = *(char **)result;
  if (v5)
  {
    if (*((char *)a1 + 23) >= 0)
      v9 = a1;
    else
      v9 = *a1;
    result = (uint64_t)memmove(v8, v9, v5);
  }
  v10 = &v8[v5];
  if (v6)
  {
    if (*((char *)a2 + 23) >= 0)
      v11 = a2;
    else
      v11 = *a2;
    result = (uint64_t)memmove(v10, v11, v6);
  }
  v10[v6] = 0;
  return result;
}

uint64_t sub_1D52AEE80(uint64_t a1, uint64_t a2, float *a3)
{
  int v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  unsigned int v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  double v14;
  double v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *p_shared_owners;
  unint64_t v21;
  int v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t *v26;
  float v27;
  int v29;
  int v30;
  uint64_t v31;
  std::__shared_weak_count *v32;
  uint64_t v33[3];

  v6 = *(unsigned __int16 *)(a2 + 2);
  if (v6 == 10)
  {
    sub_1D52917E4(a1, &v31);
    v29 = sub_1D52A5CC8(a2);
    sub_1D5285B08(&v30, &v29);
    sub_1D5285164(v33, &v31, (uint64_t)&v30, 0);
    v19 = v32;
    if (v32)
    {
      p_shared_owners = (unint64_t *)&v32->__shared_owners_;
      do
        v21 = __ldaxr(p_shared_owners);
      while (__stlxr(v21 - 1, p_shared_owners));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    sub_1D52917E4(a1, &v31);
    v22 = sub_1D52847F8(v31);
    v23 = v32;
    if (v32)
    {
      v24 = (unint64_t *)&v32->__shared_owners_;
      do
        v25 = __ldaxr(v24);
      while (__stlxr(v25 - 1, v24));
      if (!v25)
      {
        ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
        std::__shared_weak_count::__release_weak(v23);
      }
    }
    sub_1D52917E4(a1, &v31);
    v14 = (double)v22;
    v15 = (double)(int)sub_1D52847F8(v31);
    v16 = v32;
    if (!v32)
      goto LABEL_32;
    v26 = (unint64_t *)&v32->__shared_owners_;
    do
      v18 = __ldaxr(v26);
    while (__stlxr(v18 - 1, v26));
    goto LABEL_30;
  }
  if (v6 == 5)
  {
    sub_1D52917E4(a1, &v31);
    v29 = sub_1D52A5CC8(a2);
    sub_1D5285B08(&v30, &v29);
    sub_1D5285164(v33, &v31, (uint64_t)&v30, 0);
    v7 = v32;
    if (v32)
    {
      v8 = (unint64_t *)&v32->__shared_owners_;
      do
        v9 = __ldaxr(v8);
      while (__stlxr(v9 - 1, v8));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    sub_1D52917E4(a1, &v31);
    v10 = sub_1D52847F8(v31);
    v11 = v32;
    if (v32)
    {
      v12 = (unint64_t *)&v32->__shared_owners_;
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    sub_1D52917E4(a1, &v31);
    v14 = (double)v10;
    v15 = (double)sub_1D52847F8(v31);
    v16 = v32;
    if (!v32)
      goto LABEL_32;
    v17 = (unint64_t *)&v32->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
LABEL_30:
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
LABEL_32:
    v27 = v14 / v15;
    *a3 = v27;
    sub_1D5285200(v33);
    return 1;
  }
  return 0;
}

void sub_1D52AF100(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  sub_1D5282EB4((uint64_t)va);
  sub_1D5285200((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52AF16C(uint64_t result, __int128 *a2, unsigned __int16 *a3)
{
  uint64_t **v5;
  unsigned int v6;
  double v7;
  uint64_t **v8;
  int v9;
  int v10;
  int v11;
  int v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unsigned int v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unsigned int v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unsigned int v26;
  unsigned int v27;
  BOOL v28;
  unsigned int v29;
  unsigned int v30;
  BOOL v31;
  uint64_t v32;
  unsigned int v36;
  unsigned int v37;
  char v38;
  char v39;
  char *v40;
  char *v41;
  char *v42;
  int64_t v43;
  int64_t v44;
  unint64_t v45;
  size_t v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  char v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  uint64_t *v55;
  uint64_t *v56;
  uint64_t *v57;
  unsigned int v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  _BOOL4 v62;
  int v63;
  int v64;
  unsigned int v65;
  std::__shared_weak_count *v66;
  unint64_t *v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  unint64_t *v70;
  unint64_t v71;
  std::__shared_weak_count *v72;
  unint64_t *v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t **v77;
  void *v78[2];
  char v79;
  int v80;
  uint64_t __src[3];
  __int128 *v82;
  std::__shared_weak_count *v83;
  void *__p;
  std::__shared_weak_count *v85;
  unint64_t v86;
  __int128 *v87;
  std::__shared_weak_count *v88;

  v5 = (uint64_t **)result;
  v6 = *a3;
  if (v6 > 0x9200)
  {
    if (*a3 <= 0x927Bu)
    {
      switch(*a3)
      {
        case 0x9201u:
          result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 56))(result);
          if ((result & 1) == 0)
          {
            LODWORD(__p) = 0;
            if (a3[1] == 10 && *((_DWORD *)a3 + 1) == 1)
            {
              result = sub_1D52AEE80((uint64_t)v5, (uint64_t)a3, (float *)&__p);
              if ((_DWORD)result)
              {
                v7 = *(float *)&__p;
                v8 = v5 + 39;
                goto LABEL_147;
              }
            }
          }
          break;
        case 0x9202u:
          result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 56))(result);
          if ((result & 1) == 0)
          {
            LODWORD(__p) = 0;
            if (a3[1] == 5 && *((_DWORD *)a3 + 1) == 1)
            {
              result = sub_1D52AEE80((uint64_t)v5, (uint64_t)a3, (float *)&__p);
              if ((_DWORD)result)
              {
                v7 = *(float *)&__p;
                v8 = v5 + 45;
                goto LABEL_147;
              }
            }
          }
          break;
        case 0x9208u:
          result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 56))(result);
          if ((result & 1) == 0 && a3[1] == 3)
          {
            LODWORD(__p) = 0;
            sub_1D5285A24(&v87, (unsigned int *)&__p);
            LOWORD(__p) = sub_1D52A7E28((uint64_t)a3, (unsigned int *)&v87);
            v87 = a2;
            v57 = sub_1D52B3E7C(v5 + 27, (void **)a2, (uint64_t)&unk_1D544A5C4, &v87);
            result = (uint64_t)sub_1D52B1D94((char *)v57 + 56, (char *)&__p, (uint64_t)&__p + 2, 1uLL);
          }
          break;
        case 0x920Au:
          result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 56))(result);
          if ((result & 1) == 0)
          {
            LODWORD(__p) = 0;
            if (a3[1] == 5 && *((_DWORD *)a3 + 1) == 1)
            {
              result = sub_1D52AEE80((uint64_t)v5, (uint64_t)a3, (float *)&__p);
              if ((_DWORD)result)
              {
                v7 = *(float *)&__p;
                v8 = v5 + 48;
                goto LABEL_147;
              }
            }
          }
          break;
        default:
          return result;
      }
      return result;
    }
    if (*a3 > 0xA002u)
    {
      if (v6 == 40963)
      {
        result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 56))(result);
        if ((result & 1) != 0)
          return result;
        v63 = a3[1];
        if ((v63 - 5) < 0xFFFFFFFE || *((_DWORD *)a3 + 1) != 1)
          return result;
        if (v63 == 4)
          v10 = *((_DWORD *)a3 + 2);
        else
          v10 = sub_1D52AD670((uint64_t)a3);
        v77 = v5 + 60;
LABEL_178:
        v87 = a2;
        result = (uint64_t)sub_1D52B3C68(v77, (void **)a2, (uint64_t)&unk_1D544A5C4, &v87);
        *(_DWORD *)(result + 56) = v10;
        return result;
      }
      if (v6 != 41730)
        return result;
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 56))(result);
      if ((result & 1) != 0 || a3[1] != 7 || *((_DWORD *)a3 + 1) < 5u)
        return result;
      sub_1D52917E4((uint64_t)v5, &__p);
      LODWORD(__src[0]) = sub_1D52A5CC8((uint64_t)a3);
      sub_1D5285B08((int *)&v82, (int *)__src);
      sub_1D5285164((uint64_t *)&v87, (uint64_t *)&__p, (uint64_t)&v82, 0);
      v13 = v85;
      if (v85)
      {
        p_shared_owners = (unint64_t *)&v85->__shared_owners_;
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      sub_1D52917E4((uint64_t)v5, &__p);
      v16 = sub_1D528479C((uint64_t)__p);
      v17 = v85;
      if (v85)
      {
        v18 = (unint64_t *)&v85->__shared_owners_;
        do
          v19 = __ldaxr(v18);
        while (__stlxr(v19 - 1, v18));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      sub_1D52917E4((uint64_t)v5, &__p);
      v20 = sub_1D528479C((uint64_t)__p);
      v21 = v85;
      if (v85)
      {
        v22 = (unint64_t *)&v85->__shared_owners_;
        do
          v23 = __ldaxr(v22);
        while (__stlxr(v23 - 1, v22));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      v24 = *((unsigned int *)a3 + 1);
      v25 = v20 * (unint64_t)v16 + 4;
      v26 = __rev16(v16);
      v27 = __rev16(v20);
      v28 = v25 == v24;
      if (v25 == v24)
        v29 = v16;
      else
        v29 = v26;
      if (v28)
        v30 = v20;
      else
        v30 = v27;
      v31 = v29 > 6 || v30 > 6;
      v32 = v30 * v29;
      if (!v31 && v32 + 4 == v24 && v29 == 2 && v30 == 2)
      {
        __p = 0;
        v85 = 0;
        v86 = 0;
        sub_1D52AFF3C((unint64_t *)&__p, v30 * v29);
        v36 = 0;
        v37 = (unsigned __int16)v32;
        do
        {
          sub_1D52917E4((uint64_t)v5, &v82);
          v38 = sub_1D52846FC((uint64_t)v82);
          v39 = v38;
          v40 = (char *)v85;
          if ((unint64_t)v85 >= v86)
          {
            v42 = (char *)__p;
            v43 = (char *)v85 - (_BYTE *)__p;
            v44 = (char *)v85 - (_BYTE *)__p + 1;
            if (v44 < 0)
              sub_1D5282B8C();
            v45 = v86 - (_QWORD)__p;
            if (2 * (v86 - (unint64_t)__p) > v44)
              v44 = 2 * v45;
            if (v45 >= 0x3FFFFFFFFFFFFFFFLL)
              v46 = 0x7FFFFFFFFFFFFFFFLL;
            else
              v46 = v44;
            if (v46)
              v47 = (char *)operator new(v46);
            else
              v47 = 0;
            v48 = &v47[v43];
            v49 = &v47[v43];
            *v49 = v39;
            v41 = v49 + 1;
            if (v40 != v42)
            {
              v50 = &v40[~(unint64_t)v42];
              do
              {
                v51 = *--v40;
                (v50--)[(_QWORD)v47] = v51;
              }
              while (v40 != v42);
              v40 = (char *)__p;
              v48 = v47;
            }
            __p = v48;
            v85 = (std::__shared_weak_count *)v41;
            v86 = (unint64_t)&v47[v46];
            if (v40)
              operator delete(v40);
          }
          else
          {
            LOBYTE(v85->__vftable) = v38;
            v41 = v40 + 1;
          }
          v85 = (std::__shared_weak_count *)v41;
          v52 = v83;
          if (v83)
          {
            v53 = (unint64_t *)&v83->__shared_owners_;
            do
              v54 = __ldaxr(v53);
            while (__stlxr(v54 - 1, v53));
            if (!v54)
            {
              ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
              std::__shared_weak_count::__release_weak(v52);
            }
          }
          ++v36;
        }
        while (v36 < v37);
        LODWORD(__src[0]) = 131074;
        v82 = a2;
        v55 = sub_1D52B3E7C(v5 + 121, (void **)a2, (uint64_t)&unk_1D544A5C4, &v82);
        sub_1D52B1D94((char *)v55 + 56, (char *)__src, (uint64_t)__src + 4, 2uLL);
        v82 = a2;
        v56 = sub_1D52B3E7C(v5 + 124, (void **)a2, (uint64_t)&unk_1D544A5C4, &v82) + 7;
        if (v56 != (uint64_t *)&__p)
          sub_1D52B1E94(v56, (char *)__p, (char *)v85, (char *)v85 - (_BYTE *)__p);
        if (__p)
        {
          v85 = (std::__shared_weak_count *)__p;
          operator delete(__p);
        }
      }
    }
    else
    {
      if (v6 != 37500)
      {
        if (v6 != 40962)
          return result;
        result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 56))(result);
        if ((result & 1) != 0)
          return result;
        v9 = a3[1];
        if ((v9 - 5) < 0xFFFFFFFE || *((_DWORD *)a3 + 1) != 1)
          return result;
        if (v9 == 4)
          v10 = *((_DWORD *)a3 + 2);
        else
          v10 = sub_1D52AD670((uint64_t)a3);
        v77 = v5 + 57;
        goto LABEL_178;
      }
      if (a3[1] != 7)
        return result;
      sub_1D52917E4(result, &v87);
      if (((**(uint64_t (***)(__int128 *))v87)(v87) & 1) != 0)
      {
        v62 = 1;
      }
      else
      {
        v64 = sub_1D52A5CC8((uint64_t)a3);
        LODWORD(v82) = sub_1D52AA7F0((uint64_t)a3);
        LODWORD(__p) = v64;
        v65 = *sub_1D52B0860(&__p, &v82);
        sub_1D52917E4((uint64_t)v5, &__p);
        v62 = v65 < (*(unsigned int (**)(void *))(*(_QWORD *)__p + 16))(__p);
        v66 = v85;
        if (v85)
        {
          v67 = (unint64_t *)&v85->__shared_owners_;
          do
            v68 = __ldaxr(v67);
          while (__stlxr(v68 - 1, v67));
          if (!v68)
          {
            ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
            std::__shared_weak_count::__release_weak(v66);
          }
        }
      }
      v69 = v88;
      if (v88)
      {
        v70 = (unint64_t *)&v88->__shared_owners_;
        do
          v71 = __ldaxr(v70);
        while (__stlxr(v71 - 1, v70));
        if (!v71)
        {
          ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
          std::__shared_weak_count::__release_weak(v69);
        }
      }
      if (!v62)
        return ((uint64_t (*)(uint64_t **, uint64_t))(*v5)[23])(v5, 1);
      sub_1D52917E4((uint64_t)v5, &__p);
      LODWORD(__src[0]) = sub_1D52A5CC8((uint64_t)a3);
      sub_1D5285B08((int *)&v82, (int *)__src);
      sub_1D5285164((uint64_t *)&v87, (uint64_t *)&__p, (uint64_t)&v82, 0);
      v72 = v85;
      if (v85)
      {
        v73 = (unint64_t *)&v85->__shared_owners_;
        do
          v74 = __ldaxr(v73);
        while (__stlxr(v74 - 1, v73));
        if (!v74)
        {
          ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
          std::__shared_weak_count::__release_weak(v72);
        }
      }
      if (((unsigned int (*)(uint64_t **, unsigned __int16 *))(*v5)[94])(v5, a3))
      {
        sub_1D52917E4((uint64_t)v5, &v82);
        v75 = ((uint64_t (*)(uint64_t **))(*v5)[15])(v5);
        sub_1D5293C20((uint64_t *)&__p, (uint64_t *)&v82, v75);
        sub_1D5282EB4((uint64_t)&v82);
        sub_1D52917E4((uint64_t)v5, __src);
        LODWORD(v78[0]) = ((uint64_t (*)(uint64_t **))(*v5)[17])(v5);
        sub_1D52B1CC8((uint64_t)&v82, __src, v78);
        sub_1D5282EB4((uint64_t)__src);
        sub_1D52917E4((uint64_t)v5, v78);
        v80 = ((uint64_t (*)(uint64_t **))(*v5)[19])(v5);
        sub_1D5285164(__src, (uint64_t *)v78, (uint64_t)&v80, 0);
        sub_1D5282EB4((uint64_t)v78);
        sub_1D52AFE84(":MAKERNOTE", (const void **)a2, v78);
        ((void (*)(uint64_t **, void **))(*v5)[96])(v5, v78);
        if (v79 < 0)
          operator delete(v78[0]);
        ((void (*)(uint64_t **))(*v5)[95])(v5);
        sub_1D5285200(__src);
        sub_1D52B1D54((uint64_t)&v82);
        sub_1D5293C98((uint64_t *)&__p);
      }
    }
    return sub_1D5285200((uint64_t *)&v87);
  }
  if (*a3 > 0x882Fu)
  {
    switch(*a3)
    {
      case 0x8830u:
        result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 56))(result);
        if ((result & 1) == 0 && a3[1] == 3)
        {
          result = ((uint64_t (*)(uint64_t **, __int128 *))(*v5)[33])(v5, a2);
          if ((_DWORD)result == 0xFFFF)
          {
            result = sub_1D52AD670((uint64_t)a3);
            *((_WORD *)v5 + 508) = result;
          }
        }
        break;
      case 0x8831u:
        result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 56))(result);
        if ((result & 1) == 0 && a3[1] == 4)
        {
          v61 = *((unsigned __int16 *)v5 + 508);
          if (v61 <= 7 && ((1 << v61) & 0xB2) != 0)
          {
            v59 = *((_DWORD *)a3 + 2);
            *((_DWORD *)v5 + 255) = v59;
            goto LABEL_128;
          }
        }
        break;
      case 0x8832u:
        result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 56))(result);
        if ((result & 1) == 0 && a3[1] == 4)
        {
          v58 = *((unsigned __int16 *)v5 + 508);
          if (v58 <= 7 && ((1 << v58) & 0xD4) != 0)
          {
            v59 = *((_DWORD *)a3 + 2);
            *((_DWORD *)v5 + 256) = v59;
            if (!*((_DWORD *)v5 + 255))
              goto LABEL_128;
          }
        }
        break;
      case 0x8833u:
        result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 56))(result);
        if ((result & 1) == 0 && a3[1] == 4)
        {
          v60 = *((unsigned __int16 *)v5 + 508);
          if (v60 <= 7 && ((1 << v60) & 0xE8) != 0)
          {
            v59 = *((_DWORD *)a3 + 2);
            *((_DWORD *)v5 + 257) = v59;
            if (!*((_DWORD *)v5 + 255) && !*((_DWORD *)v5 + 256))
            {
LABEL_128:
              LODWORD(__p) = v59;
              goto LABEL_173;
            }
          }
        }
        break;
      default:
        return result;
    }
    return result;
  }
  switch(v6)
  {
    case 0x829Au:
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 56))(result);
      if ((result & 1) != 0)
        return result;
      LODWORD(__p) = 0;
      if (a3[1] != 5)
        return result;
      if (*((_DWORD *)a3 + 1) != 1)
        return result;
      result = sub_1D52AEE80((uint64_t)v5, (uint64_t)a3, (float *)&__p);
      if (!(_DWORD)result)
        return result;
      v7 = *(float *)&__p;
      v8 = v5 + 36;
LABEL_147:
      v87 = a2;
      result = (uint64_t)sub_1D52B4328(v8, (void **)a2, (uint64_t)&unk_1D544A5C4, &v87);
      *(double *)(result + 56) = v7;
      return result;
    case 0x829Du:
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 56))(result);
      if ((result & 1) != 0)
        return result;
      LODWORD(__p) = 0;
      if (a3[1] != 5)
        return result;
      if (*((_DWORD *)a3 + 1) != 1)
        return result;
      result = sub_1D52AEE80((uint64_t)v5, (uint64_t)a3, (float *)&__p);
      if (!(_DWORD)result)
        return result;
      v7 = *(float *)&__p;
      v8 = v5 + 42;
      goto LABEL_147;
    case 0x8827u:
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 56))(result);
      if ((result & 1) == 0)
      {
        v11 = a3[1];
        if (v11 == 3)
        {
          v12 = sub_1D52AD670((uint64_t)a3);
        }
        else
        {
          if (v11 != 4)
            return result;
          v12 = *((_DWORD *)a3 + 2);
        }
        LODWORD(__p) = v12;
LABEL_173:
        v87 = a2;
        v76 = sub_1D52B3E7C(v5 + 24, (void **)a2, (uint64_t)&unk_1D544A5C4, &v87);
        return (uint64_t)sub_1D5282A44((char *)v76 + 56, (char *)&__p, (uint64_t)&__p + 4, 1uLL);
      }
      break;
  }
  return result;
}

void sub_1D52AFD50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  sub_1D52B1D54((uint64_t)&a19);
  sub_1D5293C98((uint64_t *)&a22);
  sub_1D5285200(&a25);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52AFE84@<X0>(char *__s@<X1>, const void **a2@<X0>, void **a3@<X8>)
{
  size_t v6;
  size_t v7;
  uint64_t result;
  const void *v9;
  char *v10;

  if (*((char *)a2 + 23) >= 0)
    v6 = *((unsigned __int8 *)a2 + 23);
  else
    v6 = (size_t)a2[1];
  v7 = strlen(__s);
  result = sub_1D52B1FA0((uint64_t)a3, v6 + v7);
  if (*((char *)a3 + 23) < 0)
    a3 = (void **)*a3;
  if (v6)
  {
    if (*((char *)a2 + 23) >= 0)
      v9 = a2;
    else
      v9 = *a2;
    result = (uint64_t)memmove(a3, v9, v6);
  }
  v10 = (char *)a3 + v6;
  if (v7)
    result = (uint64_t)memmove(v10, __s, v7);
  v10[v7] = 0;
  return result;
}

void sub_1D52AFF3C(unint64_t *a1, size_t __sz)
{
  unint64_t v2;
  char *v5;
  _BYTE *v6;
  char *v7;
  _BYTE *v8;
  char *v9;
  char v10;

  v2 = *a1;
  if (a1[2] - *a1 < __sz)
  {
    if ((__sz & 0x8000000000000000) != 0)
      sub_1D5282B8C();
    v5 = (char *)a1[1];
    v6 = operator new(__sz);
    v7 = &v5[(_QWORD)v6 - v2];
    v8 = v7;
    if (v5 != (char *)v2)
    {
      v9 = &v5[~v2];
      do
      {
        v10 = *--v5;
        (v9--)[(_QWORD)v6] = v10;
      }
      while (v5 != (char *)v2);
      v8 = v6;
    }
    *a1 = (unint64_t)v8;
    a1[1] = (unint64_t)v7;
    a1[2] = (unint64_t)&v6[__sz];
    if (v2)
      operator delete((void *)v2);
  }
}

void sub_1D52AFFE8(uint64_t a1@<X0>, void **a2@<X1>, _QWORD *a3@<X8>)
{
  void **v6;
  _DWORD *v7;
  void **v8;
  void **v9;
  unsigned int v10;
  _BOOL4 v11;
  void **v12;
  void **v13;
  void **v14;
  void **v15;
  void **v16;
  void **v17;
  void **v18;
  int v19;
  void **v20;
  int *v21;
  int v22;
  void **v23;
  unsigned int *v24;
  int v25;
  void **v26;
  unint64_t v27;
  void **v28;
  uint64_t v29;
  BOOL v30;
  int v32;
  void **v33;
  void **v34;
  int v35;
  void **v36;
  void **v37;
  void **v38;
  unsigned int v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  void **v43;
  int v44;
  unint64_t *v45;
  unint64_t *v46;
  _BOOL4 v48;
  BOOL v49;
  unint64_t v50;
  unsigned int v51;
  void **v52;
  _DWORD *v53;
  void **v54;
  _DWORD *v55;
  char *v56;
  _DWORD *v57;
  char *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char *v63;
  char *v64;
  int v65;
  unsigned int v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char *v74;
  unsigned int *v75;
  unsigned int v76;
  unint64_t v77;
  uint64_t v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  uint64_t v84;
  void **v85;
  uint64_t v86;
  void **v87;
  uint64_t v88;
  unsigned int v89;
  __int128 v90;
  int v91;
  void *__p;
  char *v93;
  char *v94;
  unsigned int v95;
  int v96;
  __int128 v97;
  char *v98;
  unsigned int v99;

  v6 = sub_1D5294144(a1 + 656, a2);
  if ((void **)(a1 + 664) != v6)
  {
    v7 = v6[7];
    if (v6[8] != v7 && *v7 != 8)
    {
      *a3 = 0;
      a3[1] = 0;
      return;
    }
  }
  *a3 = 0;
  a3[1] = 0;
  v99 = 0;
  v84 = (uint64_t)a3;
  v8 = sub_1D5294144(a1 + 704, a2);
  v9 = v8;
  if ((void **)(a1 + 712) == v8)
  {
    sub_1D52850A0(&v97, "IFD0");
    v12 = sub_1D5294144(a1 + 704, (void **)&v97);
    v30 = v9 == v12;
    v11 = v9 != v12;
    if (v30)
      v10 = 1;
    else
      v10 = *((_DWORD *)v12 + 14);
    if (SHIBYTE(v98) < 0)
      operator delete((void *)v97);
  }
  else
  {
    v10 = *((_DWORD *)v8 + 14);
    v11 = 1;
  }
  if (v11 && v10 && v10 <= 8)
    v99 = v10;
  v96 = 0;
  v95 = 0;
  v13 = sub_1D5294144(a1 + 536, a2);
  v14 = v13;
  if ((void **)(a1 + 544) == v13)
    v82 = 0;
  else
    v82 = *((_DWORD *)v13 + 14);
  v15 = sub_1D5294144(a1 + 560, a2);
  v16 = v15;
  if ((void **)(a1 + 568) == v15)
    v81 = 0;
  else
    v81 = *((_DWORD *)v15 + 14);
  v17 = sub_1D5294144(a1 + 584, a2);
  v18 = v17;
  if ((void **)(a1 + 592) == v17)
    v19 = 0;
  else
    v19 = *((_DWORD *)v17 + 14);
  v88 = a1 + 776;
  v20 = sub_1D5294144(a1 + 776, a2);
  v87 = (void **)(a1 + 784);
  v83 = v19;
  if ((void **)(a1 + 784) == v20 || (v21 = (int *)v20[7], v20[8] == v21))
  {
    v22 = 0;
  }
  else
  {
    v96 = *v21;
    v22 = 1;
  }
  v86 = a1 + 800;
  v23 = sub_1D5294144(a1 + 800, a2);
  v85 = (void **)(a1 + 808);
  if ((void **)(a1 + 808) == v23 || (v24 = (unsigned int *)v23[7], v23[8] == v24))
  {
    v25 = 0;
  }
  else
  {
    v95 = *v24;
    v25 = 1;
  }
  v26 = sub_1D5294144(v88, a2);
  if (v87 == v26)
    v27 = 0;
  else
    v27 = ((_BYTE *)v26[8] - (_BYTE *)v26[7]) >> 2;
  v28 = sub_1D5294144(v86, a2);
  if (v85 == v28)
    v29 = 0;
  else
    v29 = ((_BYTE *)v28[8] - (_BYTE *)v28[7]) >> 2;
  v30 = (void **)(a1 + 544) == v14 || a1 + 568 == (_QWORD)v16;
  if (v30 || a1 + 592 == (_QWORD)v18)
    v32 = 0;
  else
    v32 = v22;
  if (!v27)
    v32 = 0;
  if ((v25 & v32) == 1 && v29)
  {
    v33 = sub_1D5294144(a1 + 752, a2);
    v34 = v33;
    if ((void **)(a1 + 760) == v33)
      v35 = 0;
    else
      v35 = *((_DWORD *)v33 + 14);
    v43 = sub_1D5294144(a1 + 632, a2);
    if ((void **)(a1 + 640) == v43)
      v44 = 0;
    else
      v44 = *((_DWORD *)v43 + 14);
    if ((v83 & 0xFFFFFFFE) == 6)
    {
      sub_1D5282F74((int *)&__p, &v96);
      LODWORD(v90) = v95;
      sub_1D5291E58(a1, (int *)&__p, (unsigned int *)&v90, v99, &v97);
      sub_1D5292548(v84, &v97);
      v40 = (std::__shared_weak_count *)*((_QWORD *)&v97 + 1);
      if (!*((_QWORD *)&v97 + 1))
        return;
      v45 = (unint64_t *)(*((_QWORD *)&v97 + 1) + 8);
      do
        v42 = __ldaxr(v45);
      while (__stlxr(v42 - 1, v45));
      goto LABEL_76;
    }
    if (v83 == 1)
    {
      v48 = (void **)(a1 + 640) == v43 || v44 == 2;
      v49 = v35 == 1 || a1 + 760 == (_QWORD)v34;
      if (v49 && v48)
      {
        v97 = 0uLL;
        v98 = 0;
        __p = 0;
        v93 = 0;
        v94 = 0;
        LODWORD(v90) = 0;
        sub_1D5285A24(&v91, (unsigned int *)&v90);
        v50 = 0;
        v51 = 0;
        do
        {
          v52 = sub_1D5294144(v88, a2);
          if (v87 != v52)
          {
            v53 = v52[7];
            if (v50 < ((_BYTE *)v52[8] - (_BYTE *)v53) >> 2)
              v96 = v53[v50];
          }
          v54 = sub_1D5294144(v86, a2);
          if (v85 != v54)
          {
            v55 = v54[7];
            if (v50 < ((_BYTE *)v54[8] - (_BYTE *)v55) >> 2)
              v95 = v55[v50];
          }
          v56 = (char *)*((_QWORD *)&v97 + 1);
          if (*((_QWORD *)&v97 + 1) >= (unint64_t)v98)
          {
            v58 = (char *)v97;
            v59 = (uint64_t)(*((_QWORD *)&v97 + 1) - v97) >> 2;
            v60 = v59 + 1;
            if ((unint64_t)(v59 + 1) >> 62)
              sub_1D5282B8C();
            v61 = (uint64_t)&v98[-v97];
            if ((uint64_t)&v98[-v97] >> 1 > v60)
              v60 = v61 >> 1;
            if ((unint64_t)v61 >= 0x7FFFFFFFFFFFFFFCLL)
              v62 = 0x3FFFFFFFFFFFFFFFLL;
            else
              v62 = v60;
            if (v62)
            {
              v63 = (char *)sub_1D5282BA0((uint64_t)&v98, v62);
              v56 = (char *)*((_QWORD *)&v97 + 1);
              v58 = (char *)v97;
            }
            else
            {
              v63 = 0;
            }
            v64 = &v63[4 * v59];
            *(_DWORD *)v64 = v96;
            v57 = v64 + 4;
            while (v56 != v58)
            {
              v65 = *((_DWORD *)v56 - 1);
              v56 -= 4;
              *((_DWORD *)v64 - 1) = v65;
              v64 -= 4;
            }
            *(_QWORD *)&v97 = v64;
            *((_QWORD *)&v97 + 1) = v57;
            v98 = &v63[4 * v62];
            if (v58)
              operator delete(v58);
          }
          else
          {
            **((_DWORD **)&v97 + 1) = v96;
            v57 = v56 + 4;
          }
          *((_QWORD *)&v97 + 1) = v57;
          v66 = v95;
          v67 = v93;
          if (v93 >= v94)
          {
            v69 = (char *)__p;
            v70 = (v93 - (_BYTE *)__p) >> 2;
            v71 = v70 + 1;
            if ((unint64_t)(v70 + 1) >> 62)
              sub_1D5282B8C();
            v72 = v94 - (_BYTE *)__p;
            if ((v94 - (_BYTE *)__p) >> 1 > v71)
              v71 = v72 >> 1;
            if ((unint64_t)v72 >= 0x7FFFFFFFFFFFFFFCLL)
              v73 = 0x3FFFFFFFFFFFFFFFLL;
            else
              v73 = v71;
            if (v73)
            {
              v74 = (char *)sub_1D5282BA0((uint64_t)&v94, v73);
              v69 = (char *)__p;
              v67 = v93;
            }
            else
            {
              v74 = 0;
            }
            v75 = (unsigned int *)&v74[4 * v70];
            *v75 = v66;
            v68 = (char *)(v75 + 1);
            while (v67 != v69)
            {
              v76 = *((_DWORD *)v67 - 1);
              v67 -= 4;
              *--v75 = v76;
            }
            __p = v75;
            v93 = v68;
            v94 = &v74[4 * v73];
            if (v69)
              operator delete(v69);
          }
          else
          {
            *(_DWORD *)v93 = v95;
            v68 = v67 + 4;
          }
          v93 = v68;
          sub_1D52B0860(&v91, &v95);
          v50 = ++v51;
        }
        while (v27 > v51);
        v77 = v82 * (unint64_t)v81;
        if ((v77 & 0xFFFFFFFF00000000) == 0)
        {
          v78 = 3 * v77;
          if ((v78 & 0xFFFFFFFF00000000) == 0 && v91 == (_DWORD)v78)
          {
            if (*((_QWORD *)&v97 + 1) == (_QWORD)v97)
              sub_1D528EAE0();
            v79 = *(_DWORD *)v97;
            sub_1D52917E4(a1, &v90);
            v89 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)v90 + 16))(v90);
            v80 = *sub_1D52B4588(&v89, &v91);
            sub_1D5282EB4((uint64_t)&v90);
            if (v79 <= v80)
            {
              sub_1D5282DF0(&v89, v82, v81);
              sub_1D52B45F8((uint64_t)&v89, &v99, &v90);
              sub_1D5292548(v84, &v90);
              sub_1D5282EB4((uint64_t)&v90);
            }
          }
        }
        if (__p)
        {
          v93 = (char *)__p;
          operator delete(__p);
        }
        if ((_QWORD)v97)
        {
          *((_QWORD *)&v97 + 1) = v97;
          operator delete((void *)v97);
        }
      }
    }
    else if (v83 == 52546)
    {
      sub_1D5282DF0(&__p, v82, v81);
      sub_1D52B4460(&__p, (int *)&v99, (unsigned int *)&v96, &v95, &v97);
      sub_1D5292548(v84, &v97);
      v40 = (std::__shared_weak_count *)*((_QWORD *)&v97 + 1);
      if (*((_QWORD *)&v97 + 1))
      {
        v46 = (unint64_t *)(*((_QWORD *)&v97 + 1) + 8);
        do
          v42 = __ldaxr(v46);
        while (__stlxr(v42 - 1, v46));
LABEL_76:
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
          std::__shared_weak_count::__release_weak(v40);
        }
      }
    }
  }
  else
  {
    LODWORD(__p) = 0;
    v36 = sub_1D5294144(a1 + 824, a2);
    v37 = v36;
    if ((void **)(a1 + 832) != v36)
      LODWORD(__p) = *((_DWORD *)v36 + 14);
    v38 = sub_1D5294144(a1 + 848, a2);
    if ((void **)(a1 + 856) != v38 && (void **)(a1 + 832) != v37)
    {
      v39 = *((_DWORD *)v38 + 14);
      sub_1D5282F74((int *)&v90, (int *)&__p);
      v89 = v39;
      sub_1D5291E58(a1, (int *)&v90, &v89, v99, &v97);
      sub_1D5292548(v84, &v97);
      v40 = (std::__shared_weak_count *)*((_QWORD *)&v97 + 1);
      if (*((_QWORD *)&v97 + 1))
      {
        v41 = (unint64_t *)(*((_QWORD *)&v97 + 1) + 8);
        do
          v42 = __ldaxr(v41);
        while (__stlxr(v42 - 1, v41));
        goto LABEL_76;
      }
    }
  }
}

void sub_1D52B0798(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  uint64_t v23;
  void *v25;

  if (__p)
    operator delete(__p);
  v25 = *(void **)(v23 - 120);
  if (v25)
  {
    *(_QWORD *)(v23 - 112) = v25;
    operator delete(v25);
  }
  sub_1D5282EB4(a13);
  _Unwind_Resume(a1);
}

_DWORD *sub_1D52B0860(_DWORD *result, _DWORD *a2)
{
  BOOL v2;
  void *exception;

  v2 = __CFADD__(*result, *a2);
  *result += *a2;
  if (v2)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return result;
}

void sub_1D52B08BC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D52B08D0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  __int128 v11;
  void *__p[2];
  char v13;
  __int128 v14;

  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  sub_1D52850A0(__p, "IFD0");
  sub_1D52AFFE8(a1, __p, &v14);
  if (v13 < 0)
    operator delete(__p[0]);
  sub_1D52850A0(__p, "IFD1");
  sub_1D52AFFE8(a1, __p, &v11);
  if (v13 < 0)
    operator delete(__p[0]);
  if ((_QWORD)v14)
  {
    v4 = *(_DWORD *)(v14 + 16);
    if (v4 && (_QWORD)v11 && !*(_DWORD *)(v11 + 16))
      *(_DWORD *)(v11 + 16) = v4;
    sub_1D52B0A7C((char **)a2, &v14);
  }
  if ((_QWORD)v11)
    sub_1D52B0A7C((char **)a2, &v11);
  v5 = (std::__shared_weak_count *)*((_QWORD *)&v11 + 1);
  if (*((_QWORD *)&v11 + 1))
  {
    v6 = (unint64_t *)(*((_QWORD *)&v11 + 1) + 8);
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  v8 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (*((_QWORD *)&v14 + 1))
  {
    v9 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_1D52B0A14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  uint64_t v17;

  if (a17 < 0)
    operator delete(__p);
  sub_1D5282EB4(v17 - 32);
  sub_1D5282E44((void ***)&__p);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52B0A7C(char **a1, __int128 *a2)
{
  uint64_t result;
  unint64_t v5;
  unint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  __int128 v19;
  unint64_t *v20;
  unint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  __int128 v25;
  int64x2_t v26;
  char *v27;
  uint64_t v28;
  int64x2_t v29;
  char *v30;
  uint64_t v31;

  v6 = (unint64_t)a1[2];
  result = (uint64_t)(a1 + 2);
  v5 = v6;
  v7 = *(char **)(result - 8);
  if ((unint64_t)v7 >= v6)
  {
    v12 = (v7 - *a1) >> 4;
    v13 = v12 + 1;
    if ((unint64_t)(v12 + 1) >> 60)
      sub_1D5282B8C();
    v14 = v5 - (_QWORD)*a1;
    if (v14 >> 3 > v13)
      v13 = v14 >> 3;
    if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFF0)
      v15 = 0xFFFFFFFFFFFFFFFLL;
    else
      v15 = v13;
    v31 = result;
    v16 = (char *)sub_1D5284334(result, v15);
    v18 = &v16[16 * v12];
    v19 = *a2;
    *(_OWORD *)v18 = *a2;
    if (*((_QWORD *)&v19 + 1))
    {
      v20 = (unint64_t *)(*((_QWORD *)&v19 + 1) + 8);
      do
        v21 = __ldxr(v20);
      while (__stxr(v21 + 1, v20));
    }
    v23 = *a1;
    v22 = a1[1];
    if (v22 == *a1)
    {
      v26 = vdupq_n_s64((unint64_t)v22);
      v24 = &v16[16 * v12];
    }
    else
    {
      v24 = &v16[16 * v12];
      do
      {
        v25 = *((_OWORD *)v22 - 1);
        v22 -= 16;
        *((_OWORD *)v24 - 1) = v25;
        v24 -= 16;
        *(_QWORD *)v22 = 0;
        *((_QWORD *)v22 + 1) = 0;
      }
      while (v22 != v23);
      v26 = *(int64x2_t *)a1;
    }
    v11 = v18 + 16;
    *a1 = v24;
    a1[1] = v18 + 16;
    v29 = v26;
    v27 = a1[2];
    a1[2] = &v16[16 * v17];
    v30 = v27;
    v28 = v26.i64[0];
    result = sub_1D52B2024((uint64_t)&v28);
  }
  else
  {
    *(_QWORD *)v7 = *(_QWORD *)a2;
    v8 = *((_QWORD *)a2 + 1);
    *((_QWORD *)v7 + 1) = v8;
    if (v8)
    {
      v9 = (unint64_t *)(v8 + 8);
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
    v11 = v7 + 16;
  }
  a1[1] = v11;
  return result;
}

uint64_t sub_1D52B0BBC(uint64_t a1, void **a2)
{
  void **v4;
  unsigned int *v5;
  void **v6;

  v4 = sub_1D5294144(a1 + 776, a2);
  if (((void **)(a1 + 784) == v4 || (v5 = (unsigned int *)v4[7], v4[8] == v5))
    && ((v6 = sub_1D5294144(a1 + 920, a2), (void **)(a1 + 928) == v6) || (v5 = (unsigned int *)v6[7], v6[8] == v5)))
  {
    return 0;
  }
  else
  {
    return *v5;
  }
}

uint64_t sub_1D52B0C2C(uint64_t a1, void **a2)
{
  uint64_t v4;
  void **v5;
  void **v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unsigned int v11;
  void **v12;
  _DWORD *v13;
  BOOL v14;
  uint64_t v15;
  void **v16;
  void **v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  void **v22;
  _DWORD *v23;

  v4 = a1 + 800;
  v5 = sub_1D5294144(a1 + 800, a2);
  v6 = (void **)(a1 + 808);
  if ((void **)(a1 + 808) == v5 || (v7 = (_BYTE *)v5[8] - (_BYTE *)v5[7]) == 0)
  {
    v15 = a1 + 944;
    v16 = sub_1D5294144(a1 + 944, a2);
    v17 = (void **)(a1 + 952);
    if ((void **)(a1 + 952) == v16)
      return 0;
    v18 = (_BYTE *)v16[8] - (_BYTE *)v16[7];
    if (!v18)
    {
      return 0;
    }
    else
    {
      v19 = 0;
      v9 = 0;
      v20 = v18 >> 2;
      v21 = 1;
      do
      {
        v22 = sub_1D5294144(v15, a2);
        if (v17 != v22)
        {
          v23 = v22[7];
          if (v19 < ((_BYTE *)v22[8] - (_BYTE *)v23) >> 2)
            v9 += v23[v19];
        }
        v19 = v21;
        v14 = v20 > v21++;
      }
      while (v14);
    }
  }
  else
  {
    v8 = 0;
    v9 = 0;
    v10 = v7 >> 2;
    v11 = 1;
    do
    {
      v12 = sub_1D5294144(v4, a2);
      if (v6 != v12)
      {
        v13 = v12[7];
        if (v8 < ((_BYTE *)v12[8] - (_BYTE *)v13) >> 2)
          v9 += v13[v8];
      }
      v8 = v11;
      v14 = v10 > v11++;
    }
    while (v14);
  }
  return v9;
}

unint64_t sub_1D52B0D58(uint64_t a1, void **a2)
{
  void **v4;
  int v5;
  void **v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = sub_1D5294144(a1 + 536, a2);
  if ((void **)(a1 + 544) == v4
    || (v5 = *((_DWORD *)v4 + 14), v6 = sub_1D5294144(a1 + 560, a2), (void **)(a1 + 568) == v6))
  {
    v7 = 0;
    v8 = 0;
  }
  else
  {
    sub_1D5282DF0(&v10, v5, *((_DWORD *)v6 + 14));
    v7 = v10 & 0xFFFFFFFF00000000;
    v8 = v10;
  }
  return v8 | v7;
}

void sub_1D52B0DE4(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  void **v8;
  void **v9;
  void **v10;
  uint64_t i;
  _QWORD v12[3];
  _QWORD v13[3];
  _QWORD v14[3];
  _QWORD v15[3];
  _QWORD v16[3];
  _QWORD v17[3];
  _QWORD v18[3];
  _QWORD v19[3];
  _QWORD v20[4];

  v20[3] = *MEMORY[0x1E0C80C00];
  sub_1D52850A0(v12, "IFD0:SUBIFD0");
  sub_1D52850A0(v13, "IFD0:SUBIFD1");
  sub_1D52850A0(v14, "IFD0:SUBIFD2");
  sub_1D52850A0(v15, "IFD0:SUBIFD3");
  sub_1D52850A0(v16, "IFD0:SUBIFD4");
  sub_1D52850A0(v17, "IFD0:SUBIFD5");
  sub_1D52850A0(v18, "IFD0:SUBIFD6");
  sub_1D52850A0(v19, "IFD0:SUBIFD7");
  sub_1D52850A0(v20, "IFD0");
  v6 = 0;
  v7 = a1 + 512;
  v8 = (void **)(a1 + 520);
  while (1)
  {
    v9 = sub_1D5294144(v7, (void **)&v12[v6]);
    if (v8 != v9 && *((_DWORD *)v9 + 14) == a2)
      break;
    v6 += 3;
    if (v6 == 27)
    {
      sub_1D52850A0(a3, "");
      goto LABEL_9;
    }
  }
  v10 = (void **)&v12[v6];
  if (SHIBYTE(v12[v6 + 2]) < 0)
  {
    sub_1D5290130(a3, *v10, (unint64_t)v10[1]);
  }
  else
  {
    *(_OWORD *)a3 = *(_OWORD *)v10;
    a3[2] = v10[2];
  }
LABEL_9:
  for (i = 0; i != -27; i -= 3)
  {
    if (SHIBYTE(v20[i + 2]) < 0)
      operator delete((void *)v20[i]);
  }
}

void sub_1D52B0FBC(_Unwind_Exception *exception_object, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;

  v10 = 0;
  while (1)
  {
    if (*((char *)&a9 + v10 + 215) < 0)
      operator delete(*(void **)((char *)&a9 + v10 + 192));
    v10 -= 24;
    if (v10 == -216)
      _Unwind_Resume(exception_object);
  }
}

void sub_1D52B1028(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t i;
  void **v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t j;
  _QWORD v11[3];
  _QWORD v12[3];
  _QWORD v13[3];
  _QWORD v14[3];
  _QWORD v15[3];
  _QWORD v16[3];
  _QWORD v17[3];
  _QWORD v18[3];
  _QWORD v19[4];

  v19[3] = *MEMORY[0x1E0C80C00];
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  sub_1D52850A0(v11, "IFD0:SUBIFD0");
  sub_1D52850A0(v12, "IFD0:SUBIFD1");
  sub_1D52850A0(v13, "IFD0:SUBIFD2");
  sub_1D52850A0(v14, "IFD0:SUBIFD3");
  sub_1D52850A0(v15, "IFD0:SUBIFD4");
  sub_1D52850A0(v16, "IFD0:SUBIFD5");
  sub_1D52850A0(v17, "IFD0:SUBIFD6");
  sub_1D52850A0(v18, "IFD0:SUBIFD7");
  sub_1D52850A0(v19, "IFD0");
  for (i = 0; i != 27; i += 3)
  {
    v7 = sub_1D5294144(a1 + 512, (void **)&v11[i]);
    if ((void **)(a1 + 520) != v7 && *((_DWORD *)v7 + 14) == a2)
    {
      v8 = a3[1];
      if (v8 >= a3[2])
      {
        v9 = sub_1D52B2070(a3, (__int128 *)&v11[i]);
      }
      else
      {
        sub_1D529E60C(a3, (__int128 *)&v11[i]);
        v9 = v8 + 24;
      }
      a3[1] = v9;
    }
  }
  for (j = 0; j != -27; j -= 3)
  {
    if (SHIBYTE(v19[j + 2]) < 0)
      operator delete((void *)v19[j]);
  }
}

void sub_1D52B1200(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  sub_1D5293CCC(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52B1270(uint64_t a1)
{
  _BOOL4 v2;
  unsigned __int8 *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v7;
  uint64_t v10;
  uint64_t v11;
  int v12;
  unint64_t v13;
  unint64_t v14;
  const std::string::value_type *v15;
  unsigned int v16;
  std::string::size_type size;
  std::string *v20;
  _BOOL4 v21;
  void *__p[2];
  char v24;
  void *v25[2];
  char v26;
  std::string v27;
  unsigned __int8 *v28;
  _BYTE *v29;
  uint64_t v30;

  v28 = 0;
  v29 = 0;
  v30 = 0;
  sub_1D52B0DE4(a1, 0, &v27);
  if (sub_1D52B1870(a1 + 992, (void **)&v27.__r_.__value_.__l.__data_, (void **)&v28))
  {
    v2 = 1;
  }
  else
  {
    sub_1D52850A0(v25, "IFD0:SUBIFD0");
    if (sub_1D52B1870(a1 + 992, v25, (void **)&v28))
    {
      v2 = 1;
    }
    else
    {
      sub_1D52850A0(__p, "IFD0:EXIF");
      v2 = sub_1D52B1870(a1 + 992, __p, (void **)&v28);
      if (v24 < 0)
        operator delete(__p[0]);
    }
    if (v26 < 0)
      operator delete(v25[0]);
  }
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v27.__r_.__value_.__l.__data_);
    if (!v2)
      goto LABEL_103;
  }
  else if (!v2)
  {
    goto LABEL_103;
  }
  v3 = v28;
  if (v29 - v28 == 4)
  {
    v11 = 0;
    v12 = 0;
    do
      v12 = v28[v11++] | (v12 << 8);
    while (v11 != 4);
    if (v12 > 16908288)
    {
      if (v12 == 16908289)
      {
        v10 = 1229539657;
        goto LABEL_104;
      }
      if (v12 == 33620224)
      {
        v10 = 370546198;
        goto LABEL_104;
      }
    }
    else
    {
      if (v12 == 65794)
      {
        v10 = 2492765332;
        goto LABEL_104;
      }
      if (v12 == 16777729)
      {
        v10 = 1633771873;
        goto LABEL_104;
      }
    }
    goto LABEL_103;
  }
  if (v29 - v28 == 16)
  {
    v4 = 0;
    v5 = 0;
    v6 = 0;
    do
    {
      *((_QWORD *)&v7 + 1) = v6;
      *(_QWORD *)&v7 = v5;
      v6 = v7 >> 56;
      v5 = v28[v4++] | (v5 << 8);
    }
    while (v4 != 16);
    if ((__int128)__PAIR128__(0x101020201010202, 0x1000100010000) < (__int128)__PAIR128__(v6, v5))
    {
      if (v6 == 0x101020201010202 && v5 == 0x1000100010001)
      {
        v10 = 1364283729;
        goto LABEL_104;
      }
      if (v6 == 0x202010102020101 && v5 == 0x101000001010000)
      {
        v10 = 1094795585;
        goto LABEL_104;
      }
    }
    else
    {
      if (v6 == 0x10100000101 && v5 == 0x101020201010202)
      {
        v10 = 353703189;
        goto LABEL_104;
      }
      if (v6 == 0x101000001010000 && v5 == 0x202010102020101)
      {
        v10 = 336860180;
        goto LABEL_104;
      }
    }
    goto LABEL_103;
  }
  memset(&v27, 0, sizeof(v27));
  if (v29 == v28)
  {
    size = 0;
    v16 = 0;
  }
  else
  {
    v13 = 0;
    do
    {
      v14 = (char)v3[v13];
      v15 = "X";
      if (v14 < 3)
        v15 = off_1E9972588[v14];
      std::string::append(&v27, v15, 1uLL);
      ++v13;
      v3 = v28;
    }
    while (v13 < v29 - v28);
    v16 = HIBYTE(v27.__r_.__value_.__r.__words[2]);
    size = v27.__r_.__value_.__l.__size_;
  }
  v10 = 2172748160;
  if ((v16 & 0x80u) == 0)
    size = v16;
  if (size != 36)
    goto LABEL_63;
  if ((v16 & 0x80u) == 0)
    v20 = &v27;
  else
    v20 = (std::string *)v27.__r_.__value_.__r.__words[0];
  if (!memcmp(v20, "GBGGRGRGRBGBGBGGRGGRGGBGBGBRGRGRGGBG", 0x24uLL))
  {
    v21 = 0;
    goto LABEL_99;
  }
  if (!memcmp(v20, "BGGRGGGRBGBRBGGRGGRGGBGGGBRGRBRGGBGG", 0x24uLL))
  {
    v21 = 0;
    v10 = 2172748161;
    goto LABEL_99;
  }
  if (!memcmp(v20, "GGRGGBRBGBRGGGRGGBGGBGGRBRGRBGGGBGGR", 0x24uLL))
  {
    v21 = 0;
    v10 = 2172748162;
  }
  else
  {
LABEL_63:
    if (sub_1D52B18D0((const void **)&v27.__r_.__value_.__l.__data_, "GRGGBGBGBRGRGRGGBGGBGGRGRGRBGBGBGGRG"))
    {
      v21 = 0;
      v10 = 2172748163;
    }
    else if (sub_1D52B18D0((const void **)&v27.__r_.__value_.__l.__data_, "RGGBGGGBRGRBRGGBGGBGGRGGGRBGBRBGGRGG"))
    {
      v21 = 0;
      v10 = 2172748164;
    }
    else if (sub_1D52B18D0((const void **)&v27.__r_.__value_.__l.__data_, "GGBGGRBRGRBGGGBGGRGGRGGBRBGBRGGGRGGB"))
    {
      v21 = 0;
      v10 = 2172748165;
    }
    else if (sub_1D52B18D0((const void **)&v27.__r_.__value_.__l.__data_, "RGRBGBGBGGRGGRGGBGBGBRGRGRGGBGGBGGRG"))
    {
      v21 = 0;
      v10 = 2172748166;
    }
    else if (sub_1D52B18D0((const void **)&v27.__r_.__value_.__l.__data_, "GRBGBRBGGRGGRGGBGGGBRGRBRGGBGGBGGRGG"))
    {
      v21 = 0;
      v10 = 2172748167;
    }
    else if (sub_1D52B18D0((const void **)&v27.__r_.__value_.__l.__data_, "RBGBRGGGRGGBGGBGGRBRGRBGGGBGGRGGRGGB"))
    {
      v21 = 0;
      v10 = 2172748168;
    }
    else if (sub_1D52B18D0((const void **)&v27.__r_.__value_.__l.__data_, "BGBRGRGRGGBGGBGGRGRGRBGBGBGGRGGRGGBG"))
    {
      v21 = 0;
      v10 = 2172748169;
    }
    else if (sub_1D52B18D0((const void **)&v27.__r_.__value_.__l.__data_, "GBRGRBRGGBGGBGGRGGGRBGBRBGGRGGRGGBGG"))
    {
      v21 = 0;
      v10 = 2172748170;
    }
    else if (sub_1D52B18D0((const void **)&v27.__r_.__value_.__l.__data_, "BRGRBGGGBGGRGGRGGBRBGBRGGGRGGBGGBGGR"))
    {
      v21 = 0;
      v10 = 2172748171;
    }
    else if (sub_1D52B18D0((const void **)&v27.__r_.__value_.__l.__data_, "GBGGRGGRGGBGBGBRGRGRGGBGGBGGRGRGRBGB"))
    {
      v21 = 0;
      v10 = 2172748172;
    }
    else if (sub_1D52B18D0((const void **)&v27.__r_.__value_.__l.__data_, "BGGRGGRGGBGGGBRGRBRGGBGGBGGRGGGRBGBR"))
    {
      v21 = 0;
      v10 = 2172748173;
    }
    else if (sub_1D52B18D0((const void **)&v27.__r_.__value_.__l.__data_, "GGRGGBGGBGGRBRGRBGGGBGGRGGRGGBRBGBRG"))
    {
      v21 = 0;
      v10 = 2172748174;
    }
    else if (sub_1D52B18D0((const void **)&v27.__r_.__value_.__l.__data_, "GRGGBGGBGGRGRGRBGBGBGGRGGRGGBGBGBRGR"))
    {
      v21 = 0;
      v10 = 2172748175;
    }
    else if (sub_1D52B18D0((const void **)&v27.__r_.__value_.__l.__data_, "RGGBGGBGGRGGGRBGBRBGGRGGRGGBGGGBRGRB"))
    {
      v21 = 0;
      v10 = 2172748176;
    }
    else
    {
      v21 = !sub_1D52B18D0((const void **)&v27.__r_.__value_.__l.__data_, "GGBGGRGGRGGBRBGBRGGGRGGBGGBGGRBRGRBG");
      v10 = 2172748177;
    }
  }
LABEL_99:
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v27.__r_.__value_.__l.__data_);
    if (!v21)
      goto LABEL_104;
    goto LABEL_103;
  }
  if (v21)
LABEL_103:
    v10 = sub_1D52919B4();
LABEL_104:
  if (v28)
  {
    v29 = v28;
    operator delete(v28);
  }
  return v10;
}

void sub_1D52B17FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  uint64_t v26;
  void *v28;

  if (a14 < 0)
    operator delete(__p);
  if (a20 < 0)
    operator delete(a15);
  if (a26 < 0)
    operator delete(a21);
  v28 = *(void **)(v26 - 56);
  if (v28)
  {
    *(_QWORD *)(v26 - 48) = v28;
    operator delete(v28);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1D52B1870(uint64_t a1, void **a2, void **a3)
{
  void **v5;
  void **v6;
  void **v7;

  v5 = sub_1D5294144(a1, a2);
  v6 = v5;
  v7 = (void **)(a1 + 8);
  if (v7 != v5 && v5 + 7 != a3)
    sub_1D52B1E94(a3, (char *)v5[7], (char *)v5[8], (_BYTE *)v5[8] - (_BYTE *)v5[7]);
  return v7 != v6;
}

BOOL sub_1D52B18D0(const void **a1, char *__s)
{
  int v4;
  size_t v5;
  const void *v6;

  v4 = *((char *)a1 + 23);
  if (v4 >= 0)
    v5 = *((unsigned __int8 *)a1 + 23);
  else
    v5 = (size_t)a1[1];
  if (v5 != strlen(__s))
    return 0;
  if (v4 >= 0)
    v6 = a1;
  else
    v6 = *a1;
  return memcmp(v6, __s, v5) == 0;
}

uint64_t sub_1D52B1944(uint64_t a1)
{
  uint64_t v2;
  void **v3;
  uint64_t v4;
  void *__p[2];
  char v7;

  v2 = a1 + 680;
  sub_1D52850A0(__p, "IFD0");
  v3 = sub_1D5294144(v2, __p);
  if ((void **)(a1 + 688) == v3)
    v4 = 1;
  else
    v4 = *((unsigned int *)v3 + 14);
  if (v7 < 0)
    operator delete(__p[0]);
  return v4;
}

void sub_1D52B19B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D52B19D0(uint64_t a1, unsigned int *a2)
{
  uint64_t v2;
  void *exception;

  v2 = *a2;
  if (v2 >= 4)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return *(unsigned __int8 *)(a1 + v2 + 8);
}

void sub_1D52B1A2C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D52B1A40(void **a1, unint64_t a2)
{
  uint64_t v3;
  _BYTE *v4;
  int64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  int v13;

  v4 = a1[2];
  v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (_BYTE *)*a1) >> 2)
  {
    if (a2 >> 62)
      sub_1D5282B8C();
    v5 = (_BYTE *)a1[1] - (_BYTE *)*a1;
    v6 = (char *)sub_1D5282BA0(v3, a2);
    v7 = &v6[v5 & 0xFFFFFFFFFFFFFFFCLL];
    v9 = &v6[4 * v8];
    v10 = (char *)*a1;
    v11 = (char *)a1[1];
    v12 = v7;
    if (v11 != *a1)
    {
      v12 = v7;
      do
      {
        v13 = *((_DWORD *)v11 - 1);
        v11 -= 4;
        *((_DWORD *)v12 - 1) = v13;
        v12 -= 4;
      }
      while (v11 != v10);
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
      operator delete(v10);
  }
}

void sub_1D52B1AD4(void **a1, unint64_t a2)
{
  uint64_t v3;
  _BYTE *v4;
  int64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  int v13;

  v4 = a1[2];
  v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (_BYTE *)*a1) >> 2)
  {
    if (a2 >> 62)
      sub_1D5282B8C();
    v5 = (_BYTE *)a1[1] - (_BYTE *)*a1;
    v6 = (char *)sub_1D5282BA0(v3, a2);
    v7 = &v6[v5 & 0xFFFFFFFFFFFFFFFCLL];
    v9 = &v6[4 * v8];
    v10 = (char *)*a1;
    v11 = (char *)a1[1];
    v12 = v7;
    if (v11 != *a1)
    {
      v12 = v7;
      do
      {
        v13 = *((_DWORD *)v11 - 1);
        v11 -= 4;
        *((_DWORD *)v12 - 1) = v13;
        v12 -= 4;
      }
      while (v11 != v10);
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
      operator delete(v10);
  }
}

void sub_1D52B1B6C(uint64_t a1)
{
  sub_1D52B2190(a1);
  JUMPOUT(0x1D8271ADCLL);
}

id sub_1D52B1B90(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  objc_msgSend_objectForKeyedSubscript_(*(void **)(a1 + 504), a2, (uint64_t)a2, a4, a5);
  return (id)objc_claimAutoreleasedReturnValue();
}

_QWORD *sub_1D52B1BB0(_QWORD *__b, size_t __len, int __c)
{
  void *v6;
  size_t v7;
  size_t v8;

  if (__len >= 0x7FFFFFFFFFFFFFF8)
    sub_1D5285150();
  if (__len >= 0x17)
  {
    v7 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17)
      v7 = __len | 7;
    v8 = v7 + 1;
    v6 = operator new(v7 + 1);
    __b[1] = __len;
    __b[2] = v8 | 0x8000000000000000;
    *__b = v6;
  }
  else
  {
    *((_BYTE *)__b + 23) = __len;
    v6 = __b;
    if (!__len)
      goto LABEL_9;
  }
  memset(v6, __c, __len);
LABEL_9:
  *((_BYTE *)v6 + __len) = 0;
  return __b;
}

uint64_t *sub_1D52B1C58(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v3 = *a1;
  }
  *((_DWORD *)a1 + 4) = 0;
  if (v3)
    *((_DWORD *)a1 + 4) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 48))(v3);
  return a1;
}

void sub_1D52B1CB4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1D5282EB4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52B1CC8(uint64_t a1, uint64_t *a2, _DWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  BOOL v9;

  v5 = *a2;
  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
    v5 = *(_QWORD *)a1;
  }
  *(_DWORD *)(a1 + 16) = -1;
  if (v5)
    v9 = *a3 == -1;
  else
    v9 = 1;
  if (!v9)
  {
    *(_DWORD *)(a1 + 16) = sub_1D52845F4(v5);
    sub_1D52845FC(*(_QWORD *)a1, a3);
  }
  return a1;
}

void sub_1D52B1D3C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1D5282EB4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52B1D54(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)a1;
  if (v2 && *(_DWORD *)(a1 + 16) != -1)
    sub_1D52845FC(v2, (_DWORD *)(a1 + 16));
  return sub_1D5282EB4(a1);
}

char *sub_1D52B1D94(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  _QWORD *v7;
  unint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  void **v12;
  char *v13;
  _BYTE *v14;
  unint64_t v15;
  char *v16;
  size_t v17;
  void *v18;
  char *v19;

  v7 = result;
  v8 = *((_QWORD *)result + 2);
  v9 = *(char **)result;
  if (a4 > (uint64_t)(v8 - *(_QWORD *)result) >> 1)
  {
    if (v9)
    {
      *((_QWORD *)result + 1) = v9;
      operator delete(v9);
      v8 = 0;
      *v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if ((a4 & 0x8000000000000000) != 0)
      sub_1D5282B8C();
    if (v8 <= a4)
      v10 = a4;
    else
      v10 = v8;
    if (v8 >= 0x7FFFFFFFFFFFFFFELL)
      v11 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v11 = v10;
    result = sub_1D5285464(v7, v11);
    v13 = (char *)v7[1];
    v12 = (void **)(v7 + 1);
    v9 = v13;
LABEL_17:
    v17 = a3 - (_QWORD)__src;
    if (v17)
    {
      v18 = v9;
      v19 = __src;
      goto LABEL_19;
    }
    goto LABEL_20;
  }
  v12 = (void **)(result + 8);
  v14 = (_BYTE *)*((_QWORD *)result + 1);
  v15 = (v14 - v9) >> 1;
  if (v15 >= a4)
    goto LABEL_17;
  v16 = &__src[2 * v15];
  if (v14 != v9)
  {
    result = (char *)memmove(*(void **)result, __src, v14 - v9);
    v9 = (char *)*v12;
  }
  v17 = a3 - (_QWORD)v16;
  if (v17)
  {
    v18 = v9;
    v19 = v16;
LABEL_19:
    result = (char *)memmove(v18, v19, v17);
  }
LABEL_20:
  *v12 = &v9[v17];
  return result;
}

_QWORD *sub_1D52B1E94(_QWORD *result, char *__src, char *a3, unint64_t a4)
{
  _QWORD *v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  size_t v11;
  _BYTE *v12;
  size_t v13;
  char *v14;
  char *v15;
  size_t v16;

  v7 = result;
  v8 = result[2];
  v9 = (char *)*result;
  if (v8 - *result < a4)
  {
    if (v9)
    {
      result[1] = v9;
      operator delete(v9);
      v8 = 0;
      *v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if ((a4 & 0x8000000000000000) != 0)
      sub_1D5282B8C();
    v10 = 2 * v8;
    if (2 * v8 <= a4)
      v10 = a4;
    if (v8 >= 0x3FFFFFFFFFFFFFFFLL)
      v11 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v11 = v10;
    result = sub_1D52853B0(v7, v11);
    v9 = (char *)v7[1];
    goto LABEL_17;
  }
  v12 = (_BYTE *)result[1];
  v13 = v12 - v9;
  if (v12 - v9 >= a4)
  {
LABEL_17:
    v16 = a3 - __src;
    if (v16)
      result = memmove(v9, __src, v16);
    v15 = &v9[v16];
    goto LABEL_20;
  }
  v14 = &__src[v13];
  if (v12 != v9)
  {
    result = memmove((void *)*result, __src, v13);
    v9 = (char *)v7[1];
  }
  if (a3 != v14)
    result = memmove(v9, v14, a3 - v14);
  v15 = &v9[a3 - v14];
LABEL_20:
  v7[1] = v15;
  return result;
}

uint64_t sub_1D52B1FA0(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  if (a2 >= 0x7FFFFFFFFFFFFFF8)
    sub_1D5285150();
  if (a2 > 0x16)
  {
    v4 = (a2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a2 | 7) != 0x17)
      v4 = a2 | 7;
    v5 = v4 + 1;
    v6 = operator new(v4 + 1);
    *(_QWORD *)(a1 + 8) = a2;
    *(_QWORD *)(a1 + 16) = v5 | 0x8000000000000000;
    *(_QWORD *)a1 = v6;
  }
  else
  {
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)a1 = 0;
    *(_BYTE *)(a1 + 23) = a2;
  }
  return a1;
}

uint64_t sub_1D52B2024(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 16;
    sub_1D5282EB4(i - 16);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_1D52B2070(uint64_t *a1, __int128 *a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  uint64_t v13;
  _QWORD v15[2];
  char *v16;
  char *v17;
  uint64_t *v18;

  v3 = *a1;
  v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_1D5282B8C();
  v7 = (uint64_t)(a1 + 2);
  v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5)
    v5 = 2 * v8;
  if (v8 >= 0x555555555555555)
    v9 = 0xAAAAAAAAAAAAAAALL;
  else
    v9 = v5;
  v18 = a1 + 2;
  if (v9)
    v10 = (char *)sub_1D5293DCC(v7, v9);
  else
    v10 = 0;
  v11 = &v10[24 * v4];
  v15[0] = v10;
  v15[1] = v11;
  v16 = v11;
  v17 = &v10[24 * v9];
  if (*((char *)a2 + 23) < 0)
  {
    sub_1D5290130(v11, *(void **)a2, *((_QWORD *)a2 + 1));
    v11 = v16;
  }
  else
  {
    v12 = *a2;
    *((_QWORD *)v11 + 2) = *((_QWORD *)a2 + 2);
    *(_OWORD *)v11 = v12;
  }
  v16 = v11 + 24;
  sub_1D5293D58(a1, v15);
  v13 = a1[1];
  sub_1D5293F24((uint64_t)v15);
  return v13;
}

void sub_1D52B217C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1D5293F24((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52B2190(uint64_t a1)
{
  *(_QWORD *)a1 = off_1E9972128;
  sub_1D5294068(a1 + 1152, *(_QWORD **)(a1 + 1160));
  sub_1D52940F4(a1 + 1128, *(char **)(a1 + 1136));
  sub_1D5294068(a1 + 1104, *(_QWORD **)(a1 + 1112));
  sub_1D5294068(a1 + 1080, *(_QWORD **)(a1 + 1088));
  sub_1D52B2424(a1 + 1056, *(_QWORD **)(a1 + 1064));
  sub_1D52B2424(a1 + 1032, *(_QWORD **)(a1 + 1040));
  sub_1D5294068(a1 + 992, *(_QWORD **)(a1 + 1000));
  sub_1D5294068(a1 + 968, *(_QWORD **)(a1 + 976));
  sub_1D5294068(a1 + 944, *(_QWORD **)(a1 + 952));
  sub_1D5294068(a1 + 920, *(_QWORD **)(a1 + 928));
  sub_1D52940F4(a1 + 896, *(char **)(a1 + 904));
  sub_1D52940F4(a1 + 872, *(char **)(a1 + 880));
  sub_1D52940F4(a1 + 848, *(char **)(a1 + 856));
  sub_1D52940F4(a1 + 824, *(char **)(a1 + 832));
  sub_1D5294068(a1 + 800, *(_QWORD **)(a1 + 808));
  sub_1D5294068(a1 + 776, *(_QWORD **)(a1 + 784));
  sub_1D52940F4(a1 + 752, *(char **)(a1 + 760));
  sub_1D52940F4(a1 + 728, *(char **)(a1 + 736));
  sub_1D52940F4(a1 + 704, *(char **)(a1 + 712));
  sub_1D52940F4(a1 + 680, *(char **)(a1 + 688));
  sub_1D5294068(a1 + 656, *(_QWORD **)(a1 + 664));
  sub_1D52940F4(a1 + 632, *(char **)(a1 + 640));
  sub_1D52940F4(a1 + 608, *(char **)(a1 + 616));
  sub_1D52940F4(a1 + 584, *(char **)(a1 + 592));
  sub_1D52940F4(a1 + 560, *(char **)(a1 + 568));
  sub_1D52940F4(a1 + 536, *(char **)(a1 + 544));
  sub_1D52940F4(a1 + 512, *(char **)(a1 + 520));

  return sub_1D52B2308(a1);
}

uint64_t sub_1D52B2308(uint64_t a1)
{
  std::__shared_weak_count *v2;

  *(_QWORD *)a1 = off_1E99703D8;
  sub_1D52940F4(a1 + 480, *(char **)(a1 + 488));
  sub_1D52940F4(a1 + 456, *(char **)(a1 + 464));
  sub_1D52940F4(a1 + 432, *(char **)(a1 + 440));
  sub_1D52940F4(a1 + 408, *(char **)(a1 + 416));
  sub_1D52940F4(a1 + 384, *(char **)(a1 + 392));
  sub_1D52940F4(a1 + 360, *(char **)(a1 + 368));
  sub_1D52940F4(a1 + 336, *(char **)(a1 + 344));
  sub_1D52940F4(a1 + 312, *(char **)(a1 + 320));
  sub_1D52940F4(a1 + 288, *(char **)(a1 + 296));
  sub_1D5294068(a1 + 264, *(_QWORD **)(a1 + 272));
  sub_1D5294068(a1 + 240, *(_QWORD **)(a1 + 248));
  sub_1D5294068(a1 + 216, *(_QWORD **)(a1 + 224));
  sub_1D5294068(a1 + 192, *(_QWORD **)(a1 + 200));
  sub_1D5294068(a1 + 168, *(_QWORD **)(a1 + 176));
  sub_1D5294068(a1 + 144, *(_QWORD **)(a1 + 152));
  sub_1D5294068(a1 + 120, *(_QWORD **)(a1 + 128));

  sub_1D5282EB4(a1 + 80);
  sub_1D5282EB4(a1 + 24);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_1D52B2424(uint64_t a1, _QWORD *a2)
{
  if (a2)
  {
    sub_1D52B2424(a1, *a2);
    sub_1D52B2424(a1, a2[1]);
    sub_1D52B246C((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void sub_1D52B246C(uint64_t a1)
{
  if (*(char *)(a1 + 47) < 0)
    operator delete(*(void **)(a1 + 24));
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
}

id sub_1D52B24B0(_QWORD *a1)
{
  return sub_1D52B24D8(a1[7], (uint64_t *)(*(_QWORD *)(a1[4] + 8) + 48), *(_DWORD *)(*(_QWORD *)(a1[5] + 8) + 48), *(_DWORD *)(*(_QWORD *)(a1[6] + 8) + 24));
}

id sub_1D52B24D8(uint64_t a1, uint64_t *a2, int a3, unsigned int a4)
{
  void *v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  unsigned int v19;
  void *__p;
  char *v21;
  uint64_t v22[3];
  int v23;

  v23 = a3;
  sub_1D5285B08((int *)&__p, &v23);
  sub_1D5285164(v22, a2, (uint64_t)&__p, 0);
  sub_1D52B261C(a4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = *a2;
  v19 = a4;
  sub_1D52A71B8(v7, &v19, (uint64_t *)&__p);
  v11 = (char *)__p;
  v12 = v21;
  if (__p != v21)
  {
    do
    {
      objc_msgSend_numberWithChar_(MEMORY[0x1E0CB37E8], v8, *v11, v9, v10);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_addObject_(v6, v14, (uint64_t)v13, v15, v16);

      ++v11;
    }
    while (v11 != v12);
  }
  objc_msgSend_arrayWithArray_(MEMORY[0x1E0C99D20], v8, (uint64_t)v6, v9, v10);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }

  sub_1D5285200(v22);
  return v17;
}

void sub_1D52B25D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13)
{
  void *v13;

  if (__p)
    operator delete(__p);

  sub_1D5285200(&a13);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52B261C(unint64_t a1)
{
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  void *exception;

  if (a1 >> 61 || malloc_good_size(8 * a1) >> 32)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return objc_msgSend_arrayWithCapacity_(MEMORY[0x1E0C99DE8], v2, a1, v3, v4);
}

void sub_1D52B26A8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

id sub_1D52B26C0(_QWORD *a1)
{
  return sub_1D52B26E8(a1[7], (uint64_t *)(*(_QWORD *)(a1[4] + 8) + 48), *(_DWORD *)(*(_QWORD *)(a1[5] + 8) + 48), *(_DWORD *)(*(_QWORD *)(a1[6] + 8) + 24));
}

id sub_1D52B26E8(uint64_t a1, uint64_t *a2, int a3, unsigned int a4)
{
  void *v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned __int8 *v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  unsigned int v19;
  void *__p;
  unsigned __int8 *v21;
  uint64_t v22[3];
  int v23;

  v23 = a3;
  sub_1D5285B08((int *)&__p, &v23);
  sub_1D5285164(v22, a2, (uint64_t)&__p, 0);
  sub_1D52B261C(a4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = *a2;
  v19 = a4;
  sub_1D52A7308(v7, &v19, (uint64_t *)&__p);
  v11 = (unsigned __int8 *)__p;
  v12 = v21;
  if (__p != v21)
  {
    do
    {
      objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v8, *v11, v9, v10);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_addObject_(v6, v14, (uint64_t)v13, v15, v16);

      ++v11;
    }
    while (v11 != v12);
  }
  objc_msgSend_arrayWithArray_(MEMORY[0x1E0C99D20], v8, (uint64_t)v6, v9, v10);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  if (__p)
  {
    v21 = (unsigned __int8 *)__p;
    operator delete(__p);
  }

  sub_1D5285200(v22);
  return v17;
}

void sub_1D52B27E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13)
{
  void *v13;

  if (__p)
    operator delete(__p);

  sub_1D5285200(&a13);
  _Unwind_Resume(a1);
}

id sub_1D52B282C(_QWORD *a1)
{
  return sub_1D52B2854(a1[7], (uint64_t *)(*(_QWORD *)(a1[4] + 8) + 48), *(_DWORD *)(*(_QWORD *)(a1[5] + 8) + 48), *(_DWORD *)(*(_QWORD *)(a1[6] + 8) + 24));
}

id sub_1D52B2854(uint64_t a1, uint64_t *a2, int a3, unsigned int a4)
{
  void *v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  __int16 *v11;
  __int16 *v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  unsigned int v19;
  void *__p;
  __int16 *v21;
  uint64_t v22[3];
  int v23;

  v23 = a3;
  sub_1D5285B08((int *)&__p, &v23);
  sub_1D5285164(v22, a2, (uint64_t)&__p, 0);
  sub_1D52B261C(a4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = *a2;
  v19 = a4;
  sub_1D52B2998(v7, &v19, (uint64_t *)&__p);
  v11 = (__int16 *)__p;
  v12 = v21;
  if (__p != v21)
  {
    do
    {
      objc_msgSend_numberWithShort_(MEMORY[0x1E0CB37E8], v8, *v11, v9, v10);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_addObject_(v6, v14, (uint64_t)v13, v15, v16);

      ++v11;
    }
    while (v11 != v12);
  }
  objc_msgSend_arrayWithArray_(MEMORY[0x1E0C99D20], v8, (uint64_t)v6, v9, v10);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  if (__p)
  {
    v21 = (__int16 *)__p;
    operator delete(__p);
  }

  sub_1D5285200(v22);
  return v17;
}

void sub_1D52B294C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13)
{
  void *v13;

  if (__p)
    operator delete(__p);

  sub_1D5285200(&a13);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52B2998@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _WORD *v8;
  _WORD *v9;

  v5 = *a2;
  v6 = 2 * v5;
  sub_1D52B2A2C(a3, v5);
  sub_1D5284728(a1, *a3, v6);
  result = sub_1D52845E4(a1);
  if (result != 1)
  {
    v8 = (_WORD *)*a3;
    v9 = (_WORD *)a3[1];
    while (v8 != v9)
    {
      *v8 = bswap32((unsigned __int16)*v8) >> 16;
      ++v8;
    }
  }
  return result;
}

void sub_1D52B2A10(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_1D52B2A2C(_QWORD *a1, uint64_t a2)
{
  char *v4;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_1D5285464(a1, a2);
    v4 = (char *)a1[1];
    bzero(v4, 2 * a2);
    a1[1] = &v4[2 * a2];
  }
  return a1;
}

void sub_1D52B2A84(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

id sub_1D52B2AA0(_QWORD *a1)
{
  return sub_1D52B2AC8(a1[7], (uint64_t *)(*(_QWORD *)(a1[4] + 8) + 48), *(_DWORD *)(*(_QWORD *)(a1[5] + 8) + 48), *(_DWORD *)(*(_QWORD *)(a1[6] + 8) + 24));
}

id sub_1D52B2AC8(uint64_t a1, uint64_t *a2, int a3, unsigned int a4)
{
  void *v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int16 *v11;
  unsigned __int16 *v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  unsigned int v19;
  void *__p;
  unsigned __int16 *v21;
  uint64_t v22[3];
  int v23;

  v23 = a3;
  sub_1D5285B08((int *)&__p, &v23);
  sub_1D5285164(v22, a2, (uint64_t)&__p, 0);
  sub_1D52B261C(a4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = *a2;
  v19 = a4;
  sub_1D52B2C0C(v7, &v19, (uint64_t *)&__p);
  v11 = (unsigned __int16 *)__p;
  v12 = v21;
  if (__p != v21)
  {
    do
    {
      objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v8, *v11, v9, v10);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_addObject_(v6, v14, (uint64_t)v13, v15, v16);

      ++v11;
    }
    while (v11 != v12);
  }
  objc_msgSend_arrayWithArray_(MEMORY[0x1E0C99D20], v8, (uint64_t)v6, v9, v10);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  if (__p)
  {
    v21 = (unsigned __int16 *)__p;
    operator delete(__p);
  }

  sub_1D5285200(v22);
  return v17;
}

void sub_1D52B2BC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13)
{
  void *v13;

  if (__p)
    operator delete(__p);

  sub_1D5285200(&a13);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52B2C0C@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _WORD *v8;
  _WORD *v9;

  v5 = *a2;
  v6 = 2 * v5;
  sub_1D52853F0(a3, v5);
  sub_1D5284728(a1, *a3, v6);
  result = sub_1D52845E4(a1);
  if (result != 1)
  {
    v8 = (_WORD *)*a3;
    v9 = (_WORD *)a3[1];
    while (v8 != v9)
    {
      *v8 = bswap32((unsigned __int16)*v8) >> 16;
      ++v8;
    }
  }
  return result;
}

void sub_1D52B2C84(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

id sub_1D52B2CA0(_QWORD *a1)
{
  return sub_1D52B2CC8(a1[7], (uint64_t *)(*(_QWORD *)(a1[4] + 8) + 48), *(_DWORD *)(*(_QWORD *)(a1[5] + 8) + 48), *(_DWORD *)(*(_QWORD *)(a1[6] + 8) + 24));
}

id sub_1D52B2CC8(uint64_t a1, uint64_t *a2, int a3, unsigned int a4)
{
  void *v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int *v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  unsigned int v19;
  void *__p;
  unsigned int *v21;
  uint64_t v22[3];
  int v23;

  v23 = a3;
  sub_1D5285B08((int *)&__p, &v23);
  sub_1D5285164(v22, a2, (uint64_t)&__p, 0);
  sub_1D52B261C(a4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = *a2;
  v19 = a4;
  sub_1D52B2E0C(v7, &v19, (uint64_t *)&__p);
  v11 = (unsigned int *)__p;
  v12 = v21;
  if (__p != v21)
  {
    do
    {
      objc_msgSend_numberWithInt_(MEMORY[0x1E0CB37E8], v8, *v11, v9, v10);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_addObject_(v6, v14, (uint64_t)v13, v15, v16);

      ++v11;
    }
    while (v11 != v12);
  }
  objc_msgSend_arrayWithArray_(MEMORY[0x1E0C99D20], v8, (uint64_t)v6, v9, v10);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  if (__p)
  {
    v21 = (unsigned int *)__p;
    operator delete(__p);
  }

  sub_1D5285200(v22);
  return v17;
}

void sub_1D52B2DC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13)
{
  void *v13;

  if (__p)
    operator delete(__p);

  sub_1D5285200(&a13);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52B2E0C@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  unsigned int *v8;
  unsigned int *v9;

  v5 = *a2;
  v6 = 4 * v5;
  sub_1D52B2E9C(a3, v5);
  sub_1D5284728(a1, *a3, v6);
  result = sub_1D52845E4(a1);
  if (result != 1)
  {
    v8 = (unsigned int *)*a3;
    v9 = (unsigned int *)a3[1];
    while (v8 != v9)
    {
      *v8 = bswap32(*v8);
      ++v8;
    }
  }
  return result;
}

void sub_1D52B2E80(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_1D52B2E9C(_QWORD *a1, unint64_t a2)
{
  char *v4;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_1D5282B4C(a1, a2);
    v4 = (char *)a1[1];
    bzero(v4, 4 * a2);
    a1[1] = &v4[4 * a2];
  }
  return a1;
}

void sub_1D52B2EF4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

id sub_1D52B2F10(_QWORD *a1)
{
  return sub_1D52B2F38(a1[7], (uint64_t *)(*(_QWORD *)(a1[4] + 8) + 48), *(_DWORD *)(*(_QWORD *)(a1[5] + 8) + 48), *(_DWORD *)(*(_QWORD *)(a1[6] + 8) + 24));
}

id sub_1D52B2F38(uint64_t a1, uint64_t *a2, int a3, unsigned int a4)
{
  void *v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int *v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  unsigned int v19;
  void *__p;
  unsigned int *v21;
  uint64_t v22[3];
  int v23;

  v23 = a3;
  sub_1D5285B08((int *)&__p, &v23);
  sub_1D5285164(v22, a2, (uint64_t)&__p, 0);
  sub_1D52B261C(a4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = *a2;
  v19 = a4;
  sub_1D52B307C(v7, &v19, (uint64_t *)&__p);
  v11 = (unsigned int *)__p;
  v12 = v21;
  if (__p != v21)
  {
    do
    {
      objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v8, *v11, v9, v10);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_addObject_(v6, v14, (uint64_t)v13, v15, v16);

      ++v11;
    }
    while (v11 != v12);
  }
  objc_msgSend_arrayWithArray_(MEMORY[0x1E0C99D20], v8, (uint64_t)v6, v9, v10);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  if (__p)
  {
    v21 = (unsigned int *)__p;
    operator delete(__p);
  }

  sub_1D5285200(v22);
  return v17;
}

void sub_1D52B3030(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13)
{
  void *v13;

  if (__p)
    operator delete(__p);

  sub_1D5285200(&a13);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52B307C@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  unsigned int *v8;
  unsigned int *v9;

  v5 = *a2;
  v6 = 4 * v5;
  sub_1D52854D0(a3, v5);
  sub_1D5284728(a1, *a3, v6);
  result = sub_1D52845E4(a1);
  if (result != 1)
  {
    v8 = (unsigned int *)*a3;
    v9 = (unsigned int *)a3[1];
    while (v8 != v9)
    {
      *v8 = bswap32(*v8);
      ++v8;
    }
  }
  return result;
}

void sub_1D52B30F0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

id sub_1D52B310C(_QWORD *a1)
{
  void *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t i;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  unint64_t v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;

  sub_1D52B2CC8(a1[7], (uint64_t *)(*(_QWORD *)(a1[4] + 8) + 48), *(_DWORD *)(*(_QWORD *)(a1[5] + 8) + 48), 2 * *(_DWORD *)(*(_QWORD *)(a1[6] + 8) + 24));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D52B261C(*(unsigned int *)(*(_QWORD *)(a1[6] + 8) + 24));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  for (i = 0; i < objc_msgSend_count(v2, v3, v4, v5, v6); i = v20 + 1)
  {
    v12 = (void *)MEMORY[0x1E0CB37E8];
    objc_msgSend_objectAtIndexedSubscript_(v2, v9, i, v10, v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_doubleValue(v13, v14, v15, v16, v17);
    v19 = v18;
    v20 = i + 1;
    objc_msgSend_objectAtIndexedSubscript_(v2, v21, i + 1, v22, v23);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_doubleValue(v24, v25, v26, v27, v28);
    objc_msgSend_numberWithDouble_(v12, v30, v31, v32, v33, v19 / v29);
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_addObject_(v7, v35, (uint64_t)v34, v36, v37);

  }
  objc_msgSend_arrayWithArray_(MEMORY[0x1E0C99D20], v9, (uint64_t)v7, v10, v11);
  v38 = (void *)objc_claimAutoreleasedReturnValue();

  return v38;
}

void sub_1D52B3240(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id sub_1D52B3284(_QWORD *a1)
{
  void *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t i;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  unint64_t v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;

  sub_1D52B2F38(a1[7], (uint64_t *)(*(_QWORD *)(a1[4] + 8) + 48), *(_DWORD *)(*(_QWORD *)(a1[5] + 8) + 48), 2 * *(_DWORD *)(*(_QWORD *)(a1[6] + 8) + 24));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D52B261C(*(unsigned int *)(*(_QWORD *)(a1[6] + 8) + 24));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  for (i = 0; i < objc_msgSend_count(v2, v3, v4, v5, v6); i = v20 + 1)
  {
    v12 = (void *)MEMORY[0x1E0CB37E8];
    objc_msgSend_objectAtIndexedSubscript_(v2, v9, i, v10, v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_doubleValue(v13, v14, v15, v16, v17);
    v19 = v18;
    v20 = i + 1;
    objc_msgSend_objectAtIndexedSubscript_(v2, v21, i + 1, v22, v23);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_doubleValue(v24, v25, v26, v27, v28);
    objc_msgSend_numberWithDouble_(v12, v30, v31, v32, v33, v19 / v29);
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_addObject_(v7, v35, (uint64_t)v34, v36, v37);

  }
  objc_msgSend_arrayWithArray_(MEMORY[0x1E0C99D20], v9, (uint64_t)v7, v10, v11);
  v38 = (void *)objc_claimAutoreleasedReturnValue();

  return v38;
}

void sub_1D52B33B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id sub_1D52B33FC(_QWORD *a1)
{
  return sub_1D52B3424(a1[7], (uint64_t *)(*(_QWORD *)(a1[4] + 8) + 48), *(_DWORD *)(*(_QWORD *)(a1[5] + 8) + 48), *(_DWORD *)(*(_QWORD *)(a1[6] + 8) + 24));
}

id sub_1D52B3424(uint64_t a1, uint64_t *a2, int a3, unsigned int a4)
{
  void *v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  _DWORD *v13;
  _DWORD *v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  unsigned int v21;
  void *__p;
  _DWORD *v23;
  uint64_t v24[3];
  int v25;

  v25 = a3;
  sub_1D5285B08((int *)&__p, &v25);
  sub_1D5285164(v24, a2, (uint64_t)&__p, 0);
  sub_1D52B261C(a4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = *a2;
  v21 = a4;
  sub_1D52B3568(v7, &v21, (uint64_t *)&__p);
  v13 = __p;
  v14 = v23;
  if (__p != v23)
  {
    do
    {
      LODWORD(v12) = *v13;
      objc_msgSend_numberWithFloat_(MEMORY[0x1E0CB37E8], v8, v9, v10, v11, v12);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_addObject_(v6, v16, (uint64_t)v15, v17, v18);

      ++v13;
    }
    while (v13 != v14);
  }
  objc_msgSend_arrayWithArray_(MEMORY[0x1E0C99D20], v8, (uint64_t)v6, v10, v11);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  if (__p)
  {
    v23 = __p;
    operator delete(__p);
  }

  sub_1D5285200(v24);
  return v19;
}

void sub_1D52B351C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13)
{
  void *v13;

  if (__p)
    operator delete(__p);

  sub_1D5285200(&a13);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52B3568@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  unsigned int *v8;
  unsigned int *v9;

  v5 = *a2;
  v6 = 4 * v5;
  sub_1D52B35F8(a3, v5);
  sub_1D5284728(a1, *a3, v6);
  result = sub_1D52845E4(a1);
  if (result != 1)
  {
    v8 = (unsigned int *)*a3;
    v9 = (unsigned int *)a3[1];
    while (v8 != v9)
    {
      *v8 = bswap32(*v8);
      ++v8;
    }
  }
  return result;
}

void sub_1D52B35DC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_1D52B35F8(_QWORD *a1, unint64_t a2)
{
  char *v4;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_1D5282B4C(a1, a2);
    v4 = (char *)a1[1];
    bzero(v4, 4 * a2);
    a1[1] = &v4[4 * a2];
  }
  return a1;
}

void sub_1D52B3650(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D52B366C@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  unint64_t *v8;
  unint64_t *v9;

  v5 = *a2;
  v6 = 8 * v5;
  sub_1D528EB68(a3, v5);
  sub_1D5284728(a1, *a3, v6);
  result = sub_1D52845E4(a1);
  if (result != 1)
  {
    v8 = (unint64_t *)*a3;
    v9 = (unint64_t *)a3[1];
    while (v8 != v9)
    {
      *v8 = bswap64(*v8);
      ++v8;
    }
  }
  return result;
}

void sub_1D52B36E0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_1D52B36FC(_QWORD *a1, size_t a2)
{
  char *v4;
  char *v5;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_1D52853B0(a1, a2);
    v4 = (char *)a1[1];
    v5 = &v4[a2];
    bzero(v4, a2);
    a1[1] = v5;
  }
  return a1;
}

void sub_1D52B3750(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D52B376C(uint64_t a1, _QWORD *a2)
{
  if (a2)
  {
    sub_1D52B376C(a1, *a2);
    sub_1D52B376C(a1, a2[1]);
    operator delete(a2);
  }
}

uint64_t **sub_1D52B37AC(uint64_t **a1, unsigned int *a2, _DWORD *a3)
{
  uint64_t *v5;
  uint64_t **v6;
  unsigned int v7;
  uint64_t **v8;
  unsigned int v9;
  uint64_t *v10;

  v6 = a1 + 1;
  v5 = a1[1];
  if (v5)
  {
    v7 = *a2;
    while (1)
    {
      while (1)
      {
        v8 = (uint64_t **)v5;
        v9 = *((_DWORD *)v5 + 7);
        if (v7 >= v9)
          break;
        v5 = *v8;
        v6 = v8;
        if (!*v8)
          goto LABEL_10;
      }
      if (v9 >= v7)
        break;
      v5 = v8[1];
      if (!v5)
      {
        v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    v8 = a1 + 1;
LABEL_10:
    v10 = (uint64_t *)operator new(0x20uLL);
    *((_DWORD *)v10 + 7) = *a3;
    sub_1D528EFCC(a1, (uint64_t)v8, v6, v10);
    return (uint64_t **)v10;
  }
  return v8;
}

_QWORD *sub_1D52B3864(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  const std::locale::facet *v10;
  uint64_t v11;
  _BYTE v13[16];
  std::locale v14;

  MEMORY[0x1D82719BC](v13, a1);
  if (v13[0])
  {
    v6 = (uint64_t)a1 + *(_QWORD *)(*a1 - 24);
    v7 = *(_QWORD *)(v6 + 40);
    v8 = *(_DWORD *)(v6 + 8);
    v9 = *(_DWORD *)(v6 + 144);
    if (v9 == -1)
    {
      std::ios_base::getloc((const std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)));
      v10 = std::locale::use_facet(&v14, MEMORY[0x1E0DE4A90]);
      v9 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v10->__vftable[2].~facet_0)(v10, 32);
      std::locale::~locale(&v14);
      *(_DWORD *)(v6 + 144) = v9;
    }
    if ((v8 & 0xB0) == 0x20)
      v11 = a2 + a3;
    else
      v11 = a2;
    if (!sub_1D52B39C8(v7, a2, v11, a2 + a3, v6, (char)v9))
      std::ios_base::clear((std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(_QWORD *)(*a1 - 24) + 32) | 5);
  }
  MEMORY[0x1D82719C8](v13);
  return a1;
}

void sub_1D52B396C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, std::locale a12)
{
  _QWORD *v12;

  MEMORY[0x1D82719C8](&a10);
  __cxa_begin_catch(a1);
  std::ios_base::__set_badbit_and_consider_rethrow((std::ios_base *)((char *)v12 + *(_QWORD *)(*v12 - 24)));
  __cxa_end_catch();
  JUMPOUT(0x1D52B394CLL);
}

void sub_1D52B39B4(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_1D52B39C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int __c)
{
  uint64_t v6;
  uint64_t v11;
  int64_t v12;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  void *__p[2];
  char v18;

  v6 = a1;
  if (a1)
  {
    v11 = *(_QWORD *)(a5 + 24);
    if (v11 <= a4 - a2)
      v12 = 0;
    else
      v12 = v11 - (a4 - a2);
    if (a3 - a2 >= 1 && (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 96))(a1) != a3 - a2)
      return 0;
    if (v12 >= 1)
    {
      sub_1D52B1BB0(__p, v12, __c);
      v13 = v18 >= 0 ? __p : (void **)__p[0];
      v14 = (*(uint64_t (**)(uint64_t, void **, int64_t))(*(_QWORD *)v6 + 96))(v6, v13, v12);
      if (v18 < 0)
        operator delete(__p[0]);
      if (v14 != v12)
        return 0;
    }
    v15 = a4 - a3;
    if (v15 < 1 || (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v6 + 96))(v6, a3, v15) == v15)
      *(_QWORD *)(a5 + 24) = 0;
    else
      return 0;
  }
  return v6;
}

void sub_1D52B3AE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D52B3B04@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  unint64_t v4;
  const void *v5;
  size_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  result = sub_1D52B3BA0(a1);
  if (v4 >= 0x7FFFFFFFFFFFFFF8)
    sub_1D5285150();
  v5 = (const void *)result;
  v6 = v4;
  if (v4 >= 0x17)
  {
    v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v7 = v4 | 7;
    v8 = v7 + 1;
    v9 = operator new(v7 + 1);
    a2[1] = v6;
    a2[2] = v8 | 0x8000000000000000;
    *a2 = v9;
    a2 = v9;
  }
  else
  {
    *((_BYTE *)a2 + 23) = v4;
    if (!v4)
      goto LABEL_9;
  }
  result = (uint64_t)memmove(a2, v5, v6);
LABEL_9:
  *((_BYTE *)a2 + v6) = 0;
  return result;
}

uint64_t sub_1D52B3BA0(uint64_t a1)
{
  int v1;
  unint64_t v3;

  v1 = *(_DWORD *)(a1 + 96);
  if ((v1 & 0x10) != 0)
  {
    v3 = *(_QWORD *)(a1 + 48);
    if (*(_QWORD *)(a1 + 88) < v3)
      *(_QWORD *)(a1 + 88) = v3;
    return *(_QWORD *)(a1 + 40);
  }
  else if ((v1 & 8) != 0)
  {
    return *(_QWORD *)(a1 + 16);
  }
  else
  {
    return 0;
  }
}

_DWORD *sub_1D52B3BEC(_DWORD *result, int *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *exception;

  v2 = *result - (uint64_t)*a2;
  v3 = v2 << 31 >> 31;
  *result = v2;
  if (v3 != v2 || v3 < 0)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return result;
}

void sub_1D52B3C54(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_1D52B3C68(uint64_t **a1, void **a2, uint64_t a3, __int128 **a4)
{
  uint64_t **v6;
  uint64_t *result;
  uint64_t *v8;
  uint64_t v9;

  v6 = (uint64_t **)sub_1D52B3CFC((uint64_t)a1, &v9, a2);
  result = *v6;
  if (!*v6)
  {
    sub_1D52B3D8C((uint64_t)a1, a4, (uint64_t)&v8);
    sub_1D528EFCC(a1, v9, v6, v8);
    return v8;
  }
  return result;
}

_QWORD *sub_1D52B3CFC(uint64_t a1, _QWORD *a2, void **a3)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v7;
  _QWORD *v8;

  v5 = (_QWORD *)(a1 + 8);
  v4 = *(_QWORD **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        v7 = v4;
        v8 = v4 + 4;
        if ((sub_1D52941C0(a3, (void **)v4 + 4) & 0x80) == 0)
          break;
        v4 = (_QWORD *)*v7;
        v5 = v7;
        if (!*v7)
          goto LABEL_9;
      }
      if ((sub_1D52941C0(v8, a3) & 0x80) == 0)
        break;
      v5 = v7 + 1;
      v4 = (_QWORD *)v7[1];
    }
    while (v4);
  }
  else
  {
    v7 = (_QWORD *)(a1 + 8);
  }
LABEL_9:
  *a2 = v7;
  return v5;
}

_BYTE *sub_1D52B3D8C@<X0>(uint64_t a1@<X0>, __int128 **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char *v6;
  _BYTE *result;
  __int128 *v8;
  __int128 v9;

  v5 = a1 + 8;
  v6 = (char *)operator new(0x40uLL);
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  result = v6 + 32;
  v8 = *a2;
  if (*((char *)*a2 + 23) < 0)
  {
    result = sub_1D5290130(result, *(void **)v8, *((_QWORD *)v8 + 1));
  }
  else
  {
    v9 = *v8;
    *((_QWORD *)v6 + 6) = *((_QWORD *)v8 + 2);
    *(_OWORD *)result = v9;
  }
  *((_DWORD *)v6 + 14) = 0;
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_1D52B3E14(_Unwind_Exception *a1)
{
  _QWORD *v1;
  void **v2;
  uint64_t v3;

  *v1 = 0;
  sub_1D52B3E30(v3, v2);
  _Unwind_Resume(a1);
}

void sub_1D52B3E30(uint64_t a1, void **__p)
{
  if (*(_BYTE *)(a1 + 8))
  {
    if (*((char *)__p + 55) < 0)
      operator delete(__p[4]);
  }
  else if (!__p)
  {
    return;
  }
  operator delete(__p);
}

uint64_t *sub_1D52B3E7C(uint64_t **a1, void **a2, uint64_t a3, __int128 **a4)
{
  uint64_t **v6;
  uint64_t *v7;
  uint64_t **v8;
  uint64_t *v10[3];
  uint64_t v11;

  v6 = (uint64_t **)sub_1D52B3CFC((uint64_t)a1, &v11, a2);
  v7 = *v6;
  if (!*v6)
  {
    v8 = v6;
    sub_1D52B3F24((uint64_t)a1, a4, (uint64_t)v10);
    sub_1D528EFCC(a1, v11, v8, v10[0]);
    v7 = v10[0];
    v10[0] = 0;
    sub_1D52B3FB8((uint64_t)v10, 0);
  }
  return v7;
}

_BYTE *sub_1D52B3F24@<X0>(uint64_t a1@<X0>, __int128 **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  _QWORD *v6;
  _BYTE *result;
  __int128 *v8;
  __int128 v9;

  v5 = a1 + 8;
  v6 = operator new(0x50uLL);
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  result = v6 + 4;
  v8 = *a2;
  if (*((char *)*a2 + 23) < 0)
  {
    result = sub_1D5290130(result, *(void **)v8, *((_QWORD *)v8 + 1));
  }
  else
  {
    v9 = *v8;
    v6[6] = *((_QWORD *)v8 + 2);
    *(_OWORD *)result = v9;
  }
  v6[7] = 0;
  v6[8] = 0;
  v6[9] = 0;
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_1D52B3FA0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1D52B3FB8(v1, 0);
  _Unwind_Resume(a1);
}

void sub_1D52B3FB8(uint64_t a1, uint64_t a2)
{
  void *v2;

  v2 = *(void **)a1;
  *(_QWORD *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16))
      sub_1D52940B0((uint64_t)v2 + 32);
    operator delete(v2);
  }
}

uint64_t *sub_1D52B3FFC(uint64_t **a1, void **a2, uint64_t a3, __int128 **a4)
{
  uint64_t **v6;
  uint64_t *v7;
  uint64_t **v8;
  uint64_t *v10[3];
  uint64_t v11;

  v6 = (uint64_t **)sub_1D52B3CFC((uint64_t)a1, &v11, a2);
  v7 = *v6;
  if (!*v6)
  {
    v8 = v6;
    sub_1D52B40A4((uint64_t)a1, a4, (uint64_t)v10);
    sub_1D528EFCC(a1, v11, v8, v10[0]);
    v7 = v10[0];
    v10[0] = 0;
    sub_1D52B4138((uint64_t)v10, 0);
  }
  return v7;
}

_BYTE *sub_1D52B40A4@<X0>(uint64_t a1@<X0>, __int128 **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  _QWORD *v6;
  _BYTE *result;
  __int128 *v8;
  __int128 v9;

  v5 = a1 + 8;
  v6 = operator new(0x50uLL);
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  result = v6 + 4;
  v8 = *a2;
  if (*((char *)*a2 + 23) < 0)
  {
    result = sub_1D5290130(result, *(void **)v8, *((_QWORD *)v8 + 1));
  }
  else
  {
    v9 = *v8;
    v6[6] = *((_QWORD *)v8 + 2);
    *(_OWORD *)result = v9;
  }
  v6[7] = 0;
  v6[8] = 0;
  v6[9] = 0;
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_1D52B4120(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1D52B4138(v1, 0);
  _Unwind_Resume(a1);
}

void sub_1D52B4138(uint64_t a1, uint64_t a2)
{
  void *v2;

  v2 = *(void **)a1;
  *(_QWORD *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16))
      sub_1D52B246C((uint64_t)v2 + 32);
    operator delete(v2);
  }
}

uint64_t *sub_1D52B417C(uint64_t **a1, void **a2, uint64_t a3, __int128 **a4)
{
  uint64_t **v6;
  uint64_t *result;
  uint64_t *v8;
  uint64_t v9;

  v6 = (uint64_t **)sub_1D52B3CFC((uint64_t)a1, &v9, a2);
  result = *v6;
  if (!*v6)
  {
    sub_1D52B4210((uint64_t)a1, a4, (uint64_t)&v8);
    sub_1D528EFCC(a1, v9, v6, v8);
    return v8;
  }
  return result;
}

_BYTE *sub_1D52B4210@<X0>(uint64_t a1@<X0>, __int128 **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char *v6;
  _BYTE *result;
  __int128 *v8;
  __int128 v9;

  v5 = a1 + 8;
  v6 = (char *)operator new(0x40uLL);
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  result = v6 + 32;
  v8 = *a2;
  if (*((char *)*a2 + 23) < 0)
  {
    result = sub_1D5290130(result, *(void **)v8, *((_QWORD *)v8 + 1));
  }
  else
  {
    v9 = *v8;
    *((_QWORD *)v6 + 6) = *((_QWORD *)v8 + 2);
    *(_OWORD *)result = v9;
  }
  *((_WORD *)v6 + 28) = 0;
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_1D52B4298(_Unwind_Exception *a1)
{
  _QWORD *v1;
  void **v2;
  uint64_t v3;

  *v1 = 0;
  sub_1D52B3E30(v3, v2);
  _Unwind_Resume(a1);
}

_DWORD *sub_1D52B42B4(_DWORD *result, unsigned int *a2)
{
  unint64_t v2;
  void *exception;

  v2 = *result * (unint64_t)*a2;
  *result = v2;
  if ((v2 & 0xFFFFFFFF00000000) != 0)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return result;
}

void sub_1D52B4314(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_1D52B4328(uint64_t **a1, void **a2, uint64_t a3, __int128 **a4)
{
  uint64_t **v6;
  uint64_t *result;
  uint64_t *v8;
  uint64_t v9;

  v6 = (uint64_t **)sub_1D52B3CFC((uint64_t)a1, &v9, a2);
  result = *v6;
  if (!*v6)
  {
    sub_1D52B43BC((uint64_t)a1, a4, (uint64_t)&v8);
    sub_1D528EFCC(a1, v9, v6, v8);
    return v8;
  }
  return result;
}

_BYTE *sub_1D52B43BC@<X0>(uint64_t a1@<X0>, __int128 **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char *v6;
  _BYTE *result;
  __int128 *v8;
  __int128 v9;

  v5 = a1 + 8;
  v6 = (char *)operator new(0x40uLL);
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  result = v6 + 32;
  v8 = *a2;
  if (*((char *)*a2 + 23) < 0)
  {
    result = sub_1D5290130(result, *(void **)v8, *((_QWORD *)v8 + 1));
  }
  else
  {
    v9 = *v8;
    *((_QWORD *)v6 + 6) = *((_QWORD *)v8 + 2);
    *(_OWORD *)result = v9;
  }
  *((_QWORD *)v6 + 7) = 0;
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_1D52B4444(_Unwind_Exception *a1)
{
  _QWORD *v1;
  void **v2;
  uint64_t v3;

  *v1 = 0;
  sub_1D52B3E30(v3, v2);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52B4460@<X0>(_QWORD *a1@<X1>, int *a2@<X2>, unsigned int *a3@<X3>, unsigned int *a4@<X4>, _QWORD *a5@<X8>)
{
  _QWORD *v10;
  _QWORD *result;

  v10 = operator new(0x48uLL);
  result = sub_1D52B44D8(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;
  return result;
}

void sub_1D52B44C4(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52B44D8(_QWORD *a1, _QWORD *a2, int *a3, unsigned int *a4, unsigned int *a5)
{
  a1[2] = 0;
  *a1 = &unk_1E99724F8;
  a1[1] = 0;
  sub_1D53AF054((uint64_t)(a1 + 3), a2, *a3, *a4, *a5);
  return a1;
}

void sub_1D52B451C(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52B4530(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E99724F8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52B4544(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E99724F8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52B4578(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

_DWORD *sub_1D52B4588(_DWORD *result, _DWORD *a2)
{
  BOOL v2;
  void *exception;

  v2 = *result >= *a2;
  *result -= *a2;
  if (!v2)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return result;
}

void sub_1D52B45E4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52B45F8@<X0>(uint64_t a1@<X1>, unsigned int *a2@<X2>, _QWORD *a3@<X8>)
{
  _QWORD *v6;
  _QWORD *result;

  v6 = operator new(0x68uLL);
  result = sub_1D52B4670(v6, a1, a2);
  *a3 = v6 + 3;
  a3[1] = v6;
  return result;
}

void sub_1D52B465C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52B4670(_QWORD *a1, uint64_t a2, unsigned int *a3)
{
  a1[2] = 0;
  *a1 = &unk_1E9972548;
  a1[1] = 0;
  sub_1D53387E4(a1 + 3, a2, *a3);
  return a1;
}

void sub_1D52B46AC(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52B46C0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9972548;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52B46D4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9972548;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52B4708(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

_QWORD *sub_1D52B471C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _QWORD *result;

  v4 = operator new(0x48uLL);
  v4[2] = 0;
  *v4 = &unk_1E99725E0;
  v4[1] = 0;
  result = sub_1D52B52E0(v4 + 3, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

_QWORD *sub_1D52B4778@<X0>(__int128 *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_1D52B538C(a1, a2, a3);
}

void sub_1D52B47A0(void *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  id v5;

  v5 = a1;
  sub_1D52B54D4(&v5, a2, a3);

}

void sub_1D52B47EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{

  _Unwind_Resume(a1);
}

void sub_1D52B4800(void *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  id v5;

  v5 = a1;
  sub_1D52B5620(&v5, a2, a3);

}

void sub_1D52B484C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{

  _Unwind_Resume(a1);
}

const __CFString *sub_1D52B4860(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 - 1;
  if (v1 > 8)
    return CFSTR("0");
  else
    return off_1E9972620[v1];
}

uint64_t sub_1D52B488C(_DWORD *a1)
{
  int v1;

  v1 = *a1 - 1;
  if (v1 > 8)
    return 0;
  else
    return dword_1D5448778[v1];
}

_QWORD *sub_1D52B48B4(_QWORD *a1, __int128 *a2, _QWORD *a3)
{
  _QWORD *v5;
  __int128 v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  *a1 = &unk_1E99725B0;
  v5 = a1 + 1;
  if (*((char *)a2 + 23) < 0)
  {
    sub_1D5290130(v5, *(void **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v6 = *a2;
    v5[2] = *((_QWORD *)a2 + 2);
    *(_OWORD *)v5 = v6;
  }
  v7 = a3[1];
  a1[4] = *a3;
  a1[5] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  return a1;
}

uint64_t sub_1D52B4930(uint64_t a1, void *a2, _QWORD *a3)
{
  id v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  id v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;

  v5 = a2;
  *(_QWORD *)a1 = &unk_1E99725B0;
  sub_1D52850A0((_QWORD *)(a1 + 8), "best");
  v6 = a3[1];
  *(_QWORD *)(a1 + 32) = *a3;
  *(_QWORD *)(a1 + 40) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = v5;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend_objectForKeyedSubscript_(&unk_1E99CCDF8, v10, (uint64_t)v9, v11, v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    if (v13)
    {
      v14 = objc_retainAutorelease(v9);
      v19 = (char *)objc_msgSend_UTF8String(v14, v15, v16, v17, v18);
      sub_1D528530C((std::string *)(a1 + 8), v19);
    }

  }
  return a1;
}

void sub_1D52B4A18(_Unwind_Exception *a1)
{
  void *v1;
  uint64_t v2;
  void **v3;
  uint64_t v4;
  void *v5;

  sub_1D5282EB4(v4);
  if (*(char *)(v2 + 31) < 0)
    operator delete(*v3);

  _Unwind_Resume(a1);
}

uint64_t sub_1D52B4A60(uint64_t a1, void *a2, _QWORD *a3)
{
  id v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  id v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;

  v5 = a2;
  *(_QWORD *)a1 = &unk_1E99725B0;
  sub_1D52850A0((_QWORD *)(a1 + 8), "best");
  v6 = a3[1];
  *(_QWORD *)(a1 + 32) = *a3;
  *(_QWORD *)(a1 + 40) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = v5;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v14 = objc_msgSend_unsignedLongValue(v9, v10, v11, v12, v13);
    if (v14 < objc_msgSend_count(&unk_1E99C8220, v15, v16, v17, v18))
    {
      objc_msgSend_objectAtIndexedSubscript_(&unk_1E99C8220, v19, v14, v20, v21);
      v22 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
      v27 = (char *)objc_msgSend_UTF8String(v22, v23, v24, v25, v26);
      sub_1D528530C((std::string *)(a1 + 8), v27);

    }
  }

  return a1;
}

void sub_1D52B4B60(_Unwind_Exception *a1)
{
  void *v1;
  uint64_t v2;
  void **v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;

  v7 = v6;

  sub_1D5282EB4(v4);
  if (*(char *)(v2 + 31) < 0)
    operator delete(*v3);

  _Unwind_Resume(a1);
}

void sub_1D52B4BA8(void *a1@<X0>, _QWORD *a2@<X8>)
{
  id v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  uint64_t v31;
  std::__shared_weak_count *v32;
  __int128 v33;

  v3 = a1;
  v7 = v3;
  *a2 = 0;
  a2[1] = 0;
  if (!v3)
    goto LABEL_26;
  v8 = *MEMORY[0x1E0CBD270];
  objc_msgSend_objectForKeyedSubscript_(v3, v4, *MEMORY[0x1E0CBD270], v5, v6);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v31 = 0;
    v32 = 0;
    sub_1D52B47A0(v9, &v31, &v33);
    sub_1D5292548((uint64_t)a2, &v33);
    v10 = (std::__shared_weak_count *)*((_QWORD *)&v33 + 1);
    if (*((_QWORD *)&v33 + 1))
    {
      v11 = (unint64_t *)(*((_QWORD *)&v33 + 1) + 8);
      do
        v12 = __ldaxr(v11);
      while (__stlxr(v12 - 1, v11));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
    v13 = v32;
    if (v32)
    {
      p_shared_owners = (unint64_t *)&v32->__shared_owners_;
      do
        v15 = __ldaxr(p_shared_owners);
      while (__stlxr(v15 - 1, p_shared_owners));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
        std::__shared_weak_count::__release_weak(v13);
      }
    }
  }

  if (!*a2)
  {
    objc_msgSend_objectForKeyedSubscript_(v7, v16, v8, v17, v18);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v29 = 0;
      v30 = 0;
      sub_1D52B4800(v19, &v29, &v33);
      sub_1D5292548((uint64_t)a2, &v33);
      v20 = (std::__shared_weak_count *)*((_QWORD *)&v33 + 1);
      if (*((_QWORD *)&v33 + 1))
      {
        v21 = (unint64_t *)(*((_QWORD *)&v33 + 1) + 8);
        do
          v22 = __ldaxr(v21);
        while (__stlxr(v22 - 1, v21));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
          std::__shared_weak_count::__release_weak(v20);
        }
      }
      v23 = v30;
      if (v30)
      {
        v24 = (unint64_t *)&v30->__shared_owners_;
        do
          v25 = __ldaxr(v24);
        while (__stlxr(v25 - 1, v24));
        if (!v25)
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
      }
    }

    if (!*a2)
    {
LABEL_26:
      sub_1D52B576C("best", &v33);
      sub_1D5292548((uint64_t)a2, &v33);
      v26 = (std::__shared_weak_count *)*((_QWORD *)&v33 + 1);
      if (*((_QWORD *)&v33 + 1))
      {
        v27 = (unint64_t *)(*((_QWORD *)&v33 + 1) + 8);
        do
          v28 = __ldaxr(v27);
        while (__stlxr(v28 - 1, v27));
        if (!v28)
        {
          ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
          std::__shared_weak_count::__release_weak(v26);
        }
      }
    }
  }

}

void sub_1D52B4DF4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  void *v2;
  uint64_t v3;
  void *v4;
  va_list va;

  va_start(va, a2);
  sub_1D5282EB4((uint64_t)va);

  sub_1D5282EB4(v3);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52B4E44(uint64_t a1)
{
  _DWORD *v2;
  char *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v2 = operator new(0x24uLL);
  v2[8] = 9;
  *(_OWORD *)v2 = xmmword_1D544870C;
  *((_OWORD *)v2 + 1) = unk_1D544871C;
  v3 = (char *)(a1 + 8);
  if (*(char *)(a1 + 31) < 0)
  {
    if (!*(_QWORD *)(a1 + 16))
    {
LABEL_9:
      v6 = 2;
      goto LABEL_10;
    }
    v3 = *(char **)v3;
  }
  else if (!*(_BYTE *)(a1 + 31))
  {
    goto LABEL_9;
  }
  v4 = *v3;
  if (v4 < 48)
    goto LABEL_9;
  v5 = v4 - 48;
  if (v5 > 8)
    goto LABEL_9;
  v6 = v2[v5];
LABEL_10:
  operator delete(v2);
  return v6;
}

uint64_t sub_1D52B4ED0(uint64_t a1)
{
  const std::string *v1;
  uint64_t v2;
  _BOOL8 v3;
  std::string __p;
  char v6;

  v1 = (const std::string *)(a1 + 8);
  if (*(char *)(a1 + 31) < 0)
  {
    if (*(_QWORD *)(a1 + 16) != 4 || *(_BYTE *)(v1->__r_.__value_.__r.__words[0] + 3) != 100)
    {
      v2 = *(_QWORD *)(a1 + 16);
      goto LABEL_9;
    }
    return 1;
  }
  v2 = *(unsigned __int8 *)(a1 + 31);
  if ((_DWORD)v2 == 4 && *(_BYTE *)(a1 + 11) == 100)
    return 1;
LABEL_9:
  if (v2 != 5)
    return 0;
  std::string::basic_string(&__p, v1, 1uLL, 4uLL, (std::allocator<char> *)&v6);
  v3 = std::string::compare(&__p, ".dng") == 0;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  return v3;
}

uint64_t sub_1D52B4F90(uint64_t a1)
{
  if (*(char *)(a1 + 31) < 0)
  {
    if (*(_QWORD *)(a1 + 16))
      return std::string::compare((const std::string *)(a1 + 8), "best") == 0;
  }
  else if (*(_BYTE *)(a1 + 31))
  {
    return std::string::compare((const std::string *)(a1 + 8), "best") == 0;
  }
  return 1;
}

uint64_t sub_1D52B4FD8(uint64_t a1, uint64_t *a2)
{
  int v4;
  int v5;
  _BOOL4 v6;
  uint64_t v7;

  v4 = sub_1D52B4E44(a1);
  if (v4 != sub_1D52B4E44(*a2))
    return 0xFFFFFFFFLL;
  v5 = sub_1D52B4ED0(a1);
  if (v5 != sub_1D52B4ED0(*a2))
    return 0xFFFFFFFFLL;
  if (*(char *)(a1 + 31) < 0)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
  }
  else if (*(_BYTE *)(a1 + 31))
  {
LABEL_5:
    v6 = std::string::compare((const std::string *)(a1 + 8), "best") == 0;
    goto LABEL_8;
  }
  v6 = 1;
LABEL_8:
  v7 = *a2;
  if ((*(char *)(*a2 + 31) & 0x80000000) == 0)
  {
    if (*(_BYTE *)(*a2 + 31))
      goto LABEL_10;
LABEL_13:
    if (!v6)
      return 0xFFFFFFFFLL;
    return 0;
  }
  if (!*(_QWORD *)(v7 + 16))
    goto LABEL_13;
LABEL_10:
  if (v6 != (std::string::compare((const std::string *)(v7 + 8), "best") == 0))
    return 0xFFFFFFFFLL;
  return 0;
}

id sub_1D52B50B8(uint64_t a1)
{
  unsigned int v1;
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *exception;

  v1 = sub_1D52B4E44(a1);
  if (objc_msgSend_count(&unk_1E99C8238, v2, v3, v4, v5) <= (unint64_t)v1)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  objc_msgSend_objectAtIndexedSubscript_(&unk_1E99C8238, v6, v1, v7, v8);
  return (id)objc_claimAutoreleasedReturnValue();
}

void sub_1D52B5130(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

id sub_1D52B5144(uint64_t a1)
{
  unsigned int v1;
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *exception;

  v1 = sub_1D52B4E44(a1);
  if (objc_msgSend_count(&unk_1E99C8250, v2, v3, v4, v5) <= (unint64_t)v1)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  objc_msgSend_objectAtIndexedSubscript_(&unk_1E99C8250, v6, v1, v7, v8);
  return (id)objc_claimAutoreleasedReturnValue();
}

void sub_1D52B51BC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

id sub_1D52B51D0(uint64_t a1)
{
  void *v2;
  const __CFString *v3;
  void *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v2 = (void *)MEMORY[0x1E0CB3940];
  if (sub_1D52B4ED0(a1))
    v3 = CFSTR("%@.dng");
  else
    v3 = CFSTR("%@");
  sub_1D52B5144(a1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_stringWithFormat_(v2, v5, (uint64_t)v3, v6, v7, v4);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

void sub_1D52B5250(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1D52B5264(uint64_t a1)
{
  sub_1D52B5868(a1);
  JUMPOUT(0x1D8271ADCLL);
}

void sub_1D52B5288(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E99725E0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52B529C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E99725E0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52B52D0(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

_QWORD *sub_1D52B52E0(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = &unk_1E99725B0;
    a1[1] = 0;
    a1[2] = 0;
    a1[3] = 0;
    a1[4] = v3;
    a1[5] = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = &unk_1E99725B0;
    a1[1] = 0;
    a1[2] = 0;
    a1[3] = 0;
    a1[4] = v3;
    a1[5] = 0;
  }
  return a1;
}

_QWORD *sub_1D52B538C@<X0>(__int128 *a1@<X1>, _QWORD *a2@<X2>, _QWORD *a3@<X8>)
{
  _QWORD *v6;
  _QWORD *result;

  v6 = operator new(0x48uLL);
  result = sub_1D52B53EC(v6, a1, a2);
  *a3 = v6 + 3;
  a3[1] = v6;
  return result;
}

void sub_1D52B53D8(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52B53EC(_QWORD *a1, __int128 *a2, _QWORD *a3)
{
  a1[2] = 0;
  *a1 = &unk_1E99725E0;
  a1[1] = 0;
  sub_1D52B5438(a1 + 3, a2, a3);
  return a1;
}

void sub_1D52B5424(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52B5438(_QWORD *a1, __int128 *a2, _QWORD *a3)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  _QWORD v10[2];

  v4 = (std::__shared_weak_count *)a3[1];
  v10[0] = *a3;
  v10[1] = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  sub_1D52B48B4(a1, a2, v10);
  if (v4)
  {
    v7 = (unint64_t *)&v4->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  return a1;
}

void sub_1D52B54C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52B54D4@<X0>(void **a1@<X1>, _QWORD *a2@<X2>, _QWORD *a3@<X8>)
{
  _QWORD *v6;
  _QWORD *result;

  v6 = operator new(0x48uLL);
  result = sub_1D52B5534(v6, a1, a2);
  *a3 = v6 + 3;
  a3[1] = v6;
  return result;
}

void sub_1D52B5520(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52B5534(_QWORD *a1, void **a2, _QWORD *a3)
{
  a1[2] = 0;
  *a1 = &unk_1E99725E0;
  a1[1] = 0;
  sub_1D52B5580((uint64_t)(a1 + 3), a2, a3);
  return a1;
}

void sub_1D52B556C(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52B5580(uint64_t a1, void **a2, _QWORD *a3)
{
  void *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  _QWORD v11[2];

  v4 = *a2;
  v5 = (std::__shared_weak_count *)a3[1];
  v11[0] = *a3;
  v11[1] = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  sub_1D52B4930(a1, v4, v11);
  if (v5)
  {
    v8 = (unint64_t *)&v5->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_1D52B560C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52B5620@<X0>(void **a1@<X1>, _QWORD *a2@<X2>, _QWORD *a3@<X8>)
{
  _QWORD *v6;
  _QWORD *result;

  v6 = operator new(0x48uLL);
  result = sub_1D52B5680(v6, a1, a2);
  *a3 = v6 + 3;
  a3[1] = v6;
  return result;
}

void sub_1D52B566C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52B5680(_QWORD *a1, void **a2, _QWORD *a3)
{
  a1[2] = 0;
  *a1 = &unk_1E99725E0;
  a1[1] = 0;
  sub_1D52B56CC((uint64_t)(a1 + 3), a2, a3);
  return a1;
}

void sub_1D52B56B8(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52B56CC(uint64_t a1, void **a2, _QWORD *a3)
{
  void *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  _QWORD v11[2];

  v4 = *a2;
  v5 = (std::__shared_weak_count *)a3[1];
  v11[0] = *a3;
  v11[1] = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  sub_1D52B4A60(a1, v4, v11);
  if (v5)
  {
    v8 = (unint64_t *)&v5->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_1D52B5758(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52B576C@<X0>(char *a1@<X1>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _QWORD *result;

  v4 = operator new(0x48uLL);
  result = sub_1D52B57C4(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_1D52B57B0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52B57C4(_QWORD *a1, char *a2)
{
  a1[2] = 0;
  *a1 = &unk_1E99725E0;
  a1[1] = 0;
  sub_1D52B5810(a1 + 3, a2);
  return a1;
}

void sub_1D52B57FC(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52B5810(_QWORD *a1, char *a2)
{
  *a1 = &unk_1E99725B0;
  sub_1D52850A0(a1 + 1, a2);
  a1[4] = 0;
  a1[5] = 0;
  return a1;
}

void sub_1D52B5854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52B5868(uint64_t a1)
{
  *(_QWORD *)a1 = &unk_1E99725B0;
  sub_1D5282EB4(a1 + 32);
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

double sub_1D52B58AC(double a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  void *v5;
  void *context;

  if (!*(_BYTE *)off_1EFF324B0(&off_1EFF324B0))
  {
    *(_BYTE *)v2(v3) = 1;
    context = (void *)MEMORY[0x1D8272058]();
    v5 = (void *)off_1EFF32498(&off_1EFF32498);
    _tlv_atexit((void (__cdecl *)(void *))sub_1D52B4718, v5);
    objc_autoreleasePoolPop(context);
  }
  off_1EFF32498(&off_1EFF32498);
  return a1;
}

void *sub_1D52B5A3C(uint64_t a1, int a2, unsigned int a3)
{
  void *v5;
  uint64_t v6;
  int v8;
  int v9;

  v9 = a2;
  v5 = malloc_type_malloc(a3 + 64, 0xFF63A9DCuLL);
  v6 = *(_QWORD *)(a1 + 24);
  sub_1D5282F74(&v8, &v9);
  (*(void (**)(uint64_t, int *, _QWORD))(*(_QWORD *)v6 + 40))(v6, &v8, 0);
  (*(void (**)(_QWORD, void *, _QWORD))(**(_QWORD **)(a1 + 24) + 32))(*(_QWORD *)(a1 + 24), v5, a3);
  return v5;
}

void sub_1D52B5AD0(void *a1)
{
  void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    free(v1);
  __cxa_end_catch();
  JUMPOUT(0x1D52B5AB8);
}

void sub_1D52B5AF4(_QWORD *a1, uint64_t a2, unsigned int a3, uint64_t a4, unsigned int a5, int a6, int a7, int a8, const UInt8 *a9, CFIndex a10)
{
  const __CFData *v13;
  CGImageSource *v14;
  CGImage *ImageAtIndex;
  CGDataProvider *DataProvider;
  const __CFData *v17;
  const __CFData *v18;
  void *v19;
  float32x2_t *v20;
  float *v21;
  float64x2_t *v22;
  float32x2_t v23;
  float v24;
  float32x2_t v25;
  int v26;
  int v27;
  unsigned int v28;
  int v29;
  const UInt8 *BytePtr;
  float v31;
  unsigned int v32;
  const UInt8 *v33;
  _WORD *v34;
  unsigned int v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  float v41;
  float v42;
  float v43;
  float v44;
  float v45;
  void *exception;
  void *v47;
  CGImageSource *v48;
  const __CFData *v49;
  size_t BytesPerRow;
  unsigned int v51;
  const __CFData *theData;
  size_t Height;
  uint64_t v54;

  v13 = CFDataCreateWithBytesNoCopy((CFAllocatorRef)*MEMORY[0x1E0C9AE00], a9, a10, (CFAllocatorRef)*MEMORY[0x1E0C9AE20]);
  v14 = CGImageSourceCreateWithData(v13, 0);
  ImageAtIndex = CGImageSourceCreateImageAtIndex(v14, 0, 0);
  BytesPerRow = CGImageGetBytesPerRow(ImageAtIndex);
  if (CGImageGetWidth(ImageAtIndex) != a5
    || (Height = CGImageGetHeight(ImageAtIndex), Height != a6)
    || (DataProvider = CGImageGetDataProvider(ImageAtIndex),
        v17 = CGDataProviderCopyData(DataProvider),
        (v18 = v17) == 0))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  if (CFDataGetLength(v17) != 4 * a5 * a6)
  {
    v47 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](v47, "RawCameraException");
    __cxa_throw(v47, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v19 = operator new(0xCuLL);
  *(_QWORD *)v19 = 0;
  *((_DWORD *)v19 + 2) = 0;
  v20 = (float32x2_t *)operator new(0xCuLL);
  v21 = (float *)v20;
  theData = v18;
  v48 = v14;
  v49 = v13;
  v22 = (float64x2_t *)a1[231];
  if (a1[232] - (_QWORD)v22 < 0x11uLL)
  {
    v23 = 0;
    v24 = 0.0;
  }
  else
  {
    v23 = vcvt_f32_f64(*v22);
    *(float32x2_t *)v19 = v23;
    v24 = v22[1].f64[0];
    *((float *)v19 + 2) = v24;
  }
  v25 = (float32x2_t)vdup_n_s32(0x437F0000u);
  *v20 = vdiv_f32(v25, vsub_f32(v25, v23));
  v20[1].f32[0] = 255.0 / (float)(255.0 - v24);
  if (a6)
  {
    v54 = 0;
    v26 = 0;
    v27 = 0;
    if (a5 >= a3)
      v28 = a3;
    else
      v28 = a5;
    v51 = a5;
    do
    {
      v29 = (*(uint64_t (**)(_QWORD *))(*a1 + 40))(a1);
      BytePtr = CFDataGetBytePtr(theData);
      if (a5)
      {
        v32 = a5;
        v33 = &BytePtr[BytesPerRow * v54];
        v34 = (_WORD *)(a2 + 2 * (v26 + a8 + (v27 + a7) * a3) * v29);
        v35 = v32;
        do
        {
          LOBYTE(v31) = *v33;
          v36 = *((float *)v19 + 1);
          v37 = v21[1];
          v38 = (float)((float)LODWORD(v31) - *(float *)v19) * *v21;
          v39 = 255.0;
          if (v38 <= 255.0)
            v40 = v38;
          else
            v40 = 255.0;
          if (v38 >= 0.0)
            v41 = v40;
          else
            v41 = 0.0;
          *v34 = *((_WORD *)a1 + (int)v41 + 156);
          LOBYTE(v41) = v33[1];
          v42 = (float)((float)LODWORD(v41) - v36) * v37;
          if (v42 <= 255.0)
            v43 = v42;
          else
            v43 = 255.0;
          if (v42 >= 0.0)
            v44 = v43;
          else
            v44 = 0.0;
          v34[1] = *((_WORD *)a1 + (int)v44 + 412);
          LOBYTE(v44) = v33[2];
          v45 = (float)((float)LODWORD(v44) - *((float *)v19 + 2)) * v21[2];
          if (v45 <= 255.0)
            v39 = v45;
          if (v45 >= 0.0)
            v31 = v39;
          else
            v31 = 0.0;
          v34[2] = *((_WORD *)a1 + (int)v31 + 668);
          if (++v26 >= v28)
          {
            v26 = 0;
            v34 = (_WORD *)(a2
                          + 2 * (a8 + (++v27 + a7) * a3) * (*(unsigned int (**)(_QWORD *))(*a1 + 40))(a1));
          }
          else
          {
            v34 += 3;
          }
          v33 += 4;
          --v35;
        }
        while (v35);
      }
      ++v54;
      a5 = v51;
    }
    while (v54 != Height);
  }
  operator delete(v21);
  operator delete(v19);
  if (theData)
    CFRelease(theData);
  if (v49)
    CFRelease(v49);
  if (v48)
    CFRelease(v48);
  if (ImageAtIndex)
    CFRelease(ImageAtIndex);
}

void sub_1D52B5F4C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  void *v15;
  uint64_t v16;

  operator delete(v15);
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  if (!v16)
    JUMPOUT(0x1D52B5E3CLL);
  JUMPOUT(0x1D52B5E34);
}

void sub_1D52B5FE8(os_signpost_id_t a1)
{
  NSObject *v2;
  NSObject *v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  uint64_t v7;
  int8x16_t v8;
  int8x16_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  uint64_t v21;
  const void *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  double *v27;
  uint64_t v28;
  double v29;
  double v30;
  unint64_t *v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  int v39;
  int v40;
  NSObject *v41;
  unsigned int v42;
  void *exception;
  void *v44;
  unsigned int v45;
  void (**v46)(_QWORD);
  uint64_t v47;
  int v48;
  NSObject *queue;
  dispatch_queue_t v50;
  NSObject *group;
  unsigned int v52;
  unsigned int v53;
  _QWORD block[4];
  NSObject *v55;
  NSObject *v56;
  os_signpost_id_t v57;
  uint64_t v58;
  uint8_t *v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  int v65;
  void *__src;
  double *v67;
  uint64_t v68;
  _QWORD v69[2];
  _QWORD v70[5];
  uint8_t buf[256];
  uint64_t v72;

  v72 = *MEMORY[0x1E0C80C00];
  sub_1D52EB058();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (a1 + 1 >= 2 && os_signpost_enabled(v2))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v3, OS_SIGNPOST_INTERVAL_BEGIN, a1, "CDNGLossyUnpacker", (const char *)&unk_1D548AF1A, buf, 2u);
  }

  v70[0] = MEMORY[0x1E0C809B0];
  v70[1] = 3221225472;
  v70[2] = sub_1D52B66D8;
  v70[3] = &unk_1E996F870;
  v70[4] = a1;
  v46 = (void (**)(_QWORD))MEMORY[0x1D82721B4](v70);
  v5 = *(_DWORD *)(a1 + 44);
  v4 = *(_DWORD *)(a1 + 48);
  v52 = *(_DWORD *)(a1 + 228);
  v53 = *(_DWORD *)(a1 + 224);
  __src = (void *)((uint64_t)(*(_QWORD *)(a1 + 240) - *(_QWORD *)(a1 + 232)) >> 2);
  sub_1D528304C(v69, (unint64_t *)&__src);
  if (v5 >> 5 >= 0xC35
    || v4 > 0x1869F
    || v53 > 0x1869F
    || v52 > 0x1869F
    || (v6 = v69[0], LODWORD(v69[0]) >> 5 >= 0x271))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  if ((((v4 + v52 - 1) / v52) >> (*(_DWORD *)(a1 + 216) != 0)) * ((v5 + v53 - 1) / v53) != LODWORD(v69[0]))
    goto LABEL_51;
  v7 = 0;
  v8 = (int8x16_t)xmmword_1D54487C0;
  v9.i64[0] = 0x1010101010101010;
  v9.i64[1] = 0x1010101010101010;
  do
  {
    *(int8x16_t *)&buf[v7] = v8;
    v7 += 16;
    v8 = vaddq_s8(v8, v9);
  }
  while (v7 != 256);
  v11 = *(_QWORD *)(a1 + 192);
  v10 = *(_QWORD *)(a1 + 200);
  v12 = v10 - v11;
  if ((unint64_t)(v10 - v11) >= 0x201)
  {
LABEL_51:
    v44 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](v44, "RawCameraException");
    __cxa_throw(v44, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  if (v10 != v11)
  {
    v13 = 0;
    v14 = v12 >> 1;
    do
    {
      buf[v13] = *(_WORD *)(v11 + 2 * v13);
      ++v13;
    }
    while (v14 > v13);
    if (v13 <= 0xFF)
      memset(&buf[v13], buf[v13 - 1], (255 - v13) + 1);
  }
  v45 = v5;
  v48 = v6;
  group = dispatch_group_create();
  queue = dispatch_queue_create("Lossy DNG Unpacker I/O Queue", 0);
  v50 = dispatch_queue_create("Lossy DNG Unpacker Queue", MEMORY[0x1E0C80D50]);
  v16 = *(_QWORD *)(a1 + 288);
  v15 = *(_QWORD *)(a1 + 296);
  if (v15 - v16 != 48 || v16 == v15)
  {
    v33 = sub_1D52853F0(&__src, 0x10000);
    sub_1D52B675C(0.416666667, 12.92, (uint64_t)v33, (uint64_t)__src, 255);
    v34 = 312;
    v35 = __src;
    do
    {
      memcpy((void *)(a1 + v34), v35, 0x200uLL);
      v34 += 512;
    }
    while (v34 != 1848);
    v67 = (double *)v35;
    operator delete(v35);
  }
  else
  {
    v47 = *(_QWORD *)(a1 + 296);
    do
    {
      v17 = __dynamic_cast(*(const void **)v16, (const struct __class_type_info *)&unk_1E996FA38, (const struct __class_type_info *)&unk_1E99A3A48, 0);
      v18 = *(std::__shared_weak_count **)(v16 + 8);
      v69[0] = v17;
      v69[1] = v18;
      if (v18)
      {
        p_shared_owners = (unint64_t *)&v18->__shared_owners_;
        do
          v20 = __ldxr(p_shared_owners);
        while (__stxr(v20 + 1, p_shared_owners));
      }
      v21 = *((unsigned int *)v17 + 7);
      if (v21 <= 2)
      {
        v22 = (const void *)v17[6];
        v23 = v17[7];
        v24 = (v23 - (uint64_t)v22) >> 3;
        __src = 0;
        v67 = 0;
        v68 = 0;
        sub_1D5282C70(&__src, v22, v23, v24);
        v25 = 0;
        v26 = v24 - 1;
        v27 = (double *)__src;
        do
        {
          v28 = 0;
          v29 = 0.0;
          do
          {
            v30 = v27[v28];
            v29 = v29 + v30 * pow((double)v25 / 255.0, (double)v28++);
          }
          while (v26 >= v28);
          *(_WORD *)(a1 + (v21 << 9) + 2 * v25++ + 312) = (int)(v29 * 65535.0);
        }
        while (v25 != 256);
        v67 = v27;
        operator delete(v27);
        v15 = v47;
      }
      if (v18)
      {
        v31 = (unint64_t *)&v18->__shared_owners_;
        do
          v32 = __ldaxr(v31);
        while (__stlxr(v32 - 1, v31));
        if (!v32)
        {
          ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
          std::__shared_weak_count::__release_weak(v18);
        }
      }
      v16 += 16;
    }
    while (v16 != v15);
  }
  v36 = sub_1D530B618(a1);
  if (v48)
  {
    v37 = v36;
    v38 = 0;
    v39 = 0;
    v40 = 0;
    do
    {
      block[0] = MEMORY[0x1E0C809B0];
      block[1] = 3221225472;
      block[2] = sub_1D52B6944;
      block[3] = &unk_1E9972670;
      v57 = a1;
      v60 = v38;
      v41 = group;
      v55 = v41;
      v56 = v50;
      v58 = v37;
      v59 = buf;
      v61 = v45;
      v62 = v53;
      v63 = v52;
      v64 = v40;
      v65 = v39;
      dispatch_group_async(v41, queue, block);
      if (v39 + v53 >= v45)
        v42 = v52;
      else
        v42 = 0;
      if (v39 + v53 >= v45)
        v39 = 0;
      else
        v39 += v53;

      v40 += v42;
      ++v38;
    }
    while (v48 != v38);
  }
  dispatch_group_wait(group, 0xFFFFFFFFFFFFFFFFLL);

  v46[2](v46);
}

void sub_1D52B662C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (**a10)(_QWORD), uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15)
{

  a10[2](a10);
  _Unwind_Resume(a1);
}

void sub_1D52B66D8(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  os_signpost_id_t v4;
  uint8_t v5[16];

  sub_1D52EB058();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = v2;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v3, OS_SIGNPOST_INTERVAL_END, v4, "CDNGLossyUnpacker", (const char *)&unk_1D548AF1A, v5, 2u);
  }

}

void sub_1D52B675C(double a1, long double a2, uint64_t a3, uint64_t a4, int a5)
{
  double v9;
  double v10;
  int i;
  uint64_t j;
  double v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v15 = 0.0;
  v16 = 0.0;
  *(&v15 + (a2 >= 1.0)) = 1.0;
  v9 = 0.0;
  if (a2 == 0.0 || (a1 + -1.0) * (a2 + -1.0) > 0.0)
  {
    v10 = 0.0;
  }
  else
  {
    for (i = 0; i != 48; ++i)
    {
      while (1)
      {
        v10 = (v15 + v16) * 0.5;
        if (a1 == 0.0)
          break;
        *(&v15 + ((pow(v10 / a2, -a1) + -1.0) / a1 + -1.0 / v10 > -1.0)) = v10;
        if (++i == 48)
        {
          v9 = (1.0 / a1 + -1.0) * v10;
          goto LABEL_10;
        }
      }
      *(&v15 + (v10 / exp(1.0 - 1.0 / v10) < a2)) = v10;
    }
    v9 = 0.0;
  }
LABEL_10:
  for (j = 0; j != 0x10000; ++j)
  {
    *(_WORD *)(a4 + 2 * j) = -1;
    v13 = (double)(int)j / (double)a5;
    if (v13 < 1.0)
    {
      if (v13 >= v10)
      {
        if (a1 == 0.0)
          v14 = exp((v13 + -1.0) / v10);
        else
          v14 = pow((v9 + v13) / (v9 + 1.0), 1.0 / a1);
      }
      else
      {
        v14 = v13 / a2;
      }
      *(_WORD *)(a4 + 2 * j) = vcvtd_n_s64_f64(v14, 0x10uLL);
    }
  }
}

void sub_1D52B6944(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  NSObject *v4;
  NSObject *v5;
  int v6;
  int v7;
  _QWORD block[5];
  __int128 v9;
  void *v10;
  __int128 v11;
  int v12;
  int v13;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = sub_1D52B5A3C(v2, *(_DWORD *)(*(_QWORD *)(v2 + 232) + 4 * *(unsigned int *)(a1 + 72)), *(_DWORD *)(*(_QWORD *)(v2 + 256) + 4 * *(unsigned int *)(a1 + 72)));
  if (v3)
  {
    v5 = *(NSObject **)(a1 + 32);
    v4 = *(NSObject **)(a1 + 40);
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = sub_1D52B69EC;
    block[3] = &unk_1E996F8B0;
    block[4] = v2;
    v9 = *(_OWORD *)(a1 + 56);
    v11 = *(_OWORD *)(a1 + 76);
    v6 = *(_DWORD *)(a1 + 92);
    v10 = v3;
    v7 = *(_DWORD *)(a1 + 72);
    v12 = v6;
    v13 = v7;
    dispatch_group_async(v5, v4, block);
  }
}

void sub_1D52B69EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D52B5AF4(*(_QWORD **)(a1 + 32), *(_QWORD *)(a1 + 40), *(_DWORD *)(a1 + 64), a4, *(_DWORD *)(a1 + 68), *(_DWORD *)(a1 + 72), *(_DWORD *)(a1 + 76), *(_DWORD *)(a1 + 80), *(const UInt8 **)(a1 + 56), *(unsigned int *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 256) + 4 * *(unsigned int *)(a1 + 84)));
  free(*(void **)(a1 + 56));
}

char *sub_1D52B6A3C(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5)
{
  char *v7;
  char *result;

  *(_DWORD *)(a1 + 224) = a2;
  *(_DWORD *)(a1 + 228) = a3;
  v7 = (char *)(a1 + 232);
  if (v7 != (char *)a4)
    sub_1D5282A44(v7, *(char **)a4, *(_QWORD *)(a4 + 8), (uint64_t)(*(_QWORD *)(a4 + 8) - *(_QWORD *)a4) >> 2);
  result = (char *)(a1 + 256);
  if (a1 + 256 != a5)
    return sub_1D5282A44(result, *(char **)a5, *(_QWORD *)(a5 + 8), (uint64_t)(*(_QWORD *)(a5 + 8) - *(_QWORD *)a5) >> 2);
  return result;
}

unint64_t sub_1D52B6AA0(int *a1)
{
  uint64_t v2;
  unint64_t result;
  uint64_t v4;

  v2 = (2 * a1[17]) + (uint64_t)a1[70];
  result = 2 * (*(unsigned int (**)(int *))(*(_QWORD *)a1 + 40))(a1) * v2;
  if ((result & 0x1E) != 0)
  {
    v4 = (2 * a1[17]) + (uint64_t)a1[15];
    return (2 * v4 * (*(unsigned int (**)(int *))(*(_QWORD *)a1 + 40))(a1) + 31) & 0xFFFFFFFFFFFFFFE0;
  }
  return result;
}

_QWORD *sub_1D52B6B20(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void **v7;

  *(_QWORD *)a1 = off_1E99726A0;
  v2 = *(void **)(a1 + 1848);
  if (v2)
  {
    *(_QWORD *)(a1 + 1856) = v2;
    operator delete(v2);
  }
  v7 = (void **)(a1 + 288);
  sub_1D5282E44(&v7);
  v3 = *(void **)(a1 + 256);
  if (v3)
  {
    *(_QWORD *)(a1 + 264) = v3;
    operator delete(v3);
  }
  v4 = *(void **)(a1 + 232);
  if (v4)
  {
    *(_QWORD *)(a1 + 240) = v4;
    operator delete(v4);
  }
  *(_QWORD *)a1 = &unk_1E998DB60;
  v5 = *(void **)(a1 + 192);
  if (v5)
  {
    *(_QWORD *)(a1 + 200) = v5;
    operator delete(v5);
  }
  return sub_1D5282F0C((_QWORD *)a1);
}

uint64_t sub_1D52B6BB8(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  _QWORD *v6;
  void **v8;

  *(_QWORD *)a1 = off_1E99726A0;
  v2 = *(void **)(a1 + 1848);
  if (v2)
  {
    *(_QWORD *)(a1 + 1856) = v2;
    operator delete(v2);
  }
  v8 = (void **)(a1 + 288);
  sub_1D5282E44(&v8);
  v3 = *(void **)(a1 + 256);
  if (v3)
  {
    *(_QWORD *)(a1 + 264) = v3;
    operator delete(v3);
  }
  v4 = *(void **)(a1 + 232);
  if (v4)
  {
    *(_QWORD *)(a1 + 240) = v4;
    operator delete(v4);
  }
  *(_QWORD *)a1 = &unk_1E998DB60;
  v5 = *(void **)(a1 + 192);
  if (v5)
  {
    *(_QWORD *)(a1 + 200) = v5;
    operator delete(v5);
  }
  v6 = sub_1D5282F0C((_QWORD *)a1);
  return MEMORY[0x1D8271ADC](v6, 0x10B1C40D0438387);
}

void sub_1D52B6CD8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1D52B6DF4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

id sub_1D52B6EA4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const char *v28;
  void *v29;
  const char *v30;
  uint64_t v31;
  void *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[11];
  _QWORD v43[2];

  v43[1] = *MEMORY[0x1E0C80C00];
  v5 = *MEMORY[0x1E0CBD388];
  v34 = *MEMORY[0x1E0CBD368];
  v35 = v5;
  v42[0] = MEMORY[0x1E0C9AAB0];
  v42[1] = CFSTR("com.canon.cr2-raw-image");
  v6 = *MEMORY[0x1E0CBD380];
  v36 = *MEMORY[0x1E0CBD348];
  v42[2] = CFSTR(".cr2.");
  v42[3] = &unk_1E99C8E08;
  v42[4] = &unk_1E99C8E20;
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], a2, (uint64_t)sub_1D52B7158, a4, a5, v34, v35, v36, v6, *MEMORY[0x1E0CBD370], *MEMORY[0x1E0CBD378]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v42[5] = v7;
  v37 = *MEMORY[0x1E0CBD330];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v8, (uint64_t)sub_1D52B71C8, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v42[6] = v11;
  v38 = *MEMORY[0x1E0CBD350];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v12, (uint64_t)sub_1D52B71D4, v13, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v42[7] = v15;
  v39 = *MEMORY[0x1E0CBD338];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v16, (uint64_t)sub_1D52E8DA4, v17, v18);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v42[8] = v19;
  v40 = *MEMORY[0x1E0CBD358];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v20, (uint64_t)sub_1D52B71E0, v21, v22);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v42[9] = v23;
  v41 = *MEMORY[0x1E0CBD360];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v24, (uint64_t)sub_1D52B71EC, v25, v26);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v42[10] = v27;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v28, (uint64_t)v42, (uint64_t)&v34, 11);
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v43[0] = v29;
  objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v30, (uint64_t)v43, 1, v31);
  v32 = (void *)objc_claimAutoreleasedReturnValue();

  return v32;
}

void sub_1D52B70F8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

BOOL sub_1D52B7158(_BYTE *a1, unint64_t a2)
{
  return a2 >= 0xC
      && a1[8] == 67
      && a1[9] == 82
      && a1[10] == 2
      && !a1[11]
      && *a1 == 73
      && a1[1] == 73
      && a1[2] == 42
      && !a1[3];
}

void sub_1D52B71C8(const void *a1, uint64_t a2, uint64_t a3)
{
  sub_1D52E7A20(a1, a2, a3, &unk_1E99727D0);
}

uint64_t sub_1D52B71D4(os_signpost_id_t a1)
{
  return sub_1D52E8C40(a1);
}

uint64_t sub_1D52B71E0(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1D52E7438(a1, a2, a3, &unk_1E99727D0);
}

uint64_t sub_1D52B71EC(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1D52E9A7C(a1, a2, a3, &unk_1E99727D0);
}

void sub_1D52B71F8(uint64_t *a1@<X1>, char a2@<W2>, void *a3@<X3>, void *a4@<X4>, _OWORD *a5@<X8>)
{
  __int128 v8;
  id v9;
  id v10;
  char v11;

  v11 = a2;
  v10 = a3;
  v9 = a4;
  sub_1D52BA170(a1, &v11, &v10, &v9, &v8);
  *a5 = v8;

}

void sub_1D52B7274(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{

  _Unwind_Resume(a1);
}

uint64_t sub_1D52B7290(uint64_t a1)
{
  void *v2;

  *(_QWORD *)a1 = off_1E9975298;
  sub_1D52940F4(a1 + 1224, *(char **)(a1 + 1232));
  v2 = *(void **)(a1 + 1184);
  if (v2)
  {
    *(_QWORD *)(a1 + 1192) = v2;
    operator delete(v2);
  }
  return sub_1D52B2190(a1);
}

uint64_t sub_1D52B72DC()
{
  return 1;
}

uint64_t sub_1D52B72E4(void **a1)
{
  void **v2;
  unsigned int *v3;
  uint64_t v4;
  char v5;
  void *v7[2];
  char v8;
  void *__p[2];
  char v10;

  sub_1D52850A0(v7, "IFD0:EXIF:MAKERNOTE:ShotInfo");
  (*((void (**)(void **__return_ptr, void **, void **))*a1 + 49))(__p, a1, v7);
  v2 = sub_1D5294144((uint64_t)(a1 + 24), __p);
  if (a1 + 25 == v2 || (v3 = (unsigned int *)v2[7], v2[8] == v3))
  {
    v4 = 0;
    v5 = 0;
  }
  else
  {
    v4 = *v3;
    v5 = 1;
  }
  if (v10 < 0)
    operator delete(__p[0]);
  if (v8 < 0)
  {
    operator delete(v7[0]);
    if ((v5 & 1) != 0)
      return v4;
    return sub_1D529119C(a1);
  }
  if ((v5 & 1) == 0)
    return sub_1D529119C(a1);
  return v4;
}

void sub_1D52B73B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0)
    operator delete(__p);
  if (a14 < 0)
    operator delete(a9);
  _Unwind_Resume(exception_object);
}

void sub_1D52B73E8(uint64_t a1, uint64_t a2, unsigned __int16 *a3)
{
  unsigned int v6;
  std::string::size_type v7;
  std::string *p_str;
  unsigned __int8 *v9;
  std::string *v10;
  uint64_t i;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unsigned int v15;
  size_t v16;
  std::string *p_p;
  const void *v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  uint64_t *v22;
  void *v23;
  void *v24;
  void *v25;
  unsigned int v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  size_t v30;
  std::string *v31;
  const void *v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  void *v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  int v43;
  size_t v44;
  std::string *v45;
  const void *v46;
  unsigned int v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  unsigned __int16 *v51;
  unsigned int v52;
  float v53;
  float v54;
  float v55;
  float v57;
  float v58;
  BOOL v59;
  float v60;
  uint64_t *v61;
  uint64_t *v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  std::__shared_weak_count *v66;
  unint64_t *v67;
  unint64_t v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  std::__shared_weak_count *v75;
  unint64_t *v76;
  unint64_t v77;
  unsigned int v78;
  std::__shared_weak_count *v79;
  unint64_t *v80;
  unint64_t v81;
  size_t v82;
  void **v83;
  const void *v84;
  std::string *v85;
  std::__shared_weak_count *size;
  unint64_t *v87;
  unint64_t v88;
  std::__shared_weak_count *v89;
  unint64_t *v90;
  unint64_t v91;
  void *v92;
  std::string *v93;
  uint64_t v94;
  uint64_t v95;
  BOOL v96;
  int v97;
  int v98;
  double *v99;
  uint64_t v100;
  uint64_t v101;
  double v102;
  void *v103;
  double *v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  char *v109;
  double *v110;
  void *v111;
  char *v112;
  void *exception;
  void *__src[2];
  char v115;
  void *v116[2];
  double *v117;
  std::string __p;
  std::string __str;
  void **v120;
  void *v121[2];
  char v122;
  uint64_t v123;

  v123 = *MEMORY[0x1E0C80C00];
  sub_1D52E2CF8(a1, a2, a3);
  v6 = *a3;
  if (v6 > 0x99)
  {
    if (*a3 > 0x4017u)
    {
      if (v6 == 16408)
      {
        if (a3[1] == 4 && *((_DWORD *)a3 + 1) >= 4u)
        {
          sub_1D52917E4(a1, &__p);
          LODWORD(v116[0]) = *((_DWORD *)a3 + 2);
          sub_1D5282F74((int *)v121, (int *)v116);
          sub_1D5285164((uint64_t *)&__str, (uint64_t *)&__p, (uint64_t)v121, 0);
          size = (std::__shared_weak_count *)__p.__r_.__value_.__l.__size_;
          if (__p.__r_.__value_.__l.__size_)
          {
            v87 = (unint64_t *)(__p.__r_.__value_.__l.__size_ + 8);
            do
              v88 = __ldaxr(v87);
            while (__stlxr(v88 - 1, v87));
            if (!v88)
            {
              ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
              std::__shared_weak_count::__release_weak(size);
            }
          }
          sub_1D52917E4(a1, v121);
          LODWORD(v116[0]) = *((_DWORD *)a3 + 1);
          sub_1D5284E3C((_QWORD *)v121[0], (unsigned int *)v116, (uint64_t *)&__p);
          v89 = (std::__shared_weak_count *)v121[1];
          if (v121[1])
          {
            v90 = (unint64_t *)((char *)v121[1] + 8);
            do
              v91 = __ldaxr(v90);
            while (__stlxr(v91 - 1, v90));
            if (!v91)
            {
              ((void (*)(std::__shared_weak_count *))v89->__on_zero_shared)(v89);
              std::__shared_weak_count::__release_weak(v89);
            }
          }
          v92 = (void *)__p.__r_.__value_.__r.__words[0];
          *(_BYTE *)(a1 + 1249) = *(_DWORD *)(__p.__r_.__value_.__r.__words[0] + 12) != 0;
          __p.__r_.__value_.__l.__size_ = (std::string::size_type)v92;
          operator delete(v92);
          sub_1D5285200((uint64_t *)&__str);
        }
      }
      else if (v6 == 16417 && a3[1] == 4 && *((_DWORD *)a3 + 1) == 5)
      {
        sub_1D52917E4(a1, &__p);
        LODWORD(v116[0]) = *((_DWORD *)a3 + 2);
        sub_1D5282F74((int *)v121, (int *)v116);
        sub_1D5285164((uint64_t *)&__str, (uint64_t *)&__p, (uint64_t)v121, 0);
        v33 = (std::__shared_weak_count *)__p.__r_.__value_.__l.__size_;
        if (__p.__r_.__value_.__l.__size_)
        {
          v34 = (unint64_t *)(__p.__r_.__value_.__l.__size_ + 8);
          do
            v35 = __ldaxr(v34);
          while (__stlxr(v35 - 1, v34));
          if (!v35)
          {
            ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
            std::__shared_weak_count::__release_weak(v33);
          }
        }
        sub_1D52917E4(a1, v121);
        LODWORD(v116[0]) = *((_DWORD *)a3 + 1);
        sub_1D5284E3C((_QWORD *)v121[0], (unsigned int *)v116, (uint64_t *)&__p);
        v36 = (std::__shared_weak_count *)v121[1];
        if (v121[1])
        {
          v37 = (unint64_t *)((char *)v121[1] + 8);
          do
            v38 = __ldaxr(v37);
          while (__stlxr(v38 - 1, v37));
          if (!v38)
          {
            ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
            std::__shared_weak_count::__release_weak(v36);
          }
        }
        v39 = (void *)__p.__r_.__value_.__r.__words[0];
        if (*(_DWORD *)__p.__r_.__value_.__l.__data_ == 20)
          *(_BYTE *)(a1 + 1256) = *(_DWORD *)(__p.__r_.__value_.__r.__words[0] + 4) != 0;
        __p.__r_.__value_.__l.__size_ = (std::string::size_type)v39;
        operator delete(v39);
        sub_1D5285200((uint64_t *)&__str);
      }
      return;
    }
    if (v6 != 154)
    {
      if (v6 != 16385 || ((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) != 0)
        return;
      sub_1D52917E4(a1, &__p);
      LODWORD(v116[0]) = *((_DWORD *)a3 + 2);
      sub_1D5282F74((int *)v121, (int *)v116);
      sub_1D5285164((uint64_t *)&__str, (uint64_t *)&__p, (uint64_t)v121, 0);
      v12 = (std::__shared_weak_count *)__p.__r_.__value_.__l.__size_;
      if (__p.__r_.__value_.__l.__size_)
      {
        v13 = (unint64_t *)(__p.__r_.__value_.__l.__size_ + 8);
        do
          v14 = __ldaxr(v13);
        while (__stlxr(v14 - 1, v13));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      v15 = *((_DWORD *)a3 + 1);
      if (v15 - 8193 >= 0xFFFFE000)
      {
        if (*(char *)(a2 + 23) >= 0)
          v16 = *(unsigned __int8 *)(a2 + 23);
        else
          v16 = *(_QWORD *)(a2 + 8);
        p_p = &__p;
        sub_1D52B1FA0((uint64_t)&__p, v16 + 14);
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        if (v16)
        {
          if (*(char *)(a2 + 23) >= 0)
            v18 = (const void *)a2;
          else
            v18 = *(const void **)a2;
          memmove(p_p, v18, v16);
        }
        strcpy((char *)p_p + v16, ":ColorBalance1");
        sub_1D52917E4(a1, v116);
        LODWORD(__src[0]) = v15;
        sub_1D5284D2C((_QWORD *)v116[0], (unsigned int *)__src, (uint64_t *)v121);
        v19 = (std::__shared_weak_count *)v116[1];
        if (v116[1])
        {
          v20 = (unint64_t *)((char *)v116[1] + 8);
          do
            v21 = __ldaxr(v20);
          while (__stlxr(v21 - 1, v20));
          if (!v21)
          {
            ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
            std::__shared_weak_count::__release_weak(v19);
          }
        }
        v116[1] = 0;
        v117 = 0;
        v116[0] = 0;
        sub_1D52BA100((char *)v116, (unsigned __int16 *)v121[0], (unsigned __int16 *)v121[1], ((char *)v121[1] - (char *)v121[0]) >> 1);
        __src[0] = &__p;
        v22 = sub_1D52B3E7C((uint64_t **)(a1 + 120), (void **)&__p.__r_.__value_.__l.__data_, (uint64_t)&unk_1D544A5C4, (__int128 **)__src);
        v23 = (void *)v22[7];
        if (v23)
        {
          v22[8] = (uint64_t)v23;
          operator delete(v23);
          v22[7] = 0;
          v22[8] = 0;
          v22[9] = 0;
        }
        v24 = v116[0];
        *(_OWORD *)(v22 + 7) = *(_OWORD *)v116;
        v22[9] = (uint64_t)v117;
        v25 = v121[0];
        v26 = 196;
        switch(*(_WORD *)v121[0])
        {
          case 1:
            goto LABEL_207;
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
          case 7:
          case 9:
            v26 = 231;
            goto LABEL_207;
          case 0xA:
            if (v15 >= 0x514)
              v26 = 504;
            else
              v26 = 479;
            goto LABEL_207;
          case 0xB:
            v26 = 276;
            goto LABEL_207;
          case 0xC:
            v26 = 778;
            goto LABEL_207;
          case 0xD:
          case 0xF:
            v26 = 326;
            goto LABEL_207;
          case 0xE:
            v26 = 556;
            goto LABEL_207;
          case 0x10:
            v26 = 329;
LABEL_207:
            if (v15 < v26 + 4)
              goto LABEL_233;
            v99 = 0;
            v100 = 0;
            v116[0] = 0;
            v116[1] = 0;
            v117 = 0;
            v101 = v26;
            do
            {
              LOWORD(v24) = *((_WORD *)v121[0] + v100 + v101);
              v102 = (double)(unint64_t)v24;
              if (v99 >= v117)
              {
                v104 = (double *)v116[0];
                v105 = ((char *)v99 - (char *)v116[0]) >> 3;
                v106 = v105 + 1;
                if ((unint64_t)(v105 + 1) >> 61)
                  sub_1D5282B8C();
                v107 = (char *)v117 - (char *)v116[0];
                if (((char *)v117 - (char *)v116[0]) >> 2 > v106)
                  v106 = v107 >> 2;
                if ((unint64_t)v107 >= 0x7FFFFFFFFFFFFFF8)
                  v108 = 0x1FFFFFFFFFFFFFFFLL;
                else
                  v108 = v106;
                if (v108)
                {
                  v109 = (char *)sub_1D5282D28((uint64_t)&v117, v108);
                  v104 = (double *)v116[0];
                  v99 = (double *)v116[1];
                }
                else
                {
                  v109 = 0;
                }
                v110 = (double *)&v109[8 * v105];
                *v110 = v102;
                v103 = v110 + 1;
                while (v99 != v104)
                {
                  v111 = (void *)*((_QWORD *)v99-- - 1);
                  v24 = v111;
                  *((_QWORD *)v110-- - 1) = v111;
                }
                v116[0] = v110;
                v116[1] = v103;
                v117 = (double *)&v109[8 * v108];
                if (v104)
                  operator delete(v104);
              }
              else
              {
                *v99 = v102;
                v103 = v99 + 1;
              }
              v116[1] = v103;
              ++v100;
              v99 = (double *)v103;
            }
            while (v100 != 4);
            sub_1D52AFE84(":BLACKLEVELS", (const void **)a2, __src);
            v120 = __src;
            v112 = (char *)sub_1D52BA2C8((uint64_t **)(a1 + 264), __src, (uint64_t)&unk_1D544A5C4, (_OWORD **)&v120) + 56;
            if (v112 != (char *)v116)
              sub_1D528FA34(v112, (char *)v116[0], (uint64_t)v116[1], ((char *)v116[1] - (char *)v116[0]) >> 3);
            if (v115 < 0)
              operator delete(__src[0]);
            if (v116[0])
            {
              v116[1] = v116[0];
              operator delete(v116[0]);
            }
            v25 = v121[0];
            if (v121[0])
              goto LABEL_233;
            goto LABEL_234;
          default:
LABEL_233:
            v121[1] = v25;
            operator delete(v25);
LABEL_234:
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
              operator delete(__p.__r_.__value_.__l.__data_);
            break;
        }
      }
LABEL_236:
      sub_1D5285200((uint64_t *)&__str);
      return;
    }
    if (a3[1] != 4 || *((_DWORD *)a3 + 1) != 5)
      return;
    sub_1D52917E4(a1, &__p);
    LODWORD(v116[0]) = *((_DWORD *)a3 + 2);
    sub_1D5282F74((int *)v121, (int *)v116);
    sub_1D5285164((uint64_t *)&__str, (uint64_t *)&__p, (uint64_t)v121, 0);
    v63 = (std::__shared_weak_count *)__p.__r_.__value_.__l.__size_;
    if (__p.__r_.__value_.__l.__size_)
    {
      v64 = (unint64_t *)(__p.__r_.__value_.__l.__size_ + 8);
      do
        v65 = __ldaxr(v64);
      while (__stlxr(v65 - 1, v64));
      if (!v65)
      {
        ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
        std::__shared_weak_count::__release_weak(v63);
      }
    }
    sub_1D52917E4(a1, v121);
    LODWORD(v116[0]) = *((_DWORD *)a3 + 1);
    sub_1D5284E3C((_QWORD *)v121[0], (unsigned int *)v116, (uint64_t *)&__p);
    v66 = (std::__shared_weak_count *)v121[1];
    if (v121[1])
    {
      v67 = (unint64_t *)((char *)v121[1] + 8);
      do
        v68 = __ldaxr(v67);
      while (__stlxr(v68 - 1, v67));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
        std::__shared_weak_count::__release_weak(v66);
      }
    }
    v69 = *(_DWORD *)(__p.__r_.__value_.__r.__words[0] + 4);
    v70 = *(_DWORD *)(__p.__r_.__value_.__r.__words[0] + 8);
    sub_1D5282DF0(v121, *(_DWORD *)(__p.__r_.__value_.__r.__words[0] + 12), *(_DWORD *)(__p.__r_.__value_.__r.__words[0] + 16));
    sub_1D5282DF0(&v121[1], v69, v70);
    *(_OWORD *)(a1 + 1260) = *(_OWORD *)v121;
    v71 = *(_DWORD *)(a1 + 1260);
    v72 = *(_DWORD *)(a1 + 1268);
    if (v71 >= v72
      || (v73 = *(_DWORD *)(a1 + 1264), v74 = *(_DWORD *)(a1 + 1272), v73 >= v74)
      || *(_BYTE *)(a1 + 1208)
      && (v72 > *(unsigned __int16 *)(a1 + 1210)
       || v74 > *(unsigned __int16 *)(a1 + 1212)
       || v71 > *(unsigned __int16 *)(a1 + 1218)
       || v73 > *(unsigned __int16 *)(a1 + 1220)))
    {
      exception = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1D8271938](exception, "RawCameraException");
      __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
    }
    if (__p.__r_.__value_.__r.__words[0])
    {
      __p.__r_.__value_.__l.__size_ = __p.__r_.__value_.__r.__words[0];
      operator delete(__p.__r_.__value_.__l.__data_);
    }
LABEL_66:
    sub_1D5285200((uint64_t *)&__str);
    return;
  }
  if (*a3 > 0x28u)
  {
    if (v6 == 41)
    {
      if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) != 0)
        return;
      sub_1D52917E4(a1, &__p);
      LODWORD(v116[0]) = *((_DWORD *)a3 + 2);
      sub_1D5282F74((int *)v121, (int *)v116);
      sub_1D5285164((uint64_t *)&__str, (uint64_t *)&__p, (uint64_t)v121, 0);
      v75 = (std::__shared_weak_count *)__p.__r_.__value_.__l.__size_;
      if (__p.__r_.__value_.__l.__size_)
      {
        v76 = (unint64_t *)(__p.__r_.__value_.__l.__size_ + 8);
        do
          v77 = __ldaxr(v76);
        while (__stlxr(v77 - 1, v76));
        if (!v77)
        {
          ((void (*)(std::__shared_weak_count *))v75->__on_zero_shared)(v75);
          std::__shared_weak_count::__release_weak(v75);
        }
      }
      v78 = *((_DWORD *)a3 + 1);
      if (v78 <= 0x2000)
      {
        sub_1D52917E4(a1, v121);
        LODWORD(v116[0]) = v78;
        sub_1D5284E3C((_QWORD *)v121[0], (unsigned int *)v116, (uint64_t *)&__p);
        v79 = (std::__shared_weak_count *)v121[1];
        if (v121[1])
        {
          v80 = (unint64_t *)((char *)v121[1] + 8);
          do
            v81 = __ldaxr(v80);
          while (__stlxr(v81 - 1, v80));
          if (!v81)
          {
            ((void (*)(std::__shared_weak_count *))v79->__on_zero_shared)(v79);
            std::__shared_weak_count::__release_weak(v79);
          }
        }
        if (*(char *)(a2 + 23) >= 0)
          v82 = *(unsigned __int8 *)(a2 + 23);
        else
          v82 = *(_QWORD *)(a2 + 8);
        v83 = v121;
        sub_1D52B1FA0((uint64_t)v121, v82 + 15);
        if (v122 < 0)
          v83 = (void **)v121[0];
        if (v82)
        {
          if (*(char *)(a2 + 23) >= 0)
            v84 = (const void *)a2;
          else
            v84 = *(const void **)a2;
          memmove(v83, v84, v82);
        }
        strcpy((char *)v83 + v82, ":G9WhiteBalance");
        v116[0] = v121;
        v85 = (std::string *)((char *)sub_1D52BA2C8((uint64_t **)(a1 + 120), v121, (uint64_t)&unk_1D544A5C4, (_OWORD **)v116)+ 56);
        if (v85 != &__p)
          sub_1D5282A44((char *)v85, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_, (uint64_t)(__p.__r_.__value_.__l.__size_ - __p.__r_.__value_.__r.__words[0]) >> 2);
        if (v122 < 0)
          operator delete(v121[0]);
        if (__p.__r_.__value_.__r.__words[0])
        {
          __p.__r_.__value_.__l.__size_ = __p.__r_.__value_.__r.__words[0];
          operator delete(__p.__r_.__value_.__l.__data_);
        }
      }
    }
    else
    {
      if (v6 != 153 || ((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) != 0 || a3[1] != 4)
        return;
      sub_1D52917E4(a1, &__p);
      LODWORD(v116[0]) = sub_1D52A5CC8((uint64_t)a3);
      sub_1D5285B08((int *)v121, (int *)v116);
      sub_1D5285164((uint64_t *)&__str, (uint64_t *)&__p, (uint64_t)v121, 0);
      v27 = (std::__shared_weak_count *)__p.__r_.__value_.__l.__size_;
      if (__p.__r_.__value_.__l.__size_)
      {
        v28 = (unint64_t *)(__p.__r_.__value_.__l.__size_ + 8);
        do
          v29 = __ldaxr(v28);
        while (__stlxr(v29 - 1, v28));
        if (!v29)
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v27);
        }
      }
      if (*(char *)(a2 + 23) >= 0)
        v30 = *(unsigned __int8 *)(a2 + 23);
      else
        v30 = *(_QWORD *)(a2 + 8);
      v31 = &__p;
      sub_1D52B1FA0((uint64_t)&__p, v30 + 4);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v31 = (std::string *)__p.__r_.__value_.__r.__words[0];
      if (v30)
      {
        if (*(char *)(a2 + 23) >= 0)
          v32 = (const void *)a2;
        else
          v32 = *(const void **)a2;
        memmove(v31, v32, v30);
      }
      strcpy((char *)v31 + v30, ":CF2");
      (*(void (**)(uint64_t, std::string *, _QWORD))(*(_QWORD *)a1 + 784))(a1, &__p, *((unsigned int *)a3 + 1));
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
    }
    goto LABEL_66;
  }
  if (v6 == 4)
  {
    if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) != 0)
      return;
    sub_1D52917E4(a1, &__p);
    LODWORD(v116[0]) = *((_DWORD *)a3 + 2);
    sub_1D5282F74((int *)v121, (int *)v116);
    sub_1D5285164((uint64_t *)&__str, (uint64_t *)&__p, (uint64_t)v121, 0);
    v40 = (std::__shared_weak_count *)__p.__r_.__value_.__l.__size_;
    if (__p.__r_.__value_.__l.__size_)
    {
      v41 = (unint64_t *)(__p.__r_.__value_.__l.__size_ + 8);
      do
        v42 = __ldaxr(v41);
      while (__stlxr(v42 - 1, v41));
      if (!v42)
      {
        ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
        std::__shared_weak_count::__release_weak(v40);
      }
    }
    v43 = *((_DWORD *)a3 + 1);
    if ((v43 - 257) < 0xFFFFFF07)
      goto LABEL_236;
    if (*(char *)(a2 + 23) >= 0)
      v44 = *(unsigned __int8 *)(a2 + 23);
    else
      v44 = *(_QWORD *)(a2 + 8);
    v45 = &__p;
    sub_1D52B1FA0((uint64_t)&__p, v44 + 9);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v45 = (std::string *)__p.__r_.__value_.__r.__words[0];
    if (v44)
    {
      if (*(char *)(a2 + 23) >= 0)
        v46 = (const void *)a2;
      else
        v46 = *(const void **)a2;
      memmove(v45, v46, v44);
    }
    strcpy((char *)v45 + v44, ":ShotInfo");
    sub_1D52917E4(a1, v116);
    LODWORD(__src[0]) = v43;
    sub_1D5284D2C((_QWORD *)v116[0], (unsigned int *)__src, (uint64_t *)v121);
    v48 = (std::__shared_weak_count *)v116[1];
    if (v116[1])
    {
      v49 = (unint64_t *)((char *)v116[1] + 8);
      do
        v50 = __ldaxr(v49);
      while (__stlxr(v50 - 1, v49));
      if (!v50)
      {
        ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
        std::__shared_weak_count::__release_weak(v48);
      }
    }
    v51 = (unsigned __int16 *)v121[0];
    v52 = *((unsigned __int16 *)v121[0] + 2);
    if (v52 >= 0x1C1)
    {
      LOWORD(v47) = *((_WORD *)v121[0] + 1);
      v53 = exp2f((float)v47 * 0.03125) * 100.0;
      v54 = (float)(exp2f((float)v52 * 0.03125) * 100.0) * 0.03125;
      v55 = fabsf(v54);
      if (fabsf(v53) == INFINITY || v55 == INFINITY)
      {
LABEL_117:
        v121[1] = v51;
        operator delete(v51);
LABEL_118:
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        goto LABEL_236;
      }
      v57 = (float)(v54 * v53) / 100.0;
      v58 = 4000000000.0;
      if (v57 <= 4000000000.0)
        v58 = v57;
      v59 = v57 < 0.0;
      v60 = 0.0;
      if (!v59)
        v60 = v58;
      LODWORD(__src[0]) = rintf(v60);
      v116[0] = &__p;
      v61 = sub_1D52B3E7C((uint64_t **)(a1 + 192), (void **)&__p.__r_.__value_.__l.__data_, (uint64_t)&unk_1D544A5C4, (__int128 **)v116);
      sub_1D5282A44((char *)v61 + 56, (char *)__src, (uint64_t)__src + 4, 1uLL);
      v51 = (unsigned __int16 *)v121[0];
    }
    LODWORD(__src[0]) = v51[7];
    v116[0] = &__p;
    v62 = sub_1D52B3E7C((uint64_t **)(a1 + 168), (void **)&__p.__r_.__value_.__l.__data_, (uint64_t)&unk_1D544A5C4, (__int128 **)v116);
    sub_1D5282A44((char *)v62 + 56, (char *)__src, (uint64_t)__src + 4, 1uLL);
    v51 = (unsigned __int16 *)v121[0];
    if (!v121[0])
      goto LABEL_118;
    goto LABEL_117;
  }
  if (v6 == 7 && a3[1] == 2)
  {
    memset(&__str, 0, sizeof(__str));
    if (sub_1D52ADD1C(a1, (uint64_t)a3, &__str, 1))
    {
      v7 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      p_str = &__str;
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      {
        v7 = __str.__r_.__value_.__l.__size_;
        p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
      }
      if (v7)
      {
        v9 = (unsigned __int8 *)p_str + v7;
        v10 = p_str;
        while (2)
        {
          for (i = 0; i != 11; ++i)
          {
            if (v10->__r_.__value_.__s.__data_[0] == a0123456789[i])
            {
              if (v10 != (std::string *)v9 && (char *)v10 - (char *)p_str != -1)
              {
                LODWORD(v121[1]) = 0;
                v121[0] = 0;
                std::string::basic_string(&__p, &__str, (char *)v10 - (char *)p_str, v7 - ((char *)v10 - (char *)p_str), (std::allocator<char> *)v116);
                if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                  v93 = &__p;
                else
                  v93 = (std::string *)__p.__r_.__value_.__r.__words[0];
                sscanf((const char *)v93, "%d.%d.%d", v121, (char *)v121 + 4, &v121[1]);
                v94 = 1000000 * SLODWORD(v121[0]);
                if (v94 == (int)v94)
                {
                  v95 = 1000 * SHIDWORD(v121[0]);
                  if (v95 == (int)v95)
                  {
                    v96 = __OFADD__((_DWORD)v94, (_DWORD)v95);
                    v97 = v94 + v95;
                    if (!v96)
                    {
                      v96 = __OFADD__(v97, v121[1]);
                      v98 = v97 + LODWORD(v121[1]);
                      if (!v96)
                        *(_DWORD *)(a1 + 1252) = v98;
                    }
                  }
                }
                if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
                  operator delete(__p.__r_.__value_.__l.__data_);
              }
              goto LABEL_197;
            }
          }
          v10 = (std::string *)((char *)v10 + 1);
          if (v10 != (std::string *)v9)
            continue;
          break;
        }
      }
    }
LABEL_197:
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__str.__r_.__value_.__l.__data_);
  }
}

void sub_1D52B8444(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,uint64_t a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41)
{
  if (a33 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D52B86A0(uint64_t a1, uint64_t a2, unsigned int a3)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  _DWORD *v8;
  unsigned int v9;
  BOOL v10;
  uint64_t v11;
  int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  _QWORD *v24;
  std::__shared_weak_count *v25;
  void *__p[3];

  if (a3 - 260 < 0xFFFFFF00)
    return 0;
  sub_1D52917E4(a1, &v24);
  v23 = a3;
  sub_1D5284E3C(v24, &v23, (uint64_t *)__p);
  v5 = v25;
  if (v25)
  {
    p_shared_owners = (unint64_t *)&v25->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  v8 = __p[0];
  v9 = *((_DWORD *)__p[0] + 1);
  if (v9)
    v10 = a3 >= 6;
  else
    v10 = 0;
  if (v10)
  {
    v13 = 1;
    v14 = 2;
    v15 = 5;
    v11 = 1;
    while (v8[v14] == v13 && v8[v14 + 1] >= 8u)
    {
      v16 = v8[v14 + 2];
      if (v16)
      {
        v17 = 0;
        do
        {
          v18 = v17 + v15;
          if (v17 + v15 + 2 >= a3)
            break;
          v19 = v8[v18 + 1];
          if (v19 < 1 || (v20 = v17 + 2, v21 = v20 + v15, v19 + v20 + v15 > a3))
          {
LABEL_33:
            v11 = 0;
            goto LABEL_12;
          }
          v22 = v8[v18];
          if (v22 == 259)
          {
            *(_BYTE *)(a1 + 1250) = v8[v21] != 0;
          }
          else if (v22 == 515)
          {
            if (v19 != 1)
              goto LABEL_33;
            *(_BYTE *)(a1 + 1249) = v8[v21] != 0;
          }
          v17 = v19 + v20;
          --v16;
        }
        while (v16);
      }
      else
      {
        v17 = 0;
      }
      if (++v13 <= v9)
      {
        v14 = v17 + v15;
        v15 += v17 + 3;
        if (v15 < a3)
          continue;
      }
      goto LABEL_12;
    }
  }
  v11 = 1;
LABEL_12:
  __p[1] = v8;
  operator delete(v8);
  return v11;
}

void sub_1D52B8848(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1D5282EB4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52B885C(uint64_t a1)
{
  uint64_t v2;
  void *__p[2];
  char v5;

  if (getenv("RAWCAMERA_DUALPIXEL_SECOND_IMAGE"))
    sub_1D52850A0(__p, "IFD4");
  else
    sub_1D52850A0(__p, "IFD3");
  v2 = sub_1D52B0BBC(a1, __p);
  if (v5 < 0)
    operator delete(__p[0]);
  return v2;
}

void sub_1D52B88E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D52B8904(uint64_t a1)
{
  uint64_t v2;
  void *__p[2];
  char v5;

  if (getenv("RAWCAMERA_DUALPIXEL_SECOND_IMAGE"))
    sub_1D52850A0(__p, "IFD4");
  else
    sub_1D52850A0(__p, "IFD3");
  v2 = sub_1D52B0C2C(a1, __p);
  if (v5 < 0)
    operator delete(__p[0]);
  return v2;
}

void sub_1D52B898C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

unint64_t sub_1D52B89AC(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 1210) | ((unint64_t)*(unsigned __int16 *)(a1 + 1212) << 32);
}

uint64_t sub_1D52B89BC(uint64_t a1)
{
  return *(_QWORD *)(a1 + 1260);
}

unint64_t sub_1D52B89C8(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 1214) | ((unint64_t)*(unsigned __int16 *)(a1 + 1216) << 32);
}

uint64_t sub_1D52B89F8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 1252);
}

double sub_1D52B8A00(uint64_t a1)
{
  return (double)*(int *)(a1 + 1260) / (double)(*(unsigned __int16 *)(a1 + 1218) - *(unsigned __int16 *)(a1 + 1214) + 1);
}

void sub_1D52B8A5C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  uint64_t v15;
  int v16;
  unint64_t v17;
  unint64_t v18;
  __int128 v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  int v28;
  unint64_t v29;
  unint64_t v30;
  __int128 v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  char *v37;
  __int128 v38;
  uint64_t v39;
  int v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  __int128 v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  __int128 v59;
  uint64_t v60;
  int v61;
  unint64_t v62;
  __int128 v63;
  unint64_t v64;
  unint64_t v65;
  char *v66;
  __int128 v67;
  uint64_t v68;
  int v69;
  void *__p[2];
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t *v76;
  char v77[16];
  char __s[16];
  char __str[16];
  uint64_t v80;

  v80 = *MEMORY[0x1E0C80C00];
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  v4 = sub_1D52E36B8(a1);
  snprintf(__str, 0x10uLL, "%u", v4);
  sub_1D52850A0(__p, "cr2");
  v5 = a2[2];
  v6 = a2[1];
  if (v6 >= v5)
  {
    v8 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v6 - *a2) >> 3);
    v9 = v8 + 1;
    if (v8 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v10 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *a2) >> 3);
    if (2 * v10 > v9)
      v9 = 2 * v10;
    if (v10 >= 0x555555555555555)
      v11 = 0xAAAAAAAAAAAAAAALL;
    else
      v11 = v9;
    v76 = a2 + 2;
    if (v11)
      v12 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v11);
    else
      v12 = 0;
    v13 = &v12[24 * v8];
    v72 = v12;
    v73 = v13;
    v75 = &v12[24 * v11];
    v14 = *(_OWORD *)__p;
    *((_QWORD *)v13 + 2) = v71;
    *(_OWORD *)v13 = v14;
    __p[1] = 0;
    v71 = 0;
    __p[0] = 0;
    v74 = v13 + 24;
    sub_1D5293D58(a2, &v72);
    v15 = a2[1];
    sub_1D5293F24((uint64_t)&v72);
    v16 = SHIBYTE(v71);
    a2[1] = v15;
    if (v16 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v7 = *(_OWORD *)__p;
    *(_QWORD *)(v6 + 16) = v71;
    *(_OWORD *)v6 = v7;
    a2[1] = v6 + 24;
  }
  sub_1D52850A0(__p, "canon");
  v18 = a2[1];
  v17 = a2[2];
  if (v18 >= v17)
  {
    v20 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v18 - *a2) >> 3);
    v21 = v20 + 1;
    if (v20 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v22 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v17 - *a2) >> 3);
    if (2 * v22 > v21)
      v21 = 2 * v22;
    if (v22 >= 0x555555555555555)
      v23 = 0xAAAAAAAAAAAAAAALL;
    else
      v23 = v21;
    v76 = a2 + 2;
    if (v23)
      v24 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v23);
    else
      v24 = 0;
    v25 = &v24[24 * v20];
    v72 = v24;
    v73 = v25;
    v75 = &v24[24 * v23];
    v26 = *(_OWORD *)__p;
    *((_QWORD *)v25 + 2) = v71;
    *(_OWORD *)v25 = v26;
    __p[1] = 0;
    v71 = 0;
    __p[0] = 0;
    v74 = v25 + 24;
    sub_1D5293D58(a2, &v72);
    v27 = a2[1];
    sub_1D5293F24((uint64_t)&v72);
    v28 = SHIBYTE(v71);
    a2[1] = v27;
    if (v28 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v19 = *(_OWORD *)__p;
    *(_QWORD *)(v18 + 16) = v71;
    *(_OWORD *)v18 = v19;
    a2[1] = v18 + 24;
  }
  sub_1D52850A0(__p, __str);
  v30 = a2[1];
  v29 = a2[2];
  if (v30 >= v29)
  {
    v32 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v30 - *a2) >> 3);
    v33 = v32 + 1;
    if (v32 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v34 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v29 - *a2) >> 3);
    if (2 * v34 > v33)
      v33 = 2 * v34;
    if (v34 >= 0x555555555555555)
      v35 = 0xAAAAAAAAAAAAAAALL;
    else
      v35 = v33;
    v76 = a2 + 2;
    if (v35)
      v36 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v35);
    else
      v36 = 0;
    v37 = &v36[24 * v32];
    v72 = v36;
    v73 = v37;
    v75 = &v36[24 * v35];
    v38 = *(_OWORD *)__p;
    *((_QWORD *)v37 + 2) = v71;
    *(_OWORD *)v37 = v38;
    __p[1] = 0;
    v71 = 0;
    __p[0] = 0;
    v74 = v37 + 24;
    sub_1D5293D58(a2, &v72);
    v39 = a2[1];
    sub_1D5293F24((uint64_t)&v72);
    v40 = SHIBYTE(v71);
    a2[1] = v39;
    if (v40 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v31 = *(_OWORD *)__p;
    *(_QWORD *)(v30 + 16) = v71;
    *(_OWORD *)v30 = v31;
    a2[1] = v30 + 24;
  }
  if (sub_1D52E2CEC(a1))
  {
    sub_1D52850A0(__p, "sraw");
    v42 = a2[1];
    v41 = a2[2];
    if (v42 >= v41)
    {
      v43 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v42 - *a2) >> 3);
      v44 = v43 + 1;
      if (v43 + 1 > 0xAAAAAAAAAAAAAAALL)
        sub_1D5282B8C();
      v45 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v41 - *a2) >> 3);
      if (2 * v45 > v44)
        v44 = 2 * v45;
      if (v45 >= 0x555555555555555)
        v46 = 0xAAAAAAAAAAAAAAALL;
      else
        v46 = v44;
      v76 = a2 + 2;
      if (!v46)
      {
        v57 = 0;
        goto LABEL_75;
      }
      goto LABEL_73;
    }
LABEL_65:
    v63 = *(_OWORD *)__p;
    *(_QWORD *)(v42 + 16) = v71;
    *(_OWORD *)v42 = v63;
    a2[1] = v42 + 24;
    return;
  }
  v47 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 440))(a1);
  v48 = HIDWORD(v47);
  snprintf(__s, 0x10uLL, "%d", v47);
  snprintf(v77, 0x10uLL, "%d", v48);
  sub_1D52850A0(__p, __s);
  v50 = a2[1];
  v49 = a2[2];
  if (v50 >= v49)
  {
    v52 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v50 - *a2) >> 3);
    v53 = v52 + 1;
    if (v52 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v54 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v49 - *a2) >> 3);
    if (2 * v54 > v53)
      v53 = 2 * v54;
    if (v54 >= 0x555555555555555)
      v55 = 0xAAAAAAAAAAAAAAALL;
    else
      v55 = v53;
    v76 = a2 + 2;
    if (v55)
      v56 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v55);
    else
      v56 = 0;
    v58 = &v56[24 * v52];
    v72 = v56;
    v73 = v58;
    v75 = &v56[24 * v55];
    v59 = *(_OWORD *)__p;
    *((_QWORD *)v58 + 2) = v71;
    *(_OWORD *)v58 = v59;
    __p[1] = 0;
    v71 = 0;
    __p[0] = 0;
    v74 = v58 + 24;
    sub_1D5293D58(a2, &v72);
    v60 = a2[1];
    sub_1D5293F24((uint64_t)&v72);
    v61 = SHIBYTE(v71);
    a2[1] = v60;
    if (v61 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v51 = *(_OWORD *)__p;
    *(_QWORD *)(v50 + 16) = v71;
    *(_OWORD *)v50 = v51;
    a2[1] = v50 + 24;
  }
  sub_1D52850A0(__p, v77);
  v42 = a2[1];
  v62 = a2[2];
  if (v42 < v62)
    goto LABEL_65;
  v43 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v42 - *a2) >> 3);
  v64 = v43 + 1;
  if (v43 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_1D5282B8C();
  v65 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v62 - *a2) >> 3);
  if (2 * v65 > v64)
    v64 = 2 * v65;
  if (v65 >= 0x555555555555555)
    v46 = 0xAAAAAAAAAAAAAAALL;
  else
    v46 = v64;
  v76 = a2 + 2;
  if (v46)
  {
LABEL_73:
    v57 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v46);
    goto LABEL_75;
  }
  v57 = 0;
LABEL_75:
  v66 = &v57[24 * v43];
  v72 = v57;
  v73 = v66;
  v75 = &v57[24 * v46];
  v67 = *(_OWORD *)__p;
  *((_QWORD *)v66 + 2) = v71;
  *(_OWORD *)v66 = v67;
  __p[1] = 0;
  v71 = 0;
  __p[0] = 0;
  v74 = v66 + 24;
  sub_1D5293D58(a2, &v72);
  v68 = a2[1];
  sub_1D5293F24((uint64_t)&v72);
  v69 = SHIBYTE(v71);
  a2[1] = v68;
  if (v69 < 0)
    operator delete(__p[0]);
}

void sub_1D52B9108(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  sub_1D5293F24((uint64_t)&a16);
  if (a15 < 0)
    operator delete(__p);
  sub_1D5293CCC((void ***)&__p);
  _Unwind_Resume(a1);
}

id sub_1D52B918C(uint64_t a1)
{
  void *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  const char *v9;
  void *v10;
  void *v11;
  const char *v12;
  void *v13;
  void *v14;
  const char *v15;
  void *v16;
  const char *v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v27;
  _QWORD v28[5];
  _QWORD v29[5];
  _QWORD v30[5];
  _QWORD v31[2];
  _QWORD v32[2];
  _QWORD v33[2];
  _QWORD v34[2];
  _QWORD v35[2];
  _QWORD v36[2];
  _QWORD v37[80];
  _QWORD v38[82];

  v38[80] = *MEMORY[0x1E0C80C00];
  sub_1D52A947C();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)objc_msgSend_mutableCopy(v2, v3, v4, v5, v6);

  v37[0] = &unk_1E99C8E38;
  v36[0] = CFSTR("CanonCameraSettings");
  v8 = MEMORY[0x1E0C809B0];
  v35[0] = CFSTR("Name");
  v35[1] = CFSTR("Namespace");
  v30[0] = MEMORY[0x1E0C809B0];
  v30[1] = 3221225472;
  v30[2] = sub_1D52B9B4C;
  v30[3] = &unk_1E9972460;
  v30[4] = a1;
  v27 = (void *)MEMORY[0x1D82721B4](v30);
  v36[1] = v27;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v9, (uint64_t)v36, (uint64_t)v35, 2);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v38[0] = v10;
  v37[1] = &unk_1E99C8E50;
  v33[1] = CFSTR("Namespace");
  v34[0] = CFSTR("CanonFocalLength");
  v33[0] = CFSTR("Name");
  v29[0] = v8;
  v29[1] = 3221225472;
  v29[2] = sub_1D52B9EC8;
  v29[3] = &unk_1E9972460;
  v29[4] = a1;
  v11 = (void *)MEMORY[0x1D82721B4](v29);
  v34[1] = v11;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v12, (uint64_t)v34, (uint64_t)v33, 2);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v38[1] = v13;
  v38[2] = &unk_1E99CCE20;
  v37[2] = &unk_1E99C8E68;
  v37[3] = &unk_1E99C8E80;
  v38[3] = &unk_1E99CCE48;
  v38[4] = &unk_1E99CCE70;
  v37[4] = &unk_1E99C8E98;
  v37[5] = &unk_1E99C8EB0;
  v38[5] = &unk_1E99CCE98;
  v38[6] = &unk_1E99CCEC0;
  v37[6] = &unk_1E99C8EC8;
  v37[7] = &unk_1E99C8EE0;
  v38[7] = &unk_1E99CCEE8;
  v38[8] = &unk_1E99CCF10;
  v37[8] = &unk_1E99C8EF8;
  v37[9] = &unk_1E99C8F10;
  v38[9] = &unk_1E99CCF38;
  v38[10] = &unk_1E99CCF60;
  v37[10] = &unk_1E99C8E08;
  v37[11] = &unk_1E99C8F28;
  v38[11] = &unk_1E99CCF88;
  v38[12] = &unk_1E99CCFB0;
  v37[12] = &unk_1E99C8F40;
  v37[13] = &unk_1E99C8F58;
  v38[13] = &unk_1E99CCFD8;
  v38[14] = &unk_1E99CD000;
  v37[14] = &unk_1E99C8F70;
  v37[15] = &unk_1E99C8F88;
  v38[15] = &unk_1E99CD028;
  v38[16] = &unk_1E99CD050;
  v37[16] = &unk_1E99C8FA0;
  v37[17] = &unk_1E99C8FB8;
  v38[17] = &unk_1E99CD078;
  v38[18] = &unk_1E99CD0A0;
  v37[18] = &unk_1E99C8FD0;
  v37[19] = &unk_1E99C8FE8;
  v38[19] = &unk_1E99CD0C8;
  v38[20] = &unk_1E99CD0F0;
  v37[20] = &unk_1E99C9000;
  v37[21] = &unk_1E99C9018;
  v38[21] = &unk_1E99CD118;
  v38[22] = &unk_1E99CD140;
  v37[22] = &unk_1E99C9030;
  v37[23] = &unk_1E99C9048;
  v38[23] = &unk_1E99CD168;
  v38[24] = &unk_1E99CD190;
  v37[24] = &unk_1E99C9060;
  v37[25] = &unk_1E99C9078;
  v38[25] = &unk_1E99CD1B8;
  v38[26] = &unk_1E99CD1E0;
  v37[26] = &unk_1E99C9090;
  v37[27] = &unk_1E99C90A8;
  v38[27] = &unk_1E99CD208;
  v38[28] = &unk_1E99CD230;
  v37[28] = &unk_1E99C90C0;
  v37[29] = &unk_1E99C90D8;
  v38[29] = &unk_1E99CD258;
  v38[30] = &unk_1E99CD280;
  v37[30] = &unk_1E99C90F0;
  v37[31] = &unk_1E99C9108;
  v38[31] = &unk_1E99CD2A8;
  v38[32] = &unk_1E99CD2D0;
  v37[32] = &unk_1E99C9120;
  v37[33] = &unk_1E99C9138;
  v38[33] = &unk_1E99CD2F8;
  v38[34] = &unk_1E99CD320;
  v37[34] = &unk_1E99C9150;
  v37[35] = &unk_1E99C9168;
  v38[35] = &unk_1E99CD348;
  v38[36] = &unk_1E99CD370;
  v37[36] = &unk_1E99C9180;
  v37[37] = &unk_1E99C9198;
  v38[37] = &unk_1E99CD398;
  v38[38] = &unk_1E99CD3C0;
  v37[38] = &unk_1E99C91B0;
  v37[39] = &unk_1E99C91C8;
  v38[39] = &unk_1E99CD3E8;
  v38[40] = &unk_1E99CD410;
  v37[40] = &unk_1E99C91E0;
  v37[41] = &unk_1E99C91F8;
  v38[41] = &unk_1E99CD438;
  v38[42] = &unk_1E99CD460;
  v37[42] = &unk_1E99C9210;
  v37[43] = &unk_1E99C9228;
  v38[43] = &unk_1E99CD488;
  v38[44] = &unk_1E99CD4B0;
  v37[44] = &unk_1E99C9240;
  v37[45] = &unk_1E99C9258;
  v38[45] = &unk_1E99CD4D8;
  v38[46] = &unk_1E99CD500;
  v37[46] = &unk_1E99C9270;
  v37[47] = &unk_1E99C9288;
  v38[47] = &unk_1E99CD528;
  v38[48] = &unk_1E99CD550;
  v37[48] = &unk_1E99C92A0;
  v37[49] = &unk_1E99C92B8;
  v38[49] = &unk_1E99CD578;
  v38[50] = &unk_1E99CD5A0;
  v37[50] = &unk_1E99C92D0;
  v37[51] = &unk_1E99C92E8;
  v38[51] = &unk_1E99CD5C8;
  v38[52] = &unk_1E99CD5F0;
  v37[52] = &unk_1E99C9300;
  v37[53] = &unk_1E99C9318;
  v38[53] = &unk_1E99CD618;
  v38[54] = &unk_1E99CD640;
  v37[54] = &unk_1E99C9330;
  v37[55] = &unk_1E99C9348;
  v38[55] = &unk_1E99CD668;
  v38[56] = &unk_1E99CD690;
  v37[56] = &unk_1E99C9360;
  v37[57] = &unk_1E99C9378;
  v38[57] = &unk_1E99CD6B8;
  v38[58] = &unk_1E99CD6E0;
  v37[58] = &unk_1E99C9390;
  v37[59] = &unk_1E99C93A8;
  v38[59] = &unk_1E99CD708;
  v38[60] = &unk_1E99CD730;
  v37[60] = &unk_1E99C93C0;
  v37[61] = &unk_1E99C93D8;
  v31[1] = CFSTR("Namespace");
  v32[0] = CFSTR("SensorInfo");
  v31[0] = CFSTR("Name");
  v28[0] = v8;
  v28[1] = 3221225472;
  v28[2] = sub_1D52B9F7C;
  v28[3] = &unk_1E9972460;
  v28[4] = a1;
  v14 = (void *)MEMORY[0x1D82721B4](v28);
  v32[1] = v14;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v15, (uint64_t)v32, (uint64_t)v31, 2);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v38[61] = v16;
  v38[62] = &unk_1E99CD758;
  v37[62] = &unk_1E99C93F0;
  v37[63] = &unk_1E99C9408;
  v37[64] = &unk_1E99C9420;
  v38[63] = &unk_1E99CD780;
  v38[64] = &unk_1E99CD7A8;
  v37[65] = &unk_1E99C9438;
  v38[65] = &unk_1E99CD7D0;
  v37[66] = &unk_1E99C9450;
  v38[66] = &unk_1E99CD7F8;
  v37[67] = &unk_1E99C9468;
  v38[67] = &unk_1E99CD820;
  v37[68] = &unk_1E99C9480;
  v38[68] = &unk_1E99CD848;
  v37[69] = &unk_1E99C9498;
  v38[69] = &unk_1E99CD870;
  v37[70] = &unk_1E99C94B0;
  v38[70] = &unk_1E99CD898;
  v37[71] = &unk_1E99C94C8;
  v38[71] = &unk_1E99CD8C0;
  v37[72] = &unk_1E99C94E0;
  v38[72] = &unk_1E99CD8E8;
  v37[73] = &unk_1E99C94F8;
  v38[73] = &unk_1E99CD910;
  v37[74] = &unk_1E99C9510;
  v38[74] = &unk_1E99CD938;
  v37[75] = &unk_1E99C9528;
  v38[75] = &unk_1E99CD960;
  v37[76] = &unk_1E99C9540;
  v38[76] = &unk_1E99CD988;
  v37[77] = &unk_1E99C9558;
  v38[77] = &unk_1E99CD9B0;
  v37[78] = &unk_1E99C9570;
  v38[78] = &unk_1E99CD9D8;
  v37[79] = &unk_1E99C9588;
  v38[79] = &unk_1E99CDA00;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v17, (uint64_t)v38, (uint64_t)v37, 80);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addEntriesFromDictionary_(v7, v19, (uint64_t)v18, v20, v21);

  objc_msgSend_dictionaryWithDictionary_(MEMORY[0x1E0C99D80], v22, (uint64_t)v7, v23, v24);
  v25 = (void *)objc_claimAutoreleasedReturnValue();

  return v25;
}

void sub_1D52B9ADC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_1D52B9B50(uint64_t a1, const char *a2)
{
  _QWORD v3[38];
  _QWORD v4[39];

  v4[38] = *MEMORY[0x1E0C80C00];
  v3[0] = &unk_1E99C95A0;
  v3[1] = &unk_1E99C8E38;
  v4[0] = &unk_1E99CDA28;
  v4[1] = &unk_1E99CDA50;
  v3[2] = &unk_1E99C8E50;
  v3[3] = &unk_1E99C8E68;
  v4[2] = &unk_1E99CDA78;
  v4[3] = &unk_1E99CDAA0;
  v3[4] = &unk_1E99C8E80;
  v3[5] = &unk_1E99C8E98;
  v4[4] = &unk_1E99CDAC8;
  v4[5] = &unk_1E99CDAF0;
  v3[6] = &unk_1E99C8EC8;
  v3[7] = &unk_1E99C8EF8;
  v4[6] = &unk_1E99CDB18;
  v4[7] = &unk_1E99CDB40;
  v3[8] = &unk_1E99C8F10;
  v3[9] = &unk_1E99C95B8;
  v4[8] = &unk_1E99CDB68;
  v4[9] = &unk_1E99CDB90;
  v3[10] = &unk_1E99C8E08;
  v3[11] = &unk_1E99C8F28;
  v4[10] = &unk_1E99CDBB8;
  v4[11] = &unk_1E99CDBE0;
  v3[12] = &unk_1E99C8F40;
  v3[13] = &unk_1E99C8F58;
  v4[12] = &unk_1E99CDC08;
  v4[13] = &unk_1E99CDC30;
  v3[14] = &unk_1E99C8F70;
  v3[15] = &unk_1E99C8F88;
  v4[14] = &unk_1E99CDC58;
  v4[15] = &unk_1E99CDC80;
  v3[16] = &unk_1E99C8FA0;
  v3[17] = &unk_1E99C8FB8;
  v4[16] = &unk_1E99CDCA8;
  v4[17] = &unk_1E99CDCD0;
  v3[18] = &unk_1E99C95D0;
  v3[19] = &unk_1E99C95E8;
  v4[18] = &unk_1E99CDCF8;
  v4[19] = &unk_1E99CDD20;
  v3[20] = &unk_1E99C9600;
  v3[21] = &unk_1E99C9618;
  v4[20] = &unk_1E99CDD48;
  v4[21] = &unk_1E99CDD70;
  v3[22] = &unk_1E99C9630;
  v3[23] = &unk_1E99C8FE8;
  v4[22] = &unk_1E99CDD98;
  v4[23] = &unk_1E99CDDC0;
  v3[24] = &unk_1E99C9648;
  v3[25] = &unk_1E99C9000;
  v4[24] = &unk_1E99CDDE8;
  v4[25] = &unk_1E99CDE10;
  v3[26] = &unk_1E99C9018;
  v3[27] = &unk_1E99C9660;
  v4[26] = &unk_1E99CDE38;
  v4[27] = &unk_1E99CDE60;
  v3[28] = &unk_1E99C9678;
  v3[29] = &unk_1E99C9690;
  v4[28] = &unk_1E99CDE88;
  v4[29] = &unk_1E99CDEB0;
  v3[30] = &unk_1E99C9048;
  v3[31] = &unk_1E99C9060;
  v4[30] = &unk_1E99CDED8;
  v4[31] = &unk_1E99CDF00;
  v3[32] = &unk_1E99C9078;
  v3[33] = &unk_1E99C90A8;
  v4[32] = &unk_1E99CDF28;
  v4[33] = &unk_1E99CDF50;
  v3[34] = &unk_1E99C90C0;
  v3[35] = &unk_1E99C90D8;
  v4[34] = &unk_1E99CDF78;
  v4[35] = &unk_1E99CDFA0;
  v3[36] = &unk_1E99C96A8;
  v3[37] = &unk_1E99C96C0;
  v4[36] = &unk_1E99CDFC8;
  v4[37] = &unk_1E99CDFF0;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], a2, (uint64_t)v4, (uint64_t)v3, 38);
  return (id)objc_claimAutoreleasedReturnValue();
}

id sub_1D52B9ECC(uint64_t a1, const char *a2)
{
  _QWORD v3[4];
  _QWORD v4[5];

  v4[4] = *MEMORY[0x1E0C80C00];
  v3[0] = &unk_1E99C95A0;
  v3[1] = &unk_1E99C8E38;
  v4[0] = &unk_1E99CE018;
  v4[1] = &unk_1E99CE040;
  v3[2] = &unk_1E99C8E50;
  v3[3] = &unk_1E99C8E68;
  v4[2] = &unk_1E99CE068;
  v4[3] = &unk_1E99CE090;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], a2, (uint64_t)v4, (uint64_t)v3, 4);
  return (id)objc_claimAutoreleasedReturnValue();
}

id sub_1D52B9F80(uint64_t a1, const char *a2)
{
  _QWORD v3[11];
  _QWORD v4[12];

  v4[11] = *MEMORY[0x1E0C80C00];
  v3[0] = &unk_1E99C95A0;
  v3[1] = &unk_1E99C8E38;
  v4[0] = &unk_1E99CE0B8;
  v4[1] = &unk_1E99CE0E0;
  v3[2] = &unk_1E99C8E50;
  v3[3] = &unk_1E99C8E68;
  v4[2] = &unk_1E99CE108;
  v4[3] = &unk_1E99CE130;
  v3[4] = &unk_1E99C8E80;
  v3[5] = &unk_1E99C8E98;
  v4[4] = &unk_1E99CE158;
  v4[5] = &unk_1E99CE180;
  v3[6] = &unk_1E99C8EB0;
  v3[7] = &unk_1E99C8EC8;
  v4[6] = &unk_1E99CE1A8;
  v4[7] = &unk_1E99CE1D0;
  v3[8] = &unk_1E99C8EE0;
  v3[9] = &unk_1E99C8EF8;
  v4[8] = &unk_1E99CE1F8;
  v4[9] = &unk_1E99CE220;
  v3[10] = &unk_1E99C8F10;
  v4[10] = &unk_1E99CE248;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], a2, (uint64_t)v4, (uint64_t)v3, 11);
  return (id)objc_claimAutoreleasedReturnValue();
}

void sub_1D52BA0C4(uint64_t a1)
{
  sub_1D52B7290(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52BA0E8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 1249);
}

uint64_t sub_1D52BA0F0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 1256);
}

uint64_t sub_1D52BA0F8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 1250);
}

char *sub_1D52BA100(char *result, unsigned __int16 *a2, unsigned __int16 *a3, unint64_t a4)
{
  char *v6;
  _DWORD *v7;
  int v8;

  if (a4)
  {
    v6 = result;
    result = sub_1D5282B4C(result, a4);
    v7 = (_DWORD *)*((_QWORD *)v6 + 1);
    while (a2 != a3)
    {
      v8 = *a2++;
      *v7++ = v8;
    }
    *((_QWORD *)v6 + 1) = v7;
  }
  return result;
}

void sub_1D52BA154(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D52BA170(uint64_t *a1@<X1>, char *a2@<X2>, void **a3@<X3>, void **a4@<X4>, _QWORD *a5@<X8>)
{
  _QWORD *v10;

  v10 = operator new(0x518uLL);
  sub_1D52BA1F0((uint64_t)v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;
  sub_1D5285658((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1D52BA1DC(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52BA1F0(uint64_t a1, uint64_t *a2, char *a3, void **a4, void **a5)
{
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = &unk_1E9972B60;
  *(_QWORD *)(a1 + 8) = 0;
  sub_1D52E26F8(a1 + 24, a2, *a3, *a4, *a5);
  *(_QWORD *)(a1 + 24) = off_1E9972800;
  *(_WORD *)(a1 + 1273) = 0;
  *(_DWORD *)(a1 + 1276) = 0;
  *(_BYTE *)(a1 + 1280) = 0;
  *(_OWORD *)(a1 + 1284) = 0u;
  return a1;
}

void sub_1D52BA25C(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52BA270(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9972B60;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52BA284(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9972B60;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52BA2B8(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a1 + 24) + 16))(a1 + 24);
}

_OWORD *sub_1D52BA2C8(uint64_t **a1, void **a2, uint64_t a3, _OWORD **a4)
{
  void **v6;
  _OWORD *v7;
  uint64_t **v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD v12[2];
  char v13;
  uint64_t v14;

  v6 = (void **)sub_1D52B3CFC((uint64_t)a1, &v14, a2);
  v7 = *v6;
  if (!*v6)
  {
    v8 = (uint64_t **)v6;
    v7 = operator new(0x50uLL);
    v12[1] = a1 + 1;
    v9 = *a4;
    v10 = *((_QWORD *)*a4 + 2);
    v7[2] = **a4;
    *((_QWORD *)v7 + 6) = v10;
    v9[1] = 0;
    v9[2] = 0;
    *v9 = 0;
    *((_QWORD *)v7 + 8) = 0;
    *((_QWORD *)v7 + 9) = 0;
    *((_QWORD *)v7 + 7) = 0;
    v13 = 1;
    sub_1D528EFCC(a1, v14, v8, (uint64_t *)v7);
    v12[0] = 0;
    sub_1D52B3FB8((uint64_t)v12, 0);
  }
  return v7;
}

id sub_1D52BA38C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const char *v28;
  void *v29;
  const char *v30;
  uint64_t v31;
  void *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[11];
  _QWORD v43[2];

  v43[1] = *MEMORY[0x1E0C80C00];
  v5 = *MEMORY[0x1E0CBD388];
  v34 = *MEMORY[0x1E0CBD368];
  v35 = v5;
  v42[0] = MEMORY[0x1E0C9AAA0];
  v42[1] = CFSTR("com.konicaminolta.raw-image");
  v6 = *MEMORY[0x1E0CBD380];
  v36 = *MEMORY[0x1E0CBD348];
  v42[2] = CFSTR(".mrw.");
  v42[3] = &unk_1E99C96D8;
  v42[4] = &unk_1E99C96F0;
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], a2, (uint64_t)sub_1D52BA640, a4, a5, v34, v35, v36, v6, *MEMORY[0x1E0CBD370], *MEMORY[0x1E0CBD378]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v42[5] = v7;
  v37 = *MEMORY[0x1E0CBD330];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v8, (uint64_t)sub_1D52BA668, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v42[6] = v11;
  v38 = *MEMORY[0x1E0CBD350];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v12, (uint64_t)sub_1D52BA674, v13, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v42[7] = v15;
  v39 = *MEMORY[0x1E0CBD338];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v16, (uint64_t)sub_1D52E8DA4, v17, v18);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v42[8] = v19;
  v40 = *MEMORY[0x1E0CBD358];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v20, (uint64_t)sub_1D52BA680, v21, v22);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v42[9] = v23;
  v41 = *MEMORY[0x1E0CBD360];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v24, (uint64_t)sub_1D52BA68C, v25, v26);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v42[10] = v27;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v28, (uint64_t)v42, (uint64_t)&v34, 11);
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v43[0] = v29;
  objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v30, (uint64_t)v43, 1, v31);
  v32 = (void *)objc_claimAutoreleasedReturnValue();

  return v32;
}

void sub_1D52BA5E0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

BOOL sub_1D52BA640(unsigned int *a1, unint64_t a2)
{
  return a2 >= 4 && bswap32(*a1) == 5067341;
}

void sub_1D52BA668(const void *a1, uint64_t a2, uint64_t a3)
{
  sub_1D52E7A20(a1, a2, a3, &unk_1E9972BA0);
}

uint64_t sub_1D52BA674(os_signpost_id_t a1)
{
  return sub_1D52E8C40(a1);
}

uint64_t sub_1D52BA680(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1D52E7438(a1, a2, a3, &unk_1E9972BA0);
}

uint64_t sub_1D52BA68C(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1D52E9A7C(a1, a2, a3, &unk_1E9972BA0);
}

void sub_1D52BA698(uint64_t *a1@<X1>, char a2@<W2>, void *a3@<X3>, void *a4@<X4>, _OWORD *a5@<X8>)
{
  __int128 v8;
  id v9;
  id v10;
  char v11;

  v11 = a2;
  v10 = a3;
  v9 = a4;
  sub_1D52BBC24(a1, &v11, &v10, &v9, &v8);
  *a5 = v8;

}

void sub_1D52BA714(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{

  _Unwind_Resume(a1);
}

uint64_t sub_1D52BA730(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unsigned int v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  int v9;
  unsigned int v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  int v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unsigned int v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  void *v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  _QWORD *v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  _QWORD *v36;
  void *v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  std::__shared_weak_count *v41;
  unint64_t *v42;
  unint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  std::__shared_weak_count *v53;
  unint64_t *v54;
  unint64_t v55;
  std::__shared_weak_count *v56;
  unint64_t *v57;
  unint64_t v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  std::__shared_weak_count *v62;
  unint64_t *v63;
  unint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  unsigned int v68;
  unsigned int v69;
  BOOL v70;
  void *v71;
  std::__shared_weak_count *v72;
  unint64_t *v73;
  unint64_t v74;
  void *v76;
  void *exception;
  void *__p;
  std::__shared_weak_count *v79;
  char v80;
  void *v81[2];
  uint64_t v82;
  void *v83;
  std::__shared_weak_count *v84;
  uint64_t v85[3];
  void **p_p;

  sub_1D52917E4(a1, &v83);
  LODWORD(v81[0]) = 4;
  sub_1D5285164(v85, (uint64_t *)&v83, (uint64_t)v81, 0);
  v2 = v84;
  if (v84)
  {
    p_shared_owners = (unint64_t *)&v84->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  sub_1D52917E4(a1, &v83);
  v5 = sub_1D52847F8((uint64_t)v83);
  v6 = v84;
  if (v84)
  {
    v7 = (unint64_t *)&v84->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  sub_1D52917E4(a1, &v83);
  v9 = (*(uint64_t (**)(void *))(*(_QWORD *)v83 + 16))(v83);
  LODWORD(__p) = 8;
  LODWORD(v81[0]) = v9;
  v10 = *sub_1D52B3BEC(v81, (int *)&__p);
  v11 = v84;
  if (v84)
  {
    v12 = (unint64_t *)&v84->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v5 >= v10)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  *(_QWORD *)(a1 + 1208) = v5 + 8;
  while (1)
  {
    sub_1D52917E4(a1, &v83);
    v14 = (*(uint64_t (**)(void *))(*(_QWORD *)v83 + 48))(v83);
    v15 = *(_QWORD *)(a1 + 1208);
    v16 = v84;
    if (v84)
    {
      v17 = (unint64_t *)&v84->__shared_owners_;
      do
        v18 = __ldaxr(v17);
      while (__stlxr(v18 - 1, v17));
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    v19 = v14;
    if (v15 <= v14)
      break;
    sub_1D52917E4(a1, &v83);
    v20 = sub_1D52847F8((uint64_t)v83);
    v21 = v84;
    if (v84)
    {
      v22 = (unint64_t *)&v84->__shared_owners_;
      do
        v23 = __ldaxr(v22);
      while (__stlxr(v23 - 1, v22));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
        std::__shared_weak_count::__release_weak(v21);
      }
    }
    sub_1D52917E4(a1, &v83);
    v24 = sub_1D52847F8((uint64_t)v83);
    v25 = v84;
    if (v84)
    {
      v26 = (unint64_t *)&v84->__shared_owners_;
      do
        v27 = __ldaxr(v26);
      while (__stlxr(v27 - 1, v26));
      if (!v27)
      {
        ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
        std::__shared_weak_count::__release_weak(v25);
      }
    }
    switch(v20)
    {
      case 5263940:
        sub_1D52917E4(a1, &v83);
        *(_QWORD *)(a1 + 1184) = sub_1D5284850((uint64_t)v83);
        v44 = v84;
        if (v84)
        {
          v45 = (unint64_t *)&v84->__shared_owners_;
          do
            v46 = __ldaxr(v45);
          while (__stlxr(v46 - 1, v45));
          if (!v46)
          {
            ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
            std::__shared_weak_count::__release_weak(v44);
          }
        }
        sub_1D52917E4(a1, &v83);
        *(_WORD *)(a1 + 1194) = sub_1D528479C((uint64_t)v83);
        v47 = v84;
        if (v84)
        {
          v48 = (unint64_t *)&v84->__shared_owners_;
          do
            v49 = __ldaxr(v48);
          while (__stlxr(v49 - 1, v48));
          if (!v49)
          {
            ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
            std::__shared_weak_count::__release_weak(v47);
          }
        }
        sub_1D52917E4(a1, &v83);
        *(_WORD *)(a1 + 1192) = sub_1D528479C((uint64_t)v83);
        v50 = v84;
        if (v84)
        {
          v51 = (unint64_t *)&v84->__shared_owners_;
          do
            v52 = __ldaxr(v51);
          while (__stlxr(v52 - 1, v51));
          if (!v52)
          {
            ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
            std::__shared_weak_count::__release_weak(v50);
          }
        }
        sub_1D52917E4(a1, &v83);
        *(_WORD *)(a1 + 1198) = sub_1D528479C((uint64_t)v83);
        v53 = v84;
        if (v84)
        {
          v54 = (unint64_t *)&v84->__shared_owners_;
          do
            v55 = __ldaxr(v54);
          while (__stlxr(v55 - 1, v54));
          if (!v55)
          {
            ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
            std::__shared_weak_count::__release_weak(v53);
          }
        }
        sub_1D52917E4(a1, &v83);
        *(_WORD *)(a1 + 1196) = sub_1D528479C((uint64_t)v83);
        v56 = v84;
        if (v84)
        {
          v57 = (unint64_t *)&v84->__shared_owners_;
          do
            v58 = __ldaxr(v57);
          while (__stlxr(v58 - 1, v57));
          if (!v58)
          {
            ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
            std::__shared_weak_count::__release_weak(v56);
          }
        }
        sub_1D52917E4(a1, &v83);
        *(_BYTE *)(a1 + 1200) = sub_1D52846FC((uint64_t)v83);
        v59 = v84;
        if (v84)
        {
          v60 = (unint64_t *)&v84->__shared_owners_;
          do
            v61 = __ldaxr(v60);
          while (__stlxr(v61 - 1, v60));
          if (!v61)
          {
            ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
            std::__shared_weak_count::__release_weak(v59);
          }
        }
        sub_1D52917E4(a1, &v83);
        *(_BYTE *)(a1 + 1201) = sub_1D52846FC((uint64_t)v83);
        v62 = v84;
        if (v84)
        {
          v63 = (unint64_t *)&v84->__shared_owners_;
          do
            v64 = __ldaxr(v63);
          while (__stlxr(v64 - 1, v63));
          if (!v64)
          {
            ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
            std::__shared_weak_count::__release_weak(v62);
          }
        }
        sub_1D52917E4(a1, &v83);
        *(_BYTE *)(a1 + 1202) = sub_1D52846FC((uint64_t)v83);
        v65 = v84;
        if (v84)
        {
          v66 = (unint64_t *)&v84->__shared_owners_;
          do
            v67 = __ldaxr(v66);
          while (__stlxr(v67 - 1, v66));
          if (!v67)
          {
            ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
            std::__shared_weak_count::__release_weak(v65);
          }
        }
        v68 = *(unsigned __int16 *)(a1 + 1194);
        if ((v68 & 1) != 0
          || (v69 = *(unsigned __int16 *)(a1 + 1192), (v69 & 1) != 0)
          || (v68 - 1001 <= 0x2326 ? (v70 = v69 - 1001 >= 0x2327) : (v70 = 1),
              v70 || v68 < *(unsigned __int16 *)(a1 + 1198) || v69 < *(unsigned __int16 *)(a1 + 1196)))
        {
          v76 = __cxa_allocate_exception(0x10uLL);
          MEMORY[0x1D8271938](v76, "RawCameraException");
          __cxa_throw(v76, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
        }
        break;
      case 5526615:
        sub_1D52917E4(a1, v81);
        sub_1D52917E4(a1, &__p);
        LODWORD(p_p) = (*(uint64_t (**)(void *))(*(_QWORD *)__p + 48))(__p);
        sub_1D52B1CC8((uint64_t)&v83, (uint64_t *)v81, &p_p);
        v38 = v79;
        if (v79)
        {
          v39 = (unint64_t *)&v79->__shared_owners_;
          do
            v40 = __ldaxr(v39);
          while (__stlxr(v40 - 1, v39));
          if (!v40)
          {
            ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
            std::__shared_weak_count::__release_weak(v38);
          }
        }
        v41 = (std::__shared_weak_count *)v81[1];
        if (v81[1])
        {
          v42 = (unint64_t *)((char *)v81[1] + 8);
          do
            v43 = __ldaxr(v42);
          while (__stlxr(v43 - 1, v42));
          if (!v43)
          {
            ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
            std::__shared_weak_count::__release_weak(v41);
          }
        }
        sub_1D52A8080((void **)a1);
        sub_1D52B1D54((uint64_t)&v83);
        break;
      case 5718599:
        sub_1D52917E4(a1, &v83);
        v28 = v83;
        v81[0] = (void *)4;
        sub_1D5282FE0(&__p, (unint64_t *)v81);
        (*(void (**)(void *, void **, uint64_t))(*(_QWORD *)v28 + 40))(v28, &__p, 1);
        v29 = v84;
        if (v84)
        {
          v30 = (unint64_t *)&v84->__shared_owners_;
          do
            v31 = __ldaxr(v30);
          while (__stlxr(v31 - 1, v30));
          if (!v31)
          {
            ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
            std::__shared_weak_count::__release_weak(v29);
          }
        }
        sub_1D52917E4(a1, v81);
        v32 = v81[0];
        LODWORD(p_p) = 4;
        sub_1D5285A24(&__p, (unsigned int *)&p_p);
        sub_1D5284D2C(v32, (unsigned int *)&__p, (uint64_t *)&v83);
        v33 = (std::__shared_weak_count *)v81[1];
        if (v81[1])
        {
          v34 = (unint64_t *)((char *)v81[1] + 8);
          do
            v35 = __ldaxr(v34);
          while (__stlxr(v35 - 1, v34));
          if (!v35)
          {
            ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
            std::__shared_weak_count::__release_weak(v33);
          }
        }
        v81[1] = 0;
        v82 = 0;
        v81[0] = 0;
        sub_1D52BA100((char *)v81, (unsigned __int16 *)v83, (unsigned __int16 *)v84, ((char *)v84 - (_BYTE *)v83) >> 1);
        sub_1D52850A0(&__p, "MinoltaSegmentWBG");
        p_p = &__p;
        v36 = sub_1D52BA2C8((uint64_t **)(a1 + 120), &__p, (uint64_t)&unk_1D544A5C4, (_OWORD **)&p_p);
        v37 = (void *)v36[7];
        if (v37)
        {
          v36[8] = v37;
          operator delete(v37);
          v36[7] = 0;
          v36[8] = 0;
          v36[9] = 0;
        }
        *(_OWORD *)(v36 + 7) = *(_OWORD *)v81;
        v36[9] = v82;
        v81[1] = 0;
        v82 = 0;
        v81[0] = 0;
        if (v80 < 0)
        {
          operator delete(__p);
          if (v81[0])
          {
            v81[1] = v81[0];
            operator delete(v81[0]);
          }
        }
        if (v83)
        {
          v84 = (std::__shared_weak_count *)v83;
          operator delete(v83);
        }
        break;
    }
    sub_1D52917E4(a1, &v83);
    v71 = v83;
    v81[0] = (void *)(v19 + v24 + 8);
    sub_1D528594C(&__p, (uint64_t *)v81);
    (*(void (**)(void *, void **, _QWORD))(*(_QWORD *)v71 + 40))(v71, &__p, 0);
    v72 = v84;
    if (v84)
    {
      v73 = (unint64_t *)&v84->__shared_owners_;
      do
        v74 = __ldaxr(v73);
      while (__stlxr(v74 - 1, v73));
      if (!v74)
      {
        ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
        std::__shared_weak_count::__release_weak(v72);
      }
    }
  }
  return sub_1D5285200(v85);
}

void sub_1D52BB01C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  sub_1D5282EB4((uint64_t)&a20);
  sub_1D5285200(&a23);
  _Unwind_Resume(a1);
}

void sub_1D52BB16C(uint64_t **a1, __int128 *a2, unsigned __int16 *a3)
{
  int v6;
  int v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  unsigned int v12;
  std::__shared_weak_count *v13;
  unsigned int v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  unsigned int *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int v22;
  char *v23;
  unint64_t v24;
  unsigned int v25;
  std::__shared_weak_count *v26;
  unsigned int v27;
  unint64_t *p_shared_owners;
  unint64_t v29;
  unsigned int *v30;
  uint64_t v31;
  char *v32;
  int v33;
  __int128 *v34;
  std::__shared_weak_count *v35;
  void *__p;
  std::__shared_weak_count *v37;
  uint64_t v38;

  v6 = *a3;
  if (v6 == 279)
  {
    if (a3[1] - 3 > 1)
      return;
    __p = 0;
    v37 = 0;
    v38 = 0;
    if (sub_1D52AD6B0((uint64_t)a1, (uint64_t)a3, &__p))
    {
      v24 = (char *)v37 - (_BYTE *)__p;
      if ((((char *)v37 - (_BYTE *)__p) & 0x3FFFFFFFCLL) != 0)
      {
        sub_1D52917E4((uint64_t)a1, &v34);
        v25 = (*(uint64_t (**)(__int128 *))(*(_QWORD *)v34 + 16))(v34);
        v26 = v35;
        v27 = *(_DWORD *)__p;
        if (v35)
        {
          p_shared_owners = (unint64_t *)&v35->__shared_owners_;
          do
            v29 = __ldaxr(p_shared_owners);
          while (__stlxr(v29 - 1, p_shared_owners));
          if (!v29)
          {
            ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
            std::__shared_weak_count::__release_weak(v26);
          }
        }
        if (v25 < v27)
        {
          v30 = (unsigned int *)__p;
          v31 = (v24 >> 2);
          do
          {
            *v30 = bswap32(*v30);
            ++v30;
            --v31;
          }
          while (v31);
        }
      }
      v34 = a2;
      v32 = (char *)(sub_1D52B3E7C(a1 + 100, (void **)a2, (uint64_t)&unk_1D544A5C4, &v34) + 7);
      if (v32 != (char *)&__p)
        sub_1D5282A44(v32, (char *)__p, (uint64_t)v37, ((char *)v37 - (_BYTE *)__p) >> 2);
    }
    goto LABEL_37;
  }
  if (v6 != 273)
  {
    sub_1D52ABE88(a1, (uint64_t)a2, a3);
    return;
  }
  if (a3[1] - 3 <= 1)
  {
    sub_1D52917E4((uint64_t)a1, &__p);
    v7 = sub_1D52845F4((uint64_t)__p);
    v8 = v37;
    if (v37)
    {
      v9 = (unint64_t *)&v37->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
    __p = 0;
    v37 = 0;
    v38 = 0;
    if (sub_1D52AD6B0((uint64_t)a1, (uint64_t)a3, &__p))
    {
      v11 = (char *)v37 - (_BYTE *)__p;
      if ((((char *)v37 - (_BYTE *)__p) & 0x3FFFFFFFCLL) != 0)
      {
        sub_1D52917E4((uint64_t)a1, &v34);
        v12 = (*(uint64_t (**)(__int128 *))(*(_QWORD *)v34 + 16))(v34);
        v13 = v35;
        v14 = *(_DWORD *)__p;
        if (v35)
        {
          v15 = (unint64_t *)&v35->__shared_owners_;
          do
            v16 = __ldaxr(v15);
          while (__stlxr(v16 - 1, v15));
          if (!v16)
          {
            ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
            std::__shared_weak_count::__release_weak(v13);
          }
        }
        v17 = (v11 >> 2);
        if (v12 < v14)
        {
          v18 = (unsigned int *)__p;
          v19 = (v11 >> 2);
          do
          {
            *v18 = bswap32(*v18);
            ++v18;
            --v19;
          }
          while (v19);
        }
        if (v7)
        {
          v20 = 0;
          v21 = (char *)__p;
          do
          {
            LODWORD(v34) = v7;
            v33 = *sub_1D5294254((int *)&v34, (unsigned int *)&v21[v20]);
            v22 = sub_1D52ADF28((unsigned int *)&v33);
            v21 = (char *)__p;
            *(_DWORD *)((char *)__p + v20) = v22;
            v20 += 4;
            --v17;
          }
          while (v17);
        }
      }
      v34 = a2;
      v23 = (char *)(sub_1D52B3E7C(a1 + 97, (void **)a2, (uint64_t)&unk_1D544A5C4, &v34) + 7);
      if (v23 != (char *)&__p)
        sub_1D5282A44(v23, (char *)__p, (uint64_t)v37, ((char *)v37 - (_BYTE *)__p) >> 2);
    }
LABEL_37:
    if (__p)
    {
      v37 = (std::__shared_weak_count *)__p;
      operator delete(__p);
    }
  }
}

void sub_1D52BB48C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13)
{
  sub_1D5282EB4((uint64_t)&a10);
  if (__p)
  {
    a13 = (uint64_t)__p;
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_1D52BB4E4(uint64_t a1, uint64_t a2, unsigned __int16 *a3)
{
  unsigned int v5;
  int v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  int v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  int v18;
  unint64_t v20;
  int v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  std::__shared_weak_count *v25;

  nullsub_6();
  v5 = *a3;
  if (v5 <= 0x88)
  {
    if (v5 != 4)
    {
      if (v5 == 136 && a3[1] == 4 && *((_DWORD *)a3 + 1) == 1)
      {
        sub_1D52917E4(a1, &v24);
        v6 = sub_1D52845F4(v24);
        LODWORD(v20) = *((_DWORD *)a3 + 2);
        LODWORD(v22) = v6;
        *(_QWORD *)(a1 + 1216) = *sub_1D5294254((int *)&v22, (unsigned int *)&v20);
        v7 = v25;
        if (v25)
        {
          p_shared_owners = (unint64_t *)&v25->__shared_owners_;
          do
            v9 = __ldaxr(p_shared_owners);
          while (__stlxr(v9 - 1, p_shared_owners));
          if (!v9)
          {
            ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
            std::__shared_weak_count::__release_weak(v7);
          }
        }
      }
      return;
    }
    goto LABEL_13;
  }
  if (v5 != 137)
  {
    if (v5 != 276)
      return;
LABEL_13:
    if (a3[1] == 7)
    {
      v10 = v5 == 4 ? 140 : 160;
      if ((v10 | 2uLL) <= *((unsigned int *)a3 + 1))
      {
        sub_1D52917E4(a1, &v22);
        v20 = v10 + *((unsigned int *)a3 + 2);
        sub_1D5282FE0(&v21, &v20);
        sub_1D5285164(&v24, &v22, (uint64_t)&v21, 0);
        v11 = v23;
        if (v23)
        {
          v12 = (unint64_t *)&v23->__shared_owners_;
          do
            v13 = __ldaxr(v12);
          while (__stlxr(v13 - 1, v12));
          if (!v13)
          {
            ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
            std::__shared_weak_count::__release_weak(v11);
          }
        }
        sub_1D52917E4(a1, &v22);
        v14 = sub_1D528479C(v22);
        v15 = v23;
        if (v23)
        {
          v16 = (unint64_t *)&v23->__shared_owners_;
          do
            v17 = __ldaxr(v16);
          while (__stlxr(v17 - 1, v16));
          if (!v17)
          {
            ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
            std::__shared_weak_count::__release_weak(v15);
          }
        }
        if (v14 == 76)
          v18 = 6;
        else
          v18 = 1;
        if (v14 == 82)
          v18 = 8;
        *(_DWORD *)(a1 + 1228) = v18;
        sub_1D5285200(&v24);
      }
    }
    return;
  }
  if (a3[1] == 4 && *((_DWORD *)a3 + 1) == 1)
    *(_DWORD *)(a1 + 1224) = *((_DWORD *)a3 + 2);
}

void sub_1D52BB6FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_1D5282EB4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52BB744(uint64_t a1)
{
  return *(_QWORD *)(a1 + 1208);
}

unint64_t sub_1D52BB74C(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 1192) | ((unint64_t)*(unsigned __int16 *)(a1 + 1194) << 32);
}

uint64_t sub_1D52BB75C(uint64_t a1)
{
  return (unsigned __int16)~(-1 << *(_BYTE *)(a1 + 1201));
}

void sub_1D52BB774(uint64_t a1@<X0>, char **a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *v5;
  unint64_t v6;
  unsigned int v7;
  int v8;
  __int128 v9;

  sub_1D52B08D0(a1, (uint64_t)a2);
  sub_1D528594C(&v8, (uint64_t *)(a1 + 1216));
  v7 = *(_DWORD *)(a1 + 1224);
  sub_1D5291E58(a1, &v8, &v7, *(_DWORD *)(a1 + 1228), &v9);
  if ((_QWORD)v9)
    sub_1D52B0A7C(a2, &v9);
  v4 = (std::__shared_weak_count *)*((_QWORD *)&v9 + 1);
  if (*((_QWORD *)&v9 + 1))
  {
    v5 = (unint64_t *)(*((_QWORD *)&v9 + 1) + 8);
    do
      v6 = __ldaxr(v5);
    while (__stlxr(v6 - 1, v5));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void sub_1D52BB818(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_1D5282EB4((uint64_t)va);
  sub_1D5282E44((void ***)va);
  _Unwind_Resume(a1);
}

BOOL sub_1D52BB844(uint64_t a1, unsigned __int8 a2)
{
  return a2 == 216;
}

void sub_1D52BB854(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  unint64_t v5;
  __int128 v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  int v27;
  unint64_t v28;
  unint64_t v29;
  __int128 v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  __int128 v37;
  uint64_t v38;
  int v39;
  std::string __p;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t *v45;

  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  sub_1D52850A0(&__p, "mrw");
  v4 = a2[2];
  v5 = a2[1];
  if (v5 >= v4)
  {
    v7 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *a2) >> 3);
    v8 = v7 + 1;
    if (v7 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v9 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v4 - *a2) >> 3);
    if (2 * v9 > v8)
      v8 = 2 * v9;
    if (v9 >= 0x555555555555555)
      v10 = 0xAAAAAAAAAAAAAAALL;
    else
      v10 = v8;
    v45 = a2 + 2;
    if (v10)
      v11 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v10);
    else
      v11 = 0;
    v12 = &v11[24 * v7];
    v41 = v11;
    v42 = v12;
    v44 = &v11[24 * v10];
    v13 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *((_QWORD *)v12 + 2) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)v12 = v13;
    memset(&__p, 0, sizeof(__p));
    v43 = v12 + 24;
    sub_1D5293D58(a2, &v41);
    v14 = a2[1];
    sub_1D5293F24((uint64_t)&v41);
    v15 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    a2[1] = v14;
    if (v15 < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    v6 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(_QWORD *)(v5 + 16) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)v5 = v6;
    a2[1] = v5 + 24;
  }
  sub_1D52850A0(&__p, "minolta");
  v17 = a2[1];
  v16 = a2[2];
  if (v17 >= v16)
  {
    v19 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v17 - *a2) >> 3);
    v20 = v19 + 1;
    if (v19 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v21 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v16 - *a2) >> 3);
    if (2 * v21 > v20)
      v20 = 2 * v21;
    if (v21 >= 0x555555555555555)
      v22 = 0xAAAAAAAAAAAAAAALL;
    else
      v22 = v20;
    v45 = a2 + 2;
    if (v22)
      v23 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v22);
    else
      v23 = 0;
    v24 = &v23[24 * v19];
    v41 = v23;
    v42 = v24;
    v44 = &v23[24 * v22];
    v25 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *((_QWORD *)v24 + 2) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)v24 = v25;
    memset(&__p, 0, sizeof(__p));
    v43 = v24 + 24;
    sub_1D5293D58(a2, &v41);
    v26 = a2[1];
    sub_1D5293F24((uint64_t)&v41);
    v27 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    a2[1] = v26;
    if (v27 < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    v18 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(_QWORD *)(v17 + 16) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)v17 = v18;
    a2[1] = v17 + 24;
  }
  sub_1D5293780(a1, &__p);
  v29 = a2[1];
  v28 = a2[2];
  if (v29 >= v28)
  {
    v31 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v29 - *a2) >> 3);
    v32 = v31 + 1;
    if (v31 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v33 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v28 - *a2) >> 3);
    if (2 * v33 > v32)
      v32 = 2 * v33;
    if (v33 >= 0x555555555555555)
      v34 = 0xAAAAAAAAAAAAAAALL;
    else
      v34 = v32;
    v45 = a2 + 2;
    if (v34)
      v35 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v34);
    else
      v35 = 0;
    v36 = &v35[24 * v31];
    v41 = v35;
    v42 = v36;
    v44 = &v35[24 * v34];
    v37 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *((_QWORD *)v36 + 2) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)v36 = v37;
    memset(&__p, 0, sizeof(__p));
    v43 = v36 + 24;
    sub_1D5293D58(a2, &v41);
    v38 = a2[1];
    sub_1D5293F24((uint64_t)&v41);
    v39 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    a2[1] = v38;
    if (v39 < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    v30 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(_QWORD *)(v29 + 16) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)v29 = v30;
    a2[1] = v29 + 24;
  }
}

void sub_1D52BBBA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  sub_1D5293F24((uint64_t)&a15);
  if (a14 < 0)
    operator delete(__p);
  sub_1D5293CCC((void ***)&__p);
  _Unwind_Resume(a1);
}

void sub_1D52BBC00(uint64_t a1)
{
  sub_1D52B2190(a1);
  JUMPOUT(0x1D8271ADCLL);
}

void sub_1D52BBC24(uint64_t *a1@<X1>, char *a2@<X2>, void **a3@<X3>, void **a4@<X4>, _QWORD *a5@<X8>)
{
  _QWORD *v10;

  v10 = operator new(0x4E8uLL);
  sub_1D52BBCA4((uint64_t)v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;
  sub_1D5285658((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1D52BBC90(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52BBCA4(uint64_t a1, uint64_t *a2, char *a3, void **a4, void **a5)
{
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = &unk_1E9972F08;
  *(_QWORD *)(a1 + 8) = 0;
  sub_1D52A7E98(a1 + 24, a2, *a3, *a4, *a5);
  *(_QWORD *)(a1 + 24) = off_1E9972BD0;
  *(_OWORD *)(a1 + 1208) = 0u;
  *(_DWORD *)(a1 + 1223) = 0;
  *(_QWORD *)(a1 + 1232) = 0;
  *(_QWORD *)(a1 + 1248) = 0;
  *(_QWORD *)(a1 + 1240) = 0;
  return a1;
}

void sub_1D52BBD14(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52BBD28(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9972F08;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52BBD3C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9972F08;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52BBD70(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a1 + 24) + 16))(a1 + 24);
}

id sub_1D52BBD80(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const char *v28;
  void *v29;
  const char *v30;
  uint64_t v31;
  void *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[11];
  _QWORD v43[2];

  v43[1] = *MEMORY[0x1E0C80C00];
  v5 = *MEMORY[0x1E0CBD388];
  v34 = *MEMORY[0x1E0CBD368];
  v35 = v5;
  v42[0] = MEMORY[0x1E0C9AAA0];
  v42[1] = CFSTR("com.olympus.raw-image");
  v6 = *MEMORY[0x1E0CBD380];
  v36 = *MEMORY[0x1E0CBD348];
  v42[2] = CFSTR(".orf.");
  v42[3] = &unk_1E99C9708;
  v42[4] = &unk_1E99C9720;
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], a2, (uint64_t)sub_1D52BC034, a4, a5, v34, v35, v36, v6, *MEMORY[0x1E0CBD370], *MEMORY[0x1E0CBD378]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v42[5] = v7;
  v37 = *MEMORY[0x1E0CBD330];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v8, (uint64_t)sub_1D52BC03C, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v42[6] = v11;
  v38 = *MEMORY[0x1E0CBD350];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v12, (uint64_t)sub_1D52BC048, v13, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v42[7] = v15;
  v39 = *MEMORY[0x1E0CBD338];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v16, (uint64_t)sub_1D52E8DA4, v17, v18);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v42[8] = v19;
  v40 = *MEMORY[0x1E0CBD358];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v20, (uint64_t)sub_1D52BC054, v21, v22);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v42[9] = v23;
  v41 = *MEMORY[0x1E0CBD360];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v24, (uint64_t)sub_1D52BC060, v25, v26);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v42[10] = v27;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v28, (uint64_t)v42, (uint64_t)&v34, 11);
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v43[0] = v29;
  objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v30, (uint64_t)v43, 1, v31);
  v32 = (void *)objc_claimAutoreleasedReturnValue();

  return v32;
}

void sub_1D52BBFD4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

uint64_t sub_1D52BC034()
{
  return 0;
}

void sub_1D52BC03C(const void *a1, uint64_t a2, uint64_t a3)
{
  sub_1D52E7A20(a1, a2, a3, &unk_1E9972F48);
}

uint64_t sub_1D52BC048(os_signpost_id_t a1)
{
  return sub_1D52E8C40(a1);
}

uint64_t sub_1D52BC054(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1D52E7438(a1, a2, a3, &unk_1E9972F48);
}

uint64_t sub_1D52BC060(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1D52E9A7C(a1, a2, a3, &unk_1E9972F48);
}

void sub_1D52BC06C(uint64_t *a1@<X1>, char a2@<W2>, void *a3@<X3>, void *a4@<X4>, _OWORD *a5@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  __int128 v12;
  id v13;
  id v14;
  char v15;

  v15 = a2;
  v14 = a3;
  v13 = a4;
  sub_1D52BFCE8(a1, &v15, &v14, &v13, &v12);
  v8 = v12;
  *a5 = v12;
  if (!v8)
  {
    sub_1D52BFE18(a1, &v15, &v14, &v13, &v12);
    sub_1D5292548((uint64_t)a5, &v12);
    v9 = (std::__shared_weak_count *)*((_QWORD *)&v12 + 1);
    if (*((_QWORD *)&v12 + 1))
    {
      v10 = (unint64_t *)(*((_QWORD *)&v12 + 1) + 8);
      do
        v11 = __ldaxr(v10);
      while (__stlxr(v11 - 1, v10));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
  }

}

void sub_1D52BC154(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{
  uint64_t v13;

  sub_1D5282EB4(v13);

  _Unwind_Resume(a1);
}

double sub_1D52BC180(uint64_t a1, uint64_t *a2, char a3, void *a4, void *a5)
{
  uint64_t v5;
  double result;

  sub_1D52A7E98(a1, a2, a3, a4, a5);
  *(_QWORD *)v5 = off_1E9972F78;
  *(_BYTE *)(v5 + 1180) = 0;
  *(_QWORD *)(v5 + 1336) = 0;
  *(_QWORD *)(v5 + 1328) = 0;
  result = 0.0;
  *(_OWORD *)(v5 + 1184) = 0u;
  *(_OWORD *)(v5 + 1200) = 0u;
  *(_OWORD *)(v5 + 1216) = 0u;
  *(_OWORD *)(v5 + 1232) = 0u;
  *(_OWORD *)(v5 + 1248) = 0u;
  *(_OWORD *)(v5 + 1258) = 0u;
  *(_QWORD *)(v5 + 1276) = 0;
  *(_BYTE *)(v5 + 1284) = 0;
  *(_OWORD *)(v5 + 1288) = 0u;
  *(_OWORD *)(v5 + 1304) = 0u;
  *(_QWORD *)(v5 + 1320) = v5 + 1328;
  *(_DWORD *)(v5 + 1344) = 0;
  *(_BYTE *)(v5 + 1348) = 0;
  *(_BYTE *)(v5 + 1350) = 0;
  *(_BYTE *)(v5 + 1352) = 0;
  *(_BYTE *)(v5 + 1354) = 0;
  return result;
}

BOOL sub_1D52BC1FC(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  void *v6;
  BOOL v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::string::size_type v11;
  std::string::size_type size;
  std::string::size_type v13;
  std::string *p_str;
  int data;
  int v16;
  std::string::size_type v18;
  std::string *v19;
  int v20;
  int v21;
  _BOOL8 v23;
  std::string *v25;
  uint64_t v26;
  BOOL v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  std::string::size_type v31;
  std::string *v32;
  std::string::size_type v33;
  int v34;
  unint64_t v36;
  std::string::size_type v37;
  std::__shared_weak_count *v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  int v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  uint64_t v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  std::__shared_weak_count *v53;
  unint64_t *v54;
  unint64_t v55;
  std::__shared_weak_count *v56;
  unint64_t *v57;
  unint64_t v58;
  uint64_t v59;
  std::string v60;
  unsigned int v61;
  void *__p;
  std::__shared_weak_count *v63;
  uint64_t v64;
  uint64_t v65;
  std::string __str;

  memset(&__str, 0, sizeof(__str));
  v65 = 0;
  sub_1D52917E4(a1, &__p);
  v2 = (*(int (**)(void *))(*(_QWORD *)__p + 48))(__p);
  v3 = v63;
  if (v63)
  {
    p_shared_owners = (unint64_t *)&v63->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  v65 = v2;
  sub_1D52917E4(a1, &__p);
  v6 = __p;
  LODWORD(v59) = 8;
  sub_1D5285A24(&v60, (unsigned int *)&v59);
  v7 = sub_1D52849DC((uint64_t)v6, (unsigned int *)&v60, (uint64_t)&__str);
  v8 = v63;
  if (v63)
  {
    v9 = (unint64_t *)&v63->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  v11 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  if (v7)
  {
    size = __str.__r_.__value_.__l.__size_;
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v13 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    else
      v13 = __str.__r_.__value_.__l.__size_;
    if (v13 != 8)
    {
      if (v13 != 7)
        goto LABEL_26;
      p_str = &__str;
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
      data = (int)p_str->__r_.__value_.__l.__data_;
      v16 = *(_DWORD *)((char *)p_str->__r_.__value_.__r.__words + 3);
      if (data != 1297697871 || v16 != 1398100045)
        goto LABEL_26;
LABEL_75:
      sub_1D52917E4(a1, &__p);
      v42 = sub_1D528479C((uint64_t)__p);
      v43 = v63;
      if (v63)
      {
        v44 = (unint64_t *)&v63->__shared_owners_;
        do
          v45 = __ldaxr(v44);
        while (__stlxr(v45 - 1, v44));
        if (!v45)
        {
          ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
          std::__shared_weak_count::__release_weak(v43);
        }
      }
      v23 = v42 == 19789 || v42 == 18761;
      if (v42 == 18761 || v42 == 19789)
      {
        if (v42 == 19789)
          v46 = 2;
        else
          v46 = 1;
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, v46);
        sub_1D528594C(&__p, &v65);
        (*(void (**)(uint64_t, void **))(*(_QWORD *)a1 + 144))(a1, &__p);
        std::string::operator=((std::string *)(a1 + 1248), &__str);
        sub_1D52917E4(a1, &__p);
        *(_WORD *)(a1 + 1272) = sub_1D528479C((uint64_t)__p);
        v47 = v63;
        if (v63)
        {
          v48 = (unint64_t *)&v63->__shared_owners_;
          do
            v49 = __ldaxr(v48);
          while (__stlxr(v49 - 1, v48));
          if (!v49)
          {
            ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
            std::__shared_weak_count::__release_weak(v47);
          }
        }
        sub_1D52917E4(a1, &__p);
        LODWORD(v60.__r_.__value_.__l.__data_) = (*(uint64_t (**)(void *))(*(_QWORD *)__p + 48))(__p);
        LODWORD(v59) = *sub_1D52BFF48((int *)&v60, &v65);
        (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)a1 + 160))(a1, &v59);
        v50 = v63;
        if (v63)
        {
          v51 = (unint64_t *)&v63->__shared_owners_;
          do
            v52 = __ldaxr(v51);
          while (__stlxr(v52 - 1, v51));
          if (!v52)
          {
            ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
            std::__shared_weak_count::__release_weak(v50);
          }
        }
      }
      goto LABEL_37;
    }
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v25 = &__str;
    else
      v25 = (std::string *)__str.__r_.__value_.__r.__words[0];
    if (!memcmp(v25, "OM SYSTE", 8uLL))
    {
      if (v25->__r_.__value_.__r.__words[0] == 0x4554535953204D4FLL)
      {
        __p = 0;
        v63 = 0;
        v64 = 0;
        sub_1D52917E4(a1, &v60);
        v26 = v60.__r_.__value_.__r.__words[0];
        v61 = 4;
        sub_1D5285A24(&v59, &v61);
        v27 = sub_1D52849DC(v26, (unsigned int *)&v59, (uint64_t)&__p);
        v28 = (std::__shared_weak_count *)v60.__r_.__value_.__l.__size_;
        if (v60.__r_.__value_.__l.__size_)
        {
          v29 = (unint64_t *)(v60.__r_.__value_.__l.__size_ + 8);
          do
            v30 = __ldaxr(v29);
          while (__stlxr(v30 - 1, v29));
          if (!v30)
          {
            ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
            std::__shared_weak_count::__release_weak(v28);
          }
        }
        if (!v27)
          goto LABEL_109;
        sub_1D52AEDB8((const void **)&__str.__r_.__value_.__l.__data_, (const void **)&__p, (uint64_t)&v60);
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__str.__r_.__value_.__l.__data_);
        __str = v60;
        v31 = HIBYTE(v60.__r_.__value_.__r.__words[2]);
        if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          v31 = __str.__r_.__value_.__l.__size_;
        if (v31 != 9)
          goto LABEL_109;
        v32 = &__str;
        if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          v32 = (std::string *)__str.__r_.__value_.__r.__words[0];
        v33 = v32->__r_.__value_.__r.__words[0];
        v34 = v32->__r_.__value_.__s.__data_[8];
        if (v33 != 0x4554535953204D4FLL || v34 != 77)
          goto LABEL_109;
        v36 = HIBYTE(v64);
        if (v64 < 0)
          v36 = (unint64_t)v63;
        if (v36 > 4)
        {
LABEL_109:
          if (SHIBYTE(v64) < 0)
            operator delete(__p);
          goto LABEL_36;
        }
        sub_1D52917E4(a1, &v60);
        v37 = v60.__r_.__value_.__r.__words[0];
        v38 = (std::__shared_weak_count *)HIBYTE(v64);
        if (v64 < 0)
          v38 = v63;
        v59 = 3 - (_QWORD)v38;
        sub_1D5282FE0(&v61, (unint64_t *)&v59);
        (*(void (**)(std::string::size_type, unsigned int *, uint64_t))(*(_QWORD *)v37 + 40))(v37, &v61, 1);
        v39 = (std::__shared_weak_count *)v60.__r_.__value_.__l.__size_;
        if (v60.__r_.__value_.__l.__size_)
        {
          v40 = (unint64_t *)(v60.__r_.__value_.__l.__size_ + 8);
          do
            v41 = __ldaxr(v40);
          while (__stlxr(v41 - 1, v40));
          if (!v41)
          {
            ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
            std::__shared_weak_count::__release_weak(v39);
          }
        }
        if (SHIBYTE(v64) < 0)
          operator delete(__p);
      }
      goto LABEL_75;
    }
  }
  else
  {
    size = __str.__r_.__value_.__l.__size_;
  }
LABEL_26:
  if ((v11 & 0x80u) == 0)
    v18 = v11;
  else
    v18 = size;
  if (v18 != 5)
    goto LABEL_36;
  v19 = &__str;
  if ((v11 & 0x80u) != 0)
    v19 = (std::string *)__str.__r_.__value_.__r.__words[0];
  v20 = (int)v19->__r_.__value_.__l.__data_;
  v21 = v19->__r_.__value_.__s.__data_[4];
  if (v20 != 1297697871 || v21 != 80)
  {
LABEL_36:
    v23 = 0;
    goto LABEL_37;
  }
  std::string::operator=((std::string *)(a1 + 1248), &__str);
  sub_1D52917E4(a1, &__p);
  *(_WORD *)(a1 + 1272) = sub_1D528479C((uint64_t)__p);
  v53 = v63;
  if (v63)
  {
    v54 = (unint64_t *)&v63->__shared_owners_;
    do
      v55 = __ldaxr(v54);
    while (__stlxr(v55 - 1, v54));
    if (!v55)
    {
      ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
      std::__shared_weak_count::__release_weak(v53);
    }
  }
  sub_1D52917E4(a1, &__p);
  LODWORD(v60.__r_.__value_.__l.__data_) = (*(uint64_t (**)(void *))(*(_QWORD *)__p + 48))(__p);
  (*(void (**)(uint64_t, std::string *))(*(_QWORD *)a1 + 160))(a1, &v60);
  v56 = v63;
  if (v63)
  {
    v57 = (unint64_t *)&v63->__shared_owners_;
    do
      v58 = __ldaxr(v57);
    while (__stlxr(v58 - 1, v57));
    if (!v58)
    {
      ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
      std::__shared_weak_count::__release_weak(v56);
    }
  }
  v23 = 1;
LABEL_37:
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  return v23;
}

void sub_1D52BC824(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  uint64_t v20;

  if (a20 < 0)
    operator delete(__p);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  _Unwind_Resume(exception_object);
}

void sub_1D52BC8C0(uint64_t a1, const void **a2, unsigned __int16 *a3)
{
  unsigned int v6;
  unsigned int v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  size_t v11;
  void **v12;
  const void *v13;
  int v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  size_t v18;
  void **v19;
  const void *v20;
  int v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  size_t v25;
  void **v26;
  const void *v27;
  int v28;
  std::__shared_weak_count *size;
  unint64_t *v30;
  unint64_t v31;
  int v32;
  char *v33;
  uint64_t *v34;
  void *v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  void *__p[2];
  char v40;
  void *v41[2];
  char v42;
  void *v43[2];
  char v44;
  int v45;
  std::string __str;
  std::string *p_str;
  uint64_t __src;
  _QWORD v49[2];

  v49[1] = *MEMORY[0x1E0C80C00];
  nullsub_6();
  v6 = *a3;
  if (v6 > 0x1017)
  {
    if (*a3 > 0x201Fu)
    {
      if (v6 == 8224)
      {
        v21 = a3[1];
        if (v21 == 7 || v21 == 13)
        {
          sub_1D52917E4(a1, &__src);
          v45 = *((_DWORD *)a3 + 2);
          sub_1D5282F74((int *)&p_str, &v45);
          sub_1D5285164((uint64_t *)&__str, &__src, (uint64_t)&p_str, 0);
          v22 = (std::__shared_weak_count *)v49[0];
          if (v49[0])
          {
            v23 = (unint64_t *)(v49[0] + 8);
            do
              v24 = __ldaxr(v23);
            while (__stlxr(v24 - 1, v23));
            if (!v24)
            {
              ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
              std::__shared_weak_count::__release_weak(v22);
            }
          }
          if (*((char *)a2 + 23) >= 0)
            v25 = *((unsigned __int8 *)a2 + 23);
          else
            v25 = (size_t)a2[1];
          v26 = v41;
          sub_1D52B1FA0((uint64_t)v41, v25 + 15);
          if (v42 < 0)
            v26 = (void **)v41[0];
          if (v25)
          {
            if (*((char *)a2 + 23) >= 0)
              v27 = a2;
            else
              v27 = *a2;
            memmove(v26, v27, v25);
          }
          strcpy((char *)v26 + v25, ":CameraSettings");
          sub_1D52BD1AC();
          if (v42 < 0)
            operator delete(v41[0]);
          sub_1D5285200((uint64_t *)&__str);
        }
      }
      else if ((v6 == 8256 || v6 == 12288)
             && ((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) == 0)
      {
        v7 = a3[1];
        if (v7 <= 0xD && ((1 << v7) & 0x2088) != 0)
        {
          sub_1D52917E4(a1, &__src);
          v45 = *((_DWORD *)a3 + 2);
          sub_1D5282F74((int *)&p_str, &v45);
          sub_1D5285164((uint64_t *)&__str, &__src, (uint64_t)&p_str, 0);
          v8 = (std::__shared_weak_count *)v49[0];
          if (v49[0])
          {
            v9 = (unint64_t *)(v49[0] + 8);
            do
              v10 = __ldaxr(v9);
            while (__stlxr(v10 - 1, v9));
            if (!v10)
            {
              ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
              std::__shared_weak_count::__release_weak(v8);
            }
          }
          if (*((char *)a2 + 23) >= 0)
            v11 = *((unsigned __int8 *)a2 + 23);
          else
            v11 = (size_t)a2[1];
          v12 = __p;
          sub_1D52B1FA0((uint64_t)__p, v11 + 16);
          if (v40 < 0)
            v12 = (void **)__p[0];
          if (v11)
          {
            if (*((char *)a2 + 23) >= 0)
              v13 = a2;
            else
              v13 = *a2;
            memmove(v12, v13, v11);
          }
          strcpy((char *)v12 + v11, ":ImageProcessing");
          sub_1D52BD298();
          if (v40 < 0)
            operator delete(__p[0]);
          sub_1D5285200((uint64_t *)&__str);
        }
      }
      return;
    }
    if (v6 != 4120)
    {
      if (v6 == 8208)
      {
        v14 = a3[1];
        if (v14 == 7 || v14 == 13)
        {
          sub_1D52917E4(a1, &__src);
          v45 = *((_DWORD *)a3 + 2);
          sub_1D5282F74((int *)&p_str, &v45);
          sub_1D5285164((uint64_t *)&__str, &__src, (uint64_t)&p_str, 0);
          v15 = (std::__shared_weak_count *)v49[0];
          if (v49[0])
          {
            v16 = (unint64_t *)(v49[0] + 8);
            do
              v17 = __ldaxr(v16);
            while (__stlxr(v17 - 1, v16));
            if (!v17)
            {
              ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
              std::__shared_weak_count::__release_weak(v15);
            }
          }
          if (*((char *)a2 + 23) >= 0)
            v18 = *((unsigned __int8 *)a2 + 23);
          else
            v18 = (size_t)a2[1];
          v19 = v43;
          sub_1D52B1FA0((uint64_t)v43, v18 + 15);
          if (v44 < 0)
            v19 = (void **)v43[0];
          if (v18)
          {
            if (*((char *)a2 + 23) >= 0)
              v20 = a2;
            else
              v20 = *a2;
            memmove(v19, v20, v18);
          }
          strcpy((char *)v19 + v18, ":CameraSettings");
          sub_1D52BD0C0();
          if (v44 < 0)
            operator delete(v43[0]);
          sub_1D5285200((uint64_t *)&__str);
        }
      }
      return;
    }
    if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) != 0)
      return;
    if (a3[1] != 3)
      return;
    LODWORD(__src) = 0;
    sub_1D5285A24(&__str, (unsigned int *)&__src);
    v32 = sub_1D52A7E28((uint64_t)a3, (unsigned int *)&__str);
    *(_WORD *)(a1 + 1352) = v32;
    *(_BYTE *)(a1 + 1354) = 1;
    if (!*(_BYTE *)(a1 + 1350))
      return;
    LODWORD(__src) = *(unsigned __int16 *)(a1 + 1348);
    HIDWORD(__src) = 256;
    LODWORD(v49[0]) = v32;
    sub_1D52AFE84(":redBlueBalance", a2, (void **)&__str.__r_.__value_.__l.__data_);
    p_str = &__str;
    v33 = (char *)sub_1D52BA2C8((uint64_t **)(a1 + 120), (void **)&__str.__r_.__value_.__l.__data_, (uint64_t)&unk_1D544A5C4, (_OWORD **)&p_str);
    sub_1D5282A44(v33 + 56, (char *)&__src, (uint64_t)v49 + 4, 3uLL);
    goto LABEL_92;
  }
  if (*a3 > 0x1011u)
  {
    if (v6 == 4114)
    {
      if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) == 0
        && a3[1] == 3
        && *((_DWORD *)a3 + 1) == 4)
      {
        sub_1D52917E4(a1, &__src);
        sub_1D52A75D8((uint64_t)a3, &__src, (void **)&__str.__r_.__value_.__l.__data_);
        p_str = (std::string *)a2;
        v34 = sub_1D52B3E7C((uint64_t **)(a1 + 264), (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&p_str);
        v35 = (void *)v34[7];
        if (v35)
        {
          v34[8] = (uint64_t)v35;
          operator delete(v35);
          v34[7] = 0;
          v34[8] = 0;
          v34[9] = 0;
        }
        *(std::string *)(v34 + 7) = __str;
        memset(&__str, 0, sizeof(__str));
        v36 = (std::__shared_weak_count *)v49[0];
        if (v49[0])
        {
          v37 = (unint64_t *)(v49[0] + 8);
          do
            v38 = __ldaxr(v37);
          while (__stlxr(v38 - 1, v37));
          if (!v38)
          {
            ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
            std::__shared_weak_count::__release_weak(v36);
          }
        }
      }
    }
    else if (v6 == 4119 && ((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) == 0 && a3[1] == 3)
    {
      LODWORD(__src) = 0;
      sub_1D5285A24(&__str, (unsigned int *)&__src);
      *(_WORD *)(a1 + 1348) = sub_1D52A7E28((uint64_t)a3, (unsigned int *)&__str);
      *(_BYTE *)(a1 + 1350) = 1;
    }
  }
  else
  {
    if (v6 != 256)
    {
      if (v6 != 519 || a3[1] != 2 || *((_DWORD *)a3 + 1) > 0x3Fu)
        return;
      memset(&__str, 0, sizeof(__str));
      if (sub_1D52ADD1C(a1, (uint64_t)a3, &__str, 1))
        std::string::operator=((std::string *)(a1 + 1296), &__str);
LABEL_92:
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__str.__r_.__value_.__l.__data_);
      return;
    }
    if (a3[1] == 7)
    {
      v28 = *((_DWORD *)a3 + 2);
      sub_1D52917E4(a1, &__str);
      LODWORD(__src) = sub_1D52845F4((uint64_t)__str.__r_.__value_.__l.__data_);
      *(_DWORD *)(a1 + 1276) = sub_1D52ADF28((unsigned int *)&__src) + v28;
      size = (std::__shared_weak_count *)__str.__r_.__value_.__l.__size_;
      if (__str.__r_.__value_.__l.__size_)
      {
        v30 = (unint64_t *)(__str.__r_.__value_.__l.__size_ + 8);
        do
          v31 = __ldaxr(v30);
        while (__stlxr(v31 - 1, v30));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
          std::__shared_weak_count::__release_weak(size);
        }
      }
      *(_DWORD *)(a1 + 1280) = *((_DWORD *)a3 + 1);
    }
  }
}

void sub_1D52BCFD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  uint64_t v33;

  if (__p)
    operator delete(__p);
  sub_1D5282EB4(v33 - 56);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52BD0C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  void *__p[2];
  uint64_t v9;
  _WORD v10[3074];

  v0 = MEMORY[0x1E0C80A78]();
  v2 = v1;
  v3 = v0;
  v4 = sub_1D52AA374(v0, v1, v10);
  if (v4)
  {
    v5 = 0;
    v6 = 12 * v4;
    do
    {
      if (*(char *)(v2 + 23) < 0)
      {
        sub_1D5290130(__p, *(void **)v2, *(_QWORD *)(v2 + 8));
      }
      else
      {
        *(_OWORD *)__p = *(_OWORD *)v2;
        v9 = *(_QWORD *)(v2 + 16);
      }
      (*(void (**)(uint64_t, void **, _WORD *))(*(_QWORD *)v3 + 800))(v3, __p, &v10[v5 / 2 + 2]);
      if (SHIBYTE(v9) < 0)
        operator delete(__p[0]);
      v5 += 12;
    }
    while (v6 != v5);
  }
  return 1;
}

void sub_1D52BD190(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D52BD1AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  void *__p[2];
  uint64_t v9;
  _WORD v10[3074];

  v0 = MEMORY[0x1E0C80A78]();
  v2 = v1;
  v3 = v0;
  v4 = sub_1D52AA374(v0, v1, v10);
  if (v4)
  {
    v5 = 0;
    v6 = 12 * v4;
    do
    {
      if (*(char *)(v2 + 23) < 0)
      {
        sub_1D5290130(__p, *(void **)v2, *(_QWORD *)(v2 + 8));
      }
      else
      {
        *(_OWORD *)__p = *(_OWORD *)v2;
        v9 = *(_QWORD *)(v2 + 16);
      }
      (*(void (**)(uint64_t, void **, _WORD *))(*(_QWORD *)v3 + 808))(v3, __p, &v10[v5 / 2 + 2]);
      if (SHIBYTE(v9) < 0)
        operator delete(__p[0]);
      v5 += 12;
    }
    while (v6 != v5);
  }
  return 1;
}

void sub_1D52BD27C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D52BD298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  void *__p[2];
  uint64_t v9;
  _WORD v10[3074];

  v0 = MEMORY[0x1E0C80A78]();
  v2 = v1;
  v3 = v0;
  v4 = sub_1D52AA374(v0, v1, v10);
  if (v4)
  {
    v5 = 0;
    v6 = 12 * v4;
    do
    {
      if (*(char *)(v2 + 23) < 0)
      {
        sub_1D5290130(__p, *(void **)v2, *(_QWORD *)(v2 + 8));
      }
      else
      {
        *(_OWORD *)__p = *(_OWORD *)v2;
        v9 = *(_QWORD *)(v2 + 16);
      }
      (*(void (**)(uint64_t, void **, _WORD *))(*(_QWORD *)v3 + 816))(v3, __p, &v10[v5 / 2 + 2]);
      if (SHIBYTE(v9) < 0)
        operator delete(__p[0]);
      v5 += 12;
    }
    while (v6 != v5);
  }
  return 1;
}

void sub_1D52BD368(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D52BD384(uint64_t a1, uint64_t a2, unsigned __int16 *a3)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  int v8;
  int v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unsigned int v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  uint64_t v18[3];

  sub_1D52917E4(a1, &v16);
  sub_1D52B1C58(v18, &v16);
  v5 = v17;
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  v8 = *a3;
  if (v8 == 256)
  {
    if (a3[1] == 4 && *((_DWORD *)a3 + 1) == 1)
      *(_BYTE *)(a1 + 1284) = *((_DWORD *)a3 + 2) == 1;
  }
  else if (v8 == 257)
  {
    if (a3[1] == 4 && *((_DWORD *)a3 + 1) == 1)
    {
      v10 = *((_DWORD *)a3 + 2);
      sub_1D52917E4(a1, &v16);
      v15 = sub_1D52845F4(v16);
      *(_DWORD *)(a1 + 1288) = sub_1D52ADF28(&v15) + v10;
      v11 = v17;
      if (v17)
      {
        v12 = (unint64_t *)&v17->__shared_owners_;
        do
          v13 = __ldaxr(v12);
        while (__stlxr(v13 - 1, v12));
        if (!v13)
        {
          ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
          std::__shared_weak_count::__release_weak(v11);
        }
      }
    }
  }
  else if (v8 == 258 && a3[1] == 4 && *((_DWORD *)a3 + 1) == 1)
  {
    *(_DWORD *)(a1 + 1292) = *((_DWORD *)a3 + 2);
  }
  return sub_1D5285200(v18);
}

void sub_1D52BD4EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_1D5285200((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52BD524(uint64_t a1, void **a2, unsigned __int16 *a3)
{
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  unsigned int v9;
  void *v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t *v14;
  void *v15;
  unint64_t *v16;
  __int16 v17;
  int v18;
  int v19;
  std::__shared_weak_count *size;
  unint64_t *v21;
  unint64_t v22;
  void *v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  int64_t v32;
  uint64_t *v33;
  int v34;
  uint64_t *v35;
  std::string __p;
  void *v38[2];
  uint64_t v39;
  uint64_t v40[3];
  std::string *p_p;
  void **__src;
  int v43;
  _BYTE v44[12];

  *(_QWORD *)&v44[4] = *MEMORY[0x1E0C80C00];
  sub_1D52917E4(a1, v38);
  sub_1D52B1C58(v40, (uint64_t *)v38);
  v6 = (std::__shared_weak_count *)v38[1];
  if (v38[1])
  {
    v7 = (unint64_t *)((char *)v38[1] + 8);
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  v9 = *a3;
  if (v9 > 0x61F)
  {
    if (*a3 <= 0x1112u)
    {
      if (v9 == 1568)
      {
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          LODWORD(__p.__r_.__value_.__l.__data_) = 0;
          sub_1D5285A24(v38, (unsigned int *)&__p);
          *(_DWORD *)(a1 + 1344) = sub_1D52A7E28((uint64_t)a3, (unsigned int *)v38);
        }
      }
      else if (v9 == 4112 && a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
      {
        LODWORD(__p.__r_.__value_.__l.__data_) = 0;
        sub_1D5285A24(v38, (unsigned int *)&__p);
        v17 = sub_1D52A7E28((uint64_t)a3, (unsigned int *)v38);
        v38[0] = a2;
        *((_WORD *)sub_1D52B417C((uint64_t **)(a1 + 1320), a2, (uint64_t)&unk_1D544A5C4, (__int128 **)v38) + 28) = v17;
      }
    }
    else if (v9 == 4371)
    {
      if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 4)
      {
        sub_1D52917E4(a1, &__p);
        sub_1D52A79AC((uint64_t)a3, (uint64_t *)&__p, (uint64_t)v38);
        size = (std::__shared_weak_count *)__p.__r_.__value_.__l.__size_;
        if (__p.__r_.__value_.__l.__size_)
        {
          v21 = (unint64_t *)(__p.__r_.__value_.__l.__size_ + 8);
          do
            v22 = __ldaxr(v21);
          while (__stlxr(v22 - 1, v21));
          if (!v22)
          {
            ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
            std::__shared_weak_count::__release_weak(size);
          }
        }
        v23 = v38[0];
        if ((void *)((char *)v38[1] - (char *)v38[0]) == (void *)8)
        {
          v24 = *(unsigned __int16 *)v38[0];
          v25 = *((unsigned __int16 *)v38[0] + 1);
          v26 = *((unsigned __int16 *)v38[0] + 2) - v24 + 1;
          v27 = *((unsigned __int16 *)v38[0] + 3) - v25 + 1;
          *(_DWORD *)(a1 + 1232) = v24;
          *(_DWORD *)(a1 + 1236) = v25;
          *(_DWORD *)(a1 + 1240) = v26;
          *(_DWORD *)(a1 + 1244) = v27;
          *(_DWORD *)(a1 + 1216) += v24;
          *(_DWORD *)(a1 + 1220) += v25;
          *(_DWORD *)(a1 + 1224) = v26;
          *(_DWORD *)(a1 + 1228) = v27;
        }
        else
        {
LABEL_81:
          if (!v23)
            return sub_1D5285200(v40);
        }
        v38[1] = v23;
        operator delete(v23);
      }
    }
    else if (v9 == 5378)
    {
      if (a3[1] == 1 && *((_DWORD *)a3 + 1) == 1)
      {
        LODWORD(__p.__r_.__value_.__l.__data_) = 0;
        sub_1D5285A24(v38, (unsigned int *)&__p);
        *(_BYTE *)(a1 + 1180) = (sub_1D52B19D0((uint64_t)a3, (unsigned int *)v38) & 3) != 0;
      }
    }
    else if (v9 == 5386 && a3[1] == 11 && *((_DWORD *)a3 + 1) == 4)
    {
      sub_1D52917E4(a1, &__p);
      sub_1D52A75D8((uint64_t)a3, (uint64_t *)&__p, v38);
      v10 = *(void **)(a1 + 1184);
      if (v10)
      {
        *(_QWORD *)(a1 + 1192) = v10;
        operator delete(v10);
        *(_QWORD *)(a1 + 1184) = 0;
        *(_QWORD *)(a1 + 1192) = 0;
        *(_QWORD *)(a1 + 1200) = 0;
      }
      *(_OWORD *)(a1 + 1184) = *(_OWORD *)v38;
      *(_QWORD *)(a1 + 1200) = v39;
      v38[1] = 0;
      v39 = 0;
      v38[0] = 0;
      v11 = (std::__shared_weak_count *)__p.__r_.__value_.__l.__size_;
      if (__p.__r_.__value_.__l.__size_)
      {
        v12 = (unint64_t *)(__p.__r_.__value_.__l.__size_ + 8);
        do
          v13 = __ldaxr(v12);
        while (__stlxr(v13 - 1, v12));
LABEL_32:
        if (!v13)
        {
          ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
          std::__shared_weak_count::__release_weak(v11);
        }
      }
    }
  }
  else
  {
    switch(*a3)
    {
      case 0x612u:
        if (a3[1] == 3 && (*((_DWORD *)a3 + 1) - 1) <= 1)
        {
          LODWORD(__p.__r_.__value_.__l.__data_) = 0;
          sub_1D5285A24(v38, (unsigned int *)&__p);
          *(_DWORD *)(a1 + 1216) = sub_1D52A7E28((uint64_t)a3, (unsigned int *)v38);
        }
        break;
      case 0x613u:
        if (a3[1] == 3 && (*((_DWORD *)a3 + 1) - 1) <= 1)
        {
          LODWORD(__p.__r_.__value_.__l.__data_) = 0;
          sub_1D5285A24(v38, (unsigned int *)&__p);
          *(_DWORD *)(a1 + 1220) = sub_1D52A7E28((uint64_t)a3, (unsigned int *)v38);
        }
        break;
      case 0x614u:
        if (a3[1] == 4 && *((_DWORD *)a3 + 1) == 1)
        {
          v18 = *((_DWORD *)a3 + 2);
          *(_DWORD *)(a1 + 1224) = v18;
          *(_DWORD *)(a1 + 1208) = v18;
        }
        break;
      case 0x615u:
        if (a3[1] == 4 && *((_DWORD *)a3 + 1) == 1)
        {
          v19 = *((_DWORD *)a3 + 2);
          *(_DWORD *)(a1 + 1228) = v19;
          *(_DWORD *)(a1 + 1212) = v19;
        }
        break;
      default:
        if (v9 == 256)
        {
          if (a3[1] == 3)
          {
            v28 = *((_DWORD *)a3 + 1);
            if (v28 == 2 || v28 == 4)
            {
              sub_1D52917E4(a1, &__p);
              sub_1D52A79AC((uint64_t)a3, (uint64_t *)&__p, (uint64_t)v38);
              v29 = (std::__shared_weak_count *)__p.__r_.__value_.__l.__size_;
              if (__p.__r_.__value_.__l.__size_)
              {
                v30 = (unint64_t *)(__p.__r_.__value_.__l.__size_ + 8);
                do
                  v31 = __ldaxr(v30);
                while (__stlxr(v31 - 1, v30));
                if (!v31)
                {
                  ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
                  std::__shared_weak_count::__release_weak(v29);
                }
              }
              if (*((char *)a2 + 23) < 0)
                sub_1D5290130(&__p, *a2, (unint64_t)a2[1]);
              else
                __p = *(std::string *)a2;
              std::string::append(&__p, ":WBRedBlueLevels", 0x10uLL);
              v32 = ((char *)v38[1] - (char *)v38[0]) >> 1;
              if (v32 == 4)
              {
                v34 = *((unsigned __int16 *)v38[0] + 2);
                LODWORD(__src) = *(unsigned __int16 *)v38[0];
                HIDWORD(__src) = v34;
                v43 = *((unsigned __int16 *)v38[0] + 1);
                p_p = &__p;
                v35 = sub_1D52B3E7C((uint64_t **)(a1 + 120), (void **)&__p.__r_.__value_.__l.__data_, (uint64_t)&unk_1D544A5C4, (__int128 **)&p_p);
                sub_1D5282A44((char *)v35 + 56, (char *)&__src, (uint64_t)v44, 3uLL);
              }
              else if (v32 == 2)
              {
                LODWORD(__src) = *(unsigned __int16 *)v38[0];
                HIDWORD(__src) = 256;
                v43 = *((unsigned __int16 *)v38[0] + 1);
                p_p = &__p;
                v33 = sub_1D52B3E7C((uint64_t **)(a1 + 120), (void **)&__p.__r_.__value_.__l.__data_, (uint64_t)&unk_1D544A5C4, (__int128 **)&p_p);
                sub_1D5282A44((char *)v33 + 56, (char *)&__src, (uint64_t)v44, 3uLL);
              }
              if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
                operator delete(__p.__r_.__value_.__l.__data_);
              v23 = v38[0];
              goto LABEL_81;
            }
          }
        }
        else if (v9 == 1536 && a3[1] == 3 && *((_DWORD *)a3 + 1) == 4)
        {
          sub_1D52917E4(a1, &__p);
          sub_1D52A75D8((uint64_t)a3, (uint64_t *)&__p, v38);
          __src = a2;
          v14 = sub_1D52B3E7C((uint64_t **)(a1 + 264), a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&__src);
          v15 = (void *)v14[7];
          if (v15)
          {
            v14[8] = (uint64_t)v15;
            operator delete(v15);
            v14[7] = 0;
            v14[8] = 0;
            v14[9] = 0;
          }
          *(_OWORD *)(v14 + 7) = *(_OWORD *)v38;
          v14[9] = v39;
          v38[1] = 0;
          v39 = 0;
          v38[0] = 0;
          v11 = (std::__shared_weak_count *)__p.__r_.__value_.__l.__size_;
          if (__p.__r_.__value_.__l.__size_)
          {
            v16 = (unint64_t *)(__p.__r_.__value_.__l.__size_ + 8);
            do
              v13 = __ldaxr(v16);
            while (__stlxr(v13 - 1, v16));
            goto LABEL_32;
          }
        }
        break;
    }
  }
  return sub_1D5285200(v40);
}

void sub_1D52BDBBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (__p)
    operator delete(__p);
  sub_1D5285200(&a20);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52BDC80(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 1224) && *(_DWORD *)(a1 + 1228))
    return *(_QWORD *)(a1 + 1216);
  else
    return sub_1D529195C(a1);
}

double sub_1D52BDCB8(int *a1)
{
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr, int *, uint64_t))(*(_QWORD *)a1 + 592))(&v10, a1, 5000);
  if (v10)
  {
    v2 = sub_1D5337D88(v10);
    v3 = (double)a1[311];
    v4 = (double)a1[310] / (double)(int)v2;
    if (v4 < v3 / (double)SHIDWORD(v2))
      v4 = v3 / (double)SHIDWORD(v2);
    v5 = 1.0 / v4 * (double)a1[308] / (double)(int)v2;
  }
  else
  {
    v5 = *MEMORY[0x1E0C9D648];
  }
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v5;
}

void sub_1D52BDDCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1D52BDDE0(uint64_t a1@<X0>, char **a2@<X8>)
{
  uint64_t v4;
  void **v5;
  void **v6;
  int v7;
  int v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unsigned int v16;
  __int128 v17;
  int v18;
  void *__p[2];
  char v20;

  v4 = a1 + 704;
  sub_1D52850A0(__p, "IFD0");
  v5 = sub_1D5294144(v4, __p);
  v6 = v5;
  if ((void **)(a1 + 712) == v5)
    v7 = 0;
  else
    v7 = *((_DWORD *)v5 + 14);
  if (v20 < 0)
    operator delete(__p[0]);
  if ((v7 - 9) >= 0xFFFFFFF8 || a1 + 712 == (_QWORD)v6)
    v9 = v7;
  else
    v9 = 0;
  sub_1D52B08D0(a1, (uint64_t)a2);
  if (*(_BYTE *)(a1 + 1284))
  {
    sub_1D5282F74((int *)&v17, (int *)(a1 + 1288));
    v18 = *(_DWORD *)(a1 + 1292);
    sub_1D5291E58(a1, (int *)&v17, (unsigned int *)&v18, v9, __p);
  }
  else
  {
    __p[0] = 0;
    __p[1] = 0;
  }
  sub_1D5282F74(&v18, (int *)(a1 + 1276));
  v16 = *(_DWORD *)(a1 + 1280);
  sub_1D5291E58(a1, &v18, &v16, v9, &v17);
  if (__p[0])
    sub_1D52B0A7C(a2, (__int128 *)__p);
  if ((_QWORD)v17)
    sub_1D52B0A7C(a2, &v17);
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v17 + 1);
  if (*((_QWORD *)&v17 + 1))
  {
    v11 = (unint64_t *)(*((_QWORD *)&v17 + 1) + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v13 = (std::__shared_weak_count *)__p[1];
  if (__p[1])
  {
    v14 = (unint64_t *)((char *)__p[1] + 8);
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
}

void sub_1D52BDF80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  sub_1D5282E44((void ***)&__p);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52BDFD8(uint64_t a1)
{
  uint64_t v2;
  void *__p[2];
  char v5;

  sub_1D52850A0(__p, "IFD0");
  v2 = sub_1D52B0BBC(a1, __p);
  if (v5 < 0)
    operator delete(__p[0]);
  return v2;
}

void sub_1D52BE030(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D52BE04C(uint64_t a1)
{
  uint64_t v2;
  void *__p[2];
  char v5;

  sub_1D52850A0(__p, "IFD0");
  v2 = sub_1D52B0C2C(a1, __p);
  if (v5 < 0)
    operator delete(__p[0]);
  return v2;
}

void sub_1D52BE0A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

unint64_t sub_1D52BE0C0(uint64_t a1)
{
  unint64_t v2;
  void *__p[2];
  char v5;

  sub_1D52850A0(__p, "IFD0");
  v2 = sub_1D52B0D58(a1, __p);
  if (v5 < 0)
    operator delete(__p[0]);
  return v2;
}

void sub_1D52BE118(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D52BE134(uint64_t a1)
{
  uint64_t v2;
  void **v3;
  int *v4;
  int v5;
  int v6;
  uint64_t result;
  void *__p[2];
  char v9;

  v2 = a1 + 656;
  sub_1D52850A0(__p, "IFD0");
  v3 = sub_1D5294144(v2, __p);
  if ((void **)(a1 + 664) == v3 || (v4 = (int *)v3[7], v3[8] == v4))
  {
    LOBYTE(v5) = 0;
    v6 = 0;
  }
  else
  {
    v5 = *v4;
    v6 = 1;
  }
  if (v9 < 0)
  {
    operator delete(__p[0]);
    if (v6)
      goto LABEL_7;
LABEL_9:
    LOWORD(result) = sub_1D52919BC();
    return (unsigned __int16)result;
  }
  if (!v6)
    goto LABEL_9;
LABEL_7:
  LODWORD(result) = ~(-1 << v5);
  return (unsigned __int16)result;
}

void sub_1D52BE1E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D52BE1FC(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 792))(a1);
}

BOOL sub_1D52BE208(uint64_t a1)
{
  return *(_BYTE *)(a1 + 1180) && *(_QWORD *)(a1 + 1184) != *(_QWORD *)(a1 + 1192);
}

BOOL sub_1D52BE22C(uint64_t a1)
{
  uint64_t v2;
  void **v3;
  void **v4;
  void **v5;
  int v6;
  void *__p[2];
  char v10;

  v2 = a1 + 1320;
  sub_1D52850A0(__p, "IFD0:EXIF:MAKERNOTE:ImageProcessing");
  v3 = sub_1D5294144(v2, __p);
  v4 = v3;
  v5 = (void **)(a1 + 1328);
  if (v5 == v3)
    v6 = 0;
  else
    v6 = (_WORD)v3[7] & 1;
  if (v10 < 0)
    operator delete(__p[0]);
  return v5 != v4 && v6 != 0;
}

void sub_1D52BE2B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D52BE2D0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  unint64_t v5;
  __int128 v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  int v27;
  __int128 *v28;
  uint64_t result;
  void *__p[2];
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t *v36;

  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  sub_1D52850A0(__p, "orf");
  v4 = a2[2];
  v5 = a2[1];
  if (v5 >= v4)
  {
    v7 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *a2) >> 3);
    v8 = v7 + 1;
    if (v7 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v9 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v4 - *a2) >> 3);
    if (2 * v9 > v8)
      v8 = 2 * v9;
    if (v9 >= 0x555555555555555)
      v10 = 0xAAAAAAAAAAAAAAALL;
    else
      v10 = v8;
    v36 = a2 + 2;
    if (v10)
      v11 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v10);
    else
      v11 = 0;
    v12 = &v11[24 * v7];
    v32 = v11;
    v33 = v12;
    v35 = &v11[24 * v10];
    v13 = *(_OWORD *)__p;
    *((_QWORD *)v12 + 2) = v31;
    *(_OWORD *)v12 = v13;
    __p[1] = 0;
    v31 = 0;
    __p[0] = 0;
    v34 = v12 + 24;
    sub_1D5293D58(a2, &v32);
    v14 = a2[1];
    sub_1D5293F24((uint64_t)&v32);
    v15 = SHIBYTE(v31);
    a2[1] = v14;
    if (v15 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v6 = *(_OWORD *)__p;
    *(_QWORD *)(v5 + 16) = v31;
    *(_OWORD *)v5 = v6;
    a2[1] = v5 + 24;
  }
  sub_1D52850A0(__p, "olympus");
  v17 = a2[1];
  v16 = a2[2];
  if (v17 >= v16)
  {
    v20 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v17 - *a2) >> 3);
    v21 = v20 + 1;
    if (v20 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v22 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v16 - *a2) >> 3);
    if (2 * v22 > v21)
      v21 = 2 * v22;
    if (v22 >= 0x555555555555555)
      v23 = 0xAAAAAAAAAAAAAAALL;
    else
      v23 = v21;
    v36 = a2 + 2;
    if (v23)
      v24 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v23);
    else
      v24 = 0;
    v25 = &v24[24 * v20];
    v32 = v24;
    v33 = v25;
    v35 = &v24[24 * v23];
    v26 = *(_OWORD *)__p;
    *((_QWORD *)v25 + 2) = v31;
    *(_OWORD *)v25 = v26;
    __p[1] = 0;
    v31 = 0;
    __p[0] = 0;
    v34 = v25 + 24;
    sub_1D5293D58(a2, &v32);
    v19 = a2[1];
    sub_1D5293F24((uint64_t)&v32);
    v27 = SHIBYTE(v31);
    a2[1] = v19;
    if (v27 < 0)
    {
      operator delete(__p[0]);
      v19 = a2[1];
    }
  }
  else
  {
    v18 = *(_OWORD *)__p;
    *(_QWORD *)(v17 + 16) = v31;
    *(_OWORD *)v17 = v18;
    v19 = v17 + 24;
    a2[1] = v17 + 24;
  }
  v28 = (__int128 *)(a1 + 1296);
  if (v19 >= a2[2])
  {
    result = sub_1D52B2070(a2, v28);
  }
  else
  {
    sub_1D529E60C(a2, v28);
    result = v19 + 24;
  }
  a2[1] = result;
  return result;
}

void sub_1D52BE560(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  sub_1D5293F24((uint64_t)&a15);
  if (a14 < 0)
    operator delete(__p);
  sub_1D5293CCC((void ***)&__p);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52BE5B0(std::string *a1, uint64_t a2, uint64_t a3)
{
  std::__shared_weak_count *size;
  unint64_t *v6;
  unint64_t v7;
  BOOL v8;
  std::string __p;
  uint64_t v11[3];

  sub_1D52917E4((uint64_t)a1, &__p);
  sub_1D52B1C58(v11, (uint64_t *)&__p);
  size = (std::__shared_weak_count *)__p.__r_.__value_.__l.__size_;
  if (__p.__r_.__value_.__l.__size_)
  {
    v6 = (unint64_t *)(__p.__r_.__value_.__l.__size_ + 8);
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
  v8 = *(_WORD *)a3 == 256 && *(_WORD *)(a3 + 2) == 2;
  if (v8 && *(_DWORD *)(a3 + 4) <= 0x3Fu)
  {
    memset(&__p, 0, sizeof(__p));
    if (sub_1D52ADD1C((uint64_t)a1, a3, &__p, 1))
      std::string::operator=(a1 + 54, &__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  return sub_1D5285200(v11);
}

void sub_1D52BE690(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15)
{
  if (a14 < 0)
    operator delete(__p);
  sub_1D5285200(&a15);
  _Unwind_Resume(a1);
}

id sub_1D52BE6C8(uint64_t a1)
{
  void *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  const char *v9;
  void *v10;
  const char *v11;
  void *v12;
  void *v13;
  const char *v14;
  void *v15;
  void *v16;
  const char *v17;
  void *v18;
  const char *v19;
  void *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  _QWORD v34[5];
  _QWORD v35[5];
  _QWORD v36[5];
  _QWORD v37[5];
  _QWORD v38[5];
  _QWORD v39[2];
  _QWORD v40[2];
  _QWORD v41[2];
  _QWORD v42[2];
  _QWORD v43[2];
  _QWORD v44[2];
  _QWORD v45[2];
  _QWORD v46[2];
  _QWORD v47[2];
  _QWORD v48[2];
  _QWORD v49[5];
  _QWORD v50[7];

  v50[5] = *MEMORY[0x1E0C80C00];
  sub_1D52A947C();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v31 = (void *)objc_msgSend_mutableCopy(v2, v3, v4, v5, v6);

  v49[0] = &unk_1E99C9738;
  v48[0] = CFSTR("EquipmentIFD");
  v7 = MEMORY[0x1E0C809B0];
  v47[0] = CFSTR("Name");
  v47[1] = CFSTR("Namespace");
  v38[0] = MEMORY[0x1E0C809B0];
  v38[1] = 3221225472;
  v38[2] = sub_1D52BEAB4;
  v38[3] = &unk_1E99732B0;
  v38[4] = a1;
  v33 = (void *)MEMORY[0x1D82721B4](v38);
  v48[1] = v33;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v8, (uint64_t)v48, (uint64_t)v47, 2);
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  v50[0] = v30;
  v49[1] = &unk_1E99C9750;
  v45[1] = CFSTR("Namespace");
  v46[0] = CFSTR("CameraSettingsIFD");
  v45[0] = CFSTR("Name");
  v37[0] = v7;
  v37[1] = 3221225472;
  v37[2] = sub_1D52BED18;
  v37[3] = &unk_1E99732B0;
  v37[4] = a1;
  v32 = (void *)MEMORY[0x1D82721B4](v37);
  v46[1] = v32;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v9, (uint64_t)v46, (uint64_t)v45, 2);
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v50[1] = v29;
  v49[2] = &unk_1E99C9768;
  v43[1] = CFSTR("Namespace");
  v44[0] = CFSTR("RawDevelopmentIFD");
  v43[0] = CFSTR("Name");
  v36[0] = v7;
  v36[1] = 3221225472;
  v36[2] = sub_1D52BF364;
  v36[3] = &unk_1E99732B0;
  v36[4] = a1;
  v10 = (void *)MEMORY[0x1D82721B4](v36);
  v44[1] = v10;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v11, (uint64_t)v44, (uint64_t)v43, 2);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v50[2] = v12;
  v49[3] = &unk_1E99C9780;
  v41[1] = CFSTR("Namespace");
  v42[0] = CFSTR("ImageProcessingIFD");
  v41[0] = CFSTR("Name");
  v35[0] = v7;
  v35[1] = 3221225472;
  v35[2] = sub_1D52BF4E8;
  v35[3] = &unk_1E99732B0;
  v35[4] = a1;
  v13 = (void *)MEMORY[0x1D82721B4](v35);
  v42[1] = v13;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v14, (uint64_t)v42, (uint64_t)v41, 2);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v50[3] = v15;
  v49[4] = &unk_1E99C9798;
  v39[1] = CFSTR("Namespace");
  v40[0] = CFSTR("FocusInfoIFD");
  v39[0] = CFSTR("Name");
  v34[0] = v7;
  v34[1] = 3221225472;
  v34[2] = sub_1D52BFA44;
  v34[3] = &unk_1E99732B0;
  v34[4] = a1;
  v16 = (void *)MEMORY[0x1D82721B4](v34);
  v40[1] = v16;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v17, (uint64_t)v40, (uint64_t)v39, 2);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v50[4] = v18;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v19, (uint64_t)v50, (uint64_t)v49, 5);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addEntriesFromDictionary_(v31, v21, (uint64_t)v20, v22, v23);

  objc_msgSend_dictionaryWithDictionary_(MEMORY[0x1E0C99D80], v24, (uint64_t)v31, v25, v26);
  v27 = (void *)objc_claimAutoreleasedReturnValue();

  return v27;
}

void sub_1D52BEA18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{

  _Unwind_Resume(a1);
}

id sub_1D52BEAB8(uint64_t a1, const char *a2)
{
  _QWORD v3[25];
  _QWORD v4[26];

  v4[25] = *MEMORY[0x1E0C80C00];
  v3[0] = &unk_1E99C97B0;
  v3[1] = &unk_1E99C97C8;
  v4[0] = &unk_1E99CE270;
  v4[1] = &unk_1E99CE298;
  v3[2] = &unk_1E99C97E0;
  v3[3] = &unk_1E99C97F8;
  v4[2] = &unk_1E99CE2C0;
  v4[3] = &unk_1E99CE2E8;
  v3[4] = &unk_1E99C9810;
  v3[5] = &unk_1E99C9828;
  v4[4] = &unk_1E99CE310;
  v4[5] = &unk_1E99CE338;
  v3[6] = &unk_1E99C9840;
  v3[7] = &unk_1E99C9858;
  v4[6] = &unk_1E99CE360;
  v4[7] = &unk_1E99CE388;
  v3[8] = &unk_1E99C9870;
  v3[9] = &unk_1E99C9888;
  v4[8] = &unk_1E99CE3B0;
  v4[9] = &unk_1E99CE3D8;
  v3[10] = &unk_1E99C98A0;
  v3[11] = &unk_1E99C98B8;
  v4[10] = &unk_1E99CE400;
  v4[11] = &unk_1E99CE428;
  v3[12] = &unk_1E99C98D0;
  v3[13] = &unk_1E99C98E8;
  v4[12] = &unk_1E99CE450;
  v4[13] = &unk_1E99CE478;
  v3[14] = &unk_1E99C9900;
  v3[15] = &unk_1E99C9918;
  v4[14] = &unk_1E99CE4A0;
  v4[15] = &unk_1E99CE4C8;
  v3[16] = &unk_1E99C9930;
  v3[17] = &unk_1E99C9948;
  v4[16] = &unk_1E99CE4F0;
  v4[17] = &unk_1E99CE518;
  v3[18] = &unk_1E99C9960;
  v3[19] = &unk_1E99C9978;
  v4[18] = &unk_1E99CE540;
  v4[19] = &unk_1E99CE568;
  v3[20] = &unk_1E99C9990;
  v3[21] = &unk_1E99C99A8;
  v4[20] = &unk_1E99CE590;
  v4[21] = &unk_1E99CE5B8;
  v3[22] = &unk_1E99C99C0;
  v3[23] = &unk_1E99C99D8;
  v4[22] = &unk_1E99CE5E0;
  v4[23] = &unk_1E99CE608;
  v3[24] = &unk_1E99C99F0;
  v4[24] = &unk_1E99CE630;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], a2, (uint64_t)v4, (uint64_t)v3, 25);
  return (id)objc_claimAutoreleasedReturnValue();
}

id sub_1D52BED1C(uint64_t a1, const char *a2)
{
  _QWORD v3[68];
  _QWORD v4[69];

  v4[68] = *MEMORY[0x1E0C80C00];
  v3[0] = &unk_1E99C97B0;
  v3[1] = &unk_1E99C97C8;
  v4[0] = &unk_1E99CF2B0;
  v4[1] = &unk_1E99CF2D8;
  v3[2] = &unk_1E99C97E0;
  v3[3] = &unk_1E99C97F8;
  v4[2] = &unk_1E99CF300;
  v4[3] = &unk_1E99CF328;
  v3[4] = &unk_1E99C9C78;
  v3[5] = &unk_1E99C9840;
  v4[4] = &unk_1E99CF350;
  v4[5] = &unk_1E99CF378;
  v3[6] = &unk_1E99C9858;
  v3[7] = &unk_1E99C9870;
  v4[6] = &unk_1E99CF3A0;
  v4[7] = &unk_1E99CF3C8;
  v3[8] = &unk_1E99C9888;
  v3[9] = &unk_1E99C9C90;
  v4[8] = &unk_1E99CF3F0;
  v4[9] = &unk_1E99CF418;
  v3[10] = &unk_1E99C9930;
  v3[11] = &unk_1E99C9948;
  v4[10] = &unk_1E99CF440;
  v4[11] = &unk_1E99CF468;
  v3[12] = &unk_1E99C9960;
  v3[13] = &unk_1E99C9978;
  v4[12] = &unk_1E99CF490;
  v4[13] = &unk_1E99CF4B8;
  v3[14] = &unk_1E99C9F48;
  v3[15] = &unk_1E99CA038;
  v4[14] = &unk_1E99CF4E0;
  v4[15] = &unk_1E99CF508;
  v3[16] = &unk_1E99CA050;
  v3[17] = &unk_1E99C9F60;
  v4[16] = &unk_1E99CF530;
  v4[17] = &unk_1E99CF558;
  v3[18] = &unk_1E99CA068;
  v3[19] = &unk_1E99CA080;
  v4[18] = &unk_1E99CF580;
  v4[19] = &unk_1E99CF5A8;
  v3[20] = &unk_1E99C9990;
  v3[21] = &unk_1E99CA098;
  v4[20] = &unk_1E99CF5D0;
  v4[21] = &unk_1E99CF5F8;
  v3[22] = &unk_1E99CA0B0;
  v3[23] = &unk_1E99CA0C8;
  v4[22] = &unk_1E99CF620;
  v4[23] = &unk_1E99CF648;
  v3[24] = &unk_1E99CA0E0;
  v3[25] = &unk_1E99CA0F8;
  v4[24] = &unk_1E99CF670;
  v4[25] = &unk_1E99CF698;
  v3[26] = &unk_1E99CA110;
  v3[27] = &unk_1E99CA128;
  v4[26] = &unk_1E99CF6C0;
  v4[27] = &unk_1E99CF6E8;
  v3[28] = &unk_1E99CA140;
  v3[29] = &unk_1E99CA158;
  v4[28] = &unk_1E99CF710;
  v4[29] = &unk_1E99CF738;
  v3[30] = &unk_1E99CA170;
  v3[31] = &unk_1E99CA188;
  v4[30] = &unk_1E99CF760;
  v4[31] = &unk_1E99CF788;
  v3[32] = &unk_1E99CA1A0;
  v3[33] = &unk_1E99CA1B8;
  v4[32] = &unk_1E99CF7B0;
  v4[33] = &unk_1E99CF7D8;
  v3[34] = &unk_1E99CA1D0;
  v3[35] = &unk_1E99CA1E8;
  v4[34] = &unk_1E99CF800;
  v4[35] = &unk_1E99CF828;
  v3[36] = &unk_1E99CA200;
  v3[37] = &unk_1E99CA218;
  v4[36] = &unk_1E99CF850;
  v4[37] = &unk_1E99CF878;
  v3[38] = &unk_1E99CA230;
  v3[39] = &unk_1E99CA248;
  v4[38] = &unk_1E99CF8A0;
  v4[39] = &unk_1E99CF8C8;
  v3[40] = &unk_1E99CA260;
  v3[41] = &unk_1E99CA278;
  v4[40] = &unk_1E99CF8F0;
  v4[41] = &unk_1E99CF918;
  v3[42] = &unk_1E99CA290;
  v3[43] = &unk_1E99CA2A8;
  v4[42] = &unk_1E99CF940;
  v4[43] = &unk_1E99CF968;
  v3[44] = &unk_1E99CA2C0;
  v3[45] = &unk_1E99CA2D8;
  v4[44] = &unk_1E99CF990;
  v4[45] = &unk_1E99CF9B8;
  v3[46] = &unk_1E99CA2F0;
  v3[47] = &unk_1E99CA308;
  v4[46] = &unk_1E99CF9E0;
  v4[47] = &unk_1E99CFA08;
  v3[48] = &unk_1E99CA320;
  v3[49] = &unk_1E99CA338;
  v4[48] = &unk_1E99CFA30;
  v4[49] = &unk_1E99CFA58;
  v3[50] = &unk_1E99CA350;
  v3[51] = &unk_1E99CA368;
  v4[50] = &unk_1E99CFA80;
  v4[51] = &unk_1E99CFAA8;
  v3[52] = &unk_1E99CA380;
  v3[53] = &unk_1E99CA398;
  v4[52] = &unk_1E99CFAD0;
  v4[53] = &unk_1E99CFAF8;
  v3[54] = &unk_1E99CA3B0;
  v3[55] = &unk_1E99CA3C8;
  v4[54] = &unk_1E99CFB20;
  v4[55] = &unk_1E99CFB48;
  v3[56] = &unk_1E99CA3E0;
  v3[57] = &unk_1E99C9CD8;
  v4[56] = &unk_1E99CFB70;
  v4[57] = &unk_1E99CFB98;
  v3[58] = &unk_1E99CA3F8;
  v3[59] = &unk_1E99CA410;
  v4[58] = &unk_1E99CFBC0;
  v4[59] = &unk_1E99CFBE8;
  v3[60] = &unk_1E99CA428;
  v3[61] = &unk_1E99CA440;
  v4[60] = &unk_1E99CFC10;
  v4[61] = &unk_1E99CFC38;
  v3[62] = &unk_1E99CA458;
  v3[63] = &unk_1E99CA470;
  v4[62] = &unk_1E99CFC60;
  v4[63] = &unk_1E99CFC88;
  v3[64] = &unk_1E99CA488;
  v4[64] = &unk_1E99CFCB0;
  v3[65] = &unk_1E99CA4A0;
  v4[65] = &unk_1E99CFCD8;
  v3[66] = &unk_1E99CA4B8;
  v4[66] = &unk_1E99CFD00;
  v3[67] = &unk_1E99CA4D0;
  v4[67] = &unk_1E99CFD28;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], a2, (uint64_t)v4, (uint64_t)v3, 68);
  return (id)objc_claimAutoreleasedReturnValue();
}

id sub_1D52BF368(uint64_t a1, const char *a2)
{
  _QWORD v3[14];
  _QWORD v4[15];

  v4[14] = *MEMORY[0x1E0C80C00];
  v3[0] = &unk_1E99C97B0;
  v3[1] = &unk_1E99C97C8;
  v4[0] = &unk_1E99CFD50;
  v4[1] = &unk_1E99CFD78;
  v3[2] = &unk_1E99C97E0;
  v3[3] = &unk_1E99C97F8;
  v4[2] = &unk_1E99CFDA0;
  v4[3] = &unk_1E99CFDC8;
  v3[4] = &unk_1E99C9810;
  v3[5] = &unk_1E99C9828;
  v4[4] = &unk_1E99CFDF0;
  v4[5] = &unk_1E99CFE18;
  v3[6] = &unk_1E99C9A08;
  v3[7] = &unk_1E99C9A20;
  v4[6] = &unk_1E99CFE40;
  v4[7] = &unk_1E99CFE68;
  v3[8] = &unk_1E99C9A38;
  v3[9] = &unk_1E99C9A50;
  v4[8] = &unk_1E99CFE90;
  v4[9] = &unk_1E99CFEB8;
  v3[10] = &unk_1E99C9A68;
  v3[11] = &unk_1E99C9A80;
  v4[10] = &unk_1E99CFEE0;
  v4[11] = &unk_1E99CFF08;
  v3[12] = &unk_1E99C9A98;
  v3[13] = &unk_1E99C9AB0;
  v4[12] = &unk_1E99CFF30;
  v4[13] = &unk_1E99CFF58;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], a2, (uint64_t)v4, (uint64_t)v3, 14);
  return (id)objc_claimAutoreleasedReturnValue();
}

id sub_1D52BF4EC(uint64_t a1, const char *a2)
{
  _QWORD v3[58];
  _QWORD v4[59];

  v4[58] = *MEMORY[0x1E0C80C00];
  v3[0] = &unk_1E99C97B0;
  v3[1] = &unk_1E99C97C8;
  v4[0] = &unk_1E99CE658;
  v4[1] = &unk_1E99CE680;
  v3[2] = &unk_1E99C97F8;
  v3[3] = &unk_1E99C9810;
  v4[2] = &unk_1E99CE6A8;
  v4[3] = &unk_1E99CE6D0;
  v3[4] = &unk_1E99C9828;
  v3[5] = &unk_1E99C9A08;
  v4[4] = &unk_1E99CE6F8;
  v4[5] = &unk_1E99CE720;
  v3[6] = &unk_1E99C9A20;
  v3[7] = &unk_1E99C9A38;
  v4[6] = &unk_1E99CE748;
  v4[7] = &unk_1E99CE770;
  v3[8] = &unk_1E99C9A50;
  v3[9] = &unk_1E99C9A68;
  v4[8] = &unk_1E99CE798;
  v4[9] = &unk_1E99CE7C0;
  v3[10] = &unk_1E99C9A80;
  v3[11] = &unk_1E99C9A98;
  v4[10] = &unk_1E99CE7E8;
  v4[11] = &unk_1E99CE810;
  v3[12] = &unk_1E99C9AB0;
  v3[13] = &unk_1E99C9AC8;
  v4[12] = &unk_1E99CE838;
  v4[13] = &unk_1E99CE860;
  v3[14] = &unk_1E99C9AE0;
  v3[15] = &unk_1E99C9AF8;
  v4[14] = &unk_1E99CE888;
  v4[15] = &unk_1E99CE8B0;
  v3[16] = &unk_1E99C9B10;
  v3[17] = &unk_1E99C9B28;
  v4[16] = &unk_1E99CE8D8;
  v4[17] = &unk_1E99CE900;
  v3[18] = &unk_1E99C9B40;
  v3[19] = &unk_1E99C9B58;
  v4[18] = &unk_1E99CE928;
  v4[19] = &unk_1E99CE950;
  v3[20] = &unk_1E99C9B70;
  v3[21] = &unk_1E99C9B88;
  v4[20] = &unk_1E99CE978;
  v4[21] = &unk_1E99CE9A0;
  v3[22] = &unk_1E99C9BA0;
  v3[23] = &unk_1E99C9BB8;
  v4[22] = &unk_1E99CE9C8;
  v4[23] = &unk_1E99CE9F0;
  v3[24] = &unk_1E99C9BD0;
  v3[25] = &unk_1E99C9BE8;
  v4[24] = &unk_1E99CEA18;
  v4[25] = &unk_1E99CEA40;
  v3[26] = &unk_1E99C9C00;
  v3[27] = &unk_1E99C9C18;
  v4[26] = &unk_1E99CEA68;
  v4[27] = &unk_1E99CEA90;
  v3[28] = &unk_1E99C9C30;
  v3[29] = &unk_1E99C9C48;
  v4[28] = &unk_1E99CEAB8;
  v4[29] = &unk_1E99CEAE0;
  v3[30] = &unk_1E99C9C60;
  v3[31] = &unk_1E99C9C78;
  v4[30] = &unk_1E99CEB08;
  v4[31] = &unk_1E99CEB30;
  v3[32] = &unk_1E99C9C90;
  v3[33] = &unk_1E99C9930;
  v4[32] = &unk_1E99CEB58;
  v4[33] = &unk_1E99CEB80;
  v3[34] = &unk_1E99C9CA8;
  v3[35] = &unk_1E99C9CC0;
  v4[34] = &unk_1E99CEBA8;
  v4[35] = &unk_1E99CEBD0;
  v3[36] = &unk_1E99C9CD8;
  v3[37] = &unk_1E99C9CF0;
  v4[36] = &unk_1E99CEBF8;
  v4[37] = &unk_1E99CEC20;
  v3[38] = &unk_1E99C9D08;
  v3[39] = &unk_1E99C9D20;
  v4[38] = &unk_1E99CEC48;
  v4[39] = &unk_1E99CEC70;
  v3[40] = &unk_1E99C9D38;
  v3[41] = &unk_1E99C9D50;
  v4[40] = &unk_1E99CEC98;
  v4[41] = &unk_1E99CECC0;
  v3[42] = &unk_1E99C9D68;
  v3[43] = &unk_1E99C9D80;
  v4[42] = &unk_1E99CECE8;
  v4[43] = &unk_1E99CED10;
  v3[44] = &unk_1E99C9D98;
  v3[45] = &unk_1E99C9DB0;
  v4[44] = &unk_1E99CED38;
  v4[45] = &unk_1E99CED60;
  v3[46] = &unk_1E99C9DC8;
  v3[47] = &unk_1E99C9DE0;
  v4[46] = &unk_1E99CED88;
  v4[47] = &unk_1E99CEDB0;
  v3[48] = &unk_1E99C9DF8;
  v3[49] = &unk_1E99C9E10;
  v4[48] = &unk_1E99CEDD8;
  v4[49] = &unk_1E99CEE00;
  v3[50] = &unk_1E99C9E28;
  v3[51] = &unk_1E99C9E40;
  v4[50] = &unk_1E99CEE28;
  v4[51] = &unk_1E99CEE50;
  v3[52] = &unk_1E99C9E58;
  v3[53] = &unk_1E99C9E70;
  v4[52] = &unk_1E99CEE78;
  v4[53] = &unk_1E99CEEA0;
  v3[54] = &unk_1E99C9E88;
  v3[55] = &unk_1E99C9EA0;
  v4[54] = &unk_1E99CEEC8;
  v4[55] = &unk_1E99CEEF0;
  v3[56] = &unk_1E99C9EB8;
  v3[57] = &unk_1E99C9ED0;
  v4[56] = &unk_1E99CEF18;
  v4[57] = &unk_1E99CEF40;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], a2, (uint64_t)v4, (uint64_t)v3, 58);
  return (id)objc_claimAutoreleasedReturnValue();
}

id sub_1D52BFA48(uint64_t a1, const char *a2)
{
  _QWORD v3[21];
  _QWORD v4[22];

  v4[21] = *MEMORY[0x1E0C80C00];
  v3[0] = &unk_1E99C97B0;
  v3[1] = &unk_1E99C9EE8;
  v4[0] = &unk_1E99CEF68;
  v4[1] = &unk_1E99CEF90;
  v3[2] = &unk_1E99C9F00;
  v3[3] = &unk_1E99C9F18;
  v4[2] = &unk_1E99CEFB8;
  v4[3] = &unk_1E99CEFE0;
  v3[4] = &unk_1E99C9F30;
  v3[5] = &unk_1E99C9C90;
  v4[4] = &unk_1E99CF008;
  v4[5] = &unk_1E99CF030;
  v3[6] = &unk_1E99C9930;
  v3[7] = &unk_1E99C9960;
  v4[6] = &unk_1E99CF058;
  v4[7] = &unk_1E99CF080;
  v3[8] = &unk_1E99C9978;
  v3[9] = &unk_1E99C9F48;
  v4[8] = &unk_1E99CF0A8;
  v4[9] = &unk_1E99CF0D0;
  v3[10] = &unk_1E99C9F60;
  v3[11] = &unk_1E99C9F78;
  v4[10] = &unk_1E99CF0F8;
  v4[11] = &unk_1E99CF120;
  v3[12] = &unk_1E99C9E28;
  v3[13] = &unk_1E99C9E58;
  v4[12] = &unk_1E99CF148;
  v4[13] = &unk_1E99CF170;
  v3[14] = &unk_1E99C9F90;
  v3[15] = &unk_1E99C9FA8;
  v4[14] = &unk_1E99CF198;
  v4[15] = &unk_1E99CF1C0;
  v3[16] = &unk_1E99C9FC0;
  v3[17] = &unk_1E99C9FD8;
  v4[16] = &unk_1E99CF1E8;
  v4[17] = &unk_1E99CF210;
  v3[18] = &unk_1E99C9FF0;
  v3[19] = &unk_1E99CA008;
  v4[18] = &unk_1E99CF238;
  v4[19] = &unk_1E99CF260;
  v3[20] = &unk_1E99CA020;
  v4[20] = &unk_1E99CF288;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], a2, (uint64_t)v4, (uint64_t)v3, 21);
  return (id)objc_claimAutoreleasedReturnValue();
}

void sub_1D52BFC5C(uint64_t a1)
{
  sub_1D52BFC80(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52BFC80(uint64_t a1)
{
  void *v2;

  *(_QWORD *)a1 = off_1E9972F78;
  sub_1D52940F4(a1 + 1320, *(char **)(a1 + 1328));
  if (*(char *)(a1 + 1319) < 0)
    operator delete(*(void **)(a1 + 1296));
  if (*(char *)(a1 + 1271) < 0)
    operator delete(*(void **)(a1 + 1248));
  v2 = *(void **)(a1 + 1184);
  if (v2)
  {
    *(_QWORD *)(a1 + 1192) = v2;
    operator delete(v2);
  }
  return sub_1D52B2190(a1);
}

void sub_1D52BFCE8(uint64_t *a1@<X1>, char *a2@<X2>, void **a3@<X3>, void **a4@<X4>, _QWORD *a5@<X8>)
{
  _QWORD *v10;

  v10 = operator new(0x568uLL);
  sub_1D52BFD68(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;
  sub_1D5285658((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1D52BFD54(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52BFD68(_QWORD *a1, uint64_t *a2, char *a3, void **a4, void **a5)
{
  a1[2] = 0;
  *a1 = &unk_1E99732F8;
  a1[1] = 0;
  sub_1D52C03D4((uint64_t)(a1 + 3), a2, *a3, *a4, *a5);
  return a1;
}

void sub_1D52BFDAC(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52BFDC0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E99732F8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52BFDD4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E99732F8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52BFE08(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a1 + 24) + 16))(a1 + 24);
}

void sub_1D52BFE18(uint64_t *a1@<X1>, char *a2@<X2>, void **a3@<X3>, void **a4@<X4>, _QWORD *a5@<X8>)
{
  _QWORD *v10;

  v10 = operator new(0x568uLL);
  sub_1D52BFE98(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;
  sub_1D5285658((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1D52BFE84(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52BFE98(_QWORD *a1, uint64_t *a2, char *a3, void **a4, void **a5)
{
  a1[2] = 0;
  *a1 = &unk_1E9973348;
  a1[1] = 0;
  sub_1D52C1030((uint64_t)(a1 + 3), a2, *a3, *a4, *a5);
  return a1;
}

void sub_1D52BFEDC(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52BFEF0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9973348;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52BFF04(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9973348;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52BFF38(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a1 + 24) + 16))(a1 + 24);
}

int *sub_1D52BFF48(int *result, _QWORD *a2)
{
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  void *exception;

  v2 = *result;
  v3 = __OFSUB__(v2, *a2);
  v4 = v2 - *a2;
  *result = v4;
  if (v3 || (unint64_t)(v4 - 0x80000000) <= 0xFFFFFFFEFFFFFFFFLL)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return result;
}

void sub_1D52BFFB8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

id sub_1D52BFFCC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const char *v28;
  void *v29;
  const char *v30;
  uint64_t v31;
  void *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[11];
  _QWORD v43[2];

  v43[1] = *MEMORY[0x1E0C80C00];
  v5 = *MEMORY[0x1E0CBD388];
  v34 = *MEMORY[0x1E0CBD368];
  v35 = v5;
  v42[0] = MEMORY[0x1E0C9AAA0];
  v42[1] = CFSTR("com.olympus.or-raw-image");
  v6 = *MEMORY[0x1E0CBD380];
  v36 = *MEMORY[0x1E0CBD348];
  v42[2] = CFSTR(".orf.");
  v42[3] = &unk_1E99CA4E8;
  v42[4] = &unk_1E99CA500;
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], a2, (uint64_t)sub_1D52C0280, a4, a5, v34, v35, v36, v6, *MEMORY[0x1E0CBD370], *MEMORY[0x1E0CBD378]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v42[5] = v7;
  v37 = *MEMORY[0x1E0CBD330];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v8, (uint64_t)sub_1D52C028C, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v42[6] = v11;
  v38 = *MEMORY[0x1E0CBD350];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v12, (uint64_t)sub_1D52C0298, v13, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v42[7] = v15;
  v39 = *MEMORY[0x1E0CBD338];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v16, (uint64_t)sub_1D52E8DA4, v17, v18);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v42[8] = v19;
  v40 = *MEMORY[0x1E0CBD358];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v20, (uint64_t)sub_1D52C02A4, v21, v22);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v42[9] = v23;
  v41 = *MEMORY[0x1E0CBD360];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v24, (uint64_t)sub_1D52C02B0, v25, v26);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v42[10] = v27;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v28, (uint64_t)v42, (uint64_t)&v34, 11);
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v43[0] = v29;
  objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v30, (uint64_t)v43, 1, v31);
  v32 = (void *)objc_claimAutoreleasedReturnValue();

  return v32;
}

void sub_1D52C0220(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

BOOL sub_1D52C0280(unsigned __int8 *a1, unint64_t a2)
{
  return sub_1D52C0354(a1, a2, (unsigned __int16 *)"RO24COlympusORFORImageParser");
}

void sub_1D52C028C(const void *a1, uint64_t a2, uint64_t a3)
{
  sub_1D52E7A20(a1, a2, a3, &unk_1E9973388);
}

uint64_t sub_1D52C0298(os_signpost_id_t a1)
{
  return sub_1D52E8C40(a1);
}

uint64_t sub_1D52C02A4(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1D52E7438(a1, a2, a3, &unk_1E9973388);
}

uint64_t sub_1D52C02B0(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1D52E9A7C(a1, a2, a3, &unk_1E9973388);
}

void sub_1D52C02BC(uint64_t *a1@<X1>, char a2@<W2>, void *a3@<X3>, void *a4@<X4>, _OWORD *a5@<X8>)
{
  __int128 v8;
  id v9;
  id v10;
  char v11;

  v11 = a2;
  v10 = a3;
  v9 = a4;
  sub_1D52BFCE8(a1, &v11, &v10, &v9, &v8);
  *a5 = v8;

}

void sub_1D52C0338(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{

  _Unwind_Resume(a1);
}

BOOL sub_1D52C0354(unsigned __int8 *a1, unint64_t a2, unsigned __int16 *a3)
{
  int v3;
  unsigned int v4;
  unsigned int v6;

  if (a2 >= 4)
  {
    v3 = *a1;
    if (v3 == 77)
    {
      if (a1[1] == 77)
      {
        v6 = *a3;
        if (a1[2] == v6 >> 8)
          return a1[3] == v6;
      }
    }
    else if (v3 == 73 && a1[1] == 73)
    {
      v4 = *a3;
      if (a1[2] == v4 && a1[3] == v4 >> 8)
        return 1;
    }
  }
  return 0;
}

void sub_1D52C03D4(uint64_t a1, uint64_t *a2, char a3, void *a4, void *a5)
{
  _QWORD *v5;

  sub_1D52BC180(a1, a2, a3, a4, a5);
  *v5 = off_1E99733B8;
}

uint64_t sub_1D52C03F4()
{
  return 20306;
}

void sub_1D52C03FC(_DWORD *a1@<X0>, _QWORD *a2@<X1>, _OWORD *a3@<X2>, _QWORD *a4@<X8>)
{
  int v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t *v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t *v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t *p_shared_owners;
  uint64_t v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  __int128 v30;

  *a4 = 0;
  a4[1] = 0;
  v8 = a1[336];
  if (v8 > 2)
  {
    if (v8 == 3)
    {
      (*(void (**)(uint64_t *__return_ptr, _DWORD *))(*(_QWORD *)a1 + 384))(&v28, a1);
      v27 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a1 + 424))(a1);
      sub_1D52C09F0(&v28, (unint64_t *)&v27, a2, a3, &v30);
      sub_1D5292548((uint64_t)a4, &v30);
      v23 = (std::__shared_weak_count *)*((_QWORD *)&v30 + 1);
      if (*((_QWORD *)&v30 + 1))
      {
        v24 = (unint64_t *)(*((_QWORD *)&v30 + 1) + 8);
        do
          v25 = __ldaxr(v24);
        while (__stlxr(v25 - 1, v24));
        if (!v25)
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
      }
      v12 = v29;
      if (v29)
      {
        p_shared_owners = (unint64_t *)&v29->__shared_owners_;
        do
          v14 = __ldaxr(p_shared_owners);
        while (__stlxr(v14 - 1, p_shared_owners));
        goto LABEL_41;
      }
    }
    else if (v8 == 16)
    {
      (*(void (**)(uint64_t *__return_ptr, _DWORD *))(*(_QWORD *)a1 + 384))(&v28, a1);
      v27 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a1 + 424))(a1);
      sub_1D52C0B28(&v28, (unint64_t *)&v27, a2, a3, &v30);
      v15 = v29;
      if (v29)
      {
        v16 = (unint64_t *)&v29->__shared_owners_;
        do
          v17 = __ldaxr(v16);
        while (__stlxr(v17 - 1, v16));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      sub_1D531948C(v30, 1);
      sub_1D52908C8(a4, (uint64_t *)&v30);
      v12 = (std::__shared_weak_count *)*((_QWORD *)&v30 + 1);
      if (*((_QWORD *)&v30 + 1))
      {
        v18 = (unint64_t *)(*((_QWORD *)&v30 + 1) + 8);
        do
          v14 = __ldaxr(v18);
        while (__stlxr(v14 - 1, v18));
        goto LABEL_41;
      }
    }
  }
  else if (v8 == 1)
  {
    (*(void (**)(uint64_t *__return_ptr, _DWORD *))(*(_QWORD *)a1 + 384))(&v28, a1);
    v27 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a1 + 424))(a1);
    sub_1D52C0774(&v28, (unint64_t *)&v27, a2, a3, &v30);
    sub_1D5292548((uint64_t)a4, &v30);
    v19 = (std::__shared_weak_count *)*((_QWORD *)&v30 + 1);
    if (*((_QWORD *)&v30 + 1))
    {
      v20 = (unint64_t *)(*((_QWORD *)&v30 + 1) + 8);
      do
        v21 = __ldaxr(v20);
      while (__stlxr(v21 - 1, v20));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    v12 = v29;
    if (v29)
    {
      v22 = (unint64_t *)&v29->__shared_owners_;
      do
        v14 = __ldaxr(v22);
      while (__stlxr(v14 - 1, v22));
      goto LABEL_41;
    }
  }
  else if (v8 == 2)
  {
    (*(void (**)(uint64_t *__return_ptr, _DWORD *))(*(_QWORD *)a1 + 384))(&v28, a1);
    v27 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a1 + 424))(a1);
    sub_1D52C08B8(&v28, (unint64_t *)&v27, a2, a3, &v30);
    sub_1D5292548((uint64_t)a4, &v30);
    v9 = (std::__shared_weak_count *)*((_QWORD *)&v30 + 1);
    if (*((_QWORD *)&v30 + 1))
    {
      v10 = (unint64_t *)(*((_QWORD *)&v30 + 1) + 8);
      do
        v11 = __ldaxr(v10);
      while (__stlxr(v11 - 1, v10));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
    v12 = v29;
    if (v29)
    {
      v13 = (unint64_t *)&v29->__shared_owners_;
      do
        v14 = __ldaxr(v13);
      while (__stlxr(v14 - 1, v13));
LABEL_41:
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
  }
}

void sub_1D52C0728(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1D5282EB4(v1);
  _Unwind_Resume(a1);
}

void sub_1D52C0774(_QWORD *a1@<X1>, unint64_t *a2@<X2>, _QWORD *a3@<X3>, _OWORD *a4@<X4>, _QWORD *a5@<X8>)
{
  _QWORD *v10;

  v10 = operator new(0xE0uLL);
  sub_1D52C07F4((uint64_t)v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;
  sub_1D5285658((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1D52C07E0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52C07F4(uint64_t a1, _QWORD *a2, unint64_t *a3, _QWORD *a4, _OWORD *a5)
{
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = &unk_1E9973718;
  *(_QWORD *)(a1 + 8) = 0;
  sub_1D530B330(a1 + 24, a2, *a3, a4, a5);
  *(_QWORD *)(a1 + 24) = &unk_1E9978BE8;
  *(_DWORD *)(a1 + 212) = 16;
  *(_QWORD *)(a1 + 216) = 0;
  return a1;
}

void sub_1D52C084C(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52C0860(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9973718;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52C0874(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9973718;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52C08A8(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_1D52C08B8(_QWORD *a1@<X1>, unint64_t *a2@<X2>, _QWORD *a3@<X3>, _OWORD *a4@<X4>, _QWORD *a5@<X8>)
{
  _QWORD *v10;

  v10 = operator new(0xD8uLL);
  sub_1D52C0938(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;
  sub_1D5285658((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1D52C0924(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52C0938(_QWORD *a1, _QWORD *a2, unint64_t *a3, _QWORD *a4, _OWORD *a5)
{
  a1[2] = 0;
  *a1 = &unk_1E9973768;
  a1[1] = 0;
  sub_1D530B330((uint64_t)(a1 + 3), a2, *a3, a4, a5);
  a1[3] = &unk_1E9978738;
  return a1;
}

void sub_1D52C0984(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52C0998(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9973768;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52C09AC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9973768;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52C09E0(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_1D52C09F0(_QWORD *a1@<X1>, unint64_t *a2@<X2>, _QWORD *a3@<X3>, _OWORD *a4@<X4>, _QWORD *a5@<X8>)
{
  _QWORD *v10;

  v10 = operator new(0xD8uLL);
  sub_1D52C0A70(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;
  sub_1D5285658((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1D52C0A5C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52C0A70(_QWORD *a1, _QWORD *a2, unint64_t *a3, _QWORD *a4, _OWORD *a5)
{
  a1[2] = 0;
  *a1 = &unk_1E99737B8;
  a1[1] = 0;
  sub_1D530B330((uint64_t)(a1 + 3), a2, *a3, a4, a5);
  a1[3] = &unk_1E998D858;
  return a1;
}

void sub_1D52C0ABC(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52C0AD0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E99737B8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52C0AE4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E99737B8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52C0B18(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_1D52C0B28(_QWORD *a1@<X1>, unint64_t *a2@<X2>, _QWORD *a3@<X3>, _OWORD *a4@<X4>, _QWORD *a5@<X8>)
{
  _QWORD *v10;

  v10 = operator new(0xE0uLL);
  sub_1D52C0BA8((uint64_t)v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;
  sub_1D5285658((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1D52C0B94(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52C0BA8(uint64_t a1, _QWORD *a2, unint64_t *a3, _QWORD *a4, _OWORD *a5)
{
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = &unk_1E9973808;
  *(_QWORD *)(a1 + 8) = 0;
  sub_1D530B330(a1 + 24, a2, *a3, a4, a5);
  *(_QWORD *)(a1 + 24) = &unk_1E9978A08;
  *(_QWORD *)(a1 + 212) = 0x100000000;
  *(_WORD *)(a1 + 220) = 0;
  return a1;
}

void sub_1D52C0C04(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52C0C18(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9973808;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52C0C2C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9973808;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52C0C60(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

id sub_1D52C0C70(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const char *v28;
  void *v29;
  const char *v30;
  uint64_t v31;
  void *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[11];
  _QWORD v43[2];

  v43[1] = *MEMORY[0x1E0C80C00];
  v5 = *MEMORY[0x1E0CBD388];
  v34 = *MEMORY[0x1E0CBD368];
  v35 = v5;
  v42[0] = MEMORY[0x1E0C9AAA0];
  v42[1] = CFSTR("com.olympus.sr-raw-image");
  v6 = *MEMORY[0x1E0CBD380];
  v36 = *MEMORY[0x1E0CBD348];
  v42[2] = CFSTR(".orf.");
  v42[3] = &unk_1E99CA518;
  v42[4] = &unk_1E99CA530;
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], a2, (uint64_t)sub_1D52C0F24, a4, a5, v34, v35, v36, v6, *MEMORY[0x1E0CBD370], *MEMORY[0x1E0CBD378]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v42[5] = v7;
  v37 = *MEMORY[0x1E0CBD330];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v8, (uint64_t)sub_1D52C0F68, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v42[6] = v11;
  v38 = *MEMORY[0x1E0CBD350];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v12, (uint64_t)sub_1D52C0F74, v13, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v42[7] = v15;
  v39 = *MEMORY[0x1E0CBD338];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v16, (uint64_t)sub_1D52E8DA4, v17, v18);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v42[8] = v19;
  v40 = *MEMORY[0x1E0CBD358];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v20, (uint64_t)sub_1D52C0F80, v21, v22);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v42[9] = v23;
  v41 = *MEMORY[0x1E0CBD360];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v24, (uint64_t)sub_1D52C0F8C, v25, v26);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v42[10] = v27;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v28, (uint64_t)v42, (uint64_t)&v34, 11);
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v43[0] = v29;
  objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v30, (uint64_t)v43, 1, v31);
  v32 = (void *)objc_claimAutoreleasedReturnValue();

  return v32;
}

void sub_1D52C0EC4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

BOOL sub_1D52C0F24(_BYTE *a1, unint64_t a2)
{
  return a2 >= 4 && *a1 == 73 && a1[1] == 73 && a1[2] == 82 && a1[3] == 83;
}

void sub_1D52C0F68(const void *a1, uint64_t a2, uint64_t a3)
{
  sub_1D52E7A20(a1, a2, a3, &unk_1E9973848);
}

uint64_t sub_1D52C0F74(os_signpost_id_t a1)
{
  return sub_1D52E8C40(a1);
}

uint64_t sub_1D52C0F80(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1D52E7438(a1, a2, a3, &unk_1E9973848);
}

uint64_t sub_1D52C0F8C(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1D52E9A7C(a1, a2, a3, &unk_1E9973848);
}

void sub_1D52C0F98(uint64_t *a1@<X1>, char a2@<W2>, void *a3@<X3>, void *a4@<X4>, _OWORD *a5@<X8>)
{
  __int128 v8;
  id v9;
  id v10;
  char v11;

  v11 = a2;
  v10 = a3;
  v9 = a4;
  sub_1D52BFE18(a1, &v11, &v10, &v9, &v8);
  *a5 = v8;

}

void sub_1D52C1014(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{

  _Unwind_Resume(a1);
}

void sub_1D52C1030(uint64_t a1, uint64_t *a2, char a3, void *a4, void *a5)
{
  _QWORD *v5;

  sub_1D52BC180(a1, a2, a3, a4, a5);
  *v5 = off_1E9973878;
}

uint64_t sub_1D52C1050()
{
  return 21330;
}

char *sub_1D52C1058@<X0>(_QWORD *a1@<X8>)
{
  char *v2;
  char *result;

  v2 = (char *)operator new(0x60uLL);
  *((_QWORD *)v2 + 2) = 0;
  *(_QWORD *)v2 = &unk_1E9973BD8;
  *((_QWORD *)v2 + 1) = 0;
  *(_OWORD *)(v2 + 40) = xmmword_1D5448AB0;
  *(_OWORD *)(v2 + 56) = xmmword_1D5448AC0;
  *(_OWORD *)(v2 + 72) = xmmword_1D5448AD0;
  __asm { FMOV            V0.2D, #1.0 }
  *((_QWORD *)v2 + 11) = 0x3FF0000000000000;
  a1[1] = v2;
  *(_OWORD *)(v2 + 24) = _Q0;
  result = v2 + 24;
  *a1 = result;
  return result;
}

_QWORD *sub_1D52C10CC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1D52C130C(a1, a2);
}

double sub_1D52C10F0(uint64_t a1, uint64_t *a2)
{
  uint64_t v7;
  double result;
  void *exception;

  __asm { FMOV            V0.2D, #1.0 }
  *(_OWORD *)a1 = _Q0;
  *(_OWORD *)(a1 + 16) = xmmword_1D5448AB0;
  *(_OWORD *)(a1 + 32) = xmmword_1D5448AC0;
  *(_OWORD *)(a1 + 48) = xmmword_1D5448AD0;
  *(_QWORD *)(a1 + 64) = 0x3FF0000000000000;
  v7 = *a2;
  if (a2[1] - *a2 != 64)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  *(_QWORD *)a1 = *(_QWORD *)v7;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(v7 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(v7 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(v7 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(v7 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(v7 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(v7 + 48);
  result = *(double *)(v7 + 56);
  *(double *)(a1 + 56) = result;
  return result;
}

void sub_1D52C11B4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52C11C8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *result;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = a1[4];
  v8 = a1[5];
  v9 = a1[6];
  v10 = a1[7];
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  result = operator new(0x40uLL);
  a2[1] = result + 8;
  a2[2] = result + 8;
  *result = v3;
  result[1] = v5;
  result[2] = v4;
  result[3] = v7;
  result[4] = v6;
  result[5] = v9;
  result[6] = v8;
  result[7] = v10;
  *a2 = result;
  return result;
}

double sub_1D52C1240(uint64_t a1)
{
  double v1;
  double result;

  v1 = *(double *)(a1 + 48) + *(double *)(a1 + 40) * 0.2;
  *(_QWORD *)(a1 + 64) = 0x3FF4000000000000;
  result = (1.25 - v1) / 0.3;
  *(double *)(a1 + 56) = result;
  return result;
}

float sub_1D52C1274@<S0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  float v2;
  float result;

  *(_DWORD *)(a2 + 32) = 0;
  v2 = *(double *)a1;
  *(float *)a2 = v2;
  *(int32x4_t *)(a2 + 4) = vrev64q_s32((int32x4_t)vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(*(float64x2_t *)(a1 + 8)), *(float64x2_t *)(a1 + 24)));
  *(int32x2_t *)(a2 + 20) = vrev64_s32((int32x2_t)vcvt_f32_f64(*(float64x2_t *)(a1 + 40)));
  result = *(double *)(a1 + 56);
  *(float *)(a2 + 28) = result;
  return result;
}

void sub_1D52C12BC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9973BD8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52C12D0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9973BD8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

_QWORD *sub_1D52C130C@<X0>(uint64_t *a1@<X1>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _QWORD *result;

  v4 = operator new(0x60uLL);
  result = sub_1D52C1364(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_1D52C1350(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52C1364(_QWORD *a1, uint64_t *a2)
{
  a1[2] = 0;
  *a1 = &unk_1E9973BD8;
  a1[1] = 0;
  sub_1D52C10F0((uint64_t)(a1 + 3), a2);
  return a1;
}

void sub_1D52C139C(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

id sub_1D52C13B0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  const char *v30;
  const char *v31;
  const char *v32;
  const char *v33;
  void *v34;
  const char *v35;
  uint64_t v36;
  void *v37;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  _QWORD v51[11];
  _QWORD v52[11];
  _QWORD v53[11];
  _QWORD v54[11];
  _QWORD v55[11];
  _QWORD v56[11];
  _QWORD v57[2];
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[11];
  _QWORD v68[6];

  v68[4] = *MEMORY[0x1E0C80C00];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], a2, (uint64_t)sub_1D52C190C, a4, a5);
  v5 = objc_claimAutoreleasedReturnValue();
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v6, (uint64_t)sub_1D52C1918, v7, v8);
  v9 = objc_claimAutoreleasedReturnValue();
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v10, (uint64_t)sub_1D52C1924, v11, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v14, (uint64_t)sub_1D52E8DA4, v15, v16);
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v17, (uint64_t)sub_1D52C1930, v18, v19);
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v20, (uint64_t)sub_1D52C193C, v21, v22);
  v50 = (void *)objc_claimAutoreleasedReturnValue();
  v47 = *MEMORY[0x1E0CBD388];
  v57[0] = *MEMORY[0x1E0CBD368];
  v48 = v57[0];
  v57[1] = v47;
  v67[0] = MEMORY[0x1E0C9AAA0];
  v67[1] = CFSTR("com.panasonic.raw-image");
  v45 = *MEMORY[0x1E0CBD380];
  v58 = *MEMORY[0x1E0CBD348];
  v46 = v58;
  v59 = v45;
  v67[2] = CFSTR(".raw.");
  v67[3] = &unk_1E99CA548;
  v23 = *MEMORY[0x1E0CBD378];
  v60 = *MEMORY[0x1E0CBD370];
  v44 = v60;
  v61 = v23;
  v67[4] = &unk_1E99CA560;
  v67[5] = v5;
  v49 = (void *)v5;
  v25 = *MEMORY[0x1E0CBD350];
  v62 = *MEMORY[0x1E0CBD330];
  v24 = v62;
  v63 = v25;
  v67[6] = v9;
  v67[7] = v13;
  v26 = (void *)v9;
  v28 = *MEMORY[0x1E0CBD358];
  v64 = *MEMORY[0x1E0CBD338];
  v27 = v64;
  v65 = v28;
  v67[8] = v43;
  v67[9] = v42;
  v66 = *MEMORY[0x1E0CBD360];
  v29 = v66;
  v67[10] = v50;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v30, (uint64_t)v67, (uint64_t)v57, 11);
  v41 = (void *)objc_claimAutoreleasedReturnValue();
  v68[0] = v41;
  v55[0] = v48;
  v55[1] = v47;
  v56[0] = MEMORY[0x1E0C9AAA0];
  v56[1] = CFSTR("com.panasonic.rw2-raw-image");
  v55[2] = v46;
  v55[3] = v45;
  v56[2] = CFSTR(".rw2.");
  v56[3] = &unk_1E99CA548;
  v55[4] = v44;
  v55[5] = v23;
  v56[4] = &unk_1E99CA560;
  v56[5] = v49;
  v55[6] = v24;
  v55[7] = v25;
  v56[6] = v26;
  v56[7] = v13;
  v55[8] = v27;
  v55[9] = v28;
  v56[8] = v43;
  v56[9] = v42;
  v55[10] = v29;
  v56[10] = v50;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v31, (uint64_t)v56, (uint64_t)v55, 11);
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  v68[1] = v40;
  v53[0] = v48;
  v53[1] = v47;
  v54[0] = MEMORY[0x1E0C9AAA0];
  v54[1] = CFSTR("com.leica.raw-image");
  v53[2] = v46;
  v53[3] = v45;
  v54[2] = CFSTR(".raw.");
  v54[3] = &unk_1E99CA548;
  v53[4] = v44;
  v53[5] = v23;
  v54[4] = &unk_1E99CA560;
  v54[5] = v49;
  v53[6] = v24;
  v53[7] = v25;
  v54[6] = v26;
  v54[7] = v13;
  v53[8] = v27;
  v53[9] = v28;
  v54[8] = v43;
  v54[9] = v42;
  v53[10] = v29;
  v54[10] = v50;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v32, (uint64_t)v54, (uint64_t)v53, 11);
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  v68[2] = v39;
  v51[0] = v48;
  v51[1] = v47;
  v52[0] = MEMORY[0x1E0C9AAA0];
  v52[1] = CFSTR("com.leica.rwl-raw-image");
  v51[2] = v46;
  v51[3] = v45;
  v52[2] = CFSTR(".rwl.");
  v52[3] = &unk_1E99CA548;
  v51[4] = v44;
  v51[5] = v23;
  v52[4] = &unk_1E99CA560;
  v52[5] = v49;
  v51[6] = v24;
  v51[7] = v25;
  v52[6] = v26;
  v52[7] = v13;
  v51[8] = v27;
  v51[9] = v28;
  v52[8] = v43;
  v52[9] = v42;
  v51[10] = v29;
  v52[10] = v50;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v33, (uint64_t)v52, (uint64_t)v51, 11);
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  v68[3] = v34;
  objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v35, (uint64_t)v68, 4, v36);
  v37 = (void *)objc_claimAutoreleasedReturnValue();

  return v37;
}

void sub_1D52C1824(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19)
{
  void *v19;
  void *v20;
  void *v21;
  void *v22;

  _Unwind_Resume(a1);
}

BOOL sub_1D52C190C(unsigned __int8 *a1, unint64_t a2)
{
  return sub_1D52C0354(a1, a2, word_1D5448BD6);
}

void sub_1D52C1918(const void *a1, uint64_t a2, uint64_t a3)
{
  sub_1D52E7A20(a1, a2, a3, &unk_1E9973C18);
}

uint64_t sub_1D52C1924(os_signpost_id_t a1)
{
  return sub_1D52E8C40(a1);
}

uint64_t sub_1D52C1930(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1D52E7438(a1, a2, a3, &unk_1E9973C18);
}

uint64_t sub_1D52C193C(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1D52E9A7C(a1, a2, a3, &unk_1E9973C18);
}

void sub_1D52C1948(uint64_t *a1@<X1>, char a2@<W2>, void *a3@<X3>, void *a4@<X4>, _OWORD *a5@<X8>)
{
  __int128 v8;
  id v9;
  id v10;
  char v11;

  v11 = a2;
  v10 = a3;
  v9 = a4;
  sub_1D52C5BE4(a1, &v11, &v10, &v9, &v8);
  *a5 = v8;

}

void sub_1D52C19C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{

  _Unwind_Resume(a1);
}

double sub_1D52C19E0(uint64_t a1, uint64_t *a2, char a3, void *a4, void *a5)
{
  uint64_t v5;
  double result;

  sub_1D52A7E98(a1, a2, a3, a4, a5);
  *(_QWORD *)v5 = off_1E9973C48;
  *(_BYTE *)(v5 + 1208) = 0;
  *(_BYTE *)(v5 + 1212) = 0;
  *(_BYTE *)(v5 + 1216) = 0;
  *(_BYTE *)(v5 + 1220) = 0;
  *(_BYTE *)(v5 + 1224) = 0;
  *(_QWORD *)(v5 + 1180) = 0;
  result = 0.0;
  *(_OWORD *)(v5 + 1188) = 0u;
  *(_BYTE *)(v5 + 1204) = 0;
  *(_WORD *)(v5 + 1228) = 1;
  *(_OWORD *)(v5 + 1240) = 0u;
  *(_QWORD *)(v5 + 1232) = v5 + 1240;
  *(_BYTE *)(v5 + 1266) = 0;
  *(_BYTE *)(v5 + 1268) = 0;
  *(_BYTE *)(v5 + 1270) = 0;
  *(_WORD *)(v5 + 1272) = 0;
  *(_BYTE *)(v5 + 1340) = 0;
  *(_BYTE *)(v5 + 1342) = 0;
  *(_BYTE *)(v5 + 1344) = 0;
  *(_BYTE *)(v5 + 1346) = 0;
  *(_BYTE *)(v5 + 1348) = 0;
  *(_BYTE *)(v5 + 1350) = 0;
  *(_BYTE *)(v5 + 1352) = 0;
  *(_BYTE *)(v5 + 1354) = 0;
  *(_BYTE *)(v5 + 1356) = 0;
  *(_BYTE *)(v5 + 1358) = 0;
  *(_BYTE *)(v5 + 1360) = 0;
  *(_BYTE *)(v5 + 1362) = 0;
  *(_BYTE *)(v5 + 1364) = 0;
  *(_BYTE *)(v5 + 1366) = 0;
  *(_BYTE *)(v5 + 1368) = 0;
  *(_BYTE *)(v5 + 1376) = 0;
  *(_BYTE *)(v5 + 1400) = 0;
  *(_BYTE *)(v5 + 1408) = 0;
  *(_BYTE *)(v5 + 1432) = 0;
  *(_BYTE *)(v5 + 1440) = 0;
  *(_BYTE *)(v5 + 1442) = 0;
  *(_BYTE *)(v5 + 1444) = 0;
  *(_BYTE *)(v5 + 1446) = 0;
  *(_BYTE *)(v5 + 1448) = 0;
  *(_BYTE *)(v5 + 1450) = 0;
  *(_BYTE *)(v5 + 1452) = 0;
  *(_BYTE *)(v5 + 1454) = 0;
  *(_BYTE *)(v5 + 1456) = 0;
  *(_BYTE *)(v5 + 1458) = 0;
  *(_BYTE *)(v5 + 1464) = 0;
  *(_BYTE *)(v5 + 1488) = 0;
  *(_BYTE *)(v5 + 1496) = 0;
  *(_BYTE *)(v5 + 1520) = 0;
  *(_BYTE *)(v5 + 1528) = 0;
  *(_BYTE *)(v5 + 1530) = 0;
  *(_BYTE *)(v5 + 1532) = 0;
  *(_BYTE *)(v5 + 1534) = 0;
  *(_BYTE *)(v5 + 1536) = 0;
  *(_BYTE *)(v5 + 1560) = 0;
  *(_BYTE *)(v5 + 1568) = 0;
  *(_BYTE *)(v5 + 1592) = 0;
  *(_BYTE *)(v5 + 1600) = 0;
  *(_BYTE *)(v5 + 1624) = 0;
  *(_BYTE *)(v5 + 1632) = 0;
  *(_BYTE *)(v5 + 1656) = 0;
  *(_BYTE *)(v5 + 1664) = 0;
  *(_BYTE *)(v5 + 1688) = 0;
  *(_BYTE *)(v5 + 1264) = 0;
  *(_QWORD *)(v5 + 1256) = 0;
  *(_OWORD *)(v5 + 1280) = 0u;
  *(_OWORD *)(v5 + 1296) = 0u;
  *(_BYTE *)(v5 + 1312) = 0;
  *(_QWORD *)(v5 + 1330) = 0;
  *(_OWORD *)(v5 + 1314) = 0u;
  *(_BYTE *)(v5 + 1338) = 0;
  return result;
}

uint64_t sub_1D52C1B2C()
{
  return 85;
}

void sub_1D52C1B34(uint64_t a1, char *a2, unsigned __int16 *a3)
{
  uint64_t v6;
  BOOL v7;
  char *v8;
  char *v9;
  void *v10;
  char *v11;
  unsigned int v14;
  int v15;
  int v16;
  _QWORD *v17;
  void **v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int v26;
  unsigned int v27;
  int v28;
  int v29;
  unsigned __int32 v30;
  char *v31;
  uint64_t *v32;
  unsigned int v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  void *v37;
  unsigned int v38;
  unsigned int v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  int v43;
  int v44;
  int v45;
  int v46;
  uint64_t *v47;
  unsigned int v48;
  int v49;
  void **v50;
  int v51;
  void **v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  void **v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  _QWORD *v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  int v68;
  int v69;
  uint64_t v70[2];
  void **p_src;
  void **v72;
  void *__p[2];
  __int128 v74;
  _OWORD v75[2];
  __n128 __src;
  char v77;
  uint64_t v78;

  v78 = *MEMORY[0x1E0C80C00];
  sub_1D52ABE88((uint64_t **)a1, (uint64_t)a2, a3);
  v6 = a2[23];
  v7 = (v6 & 0x80u) != 0;
  if ((v6 & 0x80u) != 0)
    v6 = *((_QWORD *)a2 + 1);
  if (v7)
    v8 = *(char **)a2;
  else
    v8 = a2;
  if (v6 >= 18)
  {
    v9 = &v8[v6];
    v10 = v8;
    do
    {
      v11 = (char *)memchr(v10, 69, v6 - 17);
      if (!v11)
        break;
      if (*(_QWORD *)v11 == 0x6465646465626D45
        && *((_QWORD *)v11 + 1) == 0x69616E626D756854
        && *((_WORD *)v11 + 8) == 14956)
      {
        if (v11 != v9 && v11 == v8)
          return;
        break;
      }
      v10 = v11 + 1;
      v6 = v9 - (_BYTE *)v10;
    }
    while (v9 - (_BYTE *)v10 >= 18);
  }
  v14 = *a3;
  if (v14 <= 0x117)
  {
    switch(*a3)
    {
      case 1u:
        if (a3[1] == 7 && *((_DWORD *)a3 + 1) == 4)
        {
          v15 = 0;
          LODWORD(__p[0]) = 0;
          do
          {
            sub_1D5285A24(&__src, (unsigned int *)__p);
            v15 = (sub_1D52B19D0((uint64_t)a3, (unsigned int *)&__src) - 48) | (v15 << 8);
            v16 = LODWORD(__p[0])++;
          }
          while (v16 < 3);
          *(_DWORD *)(a1 + 1180) = v15;
        }
        break;
      case 2u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
          *(_WORD *)(a1 + 1184) = sub_1D52AD670((uint64_t)a3);
        break;
      case 3u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
          *(_WORD *)(a1 + 1186) = sub_1D52AD670((uint64_t)a3);
        break;
      case 4u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
          *(_WORD *)(a1 + 1188) = sub_1D52AD670((uint64_t)a3);
        break;
      case 5u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
          *(_WORD *)(a1 + 1190) = sub_1D52AD670((uint64_t)a3);
        break;
      case 6u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
          *(_WORD *)(a1 + 1192) = sub_1D52AD670((uint64_t)a3);
        break;
      case 7u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
          *(_WORD *)(a1 + 1194) = sub_1D52AD670((uint64_t)a3);
        break;
      case 9u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
          *(_WORD *)(a1 + 1228) = sub_1D52AD670((uint64_t)a3);
        break;
      case 0xAu:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          *(_WORD *)(a1 + 1266) = sub_1D52AD670((uint64_t)a3);
          *(_BYTE *)(a1 + 1268) = 1;
        }
        break;
      case 0xBu:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          *(_DWORD *)(a1 + 1212) = sub_1D52AD670((uint64_t)a3);
          *(_BYTE *)(a1 + 1216) = 1;
        }
        break;
      case 0x11u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          *(_WORD *)(a1 + 1338) = sub_1D52AD670((uint64_t)a3);
          *(_BYTE *)(a1 + 1340) = 1;
        }
        break;
      case 0x12u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          v30 = sub_1D52AD670((uint64_t)a3);
          *(_WORD *)(a1 + 1342) = v30;
          *(_BYTE *)(a1 + 1344) = 1;
          if (*(_BYTE *)(a1 + 1340))
          {
            __src.n128_u32[0] = *(unsigned __int16 *)(a1 + 1338);
            __src.n128_u32[1] = 256;
            __src.n128_u32[2] = v30;
            sub_1D52850A0(__p, "redGreenBlue");
            p_src = __p;
            v31 = (char *)sub_1D52BA2C8((uint64_t **)(a1 + 120), __p, (uint64_t)&unk_1D544A5C4, (_OWORD **)&p_src);
            sub_1D5282A44(v31 + 56, (char *)&__src, (uint64_t)&__src.n128_i64[1] + 4, 3uLL);
            goto LABEL_113;
          }
        }
        break;
      case 0x17u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          __src.n128_u32[0] = sub_1D52AD670((uint64_t)a3);
          __p[0] = a2;
          v32 = sub_1D52B3E7C((uint64_t **)(a1 + 192), (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)__p);
          sub_1D5282A44((char *)v32 + 56, (char *)&__src, (uint64_t)__src.n128_i64 + 4, 1uLL);
        }
        break;
      case 0x1Cu:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          *(_WORD *)(a1 + 1346) = sub_1D52AD670((uint64_t)a3);
          *(_BYTE *)(a1 + 1348) = 1;
        }
        break;
      case 0x1Du:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          *(_WORD *)(a1 + 1350) = sub_1D52AD670((uint64_t)a3);
          *(_BYTE *)(a1 + 1352) = 1;
        }
        break;
      case 0x1Eu:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          v33 = sub_1D52AD670((uint64_t)a3);
          *(_WORD *)(a1 + 1354) = v33;
          *(_BYTE *)(a1 + 1356) = 1;
          if (*(_BYTE *)(a1 + 1348))
          {
            if (*(_BYTE *)(a1 + 1352))
            {
              LOWORD(v34) = *(_WORD *)(a1 + 1346);
              LOWORD(v35) = *(_WORD *)(a1 + 1350);
              *(double *)__p = (double)v34;
              *(double *)&__p[1] = (double)v35;
              *(double *)&v74 = (double)v35;
              *((double *)&v74 + 1) = (double)v33;
              sub_1D52AFE84(":OBCorrection", (const void **)a2, (void **)&__src);
              p_src = (void **)&__src;
              v36 = (char *)sub_1D52BA2C8((uint64_t **)(a1 + 264), (void **)&__src, (uint64_t)&unk_1D544A5C4, (_OWORD **)&p_src);
              sub_1D528FA34(v36 + 56, (char *)__p, (uint64_t)v75, 4uLL);
              if (v77 < 0)
              {
                v37 = (void *)__src.n128_u64[0];
                goto LABEL_115;
              }
            }
          }
        }
        break;
      case 0x24u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          *(_WORD *)(a1 + 1358) = sub_1D52AD670((uint64_t)a3);
          *(_BYTE *)(a1 + 1360) = 1;
        }
        break;
      case 0x25u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          *(_WORD *)(a1 + 1362) = sub_1D52AD670((uint64_t)a3);
          *(_BYTE *)(a1 + 1364) = 1;
        }
        break;
      case 0x26u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          v38 = sub_1D52AD670((uint64_t)a3);
          *(_WORD *)(a1 + 1366) = v38;
          *(_BYTE *)(a1 + 1368) = 1;
          if (*(_BYTE *)(a1 + 1360))
          {
            if (*(_BYTE *)(a1 + 1364))
            {
              v39 = *(unsigned __int16 *)(a1 + 1362);
              __src.n128_u32[0] = *(unsigned __int16 *)(a1 + 1358);
              *(unint64_t *)((char *)__src.n128_u64 + 4) = __PAIR64__(v38, v39);
              sub_1D52850A0(__p, "redGreenBlue");
              p_src = __p;
              v40 = (char *)sub_1D52BA2C8((uint64_t **)(a1 + 120), __p, (uint64_t)&unk_1D544A5C4, (_OWORD **)&p_src);
              sub_1D5282A44(v40 + 56, (char *)&__src, (uint64_t)&__src.n128_i64[1] + 4, 3uLL);
LABEL_113:
              if (SBYTE7(v74) < 0)
              {
                v37 = __p[0];
LABEL_115:
                operator delete(v37);
              }
            }
          }
        }
        break;
      case 0x2Du:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          *(_DWORD *)(a1 + 1220) = sub_1D52AD670((uint64_t)a3);
          *(_BYTE *)(a1 + 1224) = 1;
        }
        break;
      case 0x2Eu:
        if (a3[1] == 7)
        {
          v41 = *((unsigned int *)a3 + 2);
          *(_DWORD *)(a1 + 1196) = v41;
          v42 = *((unsigned int *)a3 + 1);
          *(_DWORD *)(a1 + 1200) = v42;
          sub_1D52C3614(a1, v41, v42);
        }
        break;
      case 0x2Fu:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          v43 = sub_1D52AD670((uint64_t)a3);
          *(_WORD *)(a1 + 1256) = v43;
          if (v43)
            goto LABEL_136;
        }
        break;
      case 0x30u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          v44 = sub_1D52AD670((uint64_t)a3);
          *(_WORD *)(a1 + 1258) = v44;
          if (v44)
            goto LABEL_136;
        }
        break;
      case 0x31u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          v45 = sub_1D52AD670((uint64_t)a3);
          *(_WORD *)(a1 + 1260) = v45;
          if (v45)
            goto LABEL_136;
        }
        break;
      case 0x32u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          v46 = sub_1D52AD670((uint64_t)a3);
          *(_WORD *)(a1 + 1262) = v46;
          if (v46)
LABEL_136:
            *(_BYTE *)(a1 + 1264) = 1;
        }
        break;
      case 0x37u:
        if (a3[1] == 4 && *((_DWORD *)a3 + 1) == 1)
        {
          __src.n128_u32[0] = *((_DWORD *)a3 + 2);
          __p[0] = a2;
          v47 = sub_1D52B3E7C((uint64_t **)(a1 + 192), (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)__p);
          sub_1D5282A44((char *)v47 + 56, (char *)&__src, (uint64_t)__src.n128_i64 + 4, 1uLL);
        }
        break;
      case 0x39u:
        if (a3[1] == 7 && *((_DWORD *)a3 + 1) >= 2u)
        {
          sub_1D52917E4(a1, &__src);
          LODWORD(v70[0]) = sub_1D52A5CC8((uint64_t)a3);
          sub_1D5285B08((int *)&p_src, (int *)v70);
          sub_1D5285164((uint64_t *)__p, (uint64_t *)&__src, (uint64_t)&p_src, 0);
          sub_1D5282EB4((uint64_t)&__src);
          sub_1D52917E4(a1, &__src);
          v48 = sub_1D528479C(__src.n128_i64[0]);
          sub_1D5282EB4((uint64_t)&__src);
          if (((4 * v48) | 2uLL) <= *((unsigned int *)a3 + 1))
          {
            sub_1D52917E4(a1, &p_src);
            LODWORD(v70[0]) = v48;
            sub_1D52B307C((uint64_t)p_src, (unsigned int *)v70, (uint64_t *)&__src);
            sub_1D52C3D50(a1 + 1376, &__src);
            if (__src.n128_u64[0])
            {
              __src.n128_u64[1] = __src.n128_u64[0];
              operator delete((void *)__src.n128_u64[0]);
            }
            sub_1D5282EB4((uint64_t)&p_src);
          }
          goto LABEL_223;
        }
        break;
      case 0x3Au:
        if (a3[1] == 7 && *((_DWORD *)a3 + 1) >= 2u)
        {
          sub_1D52917E4(a1, &__src);
          LODWORD(v70[0]) = sub_1D52A5CC8((uint64_t)a3);
          sub_1D5285B08((int *)&p_src, (int *)v70);
          sub_1D5285164((uint64_t *)__p, (uint64_t *)&__src, (uint64_t)&p_src, 0);
          sub_1D5282EB4((uint64_t)&__src);
          sub_1D52917E4(a1, &__src);
          v49 = sub_1D528479C(__src.n128_i64[0]);
          sub_1D5282EB4((uint64_t)&__src);
          if (*((_DWORD *)a3 + 1) >= ((4 * v49) | 2u))
          {
            sub_1D52917E4(a1, &p_src);
            v50 = p_src;
            v69 = 2 * v49;
            sub_1D5285A24(v70, (unsigned int *)&v69);
            sub_1D52B2C0C((uint64_t)v50, (unsigned int *)v70, (uint64_t *)&__src);
            sub_1D52C3D50(a1 + 1408, &__src);
            if (__src.n128_u64[0])
            {
              __src.n128_u64[1] = __src.n128_u64[0];
              operator delete((void *)__src.n128_u64[0]);
            }
            sub_1D5282EB4((uint64_t)&p_src);
          }
          goto LABEL_202;
        }
        break;
      case 0x3Bu:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          *(_WORD *)(a1 + 1440) = sub_1D52AD670((uint64_t)a3);
          *(_BYTE *)(a1 + 1442) = 1;
        }
        break;
      case 0x3Cu:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          *(_WORD *)(a1 + 1444) = sub_1D52AD670((uint64_t)a3);
          *(_BYTE *)(a1 + 1446) = 1;
        }
        break;
      case 0x3Du:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          *(_WORD *)(a1 + 1448) = sub_1D52AD670((uint64_t)a3);
          *(_BYTE *)(a1 + 1450) = 1;
        }
        break;
      case 0x3Eu:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          *(_WORD *)(a1 + 1452) = sub_1D52AD670((uint64_t)a3);
          *(_BYTE *)(a1 + 1454) = 1;
        }
        break;
      case 0x3Fu:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          *(_WORD *)(a1 + 1456) = sub_1D52AD670((uint64_t)a3);
          *(_BYTE *)(a1 + 1458) = 1;
        }
        break;
      case 0x40u:
        if (a3[1] == 7 && *((_DWORD *)a3 + 1) >= 2u)
        {
          sub_1D52917E4(a1, &__src);
          LODWORD(v70[0]) = sub_1D52A5CC8((uint64_t)a3);
          sub_1D5285B08((int *)&p_src, (int *)v70);
          sub_1D5285164((uint64_t *)__p, (uint64_t *)&__src, (uint64_t)&p_src, 0);
          sub_1D5282EB4((uint64_t)&__src);
          sub_1D52917E4(a1, &__src);
          v51 = sub_1D528479C(__src.n128_i64[0]);
          sub_1D5282EB4((uint64_t)&__src);
          if (*((_DWORD *)a3 + 1) >= ((4 * v51) | 2u))
          {
            sub_1D52917E4(a1, &p_src);
            v52 = p_src;
            v69 = 2 * v51;
            sub_1D5285A24(v70, (unsigned int *)&v69);
            sub_1D52B2C0C((uint64_t)v52, (unsigned int *)v70, (uint64_t *)&__src);
            sub_1D52C3D50(a1 + 1464, &__src);
            if (__src.n128_u64[0])
            {
              __src.n128_u64[1] = __src.n128_u64[0];
              operator delete((void *)__src.n128_u64[0]);
            }
            sub_1D5282EB4((uint64_t)&p_src);
          }
          goto LABEL_202;
        }
        break;
      case 0x41u:
        if (a3[1] == 7 && *((_DWORD *)a3 + 1) >= 2u)
        {
          sub_1D52917E4(a1, &__src);
          LODWORD(v70[0]) = sub_1D52A5CC8((uint64_t)a3);
          sub_1D5285B08((int *)&p_src, (int *)v70);
          sub_1D5285164((uint64_t *)__p, (uint64_t *)&__src, (uint64_t)&p_src, 0);
          sub_1D5282EB4((uint64_t)&__src);
          sub_1D52917E4(a1, &__src);
          v53 = sub_1D528479C(__src.n128_i64[0]);
          sub_1D5282EB4((uint64_t)&__src);
          if (2 * (unint64_t)v53 + 2 <= *((unsigned int *)a3 + 1))
          {
            sub_1D52917E4(a1, &p_src);
            LODWORD(v70[0]) = v53;
            sub_1D52B2C0C((uint64_t)p_src, (unsigned int *)v70, (uint64_t *)&__src);
            sub_1D52C3D50(a1 + 1496, &__src);
            if (__src.n128_u64[0])
            {
              __src.n128_u64[1] = __src.n128_u64[0];
              operator delete((void *)__src.n128_u64[0]);
            }
            sub_1D5282EB4((uint64_t)&p_src);
          }
          goto LABEL_223;
        }
        break;
      case 0x42u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          *(_WORD *)(a1 + 1528) = sub_1D52AD670((uint64_t)a3);
          *(_BYTE *)(a1 + 1530) = 1;
        }
        break;
      case 0x43u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          *(_WORD *)(a1 + 1532) = sub_1D52AD670((uint64_t)a3);
          *(_BYTE *)(a1 + 1534) = 1;
        }
        break;
      case 0x44u:
        if (a3[1] == 7 && *((_DWORD *)a3 + 1) >= 2u)
        {
          sub_1D52917E4(a1, &__src);
          LODWORD(v70[0]) = sub_1D52A5CC8((uint64_t)a3);
          sub_1D5285B08((int *)&p_src, (int *)v70);
          sub_1D5285164((uint64_t *)__p, (uint64_t *)&__src, (uint64_t)&p_src, 0);
          sub_1D5282EB4((uint64_t)&__src);
          sub_1D52917E4(a1, &__src);
          v54 = sub_1D528479C(__src.n128_i64[0]);
          sub_1D5282EB4((uint64_t)&__src);
          if (((4 * v54) | 2uLL) <= *((unsigned int *)a3 + 1))
          {
            sub_1D52917E4(a1, &p_src);
            LODWORD(v70[0]) = v54;
            sub_1D52B2E0C((uint64_t)p_src, (unsigned int *)v70, (uint64_t *)&__src);
            sub_1D52C3D50(a1 + 1536, &__src);
            if (__src.n128_u64[0])
            {
              __src.n128_u64[1] = __src.n128_u64[0];
              operator delete((void *)__src.n128_u64[0]);
            }
            sub_1D5282EB4((uint64_t)&p_src);
          }
          goto LABEL_223;
        }
        break;
      case 0x45u:
        if (a3[1] == 7 && *((_DWORD *)a3 + 1) >= 2u)
        {
          sub_1D52917E4(a1, &__src);
          LODWORD(v70[0]) = sub_1D52A5CC8((uint64_t)a3);
          sub_1D5285B08((int *)&p_src, (int *)v70);
          sub_1D5285164((uint64_t *)__p, (uint64_t *)&__src, (uint64_t)&p_src, 0);
          sub_1D5282EB4((uint64_t)&__src);
          sub_1D52917E4(a1, &__src);
          v55 = sub_1D528479C(__src.n128_i64[0]);
          sub_1D5282EB4((uint64_t)&__src);
          if (2 * (unint64_t)v55 + 2 <= *((unsigned int *)a3 + 1))
          {
            sub_1D52917E4(a1, &p_src);
            v56 = p_src;
            v69 = 2 * v55;
            sub_1D5285A24(v70, (unsigned int *)&v69);
            sub_1D52B2C0C((uint64_t)v56, (unsigned int *)v70, (uint64_t *)&__src);
            sub_1D52C3D50(a1 + 1568, &__src);
            if (__src.n128_u64[0])
            {
              __src.n128_u64[1] = __src.n128_u64[0];
              operator delete((void *)__src.n128_u64[0]);
            }
            sub_1D5282EB4((uint64_t)&p_src);
          }
LABEL_202:
          sub_1D5285200((uint64_t *)__p);
        }
        break;
      case 0x46u:
        if (a3[1] == 7 && *((_DWORD *)a3 + 1) >= 2u)
        {
          sub_1D52917E4(a1, &__src);
          LODWORD(v70[0]) = sub_1D52A5CC8((uint64_t)a3);
          sub_1D5285B08((int *)&p_src, (int *)v70);
          sub_1D5285164((uint64_t *)__p, (uint64_t *)&__src, (uint64_t)&p_src, 0);
          sub_1D5282EB4((uint64_t)&__src);
          sub_1D52917E4(a1, &__src);
          v57 = sub_1D528479C(__src.n128_i64[0]);
          sub_1D5282EB4((uint64_t)&__src);
          if (((4 * v57) | 2uLL) <= *((unsigned int *)a3 + 1))
          {
            sub_1D52917E4(a1, &p_src);
            LODWORD(v70[0]) = v57;
            sub_1D52B2E0C((uint64_t)p_src, (unsigned int *)v70, (uint64_t *)&__src);
            sub_1D52C3D50(a1 + 1600, &__src);
            if (__src.n128_u64[0])
            {
              __src.n128_u64[1] = __src.n128_u64[0];
              operator delete((void *)__src.n128_u64[0]);
            }
            sub_1D5282EB4((uint64_t)&p_src);
          }
          goto LABEL_223;
        }
        break;
      case 0x47u:
        if (a3[1] == 7 && *((_DWORD *)a3 + 1) >= 2u)
        {
          sub_1D52917E4(a1, &__src);
          LODWORD(v70[0]) = sub_1D52A5CC8((uint64_t)a3);
          sub_1D5285B08((int *)&p_src, (int *)v70);
          sub_1D5285164((uint64_t *)__p, (uint64_t *)&__src, (uint64_t)&p_src, 0);
          sub_1D5282EB4((uint64_t)&__src);
          sub_1D52917E4(a1, &__src);
          v58 = sub_1D528479C(__src.n128_i64[0]);
          sub_1D5282EB4((uint64_t)&__src);
          if (2 * (unint64_t)v58 + 2 <= *((unsigned int *)a3 + 1))
          {
            sub_1D52917E4(a1, &p_src);
            LODWORD(v70[0]) = v58;
            sub_1D52B2C0C((uint64_t)p_src, (unsigned int *)v70, (uint64_t *)&__src);
            sub_1D52C3D50(a1 + 1632, &__src);
            if (__src.n128_u64[0])
            {
              __src.n128_u64[1] = __src.n128_u64[0];
              operator delete((void *)__src.n128_u64[0]);
            }
            sub_1D5282EB4((uint64_t)&p_src);
          }
          goto LABEL_223;
        }
        break;
      case 0x48u:
        if (a3[1] == 7 && *((_DWORD *)a3 + 1) >= 2u)
        {
          sub_1D52917E4(a1, &__src);
          LODWORD(v70[0]) = sub_1D52A5CC8((uint64_t)a3);
          sub_1D5285B08((int *)&p_src, (int *)v70);
          sub_1D5285164((uint64_t *)__p, (uint64_t *)&__src, (uint64_t)&p_src, 0);
          sub_1D5282EB4((uint64_t)&__src);
          sub_1D52917E4(a1, &__src);
          v59 = sub_1D528479C(__src.n128_i64[0]);
          sub_1D5282EB4((uint64_t)&__src);
          if (2 * (unint64_t)v59 + 2 <= *((unsigned int *)a3 + 1))
          {
            sub_1D52917E4(a1, &p_src);
            LODWORD(v70[0]) = v59;
            sub_1D52B2C0C((uint64_t)p_src, (unsigned int *)v70, (uint64_t *)&__src);
            sub_1D52C3D50(a1 + 1664, &__src);
            if (__src.n128_u64[0])
            {
              __src.n128_u64[1] = __src.n128_u64[0];
              operator delete((void *)__src.n128_u64[0]);
            }
            sub_1D5282EB4((uint64_t)&p_src);
          }
LABEL_223:
          sub_1D5285200((uint64_t *)__p);
        }
        break;
      default:
        return;
    }
    return;
  }
  if (v14 != 280)
  {
    if (v14 == 281)
    {
      if (a3[1] != 7 || *((_DWORD *)a3 + 1) != 32 || !*(_BYTE *)(a1 + 1224) || *(int *)(a1 + 1220) < 4)
        return;
      sub_1D52917E4(a1, __p);
      LODWORD(v70[0]) = sub_1D52A5CC8((uint64_t)a3);
      sub_1D5285B08((int *)&p_src, (int *)v70);
      sub_1D5285164((uint64_t *)&__src, (uint64_t *)__p, (uint64_t)&p_src, 0);
      sub_1D5282EB4((uint64_t)__p);
      *(_OWORD *)__p = 0u;
      v74 = 0u;
      sub_1D52917E4(a1, v70);
      v68 = sub_1D52A5CC8((uint64_t)a3);
      sub_1D5285B08(&v69, &v68);
      sub_1D5285164((uint64_t *)&p_src, v70, (uint64_t)&v69, 0);
      sub_1D5282EB4((uint64_t)v70);
      sub_1D52917E4(a1, v70);
      (*(void (**)(uint64_t, void **, uint64_t))(*(_QWORD *)v70[0] + 32))(v70[0], __p, 32);
      sub_1D5282EB4((uint64_t)v70);
      sub_1D5285200((uint64_t *)&p_src);
      sub_1D52917E4(a1, v70);
      v60 = (_QWORD *)v70[0];
      v68 = 16;
      sub_1D5285A24(&v69, (unsigned int *)&v68);
      sub_1D5284D2C(v60, (unsigned int *)&v69, (uint64_t *)&p_src);
      sub_1D5282EB4((uint64_t)v70);
      v18 = p_src;
      if ((char *)v72 - (char *)p_src != 32)
        goto LABEL_249;
      v61 = 0;
      v62 = 0;
      v63 = 0;
      do
      {
        v63 = (*((unsigned __int8 *)__p + v61 + 4) + 73 * v63) % 0xFFEF;
        v62 = (*((unsigned __int8 *)&__p[2] + v61++) + 73 * v62) % 0xFFEF;
      }
      while (v61 != 12);
      v64 = 0;
      v65 = 0;
      v66 = 0;
      do
      {
        v66 = (*((unsigned __int8 *)__p + v64 + 2) + 73 * v66) % 0xFFEF;
        v65 = (*((unsigned __int8 *)__p + v64 + 3) + 73 * v65) % 0xFFEF;
        v64 += 2;
      }
      while (v64 != 28);
      if (v63 != *((unsigned __int16 *)p_src + 1) || v62 != *((unsigned __int16 *)p_src + 14))
        goto LABEL_249;
      if (v66 == *(unsigned __int16 *)p_src && v65 == *((unsigned __int16 *)p_src + 15))
      {
        if ((*((_WORD *)p_src + 7) & 0xF) == 1)
        {
          *(_BYTE *)(a1 + 1270) = 1;
          *(_WORD *)(a1 + 1272) = *((_WORD *)v18 + 12);
          *(double *)(a1 + 1280) = (double)*((__int16 *)v18 + 5) * 0.0000305175781;
          *(double *)(a1 + 1288) = (double)*((__int16 *)v18 + 8) * 0.0000305175781;
          *(double *)(a1 + 1296) = (double)*((__int16 *)v18 + 4) * 0.0000305175781;
          *(double *)(a1 + 1304) = (double)*((__int16 *)v18 + 11) * 0.0000305175781;
        }
      }
      else
      {
LABEL_249:
        if (!p_src)
          goto LABEL_52;
      }
    }
    else
    {
      if (v14 != 283 || a3[1] != 7 || *((_DWORD *)a3 + 1) != 64 || !*(_BYTE *)(a1 + 1224) || *(int *)(a1 + 1220) < 4)
        return;
      sub_1D52917E4(a1, __p);
      LODWORD(v70[0]) = sub_1D52A5CC8((uint64_t)a3);
      sub_1D5285B08((int *)&p_src, (int *)v70);
      sub_1D5285164((uint64_t *)&__src, (uint64_t *)__p, (uint64_t)&p_src, 0);
      sub_1D5282EB4((uint64_t)__p);
      memset(v75, 0, sizeof(v75));
      *(_OWORD *)__p = 0u;
      v74 = 0u;
      sub_1D52917E4(a1, v70);
      v68 = sub_1D52A5CC8((uint64_t)a3);
      sub_1D5285B08(&v69, &v68);
      sub_1D5285164((uint64_t *)&p_src, v70, (uint64_t)&v69, 0);
      sub_1D5282EB4((uint64_t)v70);
      sub_1D52917E4(a1, v70);
      (*(void (**)(uint64_t, void **, uint64_t))(*(_QWORD *)v70[0] + 32))(v70[0], __p, 64);
      sub_1D5282EB4((uint64_t)v70);
      sub_1D5285200((uint64_t *)&p_src);
      sub_1D52917E4(a1, v70);
      v17 = (_QWORD *)v70[0];
      v68 = 32;
      sub_1D5285A24(&v69, (unsigned int *)&v68);
      sub_1D5284D2C(v17, (unsigned int *)&v69, (uint64_t *)&p_src);
      sub_1D5282EB4((uint64_t)v70);
      v18 = p_src;
      if ((char *)v72 - (char *)p_src != 64)
        goto LABEL_247;
      v19 = 0;
      v20 = 0;
      v21 = 0;
      do
      {
        v21 = (*((unsigned __int8 *)__p + v19 + 4) + 73 * v21) % 0xFFEF;
        v20 = (*((unsigned __int8 *)v75 + v19++) + 73 * v20) % 0xFFEF;
      }
      while (v19 != 28);
      v22 = 0;
      v23 = 0;
      v24 = 0;
      do
      {
        v24 = (*((unsigned __int8 *)__p + v22 + 2) + 73 * v24) % 0xFFEF;
        v23 = (*((unsigned __int8 *)__p + v22 + 3) + 73 * v23) % 0xFFEF;
        v22 += 2;
      }
      while (v22 != 60);
      if (v21 != *((unsigned __int16 *)p_src + 1) || v20 != *((unsigned __int16 *)p_src + 30))
        goto LABEL_247;
      if (v24 == *(unsigned __int16 *)p_src && v23 == *((unsigned __int16 *)p_src + 31))
      {
        if (*((unsigned __int8 *)p_src + 29) << 8 == 256)
        {
          *(_BYTE *)(a1 + 1312) = 1;
          v26 = *((unsigned __int16 *)v18 + 17);
          *(_WORD *)(a1 + 1314) = v26;
          v27 = *((unsigned __int16 *)v18 + 16);
          *(_WORD *)(a1 + 1316) = v27;
          v28 = *((unsigned __int16 *)v18 + 4);
          *(_WORD *)(a1 + 1318) = v28;
          v29 = *((unsigned __int16 *)v18 + 11);
          *(_WORD *)(a1 + 1320) = v29;
          *(_WORD *)(a1 + 1322) = *((_WORD *)v18 + 12);
          *(_WORD *)(a1 + 1324) = *((_WORD *)v18 + 23);
          *(_WORD *)(a1 + 1326) = *((_WORD *)v18 + 8);
          *(_WORD *)(a1 + 1328) = *((_WORD *)v18 + 26);
          *(_WORD *)(a1 + 1330) = *((_WORD *)v18 + 27);
          *(_WORD *)(a1 + 1332) = *((_WORD *)v18 + 10);
          *(_WORD *)(a1 + 1334) = *((_WORD *)v18 + 20);
          *(_WORD *)(a1 + 1336) = *((_WORD *)v18 + 29);
          if (!__PAIR64__(v26, v27) && !v28 && !v29)
            *(_BYTE *)(a1 + 1312) = 0;
        }
      }
      else
      {
LABEL_247:
        if (!p_src)
          goto LABEL_52;
      }
    }
    v72 = v18;
    operator delete(v18);
LABEL_52:
    sub_1D5285200((uint64_t *)&__src);
    return;
  }
  if (a3[1] == 4 && *((_DWORD *)a3 + 1) == 1)
  {
    *(_DWORD *)(a1 + 1204) = *((_DWORD *)a3 + 2);
    *(_BYTE *)(a1 + 1208) = 1;
  }
}

void sub_1D52C3268(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D52C3614(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unsigned int v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  int v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  BOOL v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  unsigned __int16 v38;
  uint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  uint64_t result;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  uint64_t v53;
  void *exception;
  void *__p;
  std::__shared_weak_count *v56;
  char v57;
  uint64_t v58;
  std::__shared_weak_count *v59;
  uint64_t v60;
  std::__shared_weak_count *v61;
  uint64_t v62;
  std::__shared_weak_count *v63;
  uint64_t v64;
  int v65;

  v64 = a2;
  sub_1D52917E4(a1, &v62);
  v5 = (*(unsigned int (**)(uint64_t))(*(_QWORD *)v62 + 16))(v62);
  v6 = v63;
  if (v63)
  {
    p_shared_owners = (unint64_t *)&v63->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  if (v5 <= a3)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  sub_1D52917E4(a1, &v60);
  sub_1D528594C(&v58, &v64);
  sub_1D5285164(&v62, &v60, (uint64_t)&v58, 0);
  v9 = v61;
  if (v61)
  {
    v10 = (unint64_t *)&v61->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  sub_1D52917E4(a1, &v58);
  sub_1D5293C20(&v60, &v58, 2);
  v12 = v59;
  if (v59)
  {
    v13 = (unint64_t *)&v59->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  sub_1D52917E4(a1, &v58);
  v15 = sub_1D528479C(v58);
  v16 = v59;
  if (v59)
  {
    v17 = (unint64_t *)&v59->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if ((*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 616))(a1, v15))
  {
    while (1)
    {
      sub_1D52917E4(a1, &v58);
      v19 = sub_1D528479C(v58);
      v20 = v59;
      if (v59)
      {
        v21 = (unint64_t *)&v59->__shared_owners_;
        do
          v22 = __ldaxr(v21);
        while (__stlxr(v22 - 1, v21));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
          std::__shared_weak_count::__release_weak(v20);
        }
      }
      sub_1D52917E4(a1, &v58);
      v23 = sub_1D528479C(v58);
      v24 = v59;
      if (v59)
      {
        v25 = (unint64_t *)&v59->__shared_owners_;
        do
          v26 = __ldaxr(v25);
        while (__stlxr(v26 - 1, v25));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }
      sub_1D52917E4(a1, &v58);
      v27 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v58 + 48))(v58);
      v28 = v59;
      if (v59)
      {
        v29 = (unint64_t *)&v59->__shared_owners_;
        do
          v30 = __ldaxr(v29);
        while (__stlxr(v30 - 1, v29));
        if (!v30)
        {
          ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
          std::__shared_weak_count::__release_weak(v28);
        }
      }
      v31 = v19 < 0xFF01;
      if (v19 < 0xFF01)
        break;
      if (v19 == 65505)
      {
        sub_1D52917E4(a1, &v58);
        (*(void (**)(uint64_t, void **, uint64_t))(*(_QWORD *)v58 + 32))(v58, &__p, 6);
        v32 = v59;
        if (v59)
        {
          v33 = (unint64_t *)&v59->__shared_owners_;
          do
            v34 = __ldaxr(v33);
          while (__stlxr(v34 - 1, v33));
          if (!v34)
          {
            ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
            std::__shared_weak_count::__release_weak(v32);
          }
        }
        if ((_DWORD)__p != 1718188101)
          goto LABEL_63;
        sub_1D52917E4(a1, &v58);
        v65 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v58 + 48))(v58);
        v53 = *sub_1D52BFF48(&v65, &v64);
        v35 = v59;
        if (v59)
        {
          v36 = (unint64_t *)&v59->__shared_owners_;
          do
            v37 = __ldaxr(v36);
          while (__stlxr(v37 - 1, v36));
          if (!v37)
          {
            ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
            std::__shared_weak_count::__release_weak(v35);
          }
        }
      }
      else
      {
        v53 = 0;
      }
      v38 = v23 - 2;
      LODWORD(a3) = a3 - 4 - (unsigned __int16)(v23 - 2);
      if ((a3 & 0x80000000) == 0)
      {
        sub_1D52917E4(a1, &v58);
        v39 = v58;
        __p = (void *)(v27 + (unint64_t)v38);
        sub_1D528594C(&v65, (uint64_t *)&__p);
        (*(void (**)(uint64_t, int *, _QWORD))(*(_QWORD *)v39 + 40))(v39, &v65, 0);
        v40 = v59;
        if (v59)
        {
          v41 = (unint64_t *)&v59->__shared_owners_;
          do
            v42 = __ldaxr(v41);
          while (__stlxr(v42 - 1, v41));
          if (!v42)
          {
            ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
            std::__shared_weak_count::__release_weak(v40);
          }
        }
        if (a3 >= 5 && !v53 && v19 != 65498)
          continue;
      }
      goto LABEL_64;
    }
    v53 = 0;
  }
  else
  {
LABEL_63:
    v53 = 0;
    v31 = 1;
  }
LABEL_64:
  sub_1D5293C98(&v60);
  result = sub_1D5285200(&v62);
  if (!v31 && v53)
  {
    sub_1D52917E4(a1, &v60);
    v58 = v64 + v53;
    sub_1D528594C(&__p, &v58);
    sub_1D52B1CC8((uint64_t)&v62, &v60, &__p);
    v44 = v61;
    if (v61)
    {
      v45 = (unint64_t *)&v61->__shared_owners_;
      do
        v46 = __ldaxr(v45);
      while (__stlxr(v46 - 1, v45));
      if (!v46)
      {
        ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
        std::__shared_weak_count::__release_weak(v44);
      }
    }
    sub_1D52917E4(a1, &v58);
    LODWORD(__p) = 0;
    sub_1D5285164(&v60, &v58, (uint64_t)&__p, 0);
    v47 = v59;
    if (v59)
    {
      v48 = (unint64_t *)&v59->__shared_owners_;
      do
        v49 = __ldaxr(v48);
      while (__stlxr(v49 - 1, v48));
      if (!v49)
      {
        ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
        std::__shared_weak_count::__release_weak(v47);
      }
    }
    sub_1D52917E4(a1, &__p);
    sub_1D5293C20(&v58, (uint64_t *)&__p, 2);
    v50 = v56;
    if (v56)
    {
      v51 = (unint64_t *)&v56->__shared_owners_;
      do
        v52 = __ldaxr(v51);
      while (__stlxr(v52 - 1, v51));
      if (!v52)
      {
        ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
        std::__shared_weak_count::__release_weak(v50);
      }
    }
    sub_1D52850A0(&__p, "EmbeddedThumbnail:");
    (*(void (**)(uint64_t, void **, uint64_t))(*(_QWORD *)a1 + 672))(a1, &__p, 42);
    if (v57 < 0)
      operator delete(__p);
    sub_1D5293C98(&v58);
    sub_1D5285200(&v60);
    return sub_1D52B1D54((uint64_t)&v62);
  }
  return result;
}

void sub_1D52C3C38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,char a21)
{
  sub_1D52B1D54((uint64_t)&a21);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52C3D50(uint64_t a1, __n128 *a2)
{
  if (*(_BYTE *)(a1 + 24))
  {
    sub_1D52C5AE4(a1, a2);
  }
  else
  {
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    *(__n128 *)a1 = *a2;
    *(_QWORD *)(a1 + 16) = a2[1].n128_u64[0];
    a2->n128_u64[0] = 0;
    a2->n128_u64[1] = 0;
    a2[1].n128_u64[0] = 0;
    *(_BYTE *)(a1 + 24) = 1;
  }
  return a1;
}

uint64_t *sub_1D52C3DAC(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t *result;
  __int16 v9;
  unsigned int v10;
  __int128 *v11;

  result = (uint64_t *)nullsub_6();
  if (*(_WORD *)a3 == 73 && *(_WORD *)(a3 + 2) == 3 && *(_DWORD *)(a3 + 4) == 1)
  {
    v10 = 0;
    sub_1D5285A24(&v11, &v10);
    v9 = sub_1D52A7E28(a3, (unsigned int *)&v11);
    v11 = a2;
    result = sub_1D52B417C((uint64_t **)(a1 + 1232), (void **)a2, (uint64_t)&unk_1D544A5C4, &v11);
    *((_WORD *)result + 28) = v9;
  }
  return result;
}

uint64_t sub_1D52C3E44(uint64_t a1)
{
  uint64_t v2;
  void *__p[2];
  char v5;

  if (*(_BYTE *)(a1 + 1208))
    return *(unsigned int *)(a1 + 1204);
  sub_1D52850A0(__p, "IFD0");
  v2 = sub_1D52B0BBC(a1, __p);
  if (v5 < 0)
    operator delete(__p[0]);
  return v2;
}

void sub_1D52C3EAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D52C3EC8(uint64_t a1)
{
  int v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  void *__p;
  std::__shared_weak_count *v9;
  char v10;
  int v11;

  if (*(_BYTE *)(a1 + 1208))
  {
    sub_1D52917E4(a1, &__p);
    v2 = (*(uint64_t (**)(void *))(*(_QWORD *)__p + 16))(__p);
    if (!*(_BYTE *)(a1 + 1208))
      sub_1D5287C98();
    v11 = v2;
    v3 = *sub_1D52B4588(&v11, (_DWORD *)(a1 + 1204));
    v4 = v9;
    if (v9)
    {
      p_shared_owners = (unint64_t *)&v9->__shared_owners_;
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
  else
  {
    sub_1D52850A0(&__p, "IFD0");
    v3 = sub_1D52B0C2C(a1, &__p);
    if (v10 < 0)
      operator delete(__p);
  }
  return v3;
}

void sub_1D52C3FA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

unint64_t sub_1D52C3FD0(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 1184) | ((unint64_t)*(unsigned __int16 *)(a1 + 1186) << 32);
}

unint64_t sub_1D52C3FE0(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 1190) | ((unint64_t)*(unsigned __int16 *)(a1 + 1188) << 32);
}

unint64_t sub_1D52C4004(uint64_t a1)
{
  unsigned int v1;
  unsigned int v2;
  uint64_t v3;
  void *exception;

  v1 = *(unsigned __int16 *)(a1 + 1184);
  if (*(_BYTE *)(a1 + 1264))
  {
    v2 = *(unsigned __int16 *)(a1 + 1258);
    if ((int)(*(unsigned __int16 *)(a1 + 1262) - v2) > (int)v1)
      goto LABEL_8;
    v3 = *(unsigned __int16 *)(a1 + 1256);
    if (*(unsigned __int16 *)(a1 + 1260) - (int)v3 > *(unsigned __int16 *)(a1 + 1186))
      goto LABEL_8;
  }
  else
  {
    v2 = *(unsigned __int16 *)(a1 + 1190);
    if (*(unsigned __int16 *)(a1 + 1194) + v2 > v1
      || (v3 = *(unsigned __int16 *)(a1 + 1188),
          *(unsigned __int16 *)(a1 + 1192) + v3 > *(unsigned __int16 *)(a1 + 1186)))
    {
LABEL_8:
      exception = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1D8271938](exception, "RawCameraException");
      __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
    }
  }
  return v2 | (unint64_t)(v3 << 32);
}

void sub_1D52C411C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52C413C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 1268))
    return *(unsigned __int16 *)(a1 + 1266);
  else
    return sub_1D52919C4();
}

void sub_1D52C4150(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  const void *v10;
  unsigned __int16 *v11;
  unsigned __int16 *v12;
  int v13;
  void *v14;
  void *exception;
  void *v16;
  void *__p;
  unsigned __int16 *v18;
  uint64_t v19;
  int v20;

  sub_1D540A7A4();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = v4;
  if (*(_BYTE *)(a1 + 1656)
    && objc_msgSend_BOOLForKey_(v4, v5, (uint64_t)CFSTR("USE_MULTISIZE_TILES"), v6, v7))
  {
    if (!*(_BYTE *)(a1 + 1530))
    {
      exception = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1D8271938](exception, "RawCameraException");
      __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
    }
    if (!*(_BYTE *)(a1 + 1656))
      sub_1D5287C98();
    v9 = *(unsigned __int16 *)(a1 + 1528);
    if (!*(_WORD *)(a1 + 1528)
      || (v10 = *(const void **)(a1 + 1632), v9 > (uint64_t)(*(_QWORD *)(a1 + 1640) - (_QWORD)v10) >> 1))
    {
      v14 = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1D8271938](v14, "RawCameraException");
      __cxa_throw(v14, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
    }
    __p = 0;
    v18 = 0;
    v19 = 0;
    sub_1D5287CCC(&__p, v10, (uint64_t)v10 + 2 * v9, v9);
    v11 = (unsigned __int16 *)__p;
    v12 = v18;
    if (__p == v18)
    {
      v13 = 0;
    }
    else
    {
      v13 = 0;
      do
      {
        v20 = v13;
        v13 = *sub_1D52C5B34(&v20, v11++);
      }
      while (v11 != v12);
      if (v13 < 0)
      {
LABEL_20:
        v16 = __cxa_allocate_exception(0x10uLL);
        MEMORY[0x1D8271938](v16, "RawCameraException");
        __cxa_throw(v16, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
      }
    }
    if (v13 != *(unsigned __int16 *)(a1 + 1184))
      goto LABEL_20;
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
    sub_1D5287CCC(a2, __p, (uint64_t)v18, ((char *)v18 - (_BYTE *)__p) >> 1);
    if (__p)
    {
      v18 = (unsigned __int16 *)__p;
      operator delete(__p);
    }
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }

}

void sub_1D52C431C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1D52C4374(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  const void *v10;
  unsigned __int16 *v11;
  unsigned __int16 *v12;
  int v13;
  void *v14;
  void *exception;
  void *v16;
  void *__p;
  unsigned __int16 *v18;
  uint64_t v19;
  int v20;

  sub_1D540A7A4();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = v4;
  if (*(_BYTE *)(a1 + 1688)
    && objc_msgSend_BOOLForKey_(v4, v5, (uint64_t)CFSTR("USE_MULTISIZE_TILES"), v6, v7))
  {
    if (!*(_BYTE *)(a1 + 1534))
    {
      exception = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1D8271938](exception, "RawCameraException");
      __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
    }
    if (!*(_BYTE *)(a1 + 1688))
      sub_1D5287C98();
    v9 = *(unsigned __int16 *)(a1 + 1532);
    if (!*(_WORD *)(a1 + 1532)
      || (v10 = *(const void **)(a1 + 1664), v9 > (uint64_t)(*(_QWORD *)(a1 + 1672) - (_QWORD)v10) >> 1))
    {
      v14 = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1D8271938](v14, "RawCameraException");
      __cxa_throw(v14, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
    }
    __p = 0;
    v18 = 0;
    v19 = 0;
    sub_1D5287CCC(&__p, v10, (uint64_t)v10 + 2 * v9, v9);
    v11 = (unsigned __int16 *)__p;
    v12 = v18;
    if (__p == v18)
    {
      v13 = 0;
    }
    else
    {
      v13 = 0;
      do
      {
        v20 = v13;
        v13 = *sub_1D52C5B34(&v20, v11++);
      }
      while (v11 != v12);
      if (v13 < 0)
      {
LABEL_20:
        v16 = __cxa_allocate_exception(0x10uLL);
        MEMORY[0x1D8271938](v16, "RawCameraException");
        __cxa_throw(v16, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
      }
    }
    if (v13 != *(unsigned __int16 *)(a1 + 1186))
      goto LABEL_20;
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
    sub_1D5287CCC(a2, __p, (uint64_t)v18, ((char *)v18 - (_BYTE *)__p) >> 1);
    if (__p)
    {
      v18 = (unsigned __int16 *)__p;
      operator delete(__p);
    }
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }

}

void sub_1D52C4540(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

uint64_t sub_1D52C4598(uint64_t a1)
{
  uint64_t v2;
  int v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  _BOOL4 v8;
  _BOOL4 v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  int v16;
  const void *p_p;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  void *__p;
  uint64_t v25;
  uint64_t v26;

  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) != 0)
    return 0;
  __p = 0;
  v25 = 0;
  v26 = 0;
  sub_1D52917E4(a1, &v22);
  v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v22 + 48))(v22);
  v4 = v23;
  if (v23)
  {
    p_shared_owners = (unint64_t *)&v23->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  sub_1D52917E4(a1, &v22);
  v7 = v22;
  v20 = 12;
  sub_1D5285A24(&v21, &v20);
  v8 = sub_1D52849DC(v7, &v21, (uint64_t)&__p);
  v9 = v8;
  v10 = v23;
  if (!v23)
    goto LABEL_12;
  v11 = (unint64_t *)&v23->__shared_owners_;
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
    if (!v9)
      goto LABEL_32;
  }
  else
  {
LABEL_12:
    if (!v8)
      goto LABEL_32;
  }
  if (v26 >= 0)
    v13 = HIBYTE(v26);
  else
    v13 = v25;
  if (v13 == 5)
  {
    if (v26 >= 0)
      p_p = &__p;
    else
      p_p = __p;
    if (!memcmp(p_p, "LEICA", 5uLL))
      goto LABEL_36;
LABEL_32:
    v2 = 0;
    goto LABEL_33;
  }
  if (v13 != 9)
    goto LABEL_32;
  v14 = (unsigned __int8 *)&__p;
  if (v26 < 0)
    v14 = (unsigned __int8 *)__p;
  v15 = *(_QWORD *)v14;
  v16 = v14[8];
  if (v15 != 0x696E6F73616E6150 || v16 != 99)
    goto LABEL_32;
LABEL_36:
  v22 = v3 + 12;
  sub_1D528594C(&v21, &v22);
  (*(void (**)(uint64_t, unsigned int *))(*(_QWORD *)a1 + 160))(a1, &v21);
  v2 = 1;
LABEL_33:
  if (SHIBYTE(v26) < 0)
    operator delete(__p);
  return v2;
}

void sub_1D52C4784(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1D52C47BC(uint64_t a1@<X0>, char **a2@<X8>)
{
  void **v4;
  void **v5;
  void **v6;
  int v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  void *__p[2];
  char v12;
  unsigned int v13;
  __int128 v14;

  sub_1D52B08D0(a1, (uint64_t)a2);
  sub_1D5282F74((int *)__p, (int *)(a1 + 1196));
  v13 = *(_DWORD *)(a1 + 1200);
  sub_1D5291E58(a1, (int *)__p, &v13, 1, &v14);
  if ((_QWORD)v14)
  {
    sub_1D52850A0(__p, "IFD0");
    v4 = sub_1D5294144(a1 + 704, __p);
    v5 = v4;
    v6 = (void **)(a1 + 712);
    if (v6 == v4)
      v7 = 0;
    else
      v7 = *((_DWORD *)v4 + 14);
    if (v12 < 0)
      operator delete(__p[0]);
    if (v6 != v5 && v7)
      *(_DWORD *)(v14 + 16) = v7;
    sub_1D52B0A7C(a2, &v14);
  }
  v8 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (*((_QWORD *)&v14 + 1))
  {
    v9 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_1D52C48C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16)
{
  sub_1D5282EB4((uint64_t)&a16);
  sub_1D5282E44((void ***)&__p);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52C490C(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int16 *)(a1 + 1228) - 2;
  if (v1 > 2)
    return 2492765332;
  else
    return dword_1D5448DDC[(__int16)v1];
}

uint64_t sub_1D52C493C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 792))(a1);
}

uint64_t sub_1D52C4948(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 1270);
}

double sub_1D52C4950(uint64_t a1, uint64_t a2)
{
  double result;

  *(_BYTE *)a2 = *(_BYTE *)(a1 + 1312);
  *(_OWORD *)(a2 + 2) = *(_OWORD *)(a1 + 1314);
  result = *(double *)(a1 + 1330);
  *(double *)(a2 + 18) = result;
  return result;
}

BOOL sub_1D52C4970(uint64_t a1)
{
  uint64_t v2;
  void **v3;
  void **v4;
  void **v5;
  int v6;
  void **v8;
  void **v9;
  void *__p[2];
  char v12;

  v2 = a1 + 1232;
  sub_1D52850A0(__p, "IFD0:EXIF:MAKERNOTE");
  v3 = sub_1D5294144(v2, __p);
  v4 = v3;
  v5 = (void **)(a1 + 1240);
  if ((void **)(a1 + 1240) == v3)
    v6 = 0;
  else
    v6 = *((unsigned __int16 *)v3 + 28);
  if (v12 < 0)
    operator delete(__p[0]);
  if (v5 == v4)
  {
    sub_1D52850A0(__p, "EmbeddedThumbnail:IFD0:EXIF:MAKERNOTE");
    v8 = sub_1D5294144(v2, __p);
    v9 = v8;
    if (v4 != v8)
      v6 = *((unsigned __int16 *)v8 + 28);
    if (v12 < 0)
      operator delete(__p[0]);
    return v4 != v9 && v6 == 2;
  }
  else
  {
    return v6 == 2;
  }
}

void sub_1D52C4A40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1D52C4A60(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  char *v4;
  uint64_t v5;
  unsigned __int8 v6;
  void **v7;
  uint64_t v8;
  char *v9;
  void **v10;
  char *v11;
  void **v12;
  char *v13;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  __int128 v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  __int128 v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char *v27;
  char *v28;
  __int128 v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  unint64_t v33;
  __int128 v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char *v39;
  char *v40;
  __int128 v41;
  uint64_t v42;
  int v43;
  unint64_t v44;
  unint64_t v45;
  __int128 v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  char *v51;
  char *v52;
  __int128 v53;
  uint64_t v54;
  int v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  char *v60;
  char *v61;
  __int128 v62;
  uint64_t v63;
  int v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  std::string __p;
  void *v69;
  uint64_t v70;
  unsigned __int8 v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t *v76;

  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  v4 = (char *)&v69;
  (*(void (**)(void **__return_ptr))(*(_QWORD *)a1 + 216))(&v69);
  v5 = v71;
  v6 = v71;
  v7 = (void **)v69;
  v8 = v70;
  if ((v71 & 0x80u) == 0)
    v9 = (char *)&v69 + v71;
  else
    v9 = (char *)v69 + v70;
  if ((v71 & 0x80u) != 0)
    v4 = (char *)v69;
  if (v4 != v9)
  {
    do
    {
      *v4 = __toupper(*v4);
      ++v4;
    }
    while (v4 != v9);
    v5 = v71;
    v7 = (void **)v69;
    v8 = v70;
    v6 = v71;
  }
  if ((v6 & 0x80u) == 0)
  {
    v10 = &v69;
  }
  else
  {
    v5 = v8;
    v10 = v7;
  }
  if (v5 >= 5)
  {
    v11 = (char *)v10 + v5;
    v12 = v10;
    do
    {
      v13 = (char *)memchr(v12, 76, v5 - 4);
      if (!v13)
        break;
      if (*(_DWORD *)v13 == 1128875340 && v13[4] == 65)
      {
        if (v13 == v11 || v13 - (char *)v10 == -1)
          break;
        if (a1[295] >= 0x30000u)
          v15 = "rwl";
        else
          v15 = "raw";
        sub_1D52850A0(&__p, v15);
        v16 = a2[2];
        v17 = a2[1];
        if (v17 >= v16)
        {
          v56 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v17 - *a2) >> 3);
          v57 = v56 + 1;
          if (v56 + 1 > 0xAAAAAAAAAAAAAAALL)
            sub_1D5282B8C();
          v58 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v16 - *a2) >> 3);
          if (2 * v58 > v57)
            v57 = 2 * v58;
          if (v58 >= 0x555555555555555)
            v59 = 0xAAAAAAAAAAAAAAALL;
          else
            v59 = v57;
          v76 = a2 + 2;
          if (v59)
            v60 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v59);
          else
            v60 = 0;
          v61 = &v60[24 * v56];
          v72 = v60;
          v73 = v61;
          v75 = &v60[24 * v59];
          v62 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
          *((_QWORD *)v61 + 2) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
          *(_OWORD *)v61 = v62;
          memset(&__p, 0, sizeof(__p));
          v74 = v61 + 24;
          sub_1D5293D58(a2, &v72);
          v63 = a2[1];
          sub_1D5293F24((uint64_t)&v72);
          v64 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
          a2[1] = v63;
          if (v64 < 0)
            operator delete(__p.__r_.__value_.__l.__data_);
        }
        else
        {
          v18 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
          *(_QWORD *)(v17 + 16) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
          *(_OWORD *)v17 = v18;
          a2[1] = v17 + 24;
        }
        sub_1D52850A0(&__p, "leica");
        v33 = a2[1];
        v65 = a2[2];
        if (v33 >= v65)
        {
          v35 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v33 - *a2) >> 3);
          v66 = v35 + 1;
          if (v35 + 1 > 0xAAAAAAAAAAAAAAALL)
            sub_1D5282B8C();
          v67 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v65 - *a2) >> 3);
          if (2 * v67 > v66)
            v66 = 2 * v67;
          if (v67 >= 0x555555555555555)
            v38 = 0xAAAAAAAAAAAAAAALL;
          else
            v38 = v66;
          v76 = a2 + 2;
          if (!v38)
          {
            v39 = 0;
            goto LABEL_55;
          }
          goto LABEL_53;
        }
        goto LABEL_45;
      }
      v12 = (void **)(v13 + 1);
      v5 = v11 - (char *)v12;
    }
    while (v11 - (char *)v12 >= 5);
  }
  if (a1[295] >= 0x30000u)
    v19 = "rw2";
  else
    v19 = "raw";
  sub_1D52850A0(&__p, v19);
  v20 = a2[2];
  v21 = a2[1];
  if (v21 >= v20)
  {
    v23 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v21 - *a2) >> 3);
    v24 = v23 + 1;
    if (v23 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v25 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v20 - *a2) >> 3);
    if (2 * v25 > v24)
      v24 = 2 * v25;
    if (v25 >= 0x555555555555555)
      v26 = 0xAAAAAAAAAAAAAAALL;
    else
      v26 = v24;
    v76 = a2 + 2;
    if (v26)
      v27 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v26);
    else
      v27 = 0;
    v28 = &v27[24 * v23];
    v72 = v27;
    v73 = v28;
    v75 = &v27[24 * v26];
    v29 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *((_QWORD *)v28 + 2) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)v28 = v29;
    memset(&__p, 0, sizeof(__p));
    v74 = v28 + 24;
    sub_1D5293D58(a2, &v72);
    v30 = a2[1];
    sub_1D5293F24((uint64_t)&v72);
    v31 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    a2[1] = v30;
    if (v31 < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    v22 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(_QWORD *)(v21 + 16) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)v21 = v22;
    a2[1] = v21 + 24;
  }
  sub_1D52850A0(&__p, "panasonic");
  v33 = a2[1];
  v32 = a2[2];
  if (v33 >= v32)
  {
    v35 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v33 - *a2) >> 3);
    v36 = v35 + 1;
    if (v35 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v37 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v32 - *a2) >> 3);
    if (2 * v37 > v36)
      v36 = 2 * v37;
    if (v37 >= 0x555555555555555)
      v38 = 0xAAAAAAAAAAAAAAALL;
    else
      v38 = v36;
    v76 = a2 + 2;
    if (v38)
LABEL_53:
      v39 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v38);
    else
      v39 = 0;
LABEL_55:
    v40 = &v39[24 * v35];
    v72 = v39;
    v73 = v40;
    v75 = &v39[24 * v38];
    v41 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *((_QWORD *)v40 + 2) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)v40 = v41;
    memset(&__p, 0, sizeof(__p));
    v74 = v40 + 24;
    sub_1D5293D58(a2, &v72);
    v42 = a2[1];
    sub_1D5293F24((uint64_t)&v72);
    v43 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    a2[1] = v42;
    if (v43 < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
LABEL_45:
    v34 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(_QWORD *)(v33 + 16) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)v33 = v34;
    a2[1] = v33 + 24;
  }
  sub_1D5293780((uint64_t)a1, &__p);
  v44 = a2[2];
  v45 = a2[1];
  if (v45 >= v44)
  {
    v47 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v45 - *a2) >> 3);
    v48 = v47 + 1;
    if (v47 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v49 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v44 - *a2) >> 3);
    if (2 * v49 > v48)
      v48 = 2 * v49;
    if (v49 >= 0x555555555555555)
      v50 = 0xAAAAAAAAAAAAAAALL;
    else
      v50 = v48;
    v76 = a2 + 2;
    if (v50)
      v51 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v50);
    else
      v51 = 0;
    v52 = &v51[24 * v47];
    v72 = v51;
    v73 = v52;
    v75 = &v51[24 * v50];
    v53 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *((_QWORD *)v52 + 2) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)v52 = v53;
    memset(&__p, 0, sizeof(__p));
    v74 = v52 + 24;
    sub_1D5293D58(a2, &v72);
    v54 = a2[1];
    sub_1D5293F24((uint64_t)&v72);
    v55 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    a2[1] = v54;
    if (v55 < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    v46 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(_QWORD *)(v45 + 16) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)v45 = v46;
    a2[1] = v45 + 24;
  }
  if ((char)v71 < 0)
    operator delete(v69);
}

void sub_1D52C50A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  sub_1D5293F24((uint64_t)&a22);
  if (a15 < 0)
    operator delete(__p);
  if (a21 < 0)
    operator delete(a16);
  sub_1D5293CCC((void ***)&a16);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52C512C(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 1272);
}

double sub_1D52C5134(uint64_t a1)
{
  return *(double *)(a1 + 1280);
}

double sub_1D52C513C(uint64_t a1)
{
  return *(double *)(a1 + 1288);
}

double sub_1D52C5144(uint64_t a1)
{
  return *(double *)(a1 + 1296);
}

double sub_1D52C514C(uint64_t a1)
{
  return *(double *)(a1 + 1304);
}

void sub_1D52C5154(unsigned int *a1@<X0>, _QWORD *a2@<X1>, _OWORD *a3@<X2>, _QWORD *a4@<X8>)
{
  unsigned int v8;
  uint64_t i;
  void **v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *p_shared_owners;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t *v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t *v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t *v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t *v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t *v47;
  void *exception;
  int v49;
  uint64_t v50;
  uint64_t v51;
  std::__shared_weak_count *v52;
  uint64_t v53;
  std::__shared_weak_count *v54;
  char v55;
  void *__p[2];
  char v57;
  _QWORD v58[3];
  _QWORD v59[3];
  _QWORD v60[3];
  _QWORD v61[3];
  _QWORD v62[4];

  v62[3] = *MEMORY[0x1E0C80C00];
  if (!*((_BYTE *)a1 + 1216))
  {
    if (!*((_BYTE *)a1 + 1224))
    {
      exception = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1D8271938](exception, "RawCameraException");
      __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
    }
    *a4 = 0;
    a4[1] = 0;
    goto LABEL_25;
  }
  *a4 = 0;
  a4[1] = 0;
  if (*((_BYTE *)a1 + 1224))
  {
LABEL_25:
    switch(a1[305])
    {
      case 4u:
        (*(void (**)(uint64_t *__return_ptr, unsigned int *))(*(_QWORD *)a1 + 384))(&v53, a1);
        v51 = (*(uint64_t (**)(unsigned int *))(*(_QWORD *)a1 + 424))(a1);
        if (!*((_BYTE *)a1 + 1224))
          sub_1D5287C98();
        v55 = 1;
        LODWORD(v50) = (*(uint64_t (**)(unsigned int *))(*(_QWORD *)a1 + 520))(a1);
        sub_1D52C641C(&v53, (unint64_t *)&v51, a2, a3, (int *)a1 + 305, &v55, (int *)&v50, __p);
        sub_1D5292548((uint64_t)a4, (__int128 *)__p);
        v18 = (std::__shared_weak_count *)__p[1];
        if (__p[1])
        {
          v19 = (unint64_t *)((char *)__p[1] + 8);
          do
            v20 = __ldaxr(v19);
          while (__stlxr(v20 - 1, v19));
          if (!v20)
          {
            ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
            std::__shared_weak_count::__release_weak(v18);
          }
        }
        v21 = v54;
        if (v54)
        {
          p_shared_owners = (unint64_t *)&v54->__shared_owners_;
          do
            v23 = __ldaxr(p_shared_owners);
          while (__stlxr(v23 - 1, p_shared_owners));
          goto LABEL_82;
        }
        break;
      case 5u:
        (*(void (**)(uint64_t *__return_ptr, unsigned int *))(*(_QWORD *)a1 + 384))(&v53, a1);
        v51 = (*(uint64_t (**)(unsigned int *))(*(_QWORD *)a1 + 424))(a1);
        sub_1D52C6694(&v53, (unint64_t *)&v51, a2, a3, __p);
        sub_1D5292548((uint64_t)a4, (__int128 *)__p);
        v36 = (std::__shared_weak_count *)__p[1];
        if (__p[1])
        {
          v37 = (unint64_t *)((char *)__p[1] + 8);
          do
            v38 = __ldaxr(v37);
          while (__stlxr(v38 - 1, v37));
          if (!v38)
          {
            ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
            std::__shared_weak_count::__release_weak(v36);
          }
        }
        v21 = v54;
        if (v54)
        {
          v39 = (unint64_t *)&v54->__shared_owners_;
          do
            v23 = __ldaxr(v39);
          while (__stlxr(v23 - 1, v39));
          goto LABEL_82;
        }
        break;
      case 6u:
        (*(void (**)(uint64_t *__return_ptr, unsigned int *))(*(_QWORD *)a1 + 384))(&v53, a1);
        v51 = (*(uint64_t (**)(unsigned int *))(*(_QWORD *)a1 + 424))(a1);
        if (!*((_BYTE *)a1 + 1224))
          sub_1D5287C98();
        v55 = 0;
        LODWORD(v50) = (*(uint64_t (**)(unsigned int *))(*(_QWORD *)a1 + 520))(a1);
        sub_1D52C641C(&v53, (unint64_t *)&v51, a2, a3, (int *)a1 + 305, &v55, (int *)&v50, __p);
        sub_1D5292548((uint64_t)a4, (__int128 *)__p);
        v28 = (std::__shared_weak_count *)__p[1];
        if (__p[1])
        {
          v29 = (unint64_t *)((char *)__p[1] + 8);
          do
            v30 = __ldaxr(v29);
          while (__stlxr(v30 - 1, v29));
          if (!v30)
          {
            ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
            std::__shared_weak_count::__release_weak(v28);
          }
        }
        v21 = v54;
        if (v54)
        {
          v31 = (unint64_t *)&v54->__shared_owners_;
          do
            v23 = __ldaxr(v31);
          while (__stlxr(v23 - 1, v31));
          goto LABEL_82;
        }
        break;
      case 7u:
        (*(void (**)(uint64_t *__return_ptr, unsigned int *))(*(_QWORD *)a1 + 384))(&v53, a1);
        v51 = (*(uint64_t (**)(unsigned int *))(*(_QWORD *)a1 + 424))(a1);
        LOBYTE(v49) = 0;
        sub_1D52C6544(&v53, (unint64_t *)&v51, a2, a3, (char *)&v49, __p);
        sub_1D5292548((uint64_t)a4, (__int128 *)__p);
        v32 = (std::__shared_weak_count *)__p[1];
        if (__p[1])
        {
          v33 = (unint64_t *)((char *)__p[1] + 8);
          do
            v34 = __ldaxr(v33);
          while (__stlxr(v34 - 1, v33));
          if (!v34)
          {
            ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
            std::__shared_weak_count::__release_weak(v32);
          }
        }
        v21 = v54;
        if (v54)
        {
          v35 = (unint64_t *)&v54->__shared_owners_;
          do
            v23 = __ldaxr(v35);
          while (__stlxr(v23 - 1, v35));
          goto LABEL_82;
        }
        break;
      case 8u:
        (*(void (**)(uint64_t *__return_ptr, unsigned int *))(*(_QWORD *)a1 + 384))(&v53, a1);
        v51 = (*(uint64_t (**)(unsigned int *))(*(_QWORD *)a1 + 424))(a1);
        sub_1D52C677C(&v53, (unint64_t *)&v51, a2, a3, (uint64_t)(a1 + 344), __p);
        sub_1D5292548((uint64_t)a4, (__int128 *)__p);
        v24 = (std::__shared_weak_count *)__p[1];
        if (__p[1])
        {
          v25 = (unint64_t *)((char *)__p[1] + 8);
          do
            v26 = __ldaxr(v25);
          while (__stlxr(v26 - 1, v25));
          if (!v26)
          {
            ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
            std::__shared_weak_count::__release_weak(v24);
          }
        }
        v21 = v54;
        if (v54)
        {
          v27 = (unint64_t *)&v54->__shared_owners_;
          do
            v23 = __ldaxr(v27);
          while (__stlxr(v23 - 1, v27));
          goto LABEL_82;
        }
        break;
      default:
        return;
    }
    return;
  }
  v8 = a1[303];
  if (v8 - 34826 <= 4 && ((1 << (v8 - 10)) & 0x15) != 0)
  {
    sub_1D52850A0(__p, "D-LUX2");
    sub_1D52850A0(v58, "D-LUX 3");
    sub_1D52850A0(v59, "DIGILUX 3");
    sub_1D52850A0(v60, "DMC-L1");
    sub_1D52850A0(v61, "DMC-LX1");
    sub_1D52850A0(v62, "DMC-LX2");
    sub_1D52C5E74((uint64_t)&v53, __p, 6);
    for (i = 0; i != -18; i -= 3)
    {
      if (SHIBYTE(v62[i + 2]) < 0)
        operator delete((void *)v62[i]);
    }
    (*(void (**)(void **__return_ptr, unsigned int *))(*(_QWORD *)a1 + 224))(__p, a1);
    v11 = sub_1D5294144((uint64_t)&v53, __p);
    if (v57 < 0)
      operator delete(__p[0]);
    if (&v54 == (std::__shared_weak_count **)v11)
    {
      (*(void (**)(uint64_t *__return_ptr, unsigned int *))(*(_QWORD *)a1 + 384))(&v51, a1);
      v50 = (*(uint64_t (**)(unsigned int *))(*(_QWORD *)a1 + 424))(a1);
      sub_1D52C62E4(&v51, (unint64_t *)&v50, a2, a3, __p);
      sub_1D5292548((uint64_t)a4, (__int128 *)__p);
      v44 = (std::__shared_weak_count *)__p[1];
      if (__p[1])
      {
        v45 = (unint64_t *)((char *)__p[1] + 8);
        do
          v46 = __ldaxr(v45);
        while (__stlxr(v46 - 1, v45));
        if (!v46)
        {
          ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
          std::__shared_weak_count::__release_weak(v44);
        }
      }
      v15 = v52;
      if (!v52)
        goto LABEL_94;
      v47 = (unint64_t *)&v52->__shared_owners_;
      do
        v17 = __ldaxr(v47);
      while (__stlxr(v17 - 1, v47));
    }
    else
    {
      (*(void (**)(uint64_t *__return_ptr, unsigned int *))(*(_QWORD *)a1 + 384))(&v51, a1);
      v50 = (*(uint64_t (**)(unsigned int *))(*(_QWORD *)a1 + 424))(a1);
      v49 = (*(uint64_t (**)(unsigned int *))(*(_QWORD *)a1 + 504))(a1);
      sub_1D52C6194(&v51, (unint64_t *)&v50, a2, a3, &v49, __p);
      sub_1D5292548((uint64_t)a4, (__int128 *)__p);
      v12 = (std::__shared_weak_count *)__p[1];
      if (__p[1])
      {
        v13 = (unint64_t *)((char *)__p[1] + 8);
        do
          v14 = __ldaxr(v13);
        while (__stlxr(v14 - 1, v13));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      v15 = v52;
      if (!v52)
        goto LABEL_94;
      v16 = (unint64_t *)&v52->__shared_owners_;
      do
        v17 = __ldaxr(v16);
      while (__stlxr(v17 - 1, v16));
    }
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
LABEL_94:
    sub_1D52940F4((uint64_t)&v53, (char *)v54);
    return;
  }
  if (v8 == 34316)
  {
    (*(void (**)(uint64_t *__return_ptr, unsigned int *))(*(_QWORD *)a1 + 384))(&v53, a1);
    v51 = (*(uint64_t (**)(unsigned int *))(*(_QWORD *)a1 + 424))(a1);
    LODWORD(v50) = 6;
    sub_1D52C5D14(&v53, (unint64_t *)&v51, a2, a3, (int *)&v50, __p);
    sub_1D5292548((uint64_t)a4, (__int128 *)__p);
    v40 = (std::__shared_weak_count *)__p[1];
    if (__p[1])
    {
      v41 = (unint64_t *)((char *)__p[1] + 8);
      do
        v42 = __ldaxr(v41);
      while (__stlxr(v42 - 1, v41));
      if (!v42)
      {
        ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
        std::__shared_weak_count::__release_weak(v40);
      }
    }
    v21 = v54;
    if (v54)
    {
      v43 = (unint64_t *)&v54->__shared_owners_;
      do
        v23 = __ldaxr(v43);
      while (__stlxr(v23 - 1, v43));
LABEL_82:
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
        std::__shared_weak_count::__release_weak(v21);
      }
    }
  }
  else
  {
    NSLog(CFSTR("%d"), a1[303]);
  }
}

void sub_1D52C59A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  uint64_t v23;

  sub_1D5282EB4((uint64_t)&a14);
  sub_1D5282EB4(v23);
  _Unwind_Resume(a1);
}

void sub_1D52C5AC0(uint64_t a1)
{
  sub_1D52C5BA4(a1);
  JUMPOUT(0x1D8271ADCLL);
}

__n128 sub_1D52C5AE4(uint64_t a1, __n128 *a2)
{
  void *v4;
  __n128 result;

  v4 = *(void **)a1;
  if (v4)
  {
    *(_QWORD *)(a1 + 8) = v4;
    operator delete(v4);
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
  }
  result = *a2;
  *(__n128 *)a1 = *a2;
  *(_QWORD *)(a1 + 16) = a2[1].n128_u64[0];
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  return result;
}

_DWORD *sub_1D52C5B34(_DWORD *result, unsigned __int16 *a2)
{
  int v2;
  BOOL v3;
  void *exception;

  v2 = *a2;
  v3 = __OFADD__(*result, v2);
  *result += v2;
  if (v3)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return result;
}

void sub_1D52C5B90(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52C5BA4(uint64_t a1)
{
  *(_QWORD *)a1 = off_1E9973C48;
  sub_1D5288714(a1 + 1376);
  sub_1D52940F4(a1 + 1232, *(char **)(a1 + 1240));
  return sub_1D52B2190(a1);
}

void sub_1D52C5BE4(uint64_t *a1@<X1>, char *a2@<X2>, void **a3@<X3>, void **a4@<X4>, _QWORD *a5@<X8>)
{
  _QWORD *v10;

  v10 = operator new(0x6B8uLL);
  sub_1D52C5C64(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;
  sub_1D5285658((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1D52C5C50(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52C5C64(_QWORD *a1, uint64_t *a2, char *a3, void **a4, void **a5)
{
  a1[2] = 0;
  *a1 = &unk_1E9973F98;
  a1[1] = 0;
  sub_1D52C19E0((uint64_t)(a1 + 3), a2, *a3, *a4, *a5);
  return a1;
}

void sub_1D52C5CA8(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52C5CBC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9973F98;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52C5CD0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9973F98;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52C5D04(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a1 + 24) + 16))(a1 + 24);
}

void sub_1D52C5D14(_QWORD *a1@<X1>, unint64_t *a2@<X2>, _QWORD *a3@<X3>, _OWORD *a4@<X4>, int *a5@<X5>, _QWORD *a6@<X8>)
{
  _QWORD *v12;

  v12 = operator new(0xE0uLL);
  sub_1D52C5DA4((uint64_t)v12, a1, a2, a3, a4, a5);
  *a6 = v12 + 3;
  a6[1] = v12;
  sub_1D5285658((uint64_t)a6, v12 + 4, (uint64_t)(v12 + 3));
}

void sub_1D52C5D90(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52C5DA4(uint64_t a1, _QWORD *a2, unint64_t *a3, _QWORD *a4, _OWORD *a5, int *a6)
{
  int v7;

  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = &unk_1E9973FE8;
  *(_QWORD *)(a1 + 8) = 0;
  v7 = *a6;
  sub_1D530B330(a1 + 24, a2, *a3, a4, a5);
  *(_QWORD *)(a1 + 24) = &unk_1E99907F0;
  *(_DWORD *)(a1 + 212) = v7;
  *(_BYTE *)(a1 + 216) = 1;
  *(_DWORD *)(a1 + 220) = 12;
  return a1;
}

void sub_1D52C5E08(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52C5E1C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9973FE8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52C5E30(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9973FE8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52C5E64(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_1D52C5E74(uint64_t a1, void **a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v6;

  *(_QWORD *)(a1 + 8) = 0;
  v4 = a1 + 8;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = a1 + 8;
  if (a3)
  {
    v6 = 24 * a3;
    do
    {
      sub_1D52C5EF4((uint64_t **)a1, v4, a2, (uint64_t)a2);
      a2 += 3;
      v6 -= 24;
    }
    while (v6);
  }
  return a1;
}

void sub_1D52C5EDC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1D52940F4(v1, *(char **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_1D52C5EF4(uint64_t **a1, uint64_t a2, void **a3, uint64_t a4)
{
  uint64_t **v6;
  uint64_t *result;
  uint64_t *v8;
  uint64_t v9;
  void **v10;

  v6 = (uint64_t **)sub_1D52C5F74(a1, a2, &v10, &v9, a3);
  result = *v6;
  if (!*v6)
  {
    sub_1D52C60F8((uint64_t)a1, a4, (uint64_t)&v8);
    sub_1D528EFCC(a1, (uint64_t)v10, v6, v8);
    return v8;
  }
  return result;
}

void **sub_1D52C5F74(_QWORD *a1, uint64_t a2, void ***a3, uint64_t *a4, void **a5)
{
  void **v9;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  void **v14;
  void **v15;
  _QWORD *v16;
  BOOL v17;
  void **v19;

  v9 = (void **)(a1 + 1);
  if (a1 + 1 == (_QWORD *)a2 || (sub_1D52941C0(a5, (void **)(a2 + 32)) & 0x80) != 0)
  {
    if (*a1 == a2)
    {
      v12 = (_QWORD *)a2;
    }
    else
    {
      v11 = *(_QWORD **)a2;
      if (*(_QWORD *)a2)
      {
        do
        {
          v12 = v11;
          v11 = (_QWORD *)v11[1];
        }
        while (v11);
      }
      else
      {
        v16 = (_QWORD *)a2;
        do
        {
          v12 = (_QWORD *)v16[2];
          v17 = *v12 == (_QWORD)v16;
          v16 = v12;
        }
        while (v17);
      }
      if ((sub_1D52941C0(v12 + 4, a5) & 0x80) == 0)
        return (void **)sub_1D52B3CFC((uint64_t)a1, a3, a5);
    }
    if (*(_QWORD *)a2)
    {
      *a3 = (void **)v12;
      return (void **)(v12 + 1);
    }
    else
    {
      *a3 = (void **)a2;
      return (void **)a2;
    }
  }
  if ((sub_1D52941C0((_QWORD *)(a2 + 32), a5) & 0x80) != 0)
  {
    a4 = (uint64_t *)(a2 + 8);
    v13 = *(_QWORD *)(a2 + 8);
    if (v13)
    {
      v14 = *(void ***)(a2 + 8);
      do
      {
        v15 = v14;
        v14 = (void **)*v14;
      }
      while (v14);
    }
    else
    {
      v19 = (void **)a2;
      do
      {
        v15 = (void **)v19[2];
        v17 = *v15 == v19;
        v19 = v15;
      }
      while (!v17);
    }
    if (v15 == v9)
      goto LABEL_27;
    if ((sub_1D52941C0(a5, v15 + 4) & 0x80) != 0)
    {
      v13 = *a4;
LABEL_27:
      if (v13)
      {
        *a3 = v15;
        return v15;
      }
      else
      {
        *a3 = (void **)a2;
      }
      return (void **)a4;
    }
    return (void **)sub_1D52B3CFC((uint64_t)a1, a3, a5);
  }
  *a3 = (void **)a2;
  *a4 = a2;
  return (void **)a4;
}

_QWORD *sub_1D52C60F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char *v6;
  _QWORD *result;

  v5 = a1 + 8;
  v6 = (char *)operator new(0x38uLL);
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  result = v6 + 32;
  if (*(char *)(a2 + 23) < 0)
  {
    result = sub_1D5290130(result, *(void **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)result = *(_OWORD *)a2;
    result[2] = *(_QWORD *)(a2 + 16);
  }
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_1D52C6178(_Unwind_Exception *a1)
{
  _QWORD *v1;
  void **v2;
  uint64_t v3;

  *v1 = 0;
  sub_1D52B3E30(v3, v2);
  _Unwind_Resume(a1);
}

void sub_1D52C6194(_QWORD *a1@<X1>, unint64_t *a2@<X2>, _QWORD *a3@<X3>, _OWORD *a4@<X4>, int *a5@<X5>, _QWORD *a6@<X8>)
{
  _QWORD *v12;

  v12 = operator new(0xD8uLL);
  sub_1D52C6224((uint64_t)v12, a1, a2, a3, a4, a5);
  *a6 = v12 + 3;
  a6[1] = v12;
  sub_1D5285658((uint64_t)a6, v12 + 4, (uint64_t)(v12 + 3));
}

void sub_1D52C6210(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52C6224(uint64_t a1, _QWORD *a2, unint64_t *a3, _QWORD *a4, _OWORD *a5, int *a6)
{
  int v7;

  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = &unk_1E9974038;
  *(_QWORD *)(a1 + 8) = 0;
  v7 = *a6;
  sub_1D530B330(a1 + 24, a2, *a3, a4, a5);
  *(_QWORD *)(a1 + 24) = &unk_1E9978DC8;
  *(_DWORD *)(a1 + 212) = v7;
  return a1;
}

void sub_1D52C6278(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52C628C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9974038;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52C62A0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9974038;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52C62D4(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_1D52C62E4(_QWORD *a1@<X1>, unint64_t *a2@<X2>, _QWORD *a3@<X3>, _OWORD *a4@<X4>, _QWORD *a5@<X8>)
{
  _QWORD *v10;

  v10 = operator new(0xD8uLL);
  sub_1D52C6364(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;
  sub_1D5285658((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1D52C6350(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52C6364(_QWORD *a1, _QWORD *a2, unint64_t *a3, _QWORD *a4, _OWORD *a5)
{
  a1[2] = 0;
  *a1 = &unk_1E9974088;
  a1[1] = 0;
  sub_1D530B330((uint64_t)(a1 + 3), a2, *a3, a4, a5);
  a1[3] = &unk_1E9978CD8;
  return a1;
}

void sub_1D52C63B0(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52C63C4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9974088;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52C63D8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9974088;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52C640C(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_1D52C641C(_QWORD *a1@<X1>, unint64_t *a2@<X2>, _QWORD *a3@<X3>, _OWORD *a4@<X4>, int *a5@<X5>, char *a6@<X6>, int *a7@<X7>, _QWORD *a8@<X8>)
{
  _QWORD *v16;

  v16 = operator new(0xE0uLL);
  sub_1D52C64C4((uint64_t)v16, a1, a2, a3, a4, a5, a6, a7);
  *a8 = v16 + 3;
  a8[1] = v16;
  sub_1D5285658((uint64_t)a8, v16 + 4, (uint64_t)(v16 + 3));
}

void sub_1D52C64B0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52C64C4(uint64_t a1, _QWORD *a2, unint64_t *a3, _QWORD *a4, _OWORD *a5, int *a6, char *a7, int *a8)
{
  int v9;
  char v10;
  int v11;

  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = &unk_1E9973FE8;
  *(_QWORD *)(a1 + 8) = 0;
  v9 = *a6;
  v10 = *a7;
  v11 = *a8;
  sub_1D530B330(a1 + 24, a2, *a3, a4, a5);
  *(_QWORD *)(a1 + 24) = &unk_1E99907F0;
  *(_DWORD *)(a1 + 212) = v9;
  *(_BYTE *)(a1 + 216) = v10;
  *(_DWORD *)(a1 + 220) = v11;
  return a1;
}

void sub_1D52C6530(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52C6544(_QWORD *a1@<X1>, unint64_t *a2@<X2>, _QWORD *a3@<X3>, _OWORD *a4@<X4>, char *a5@<X5>, _QWORD *a6@<X8>)
{
  _QWORD *v12;

  v12 = operator new(0xD8uLL);
  sub_1D52C65D4((uint64_t)v12, a1, a2, a3, a4, a5);
  *a6 = v12 + 3;
  a6[1] = v12;
  sub_1D5285658((uint64_t)a6, v12 + 4, (uint64_t)(v12 + 3));
}

void sub_1D52C65C0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52C65D4(uint64_t a1, _QWORD *a2, unint64_t *a3, _QWORD *a4, _OWORD *a5, char *a6)
{
  char v7;

  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = &unk_1E99740D8;
  *(_QWORD *)(a1 + 8) = 0;
  v7 = *a6;
  sub_1D530B330(a1 + 24, a2, *a3, a4, a5);
  *(_QWORD *)(a1 + 24) = &unk_1E999BCB0;
  *(_BYTE *)(a1 + 210) = v7;
  return a1;
}

void sub_1D52C6628(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52C663C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E99740D8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52C6650(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E99740D8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52C6684(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_1D52C6694(_QWORD *a1@<X1>, unint64_t *a2@<X2>, _QWORD *a3@<X3>, _OWORD *a4@<X4>, _QWORD *a5@<X8>)
{
  _QWORD *v10;

  v10 = operator new(0xD8uLL);
  sub_1D52C6714((uint64_t)v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;
  sub_1D5285658((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1D52C6700(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52C6714(uint64_t a1, _QWORD *a2, unint64_t *a3, _QWORD *a4, _OWORD *a5)
{
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = &unk_1E99740D8;
  *(_QWORD *)(a1 + 8) = 0;
  sub_1D530B330(a1 + 24, a2, *a3, a4, a5);
  *(_QWORD *)(a1 + 24) = &unk_1E999BCB0;
  *(_BYTE *)(a1 + 210) = 1;
  return a1;
}

void sub_1D52C6768(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52C677C(_QWORD *a1@<X1>, unint64_t *a2@<X2>, _QWORD *a3@<X3>, _OWORD *a4@<X4>, uint64_t a5@<X5>, _QWORD *a6@<X8>)
{
  _QWORD *v12;

  v12 = operator new(0x20268uLL);
  sub_1D52C6810(v12, a1, a2, a3, a4, a5);
  *a6 = v12 + 3;
  a6[1] = v12;
  sub_1D5285658((uint64_t)a6, v12 + 4, (uint64_t)(v12 + 3));
}

void sub_1D52C67FC(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52C6810(_QWORD *a1, _QWORD *a2, unint64_t *a3, _QWORD *a4, _OWORD *a5, uint64_t a6)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1E9974128;
  sub_1D52C68B8((uint64_t)(a1 + 3), a2, *a3, a4, a5, a6);
  return a1;
}

void sub_1D52C684C(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52C6860(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9974128;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52C6874(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9974128;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52C68A8(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_1D52C68B8(uint64_t a1, _QWORD *a2, unint64_t a3, _QWORD *a4, _OWORD *a5, uint64_t a6)
{
  _QWORD *v9;

  v9 = (_QWORD *)sub_1D530B330(a1, a2, a3, a4, a5);
  *v9 = &off_1E996FC98;
  sub_1D52C693C((uint64_t)(v9 + 24), a6);
  *(_BYTE *)(a1 + 512) = 0;
  *(_OWORD *)(a1 + 528) = 0u;
  *(_OWORD *)(a1 + 544) = 0u;
  *(_OWORD *)(a1 + 560) = 0u;
  *(_QWORD *)(a1 + 576) = *a4;
  *(_QWORD *)(a1 + 131656) = 0;
  return a1;
}

void sub_1D52C6928(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_1D5282F0C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52C693C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  int v6;

  v4 = sub_1D52C6B24(a1, a2);
  sub_1D52C6BB4(v4 + 32, a2 + 32);
  v5 = *(_OWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 79) = *(_DWORD *)(a2 + 79);
  *(_OWORD *)(a1 + 64) = v5;
  sub_1D52C6BB4(a1 + 88, a2 + 88);
  sub_1D52C6BB4(a1 + 120, a2 + 120);
  v6 = *(_DWORD *)(a2 + 152);
  *(_DWORD *)(a1 + 155) = *(_DWORD *)(a2 + 155);
  *(_DWORD *)(a1 + 152) = v6;
  sub_1D52C6C44(a1 + 160, a2 + 160);
  sub_1D52C6BB4(a1 + 192, a2 + 192);
  sub_1D52C6C44(a1 + 224, a2 + 224);
  sub_1D52C6BB4(a1 + 256, a2 + 256);
  sub_1D52C6BB4(a1 + 288, a2 + 288);
  return a1;
}

void sub_1D52C6A20(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void **v3;
  void **v4;
  void **v5;
  void **v6;
  void **v7;
  void **v8;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  if (*(_BYTE *)(v1 + 280))
  {
    v10 = *v8;
    if (*v8)
    {
      *(_QWORD *)(v1 + 264) = v10;
      operator delete(v10);
    }
  }
  if (*(_BYTE *)(v1 + 248))
  {
    v11 = *v7;
    if (*v7)
    {
      *(_QWORD *)(v1 + 232) = v11;
      operator delete(v11);
    }
  }
  if (*(_BYTE *)(v1 + 216))
  {
    v12 = *v6;
    if (*v6)
    {
      *(_QWORD *)(v1 + 200) = v12;
      operator delete(v12);
    }
  }
  if (*(_BYTE *)(v1 + 184))
  {
    v13 = *v5;
    if (*v5)
    {
      *(_QWORD *)(v1 + 168) = v13;
      operator delete(v13);
    }
  }
  if (*(_BYTE *)(v1 + 144))
  {
    v14 = *v4;
    if (*v4)
    {
      *(_QWORD *)(v1 + 128) = v14;
      operator delete(v14);
    }
  }
  if (*(_BYTE *)(v1 + 112))
  {
    v15 = *v3;
    if (*v3)
    {
      *(_QWORD *)(v1 + 96) = v15;
      operator delete(v15);
    }
  }
  if (*(_BYTE *)(v1 + 56))
  {
    v16 = *v2;
    if (*v2)
    {
      *(_QWORD *)(v1 + 40) = v16;
      operator delete(v16);
    }
  }
  if (*(_BYTE *)(v1 + 24))
  {
    v17 = *(void **)v1;
    if (*(_QWORD *)v1)
    {
      *(_QWORD *)(v1 + 8) = v17;
      operator delete(v17);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D52C6B24(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = 0;
  *(_BYTE *)(a1 + 24) = 0;
  sub_1D52C6B6C((_QWORD *)a1, a2);
  return a1;
}

void sub_1D52C6B50(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(_BYTE *)(v1 + 24))
    sub_1D5444384((void **)v1);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_1D52C6B6C(_QWORD *result, uint64_t a2)
{
  _QWORD *v2;

  if (*(_BYTE *)(a2 + 24))
  {
    v2 = result;
    *result = 0;
    result[1] = 0;
    result[2] = 0;
    result = sub_1D5287D44(result, *(const void **)a2, *(_QWORD *)(a2 + 8), (uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 2);
    *((_BYTE *)v2 + 24) = 1;
  }
  return result;
}

uint64_t sub_1D52C6BB4(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = 0;
  *(_BYTE *)(a1 + 24) = 0;
  sub_1D52C6BFC((_QWORD *)a1, a2);
  return a1;
}

void sub_1D52C6BE0(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(_BYTE *)(v1 + 24))
    sub_1D5444384((void **)v1);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_1D52C6BFC(_QWORD *result, uint64_t a2)
{
  _QWORD *v2;

  if (*(_BYTE *)(a2 + 24))
  {
    v2 = result;
    *result = 0;
    result[1] = 0;
    result[2] = 0;
    result = sub_1D5287CCC(result, *(const void **)a2, *(_QWORD *)(a2 + 8), (uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 1);
    *((_BYTE *)v2 + 24) = 1;
  }
  return result;
}

uint64_t sub_1D52C6C44(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = 0;
  *(_BYTE *)(a1 + 24) = 0;
  sub_1D52C6B6C((_QWORD *)a1, a2);
  return a1;
}

void sub_1D52C6C70(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(_BYTE *)(v1 + 24))
    sub_1D5444384((void **)v1);
  _Unwind_Resume(exception_object);
}

void sub_1D52C6C8C(void *__p@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 + 8) = __p;
  operator delete(__p);
}

id sub_1D52C6C94(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const char *v28;
  void *v29;
  const char *v30;
  uint64_t v31;
  void *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[11];
  _QWORD v43[2];

  v43[1] = *MEMORY[0x1E0C80C00];
  v5 = *MEMORY[0x1E0CBD388];
  v34 = *MEMORY[0x1E0CBD368];
  v35 = v5;
  v42[0] = MEMORY[0x1E0C9AAB0];
  v42[1] = CFSTR("com.canon.cr3-raw-image");
  v6 = *MEMORY[0x1E0CBD380];
  v36 = *MEMORY[0x1E0CBD348];
  v42[2] = CFSTR(".cr3.");
  v42[3] = &unk_1E99CA578;
  v42[4] = &unk_1E99CA590;
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], a2, (uint64_t)sub_1D52C6F48, a4, a5, v34, v35, v36, v6, *MEMORY[0x1E0CBD370], *MEMORY[0x1E0CBD378]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v42[5] = v7;
  v37 = *MEMORY[0x1E0CBD330];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v8, (uint64_t)sub_1D52C7078, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v42[6] = v11;
  v38 = *MEMORY[0x1E0CBD350];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v12, (uint64_t)sub_1D52C7084, v13, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v42[7] = v15;
  v39 = *MEMORY[0x1E0CBD338];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v16, (uint64_t)sub_1D52E8DA4, v17, v18);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v42[8] = v19;
  v40 = *MEMORY[0x1E0CBD358];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v20, (uint64_t)sub_1D52C7090, v21, v22);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v42[9] = v23;
  v41 = *MEMORY[0x1E0CBD360];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v24, (uint64_t)sub_1D52C709C, v25, v26);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v42[10] = v27;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v28, (uint64_t)v42, (uint64_t)&v34, 11);
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v43[0] = v29;
  objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v30, (uint64_t)v43, 1, v31);
  v32 = (void *)objc_claimAutoreleasedReturnValue();

  return v32;
}

void sub_1D52C6EE8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

BOOL sub_1D52C6F48(uint64_t a1, unint64_t a2)
{
  unsigned int v3;
  int v4;
  int v5;
  _BOOL8 v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v13[3];
  __int128 v14;
  unint64_t v15;

  v15 = a2;
  sub_1D528304C(v13, &v15);
  sub_1D52843AC(a1, (uint64_t)v13, 0, &v14);
  sub_1D5293C20(v13, (uint64_t *)&v14, 2);
  v3 = sub_1D52847F8(v14);
  v4 = sub_1D52847F8(v14);
  v5 = sub_1D52847F8(v14);
  v8 = v3 >= 0xC && v15 > v3 && v4 == 1718909296 && v5 == 1668446240;
  sub_1D5293C98(v13);
  v9 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (*((_QWORD *)&v14 + 1))
  {
    v10 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  return v8;
}

void sub_1D52C7038(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  sub_1D5293C98(&a9);
  sub_1D5282EB4((uint64_t)&a12);
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1D52C7024);
}

void sub_1D52C7078(const void *a1, uint64_t a2, uint64_t a3)
{
  sub_1D52E7A20(a1, a2, a3, (void *)qword_1EFF32360);
}

uint64_t sub_1D52C7084(os_signpost_id_t a1)
{
  return sub_1D52E8C40(a1);
}

uint64_t sub_1D52C7090(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1D52E7438(a1, a2, a3, (void *)qword_1EFF32360);
}

uint64_t sub_1D52C709C(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1D52E9A7C(a1, a2, a3, (void *)qword_1EFF32360);
}

void sub_1D52C70A8(uint64_t *a1@<X1>, char a2@<W2>, void *a3@<X3>, void *a4@<X4>, _OWORD *a5@<X8>)
{
  __int128 v8;
  id v9;
  id v10;
  char v11;

  v11 = a2;
  v10 = a3;
  v9 = a4;
  sub_1D52D7EF4(a1, &v11, &v10, &v9, &v8);
  *a5 = v8;

}

void sub_1D52C7124(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{

  _Unwind_Resume(a1);
}

double sub_1D52C7140(uint64_t a1, uint64_t *a2, char a3, void *a4, void *a5)
{
  uint64_t v5;
  double result;

  v5 = sub_1D5290574(a1, a2, a3, a4, a5);
  *(_QWORD *)v5 = off_1E9974198;
  *(_QWORD *)(v5 + 504) = 0;
  *(_DWORD *)(v5 + 512) = -1;
  *(_BYTE *)(v5 + 604) = 0;
  *(_BYTE *)(v5 + 608) = 0;
  *(_BYTE *)(v5 + 612) = 0;
  *(_BYTE *)(v5 + 616) = 0;
  *(_BYTE *)(v5 + 620) = 0;
  *(_BYTE *)(v5 + 624) = 0;
  *(_BYTE *)(v5 + 628) = 0;
  *(_BYTE *)(v5 + 632) = 0;
  *(_BYTE *)(v5 + 636) = 0;
  *(_BYTE *)(v5 + 640) = 0;
  *(_BYTE *)(v5 + 644) = 0;
  *(_BYTE *)(v5 + 648) = 0;
  *(_BYTE *)(v5 + 652) = 0;
  *(_BYTE *)(v5 + 656) = 0;
  *(_BYTE *)(v5 + 660) = 0;
  *(_BYTE *)(v5 + 664) = 0;
  *(_BYTE *)(v5 + 668) = 0;
  *(_BYTE *)(v5 + 672) = 0;
  *(_BYTE *)(v5 + 676) = 0;
  *(_BYTE *)(v5 + 680) = 0;
  *(_BYTE *)(v5 + 684) = 0;
  *(_BYTE *)(v5 + 688) = 0;
  *(_BYTE *)(v5 + 692) = 0;
  *(_QWORD *)(v5 + 720) = 0;
  *(_BYTE *)(v5 + 728) = 0;
  *(_BYTE *)(v5 + 732) = 0;
  *(_BYTE *)(v5 + 736) = 0;
  *(_BYTE *)(v5 + 600) = 0;
  result = 0.0;
  *(_OWORD *)(v5 + 568) = 0u;
  *(_OWORD *)(v5 + 584) = 0u;
  *(_OWORD *)(v5 + 536) = 0u;
  *(_OWORD *)(v5 + 552) = 0u;
  *(_OWORD *)(v5 + 520) = 0u;
  return result;
}

void sub_1D52C71F0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  const char *v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  const char *v40;
  uint64_t v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  const char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  const char *v51;
  uint64_t v52;
  uint64_t v53;
  const char *v54;
  uint64_t v55;
  const char *v56;
  uint64_t v57;
  uint64_t v58;
  const char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  id v64;
  const char *v65;
  uint64_t v66;
  uint64_t v67;
  const char *v68;
  uint64_t v69;
  const char *v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  const char *v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  const char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  const char *v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  const char *v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  const char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  const char *v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  const char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  const char *v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  const char *v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  const char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  const char *v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  const char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  const char *v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  const char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  const char *v132;
  uint64_t v133;
  uint64_t v134;
  void *v135;
  const char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  const char *v140;
  uint64_t v141;
  uint64_t v142;
  void *v143;
  const char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  const char *v148;
  uint64_t v149;
  uint64_t v150;
  void *v151;
  const char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  const char *v156;
  uint64_t v157;
  uint64_t v158;
  const char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  const char *v164;
  uint64_t v165;
  uint64_t v166;
  unsigned int v167;
  void *v168;
  uint64_t v169;
  char *v170;
  const char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  const char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  const char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  const char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  const char *v195;
  uint64_t v196;
  uint64_t v197;
  void *v198;
  const char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  void *v203;
  const char *v204;
  uint64_t v205;
  uint64_t v206;
  void *v207;
  const char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  void *v212;
  const char *v213;
  uint64_t v214;
  uint64_t v215;
  void *v216;
  const char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  void *v221;
  const char *v222;
  uint64_t v223;
  uint64_t v224;
  void *v225;
  const char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  void *v230;
  const char *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  void *v235;
  const char *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  void *v240;
  const char *v241;
  uint64_t v242;
  uint64_t v243;
  void *v244;
  const char *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  void *v249;
  const char *v250;
  uint64_t v251;
  uint64_t v252;
  void *v253;
  const char *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  void *v258;
  const char *v259;
  uint64_t v260;
  uint64_t v261;
  void *v262;
  const char *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  void *v267;
  const char *v268;
  uint64_t v269;
  uint64_t v270;
  const char *v271;
  const char *v272;
  uint64_t v273;
  uint64_t v274;
  void *v275;
  void *v276;
  const char *v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  int v281;
  const char *v282;
  uint64_t v283;
  uint64_t v284;
  const char *v285;
  uint64_t v286;
  uint64_t v287;
  const char *v288;
  uint64_t v289;
  uint64_t v290;
  void *v291;
  const char *v292;
  uint64_t v293;
  uint64_t v294;
  void *v295;
  BOOL v296;
  const char *v297;
  uint64_t v298;
  uint64_t v299;
  void *v300;
  const char *v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  void *v305;
  const char *v306;
  uint64_t v307;
  uint64_t v308;
  void *v309;
  const char *v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  void *v314;
  const char *v315;
  uint64_t v316;
  uint64_t v317;
  void *v318;
  const char *v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  void *v323;
  const char *v324;
  uint64_t v325;
  uint64_t v326;
  void *v327;
  const char *v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  const char *v332;
  uint64_t v333;
  uint64_t v334;
  const char *v335;
  uint64_t v336;
  uint64_t v337;
  const char *v338;
  uint64_t v339;
  uint64_t v340;
  const char *v341;
  uint64_t v342;
  uint64_t v343;
  const char *v344;
  uint64_t v345;
  uint64_t v346;
  void *v347;
  const char *v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  id v352;
  void *v353;
  const char *v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  const char *v358;
  uint64_t v359;
  uint64_t v360;
  void *v361;
  const char *v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  const char *v366;
  uint64_t v367;
  uint64_t v368;
  void *v369;
  const char *v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  const char *v374;
  uint64_t v375;
  uint64_t v376;
  void *v377;
  const char *v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  char *v382;
  void *v383;
  const char *v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  void *v388;
  const char *v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  void *v393;
  const char *v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  std::__shared_weak_count_vtbl *v398;
  std::__shared_weak_count_vtbl *v399;
  _QWORD *v400;
  std::__shared_weak_count *v401;
  _QWORD *v402;
  uint64_t v403;
  unint64_t v404;
  uint64_t v405;
  unint64_t v406;
  char *v407;
  char *v408;
  uint64_t v409;
  char *v410;
  void *v411;
  const char *v412;
  unint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t i;
  void *v420;
  int v421;
  unint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  int v426;
  _QWORD *v427;
  std::__shared_weak_count *v428;
  _QWORD *v429;
  uint64_t v430;
  unint64_t v431;
  uint64_t v432;
  char *v433;
  char *v434;
  int v435;
  uint64_t v436;
  uint64_t v437;
  _QWORD *v438;
  _QWORD *v439;
  _QWORD *v440;
  uint64_t v441;
  unint64_t v442;
  uint64_t v443;
  char *v444;
  char *v445;
  uint64_t v446;
  char *v447;
  char *v448;
  void *v449;
  BOOL v450;
  const char *v451;
  uint64_t v452;
  uint64_t v453;
  void *v454;
  const char *v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  const char *v460;
  uint64_t v461;
  uint64_t v462;
  void *v463;
  const char *v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  const char *v469;
  uint64_t v470;
  uint64_t v471;
  const char *v472;
  uint64_t v473;
  uint64_t v474;
  void *v475;
  const char *v476;
  uint64_t v477;
  uint64_t v478;
  void *v479;
  const char *v480;
  void *v481;
  const char *v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  const char *v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  const char *v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  const char *v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  void *v498;
  const char *v499;
  uint64_t v500;
  uint64_t v501;
  void *v502;
  const char *v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  const char *v507;
  uint64_t v508;
  uint64_t v509;
  void *v510;
  const char *v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  const char *v515;
  uint64_t v516;
  uint64_t v517;
  void *v518;
  const char *v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  const char *v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  const char *v527;
  uint64_t v528;
  uint64_t v529;
  void *v530;
  const char *v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  const char *v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  const char *v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  const char *v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  const char *v547;
  uint64_t v548;
  uint64_t v549;
  const char *v550;
  uint64_t v551;
  uint64_t v552;
  const char *v553;
  uint64_t v554;
  uint64_t v555;
  const char *v556;
  uint64_t v557;
  uint64_t v558;
  void *v559;
  void *v560;
  const char *v561;
  uint64_t v562;
  void *v563;
  const char *v564;
  uint64_t v565;
  uint64_t v566;
  void *v567;
  const char *v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  int v572;
  const char *v573;
  uint64_t v574;
  uint64_t v575;
  void *v576;
  const char *v577;
  const char *v578;
  uint64_t v579;
  uint64_t v580;
  uint64_t v581;
  uint64_t v582;
  uint64_t j;
  void *v584;
  const char *v585;
  uint64_t v586;
  uint64_t v587;
  uint64_t v588;
  const char *v589;
  uint64_t v590;
  uint64_t v591;
  void *v592;
  const char *v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596;
  const char *v597;
  uint64_t v598;
  uint64_t v599;
  void *v600;
  const char *v601;
  uint64_t v602;
  uint64_t v603;
  void *v604;
  const char *v605;
  uint64_t v606;
  uint64_t v607;
  uint64_t v608;
  const char *v609;
  uint64_t v610;
  uint64_t v611;
  void *v612;
  const char *v613;
  uint64_t v614;
  uint64_t v615;
  uint64_t v616;
  const char *v617;
  uint64_t v618;
  uint64_t v619;
  void *v620;
  const char *v621;
  uint64_t v622;
  uint64_t v623;
  uint64_t v624;
  void *exception;
  void *v626;
  void *v627;
  void *v628;
  void *v629;
  void *v630;
  void *v631;
  void *v632;
  void *v633;
  void *v634;
  void *context;
  void *v636;
  void *v637;
  void *v638;
  void *v639;
  void *v640;
  void *v641;
  void *v642;
  void *v643;
  void *v644;
  void *v645;
  void *v646;
  void *v647;
  void *v648;
  id v649;
  void *v650;
  uint64_t **v651;
  uint64_t **v652;
  id obj;
  uint64_t v654;
  void *v655;
  uint64_t v656;
  void *v657;
  void *v658;
  uint64_t v659;
  void *v660;
  void *v661;
  void *v662;
  void *v663;
  void *v664;
  void *v665;
  void *v666;
  void *v667;
  void *v668;
  uint64_t v669;
  void *v670;
  __int128 v671;
  __int128 v672;
  __int128 v673;
  __int128 v674;
  void *v675[2];
  char v676;
  __int128 v677;
  __int128 v678;
  __int128 v679;
  __int128 v680;
  __int128 v681;
  __int128 v682;
  __int128 v683;
  __int128 v684;
  void *__p;
  std::__shared_weak_count *v686;
  unint64_t v687;
  _QWORD v688[4];
  id v689;
  _QWORD v690[4];
  id v691;
  _QWORD v692[4];
  id v693;
  _QWORD v694[4];
  id v695;
  uint64_t v696[3];
  uint64_t v697[3];
  void **v698;
  _BYTE v699[128];
  _QWORD v700[10];
  _QWORD v701[10];
  _QWORD v702[4];
  _QWORD v703[4];
  _BYTE v704[128];
  void *__src;
  _QWORD *v706;
  unint64_t v707;
  _BYTE v708[128];
  uint64_t v709;

  v709 = *MEMORY[0x1E0C80C00];
  context = (void *)MEMORY[0x1D8272058]();
  v659 = a1;
  sub_1D52917E4(a1, &__p);
  LODWORD(__src) = 0;
  sub_1D5285164(v697, (uint64_t *)&__p, (uint64_t)&__src, 0);
  sub_1D5285200(v697);
  v2 = v686;
  if (v686)
  {
    p_shared_owners = (unint64_t *)&v686->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  sub_1D52917E4(v659, &__p);
  sub_1D5293C20(v696, (uint64_t *)&__p, 2);
  sub_1D5293C98(v696);
  v5 = v686;
  if (v686)
  {
    v6 = (unint64_t *)&v686->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  sub_1D52917E4(v659, &__p);
  sub_1D52C9450(v659, (const char *)&__p, 0xFFFFFFFFLL, v8, v9);
  v649 = (id)objc_claimAutoreleasedReturnValue();
  v10 = v686;
  if (v686)
  {
    v11 = (unint64_t *)&v686->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v659 + 400))(v659);
  v646 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_valueForKeyPath_(v649, v13, (uint64_t)CFSTR("moov.uuid-85C0B687-820F-11E0-8111-F4CE462B6A48.CMT1"), v14, v15);
  v645 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v645)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  objc_msgSend_dictionary(MEMORY[0x1E0C99E08], v16, v17, v18, v19);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v21 = MEMORY[0x1E0C809B0];
  v694[0] = MEMORY[0x1E0C809B0];
  v694[1] = 3221225472;
  v694[2] = sub_1D52C9D6C;
  v694[3] = &unk_1E9974420;
  v22 = v20;
  v695 = v22;
  v634 = v22;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(v645, v23, (uint64_t)v694, v24, v25);
  objc_msgSend_setObject_forKeyedSubscript_(v646, v26, (uint64_t)v22, *MEMORY[0x1E0CBD090], v27);
  objc_msgSend_valueForKeyPath_(v649, v28, (uint64_t)CFSTR("moov.uuid-85C0B687-820F-11E0-8111-F4CE462B6A48.CMT2"), v29, v30);
  v641 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v641)
  {
    v626 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](v626, "RawCameraException");
    __cxa_throw(v626, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  objc_msgSend_dictionary(MEMORY[0x1E0C99E08], v31, v32, v33, v34);
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  v692[0] = v21;
  v692[1] = 3221225472;
  v692[2] = sub_1D52C9E7C;
  v692[3] = &unk_1E9974420;
  v36 = v35;
  v693 = v36;
  v648 = v36;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(v641, v37, (uint64_t)v692, v38, v39);
  objc_msgSend_setObject_forKeyedSubscript_(v646, v40, (uint64_t)v36, *MEMORY[0x1E0CBCB50], v41);
  objc_msgSend_valueForKeyPath_(v649, v42, (uint64_t)CFSTR("moov.uuid-85C0B687-820F-11E0-8111-F4CE462B6A48.CMT3"), v43, v44);
  v644 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v644)
  {
    v627 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](v627, "RawCameraException");
    __cxa_throw(v627, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  objc_msgSend_dictionary(MEMORY[0x1E0C99E08], v45, v46, v47, v48);
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  v690[0] = v21;
  v690[1] = 3221225472;
  v690[2] = sub_1D52C9F8C;
  v690[3] = &unk_1E9974420;
  v50 = v49;
  v691 = v50;
  v633 = v50;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(v644, v51, (uint64_t)v690, v52, v53);
  objc_msgSend_setObject_forKeyedSubscript_(v646, v54, (uint64_t)v50, *MEMORY[0x1E0CBCF78], v55);
  objc_msgSend_valueForKeyPath_(v649, v56, (uint64_t)CFSTR("moov.uuid-85C0B687-820F-11E0-8111-F4CE462B6A48.CMT4"), v57, v58);
  v640 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v640)
  {
    v628 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](v628, "RawCameraException");
    __cxa_throw(v628, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  objc_msgSend_dictionary(MEMORY[0x1E0C99E08], v59, v60, v61, v62);
  v63 = (void *)objc_claimAutoreleasedReturnValue();
  v688[0] = v21;
  v688[1] = 3221225472;
  v688[2] = sub_1D52CA09C;
  v688[3] = &unk_1E9974420;
  v64 = v63;
  v689 = v64;
  v632 = v64;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(v640, v65, (uint64_t)v688, v66, v67);
  objc_msgSend_setObject_forKeyedSubscript_(v646, v68, (uint64_t)v64, *MEMORY[0x1E0CBCD68], v69);
  objc_msgSend_stringWithFormat_(MEMORY[0x1E0CB3940], v70, (uint64_t)CFSTR("%@.val"), v71, v72, *MEMORY[0x1E0CBD0B0]);
  v73 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_valueForKeyPath_(v645, v74, (uint64_t)v73, v75, v76);
  v77 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  v82 = (char *)objc_msgSend_UTF8String(v77, v78, v79, v80, v81);

  objc_msgSend_stringWithFormat_(MEMORY[0x1E0CB3940], v83, (uint64_t)CFSTR("%@.val"), v84, v85, *MEMORY[0x1E0CBD0B8]);
  v86 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_valueForKeyPath_(v645, v87, (uint64_t)v86, v88, v89);
  v90 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  v95 = (char *)objc_msgSend_UTF8String(v90, v91, v92, v93, v94);

  if (v82)
    sub_1D528530C((std::string *)(v659 + 520), v82);
  if (v95)
    sub_1D528530C((std::string *)(v659 + 544), v95);
  objc_msgSend_valueForKeyPath_(v644, v96, (uint64_t)CFSTR("ModelID.val"), v97, v98);
  v99 = (void *)objc_claimAutoreleasedReturnValue();
  *(_DWORD *)(v659 + 512) = objc_msgSend_unsignedLongValue(v99, v100, v101, v102, v103);

  objc_msgSend_objectForKeyedSubscript_(v644, v104, (uint64_t)CFSTR("SensorInfo"), v105, v106);
  v107 = (void *)objc_claimAutoreleasedReturnValue();
  v647 = v107;
  if (!v107)
  {
    v629 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](v629, "RawCameraException");
    __cxa_throw(v629, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  objc_msgSend_valueForKeyPath_(v107, v108, (uint64_t)CFSTR("parsedVal.SensorWidth"), v109, v110);
  v111 = (void *)objc_claimAutoreleasedReturnValue();
  *(_DWORD *)(v659 + 576) = objc_msgSend_unsignedIntValue(v111, v112, v113, v114, v115);

  objc_msgSend_valueForKeyPath_(v647, v116, (uint64_t)CFSTR("parsedVal.SensorHeight"), v117, v118);
  v119 = (void *)objc_claimAutoreleasedReturnValue();
  *(_DWORD *)(v659 + 580) = objc_msgSend_unsignedIntValue(v119, v120, v121, v122, v123);

  objc_msgSend_valueForKeyPath_(v647, v124, (uint64_t)CFSTR("parsedVal.SensorLeftBorder"), v125, v126);
  v127 = (void *)objc_claimAutoreleasedReturnValue();
  *(_DWORD *)(v659 + 584) = objc_msgSend_unsignedIntValue(v127, v128, v129, v130, v131);

  objc_msgSend_valueForKeyPath_(v647, v132, (uint64_t)CFSTR("parsedVal.SensorTopBorder"), v133, v134);
  v135 = (void *)objc_claimAutoreleasedReturnValue();
  *(_DWORD *)(v659 + 588) = objc_msgSend_unsignedIntValue(v135, v136, v137, v138, v139);

  objc_msgSend_valueForKeyPath_(v647, v140, (uint64_t)CFSTR("parsedVal.SensorRightBorder"), v141, v142);
  v143 = (void *)objc_claimAutoreleasedReturnValue();
  *(_DWORD *)(v659 + 592) = objc_msgSend_unsignedIntValue(v143, v144, v145, v146, v147);

  objc_msgSend_valueForKeyPath_(v647, v148, (uint64_t)CFSTR("parsedVal.SensorBottomBorder"), v149, v150);
  v151 = (void *)objc_claimAutoreleasedReturnValue();
  *(_DWORD *)(v659 + 596) = objc_msgSend_unsignedIntValue(v151, v152, v153, v154, v155);

  objc_msgSend_objectForKeyedSubscript_(v648, v156, *MEMORY[0x1E0CBCC60], v157, v158);
  v630 = (void *)objc_claimAutoreleasedReturnValue();
  v163 = v659;
  v167 = objc_msgSend_intValue(v630, v159, v160, v161, v162) - 1;
  if (v167 < 7
    && (objc_msgSend_objectForKeyedSubscript_(v648, v164, **((_QWORD **)&unk_1E9974760 + (int)v167), v165, v166),
        (v168 = (void *)objc_claimAutoreleasedReturnValue()) != 0))
  {
    v631 = v168;
    LODWORD(v675[0]) = objc_msgSend_unsignedIntValue(v168, v164, v169, v165, v166);
    sub_1D52850A0(&__p, "IFD0:EXIF");
    __src = &__p;
    v170 = (char *)sub_1D52BA2C8((uint64_t **)(v659 + 192), &__p, (uint64_t)&unk_1D544A5C4, (_OWORD **)&__src);
    sub_1D5282A44(v170 + 56, (char *)v675, (uint64_t)v675 + 4, 1uLL);
    if (SHIBYTE(v687) < 0)
      operator delete(__p);
  }
  else
  {
    v631 = 0;
  }
  objc_msgSend_objectForKeyedSubscript_(v648, v164, *MEMORY[0x1E0CBCB78], v165, v166);
  v636 = (void *)objc_claimAutoreleasedReturnValue();
  if (v636)
  {
    objc_msgSend_doubleValue(v636, v171, v172, v173, v174);
    v176 = v175;
    sub_1D52850A0(&__p, "IFD0:EXIF");
    __src = &__p;
    *((_QWORD *)sub_1D52D8024((uint64_t **)(v659 + 288), &__p, (uint64_t)&unk_1D544A5C4, (_OWORD **)&__src) + 7) = v176;
    if (SHIBYTE(v687) < 0)
      operator delete(__p);
  }
  objc_msgSend_objectForKeyedSubscript_(v648, v171, *MEMORY[0x1E0CBCC70], v173, v174);
  v637 = (void *)objc_claimAutoreleasedReturnValue();
  if (v637)
  {
    objc_msgSend_doubleValue(v637, v177, v178, v179, v180);
    v182 = v181;
    sub_1D52850A0(&__p, "IFD0:EXIF");
    __src = &__p;
    *((_QWORD *)sub_1D52D8024((uint64_t **)(v659 + 312), &__p, (uint64_t)&unk_1D544A5C4, (_OWORD **)&__src) + 7) = v182;
    if (SHIBYTE(v687) < 0)
      operator delete(__p);
  }
  objc_msgSend_objectForKeyedSubscript_(v648, v177, *MEMORY[0x1E0CBCB80], v179, v180);
  v638 = (void *)objc_claimAutoreleasedReturnValue();
  if (v638)
  {
    objc_msgSend_doubleValue(v638, v183, v184, v185, v186);
    v188 = v187;
    sub_1D52850A0(&__p, "IFD0:EXIF");
    __src = &__p;
    *((_QWORD *)sub_1D52D8024((uint64_t **)(v659 + 336), &__p, (uint64_t)&unk_1D544A5C4, (_OWORD **)&__src) + 7) = v188;
    if (SHIBYTE(v687) < 0)
      operator delete(__p);
  }
  objc_msgSend_objectForKeyedSubscript_(v648, v183, *MEMORY[0x1E0CBCBA0], v185, v186);
  v639 = (void *)objc_claimAutoreleasedReturnValue();
  if (v639)
  {
    objc_msgSend_doubleValue(v639, v189, v190, v191, v192);
    v194 = v193;
    sub_1D52850A0(&__p, "IFD0:EXIF");
    __src = &__p;
    *((_QWORD *)sub_1D52D8024((uint64_t **)(v659 + 384), &__p, (uint64_t)&unk_1D544A5C4, (_OWORD **)&__src) + 7) = v194;
    if (SHIBYTE(v687) < 0)
      operator delete(__p);
  }
  objc_msgSend_valueForKeyPath_(v649, v189, (uint64_t)CFSTR("moov.uuid-85C0B687-820F-11E0-8111-F4CE462B6A48.THMB"), v191, v192);
  v642 = (void *)objc_claimAutoreleasedReturnValue();
  if (v642)
  {
    objc_msgSend_objectForKeyedSubscript_(v642, v195, (uint64_t)CFSTR("thumbnailOffset"), v196, v197);
    v198 = (void *)objc_claimAutoreleasedReturnValue();
    v203 = v198;
    if (v198)
    {
      *(_DWORD *)(v659 + 664) = objc_msgSend_unsignedIntValue(v198, v199, v200, v201, v202);
      *(_BYTE *)(v659 + 668) = 1;
    }

    objc_msgSend_objectForKeyedSubscript_(v642, v204, (uint64_t)CFSTR("thumbnailLength"), v205, v206);
    v207 = (void *)objc_claimAutoreleasedReturnValue();
    v212 = v207;
    if (v207)
    {
      *(_DWORD *)(v659 + 672) = objc_msgSend_unsignedIntValue(v207, v208, v209, v210, v211);
      *(_BYTE *)(v659 + 676) = 1;
    }

    objc_msgSend_objectForKeyedSubscript_(v642, v213, (uint64_t)CFSTR("thumbnailWidth"), v214, v215);
    v216 = (void *)objc_claimAutoreleasedReturnValue();
    v221 = v216;
    if (v216)
    {
      *(_DWORD *)(v659 + 680) = objc_msgSend_unsignedIntValue(v216, v217, v218, v219, v220);
      *(_BYTE *)(v659 + 684) = 1;
    }

    objc_msgSend_objectForKeyedSubscript_(v642, v222, (uint64_t)CFSTR("thumbnailHeight"), v223, v224);
    v225 = (void *)objc_claimAutoreleasedReturnValue();
    v230 = v225;
    if (v225)
    {
      *(_DWORD *)(v659 + 688) = objc_msgSend_unsignedIntValue(v225, v226, v227, v228, v229);
      *(_BYTE *)(v659 + 692) = 1;
    }

    v163 = v659;
  }
  objc_msgSend_valueForKeyPath_(v649, v195, (uint64_t)CFSTR("uuid-EAF42B5E-1C98-4B88-B9FB-B7DC406E4D16.PRVW"), v196, v197);
  v643 = (void *)objc_claimAutoreleasedReturnValue();
  if (v643)
  {
    objc_msgSend_objectForKeyedSubscript_(v643, v231, (uint64_t)CFSTR("previewOffset"), v233, v234);
    v235 = (void *)objc_claimAutoreleasedReturnValue();
    v240 = v235;
    if (v235)
    {
      *(_DWORD *)(v163 + 632) = objc_msgSend_unsignedIntValue(v235, v236, v237, v238, v239);
      *(_BYTE *)(v163 + 636) = 1;
    }

    objc_msgSend_objectForKeyedSubscript_(v643, v241, (uint64_t)CFSTR("previewLength"), v242, v243);
    v244 = (void *)objc_claimAutoreleasedReturnValue();
    v249 = v244;
    if (v244)
    {
      *(_DWORD *)(v659 + 640) = objc_msgSend_unsignedIntValue(v244, v245, v246, v247, v248);
      *(_BYTE *)(v659 + 644) = 1;
    }

    objc_msgSend_objectForKeyedSubscript_(v643, v250, (uint64_t)CFSTR("previewWidth"), v251, v252);
    v253 = (void *)objc_claimAutoreleasedReturnValue();
    v258 = v253;
    if (v253)
    {
      *(_DWORD *)(v659 + 648) = objc_msgSend_unsignedIntValue(v253, v254, v255, v256, v257);
      *(_BYTE *)(v659 + 652) = 1;
    }

    objc_msgSend_objectForKeyedSubscript_(v643, v259, (uint64_t)CFSTR("previewHeight"), v260, v261);
    v262 = (void *)objc_claimAutoreleasedReturnValue();
    v267 = v262;
    if (v262)
    {
      *(_DWORD *)(v659 + 656) = objc_msgSend_unsignedIntValue(v262, v263, v264, v265, v266);
      *(_BYTE *)(v659 + 660) = 1;
    }

  }
  objc_msgSend_array(MEMORY[0x1E0C99DE8], v231, v232, v233, v234);
  v650 = (void *)objc_claimAutoreleasedReturnValue();
  v683 = 0u;
  v684 = 0u;
  v681 = 0u;
  v682 = 0u;
  objc_msgSend_valueForKeyPath_(v649, v268, (uint64_t)CFSTR("moov.trak"), v269, v270);
  obj = (id)objc_claimAutoreleasedReturnValue();
  v656 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v271, (uint64_t)&v681, (uint64_t)v708, 16);
  if (v656)
  {
    v654 = *(_QWORD *)v682;
    v651 = (uint64_t **)(v659 + 264);
    v652 = (uint64_t **)(v659 + 120);
    do
    {
      v669 = 0;
      do
      {
        if (*(_QWORD *)v682 != v654)
          objc_enumerationMutation(obj);
        v275 = *(void **)(*((_QWORD *)&v681 + 1) + 8 * v669);
        objc_msgSend_valueForKeyPath_(v275, v272, (uint64_t)CFSTR("mdia.hdlr.ComponentSubType"), v273, v274);
        v276 = (void *)objc_claimAutoreleasedReturnValue();
        v281 = objc_msgSend_unsignedIntValue(v276, v277, v278, v279, v280);

        if (v281 == 1835365473)
        {
          objc_msgSend_valueForKeyPath_(v275, v272, (uint64_t)CFSTR("mdia.minf.stbl.co64.Metadata"), v273, v274);
          v657 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_objectForKeyedSubscript_(v657, v332, (uint64_t)CFSTR("ExifInfo7"), v333, v334);
          v663 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_objectForKeyedSubscript_(v657, v335, (uint64_t)CFSTR("ExifInfo8"), v336, v337);
          v667 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_objectForKeyedSubscript_(v657, v338, (uint64_t)CFSTR("ExifInfo9"), v339, v340);
          v665 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_valueForKeyPath_(v667, v341, (uint64_t)CFSTR("37500.ColorData.parsedVal"), v342, v343);
          v660 = (void *)objc_claimAutoreleasedReturnValue();
          if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v659 + 632))(v659))
          {
            objc_msgSend_objectForKeyedSubscript_(v660, v344, (uint64_t)CFSTR("WB_RGGBLevelsAsShot"), v345, v346);
            v347 = (void *)objc_claimAutoreleasedReturnValue();
            v352 = v347;
            if (v347 && objc_msgSend_count(v347, v348, v349, v350, v351) == 4)
            {
              objc_msgSend_objectAtIndexedSubscript_(v352, v348, 0, v350, v351);
              v353 = (void *)objc_claimAutoreleasedReturnValue();
              LODWORD(__src) = objc_msgSend_unsignedIntValue(v353, v354, v355, v356, v357);
              objc_msgSend_objectAtIndexedSubscript_(v352, v358, 1, v359, v360);
              v361 = (void *)objc_claimAutoreleasedReturnValue();
              HIDWORD(__src) = objc_msgSend_unsignedIntValue(v361, v362, v363, v364, v365);
              objc_msgSend_objectAtIndexedSubscript_(v352, v366, 2, v367, v368);
              v369 = (void *)objc_claimAutoreleasedReturnValue();
              LODWORD(v706) = objc_msgSend_unsignedIntValue(v369, v370, v371, v372, v373);
              objc_msgSend_objectAtIndexedSubscript_(v352, v374, 3, v375, v376);
              v377 = (void *)objc_claimAutoreleasedReturnValue();
              HIDWORD(v706) = objc_msgSend_unsignedIntValue(v377, v378, v379, v380, v381);
              sub_1D52850A0(&__p, "AsShotWhiteBalance");
              v675[0] = &__p;
              v382 = (char *)sub_1D52BA2C8(v652, &__p, (uint64_t)&unk_1D544A5C4, (_OWORD **)v675);
              sub_1D5282A44(v382 + 56, (char *)&__src, (uint64_t)&v707, 4uLL);
              if (SHIBYTE(v687) < 0)
                operator delete(__p);

            }
            objc_msgSend_objectForKeyedSubscript_(v660, v348, (uint64_t)CFSTR("PerChannelBlackLevel"), v350, v351);
            v383 = (void *)objc_claimAutoreleasedReturnValue();
            v388 = v383;
            if (v383 && objc_msgSend_count(v383, v384, v385, v386, v387) == 4)
            {
              v392 = 0;
              __p = 0;
              v686 = 0;
              v687 = 0;
              do
              {
                objc_msgSend_objectAtIndexedSubscript_(v388, v389, v392, v390, v391);
                v393 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend_doubleValue(v393, v394, v395, v396, v397);
                v399 = v398;
                v400 = &v686->__vftable;
                if ((unint64_t)v686 >= v687)
                {
                  v402 = __p;
                  v403 = ((char *)v686 - (_BYTE *)__p) >> 3;
                  v404 = v403 + 1;
                  if ((unint64_t)(v403 + 1) >> 61)
                    sub_1D5282B8C();
                  v405 = v687 - (_QWORD)__p;
                  if ((uint64_t)(v687 - (_QWORD)__p) >> 2 > v404)
                    v404 = v405 >> 2;
                  if ((unint64_t)v405 >= 0x7FFFFFFFFFFFFFF8)
                    v406 = 0x1FFFFFFFFFFFFFFFLL;
                  else
                    v406 = v404;
                  if (v406)
                  {
                    v407 = (char *)sub_1D5282D28((uint64_t)&v687, v406);
                    v402 = __p;
                    v400 = &v686->__vftable;
                  }
                  else
                  {
                    v407 = 0;
                  }
                  v408 = &v407[8 * v403];
                  *(_QWORD *)v408 = v399;
                  v401 = (std::__shared_weak_count *)(v408 + 8);
                  while (v400 != v402)
                  {
                    v409 = *--v400;
                    *((_QWORD *)v408 - 1) = v409;
                    v408 -= 8;
                  }
                  __p = v408;
                  v686 = v401;
                  v687 = (unint64_t)&v407[8 * v406];
                  if (v402)
                    operator delete(v402);
                }
                else
                {
                  v686->__vftable = v398;
                  v401 = (std::__shared_weak_count *)(v400 + 1);
                }
                v686 = v401;

                ++v392;
              }
              while (v392 != 4);
              sub_1D52850A0(&__src, "IFD0:EXIF:MAKERNOTE:BLACKLEVELS");
              v675[0] = &__src;
              v410 = (char *)sub_1D52BA2C8(v651, &__src, (uint64_t)&unk_1D544A5C4, (_OWORD **)v675) + 56;
              if (v410 != (char *)&__p)
                sub_1D528FA34(v410, (char *)__p, (uint64_t)v686, ((char *)v686 - (_BYTE *)__p) >> 3);
              if (SHIBYTE(v707) < 0)
                operator delete(__src);
              if (__p)
              {
                v686 = (std::__shared_weak_count *)__p;
                operator delete(__p);
              }
            }

          }
          else
          {
            objc_msgSend_valueForKeyPath_(v667, v344, (uint64_t)CFSTR("37500.ColorData.val"), v345, v346);
            v411 = (void *)objc_claimAutoreleasedReturnValue();
            v352 = v411;
            if (v411)
            {
              __p = 0;
              v686 = 0;
              v687 = 0;
              v706 = 0;
              __src = 0;
              v707 = 0;
              v677 = 0u;
              v678 = 0u;
              v679 = 0u;
              v680 = 0u;
              v352 = v411;
              v417 = objc_msgSend_countByEnumeratingWithState_objects_count_(v352, v412, (uint64_t)&v677, (uint64_t)v704, 16);
              if (v417)
              {
                v418 = *(_QWORD *)v678;
                do
                {
                  for (i = 0; i != v417; ++i)
                  {
                    if (*(_QWORD *)v678 != v418)
                      objc_enumerationMutation(v352);
                    v420 = *(void **)(*((_QWORD *)&v677 + 1) + 8 * i);
                    v421 = objc_msgSend_unsignedIntValue(v420, (const char *)v413, v414, v415, v416);
                    v426 = v421;
                    v427 = &v686->__vftable;
                    if ((unint64_t)v686 >= v687)
                    {
                      v429 = __p;
                      v430 = ((char *)v686 - (_BYTE *)__p) >> 2;
                      v431 = v430 + 1;
                      if ((unint64_t)(v430 + 1) >> 62)
                        sub_1D5282B8C();
                      v432 = v687 - (_QWORD)__p;
                      if ((uint64_t)(v687 - (_QWORD)__p) >> 1 > v431)
                        v431 = v432 >> 1;
                      if ((unint64_t)v432 >= 0x7FFFFFFFFFFFFFFCLL)
                        v422 = 0x3FFFFFFFFFFFFFFFLL;
                      else
                        v422 = v431;
                      if (v422)
                      {
                        v433 = (char *)sub_1D5282BA0((uint64_t)&v687, v422);
                        v429 = __p;
                        v427 = &v686->__vftable;
                      }
                      else
                      {
                        v433 = 0;
                      }
                      v434 = &v433[4 * v430];
                      *(_DWORD *)v434 = v426;
                      v428 = (std::__shared_weak_count *)(v434 + 4);
                      while (v427 != v429)
                      {
                        v435 = *((_DWORD *)v427 - 1);
                        v427 = (_QWORD *)((char *)v427 - 4);
                        *((_DWORD *)v434 - 1) = v435;
                        v434 -= 4;
                      }
                      __p = v434;
                      v686 = v428;
                      v687 = (unint64_t)&v433[4 * v422];
                      if (v429)
                        operator delete(v429);
                    }
                    else
                    {
                      LODWORD(v686->__vftable) = v421;
                      v428 = (std::__shared_weak_count *)((char *)v427 + 4);
                    }
                    v686 = v428;
                    objc_msgSend_doubleValue(v420, (const char *)v422, v423, v424, v425);
                    v437 = v436;
                    v438 = v706;
                    if ((unint64_t)v706 >= v707)
                    {
                      v440 = __src;
                      v441 = ((char *)v706 - (_BYTE *)__src) >> 3;
                      v442 = v441 + 1;
                      if ((unint64_t)(v441 + 1) >> 61)
                        sub_1D5282B8C();
                      v443 = v707 - (_QWORD)__src;
                      if ((uint64_t)(v707 - (_QWORD)__src) >> 2 > v442)
                        v442 = v443 >> 2;
                      if ((unint64_t)v443 >= 0x7FFFFFFFFFFFFFF8)
                        v413 = 0x1FFFFFFFFFFFFFFFLL;
                      else
                        v413 = v442;
                      if (v413)
                      {
                        v444 = (char *)sub_1D5282D28((uint64_t)&v707, v413);
                        v438 = v706;
                        v440 = __src;
                      }
                      else
                      {
                        v444 = 0;
                      }
                      v445 = &v444[8 * v441];
                      *(_QWORD *)v445 = v437;
                      v439 = v445 + 8;
                      while (v438 != v440)
                      {
                        v446 = *--v438;
                        *((_QWORD *)v445 - 1) = v446;
                        v445 -= 8;
                      }
                      __src = v445;
                      v706 = v439;
                      v707 = (unint64_t)&v444[8 * v413];
                      if (v440)
                        operator delete(v440);
                    }
                    else
                    {
                      *v706 = v436;
                      v439 = v438 + 1;
                    }
                    v706 = v439;
                  }
                  v417 = objc_msgSend_countByEnumeratingWithState_objects_count_(v352, (const char *)v413, (uint64_t)&v677, (uint64_t)v704, 16);
                }
                while (v417);
              }

              sub_1D52850A0(v675, "IFD0:EXIF:MAKERNOTE:ColorBalance1");
              v698 = v675;
              v447 = (char *)sub_1D52BA2C8(v652, v675, (uint64_t)&unk_1D544A5C4, (_OWORD **)&v698) + 56;
              if (v447 != (char *)&__p)
                sub_1D5282A44(v447, (char *)__p, (uint64_t)v686, ((char *)v686 - (_BYTE *)__p) >> 2);
              if (v676 < 0)
                operator delete(v675[0]);
              sub_1D52850A0(v675, "IFD0:EXIF:MAKERNOTE:BLACKLEVELS");
              v698 = v675;
              v448 = (char *)sub_1D52BA2C8(v651, v675, (uint64_t)&unk_1D544A5C4, (_OWORD **)&v698) + 56;
              if (v448 != (char *)&__src)
                sub_1D528FA34(v448, (char *)__src, (uint64_t)v706, ((char *)v706 - (_BYTE *)__src) >> 3);
              if (v676 < 0)
                operator delete(v675[0]);
              if (__src)
              {
                v706 = __src;
                operator delete(__src);
              }
              if (__p)
              {
                v686 = (std::__shared_weak_count *)__p;
                operator delete(__p);
              }
            }
          }

LABEL_165:
          goto LABEL_166;
        }
        if (v281 != 1986618469)
          goto LABEL_167;
        objc_msgSend_valueForKeyPath_(v275, v272, (uint64_t)CFSTR("mdia.minf.stbl"), v273, v274);
        v657 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_valueForKeyPath_(v657, v282, (uint64_t)CFSTR("stsz"), v283, v284);
        v663 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_valueForKeyPath_(v657, v285, (uint64_t)CFSTR("co64"), v286, v287);
        v667 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_valueForKeyPath_(v657, v288, (uint64_t)CFSTR("stsd.Entries.CRAW"), v289, v290);
        v291 = (void *)objc_claimAutoreleasedReturnValue();
        v665 = v291;
        if (v291)
        {
          objc_msgSend_valueForKeyPath_(v291, v292, (uint64_t)CFSTR("Extensions.JPEG"), v293, v294);
          v295 = (void *)objc_claimAutoreleasedReturnValue();
          v296 = v295 == 0;

          if (v296)
          {
            objc_msgSend_valueForKeyPath_(v665, v297, (uint64_t)CFSTR("Extensions.CMP1"), v298, v299);
            v449 = (void *)objc_claimAutoreleasedReturnValue();
            v450 = v449 == 0;

            if (!v450)
            {
              objc_msgSend_objectForKeyedSubscript_(v665, v451, (uint64_t)CFSTR("Width"), v452, v453);
              v454 = (void *)objc_claimAutoreleasedReturnValue();
              v459 = objc_msgSend_unsignedIntValue(v454, v455, v456, v457, v458);

              objc_msgSend_objectForKeyedSubscript_(v665, v460, (uint64_t)CFSTR("Height"), v461, v462);
              v463 = (void *)objc_claimAutoreleasedReturnValue();
              v468 = objc_msgSend_unsignedIntValue(v463, v464, v465, v466, v467);

              objc_msgSend_valueForKeyPath_(v665, v469, (uint64_t)CFSTR("Extensions.CMP1"), v470, v471);
              v661 = (void *)objc_claimAutoreleasedReturnValue();
              v702[0] = CFSTR("Width");
              objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v472, v459, v473, v474);
              v475 = (void *)objc_claimAutoreleasedReturnValue();
              v703[0] = v475;
              v702[1] = CFSTR("Height");
              objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v476, v468, v477, v478);
              v479 = (void *)objc_claimAutoreleasedReturnValue();
              v703[1] = v479;
              v703[2] = v667;
              v702[2] = CFSTR("co64");
              v702[3] = CFSTR("CMP1");
              v703[3] = v661;
              objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v480, (uint64_t)v703, (uint64_t)v702, 4);
              v481 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend_addObject_(v650, v482, (uint64_t)v481, v483, v484);

            }
            goto LABEL_166;
          }
          objc_msgSend_objectForKeyedSubscript_(v667, v297, (uint64_t)CFSTR("offset"), v298, v299);
          v300 = (void *)objc_claimAutoreleasedReturnValue();
          v305 = v300;
          if (v300)
          {
            *(_DWORD *)(v659 + 600) = objc_msgSend_unsignedIntValue(v300, v301, v302, v303, v304);
            *(_BYTE *)(v659 + 604) = 1;
          }

          objc_msgSend_objectForKeyedSubscript_(v663, v306, (uint64_t)CFSTR("SampleSize"), v307, v308);
          v309 = (void *)objc_claimAutoreleasedReturnValue();
          v314 = v309;
          if (v309)
          {
            *(_DWORD *)(v659 + 608) = objc_msgSend_unsignedIntValue(v309, v310, v311, v312, v313);
            *(_BYTE *)(v659 + 612) = 1;
          }

          objc_msgSend_objectForKeyedSubscript_(v665, v315, (uint64_t)CFSTR("Width"), v316, v317);
          v318 = (void *)objc_claimAutoreleasedReturnValue();
          v323 = v318;
          if (v318)
          {
            *(_DWORD *)(v659 + 616) = objc_msgSend_unsignedIntValue(v318, v319, v320, v321, v322);
            *(_BYTE *)(v659 + 620) = 1;
          }

          objc_msgSend_objectForKeyedSubscript_(v665, v324, (uint64_t)CFSTR("Height"), v325, v326);
          v327 = (void *)objc_claimAutoreleasedReturnValue();
          v660 = v327;
          if (v327)
          {
            *(_DWORD *)(v659 + 624) = objc_msgSend_unsignedIntValue(v327, v328, v329, v330, v331);
            *(_BYTE *)(v659 + 628) = 1;
          }
          goto LABEL_165;
        }
LABEL_166:

LABEL_167:
        ++v669;
      }
      while (v669 != v656);
      v485 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v272, (uint64_t)&v681, (uint64_t)v708, 16);
      v656 = v485;
    }
    while (v485);
  }

  objc_msgSend_sortUsingComparator_(v650, v486, (uint64_t)&unk_1E9974460, v487, v488);
  v489 = v659;
  if (objc_msgSend_count(v650, v490, v491, v492, v493))
  {
    objc_msgSend_firstObject(v650, v494, v495, v496, v497);
    v498 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_objectForKeyedSubscript_(v498, v499, (uint64_t)CFSTR("Width"), v500, v501);
    v502 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)(v659 + 708) = objc_msgSend_unsignedIntValue(v502, v503, v504, v505, v506);

    objc_msgSend_objectForKeyedSubscript_(v498, v507, (uint64_t)CFSTR("Height"), v508, v509);
    v510 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)(v659 + 712) = objc_msgSend_unsignedIntValue(v510, v511, v512, v513, v514);

    objc_msgSend_valueForKeyPath_(v498, v515, (uint64_t)CFSTR("CMP1.bayer_type"), v516, v517);
    v518 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)(v659 + 716) = objc_msgSend_unsignedIntValue(v518, v519, v520, v521, v522);

    objc_msgSend_valueForKeyPath_(v498, v523, (uint64_t)CFSTR("CMP1.tile_width"), v524, v525);
    v526 = objc_claimAutoreleasedReturnValue();
    v655 = (void *)v526;
    objc_msgSend_valueForKeyPath_(v498, v527, (uint64_t)CFSTR("CMP1.tile_height"), v528, v529);
    v530 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_valueForKeyPath_(v498, v531, (uint64_t)CFSTR("CMP1.dwt_level"), v532, v533);
    v534 = objc_claimAutoreleasedReturnValue();
    v658 = (void *)v534;
    objc_msgSend_valueForKeyPath_(v498, v535, (uint64_t)CFSTR("CMP1.tile_h_overlap"), v536, v537);
    v538 = objc_claimAutoreleasedReturnValue();
    v662 = (void *)v538;
    objc_msgSend_valueForKeyPath_(v498, v539, (uint64_t)CFSTR("CMP1.tile_v_overlap"), v540, v541);
    v542 = objc_claimAutoreleasedReturnValue();
    v664 = (void *)v542;
    objc_msgSend_valueForKeyPath_(v498, v543, (uint64_t)CFSTR("CMP1.plane_num"), v544, v545);
    v546 = objc_claimAutoreleasedReturnValue();
    v666 = (void *)v546;
    objc_msgSend_valueForKeyPath_(v498, v547, (uint64_t)CFSTR("co64.tile_headers"), v548, v549);
    v668 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_valueForKeyPath_(v498, v550, (uint64_t)CFSTR("CMP1.ct_mode"), v551, v552);
    v670 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_valueForKeyPath_(v498, v553, (uint64_t)CFSTR("CMP1.bit_depth"), v554, v555);
    v559 = (void *)objc_claimAutoreleasedReturnValue();
    if (*(_BYTE *)(v659 + 732))
      objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v556, *(unsigned int *)(v659 + 728), v557, v558);
    else
      objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v556, 0, v557, v558);
    v560 = (void *)objc_claimAutoreleasedReturnValue();
    v700[0] = CFSTR("tile_width");
    v700[1] = CFSTR("tile_height");
    v701[0] = v526;
    v701[1] = v530;
    v700[2] = CFSTR("dwt_level");
    v700[3] = CFSTR("tile_h_overlap");
    v701[2] = v534;
    v701[3] = v538;
    v700[4] = CFSTR("tile_v_overlap");
    v700[5] = CFSTR("plane_num");
    v701[4] = v542;
    v701[5] = v546;
    v700[6] = CFSTR("tile_headers");
    v700[7] = CFSTR("ct_mode");
    v701[6] = v668;
    v701[7] = v670;
    v700[8] = CFSTR("bit_depth");
    v700[9] = CFSTR("version");
    v701[8] = v559;
    v701[9] = v560;
    objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v561, (uint64_t)v701, (uint64_t)v700, 10);
    v562 = objc_claimAutoreleasedReturnValue();
    v563 = *(void **)(v659 + 720);
    *(_QWORD *)(v659 + 720) = v562;

    *(_DWORD *)(v659 + 572) = 0;
    objc_msgSend_valueForKeyPath_(v498, v564, (uint64_t)CFSTR("CMP1.sub_header_part_length"), v565, v566);
    v567 = (void *)objc_claimAutoreleasedReturnValue();
    v572 = objc_msgSend_unsignedIntValue(v567, v568, v569, v570, v571);

    v673 = 0u;
    v674 = 0u;
    v671 = 0u;
    v672 = 0u;
    objc_msgSend_valueForKeyPath_(v498, v573, (uint64_t)CFSTR("co64.tile_headers"), v574, v575);
    v576 = (void *)objc_claimAutoreleasedReturnValue();
    v581 = objc_msgSend_countByEnumeratingWithState_objects_count_(v576, v577, (uint64_t)&v671, (uint64_t)v699, 16);
    if (v581)
    {
      v582 = *(_QWORD *)v672;
      do
      {
        for (j = 0; j != v581; ++j)
        {
          if (*(_QWORD *)v672 != v582)
            objc_enumerationMutation(v576);
          objc_msgSend_objectForKeyedSubscript_(*(void **)(*((_QWORD *)&v671 + 1) + 8 * j), v578, (uint64_t)CFSTR("tile_data_length"), v579, v580);
          v584 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)(v659 + 572) += objc_msgSend_unsignedIntValue(v584, v585, v586, v587, v588);

        }
        v581 = objc_msgSend_countByEnumeratingWithState_objects_count_(v576, v578, (uint64_t)&v671, (uint64_t)v699, 16);
      }
      while (v581);
    }

    objc_msgSend_valueForKeyPath_(v498, v589, (uint64_t)CFSTR("co64.offset"), v590, v591);
    v592 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)(v659 + 568) = objc_msgSend_unsignedIntValue(v592, v593, v594, v595, v596) + v572;

    v489 = v659;
  }
  if ((unint64_t)objc_msgSend_count(v650, v494, v495, v496, v497) >= 2)
  {
    objc_msgSend_objectAtIndexedSubscript_(v650, v597, 1, v598, v599);
    v600 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_objectForKeyedSubscript_(v600, v601, (uint64_t)CFSTR("Width"), v602, v603);
    v604 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)(v489 + 696) = objc_msgSend_unsignedIntValue(v604, v605, v606, v607, v608);

    objc_msgSend_objectForKeyedSubscript_(v600, v609, (uint64_t)CFSTR("Height"), v610, v611);
    v612 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)(v659 + 700) = objc_msgSend_unsignedIntValue(v612, v613, v614, v615, v616);

    objc_msgSend_valueForKeyPath_(v600, v617, (uint64_t)CFSTR("CMP1.bayer_type"), v618, v619);
    v620 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)(v659 + 704) = objc_msgSend_unsignedIntValue(v620, v621, v622, v623, v624);

    v489 = v659;
  }
  objc_storeStrong((id *)(v489 + 504), v649);

  objc_autoreleasePoolPop(context);
}

void sub_1D52C8CB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,void *a21,uint64_t a22,uint64_t a23,void *a24,void *a25,void *a26,void *a27,void *a28,void *a29)
{

  _Unwind_Resume(a1);
}

id sub_1D52C9450(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  void *v8;
  unsigned int v9;
  signed int v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __CFString *v36;
  const char *v37;
  uint64_t v38;
  void *v39;
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  const char *v45;
  uint64_t v46;
  uint64_t v47;
  const char *v48;
  uint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  void *v53;
  const char *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t isEqualToString;
  const char *v59;
  uint64_t v60;
  uint64_t v61;
  std::__shared_weak_count *v62;
  unint64_t *v63;
  unint64_t v64;
  void *exception;
  void *v67;
  void *v68;
  unsigned int v69;
  __int128 v70;
  __int128 v71;
  unsigned int v72;
  _QWORD v73[2];
  unsigned int v74;
  unsigned __int8 v75;
  unsigned __int8 v76;
  unsigned __int8 v77;
  unsigned __int8 v78;
  unsigned __int8 v79;
  unsigned __int8 v80;
  unsigned __int8 v81;
  unsigned __int8 v82;
  unsigned __int8 v83;
  unsigned __int8 v84;
  unsigned __int8 v85;
  unsigned __int8 v86;
  uint64_t v87;

  v5 = a3;
  v87 = *MEMORY[0x1E0C80C00];
  objc_msgSend_dictionary(MEMORY[0x1E0C99E08], a2, a3, a4, a5);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    while (1)
    {
      if ((int)sub_1D52CAD30(*(_QWORD *)a2) < 1)
        return v8;
      v9 = sub_1D52847F8(*(_QWORD *)a2);
      v10 = sub_1D52847F8(*(_QWORD *)a2);
      v72 = bswap32(v10);
      if (v9 >= 8)
        break;
      v22 = *(_QWORD *)a2;
      LODWORD(v71) = 0;
      (*(void (**)(uint64_t, __int128 *, uint64_t))(*(_QWORD *)v22 + 40))(v22, &v71, 2);
LABEL_57:
      if (!--v5)
        return v8;
    }
    v11 = *(_QWORD *)a2;
    v74 = v9 - 8;
    v15 = sub_1D5284F48(v11, &v74, &v71);
    if (!(_QWORD)v71)
    {
      exception = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1D8271938](exception, "RawCameraException");
      __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
    }
    objc_msgSend_stringWithFormat_(MEMORY[0x1E0CB3940], v12, (uint64_t)CFSTR("%4.4s"), v13, v14, v15, &v72);
    v16 = objc_claimAutoreleasedReturnValue();
    v20 = (void *)v16;
    if (v10 <= 1751411825)
    {
      if (v10 <= 1129598275)
      {
        if (v10 <= 1129141296)
        {
          if (v10 == 1128485968)
          {
            sub_1D52CDC48(a1, (uint64_t *)&v71);
            v21 = objc_claimAutoreleasedReturnValue();
          }
          else
          {
            if (v10 != 1129140273)
              goto LABEL_45;
            sub_1D52CBF14(a1, (uint64_t *)&v71);
            v21 = objc_claimAutoreleasedReturnValue();
          }
        }
        else
        {
          switch(v10)
          {
            case 1129141297:
              sub_1D52CDE04(a1, (char *)&v71);
              v21 = objc_claimAutoreleasedReturnValue();
              goto LABEL_43;
            case 1129141298:
              sub_1D52CDE5C(a1, (char *)&v71);
              v21 = objc_claimAutoreleasedReturnValue();
              goto LABEL_43;
            case 1129141299:
              sub_1D52CDEB4(a1, (uint64_t *)&v71);
              v21 = objc_claimAutoreleasedReturnValue();
              goto LABEL_43;
            case 1129141300:
              sub_1D52CDF0C(a1, (char *)&v71);
              v21 = objc_claimAutoreleasedReturnValue();
              goto LABEL_43;
            default:
              if (v10 != 1129464151)
                goto LABEL_45;
              sub_1D52CB6E8(a1, (uint64_t *)&v71);
              v21 = objc_claimAutoreleasedReturnValue();
              break;
          }
        }
        goto LABEL_43;
      }
      if (v10 <= 1668232755)
      {
        switch(v10)
        {
          case 1129598276:
            sub_1D52CBD0C(v16, (uint64_t *)&v71);
            v21 = objc_claimAutoreleasedReturnValue();
            break;
          case 1347573335:
            sub_1D52CE1AC(v16, (uint64_t *)&v71);
            v21 = objc_claimAutoreleasedReturnValue();
            break;
          case 1414024514:
            sub_1D52CDF64(v16, (uint64_t *)&v71);
            v21 = objc_claimAutoreleasedReturnValue();
            break;
          default:
            goto LABEL_45;
        }
        goto LABEL_43;
      }
      if (v10 != 1668232756)
      {
        if (v10 != 1684631142)
        {
          if (v10 != 1718909296)
            goto LABEL_45;
          sub_1D52CAD98(v16, (uint64_t *)&v71);
          v21 = objc_claimAutoreleasedReturnValue();
          goto LABEL_43;
        }
        goto LABEL_42;
      }
      objc_msgSend_valueForKeyPath_(v8, v17, (uint64_t)CFSTR("stsd.Entries.CRAW.Extensions.CMP1"), v18, v19);
      v53 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_valueForKeyPath_(v8, v54, (uint64_t)CFSTR("stsd.Entries.CTMD"), v55, v56);
      v57 = (void *)objc_claimAutoreleasedReturnValue();
      if (v57)
        sub_1D52CE38C(a1, (uint64_t *)&v71, v57);
      else
        sub_1D52CF758(a1, (uint64_t *)&v71, v53);
      v36 = (__CFString *)objc_claimAutoreleasedReturnValue();

LABEL_44:
      if (v36)
      {
LABEL_46:
        objc_msgSend_objectForKeyedSubscript_(v8, v17, (uint64_t)v20, v18, v19);
        v39 = (void *)objc_claimAutoreleasedReturnValue();
        if (v39)
        {
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0)
          {
            v44 = (void *)objc_msgSend_mutableCopy(v39, v40, v41, v42, v43);
            objc_msgSend_addObject_(v44, v45, (uint64_t)v36, v46, v47);
          }
          else
          {
            v73[0] = v39;
            v73[1] = v36;
            objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v40, (uint64_t)v73, 2, v43);
            v44 = (void *)objc_claimAutoreleasedReturnValue();
          }
          objc_msgSend_setObject_forKeyedSubscript_(v8, v48, (uint64_t)v44, (uint64_t)v20, v49);

        }
        else
        {
          objc_msgSend_setObject_forKeyedSubscript_(v8, v37, (uint64_t)v36, (uint64_t)v20, v38);
        }

        v50 = (std::__shared_weak_count *)*((_QWORD *)&v71 + 1);
        if (*((_QWORD *)&v71 + 1))
        {
          v51 = (unint64_t *)(*((_QWORD *)&v71 + 1) + 8);
          do
            v52 = __ldaxr(v51);
          while (__stlxr(v52 - 1, v51));
          if (!v52)
          {
            ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
            std::__shared_weak_count::__release_weak(v50);
          }
        }
        goto LABEL_57;
      }
LABEL_45:
      v36 = &stru_1E99A7480;
      goto LABEL_46;
    }
    if (v10 <= 1937007211)
    {
      if (v10 > 1835626085)
      {
        if (v10 != 1835626086 && v10 != 1836019574)
        {
          if (v10 != 1836476516)
            goto LABEL_45;
          sub_1D52CCE68(v16, (uint64_t *)&v71);
          v21 = objc_claimAutoreleasedReturnValue();
          goto LABEL_43;
        }
      }
      else
      {
        if (v10 == 1751411826)
        {
          sub_1D52CB244(v16, (uint64_t *)&v71);
          v21 = objc_claimAutoreleasedReturnValue();
          goto LABEL_43;
        }
        if (v10 == 1835296868)
        {
          sub_1D52CCBA4(v16, (uint64_t *)&v71);
          v21 = objc_claimAutoreleasedReturnValue();
          goto LABEL_43;
        }
        if (v10 != 1835297121)
          goto LABEL_45;
      }
LABEL_42:
      sub_1D52C9450(a1, &v71, 0xFFFFFFFFLL);
      v21 = objc_claimAutoreleasedReturnValue();
LABEL_43:
      v36 = (__CFString *)v21;
      goto LABEL_44;
    }
    if (v10 <= 1953196131)
    {
      if (v10 != 1937007212)
      {
        if (v10 == 1937011556)
        {
          sub_1D52CB574(a1, (uint64_t *)&v71);
          v21 = objc_claimAutoreleasedReturnValue();
        }
        else
        {
          if (v10 != 1937011578)
            goto LABEL_45;
          sub_1D52CAF50(a1, (uint64_t *)&v71);
          v21 = objc_claimAutoreleasedReturnValue();
        }
        goto LABEL_43;
      }
      goto LABEL_42;
    }
    if (v10 == 1953196132)
    {
      sub_1D52CD59C(v16, (uint64_t *)&v71);
      v21 = objc_claimAutoreleasedReturnValue();
      goto LABEL_43;
    }
    if (v10 == 1953653099)
      goto LABEL_42;
    if (v10 != 1970628964)
      goto LABEL_45;
    if ((*(unsigned int (**)(_QWORD, unsigned int *, uint64_t))(*(_QWORD *)v71 + 32))(v71, &v74, 16) != 16)
    {
      v67 = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1D8271938](v67, "RawCameraException");
      __cxa_throw(v67, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
    }
    objc_msgSend_stringWithFormat_(MEMORY[0x1E0CB3940], (const char *)v81, (uint64_t)CFSTR("%02X%02X%02X%02X-%02X%02X-%02X%02X-%02X%02X-%02X%02X%02X%02X%02X%02X"), v83, v84, v74, BYTE1(v74), BYTE2(v74), HIBYTE(v74), v75, v76, v77, v78, v79, v80, v81, v82, v83, v84,
      v85,
      v86);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_stringByAppendingFormat_(v20, v24, (uint64_t)CFSTR("-%@"), v25, v26, v23);
    v27 = objc_claimAutoreleasedReturnValue();

    v69 = v9 - 24;
    v31 = sub_1D5284F48(v71, &v69, &v70);
    if (!(_QWORD)v70)
    {
      v68 = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1D8271938](v68, "RawCameraException");
      __cxa_throw(v68, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
    }
    if (objc_msgSend_isEqualToString_(v23, v28, qword_1EFF32368, v29, v30, v31))
    {
      sub_1D52C9450(a1, &v70, 0xFFFFFFFFLL);
      v35 = objc_claimAutoreleasedReturnValue();
    }
    else
    {
      isEqualToString = objc_msgSend_isEqualToString_(v23, v32, qword_1EFF32378, v33, v34);
      if ((_DWORD)isEqualToString)
      {
        sub_1D52CB170(isEqualToString, (uint64_t *)&v70);
        v35 = objc_claimAutoreleasedReturnValue();
      }
      else
      {
        if (!objc_msgSend_isEqualToString_(v23, v59, qword_1EFF32370, v60, v61))
        {
          v36 = 0;
LABEL_83:
          v62 = (std::__shared_weak_count *)*((_QWORD *)&v70 + 1);
          if (*((_QWORD *)&v70 + 1))
          {
            v63 = (unint64_t *)(*((_QWORD *)&v70 + 1) + 8);
            do
              v64 = __ldaxr(v63);
            while (__stlxr(v64 - 1, v63));
            if (!v64)
            {
              ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
              std::__shared_weak_count::__release_weak(v62);
            }
          }

          v20 = (void *)v27;
          goto LABEL_44;
        }
        sub_1D52CB208(a1, (uint64_t *)&v70);
        v35 = objc_claimAutoreleasedReturnValue();
      }
    }
    v36 = (__CFString *)v35;
    goto LABEL_83;
  }
  return v8;
}

void sub_1D52C9C64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  void *v28;
  void *v29;
  void *v30;
  void *v31;

  sub_1D5282EB4((uint64_t)&a28);
  _Unwind_Resume(a1);
}

void sub_1D52C9D6C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  void *v24;
  id v25;

  v25 = a2;
  v5 = a3;
  objc_msgSend_valueForKey_(v5, v6, (uint64_t)CFSTR("hide"), v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = objc_msgSend_BOOLValue(v9, v10, v11, v12, v13);

  if ((v14 & 1) == 0)
  {
    objc_msgSend_valueForKey_(v5, v15, (uint64_t)CFSTR("parsedVal"), v16, v17);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    if (v21)
    {
      objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v18, (uint64_t)v21, (uint64_t)v25, v20);
    }
    else
    {
      objc_msgSend_valueForKey_(v5, v18, (uint64_t)CFSTR("val"), v19, v20);
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      if (v24)
        objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v22, (uint64_t)v24, (uint64_t)v25, v23);

    }
  }

}

void sub_1D52C9E40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1D52C9E7C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  void *v24;
  id v25;

  v25 = a2;
  v5 = a3;
  objc_msgSend_valueForKey_(v5, v6, (uint64_t)CFSTR("hide"), v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = objc_msgSend_BOOLValue(v9, v10, v11, v12, v13);

  if ((v14 & 1) == 0)
  {
    objc_msgSend_valueForKey_(v5, v15, (uint64_t)CFSTR("parsedVal"), v16, v17);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    if (v21)
    {
      objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v18, (uint64_t)v21, (uint64_t)v25, v20);
    }
    else
    {
      objc_msgSend_valueForKey_(v5, v18, (uint64_t)CFSTR("val"), v19, v20);
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      if (v24)
        objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v22, (uint64_t)v24, (uint64_t)v25, v23);

    }
  }

}

void sub_1D52C9F50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1D52C9F8C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  void *v24;
  id v25;

  v25 = a2;
  v5 = a3;
  objc_msgSend_valueForKey_(v5, v6, (uint64_t)CFSTR("hide"), v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = objc_msgSend_BOOLValue(v9, v10, v11, v12, v13);

  if ((v14 & 1) == 0)
  {
    objc_msgSend_valueForKey_(v5, v15, (uint64_t)CFSTR("parsedVal"), v16, v17);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    if (v21)
    {
      objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v18, (uint64_t)v21, (uint64_t)v25, v20);
    }
    else
    {
      objc_msgSend_valueForKey_(v5, v18, (uint64_t)CFSTR("val"), v19, v20);
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      if (v24)
        objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v22, (uint64_t)v24, (uint64_t)v25, v23);

    }
  }

}

void sub_1D52CA060(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1D52CA09C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  void *v24;
  id v25;

  v25 = a2;
  v5 = a3;
  objc_msgSend_valueForKey_(v5, v6, (uint64_t)CFSTR("hide"), v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = objc_msgSend_BOOLValue(v9, v10, v11, v12, v13);

  if ((v14 & 1) == 0)
  {
    objc_msgSend_valueForKey_(v5, v15, (uint64_t)CFSTR("parsedVal"), v16, v17);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    if (v21)
    {
      objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v18, (uint64_t)v21, (uint64_t)v25, v20);
    }
    else
    {
      objc_msgSend_valueForKey_(v5, v18, (uint64_t)CFSTR("val"), v19, v20);
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      if (v24)
        objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v22, (uint64_t)v24, (uint64_t)v25, v23);

    }
  }

}

void sub_1D52CA170(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

uint64_t sub_1D52CA1AC(uint64_t a1, void *a2, void *a3)
{
  id v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a2;
  objc_msgSend_valueForKey_(a3, v5, (uint64_t)CFSTR("Width"), v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_valueForKey_(v4, v9, (uint64_t)CFSTR("Width"), v10, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = objc_msgSend_compare_(v8, v13, (uint64_t)v12, v14, v15);

  return v16;
}

void sub_1D52CA228(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1D52CA254(void **a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X2>, _OWORD *a4@<X8>)
{
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  __int128 v14;

  (*((void (**)(uint64_t *__return_ptr))*a1 + 48))(&v12);
  v11 = (*((uint64_t (**)(void **))*a1 + 53))(a1);
  sub_1D52D80BC(&v12, (unint64_t *)&v11, a2, a3, a1 + 90, &v14);
  *a4 = v14;
  v14 = 0uLL;
  v8 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_1D52CA314(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_1D5282EB4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1D52CA328(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  int v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unsigned int v23;
  int v24;
  __int128 v25;

  objc_msgSend_valueForKeyPath_(*(void **)(a1 + 504), a2, (uint64_t)CFSTR("moov.uuid-85C0B687-820F-11E0-8111-F4CE462B6A48.CMT1.Orientation.val"), a3, a4);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = v7;
  if (v7)
    v13 = objc_msgSend_intValue(v7, v8, v9, v10, v11);
  else
    v13 = 1;
  *(_QWORD *)a5 = 0;
  *(_QWORD *)(a5 + 8) = 0;
  *(_QWORD *)(a5 + 16) = 0;
  if (*(_BYTE *)(a1 + 668) && *(_BYTE *)(a1 + 676))
  {
    sub_1D5282F74(&v24, (int *)(a1 + 664));
    if (!*(_BYTE *)(a1 + 676))
      sub_1D5287C98();
    v23 = *(_DWORD *)(a1 + 672);
    sub_1D5291E58(a1, &v24, &v23, v13, &v25);
    if ((_QWORD)v25)
      sub_1D52B0A7C((char **)a5, &v25);
    v14 = (std::__shared_weak_count *)*((_QWORD *)&v25 + 1);
    if (*((_QWORD *)&v25 + 1))
    {
      v15 = (unint64_t *)(*((_QWORD *)&v25 + 1) + 8);
      do
        v16 = __ldaxr(v15);
      while (__stlxr(v16 - 1, v15));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
        std::__shared_weak_count::__release_weak(v14);
      }
    }
  }
  if (*(_BYTE *)(a1 + 636) && *(_BYTE *)(a1 + 644))
  {
    sub_1D5282F74(&v24, (int *)(a1 + 632));
    if (!*(_BYTE *)(a1 + 644))
      sub_1D5287C98();
    v23 = *(_DWORD *)(a1 + 640);
    sub_1D5291E58(a1, &v24, &v23, v13, &v25);
    if ((_QWORD)v25)
      sub_1D52B0A7C((char **)a5, &v25);
    v17 = (std::__shared_weak_count *)*((_QWORD *)&v25 + 1);
    if (*((_QWORD *)&v25 + 1))
    {
      v18 = (unint64_t *)(*((_QWORD *)&v25 + 1) + 8);
      do
        v19 = __ldaxr(v18);
      while (__stlxr(v19 - 1, v18));
      if (!v19)
      {
        ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
        std::__shared_weak_count::__release_weak(v17);
      }
    }
  }
  if (*(_BYTE *)(a1 + 604) && *(_BYTE *)(a1 + 612))
  {
    sub_1D5282F74(&v24, (int *)(a1 + 600));
    if (!*(_BYTE *)(a1 + 612))
      sub_1D5287C98();
    v23 = *(_DWORD *)(a1 + 608);
    sub_1D5291E58(a1, &v24, &v23, v13, &v25);
    if ((_QWORD)v25)
      sub_1D52B0A7C((char **)a5, &v25);
    v20 = (std::__shared_weak_count *)*((_QWORD *)&v25 + 1);
    if (*((_QWORD *)&v25 + 1))
    {
      v21 = (unint64_t *)(*((_QWORD *)&v25 + 1) + 8);
      do
        v22 = __ldaxr(v21);
      while (__stlxr(v22 - 1, v21));
      if (!v22)
      {
        ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
        std::__shared_weak_count::__release_weak(v20);
      }
    }
  }

}

void sub_1D52CA564(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  void *v3;
  va_list va;

  va_start(va, a3);
  sub_1D5282EB4((uint64_t)va);
  sub_1D5282E44((void ***)va);

  _Unwind_Resume(a1);
}

char *sub_1D52CA5B4@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  if (result[543] < 0)
    return (char *)sub_1D5290130((_BYTE *)a2, *((void **)result + 65), *((_QWORD *)result + 66));
  *(_OWORD *)a2 = *(_OWORD *)(result + 520);
  *(_QWORD *)(a2 + 16) = *((_QWORD *)result + 67);
  return result;
}

char *sub_1D52CA5E4@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  if (result[567] < 0)
    return (char *)sub_1D5290130((_BYTE *)a2, *((void **)result + 68), *((_QWORD *)result + 69));
  *(_OWORD *)a2 = *((_OWORD *)result + 34);
  *(_QWORD *)(a2 + 16) = *((_QWORD *)result + 70);
  return result;
}

uint64_t sub_1D52CA618(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 716) - 1;
  if (v1 > 2)
    return 2492765332;
  else
    return dword_1D5448ED8[v1];
}

uint64_t sub_1D52CA644(uint64_t a1)
{
  return *(unsigned int *)(a1 + 568);
}

uint64_t sub_1D52CA64C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 572);
}

uint64_t sub_1D52CA654(uint64_t a1)
{
  uint64_t v2;

  sub_1D5282DF0(&v2, *(_DWORD *)(a1 + 576), *(_DWORD *)(a1 + 580));
  return v2;
}

uint64_t sub_1D52CA680(_DWORD *a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v6;
  uint64_t v7;

  v1 = a1[146];
  v2 = a1[147];
  v3 = a1[148] - v1 + 1;
  v4 = a1[149] - v2 + 1;
  sub_1D5282DF0(&v6, v1, v2);
  sub_1D5282DF0(&v7, v3, v4);
  return v6;
}

void sub_1D52CA6E8(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  uint64_t v15;
  int v16;
  unint64_t v17;
  unint64_t v18;
  __int128 v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  int v28;
  unint64_t v29;
  unint64_t v30;
  __int128 v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  char *v37;
  __int128 v38;
  uint64_t v39;
  int v40;
  unint64_t v41;
  unint64_t v42;
  __int128 v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  char *v48;
  char *v49;
  __int128 v50;
  uint64_t v51;
  int v52;
  unint64_t v53;
  unint64_t v54;
  __int128 v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  char *v60;
  char *v61;
  __int128 v62;
  uint64_t v63;
  int v64;
  void *__p[2];
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t *v71;
  char v72[16];
  char __s[16];
  char __str[16];
  uint64_t v75;

  v75 = *MEMORY[0x1E0C80C00];
  v4 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a1 + 440))(a1);
  snprintf(__str, 0x10uLL, "%u", a1[128]);
  snprintf(__s, 0x10uLL, "%d", v4);
  snprintf(v72, 0x10uLL, "%d", HIDWORD(v4));
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  sub_1D52850A0(__p, "cr3");
  v5 = a2[2];
  v6 = a2[1];
  if (v6 >= v5)
  {
    v8 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v6 - *a2) >> 3);
    v9 = v8 + 1;
    if (v8 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v10 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *a2) >> 3);
    if (2 * v10 > v9)
      v9 = 2 * v10;
    if (v10 >= 0x555555555555555)
      v11 = 0xAAAAAAAAAAAAAAALL;
    else
      v11 = v9;
    v71 = a2 + 2;
    if (v11)
      v12 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v11);
    else
      v12 = 0;
    v13 = &v12[24 * v8];
    v67 = v12;
    v68 = v13;
    v70 = &v12[24 * v11];
    v14 = *(_OWORD *)__p;
    *((_QWORD *)v13 + 2) = v66;
    *(_OWORD *)v13 = v14;
    __p[1] = 0;
    v66 = 0;
    __p[0] = 0;
    v69 = v13 + 24;
    sub_1D5293D58(a2, &v67);
    v15 = a2[1];
    sub_1D5293F24((uint64_t)&v67);
    v16 = SHIBYTE(v66);
    a2[1] = v15;
    if (v16 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v7 = *(_OWORD *)__p;
    *(_QWORD *)(v6 + 16) = v66;
    *(_OWORD *)v6 = v7;
    a2[1] = v6 + 24;
  }
  sub_1D52850A0(__p, "canon");
  v18 = a2[1];
  v17 = a2[2];
  if (v18 >= v17)
  {
    v20 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v18 - *a2) >> 3);
    v21 = v20 + 1;
    if (v20 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v22 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v17 - *a2) >> 3);
    if (2 * v22 > v21)
      v21 = 2 * v22;
    if (v22 >= 0x555555555555555)
      v23 = 0xAAAAAAAAAAAAAAALL;
    else
      v23 = v21;
    v71 = a2 + 2;
    if (v23)
      v24 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v23);
    else
      v24 = 0;
    v25 = &v24[24 * v20];
    v67 = v24;
    v68 = v25;
    v70 = &v24[24 * v23];
    v26 = *(_OWORD *)__p;
    *((_QWORD *)v25 + 2) = v66;
    *(_OWORD *)v25 = v26;
    __p[1] = 0;
    v66 = 0;
    __p[0] = 0;
    v69 = v25 + 24;
    sub_1D5293D58(a2, &v67);
    v27 = a2[1];
    sub_1D5293F24((uint64_t)&v67);
    v28 = SHIBYTE(v66);
    a2[1] = v27;
    if (v28 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v19 = *(_OWORD *)__p;
    *(_QWORD *)(v18 + 16) = v66;
    *(_OWORD *)v18 = v19;
    a2[1] = v18 + 24;
  }
  sub_1D52850A0(__p, __str);
  v30 = a2[1];
  v29 = a2[2];
  if (v30 >= v29)
  {
    v32 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v30 - *a2) >> 3);
    v33 = v32 + 1;
    if (v32 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v34 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v29 - *a2) >> 3);
    if (2 * v34 > v33)
      v33 = 2 * v34;
    if (v34 >= 0x555555555555555)
      v35 = 0xAAAAAAAAAAAAAAALL;
    else
      v35 = v33;
    v71 = a2 + 2;
    if (v35)
      v36 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v35);
    else
      v36 = 0;
    v37 = &v36[24 * v32];
    v67 = v36;
    v68 = v37;
    v70 = &v36[24 * v35];
    v38 = *(_OWORD *)__p;
    *((_QWORD *)v37 + 2) = v66;
    *(_OWORD *)v37 = v38;
    __p[1] = 0;
    v66 = 0;
    __p[0] = 0;
    v69 = v37 + 24;
    sub_1D5293D58(a2, &v67);
    v39 = a2[1];
    sub_1D5293F24((uint64_t)&v67);
    v40 = SHIBYTE(v66);
    a2[1] = v39;
    if (v40 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v31 = *(_OWORD *)__p;
    *(_QWORD *)(v30 + 16) = v66;
    *(_OWORD *)v30 = v31;
    a2[1] = v30 + 24;
  }
  sub_1D52850A0(__p, __s);
  v42 = a2[1];
  v41 = a2[2];
  if (v42 >= v41)
  {
    v44 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v42 - *a2) >> 3);
    v45 = v44 + 1;
    if (v44 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v46 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v41 - *a2) >> 3);
    if (2 * v46 > v45)
      v45 = 2 * v46;
    if (v46 >= 0x555555555555555)
      v47 = 0xAAAAAAAAAAAAAAALL;
    else
      v47 = v45;
    v71 = a2 + 2;
    if (v47)
      v48 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v47);
    else
      v48 = 0;
    v49 = &v48[24 * v44];
    v67 = v48;
    v68 = v49;
    v70 = &v48[24 * v47];
    v50 = *(_OWORD *)__p;
    *((_QWORD *)v49 + 2) = v66;
    *(_OWORD *)v49 = v50;
    __p[1] = 0;
    v66 = 0;
    __p[0] = 0;
    v69 = v49 + 24;
    sub_1D5293D58(a2, &v67);
    v51 = a2[1];
    sub_1D5293F24((uint64_t)&v67);
    v52 = SHIBYTE(v66);
    a2[1] = v51;
    if (v52 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v43 = *(_OWORD *)__p;
    *(_QWORD *)(v42 + 16) = v66;
    *(_OWORD *)v42 = v43;
    a2[1] = v42 + 24;
  }
  sub_1D52850A0(__p, v72);
  v54 = a2[1];
  v53 = a2[2];
  if (v54 >= v53)
  {
    v56 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v54 - *a2) >> 3);
    v57 = v56 + 1;
    if (v56 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v58 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v53 - *a2) >> 3);
    if (2 * v58 > v57)
      v57 = 2 * v58;
    if (v58 >= 0x555555555555555)
      v59 = 0xAAAAAAAAAAAAAAALL;
    else
      v59 = v57;
    v71 = a2 + 2;
    if (v59)
      v60 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v59);
    else
      v60 = 0;
    v61 = &v60[24 * v56];
    v67 = v60;
    v68 = v61;
    v70 = &v60[24 * v59];
    v62 = *(_OWORD *)__p;
    *((_QWORD *)v61 + 2) = v66;
    *(_OWORD *)v61 = v62;
    __p[1] = 0;
    v66 = 0;
    __p[0] = 0;
    v69 = v61 + 24;
    sub_1D5293D58(a2, &v67);
    v63 = a2[1];
    sub_1D5293F24((uint64_t)&v67);
    v64 = SHIBYTE(v66);
    a2[1] = v63;
    if (v64 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v55 = *(_OWORD *)__p;
    *(_QWORD *)(v54 + 16) = v66;
    *(_OWORD *)v54 = v55;
    a2[1] = v54 + 24;
  }
}

void sub_1D52CACC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  sub_1D5293F24((uint64_t)&a16);
  if (a15 < 0)
    operator delete(__p);
  sub_1D5293CCC((void ***)&__p);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52CAD30(uint64_t a1)
{
  int v2;
  unsigned int v4;
  int v5;
  unsigned int v6;

  v2 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 16))(a1);
  v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  v5 = v2 - sub_1D52ADF28(&v4);
  sub_1D5282F74((int *)&v6, &v5);
  return v6;
}

id sub_1D52CAD98(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  void *v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const char *v29;
  void *v30;
  _QWORD v32[3];
  _QWORD v33[4];

  v33[3] = *MEMORY[0x1E0C80C00];
  v3 = sub_1D52847F8(*a2);
  v4 = sub_1D52847F8(*a2);
  objc_msgSend_array(MEMORY[0x1E0C99DE8], v5, v6, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 16))(*a2) - 8;
  if (v13 >= 4)
  {
    v14 = v13 >> 2;
    do
    {
      v15 = (void *)MEMORY[0x1E0CB37E8];
      v16 = sub_1D52847F8(*a2);
      objc_msgSend_numberWithUnsignedInt_(v15, v17, v16, v18, v19);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_addObject_(v9, v21, (uint64_t)v20, v22, v23);

      --v14;
    }
    while (v14);
  }
  v32[0] = CFSTR("majorBrand");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v10, v3, v11, v12);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v33[0] = v24;
  v32[1] = CFSTR("minorVersion");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v25, v4, v26, v27);
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  v32[2] = CFSTR("compatibleBrands");
  v33[1] = v28;
  v33[2] = v9;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v29, (uint64_t)v33, (uint64_t)v32, 3);
  v30 = (void *)objc_claimAutoreleasedReturnValue();

  return v30;
}

void sub_1D52CAF0C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

id sub_1D52CAF50(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  void *v25;
  void *exception;
  _QWORD v28[4];
  _QWORD v29[5];

  v29[4] = *MEMORY[0x1E0C80C00];
  v4 = sub_1D52846FC(*a2);
  v5 = sub_1D52846FC(*a2);
  v6 = sub_1D52846FC(*a2);
  v7 = sub_1D52846FC(*a2);
  v8 = sub_1D52847F8(*a2);
  v9 = sub_1D52847F8(*a2);
  if (v9 >= 2)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v10 = v9;
  if (!(_DWORD)v8 && (_DWORD)v9 == 1)
    v8 = sub_1D52847F8(*a2);
  sub_1D52C9450(a1, a2, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v28[0] = CFSTR("Version");
  objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v12, v4, v13, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v29[0] = v15;
  v28[1] = CFSTR("Flags");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v16, (v5 << 16) | (v6 << 8) | v7, v17, v18);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v29[1] = v19;
  v28[2] = CFSTR("SampleSize");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v20, v8, v21, v22);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v28[3] = CFSTR("Entries");
  v29[2] = v23;
  v29[3] = v11;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v24, (uint64_t)v29, (uint64_t)v28, 4);
  v25 = (void *)objc_claimAutoreleasedReturnValue();

  return v25;
}

void sub_1D52CB124(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

const __CFString *sub_1D52CB170(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  _BOOL4 v3;
  unsigned int v5;
  void *__p[2];
  uint64_t v7;

  __p[0] = 0;
  __p[1] = 0;
  v7 = 0;
  v2 = *a2;
  v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 16))(*a2);
  v3 = sub_1D52849DC(v2, &v5, (uint64_t)__p);
  if (SHIBYTE(v7) < 0)
    operator delete(__p[0]);
  if (v3)
    return CFSTR("xmp data");
  else
    return &stru_1E99A7480;
}

void sub_1D52CB1EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D52CB208(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;

  sub_1D52847F8(*a2);
  v4 = sub_1D52847F8(*a2);
  return sub_1D52C9450(a1, a2, v4);
}

id sub_1D52CB244(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  int v4;
  int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  const char *v43;
  void *v44;
  void *v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  void *__p[2];
  uint64_t v51;
  _QWORD v52[8];
  _QWORD v53[10];

  v53[8] = *MEMORY[0x1E0C80C00];
  v3 = sub_1D52846FC(*a2);
  v4 = sub_1D52846FC(*a2);
  v5 = sub_1D52846FC(*a2);
  v6 = sub_1D52846FC(*a2);
  v7 = sub_1D52847F8(*a2);
  v8 = sub_1D52847F8(*a2);
  v9 = sub_1D52847F8(*a2);
  v10 = sub_1D52847F8(*a2);
  v47 = sub_1D52847F8(*a2);
  __p[0] = 0;
  __p[1] = 0;
  v51 = 0;
  v11 = *a2;
  v48 = sub_1D52CAD30(v11);
  sub_1D52859B8(&v49, &v48);
  sub_1D52849DC(v11, &v49, (uint64_t)__p);
  if (v51 >= 0)
    objc_msgSend_stringWithUTF8String_(MEMORY[0x1E0CB3940], v12, (uint64_t)__p, v13, v14);
  else
    objc_msgSend_stringWithUTF8String_(MEMORY[0x1E0CB3940], v12, (uint64_t)__p[0], v13, v14);
  v46 = (void *)objc_claimAutoreleasedReturnValue();
  v52[0] = CFSTR("Version");
  objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v15, v3, v16, v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v53[0] = v18;
  v52[1] = CFSTR("Flags");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v19, (v4 << 16) | (v5 << 8) | v6, v20, v21);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v53[1] = v22;
  v52[2] = CFSTR("ComponentType");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v23, v7, v24, v25);
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  v53[2] = v26;
  v52[3] = CFSTR("ComponentSubType");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v27, v8, v28, v29);
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  v53[3] = v30;
  v52[4] = CFSTR("Component");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v31, v9, v32, v33);
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  v53[4] = v34;
  v52[5] = CFSTR("ComponentFlags");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v35, v10, v36, v37);
  v38 = (void *)objc_claimAutoreleasedReturnValue();
  v53[5] = v38;
  v52[6] = CFSTR("ComponentFlagsMask");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v39, v47, v40, v41);
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  v52[7] = CFSTR("ComponentName");
  v53[6] = v42;
  v53[7] = v46;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v43, (uint64_t)v53, (uint64_t)v52, 8);
  v44 = (void *)objc_claimAutoreleasedReturnValue();

  if (SHIBYTE(v51) < 0)
    operator delete(__p[0]);
  return v44;
}

void sub_1D52CB4E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;

  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

id sub_1D52CB574(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const char *v18;
  void *v19;
  _QWORD v21[3];
  _QWORD v22[4];

  v22[3] = *MEMORY[0x1E0C80C00];
  v4 = sub_1D52846FC(*a2);
  v5 = sub_1D52846FC(*a2);
  v6 = sub_1D52846FC(*a2);
  v7 = sub_1D52846FC(*a2);
  v8 = sub_1D52847F8(*a2);
  sub_1D52C9450(a1, a2, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v21[0] = CFSTR("Version");
  objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v10, v4, v11, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v22[0] = v13;
  v21[1] = CFSTR("Flags");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v14, (v5 << 16) | (v6 << 8) | v7, v15, v16);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v21[2] = CFSTR("Entries");
  v22[1] = v17;
  v22[2] = v9;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v18, (uint64_t)v22, (uint64_t)v21, 3);
  v19 = (void *)objc_claimAutoreleasedReturnValue();

  return v19;
}

void sub_1D52CB6B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

id sub_1D52CB6E8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void **v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  const char *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  const char *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  const char *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  const char *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  const char *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  const char *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  const char *v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  const char *v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  const char *v76;
  void *v77;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  void *v91;
  unsigned int v92;
  void *v93;
  unsigned int v94;
  void *v95;
  void *v96;
  unsigned int v97;
  void *__p[2];
  uint64_t v99;
  _QWORD v100[18];
  _QWORD v101[20];

  v101[18] = *MEMORY[0x1E0C80C00];
  sub_1D52847F8(*a2);
  sub_1D528479C(*a2);
  v4 = sub_1D528479C(*a2);
  v5 = sub_1D528479C(*a2);
  v6 = sub_1D528479C(*a2);
  v7 = sub_1D52847F8(*a2);
  v8 = sub_1D52847F8(*a2);
  v94 = sub_1D52847F8(*a2);
  v92 = sub_1D528479C(*a2);
  v90 = sub_1D528479C(*a2);
  v89 = sub_1D528479C(*a2);
  v88 = sub_1D528479C(*a2);
  v87 = sub_1D528479C(*a2);
  v86 = sub_1D528479C(*a2);
  v9 = sub_1D52847F8(*a2);
  v10 = sub_1D528479C(*a2);
  v11 = sub_1D52846FC(*a2);
  __p[0] = 0;
  __p[1] = 0;
  v99 = 0;
  v12 = *a2;
  v97 = v11;
  sub_1D52849DC(v12, &v97, (uint64_t)__p);
  v13 = *a2;
  v97 = 31 - v11;
  (*(void (**)(uint64_t, unsigned int *, uint64_t))(*(_QWORD *)v13 + 40))(v13, &v97, 1);
  v85 = sub_1D528479C(*a2);
  v14 = sub_1D528479C(*a2);
  sub_1D52847F8(*a2);
  sub_1D52C9450(a1, a2, 0xFFFFFFFFLL);
  v18 = objc_claimAutoreleasedReturnValue();
  if (v99 >= 0)
    v19 = __p;
  else
    v19 = (void **)__p[0];
  v84 = (void *)v18;
  objc_msgSend_stringWithUTF8String_(MEMORY[0x1E0CB3940], v15, (uint64_t)v19, v16, v17);
  v96 = (void *)objc_claimAutoreleasedReturnValue();
  v100[0] = CFSTR("DataReference");
  objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v20, v4, v21, v22);
  v83 = (void *)objc_claimAutoreleasedReturnValue();
  v101[0] = v83;
  v100[1] = CFSTR("Version");
  objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v23, v5, v24, v25);
  v82 = (void *)objc_claimAutoreleasedReturnValue();
  v101[1] = v82;
  v100[2] = CFSTR("RevisionLevel");
  objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v26, v6, v27, v28);
  v81 = (void *)objc_claimAutoreleasedReturnValue();
  v101[2] = v81;
  v100[3] = CFSTR("Vendor");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v29, v7, v30, v31);
  v80 = (void *)objc_claimAutoreleasedReturnValue();
  v101[3] = v80;
  v100[4] = CFSTR("TemporalQuality");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v32, v8, v33, v34);
  v79 = (void *)objc_claimAutoreleasedReturnValue();
  v101[4] = v79;
  v100[5] = CFSTR("SpatialQuality");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v35, v94, v36, v37);
  v95 = (void *)objc_claimAutoreleasedReturnValue();
  v101[5] = v95;
  v100[6] = CFSTR("Width");
  objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v38, v92, v39, v40);
  v93 = (void *)objc_claimAutoreleasedReturnValue();
  v101[6] = v93;
  v100[7] = CFSTR("Height");
  objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v41, v90, v42, v43);
  v91 = (void *)objc_claimAutoreleasedReturnValue();
  v101[7] = v91;
  v100[8] = CFSTR("HorizontalRes");
  objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v44, v89, v45, v46);
  v47 = (void *)objc_claimAutoreleasedReturnValue();
  v101[8] = v47;
  v100[9] = CFSTR("HorizontalResDec");
  objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v48, v88, v49, v50);
  v51 = (void *)objc_claimAutoreleasedReturnValue();
  v101[9] = v51;
  v100[10] = CFSTR("VerticalRes");
  objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v52, v87, v53, v54);
  v55 = (void *)objc_claimAutoreleasedReturnValue();
  v101[10] = v55;
  v100[11] = CFSTR("VerticalResDec");
  objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v56, v86, v57, v58);
  v59 = (void *)objc_claimAutoreleasedReturnValue();
  v101[11] = v59;
  v100[12] = CFSTR("DataSize");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v60, v9, v61, v62);
  v63 = (void *)objc_claimAutoreleasedReturnValue();
  v101[12] = v63;
  v100[13] = CFSTR("FrameCount");
  objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v64, v10, v65, v66);
  v67 = (void *)objc_claimAutoreleasedReturnValue();
  v101[13] = v67;
  v101[14] = v96;
  v100[14] = CFSTR("CompressorName");
  v100[15] = CFSTR("Depth");
  objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v68, v85, v69, v70);
  v71 = (void *)objc_claimAutoreleasedReturnValue();
  v101[15] = v71;
  v100[16] = CFSTR("ColorTableID");
  objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v72, v14, v73, v74);
  v75 = (void *)objc_claimAutoreleasedReturnValue();
  v100[17] = CFSTR("Extensions");
  v101[16] = v75;
  v101[17] = v84;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v76, (uint64_t)v101, (uint64_t)v100, 18);
  v77 = (void *)objc_claimAutoreleasedReturnValue();

  if (SHIBYTE(v99) < 0)
    operator delete(__p[0]);
  return v77;
}

void sub_1D52CBBD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, void *a10, void *a11, void *a12, void *a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20,void *a21,void *a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;

  if (a29 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

id sub_1D52CBD0C(uint64_t a1, uint64_t *a2)
{
  unsigned int v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  void *i;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const char *v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  void *v25;
  unsigned int v27;
  _QWORD v28[2];
  _QWORD v29[2];
  _QWORD v30[2];
  _QWORD v31[3];

  v31[2] = *MEMORY[0x1E0C80C00];
  sub_1D52847F8(*a2);
  sub_1D528479C(*a2);
  v27 = sub_1D528479C(*a2);
  v3 = sub_1D52847F8(*a2);
  sub_1D52B261C(v3);
  for (i = (void *)objc_claimAutoreleasedReturnValue(); v3; --v3)
  {
    sub_1D528479C(*a2);
    v8 = sub_1D528479C(*a2);
    v9 = sub_1D52847F8(*a2);
    v30[0] = CFSTR("tagID");
    objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v10, v8, v11, v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v30[1] = CFSTR("tagSize");
    v31[0] = v13;
    objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v14, v9, v15, v16);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v31[1] = v17;
    objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v18, (uint64_t)v31, (uint64_t)v30, 2);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_addObject_(i, v20, (uint64_t)v19, v21, v22);

  }
  v28[0] = CFSTR("DataReference");
  objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v4, v27, v5, v6);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v28[1] = CFSTR("Tags");
  v29[0] = v23;
  v29[1] = i;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v24, (uint64_t)v29, (uint64_t)v28, 2);
  v25 = (void *)objc_claimAutoreleasedReturnValue();

  return v25;
}

void sub_1D52CBEC0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id sub_1D52CBF14(uint64_t a1, uint64_t *a2)
{
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  int v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const char *v27;
  void *v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  const char *v44;
  uint64_t v45;
  uint64_t v46;
  const char *v47;
  uint64_t v48;
  uint64_t v49;
  const char *v50;
  uint64_t v51;
  uint64_t v52;
  const char *v53;
  uint64_t v54;
  uint64_t v55;
  const char *v56;
  uint64_t v57;
  uint64_t v58;
  const char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  const char *v64;
  uint64_t v65;
  uint64_t v66;
  const char *v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  const char *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  const char *v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  const char *v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  const char *v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  const char *v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  const char *v91;
  void *v92;
  const char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  char v98;
  const char *v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  int v103;
  const char *v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  const char *v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  const char *v112;
  void *v113;
  const char *v114;
  uint64_t v115;
  uint64_t v116;
  const char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  const char *v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  const char *v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  const char *v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  const char *v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  const char *v142;
  uint64_t v143;
  uint64_t v144;
  void *v145;
  const char *v146;
  uint64_t v147;
  uint64_t v148;
  void *v149;
  const char *v150;
  void *v151;
  const char *v152;
  uint64_t v153;
  uint64_t v154;
  void *v155;
  const char *v156;
  uint64_t v157;
  unsigned int v158;
  const char *v159;
  uint64_t v160;
  uint64_t v161;
  void *v162;
  const char *v163;
  uint64_t v164;
  void *exception;
  void *v167;
  void *v168;
  void *v169;
  void *v170;
  unsigned int v171;
  void *v172;
  void *v173;
  unsigned int v174;
  void *v175;
  unsigned int v176;
  void *v177;
  char v178;
  unsigned int v179;
  unsigned int v180;
  unsigned int v181;
  unint64_t v182;
  unsigned int v183;
  void *v184;
  id v185;
  unsigned int v186;
  void *v187;
  unsigned int v188;
  void *v189;
  void *v190;
  _QWORD v191[6];
  _QWORD v192[6];
  _QWORD v193[3];
  _QWORD v194[3];
  _QWORD v195[18];
  _QWORD v196[18];
  _QWORD v197[2];
  _QWORD v198[4];

  v198[2] = *MEMORY[0x1E0C80C00];
  v4 = sub_1D528479C(*a2);
  v5 = sub_1D528479C(*a2);
  v6 = sub_1D528479C(*a2);
  sub_1D528479C(*a2);
  v7 = sub_1D52847F8(*a2);
  v8 = sub_1D52847F8(*a2);
  v188 = sub_1D52847F8(*a2);
  v183 = sub_1D52847F8(*a2);
  v9 = sub_1D52846FC(*a2);
  v186 = sub_1D52846FC(*a2);
  v180 = sub_1D52846FC(*a2);
  v181 = sub_1D52846FC(*a2);
  v179 = sub_1D52847F8(*a2);
  v178 = sub_1D52846FC(*a2);
  sub_1D52846FC(*a2);
  sub_1D528479C(*a2);
  if (v6 == 512)
  {
    if (!*(_BYTE *)(a1 + 732))
      *(_BYTE *)(a1 + 732) = 1;
    v10 = 512;
    goto LABEL_9;
  }
  if (v6 == 256)
  {
    if (!*(_BYTE *)(a1 + 732))
      *(_BYTE *)(a1 + 732) = 1;
    v10 = 256;
LABEL_9:
    *(_DWORD *)(a1 + 728) = v10;
    goto LABEL_11;
  }
  if (!*(_BYTE *)(a1 + 732))
    goto LABEL_36;
LABEL_11:
  if (*(_DWORD *)(a1 + 728) == 256)
    v11 = 65280;
  else
    v11 = 65296;
  if (v11 != v4
    || v7 >> 5 >= 0xC35
    || v8 > 0x1869F
    || !(_DWORD)v7
    || !(_DWORD)v8
    || !v183
    || !v188
    || v7 < v188
    || v8 < v183)
  {
LABEL_36:
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v171 = v4;
  v174 = v6;
  v176 = v9;
  v182 = v186 >> 4;
  sub_1D52B261C(v182);
  v190 = (void *)objc_claimAutoreleasedReturnValue();
  if (v186 >= 0x10)
  {
    if (v182 <= 1)
      v16 = 1;
    else
      v16 = v182;
    do
    {
      v17 = sub_1D52846FC(*a2);
      v18 = sub_1D52846FC(*a2);
      sub_1D528479C(*a2);
      v197[0] = CFSTR("sample_width");
      objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v19, v17, v20, v21);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      v197[1] = CFSTR("sample_height");
      v198[0] = v22;
      objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v23, v18, v24, v25);
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      v198[1] = v26;
      objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v27, (uint64_t)v198, (uint64_t)v197, 2);
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_addObject_(v190, v29, (uint64_t)v28, v30, v31);

      --v16;
    }
    while (v16);
  }
  objc_msgSend_dictionary(MEMORY[0x1E0C99E08], v12, v13, v14, v15);
  v185 = (id)objc_claimAutoreleasedReturnValue();
  v195[0] = CFSTR("marker_code_main_header");
  objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v32, v171, v33, v34);
  v196[0] = objc_claimAutoreleasedReturnValue();
  v195[1] = CFSTR("main_header_length");
  v172 = (void *)v196[0];
  objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v35, v5, v36, v37);
  v173 = (void *)objc_claimAutoreleasedReturnValue();
  v196[1] = v173;
  v195[2] = CFSTR("revision");
  objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v38, v174, v39, v40);
  v170 = (void *)objc_claimAutoreleasedReturnValue();
  v196[2] = v170;
  v195[3] = CFSTR("frame_width");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v41, v7, v42, v43);
  v169 = (void *)objc_claimAutoreleasedReturnValue();
  v196[3] = v169;
  v195[4] = CFSTR("frame_height");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v44, v8, v45, v46);
  v175 = (void *)objc_claimAutoreleasedReturnValue();
  v196[4] = v175;
  v195[5] = CFSTR("tile_width");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v47, v188, v48, v49);
  v168 = (void *)objc_claimAutoreleasedReturnValue();
  v196[5] = v168;
  v195[6] = CFSTR("tile_height");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v50, v183, v51, v52);
  v167 = (void *)objc_claimAutoreleasedReturnValue();
  v196[6] = v167;
  v195[7] = CFSTR("tile_num");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v53, v8 / v183 * (v7 / v188), v54, v55);
  v184 = (void *)objc_claimAutoreleasedReturnValue();
  v196[7] = v184;
  v195[8] = CFSTR("bit_depth");
  objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v56, v176, v57, v58);
  v177 = (void *)objc_claimAutoreleasedReturnValue();
  v196[8] = v177;
  v195[9] = CFSTR("plane_num");
  objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v59, v182, v60, v61);
  v62 = objc_claimAutoreleasedReturnValue();
  v63 = v186 & 0xF;
  v187 = (void *)v62;
  v196[9] = v62;
  v195[10] = CFSTR("bayer_type");
  objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v64, v63, v65, v66);
  v189 = (void *)objc_claimAutoreleasedReturnValue();
  v196[10] = v189;
  v195[11] = CFSTR("ct_mode");
  objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v67, v180 >> 4, v68, v69);
  v70 = (void *)objc_claimAutoreleasedReturnValue();
  v196[11] = v70;
  v195[12] = CFSTR("dwt_level");
  objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v71, v180 & 0xF, v72, v73);
  v74 = (void *)objc_claimAutoreleasedReturnValue();
  v196[12] = v74;
  v195[13] = CFSTR("tile_h_overlap");
  objc_msgSend_numberWithBool_(MEMORY[0x1E0CB37E8], v75, v181 >> 7, v76, v77);
  v78 = (void *)objc_claimAutoreleasedReturnValue();
  v196[13] = v78;
  v195[14] = CFSTR("tile_v_overlap");
  objc_msgSend_numberWithBool_(MEMORY[0x1E0CB37E8], v79, (v181 >> 6) & 1, v80, v81);
  v82 = (void *)objc_claimAutoreleasedReturnValue();
  v196[14] = v82;
  v195[15] = CFSTR("sub_header_part_length");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v83, v179, v84, v85);
  v86 = (void *)objc_claimAutoreleasedReturnValue();
  v196[15] = v86;
  v195[16] = CFSTR("main_extension_flag");
  objc_msgSend_numberWithBool_(MEMORY[0x1E0CB37E8], v87, (v178 >> 7) & 1, v88, v89);
  v90 = (void *)objc_claimAutoreleasedReturnValue();
  v195[17] = CFSTR("planes");
  v196[16] = v90;
  v196[17] = v190;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v91, (uint64_t)v196, (uint64_t)v195, 18);
  v92 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addEntriesFromDictionary_(v185, v93, (uint64_t)v92, v94, v95);

  if (v178 < 0)
  {
    v96 = sub_1D52847F8(*a2);
    v97 = sub_1D52846FC(*a2);
    sub_1D528479C(*a2);
    v98 = sub_1D52846FC(*a2);
    v193[0] = CFSTR("main_extension_header_data_length");
    objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v99, v96, v100, v101);
    v102 = (void *)objc_claimAutoreleasedReturnValue();
    v103 = v97;
    v194[0] = v102;
    v193[1] = CFSTR("buffer_model_info_flag");
    objc_msgSend_numberWithBool_(MEMORY[0x1E0CB37E8], v104, (v97 >> 7) & 1, v105, v106);
    v107 = (void *)objc_claimAutoreleasedReturnValue();
    v194[1] = v107;
    v193[2] = CFSTR("user_info_flag");
    objc_msgSend_numberWithBool_(MEMORY[0x1E0CB37E8], v108, v98 & 1, v109, v110);
    v111 = (void *)objc_claimAutoreleasedReturnValue();
    v194[2] = v111;
    objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v112, (uint64_t)v194, (uint64_t)v193, 3);
    v113 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_addEntriesFromDictionary_(v185, v114, (uint64_t)v113, v115, v116);

    if (v103 < 0)
    {
      v120 = sub_1D52847F8(*a2);
      v121 = sub_1D52847F8(*a2);
      v122 = sub_1D52847F8(*a2);
      v123 = sub_1D52847F8(*a2);
      v124 = sub_1D52847F8(*a2);
      v125 = sub_1D52847F8(*a2);
      v191[0] = CFSTR("bit_rate_value_minus1");
      objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v126, v120, v127, v128);
      v129 = (void *)objc_claimAutoreleasedReturnValue();
      v192[0] = v129;
      v191[1] = CFSTR("bit_rate_scale");
      objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v130, v121, v131, v132);
      v133 = (void *)objc_claimAutoreleasedReturnValue();
      v192[1] = v133;
      v191[2] = CFSTR("buffersize_value_minus1");
      objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v134, v122, v135, v136);
      v137 = (void *)objc_claimAutoreleasedReturnValue();
      v192[2] = v137;
      v191[3] = CFSTR("buffersize_scale");
      objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v138, v123, v139, v140);
      v141 = (void *)objc_claimAutoreleasedReturnValue();
      v192[3] = v141;
      v191[4] = CFSTR("num_units_in_tick");
      objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v142, v124, v143, v144);
      v145 = (void *)objc_claimAutoreleasedReturnValue();
      v192[4] = v145;
      v191[5] = CFSTR("time_scale");
      objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v146, v125, v147, v148);
      v149 = (void *)objc_claimAutoreleasedReturnValue();
      v192[5] = v149;
      objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v150, (uint64_t)v192, (uint64_t)v191, 6);
      v151 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_addEntriesFromDictionary_(v185, v152, (uint64_t)v151, v153, v154);

    }
    if (!*(_BYTE *)(a1 + 732))
      sub_1D5287C98();
    if (*(_DWORD *)(a1 + 728) == 512)
    {
      objc_msgSend_numberWithBool_(MEMORY[0x1E0CB37E8], v117, (v103 >> 6) & 1, v118, v119);
      v155 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_setObject_forKeyedSubscript_(v185, v156, (uint64_t)v155, (uint64_t)CFSTR("bit_depth_transformation_info_flag"), v157);

      if (((v103 >> 6) & 1) != 0)
      {
        v158 = sub_1D52847F8(*a2);
        objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v159, HIBYTE(v158), v160, v161);
        v162 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_setObject_forKeyedSubscript_(v185, v163, (uint64_t)v162, (uint64_t)CFSTR("bit_depth_before_transformation"), v164);

      }
    }
  }

  return v185;
}

void sub_1D52CC944(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,void *a26)
{
  void *v26;

  _Unwind_Resume(a1);
}

id sub_1D52CCBA4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  int v4;
  int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  const char *v44;
  void *v45;
  unsigned int v47;
  _QWORD v48[8];
  _QWORD v49[9];

  v49[8] = *MEMORY[0x1E0C80C00];
  v3 = sub_1D52846FC(*a2);
  v4 = sub_1D52846FC(*a2);
  v5 = sub_1D52846FC(*a2);
  v6 = sub_1D52846FC(*a2);
  v7 = sub_1D52847F8(*a2);
  v8 = sub_1D52847F8(*a2);
  v9 = sub_1D52847F8(*a2);
  v10 = sub_1D52847F8(*a2);
  v11 = sub_1D528479C(*a2);
  v47 = sub_1D528479C(*a2);
  v48[0] = CFSTR("Version");
  objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v12, v3, v13, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v49[0] = v15;
  v48[1] = CFSTR("Flags");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v16, (v4 << 16) | (v5 << 8) | v6, v17, v18);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v49[1] = v19;
  v48[2] = CFSTR("CreationTime");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v20, v7, v21, v22);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v49[2] = v23;
  v48[3] = CFSTR("ModificationTime");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v24, v8, v25, v26);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v49[3] = v27;
  v48[4] = CFSTR("TimeScale");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v28, v9, v29, v30);
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  v49[4] = v31;
  v48[5] = CFSTR("Duration");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v32, v10, v33, v34);
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  v49[5] = v35;
  v48[6] = CFSTR("Language");
  objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v36, v11, v37, v38);
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  v49[6] = v39;
  v48[7] = CFSTR("Quality");
  objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v40, v47, v41, v42);
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  v49[7] = v43;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v44, (uint64_t)v49, (uint64_t)v48, 8);
  v45 = (void *)objc_claimAutoreleasedReturnValue();

  return v45;
}

void sub_1D52CCDFC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  _Unwind_Resume(a1);
}

id sub_1D52CCE68(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  int v4;
  int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  const char *v33;
  uint64_t v34;
  uint64_t v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  const char *v45;
  uint64_t v46;
  uint64_t v47;
  const char *v48;
  uint64_t v49;
  uint64_t v50;
  const char *v51;
  uint64_t v52;
  uint64_t v53;
  const char *v54;
  uint64_t v55;
  uint64_t v56;
  const char *v57;
  uint64_t v58;
  uint64_t v59;
  const char *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  const char *v64;
  uint64_t v65;
  void *v66;
  const char *v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  const char *v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  const char *v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  const char *v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  const char *v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  const char *v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  const char *v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  const char *v96;
  void *v97;
  void *v99;
  void *v100;
  void *v101;
  void *v102;
  void *v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  void *v112;
  unsigned int v113;
  void *v114;
  unsigned int v115;
  void *v116;
  unsigned int v117;
  void *v118;
  unsigned int v119;
  void *v120;
  unsigned int v121;
  void *v122;
  unsigned int v123;
  void *v124;
  unsigned int v125;
  void *v126;
  unsigned int v127;
  void *v128;
  unsigned int v129;
  void *v130;
  void *v131;
  _QWORD v132[9];
  _QWORD v133[16];
  _QWORD v134[18];

  v134[16] = *MEMORY[0x1E0C80C00];
  v3 = sub_1D52846FC(*a2);
  v4 = sub_1D52846FC(*a2);
  v5 = sub_1D52846FC(*a2);
  v6 = sub_1D52846FC(*a2);
  v7 = sub_1D52847F8(*a2);
  v8 = sub_1D52847F8(*a2);
  v9 = sub_1D52847F8(*a2);
  v10 = sub_1D52847F8(*a2);
  v129 = sub_1D52847F8(*a2);
  v127 = sub_1D528479C(*a2);
  sub_1D52847F8(*a2);
  sub_1D52847F8(*a2);
  sub_1D528479C(*a2);
  v125 = sub_1D52847F8(*a2);
  v123 = sub_1D52847F8(*a2);
  v121 = sub_1D52847F8(*a2);
  v119 = sub_1D52847F8(*a2);
  v117 = sub_1D52847F8(*a2);
  v115 = sub_1D52847F8(*a2);
  v113 = sub_1D52847F8(*a2);
  v111 = sub_1D52847F8(*a2);
  v110 = sub_1D52847F8(*a2);
  v109 = sub_1D52847F8(*a2);
  v108 = sub_1D52847F8(*a2);
  v107 = sub_1D52847F8(*a2);
  v106 = sub_1D52847F8(*a2);
  v105 = sub_1D52847F8(*a2);
  v104 = sub_1D52847F8(*a2);
  v11 = sub_1D52847F8(*a2);
  v133[0] = CFSTR("Version");
  objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v12, v3, v13, v14);
  v131 = (void *)objc_claimAutoreleasedReturnValue();
  v134[0] = v131;
  v133[1] = CFSTR("Flags");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v15, (v4 << 16) | (v5 << 8) | v6, v16, v17);
  v103 = (void *)objc_claimAutoreleasedReturnValue();
  v134[1] = v103;
  v133[2] = CFSTR("CreationTime");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v18, v7, v19, v20);
  v102 = (void *)objc_claimAutoreleasedReturnValue();
  v134[2] = v102;
  v133[3] = CFSTR("ModificationTime");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v21, v8, v22, v23);
  v101 = (void *)objc_claimAutoreleasedReturnValue();
  v134[3] = v101;
  v133[4] = CFSTR("TimeScale");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v24, v9, v25, v26);
  v100 = (void *)objc_claimAutoreleasedReturnValue();
  v134[4] = v100;
  v133[5] = CFSTR("Duration");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v27, v10, v28, v29);
  v99 = (void *)objc_claimAutoreleasedReturnValue();
  v134[5] = v99;
  v133[6] = CFSTR("PreferredRate");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v30, v129, v31, v32);
  v130 = (void *)objc_claimAutoreleasedReturnValue();
  v134[6] = v130;
  v133[7] = CFSTR("PreferredVolume");
  objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v33, v127, v34, v35);
  v128 = (void *)objc_claimAutoreleasedReturnValue();
  v134[7] = v128;
  v133[8] = CFSTR("Matrix");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v36, v125, v37, v38);
  v126 = (void *)objc_claimAutoreleasedReturnValue();
  v132[0] = v126;
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v39, v123, v40, v41);
  v124 = (void *)objc_claimAutoreleasedReturnValue();
  v132[1] = v124;
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v42, v121, v43, v44);
  v122 = (void *)objc_claimAutoreleasedReturnValue();
  v132[2] = v122;
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v45, v119, v46, v47);
  v120 = (void *)objc_claimAutoreleasedReturnValue();
  v132[3] = v120;
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v48, v117, v49, v50);
  v118 = (void *)objc_claimAutoreleasedReturnValue();
  v132[4] = v118;
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v51, v115, v52, v53);
  v116 = (void *)objc_claimAutoreleasedReturnValue();
  v132[5] = v116;
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v54, v113, v55, v56);
  v114 = (void *)objc_claimAutoreleasedReturnValue();
  v132[6] = v114;
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v57, v111, v58, v59);
  v112 = (void *)objc_claimAutoreleasedReturnValue();
  v132[7] = v112;
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v60, v110, v61, v62);
  v63 = (void *)objc_claimAutoreleasedReturnValue();
  v132[8] = v63;
  objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v64, (uint64_t)v132, 9, v65);
  v66 = (void *)objc_claimAutoreleasedReturnValue();
  v134[8] = v66;
  v133[9] = CFSTR("PreviewTime");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v67, v109, v68, v69);
  v70 = (void *)objc_claimAutoreleasedReturnValue();
  v71 = v11;
  v134[9] = v70;
  v133[10] = CFSTR("PreviewDuration");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v72, v108, v73, v74);
  v75 = (void *)objc_claimAutoreleasedReturnValue();
  v134[10] = v75;
  v133[11] = CFSTR("PosterTime");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v76, v107, v77, v78);
  v79 = (void *)objc_claimAutoreleasedReturnValue();
  v134[11] = v79;
  v133[12] = CFSTR("SelectionTime");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v80, v106, v81, v82);
  v83 = (void *)objc_claimAutoreleasedReturnValue();
  v134[12] = v83;
  v133[13] = CFSTR("SelectionDuration");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v84, v105, v85, v86);
  v87 = (void *)objc_claimAutoreleasedReturnValue();
  v134[13] = v87;
  v133[14] = CFSTR("CurrentTime");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v88, v104, v89, v90);
  v91 = (void *)objc_claimAutoreleasedReturnValue();
  v134[14] = v91;
  v133[15] = CFSTR("NextTrackID");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v92, v71, v93, v94);
  v95 = (void *)objc_claimAutoreleasedReturnValue();
  v134[15] = v95;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v96, (uint64_t)v134, (uint64_t)v133, 16);
  v97 = (void *)objc_claimAutoreleasedReturnValue();

  return v97;
}

void sub_1D52CD424(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20,void *a21,void *a22,void *a23,void *a24,void *a25,void *a26,void *a27,void *a28,void *a29)
{
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;

  _Unwind_Resume(a1);
}

id sub_1D52CD59C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  int v4;
  int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  const char *v33;
  uint64_t v34;
  uint64_t v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  const char *v45;
  uint64_t v46;
  uint64_t v47;
  const char *v48;
  uint64_t v49;
  uint64_t v50;
  const char *v51;
  uint64_t v52;
  uint64_t v53;
  const char *v54;
  uint64_t v55;
  uint64_t v56;
  const char *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  const char *v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  const char *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  const char *v70;
  uint64_t v71;
  void *v72;
  const char *v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  const char *v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  const char *v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  const char *v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  const char *v89;
  void *v90;
  void *v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  void *v104;
  unsigned int v105;
  void *v106;
  unsigned int v107;
  void *v108;
  unsigned int v109;
  void *v110;
  unsigned int v111;
  void *v112;
  unsigned int v113;
  void *v114;
  unsigned int v115;
  void *v116;
  unsigned int v117;
  void *v118;
  unsigned int v119;
  void *v120;
  void *v121;
  _QWORD v122[9];
  _QWORD v123[14];
  _QWORD v124[16];

  v124[14] = *MEMORY[0x1E0C80C00];
  v3 = sub_1D52846FC(*a2);
  v4 = sub_1D52846FC(*a2);
  v5 = sub_1D52846FC(*a2);
  v6 = sub_1D52846FC(*a2);
  v7 = sub_1D52847F8(*a2);
  v8 = sub_1D52847F8(*a2);
  v9 = sub_1D52847F8(*a2);
  sub_1D52847F8(*a2);
  v10 = sub_1D52847F8(*a2);
  sub_1D5284850(*a2);
  v119 = sub_1D528479C(*a2);
  v117 = sub_1D528479C(*a2);
  v115 = sub_1D528479C(*a2);
  sub_1D528479C(*a2);
  v113 = sub_1D52847F8(*a2);
  v111 = sub_1D52847F8(*a2);
  v109 = sub_1D52847F8(*a2);
  v107 = sub_1D52847F8(*a2);
  v105 = sub_1D52847F8(*a2);
  v103 = sub_1D52847F8(*a2);
  v102 = sub_1D52847F8(*a2);
  v101 = sub_1D52847F8(*a2);
  v100 = sub_1D52847F8(*a2);
  v99 = sub_1D528479C(*a2);
  v98 = sub_1D528479C(*a2);
  v97 = sub_1D528479C(*a2);
  v11 = sub_1D528479C(*a2);
  v123[0] = CFSTR("Version");
  objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v12, v3, v13, v14);
  v121 = (void *)objc_claimAutoreleasedReturnValue();
  v124[0] = v121;
  v123[1] = CFSTR("Flags");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v15, (v4 << 16) | (v5 << 8) | v6, v16, v17);
  v96 = (void *)objc_claimAutoreleasedReturnValue();
  v124[1] = v96;
  v123[2] = CFSTR("CreationTime");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v18, v7, v19, v20);
  v95 = (void *)objc_claimAutoreleasedReturnValue();
  v124[2] = v95;
  v123[3] = CFSTR("ModificationTime");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v21, v8, v22, v23);
  v94 = (void *)objc_claimAutoreleasedReturnValue();
  v124[3] = v94;
  v123[4] = CFSTR("TrackID");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v24, v9, v25, v26);
  v93 = (void *)objc_claimAutoreleasedReturnValue();
  v124[4] = v93;
  v123[5] = CFSTR("Duration");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v27, v10, v28, v29);
  v92 = (void *)objc_claimAutoreleasedReturnValue();
  v124[5] = v92;
  v123[6] = CFSTR("Layer");
  objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v30, v119, v31, v32);
  v120 = (void *)objc_claimAutoreleasedReturnValue();
  v124[6] = v120;
  v123[7] = CFSTR("AlternateGroup");
  objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v33, v117, v34, v35);
  v118 = (void *)objc_claimAutoreleasedReturnValue();
  v124[7] = v118;
  v123[8] = CFSTR("Volume");
  objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v36, v115, v37, v38);
  v116 = (void *)objc_claimAutoreleasedReturnValue();
  v124[8] = v116;
  v123[9] = CFSTR("Matrix");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v39, v113, v40, v41);
  v114 = (void *)objc_claimAutoreleasedReturnValue();
  v122[0] = v114;
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v42, v111, v43, v44);
  v112 = (void *)objc_claimAutoreleasedReturnValue();
  v122[1] = v112;
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v45, v109, v46, v47);
  v110 = (void *)objc_claimAutoreleasedReturnValue();
  v122[2] = v110;
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v48, v107, v49, v50);
  v108 = (void *)objc_claimAutoreleasedReturnValue();
  v122[3] = v108;
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v51, v105, v52, v53);
  v106 = (void *)objc_claimAutoreleasedReturnValue();
  v122[4] = v106;
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v54, v103, v55, v56);
  v104 = (void *)objc_claimAutoreleasedReturnValue();
  v122[5] = v104;
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v57, v102, v58, v59);
  v60 = (void *)objc_claimAutoreleasedReturnValue();
  v122[6] = v60;
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v61, v101, v62, v63);
  v64 = (void *)objc_claimAutoreleasedReturnValue();
  v65 = v11;
  v122[7] = v64;
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v66, v100, v67, v68);
  v69 = (void *)objc_claimAutoreleasedReturnValue();
  v122[8] = v69;
  objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v70, (uint64_t)v122, 9, v71);
  v72 = (void *)objc_claimAutoreleasedReturnValue();
  v124[9] = v72;
  v123[10] = CFSTR("TrackWidth");
  objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v73, v99, v74, v75);
  v76 = (void *)objc_claimAutoreleasedReturnValue();
  v124[10] = v76;
  v123[11] = CFSTR("TrackWidthQ");
  objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v77, v98, v78, v79);
  v80 = (void *)objc_claimAutoreleasedReturnValue();
  v124[11] = v80;
  v123[12] = CFSTR("TrackHeight");
  objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v81, v97, v82, v83);
  v84 = (void *)objc_claimAutoreleasedReturnValue();
  v124[12] = v84;
  v123[13] = CFSTR("TrackHeightQ");
  objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v85, v65, v86, v87);
  v88 = (void *)objc_claimAutoreleasedReturnValue();
  v124[13] = v88;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v89, (uint64_t)v124, (uint64_t)v123, 14);
  v90 = (void *)objc_claimAutoreleasedReturnValue();

  return v90;
}

void sub_1D52CDAEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, void *a19, void *a20,void *a21,void *a22,void *a23,void *a24,void *a25,void *a26,void *a27)
{
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;

  _Unwind_Resume(a1);
}

id sub_1D52CDC48(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const char *v23;
  void *v24;
  _QWORD v26[4];
  _QWORD v27[5];

  v27[4] = *MEMORY[0x1E0C80C00];
  v4 = sub_1D52846FC(*a2);
  v5 = sub_1D52846FC(*a2);
  v6 = sub_1D52846FC(*a2);
  v7 = sub_1D52846FC(*a2);
  v8 = sub_1D52847F8(*a2);
  v9 = sub_1D52847F8(*a2);
  sub_1D52C9450(a1, a2, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v26[0] = CFSTR("Version");
  objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v11, v4, v12, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v27[0] = v14;
  v26[1] = CFSTR("Flags");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v15, (v5 << 16) | (v6 << 8) | v7, v16, v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v27[1] = v18;
  v26[2] = CFSTR("MainShootingMode");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v19, v8, v20, v21);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v26[3] = CFSTR("boxes");
  v27[2] = v22;
  v27[3] = v10;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v23, (uint64_t)v27, (uint64_t)v26, 4);
  v24 = (void *)objc_claimAutoreleasedReturnValue();

  return v24;
}

void sub_1D52CDDC8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

id sub_1D52CDE04(uint64_t a1, char *a2)
{
  void *v3;
  void *v4;

  sub_1D52D4F34(a1, a2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D52D3BEC((uint64_t)v3, (uint64_t *)a2, v3, 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

void sub_1D52CDE4C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_1D52CDE5C(uint64_t a1, char *a2)
{
  void *v3;
  void *v4;

  sub_1D52D06F8(a1, a2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D52D3BEC((uint64_t)v3, (uint64_t *)a2, v3, 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

void sub_1D52CDEA4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_1D52CDEB4(uint64_t a1, uint64_t *a2)
{
  void *v3;
  void *v4;

  sub_1D52D15D8();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D52D3BEC((uint64_t)v3, a2, v3, 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

void sub_1D52CDEFC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_1D52CDF0C(uint64_t a1, char *a2)
{
  void *v3;
  void *v4;

  sub_1D52D543C(a1, a2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D52D3BEC((uint64_t)v3, (uint64_t *)a2, v3, 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

void sub_1D52CDF54(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_1D52CDF64(uint64_t a1, uint64_t *a2)
{
  int v3;
  int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  const char *v31;
  void *v32;
  int v34;
  unsigned int v35;
  _QWORD v36[5];
  _QWORD v37[6];

  v37[5] = *MEMORY[0x1E0C80C00];
  sub_1D52846FC(*a2);
  v3 = sub_1D52846FC(*a2);
  v4 = sub_1D52846FC(*a2);
  v5 = sub_1D52846FC(*a2);
  v6 = sub_1D528479C(*a2);
  v7 = sub_1D528479C(*a2);
  v8 = sub_1D52847F8(*a2);
  sub_1D528479C(*a2);
  sub_1D528479C(*a2);
  v9 = sub_1D5284608(*a2);
  v34 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 48))(*a2);
  v35 = v9;
  v35 = *sub_1D5284C34(&v35, &v34);
  v10 = sub_1D52ADF28(&v35);
  v36[0] = CFSTR("Flags");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v11, (v3 << 16) | (v4 << 8) | v5, v12, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v37[0] = v14;
  v36[1] = CFSTR("thumbnailWidth");
  objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v15, v6, v16, v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v37[1] = v18;
  v36[2] = CFSTR("thumbnailHeight");
  objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v19, v7, v20, v21);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v37[2] = v22;
  v36[3] = CFSTR("thumbnailOffset");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v23, v10, v24, v25);
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  v37[3] = v26;
  v36[4] = CFSTR("thumbnailLength");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v27, v8, v28, v29);
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  v37[4] = v30;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v31, (uint64_t)v37, (uint64_t)v36, 5);
  v32 = (void *)objc_claimAutoreleasedReturnValue();

  return v32;
}

void sub_1D52CE164(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

id sub_1D52CE1AC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  void *v25;
  int v27;
  unsigned int v28;
  _QWORD v29[4];
  _QWORD v30[5];

  v30[4] = *MEMORY[0x1E0C80C00];
  sub_1D52847F8(*a2);
  sub_1D528479C(*a2);
  v3 = sub_1D528479C(*a2);
  v4 = sub_1D528479C(*a2);
  sub_1D528479C(*a2);
  v5 = sub_1D52847F8(*a2);
  v6 = sub_1D5284608(*a2);
  v27 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 48))(*a2);
  v28 = v6;
  v28 = *sub_1D5284C34(&v28, &v27);
  v7 = sub_1D52ADF28(&v28);
  v29[0] = CFSTR("previewWidth");
  objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v8, v3, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v30[0] = v11;
  v29[1] = CFSTR("previewHeight");
  objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v12, v4, v13, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v30[1] = v15;
  v29[2] = CFSTR("previewOffset");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v16, v7, v17, v18);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v30[2] = v19;
  v29[3] = CFSTR("previewLength");
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v20, v5, v21, v22);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v30[3] = v23;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v24, (uint64_t)v30, (uint64_t)v29, 4);
  v25 = (void *)objc_claimAutoreleasedReturnValue();

  return v25;
}

void sub_1D52CE350(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

id sub_1D52CE38C(uint64_t a1, uint64_t *a2, void *a3)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const char *v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const char *v32;
  uint64_t v33;
  void *v34;
  void *v35;
  unint64_t v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  const char *v44;
  uint64_t v45;
  void *v46;
  unint64_t v47;
  const char *v48;
  uint64_t v49;
  uint64_t v50;
  const char *v51;
  uint64_t v52;
  const char *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  const char *v57;
  const char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t i;
  void *v64;
  const char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  const char *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  const char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  std::__shared_weak_count *v78;
  unint64_t *p_shared_owners;
  unint64_t v80;
  const char *v81;
  uint64_t v82;
  uint64_t v83;
  std::__shared_weak_count *v84;
  unint64_t *v85;
  unint64_t v86;
  void *v87;
  const char *v88;
  uint64_t v89;
  const char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t j;
  void *v94;
  void *v95;
  const char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  const char *v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  const char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  int v110;
  std::__shared_weak_count *v111;
  unint64_t *v112;
  unint64_t v113;
  int v114;
  std::__shared_weak_count *v115;
  unint64_t *v116;
  unint64_t v117;
  uint64_t v118;
  __n128 v119;
  std::__shared_weak_count *v120;
  unint64_t *v121;
  unint64_t v122;
  unsigned int v123;
  unsigned int v124;
  double v125;
  const char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  const char *v131;
  void *v132;
  const char *v133;
  uint64_t v134;
  uint64_t v135;
  std::__shared_weak_count *v136;
  unint64_t *v137;
  unint64_t v138;
  const char *v139;
  void *v140;
  void *v141;
  const char *v142;
  const char *v143;
  uint64_t v144;
  int v145;
  uint64_t v146;
  const char *v147;
  uint64_t v148;
  uint64_t v149;
  double v150;
  void *v151;
  const char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  const char *v157;
  uint64_t v158;
  uint64_t v159;
  void *v160;
  uint64_t v161;
  void *v162;
  const char *v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  const char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  void *v171;
  const char *v172;
  uint64_t v173;
  std::__shared_weak_count *v174;
  unint64_t *v175;
  unint64_t v176;
  unsigned int v177;
  unsigned int v178;
  double v179;
  const char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  void *v184;
  const char *v185;
  void *v186;
  const char *v187;
  uint64_t v188;
  unsigned int v189;
  double v190;
  const char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  void *v195;
  const char *v196;
  void *v197;
  const char *v198;
  uint64_t v199;
  uint64_t v200;
  const char *v201;
  uint64_t v202;
  uint64_t v203;
  const char *v204;
  const char *v205;
  uint64_t v206;
  const char *v207;
  void *v208;
  void *v209;
  const char *v210;
  const char *v211;
  uint64_t v212;
  int v213;
  uint64_t v214;
  const char *v215;
  uint64_t v216;
  uint64_t v217;
  double v218;
  void *v219;
  const char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  void *v224;
  const char *v225;
  uint64_t v226;
  uint64_t v227;
  void *v228;
  uint64_t v229;
  void *v230;
  const char *v231;
  uint64_t v232;
  uint64_t v233;
  void *v234;
  const char *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  void *v239;
  const char *v240;
  uint64_t v241;
  std::__shared_weak_count *v242;
  unint64_t *v243;
  unint64_t v244;
  const char *v245;
  void *v246;
  void *v247;
  const char *v248;
  const char *v249;
  uint64_t v250;
  int v251;
  uint64_t v252;
  const char *v253;
  uint64_t v254;
  uint64_t v255;
  double v256;
  void *v257;
  const char *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  void *v262;
  const char *v263;
  uint64_t v264;
  uint64_t v265;
  void *v266;
  uint64_t v267;
  void *v268;
  const char *v269;
  uint64_t v270;
  uint64_t v271;
  void *v272;
  const char *v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  void *v277;
  const char *v278;
  uint64_t v279;
  std::__shared_weak_count *v280;
  unint64_t *v281;
  unint64_t v282;
  unint64_t *v283;
  void *v285;
  void *v286;
  void *v287;
  void *exception;
  id v289;
  void *v290;
  void *v291;
  uint64_t v292;
  uint64_t v293;
  int v294;
  __int128 v295;
  __int128 v296;
  __int128 v297;
  __int128 v298;
  __int128 v299;
  __int128 v300;
  uint64_t v301;
  std::__shared_weak_count *v302;
  uint64_t v303[3];
  uint64_t v304;
  __int128 v305;
  __int128 v306;
  __int128 v307;
  __int128 v308;
  _QWORD v309[2];
  _QWORD v310[2];
  _QWORD v311[2];
  _QWORD v312[2];
  _QWORD v313[2];
  _QWORD v314[2];
  const __CFString *v315;
  void *v316;
  const __CFString *v317;
  void *v318;
  const __CFString *v319;
  void *v320;
  const __CFString *v321;
  void *v322;
  _BYTE v323[128];
  _BYTE v324[128];
  uint64_t v325;

  v325 = *MEMORY[0x1E0C80C00];
  v289 = a3;
  objc_msgSend_dictionary(MEMORY[0x1E0C99E08], v5, v6, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_dictionary(MEMORY[0x1E0C99E08], v10, v11, v12, v13);
  v14 = objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(v9, v15, v14, (uint64_t)CFSTR("Metadata"), v16);
  v17 = sub_1D52846FC(*a2);
  v290 = (void *)v14;
  v18 = sub_1D52846FC(*a2);
  v19 = sub_1D52846FC(*a2);
  v20 = sub_1D52846FC(*a2);
  v21 = sub_1D52847F8(*a2);
  objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v22, v17, v23, v24);
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(v9, v26, (uint64_t)v25, (uint64_t)CFSTR("version"), v27);

  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v28, (v18 << 16) | (v19 << 8) | v20, v29, v30);
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(v9, v32, (uint64_t)v31, (uint64_t)CFSTR("flags"), v33);

  if (v21 < 2)
  {
    v46 = (void *)MEMORY[0x1E0CB37E8];
    v47 = sub_1D5284850(*a2);
    objc_msgSend_numberWithUnsignedLongLong_(v46, v48, v47, v49, v50);
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(v9, v51, (uint64_t)v34, (uint64_t)CFSTR("offset"), v52);
  }
  else
  {
    sub_1D52B261C(v21);
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    do
    {
      v35 = (void *)MEMORY[0x1E0CB37E8];
      v36 = sub_1D5284850(*a2);
      objc_msgSend_numberWithUnsignedLongLong_(v35, v37, v36, v38, v39);
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_addObject_(v34, v41, (uint64_t)v40, v42, v43);

      --v21;
    }
    while (v21);
    objc_msgSend_setObject_forKeyedSubscript_(v9, v44, (uint64_t)v34, (uint64_t)CFSTR("offset"), v45);
  }

  v308 = 0u;
  v307 = 0u;
  v306 = 0u;
  v305 = 0u;
  objc_msgSend_objectForKeyedSubscript_(v289, v53, (uint64_t)CFSTR("Tags"), v54, v55);
  v56 = (void *)objc_claimAutoreleasedReturnValue();
  v61 = objc_msgSend_countByEnumeratingWithState_objects_count_(v56, v57, (uint64_t)&v305, (uint64_t)v324, 16);
  if (v61)
  {
    v62 = *(_QWORD *)v306;
    do
    {
      for (i = 0; i != v61; ++i)
      {
        if (*(_QWORD *)v306 != v62)
          objc_enumerationMutation(v56);
        objc_msgSend_objectForKeyedSubscript_(*(void **)(*((_QWORD *)&v305 + 1) + 8 * i), v58, (uint64_t)CFSTR("tagSize"), v59, v60);
        v64 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_unsignedIntValue(v64, v65, v66, v67, v68);

      }
      v61 = objc_msgSend_countByEnumeratingWithState_objects_count_(v56, v58, (uint64_t)&v305, (uint64_t)v324, 16);
    }
    while (v61);
  }

  objc_msgSend_objectForKeyedSubscript_(v9, v69, (uint64_t)CFSTR("offset"), v70, v71);
  v72 = (void *)objc_claimAutoreleasedReturnValue();
  v77 = objc_msgSend_unsignedLongLongValue(v72, v73, v74, v75, v76);

  v304 = v77;
  if (v77)
  {
    sub_1D52917E4(a1, &v301);
    sub_1D5282FE0(&v300, (unint64_t *)&v304);
    sub_1D5285164(v303, &v301, (uint64_t)&v300, 0);
    v78 = v302;
    if (v302)
    {
      p_shared_owners = (unint64_t *)&v302->__shared_owners_;
      do
        v80 = __ldaxr(p_shared_owners);
      while (__stlxr(v80 - 1, p_shared_owners));
      if (!v80)
      {
        ((void (*)(std::__shared_weak_count *))v78->__on_zero_shared)(v78);
        std::__shared_weak_count::__release_weak(v78);
      }
    }
    sub_1D52917E4(a1, &v300);
    sub_1D5293C20(&v301, (uint64_t *)&v300, 1);
    v84 = (std::__shared_weak_count *)*((_QWORD *)&v300 + 1);
    if (*((_QWORD *)&v300 + 1))
    {
      v85 = (unint64_t *)(*((_QWORD *)&v300 + 1) + 8);
      do
        v86 = __ldaxr(v85);
      while (__stlxr(v86 - 1, v85));
      if (!v86)
      {
        ((void (*)(std::__shared_weak_count *))v84->__on_zero_shared)(v84);
        std::__shared_weak_count::__release_weak(v84);
      }
    }
    v296 = 0u;
    v297 = 0u;
    v298 = 0u;
    v299 = 0u;
    objc_msgSend_objectForKeyedSubscript_(v289, v81, (uint64_t)CFSTR("Tags"), v82, v83);
    v87 = (void *)objc_claimAutoreleasedReturnValue();
    v89 = objc_msgSend_countByEnumeratingWithState_objects_count_(v87, v88, (uint64_t)&v296, (uint64_t)v323, 16);
    if (v89)
    {
      v291 = v87;
      v292 = *(_QWORD *)v297;
      do
      {
        v293 = v89;
        for (j = 0; j != v293; ++j)
        {
          if (*(_QWORD *)v297 != v292)
            objc_enumerationMutation(v87);
          v94 = *(void **)(*((_QWORD *)&v296 + 1) + 8 * j);
          objc_msgSend_objectForKeyedSubscript_(v94, v90, (uint64_t)CFSTR("tagSize"), v91, v92);
          v95 = (void *)objc_claimAutoreleasedReturnValue();
          v100 = objc_msgSend_unsignedIntValue(v95, v96, v97, v98, v99);

          objc_msgSend_objectForKeyedSubscript_(v94, v101, (uint64_t)CFSTR("tagID"), v102, v103);
          v104 = (void *)objc_claimAutoreleasedReturnValue();
          v109 = objc_msgSend_unsignedIntValue(v104, v105, v106, v107, v108);

          sub_1D52917E4(a1, &v300);
          v110 = sub_1D52847F8(v300);
          v111 = (std::__shared_weak_count *)*((_QWORD *)&v300 + 1);
          if (*((_QWORD *)&v300 + 1))
          {
            v112 = (unint64_t *)(*((_QWORD *)&v300 + 1) + 8);
            do
              v113 = __ldaxr(v112);
            while (__stlxr(v113 - 1, v112));
            if (!v113)
            {
              ((void (*)(std::__shared_weak_count *))v111->__on_zero_shared)(v111);
              std::__shared_weak_count::__release_weak(v111);
            }
          }
          sub_1D52917E4(a1, &v300);
          v114 = sub_1D528479C(v300);
          v115 = (std::__shared_weak_count *)*((_QWORD *)&v300 + 1);
          if (*((_QWORD *)&v300 + 1))
          {
            v116 = (unint64_t *)(*((_QWORD *)&v300 + 1) + 8);
            do
              v117 = __ldaxr(v116);
            while (__stlxr(v117 - 1, v116));
            if (!v117)
            {
              ((void (*)(std::__shared_weak_count *))v115->__on_zero_shared)(v115);
              std::__shared_weak_count::__release_weak(v115);
            }
          }
          if (v100 != v110 || v109 != v114)
          {
            sub_1D52917E4(a1, &v300);
            v135 = v300;
            v294 = v110 - 6;
            sub_1D5282F74((int *)&v295, &v294);
            (*(void (**)(uint64_t, __int128 *, uint64_t))(*(_QWORD *)v135 + 40))(v135, &v295, 1);
            v136 = (std::__shared_weak_count *)*((_QWORD *)&v300 + 1);
            if (!*((_QWORD *)&v300 + 1))
              goto LABEL_87;
            v137 = (unint64_t *)(*((_QWORD *)&v300 + 1) + 8);
            do
              v138 = __ldaxr(v137);
            while (__stlxr(v138 - 1, v137));
            goto LABEL_85;
          }
          sub_1D52917E4(a1, &v295);
          v294 = v100 - 6;
          v119.n128_f64[0] = sub_1D5284F48(v295, &v294, &v300);
          v120 = (std::__shared_weak_count *)*((_QWORD *)&v295 + 1);
          if (*((_QWORD *)&v295 + 1))
          {
            v121 = (unint64_t *)(*((_QWORD *)&v295 + 1) + 8);
            do
              v122 = __ldaxr(v121);
            while (__stlxr(v122 - 1, v121));
            if (!v122)
            {
              ((void (*)(std::__shared_weak_count *, __n128))v120->__on_zero_shared)(v120, v119);
              std::__shared_weak_count::__release_weak(v120);
            }
          }
          if (!(_QWORD)v300)
          {
            exception = __cxa_allocate_exception(0x10uLL);
            MEMORY[0x1D8271938](exception, "RawCameraException");
            __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
          }
          switch(v114)
          {
            case 4:
              LODWORD(v295) = 6;
              (*(void (**)(__n128))(*(_QWORD *)v300 + 40))(v119);
              v123 = sub_1D528479C(v300);
              v124 = sub_1D528479C(v300);
              v321 = CFSTR("FocalLength");
              *(float *)&v125 = (float)v123 / (float)v124;
              objc_msgSend_numberWithFloat_(MEMORY[0x1E0CB37E8], v126, v127, v128, v129, v125);
              v130 = (void *)objc_claimAutoreleasedReturnValue();
              v322 = v130;
              objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v131, (uint64_t)&v322, (uint64_t)&v321, 1);
              v132 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend_setObject_forKeyedSubscript_(v290, v133, (uint64_t)v132, (uint64_t)CFSTR("FocalInfo"), v134);
              goto LABEL_81;
            case 5:
              LODWORD(v295) = 6;
              (*(void (**)(__n128))(*(_QWORD *)v300 + 40))(v119);
              v177 = sub_1D528479C(v300);
              v178 = sub_1D528479C(v300);
              v319 = CFSTR("FNumber");
              *(float *)&v179 = (float)v177 / (float)v178;
              objc_msgSend_numberWithFloat_(MEMORY[0x1E0CB37E8], v180, v181, v182, v183, v179);
              v184 = (void *)objc_claimAutoreleasedReturnValue();
              v320 = v184;
              objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v185, (uint64_t)&v320, (uint64_t)&v319, 1);
              v186 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend_setObject_forKeyedSubscript_(v290, v187, (uint64_t)v186, (uint64_t)CFSTR("ExposureInfo"), v188);

              LODWORD(v184) = sub_1D528479C(v300);
              v189 = sub_1D528479C(v300);
              v317 = CFSTR("ExposureTime");
              *(float *)&v190 = (float)v184 / (float)v189;
              objc_msgSend_numberWithFloat_(MEMORY[0x1E0CB37E8], v191, v192, v193, v194, v190);
              v195 = (void *)objc_claimAutoreleasedReturnValue();
              v318 = v195;
              objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v196, (uint64_t)&v318, (uint64_t)&v317, 1);
              v197 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend_setObject_forKeyedSubscript_(v290, v198, (uint64_t)v197, (uint64_t)CFSTR("ExposureInfo"), v199);

              v200 = sub_1D52847F8(v300);
              v315 = CFSTR("ISO");
              objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v201, v200, v202, v203);
              v130 = (void *)objc_claimAutoreleasedReturnValue();
              v316 = v130;
              objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v204, (uint64_t)&v316, (uint64_t)&v315, 1);
              v132 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend_setObject_forKeyedSubscript_(v290, v205, (uint64_t)v132, (uint64_t)CFSTR("ExposureInfo"), v206);
              goto LABEL_81;
            case 7:
              objc_msgSend_dictionary(MEMORY[0x1E0C99E08], v90, v118, v91, v92, v119.n128_f64[0]);
              v130 = (void *)objc_claimAutoreleasedReturnValue();
              v313[0] = CFSTR("34665");
              sub_1D52D06F8((uint64_t)v130, v139);
              v140 = (void *)objc_claimAutoreleasedReturnValue();
              v313[1] = CFSTR("37500");
              v314[0] = v140;
              sub_1D52D15D8();
              v141 = (void *)objc_claimAutoreleasedReturnValue();
              v314[1] = v141;
              objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v142, (uint64_t)v314, (uint64_t)v313, 2);
              v132 = (void *)objc_claimAutoreleasedReturnValue();

              LODWORD(v295) = 6;
              (*(void (**)(_QWORD, __int128 *, uint64_t))(*(_QWORD *)v300 + 40))(v300, &v295, 1);
              while ((int)sub_1D52CAD30(v300) >= 9)
              {
                v145 = sub_1D52847F8(v300);
                v146 = sub_1D52847F8(v300);
                v294 = v145 - 8;
                v150 = sub_1D5284F48(v300, &v294, &v295);
                if (!(_QWORD)v295)
                {
                  v286 = __cxa_allocate_exception(0x10uLL);
                  MEMORY[0x1D8271938](v286, "RawCameraException");
                  __cxa_throw(v286, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
                }
                objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v147, v146, v148, v149, v150);
                v151 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend_stringValue(v151, v152, v153, v154, v155);
                v156 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend_objectForKeyedSubscript_(v132, v157, (uint64_t)v156, v158, v159);
                v160 = (void *)objc_claimAutoreleasedReturnValue();

                sub_1D52D3BEC(v161, (uint64_t *)&v295, v160, 0);
                v162 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v163, v146, v164, v165);
                v166 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend_stringValue(v166, v167, v168, v169, v170);
                v171 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend_setObject_forKeyedSubscript_(v130, v172, (uint64_t)v162, (uint64_t)v171, v173);

                v174 = (std::__shared_weak_count *)*((_QWORD *)&v295 + 1);
                if (*((_QWORD *)&v295 + 1))
                {
                  v175 = (unint64_t *)(*((_QWORD *)&v295 + 1) + 8);
                  do
                    v176 = __ldaxr(v175);
                  while (__stlxr(v176 - 1, v175));
                  if (!v176)
                  {
                    ((void (*)(std::__shared_weak_count *))v174->__on_zero_shared)(v174);
                    std::__shared_weak_count::__release_weak(v174);
                  }
                }
              }
              objc_msgSend_setObject_forKeyedSubscript_(v290, v143, (uint64_t)v130, (uint64_t)CFSTR("ExifInfo7"), v144);
              goto LABEL_81;
            case 8:
              objc_msgSend_dictionary(MEMORY[0x1E0C99E08], v90, v118, v91, v92, v119.n128_f64[0]);
              v130 = (void *)objc_claimAutoreleasedReturnValue();
              v311[0] = CFSTR("34665");
              sub_1D52D06F8((uint64_t)v130, v207);
              v208 = (void *)objc_claimAutoreleasedReturnValue();
              v311[1] = CFSTR("37500");
              v312[0] = v208;
              sub_1D52D15D8();
              v209 = (void *)objc_claimAutoreleasedReturnValue();
              v312[1] = v209;
              objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v210, (uint64_t)v312, (uint64_t)v311, 2);
              v132 = (void *)objc_claimAutoreleasedReturnValue();

              LODWORD(v295) = 6;
              (*(void (**)(_QWORD, __int128 *, uint64_t))(*(_QWORD *)v300 + 40))(v300, &v295, 1);
              while ((int)sub_1D52CAD30(v300) >= 9)
              {
                v213 = sub_1D52847F8(v300);
                v214 = sub_1D52847F8(v300);
                v294 = v213 - 8;
                v218 = sub_1D5284F48(v300, &v294, &v295);
                if (!(_QWORD)v295)
                {
                  v287 = __cxa_allocate_exception(0x10uLL);
                  MEMORY[0x1D8271938](v287, "RawCameraException");
                  __cxa_throw(v287, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
                }
                objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v215, v214, v216, v217, v218);
                v219 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend_stringValue(v219, v220, v221, v222, v223);
                v224 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend_objectForKeyedSubscript_(v132, v225, (uint64_t)v224, v226, v227);
                v228 = (void *)objc_claimAutoreleasedReturnValue();

                sub_1D52D3BEC(v229, (uint64_t *)&v295, v228, 0);
                v230 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v231, v214, v232, v233);
                v234 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend_stringValue(v234, v235, v236, v237, v238);
                v239 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend_setObject_forKeyedSubscript_(v130, v240, (uint64_t)v230, (uint64_t)v239, v241);

                v242 = (std::__shared_weak_count *)*((_QWORD *)&v295 + 1);
                if (*((_QWORD *)&v295 + 1))
                {
                  v243 = (unint64_t *)(*((_QWORD *)&v295 + 1) + 8);
                  do
                    v244 = __ldaxr(v243);
                  while (__stlxr(v244 - 1, v243));
                  if (!v244)
                  {
                    ((void (*)(std::__shared_weak_count *))v242->__on_zero_shared)(v242);
                    std::__shared_weak_count::__release_weak(v242);
                  }
                }
              }
              objc_msgSend_setObject_forKeyedSubscript_(v290, v211, (uint64_t)v130, (uint64_t)CFSTR("ExifInfo8"), v212);
              goto LABEL_81;
            case 9:
              objc_msgSend_dictionary(MEMORY[0x1E0C99E08], v90, v118, v91, v92, v119.n128_f64[0]);
              v130 = (void *)objc_claimAutoreleasedReturnValue();
              v309[0] = CFSTR("34665");
              sub_1D52D06F8((uint64_t)v130, v245);
              v246 = (void *)objc_claimAutoreleasedReturnValue();
              v309[1] = CFSTR("37500");
              v310[0] = v246;
              sub_1D52D15D8();
              v247 = (void *)objc_claimAutoreleasedReturnValue();
              v310[1] = v247;
              objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v248, (uint64_t)v310, (uint64_t)v309, 2);
              v132 = (void *)objc_claimAutoreleasedReturnValue();

              LODWORD(v295) = 6;
              (*(void (**)(_QWORD, __int128 *, uint64_t))(*(_QWORD *)v300 + 40))(v300, &v295, 1);
              while ((int)sub_1D52CAD30(v300) >= 9)
              {
                v251 = sub_1D52847F8(v300);
                v252 = sub_1D52847F8(v300);
                v294 = v251 - 8;
                v256 = sub_1D5284F48(v300, &v294, &v295);
                if (!(_QWORD)v295)
                {
                  v285 = __cxa_allocate_exception(0x10uLL);
                  MEMORY[0x1D8271938](v285, "RawCameraException");
                  __cxa_throw(v285, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
                }
                objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v253, v252, v254, v255, v256);
                v257 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend_stringValue(v257, v258, v259, v260, v261);
                v262 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend_objectForKeyedSubscript_(v132, v263, (uint64_t)v262, v264, v265);
                v266 = (void *)objc_claimAutoreleasedReturnValue();

                sub_1D52D3BEC(v267, (uint64_t *)&v295, v266, 0);
                v268 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v269, v252, v270, v271);
                v272 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend_stringValue(v272, v273, v274, v275, v276);
                v277 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend_setObject_forKeyedSubscript_(v130, v278, (uint64_t)v268, (uint64_t)v277, v279);

                v280 = (std::__shared_weak_count *)*((_QWORD *)&v295 + 1);
                if (*((_QWORD *)&v295 + 1))
                {
                  v281 = (unint64_t *)(*((_QWORD *)&v295 + 1) + 8);
                  do
                    v282 = __ldaxr(v281);
                  while (__stlxr(v282 - 1, v281));
                  if (!v282)
                  {
                    ((void (*)(std::__shared_weak_count *))v280->__on_zero_shared)(v280);
                    std::__shared_weak_count::__release_weak(v280);
                  }
                }
              }
              objc_msgSend_setObject_forKeyedSubscript_(v290, v249, (uint64_t)v130, (uint64_t)CFSTR("ExifInfo9"), v250);
LABEL_81:

              break;
            default:
              break;
          }
          v136 = (std::__shared_weak_count *)*((_QWORD *)&v300 + 1);
          if (*((_QWORD *)&v300 + 1))
          {
            v283 = (unint64_t *)(*((_QWORD *)&v300 + 1) + 8);
            do
              v138 = __ldaxr(v283);
            while (__stlxr(v138 - 1, v283));
LABEL_85:
            if (!v138)
            {
              ((void (*)(std::__shared_weak_count *))v136->__on_zero_shared)(v136);
              std::__shared_weak_count::__release_weak(v136);
            }
          }
LABEL_87:
          v87 = v291;
        }
        v89 = objc_msgSend_countByEnumeratingWithState_objects_count_(v291, v90, (uint64_t)&v296, (uint64_t)v323, 16);
      }
      while (v89);
    }

    sub_1D5293C98(&v301);
    sub_1D5285200(v303);
  }

  return v9;
}

void sub_1D52CF250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{

  _Unwind_Resume(a1);
}

id sub_1D52CF758(uint64_t a1, uint64_t *a2, void *a3)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  void *v26;
  unsigned int v27;
  void *v28;
  unint64_t v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  const char *v37;
  uint64_t v38;
  void *v39;
  unint64_t v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  const char *v44;
  uint64_t v45;
  const char *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  const char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  const char *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  const char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  std::__shared_weak_count *v64;
  unint64_t *v65;
  unint64_t v66;
  const char *v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  std::__shared_weak_count *v71;
  unint64_t *p_shared_owners;
  unint64_t v73;
  void *v74;
  const char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  const char *v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  const char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  const char *v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  const char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  const char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  const char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  int v104;
  BOOL v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  const char *v111;
  uint64_t v112;
  uint64_t v113;
  unsigned int v114;
  void *v115;
  const char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  const char *v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  const char *v124;
  uint64_t v125;
  const char *v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  const char *v130;
  uint64_t v131;
  void *v132;
  const char *v133;
  uint64_t v134;
  const char *v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  const char *v139;
  uint64_t v140;
  const char *v141;
  uint64_t v142;
  uint64_t v143;
  void *v144;
  const char *v145;
  uint64_t v146;
  const char *v147;
  uint64_t v148;
  uint64_t v149;
  void *v150;
  const char *v151;
  uint64_t v152;
  const char *v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  const char *v157;
  uint64_t v158;
  const char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  const char *v164;
  uint64_t v165;
  uint64_t v166;
  void *v167;
  uint64_t v168;
  id v169;
  const char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  const char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  const char *v180;
  uint64_t v181;
  uint64_t v182;
  void *v183;
  const char *v184;
  uint64_t v185;
  const char *v186;
  uint64_t v187;
  uint64_t v188;
  const char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  int v194;
  void *v195;
  uint64_t v196;
  uint64_t v197;
  int v199;
  uint64_t v200;
  uint64_t v201;
  unsigned int v202;
  const char *v203;
  uint64_t v204;
  uint64_t v205;
  void *v206;
  const char *v207;
  uint64_t v208;
  const char *v209;
  uint64_t v210;
  uint64_t v211;
  void *v212;
  const char *v213;
  uint64_t v214;
  const char *v215;
  uint64_t v216;
  uint64_t v217;
  void *v218;
  const char *v219;
  uint64_t v220;
  const char *v221;
  uint64_t v222;
  uint64_t v223;
  void *v224;
  const char *v225;
  uint64_t v226;
  const char *v227;
  uint64_t v228;
  uint64_t v229;
  void *v230;
  const char *v231;
  uint64_t v232;
  const char *v233;
  uint64_t v234;
  uint64_t v235;
  void *v236;
  const char *v237;
  uint64_t v238;
  const char *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  const char *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  void *v247;
  int v248;
  void *v249;
  uint64_t v250;
  uint64_t v251;
  int v253;
  uint64_t v254;
  uint64_t v255;
  const char *v256;
  uint64_t v257;
  uint64_t v258;
  void *v259;
  const char *v260;
  uint64_t v261;
  const char *v262;
  uint64_t v263;
  uint64_t v264;
  void *v265;
  const char *v266;
  uint64_t v267;
  const char *v268;
  uint64_t v269;
  uint64_t v270;
  void *v271;
  const char *v272;
  uint64_t v273;
  const char *v274;
  uint64_t v275;
  uint64_t v276;
  int v277;
  unsigned int v278;
  const char *v279;
  uint64_t v280;
  uint64_t v281;
  void *v282;
  const char *v283;
  uint64_t v284;
  const char *v285;
  uint64_t v286;
  uint64_t v287;
  void *v288;
  const char *v289;
  uint64_t v290;
  const char *v291;
  uint64_t v292;
  uint64_t v293;
  void *v294;
  const char *v295;
  uint64_t v296;
  const char *v297;
  uint64_t v298;
  uint64_t v299;
  void *v300;
  const char *v301;
  uint64_t v302;
  unsigned int v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  const char *v307;
  uint64_t v308;
  uint64_t v309;
  void *v310;
  const char *v311;
  uint64_t v312;
  const char *v313;
  uint64_t v314;
  uint64_t v315;
  void *v316;
  const char *v317;
  uint64_t v318;
  const char *v319;
  uint64_t v320;
  uint64_t v321;
  void *v322;
  const char *v323;
  uint64_t v324;
  const char *v325;
  uint64_t v326;
  uint64_t v327;
  const char *v328;
  uint64_t v329;
  const char *v330;
  uint64_t v331;
  uint64_t v332;
  const char *v333;
  uint64_t v334;
  uint64_t v335;
  char v336;
  std::__shared_weak_count *v337;
  unint64_t *v338;
  unint64_t v339;
  void *v340;
  id v341;
  void *v343;
  void *v344;
  void *exception;
  int v346;
  void *v347;
  int v348;
  id v349;
  void *v350;
  void *v351;
  int v352;
  int v353;
  void *v354;
  int v355;
  int v356;
  uint64_t v357;
  std::__shared_weak_count *v358;
  __int128 v359;
  uint64_t v360[3];
  uint64_t v361;

  v349 = a3;
  objc_msgSend_dictionary(MEMORY[0x1E0C99E08], v5, v6, v7, v8);
  v350 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = sub_1D52846FC(*a2);
  v10 = sub_1D52846FC(*a2);
  v11 = sub_1D52846FC(*a2);
  v12 = sub_1D52846FC(*a2);
  v13 = sub_1D52847F8(*a2);
  objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v14, v9, v15, v16);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(v350, v18, (uint64_t)v17, (uint64_t)CFSTR("version"), v19);

  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v20, (v10 << 16) | (v11 << 8) | v12, v21, v22);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(v350, v24, (uint64_t)v23, (uint64_t)CFSTR("flags"), v25);

  if (v13 < 2)
  {
    v39 = (void *)MEMORY[0x1E0CB37E8];
    v40 = sub_1D5284850(*a2);
    objc_msgSend_numberWithUnsignedLongLong_(v39, v41, v40, v42, v43);
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(v350, v44, (uint64_t)v26, (uint64_t)CFSTR("offset"), v45);
  }
  else
  {
    sub_1D52B261C(v13);
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    v27 = v13;
    do
    {
      v28 = (void *)MEMORY[0x1E0CB37E8];
      v29 = sub_1D5284850(*a2);
      objc_msgSend_numberWithUnsignedLongLong_(v28, v30, v29, v31, v32);
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_addObject_(v26, v34, (uint64_t)v33, v35, v36);

      --v27;
    }
    while (v27);
    objc_msgSend_setObject_forKeyedSubscript_(v350, v37, (uint64_t)v26, (uint64_t)CFSTR("offset"), v38);
  }

  if (!v349)
    goto LABEL_71;
  if (v13 != 1)
    goto LABEL_71;
  objc_msgSend_objectForKeyedSubscript_(v349, v46, (uint64_t)CFSTR("sub_header_part_length"), v47, v48);
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  v54 = objc_msgSend_unsignedIntValue(v49, v50, v51, v52, v53);

  objc_msgSend_objectForKeyedSubscript_(v350, v55, (uint64_t)CFSTR("offset"), v56, v57);
  v58 = (void *)objc_claimAutoreleasedReturnValue();
  v63 = objc_msgSend_unsignedLongLongValue(v58, v59, v60, v61, v62);

  v361 = v63;
  if (!v63)
    goto LABEL_71;
  sub_1D52917E4(a1, &v359);
  sub_1D5282FE0(&v357, (unint64_t *)&v361);
  sub_1D5285164(v360, (uint64_t *)&v359, (uint64_t)&v357, 0);
  v64 = (std::__shared_weak_count *)*((_QWORD *)&v359 + 1);
  if (*((_QWORD *)&v359 + 1))
  {
    v65 = (unint64_t *)(*((_QWORD *)&v359 + 1) + 8);
    do
      v66 = __ldaxr(v65);
    while (__stlxr(v66 - 1, v65));
    if (!v66)
    {
      ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
      std::__shared_weak_count::__release_weak(v64);
    }
  }
  sub_1D52917E4(a1, &v357);
  v356 = v54;
  v70.n128_f64[0] = sub_1D5284F48(v357, &v356, &v359);
  v71 = v358;
  if (v358)
  {
    p_shared_owners = (unint64_t *)&v358->__shared_owners_;
    do
      v73 = __ldaxr(p_shared_owners);
    while (__stlxr(v73 - 1, p_shared_owners));
    if (!v73)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v71->__on_zero_shared)(v71, v70);
      std::__shared_weak_count::__release_weak(v71);
    }
  }
  if (!(_QWORD)v359)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  objc_msgSend_objectForKeyedSubscript_(v349, v67, (uint64_t)CFSTR("tile_num"), v68, v69, v70.n128_f64[0]);
  v74 = (void *)objc_claimAutoreleasedReturnValue();
  v346 = objc_msgSend_unsignedIntValue(v74, v75, v76, v77, v78);

  objc_msgSend_objectForKeyedSubscript_(v349, v79, (uint64_t)CFSTR("plane_num"), v80, v81);
  v82 = (void *)objc_claimAutoreleasedReturnValue();
  v353 = objc_msgSend_unsignedIntValue(v82, v83, v84, v85, v86);

  objc_msgSend_objectForKeyedSubscript_(v349, v87, (uint64_t)CFSTR("dwt_level"), v88, v89);
  v90 = (void *)objc_claimAutoreleasedReturnValue();
  v352 = objc_msgSend_unsignedIntValue(v90, v91, v92, v93, v94);

  objc_msgSend_array(MEMORY[0x1E0C99DE8], v95, v96, v97, v98);
  v347 = (void *)objc_claimAutoreleasedReturnValue();
  if (v346)
  {
    v103 = 0;
    while (1)
    {
      objc_msgSend_dictionary(MEMORY[0x1E0C99E08], v99, v100, v101, v102);
      v351 = (void *)objc_claimAutoreleasedReturnValue();
      v104 = sub_1D528479C(v359);
      v105 = *(_DWORD *)(a1 + 728) != 256 || *(_BYTE *)(a1 + 732) == 0;
      v106 = v105 ? 65297 : 65281;
      if (v106 != v104)
        break;
      v107 = sub_1D528479C(v359);
      v108 = sub_1D52847F8(v359);
      v348 = v103;
      v109 = sub_1D528479C(v359);
      v110 = sub_1D52846FC(v359);
      sub_1D52846FC(v359);
      if (!*(_BYTE *)(a1 + 732))
        sub_1D5287C98();
      v114 = v110;
      if (*(_DWORD *)(a1 + 728) == 512)
      {
        objc_msgSend_numberWithBool_(MEMORY[0x1E0CB37E8], v111, (v110 >> 6) & 1, v112, v113);
        v115 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_setObject_forKeyedSubscript_(v351, v116, (uint64_t)v115, (uint64_t)CFSTR("tile_qpinfo_flag"), v117);

        if ((v110 & 0x40) != 0)
        {
          v118 = sub_1D52847F8(v359);
          v119 = sub_1D528479C(v359);
          objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v120, v118, v121, v122);
          v123 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_setObject_forKeyedSubscript_(v351, v124, (uint64_t)v123, (uint64_t)CFSTR("qp_data_length"), v125);

          objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v126, v119, v127, v128);
          v129 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_setObject_forKeyedSubscript_(v351, v130, (uint64_t)v129, (uint64_t)CFSTR("qp_stuffing_data_length"), v131);

          sub_1D528479C(v359);
        }
      }
      objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v111, v107, v112, v113);
      v132 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_setObject_forKeyedSubscript_(v351, v133, (uint64_t)v132, (uint64_t)CFSTR("tile_header_length"), v134);

      objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v135, v108, v136, v137);
      v138 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_setObject_forKeyedSubscript_(v351, v139, (uint64_t)v138, (uint64_t)CFSTR("tile_data_length"), v140);

      objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v141, v109, v142, v143);
      v144 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_setObject_forKeyedSubscript_(v351, v145, (uint64_t)v144, (uint64_t)CFSTR("tile_index"), v146);

      objc_msgSend_numberWithBool_(MEMORY[0x1E0CB37E8], v147, (v114 >> 7) & 1, v148, v149);
      v150 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_setObject_forKeyedSubscript_(v351, v151, (uint64_t)v150, (uint64_t)CFSTR("tile_extension_flag"), v152);

      objc_msgSend_numberWithBool_(MEMORY[0x1E0CB37E8], v153, (v114 >> 6) & 1, v154, v155);
      v156 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_setObject_forKeyedSubscript_(v351, v157, (uint64_t)v156, (uint64_t)CFSTR("tile_qpinfo_flag"), v158);

      if ((v114 & 0x80000000) != 0)
      {
        v163 = sub_1D52847F8(v359);
        objc_msgSend_dataWithLength_(MEMORY[0x1E0C99DF0], v164, v163, v165, v166);
        v167 = (void *)objc_claimAutoreleasedReturnValue();
        v168 = v359;
        v169 = objc_retainAutorelease(v167);
        v174 = objc_msgSend_mutableBytes(v169, v170, v171, v172, v173);
        v179 = objc_msgSend_length(v169, v175, v176, v177, v178);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v168 + 32))(v168, v174, v179);
        objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v180, v163, v181, v182);
        v183 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_setObject_forKeyedSubscript_(v351, v184, (uint64_t)v183, (uint64_t)CFSTR("tile_extension_header_data_length"), v185);

        objc_msgSend_setObject_forKeyedSubscript_(v351, v186, (uint64_t)v169, (uint64_t)CFSTR("tile_extension_header_data"), v187);
        if (((4 - (v163 & 3)) & 3) != 0)
        {
          v188 = 4 - (v163 & 3) - 1;
          do
            sub_1D52846FC(v359);
          while ((unint64_t)(v188-- & 3));
        }

      }
      objc_msgSend_array(MEMORY[0x1E0C99DE8], v159, v160, v161, v162);
      v354 = (void *)objc_claimAutoreleasedReturnValue();
      if (v353)
      {
        v194 = 0;
        while (1)
        {
          objc_msgSend_dictionary(MEMORY[0x1E0C99E08], v190, v191, v192, v193);
          v195 = (void *)objc_claimAutoreleasedReturnValue();
          v196 = sub_1D528479C(v359);
          v197 = v196;
          if (*(_DWORD *)(a1 + 728) != 256 || *(_BYTE *)(a1 + 732) == 0)
            v199 = 65298;
          else
            v199 = 65282;
          if (v199 != (_DWORD)v196)
          {
            v344 = __cxa_allocate_exception(0x10uLL);
            MEMORY[0x1D8271938](v344, "RawCameraException");
            __cxa_throw(v344, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
          }
          v200 = sub_1D528479C(v359);
          v201 = sub_1D52847F8(v359);
          v202 = sub_1D52846FC(v359);
          sub_1D52846FC(v359);
          sub_1D528479C(v359);
          objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v203, v197, v204, v205);
          v206 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_setObject_forKeyedSubscript_(v195, v207, (uint64_t)v206, (uint64_t)CFSTR("marker_code_plane_header"), v208);

          objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v209, v200, v210, v211);
          v212 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_setObject_forKeyedSubscript_(v195, v213, (uint64_t)v212, (uint64_t)CFSTR("plane_header_length"), v214);

          objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v215, v201, v216, v217);
          v218 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_setObject_forKeyedSubscript_(v195, v219, (uint64_t)v218, (uint64_t)CFSTR("plane_data_length"), v220);

          objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v221, v202 >> 4, v222, v223);
          v224 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_setObject_forKeyedSubscript_(v195, v225, (uint64_t)v224, (uint64_t)CFSTR("plane_index"), v226);

          objc_msgSend_numberWithBool_(MEMORY[0x1E0CB37E8], v227, (v202 >> 3) & 1, v228, v229);
          v230 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_setObject_forKeyedSubscript_(v195, v231, (uint64_t)v230, (uint64_t)CFSTR("dc_mode"), v232);

          objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v233, (v202 >> 1) & 3, v234, v235);
          v236 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_setObject_forKeyedSubscript_(v195, v237, (uint64_t)v236, (uint64_t)CFSTR("shift_value"), v238);
          v355 = v194;

          objc_msgSend_array(MEMORY[0x1E0C99DE8], v239, v240, v241, v242);
          v247 = (void *)objc_claimAutoreleasedReturnValue();
          v248 = 3 * v352 + 1;
          if (v352 != 1431655765)
            break;
LABEL_62:
          objc_msgSend_setObject_forKeyedSubscript_(v195, v243, (uint64_t)v247, (uint64_t)CFSTR("subband_headers"), v246);
          objc_msgSend_addObject_(v354, v330, (uint64_t)v195, v331, v332);

          v194 = v355 + 1;
          if (v355 + 1 == v353)
            goto LABEL_63;
        }
        while (2)
        {
          objc_msgSend_dictionary(MEMORY[0x1E0C99E08], v243, v244, v245, v246);
          v249 = (void *)objc_claimAutoreleasedReturnValue();
          v250 = sub_1D528479C(v359);
          v251 = v250;
          if (*(_DWORD *)(a1 + 728) != 256 || *(_BYTE *)(a1 + 732) == 0)
            v253 = 65299;
          else
            v253 = 65283;
          if (v253 != (_DWORD)v250)
          {
            v343 = __cxa_allocate_exception(0x10uLL);
            MEMORY[0x1D8271938](v343, "RawCameraException");
            __cxa_throw(v343, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
          }
          v254 = sub_1D528479C(v359);
          v255 = sub_1D52847F8(v359);
          objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v256, v251, v257, v258);
          v259 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_setObject_forKeyedSubscript_(v249, v260, (uint64_t)v259, (uint64_t)CFSTR("marker_code_subband_header"), v261);

          objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v262, v254, v263, v264);
          v265 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_setObject_forKeyedSubscript_(v249, v266, (uint64_t)v265, (uint64_t)CFSTR("subband_header_length"), v267);

          objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v268, v255, v269, v270);
          v271 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_setObject_forKeyedSubscript_(v249, v272, (uint64_t)v271, (uint64_t)CFSTR("subband_data_length"), v273);

          if (!*(_BYTE *)(a1 + 732))
            sub_1D5287C98();
          v277 = *(_DWORD *)(a1 + 728);
          if (v277 == 512)
          {
            v303 = sub_1D528479C(v359);
            v304 = sub_1D528479C(v359);
            v305 = sub_1D52847F8(v359);
            v306 = sub_1D528479C(v359);
            sub_1D528479C(v359);
            objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v307, v303 >> 12, v308, v309);
            v310 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_setObject_forKeyedSubscript_(v249, v311, (uint64_t)v310, (uint64_t)CFSTR("subband_index"), v312);

            objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v313, v306, v314, v315);
            v316 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_setObject_forKeyedSubscript_(v249, v317, (uint64_t)v316, (uint64_t)CFSTR("stuffing_data_length"), v318);

            objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v319, v304, v320, v321);
            v322 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_setObject_forKeyedSubscript_(v249, v323, (uint64_t)v322, (uint64_t)CFSTR("mtx_a"), v324);

            objc_msgSend_numberWithInt_(MEMORY[0x1E0CB37E8], v325, v305, v326, v327);
            v300 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_setObject_forKeyedSubscript_(v249, v328, (uint64_t)v300, (uint64_t)CFSTR("mtx_b"), v329);
LABEL_60:

          }
          else if (v277 == 256)
          {
            v278 = sub_1D52847F8(v359);
            objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v279, v278 >> 28, v280, v281);
            v282 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_setObject_forKeyedSubscript_(v249, v283, (uint64_t)v282, (uint64_t)CFSTR("subband_index"), v284);

            objc_msgSend_numberWithBool_(MEMORY[0x1E0CB37E8], v285, (v278 >> 27) & 1, v286, v287);
            v288 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_setObject_forKeyedSubscript_(v249, v289, (uint64_t)v288, (uint64_t)CFSTR("qp_variable"), v290);

            objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v291, (v278 >> 19), v292, v293);
            v294 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_setObject_forKeyedSubscript_(v249, v295, (uint64_t)v294, (uint64_t)CFSTR("ini_qp"), v296);

            objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v297, v278 & 0x7FFFF, v298, v299);
            v300 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_setObject_forKeyedSubscript_(v249, v301, (uint64_t)v300, (uint64_t)CFSTR("stuffing_data_length"), v302);
            goto LABEL_60;
          }
          objc_msgSend_addObject_(v247, v274, (uint64_t)v249, v275, v276);

          if (!--v248)
            goto LABEL_62;
          continue;
        }
      }
LABEL_63:
      objc_msgSend_setObject_forKeyedSubscript_(v351, v190, (uint64_t)v354, (uint64_t)CFSTR("plane_headers"), v193);
      objc_msgSend_addObject_(v347, v333, (uint64_t)v351, v334, v335);

      v103 = v348 + 1;
      if (v348 + 1 == v346)
        goto LABEL_64;
    }
    puts("Not the co64 we were looking for");

    v336 = 0;
  }
  else
  {
LABEL_64:
    objc_msgSend_setObject_forKeyedSubscript_(v350, v99, (uint64_t)v347, (uint64_t)CFSTR("tile_headers"), v102);
    v336 = 1;
  }

  v337 = (std::__shared_weak_count *)*((_QWORD *)&v359 + 1);
  if (*((_QWORD *)&v359 + 1))
  {
    v338 = (unint64_t *)(*((_QWORD *)&v359 + 1) + 8);
    do
      v339 = __ldaxr(v338);
    while (__stlxr(v339 - 1, v338));
    if (!v339)
    {
      ((void (*)(std::__shared_weak_count *))v337->__on_zero_shared)(v337);
      std::__shared_weak_count::__release_weak(v337);
    }
  }
  sub_1D5285200(v360);
  if ((v336 & 1) == 0)
  {
    v341 = 0;
    v340 = v350;
  }
  else
  {
LABEL_71:
    v340 = v350;
    v341 = v350;
  }

  return v341;
}

void sub_1D52D0420(_Unwind_Exception *a1, uint64_t a2, void *a3, uint64_t a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, std::__shared_weak_count *a15, ...)
{
  unint64_t *p_shared_owners;
  unint64_t v17;
  va_list va;

  va_start(va, a15);

  if (a15)
  {
    p_shared_owners = (unint64_t *)&a15->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))a15->__on_zero_shared)(a15);
      std::__shared_weak_count::__release_weak(a15);
    }
  }
  sub_1D5285200((uint64_t *)va);

  _Unwind_Resume(a1);
}

id sub_1D52D06F8(uint64_t a1, const char *a2)
{
  const char *v2;
  const char *v3;
  const char *v4;
  const char *v5;
  const char *v6;
  uint64_t v7;
  const char *v8;
  const char *v9;
  const char *v10;
  uint64_t v11;
  const char *v12;
  const char *v13;
  const char *v14;
  uint64_t v15;
  const char *v16;
  const char *v17;
  const char *v18;
  const char *v19;
  const char *v20;
  const char *v21;
  const char *v22;
  uint64_t v23;
  const char *v24;
  const char *v25;
  const char *v26;
  const char *v27;
  uint64_t v28;
  const char *v29;
  const char *v30;
  const char *v31;
  const char *v32;
  const char *v33;
  const char *v34;
  const char *v35;
  const char *v36;
  void *v37;
  const char *v38;
  void *v39;
  const char *v40;
  void *v41;
  const char *v42;
  void *v43;
  const char *v44;
  void *v45;
  const char *v46;
  void *v47;
  const char *v48;
  void *v49;
  const char *v50;
  void *v51;
  const char *v52;
  void *v53;
  const char *v54;
  id v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD v117[3];
  _QWORD v118[3];
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD v125[2];
  _QWORD v126[2];
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD v139[3];
  _QWORD v140[3];
  _QWORD v141[2];
  _QWORD v142[2];
  _QWORD v143[2];
  _QWORD v144[2];
  _QWORD v145[2];
  _QWORD v146[2];
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD v151[3];
  _QWORD v152[3];
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  _QWORD v165[39];
  _QWORD v166[41];

  v166[39] = *MEMORY[0x1E0C80C00];
  v165[0] = CFSTR("33434");
  v163 = qword_1EFF32380;
  v164 = *MEMORY[0x1E0CBCB78];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], a2, (uint64_t)&v164, (uint64_t)&v163, 1);
  v86 = (void *)objc_claimAutoreleasedReturnValue();
  v166[0] = v86;
  v165[1] = CFSTR("33437");
  v161 = qword_1EFF32380;
  v162 = *MEMORY[0x1E0CBCB80];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v2, (uint64_t)&v162, (uint64_t)&v161, 1);
  v85 = (void *)objc_claimAutoreleasedReturnValue();
  v166[1] = v85;
  v165[2] = CFSTR("34850");
  v159 = qword_1EFF32380;
  v160 = *MEMORY[0x1E0CBCB70];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v3, (uint64_t)&v160, (uint64_t)&v159, 1);
  v84 = (void *)objc_claimAutoreleasedReturnValue();
  v166[2] = v84;
  v165[3] = CFSTR("34855");
  v157 = qword_1EFF32380;
  v158 = *MEMORY[0x1E0CBCBC0];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v4, (uint64_t)&v158, (uint64_t)&v157, 1);
  v83 = (void *)objc_claimAutoreleasedReturnValue();
  v166[3] = v83;
  v165[4] = CFSTR("34864");
  v155 = qword_1EFF32380;
  v156 = *MEMORY[0x1E0CBCC60];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v5, (uint64_t)&v156, (uint64_t)&v155, 1);
  v82 = (void *)objc_claimAutoreleasedReturnValue();
  v166[4] = v82;
  v165[5] = CFSTR("34866");
  v153 = qword_1EFF32380;
  v154 = *MEMORY[0x1E0CBCC38];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v6, (uint64_t)&v154, (uint64_t)&v153, 1);
  v81 = (void *)objc_claimAutoreleasedReturnValue();
  v166[5] = v81;
  v165[6] = CFSTR("36864");
  v7 = *MEMORY[0x1E0CBCCB8];
  v151[0] = qword_1EFF32380;
  v151[1] = qword_1EFF32388;
  v152[0] = v7;
  v152[1] = &unk_1E99C8268;
  v151[2] = qword_1EFF32390;
  v152[2] = &unk_1E99744A0;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v8, (uint64_t)v152, (uint64_t)v151, 3);
  v80 = (void *)objc_claimAutoreleasedReturnValue();
  v166[6] = v80;
  v165[7] = CFSTR("36867");
  v149 = qword_1EFF32380;
  v150 = *MEMORY[0x1E0CBCB40];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v9, (uint64_t)&v150, (uint64_t)&v149, 1);
  v79 = (void *)objc_claimAutoreleasedReturnValue();
  v166[7] = v79;
  v165[8] = CFSTR("36868");
  v147 = qword_1EFF32380;
  v148 = *MEMORY[0x1E0CBCB38];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v10, (uint64_t)&v148, (uint64_t)&v147, 1);
  v78 = (void *)objc_claimAutoreleasedReturnValue();
  v166[8] = v78;
  v165[9] = CFSTR("36880");
  v145[0] = qword_1EFF32380;
  v145[1] = qword_1EFF32398;
  v11 = MEMORY[0x1E0C9AAB0];
  v146[0] = CFSTR("36880");
  v146[1] = MEMORY[0x1E0C9AAB0];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v12, (uint64_t)v146, (uint64_t)v145, 2);
  v77 = (void *)objc_claimAutoreleasedReturnValue();
  v166[9] = v77;
  v165[10] = CFSTR("36881");
  v143[0] = qword_1EFF32380;
  v143[1] = qword_1EFF32398;
  v144[0] = CFSTR("36881");
  v144[1] = v11;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v13, (uint64_t)v144, (uint64_t)v143, 2);
  v76 = (void *)objc_claimAutoreleasedReturnValue();
  v166[10] = v76;
  v165[11] = CFSTR("36882");
  v141[0] = qword_1EFF32380;
  v141[1] = qword_1EFF32398;
  v142[0] = CFSTR("36882");
  v142[1] = v11;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v14, (uint64_t)v142, (uint64_t)v141, 2);
  v75 = (void *)objc_claimAutoreleasedReturnValue();
  v166[11] = v75;
  v165[12] = CFSTR("37121");
  v15 = *MEMORY[0x1E0CBCB18];
  v139[0] = qword_1EFF32380;
  v139[1] = qword_1EFF32388;
  v140[0] = v15;
  v140[1] = &unk_1E99C8280;
  v139[2] = qword_1EFF32390;
  v140[2] = &unk_1E99744A0;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v16, (uint64_t)v140, (uint64_t)v139, 3);
  v74 = (void *)objc_claimAutoreleasedReturnValue();
  v166[12] = v74;
  v165[13] = CFSTR("37377");
  v137 = qword_1EFF32380;
  v138 = *MEMORY[0x1E0CBCC70];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v17, (uint64_t)&v138, (uint64_t)&v137, 1);
  v73 = (void *)objc_claimAutoreleasedReturnValue();
  v166[13] = v73;
  v165[14] = CFSTR("37378");
  v135 = qword_1EFF32380;
  v136 = *MEMORY[0x1E0CBCA20];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v18, (uint64_t)&v136, (uint64_t)&v135, 1);
  v72 = (void *)objc_claimAutoreleasedReturnValue();
  v166[14] = v72;
  v165[15] = CFSTR("37380");
  v133 = qword_1EFF32380;
  v134 = *MEMORY[0x1E0CBCB60];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v19, (uint64_t)&v134, (uint64_t)&v133, 1);
  v71 = (void *)objc_claimAutoreleasedReturnValue();
  v166[15] = v71;
  v165[16] = CFSTR("37383");
  v131 = qword_1EFF32380;
  v132 = *MEMORY[0x1E0CBCC08];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v20, (uint64_t)&v132, (uint64_t)&v131, 1);
  v70 = (void *)objc_claimAutoreleasedReturnValue();
  v166[16] = v70;
  v165[17] = CFSTR("37385");
  v129 = qword_1EFF32380;
  v130 = *MEMORY[0x1E0CBCB88];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v21, (uint64_t)&v130, (uint64_t)&v129, 1);
  v69 = (void *)objc_claimAutoreleasedReturnValue();
  v166[17] = v69;
  v165[18] = CFSTR("37386");
  v127 = qword_1EFF32380;
  v128 = *MEMORY[0x1E0CBCBA0];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v22, (uint64_t)&v128, (uint64_t)&v127, 1);
  v68 = (void *)objc_claimAutoreleasedReturnValue();
  v166[18] = v68;
  v165[19] = CFSTR("37510");
  v23 = *MEMORY[0x1E0CBCCB0];
  v125[0] = qword_1EFF32380;
  v125[1] = qword_1EFF32398;
  v126[0] = v23;
  v126[1] = v11;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v24, (uint64_t)v126, (uint64_t)v125, 2);
  v67 = (void *)objc_claimAutoreleasedReturnValue();
  v166[19] = v67;
  v165[20] = CFSTR("37520");
  v123 = qword_1EFF32380;
  v124 = *MEMORY[0x1E0CBCC90];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v25, (uint64_t)&v124, (uint64_t)&v123, 1);
  v66 = (void *)objc_claimAutoreleasedReturnValue();
  v166[20] = v66;
  v165[21] = CFSTR("37521");
  v121 = qword_1EFF32380;
  v122 = *MEMORY[0x1E0CBCCA0];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v26, (uint64_t)&v122, (uint64_t)&v121, 1);
  v65 = (void *)objc_claimAutoreleasedReturnValue();
  v166[21] = v65;
  v165[22] = CFSTR("37522");
  v119 = qword_1EFF32380;
  v120 = *MEMORY[0x1E0CBCC98];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v27, (uint64_t)&v120, (uint64_t)&v119, 1);
  v64 = (void *)objc_claimAutoreleasedReturnValue();
  v166[22] = v64;
  v165[23] = CFSTR("40960");
  v28 = *MEMORY[0x1E0CBCB90];
  v117[0] = qword_1EFF32380;
  v117[1] = qword_1EFF32388;
  v118[0] = v28;
  v118[1] = &unk_1E99C8298;
  v117[2] = qword_1EFF32390;
  v118[2] = &unk_1E99744A0;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v29, (uint64_t)v118, (uint64_t)v117, 3);
  v63 = (void *)objc_claimAutoreleasedReturnValue();
  v166[23] = v63;
  v165[24] = CFSTR("40961");
  v115 = qword_1EFF32380;
  v116 = *MEMORY[0x1E0CBCB10];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v30, (uint64_t)&v116, (uint64_t)&v115, 1);
  v62 = (void *)objc_claimAutoreleasedReturnValue();
  v166[24] = v62;
  v165[25] = CFSTR("40962");
  v113 = qword_1EFF32380;
  v114 = *MEMORY[0x1E0CBCC28];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v31, (uint64_t)&v114, (uint64_t)&v113, 1);
  v61 = (void *)objc_claimAutoreleasedReturnValue();
  v166[25] = v61;
  v165[26] = CFSTR("40963");
  v111 = qword_1EFF32380;
  v112 = *MEMORY[0x1E0CBCC30];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v32, (uint64_t)&v112, (uint64_t)&v111, 1);
  v60 = (void *)objc_claimAutoreleasedReturnValue();
  v166[26] = v60;
  v165[27] = CFSTR("41486");
  v109 = qword_1EFF32380;
  v110 = *MEMORY[0x1E0CBCBB0];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v33, (uint64_t)&v110, (uint64_t)&v109, 1);
  v59 = (void *)objc_claimAutoreleasedReturnValue();
  v166[27] = v59;
  v165[28] = CFSTR("41487");
  v107 = qword_1EFF32380;
  v108 = *MEMORY[0x1E0CBCBB8];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v34, (uint64_t)&v108, (uint64_t)&v107, 1);
  v58 = (void *)objc_claimAutoreleasedReturnValue();
  v166[28] = v58;
  v165[29] = CFSTR("41488");
  v105 = qword_1EFF32380;
  v106 = *MEMORY[0x1E0CBCBA8];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v35, (uint64_t)&v106, (uint64_t)&v105, 1);
  v57 = (void *)objc_claimAutoreleasedReturnValue();
  v166[29] = v57;
  v165[30] = CFSTR("41985");
  v103 = qword_1EFF32380;
  v104 = *MEMORY[0x1E0CBCB30];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v36, (uint64_t)&v104, (uint64_t)&v103, 1);
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  v166[30] = v37;
  v165[31] = CFSTR("41986");
  v101 = qword_1EFF32380;
  v102 = *MEMORY[0x1E0CBCB68];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v38, (uint64_t)&v102, (uint64_t)&v101, 1);
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  v166[31] = v39;
  v165[32] = CFSTR("41987");
  v99 = qword_1EFF32380;
  v100 = *MEMORY[0x1E0CBCCC0];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v40, (uint64_t)&v100, (uint64_t)&v99, 1);
  v41 = (void *)objc_claimAutoreleasedReturnValue();
  v166[32] = v41;
  v165[33] = CFSTR("41990");
  v97 = qword_1EFF32380;
  v98 = *MEMORY[0x1E0CBCC48];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v42, (uint64_t)&v98, (uint64_t)&v97, 1);
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  v166[33] = v43;
  v165[34] = CFSTR("42032");
  v95 = qword_1EFF32380;
  v96 = *MEMORY[0x1E0CBCB08];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v44, (uint64_t)&v96, (uint64_t)&v95, 1);
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  v166[34] = v45;
  v165[35] = CFSTR("42033");
  v93 = qword_1EFF32380;
  v94 = *MEMORY[0x1E0CBCAF8];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v46, (uint64_t)&v94, (uint64_t)&v93, 1);
  v47 = (void *)objc_claimAutoreleasedReturnValue();
  v166[35] = v47;
  v165[36] = CFSTR("42034");
  v91 = qword_1EFF32380;
  v92 = *MEMORY[0x1E0CBCBF0];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v48, (uint64_t)&v92, (uint64_t)&v91, 1);
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  v166[36] = v49;
  v165[37] = CFSTR("42036");
  v89 = qword_1EFF32380;
  v90 = *MEMORY[0x1E0CBCBE0];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v50, (uint64_t)&v90, (uint64_t)&v89, 1);
  v51 = (void *)objc_claimAutoreleasedReturnValue();
  v166[37] = v51;
  v165[38] = CFSTR("42037");
  v87 = qword_1EFF32380;
  v88 = *MEMORY[0x1E0CBCBE8];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v52, (uint64_t)&v88, (uint64_t)&v87, 1);
  v53 = (void *)objc_claimAutoreleasedReturnValue();
  v166[38] = v53;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v54, (uint64_t)v166, (uint64_t)v165, 39);
  v56 = (id)objc_claimAutoreleasedReturnValue();

  return v56;
}

void sub_1D52D1380(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19, void *a20,void *a21,void *a22,void *a23,void *a24,void *a25,void *a26,void *a27,void *a28,void *a29,void *a30,void *a31,void *a32,void *a33,void *a34,void *a35,void *a36,void *a37,void *a38,void *a39,void *a40)
{
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;

  _Unwind_Resume(a1);
}

id sub_1D52D15D8()
{
  uint64_t v0;
  uint64_t v1;
  const char *v2;
  const char *v3;
  const char *v4;
  const char *v5;
  const char *v6;
  const char *v7;
  const char *v8;
  const char *v9;
  const char *v10;
  const char *v11;
  const char *v12;
  const char *v13;
  const char *v14;
  const char *v15;
  const char *v16;
  const char *v17;
  const char *v18;
  const char *v19;
  const char *v20;
  const char *v21;
  const char *v22;
  const char *v23;
  const char *v24;
  const char *v25;
  const char *v26;
  const char *v27;
  const char *v28;
  const char *v29;
  const char *v30;
  const char *v31;
  const char *v32;
  const char *v33;
  const char *v34;
  const char *v35;
  const char *v36;
  const char *v37;
  const char *v38;
  const char *v39;
  const char *v40;
  const char *v41;
  const char *v42;
  const char *v43;
  const char *v44;
  const char *v45;
  const char *v46;
  const char *v47;
  const char *v48;
  const char *v49;
  const char *v50;
  const char *v51;
  const char *v52;
  const char *v53;
  const char *v54;
  const char *v55;
  const char *v56;
  const char *v57;
  const char *v58;
  const char *v59;
  const char *v60;
  const char *v61;
  const char *v62;
  const char *v63;
  const char *v64;
  const char *v65;
  const char *v66;
  const char *v67;
  const char *v68;
  const char *v69;
  const char *v70;
  const char *v71;
  const char *v72;
  const char *v73;
  const char *v74;
  const char *v75;
  const char *v76;
  const char *v77;
  const char *v78;
  const char *v79;
  const char *v80;
  const char *v81;
  const char *v82;
  const char *v83;
  const char *v84;
  const char *v85;
  const char *v86;
  const char *v87;
  const char *v88;
  void *v89;
  const char *v90;
  void *v91;
  const char *v92;
  void *v93;
  const char *v94;
  void *v95;
  const char *v96;
  void *v97;
  const char *v98;
  void *v99;
  const char *v100;
  void *v101;
  const char *v102;
  void *v104;
  void *v105;
  void *v106;
  void *v107;
  void *v108;
  void *v109;
  void *v110;
  void *v111;
  void *v112;
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *v120;
  void *v121;
  void *v122;
  void *v123;
  void *v124;
  void *v125;
  void *v126;
  void *v127;
  void *v128;
  void *v129;
  void *v130;
  void *v131;
  void *v132;
  void *v133;
  void *v134;
  void *v135;
  void *v136;
  void *v137;
  void *v138;
  void *v139;
  void *v140;
  void *v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  void *v150;
  void *v151;
  void *v152;
  void *v153;
  void *v154;
  void *v155;
  void *v156;
  void *v157;
  void *v158;
  void *v159;
  void *v160;
  void *v161;
  void *v162;
  void *v163;
  void *v164;
  void *v165;
  void *v166;
  void *v167;
  void *v168;
  void *v169;
  void *v170;
  void *v171;
  void *v172;
  void *v173;
  void *v174;
  void *v175;
  void *v176;
  void *v177;
  void *v178;
  void *v179;
  void *v180;
  void *v181;
  void *v182;
  void *v183;
  void *v184;
  void *v185;
  void *v186;
  void *v187;
  void *v188;
  void *v189;
  void *v190;
  void *v191;
  void *v192;
  _QWORD v193[5];
  _QWORD v194[2];
  _QWORD v195[2];
  _QWORD v196[2];
  _QWORD v197[2];
  _QWORD v198[2];
  _QWORD v199[2];
  _QWORD v200[2];
  _QWORD v201[2];
  _QWORD v202[2];
  _QWORD v203[2];
  _QWORD v204[2];
  _QWORD v205[2];
  _QWORD v206[2];
  _QWORD v207[2];
  _QWORD v208[2];
  _QWORD v209[2];
  _QWORD v210[2];
  _QWORD v211[2];
  _QWORD v212[2];
  _QWORD v213[2];
  _QWORD v214[2];
  _QWORD v215[2];
  _QWORD v216[2];
  _QWORD v217[2];
  _QWORD v218[2];
  _QWORD v219[2];
  _QWORD v220[2];
  _QWORD v221[2];
  _QWORD v222[4];
  _QWORD v223[4];
  _QWORD v224[4];
  _QWORD v225[4];
  _QWORD v226[2];
  _QWORD v227[2];
  _QWORD v228[2];
  _QWORD v229[2];
  _QWORD v230[2];
  _QWORD v231[2];
  _QWORD v232[2];
  _QWORD v233[2];
  _QWORD v234[2];
  _QWORD v235[2];
  _QWORD v236[2];
  _QWORD v237[2];
  _QWORD v238[2];
  _QWORD v239[2];
  _QWORD v240[2];
  _QWORD v241[2];
  _QWORD v242[2];
  _QWORD v243[2];
  _QWORD v244[2];
  _QWORD v245[2];
  _QWORD v246[4];
  _QWORD v247[4];
  _QWORD v248[3];
  _QWORD v249[3];
  _QWORD v250[2];
  _QWORD v251[2];
  _QWORD v252[2];
  _QWORD v253[2];
  uint64_t v254;
  const __CFString *v255;
  _QWORD v256[2];
  _QWORD v257[2];
  _QWORD v258[2];
  _QWORD v259[2];
  _QWORD v260[2];
  _QWORD v261[2];
  _QWORD v262[2];
  _QWORD v263[2];
  uint64_t v264;
  const __CFString *v265;
  _QWORD v266[2];
  _QWORD v267[2];
  _QWORD v268[2];
  _QWORD v269[2];
  _QWORD v270[2];
  _QWORD v271[2];
  _QWORD v272[2];
  _QWORD v273[2];
  _QWORD v274[2];
  _QWORD v275[2];
  _QWORD v276[2];
  _QWORD v277[2];
  _QWORD v278[4];
  _QWORD v279[4];
  _QWORD v280[4];
  _QWORD v281[4];
  _QWORD v282[2];
  _QWORD v283[2];
  _QWORD v284[4];
  _QWORD v285[4];
  _QWORD v286[2];
  _QWORD v287[2];
  _QWORD v288[2];
  _QWORD v289[2];
  uint64_t v290;
  uint64_t v291;
  _QWORD v292[2];
  _QWORD v293[2];
  _QWORD v294[2];
  _QWORD v295[2];
  _QWORD v296[2];
  _QWORD v297[2];
  _QWORD v298[2];
  _QWORD v299[2];
  _QWORD v300[2];
  _QWORD v301[2];
  _QWORD v302[2];
  _QWORD v303[2];
  _QWORD v304[2];
  _QWORD v305[2];
  _QWORD v306[2];
  _QWORD v307[2];
  _QWORD v308[2];
  _QWORD v309[2];
  _QWORD v310[2];
  _QWORD v311[2];
  _QWORD v312[2];
  _QWORD v313[2];
  _QWORD v314[2];
  _QWORD v315[2];
  _QWORD v316[2];
  _QWORD v317[2];
  _QWORD v318[2];
  _QWORD v319[2];
  _QWORD v320[2];
  _QWORD v321[2];
  _QWORD v322[2];
  _QWORD v323[2];
  _QWORD v324[4];
  _QWORD v325[4];
  _QWORD v326[2];
  _QWORD v327[2];
  _QWORD v328[2];
  _QWORD v329[2];
  _QWORD v330[2];
  _QWORD v331[2];
  uint64_t v332;
  const __CFString *v333;
  _QWORD v334[2];
  _QWORD v335[2];
  _QWORD v336[2];
  _QWORD v337[2];
  uint64_t v338;
  const __CFString *v339;
  _QWORD v340[2];
  _QWORD v341[2];
  _QWORD v342[2];
  _QWORD v343[2];
  _QWORD v344[2];
  _QWORD v345[2];
  _QWORD v346[2];
  _QWORD v347[2];
  _QWORD v348[2];
  _QWORD v349[2];
  uint64_t v350;
  const __CFString *v351;
  _QWORD v352[2];
  _QWORD v353[2];
  uint64_t v354;
  const __CFString *v355;
  _QWORD v356[2];
  _QWORD v357[2];
  uint64_t v358;
  const __CFString *v359;
  _QWORD v360[2];
  _QWORD v361[2];
  _QWORD v362[2];
  _QWORD v363[2];
  uint64_t v364;
  const __CFString *v365;
  _QWORD v366[3];
  _QWORD v367[3];
  _QWORD v368[2];
  _QWORD v369[2];
  _QWORD v370[2];
  _QWORD v371[2];
  _QWORD v372[4];
  _QWORD v373[4];
  _QWORD v374[2];
  _QWORD v375[2];
  _QWORD v376[2];
  _QWORD v377[2];
  _QWORD v378[3];
  _QWORD v379[3];
  _QWORD v380[93];
  _QWORD v381[95];

  v0 = MEMORY[0x1E0C80A78]();
  v381[93] = *MEMORY[0x1E0C80C00];
  v193[0] = MEMORY[0x1E0C809B0];
  v193[1] = 3221225472;
  v193[2] = sub_1D52D6BA8;
  v193[3] = &unk_1E99745A8;
  v193[4] = v0;
  v192 = (void *)MEMORY[0x1D82721B4](v193);
  v380[0] = CFSTR("1");
  v378[0] = qword_1EFF32380;
  v378[1] = qword_1EFF32398;
  v1 = MEMORY[0x1E0C9AAB0];
  v379[0] = CFSTR("CameraSettings");
  v379[1] = MEMORY[0x1E0C9AAB0];
  v378[2] = qword_1EFF32388;
  v379[2] = &unk_1E99C85C8;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v2, (uint64_t)v379, (uint64_t)v378, 3);
  v186 = (void *)objc_claimAutoreleasedReturnValue();
  v381[0] = v186;
  v380[1] = CFSTR("2");
  v376[0] = qword_1EFF32380;
  v376[1] = qword_1EFF32398;
  v377[0] = CFSTR("FocalLength");
  v377[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v3, (uint64_t)v377, (uint64_t)v376, 2);
  v185 = (void *)objc_claimAutoreleasedReturnValue();
  v381[1] = v185;
  v380[2] = CFSTR("3");
  v374[0] = qword_1EFF32380;
  v374[1] = qword_1EFF32398;
  v375[0] = CFSTR("FlashInfo");
  v375[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v4, (uint64_t)v375, (uint64_t)v374, 2);
  v184 = (void *)objc_claimAutoreleasedReturnValue();
  v381[2] = v184;
  v380[3] = CFSTR("4");
  v372[0] = qword_1EFF32380;
  v372[1] = qword_1EFF32388;
  v373[0] = CFSTR("ShotInfo");
  v373[1] = &unk_1E99C85E0;
  v372[2] = qword_1EFF32390;
  v372[3] = qword_1EFF32398;
  v373[2] = &unk_1E9974688;
  v373[3] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v5, (uint64_t)v373, (uint64_t)v372, 4);
  v183 = (void *)objc_claimAutoreleasedReturnValue();
  v381[3] = v183;
  v380[4] = CFSTR("5");
  v370[0] = qword_1EFF32380;
  v370[1] = qword_1EFF32398;
  v371[0] = CFSTR("Panorama");
  v371[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v6, (uint64_t)v371, (uint64_t)v370, 2);
  v182 = (void *)objc_claimAutoreleasedReturnValue();
  v381[4] = v182;
  v380[5] = CFSTR("6");
  v368[0] = qword_1EFF32380;
  v368[1] = qword_1EFF32388;
  v369[0] = CFSTR("ImageType");
  v369[1] = &unk_1E99C85F8;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v7, (uint64_t)v369, (uint64_t)v368, 2);
  v181 = (void *)objc_claimAutoreleasedReturnValue();
  v381[5] = v181;
  v380[6] = CFSTR("7");
  v366[0] = qword_1EFF32380;
  v366[1] = qword_1EFF32388;
  v367[0] = CFSTR("FirmwareVersion");
  v367[1] = &unk_1E99C8610;
  v366[2] = qword_1EFF32390;
  v367[2] = &unk_1E9974540;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v8, (uint64_t)v367, (uint64_t)v366, 3);
  v180 = (void *)objc_claimAutoreleasedReturnValue();
  v381[6] = v180;
  v380[7] = CFSTR("8");
  v364 = qword_1EFF32380;
  v365 = CFSTR("FileNumber");
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v9, (uint64_t)&v365, (uint64_t)&v364, 1);
  v179 = (void *)objc_claimAutoreleasedReturnValue();
  v381[7] = v179;
  v380[8] = CFSTR("9");
  v362[0] = qword_1EFF32380;
  v362[1] = qword_1EFF32388;
  v363[0] = CFSTR("OwnerName");
  v363[1] = &unk_1E99C8628;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v10, (uint64_t)v363, (uint64_t)v362, 2);
  v178 = (void *)objc_claimAutoreleasedReturnValue();
  v381[8] = v178;
  v380[9] = CFSTR("10");
  v360[0] = qword_1EFF32380;
  v360[1] = qword_1EFF32398;
  v361[0] = CFSTR("UnknownD30");
  v361[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v11, (uint64_t)v361, (uint64_t)v360, 2);
  v177 = (void *)objc_claimAutoreleasedReturnValue();
  v381[9] = v177;
  v380[10] = CFSTR("12");
  v358 = qword_1EFF32380;
  v359 = CFSTR("SerialNumber");
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v12, (uint64_t)&v359, (uint64_t)&v358, 1);
  v176 = (void *)objc_claimAutoreleasedReturnValue();
  v381[10] = v176;
  v380[11] = CFSTR("13");
  v356[0] = qword_1EFF32380;
  v356[1] = qword_1EFF32398;
  v357[0] = CFSTR("CameraInfo");
  v357[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v13, (uint64_t)v357, (uint64_t)v356, 2);
  v175 = (void *)objc_claimAutoreleasedReturnValue();
  v381[11] = v175;
  v380[12] = CFSTR("14");
  v354 = qword_1EFF32380;
  v355 = CFSTR("FileLength");
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v14, (uint64_t)&v355, (uint64_t)&v354, 1);
  v174 = (void *)objc_claimAutoreleasedReturnValue();
  v381[12] = v174;
  v380[13] = CFSTR("15");
  v352[0] = qword_1EFF32380;
  v352[1] = qword_1EFF32398;
  v353[0] = CFSTR("CustomFunctions");
  v353[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v15, (uint64_t)v353, (uint64_t)v352, 2);
  v173 = (void *)objc_claimAutoreleasedReturnValue();
  v381[13] = v173;
  v380[14] = CFSTR("16");
  v350 = qword_1EFF32380;
  v351 = CFSTR("ModelID");
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v16, (uint64_t)&v351, (uint64_t)&v350, 1);
  v172 = (void *)objc_claimAutoreleasedReturnValue();
  v381[14] = v172;
  v380[15] = CFSTR("17");
  v348[0] = qword_1EFF32380;
  v348[1] = qword_1EFF32398;
  v349[0] = CFSTR("MovieInfo");
  v349[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v17, (uint64_t)v349, (uint64_t)v348, 2);
  v171 = (void *)objc_claimAutoreleasedReturnValue();
  v381[15] = v171;
  v380[16] = CFSTR("18");
  v346[0] = qword_1EFF32380;
  v346[1] = qword_1EFF32398;
  v347[0] = CFSTR("AFInfo");
  v347[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v18, (uint64_t)v347, (uint64_t)v346, 2);
  v170 = (void *)objc_claimAutoreleasedReturnValue();
  v381[16] = v170;
  v380[17] = CFSTR("19");
  v344[0] = qword_1EFF32380;
  v344[1] = qword_1EFF32398;
  v345[0] = CFSTR("ThumbnailImageValidArea");
  v345[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v19, (uint64_t)v345, (uint64_t)v344, 2);
  v169 = (void *)objc_claimAutoreleasedReturnValue();
  v381[17] = v169;
  v380[18] = CFSTR("21");
  v342[0] = qword_1EFF32380;
  v342[1] = qword_1EFF32398;
  v343[0] = CFSTR("SerialNumberFormat");
  v343[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v20, (uint64_t)v343, (uint64_t)v342, 2);
  v168 = (void *)objc_claimAutoreleasedReturnValue();
  v381[18] = v168;
  v380[19] = CFSTR("25");
  v340[0] = qword_1EFF32380;
  v340[1] = qword_1EFF32398;
  v341[0] = CFSTR("25");
  v341[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v21, (uint64_t)v341, (uint64_t)v340, 2);
  v167 = (void *)objc_claimAutoreleasedReturnValue();
  v381[19] = v167;
  v380[20] = CFSTR("26");
  v338 = qword_1EFF32380;
  v339 = CFSTR("SuperMacro");
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v22, (uint64_t)&v339, (uint64_t)&v338, 1);
  v166 = (void *)objc_claimAutoreleasedReturnValue();
  v381[20] = v166;
  v380[21] = CFSTR("28");
  v336[0] = qword_1EFF32380;
  v336[1] = qword_1EFF32398;
  v337[0] = CFSTR("DateStampMode");
  v337[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v23, (uint64_t)v337, (uint64_t)v336, 2);
  v165 = (void *)objc_claimAutoreleasedReturnValue();
  v381[21] = v165;
  v380[22] = CFSTR("29");
  v334[0] = qword_1EFF32380;
  v334[1] = qword_1EFF32398;
  v335[0] = CFSTR("MyColors");
  v335[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v24, (uint64_t)v335, (uint64_t)v334, 2);
  v164 = (void *)objc_claimAutoreleasedReturnValue();
  v381[22] = v164;
  v380[23] = CFSTR("30");
  v332 = qword_1EFF32380;
  v333 = CFSTR("FirmwareRevision");
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v25, (uint64_t)&v333, (uint64_t)&v332, 1);
  v163 = (void *)objc_claimAutoreleasedReturnValue();
  v381[23] = v163;
  v380[24] = CFSTR("35");
  v330[0] = qword_1EFF32380;
  v330[1] = qword_1EFF32398;
  v331[0] = CFSTR("Categories");
  v331[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v26, (uint64_t)v331, (uint64_t)v330, 2);
  v162 = (void *)objc_claimAutoreleasedReturnValue();
  v381[24] = v162;
  v380[25] = CFSTR("36");
  v328[0] = qword_1EFF32380;
  v328[1] = qword_1EFF32398;
  v329[0] = CFSTR("FaceDetect1");
  v329[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v27, (uint64_t)v329, (uint64_t)v328, 2);
  v161 = (void *)objc_claimAutoreleasedReturnValue();
  v381[25] = v161;
  v380[26] = CFSTR("37");
  v326[0] = qword_1EFF32380;
  v326[1] = qword_1EFF32398;
  v327[0] = CFSTR("FaceDetect2");
  v327[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v28, (uint64_t)v327, (uint64_t)v326, 2);
  v160 = (void *)objc_claimAutoreleasedReturnValue();
  v381[26] = v160;
  v380[27] = CFSTR("38");
  v324[0] = qword_1EFF32380;
  v324[1] = qword_1EFF32398;
  v325[0] = CFSTR("AFInfo2");
  v325[1] = v1;
  v324[2] = qword_1EFF32388;
  v324[3] = qword_1EFF32390;
  v325[2] = &unk_1E99C8640;
  v325[3] = &unk_1E9974608;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v29, (uint64_t)v325, (uint64_t)v324, 4);
  v159 = (void *)objc_claimAutoreleasedReturnValue();
  v381[27] = v159;
  v380[28] = CFSTR("39");
  v322[0] = qword_1EFF32380;
  v322[1] = qword_1EFF32398;
  v323[0] = CFSTR("ContrastInfo");
  v323[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v30, (uint64_t)v323, (uint64_t)v322, 2);
  v158 = (void *)objc_claimAutoreleasedReturnValue();
  v381[28] = v158;
  v380[29] = CFSTR("40");
  v320[0] = qword_1EFF32380;
  v320[1] = qword_1EFF32398;
  v321[0] = CFSTR("ImageUniqueID");
  v321[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v31, (uint64_t)v321, (uint64_t)v320, 2);
  v157 = (void *)objc_claimAutoreleasedReturnValue();
  v381[29] = v157;
  v380[30] = CFSTR("47");
  v318[0] = qword_1EFF32380;
  v318[1] = qword_1EFF32398;
  v319[0] = CFSTR("FaceDetect3");
  v319[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v32, (uint64_t)v319, (uint64_t)v318, 2);
  v156 = (void *)objc_claimAutoreleasedReturnValue();
  v381[30] = v156;
  v380[31] = CFSTR("51");
  v316[0] = qword_1EFF32380;
  v316[1] = qword_1EFF32398;
  v317[0] = CFSTR("51");
  v317[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v33, (uint64_t)v317, (uint64_t)v316, 2);
  v155 = (void *)objc_claimAutoreleasedReturnValue();
  v381[31] = v155;
  v380[32] = CFSTR("53");
  v314[0] = qword_1EFF32380;
  v314[1] = qword_1EFF32398;
  v315[0] = CFSTR("TimeInfo");
  v315[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v34, (uint64_t)v315, (uint64_t)v314, 2);
  v154 = (void *)objc_claimAutoreleasedReturnValue();
  v381[32] = v154;
  v380[33] = CFSTR("56");
  v312[0] = qword_1EFF32380;
  v312[1] = qword_1EFF32398;
  v313[0] = CFSTR("BatteryType");
  v313[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v35, (uint64_t)v313, (uint64_t)v312, 2);
  v153 = (void *)objc_claimAutoreleasedReturnValue();
  v381[33] = v153;
  v380[34] = CFSTR("60");
  v310[0] = qword_1EFF32380;
  v310[1] = qword_1EFF32398;
  v311[0] = CFSTR("AFInfo3");
  v311[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v36, (uint64_t)v311, (uint64_t)v310, 2);
  v152 = (void *)objc_claimAutoreleasedReturnValue();
  v381[34] = v152;
  v380[35] = CFSTR("61");
  v308[0] = qword_1EFF32380;
  v308[1] = qword_1EFF32398;
  v309[0] = CFSTR("61");
  v309[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v37, (uint64_t)v309, (uint64_t)v308, 2);
  v151 = (void *)objc_claimAutoreleasedReturnValue();
  v381[35] = v151;
  v380[36] = CFSTR("63");
  v306[0] = qword_1EFF32380;
  v306[1] = qword_1EFF32398;
  v307[0] = CFSTR("63");
  v307[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v38, (uint64_t)v307, (uint64_t)v306, 2);
  v150 = (void *)objc_claimAutoreleasedReturnValue();
  v381[36] = v150;
  v380[37] = CFSTR("129");
  v304[0] = qword_1EFF32380;
  v304[1] = qword_1EFF32398;
  v305[0] = CFSTR("RawDataOffset");
  v305[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v39, (uint64_t)v305, (uint64_t)v304, 2);
  v149 = (void *)objc_claimAutoreleasedReturnValue();
  v381[37] = v149;
  v380[38] = CFSTR("131");
  v302[0] = qword_1EFF32380;
  v302[1] = qword_1EFF32398;
  v303[0] = CFSTR("OriginalDecisionDataOffset");
  v303[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v40, (uint64_t)v303, (uint64_t)v302, 2);
  v148 = (void *)objc_claimAutoreleasedReturnValue();
  v381[38] = v148;
  v380[39] = CFSTR("144");
  v300[0] = qword_1EFF32380;
  v300[1] = qword_1EFF32398;
  v301[0] = CFSTR("CustomFunctions");
  v301[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v41, (uint64_t)v301, (uint64_t)v300, 2);
  v147 = (void *)objc_claimAutoreleasedReturnValue();
  v381[39] = v147;
  v380[40] = CFSTR("145");
  v298[0] = qword_1EFF32380;
  v298[1] = qword_1EFF32398;
  v299[0] = CFSTR("PersonalFunctions");
  v299[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v42, (uint64_t)v299, (uint64_t)v298, 2);
  v146 = (void *)objc_claimAutoreleasedReturnValue();
  v381[40] = v146;
  v380[41] = CFSTR("146");
  v296[0] = qword_1EFF32380;
  v296[1] = qword_1EFF32398;
  v297[0] = CFSTR("PersonalFunctionValues");
  v297[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v43, (uint64_t)v297, (uint64_t)v296, 2);
  v145 = (void *)objc_claimAutoreleasedReturnValue();
  v381[41] = v145;
  v380[42] = CFSTR("147");
  v294[0] = qword_1EFF32380;
  v294[1] = qword_1EFF32398;
  v295[0] = CFSTR("FileInfo");
  v295[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v44, (uint64_t)v295, (uint64_t)v294, 2);
  v144 = (void *)objc_claimAutoreleasedReturnValue();
  v381[42] = v144;
  v380[43] = CFSTR("148");
  v292[0] = qword_1EFF32380;
  v292[1] = qword_1EFF32398;
  v293[0] = CFSTR("AFPointsInFocus");
  v293[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v45, (uint64_t)v293, (uint64_t)v292, 2);
  v143 = (void *)objc_claimAutoreleasedReturnValue();
  v381[43] = v143;
  v380[44] = CFSTR("149");
  v290 = qword_1EFF32380;
  v291 = *MEMORY[0x1E0CBCF80];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v46, (uint64_t)&v291, (uint64_t)&v290, 1);
  v142 = (void *)objc_claimAutoreleasedReturnValue();
  v381[44] = v142;
  v380[45] = CFSTR("150");
  v288[0] = qword_1EFF32380;
  v288[1] = qword_1EFF32398;
  v289[0] = CFSTR("InternalSerialNumber");
  v289[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v47, (uint64_t)v289, (uint64_t)v288, 2);
  v141 = (void *)objc_claimAutoreleasedReturnValue();
  v381[45] = v141;
  v380[46] = CFSTR("151");
  v286[0] = qword_1EFF32380;
  v286[1] = qword_1EFF32398;
  v287[0] = CFSTR("DustRemovalData");
  v287[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v48, (uint64_t)v287, (uint64_t)v286, 2);
  v140 = (void *)objc_claimAutoreleasedReturnValue();
  v381[46] = v140;
  v380[47] = CFSTR("152");
  v284[0] = qword_1EFF32380;
  v284[1] = qword_1EFF32398;
  v285[0] = CFSTR("CropInfo");
  v285[1] = v1;
  v284[2] = qword_1EFF32388;
  v284[3] = qword_1EFF32390;
  v285[2] = &unk_1E99C8658;
  v285[3] = &unk_1E9974628;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v49, (uint64_t)v285, (uint64_t)v284, 4);
  v139 = (void *)objc_claimAutoreleasedReturnValue();
  v381[47] = v139;
  v380[48] = CFSTR("153");
  v282[0] = qword_1EFF32380;
  v282[1] = qword_1EFF32398;
  v283[0] = CFSTR("CustomFunctions2");
  v283[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v50, (uint64_t)v283, (uint64_t)v282, 2);
  v138 = (void *)objc_claimAutoreleasedReturnValue();
  v381[48] = v138;
  v380[49] = CFSTR("154");
  v280[0] = qword_1EFF32380;
  v280[1] = qword_1EFF32398;
  v281[0] = CFSTR("AspectInfo");
  v281[1] = v1;
  v280[2] = qword_1EFF32388;
  v280[3] = qword_1EFF32390;
  v281[2] = &unk_1E99C8670;
  v281[3] = &unk_1E99745E8;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v51, (uint64_t)v281, (uint64_t)v280, 4);
  v137 = (void *)objc_claimAutoreleasedReturnValue();
  v381[49] = v137;
  v380[50] = CFSTR("160");
  v278[0] = qword_1EFF32380;
  v278[1] = qword_1EFF32398;
  v279[0] = CFSTR("ProcessingInfo");
  v279[1] = v1;
  v278[2] = qword_1EFF32388;
  v278[3] = qword_1EFF32390;
  v279[2] = &unk_1E99C8688;
  v279[3] = &unk_1E9974668;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v52, (uint64_t)v279, (uint64_t)v278, 4);
  v136 = (void *)objc_claimAutoreleasedReturnValue();
  v381[50] = v136;
  v380[51] = CFSTR("161");
  v276[0] = qword_1EFF32380;
  v276[1] = qword_1EFF32398;
  v277[0] = CFSTR("ToneCurveTable");
  v277[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v53, (uint64_t)v277, (uint64_t)v276, 2);
  v135 = (void *)objc_claimAutoreleasedReturnValue();
  v381[51] = v135;
  v380[52] = CFSTR("162");
  v274[0] = qword_1EFF32380;
  v274[1] = qword_1EFF32398;
  v275[0] = CFSTR("SharpnessTable");
  v275[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v54, (uint64_t)v275, (uint64_t)v274, 2);
  v127 = (void *)objc_claimAutoreleasedReturnValue();
  v381[52] = v127;
  v380[53] = CFSTR("163");
  v272[0] = qword_1EFF32380;
  v272[1] = qword_1EFF32398;
  v273[0] = CFSTR("SharpnessFreqTable");
  v273[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v55, (uint64_t)v273, (uint64_t)v272, 2);
  v126 = (void *)objc_claimAutoreleasedReturnValue();
  v381[53] = v126;
  v380[54] = CFSTR("164");
  v270[0] = qword_1EFF32380;
  v270[1] = qword_1EFF32398;
  v271[0] = CFSTR("WhiteBalanceTable");
  v271[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v56, (uint64_t)v271, (uint64_t)v270, 2);
  v125 = (void *)objc_claimAutoreleasedReturnValue();
  v381[54] = v125;
  v380[55] = CFSTR("169");
  v268[0] = qword_1EFF32380;
  v268[1] = qword_1EFF32398;
  v269[0] = CFSTR("ColorBalance");
  v269[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v57, (uint64_t)v269, (uint64_t)v268, 2);
  v124 = (void *)objc_claimAutoreleasedReturnValue();
  v381[55] = v124;
  v380[56] = CFSTR("170");
  v266[0] = qword_1EFF32380;
  v266[1] = qword_1EFF32398;
  v267[0] = CFSTR("MeasuredColor");
  v267[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v58, (uint64_t)v267, (uint64_t)v266, 2);
  v123 = (void *)objc_claimAutoreleasedReturnValue();
  v381[56] = v123;
  v380[57] = CFSTR("174");
  v264 = qword_1EFF32380;
  v265 = CFSTR("ColorTemperature");
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v59, (uint64_t)&v265, (uint64_t)&v264, 1);
  v122 = (void *)objc_claimAutoreleasedReturnValue();
  v381[57] = v122;
  v380[58] = CFSTR("176");
  v262[0] = qword_1EFF32380;
  v262[1] = qword_1EFF32398;
  v263[0] = CFSTR("Flags");
  v263[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v60, (uint64_t)v263, (uint64_t)v262, 2);
  v121 = (void *)objc_claimAutoreleasedReturnValue();
  v381[58] = v121;
  v380[59] = CFSTR("177");
  v260[0] = qword_1EFF32380;
  v260[1] = qword_1EFF32398;
  v261[0] = CFSTR("ModifiedInfo");
  v261[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v61, (uint64_t)v261, (uint64_t)v260, 2);
  v120 = (void *)objc_claimAutoreleasedReturnValue();
  v381[59] = v120;
  v380[60] = CFSTR("178");
  v258[0] = qword_1EFF32380;
  v258[1] = qword_1EFF32398;
  v259[0] = CFSTR("ToneCurveMatching");
  v259[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v62, (uint64_t)v259, (uint64_t)v258, 2);
  v119 = (void *)objc_claimAutoreleasedReturnValue();
  v381[60] = v119;
  v380[61] = CFSTR("179");
  v256[0] = qword_1EFF32380;
  v256[1] = qword_1EFF32398;
  v257[0] = CFSTR("WhiteBalanceMatching");
  v257[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v63, (uint64_t)v257, (uint64_t)v256, 2);
  v118 = (void *)objc_claimAutoreleasedReturnValue();
  v381[61] = v118;
  v380[62] = CFSTR("180");
  v254 = qword_1EFF32380;
  v255 = CFSTR("ColorSpace");
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v64, (uint64_t)&v255, (uint64_t)&v254, 1);
  v117 = (void *)objc_claimAutoreleasedReturnValue();
  v381[62] = v117;
  v380[63] = CFSTR("182");
  v252[0] = qword_1EFF32380;
  v252[1] = qword_1EFF32398;
  v253[0] = CFSTR("PreviewImageInfo");
  v253[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v65, (uint64_t)v253, (uint64_t)v252, 2);
  v107 = (void *)objc_claimAutoreleasedReturnValue();
  v381[63] = v107;
  v380[64] = CFSTR("208");
  v250[0] = qword_1EFF32380;
  v250[1] = qword_1EFF32398;
  v251[0] = CFSTR("VRDOffset");
  v251[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v66, (uint64_t)v251, (uint64_t)v250, 2);
  v106 = (void *)objc_claimAutoreleasedReturnValue();
  v381[64] = v106;
  v380[65] = CFSTR("224");
  v248[0] = qword_1EFF32380;
  v248[1] = qword_1EFF32398;
  v249[0] = CFSTR("SensorInfo");
  v249[1] = v1;
  v248[2] = qword_1EFF32390;
  v249[2] = &unk_1E9974560;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v67, (uint64_t)v249, (uint64_t)v248, 3);
  v105 = (void *)objc_claimAutoreleasedReturnValue();
  v381[65] = v105;
  v380[66] = CFSTR("16385");
  v246[0] = qword_1EFF32380;
  v246[1] = qword_1EFF32398;
  v247[0] = CFSTR("ColorData");
  v247[1] = v1;
  v247[2] = &unk_1E99C86A0;
  v246[2] = qword_1EFF32388;
  v246[3] = qword_1EFF32390;
  v191 = (void *)MEMORY[0x1D82721B4](v192);
  v247[3] = v191;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v68, (uint64_t)v247, (uint64_t)v246, 4);
  v190 = (void *)objc_claimAutoreleasedReturnValue();
  v381[66] = v190;
  v380[67] = CFSTR("16386");
  v244[0] = qword_1EFF32380;
  v244[1] = qword_1EFF32398;
  v245[0] = CFSTR("CRWParam");
  v245[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v69, (uint64_t)v245, (uint64_t)v244, 2);
  v189 = (void *)objc_claimAutoreleasedReturnValue();
  v381[67] = v189;
  v380[68] = CFSTR("16387");
  v242[0] = qword_1EFF32380;
  v242[1] = qword_1EFF32398;
  v243[0] = CFSTR("ColorInfo");
  v243[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v70, (uint64_t)v243, (uint64_t)v242, 2);
  v188 = (void *)objc_claimAutoreleasedReturnValue();
  v381[68] = v188;
  v380[69] = CFSTR("16389");
  v240[0] = qword_1EFF32380;
  v240[1] = qword_1EFF32398;
  v241[0] = CFSTR("Flavor");
  v241[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v71, (uint64_t)v241, (uint64_t)v240, 2);
  v187 = (void *)objc_claimAutoreleasedReturnValue();
  v381[69] = v187;
  v380[70] = CFSTR("16392");
  v238[0] = qword_1EFF32380;
  v238[1] = qword_1EFF32398;
  v239[0] = CFSTR("PictureStyleUserDef");
  v239[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v72, (uint64_t)v239, (uint64_t)v238, 2);
  v134 = (void *)objc_claimAutoreleasedReturnValue();
  v381[70] = v134;
  v380[71] = CFSTR("16393");
  v236[0] = qword_1EFF32380;
  v236[1] = qword_1EFF32398;
  v237[0] = CFSTR("PictureStylePC");
  v237[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v73, (uint64_t)v237, (uint64_t)v236, 2);
  v133 = (void *)objc_claimAutoreleasedReturnValue();
  v381[71] = v133;
  v380[72] = CFSTR("16400");
  v234[0] = qword_1EFF32380;
  v234[1] = qword_1EFF32398;
  v235[0] = CFSTR("CustomPictureStyleFileName");
  v235[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v74, (uint64_t)v235, (uint64_t)v234, 2);
  v132 = (void *)objc_claimAutoreleasedReturnValue();
  v381[72] = v132;
  v380[73] = CFSTR("16401");
  v232[0] = qword_1EFF32380;
  v232[1] = qword_1EFF32398;
  v233[0] = CFSTR("16401");
  v233[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v75, (uint64_t)v233, (uint64_t)v232, 2);
  v131 = (void *)objc_claimAutoreleasedReturnValue();
  v381[73] = v131;
  v380[74] = CFSTR("16402");
  v230[0] = qword_1EFF32380;
  v230[1] = qword_1EFF32398;
  v231[0] = CFSTR("16402");
  v231[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v76, (uint64_t)v231, (uint64_t)v230, 2);
  v130 = (void *)objc_claimAutoreleasedReturnValue();
  v381[74] = v130;
  v380[75] = CFSTR("16403");
  v228[0] = qword_1EFF32380;
  v228[1] = qword_1EFF32398;
  v229[0] = CFSTR("AFMicroAdj");
  v229[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v77, (uint64_t)v229, (uint64_t)v228, 2);
  v129 = (void *)objc_claimAutoreleasedReturnValue();
  v381[75] = v129;
  v380[76] = CFSTR("16405");
  v226[0] = qword_1EFF32380;
  v226[1] = qword_1EFF32398;
  v227[0] = CFSTR("VignettingCorr");
  v227[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v78, (uint64_t)v227, (uint64_t)v226, 2);
  v128 = (void *)objc_claimAutoreleasedReturnValue();
  v381[76] = v128;
  v380[77] = CFSTR("16406");
  v224[0] = qword_1EFF32380;
  v224[1] = qword_1EFF32398;
  v225[0] = CFSTR("VignettingCorr2");
  v225[1] = v1;
  v224[2] = qword_1EFF32388;
  v224[3] = qword_1EFF32390;
  v225[2] = &unk_1E99C86B8;
  v225[3] = &unk_1E99745C8;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v79, (uint64_t)v225, (uint64_t)v224, 4);
  v116 = (void *)objc_claimAutoreleasedReturnValue();
  v381[77] = v116;
  v380[78] = CFSTR("16408");
  v222[0] = qword_1EFF32380;
  v222[1] = qword_1EFF32398;
  v223[0] = CFSTR("LightingOpt");
  v223[1] = v1;
  v222[2] = qword_1EFF32388;
  v222[3] = qword_1EFF32390;
  v223[2] = &unk_1E99C86D0;
  v223[3] = &unk_1E9974648;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v80, (uint64_t)v223, (uint64_t)v222, 4);
  v115 = (void *)objc_claimAutoreleasedReturnValue();
  v381[78] = v115;
  v380[79] = CFSTR("16409");
  v220[0] = qword_1EFF32380;
  v220[1] = qword_1EFF32398;
  v221[0] = CFSTR("LensInfo");
  v221[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v81, (uint64_t)v221, (uint64_t)v220, 2);
  v114 = (void *)objc_claimAutoreleasedReturnValue();
  v381[79] = v114;
  v380[80] = CFSTR("16416");
  v218[0] = qword_1EFF32380;
  v218[1] = qword_1EFF32398;
  v219[0] = CFSTR("AmbienceInfo");
  v219[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v82, (uint64_t)v219, (uint64_t)v218, 2);
  v113 = (void *)objc_claimAutoreleasedReturnValue();
  v381[80] = v113;
  v380[81] = CFSTR("16417");
  v216[0] = qword_1EFF32380;
  v216[1] = qword_1EFF32398;
  v217[0] = CFSTR("MultiExp");
  v217[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v83, (uint64_t)v217, (uint64_t)v216, 2);
  v112 = (void *)objc_claimAutoreleasedReturnValue();
  v381[81] = v112;
  v380[82] = CFSTR("16420");
  v214[0] = qword_1EFF32380;
  v214[1] = qword_1EFF32398;
  v215[0] = CFSTR("FilterInfo");
  v215[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v84, (uint64_t)v215, (uint64_t)v214, 2);
  v111 = (void *)objc_claimAutoreleasedReturnValue();
  v381[82] = v111;
  v380[83] = CFSTR("16421");
  v212[0] = qword_1EFF32380;
  v212[1] = qword_1EFF32398;
  v213[0] = CFSTR("HDRInfo");
  v213[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v85, (uint64_t)v213, (uint64_t)v212, 2);
  v110 = (void *)objc_claimAutoreleasedReturnValue();
  v381[83] = v110;
  v380[84] = CFSTR("16423");
  v210[0] = qword_1EFF32380;
  v210[1] = qword_1EFF32398;
  v211[0] = CFSTR("16423");
  v211[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v86, (uint64_t)v211, (uint64_t)v210, 2);
  v109 = (void *)objc_claimAutoreleasedReturnValue();
  v381[84] = v109;
  v380[85] = CFSTR("16424");
  v208[0] = qword_1EFF32380;
  v208[1] = qword_1EFF32398;
  v209[0] = CFSTR("AFConfig");
  v209[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v87, (uint64_t)v209, (uint64_t)v208, 2);
  v108 = (void *)objc_claimAutoreleasedReturnValue();
  v381[85] = v108;
  v380[86] = CFSTR("16428");
  v206[0] = qword_1EFF32380;
  v206[1] = qword_1EFF32398;
  v207[0] = CFSTR("16428");
  v207[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v88, (uint64_t)v207, (uint64_t)v206, 2);
  v89 = (void *)objc_claimAutoreleasedReturnValue();
  v381[86] = v89;
  v380[87] = CFSTR("16430");
  v204[0] = qword_1EFF32380;
  v204[1] = qword_1EFF32398;
  v205[0] = CFSTR("16430");
  v205[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v90, (uint64_t)v205, (uint64_t)v204, 2);
  v91 = (void *)objc_claimAutoreleasedReturnValue();
  v381[87] = v91;
  v380[88] = CFSTR("16435");
  v202[0] = qword_1EFF32380;
  v202[1] = qword_1EFF32398;
  v203[0] = CFSTR("16435");
  v203[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v92, (uint64_t)v203, (uint64_t)v202, 2);
  v93 = (void *)objc_claimAutoreleasedReturnValue();
  v381[88] = v93;
  v380[89] = CFSTR("16437");
  v200[0] = qword_1EFF32380;
  v200[1] = qword_1EFF32398;
  v201[0] = CFSTR("16437");
  v201[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v94, (uint64_t)v201, (uint64_t)v200, 2);
  v95 = (void *)objc_claimAutoreleasedReturnValue();
  v381[89] = v95;
  v380[90] = CFSTR("16439");
  v198[0] = qword_1EFF32380;
  v198[1] = qword_1EFF32398;
  v199[0] = CFSTR("16439");
  v199[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v96, (uint64_t)v199, (uint64_t)v198, 2);
  v97 = (void *)objc_claimAutoreleasedReturnValue();
  v381[90] = v97;
  v380[91] = CFSTR("16441");
  v196[0] = qword_1EFF32380;
  v196[1] = qword_1EFF32398;
  v197[0] = CFSTR("16441");
  v197[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v98, (uint64_t)v197, (uint64_t)v196, 2);
  v99 = (void *)objc_claimAutoreleasedReturnValue();
  v381[91] = v99;
  v380[92] = CFSTR("16444");
  v194[0] = qword_1EFF32380;
  v194[1] = qword_1EFF32398;
  v195[0] = CFSTR("16444");
  v195[1] = v1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v100, (uint64_t)v195, (uint64_t)v194, 2);
  v101 = (void *)objc_claimAutoreleasedReturnValue();
  v381[92] = v101;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v102, (uint64_t)v381, (uint64_t)v380, 93);
  v104 = (void *)objc_claimAutoreleasedReturnValue();

  return v104;
}

void sub_1D52D3614(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19, void *a20,void *a21,void *a22,void *a23,void *a24,void *a25,void *a26,void *a27,void *a28,void *a29,void *a30,void *a31,void *a32,void *a33,void *a34,void *a35,void *a36,void *a37,void *a38,void *a39,void *a40,void *a41,void *a42,void *a43,void *a44,void *a45,void *a46,void *a47,void *a48,void *a49,void *a50,void *a51,void *a52,void *a53,void *a54,void *a55,void *a56,void *a57,void *a58,void *a59,void *a60,void *a61,void *a62,void *a63)
{
  void *a64;
  void *a65;
  void *a66;
  void *a67;
  void *a68;
  void *a69;
  void *a70;
  void *a71;
  void *a72;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;

  _Unwind_Resume(a1);
}

id sub_1D52D3BEC(uint64_t a1, uint64_t *a2, void *a3, char a4)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  __CFString *v26;
  __CFString *v27;
  int v28;
  void *v29;
  uint64_t v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  void *v39;
  double v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  const char *v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  void *v50;
  double v51;
  const char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  const char *v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  void *v61;
  double v62;
  const char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  const char *v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  void *v72;
  uint64_t v73;
  const char *v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  const char *v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  void *v82;
  uint64_t v83;
  const char *v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  const char *v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  void *v92;
  uint64_t v93;
  const char *v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  const char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  const char *v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  void *v106;
  uint64_t v107;
  const char *v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  const char *v112;
  uint64_t v113;
  uint64_t v114;
  const char *v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  uint64_t v119;
  id v120;
  const char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  const char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  const char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  int v135;
  void *v136;
  double v137;
  const char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  const char *v143;
  uint64_t v144;
  uint64_t v145;
  int v146;
  void *v147;
  uint64_t v148;
  const char *v149;
  uint64_t v150;
  uint64_t v151;
  void *v152;
  const char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t *v156;
  void *v157;
  double v158;
  const char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t *v163;
  void *v164;
  double v165;
  const char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t *v170;
  void *v171;
  double v172;
  const char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  const char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  void *v181;
  const char *v182;
  uint64_t v183;
  uint64_t v184;
  const char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  void *v189;
  const char *v190;
  uint64_t v191;
  uint64_t v192;
  const char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  unsigned int *v197;
  unsigned int v198;
  void *v199;
  const char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  const char *v204;
  uint64_t v205;
  uint64_t v206;
  unsigned int v207;
  unsigned int v208;
  uint64_t v209;
  std::string::value_type *v210;
  std::string::value_type v211;
  const char *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  unsigned int *v216;
  unsigned int v217;
  void *v218;
  const char *v219;
  uint64_t v220;
  uint64_t v221;
  void *v222;
  const char *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  void *v227;
  const char *v228;
  uint64_t v229;
  uint64_t v230;
  void *v231;
  const char *v232;
  uint64_t v233;
  uint64_t v234;
  void *v235;
  const char *v236;
  uint64_t v237;
  uint64_t v238;
  void *v239;
  const char *v240;
  uint64_t v241;
  uint64_t v242;
  void *v243;
  const char *v244;
  uint64_t v245;
  uint64_t v246;
  const char *v247;
  uint64_t v248;
  uint64_t v249;
  void (**v250)(_QWORD, _QWORD);
  void *v251;
  const char *v252;
  uint64_t v253;
  uint64_t v254;
  int v255;
  void *v256;
  const char *v257;
  uint64_t v258;
  uint64_t v259;
  void *v260;
  const char *v261;
  uint64_t v262;
  uint64_t v263;
  const char *v264;
  void *v265;
  void *v266;
  void *v267;
  const char *v268;
  uint64_t v269;
  uint64_t v270;
  void *v272;
  void *v273;
  void *exception;
  id v276;
  unsigned int v277;
  id v278;
  int v279;
  unsigned int v280;
  uint64_t *v281;
  unsigned int v282;
  void *__p[2];
  uint64_t v284;
  std::string v285;
  unsigned int v286;
  int v287;
  _QWORD v288[6];
  _QWORD v289[8];

  v289[6] = *MEMORY[0x1E0C80C00];
  v278 = a3;
  objc_msgSend_dictionary(MEMORY[0x1E0C99E08], v5, v6, v7, v8);
  v276 = (id)objc_claimAutoreleasedReturnValue();
  v9 = sub_1D528479C(*a2);
  if (v9 != 18761 && v9 != 19789)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  if (v9 == 18761)
    v11 = 1;
  else
    v11 = 2;
  sub_1D52845EC(*a2, v11);
  if (sub_1D528479C(*a2) != 42)
  {
    v272 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](v272, "RawCameraException");
    __cxa_throw(v272, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v287 = 0;
  v287 = sub_1D52847F8(*a2);
  v281 = a2;
  v12 = *a2;
  sub_1D5282F74((int *)&v285, &v287);
  (*(void (**)(uint64_t, std::string *, _QWORD))(*(_QWORD *)v12 + 40))(v12, &v285, 0);
  v13 = v281;
  v277 = sub_1D528479C(*v281);
  if (v277)
  {
    v279 = 0;
    while (2)
    {
      v280 = sub_1D528479C(*v13);
      v14 = sub_1D528479C(*v13);
      v15 = sub_1D52847F8(*v13);
      v286 = 0;
      v16 = sub_1D52847F8(*v13);
      v286 = v16;
      objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v17, v16, v18, v19);
      v20 = objc_claimAutoreleasedReturnValue();
      v26 = (__CFString *)v20;
      switch((int)v14)
      {
        case 1:
          if (v15 >= 5)
          {
            sub_1D5282F74((int *)__p, (int *)&v286);
            sub_1D5285164((uint64_t *)&v285, v13, (uint64_t)__p, 0);
            sub_1D52B261C(v15);
            v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
            v28 = v15;
            do
            {
              v29 = (void *)MEMORY[0x1E0CB37E8];
              v30 = sub_1D52846FC(*v281);
              objc_msgSend_numberWithUnsignedChar_(v29, v31, v30, v32, v33);
              v34 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend_addObject_(v27, v35, (uint64_t)v34, v36, v37);

              --v28;
            }
            while (v28);
            goto LABEL_64;
          }
          sub_1D52B261C(v15);
          v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
          if ((_DWORD)v15)
          {
            v196 = (v15 - 1) + 1;
            v197 = &v286;
            do
            {
              v198 = *(unsigned __int8 *)v197;
              v197 = (unsigned int *)((char *)v197 + 1);
              objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v193, v198, v194, v195);
              v199 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend_addObject_(v27, v200, (uint64_t)v199, v201, v202);

              --v196;
            }
            while (v196);
          }
          goto LABEL_77;
        case 2:
          if (v15 < 5)
          {
            v203 = sub_1D52845E4(*v13);
            v207 = v286;
            v208 = bswap32(v286);
            if (v203 == 2)
              v207 = v208;
            LODWORD(__p[0]) = v207;
            memset(&v285, 0, sizeof(v285));
            if (!(_DWORD)v15)
              goto LABEL_101;
            v209 = v15;
            v210 = (std::string::value_type *)__p;
            do
            {
              v211 = *v210++;
              std::string::append(&v285, 1uLL, v211);
              --v209;
            }
            while (v209);
            if ((v285.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
              objc_msgSend_stringWithUTF8String_(MEMORY[0x1E0CB3940], v204, (uint64_t)v285.__r_.__value_.__l.__data_, v205, v206);
            else
LABEL_101:
              objc_msgSend_stringWithUTF8String_(MEMORY[0x1E0CB3940], v204, (uint64_t)&v285, v205, v206);
            v27 = (__CFString *)objc_claimAutoreleasedReturnValue();

            if (SHIBYTE(v285.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v285.__r_.__value_.__l.__data_);
          }
          else
          {
            sub_1D5282F74((int *)__p, (int *)&v286);
            sub_1D5285164((uint64_t *)&v285, v13, (uint64_t)__p, 0);
            __p[0] = 0;
            __p[1] = 0;
            v284 = 0;
            v101 = *v13;
            v282 = v15;
            v27 = &stru_1E99A7480;
            if (sub_1D52849DC(v101, &v282, (uint64_t)__p))
            {
              if (v284 >= 0)
                objc_msgSend_stringWithUTF8String_(MEMORY[0x1E0CB3940], v102, (uint64_t)__p, v103, v104);
              else
                objc_msgSend_stringWithUTF8String_(MEMORY[0x1E0CB3940], v102, (uint64_t)__p[0], v103, v104);
              v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
            }

            if (SHIBYTE(v284) < 0)
              operator delete(__p[0]);
            sub_1D5285200((uint64_t *)&v285);
          }
          goto LABEL_104;
        case 3:
          if (v15 >= 3)
          {
            sub_1D5282F74((int *)__p, (int *)&v286);
            sub_1D5285164((uint64_t *)&v285, v13, (uint64_t)__p, 0);
            sub_1D52B261C(v15);
            v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
            v71 = v15;
            do
            {
              v72 = (void *)MEMORY[0x1E0CB37E8];
              v73 = sub_1D528479C(*v281);
              objc_msgSend_numberWithUnsignedShort_(v72, v74, v73, v75, v76);
              v77 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend_addObject_(v27, v78, (uint64_t)v77, v79, v80);

              --v71;
            }
            while (v71);
            goto LABEL_64;
          }
          if ((_DWORD)v15 != 2)
          {
            objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v21, (unsigned __int16)v286, v23, v24);
            v27 = (__CFString *)objc_claimAutoreleasedReturnValue();

            goto LABEL_104;
          }
          sub_1D52B261C(2uLL);
          v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
          v180 = 0;
          do
          {
            objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v177, *(unsigned __int16 *)((char *)&v286 + v180), v178, v179);
            v181 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_addObject_(v27, v182, (uint64_t)v181, v183, v184);

            v180 += 2;
          }
          while ((_DWORD)v180 != 4);
          goto LABEL_77;
        case 4:
          if (v15 < 2)
          {
            objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v21, v286, v23, v24);
            v27 = (__CFString *)objc_claimAutoreleasedReturnValue();

            goto LABEL_104;
          }
          sub_1D5282F74((int *)__p, (int *)&v286);
          sub_1D5285164((uint64_t *)&v285, v13, (uint64_t)__p, 0);
          sub_1D52B261C(v15);
          v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
          v81 = v15;
          do
          {
            v82 = (void *)MEMORY[0x1E0CB37E8];
            v83 = sub_1D52847F8(*v281);
            objc_msgSend_numberWithUnsignedInt_(v82, v84, v83, v85, v86);
            v87 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_addObject_(v27, v88, (uint64_t)v87, v89, v90);

            --v81;
          }
          while (v81);
          goto LABEL_64;
        case 5:
          if (v15 < 2)
          {
            sub_1D5282F74((int *)__p, (int *)&v286);
            sub_1D5285164((uint64_t *)&v285, v13, (uint64_t)__p, 0);
            v163 = v13;
            v164 = (void *)MEMORY[0x1E0CB37E8];
            *(float *)&v165 = sub_1D52849A0(*v163);
            objc_msgSend_numberWithFloat_(v164, v166, v167, v168, v169, v165);
            v27 = (__CFString *)objc_claimAutoreleasedReturnValue();

            sub_1D5285200((uint64_t *)&v285);
            goto LABEL_104;
          }
          sub_1D5282F74((int *)__p, (int *)&v286);
          sub_1D5285164((uint64_t *)&v285, v13, (uint64_t)__p, 0);
          sub_1D52B261C(v15);
          v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
          v49 = v15;
          do
          {
            v50 = (void *)MEMORY[0x1E0CB37E8];
            *(float *)&v51 = sub_1D52849A0(*v281);
            objc_msgSend_numberWithFloat_(v50, v52, v53, v54, v55, v51);
            v56 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_addObject_(v27, v57, (uint64_t)v56, v58, v59);

            --v49;
          }
          while (v49);
          goto LABEL_64;
        case 6:
          if (v15 >= 5)
          {
            sub_1D5282F74((int *)__p, (int *)&v286);
            sub_1D5285164((uint64_t *)&v285, v13, (uint64_t)__p, 0);
            sub_1D52B261C(v15);
            v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
            v105 = v15;
            do
            {
              v106 = (void *)MEMORY[0x1E0CB37E8];
              v107 = sub_1D52848A8(*v281);
              objc_msgSend_numberWithChar_(v106, v108, v107, v109, v110);
              v111 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend_addObject_(v27, v112, (uint64_t)v111, v113, v114);

              --v105;
            }
            while (v105);
            goto LABEL_64;
          }
          sub_1D52B261C(v15);
          v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
          if ((_DWORD)v15)
          {
            v215 = (v15 - 1) + 1;
            v216 = &v286;
            do
            {
              v217 = *(unsigned __int8 *)v216;
              v216 = (unsigned int *)((char *)v216 + 1);
              objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v212, v217, v213, v214);
              v218 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend_addObject_(v27, v219, (uint64_t)v218, v220, v221);

              --v215;
            }
            while (v215);
          }
          goto LABEL_77;
        case 7:
          if (v15 < 5)
          {
            objc_msgSend_dataWithBytes_length_(MEMORY[0x1E0C99DF0], v21, (uint64_t)&v286, v15, v24);
            v27 = (__CFString *)objc_claimAutoreleasedReturnValue();

          }
          else
          {
            sub_1D5282F74((int *)__p, (int *)&v286);
            sub_1D5285164((uint64_t *)&v285, v13, (uint64_t)__p, 0);
            objc_msgSend_dataWithLength_(MEMORY[0x1E0C99DF0], v115, v15, v116, v117);
            v118 = (void *)objc_claimAutoreleasedReturnValue();
            v119 = *v13;
            v120 = objc_retainAutorelease(v118);
            v125 = objc_msgSend_mutableBytes(v120, v121, v122, v123, v124);
            v130 = objc_msgSend_length(v120, v126, v127, v128, v129);
            LODWORD(v119) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v119 + 32))(v119, v125, v130);
            if (objc_msgSend_length(v120, v131, v132, v133, v134) == v119)
            {
              v27 = (__CFString *)v120;

            }
            else
            {
              v27 = v26;
            }

            sub_1D5285200((uint64_t *)&v285);
          }
          goto LABEL_104;
        case 8:
          if (v15 >= 3)
          {
            sub_1D5282F74((int *)__p, (int *)&v286);
            sub_1D5285164((uint64_t *)&v285, v13, (uint64_t)__p, 0);
            sub_1D52B261C(v15);
            v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
            v91 = v15;
            do
            {
              v92 = (void *)MEMORY[0x1E0CB37E8];
              v93 = sub_1D52848D4(*v281);
              objc_msgSend_numberWithShort_(v92, v94, v93, v95, v96);
              v97 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend_addObject_(v27, v98, (uint64_t)v97, v99, v100);

              --v91;
            }
            while (v91);
            goto LABEL_64;
          }
          if ((_DWORD)v15 == 2)
          {
            sub_1D52B261C(2uLL);
            v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
            v188 = 0;
            do
            {
              objc_msgSend_numberWithShort_(MEMORY[0x1E0CB37E8], v185, *(__int16 *)((char *)&v286 + v188), v186, v187);
              v189 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend_addObject_(v27, v190, (uint64_t)v189, v191, v192);

              v188 += 2;
            }
            while ((_DWORD)v188 != 4);
LABEL_77:

          }
          else
          {
            objc_msgSend_numberWithShort_(MEMORY[0x1E0CB37E8], v21, (__int16)v286, v23, v24);
            v27 = (__CFString *)objc_claimAutoreleasedReturnValue();

          }
          goto LABEL_104;
        case 9:
          if (v15 < 2)
          {
            objc_msgSend_numberWithInt_(MEMORY[0x1E0CB37E8], v21, v286, v23, v24);
            v27 = (__CFString *)objc_claimAutoreleasedReturnValue();

            goto LABEL_104;
          }
          sub_1D5282F74((int *)__p, (int *)&v286);
          sub_1D5285164((uint64_t *)&v285, v13, (uint64_t)__p, 0);
          sub_1D52B261C(v15);
          v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
          v146 = v15;
          do
          {
            v147 = (void *)MEMORY[0x1E0CB37E8];
            v148 = sub_1D52847F8(*v281);
            objc_msgSend_numberWithInt_(v147, v149, v148, v150, v151);
            v152 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_addObject_(v27, v153, (uint64_t)v152, v154, v155);

            --v146;
          }
          while (v146);
          goto LABEL_64;
        case 10:
          if (v15 < 2)
          {
            sub_1D5282F74((int *)__p, (int *)&v286);
            sub_1D5285164((uint64_t *)&v285, v13, (uint64_t)__p, 0);
            v170 = v13;
            v171 = (void *)MEMORY[0x1E0CB37E8];
            *(float *)&v172 = sub_1D5284964(*v170);
            objc_msgSend_numberWithFloat_(v171, v173, v174, v175, v176, v172);
            v27 = (__CFString *)objc_claimAutoreleasedReturnValue();

            sub_1D5285200((uint64_t *)&v285);
            goto LABEL_104;
          }
          sub_1D5282F74((int *)__p, (int *)&v286);
          sub_1D5285164((uint64_t *)&v285, v13, (uint64_t)__p, 0);
          sub_1D52B261C(v15);
          v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
          v60 = v15;
          do
          {
            v61 = (void *)MEMORY[0x1E0CB37E8];
            *(float *)&v62 = sub_1D5284964(*v281);
            objc_msgSend_numberWithFloat_(v61, v63, v64, v65, v66, v62);
            v67 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_addObject_(v27, v68, (uint64_t)v67, v69, v70);

            --v60;
          }
          while (v60);
          goto LABEL_64;
        case 11:
          if (v15 < 2)
          {
            LODWORD(v25) = v286;
            objc_msgSend_numberWithFloat_(MEMORY[0x1E0CB37E8], v21, v22, v23, v24, v25);
            v27 = (__CFString *)objc_claimAutoreleasedReturnValue();

            goto LABEL_104;
          }
          sub_1D5282F74((int *)__p, (int *)&v286);
          sub_1D5285164((uint64_t *)&v285, v13, (uint64_t)__p, 0);
          sub_1D52B261C(v15);
          v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
          v135 = v15;
          do
          {
            v136 = (void *)MEMORY[0x1E0CB37E8];
            *(float *)&v137 = sub_1D5284934(*v281);
            objc_msgSend_numberWithFloat_(v136, v138, v139, v140, v141, v137);
            v142 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_addObject_(v27, v143, (uint64_t)v142, v144, v145);

            --v135;
          }
          while (v135);
          goto LABEL_64;
        case 12:
          if (v15 < 2)
          {
            sub_1D5282F74((int *)__p, (int *)&v286);
            sub_1D5285164((uint64_t *)&v285, v13, (uint64_t)__p, 0);
            v156 = v13;
            v157 = (void *)MEMORY[0x1E0CB37E8];
            v158 = sub_1D528494C(*v156);
            objc_msgSend_numberWithDouble_(v157, v159, v160, v161, v162, v158);
            v27 = (__CFString *)objc_claimAutoreleasedReturnValue();

            sub_1D5285200((uint64_t *)&v285);
          }
          else
          {
            sub_1D5282F74((int *)__p, (int *)&v286);
            sub_1D5285164((uint64_t *)&v285, v13, (uint64_t)__p, 0);
            sub_1D52B261C(v15);
            v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
            v38 = v15;
            do
            {
              v39 = (void *)MEMORY[0x1E0CB37E8];
              v40 = sub_1D528494C(*v281);
              objc_msgSend_numberWithDouble_(v39, v41, v42, v43, v44, v40);
              v45 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend_addObject_(v27, v46, (uint64_t)v45, v47, v48);

              --v38;
            }
            while (v38);
LABEL_64:

            sub_1D5285200((uint64_t *)&v285);
          }
LABEL_104:
          objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v21, v280, v23, v24);
          v222 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_stringValue(v222, v223, v224, v225, v226);
          v227 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_objectForKeyedSubscript_(v278, v228, (uint64_t)v227, v229, v230);
          v231 = (void *)objc_claimAutoreleasedReturnValue();

          if (v231)
          {
            objc_msgSend_objectForKeyedSubscript_(v231, v232, qword_1EFF32380, v233, v234);
            v235 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_objectForKeyedSubscript_(v231, v236, qword_1EFF32398, v237, v238);
            v239 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_objectForKeyedSubscript_(v231, v240, qword_1EFF32388, v241, v242);
            v243 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_objectForKeyedSubscript_(v231, v244, qword_1EFF32390, v245, v246);
            v250 = (void (**)(_QWORD, _QWORD))objc_claimAutoreleasedReturnValue();
            if (v243
              && (objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v247, v14, v248, v249),
                  v251 = (void *)objc_claimAutoreleasedReturnValue(),
                  v255 = objc_msgSend_containsObject_(v243, v252, (uint64_t)v251, v253, v254),
                  v251,
                  !v255))
            {
              NSLog(CFSTR("Unexpected type for tag"));
            }
            else if (v235)
            {
              v288[0] = CFSTR("tag");
              objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v247, v280, v248, v249);
              v256 = (void *)objc_claimAutoreleasedReturnValue();
              v289[0] = v256;
              v289[1] = v235;
              v288[1] = CFSTR("tagName");
              v288[2] = CFSTR("type");
              objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v257, v14, v258, v259);
              v260 = (void *)objc_claimAutoreleasedReturnValue();
              v289[2] = v260;
              v288[3] = CFSTR("count");
              objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v261, v15, v262, v263);
              v265 = (void *)objc_claimAutoreleasedReturnValue();
              v289[3] = v265;
              v289[4] = v27;
              v288[4] = CFSTR("val");
              v288[5] = CFSTR("hide");
              v266 = (void *)MEMORY[0x1E0C9AAA0];
              if (v239)
                v266 = v239;
              v289[5] = v266;
              objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v264, (uint64_t)v289, (uint64_t)v288, 6);
              v267 = (void *)objc_claimAutoreleasedReturnValue();

              if (v250)
              {
                ((void (**)(_QWORD, void *))v250)[2](v250, v267);
                v270 = objc_claimAutoreleasedReturnValue();

                v267 = (void *)v270;
              }
              objc_msgSend_setObject_forKeyedSubscript_(v276, v268, (uint64_t)v267, (uint64_t)v235, v269);

            }
            else
            {
              NSLog(CFSTR("No tag name"));
            }

          }
          ++v279;
          v13 = v281;
          if (v277 <= (unsigned __int16)v279)
            break;
          continue;
        default:
          v27 = (__CFString *)v20;
          goto LABEL_104;
      }
      break;
    }
  }
  if ((a4 & 1) != 0 && sub_1D52847F8(*v13))
  {
    v273 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](v273, "RawCameraException");
    __cxa_throw(v273, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }

  return v276;
}

void sub_1D52D4AF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, void *a12, uint64_t a13, _Unwind_Exception *exception_object, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  void *v27;

  __cxa_free_exception(v27);

  _Unwind_Resume(a1);
}

id sub_1D52D4F34(uint64_t a1, const char *a2)
{
  const char *v2;
  const char *v3;
  const char *v4;
  const char *v5;
  void *v6;
  const char *v7;
  void *v8;
  const char *v9;
  void *v10;
  const char *v11;
  void *v12;
  const char *v13;
  void *v14;
  const char *v15;
  void *v16;
  const char *v17;
  void *v18;
  const char *v19;
  void *v20;
  const char *v21;
  void *v22;
  const char *v23;
  void *v24;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[13];
  _QWORD v57[15];

  v57[13] = *MEMORY[0x1E0C80C00];
  v56[0] = CFSTR("256");
  v54 = qword_1EFF32380;
  v55 = *MEMORY[0x1E0CBD128];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], a2, (uint64_t)&v55, (uint64_t)&v54, 1);
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v57[0] = v29;
  v56[1] = CFSTR("257");
  v52 = qword_1EFF32380;
  v53 = *MEMORY[0x1E0CBCEA8];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v2, (uint64_t)&v53, (uint64_t)&v52, 1);
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  v57[1] = v28;
  v56[2] = CFSTR("258");
  v50 = qword_1EFF32380;
  v51 = *MEMORY[0x1E0CBC880];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v3, (uint64_t)&v51, (uint64_t)&v50, 1);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v57[2] = v27;
  v56[3] = CFSTR("259");
  v48 = qword_1EFF32380;
  v49 = *MEMORY[0x1E0CBD078];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v4, (uint64_t)&v49, (uint64_t)&v48, 1);
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  v57[3] = v26;
  v56[4] = CFSTR("271");
  v46 = qword_1EFF32380;
  v47 = *MEMORY[0x1E0CBD0B0];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v5, (uint64_t)&v47, (uint64_t)&v46, 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v57[4] = v6;
  v56[5] = CFSTR("272");
  v44 = qword_1EFF32380;
  v45 = *MEMORY[0x1E0CBD0B8];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v7, (uint64_t)&v45, (uint64_t)&v44, 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v57[5] = v8;
  v56[6] = CFSTR("274");
  v42 = qword_1EFF32380;
  v43 = *MEMORY[0x1E0CBD0C0];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v9, (uint64_t)&v43, (uint64_t)&v42, 1);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v57[6] = v10;
  v56[7] = CFSTR("282");
  v40 = qword_1EFF32380;
  v41 = *MEMORY[0x1E0CBD0F8];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v11, (uint64_t)&v41, (uint64_t)&v40, 1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v57[7] = v12;
  v56[8] = CFSTR("283");
  v38 = qword_1EFF32380;
  v39 = *MEMORY[0x1E0CBD108];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v13, (uint64_t)&v39, (uint64_t)&v38, 1);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v57[8] = v14;
  v56[9] = CFSTR("296");
  v36 = qword_1EFF32380;
  v37 = *MEMORY[0x1E0CBD0D0];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v15, (uint64_t)&v37, (uint64_t)&v36, 1);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v57[9] = v16;
  v56[10] = CFSTR("306");
  v34 = qword_1EFF32380;
  v35 = *MEMORY[0x1E0CBD088];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v17, (uint64_t)&v35, (uint64_t)&v34, 1);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v57[10] = v18;
  v56[11] = CFSTR("315");
  v32 = qword_1EFF32380;
  v33 = *MEMORY[0x1E0CBD070];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v19, (uint64_t)&v33, (uint64_t)&v32, 1);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v57[11] = v20;
  v56[12] = CFSTR("33432");
  v30 = qword_1EFF32380;
  v31 = *MEMORY[0x1E0CBD080];
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v21, (uint64_t)&v31, (uint64_t)&v30, 1);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v57[12] = v22;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v23, (uint64_t)v57, (uint64_t)v56, 13);
  v24 = (void *)objc_claimAutoreleasedReturnValue();

  return v24;
}

void sub_1D52D5384(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;

  _Unwind_Resume(a1);
}

id sub_1D52D543C(uint64_t a1, const char *a2)
{
  uint64_t v2;
  uint64_t v3;
  const char *v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  const char *v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  const char *v24;
  uint64_t v25;
  const char *v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  const char *v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  const char *v34;
  uint64_t v35;
  const char *v36;
  uint64_t v37;
  const char *v38;
  uint64_t v39;
  const char *v40;
  uint64_t v41;
  const char *v42;
  uint64_t v43;
  const char *v44;
  uint64_t v45;
  const char *v46;
  uint64_t v47;
  const char *v48;
  void *v49;
  uint64_t v50;
  const char *v51;
  void *v52;
  uint64_t v53;
  const char *v54;
  void *v55;
  uint64_t v56;
  const char *v57;
  void *v58;
  uint64_t v59;
  const char *v60;
  void *v61;
  uint64_t v62;
  const char *v63;
  void *v64;
  uint64_t v65;
  const char *v66;
  void *v67;
  uint64_t v68;
  const char *v69;
  void *v70;
  const char *v71;
  void *v72;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  void *v87;
  void *v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  _QWORD v97[2];
  _QWORD v98[2];
  _QWORD v99[2];
  _QWORD v100[2];
  _QWORD v101[2];
  _QWORD v102[2];
  _QWORD v103[2];
  _QWORD v104[2];
  _QWORD v105[2];
  _QWORD v106[2];
  _QWORD v107[2];
  _QWORD v108[2];
  _QWORD v109[2];
  _QWORD v110[2];
  _QWORD v111[2];
  _QWORD v112[2];
  _QWORD v113[3];
  _QWORD v114[3];
  _QWORD v115[2];
  _QWORD v116[2];
  _QWORD v117[3];
  _QWORD v118[3];
  _QWORD v119[2];
  _QWORD v120[2];
  _QWORD v121[2];
  _QWORD v122[2];
  _QWORD v123[2];
  _QWORD v124[2];
  _QWORD v125[2];
  _QWORD v126[2];
  _QWORD v127[2];
  _QWORD v128[2];
  _QWORD v129[2];
  _QWORD v130[2];
  _QWORD v131[2];
  _QWORD v132[2];
  _QWORD v133[2];
  _QWORD v134[2];
  _QWORD v135[2];
  _QWORD v136[2];
  _QWORD v137[2];
  _QWORD v138[2];
  _QWORD v139[2];
  _QWORD v140[2];
  _QWORD v141[2];
  _QWORD v142[2];
  _QWORD v143[3];
  _QWORD v144[3];
  _QWORD v145[2];
  _QWORD v146[2];
  _QWORD v147[2];
  _QWORD v148[2];
  _QWORD v149[3];
  _QWORD v150[3];
  _QWORD v151[2];
  _QWORD v152[2];
  _QWORD v153[3];
  _QWORD v154[3];
  _QWORD v155[2];
  _QWORD v156[2];
  _QWORD v157[3];
  _QWORD v158[3];
  _QWORD v159[31];
  _QWORD v160[33];

  v160[31] = *MEMORY[0x1E0C80C00];
  v159[0] = CFSTR("0");
  v2 = *MEMORY[0x1E0CBCE00];
  v157[0] = qword_1EFF32380;
  v157[1] = qword_1EFF32388;
  v158[0] = v2;
  v158[1] = &unk_1E99C82B0;
  v157[2] = qword_1EFF32390;
  v158[2] = &unk_1E99744C0;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], a2, (uint64_t)v158, (uint64_t)v157, 3);
  v96 = (void *)objc_claimAutoreleasedReturnValue();
  v160[0] = v96;
  v159[1] = CFSTR("1");
  v3 = *MEMORY[0x1E0CBCD98];
  v155[0] = qword_1EFF32380;
  v155[1] = qword_1EFF32388;
  v156[0] = v3;
  v156[1] = &unk_1E99C82C8;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v4, (uint64_t)v156, (uint64_t)v155, 2);
  v95 = (void *)objc_claimAutoreleasedReturnValue();
  v160[1] = v95;
  v159[2] = CFSTR("2");
  v5 = *MEMORY[0x1E0CBCD90];
  v153[0] = qword_1EFF32380;
  v153[1] = qword_1EFF32388;
  v154[0] = v5;
  v154[1] = &unk_1E99C82E0;
  v153[2] = qword_1EFF32390;
  v154[2] = &unk_1E9974500;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v6, (uint64_t)v154, (uint64_t)v153, 3);
  v94 = (void *)objc_claimAutoreleasedReturnValue();
  v160[2] = v94;
  v159[3] = CFSTR("3");
  v7 = *MEMORY[0x1E0CBCDA8];
  v151[0] = qword_1EFF32380;
  v151[1] = qword_1EFF32388;
  v152[0] = v7;
  v152[1] = &unk_1E99C82F8;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v8, (uint64_t)v152, (uint64_t)v151, 2);
  v93 = (void *)objc_claimAutoreleasedReturnValue();
  v160[3] = v93;
  v159[4] = CFSTR("4");
  v9 = *MEMORY[0x1E0CBCDA0];
  v149[0] = qword_1EFF32380;
  v149[1] = qword_1EFF32388;
  v150[0] = v9;
  v150[1] = &unk_1E99C8310;
  v149[2] = qword_1EFF32390;
  v150[2] = &unk_1E9974500;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v10, (uint64_t)v150, (uint64_t)v149, 3);
  v92 = (void *)objc_claimAutoreleasedReturnValue();
  v160[4] = v92;
  v159[5] = CFSTR("5");
  v11 = *MEMORY[0x1E0CBCD08];
  v147[0] = qword_1EFF32380;
  v147[1] = qword_1EFF32388;
  v148[0] = v11;
  v148[1] = &unk_1E99C8328;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v12, (uint64_t)v148, (uint64_t)v147, 2);
  v91 = (void *)objc_claimAutoreleasedReturnValue();
  v160[5] = v91;
  v159[6] = CFSTR("6");
  v13 = *MEMORY[0x1E0CBCD00];
  v145[0] = qword_1EFF32380;
  v145[1] = qword_1EFF32388;
  v146[0] = v13;
  v146[1] = &unk_1E99C8340;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v14, (uint64_t)v146, (uint64_t)v145, 2);
  v90 = (void *)objc_claimAutoreleasedReturnValue();
  v160[6] = v90;
  v159[7] = CFSTR("7");
  v15 = *MEMORY[0x1E0CBCDE8];
  v143[0] = qword_1EFF32380;
  v143[1] = qword_1EFF32388;
  v144[0] = v15;
  v144[1] = &unk_1E99C8358;
  v143[2] = qword_1EFF32390;
  v144[2] = &unk_1E99744E0;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v16, (uint64_t)v144, (uint64_t)v143, 3);
  v89 = (void *)objc_claimAutoreleasedReturnValue();
  v160[7] = v89;
  v159[8] = CFSTR("8");
  v17 = *MEMORY[0x1E0CBCDC8];
  v141[0] = qword_1EFF32380;
  v141[1] = qword_1EFF32388;
  v142[0] = v17;
  v142[1] = &unk_1E99C8370;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v18, (uint64_t)v142, (uint64_t)v141, 2);
  v88 = (void *)objc_claimAutoreleasedReturnValue();
  v160[8] = v88;
  v159[9] = CFSTR("9");
  v19 = *MEMORY[0x1E0CBCDE0];
  v139[0] = qword_1EFF32380;
  v139[1] = qword_1EFF32388;
  v140[0] = v19;
  v140[1] = &unk_1E99C8388;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v20, (uint64_t)v140, (uint64_t)v139, 2);
  v87 = (void *)objc_claimAutoreleasedReturnValue();
  v160[9] = v87;
  v159[10] = CFSTR("10");
  v21 = *MEMORY[0x1E0CBCDB8];
  v137[0] = qword_1EFF32380;
  v137[1] = qword_1EFF32388;
  v138[0] = v21;
  v138[1] = &unk_1E99C83A0;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v22, (uint64_t)v138, (uint64_t)v137, 2);
  v86 = (void *)objc_claimAutoreleasedReturnValue();
  v160[10] = v86;
  v159[11] = CFSTR("11");
  v23 = *MEMORY[0x1E0CBCD18];
  v135[0] = qword_1EFF32380;
  v135[1] = qword_1EFF32388;
  v136[0] = v23;
  v136[1] = &unk_1E99C83B8;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v24, (uint64_t)v136, (uint64_t)v135, 2);
  v85 = (void *)objc_claimAutoreleasedReturnValue();
  v160[11] = v85;
  v159[12] = CFSTR("12");
  v25 = *MEMORY[0x1E0CBCDD8];
  v133[0] = qword_1EFF32380;
  v133[1] = qword_1EFF32388;
  v134[0] = v25;
  v134[1] = &unk_1E99C83D0;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v26, (uint64_t)v134, (uint64_t)v133, 2);
  v84 = (void *)objc_claimAutoreleasedReturnValue();
  v160[12] = v84;
  v159[13] = CFSTR("13");
  v27 = *MEMORY[0x1E0CBCDD0];
  v131[0] = qword_1EFF32380;
  v131[1] = qword_1EFF32388;
  v132[0] = v27;
  v132[1] = &unk_1E99C83E8;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v28, (uint64_t)v132, (uint64_t)v131, 2);
  v83 = (void *)objc_claimAutoreleasedReturnValue();
  v160[13] = v83;
  v159[14] = CFSTR("14");
  v29 = *MEMORY[0x1E0CBCDF8];
  v129[0] = qword_1EFF32380;
  v129[1] = qword_1EFF32388;
  v130[0] = v29;
  v130[1] = &unk_1E99C8400;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v30, (uint64_t)v130, (uint64_t)v129, 2);
  v82 = (void *)objc_claimAutoreleasedReturnValue();
  v160[14] = v82;
  v159[15] = CFSTR("15");
  v31 = *MEMORY[0x1E0CBCDF0];
  v127[0] = qword_1EFF32380;
  v127[1] = qword_1EFF32388;
  v128[0] = v31;
  v128[1] = &unk_1E99C8418;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v32, (uint64_t)v128, (uint64_t)v127, 2);
  v81 = (void *)objc_claimAutoreleasedReturnValue();
  v160[15] = v81;
  v159[16] = CFSTR("16");
  v33 = *MEMORY[0x1E0CBCD88];
  v125[0] = qword_1EFF32380;
  v125[1] = qword_1EFF32388;
  v126[0] = v33;
  v126[1] = &unk_1E99C8430;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v34, (uint64_t)v126, (uint64_t)v125, 2);
  v80 = (void *)objc_claimAutoreleasedReturnValue();
  v160[16] = v80;
  v159[17] = CFSTR("17");
  v35 = *MEMORY[0x1E0CBCD80];
  v123[0] = qword_1EFF32380;
  v123[1] = qword_1EFF32388;
  v124[0] = v35;
  v124[1] = &unk_1E99C8448;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v36, (uint64_t)v124, (uint64_t)v123, 2);
  v79 = (void *)objc_claimAutoreleasedReturnValue();
  v160[17] = v79;
  v159[18] = CFSTR("18");
  v37 = *MEMORY[0x1E0CBCDB0];
  v121[0] = qword_1EFF32380;
  v121[1] = qword_1EFF32388;
  v122[0] = v37;
  v122[1] = &unk_1E99C8460;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v38, (uint64_t)v122, (uint64_t)v121, 2);
  v78 = (void *)objc_claimAutoreleasedReturnValue();
  v160[18] = v78;
  v159[19] = CFSTR("19");
  v39 = *MEMORY[0x1E0CBCD50];
  v119[0] = qword_1EFF32380;
  v119[1] = qword_1EFF32388;
  v120[0] = v39;
  v120[1] = &unk_1E99C8478;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v40, (uint64_t)v120, (uint64_t)v119, 2);
  v77 = (void *)objc_claimAutoreleasedReturnValue();
  v160[19] = v77;
  v159[20] = CFSTR("20");
  v41 = *MEMORY[0x1E0CBCD48];
  v117[0] = qword_1EFF32380;
  v117[1] = qword_1EFF32388;
  v118[0] = v41;
  v118[1] = &unk_1E99C8490;
  v117[2] = qword_1EFF32390;
  v118[2] = &unk_1E9974500;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v42, (uint64_t)v118, (uint64_t)v117, 3);
  v76 = (void *)objc_claimAutoreleasedReturnValue();
  v160[20] = v76;
  v159[21] = CFSTR("21");
  v43 = *MEMORY[0x1E0CBCD60];
  v115[0] = qword_1EFF32380;
  v115[1] = qword_1EFF32388;
  v116[0] = v43;
  v116[1] = &unk_1E99C84A8;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v44, (uint64_t)v116, (uint64_t)v115, 2);
  v75 = (void *)objc_claimAutoreleasedReturnValue();
  v160[21] = v75;
  v159[22] = CFSTR("22");
  v45 = *MEMORY[0x1E0CBCD58];
  v113[0] = qword_1EFF32380;
  v113[1] = qword_1EFF32388;
  v114[0] = v45;
  v114[1] = &unk_1E99C84C0;
  v113[2] = qword_1EFF32390;
  v114[2] = &unk_1E9974500;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v46, (uint64_t)v114, (uint64_t)v113, 3);
  v74 = (void *)objc_claimAutoreleasedReturnValue();
  v160[22] = v74;
  v159[23] = CFSTR("23");
  v47 = *MEMORY[0x1E0CBCD30];
  v111[0] = qword_1EFF32380;
  v111[1] = qword_1EFF32388;
  v112[0] = v47;
  v112[1] = &unk_1E99C84D8;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v48, (uint64_t)v112, (uint64_t)v111, 2);
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  v160[23] = v49;
  v159[24] = CFSTR("24");
  v50 = *MEMORY[0x1E0CBCD28];
  v109[0] = qword_1EFF32380;
  v109[1] = qword_1EFF32388;
  v110[0] = v50;
  v110[1] = &unk_1E99C84F0;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v51, (uint64_t)v110, (uint64_t)v109, 2);
  v52 = (void *)objc_claimAutoreleasedReturnValue();
  v160[24] = v52;
  v159[25] = CFSTR("25");
  v53 = *MEMORY[0x1E0CBCD40];
  v107[0] = qword_1EFF32380;
  v107[1] = qword_1EFF32388;
  v108[0] = v53;
  v108[1] = &unk_1E99C8508;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v54, (uint64_t)v108, (uint64_t)v107, 2);
  v55 = (void *)objc_claimAutoreleasedReturnValue();
  v160[25] = v55;
  v159[26] = CFSTR("26");
  v56 = *MEMORY[0x1E0CBCD38];
  v105[0] = qword_1EFF32380;
  v105[1] = qword_1EFF32388;
  v106[0] = v56;
  v106[1] = &unk_1E99C8520;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v57, (uint64_t)v106, (uint64_t)v105, 2);
  v58 = (void *)objc_claimAutoreleasedReturnValue();
  v160[26] = v58;
  v159[27] = CFSTR("27");
  v59 = *MEMORY[0x1E0CBCDC0];
  v103[0] = qword_1EFF32380;
  v103[1] = qword_1EFF32388;
  v104[0] = v59;
  v104[1] = &unk_1E99C8538;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v60, (uint64_t)v104, (uint64_t)v103, 2);
  v61 = (void *)objc_claimAutoreleasedReturnValue();
  v160[27] = v61;
  v159[28] = CFSTR("28");
  v62 = *MEMORY[0x1E0CBCD10];
  v101[0] = qword_1EFF32380;
  v101[1] = qword_1EFF32388;
  v102[0] = v62;
  v102[1] = &unk_1E99C8550;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v63, (uint64_t)v102, (uint64_t)v101, 2);
  v64 = (void *)objc_claimAutoreleasedReturnValue();
  v160[28] = v64;
  v159[29] = CFSTR("29");
  v65 = *MEMORY[0x1E0CBCD20];
  v99[0] = qword_1EFF32380;
  v99[1] = qword_1EFF32388;
  v100[0] = v65;
  v100[1] = &unk_1E99C8568;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v66, (uint64_t)v100, (uint64_t)v99, 2);
  v67 = (void *)objc_claimAutoreleasedReturnValue();
  v160[29] = v67;
  v159[30] = CFSTR("30");
  v68 = *MEMORY[0x1E0CBCD70];
  v97[0] = qword_1EFF32380;
  v97[1] = qword_1EFF32388;
  v98[0] = v68;
  v98[1] = &unk_1E99C8580;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v69, (uint64_t)v98, (uint64_t)v97, 2);
  v70 = (void *)objc_claimAutoreleasedReturnValue();
  v160[30] = v70;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v71, (uint64_t)v160, (uint64_t)v159, 31);
  v72 = (void *)objc_claimAutoreleasedReturnValue();

  return v72;
}

void sub_1D52D6070(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19, void *a20,void *a21,void *a22,void *a23,void *a24,void *a25,void *a26,void *a27,void *a28,void *a29,void *a30,void *a31,void *a32)
{
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;

  _Unwind_Resume(a1);
}

id sub_1D52D624C(uint64_t a1, void *a2)
{
  id v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  const char *v38;
  uint64_t v39;
  void *v40;
  const char *v41;
  uint64_t v42;
  _QWORD v44[5];

  v44[4] = *MEMORY[0x1E0C80C00];
  v2 = a2;
  v7 = (void *)objc_msgSend_mutableCopy(v2, v3, v4, v5, v6);
  objc_msgSend_objectForKeyedSubscript_(v2, v8, (uint64_t)CFSTR("val"), v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if (v11)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0 && objc_msgSend_length(v11, v12, v13, v14, v15) == 4)
    {
      v16 = objc_retainAutorelease(v11);
      v21 = (unsigned __int8 *)objc_msgSend_bytes(v16, v17, v18, v19, v20);
      objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v22, *v21, v23, v24);
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      v44[0] = v25;
      objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v26, v21[1], v27, v28);
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      v44[1] = v29;
      objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v30, v21[2], v31, v32);
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      v44[2] = v33;
      objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v34, v21[3], v35, v36);
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      v44[3] = v37;
      objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v38, (uint64_t)v44, 4, v39);
      v40 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend_setObject_forKeyedSubscript_(v7, v41, (uint64_t)v40, (uint64_t)CFSTR("parsedVal"), v42);
    }
  }

  return v7;
}

void sub_1D52D63CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

id sub_1D52D6444(uint64_t a1, void *a2)
{
  id v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  const char *v38;
  uint64_t v39;
  void *v40;
  const char *v41;
  uint64_t v42;
  _QWORD v44[5];

  v44[4] = *MEMORY[0x1E0C80C00];
  v2 = a2;
  v7 = (void *)objc_msgSend_mutableCopy(v2, v3, v4, v5, v6);
  objc_msgSend_objectForKeyedSubscript_(v2, v8, (uint64_t)CFSTR("val"), v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if (v11)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0 && objc_msgSend_length(v11, v12, v13, v14, v15) == 4)
    {
      v16 = objc_retainAutorelease(v11);
      v21 = (unsigned __int8 *)objc_msgSend_bytes(v16, v17, v18, v19, v20);
      objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v22, *v21, v23, v24);
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      v44[0] = v25;
      objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v26, v21[1], v27, v28);
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      v44[1] = v29;
      objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v30, v21[2], v31, v32);
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      v44[2] = v33;
      objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v34, v21[3], v35, v36);
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      v44[3] = v37;
      objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v38, (uint64_t)v44, 4, v39);
      v40 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend_setObject_forKeyedSubscript_(v7, v41, (uint64_t)v40, (uint64_t)CFSTR("parsedVal"), v42);
    }
  }

  return v7;
}

void sub_1D52D65C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

id sub_1D52D663C(uint64_t a1, void *a2)
{
  id v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  double v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  double v45;
  double v46;
  double v47;
  void *v48;
  uint64_t v49;
  float v50;
  const char *v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  const char *v55;
  uint64_t v56;

  v2 = a2;
  v7 = (void *)objc_msgSend_mutableCopy(v2, v3, v4, v5, v6);
  objc_msgSend_objectForKeyedSubscript_(v2, v8, (uint64_t)CFSTR("val"), v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && objc_msgSend_count(v11, v12, v13, v14, v15) == 3)
  {
    objc_msgSend_objectAtIndexedSubscript_(v11, v16, 0, v17, v18);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_doubleValue(v19, v20, v21, v22, v23);
    v25 = v24;

    objc_msgSend_objectAtIndexedSubscript_(v11, v26, 1, v27, v28);
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_doubleValue(v29, v30, v31, v32, v33);
    v35 = v34;

    objc_msgSend_objectAtIndexedSubscript_(v11, v36, 2, v37, v38);
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_doubleValue(v39, v40, v41, v42, v43);
    v45 = v25 + v35 / 60.0 + v44 / 3600.0;

    v46 = 2000000000.0;
    if (v45 <= 2000000000.0)
      v46 = v45;
    if (v45 >= -2000000000.0)
      v47 = v46;
    else
      v47 = -2000000000.0;
    v48 = (void *)MEMORY[0x1E0CB3940];
    v49 = (int)fmod(v47 * 60.0, 60.0);
    v50 = fmod(v47 * 3600.0, 60.0);
    objc_msgSend_stringWithFormat_(v48, v51, (uint64_t)CFSTR("%.2d:%.2d:%05.2f"), v52, v53, (int)v47, v49, v50);
    v54 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(v7, v55, (uint64_t)v54, (uint64_t)CFSTR("parsedVal"), v56);

  }
  return v7;
}

void sub_1D52D67E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

id sub_1D52D6834(uint64_t a1, void *a2)
{
  id v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  double v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  double v45;
  const char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  const char *v51;
  uint64_t v52;

  v2 = a2;
  v7 = (void *)objc_msgSend_mutableCopy(v2, v3, v4, v5, v6);
  objc_msgSend_objectForKeyedSubscript_(v2, v8, (uint64_t)CFSTR("val"), v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && objc_msgSend_count(v11, v12, v13, v14, v15) == 3)
  {
    objc_msgSend_objectAtIndexedSubscript_(v11, v16, 0, v17, v18);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_doubleValue(v19, v20, v21, v22, v23);
    v25 = v24;

    objc_msgSend_objectAtIndexedSubscript_(v11, v26, 1, v27, v28);
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_doubleValue(v29, v30, v31, v32, v33);
    v35 = v34;

    objc_msgSend_objectAtIndexedSubscript_(v11, v36, 2, v37, v38);
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_doubleValue(v39, v40, v41, v42, v43);
    v45 = v25 + v35 / 60.0 + v44 / 3600.0;

    objc_msgSend_numberWithDouble_(MEMORY[0x1E0CB37E8], v46, v47, v48, v49, v45);
    v50 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(v7, v51, (uint64_t)v50, (uint64_t)CFSTR("parsedVal"), v52);

  }
  return v7;
}

void sub_1D52D6968(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

id sub_1D52D69B0(uint64_t a1, void *a2)
{
  return a2;
}

id sub_1D52D69C4(uint64_t a1, void *a2)
{
  id v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, void *, void *);
  void *v28;
  id v29;
  id v30;

  v2 = a2;
  objc_msgSend_objectForKeyedSubscript_(v2, v3, (uint64_t)CFSTR("val"), v4, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_dictionary(MEMORY[0x1E0C99E08], v7, v8, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = MEMORY[0x1E0C809B0];
  v26 = 3221225472;
  v27 = sub_1D52D6AFC;
  v28 = &unk_1E9974588;
  v12 = v6;
  v29 = v12;
  v13 = v11;
  v30 = v13;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(&unk_1E99CFF80, v14, (uint64_t)&v25, v15, v16);
  v21 = (void *)objc_msgSend_mutableCopy(v2, v17, v18, v19, v20, v25, v26, v27, v28);
  objc_msgSend_setObject_forKeyedSubscript_(v21, v22, (uint64_t)v13, (uint64_t)CFSTR("parsedVal"), v23);

  return v21;
}

void sub_1D52D6AB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1D52D6AFC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  id v21;

  v21 = a2;
  v5 = a3;
  v10 = objc_msgSend_unsignedIntegerValue(v5, v6, v7, v8, v9);
  if (objc_msgSend_count(*(void **)(a1 + 32), v11, v12, v13, v14) > v10)
  {
    objc_msgSend_objectAtIndexedSubscript_(*(void **)(a1 + 32), v15, v10, v16, v17);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 40), v19, (uint64_t)v18, (uint64_t)v21, v20);

  }
}

void sub_1D52D6B84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

id sub_1D52D6BA8(uint64_t a1, void *a2)
{
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  int isEqualToValue;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  void *v25;
  id v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int16 *v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  unsigned int v40;
  void *v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  const char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  const char *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  const char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  const char *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  void *v70;
  const char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  const char *v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  const char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _BOOL4 v83;
  const char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  void *v92;
  const char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned int v97;
  const char *v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  const char *v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  const char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unsigned int v110;
  const char *v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  const char *v115;
  uint64_t v116;
  uint64_t v117;
  const char *v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  const char *v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  const char *v126;
  uint64_t v127;
  id v129;
  uint64_t v130;
  void *v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  unint64_t v136;
  int v137;
  __int128 v138;
  _BYTE v139[128];
  uint64_t v140;

  v140 = *MEMORY[0x1E0C80C00];
  v129 = a2;
  v130 = *(_QWORD *)(a1 + 32);
  objc_msgSend_dictionary(MEMORY[0x1E0C99E08], v3, v4, v5, v6);
  v131 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v129, v7, (uint64_t)CFSTR("type"), v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  isEqualToValue = objc_msgSend_isEqualToValue_(v10, v11, (uint64_t)&unk_1E99CA5A8, v12, v13);

  if (isEqualToValue)
  {
    objc_msgSend_objectForKeyedSubscript_(v129, v15, (uint64_t)CFSTR("val"), v16, v17);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v23 = objc_msgSend_length(v18, v19, v20, v21, v22);
    v24 = v23 >> 1;
    sub_1D52B261C(v23 >> 1);
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    v26 = objc_retainAutorelease(v18);
    v31 = (__int16 *)objc_msgSend_bytes(v26, v27, v28, v29, v30);
    v136 = objc_msgSend_length(v26, v32, v33, v34, v35);
    sub_1D528304C(&v137, &v136);
    v39 = sub_1D52843AC((uint64_t)v31, (uint64_t)&v137, 0, &v138);
    if (v23 >= 2)
    {
      if (v24 <= 1)
        v24 = 1;
      do
      {
        v40 = *v31++;
        objc_msgSend_numberWithShort_(MEMORY[0x1E0CB37E8], v36, v40, v37, v38, v39);
        v41 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_addObject_(v25, v42, (uint64_t)v41, v43, v44);

        --v24;
      }
      while (v24);
    }
    objc_msgSend_arrayWithArray_(MEMORY[0x1E0C99D20], v36, (uint64_t)v25, v37, v38, v39);
    v45 = (void *)objc_claimAutoreleasedReturnValue();
    v46 = (std::__shared_weak_count *)*((_QWORD *)&v138 + 1);
    if (*((_QWORD *)&v138 + 1))
    {
      v47 = (unint64_t *)(*((_QWORD *)&v138 + 1) + 8);
      do
        v48 = __ldaxr(v47);
      while (__stlxr(v48 - 1, v47));
      if (!v48)
      {
        ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
        std::__shared_weak_count::__release_weak(v46);
      }
    }

  }
  else
  {
    objc_msgSend_objectForKeyedSubscript_(v129, v15, (uint64_t)CFSTR("val"), v16, v17);
    v45 = (void *)objc_claimAutoreleasedReturnValue();
  }
  objc_msgSend_objectAtIndexedSubscript_(v45, v49, 0, v50, v51);
  v52 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend_unsignedShortValue(v52, v53, v54, v55, v56) <= 0x1F)
  {

  }
  else
  {
    objc_msgSend_objectAtIndexedSubscript_(v45, v57, 0, v58, v59);
    v60 = (void *)objc_claimAutoreleasedReturnValue();
    v65 = objc_msgSend_unsignedShortValue(v60, v61, v62, v63, v64) < 0x22;

    if (v65)
    {
      v69 = &unk_1E99C8598;
      goto LABEL_22;
    }
  }
  objc_msgSend_objectAtIndexedSubscript_(v45, v66, 0, v67, v68);
  v70 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend_unsignedShortValue(v70, v71, v72, v73, v74) <= 0xF)
  {

    v69 = 0;
  }
  else
  {
    objc_msgSend_objectAtIndexedSubscript_(v45, v75, 0, v76, v77);
    v78 = (void *)objc_claimAutoreleasedReturnValue();
    v83 = objc_msgSend_unsignedShortValue(v78, v79, v80, v81, v82) < 0x20;

    if (v83)
      v69 = &unk_1E99C85B0;
    else
      v69 = 0;
  }
LABEL_22:
  v134 = 0u;
  v135 = 0u;
  v132 = 0u;
  v133 = 0u;
  v88 = objc_msgSend_countByEnumeratingWithState_objects_count_(v69, v66, (uint64_t)&v132, (uint64_t)v139, 16);
  if (v88)
  {
    v89 = *(_QWORD *)v133;
    do
    {
      v90 = 0;
      do
      {
        if (*(_QWORD *)v133 != v89)
          objc_enumerationMutation(v69);
        v91 = *(void **)(*((_QWORD *)&v132 + 1) + 8 * v90);
        *(_BYTE *)(v130 + 736) = 1;
        objc_msgSend_objectForKeyedSubscript_(v91, v84, (uint64_t)CFSTR("index"), v86, v87);
        v92 = (void *)objc_claimAutoreleasedReturnValue();
        v97 = objc_msgSend_unsignedIntValue(v92, v93, v94, v95, v96);

        objc_msgSend_objectForKeyedSubscript_(v91, v98, (uint64_t)CFSTR("name"), v99, v100);
        v101 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_objectForKeyedSubscript_(v91, v102, (uint64_t)CFSTR("size"), v103, v104);
        v105 = (void *)objc_claimAutoreleasedReturnValue();
        v110 = objc_msgSend_unsignedIntValue(v105, v106, v107, v108, v109);

        if (v110 == 1)
        {
          objc_msgSend_objectAtIndexedSubscript_(v45, v111, v97, v112, v113);
          v114 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_setObject_forKeyedSubscript_(v131, v115, (uint64_t)v114, (uint64_t)v101, v116);
        }
        else
        {
          v117 = v110;
          sub_1D52B261C(v110);
          v114 = (void *)objc_claimAutoreleasedReturnValue();
          if (v110)
          {
            do
            {
              objc_msgSend_objectAtIndexedSubscript_(v45, v118, v97, v119, v120);
              v121 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend_addObject_(v114, v122, (uint64_t)v121, v123, v124);

              ++v97;
              --v117;
            }
            while (v117);
          }
          objc_msgSend_setObject_forKeyedSubscript_(v131, v118, (uint64_t)v114, (uint64_t)v101, v120);
        }

        ++v90;
      }
      while (v90 != v88);
      v88 = objc_msgSend_countByEnumeratingWithState_objects_count_(v69, v84, (uint64_t)&v132, (uint64_t)v139, 16);
    }
    while (v88);
  }
  v125 = (void *)objc_msgSend_mutableCopy(v129, v84, v85, v86, v87);
  objc_msgSend_setObject_forKeyedSubscript_(v125, v126, (uint64_t)v131, (uint64_t)CFSTR("parsedVal"), v127);

  return v125;
}

void sub_1D52D7000(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

id sub_1D52D712C(uint64_t a1, void *a2)
{
  id v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, void *, void *);
  void *v28;
  id v29;
  id v30;

  v2 = a2;
  objc_msgSend_objectForKeyedSubscript_(v2, v3, (uint64_t)CFSTR("val"), v4, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_dictionary(MEMORY[0x1E0C99E08], v7, v8, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = MEMORY[0x1E0C809B0];
  v26 = 3221225472;
  v27 = sub_1D52D7264;
  v28 = &unk_1E9974588;
  v12 = v6;
  v29 = v12;
  v13 = v11;
  v30 = v13;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(&unk_1E99D0778, v14, (uint64_t)&v25, v15, v16);
  v21 = (void *)objc_msgSend_mutableCopy(v2, v17, v18, v19, v20, v25, v26, v27, v28);
  objc_msgSend_setObject_forKeyedSubscript_(v21, v22, (uint64_t)v13, (uint64_t)CFSTR("parsedVal"), v23);

  return v21;
}

void sub_1D52D721C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1D52D7264(uint64_t a1, void *a2, void *a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  id v21;

  v21 = a2;
  v5 = a3;
  v10 = objc_msgSend_unsignedIntegerValue(v5, v6, v7, v8, v9);
  if (objc_msgSend_count(*(void **)(a1 + 32), v11, v12, v13, v14) > v10)
  {
    objc_msgSend_objectAtIndexedSubscript_(*(void **)(a1 + 32), v15, v10, v16, v17);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 40), v19, (uint64_t)v18, (uint64_t)v21, v20);

  }
}

void sub_1D52D72EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

id sub_1D52D7310(uint64_t a1, void *a2)
{
  id v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, void *, void *);
  void *v28;
  id v29;
  id v30;

  v2 = a2;
  objc_msgSend_objectForKeyedSubscript_(v2, v3, (uint64_t)CFSTR("val"), v4, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_dictionary(MEMORY[0x1E0C99E08], v7, v8, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = MEMORY[0x1E0C809B0];
  v26 = 3221225472;
  v27 = sub_1D52D7448;
  v28 = &unk_1E9974588;
  v12 = v6;
  v29 = v12;
  v13 = v11;
  v30 = v13;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(&unk_1E99D07A0, v14, (uint64_t)&v25, v15, v16);
  v21 = (void *)objc_msgSend_mutableCopy(v2, v17, v18, v19, v20, v25, v26, v27, v28);
  objc_msgSend_setObject_forKeyedSubscript_(v21, v22, (uint64_t)v13, (uint64_t)CFSTR("parsedVal"), v23);

  return v21;
}

void sub_1D52D7400(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1D52D7448(uint64_t a1, void *a2, void *a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  id v21;

  v21 = a2;
  v5 = a3;
  v10 = objc_msgSend_unsignedIntegerValue(v5, v6, v7, v8, v9);
  if (objc_msgSend_count(*(void **)(a1 + 32), v11, v12, v13, v14) > v10)
  {
    objc_msgSend_objectAtIndexedSubscript_(*(void **)(a1 + 32), v15, v10, v16, v17);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 40), v19, (uint64_t)v18, (uint64_t)v21, v20);

  }
}

void sub_1D52D74D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

id sub_1D52D74F4(uint64_t a1, void *a2)
{
  id v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, void *, void *);
  void *v28;
  id v29;
  id v30;

  v2 = a2;
  objc_msgSend_objectForKeyedSubscript_(v2, v3, (uint64_t)CFSTR("val"), v4, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_dictionary(MEMORY[0x1E0C99E08], v7, v8, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = MEMORY[0x1E0C809B0];
  v26 = 3221225472;
  v27 = sub_1D52D762C;
  v28 = &unk_1E9974588;
  v12 = v6;
  v29 = v12;
  v13 = v11;
  v30 = v13;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(&unk_1E99D07C8, v14, (uint64_t)&v25, v15, v16);
  v21 = (void *)objc_msgSend_mutableCopy(v2, v17, v18, v19, v20, v25, v26, v27, v28);
  objc_msgSend_setObject_forKeyedSubscript_(v21, v22, (uint64_t)v13, (uint64_t)CFSTR("parsedVal"), v23);

  return v21;
}

void sub_1D52D75E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1D52D762C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  id v21;

  v21 = a2;
  v5 = a3;
  v10 = objc_msgSend_unsignedIntegerValue(v5, v6, v7, v8, v9);
  if (objc_msgSend_count(*(void **)(a1 + 32), v11, v12, v13, v14) > v10)
  {
    objc_msgSend_objectAtIndexedSubscript_(*(void **)(a1 + 32), v15, v10, v16, v17);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 40), v19, (uint64_t)v18, (uint64_t)v21, v20);

  }
}

void sub_1D52D76B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

id sub_1D52D76D8(uint64_t a1, void *a2)
{
  id v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, void *, void *);
  void *v28;
  id v29;
  id v30;

  v2 = a2;
  objc_msgSend_objectForKeyedSubscript_(v2, v3, (uint64_t)CFSTR("val"), v4, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_dictionary(MEMORY[0x1E0C99E08], v7, v8, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = MEMORY[0x1E0C809B0];
  v26 = 3221225472;
  v27 = sub_1D52D7810;
  v28 = &unk_1E9974588;
  v12 = v6;
  v29 = v12;
  v13 = v11;
  v30 = v13;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(&unk_1E99D07F0, v14, (uint64_t)&v25, v15, v16);
  v21 = (void *)objc_msgSend_mutableCopy(v2, v17, v18, v19, v20, v25, v26, v27, v28);
  objc_msgSend_setObject_forKeyedSubscript_(v21, v22, (uint64_t)v13, (uint64_t)CFSTR("parsedVal"), v23);

  return v21;
}

void sub_1D52D77C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1D52D7810(uint64_t a1, void *a2, void *a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  id v21;

  v21 = a2;
  v5 = a3;
  v10 = objc_msgSend_unsignedIntegerValue(v5, v6, v7, v8, v9);
  if (objc_msgSend_count(*(void **)(a1 + 32), v11, v12, v13, v14) > v10)
  {
    objc_msgSend_objectAtIndexedSubscript_(*(void **)(a1 + 32), v15, v10, v16, v17);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 40), v19, (uint64_t)v18, (uint64_t)v21, v20);

  }
}

void sub_1D52D7898(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

id sub_1D52D78BC(uint64_t a1, void *a2)
{
  id v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, void *, void *);
  void *v28;
  id v29;
  id v30;

  v2 = a2;
  objc_msgSend_objectForKeyedSubscript_(v2, v3, (uint64_t)CFSTR("val"), v4, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_dictionary(MEMORY[0x1E0C99E08], v7, v8, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = MEMORY[0x1E0C809B0];
  v26 = 3221225472;
  v27 = sub_1D52D79F4;
  v28 = &unk_1E9974588;
  v12 = v6;
  v29 = v12;
  v13 = v11;
  v30 = v13;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(&unk_1E99D0818, v14, (uint64_t)&v25, v15, v16);
  v21 = (void *)objc_msgSend_mutableCopy(v2, v17, v18, v19, v20, v25, v26, v27, v28);
  objc_msgSend_setObject_forKeyedSubscript_(v21, v22, (uint64_t)v13, (uint64_t)CFSTR("parsedVal"), v23);

  return v21;
}

void sub_1D52D79AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1D52D79F4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  id v21;

  v21 = a2;
  v5 = a3;
  v10 = objc_msgSend_unsignedIntegerValue(v5, v6, v7, v8, v9);
  if (objc_msgSend_count(*(void **)(a1 + 32), v11, v12, v13, v14) > v10)
  {
    objc_msgSend_objectAtIndexedSubscript_(*(void **)(a1 + 32), v15, v10, v16, v17);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 40), v19, (uint64_t)v18, (uint64_t)v21, v20);

  }
}

void sub_1D52D7A7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

id sub_1D52D7AA0(uint64_t a1, void *a2)
{
  id v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, void *, void *);
  void *v28;
  id v29;
  id v30;

  v2 = a2;
  objc_msgSend_objectForKeyedSubscript_(v2, v3, (uint64_t)CFSTR("val"), v4, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_dictionary(MEMORY[0x1E0C99E08], v7, v8, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = MEMORY[0x1E0C809B0];
  v26 = 3221225472;
  v27 = sub_1D52D7BD8;
  v28 = &unk_1E9974588;
  v12 = v6;
  v29 = v12;
  v13 = v11;
  v30 = v13;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(&unk_1E99D0840, v14, (uint64_t)&v25, v15, v16);
  v21 = (void *)objc_msgSend_mutableCopy(v2, v17, v18, v19, v20, v25, v26, v27, v28);
  objc_msgSend_setObject_forKeyedSubscript_(v21, v22, (uint64_t)v13, (uint64_t)CFSTR("parsedVal"), v23);

  return v21;
}

void sub_1D52D7B90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1D52D7BD8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  id v21;

  v21 = a2;
  v5 = a3;
  v10 = objc_msgSend_unsignedIntegerValue(v5, v6, v7, v8, v9);
  if (objc_msgSend_count(*(void **)(a1 + 32), v11, v12, v13, v14) > v10)
  {
    objc_msgSend_objectAtIndexedSubscript_(*(void **)(a1 + 32), v15, v10, v16, v17);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 40), v19, (uint64_t)v18, (uint64_t)v21, v20);

  }
}

void sub_1D52D7C60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

id sub_1D52D7C84(uint64_t a1, void *a2)
{
  id v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, void *, void *);
  void *v28;
  id v29;
  id v30;

  v2 = a2;
  objc_msgSend_objectForKeyedSubscript_(v2, v3, (uint64_t)CFSTR("val"), v4, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_dictionary(MEMORY[0x1E0C99E08], v7, v8, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = MEMORY[0x1E0C809B0];
  v26 = 3221225472;
  v27 = sub_1D52D7DBC;
  v28 = &unk_1E9974588;
  v12 = v6;
  v29 = v12;
  v13 = v11;
  v30 = v13;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(&unk_1E99D0868, v14, (uint64_t)&v25, v15, v16);
  v21 = (void *)objc_msgSend_mutableCopy(v2, v17, v18, v19, v20, v25, v26, v27, v28);
  objc_msgSend_setObject_forKeyedSubscript_(v21, v22, (uint64_t)v13, (uint64_t)CFSTR("parsedVal"), v23);

  return v21;
}

void sub_1D52D7D74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1D52D7DBC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  id v21;

  v21 = a2;
  v5 = a3;
  v10 = objc_msgSend_unsignedIntegerValue(v5, v6, v7, v8, v9);
  if (objc_msgSend_count(*(void **)(a1 + 32), v11, v12, v13, v14) > v10)
  {
    objc_msgSend_objectAtIndexedSubscript_(*(void **)(a1 + 32), v15, v10, v16, v17);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 40), v19, (uint64_t)v18, (uint64_t)v21, v20);

  }
}

void sub_1D52D7E44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1D52D7E6C(uint64_t a1)
{
  sub_1D52D7E98(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52D7E90(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 736);
}

uint64_t sub_1D52D7E98(uint64_t a1)
{
  *(_QWORD *)a1 = off_1E9974198;

  if (*(char *)(a1 + 567) < 0)
    operator delete(*(void **)(a1 + 544));
  if (*(char *)(a1 + 543) < 0)
    operator delete(*(void **)(a1 + 520));

  return sub_1D52B2308(a1);
}

void sub_1D52D7EF4(uint64_t *a1@<X1>, char *a2@<X2>, void **a3@<X3>, void **a4@<X4>, _QWORD *a5@<X8>)
{
  _QWORD *v10;

  v10 = operator new(0x300uLL);
  sub_1D52D7F74(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;
  sub_1D5285658((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1D52D7F60(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52D7F74(_QWORD *a1, uint64_t *a2, char *a3, void **a4, void **a5)
{
  a1[2] = 0;
  *a1 = &unk_1E99746D0;
  a1[1] = 0;
  sub_1D52C7140((uint64_t)(a1 + 3), a2, *a3, *a4, *a5);
  return a1;
}

void sub_1D52D7FB8(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52D7FCC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E99746D0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52D7FE0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E99746D0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52D8014(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a1 + 24) + 16))(a1 + 24);
}

_OWORD *sub_1D52D8024(uint64_t **a1, void **a2, uint64_t a3, _OWORD **a4)
{
  void **v6;
  _OWORD *v7;
  uint64_t **v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12;

  v6 = (void **)sub_1D52B3CFC((uint64_t)a1, &v12, a2);
  v7 = *v6;
  if (!*v6)
  {
    v8 = (uint64_t **)v6;
    v7 = operator new(0x40uLL);
    v9 = *a4;
    v10 = *((_QWORD *)*a4 + 2);
    v7[2] = **a4;
    *((_QWORD *)v7 + 6) = v10;
    v9[1] = 0;
    v9[2] = 0;
    *v9 = 0;
    *((_QWORD *)v7 + 7) = 0;
    sub_1D528EFCC(a1, v12, v8, (uint64_t *)v7);
  }
  return v7;
}

void sub_1D52D80BC(_QWORD *a1@<X1>, unint64_t *a2@<X2>, uint64_t a3@<X3>, _OWORD *a4@<X4>, void **a5@<X5>, _QWORD *a6@<X8>)
{
  _QWORD *v12;

  v12 = operator new(0x130uLL);
  sub_1D52D814C(v12, a1, a2, a3, a4, a5);
  *a6 = v12 + 3;
  a6[1] = v12;
  sub_1D5285658((uint64_t)a6, v12 + 4, (uint64_t)(v12 + 3));
}

void sub_1D52D8138(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52D814C(_QWORD *a1, _QWORD *a2, unint64_t *a3, uint64_t a4, _OWORD *a5, void **a6)
{
  a1[2] = 0;
  *a1 = &unk_1E9974720;
  a1[1] = 0;
  sub_1D52D81FC((uint64_t)(a1 + 3), a2, *a3, a4, a5, *a6, 16);
  return a1;
}

void sub_1D52D8190(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52D81A4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9974720;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52D81B8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9974720;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52D81EC(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_1D52D81FC(uint64_t a1, _QWORD *a2, unint64_t a3, uint64_t a4, _OWORD *a5, void *a6, int a7)
{
  id v13;
  id v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  const char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  const char *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  const char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  const char *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  const char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  const char *v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  const char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  const char *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  const char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  const char *v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  const char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  void *exception;

  v13 = a6;
  sub_1D530B330(a1, a2, a3, (_QWORD *)a4, a5);
  *(_QWORD *)a1 = &off_1E99A68E8;
  *(_DWORD *)(a1 + 188) = a7;
  *(_QWORD *)(a1 + 192) = 0;
  v14 = v13;
  *(_QWORD *)(a1 + 200) = v14;
  *(_QWORD *)(a1 + 256) = 0;
  sub_1D53A1140((_QWORD *)(a1 + 264));
  if (*(int *)a4 <= 0)
    goto LABEL_7;
  if (*(int *)(a4 + 4) <= 0)
    goto LABEL_7;
  objc_msgSend_objectForKeyedSubscript_(*(void **)(a1 + 200), v15, (uint64_t)CFSTR("tile_width"), v16, v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  *(_DWORD *)(a1 + 208) = objc_msgSend_unsignedIntValue(v18, v19, v20, v21, v22);

  if ((*(_DWORD *)(a1 + 208) - 1) >= *(_DWORD *)a4)
    goto LABEL_7;
  objc_msgSend_objectForKeyedSubscript_(*(void **)(a1 + 200), v23, (uint64_t)CFSTR("tile_height"), v24, v25);
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  *(_DWORD *)(a1 + 212) = objc_msgSend_unsignedIntValue(v26, v27, v28, v29, v30);

  if ((*(_DWORD *)(a1 + 212) - 1) >= *(_DWORD *)(a4 + 4))
    goto LABEL_7;
  objc_msgSend_objectForKeyedSubscript_(*(void **)(a1 + 200), v31, (uint64_t)CFSTR("dwt_level"), v32, v33);
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  *(_DWORD *)(a1 + 216) = objc_msgSend_unsignedIntValue(v34, v35, v36, v37, v38);

  objc_msgSend_objectForKeyedSubscript_(*(void **)(a1 + 200), v39, (uint64_t)CFSTR("tile_index"), v40, v41);
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  *(_DWORD *)(a1 + 220) = objc_msgSend_unsignedIntValue(v42, v43, v44, v45, v46);

  objc_msgSend_objectForKeyedSubscript_(*(void **)(a1 + 200), v47, (uint64_t)CFSTR("plane_num"), v48, v49);
  v50 = (void *)objc_claimAutoreleasedReturnValue();
  *(_DWORD *)(a1 + 224) = objc_msgSend_unsignedIntValue(v50, v51, v52, v53, v54);

  objc_msgSend_objectForKeyedSubscript_(*(void **)(a1 + 200), v55, (uint64_t)CFSTR("tile_h_overlap"), v56, v57);
  v58 = (void *)objc_claimAutoreleasedReturnValue();
  *(_DWORD *)(a1 + 240) = objc_msgSend_unsignedIntValue(v58, v59, v60, v61, v62);

  objc_msgSend_objectForKeyedSubscript_(*(void **)(a1 + 200), v63, (uint64_t)CFSTR("tile_v_overlap"), v64, v65);
  v66 = (void *)objc_claimAutoreleasedReturnValue();
  *(_DWORD *)(a1 + 244) = objc_msgSend_unsignedIntValue(v66, v67, v68, v69, v70);

  objc_msgSend_objectForKeyedSubscript_(*(void **)(a1 + 200), v71, (uint64_t)CFSTR("ct_mode"), v72, v73);
  v74 = (void *)objc_claimAutoreleasedReturnValue();
  *(_DWORD *)(a1 + 248) = objc_msgSend_unsignedIntValue(v74, v75, v76, v77, v78);

  objc_msgSend_objectForKeyedSubscript_(*(void **)(a1 + 200), v79, (uint64_t)CFSTR("bit_depth"), v80, v81);
  v82 = (void *)objc_claimAutoreleasedReturnValue();
  *(_DWORD *)(a1 + 252) = objc_msgSend_unsignedIntValue(v82, v83, v84, v85, v86);

  v87 = *(_DWORD *)(a1 + 48);
  v88 = *(_DWORD *)(a1 + 212);
  v89 = (*(_DWORD *)(a1 + 44) + *(_DWORD *)(a1 + 208) - 1) / *(_DWORD *)(a1 + 208);
  v90 = (v87 + v88 - 1) / v88;
  *(_DWORD *)(a1 + 232) = v89;
  *(_DWORD *)(a1 + 236) = v90;
  *(_DWORD *)(a1 + 228) = v90 * v89;
  if (v88 != v87)
  {
LABEL_7:
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }

  return a1;
}

void sub_1D52D84FC(_Unwind_Exception *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  sub_1D5282EB4(v3);
  sub_1D5282F0C((_QWORD *)v2);

  _Unwind_Resume(a1);
}

id sub_1D52D8588(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const char *v28;
  void *v29;
  const char *v30;
  uint64_t v31;
  void *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[11];
  _QWORD v43[2];

  v43[1] = *MEMORY[0x1E0C80C00];
  v5 = *MEMORY[0x1E0CBD388];
  v34 = *MEMORY[0x1E0CBD368];
  v35 = v5;
  v42[0] = MEMORY[0x1E0C9AAA0];
  v42[1] = CFSTR("com.fuji.raw-image");
  v6 = *MEMORY[0x1E0CBD380];
  v36 = *MEMORY[0x1E0CBD348];
  v42[2] = CFSTR(".raf.");
  v42[3] = &unk_1E99CACC8;
  v42[4] = &unk_1E99CACE0;
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], a2, (uint64_t)sub_1D52D883C, a4, a5, v34, v35, v36, v6, *MEMORY[0x1E0CBD370], *MEMORY[0x1E0CBD378]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v42[5] = v7;
  v37 = *MEMORY[0x1E0CBD330];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v8, (uint64_t)sub_1D52D886C, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v42[6] = v11;
  v38 = *MEMORY[0x1E0CBD350];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v12, (uint64_t)sub_1D52D8878, v13, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v42[7] = v15;
  v39 = *MEMORY[0x1E0CBD338];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v16, (uint64_t)sub_1D52E8DA4, v17, v18);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v42[8] = v19;
  v40 = *MEMORY[0x1E0CBD358];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v20, (uint64_t)sub_1D52D8884, v21, v22);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v42[9] = v23;
  v41 = *MEMORY[0x1E0CBD360];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v24, (uint64_t)sub_1D52D8890, v25, v26);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v42[10] = v27;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v28, (uint64_t)v42, (uint64_t)&v34, 11);
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v43[0] = v29;
  objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v30, (uint64_t)v43, 1, v31);
  v32 = (void *)objc_claimAutoreleasedReturnValue();

  return v32;
}

void sub_1D52D87DC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

BOOL sub_1D52D883C(_QWORD *a1, unint64_t a2)
{
  return a2 >= 8 && *a1 == 0x4D4C4946494A5546;
}

void sub_1D52D886C(const void *a1, uint64_t a2, uint64_t a3)
{
  sub_1D52E7A20(a1, a2, a3, &unk_1E9974798);
}

uint64_t sub_1D52D8878(os_signpost_id_t a1)
{
  return sub_1D52E8C40(a1);
}

uint64_t sub_1D52D8884(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1D52E7438(a1, a2, a3, &unk_1E9974798);
}

uint64_t sub_1D52D8890(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1D52E9A7C(a1, a2, a3, &unk_1E9974798);
}

void sub_1D52D889C(uint64_t *a1@<X1>, char a2@<W2>, void *a3@<X3>, void *a4@<X4>, _OWORD *a5@<X8>)
{
  __int128 v8;
  id v9;
  id v10;
  char v11;

  v11 = a2;
  v10 = a3;
  v9 = a4;
  sub_1D52DCD14(a1, &v11, &v10, &v9, &v8);
  *a5 = v8;

}

void sub_1D52D8918(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{

  _Unwind_Resume(a1);
}

double sub_1D52D8934(uint64_t a1, uint64_t *a2, char a3, void *a4, void *a5)
{
  uint64_t v5;
  double result;

  sub_1D52A7E98(a1, a2, a3, a4, a5);
  *(_QWORD *)v5 = off_1E99747C8;
  *(_BYTE *)(v5 + 1380) = 0;
  *(_BYTE *)(v5 + 1384) = 0;
  *(_BYTE *)(v5 + 1392) = 0;
  *(_BYTE *)(v5 + 1604) = 0;
  *(_BYTE *)(v5 + 1608) = 0;
  *(_BYTE *)(v5 + 1612) = 0;
  *(_BYTE *)(v5 + 1616) = 0;
  *(_BYTE *)(v5 + 1620) = 0;
  *(_BYTE *)(v5 + 1624) = 0;
  *(_BYTE *)(v5 + 1628) = 0;
  *(_BYTE *)(v5 + 1632) = 0;
  *(_BYTE *)(v5 + 1640) = 0;
  *(_WORD *)(v5 + 1180) = 0;
  *(_OWORD *)(v5 + 1184) = 0u;
  *(_OWORD *)(v5 + 1200) = 0u;
  *(_OWORD *)(v5 + 1216) = 0u;
  *(_OWORD *)(v5 + 1232) = 0u;
  *(_OWORD *)(v5 + 1248) = 0u;
  *(_OWORD *)(v5 + 1264) = 0u;
  *(_OWORD *)(v5 + 1280) = 0u;
  *(_OWORD *)(v5 + 1296) = 0u;
  *(_OWORD *)(v5 + 1312) = 0u;
  *(_OWORD *)(v5 + 1328) = 0u;
  *(_OWORD *)(v5 + 1344) = 0u;
  *(_OWORD *)(v5 + 1357) = 0u;
  *(_OWORD *)(v5 + 1400) = 0u;
  *(_OWORD *)(v5 + 1416) = 0u;
  *(_QWORD *)(v5 + 1440) = 0;
  *(_DWORD *)(v5 + 1448) = 0;
  *(_OWORD *)(v5 + 1456) = 0u;
  *(_OWORD *)(v5 + 1472) = 0u;
  *(_OWORD *)(v5 + 1488) = 0u;
  *(_OWORD *)(v5 + 1504) = 0u;
  *(_OWORD *)(v5 + 1520) = 0u;
  *(_OWORD *)(v5 + 1536) = 0u;
  *(_OWORD *)(v5 + 1552) = 0u;
  *(_OWORD *)(v5 + 1568) = 0u;
  *(_OWORD *)(v5 + 1584) = 0u;
  *(_BYTE *)(v5 + 1600) = 0;
  result = NAN;
  *(_QWORD *)(v5 + 1432) = -1;
  return result;
}

void sub_1D52D8A00(void **a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unsigned int v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  unsigned int v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  int v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unsigned int v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unsigned int v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  int v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unsigned int v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  std::__shared_weak_count *v45;
  unint64_t *v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  int v57;
  std::__shared_weak_count *v58;
  unint64_t *v59;
  unint64_t v60;
  int v61;
  std::__shared_weak_count *v62;
  unint64_t *v63;
  unint64_t v64;
  _BOOL4 v65;
  unsigned int v66;
  std::__shared_weak_count *v67;
  unint64_t *v68;
  unint64_t v69;
  std::__shared_weak_count *v70;
  unint64_t *v71;
  unint64_t v72;
  std::__shared_weak_count *v73;
  unint64_t *v74;
  unint64_t v75;
  std::__shared_weak_count *v76;
  unint64_t *v77;
  unint64_t v78;
  std::__shared_weak_count *v79;
  unint64_t *v80;
  unint64_t v81;
  int v82;
  std::__shared_weak_count *v83;
  unint64_t *v84;
  unint64_t v85;
  int v86;
  std::__shared_weak_count *v87;
  unint64_t *v88;
  unint64_t v89;
  void *exception;
  uint64_t v91;
  std::__shared_weak_count *v92;
  uint64_t (***v93)(_QWORD);
  std::__shared_weak_count *v94;
  int v95;
  uint64_t v96;
  std::__shared_weak_count *v97;
  unsigned int v98;
  unsigned int v99;

  sub_1D52917E4((uint64_t)a1, &v96);
  LODWORD(v93) = 100;
  (*(void (**)(uint64_t, uint64_t (****)(_QWORD), _QWORD))(*(_QWORD *)v96 + 40))(v96, &v93, 0);
  v2 = v97;
  if (v97)
  {
    p_shared_owners = (unint64_t *)&v97->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  v99 = 0;
  sub_1D52917E4((uint64_t)a1, &v96);
  v5 = sub_1D52847F8(v96);
  v6 = v97;
  if (v97)
  {
    v7 = (unint64_t *)&v97->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  v99 = v5;
  sub_1D52917E4((uint64_t)a1, &v96);
  v9 = sub_1D52847F8(v96);
  v10 = v97;
  if (v97)
  {
    v11 = (unint64_t *)&v97->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  sub_1D52917E4((uint64_t)a1, &v96);
  v13 = sub_1D52847F8(v96);
  v14 = v97;
  if (v97)
  {
    v15 = (unint64_t *)&v97->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  sub_1D52917E4((uint64_t)a1, &v96);
  LODWORD(v93) = 128;
  (*(void (**)(uint64_t, uint64_t (****)(_QWORD), _QWORD))(*(_QWORD *)v96 + 40))(v96, &v93, 0);
  v17 = v97;
  if (v97)
  {
    v18 = (unint64_t *)&v97->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  v98 = 0;
  sub_1D52917E4((uint64_t)a1, &v96);
  v20 = sub_1D52847F8(v96);
  v21 = v97;
  if (v97)
  {
    v22 = (unint64_t *)&v97->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
  }
  v98 = v20;
  sub_1D52917E4((uint64_t)a1, &v96);
  v24 = sub_1D52847F8(v96);
  v25 = v97;
  if (v97)
  {
    v26 = (unint64_t *)&v97->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  sub_1D52917E4((uint64_t)a1, &v96);
  v28 = sub_1D52847F8(v96);
  v29 = v97;
  if (v97)
  {
    v30 = (unint64_t *)&v97->__shared_owners_;
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  if (v13 == 2 || v28 == 2 || v13 == 3 || v28 == 3)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  sub_1D52917E4((uint64_t)a1, &v96);
  LODWORD(v93) = 92;
  (*(void (**)(uint64_t, uint64_t (****)(_QWORD), _QWORD))(*(_QWORD *)v96 + 40))(v96, &v93, 0);
  v32 = v97;
  if (v97)
  {
    v33 = (unint64_t *)&v97->__shared_owners_;
    do
      v34 = __ldaxr(v33);
    while (__stlxr(v34 - 1, v33));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
      std::__shared_weak_count::__release_weak(v32);
    }
  }
  sub_1D52917E4((uint64_t)a1, &v96);
  v35 = sub_1D52847F8(v96);
  v36 = v97;
  if (v97)
  {
    v37 = (unint64_t *)&v97->__shared_owners_;
    do
      v38 = __ldaxr(v37);
    while (__stlxr(v38 - 1, v37));
    if (!v38)
    {
      ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
      std::__shared_weak_count::__release_weak(v36);
    }
  }
  if (((*((uint64_t (**)(void **))*a1 + 7))(a1) & 1) == 0)
    sub_1D52D9584((uint64_t)a1, v35);
  sub_1D52917E4((uint64_t)a1, &v96);
  LODWORD(v93) = 84;
  (*(void (**)(uint64_t, uint64_t (****)(_QWORD), _QWORD))(*(_QWORD *)v96 + 40))(v96, &v93, 0);
  v39 = v97;
  if (v97)
  {
    v40 = (unint64_t *)&v97->__shared_owners_;
    do
      v41 = __ldaxr(v40);
    while (__stlxr(v41 - 1, v40));
    if (!v41)
    {
      ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
      std::__shared_weak_count::__release_weak(v39);
    }
  }
  sub_1D52917E4((uint64_t)a1, &v96);
  *((_DWORD *)a1 + 337) = sub_1D52847F8(v96);
  v42 = v97;
  if (v97)
  {
    v43 = (unint64_t *)&v97->__shared_owners_;
    do
      v44 = __ldaxr(v43);
    while (__stlxr(v44 - 1, v43));
    if (!v44)
    {
      ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
      std::__shared_weak_count::__release_weak(v42);
    }
  }
  sub_1D52917E4((uint64_t)a1, &v96);
  *((_DWORD *)a1 + 338) = sub_1D52847F8(v96);
  v45 = v97;
  if (v97)
  {
    v46 = (unint64_t *)&v97->__shared_owners_;
    do
      v47 = __ldaxr(v46);
    while (__stlxr(v47 - 1, v46));
    if (!v47)
    {
      ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
      std::__shared_weak_count::__release_weak(v45);
    }
  }
  sub_1D52917E4((uint64_t)a1, &v93);
  v95 = *((_DWORD *)a1 + 337) + 12;
  sub_1D5282F74((int *)&v91, &v95);
  sub_1D52B1CC8((uint64_t)&v96, (uint64_t *)&v93, &v91);
  v48 = v94;
  if (v94)
  {
    v49 = (unint64_t *)&v94->__shared_owners_;
    do
      v50 = __ldaxr(v49);
    while (__stlxr(v50 - 1, v49));
    if (!v50)
    {
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
    }
  }
  sub_1D52A8080(a1);
  sub_1D52B1D54((uint64_t)&v96);
  if (v99)
  {
    sub_1D52917E4((uint64_t)a1, &v93);
    sub_1D5282F74((int *)&v91, (int *)&v99);
    sub_1D52B1CC8((uint64_t)&v96, (uint64_t *)&v93, &v91);
    v51 = v94;
    if (v94)
    {
      v52 = (unint64_t *)&v94->__shared_owners_;
      do
        v53 = __ldaxr(v52);
      while (__stlxr(v53 - 1, v52));
      if (!v53)
      {
        ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
        std::__shared_weak_count::__release_weak(v51);
      }
    }
    sub_1D52917E4((uint64_t)a1, &v91);
    v95 = 0;
    sub_1D5285164((uint64_t *)&v93, &v91, (uint64_t)&v95, 0);
    v54 = v92;
    if (v92)
    {
      v55 = (unint64_t *)&v92->__shared_owners_;
      do
        v56 = __ldaxr(v55);
      while (__stlxr(v56 - 1, v55));
      if (!v56)
      {
        ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
        std::__shared_weak_count::__release_weak(v54);
      }
    }
    sub_1D52917E4((uint64_t)a1, &v91);
    v57 = sub_1D528479C(v91);
    v58 = v92;
    if (v92)
    {
      v59 = (unint64_t *)&v92->__shared_owners_;
      do
        v60 = __ldaxr(v59);
      while (__stlxr(v60 - 1, v59));
      if (!v60)
      {
        ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
        std::__shared_weak_count::__release_weak(v58);
      }
    }
    sub_1D52917E4((uint64_t)a1, &v91);
    v61 = sub_1D528479C(v91);
    v62 = v92;
    if (v92)
    {
      v63 = (unint64_t *)&v92->__shared_owners_;
      do
        v64 = __ldaxr(v63);
      while (__stlxr(v64 - 1, v63));
      if (!v64)
      {
        ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
        std::__shared_weak_count::__release_weak(v62);
      }
    }
    if (v57 == 18761 && v61 == 10752 || v57 == 19789 && v61 == 42)
    {
      sub_1D52A8080(a1);
    }
    else
    {
      a1[175] = (void *)v99;
      a1[177] = (void *)v9;
    }
    sub_1D5285200((uint64_t *)&v93);
    sub_1D52B1D54((uint64_t)&v96);
  }
  ++*((_DWORD *)a1 + 336);
  if (v98)
  {
    sub_1D52917E4((uint64_t)a1, &v96);
    if (((**(uint64_t (***)(uint64_t))v96)(v96) & 1) != 0)
    {
      v65 = 1;
    }
    else
    {
      sub_1D52917E4((uint64_t)a1, &v93);
      if (((**v93)(v93) & 1) != 0)
      {
        v65 = 0;
      }
      else
      {
        v66 = v98;
        sub_1D52917E4((uint64_t)a1, &v91);
        v65 = v66 + v24 < (*(unsigned int (**)(uint64_t))(*(_QWORD *)v91 + 16))(v91);
        v67 = v92;
        if (v92)
        {
          v68 = (unint64_t *)&v92->__shared_owners_;
          do
            v69 = __ldaxr(v68);
          while (__stlxr(v69 - 1, v68));
          if (!v69)
          {
            ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
            std::__shared_weak_count::__release_weak(v67);
          }
        }
      }
      v70 = v94;
      if (v94)
      {
        v71 = (unint64_t *)&v94->__shared_owners_;
        do
          v72 = __ldaxr(v71);
        while (__stlxr(v72 - 1, v71));
        if (!v72)
        {
          ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
          std::__shared_weak_count::__release_weak(v70);
        }
      }
    }
    v73 = v97;
    if (!v97)
      goto LABEL_124;
    v74 = (unint64_t *)&v97->__shared_owners_;
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
      ((void (*)(std::__shared_weak_count *))v73->__on_zero_shared)(v73);
      std::__shared_weak_count::__release_weak(v73);
      if (!v65)
        return;
    }
    else
    {
LABEL_124:
      if (!v65)
        return;
    }
    sub_1D52917E4((uint64_t)a1, &v93);
    sub_1D5282F74((int *)&v91, (int *)&v98);
    sub_1D52B1CC8((uint64_t)&v96, (uint64_t *)&v93, &v91);
    v76 = v94;
    if (v94)
    {
      v77 = (unint64_t *)&v94->__shared_owners_;
      do
        v78 = __ldaxr(v77);
      while (__stlxr(v78 - 1, v77));
      if (!v78)
      {
        ((void (*)(std::__shared_weak_count *))v76->__on_zero_shared)(v76);
        std::__shared_weak_count::__release_weak(v76);
      }
    }
    sub_1D52917E4((uint64_t)a1, &v91);
    v95 = 0;
    sub_1D5285164((uint64_t *)&v93, &v91, (uint64_t)&v95, 0);
    v79 = v92;
    if (v92)
    {
      v80 = (unint64_t *)&v92->__shared_owners_;
      do
        v81 = __ldaxr(v80);
      while (__stlxr(v81 - 1, v80));
      if (!v81)
      {
        ((void (*)(std::__shared_weak_count *))v79->__on_zero_shared)(v79);
        std::__shared_weak_count::__release_weak(v79);
      }
    }
    sub_1D52917E4((uint64_t)a1, &v91);
    v82 = sub_1D528479C(v91);
    v83 = v92;
    if (v92)
    {
      v84 = (unint64_t *)&v92->__shared_owners_;
      do
        v85 = __ldaxr(v84);
      while (__stlxr(v85 - 1, v84));
      if (!v85)
      {
        ((void (*)(std::__shared_weak_count *))v83->__on_zero_shared)(v83);
        std::__shared_weak_count::__release_weak(v83);
      }
    }
    sub_1D52917E4((uint64_t)a1, &v91);
    v86 = sub_1D528479C(v91);
    v87 = v92;
    if (v92)
    {
      v88 = (unint64_t *)&v92->__shared_owners_;
      do
        v89 = __ldaxr(v88);
      while (__stlxr(v89 - 1, v88));
      if (!v89)
      {
        ((void (*)(std::__shared_weak_count *))v87->__on_zero_shared)(v87);
        std::__shared_weak_count::__release_weak(v87);
      }
    }
    if (v82 == 18761 && v86 == 10752 || v82 == 19789 && v86 == 42)
    {
      sub_1D52A8080(a1);
    }
    else
    {
      a1[176] = (void *)v98;
      a1[178] = (void *)v24;
    }
    sub_1D5285200((uint64_t *)&v93);
    sub_1D52B1D54((uint64_t)&v96);
  }
}

void sub_1D52D945C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  sub_1D5282EB4((uint64_t)&a9);
  sub_1D5282EB4((uint64_t)&a11);
  sub_1D5282EB4((uint64_t)&a15);
  _Unwind_Resume(a1);
}

void sub_1D52D9584(uint64_t a1, uint64_t a2)
{
  void *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  int v10;
  int v11;
  unsigned int v12;
  _BOOL4 v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  _BOOL4 v21;
  int v23;
  int v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  unsigned int v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  int v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  uint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  unsigned int v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  int v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  int v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  unint64_t *v56;
  unint64_t v57;
  unint64_t *v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  unint64_t *v62;
  uint64_t v63;
  std::__shared_weak_count *v64;
  unint64_t *v65;
  unint64_t v66;
  unsigned int v67;
  std::__shared_weak_count *v68;
  unint64_t *v69;
  unint64_t v70;
  uint64_t *v71;
  std::__shared_weak_count *v72;
  unint64_t *v73;
  unint64_t v74;
  std::__shared_weak_count *v75;
  unint64_t *v76;
  unint64_t v77;
  std::__shared_weak_count *v78;
  unint64_t *v79;
  unint64_t v80;
  std::__shared_weak_count *v81;
  unint64_t *v82;
  unint64_t v83;
  uint64_t v84;
  void *v85;
  std::__shared_weak_count *v86;
  unint64_t *v87;
  unint64_t v88;
  uint64_t v89;
  std::__shared_weak_count *v90;
  uint64_t v91;
  std::__shared_weak_count *v92;
  uint64_t v93;
  std::__shared_weak_count *v94;
  uint64_t v95;
  std::__shared_weak_count *v96;
  void *__p;
  std::__shared_weak_count *v98;
  char v99;
  unsigned int v100;
  uint64_t v101;
  void **p_p;
  uint64_t __src;
  std::__shared_weak_count *v104;
  uint64_t v105;

  v105 = *MEMORY[0x1E0C80C00];
  v101 = a2;
  sub_1D52917E4(a1, &__p);
  v3 = __p;
  sub_1D528594C(&__src, &v101);
  (*(void (**)(void *, uint64_t *, _QWORD))(*(_QWORD *)v3 + 40))(v3, &__src, 0);
  v4 = v98;
  if (v98)
  {
    p_shared_owners = (unint64_t *)&v98->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  sub_1D52917E4(a1, &__p);
  LODWORD(__src) = sub_1D52847F8((uint64_t)__p);
  sub_1D5285A24(&v100, (unsigned int *)&__src);
  v7 = v98;
  if (v98)
  {
    v8 = (unint64_t *)&v98->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  sub_1D52917E4(a1, &__p);
  v10 = (*(uint64_t (**)(void *))(*(_QWORD *)__p + 48))(__p);
  LODWORD(v93) = 4;
  LODWORD(__src) = v100;
  LODWORD(v95) = *sub_1D52DCE44((int *)&__src, (unsigned int *)&v93);
  LODWORD(__src) = v10;
  v11 = *sub_1D5294254((int *)&__src, (unsigned int *)&v95);
  sub_1D52917E4(a1, &__src);
  v12 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)__src + 16))(__src);
  v14 = v11 < 0 || v12 >= v11;
  v15 = v104;
  if (v104)
  {
    v16 = (unint64_t *)&v104->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  v18 = v98;
  if (v98)
  {
    v19 = (unint64_t *)&v98->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  v21 = v100 < 0xC9 && v14;
  if (v21 && v100 != 0)
  {
    v23 = 0;
    while (1)
    {
      sub_1D52917E4(a1, &__p);
      v24 = sub_1D528479C((uint64_t)__p);
      v25 = v98;
      if (v98)
      {
        v26 = (unint64_t *)&v98->__shared_owners_;
        do
          v27 = __ldaxr(v26);
        while (__stlxr(v27 - 1, v26));
        if (!v27)
        {
          ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
          std::__shared_weak_count::__release_weak(v25);
        }
      }
      sub_1D52917E4(a1, &__p);
      v28 = sub_1D528479C((uint64_t)__p);
      v29 = v98;
      if (v98)
      {
        v30 = (unint64_t *)&v98->__shared_owners_;
        do
          v31 = __ldaxr(v30);
        while (__stlxr(v31 - 1, v30));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
          std::__shared_weak_count::__release_weak(v29);
        }
      }
      sub_1D52917E4(a1, &__p);
      v32 = (*(uint64_t (**)(void *))(*(_QWORD *)__p + 48))(__p);
      v33 = v98;
      if (v98)
      {
        v34 = (unint64_t *)&v98->__shared_owners_;
        do
          v35 = __ldaxr(v34);
        while (__stlxr(v35 - 1, v34));
        if (!v35)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
        }
      }
      if (v24 <= 288)
        break;
      if (v24 > 12271)
      {
        if (v24 == 12272)
        {
          sub_1D52850A0(&__p, "RAF:WB_GRGBLevels");
          sub_1D52917E4(a1, &v95);
          LODWORD(__src) = sub_1D528479C(v95);
          sub_1D52917E4(a1, &v93);
          HIDWORD(__src) = sub_1D528479C(v93);
          sub_1D52917E4(a1, &v91);
          LODWORD(v104) = sub_1D528479C(v91);
          sub_1D52917E4(a1, &v89);
          HIDWORD(v104) = sub_1D528479C(v89);
          p_p = &__p;
          v71 = sub_1D52B3E7C((uint64_t **)(a1 + 120), &__p, (uint64_t)&unk_1D544A5C4, (__int128 **)&p_p);
          sub_1D5282A44((char *)v71 + 56, (char *)&__src, (uint64_t)&v105, 4uLL);
          v72 = v90;
          if (v90)
          {
            v73 = (unint64_t *)&v90->__shared_owners_;
            do
              v74 = __ldaxr(v73);
            while (__stlxr(v74 - 1, v73));
            if (!v74)
            {
              ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
              std::__shared_weak_count::__release_weak(v72);
            }
          }
          v75 = v92;
          if (v92)
          {
            v76 = (unint64_t *)&v92->__shared_owners_;
            do
              v77 = __ldaxr(v76);
            while (__stlxr(v77 - 1, v76));
            if (!v77)
            {
              ((void (*)(std::__shared_weak_count *))v75->__on_zero_shared)(v75);
              std::__shared_weak_count::__release_weak(v75);
            }
          }
          v78 = v94;
          if (v94)
          {
            v79 = (unint64_t *)&v94->__shared_owners_;
            do
              v80 = __ldaxr(v79);
            while (__stlxr(v80 - 1, v79));
            if (!v80)
            {
              ((void (*)(std::__shared_weak_count *))v78->__on_zero_shared)(v78);
              std::__shared_weak_count::__release_weak(v78);
            }
          }
          v81 = v96;
          if (v96)
          {
            v82 = (unint64_t *)&v96->__shared_owners_;
            do
              v83 = __ldaxr(v82);
            while (__stlxr(v83 - 1, v82));
            if (!v83)
            {
              ((void (*)(std::__shared_weak_count *))v81->__on_zero_shared)(v81);
              std::__shared_weak_count::__release_weak(v81);
            }
          }
          if (v99 < 0)
            operator delete(__p);
        }
        else if (v24 == 38480 && v28 == 4)
        {
          sub_1D52917E4(a1, &__p);
          v47 = sub_1D52848D4((uint64_t)__p);
          v48 = v98;
          if (v98)
          {
            v49 = (unint64_t *)&v98->__shared_owners_;
            do
              v50 = __ldaxr(v49);
            while (__stlxr(v50 - 1, v49));
            if (!v50)
            {
              ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
              std::__shared_weak_count::__release_weak(v48);
            }
          }
          sub_1D52917E4(a1, &__p);
          v51 = sub_1D52848D4((uint64_t)__p);
          v52 = v98;
          if (v98)
          {
            v53 = (unint64_t *)&v98->__shared_owners_;
            do
              v54 = __ldaxr(v53);
            while (__stlxr(v54 - 1, v53));
            if (!v54)
            {
              ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
              std::__shared_weak_count::__release_weak(v52);
            }
          }
          *(double *)(a1 + 1632) = (double)v47 / (double)v51;
          *(_BYTE *)(a1 + 1640) = 1;
        }
        goto LABEL_147;
      }
      if (v24 == 289)
      {
        if (v28 != 4)
          goto LABEL_147;
        sub_1D52917E4(a1, &__p);
        *(_DWORD *)(a1 + 1368) = sub_1D528479C((uint64_t)__p);
        v55 = v98;
        if (v98)
        {
          v56 = (unint64_t *)&v98->__shared_owners_;
          do
            v57 = __ldaxr(v56);
          while (__stlxr(v57 - 1, v56));
          if (!v57)
          {
            ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
            std::__shared_weak_count::__release_weak(v55);
          }
        }
        sub_1D52917E4(a1, &__p);
        *(_DWORD *)(a1 + 1364) = sub_1D528479C((uint64_t)__p);
        v36 = v98;
        if (!v98)
          goto LABEL_147;
        v58 = (unint64_t *)&v98->__shared_owners_;
        do
          v38 = __ldaxr(v58);
        while (__stlxr(v38 - 1, v58));
        goto LABEL_109;
      }
      if (v24 == 304 && v28 == 4)
      {
        sub_1D52917E4(a1, &__p);
        *(_DWORD *)(a1 + 1396) = sub_1D52847F8((uint64_t)__p);
        v36 = v98;
        if (v98)
        {
          v37 = (unint64_t *)&v98->__shared_owners_;
          do
            v38 = __ldaxr(v37);
          while (__stlxr(v38 - 1, v37));
LABEL_109:
          if (!v38)
          {
            ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
            std::__shared_weak_count::__release_weak(v36);
          }
        }
      }
LABEL_147:
      sub_1D52917E4(a1, &__p);
      v84 = v28;
      v85 = __p;
      __src = v32 + v84;
      sub_1D528594C(&v95, &__src);
      (*(void (**)(void *, uint64_t *, _QWORD))(*(_QWORD *)v85 + 40))(v85, &v95, 0);
      v86 = v98;
      if (v98)
      {
        v87 = (unint64_t *)&v98->__shared_owners_;
        do
          v88 = __ldaxr(v87);
        while (__stlxr(v88 - 1, v87));
        if (!v88)
        {
          ((void (*)(std::__shared_weak_count *))v86->__on_zero_shared)(v86);
          std::__shared_weak_count::__release_weak(v86);
        }
      }
      if (++v23 >= v100)
        return;
    }
    if (v24 != 256)
    {
      if (v24 == 272)
      {
        if (v28 == 4)
        {
          sub_1D52917E4(a1, &__p);
          v63 = sub_1D528479C((uint64_t)__p);
          v64 = v98;
          if (v98)
          {
            v65 = (unint64_t *)&v98->__shared_owners_;
            do
              v66 = __ldaxr(v65);
            while (__stlxr(v66 - 1, v65));
            if (!v66)
            {
              ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
              std::__shared_weak_count::__release_weak(v64);
            }
          }
          sub_1D52917E4(a1, &__p);
          v67 = sub_1D528479C((uint64_t)__p);
          v68 = v98;
          if (v98)
          {
            v69 = (unint64_t *)&v98->__shared_owners_;
            do
              v70 = __ldaxr(v69);
            while (__stlxr(v70 - 1, v69));
            if (!v70)
            {
              ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
              std::__shared_weak_count::__release_weak(v68);
            }
          }
          if (!*(_BYTE *)(a1 + 1380))
            *(_BYTE *)(a1 + 1380) = 1;
          *(_QWORD *)(a1 + 1372) = v67 | (unint64_t)(v63 << 32);
        }
      }
      else if (v24 == 273 && v28 == 4)
      {
        sub_1D52917E4(a1, &__p);
        v39 = sub_1D528479C((uint64_t)__p);
        v40 = v98;
        if (v98)
        {
          v41 = (unint64_t *)&v98->__shared_owners_;
          do
            v42 = __ldaxr(v41);
          while (__stlxr(v42 - 1, v41));
          if (!v42)
          {
            ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
            std::__shared_weak_count::__release_weak(v40);
          }
        }
        sub_1D52917E4(a1, &__p);
        v43 = sub_1D528479C((uint64_t)__p);
        v44 = v98;
        if (v98)
        {
          v45 = (unint64_t *)&v98->__shared_owners_;
          do
            v46 = __ldaxr(v45);
          while (__stlxr(v46 - 1, v45));
          if (!v46)
          {
            ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
            std::__shared_weak_count::__release_weak(v44);
          }
        }
        if (!*(_BYTE *)(a1 + 1392))
          *(_BYTE *)(a1 + 1392) = 1;
        *(_QWORD *)(a1 + 1384) = v43 | (unint64_t)(v39 << 32);
      }
      goto LABEL_147;
    }
    if (v28 != 4)
      goto LABEL_147;
    sub_1D52917E4(a1, &__p);
    *(_DWORD *)(a1 + 1360) = sub_1D528479C((uint64_t)__p);
    v59 = v98;
    if (v98)
    {
      v60 = (unint64_t *)&v98->__shared_owners_;
      do
        v61 = __ldaxr(v60);
      while (__stlxr(v61 - 1, v60));
      if (!v61)
      {
        ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
        std::__shared_weak_count::__release_weak(v59);
      }
    }
    sub_1D52917E4(a1, &__p);
    *(_DWORD *)(a1 + 1356) = sub_1D528479C((uint64_t)__p);
    v36 = v98;
    if (!v98)
      goto LABEL_147;
    v62 = (unint64_t *)&v98->__shared_owners_;
    do
      v38 = __ldaxr(v62);
    while (__stlxr(v38 - 1, v62));
    goto LABEL_109;
  }
}

void sub_1D52D9F20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12, uint64_t a13, char a14, uint64_t a15, char a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  uint64_t v23;

  sub_1D5282EB4(v23 - 112);
  sub_1D5282EB4((uint64_t)&__p);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52D9FFC(uint64_t a1)
{
  return *(_QWORD *)(a1 + 1400);
}

uint64_t sub_1D52DA004(uint64_t a1)
{
  return *(_QWORD *)(a1 + 1424) + *(_QWORD *)(a1 + 1416);
}

uint64_t sub_1D52DA014(uint64_t a1)
{
  return *(_QWORD *)(a1 + 1408);
}

uint64_t sub_1D52DA01C(uint64_t a1)
{
  return *(_QWORD *)(a1 + 1424);
}

BOOL sub_1D52DA024(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 784))(a1) != 0;
}

unint64_t sub_1D52DA048(unsigned int *a1)
{
  uint64_t v1;

  v1 = a1[339];
  return v1 | ((unint64_t)(a1[340] << (*(uint64_t (**)(unsigned int *))(*(_QWORD *)a1 + 800))(a1)) << 32);
}

uint64_t sub_1D52DA080(_BYTE *a1)
{
  if (a1[1380] && a1[1392])
  {
    (*(void (**)(_BYTE *))(*(_QWORD *)a1 + 800))(a1);
    return 0;
  }
  else
  {
    (*(void (**)(_BYTE *))(*(_QWORD *)a1 + 800))(a1);
    return 0x800000008;
  }
}

uint64_t sub_1D52DA100(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 1380) && *(_BYTE *)(a1 + 1392))
    return *(_QWORD *)(a1 + 1372);
  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 800))(a1);
  return 0;
}

void sub_1D52DA16C(uint64_t a1@<X0>, char **a2@<X8>)
{
  int v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  unsigned int v8;
  int v9;
  __int128 v10;

  sub_1D52B08D0(a1, (uint64_t)a2);
  if (a2[1] == *a2)
    v4 = 0;
  else
    v4 = *(_DWORD *)(*(_QWORD *)*a2 + 16);
  sub_1D5282F74(&v9, (int *)(a1 + 1348));
  v8 = *(_DWORD *)(a1 + 1352);
  sub_1D5291E58(a1, &v9, &v8, v4, &v10);
  if ((_QWORD)v10)
    sub_1D52B0A7C(a2, &v10);
  v5 = (std::__shared_weak_count *)*((_QWORD *)&v10 + 1);
  if (*((_QWORD *)&v10 + 1))
  {
    v6 = (unint64_t *)(*((_QWORD *)&v10 + 1) + 8);
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
}

void sub_1D52DA234(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_1D5282EB4((uint64_t)va);
  sub_1D5282E44((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52DA260(uint64_t a1)
{
  uint64_t v2;
  _BOOL4 v3;
  _BOOL4 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  _QWORD *p_p;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  void *__p;
  uint64_t v23;
  uint64_t v24;

  __p = 0;
  v23 = 0;
  v24 = 0;
  sub_1D52917E4(a1, &v20);
  v2 = v20;
  v18 = 8;
  sub_1D5285A24(&v19, &v18);
  v3 = sub_1D52849DC(v2, &v19, (uint64_t)&__p);
  v4 = v3;
  v5 = v21;
  if (!v21)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v21->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (v7)
  {
LABEL_5:
    if (v3)
      goto LABEL_6;
LABEL_24:
    v16 = 0;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if (!v4)
    goto LABEL_24;
LABEL_6:
  v8 = HIBYTE(v24);
  if (v24 < 0)
    v8 = v23;
  if (v8 != 8)
    goto LABEL_24;
  p_p = &__p;
  if (v24 < 0)
    p_p = __p;
  if (*p_p != 0x4D4C4946494A5546)
    goto LABEL_24;
  sub_1D52917E4(a1, &v20);
  sub_1D52847F8(v20);
  v10 = v21;
  if (v21)
  {
    v11 = (unint64_t *)&v21->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, 1);
  sub_1D52917E4(a1, &v20);
  v19 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v20 + 48))(v20);
  (*(void (**)(uint64_t, unsigned int *))(*(_QWORD *)a1 + 160))(a1, &v19);
  v13 = v21;
  if (v21)
  {
    v14 = (unint64_t *)&v21->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  v16 = 1;
LABEL_25:
  if (SHIBYTE(v24) < 0)
    operator delete(__p);
  return v16;
}

void sub_1D52DA43C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1D52DA47C()
{
  uint64_t **v0;
  uint64_t v1;
  unsigned __int16 *v2;
  unsigned __int16 *v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int v13;
  int v14;
  char *v15;
  int v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  int v20;
  std::__shared_weak_count *v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  std::__shared_weak_count *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  char *v33;
  int v34;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  char *v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  int v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  unsigned int v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  int v57;
  std::__shared_weak_count *v58;
  unint64_t *v59;
  unint64_t v60;
  uint64_t v61;
  double *v62;
  char *v63;
  char *v64;
  unsigned int v65;
  char *v66;
  char *v67;
  void *v68;
  std::__shared_weak_count *v69;
  unint64_t *v70;
  unint64_t v71;
  uint64_t *v72;
  std::__shared_weak_count *v73;
  unint64_t *v74;
  unint64_t v75;
  int v76;
  std::__shared_weak_count *v77;
  unint64_t *v78;
  unint64_t v79;
  unsigned int v80;
  std::__shared_weak_count *v81;
  unint64_t *v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  std::__shared_weak_count *v87;
  unint64_t *v88;
  unint64_t v89;
  int v90;
  std::__shared_weak_count *v91;
  unint64_t *v92;
  unint64_t v93;
  uint64_t v94;
  double *v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  std::__shared_weak_count *v103;
  unint64_t *v104;
  unint64_t v105;
  int v106;
  std::__shared_weak_count *v107;
  unint64_t *v108;
  unint64_t v109;
  unsigned int v110;
  std::__shared_weak_count *v111;
  unint64_t *v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  std::__shared_weak_count *v117;
  unint64_t *v118;
  unint64_t v119;
  int v120;
  std::__shared_weak_count *v121;
  unint64_t *v122;
  unint64_t v123;
  __int128 *v124;
  uint64_t v125;
  double *v126;
  double *v127;
  double v128;
  void **v129;
  int v130;
  unsigned __int16 *v131;
  uint64_t **v132;
  uint64_t v133;
  void *v134;
  void *v135;
  void *v136;
  uint64_t v137;
  void *v138;
  void *v139;
  uint64_t v140;
  void *v141;
  _BYTE *v142;
  void *__p;
  void *v144;
  uint64_t v145;
  void *v146;
  _BYTE *v147;
  void *__src;
  char *v149;
  void *v150;
  std::__shared_weak_count *v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD v154[768];
  uint64_t v155[3];
  double *v156;
  double *v157;
  _QWORD v158[3];

  v0 = (uint64_t **)MEMORY[0x1E0C80A78]();
  v3 = v2;
  v134 = (void *)v1;
  v4 = (uint64_t)v0;
  v158[1] = *MEMORY[0x1E0C80C00];
  if ((__int16)*v2 == -4096)
  {
    if (v2[1] == 13)
    {
      sub_1D52917E4((uint64_t)v0, &v153);
      LODWORD(v156) = *((_DWORD *)v3 + 2);
      sub_1D5282F74((int *)&v150, (int *)&v156);
      sub_1D5285164(v155, &v153, (uint64_t)&v150, 0);
      v5 = (std::__shared_weak_count *)v154[0];
      if (v154[0])
      {
        v6 = (unint64_t *)(v154[0] + 8);
        do
          v7 = __ldaxr(v6);
        while (__stlxr(v7 - 1, v6));
        if (!v7)
        {
          ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
          std::__shared_weak_count::__release_weak(v5);
        }
      }
      v131 = v3;
      v8 = sub_1D52AA374(v4, (uint64_t)v134, &v153);
      if (v8)
      {
        v9 = 0;
        v10 = v8;
        v132 = (uint64_t **)(v4 + 536);
        v133 = v8;
        while (2)
        {
          v11 = (char *)&v154[-1] + 12 * v9;
          v13 = *((unsigned __int16 *)v11 + 2);
          v12 = (uint64_t)(v11 + 4);
          switch(v13)
          {
            case 61441:
              if (v131[1] != 3)
                goto LABEL_212;
              goto LABEL_14;
            case 61442:
              if (*((_WORD *)&v154[-1] + 6 * v9 + 3) == 3)
              {
LABEL_14:
                LODWORD(v156) = 0;
                sub_1D5285A24(&v150, (unsigned int *)&v156);
                v14 = sub_1D52A7E28(v12, (unsigned int *)&v150);
                v150 = v134;
                *((_DWORD *)sub_1D52B3C68(v132, (void **)v134, (uint64_t)&unk_1D544A5C4, (__int128 **)&v150) + 14) = v14;
              }
              else
              {
LABEL_212:
                v130 = *((_DWORD *)v154 + 3 * v9 + 1);
                v150 = v134;
                *((_DWORD *)sub_1D52B3C68(v132, (void **)v134, (uint64_t)&unk_1D544A5C4, (__int128 **)&v150) + 14) = v130;
              }
              goto LABEL_229;
            case 61443:
              if (*((_WORD *)&v154[-1] + 6 * v9 + 3) != 4)
                goto LABEL_229;
              v150 = 0;
              v151 = 0;
              v152 = 0;
              if (sub_1D52AD6B0(v4, v12, &v150))
              {
                v156 = (double *)v134;
                v15 = (char *)(sub_1D52B3E7C((uint64_t **)(v4 + 656), (void **)v134, (uint64_t)&unk_1D544A5C4, (__int128 **)&v156)+ 7);
                if (v15 != (char *)&v150)
                  sub_1D5282A44(v15, (char *)v150, (uint64_t)v151, ((char *)v151 - (_BYTE *)v150) >> 2);
              }
              *(_DWORD *)(v4 + 1600) = *((_DWORD *)v154 + 3 * v9 + 1);
              *(_BYTE *)(v4 + 1604) = 1;
              goto LABEL_122;
            case 61444:
              if (*((_WORD *)&v154[-1] + 6 * v9 + 3) == 4)
              {
                *(_DWORD *)(v4 + 1608) = *((_DWORD *)v154 + 3 * v9 + 1);
                *(_BYTE *)(v4 + 1612) = 1;
              }
              goto LABEL_229;
            case 61445:
              if (*((_WORD *)&v154[-1] + 6 * v9 + 3) == 4)
              {
                *(_DWORD *)(v4 + 1616) = *((_DWORD *)v154 + 3 * v9 + 1);
                *(_BYTE *)(v4 + 1620) = 1;
              }
              goto LABEL_229;
            case 61446:
              if (*((_WORD *)&v154[-1] + 6 * v9 + 3) == 4)
              {
                *(_DWORD *)(v4 + 1624) = *((_DWORD *)v154 + 3 * v9 + 1);
                *(_BYTE *)(v4 + 1628) = 1;
              }
              goto LABEL_229;
            case 61447:
              if (*((unsigned __int16 *)&v154[-1] + 6 * v9 + 3) - 3 > 1)
                goto LABEL_229;
              sub_1D52917E4(v4, &v150);
              v16 = sub_1D52845F4((uint64_t)v150);
              v17 = v151;
              if (v151)
              {
                p_shared_owners = (unint64_t *)&v151->__shared_owners_;
                do
                  v19 = __ldaxr(p_shared_owners);
                while (__stlxr(v19 - 1, p_shared_owners));
                if (!v19)
                {
                  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
                  std::__shared_weak_count::__release_weak(v17);
                }
              }
              v150 = 0;
              v151 = 0;
              v152 = 0;
              v20 = sub_1D52AD6B0(v4, v12, &v150);
              v21 = (std::__shared_weak_count *)v150;
              if (v20)
              {
                if (v16 && (((char *)v151 - (_BYTE *)v150) & 0x3FFFFFFFCLL) != 0)
                {
                  v22 = 0;
                  v23 = ((unint64_t)((char *)v151 - (_BYTE *)v150) >> 2);
                  do
                  {
                    LODWORD(v156) = v16;
                    LODWORD(__src) = *sub_1D5294254((int *)&v156, (unsigned int *)((char *)v21 + v22));
                    v24 = sub_1D52ADF28((unsigned int *)&__src);
                    v21 = (std::__shared_weak_count *)v150;
                    *(_DWORD *)((char *)v150 + v22) = v24;
                    v22 += 4;
                    --v23;
                  }
                  while (v23);
                }
                *(_QWORD *)(v4 + 8 * *(unsigned int *)(v4 + 1344) + 1400) = LODWORD(v21->__vftable);
              }
              else if (!v150)
              {
                goto LABEL_228;
              }
              v151 = v21;
              operator delete(v21);
LABEL_228:
              v10 = v133;
LABEL_229:
              if (++v9 == v10)
                break;
              continue;
            case 61448:
              if (*((unsigned __int16 *)&v154[-1] + 6 * v9 + 3) - 3 > 1)
                goto LABEL_229;
              v150 = 0;
              v151 = 0;
              v152 = 0;
              v25 = sub_1D52AD6B0(v4, v12, &v150);
              v26 = (std::__shared_weak_count *)v150;
              if (!v25)
                goto LABEL_123;
              v27 = v4 + 8 * *(unsigned int *)(v4 + 1344);
              *(_QWORD *)(v27 + 1416) = 0;
              if (v151 == v26)
                goto LABEL_123;
              v28 = 0;
              v29 = 0;
              v30 = (_QWORD *)(v27 + 1416);
              do
                v29 += *((unsigned int *)&v26->__vftable + v28++);
              while (((char *)v151 - (char *)v26) >> 2 > (unint64_t)v28);
              *v30 = v29;
              goto LABEL_124;
            case 61449:
              v31 = (char *)&v154[-1] + 12 * v9;
              if (*((_WORD *)v31 + 3) == 4 && *((_DWORD *)v31 + 2) == 1)
                *(_DWORD *)(v4 + 4 * *(unsigned int *)(v4 + 1344) + 1432) = *((_DWORD *)v154 + 3 * v9 + 1);
              goto LABEL_229;
            case 61450:
              v33 = (char *)&v154[-1] + 12 * v9;
              v34 = *((_DWORD *)v33 + 2);
              if (*((_WORD *)v33 + 3) != 4 || (v34 & 0xFFFFFFDF) != 4)
                goto LABEL_229;
              sub_1D52917E4(v4, &v156);
              sub_1D52A75D8(v12, (uint64_t *)&v156, &v150);
              v36 = (std::__shared_weak_count *)v157;
              if (v157)
              {
                v37 = (unint64_t *)(v157 + 1);
                do
                  v38 = __ldaxr(v37);
                while (__stlxr(v38 - 1, v37));
                if (!v38)
                {
                  ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
                  std::__shared_weak_count::__release_weak(v36);
                }
              }
              if (v34 == 36 && (char *)v150 + 32 != (char *)v151)
                v151 = (std::__shared_weak_count *)((char *)v150 + 32);
              v156 = (double *)v134;
              v39 = (char *)(sub_1D52B3E7C((uint64_t **)(v4 + 264), (void **)v134, (uint64_t)&unk_1D544A5C4, (__int128 **)&v156)+ 7);
              if (v39 != (char *)&v150)
                sub_1D528FA34(v39, (char *)v150, (uint64_t)v151, ((char *)v151 - (_BYTE *)v150) >> 3);
              goto LABEL_122;
            case 61451:
              if (*((_WORD *)&v154[-1] + 6 * v9 + 3) != 10 || *((_DWORD *)v154 + 3 * v9) <= 1u)
                goto LABEL_229;
              sub_1D52917E4(v4, &v156);
              LODWORD(v146) = sub_1D52A5CC8(v12);
              sub_1D5285B08((int *)&__src, (int *)&v146);
              sub_1D5285164((uint64_t *)&v150, (uint64_t *)&v156, (uint64_t)&__src, 0);
              v40 = (std::__shared_weak_count *)v157;
              if (v157)
              {
                v41 = (unint64_t *)(v157 + 1);
                do
                  v42 = __ldaxr(v41);
                while (__stlxr(v42 - 1, v41));
                if (!v42)
                {
                  ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
                  std::__shared_weak_count::__release_weak(v40);
                }
              }
              sub_1D52917E4(v4, &v156);
              v43 = sub_1D52847F8((uint64_t)v156);
              v44 = (std::__shared_weak_count *)v157;
              if (v157)
              {
                v45 = (unint64_t *)(v157 + 1);
                do
                  v46 = __ldaxr(v45);
                while (__stlxr(v46 - 1, v45));
                if (!v46)
                {
                  ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
                  std::__shared_weak_count::__release_weak(v44);
                }
              }
              sub_1D52917E4(v4, &v156);
              v47 = sub_1D52847F8((uint64_t)v156);
              v48 = (std::__shared_weak_count *)v157;
              if (v157)
              {
                v49 = (unint64_t *)(v157 + 1);
                do
                  v50 = __ldaxr(v49);
                while (__stlxr(v50 - 1, v49));
                if (!v50)
                {
                  ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
                  std::__shared_weak_count::__release_weak(v48);
                }
              }
              if (v47 <= 0x10)
              {
                sub_1D528EB68(&v156, 2 * v47);
                if (v47)
                {
                  v51 = 0;
                  if (2 * (unint64_t)v47 <= 1)
                    v52 = 1;
                  else
                    v52 = 2 * v47;
                  do
                  {
                    sub_1D52917E4(v4, &__src);
                    v53 = sub_1D52847F8((uint64_t)__src);
                    v54 = (std::__shared_weak_count *)v149;
                    if (v149)
                    {
                      v55 = (unint64_t *)(v149 + 8);
                      do
                        v56 = __ldaxr(v55);
                      while (__stlxr(v56 - 1, v55));
                      if (!v56)
                      {
                        ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
                        std::__shared_weak_count::__release_weak(v54);
                      }
                    }
                    sub_1D52917E4(v4, &__src);
                    v57 = sub_1D52847F8((uint64_t)__src);
                    v58 = (std::__shared_weak_count *)v149;
                    if (v149)
                    {
                      v59 = (unint64_t *)(v149 + 8);
                      do
                        v60 = __ldaxr(v59);
                      while (__stlxr(v60 - 1, v59));
                      if (!v60)
                      {
                        ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
                        std::__shared_weak_count::__release_weak(v58);
                      }
                    }
                    v156[v51++] = (double)v53 / (double)v57;
                  }
                  while (v51 != v52);
                }
                *(_BYTE *)(v4 + *(unsigned int *)(v4 + 1344) + 1180) = 0;
                sub_1D528EB68(&__src, v47);
                sub_1D528EB68(&v146, v47);
                if (v47)
                {
                  v61 = 0;
                  v62 = v156;
                  v63 = (char *)v146;
                  v64 = (char *)__src;
                  do
                  {
                    *(double *)&v63[v61 * 8] = v62[v61];
                    *(double *)&v64[v61 * 8] = v62[v47 + v61];
                    ++v61;
                  }
                  while (v47 != v61);
                }
                *(_DWORD *)(v4 + 4 * *(unsigned int *)(v4 + 1344) + 1184) = v43;
                v65 = *(_DWORD *)(v4 + 1344);
                v66 = (char *)(v4 + 24 * v65 + 1192);
                if (v66 != (char *)&v146)
                {
                  sub_1D528FA34(v66, (char *)v146, (uint64_t)v147, (v147 - (_BYTE *)v146) >> 3);
                  v65 = *(_DWORD *)(v4 + 1344);
                }
                v67 = (char *)(v4 + 24 * v65 + 1240);
                v68 = __src;
                if (v67 != (char *)&__src)
                {
                  sub_1D528FA34(v67, (char *)__src, (uint64_t)v149, (v149 - (_BYTE *)__src) >> 3);
                  v68 = __src;
                }
                __p = 0;
                v144 = 0;
                v145 = 0;
                sub_1D5282C70(&__p, v68, (uint64_t)v149, (v149 - (_BYTE *)v68) >> 3);
                *(_BYTE *)(v4 + *(unsigned int *)(v4 + 1344) + 1180) = (*(uint64_t (**)(uint64_t, void **))(*(_QWORD *)v4 + 864))(v4, &__p);
                if (__p)
                {
                  v144 = __p;
                  operator delete(__p);
                }
                if (v146)
                {
                  v147 = v146;
                  operator delete(v146);
                }
                if (__src)
                {
                  v149 = (char *)__src;
                  operator delete(__src);
                }
                if (v156)
                {
                  v157 = v156;
                  operator delete(v156);
                }
              }
              goto LABEL_227;
            case 61454:
              if (*((_WORD *)&v154[-1] + 6 * v9 + 3) != 4 || *((_DWORD *)v154 + 3 * v9) != 3)
                goto LABEL_229;
              sub_1D52917E4(v4, &v156);
              sub_1D52A79AC(v12, (uint64_t *)&v156, (uint64_t)&v150);
              v69 = (std::__shared_weak_count *)v157;
              if (v157)
              {
                v70 = (unint64_t *)(v157 + 1);
                do
                  v71 = __ldaxr(v70);
                while (__stlxr(v71 - 1, v70));
                if (!v71)
                {
                  ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
                  std::__shared_weak_count::__release_weak(v69);
                }
              }
              LODWORD(v156) = *((unsigned __int16 *)v150 + 1);
              HIDWORD(v156) = *(unsigned __int16 *)v150;
              LODWORD(v157) = HIDWORD(v156);
              HIDWORD(v157) = *((unsigned __int16 *)v150 + 2);
              __src = v134;
              v72 = sub_1D52B3E7C((uint64_t **)(v4 + 120), (void **)v134, (uint64_t)&unk_1D544A5C4, (__int128 **)&__src);
              sub_1D5282A44((char *)v72 + 56, (char *)&v156, (uint64_t)v158, 4uLL);
LABEL_122:
              v26 = (std::__shared_weak_count *)v150;
LABEL_123:
              if (v26)
              {
LABEL_124:
                v151 = v26;
                operator delete(v26);
              }
              goto LABEL_229;
            case 61455:
              if (*((_WORD *)&v154[-1] + 6 * v9 + 3) != 10 || *((_DWORD *)v154 + 3 * v9) < 2u)
                goto LABEL_229;
              sub_1D52917E4(v4, &v156);
              LODWORD(v146) = sub_1D52A5CC8(v12);
              sub_1D5285B08((int *)&__src, (int *)&v146);
              sub_1D5285164((uint64_t *)&v150, (uint64_t *)&v156, (uint64_t)&__src, 0);
              v73 = (std::__shared_weak_count *)v157;
              if (v157)
              {
                v74 = (unint64_t *)(v157 + 1);
                do
                  v75 = __ldaxr(v74);
                while (__stlxr(v75 - 1, v74));
                if (!v75)
                {
                  ((void (*)(std::__shared_weak_count *))v73->__on_zero_shared)(v73);
                  std::__shared_weak_count::__release_weak(v73);
                }
              }
              sub_1D52917E4(v4, &v156);
              v76 = sub_1D52847F8((uint64_t)v156);
              v77 = (std::__shared_weak_count *)v157;
              if (v157)
              {
                v78 = (unint64_t *)(v157 + 1);
                do
                  v79 = __ldaxr(v78);
                while (__stlxr(v79 - 1, v78));
                if (!v79)
                {
                  ((void (*)(std::__shared_weak_count *))v77->__on_zero_shared)(v77);
                  std::__shared_weak_count::__release_weak(v77);
                }
              }
              sub_1D52917E4(v4, &v156);
              v80 = sub_1D52847F8((uint64_t)v156);
              v81 = (std::__shared_weak_count *)v157;
              if (v157)
              {
                v82 = (unint64_t *)(v157 + 1);
                do
                  v83 = __ldaxr(v82);
                while (__stlxr(v83 - 1, v82));
                if (!v83)
                {
                  ((void (*)(std::__shared_weak_count *))v81->__on_zero_shared)(v81);
                  std::__shared_weak_count::__release_weak(v81);
                }
              }
              if (v80 <= 0x10)
              {
                sub_1D528EB68(&v156, 3 * v80);
                if (v80)
                {
                  v84 = 0;
                  if (3 * (unint64_t)v80 <= 1)
                    v85 = 1;
                  else
                    v85 = 3 * v80;
                  do
                  {
                    sub_1D52917E4(v4, &__src);
                    v86 = sub_1D52847F8((uint64_t)__src);
                    v87 = (std::__shared_weak_count *)v149;
                    if (v149)
                    {
                      v88 = (unint64_t *)(v149 + 8);
                      do
                        v89 = __ldaxr(v88);
                      while (__stlxr(v89 - 1, v88));
                      if (!v89)
                      {
                        ((void (*)(std::__shared_weak_count *))v87->__on_zero_shared)(v87);
                        std::__shared_weak_count::__release_weak(v87);
                      }
                    }
                    sub_1D52917E4(v4, &__src);
                    v90 = sub_1D52847F8((uint64_t)__src);
                    v91 = (std::__shared_weak_count *)v149;
                    if (v149)
                    {
                      v92 = (unint64_t *)(v149 + 8);
                      do
                        v93 = __ldaxr(v92);
                      while (__stlxr(v93 - 1, v92));
                      if (!v93)
                      {
                        ((void (*)(std::__shared_weak_count *))v91->__on_zero_shared)(v91);
                        std::__shared_weak_count::__release_weak(v91);
                      }
                    }
                    v156[v84++] = (double)v86 / (double)v90;
                  }
                  while (v84 != v85);
                }
                *(_BYTE *)(v4 + *(unsigned int *)(v4 + 1344) + 1442) = 0;
                sub_1D528EB68(&__src, v80);
                sub_1D528EB68(&v146, v80);
                sub_1D528EB68(&v141, v80);
                if (v80)
                {
                  v94 = 0;
                  v95 = v156;
                  v96 = (char *)__src;
                  v97 = (char *)v146;
                  v98 = (char *)v141;
                  do
                  {
                    *(double *)&v96[v94 * 8] = v95[v94];
                    *(double *)&v97[v94 * 8] = v95[v80 + v94];
                    *(double *)&v98[v94 * 8] = v95[2 * v80 + v94];
                    ++v94;
                  }
                  while (v80 != v94);
                }
                v99 = *(unsigned int *)(v4 + 1344);
                *(_DWORD *)(v4 + 4 * v99 + 1444) = v76;
                v100 = (char *)(v4 + 24 * v99 + 1456);
                if (v100 != (char *)&__src)
                {
                  sub_1D528FA34(v100, (char *)__src, (uint64_t)v149, (v149 - (_BYTE *)__src) >> 3);
                  LODWORD(v99) = *(_DWORD *)(v4 + 1344);
                }
                v101 = (char *)(v4 + 24 * v99 + 1504);
                if (v101 != (char *)&v146)
                {
                  sub_1D528FA34(v101, (char *)v146, (uint64_t)v147, (v147 - (_BYTE *)v146) >> 3);
                  LODWORD(v99) = *(_DWORD *)(v4 + 1344);
                }
                v102 = (char *)(v4 + 24 * v99 + 1552);
                if (v102 != (char *)&v141)
                  sub_1D528FA34(v102, (char *)v141, (uint64_t)v142, (v142 - (_BYTE *)v141) >> 3);
                v138 = 0;
                v139 = 0;
                v140 = 0;
                sub_1D5282C70(&v138, v146, (uint64_t)v147, (v147 - (_BYTE *)v146) >> 3);
                if (((*(uint64_t (**)(uint64_t, void **))(*(_QWORD *)v4 + 864))(v4, &v138) & 1) != 0)
                {
                  *(_BYTE *)(v4 + *(unsigned int *)(v4 + 1344) + 1442) = 1;
                }
                else
                {
                  v135 = 0;
                  v136 = 0;
                  v137 = 0;
                  sub_1D5282C70(&v135, v141, (uint64_t)v142, (v142 - (_BYTE *)v141) >> 3);
                  *(_BYTE *)(v4 + *(unsigned int *)(v4 + 1344) + 1442) = (*(uint64_t (**)(uint64_t, void **))(*(_QWORD *)v4 + 864))(v4, &v135);
                  if (v135)
                  {
                    v136 = v135;
                    operator delete(v135);
                  }
                }
                if (v138)
                {
                  v139 = v138;
                  operator delete(v138);
                }
                if (v141)
                {
                  v142 = v141;
                  operator delete(v141);
                }
                if (v146)
                {
                  v147 = v146;
                  operator delete(v146);
                }
                if (__src)
                {
                  v149 = (char *)__src;
                  operator delete(__src);
                }
                if (v156)
                {
                  v157 = v156;
                  operator delete(v156);
                }
              }
              goto LABEL_227;
            case 61456:
              if (*((_WORD *)&v154[-1] + 6 * v9 + 3) != 10 || *((_DWORD *)v154 + 3 * v9) < 2u)
                goto LABEL_229;
              sub_1D52917E4(v4, &v156);
              LODWORD(v146) = sub_1D52A5CC8(v12);
              sub_1D5285B08((int *)&__src, (int *)&v146);
              sub_1D5285164((uint64_t *)&v150, (uint64_t *)&v156, (uint64_t)&__src, 0);
              v103 = (std::__shared_weak_count *)v157;
              if (v157)
              {
                v104 = (unint64_t *)(v157 + 1);
                do
                  v105 = __ldaxr(v104);
                while (__stlxr(v105 - 1, v104));
                if (!v105)
                {
                  ((void (*)(std::__shared_weak_count *))v103->__on_zero_shared)(v103);
                  std::__shared_weak_count::__release_weak(v103);
                }
              }
              sub_1D52917E4(v4, &v156);
              v106 = sub_1D52847F8((uint64_t)v156);
              v107 = (std::__shared_weak_count *)v157;
              if (v157)
              {
                v108 = (unint64_t *)(v157 + 1);
                do
                  v109 = __ldaxr(v108);
                while (__stlxr(v109 - 1, v108));
                if (!v109)
                {
                  ((void (*)(std::__shared_weak_count *))v107->__on_zero_shared)(v107);
                  std::__shared_weak_count::__release_weak(v107);
                }
              }
              sub_1D52917E4(v4, &v156);
              v110 = sub_1D52847F8((uint64_t)v156);
              v111 = (std::__shared_weak_count *)v157;
              if (v157)
              {
                v112 = (unint64_t *)(v157 + 1);
                do
                  v113 = __ldaxr(v112);
                while (__stlxr(v113 - 1, v112));
                if (!v113)
                {
                  ((void (*)(std::__shared_weak_count *))v111->__on_zero_shared)(v111);
                  std::__shared_weak_count::__release_weak(v111);
                }
              }
              if (v110 <= 0x10)
              {
                sub_1D528EB68(&v156, 2 * v110);
                if (v110)
                {
                  v114 = 0;
                  if (2 * (unint64_t)v110 <= 1)
                    v115 = 1;
                  else
                    v115 = 2 * v110;
                  do
                  {
                    sub_1D52917E4(v4, &__src);
                    v116 = sub_1D52847F8((uint64_t)__src);
                    v117 = (std::__shared_weak_count *)v149;
                    if (v149)
                    {
                      v118 = (unint64_t *)(v149 + 8);
                      do
                        v119 = __ldaxr(v118);
                      while (__stlxr(v119 - 1, v118));
                      if (!v119)
                      {
                        ((void (*)(std::__shared_weak_count *))v117->__on_zero_shared)(v117);
                        std::__shared_weak_count::__release_weak(v117);
                      }
                    }
                    sub_1D52917E4(v4, &__src);
                    v120 = sub_1D52847F8((uint64_t)__src);
                    v121 = (std::__shared_weak_count *)v149;
                    if (v149)
                    {
                      v122 = (unint64_t *)(v149 + 8);
                      do
                        v123 = __ldaxr(v122);
                      while (__stlxr(v123 - 1, v122));
                      if (!v123)
                      {
                        ((void (*)(std::__shared_weak_count *))v121->__on_zero_shared)(v121);
                        std::__shared_weak_count::__release_weak(v121);
                      }
                    }
                    v156[v114++] = (double)v116 / (double)v120;
                  }
                  while (v114 != v115);
                }
                sub_1D52DCA4C(&__src, v110);
                v124 = (__int128 *)__src;
                if (v110)
                {
                  v125 = 0;
                  v126 = v156;
                  v127 = (double *)((char *)__src + 8);
                  do
                  {
                    v128 = v126[v110 + v125];
                    *(v127 - 1) = v126[v125];
                    *v127 = v128;
                    ++v125;
                    v127 += 2;
                  }
                  while (v110 != v125);
                }
                *(_DWORD *)(v4 + 4 * *(unsigned int *)(v4 + 1344) + 1288) = v106;
                v129 = (void **)(v4 + 24 * *(unsigned int *)(v4 + 1344) + 1296);
                if (v129 != &__src)
                {
                  sub_1D52DCAC0(v129, v124, (__int128 *)v149, (v149 - (char *)v124) >> 4);
                  v124 = (__int128 *)__src;
                }
                if (v124)
                {
                  v149 = (char *)v124;
                  operator delete(v124);
                }
                if (v156)
                {
                  v157 = v156;
                  operator delete(v156);
                }
              }
LABEL_227:
              sub_1D5285200((uint64_t *)&v150);
              goto LABEL_228;
            default:
              goto LABEL_229;
          }
          break;
        }
      }
      sub_1D5285200(v155);
    }
  }
  else
  {
    sub_1D52ABE88(v0, v1, v2);
  }
}

void sub_1D52DB60C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,char a38)
{
  uint64_t v38;
  void *v40;

  if (__p)
    operator delete(__p);
  if (a20)
    operator delete(a20);
  if (a23)
    operator delete(a23);
  if (a29)
    operator delete(a29);
  if (a32)
    operator delete(a32);
  v40 = *(void **)(v38 - 120);
  if (v40)
  {
    *(_QWORD *)(v38 - 112) = v40;
    operator delete(v40);
  }
  sub_1D5285200((uint64_t *)&a35);
  sub_1D5285200((uint64_t *)(v38 - 144));
  _Unwind_Resume(a1);
}

uint64_t sub_1D52DB8C4(uint64_t result, uint64_t a2, unsigned __int16 *a3)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;

  if ((*a3 | 8) == 0x140B && a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
  {
    v5 = result;
    v6 = 0;
    sub_1D5285A24(&v7, &v6);
    result = sub_1D52A7E28((uint64_t)a3, &v7);
    *(_WORD *)(v5 + 1440) = result;
  }
  return result;
}

void sub_1D52DB934(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  unint64_t v5;
  __int128 v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  int v27;
  unint64_t v28;
  unint64_t v29;
  __int128 v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  __int128 v37;
  uint64_t v38;
  int v39;
  std::string __p;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t *v45;

  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  sub_1D52850A0(&__p, "raf");
  v4 = a2[2];
  v5 = a2[1];
  if (v5 >= v4)
  {
    v7 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *a2) >> 3);
    v8 = v7 + 1;
    if (v7 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v9 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v4 - *a2) >> 3);
    if (2 * v9 > v8)
      v8 = 2 * v9;
    if (v9 >= 0x555555555555555)
      v10 = 0xAAAAAAAAAAAAAAALL;
    else
      v10 = v8;
    v45 = a2 + 2;
    if (v10)
      v11 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v10);
    else
      v11 = 0;
    v12 = &v11[24 * v7];
    v41 = v11;
    v42 = v12;
    v44 = &v11[24 * v10];
    v13 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *((_QWORD *)v12 + 2) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)v12 = v13;
    memset(&__p, 0, sizeof(__p));
    v43 = v12 + 24;
    sub_1D5293D58(a2, &v41);
    v14 = a2[1];
    sub_1D5293F24((uint64_t)&v41);
    v15 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    a2[1] = v14;
    if (v15 < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    v6 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(_QWORD *)(v5 + 16) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)v5 = v6;
    a2[1] = v5 + 24;
  }
  sub_1D52850A0(&__p, "fuji");
  v17 = a2[1];
  v16 = a2[2];
  if (v17 >= v16)
  {
    v19 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v17 - *a2) >> 3);
    v20 = v19 + 1;
    if (v19 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v21 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v16 - *a2) >> 3);
    if (2 * v21 > v20)
      v20 = 2 * v21;
    if (v21 >= 0x555555555555555)
      v22 = 0xAAAAAAAAAAAAAAALL;
    else
      v22 = v20;
    v45 = a2 + 2;
    if (v22)
      v23 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v22);
    else
      v23 = 0;
    v24 = &v23[24 * v19];
    v41 = v23;
    v42 = v24;
    v44 = &v23[24 * v22];
    v25 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *((_QWORD *)v24 + 2) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)v24 = v25;
    memset(&__p, 0, sizeof(__p));
    v43 = v24 + 24;
    sub_1D5293D58(a2, &v41);
    v26 = a2[1];
    sub_1D5293F24((uint64_t)&v41);
    v27 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    a2[1] = v26;
    if (v27 < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    v18 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(_QWORD *)(v17 + 16) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)v17 = v18;
    a2[1] = v17 + 24;
  }
  sub_1D5293780(a1, &__p);
  v29 = a2[1];
  v28 = a2[2];
  if (v29 >= v28)
  {
    v31 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v29 - *a2) >> 3);
    v32 = v31 + 1;
    if (v31 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v33 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v28 - *a2) >> 3);
    if (2 * v33 > v32)
      v32 = 2 * v33;
    if (v33 >= 0x555555555555555)
      v34 = 0xAAAAAAAAAAAAAAALL;
    else
      v34 = v32;
    v45 = a2 + 2;
    if (v34)
      v35 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v34);
    else
      v35 = 0;
    v36 = &v35[24 * v31];
    v41 = v35;
    v42 = v36;
    v44 = &v35[24 * v34];
    v37 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *((_QWORD *)v36 + 2) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)v36 = v37;
    memset(&__p, 0, sizeof(__p));
    v43 = v36 + 24;
    sub_1D5293D58(a2, &v41);
    v38 = a2[1];
    sub_1D5293F24((uint64_t)&v41);
    v39 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    a2[1] = v38;
    if (v39 < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    v30 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(_QWORD *)(v29 + 16) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)v29 = v30;
    a2[1] = v29 + 24;
  }
}

void sub_1D52DBC88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  sub_1D5293F24((uint64_t)&a15);
  if (a14 < 0)
    operator delete(__p);
  sub_1D5293CCC((void ***)&__p);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52DBCE0(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 824))(a1);
}

uint64_t sub_1D52DBCEC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 1180);
}

_QWORD *sub_1D52DBCF4@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  _QWORD *result;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  int v8;
  _QWORD v9[3];

  v9[1] = 0;
  v9[2] = 0;
  result = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 824))(a1);
  v5 = 0uLL;
  if ((_DWORD)result)
  {
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)a1 + 464))(a1, (__n128)0);
    v9[0] = v6;
    v8 = (*(_QWORD *)(a1 + 1200) - *(_QWORD *)(a1 + 1192)) >> 3;
    result = sub_1D52DCED8(v9, v9, (int *)(a1 + 1184), &v8, a1 + 1192, a1 + 1240, &v7);
    v5 = v7;
  }
  *a2 = v5;
  return result;
}

void sub_1D52DBD88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_1D5282EB4((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52DBDA4@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  _QWORD *result;
  __int128 v5;
  unint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  v11 = 0;
  v12 = 0;
  result = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 824))(a1);
  v5 = 0uLL;
  if ((_DWORD)result)
  {
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)a1 + 464))(a1, (__n128)0);
    v10 = (*(_QWORD *)(a1 + 1200) - *(_QWORD *)(a1 + 1192)) >> 3;
    LODWORD(v8) = v6;
    LODWORD(v9) = v6;
    HIDWORD(v9) = (v6 >> 31) & 0xFFFFFFFE;
    HIDWORD(v8) = HIDWORD(v9);
    result = sub_1D52DD1AC(&v9, &v8, (int *)(a1 + 1184), &v10, a1 + 1192, a1 + 1240, &v7);
    v5 = v7;
  }
  *a2 = v5;
  return result;
}

void sub_1D52DBE48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_1D5282EB4((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_1D52DBE64(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  _BOOL8 result;
  BOOL v6;

  v2 = a2[1];
  if (*a2 == v2)
    return 0;
  v3 = *a2 + 8;
  do
  {
    v4 = fabs(*(double *)(v3 - 8));
    result = v4 > 0.0001;
    v6 = v4 > 0.0001 || v3 == v2;
    v3 += 8;
  }
  while (!v6);
  return result;
}

float sub_1D52DBEA4@<S0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double *v2;
  double *v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  double *v9;
  double *v10;
  float *v11;
  double v12;
  float v13;
  double v14;
  float v15;
  double v16;
  void *exception;

  v2 = *(double **)(a1 + 1464);
  v3 = *(double **)(a1 + 1456);
  v4 = v2 - v3;
  *(_BYTE *)a2 = *(_BYTE *)(a1 + 1442);
  v5 = *(_DWORD *)(a1 + 1444);
  *(_DWORD *)(a2 + 4) = v4;
  *(_DWORD *)(a2 + 8) = v5;
  if ((unint64_t)((char *)v2 - (char *)v3) > 0x80)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v6 = 0;
  v7 = 0uLL;
  *(_OWORD *)(a2 + 60) = 0u;
  *(_OWORD *)(a2 + 44) = 0u;
  *(_OWORD *)(a2 + 28) = 0u;
  *(_OWORD *)(a2 + 12) = 0u;
  do
  {
    v8 = a2 + v6;
    *(_OWORD *)(v8 + 76) = 0uLL;
    *(_OWORD *)(v8 + 140) = 0uLL;
    v6 += 16;
  }
  while (v6 != 64);
  if (v2 != v3)
  {
    v9 = *(double **)(a1 + 1504);
    v10 = *(double **)(a1 + 1552);
    if (v4 <= 1)
      v4 = 1;
    v11 = (float *)(a2 + 140);
    do
    {
      v12 = *v9++;
      v13 = v12;
      *(v11 - 16) = v13;
      v14 = *v10++;
      v15 = v14;
      *v11 = v15;
      v16 = *v3++;
      *(float *)&v7 = v16;
      *((_DWORD *)v11++ - 32) = v7;
      --v4;
    }
    while (v4);
  }
  return *(float *)&v7;
}

void sub_1D52DBF90(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

float sub_1D52DBFA4@<S0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double *v2;
  double *v3;
  unint64_t v4;
  float result;
  double *v6;
  uint64_t v7;
  float *v8;
  float v9;
  double v10;
  void *exception;

  v2 = *(double **)(a1 + 1200);
  v3 = *(double **)(a1 + 1192);
  v4 = v2 - v3;
  *(_BYTE *)a2 = *(_BYTE *)(a1 + 1180);
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a1 + 1184);
  *(_DWORD *)(a2 + 8) = v4;
  if ((unint64_t)((char *)v2 - (char *)v3) > 0x80)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  result = 0.0;
  *(_OWORD *)(a2 + 124) = 0u;
  *(_OWORD *)(a2 + 108) = 0u;
  *(_OWORD *)(a2 + 92) = 0u;
  *(_OWORD *)(a2 + 76) = 0u;
  *(_OWORD *)(a2 + 60) = 0u;
  *(_OWORD *)(a2 + 44) = 0u;
  *(_OWORD *)(a2 + 28) = 0u;
  *(_OWORD *)(a2 + 12) = 0u;
  if (v2 != v3)
  {
    v6 = *(double **)(a1 + 1240);
    v7 = (uint64_t)(*(_QWORD *)(a1 + 1248) - (_QWORD)v6) >> 3;
    if (v4 <= 1)
      v4 = 1;
    v8 = (float *)(a2 + 76);
    do
    {
      v9 = *v3;
      *(v8 - 16) = v9;
      if (!v7)
        sub_1D528EAE0();
      v10 = *v6++;
      result = v10;
      *v8++ = result;
      --v7;
      ++v3;
      --v4;
    }
    while (v4);
  }
  return result;
}

void sub_1D52DC094(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52DC0A8(int *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  int v5;

  v2 = (*(uint64_t (**)(int *))(*(_QWORD *)a1 + 784))(a1);
  v3 = a1[358];
  if (v2)
  {
    if (v3 >= 4)
      return 0;
    else
      return dword_1D5449020[v3];
  }
  else
  {
    switch((int)v3)
    {
      case 128:
        return 2172748160;
      case 129:
        return 2172748161;
      case 130:
        return 2172748162;
      case 131:
        return 2172748163;
      case 132:
        return 2172748164;
      case 133:
        v5 = 5;
        goto LABEL_26;
      case 134:
        return 2172748166;
      case 135:
        return 2172748167;
      case 136:
        return 2172748168;
      case 137:
        v5 = 9;
        goto LABEL_26;
      case 138:
        v5 = 10;
        goto LABEL_26;
      case 139:
        v5 = 11;
        goto LABEL_26;
      case 140:
        return 2172748172;
      case 141:
        v5 = 13;
        goto LABEL_26;
      case 142:
        return 2172748174;
      case 143:
        return 2172748175;
      case 144:
        return 2172748176;
      case 145:
        v5 = 17;
LABEL_26:
        result = v5 | 0x81818180;
        break;
      default:
        switch((int)v3)
        {
          case 0:
            result = 2492765332;
            break;
          case 1:
            result = 1633771873;
            break;
          case 2:
            result = 1229539657;
            break;
          case 3:
            result = 370546198;
            break;
          default:
            return 0;
        }
        break;
    }
  }
  return result;
}

void sub_1D52DC264(_DWORD *a1@<X0>, _QWORD *a2@<X1>, _OWORD *a3@<X2>, _QWORD *a4@<X8>)
{
  unsigned int v8;
  BOOL v9;
  int v10;
  int v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t *p_shared_owners;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t *v29;
  void *exception;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  std::__shared_weak_count *v34;
  __int128 v35;

  if ((*(uint64_t (**)(_DWORD *))(*(_QWORD *)a1 + 784))(a1)
    || !*((_BYTE *)a1 + 1604)
    || ((v8 = a1[400], v8 <= 0x10) ? (v9 = ((1 << v8) & 0x15000) == 0) : (v9 = 1),
        v9 || !*((_BYTE *)a1 + 1612) || !*((_BYTE *)a1 + 1620) || !*((_BYTE *)a1 + 1628)))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  *a4 = 0;
  a4[1] = 0;
  v10 = a1[402];
  if (v8 != 12)
  {
    if (v10 == 4)
    {
      if (a1[406] == 1)
      {
        (*(void (**)(uint64_t *__return_ptr, _DWORD *))(*(_QWORD *)a1 + 384))(&v33, a1);
        v32 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a1 + 424))(a1);
        sub_1D52DD4E4(&v33, (unint64_t *)&v32, a2, a3, &v35);
        sub_1D5292548((uint64_t)a4, &v35);
        v18 = (std::__shared_weak_count *)*((_QWORD *)&v35 + 1);
        if (*((_QWORD *)&v35 + 1))
        {
          v19 = (unint64_t *)(*((_QWORD *)&v35 + 1) + 8);
          do
            v20 = __ldaxr(v19);
          while (__stlxr(v20 - 1, v19));
          if (!v20)
          {
            ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
            std::__shared_weak_count::__release_weak(v18);
          }
        }
        v15 = v34;
        if (v34)
        {
          p_shared_owners = (unint64_t *)&v34->__shared_owners_;
          do
            v17 = __ldaxr(p_shared_owners);
          while (__stlxr(v17 - 1, p_shared_owners));
          goto LABEL_53;
        }
      }
      return;
    }
    goto LABEL_34;
  }
  if (v10 != 4)
  {
LABEL_34:
    if (!v10 && !a1[406])
    {
      (*(void (**)(uint64_t *__return_ptr, _DWORD *))(*(_QWORD *)a1 + 384))(&v33, a1);
      v32 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a1 + 424))(a1);
      v31 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a1 + 784))(a1);
      sub_1D52DD620(&v33, (unint64_t *)&v32, &v31, a2, a3, &v35);
      sub_1D5292548((uint64_t)a4, &v35);
      v22 = (std::__shared_weak_count *)*((_QWORD *)&v35 + 1);
      if (*((_QWORD *)&v35 + 1))
      {
        v23 = (unint64_t *)(*((_QWORD *)&v35 + 1) + 8);
        do
          v24 = __ldaxr(v23);
        while (__stlxr(v24 - 1, v23));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      v15 = v34;
      if (v34)
      {
        v25 = (unint64_t *)&v34->__shared_owners_;
        do
          v17 = __ldaxr(v25);
        while (__stlxr(v17 - 1, v25));
        goto LABEL_53;
      }
    }
    return;
  }
  v11 = a1[406];
  if (v11 == 1)
  {
    (*(void (**)(uint64_t *__return_ptr, _DWORD *))(*(_QWORD *)a1 + 384))(&v33, a1);
    v32 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a1 + 424))(a1);
    sub_1D52C0B28(&v33, (unint64_t *)&v32, a2, a3, &v35);
    v26 = v34;
    if (v34)
    {
      v27 = (unint64_t *)&v34->__shared_owners_;
      do
        v28 = __ldaxr(v27);
      while (__stlxr(v28 - 1, v27));
      if (!v28)
      {
        ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
        std::__shared_weak_count::__release_weak(v26);
      }
    }
    sub_1D531948C(v35, 1);
    sub_1D52908C8(a4, (uint64_t *)&v35);
    v15 = (std::__shared_weak_count *)*((_QWORD *)&v35 + 1);
    if (*((_QWORD *)&v35 + 1))
    {
      v29 = (unint64_t *)(*((_QWORD *)&v35 + 1) + 8);
      do
        v17 = __ldaxr(v29);
      while (__stlxr(v17 - 1, v29));
      goto LABEL_53;
    }
  }
  else if (!v11)
  {
    (*(void (**)(uint64_t *__return_ptr, _DWORD *))(*(_QWORD *)a1 + 384))(&v33, a1);
    v32 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a1 + 424))(a1);
    v31 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a1 + 784))(a1);
    sub_1D52DD380(&v33, (unint64_t *)&v32, &v31, a2, a3, &v35);
    sub_1D5292548((uint64_t)a4, &v35);
    v12 = (std::__shared_weak_count *)*((_QWORD *)&v35 + 1);
    if (*((_QWORD *)&v35 + 1))
    {
      v13 = (unint64_t *)(*((_QWORD *)&v35 + 1) + 8);
      do
        v14 = __ldaxr(v13);
      while (__stlxr(v14 - 1, v13));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    v15 = v34;
    if (v34)
    {
      v16 = (unint64_t *)&v34->__shared_owners_;
      do
        v17 = __ldaxr(v16);
      while (__stlxr(v17 - 1, v16));
LABEL_53:
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
  }
}

void sub_1D52DC694(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_1D5282EB4((uint64_t)va);
  sub_1D5282EB4(v4);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52DC700(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 1604))
    return *(unsigned int *)(a1 + 1600);
  else
    return sub_1D52919C4();
}

id sub_1D52DC714(uint64_t a1)
{
  void *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  const char *v9;
  void *v10;
  const char *v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD v21[5];
  _QWORD v22[2];
  _QWORD v23[2];
  void *v24;
  _QWORD v25[2];

  v25[1] = *MEMORY[0x1E0C80C00];
  sub_1D52A8CA4(a1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)objc_msgSend_mutableCopy(v2, v3, v4, v5, v6);

  v24 = &unk_1E99CACF8;
  v23[0] = CFSTR("FujiIFD");
  v22[0] = CFSTR("Name");
  v22[1] = CFSTR("Namespace");
  v21[0] = MEMORY[0x1E0C809B0];
  v21[1] = 3221225472;
  v21[2] = sub_1D52DC8BC;
  v21[3] = &unk_1E9972460;
  v21[4] = a1;
  v8 = (void *)MEMORY[0x1D82721B4](v21);
  v23[1] = v8;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v9, (uint64_t)v23, (uint64_t)v22, 2);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v25[0] = v10;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v11, (uint64_t)v25, (uint64_t)&v24, 1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addEntriesFromDictionary_(v7, v13, (uint64_t)v12, v14, v15);

  objc_msgSend_dictionaryWithDictionary_(MEMORY[0x1E0C99D80], v16, (uint64_t)v7, v17, v18);
  v19 = (void *)objc_claimAutoreleasedReturnValue();

  return v19;
}

void sub_1D52DC870(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_1D52DC8BC(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 872))(*(_QWORD *)(a1 + 32));
}

id sub_1D52DC8CC(uint64_t a1, const char *a2)
{
  _QWORD v3[12];
  _QWORD v4[13];

  v4[12] = *MEMORY[0x1E0C80C00];
  v3[0] = &unk_1E99CAD10;
  v3[1] = &unk_1E99CAD28;
  v4[0] = &unk_1E99D0890;
  v4[1] = &unk_1E99D08B8;
  v3[2] = &unk_1E99CAD40;
  v3[3] = &unk_1E99CAD58;
  v4[2] = &unk_1E99D08E0;
  v4[3] = &unk_1E99D0908;
  v3[4] = &unk_1E99CAD70;
  v3[5] = &unk_1E99CAD88;
  v4[4] = &unk_1E99D0930;
  v4[5] = &unk_1E99D0958;
  v3[6] = &unk_1E99CADA0;
  v3[7] = &unk_1E99CADB8;
  v4[6] = &unk_1E99D0980;
  v4[7] = &unk_1E99D09A8;
  v3[8] = &unk_1E99CADD0;
  v3[9] = &unk_1E99CADE8;
  v4[8] = &unk_1E99D09D0;
  v4[9] = &unk_1E99D09F8;
  v3[10] = &unk_1E99CAE00;
  v3[11] = &unk_1E99CAE18;
  v4[10] = &unk_1E99D0A20;
  v4[11] = &unk_1E99D0A48;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], a2, (uint64_t)v4, (uint64_t)v3, 12);
  return (id)objc_claimAutoreleasedReturnValue();
}

void sub_1D52DCA20(_QWORD *a1)
{
  sub_1D52DCC10(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52DCA44(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 1440);
}

_QWORD *sub_1D52DCA4C(_QWORD *a1, unint64_t a2)
{
  char *v4;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_1D52842F4(a1, a2);
    v4 = (char *)a1[1];
    bzero(v4, 16 * a2);
    a1[1] = &v4[16 * a2];
  }
  return a1;
}

void sub_1D52DCAA4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_1D52DCAC0(_QWORD *a1, __int128 *a2, __int128 *a3, unint64_t a4)
{
  __int128 *v6;
  uint64_t v8;
  char *result;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  __int128 v16;
  char *v17;
  char *v18;
  unint64_t v19;
  __int128 *v20;
  uint64_t v21;
  __int128 v22;
  char *v23;
  char *v24;
  __int128 v25;
  char *v26;
  char *v27;
  __int128 v28;

  v6 = a2;
  v8 = a1[2];
  result = (char *)*a1;
  if (a4 <= (v8 - (uint64_t)result) >> 4)
  {
    v18 = (char *)a1[1];
    v13 = a1 + 1;
    v12 = v18;
    v19 = (v18 - result) >> 4;
    if (v19 >= a4)
    {
      v26 = result;
      if (a2 != a3)
      {
        v27 = result;
        do
        {
          v28 = *v6++;
          *(_OWORD *)v27 = v28;
          v27 += 16;
          v26 += 16;
        }
        while (v6 != a3);
      }
      v17 = (char *)(v26 - result);
      v12 = result;
    }
    else
    {
      v20 = &a2[v19];
      if (v12 != result)
      {
        v21 = 16 * v19;
        do
        {
          v22 = *v6++;
          *(_OWORD *)result = v22;
          result += 16;
          v21 -= 16;
        }
        while (v21);
      }
      v23 = v12;
      if (v20 != a3)
      {
        v24 = v12;
        do
        {
          v25 = *v20++;
          *(_OWORD *)v24 = v25;
          v24 += 16;
          v23 += 16;
        }
        while (v20 != a3);
      }
      v17 = (char *)(v23 - v12);
    }
  }
  else
  {
    if (result)
    {
      a1[1] = result;
      operator delete(result);
      v8 = 0;
      *a1 = 0;
      a1[1] = 0;
      a1[2] = 0;
    }
    if (a4 >> 60)
      sub_1D5282B8C();
    v10 = v8 >> 3;
    if (v8 >> 3 <= a4)
      v10 = a4;
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF0)
      v11 = 0xFFFFFFFFFFFFFFFLL;
    else
      v11 = v10;
    result = sub_1D52842F4(a1, v11);
    v14 = (char *)a1[1];
    v13 = a1 + 1;
    v12 = v14;
    v15 = v14;
    if (v6 != a3)
    {
      v15 = v12;
      do
      {
        v16 = *v6++;
        *(_OWORD *)v15 = v16;
        v15 += 16;
      }
      while (v6 != a3);
    }
    v17 = (char *)(v15 - v12);
  }
  *v13 = &v17[(_QWORD)v12];
  return result;
}

uint64_t sub_1D52DCC10(_QWORD *a1)
{
  uint64_t v2;
  void *v3;
  uint64_t i;
  void *v5;
  uint64_t j;
  void *v7;
  uint64_t k;
  void *v9;
  uint64_t m;
  void *v11;
  uint64_t n;
  void *v13;

  v2 = 0;
  *a1 = off_1E99747C8;
  do
  {
    v3 = (void *)a1[v2 + 197];
    if (v3)
    {
      a1[v2 + 198] = v3;
      operator delete(v3);
    }
    v2 -= 3;
  }
  while (v2 != -6);
  for (i = 0; i != -6; i -= 3)
  {
    v5 = (void *)a1[i + 191];
    if (v5)
    {
      a1[i + 192] = v5;
      operator delete(v5);
    }
  }
  for (j = 0; j != -6; j -= 3)
  {
    v7 = (void *)a1[j + 185];
    if (v7)
    {
      a1[j + 186] = v7;
      operator delete(v7);
    }
  }
  for (k = 0; k != -6; k -= 3)
  {
    v9 = (void *)a1[k + 165];
    if (v9)
    {
      a1[k + 166] = v9;
      operator delete(v9);
    }
  }
  for (m = 0; m != -6; m -= 3)
  {
    v11 = (void *)a1[m + 158];
    if (v11)
    {
      a1[m + 159] = v11;
      operator delete(v11);
    }
  }
  for (n = 0; n != -6; n -= 3)
  {
    v13 = (void *)a1[n + 152];
    if (v13)
    {
      a1[n + 153] = v13;
      operator delete(v13);
    }
  }
  return sub_1D52B2190((uint64_t)a1);
}

void sub_1D52DCD14(uint64_t *a1@<X1>, char *a2@<X2>, void **a3@<X3>, void **a4@<X4>, _QWORD *a5@<X8>)
{
  _QWORD *v10;

  v10 = operator new(0x688uLL);
  sub_1D52DCD94(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;
  sub_1D5285658((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1D52DCD80(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52DCD94(_QWORD *a1, uint64_t *a2, char *a3, void **a4, void **a5)
{
  a1[2] = 0;
  *a1 = &unk_1E9974B60;
  a1[1] = 0;
  sub_1D52D8934((uint64_t)(a1 + 3), a2, *a3, *a4, *a5);
  return a1;
}

void sub_1D52DCDD8(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52DCDEC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9974B60;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52DCE00(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9974B60;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52DCE34(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a1 + 24) + 16))(a1 + 24);
}

int *sub_1D52DCE44(int *result, unsigned int *a2)
{
  unsigned int v2;
  unint64_t v3;
  int v4;
  BOOL v5;
  _BOOL4 v6;
  void *exception;

  v2 = *a2;
  if ((*a2 & 0x80000000) != 0)
    v2 = -v2;
  v3 = *result * (unint64_t)v2;
  if ((*a2 & 0x80000000) == 0)
    v4 = v3;
  else
    v4 = -(int)v3;
  v5 = (v3 & 0xFFFFFFFF00000000) != 0;
  if ((_DWORD)v3)
    v6 = (*a2 & 0x80000000) != 0;
  else
    v6 = 0;
  *result = v4;
  if (v5 || v6)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return result;
}

void sub_1D52DCEC4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52DCED8@<X0>(_QWORD *a1@<X1>, _QWORD *a2@<X2>, int *a3@<X3>, int *a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, _QWORD *a7@<X8>)
{
  _QWORD *v14;
  _QWORD *result;

  v14 = operator new(0x70uLL);
  result = sub_1D52DCF68(v14, a1, a2, a3, a4, a5, a6);
  *a7 = v14 + 3;
  a7[1] = v14;
  return result;
}

void sub_1D52DCF54(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52DCF68(_QWORD *a1, _QWORD *a2, _QWORD *a3, int *a4, int *a5, uint64_t a6, uint64_t a7)
{
  a1[2] = 0;
  *a1 = &unk_1E9974BB0;
  a1[1] = 0;
  sub_1D52DD00C((uint64_t)(a1 + 3), a2, a3, a4, a5, a6, a7);
  return a1;
}

void sub_1D52DCFA0(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52DCFB4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9974BB0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52DCFC8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9974BB0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52DCFFC(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_1D52DD00C(uint64_t a1, _QWORD *a2, _QWORD *a3, int *a4, int *a5, uint64_t a6, uint64_t a7)
{
  int v11;
  int v12;
  void *__p;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;

  v11 = *a4;
  v12 = *a5;
  v18 = 0;
  v19 = 0;
  v17 = 0;
  sub_1D5282C70(&v17, *(const void **)a6, *(_QWORD *)(a6 + 8), (uint64_t)(*(_QWORD *)(a6 + 8) - *(_QWORD *)a6) >> 3);
  __p = 0;
  v15 = 0;
  v16 = 0;
  sub_1D5282C70(&__p, *(const void **)a7, *(_QWORD *)(a7 + 8), (uint64_t)(*(_QWORD *)(a7 + 8) - *(_QWORD *)a7) >> 3);
  sub_1D52DD104(a1, a2, a3, v11, v12, (uint64_t)&v17, (uint64_t)&__p);
  if (__p)
  {
    v15 = __p;
    operator delete(__p);
  }
  if (v17)
  {
    v18 = v17;
    operator delete(v17);
  }
  return a1;
}

void sub_1D52DD0D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  if (a12)
    operator delete(a12);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D52DD104(uint64_t a1, _QWORD *a2, _QWORD *a3, int a4, int a5, uint64_t a6, uint64_t a7)
{
  *(_QWORD *)a1 = &off_1E99A6F28;
  *(_QWORD *)(a1 + 8) = *a2;
  *(_QWORD *)(a1 + 16) = *a3;
  *(_QWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = a4;
  *(_DWORD *)(a1 + 36) = a5;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  sub_1D5282C70((_QWORD *)(a1 + 40), *(const void **)a6, *(_QWORD *)(a6 + 8), (uint64_t)(*(_QWORD *)(a6 + 8) - *(_QWORD *)a6) >> 3);
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = 0;
  sub_1D5282C70((_QWORD *)(a1 + 64), *(const void **)a7, *(_QWORD *)(a7 + 8), (uint64_t)(*(_QWORD *)(a7 + 8) - *(_QWORD *)a7) >> 3);
  return a1;
}

void sub_1D52DD190(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void *v4;

  v4 = *v2;
  if (*v2)
  {
    *(_QWORD *)(v1 + 48) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_1D52DD1AC@<X0>(_QWORD *a1@<X1>, _QWORD *a2@<X2>, int *a3@<X3>, int *a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, _QWORD *a7@<X8>)
{
  _QWORD *v14;
  _QWORD *result;

  v14 = operator new(0x70uLL);
  result = sub_1D52DD23C(v14, a1, a2, a3, a4, a5, a6);
  *a7 = v14 + 3;
  a7[1] = v14;
  return result;
}

void sub_1D52DD228(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52DD23C(_QWORD *a1, _QWORD *a2, _QWORD *a3, int *a4, int *a5, uint64_t a6, uint64_t a7)
{
  a1[2] = 0;
  *a1 = &unk_1E9974BB0;
  a1[1] = 0;
  sub_1D52DD288((uint64_t)(a1 + 3), a2, a3, a4, a5, a6, a7);
  return a1;
}

void sub_1D52DD274(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52DD288(uint64_t a1, _QWORD *a2, _QWORD *a3, int *a4, int *a5, uint64_t a6, uint64_t a7)
{
  int v11;
  int v12;
  void *__p;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;

  v11 = *a4;
  v12 = *a5;
  v18 = 0;
  v19 = 0;
  v17 = 0;
  sub_1D5282C70(&v17, *(const void **)a6, *(_QWORD *)(a6 + 8), (uint64_t)(*(_QWORD *)(a6 + 8) - *(_QWORD *)a6) >> 3);
  __p = 0;
  v15 = 0;
  v16 = 0;
  sub_1D5282C70(&__p, *(const void **)a7, *(_QWORD *)(a7 + 8), (uint64_t)(*(_QWORD *)(a7 + 8) - *(_QWORD *)a7) >> 3);
  sub_1D52DD104(a1, a2, a3, v11, v12, (uint64_t)&v17, (uint64_t)&__p);
  if (__p)
  {
    v15 = __p;
    operator delete(__p);
  }
  if (v17)
  {
    v18 = v17;
    operator delete(v17);
  }
  return a1;
}

void sub_1D52DD34C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  if (a12)
    operator delete(a12);
  _Unwind_Resume(exception_object);
}

void sub_1D52DD380(_QWORD *a1@<X1>, unint64_t *a2@<X2>, uint64_t *a3@<X3>, _QWORD *a4@<X4>, _OWORD *a5@<X5>, _QWORD *a6@<X8>)
{
  _QWORD *v12;

  v12 = operator new(0xE8uLL);
  sub_1D52DD410(v12, a1, a2, a3, a4, a5);
  *a6 = v12 + 3;
  a6[1] = v12;
  sub_1D5285658((uint64_t)a6, v12 + 4, (uint64_t)(v12 + 3));
}

void sub_1D52DD3FC(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52DD410(_QWORD *a1, _QWORD *a2, unint64_t *a3, uint64_t *a4, _QWORD *a5, _OWORD *a6)
{
  uint64_t v7;

  a1[2] = 0;
  *a1 = &unk_1E9974C00;
  a1[1] = 0;
  v7 = *a4;
  sub_1D530B330((uint64_t)(a1 + 3), a2, *a3, a5, a6);
  a1[3] = &unk_1E998D948;
  *(_QWORD *)((char *)a1 + 212) = 0x100000000;
  a1[28] = v7;
  return a1;
}

void sub_1D52DD478(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52DD48C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9974C00;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52DD4A0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9974C00;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52DD4D4(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_1D52DD4E4(_QWORD *a1@<X1>, unint64_t *a2@<X2>, _QWORD *a3@<X3>, _OWORD *a4@<X4>, _QWORD *a5@<X8>)
{
  _QWORD *v10;

  v10 = operator new(0xD8uLL);
  sub_1D52DD564((uint64_t)v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;
  sub_1D5285658((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1D52DD550(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52DD564(uint64_t a1, _QWORD *a2, unint64_t *a3, _QWORD *a4, _OWORD *a5)
{
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = &unk_1E9974C50;
  *(_QWORD *)(a1 + 8) = 0;
  sub_1D530B330(a1 + 24, a2, *a3, a4, a5);
  *(_QWORD *)(a1 + 24) = &unk_1E99937B8;
  *(_BYTE *)(a1 + 210) = 0;
  return a1;
}

void sub_1D52DD5B4(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52DD5C8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9974C50;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52DD5DC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9974C50;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52DD610(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_1D52DD620(_QWORD *a1@<X1>, unint64_t *a2@<X2>, uint64_t *a3@<X3>, _QWORD *a4@<X4>, _OWORD *a5@<X5>, _QWORD *a6@<X8>)
{
  _QWORD *v12;

  v12 = operator new(0xE0uLL);
  sub_1D52DD6B0((uint64_t)v12, a1, a2, a3, a4, a5);
  *a6 = v12 + 3;
  a6[1] = v12;
  sub_1D5285658((uint64_t)a6, v12 + 4, (uint64_t)(v12 + 3));
}

void sub_1D52DD69C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52DD6B0(uint64_t a1, _QWORD *a2, unint64_t *a3, uint64_t *a4, _QWORD *a5, _OWORD *a6)
{
  uint64_t v7;

  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = &unk_1E9973718;
  *(_QWORD *)(a1 + 8) = 0;
  v7 = *a4;
  sub_1D530B330(a1 + 24, a2, *a3, a5, a6);
  *(_QWORD *)(a1 + 24) = &unk_1E9978BE8;
  *(_DWORD *)(a1 + 212) = 16;
  *(_QWORD *)(a1 + 216) = v7;
  return a1;
}

void sub_1D52DD714(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

id sub_1D52DD728(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const char *v28;
  void *v29;
  const char *v30;
  uint64_t v31;
  void *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[11];
  _QWORD v43[2];

  v43[1] = *MEMORY[0x1E0C80C00];
  v5 = *MEMORY[0x1E0CBD388];
  v34 = *MEMORY[0x1E0CBD368];
  v35 = v5;
  v42[0] = MEMORY[0x1E0C9AAB0];
  v42[1] = CFSTR("com.canon.tif-raw-image");
  v6 = *MEMORY[0x1E0CBD380];
  v36 = *MEMORY[0x1E0CBD348];
  v42[2] = CFSTR(".tif.");
  v42[3] = &unk_1E99CAE30;
  v42[4] = &unk_1E99CAE48;
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], a2, (uint64_t)sub_1D52DD9DC, a4, a5, v34, v35, v36, v6, *MEMORY[0x1E0CBD370], *MEMORY[0x1E0CBD378]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v42[5] = v7;
  v37 = *MEMORY[0x1E0CBD330];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v8, (uint64_t)sub_1D52DDA50, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v42[6] = v11;
  v38 = *MEMORY[0x1E0CBD350];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v12, (uint64_t)sub_1D52DDA5C, v13, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v42[7] = v15;
  v39 = *MEMORY[0x1E0CBD338];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v16, (uint64_t)sub_1D52E8DA4, v17, v18);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v42[8] = v19;
  v40 = *MEMORY[0x1E0CBD358];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v20, (uint64_t)sub_1D52DDA68, v21, v22);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v42[9] = v23;
  v41 = *MEMORY[0x1E0CBD360];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v24, (uint64_t)sub_1D52DDA74, v25, v26);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v42[10] = v27;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v28, (uint64_t)v42, (uint64_t)&v34, 11);
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v43[0] = v29;
  objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v30, (uint64_t)v43, 1, v31);
  v32 = (void *)objc_claimAutoreleasedReturnValue();

  return v32;
}

void sub_1D52DD97C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

BOOL sub_1D52DD9DC(_BYTE *a1, unint64_t a2)
{
  return a2 >= 0xC
      && a1[8] == 186
      && a1[9] == 176
      && a1[10] == 172
      && a1[11] == 187
      && *a1 == 77
      && a1[1] == 77
      && !a1[2]
      && a1[3] == 42;
}

void sub_1D52DDA50(const void *a1, uint64_t a2, uint64_t a3)
{
  sub_1D52E7A20(a1, a2, a3, &unk_1E9974C90);
}

uint64_t sub_1D52DDA5C(os_signpost_id_t a1)
{
  return sub_1D52E8C40(a1);
}

uint64_t sub_1D52DDA68(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1D52E7438(a1, a2, a3, &unk_1E9974C90);
}

uint64_t sub_1D52DDA74(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1D52E9A7C(a1, a2, a3, &unk_1E9974C90);
}

void sub_1D52DDA80(uint64_t *a1@<X1>, char a2@<W2>, void *a3@<X3>, void *a4@<X4>, _OWORD *a5@<X8>)
{
  __int128 v8;
  id v9;
  id v10;
  char v11;

  v11 = a2;
  v10 = a3;
  v9 = a4;
  sub_1D52DE40C(a1, &v11, &v10, &v9, &v8);
  *a5 = v8;

}

void sub_1D52DDAFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{

  _Unwind_Resume(a1);
}

void sub_1D52DDB18(uint64_t a1, __int128 *a2, unsigned __int16 *a3)
{
  int v6;
  int v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t *v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  int v15;
  int v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  int i;
  int v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  _DWORD *v25;
  _DWORD *v26;
  _DWORD *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  char *v33;
  int v34;
  char *v35;
  unint64_t __src;
  unsigned int v37;
  int v38;
  int v39;
  __int128 *v40;
  std::__shared_weak_count *v41;
  __int128 *v42;
  std::__shared_weak_count *v43;
  int v44;
  void *__p;
  _DWORD *v46;
  unint64_t v47;
  int v48;

  sub_1D52E2CF8(a1, (uint64_t)a2, a3);
  v6 = *a3;
  if (v6 == 164)
  {
    if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) == 0 && a3[1] == 3)
    {
      __p = 0;
      v46 = 0;
      v47 = 0;
      if (*((_DWORD *)a3 + 1) >= 3u)
      {
        v15 = 0;
        do
        {
          sub_1D52917E4(a1, &v40);
          v16 = sub_1D52A5CC8((uint64_t)a3);
          __src = 48;
          sub_1D528304C(&v37, &__src);
          v48 = v15;
          v38 = *sub_1D52B42B4(&v48, &v37);
          v48 = v16;
          v39 = *sub_1D52B0860(&v48, &v38);
          sub_1D5282F74(&v44, &v39);
          sub_1D5285164((uint64_t *)&v42, (uint64_t *)&v40, (uint64_t)&v44, 0);
          v17 = v41;
          if (v41)
          {
            p_shared_owners = (unint64_t *)&v41->__shared_owners_;
            do
              v19 = __ldaxr(p_shared_owners);
            while (__stlxr(v19 - 1, p_shared_owners));
            if (!v19)
            {
              ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
              std::__shared_weak_count::__release_weak(v17);
            }
          }
          for (i = 0; i != 3; ++i)
          {
            sub_1D52917E4(a1, &v40);
            v21 = sub_1D528479C((uint64_t)v40);
            v22 = v41;
            if (v41)
            {
              v23 = (unint64_t *)&v41->__shared_owners_;
              do
                v24 = __ldaxr(v23);
              while (__stlxr(v24 - 1, v23));
              if (!v24)
              {
                ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
                std::__shared_weak_count::__release_weak(v22);
              }
            }
            v25 = v46;
            if ((unint64_t)v46 >= v47)
            {
              v27 = __p;
              v28 = ((char *)v46 - (_BYTE *)__p) >> 2;
              v29 = v28 + 1;
              if ((unint64_t)(v28 + 1) >> 62)
                sub_1D5282B8C();
              v30 = v47 - (_QWORD)__p;
              if ((uint64_t)(v47 - (_QWORD)__p) >> 1 > v29)
                v29 = v30 >> 1;
              if ((unint64_t)v30 >= 0x7FFFFFFFFFFFFFFCLL)
                v31 = 0x3FFFFFFFFFFFFFFFLL;
              else
                v31 = v29;
              if (v31)
              {
                v32 = (char *)sub_1D5282BA0((uint64_t)&v47, v31);
                v27 = __p;
                v25 = v46;
              }
              else
              {
                v32 = 0;
              }
              v33 = &v32[4 * v28];
              *(_DWORD *)v33 = v21;
              v26 = v33 + 4;
              while (v25 != v27)
              {
                v34 = *--v25;
                *((_DWORD *)v33 - 1) = v34;
                v33 -= 4;
              }
              __p = v33;
              v46 = v26;
              v47 = (unint64_t)&v32[4 * v31];
              if (v27)
                operator delete(v27);
            }
            else
            {
              *v46 = v21;
              v26 = v25 + 1;
            }
            v46 = v26;
          }
          sub_1D5285200((uint64_t *)&v42);
          ++v15;
        }
        while (((24 * v15) | 3u) <= *((_DWORD *)a3 + 1));
      }
      v42 = a2;
      v35 = (char *)(sub_1D52B3E7C((uint64_t **)(a1 + 120), (void **)a2, (uint64_t)&unk_1D544A5C4, &v42) + 7);
      if (v35 != (char *)&__p)
        sub_1D5282A44(v35, (char *)__p, (uint64_t)v46, ((char *)v46 - (_BYTE *)__p) >> 2);
      if (__p)
      {
        v46 = __p;
        operator delete(__p);
      }
    }
  }
  else if (v6 == 160)
  {
    if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) == 0)
    {
      sub_1D52917E4(a1, &v42);
      v7 = sub_1D52A5CC8((uint64_t)a3);
      v44 = 16;
      LODWORD(v40) = v7;
      v48 = *sub_1D5285B70(&v40, &v44);
      sub_1D5282F74((int *)&__src, &v48);
      sub_1D5285164((uint64_t *)&__p, (uint64_t *)&v42, (uint64_t)&__src, 0);
      v8 = v43;
      if (v43)
      {
        v9 = (unint64_t *)&v43->__shared_owners_;
        do
          v10 = __ldaxr(v9);
        while (__stlxr(v10 - 1, v9));
        if (!v10)
        {
          ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
          std::__shared_weak_count::__release_weak(v8);
        }
      }
      sub_1D52917E4(a1, &v42);
      LODWORD(__src) = sub_1D528479C((uint64_t)v42);
      v40 = a2;
      v11 = sub_1D52B3E7C((uint64_t **)(a1 + 168), (void **)a2, (uint64_t)&unk_1D544A5C4, &v40);
      sub_1D5282A44((char *)v11 + 56, (char *)&__src, (uint64_t)&__src + 4, 1uLL);
      v12 = v43;
      if (v43)
      {
        v13 = (unint64_t *)&v43->__shared_owners_;
        do
          v14 = __ldaxr(v13);
        while (__stlxr(v14 - 1, v13));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      sub_1D5285200((uint64_t *)&__p);
    }
  }
  else if (v6 == 129 && a3[1] == 4 && *((_DWORD *)a3 + 1) == 1)
  {
    *(_QWORD *)(a1 + 1256) = *((unsigned int *)a3 + 2);
  }
}

void sub_1D52DDF54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20)
{
  sub_1D5285200((uint64_t *)&__p);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52DDFEC(uint64_t a1)
{
  return *(_QWORD *)(a1 + 1256);
}

void sub_1D52DDFF4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int v3;
  unint64_t v4;
  unint64_t v5;
  __int128 v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  int v27;
  unint64_t v28;
  unint64_t v29;
  __int128 v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  __int128 v37;
  uint64_t v38;
  int v39;
  void *__p[2];
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t *v46;
  char __str[16];
  uint64_t v48;

  v48 = *MEMORY[0x1E0C80C00];
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  v3 = sub_1D52E36B8(a1);
  snprintf(__str, 0x10uLL, "%u", v3);
  sub_1D52850A0(__p, "tif");
  v4 = a2[2];
  v5 = a2[1];
  if (v5 >= v4)
  {
    v7 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *a2) >> 3);
    v8 = v7 + 1;
    if (v7 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v9 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v4 - *a2) >> 3);
    if (2 * v9 > v8)
      v8 = 2 * v9;
    if (v9 >= 0x555555555555555)
      v10 = 0xAAAAAAAAAAAAAAALL;
    else
      v10 = v8;
    v46 = a2 + 2;
    if (v10)
      v11 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v10);
    else
      v11 = 0;
    v12 = &v11[24 * v7];
    v42 = v11;
    v43 = v12;
    v45 = &v11[24 * v10];
    v13 = *(_OWORD *)__p;
    *((_QWORD *)v12 + 2) = v41;
    *(_OWORD *)v12 = v13;
    __p[1] = 0;
    v41 = 0;
    __p[0] = 0;
    v44 = v12 + 24;
    sub_1D5293D58(a2, &v42);
    v14 = a2[1];
    sub_1D5293F24((uint64_t)&v42);
    v15 = SHIBYTE(v41);
    a2[1] = v14;
    if (v15 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v6 = *(_OWORD *)__p;
    *(_QWORD *)(v5 + 16) = v41;
    *(_OWORD *)v5 = v6;
    a2[1] = v5 + 24;
  }
  sub_1D52850A0(__p, "canon");
  v17 = a2[1];
  v16 = a2[2];
  if (v17 >= v16)
  {
    v19 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v17 - *a2) >> 3);
    v20 = v19 + 1;
    if (v19 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v21 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v16 - *a2) >> 3);
    if (2 * v21 > v20)
      v20 = 2 * v21;
    if (v21 >= 0x555555555555555)
      v22 = 0xAAAAAAAAAAAAAAALL;
    else
      v22 = v20;
    v46 = a2 + 2;
    if (v22)
      v23 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v22);
    else
      v23 = 0;
    v24 = &v23[24 * v19];
    v42 = v23;
    v43 = v24;
    v45 = &v23[24 * v22];
    v25 = *(_OWORD *)__p;
    *((_QWORD *)v24 + 2) = v41;
    *(_OWORD *)v24 = v25;
    __p[1] = 0;
    v41 = 0;
    __p[0] = 0;
    v44 = v24 + 24;
    sub_1D5293D58(a2, &v42);
    v26 = a2[1];
    sub_1D5293F24((uint64_t)&v42);
    v27 = SHIBYTE(v41);
    a2[1] = v26;
    if (v27 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v18 = *(_OWORD *)__p;
    *(_QWORD *)(v17 + 16) = v41;
    *(_OWORD *)v17 = v18;
    a2[1] = v17 + 24;
  }
  sub_1D52850A0(__p, __str);
  v29 = a2[1];
  v28 = a2[2];
  if (v29 >= v28)
  {
    v31 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v29 - *a2) >> 3);
    v32 = v31 + 1;
    if (v31 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v33 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v28 - *a2) >> 3);
    if (2 * v33 > v32)
      v32 = 2 * v33;
    if (v33 >= 0x555555555555555)
      v34 = 0xAAAAAAAAAAAAAAALL;
    else
      v34 = v32;
    v46 = a2 + 2;
    if (v34)
      v35 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v34);
    else
      v35 = 0;
    v36 = &v35[24 * v31];
    v42 = v35;
    v43 = v36;
    v45 = &v35[24 * v34];
    v37 = *(_OWORD *)__p;
    *((_QWORD *)v36 + 2) = v41;
    *(_OWORD *)v36 = v37;
    __p[1] = 0;
    v41 = 0;
    __p[0] = 0;
    v44 = v36 + 24;
    sub_1D5293D58(a2, &v42);
    v38 = a2[1];
    sub_1D5293F24((uint64_t)&v42);
    v39 = SHIBYTE(v41);
    a2[1] = v38;
    if (v39 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v30 = *(_OWORD *)__p;
    *(_QWORD *)(v29 + 16) = v41;
    *(_OWORD *)v29 = v30;
    a2[1] = v29 + 24;
  }
}

void sub_1D52DE38C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  sub_1D5293F24((uint64_t)&a16);
  if (a15 < 0)
    operator delete(__p);
  sub_1D5293CCC((void ***)&__p);
  _Unwind_Resume(a1);
}

void sub_1D52DE3E8(uint64_t a1)
{
  sub_1D52B7290(a1);
  JUMPOUT(0x1D8271ADCLL);
}

void sub_1D52DE40C(uint64_t *a1@<X1>, char *a2@<X2>, void **a3@<X3>, void **a4@<X4>, _QWORD *a5@<X8>)
{
  _QWORD *v10;

  v10 = operator new(0x508uLL);
  sub_1D52DE48C(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;
  sub_1D5285658((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1D52DE478(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52DE48C(_QWORD *a1, uint64_t *a2, char *a3, void **a4, void **a5)
{
  a1[2] = 0;
  *a1 = &unk_1E9974FF8;
  a1[1] = 0;
  sub_1D52E26F8((uint64_t)(a1 + 3), a2, *a3, *a4, *a5);
  a1[3] = off_1E9974CC0;
  a1[160] = 0;
  return a1;
}

void sub_1D52DE4E0(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52DE4F4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9974FF8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52DE508(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9974FF8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52DE53C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a1 + 24) + 16))(a1 + 24);
}

void sub_1D52DE624(void *a1)
{
  void *v1;
  void *v2;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;

  __cxa_begin_catch(a1);
  objc_msgSend_redImage(MEMORY[0x1E0C9DDC8], v4, v5, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_imageByCroppingToRect_(v8, v9, v10, v11, v12, 0.0, 0.0, 698.0, 282.0);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setCiImage_(v1, v14, (uint64_t)v13, v15, v16);

  __cxa_end_catch();
  JUMPOUT(0x1D52DE5E4);
}

void sub_1D52DE690(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_1D52DE75C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;

  sub_1D5282EB4((uint64_t)&a9);

  _Unwind_Resume(a1);
}

void sub_1D52DE830(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1D52DE88C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

_QWORD *sub_1D52DE89C(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;

  v2 = a2[1];
  *result = *a2;
  result[1] = v2;
  if (v2)
  {
    v3 = (unint64_t *)(v2 + 8);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return result;
}

void sub_1D52DE968(uint64_t a1@<X0>, unsigned int *a2@<X1>, unsigned int *a3@<X2>, void *a4@<X3>, _QWORD *a5@<X8>)
{
  char v8;
  id v9;
  uint64_t v10;

  v10 = a1;
  v9 = a4;
  v8 = 0;
  sub_1D52E20F4(&v10, a2, a3, &v8, (uint64_t *)&v9, a5);

}

void sub_1D52DE9D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_1D52DE9E8(uint64_t a1@<X0>, unsigned int *a2@<X1>, unsigned int *a3@<X2>, void *a4@<X3>, _QWORD *a5@<X8>)
{
  char v8;
  id v9;
  uint64_t v10;

  v10 = a1;
  v9 = a4;
  v8 = 1;
  sub_1D52E20F4(&v10, a2, a3, &v8, (uint64_t *)&v9, a5);

}

void sub_1D52DEA58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

uint64_t sub_1D52DEA6C(uint64_t a1, uint64_t a2, unsigned int *a3, unsigned int *a4, char a5, uint64_t a6)
{
  uint64_t v7;

  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = off_1E9975048;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = a2;
  v7 = *a4;
  *(_QWORD *)(a1 + 48) = *a3;
  *(_QWORD *)(a1 + 56) = v7;
  *(_DWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 112) = 1;
  *(_BYTE *)(a1 + 113) = a5;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_QWORD *)(a1 + 168) = MEMORY[0x1D82721B4](a6);
  return a1;
}

void sub_1D52DEB1C(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v7;

  sub_1D5282EB4(v1 + 152);
  sub_1D5282EB4(v5);
  sub_1D5282EB4(v4);
  sub_1D5282EB4(v3);
  sub_1D5282EB4(v2);
  v7 = *(std::__shared_weak_count **)(v1 + 16);
  if (v7)
    std::__shared_weak_count::__release_weak(v7);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52DEB78(uint64_t a1)
{
  void **v2;
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;

  *(_QWORD *)a1 = off_1E9975048;
  v2 = (void **)(a1 + 24);
  if (*(_QWORD *)(a1 + 24) && *(_BYTE *)(a1 + 112))
  {
    v3 = sub_1D539DF00();
    sub_1D539E44C(v3, v2);
  }
  if (*(_BYTE *)(a1 + 112))
  {
    v4 = sub_1D539DF00();
    sub_1D539E5D0(v4, (void *)a1);
  }

  sub_1D5282EB4(a1 + 152);
  sub_1D5282EB4(a1 + 120);
  sub_1D5282EB4(a1 + 96);
  sub_1D5282EB4(a1 + 72);
  sub_1D5282EB4((uint64_t)v2);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
    std::__shared_weak_count::__release_weak(v5);
  return a1;
}

void sub_1D52DEC30(uint64_t a1)
{
  sub_1D52DEB78(a1);
  JUMPOUT(0x1D8271ADCLL);
}

id sub_1D52DEC54(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = *(void **)(a1 + 136);
  if (!v2)
  {
    CGImagePluginGetOptions();
    v3 = objc_claimAutoreleasedReturnValue();
    v4 = *(void **)(a1 + 136);
    *(_QWORD *)(a1 + 136) = v3;

    v2 = *(void **)(a1 + 136);
  }
  return v2;
}

id sub_1D52DEC94(uint64_t a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  void *v5;

  v2 = *(id *)(a1 + 40);
  if (v2)
  {
    v3 = *(void **)(a1 + 144);
    if (v3
      || (CGImagePluginGetProperties(),
          v4 = objc_claimAutoreleasedReturnValue(),
          v5 = *(void **)(a1 + 144),
          *(_QWORD *)(a1 + 144) = v4,
          v5,
          (v3 = *(void **)(a1 + 144)) != 0))
    {
      v2 = v3;
    }
    else
    {
      v2 = 0;
    }
  }
  return v2;
}

void sub_1D52DECE8(_QWORD *a1, uint64_t a2, _OWORD *a3)
{
  _OWORD *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  const char *v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  void *v26;
  RawCameraCIImageProxy *v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  uint64_t v32;
  void *v33;
  std::__shared_weak_count *v34;
  unint64_t *p_shared_owners;
  unint64_t v36;
  _QWORD *v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  std::__shared_weak_count *v41;
  unint64_t *v42;
  unint64_t v43;
  __int128 v44;
  uint64_t (*v45)(uint64_t);
  uint64_t v46;
  std::__shared_weak_count *v47;
  uint64_t v48;
  std::__shared_weak_count *v49;

  if (!getenv("RAWCAMERA_IMAGEBLOCKSET_NOLOCK"))
  {
    sub_1D53A1140(&v44);
    sub_1D5292548((uint64_t)(a1 + 15), &v44);
    v23 = (std::__shared_weak_count *)*((_QWORD *)&v44 + 1);
    if (*((_QWORD *)&v44 + 1))
    {
      v24 = (unint64_t *)(*((_QWORD *)&v44 + 1) + 8);
      do
        v25 = __ldaxr(v24);
      while (__stlxr(v25 - 1, v24));
      if (!v25)
      {
        ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
        std::__shared_weak_count::__release_weak(v23);
      }
    }
  }
  v5 = (_OWORD *)operator new();
  *v5 = 0u;
  v5[1] = 0u;
  objc_msgSend_dictionaryWithCapacity_(MEMORY[0x1E0C99E08], v6, 2, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = v9;
  if (!v9)
  {
    free(v5);
    goto LABEL_41;
  }
  v13 = a1[5];
  if (v13)
    objc_msgSend_setObject_forKeyedSubscript_(v9, v10, v13, (uint64_t)CFSTR("kImageIOInfoHeader_plugin"), v11);
  (*(void (**)(__int128 *__return_ptr, _QWORD *))(*a1 + 136))(&v44, a1);
  v14 = (std::__shared_weak_count *)*((_QWORD *)&v44 + 1);
  v15 = *(_QWORD *)(v44 + 40);
  if (!*((_QWORD *)&v44 + 1))
    goto LABEL_9;
  v16 = (unint64_t *)(*((_QWORD *)&v44 + 1) + 8);
  do
    v17 = __ldaxr(v16);
  while (__stlxr(v17 - 1, v16));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
    if (v15)
      goto LABEL_10;
  }
  else
  {
LABEL_9:
    if (v15)
    {
LABEL_10:
      (*(void (**)(__int128 *__return_ptr, _QWORD *))(*a1 + 136))(&v44, a1);
      objc_msgSend_setObject_forKeyedSubscript_(v12, v18, *(_QWORD *)(v44 + 40), (uint64_t)CFSTR("kImageIOInfoHeader_session"), v19);
      v20 = (std::__shared_weak_count *)*((_QWORD *)&v44 + 1);
      if (*((_QWORD *)&v44 + 1))
      {
        v21 = (unint64_t *)(*((_QWORD *)&v44 + 1) + 8);
        do
          v22 = __ldaxr(v21);
        while (__stlxr(v22 - 1, v21));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
          std::__shared_weak_count::__release_weak(v20);
        }
      }
    }
  }
  if ((*(unsigned int (**)(_QWORD *))(*a1 + 40))(a1) && !*((_BYTE *)a1 + 113))
  {
    v26 = (void *)MEMORY[0x1D8272058]();
    v27 = [RawCameraCIImageProxy alloc];
    (*(void (**)(uint64_t *__return_ptr, _QWORD *))(*a1 + 64))(&v48, a1);
    v33 = (void *)objc_msgSend_initWithRawImage_(v27, v28, (uint64_t)&v48, v29, v30);
    v34 = v49;
    if (v49)
    {
      p_shared_owners = (unint64_t *)&v49->__shared_owners_;
      do
        v36 = __ldaxr(p_shared_owners);
      while (__stlxr(v36 - 1, p_shared_owners));
      if (!v36)
      {
        ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
        std::__shared_weak_count::__release_weak(v34);
      }
    }
    if (v33)
      objc_msgSend_setObject_forKeyedSubscript_(v12, v31, (uint64_t)v33, (uint64_t)CFSTR("CIImage"), v32);

    objc_autoreleasePoolPop(v26);
  }
  objc_storeStrong((id *)v5, v12);
  v37 = (_QWORD *)operator new();
  sub_1D5285A94(&v46, a1 + 1);
  v38 = v47;
  *v37 = v46;
  v37[1] = v38;
  if (v38)
  {
    v39 = (unint64_t *)&v38->__shared_owners_;
    do
      v40 = __ldxr(v39);
    while (__stxr(v40 + 1, v39));
    v41 = v47;
    *((_QWORD *)v5 + 1) = v37;
    if (v41)
    {
      v42 = (unint64_t *)&v41->__shared_owners_;
      do
        v43 = __ldaxr(v42);
      while (__stlxr(v43 - 1, v42));
      if (!v43)
      {
        ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
        std::__shared_weak_count::__release_weak(v41);
      }
    }
  }
  else
  {
    *((_QWORD *)v5 + 1) = v37;
  }
  v5[1] = *a3;
  v45 = sub_1D52DF5F4;
  v44 = xmmword_1E9975108;
  CGImagePluginSetImageBlockProc();
LABEL_41:

}

void sub_1D52DF04C(void *a1)
{
  void *v1;
  void *v2;

  __cxa_begin_catch(a1);
  free(v1);
  __cxa_end_catch();
  JUMPOUT(0x1D52DEF38);
}

void sub_1D52DF088(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  void *v9;
  va_list va;

  va_start(va, a9);
  sub_1D5282EB4((uint64_t)va);

  _Unwind_Resume(a1);
}

uint64_t sub_1D52DF0D8(_QWORD *a1, uint64_t a2, void *a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  uint64_t *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  id v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  const char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  const char *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  const char *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  void *v60;
  const char *v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  unint64_t *v65;
  unint64_t v66;
  uint64_t v68;
  NSObject *v69;
  unint64_t *v70;
  unint64_t v71;
  NSObject *v72;
  _QWORD *v73;
  void *exception;
  _QWORD block[5];
  _QWORD v76[5];
  __int128 v77;
  uint64_t v78;
  uint64_t v79[2];
  _QWORD v80[2];
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  __n128 (*v84)(__n128 *, __n128 *);
  uint64_t (*v85)(uint64_t);
  const char *v86;
  _QWORD v87[2];
  uint64_t v88;
  __int128 v89;
  uint64_t v90[2];
  uint64_t v91;
  std::__shared_weak_count *v92;
  double v93[2];
  double v94[2];
  double v95[3];

  v94[0] = a4;
  v94[1] = a5;
  v95[0] = a6;
  v95[1] = a7;
  v93[0] = a8;
  v93[1] = a9;
  v11 = (uint64_t *)a1[1];
  v12 = *v11;
  v13 = (std::__shared_weak_count *)v11[1];
  v91 = *v11;
  v92 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v15 = __ldxr(p_shared_owners);
    while (__stxr(v15 + 1, p_shared_owners));
  }
  if (!v12
    || ((v17 = a1[2], (v16 = a1[3]) != 0) ? (v18 = (a1[3] & 1 | v17) == 0) : (v18 = 1),
        v18 ? (v19 = 0) : (v19 = 1),
        !v17 && !v19))
  {
    v35 = 0;
    if (!v13)
      return v35;
    goto LABEL_38;
  }
  v21 = *(_QWORD *)(v12 + 120);
  v20 = *(_QWORD *)(v12 + 128);
  v81 = v21;
  v82 = (uint64_t *)v20;
  if (v20)
  {
    v22 = (unint64_t *)(v20 + 8);
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
  sub_1D52E1E7C(v90, &v81);
  v24 = (std::__shared_weak_count *)v82;
  if (v82)
  {
    v25 = (unint64_t *)(v82 + 1);
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
  v27 = a3;
  objc_msgSend_objectForKeyedSubscript_(v27, v28, *MEMORY[0x1E0C9DAB0], v29, v30);
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  if (v34)
  {
    v35 = 0;
  }
  else
  {
    objc_msgSend_objectForKeyedSubscript_(v27, v31, *MEMORY[0x1E0C9DAC0], v32, v33);
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    if (v40)
    {
      v35 = 0;
    }
    else
    {
      objc_msgSend_BOOLValue(0, v36, v37, v38, v39);
      objc_msgSend_objectForKeyedSubscript_(v27, v41, *MEMORY[0x1E0C9DAB8], v42, v43);
      v48 = (void *)objc_claimAutoreleasedReturnValue();
      if (v48)
      {
        v35 = 0;
      }
      else
      {
        objc_msgSend_BOOLValue(0, v44, v45, v46, v47);
        objc_msgSend_objectForKeyedSubscript_(v27, v49, *MEMORY[0x1E0C9DA90], v50, v51);
        v55 = (void *)objc_claimAutoreleasedReturnValue();
        if (v55)
        {
          v35 = 0;
        }
        else
        {
          objc_msgSend_objectForKeyedSubscript_(v27, v52, *MEMORY[0x1E0C9DA98], v53, v54);
          v59 = (void *)objc_claimAutoreleasedReturnValue();
          if (v59
            || (objc_msgSend_objectForKeyedSubscript_(v27, v56, *MEMORY[0x1E0C9DAA0], v57, v58),
                v60 = (void *)objc_claimAutoreleasedReturnValue(),
                v60,
                v60)
            || (objc_msgSend_objectForKeyedSubscript_(v27, v61, *MEMORY[0x1E0C9DAA8], v62, v63),
                v64 = (void *)objc_claimAutoreleasedReturnValue(),
                v64,
                v64))
          {
            v35 = 0;
          }
          else
          {
            sub_1D529EAEC(&v89, v94);
            sub_1D529EAEC((_DWORD *)&v89 + 2, v95);
            sub_1D529EAEC(&v88, v93);
            v81 = 0;
            v82 = &v81;
            v83 = 0x4012000000;
            v84 = sub_1D52E1B80;
            v85 = sub_1D52E1B90;
            v87[0] = 0;
            v87[1] = 0;
            v86 = "";
            v68 = v91;
            (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)v91 + 64))(v80, v91);
            (*(void (**)(_QWORD))(*(_QWORD *)v80[0] + 120))(v80[0]);
            (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v68 + 64))(v79, v68);
            sub_1D5297E34(v79[0]);
            sub_1D52E1B98();
            v69 = objc_claimAutoreleasedReturnValue();
            block[0] = MEMORY[0x1E0C809B0];
            block[1] = 3321888768;
            block[2] = sub_1D52E1D80;
            block[3] = &unk_1E9975160;
            block[4] = &v81;
            v76[0] = v68;
            v76[1] = v92;
            if (v92)
            {
              v70 = (unint64_t *)&v92->__shared_owners_;
              do
                v71 = __ldxr(v70);
              while (__stxr(v71 + 1, v70));
            }
            v76[2] = v17;
            v76[3] = v16;
            v76[4] = a2;
            v77 = v89;
            v78 = v88;
            v72 = v69;
            dispatch_sync(v69, block);

            sub_1D5282EB4((uint64_t)v79);
            sub_1D5282EB4((uint64_t)v80);
            sub_1D5282EB4((uint64_t)v76);
            v73 = (_QWORD *)v82[6];
            if (!v73)
            {
              exception = __cxa_allocate_exception(0x10uLL);
              MEMORY[0x1D8271938](exception, "RawCameraException");
              __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
            }
            v35 = sub_1D53A6558(v73);
            _Block_object_dispose(&v81, 8);
            sub_1D5282EB4((uint64_t)v87);
          }

        }
      }

    }
  }

  sub_1D52E1F44(v90);
  v13 = v92;
  if (v92)
  {
LABEL_38:
    v65 = (unint64_t *)&v13->__shared_owners_;
    do
      v66 = __ldaxr(v65);
    while (__stlxr(v66 - 1, v65));
    if (!v66)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  return v35;
}

void sub_1D52DF524(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  void *v28;
  uint64_t v29;

  _Block_object_dispose(&a28, 8);
  sub_1D5282EB4(a10);

  sub_1D52E1F44((uint64_t *)(v29 - 176));
  sub_1D5282EB4(v29 - 160);
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1D52DF338);
}

void sub_1D52DF5DC(_Unwind_Exception *a1)
{
  sub_1D52E1E54();
  _Unwind_Resume(a1);
}

uint64_t sub_1D52DF5F4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v1 = result;
  if (result)
  {
    v2 = *(_QWORD *)(result + 8);
    if (v2)
    {
      v3 = sub_1D5282EB4(v2);
      MEMORY[0x1D8271ADC](v3, 0x20C40A4A59CD2);
      *(_QWORD *)(v1 + 8) = 0;
    }
    v4 = *(id *)v1;
    *(_QWORD *)v1 = 0;

    return MEMORY[0x1D8271ADC](v1, 0xA0C40069AE433);
  }
  return result;
}

uint64_t sub_1D52DF670(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 40);
  if (result)
    return CGImagePluginSetImage();
  return result;
}

uint64_t sub_1D52DF684(uint64_t a1, _QWORD *a2, int a3, int a4, CGColorSpaceRef space)
{
  const char *v5;
  void *v6;
  uint64_t inited;
  uint64_t v9;
  _QWORD v10[2];

  v10[1] = *MEMORY[0x1E0C80C00];
  if ((unint64_t)(*a2 - 0xFFFFFFFFLL) < 0xFFFFFFFF00000002 || !*(_QWORD *)(a1 + 40))
    return 0;
  if (space)
  {
    v9 = *MEMORY[0x1E0CBCFE0];
    v10[0] = CGColorSpaceGetName(space);
    objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v5, (uint64_t)v10, (uint64_t)&v9, 1);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    inited = CGImagePluginInitThumbJPEGAtOffsetWithOptions();

    return inited;
  }
  return CGImagePluginInitThumbJPEGAtOffset();
}

void sub_1D52DF7B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1D52DF7D0(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if (*(_QWORD *)(a1 + 40))
    CGImagePluginReadRawXMPProps();

}

void sub_1D52DF828(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

uint64_t sub_1D52DF83C(uint64_t *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *v3;
  unint64_t v4;
  uint64_t *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  void *v12;
  void *v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  void *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  uint64_t v46;
  CGColorSpace *v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  std::__shared_weak_count *v57;
  unint64_t *v58;
  unint64_t v59;
  std::__shared_weak_count *v60;
  unint64_t *v61;
  unint64_t v62;
  __int128 v64;
  __int128 v65[2];
  uint64_t v66;
  uint64_t v67;
  CGColorSpace *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  std::__shared_weak_count *v73;
  void *v74;
  std::__shared_weak_count *v75;
  void *v76;
  std::__shared_weak_count *v77;
  uint64_t v78;
  std::__shared_weak_count *v79;
  uint64_t v80[2];

  (*(void (**)(__int128 *__return_ptr))(*a1 + 136))(v65);
  sub_1D52E1F74(v80, (uint64_t *)v65);
  v2 = (std::__shared_weak_count *)*((_QWORD *)&v65[0] + 1);
  if (*((_QWORD *)&v65[0] + 1))
  {
    v3 = (unint64_t *)(*((_QWORD *)&v65[0] + 1) + 8);
    do
      v4 = __ldaxr(v3);
    while (__stlxr(v4 - 1, v3));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  *((_BYTE *)a1 + 112) = 0;
  (*(void (**)(uint64_t *__return_ptr, uint64_t *))(*a1 + 64))(&v78, a1);
  if (!v78 || !*((_BYTE *)a1 + 113) && ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v78 + 40))(v78) & 1) == 0)
  {
    v42 = 0;
    goto LABEL_79;
  }
  v5 = a1 + 12;
  v6 = (const void *)a1[12];
  if (!v6)
  {
    v7 = v78;
    v8 = (*(uint64_t (**)(uint64_t *))(*a1 + 24))(a1);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v7 + 296))(v65, v7, v8);
    sub_1D5292548((uint64_t)(a1 + 12), v65);
    v9 = (std::__shared_weak_count *)*((_QWORD *)&v65[0] + 1);
    if (*((_QWORD *)&v65[0] + 1))
    {
      v10 = (unint64_t *)(*((_QWORD *)&v65[0] + 1) + 8);
      do
        v11 = __ldaxr(v10);
      while (__stlxr(v11 - 1, v10));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
    v6 = (const void *)*v5;
    if (!*v5)
    {
      v13 = 0;
      v76 = 0;
      v77 = 0;
LABEL_46:
      v18 = 0;
      v74 = 0;
      v75 = 0;
LABEL_47:
      v23 = 0;
      v72 = 0;
      v73 = 0;
      goto LABEL_48;
    }
  }
  v12 = __dynamic_cast(v6, (const struct __class_type_info *)&unk_1E997EBF0, (const struct __class_type_info *)&unk_1E997EC58, 0);
  v13 = v12;
  if (v12 && (v14 = (std::__shared_weak_count *)a1[13]) != 0)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(p_shared_owners);
    while (__stxr(v16 + 1, p_shared_owners));
    v6 = (const void *)*v5;
    v76 = v12;
    v77 = v14;
    if (!v6)
      goto LABEL_46;
  }
  else
  {
    v76 = v12;
    v77 = 0;
  }
  v17 = __dynamic_cast(v6, (const struct __class_type_info *)&unk_1E997EBF0, (const struct __class_type_info *)&unk_1E9993608, 0);
  v18 = (unint64_t)v17;
  if (v17 && (v19 = (std::__shared_weak_count *)a1[13]) != 0)
  {
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    v6 = (const void *)*v5;
    v74 = v17;
    v75 = v19;
    if (!v6)
      goto LABEL_47;
  }
  else
  {
    v74 = v17;
    v75 = 0;
  }
  v22 = __dynamic_cast(v6, (const struct __class_type_info *)&unk_1E997EBF0, (const struct __class_type_info *)&unk_1E997ED28, 0);
  v23 = (unint64_t)v22;
  if (v22)
  {
    v24 = (std::__shared_weak_count *)a1[13];
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
      v27 = *v5;
      v72 = v22;
      v73 = v24;
      if (!v27)
      {
LABEL_48:
        if (v13)
        {
LABEL_49:
          *(_QWORD *)&v64 = (*(uint64_t (**)(void *))(*(_QWORD *)v13 + 16))(v13);
          v71 = (*(uint64_t (**)(void *))(*(_QWORD *)v13 + 24))(v13);
          v70 = (*(uint64_t (**)(uint64_t *))(*a1 + 24))(a1);
          v65[0] = 0uLL;
          v41 = (*(uint64_t (**)(void *, __int128 *))(*(_QWORD *)v13 + 56))(v13, v65);
          v42 = (*(uint64_t (**)(uint64_t *, __int128 *, uint64_t *, uint64_t *, uint64_t))(*a1 + 120))(a1, &v64, &v71, &v70, v41);
          v43 = (std::__shared_weak_count *)*((_QWORD *)&v65[0] + 1);
          if (*((_QWORD *)&v65[0] + 1))
          {
            v44 = (unint64_t *)(*((_QWORD *)&v65[0] + 1) + 8);
            do
              v45 = __ldaxr(v44);
            while (__stlxr(v45 - 1, v44));
            if (!v45)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
            }
          }
          goto LABEL_64;
        }
        goto LABEL_56;
      }
    }
    else
    {
      v72 = v22;
      v73 = 0;
    }
  }
  else
  {
    v72 = 0;
    v73 = 0;
  }
  (*(void (**)(uint64_t *))(*a1 + 88))(a1);
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  if (v31)
  {
    v32 = *v5;
    v33 = *(unsigned int *)(*v5 + 16);
    if (v33 >= 2)
    {
      objc_msgSend_numberWithInt_(MEMORY[0x1E0CB37E8], v28, v33, v29, v30);
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      sub_1D52DFEFC(v31, (void *)*MEMORY[0x1E0CBD090], (void *)*MEMORY[0x1E0CBD0C0], v34);

      v32 = *v5;
    }
    if (*(_DWORD *)(v32 + 20))
    {
      if (*((_BYTE *)a1 + 113))
      {
        if ((*(unsigned int (**)(uint64_t *))(*a1 + 40))(a1))
        {
          objc_msgSend_numberWithInt_(MEMORY[0x1E0CB37E8], v35, *(unsigned int *)(*v5 + 20), v36, v37);
          v38 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_setObject_forKeyedSubscript_(v31, v39, (uint64_t)v38, (uint64_t)CFSTR("disorientation"), v40);

        }
      }
      else
      {
        sub_1D52DFEFC(v31, (void *)*MEMORY[0x1E0CBD090], (void *)*MEMORY[0x1E0CBD0C0], &unk_1E99CAE60);
      }
    }

    if (v13)
      goto LABEL_49;
LABEL_56:
    if (v23 | v18)
    {
      v46 = a1[12];
      (*(void (**)(__int128 *__return_ptr, uint64_t *))(*a1 + 136))(v65, a1);
      v47 = (CGColorSpace *)(*(uint64_t (**)(uint64_t, __int128 *))(*(_QWORD *)v46 + 56))(v46, v65);
      v48 = (std::__shared_weak_count *)*((_QWORD *)&v65[0] + 1);
      if (*((_QWORD *)&v65[0] + 1))
      {
        v49 = (unint64_t *)(*((_QWORD *)&v65[0] + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (!v50)
        {
          ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
          std::__shared_weak_count::__release_weak(v48);
        }
      }
      v67 = 0;
      v68 = 0;
      v69 = 0;
      *(_QWORD *)&v65[0] = (int)sub_1D5337D88(*v5);
      *((_QWORD *)&v65[0] + 1) = sub_1D5337D88(*v5) >> 32;
      v65[1] = xmmword_1D54490B0;
      v66 = (int)(3 * sub_1D5337D88(*v5));
      LODWORD(v67) = 1380401696;
      v68 = v47;
      LODWORD(v69) = 0;
      *(_DWORD *)((char *)&v69 + 3) = 0;
      v64 = xmmword_1D54490C0;
      (*(void (**)(uint64_t *, __int128 *, __int128 *))(*a1 + 104))(a1, v65, &v64);
      CGColorSpaceRelease(v47);
      v42 = 1;
      goto LABEL_64;
    }
  }
  v42 = 0;
LABEL_64:
  v51 = v73;
  if (v73)
  {
    v52 = (unint64_t *)&v73->__shared_owners_;
    do
      v53 = __ldaxr(v52);
    while (__stlxr(v53 - 1, v52));
    if (!v53)
    {
      ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
      std::__shared_weak_count::__release_weak(v51);
    }
  }
  v54 = v75;
  if (v75)
  {
    v55 = (unint64_t *)&v75->__shared_owners_;
    do
      v56 = __ldaxr(v55);
    while (__stlxr(v56 - 1, v55));
    if (!v56)
    {
      ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
      std::__shared_weak_count::__release_weak(v54);
    }
  }
  v57 = v77;
  if (v77)
  {
    v58 = (unint64_t *)&v77->__shared_owners_;
    do
      v59 = __ldaxr(v58);
    while (__stlxr(v59 - 1, v58));
    if (!v59)
    {
      ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
      std::__shared_weak_count::__release_weak(v57);
    }
  }
LABEL_79:
  v60 = v79;
  if (v79)
  {
    v61 = (unint64_t *)&v79->__shared_owners_;
    do
      v62 = __ldaxr(v61);
    while (__stlxr(v62 - 1, v61));
    if (!v62)
    {
      ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
      std::__shared_weak_count::__release_weak(v60);
    }
  }
  sub_1D52E20BC(v80);
  return v42;
}

void sub_1D52DFE50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v17;
  va_list va;
  uint64_t v19;
  va_list va1;

  va_start(va1, a13);
  va_start(va, a13);
  v17 = va_arg(va1, _QWORD);
  v19 = va_arg(va1, _QWORD);

  sub_1D5282EB4((uint64_t)va);
  sub_1D5282EB4((uint64_t)va1);
  sub_1D5282EB4(v15 - 112);
  sub_1D5282EB4(v15 - 96);
  sub_1D52E20BC((uint64_t *)(v15 - 80));
  _Unwind_Resume(a1);
}

void sub_1D52DFEFC(void *a1, void *a2, void *a3, void *a4)
{
  id v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  id v11;

  v11 = a3;
  v7 = a4;
  sub_1D52E1FDC(a1, a2, 0);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(v8, v9, (uint64_t)v7, (uint64_t)v11, v10);

}

void sub_1D52DFF70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

uint64_t sub_1D52DFF94(_DWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const char *v27;
  uint64_t v28;
  unsigned int v29;
  int v30;
  unsigned int v31;
  uint64_t v32;
  BOOL v34;
  int v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  void *exception;
  void *v41;
  void *v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  std::__shared_weak_count *v49;
  uint64_t v50;
  int v51;
  int v52;
  _QWORD v53[2];
  _QWORD v54[2];
  _QWORD v55[2];
  uint64_t v56;
  std::__shared_weak_count *v57;
  uint64_t v58[2];

  if (*((_BYTE *)a1 + 113))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  (*(void (**)(__int128 *__return_ptr))(*(_QWORD *)a1 + 136))(&v44);
  sub_1D52E1F74(v58, (uint64_t *)&v44);
  v2 = (std::__shared_weak_count *)*((_QWORD *)&v44 + 1);
  if (*((_QWORD *)&v44 + 1))
  {
    v3 = (unint64_t *)(*((_QWORD *)&v44 + 1) + 8);
    do
      v4 = __ldaxr(v3);
    while (__stlxr(v4 - 1, v3));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, _DWORD *))(*(_QWORD *)a1 + 64))(&v56, a1);
  if (!v56)
  {
    v41 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](v41, "RawCameraException");
    __cxa_throw(v41, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v56 + 408))(v56);
  v55[0] = 0;
  v55[1] = v5;
  v54[0] = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v56 + 432))(v56);
  v54[1] = v6;
  v53[0] = 0;
  v53[1] = v6;
  v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v56 + 456))(v56);
  v9 = v8;
  v10 = (*(double (**)(uint64_t))(*(_QWORD *)v56 + 2640))(v56);
  v11 = (*(double (**)(uint64_t))(*(_QWORD *)v56 + 2648))(v56);
  v50 = v7;
  v51 = (int)((double)(int)v9 / v10);
  v52 = (int)((double)SHIDWORD(v9) / v11);
  if (!sub_1D53ADD44((int *)v54, (int *)v55) || !sub_1D53ADD44((int *)&v50, (int *)v53))
  {
    v42 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](v42, "RawCameraException");
    __cxa_throw(v42, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v12 = v56;
  v13 = sub_1D5297E34(v56);
  (*(void (**)(_DWORD *))(*(_QWORD *)a1 + 88))(a1);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, uint64_t, void *))(*(_QWORD *)v12 + 2728))(v12, v13, v14);

  if (v56)
  {
    (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)v56 + 2872))(&v48);
    v15 = v49;
    if (v49)
    {
      p_shared_owners = (unint64_t *)&v49->__shared_owners_;
      do
        v17 = __ldaxr(p_shared_owners);
      while (__stlxr(v17 - 1, p_shared_owners));
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
  }
  if (sub_1D5297E5C(v56))
  {
    v46 = 0u;
    v47 = 0u;
    v44 = 0u;
    v45 = 0u;
    (*(void (**)(_DWORD *))(*(_QWORD *)a1 + 80))(a1);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v22 = sub_1D5297B04(v18, CFSTR("PreserveMargin"), v19, v20, v21);
    sub_1D52E0598((uint64_t)a1, v22, (uint64_t)&v44);

    v43 = xmmword_1D54490E0;
    (*(void (**)(_DWORD *, __int128 *, __int128 *))(*(_QWORD *)a1 + 104))(a1, &v44, &v43);
    (*(void (**)(_DWORD *))(*(_QWORD *)a1 + 88))(a1);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    v24 = v56;
    v25 = sub_1D5297E34(v56);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v24 + 2736))(v24, v25);
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(v23, v27, (uint64_t)v26, *MEMORY[0x1E0CBD068], v28);

  }
  else
  {
    v29 = sub_1D5297E3C(v56);
    if (sub_1D536C2B4(v29))
    {
      v46 = 0u;
      v47 = 0u;
      v44 = 0u;
      v45 = 0u;
      sub_1D52E0598((uint64_t)a1, 0, (uint64_t)&v44);
      v43 = xmmword_1D54490D0;
      (*(void (**)(_DWORD *, __int128 *, __int128 *))(*(_QWORD *)a1 + 104))(a1, &v44, &v43);
    }
    else
    {
      if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v56 + 544))(v56)
        && (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a1 + 24))(a1))
      {
        v30 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a1 + 24))(a1);
        v31 = 16;
        do
        {
          (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v56 + 552))(v56, v31 >> 1);
          v32 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v56 + 520))(v56);
          v34 = (int)v32 <= v30 && v31 >= 2 && SHIDWORD(v32) <= v30;
          v31 >>= 1;
        }
        while (v34);
      }
      if ((*(uint64_t (**)(_DWORD *))(*(_QWORD *)a1 + 24))(a1))
      {
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v56 + 544))(v56))
          v35 = 8;
        else
          v35 = 16;
      }
      else
      {
        v35 = 16;
      }
      a1[22] = v35;
      v46 = 0u;
      v47 = 0u;
      v44 = 0u;
      v45 = 0u;
      sub_1D52E065C((uint64_t *)a1, (uint64_t)&v44);
      a1[16] = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v56 + 544))(v56);
      v43 = xmmword_1D54490D0;
      (*(void (**)(_DWORD *, __int128 *, __int128 *))(*(_QWORD *)a1 + 104))(a1, &v44, &v43);
      (*(void (**)(_DWORD *))(*(_QWORD *)a1 + 144))(a1);
    }
  }
  v36 = v57;
  if (v57)
  {
    v37 = (unint64_t *)&v57->__shared_owners_;
    do
      v38 = __ldaxr(v37);
    while (__stlxr(v38 - 1, v37));
    if (!v38)
    {
      ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
      std::__shared_weak_count::__release_weak(v36);
    }
  }
  sub_1D52E20BC(v58);
  return 1;
}

void sub_1D52E04DC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1D5282EB4(v1 - 96);
  sub_1D52E20BC((uint64_t *)(v1 - 80));
  _Unwind_Resume(a1);
}

CGColorSpaceRef sub_1D52E0598@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  CGColorSpace *v9;

  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  v4 = **(_QWORD **)(a1 + 24);
  if (a2)
  {
    v5 = (*(uint64_t (**)(void))(v4 + 408))();
  }
  else
  {
    (*(void (**)(void))(v4 + 432))();
    v5 = v6;
  }
  *(_QWORD *)a3 = (int)v5;
  *(_QWORD *)(a3 + 8) = v5 >> 32;
  *(int64x2_t *)(a3 + 16) = vdupq_n_s64(0x10uLL);
  v7 = 63;
  if (((2 * (int)v5) & 0x1FFFFFFFFFFFFE00) == 0)
    v7 = 31;
  v8 = 15;
  if (((2 * (int)v5) & 0x1FFFFFFFFFFFFF80) != 0)
    v8 = v7;
  *(_QWORD *)(a3 + 32) = (v8 + ((2 * (int)v5) & 0x1FFFFFFFFFFFFFFELL)) & ~v8;
  *(_DWORD *)(a3 + 40) = 1196573017;
  v9 = (CGColorSpace *)sub_1D543E61C();
  *(_QWORD *)(a3 + 48) = v9;
  *(_DWORD *)(a3 + 56) = 0;
  *(_WORD *)(a3 + 60) = 256;
  *(_BYTE *)(a3 + 62) = 0;
  return CGColorSpaceRetain(v9);
}

CGColorSpaceRef sub_1D52E065C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _BOOL8 v9;
  CGColorSpace *v10;

  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1[3] + 520))(a1[3]);
  v5 = (int)v4;
  *(_QWORD *)a2 = (int)v4;
  *(_QWORD *)(a2 + 8) = v4 >> 32;
  *(_QWORD *)(a2 + 16) = (*(unsigned int (**)(uint64_t *))(*a1 + 152))(a1);
  v6 = 4 * (*(unsigned int (**)(uint64_t *))(*a1 + 152))(a1);
  v7 = v5 * v6;
  v8 = 63;
  if ((unint64_t)(v5 * v6) < 0x1000)
    v8 = 31;
  if (v7 < 0x400)
    v8 = 15;
  *(_QWORD *)(a2 + 24) = v6;
  *(_QWORD *)(a2 + 32) = (v8 + (v7 >> 3)) & ~v8;
  *(_DWORD *)(a2 + 40) = 1380401696;
  if (sub_1D5297E34(a1[3]) && !(v9 = sub_1D5297E44(a1[3])))
    v10 = (CGColorSpace *)sub_1D543E528(v9);
  else
    v10 = (CGColorSpace *)sub_1D5297E64(a1[3]);
  *(_QWORD *)(a2 + 48) = v10;
  *(_DWORD *)(a2 + 56) = 5;
  *(_WORD *)(a2 + 60) = 256;
  *(_BYTE *)(a2 + 62) = 0;
  return CGColorSpaceRetain(v10);
}

id sub_1D52E0750(uint64_t a1, void *a2)
{
  id v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  void *v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  void *exception;
  uint64_t v13;
  std::__shared_weak_count *v14;
  uint64_t v15[2];

  v3 = a2;
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)a1 + 136))(&v13, a1);
  sub_1D52E1F74(v15, &v13);
  v4 = v14;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)a1 + 64))(&v13, a1);
  if (!v13)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  (*(void (**)(uint64_t, id))(*(_QWORD *)v13 + 16))(v13, v3);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = v14;
  if (v14)
  {
    v9 = (unint64_t *)&v14->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  sub_1D52E20BC(v15);

  return v7;
}

void sub_1D52E088C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  void *v3;
  va_list va;

  va_start(va, a3);
  sub_1D52E20BC((uint64_t *)va);

  _Unwind_Resume(a1);
}

void sub_1D52E08DC(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t *v5;
  const void *Session;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  void *exception;
  __int128 v14;

  v5 = a1 + 9;
  v4 = a1[9];
  if (v4)
    goto LABEL_10;
  if (!a1[5] || (Session = (const void *)CGImagePluginGetSession()) == 0)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
LABEL_16:
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  sub_1D52843FC(Session, &v14);
  sub_1D5292548((uint64_t)v5, &v14);
  v7 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (*((_QWORD *)&v14 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v4 = *v5;
  if (!*v5)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    goto LABEL_16;
  }
LABEL_10:
  v10 = a1[10];
  *a2 = v4;
  a2[1] = v10;
  if (v10)
  {
    v11 = (unint64_t *)(v10 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
}

void sub_1D52E0A04(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *sub_1D52E0A20@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *result;
  void **v5;
  int v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  int v15;
  void *v16;
  uint64_t v17;
  int v18;
  void *v19;
  void *v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  void *v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t *p_shared_owners;
  uint64_t v32;
  unint64_t *v33;
  unint64_t v34;
  void *v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  void *v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  uint64_t v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  uint64_t v50;
  void *v51;
  char v52;
  char v53;
  int v54;
  std::__shared_weak_count *v55;
  unint64_t *v56;
  unint64_t v57;
  std::__shared_weak_count *v58;
  unint64_t *v59;
  unint64_t v60;
  std::__shared_weak_count *v61;
  unint64_t *v62;
  unint64_t v63;
  void *exception;
  void *v65;
  uint64_t v66;
  std::__shared_weak_count *v67;
  uint64_t v68;
  std::__shared_weak_count *v69;
  uint64_t v70;
  std::__shared_weak_count *v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  std::__shared_weak_count *v75;

  v5 = (void **)(a1 + 24);
  result = *(void **)(a1 + 24);
  if (!result)
  {
    v6 = *(unsigned __int8 *)(a1 + 113);
    if (!*(_BYTE *)(a1 + 112))
    {
      v14 = *(_QWORD *)(a1 + 168);
      (*(void (**)(__int128 *__return_ptr, uint64_t))(*(_QWORD *)a1 + 136))(&v73, a1);
      v15 = *(unsigned __int8 *)(a1 + 113);
      if (v6)
      {
        v16 = 0;
      }
      else
      {
        (*(void (**)(uint64_t))(*(_QWORD *)a1 + 88))(a1);
        v16 = (void *)objc_claimAutoreleasedReturnValue();
      }
      (*(void (**)(uint64_t))(*(_QWORD *)a1 + 184))(a1);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      (*(void (**)(uint64_t *__return_ptr, uint64_t, __int128 *, BOOL, void *, void *))(v14 + 16))(&v74, v14, &v73, v15 != 0, v16, v20);

      if (!v6)
      v21 = (std::__shared_weak_count *)*((_QWORD *)&v73 + 1);
      if (*((_QWORD *)&v73 + 1))
      {
        v22 = (unint64_t *)(*((_QWORD *)&v73 + 1) + 8);
        do
          v23 = __ldaxr(v22);
        while (__stlxr(v23 - 1, v22));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t))(*(_QWORD *)a1 + 80))(a1);
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      sub_1D52B4BA8(v24, &v72);
      sub_1D5295614(&v74, (uint64_t *)&v72, &v73);
      sub_1D5292548((uint64_t)v5, &v73);
      v25 = (std::__shared_weak_count *)*((_QWORD *)&v73 + 1);
      if (*((_QWORD *)&v73 + 1))
      {
        v26 = (unint64_t *)(*((_QWORD *)&v73 + 1) + 8);
        do
          v27 = __ldaxr(v26);
        while (__stlxr(v27 - 1, v26));
        if (!v27)
        {
          ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
          std::__shared_weak_count::__release_weak(v25);
        }
      }
      v28 = (std::__shared_weak_count *)*((_QWORD *)&v72 + 1);
      if (*((_QWORD *)&v72 + 1))
      {
        v29 = (unint64_t *)(*((_QWORD *)&v72 + 1) + 8);
        do
          v30 = __ldaxr(v29);
        while (__stlxr(v30 - 1, v29));
        if (!v30)
        {
          ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
          std::__shared_weak_count::__release_weak(v28);
        }
      }

      if (!*v5)
      {
        exception = __cxa_allocate_exception(0x10uLL);
        MEMORY[0x1D8271938](exception, "RawCameraException");
        __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
      }
      v11 = v75;
      if (!v75)
      {
LABEL_41:
        result = *v5;
        if (!*v5)
          goto LABEL_44;
        goto LABEL_42;
      }
      p_shared_owners = (unint64_t *)&v75->__shared_owners_;
      do
        v13 = __ldaxr(p_shared_owners);
      while (__stlxr(v13 - 1, p_shared_owners));
LABEL_39:
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
      goto LABEL_41;
    }
    sub_1D5285A94(&v74, (_QWORD *)(a1 + 8));
    v7 = sub_1D539DF00();
    sub_1D539E2FC(v7, (void *)a1, &v73);
    sub_1D5292548((uint64_t)v5, &v73);
    v8 = (std::__shared_weak_count *)*((_QWORD *)&v73 + 1);
    if (*((_QWORD *)&v73 + 1))
    {
      v9 = (unint64_t *)(*((_QWORD *)&v73 + 1) + 8);
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
    if (*v5)
    {
LABEL_9:
      v11 = v75;
      if (!v75)
        goto LABEL_41;
      v12 = (unint64_t *)&v75->__shared_owners_;
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      goto LABEL_39;
    }
    v17 = *(_QWORD *)(a1 + 168);
    (*(void (**)(__int128 *__return_ptr, uint64_t))(*(_QWORD *)a1 + 136))(&v72, a1);
    v18 = *(unsigned __int8 *)(a1 + 113);
    if (v6)
    {
      v19 = 0;
    }
    else
    {
      (*(void (**)(uint64_t))(*(_QWORD *)a1 + 88))(a1);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
    }
    (*(void (**)(uint64_t))(*(_QWORD *)a1 + 184))(a1);
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(__int128 *__return_ptr, uint64_t, __int128 *, BOOL, void *, void *))(v17 + 16))(&v73, v17, &v72, v18 != 0, v19, v35);

    if (!v6)
    v36 = (std::__shared_weak_count *)*((_QWORD *)&v72 + 1);
    if (*((_QWORD *)&v72 + 1))
    {
      v37 = (unint64_t *)(*((_QWORD *)&v72 + 1) + 8);
      do
        v38 = __ldaxr(v37);
      while (__stlxr(v38 - 1, v37));
      if (!v38)
      {
        ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
        std::__shared_weak_count::__release_weak(v36);
      }
    }
    (*(void (**)(uint64_t))(*(_QWORD *)a1 + 80))(a1);
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    sub_1D52B4BA8(v39, &v70);
    sub_1D5295614(&v73, &v70, &v72);
    sub_1D5292548((uint64_t)v5, &v72);
    v40 = (std::__shared_weak_count *)*((_QWORD *)&v72 + 1);
    if (*((_QWORD *)&v72 + 1))
    {
      v41 = (unint64_t *)(*((_QWORD *)&v72 + 1) + 8);
      do
        v42 = __ldaxr(v41);
      while (__stlxr(v42 - 1, v41));
      if (!v42)
      {
        ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
        std::__shared_weak_count::__release_weak(v40);
      }
    }
    v43 = v71;
    if (v71)
    {
      v44 = (unint64_t *)&v71->__shared_owners_;
      do
        v45 = __ldaxr(v44);
      while (__stlxr(v45 - 1, v44));
      if (!v45)
      {
        ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
        std::__shared_weak_count::__release_weak(v43);
      }
    }

    if (!*v5)
      goto LABEL_98;
    v46 = sub_1D539DF00();
    sub_1D539E4B8(v46, (void *)a1, v5);
    if (*(_BYTE *)(a1 + 113))
    {
LABEL_68:
      if (*(_DWORD *)(a1 + 64))
        (*(void (**)(void *))(*(_QWORD *)*v5 + 552))(*v5);
      v47 = (std::__shared_weak_count *)*((_QWORD *)&v73 + 1);
      if (*((_QWORD *)&v73 + 1))
      {
        v48 = (unint64_t *)(*((_QWORD *)&v73 + 1) + 8);
        do
          v49 = __ldaxr(v48);
        while (__stlxr(v49 - 1, v48));
        if (!v49)
        {
          ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
          std::__shared_weak_count::__release_weak(v47);
        }
      }
      goto LABEL_9;
    }
    v50 = *(_QWORD *)(a1 + 24);
    (*(void (**)(uint64_t))(*(_QWORD *)a1 + 80))(a1);
    v51 = (void *)objc_claimAutoreleasedReturnValue();
    LOBYTE(v50) = sub_1D52977A0(v50, v51);

    if ((v50 & 1) != 0)
    {
      v52 = (*(uint64_t (**)(void *))(*(_QWORD *)*v5 + 40))(*v5);
      if ((_QWORD)v73)
        v53 = v52;
      else
        v53 = 1;
      if ((v53 & 1) == 0)
      {
        (*(void (**)(__int128 *__return_ptr, uint64_t))(*(_QWORD *)a1 + 136))(&v72, a1);
        v54 = (**(uint64_t (***)(_QWORD))v72)(v72);
        v55 = (std::__shared_weak_count *)*((_QWORD *)&v72 + 1);
        if (*((_QWORD *)&v72 + 1))
        {
          v56 = (unint64_t *)(*((_QWORD *)&v72 + 1) + 8);
          do
            v57 = __ldaxr(v56);
          while (__stlxr(v57 - 1, v56));
          if (!v57)
          {
            ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
            std::__shared_weak_count::__release_weak(v55);
          }
        }
        if (v54)
        {
          v68 = 0;
          v69 = 0;
          sub_1D53C3694(&v73, &v68);
          v58 = v69;
          if (v69)
          {
            v59 = (unint64_t *)&v69->__shared_owners_;
            do
              v60 = __ldaxr(v59);
            while (__stlxr(v60 - 1, v59));
            if (!v60)
            {
              ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
              std::__shared_weak_count::__release_weak(v58);
            }
          }
        }
      }
      if (((*(uint64_t (**)(void *))(*(_QWORD *)*v5 + 40))(*v5) & 1) != 0)
      {
        (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)*v5 + 112))(&v66);
        v61 = v67;
        if (v67)
        {
          v62 = (unint64_t *)&v67->__shared_owners_;
          do
            v63 = __ldaxr(v62);
          while (__stlxr(v63 - 1, v62));
          if (!v63)
          {
            ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
            std::__shared_weak_count::__release_weak(v61);
          }
        }
        goto LABEL_68;
      }
      v65 = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1D8271938](v65, "RawCameraException");
    }
    else
    {
LABEL_98:
      v65 = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1D8271938](v65, "RawCameraException");
    }
    __cxa_throw(v65, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
LABEL_42:
  if (*(_QWORD *)(a1 + 120))
  {
    sub_1D5297344((uint64_t)result, (uint64_t *)(a1 + 120));
    result = *v5;
  }
LABEL_44:
  v32 = *(_QWORD *)(a1 + 32);
  *a2 = result;
  a2[1] = v32;
  if (v32)
  {
    v33 = (unint64_t *)(v32 + 8);
    do
      v34 = __ldxr(v33);
    while (__stxr(v34 + 1, v33));
  }
  return result;
}

void sub_1D52E10D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  va_list va1;
  uint64_t v13;
  va_list va2;

  va_start(va2, a3);
  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v11 = va_arg(va2, _QWORD);
  v13 = va_arg(va2, _QWORD);
  sub_1D5282EB4((uint64_t)va);
  sub_1D5282EB4((uint64_t)va1);
  sub_1D5282EB4((uint64_t)va2);
  _Unwind_Resume(a1);
}

void sub_1D52E11F4(uint64_t a1)
{
  void **v1;
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *v4;
  unint64_t v5;
  __int128 v6;

  v1 = (void **)(a1 + 24);
  if (*(_QWORD *)(a1 + 24))
  {
    v2 = sub_1D539DF00();
    sub_1D539E44C(v2, v1);
    v6 = 0uLL;
    sub_1D5292548((uint64_t)v1, &v6);
    v3 = (std::__shared_weak_count *)*((_QWORD *)&v6 + 1);
    if (*((_QWORD *)&v6 + 1))
    {
      v4 = (unint64_t *)(*((_QWORD *)&v6 + 1) + 8);
      do
        v5 = __ldaxr(v4);
      while (__stlxr(v5 - 1, v4));
      if (!v5)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
  }
}

uint64_t sub_1D52E1274(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

void sub_1D52E127C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t *v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  __int128 v21;

  *a2 = 0;
  a2[1] = 0;
  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 80))(a1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = sub_1D5297B04(v4, CFSTR("PreserveMargin"), v5, v6, v7);

  if (v8)
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)a1 + 64))(&v19, a1);
    (*(void (**)(__int128 *__return_ptr))(*(_QWORD *)v19 + 384))(&v21);
    sub_1D5292548((uint64_t)a2, &v21);
    v9 = (std::__shared_weak_count *)*((_QWORD *)&v21 + 1);
    if (*((_QWORD *)&v21 + 1))
    {
      v10 = (unint64_t *)(*((_QWORD *)&v21 + 1) + 8);
      do
        v11 = __ldaxr(v10);
      while (__stlxr(v11 - 1, v10));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
    v12 = v20;
    if (v20)
    {
      p_shared_owners = (unint64_t *)&v20->__shared_owners_;
      do
        v14 = __ldaxr(p_shared_owners);
      while (__stlxr(v14 - 1, p_shared_owners));
LABEL_19:
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
  }
  else
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)a1 + 64))(&v19, a1);
    (*(void (**)(__int128 *__return_ptr))(*(_QWORD *)v19 + 392))(&v21);
    sub_1D5292548((uint64_t)a2, &v21);
    v15 = (std::__shared_weak_count *)*((_QWORD *)&v21 + 1);
    if (*((_QWORD *)&v21 + 1))
    {
      v16 = (unint64_t *)(*((_QWORD *)&v21 + 1) + 8);
      do
        v17 = __ldaxr(v16);
      while (__stlxr(v17 - 1, v16));
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
    v12 = v20;
    if (v20)
    {
      v18 = (unint64_t *)&v20->__shared_owners_;
      do
        v14 = __ldaxr(v18);
      while (__stlxr(v14 - 1, v18));
      goto LABEL_19;
    }
  }
}

void sub_1D52E140C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_1D5282EB4((uint64_t)&a9);
  sub_1D5282EB4(v9);
  _Unwind_Resume(a1);
}

void sub_1D52E1448(_QWORD *a1)
{
  const void *v2;
  unsigned int v3;
  unsigned int v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  CGDataProviderRef v9;
  CGDataProvider *v10;
  CGColorSpace *v11;
  CGImageRef v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  void *v16;
  void *exception;
  void *v18;
  CGImageRef v19;
  _DWORD *v20;
  std::__shared_weak_count *v21;

  sub_1D52E127C((uint64_t)a1, &v20);
  v2 = (const void *)sub_1D530D4CC((uint64_t)v20);
  v3 = v20[14];
  v4 = v20[12];
  v5 = (_QWORD *)operator new();
  v6 = a1[4];
  *v5 = a1[3];
  v5[1] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = CGDataProviderCreateWithData(v5, v2, 2 * v3 * (unint64_t)v4, (CGDataProviderReleaseDataCallback)sub_1D52E1660);
  v10 = v9;
  if (!v9)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  CFAutorelease(v9);
  v11 = (CGColorSpace *)sub_1D543E61C();
  if (!v11)
  {
    v16 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](v16, "RawCameraException");
    __cxa_throw(v16, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v12 = CGImageCreate(v20[13], v20[12], 0x10uLL, 0x10uLL, 2 * v20[14], v11, 0x1000u, v10, 0, 0, kCGRenderingIntentDefault);
  v19 = v12;
  if (!v12)
  {
    v18 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](v18, "RawCameraException");
    __cxa_throw(v18, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  CFAutorelease(v12);
  (*(void (**)(_QWORD *, CGImageRef *))(*a1 + 112))(a1, &v19);
  v13 = v21;
  if (v21)
  {
    p_shared_owners = (unint64_t *)&v21->__shared_owners_;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
}

void sub_1D52E1624(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  void *v13;

  __cxa_free_exception(v13);
  sub_1D5282EB4((uint64_t)&a13);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52E1660(uint64_t result)
{
  uint64_t v1;

  if (result)
  {
    v1 = sub_1D5282EB4(result);
    return MEMORY[0x1D8271ADC](v1, 0x20C40A4A59CD2);
  }
  return result;
}

void sub_1D52E16A8(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  __int128 v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  uint64_t v18;

  v5 = a1 + 19;
  v4 = a1[19];
  if (!v4)
  {
    v18 = 0;
    (*(void (**)(uint64_t *__return_ptr, uint64_t *))(*a1 + 64))(&v16, a1);
    sub_1D53ACD1C(&v16, &v18, &v15);
    sub_1D5292548((uint64_t)v5, &v15);
    v6 = (std::__shared_weak_count *)*((_QWORD *)&v15 + 1);
    if (*((_QWORD *)&v15 + 1))
    {
      v7 = (unint64_t *)(*((_QWORD *)&v15 + 1) + 8);
      do
        v8 = __ldaxr(v7);
      while (__stlxr(v8 - 1, v7));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
    v9 = v17;
    if (v17)
    {
      p_shared_owners = (unint64_t *)&v17->__shared_owners_;
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
    v4 = *v5;
  }
  v12 = a1[20];
  *a2 = v4;
  a2[1] = v12;
  if (v12)
  {
    v13 = (unint64_t *)(v12 + 8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
}

void sub_1D52E17AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_1D5282EB4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52E17C0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X2>, _QWORD *a4@<X3>, uint64_t *a5@<X8>)
{
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v11;
  std::__shared_weak_count *v12;

  sub_1D53A629C(a2, a3, a4, a5);
  sub_1D52E16A8(a1, &v11);
  sub_1D53ACD44(v11, a5);
  v7 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  return (*(uint64_t (**)(uint64_t *))(*a1 + 144))(a1);
}

void sub_1D52E1860(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1D5282EB4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52E1888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  void *exception;

  v5 = *(_QWORD *)(a1 + 96);
  if (!v5)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v5 + 48))(v5, a1 + 72, a2, a3, a4);
}

void sub_1D52E18F4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D52E1908(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X2>, _QWORD *a4@<X3>, _QWORD *a5@<X8>)
{
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;

  sub_1D52E127C(a1, &v13);
  sub_1D53A62CC(a2, a3, a4, &v13, a5);
  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 144))(a1);
  v10 = v14;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_1D52E19B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_1D5282EB4(v9);
  sub_1D5282EB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

id sub_1D52E19D8(_BYTE *a1)
{
  id v1;
  void *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  if (a1[113])
  {
    v1 = 0;
  }
  else
  {
    (*(void (**)(_BYTE *))(*(_QWORD *)a1 + 80))(a1);
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_objectForKeyedSubscript_(v2, v3, (uint64_t)CFSTR("kCGImageSourceXMPSidecar"), v4, v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v1 = v6;
    else
      v1 = 0;

  }
  return v1;
}

void sub_1D52E1A68(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_1D52E1A84(uint64_t a1)
{
  void *v2;
  _BOOL4 v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 80))(a1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = sub_1D5297D80(v2, off_1EFF323A8);

  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 80))(a1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = v4;
  if (v3)
  {
    v9 = sub_1D5297B04(v4, (const char *)off_1EFF323A8, v5, v6, v7);
  }
  else
  {
    v10 = sub_1D5297D80(v4, off_1EFF323A0);

    if (!v10)
      return 0;
    (*(void (**)(uint64_t))(*(_QWORD *)a1 + 80))(a1);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = sub_1D5297B04(v8, (const char *)off_1EFF323A0, v11, v12, v13);
  }
  v14 = v9;

  return v14;
}

void sub_1D52E1B4C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_1D52E1B68(uint64_t a1)
{
  return *(_QWORD *)(a1 + 56);
}

uint64_t sub_1D52E1B70(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 56) = a2;
  return result;
}

uint64_t sub_1D52E1B78(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

__n128 sub_1D52E1B80(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = a2[3];
  a1[3] = result;
  a2[3].n128_u64[0] = 0;
  a2[3].n128_u64[1] = 0;
  return result;
}

uint64_t sub_1D52E1B90(uint64_t a1)
{
  return sub_1D5282EB4(a1 + 48);
}

id sub_1D52E1B98()
{
  unsigned __int8 v0;
  unsigned __int8 v1;
  void *v2;
  id v3;
  void *exception;
  _QWORD block[5];
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  void (*v11)(uint64_t);
  id v12;

  v0 = atomic_load((unsigned __int8 *)&qword_1EFF32658);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_1EFF32658))
  {
    qword_1EFF32650 = (uint64_t)dispatch_queue_create("Provider_Queue_Sync", 0);
    __cxa_guard_release(&qword_1EFF32658);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_1EFF32680);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_1EFF32680))
  {
    qword_1EFF32660[0] = (uint64_t)dispatch_queue_create("Provider_Queue_1", 0);
    qword_1EFF32668 = (uint64_t)dispatch_queue_create("Provider_Queue_2", 0);
    qword_1EFF32670 = (uint64_t)dispatch_queue_create("Provider_Queue_3", 0);
    qword_1EFF32678 = (uint64_t)dispatch_queue_create("Provider_Queue_4", 0);
    __cxa_guard_release(&qword_1EFF32680);
  }
  v7 = 0;
  v8 = &v7;
  v9 = 0x3032000000;
  v10 = sub_1D52E1EDC;
  v11 = sub_1D52E1EEC;
  v12 = 0;
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = sub_1D52E1EF4;
  block[3] = &unk_1E9975198;
  block[4] = &v7;
  dispatch_sync((dispatch_queue_t)qword_1EFF32650, block);
  v2 = (void *)v8[5];
  if (!v2)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v3 = v2;
  _Block_object_dispose(&v7, 8);

  return v3;
}

void sub_1D52E1D50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Block_object_dispose(&a15, 8);

  _Unwind_Resume(a1);
}

void sub_1D52E1D80(_QWORD *a1)
{
  void (*v2)(__int128 *__return_ptr, _QWORD *, _QWORD, _QWORD *, _QWORD *);
  uint64_t v3;
  _QWORD *v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  __int128 v8;

  v2 = (void (*)(__int128 *__return_ptr, _QWORD *, _QWORD, _QWORD *, _QWORD *))a1[7];
  v3 = a1[8];
  v4 = (_QWORD *)(a1[5] + (v3 >> 1));
  if ((v3 & 1) != 0)
    v2 = *(void (**)(__int128 *__return_ptr, _QWORD *, _QWORD, _QWORD *, _QWORD *))(*v4 + v2);
  v2(&v8, v4, a1[9], a1 + 10, a1 + 12);
  sub_1D5292548(*(_QWORD *)(a1[4] + 8) + 48, &v8);
  v5 = (std::__shared_weak_count *)*((_QWORD *)&v8 + 1);
  if (*((_QWORD *)&v8 + 1))
  {
    v6 = (unint64_t *)(*((_QWORD *)&v8 + 1) + 8);
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
}

void sub_1D52E1E1C(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1D52E1E0CLL);
}

uint64_t sub_1D52E1E28(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;

  v2 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(result + 48) = v2;
  if (v2)
  {
    v3 = (unint64_t *)(v2 + 8);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return result;
}

uint64_t sub_1D52E1E4C(uint64_t a1)
{
  return sub_1D5282EB4(a1 + 40);
}

uint64_t *sub_1D52E1E7C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v3 = *a1;
  }
  if (v3)
    sub_1D53A1254(v3);
  return a1;
}

void sub_1D52E1EC8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1D5282EB4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52E1EDC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1D52E1EEC(uint64_t a1)
{

}

void sub_1D52E1EF4(uint64_t a1)
{
  uint64_t v1;

  v1 = dword_1EFF32648++;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), (id)qword_1EFF32660[v1]);
  dword_1EFF32648 &= 3u;
}

uint64_t sub_1D52E1F44(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  if (v2)
    sub_1D53A125C(v2);
  return sub_1D5282EB4((uint64_t)a1);
}

uint64_t *sub_1D52E1F74(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v3 = *a1;
  }
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 72))(v3);
  return a1;
}

void sub_1D52E1FC8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1D5282EB4(v1);
  _Unwind_Resume(a1);
}

id sub_1D52E1FDC(void *a1, void *a2, int a3)
{
  id v5;
  id v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;

  v5 = a1;
  v6 = a2;
  v10 = v6;
  if (v6 || !a3)
  {
    if (v6)
    {
      objc_msgSend_objectForKeyedSubscript_(v5, v7, (uint64_t)v6, v8, v9);
      v11 = (id)objc_claimAutoreleasedReturnValue();
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0)
      {
        objc_msgSend_dictionary(MEMORY[0x1E0C99E08], v12, v13, v14, v15);
        v16 = objc_claimAutoreleasedReturnValue();

        v11 = (id)v16;
        objc_msgSend_setObject_forKey_(v5, v17, v16, (uint64_t)v10, v18);
      }
    }
    else
    {
      v11 = 0;
    }
  }
  else
  {
    v11 = v5;
  }

  return v11;
}

void sub_1D52E209C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t sub_1D52E20BC(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 80))(v2);
  return sub_1D5282EB4((uint64_t)a1);
}

void sub_1D52E20F4(uint64_t *a1@<X1>, unsigned int *a2@<X2>, unsigned int *a3@<X3>, char *a4@<X4>, uint64_t *a5@<X5>, _QWORD *a6@<X8>)
{
  _QWORD *v12;

  v12 = operator new(0xC8uLL);
  sub_1D52E2184(v12, a1, a2, a3, a4, a5);
  *a6 = v12 + 3;
  a6[1] = v12;
  sub_1D5285658((uint64_t)a6, v12 + 4, (uint64_t)(v12 + 3));
}

void sub_1D52E2170(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52E2184(_QWORD *a1, uint64_t *a2, unsigned int *a3, unsigned int *a4, char *a5, uint64_t *a6)
{
  a1[2] = 0;
  *a1 = &unk_1E99751C8;
  a1[1] = 0;
  sub_1D52DEA6C((uint64_t)(a1 + 3), *a2, a3, a4, *a5, *a6);
  return a1;
}

void sub_1D52E21C8(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52E21DC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E99751C8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52E21F0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E99751C8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52E2224(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a1 + 24) + 48))(a1 + 24);
}

_QWORD *sub_1D52E2234@<X0>(_QWORD *a1@<X8>)
{
  const __CFString *FilePath;
  char buffer[1024];
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  FilePath = (const __CFString *)CGImageReadSessionGetFilePath();
  if (FilePath && CFStringGetFileSystemRepresentation(FilePath, buffer, 1024))
    return sub_1D52850A0(a1, buffer);
  else
    return sub_1D5284514(a1);
}

uint64_t sub_1D52E22C8()
{
  unint64_t Size;
  unsigned int v2;

  Size = CGImageReadSessionGetSize();
  sub_1D528304C(&v2, &Size);
  return v2;
}

uint64_t sub_1D52E22FC(uint64_t a1, void *a2, size_t a3)
{
  unsigned int *v6;
  uint64_t BytesAtOffset;
  unsigned int v9;
  int v10;

  v9 = 0;
  if (!*(_BYTE *)(a1 + 56))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a1 + 16))(a1);
    BytesAtOffset = CGImageReadSessionGetBytesAtOffset();
    sub_1D5282FE0(&v10, (unint64_t *)&BytesAtOffset);
    *(_DWORD *)(a1 + 52) = v10;
    *(_BYTE *)(a1 + 56) = 1;
  }
  BytesAtOffset = a3;
  v6 = (unsigned int *)(a1 + 48);
  v10 = *(_DWORD *)(a1 + 48);
  if (*(_DWORD *)(a1 + 52) >= *sub_1D52E25A0(&v10, &BytesAtOffset))
  {
    memcpy(a2, (const void *)(a1 + *(int *)(a1 + 48) + 57), a3);
    BytesAtOffset = a3;
  }
  else
  {
    sub_1D52ADF28(v6);
    BytesAtOffset = CGImageReadSessionGetBytesAtOffset();
  }
  sub_1D528304C(&v9, (unint64_t *)&BytesAtOffset);
  sub_1D5294254((int *)v6, &v9);
  return v9;
}

uint64_t sub_1D52E2430(_DWORD *a1, int *a2, int a3)
{
  int *v6;
  int v7;
  int v8;
  void *exception;
  int v11;
  int v12;
  int v13;

  v13 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a1 + 16))(a1);
  sub_1D5285B08(&v12, &v13);
  if (a3 == 2)
  {
    v7 = v12;
LABEL_7:
    v13 = v7;
    v6 = a2;
    goto LABEL_8;
  }
  if (a3 == 1)
  {
    v7 = a1[12];
    goto LABEL_7;
  }
  if (a3)
  {
    v8 = 0;
    goto LABEL_11;
  }
  v11 = sub_1D52845F4((uint64_t)a1);
  v13 = *a2;
  v6 = &v11;
LABEL_8:
  v8 = *sub_1D5284C34(&v13, v6);
  if (v8 < 0)
  {
LABEL_13:
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
LABEL_11:
  if (v12 < v8)
    goto LABEL_13;
  a1[12] = v8;
  return 0;
}

void sub_1D52E2524(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52E2538(uint64_t a1)
{
  int v2;
  int v3;
  int v5;
  int v6;

  v2 = sub_1D52845F4(a1);
  v3 = *(_DWORD *)(a1 + 48);
  v5 = v2;
  v6 = v3;
  return *sub_1D5290020(&v6, &v5);
}

void sub_1D52E257C(_QWORD *a1)
{
  sub_1D52844B0(a1);
  JUMPOUT(0x1D8271ADCLL);
}

int *sub_1D52E25A0(int *result, _QWORD *a2)
{
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  void *exception;

  v2 = *result;
  v3 = __OFADD__(v2, *a2);
  v4 = v2 + *a2;
  *result = v4;
  if (v3 || (unint64_t)(v4 - 0x80000000) <= 0xFFFFFFFEFFFFFFFFLL)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return result;
}

void sub_1D52E2610(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::string *sub_1D52E2624(std::string *this)
{
  uint64_t v2;
  std::string *v3;
  std::string::size_type size;
  int v5;
  std::string *result;
  std::string::size_type v7;
  std::string *v8;
  std::string::size_type v9;
  int v10;
  char *v11;

  v2 = HIBYTE(this->__r_.__value_.__r.__words[2]);
  if ((v2 & 0x80u) == 0)
    v3 = this;
  else
    v3 = (std::string *)this->__r_.__value_.__r.__words[0];
  if ((v2 & 0x80u) == 0)
    size = HIBYTE(this->__r_.__value_.__r.__words[2]);
  else
    size = this->__r_.__value_.__l.__size_;
  do
  {
    if (!size)
      goto LABEL_20;
    v5 = *((unsigned __int8 *)&v3[-1].__r_.__value_.__r.__words[2] + size-- + 7);
  }
  while (v5 == 32);
  if (size == -1)
  {
LABEL_20:
    v10 = (char)v2;
    v11 = (char *)this + v2;
    if (v10 < 0)
      v11 = (char *)(this->__r_.__value_.__r.__words[0] + this->__r_.__value_.__l.__size_);
    v9 = v11 - (char *)v3;
    return std::string::erase(this, 0, v9);
  }
  result = std::string::erase(this, size + 1, 0xFFFFFFFFFFFFFFFFLL);
  v7 = HIBYTE(this->__r_.__value_.__r.__words[2]);
  if ((v7 & 0x80u) == 0)
    v8 = this;
  else
    v8 = (std::string *)this->__r_.__value_.__r.__words[0];
  if ((v7 & 0x80u) != 0)
    v7 = this->__r_.__value_.__l.__size_;
  if (v7)
  {
    v9 = 0;
    while (v8->__r_.__value_.__s.__data_[v9] == 32)
    {
      if (v7 == ++v9)
        return result;
    }
    if (v9 != -1)
      return std::string::erase(this, 0, v9);
  }
  return result;
}

void sub_1D52E26F8(uint64_t a1, uint64_t *a2, char a3, void *a4, void *a5)
{
  uint64_t v5;

  sub_1D52A7E98(a1, a2, a3, a4, a5);
  *(_QWORD *)v5 = off_1E9975298;
  *(_DWORD *)(v5 + 1180) = -1;
  *(_QWORD *)(v5 + 1210) = 0;
  *(_DWORD *)(v5 + 1218) = 0;
  *(_QWORD *)(v5 + 1240) = 0;
  *(_QWORD *)(v5 + 1232) = 0;
  *(_QWORD *)(v5 + 1184) = 0;
  *(_QWORD *)(v5 + 1200) = 0;
  *(_QWORD *)(v5 + 1192) = 0;
  *(_BYTE *)(v5 + 1208) = 0;
  *(_QWORD *)(v5 + 1224) = v5 + 1232;
  *(_BYTE *)(v5 + 1248) = 0;
}

void sub_1D52E2750(uint64_t a1, uint64_t a2, unsigned __int16 *a3)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  char *v10;
  uint64_t v11;
  int v12;
  int *v13;
  int v14;
  int v15;
  int *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  int v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  int v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  int v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  int v33;
  void **v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  int v45;
  _DWORD *v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  int v55;
  uint64_t v56;
  unint64_t v57;
  unsigned int v58;
  int *v59;
  void *exception;
  void *v61;
  int v62;
  int v63;
  uint64_t v64;
  std::__shared_weak_count *v65;
  uint64_t v66[3];

  sub_1D52ABE88((uint64_t **)a1, a2, a3);
  if (*a3 == 50752 && ((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) == 0)
  {
    sub_1D52917E4(a1, &v64);
    sub_1D52B1C58(v66, &v64);
    v6 = v65;
    if (v65)
    {
      p_shared_owners = (unint64_t *)&v65->__shared_owners_;
      do
        v8 = __ldaxr(p_shared_owners);
      while (__stlxr(v8 - 1, p_shared_owners));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
    if (a3[1] != 3 || *((_DWORD *)a3 + 1) != 3)
      goto LABEL_89;
    v10 = getenv("RAWCAMERA_DUALPIXEL_SECOND_IMAGE");
    v11 = *(unsigned __int8 *)(a2 + 23);
    v12 = (char)v11;
    if ((v11 & 0x80u) != 0)
      v11 = *(_QWORD *)(a2 + 8);
    if (v10)
    {
      if (v11 != 4)
        goto LABEL_27;
      if (v12 >= 0)
        v13 = (int *)a2;
      else
        v13 = *(int **)a2;
      v14 = *v13;
      v15 = 860112457;
    }
    else
    {
      if (v11 != 4)
        goto LABEL_27;
      if (v12 >= 0)
        v16 = (int *)a2;
      else
        v16 = *(int **)a2;
      v14 = *v16;
      v15 = 876889673;
    }
    if (v14 == v15)
    {
LABEL_89:
      sub_1D5285200(v66);
      return;
    }
LABEL_27:
    sub_1D52917E4(a1, &v64);
    v17 = v64;
    v62 = *((_DWORD *)a3 + 2);
    sub_1D5282F74(&v63, &v62);
    (*(void (**)(uint64_t, int *, _QWORD))(*(_QWORD *)v17 + 40))(v17, &v63, 0);
    v18 = v65;
    if (v65)
    {
      v19 = (unint64_t *)&v65->__shared_owners_;
      do
        v20 = __ldaxr(v19);
      while (__stlxr(v20 - 1, v19));
      if (!v20)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
    sub_1D52917E4(a1, &v64);
    v21 = sub_1D528479C(v64);
    v22 = v65;
    if (v65)
    {
      v23 = (unint64_t *)&v65->__shared_owners_;
      do
        v24 = __ldaxr(v23);
      while (__stlxr(v24 - 1, v23));
      if (!v24)
      {
        ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
        std::__shared_weak_count::__release_weak(v22);
      }
    }
    if (v21)
    {
      sub_1D52917E4(a1, &v64);
      v25 = sub_1D528479C(v64);
      v26 = v65;
      if (v65)
      {
        v27 = (unint64_t *)&v65->__shared_owners_;
        do
          v28 = __ldaxr(v27);
        while (__stlxr(v28 - 1, v27));
        if (!v28)
        {
          ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
          std::__shared_weak_count::__release_weak(v26);
        }
      }
      sub_1D52917E4(a1, &v64);
      v29 = sub_1D528479C(v64);
      v30 = v65;
      if (v65)
      {
        v31 = (unint64_t *)&v65->__shared_owners_;
        do
          v32 = __ldaxr(v31);
        while (__stlxr(v32 - 1, v31));
        if (!v32)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      v33 = 0;
      v34 = (void **)(a1 + 1184);
      v35 = *(char **)(a1 + 1184);
      *(_QWORD *)(a1 + 1192) = v35;
      v36 = (_QWORD *)(a1 + 1200);
      do
      {
        if ((unint64_t)v35 >= *v36)
        {
          v37 = (char *)*v34;
          v38 = (v35 - (_BYTE *)*v34) >> 2;
          v39 = v38 + 1;
          if ((unint64_t)(v38 + 1) >> 62)
            sub_1D5282B8C();
          v40 = *v36 - (_QWORD)v37;
          if (v40 >> 1 > v39)
            v39 = v40 >> 1;
          if ((unint64_t)v40 >= 0x7FFFFFFFFFFFFFFCLL)
            v41 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v41 = v39;
          if (v41)
          {
            v42 = (char *)sub_1D5282BA0(a1 + 1200, v41);
            v35 = *(char **)(a1 + 1192);
            v37 = *(char **)(a1 + 1184);
          }
          else
          {
            v42 = 0;
          }
          v43 = &v42[4 * v38];
          *(_DWORD *)v43 = v25;
          v44 = v43 + 4;
          while (v35 != v37)
          {
            v45 = *((_DWORD *)v35 - 1);
            v35 -= 4;
            *((_DWORD *)v43 - 1) = v45;
            v43 -= 4;
          }
          *(_QWORD *)(a1 + 1184) = v43;
          *(_QWORD *)(a1 + 1192) = v44;
          *(_QWORD *)(a1 + 1200) = &v42[4 * v41];
          if (v37)
            operator delete(v37);
          v35 = v44;
        }
        else
        {
          *(_DWORD *)v35 = v25;
          v35 += 4;
        }
        *(_QWORD *)(a1 + 1192) = v35;
        ++v33;
      }
      while (v33 != v21);
      if ((unint64_t)v35 >= *v36)
      {
        v47 = (char *)*v34;
        v48 = (v35 - (_BYTE *)*v34) >> 2;
        v49 = v48 + 1;
        if ((unint64_t)(v48 + 1) >> 62)
          sub_1D5282B8C();
        v50 = *v36 - (_QWORD)v47;
        if (v50 >> 1 > v49)
          v49 = v50 >> 1;
        if ((unint64_t)v50 >= 0x7FFFFFFFFFFFFFFCLL)
          v51 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v51 = v49;
        if (v51)
        {
          v52 = (char *)sub_1D5282BA0(a1 + 1200, v51);
          v35 = *(char **)(a1 + 1192);
          v47 = *(char **)(a1 + 1184);
        }
        else
        {
          v52 = 0;
        }
        v53 = &v52[4 * v48];
        v54 = &v52[4 * v51];
        *(_DWORD *)v53 = v29;
        v46 = v53 + 4;
        while (v35 != v47)
        {
          v55 = *((_DWORD *)v35 - 1);
          v35 -= 4;
          *((_DWORD *)v53 - 1) = v55;
          v53 -= 4;
        }
        *(_QWORD *)(a1 + 1184) = v53;
        *(_QWORD *)(a1 + 1192) = v46;
        *(_QWORD *)(a1 + 1200) = v54;
        if (v47)
          operator delete(v47);
      }
      else
      {
        *(_DWORD *)v35 = v29;
        v46 = v35 + 4;
      }
      *(_QWORD *)(a1 + 1192) = v46;
      if (!*(_BYTE *)(a1 + 1248))
      {
        v63 = 0;
        sub_1D5285A24(&v64, (unsigned int *)&v63);
        v56 = *(_QWORD *)(a1 + 1184);
        if (*(_QWORD *)(a1 + 1192) != v56)
        {
          v57 = 0;
          v58 = 1;
          do
          {
            v59 = (int *)(v56 + 4 * v57);
            if (*v59 < 0)
            {
              exception = __cxa_allocate_exception(0x10uLL);
              MEMORY[0x1D8271938](exception, "RawCameraException");
              __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
            }
            sub_1D5285B70(&v64, v59);
            v57 = v58;
            v56 = *(_QWORD *)(a1 + 1184);
            ++v58;
          }
          while (v57 < (*(_QWORD *)(a1 + 1192) - v56) >> 2);
        }
        if ((_DWORD)v64 != *(unsigned __int16 *)(a1 + 1210))
        {
          v61 = __cxa_allocate_exception(0x10uLL);
          MEMORY[0x1D8271938](v61, "RawCameraException");
          __cxa_throw(v61, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
        }
      }
    }
    goto LABEL_89;
  }
}

void sub_1D52E2C6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_1D5285200((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52E2CEC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 1248);
}

void sub_1D52E2CF8(uint64_t a1, uint64_t a2, unsigned __int16 *a3)
{
  unsigned int v5;
  _DWORD *v6;
  int v7;
  unint64_t v8;
  _DWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _DWORD *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  _DWORD *v17;
  int v18;

  nullsub_6();
  v5 = *a3;
  if (v5 > 0x92)
  {
    if (v5 == 147)
    {
      if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) == 0 && a3[1] == 3)
        sub_1D52E3058(a1, (uint64_t)a3);
    }
    else if (v5 == 224 && a3[1] == 3)
    {
      sub_1D52E32A4(a1, (uint64_t)a3);
      v6 = *(_DWORD **)(a1 + 1184);
      if (v6 == *(_DWORD **)(a1 + 1192))
      {
        v7 = *(unsigned __int16 *)(a1 + 1210);
        v8 = *(_QWORD *)(a1 + 1200);
        if ((unint64_t)v6 >= v8)
        {
          v10 = v8 - (_QWORD)v6;
          v11 = v10 >> 1;
          if ((unint64_t)(v10 >> 1) <= 1)
            v11 = 1;
          if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFFCLL)
            v12 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v12 = v11;
          v13 = sub_1D5282BA0(a1 + 1200, v12);
          v14 = *(char **)(a1 + 1192);
          v15 = *(char **)(a1 + 1184);
          v17 = &v13[v16];
          *v13 = v7;
          v9 = v13 + 1;
          while (v14 != v15)
          {
            v18 = *((_DWORD *)v14 - 1);
            v14 -= 4;
            *--v13 = v18;
          }
          *(_QWORD *)(a1 + 1184) = v13;
          *(_QWORD *)(a1 + 1192) = v9;
          *(_QWORD *)(a1 + 1200) = v17;
          if (v15)
            operator delete(v15);
        }
        else
        {
          *v6 = v7;
          v9 = v6 + 1;
        }
        *(_QWORD *)(a1 + 1192) = v9;
      }
    }
  }
  else if (v5 == 1)
  {
    if (a3[1] == 3)
      sub_1D52E2E7C(a1, (uint64_t)a3);
  }
  else if (v5 == 16 && a3[1] == 4 && *((_DWORD *)a3 + 1) == 1)
  {
    *(_DWORD *)(a1 + 1180) = *((_DWORD *)a3 + 2);
  }
}

uint64_t sub_1D52E2E7C(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unsigned int v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  unsigned int v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD *v17;
  std::__shared_weak_count *v18;
  void *__p;
  std::__shared_weak_count *v20;
  int v21;
  uint64_t v22[3];

  sub_1D52917E4(a1, &__p);
  v21 = *(_DWORD *)(a2 + 8);
  sub_1D5282F74((int *)&v17, &v21);
  sub_1D5285164(v22, (uint64_t *)&__p, (uint64_t)&v17, 0);
  v4 = v20;
  if (v20)
  {
    p_shared_owners = (unint64_t *)&v20->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  sub_1D52917E4(a1, &__p);
  v7 = sub_1D528479C((uint64_t)__p);
  v8 = v20;
  if (v20)
  {
    v9 = (unint64_t *)&v20->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if ((v7 & 1) == 0 && (unsigned __int16)(v7 - 200) >= 0xFF39u)
  {
    sub_1D52917E4(a1, &v17);
    v11 = (v7 >> 1) - 1;
    v21 = (unsigned __int16)((v7 >> 1) - 1);
    sub_1D5284D2C(v17, (unsigned int *)&v21, (uint64_t *)&__p);
    v12 = v18;
    if (v18)
    {
      v13 = (unint64_t *)&v18->__shared_owners_;
      do
        v14 = __ldaxr(v13);
      while (__stlxr(v14 - 1, v13));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    v15 = (std::__shared_weak_count *)__p;
    if (v11 >= 0x2E)
    {
      *(_BYTE *)(a1 + 1248) = *((_WORD *)__p + 45) != 0;
LABEL_21:
      v20 = v15;
      operator delete(v15);
      return sub_1D5285200(v22);
    }
    if (__p)
      goto LABEL_21;
  }
  return sub_1D5285200(v22);
}

void sub_1D52E3010(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  sub_1D5282EB4((uint64_t)va);
  sub_1D5285200((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52E3058(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unsigned int v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  unsigned int v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  __int16 v15;
  void *__p;
  std::__shared_weak_count *v18;
  char v19;
  void *v20;
  std::__shared_weak_count *v21;
  uint64_t v22[3];
  void **p_p;

  sub_1D52917E4(a1, &v20);
  LODWORD(p_p) = *(_DWORD *)(a2 + 8);
  sub_1D5282F74((int *)&__p, (int *)&p_p);
  sub_1D5285164(v22, (uint64_t *)&v20, (uint64_t)&__p, 0);
  v4 = v21;
  if (v21)
  {
    p_shared_owners = (unint64_t *)&v21->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  sub_1D52917E4(a1, &v20);
  v7 = sub_1D528479C((uint64_t)v20);
  v8 = v21;
  if (v21)
  {
    v9 = (unint64_t *)&v21->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if ((v7 & 1) == 0 && (unsigned __int16)(v7 - 100) >= 0xFF9Eu)
  {
    v11 = (v7 >> 1) - 1;
    if (v7 >> 1 != 1)
    {
      sub_1D52917E4(a1, &__p);
      LODWORD(p_p) = (unsigned __int16)((v7 >> 1) - 1);
      sub_1D5284D2C(__p, (unsigned int *)&p_p, (uint64_t *)&v20);
      v12 = v18;
      if (v18)
      {
        v13 = (unint64_t *)&v18->__shared_owners_;
        do
          v14 = __ldaxr(v13);
        while (__stlxr(v14 - 1, v13));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      if (v11 >= 8)
      {
        v15 = *((_WORD *)v20 + 7);
        sub_1D52850A0(&__p, "IFD0:EXIF:MAKERNOTE:FILEINFO");
        p_p = &__p;
        *((_WORD *)sub_1D52E36EC((uint64_t **)(a1 + 1224), &__p, (uint64_t)&unk_1D544A5C4, (_OWORD **)&p_p) + 28) = v15;
        if (v19 < 0)
          operator delete(__p);
      }
      if (v20)
      {
        v21 = (std::__shared_weak_count *)v20;
        operator delete(v20);
      }
    }
  }
  return sub_1D5285200(v22);
}

void sub_1D52E322C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  if (a15 < 0)
    operator delete(__p);
  if (a16)
    operator delete(a16);
  sub_1D5285200(&a19);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52E32A4(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unsigned int v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  _QWORD *v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unsigned __int16 *v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  void *exception;
  unsigned int v24;
  _QWORD *v25;
  std::__shared_weak_count *v26;
  void *__p;
  std::__shared_weak_count *v28;
  int v29;
  uint64_t v30[3];

  sub_1D52917E4(a1, &__p);
  v29 = *(_DWORD *)(a2 + 8);
  sub_1D5282F74((int *)&v25, &v29);
  sub_1D5285164(v30, (uint64_t *)&__p, (uint64_t)&v25, 0);
  v4 = v28;
  if (v28)
  {
    p_shared_owners = (unint64_t *)&v28->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  sub_1D52917E4(a1, &__p);
  v7 = sub_1D528479C((uint64_t)__p);
  v8 = v28;
  if (v28)
  {
    v9 = (unint64_t *)&v28->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (v7 >= 9)
  {
    sub_1D52917E4(a1, &v25);
    v11 = v25;
    v24 = 8;
    sub_1D5285A24(&v29, &v24);
    sub_1D5284D2C(v11, (unsigned int *)&v29, (uint64_t *)&__p);
    v12 = v26;
    if (v26)
    {
      v13 = (unint64_t *)&v26->__shared_owners_;
      do
        v14 = __ldaxr(v13);
      while (__stlxr(v14 - 1, v13));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    v15 = (unsigned __int16 *)__p;
    v16 = *(unsigned __int16 *)__p;
    *(_WORD *)(a1 + 1210) = v16;
    v17 = v15[1];
    *(_WORD *)(a1 + 1212) = v17;
    v18 = v15[4];
    *(_WORD *)(a1 + 1214) = v18;
    v19 = v15[5];
    *(_WORD *)(a1 + 1216) = v19;
    v20 = v15[6];
    *(_WORD *)(a1 + 1218) = v20;
    v21 = v15[7];
    *(_WORD *)(a1 + 1220) = v21;
    if (v16 >> 4 >= 0x271
      || v17 >> 4 >= 0x271
      || v18 >= v16
      || v20 >= v16
      || v18 >= v20
      || v19 >= v17
      || v21 >= v17
      || v19 >= v21)
    {
      exception = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1D8271938](exception, "RawCameraException");
      __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
    }
    *(_BYTE *)(a1 + 1208) = 1;
    v28 = (std::__shared_weak_count *)v15;
    operator delete(v15);
  }
  return sub_1D5285200(v30);
}

void sub_1D52E358C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_1D5285200(&a16);
  _Unwind_Resume(a1);
}

BOOL sub_1D52E3618(uint64_t a1)
{
  uint64_t v2;
  void **v3;
  void **v4;
  void **v5;
  int v6;
  void *__p[2];
  char v10;

  v2 = a1 + 1224;
  sub_1D52850A0(__p, "IFD0:EXIF:MAKERNOTE:FILEINFO");
  v3 = sub_1D5294144(v2, __p);
  v4 = v3;
  v5 = (void **)(a1 + 1232);
  if (v5 == v3)
    v6 = 0;
  else
    v6 = *((unsigned __int16 *)v3 + 28);
  if (v10 < 0)
    operator delete(__p[0]);
  return v5 != v4 && v6 != 0;
}

void sub_1D52E369C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D52E36B8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 1180);
}

uint64_t sub_1D52E36C0(uint64_t a1)
{
  return a1 + 1184;
}

void sub_1D52E36C8(uint64_t a1)
{
  sub_1D52B7290(a1);
  JUMPOUT(0x1D8271ADCLL);
}

_OWORD *sub_1D52E36EC(uint64_t **a1, void **a2, uint64_t a3, _OWORD **a4)
{
  void **v6;
  _OWORD *v7;
  uint64_t **v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12;

  v6 = (void **)sub_1D52B3CFC((uint64_t)a1, &v12, a2);
  v7 = *v6;
  if (!*v6)
  {
    v8 = (uint64_t **)v6;
    v7 = operator new(0x40uLL);
    v9 = *a4;
    v10 = *((_QWORD *)*a4 + 2);
    v7[2] = **a4;
    *((_QWORD *)v7 + 6) = v10;
    v9[1] = 0;
    v9[2] = 0;
    *v9 = 0;
    *((_WORD *)v7 + 28) = 0;
    sub_1D528EFCC(a1, v12, v8, (uint64_t *)v7);
  }
  return v7;
}

void sub_1D52E37F8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1D52E3914(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

uint64_t sub_1D52E39C4(uint64_t a1, int a2, uint64_t *a3)
{
  _QWORD *v5;
  void **v6;
  int v7;
  int i;
  float v9;
  float v10;
  unint64_t v11;
  float *v12;
  float *v13;
  float *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  float *v20;
  int v21;

  v5 = (_QWORD *)sub_1D544098C(a1, a2);
  *v5 = &off_1E99755D0;
  v5[6] = 0;
  v6 = (void **)(v5 + 6);
  v5[7] = 0;
  v5[8] = 0;
  *(_DWORD *)(a1 + 12) = sub_1D52847F8(*a3);
  *(_DWORD *)(a1 + 16) = sub_1D52847F8(*a3);
  *(_DWORD *)(a1 + 20) = sub_1D52847F8(*a3);
  *(_DWORD *)(a1 + 24) = sub_1D52847F8(*a3);
  *(_DWORD *)(a1 + 28) = sub_1D52847F8(*a3);
  *(_DWORD *)(a1 + 32) = sub_1D52847F8(*a3);
  *(_DWORD *)(a1 + 36) = sub_1D52847F8(*a3);
  *(_DWORD *)(a1 + 40) = sub_1D52847F8(*a3);
  v7 = sub_1D52847F8(*a3);
  if (v7)
  {
    for (i = 0; i != v7; ++i)
    {
      v9 = sub_1D5284934(*a3);
      v10 = v9;
      v12 = *(float **)(a1 + 56);
      v11 = *(_QWORD *)(a1 + 64);
      if ((unint64_t)v12 >= v11)
      {
        v14 = (float *)*v6;
        v15 = ((char *)v12 - (_BYTE *)*v6) >> 2;
        v16 = v15 + 1;
        if ((unint64_t)(v15 + 1) >> 62)
          sub_1D5282B8C();
        v17 = v11 - (_QWORD)v14;
        if (v17 >> 1 > v16)
          v16 = v17 >> 1;
        if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFFCLL)
          v18 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v18 = v16;
        if (v18)
        {
          v19 = (char *)sub_1D5282BA0(a1 + 64, v18);
          v14 = *(float **)(a1 + 48);
          v12 = *(float **)(a1 + 56);
        }
        else
        {
          v19 = 0;
        }
        v20 = (float *)&v19[4 * v15];
        *v20 = v10;
        v13 = v20 + 1;
        while (v12 != v14)
        {
          v21 = *((_DWORD *)v12-- - 1);
          *((_DWORD *)v20-- - 1) = v21;
        }
        *(_QWORD *)(a1 + 48) = v20;
        *(_QWORD *)(a1 + 56) = v13;
        *(_QWORD *)(a1 + 64) = &v19[4 * v18];
        if (v14)
          operator delete(v14);
      }
      else
      {
        *v12 = v9;
        v13 = v12 + 1;
      }
      *(_QWORD *)(a1 + 56) = v13;
    }
  }
  return a1;
}

void sub_1D52E3B6C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void *v4;

  v4 = *v2;
  if (*v2)
  {
    *(_QWORD *)(v1 + 56) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

id sub_1D52E3B98(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const char *v29;
  uint64_t v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const char *v35;
  uint64_t v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  const char *v41;
  uint64_t v42;
  const char *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  const char *v47;
  uint64_t v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  const char *v53;
  uint64_t v54;
  const char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  const char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  double v64;
  _DWORD *v65;
  _DWORD *v66;
  void *v67;
  const char *v68;
  uint64_t v69;
  uint64_t v70;
  RAWOpcodeScalePerColumn *v71;
  const char *v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;

  objc_msgSend_dictionary(MEMORY[0x1E0C99E08], a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v7, *(unsigned int *)(a1 + 12), v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(v6, v11, (uint64_t)v10, (uint64_t)CFSTR("Top"), v12);

  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v13, *(unsigned int *)(a1 + 16), v14, v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(v6, v17, (uint64_t)v16, (uint64_t)CFSTR("Left"), v18);

  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v19, *(unsigned int *)(a1 + 20), v20, v21);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(v6, v23, (uint64_t)v22, (uint64_t)CFSTR("Bottom"), v24);

  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v25, *(unsigned int *)(a1 + 24), v26, v27);
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(v6, v29, (uint64_t)v28, (uint64_t)CFSTR("Right"), v30);

  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v31, *(unsigned int *)(a1 + 28), v32, v33);
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(v6, v35, (uint64_t)v34, (uint64_t)CFSTR("Plane"), v36);

  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v37, *(unsigned int *)(a1 + 32), v38, v39);
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(v6, v41, (uint64_t)v40, (uint64_t)CFSTR("Planes"), v42);

  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v43, *(unsigned int *)(a1 + 36), v44, v45);
  v46 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(v6, v47, (uint64_t)v46, (uint64_t)CFSTR("RowPitch"), v48);

  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v49, *(unsigned int *)(a1 + 40), v50, v51);
  v52 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(v6, v53, (uint64_t)v52, (uint64_t)CFSTR("ColPitch"), v54);

  objc_msgSend_array(MEMORY[0x1E0C99DE8], v55, v56, v57, v58);
  v63 = (void *)objc_claimAutoreleasedReturnValue();
  v65 = *(_DWORD **)(a1 + 48);
  v66 = *(_DWORD **)(a1 + 56);
  while (v65 != v66)
  {
    LODWORD(v64) = *v65;
    objc_msgSend_numberWithFloat_(MEMORY[0x1E0CB37E8], v59, v60, v61, v62, v64);
    v67 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_addObject_(v63, v68, (uint64_t)v67, v69, v70);

    ++v65;
  }
  objc_msgSend_setObject_forKeyedSubscript_(v6, v59, (uint64_t)v63, (uint64_t)CFSTR("Scale"), v62);
  v71 = [RAWOpcodeScalePerColumn alloc];
  v75 = (void *)objc_msgSend_initWithArguments_(v71, v72, (uint64_t)v6, v73, v74);

  return v75;
}

void sub_1D52E3DC0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

_QWORD *sub_1D52E3E14(_QWORD *a1)
{
  void *v2;

  *a1 = &off_1E99755D0;
  v2 = (void *)a1[6];
  if (v2)
  {
    a1[7] = v2;
    operator delete(v2);
  }
  return a1;
}

void sub_1D52E3E50(_QWORD *a1)
{
  void *v2;

  *a1 = &off_1E99755D0;
  v2 = (void *)a1[6];
  if (v2)
  {
    a1[7] = v2;
    operator delete(v2);
  }
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52E3E9C()
{
  return 13;
}

double sub_1D52E3EA4@<D0>(unsigned int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, double **a7@<X6>, _QWORD *a8@<X8>)
{
  char *v16;
  _QWORD *v17;
  double result;
  uint64_t v19;
  double *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double *v26;
  uint64_t v27;
  uint64_t v28;
  double *v29;
  unint64_t v30;
  double *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v16 = (char *)operator new(0x60uLL);
  v17 = v16;
  *((_QWORD *)v16 + 2) = 0;
  *(_QWORD *)v16 = &unk_1E9975618;
  *((_QWORD *)v16 + 1) = 0;
  result = 0.0;
  *(_OWORD *)(v16 + 24) = 0u;
  v19 = (uint64_t)(v16 + 24);
  *(_OWORD *)(v16 + 40) = 0u;
  *(_OWORD *)(v16 + 56) = 0u;
  *(_OWORD *)(v16 + 72) = 0u;
  *((_QWORD *)v16 + 11) = 0;
  *a8 = v16 + 24;
  a8[1] = v16;
  if (a1)
  {
    v36 = 0;
    sub_1D52E41B0((uint64_t)(v16 + 24), 1uLL, &v36);
    if (a7[1] == *a7)
      goto LABEL_32;
    v20 = (double *)v17[3];
    if ((double *)v17[4] == v20)
      goto LABEL_32;
    result = -**a7;
    *v20 = result;
    a1 = 1;
  }
  if (a2)
  {
    v36 = 0;
    sub_1D52E41B0(v19, 2uLL, &v36);
    v21 = a1;
    if (a1 >= (unint64_t)(a7[1] - *a7))
      goto LABEL_32;
    v22 = v17[3];
    if ((unint64_t)(v17[4] - v22) < 9)
      goto LABEL_32;
    ++a1;
    result = -(*a7)[v21];
    *(double *)(v22 + 8) = result;
  }
  if (a3)
  {
    v36 = 0;
    sub_1D52E41B0(v19, 3uLL, &v36);
    v23 = a1;
    if (a1 >= (unint64_t)(a7[1] - *a7))
      goto LABEL_32;
    v24 = v17[3];
    if ((unint64_t)(v17[4] - v24) < 0x11)
      goto LABEL_32;
    ++a1;
    result = -(*a7)[v23];
    *(double *)(v24 + 16) = result;
  }
  if (a4)
  {
    v36 = 0;
    sub_1D52E41B0((uint64_t)(v17 + 9), 1uLL, &v36);
    v25 = a1;
    if (a1 >= (unint64_t)(a7[1] - *a7))
      goto LABEL_32;
    v26 = (double *)v17[9];
    if ((double *)v17[10] == v26)
      goto LABEL_32;
    ++a1;
    result = -(*a7)[v25];
    *v26 = result;
  }
  if (a5)
  {
    v36 = 0;
    sub_1D52E41B0((uint64_t)(v17 + 9), 2uLL, &v36);
    v27 = a1;
    if (a1 >= (unint64_t)(a7[1] - *a7))
      goto LABEL_32;
    v28 = v17[9];
    if ((unint64_t)(v17[10] - v28) < 9)
      goto LABEL_32;
    ++a1;
    result = -(*a7)[v27];
    *(double *)(v28 + 8) = result;
  }
  if (!a6)
    return result;
  v36 = 0;
  sub_1D52E41B0((uint64_t)(v17 + 6), 4uLL, &v36);
  v29 = *a7;
  v30 = a7[1] - *a7;
  if (v30 <= a1)
    goto LABEL_32;
  v31 = (double *)v17[6];
  v32 = v17[7] - (_QWORD)v31;
  if (!v32
    || (v33 = a1 + 1, *v31 = -v29[a1], v30 <= v33)
    || v32 < 9
    || (v34 = a1 + 2, v31[1] = -v29[v33], v30 <= v34)
    || v32 < 0x11
    || (v35 = a1 + 3, v31[2] = -v29[v34], v30 <= v35)
    || v32 <= 0x18)
  {
LABEL_32:
    sub_1D528EAE0();
  }
  result = -v29[v35];
  v31[3] = result;
  return result;
}

void sub_1D52E4184(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1D5282EB4(v1);
  _Unwind_Resume(a1);
}

void sub_1D52E41B0(uint64_t a1, unint64_t a2, _QWORD *a3)
{
  unint64_t v3;

  v3 = (uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 3;
  if (a2 <= v3)
  {
    if (a2 < v3)
      *(_QWORD *)(a1 + 8) = *(_QWORD *)a1 + 8 * a2;
  }
  else
  {
    sub_1D52E41E0((void **)a1, a2 - v3, a3);
  }
}

void sub_1D52E41E0(void **a1, unint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *i;
  uint64_t v25;

  v8 = a1[2];
  v6 = (uint64_t)(a1 + 2);
  v7 = v8;
  v9 = *(_QWORD **)(v6 - 8);
  if (a2 <= (v8 - (_BYTE *)v9) >> 3)
  {
    if (a2)
    {
      v16 = 8 * a2;
      v17 = &v9[a2];
      do
      {
        *v9++ = *a3;
        v16 -= 8;
      }
      while (v16);
      v9 = v17;
    }
    a1[1] = v9;
  }
  else
  {
    v10 = (char *)v9 - (_BYTE *)*a1;
    v11 = a2 + (v10 >> 3);
    if (v11 >> 61)
      sub_1D5282B8C();
    v12 = v10 >> 3;
    v13 = v7 - (_BYTE *)*a1;
    if (v13 >> 2 > v11)
      v11 = v13 >> 2;
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8)
      v14 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v14 = v11;
    if (v14)
      v15 = (char *)sub_1D5282D28(v6, v14);
    else
      v15 = 0;
    v18 = &v15[8 * v12];
    v19 = &v18[8 * a2];
    v20 = 8 * a2;
    v21 = v18;
    do
    {
      *(_QWORD *)v21 = *a3;
      v21 += 8;
      v20 -= 8;
    }
    while (v20);
    v22 = &v15[8 * v14];
    v23 = (char *)*a1;
    for (i = (char *)a1[1]; i != v23; i -= 8)
    {
      v25 = *((_QWORD *)i - 1);
      *((_QWORD *)v18 - 1) = v25;
      v18 -= 8;
    }
    *a1 = v18;
    a1[1] = v19;
    a1[2] = v22;
    if (v23)
      operator delete(v23);
  }
}

void sub_1D52E42F0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9975618;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52E4304(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9975618;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

void sub_1D52E4338(uint64_t a1)
{
  sub_1D52E4344(a1 + 24);
}

void sub_1D52E4344(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = *(void **)(a1 + 48);
  if (v2)
  {
    *(_QWORD *)(a1 + 56) = v2;
    operator delete(v2);
  }
  v3 = *(void **)(a1 + 24);
  if (v3)
  {
    *(_QWORD *)(a1 + 32) = v3;
    operator delete(v3);
  }
  v4 = *(void **)a1;
  if (*(_QWORD *)a1)
  {
    *(_QWORD *)(a1 + 8) = v4;
    operator delete(v4);
  }
}

id sub_1D52E4398(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const char *v28;
  void *v29;
  const char *v30;
  uint64_t v31;
  void *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[11];
  _QWORD v43[2];

  v43[1] = *MEMORY[0x1E0C80C00];
  v5 = *MEMORY[0x1E0CBD388];
  v34 = *MEMORY[0x1E0CBD368];
  v35 = v5;
  v42[0] = MEMORY[0x1E0C9AAA0];
  v42[1] = CFSTR("com.canon.crw-raw-image");
  v6 = *MEMORY[0x1E0CBD380];
  v36 = *MEMORY[0x1E0CBD348];
  v42[2] = CFSTR(".crw.");
  v42[3] = &unk_1E99CAE78;
  v42[4] = &unk_1E99CAE90;
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], a2, (uint64_t)sub_1D52E464C, a4, a5, v34, v35, v36, v6, *MEMORY[0x1E0CBD370], *MEMORY[0x1E0CBD378]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v42[5] = v7;
  v37 = *MEMORY[0x1E0CBD330];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v8, (uint64_t)sub_1D52E4700, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v42[6] = v11;
  v38 = *MEMORY[0x1E0CBD350];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v12, (uint64_t)sub_1D52E470C, v13, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v42[7] = v15;
  v39 = *MEMORY[0x1E0CBD338];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v16, (uint64_t)sub_1D52E8DA4, v17, v18);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v42[8] = v19;
  v40 = *MEMORY[0x1E0CBD358];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v20, (uint64_t)sub_1D52E4718, v21, v22);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v42[9] = v23;
  v41 = *MEMORY[0x1E0CBD360];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v24, (uint64_t)sub_1D52E4724, v25, v26);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v42[10] = v27;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v28, (uint64_t)v42, (uint64_t)&v34, 11);
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v43[0] = v29;
  objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v30, (uint64_t)v43, 1, v31);
  v32 = (void *)objc_claimAutoreleasedReturnValue();

  return v32;
}

void sub_1D52E45EC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

BOOL sub_1D52E464C(_BYTE *a1, unint64_t a2)
{
  return a2 >= 0xE
      && *a1 == 73
      && a1[1] == 73
      && a1[2] == 26
      && !a1[3]
      && !a1[4]
      && !a1[5]
      && a1[6] == 72
      && a1[7] == 69
      && a1[8] == 65
      && a1[9] == 80
      && a1[10] == 67
      && a1[11] == 67
      && a1[12] == 68
      && a1[13] == 82;
}

void sub_1D52E4700(const void *a1, uint64_t a2, uint64_t a3)
{
  sub_1D52E7A20(a1, a2, a3, &unk_1E9975658);
}

uint64_t sub_1D52E470C(os_signpost_id_t a1)
{
  return sub_1D52E8C40(a1);
}

uint64_t sub_1D52E4718(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1D52E7438(a1, a2, a3, &unk_1E9975658);
}

uint64_t sub_1D52E4724(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1D52E9A7C(a1, a2, a3, &unk_1E9975658);
}

void sub_1D52E4730(uint64_t *a1@<X1>, char a2@<W2>, void *a3@<X3>, void *a4@<X4>, _OWORD *a5@<X8>)
{
  __int128 v8;
  id v9;
  id v10;
  char v11;

  v11 = a2;
  v10 = a3;
  v9 = a4;
  sub_1D52E710C(a1, &v11, &v10, &v9, &v8);
  *a5 = v8;

}

void sub_1D52E47AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{

  _Unwind_Resume(a1);
}

void sub_1D52E47C8(void **a1)
{
  char v2;
  char v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  void *v7;
  std::__shared_weak_count *v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  int v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  int v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  int v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  unsigned int v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  void *p_p;
  unsigned int v58;
  int v59;
  int v60;
  uint64_t v61;
  const void **v62;
  std::__shared_weak_count *v63;
  void *__p;
  std::__shared_weak_count *v65;
  char v66;

  sub_1D52917E4((uint64_t)a1, &__p);
  v2 = (**(uint64_t (***)(void *))__p)(__p);
  v3 = v2;
  v4 = v65;
  if (!v65)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v65->__shared_owners_;
  do
    v6 = __ldaxr(p_shared_owners);
  while (__stlxr(v6 - 1, p_shared_owners));
  if (!v6)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
    if ((v3 & 1) == 0)
      return;
  }
  else
  {
LABEL_5:
    if ((v2 & 1) == 0)
      return;
  }
  if (((*((uint64_t (**)(void **))*a1 + 7))(a1) & 1) == 0)
  {
    (*((void (**)(void **))*a1 + 50))(a1);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if (v7)
    {
      sub_1D52917E4((uint64_t)a1, &__p);
      v8 = v65;
      v9 = *((_QWORD *)__p + 5);
      if (v65)
      {
        v10 = (unint64_t *)&v65->__shared_owners_;
        do
          v11 = __ldaxr(v10);
        while (__stlxr(v11 - 1, v10));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
          std::__shared_weak_count::__release_weak(v8);
        }
      }
      if (v9)
      {
        sub_1D52917E4((uint64_t)a1, &v62);
        sub_1D52B1C58((uint64_t *)&__p, (uint64_t *)&v62);
        v12 = v63;
        if (v63)
        {
          v13 = (unint64_t *)&v63->__shared_owners_;
          do
            v14 = __ldaxr(v13);
          while (__stlxr(v14 - 1, v13));
          if (!v14)
          {
            ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
            std::__shared_weak_count::__release_weak(v12);
          }
        }
        sub_1D52917E4((uint64_t)a1, &v62);
        sub_1D540258C(v62[5], v7, a1[14]);
        v15 = v63;
        if (v63)
        {
          v16 = (unint64_t *)&v63->__shared_owners_;
          do
            v17 = __ldaxr(v16);
          while (__stlxr(v17 - 1, v16));
          if (!v17)
          {
            ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
            std::__shared_weak_count::__release_weak(v15);
          }
        }
        sub_1D5285200((uint64_t *)&__p);
        goto LABEL_25;
      }
      sub_1D52917E4((uint64_t)a1, &v62);
      (*((void (**)(void **__return_ptr))*v62 + 1))(&__p);
      v54 = v63;
      if (v63)
      {
        v55 = (unint64_t *)&v63->__shared_owners_;
        do
          v56 = __ldaxr(v55);
        while (__stlxr(v56 - 1, v55));
        if (!v56)
        {
          ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
          std::__shared_weak_count::__release_weak(v54);
        }
      }
      if (v66 < 0)
      {
        if (!v65)
        {
LABEL_101:
          operator delete(__p);
          goto LABEL_25;
        }
        p_p = __p;
      }
      else
      {
        if (!v66)
          goto LABEL_25;
        p_p = &__p;
      }
      sub_1D5402704((uint64_t)p_p, v7, a1[14]);
      if (v66 < 0)
        goto LABEL_101;
    }
LABEL_25:

  }
  v61 = 0;
  sub_1D52917E4((uint64_t)a1, &__p);
  LODWORD(v62) = 0;
  (*(void (**)(void *, const void ***, _QWORD))(*(_QWORD *)__p + 40))(__p, &v62, 0);
  v18 = v65;
  if (v65)
  {
    v19 = (unint64_t *)&v65->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  sub_1D52917E4((uint64_t)a1, &__p);
  v21 = sub_1D528479C((uint64_t)__p);
  v22 = v65;
  if (v65)
  {
    v23 = (unint64_t *)&v65->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
  }
  if (v21 == 18761 || v21 == 19789)
  {
    if (v21 == 19789)
      v25 = 2;
    else
      v25 = 1;
    sub_1D52917E4((uint64_t)a1, &__p);
    sub_1D52845EC((uint64_t)__p, v25);
    v26 = v65;
    if (v65)
    {
      v27 = (unint64_t *)&v65->__shared_owners_;
      do
        v28 = __ldaxr(v27);
      while (__stlxr(v28 - 1, v27));
      if (!v28)
      {
        ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
        std::__shared_weak_count::__release_weak(v26);
      }
    }
    (*((void (**)(void **, uint64_t))*a1 + 12))(a1, v25);
    (*((void (**)(void **, uint64_t))*a1 + 14))(a1, v25);
    (*((void (**)(void **, uint64_t))*a1 + 16))(a1, v25);
    sub_1D52917E4((uint64_t)a1, &__p);
    v60 = sub_1D52847F8((uint64_t)__p);
    v29 = v65;
    if (v65)
    {
      v30 = (unint64_t *)&v65->__shared_owners_;
      do
        v31 = __ldaxr(v30);
      while (__stlxr(v31 - 1, v30));
      if (!v31)
      {
        ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
        std::__shared_weak_count::__release_weak(v29);
      }
    }
    sub_1D52917E4((uint64_t)a1, &__p);
    (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)__p + 32))(__p, (char *)&v61 + 4, 4);
    v32 = v65;
    if (v65)
    {
      v33 = (unint64_t *)&v65->__shared_owners_;
      do
        v34 = __ldaxr(v33);
      while (__stlxr(v34 - 1, v33));
      if (!v34)
      {
        ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
        std::__shared_weak_count::__release_weak(v32);
      }
    }
    sub_1D52917E4((uint64_t)a1, &__p);
    (*(void (**)(void *, uint64_t *, uint64_t))(*(_QWORD *)__p + 32))(__p, &v61, 4);
    v35 = v65;
    if (v65)
    {
      v36 = (unint64_t *)&v65->__shared_owners_;
      do
        v37 = __ldaxr(v36);
      while (__stlxr(v37 - 1, v36));
      if (!v37)
      {
        ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
        std::__shared_weak_count::__release_weak(v35);
      }
    }
    if (HIDWORD(v61) == 1346454856 && (_DWORD)v61 == 1380205379)
    {
      sub_1D52917E4((uint64_t)a1, &__p);
      v39 = sub_1D52847F8((uint64_t)__p);
      v40 = v65;
      if (v65)
      {
        v41 = (unint64_t *)&v65->__shared_owners_;
        do
          v42 = __ldaxr(v41);
        while (__stlxr(v42 - 1, v41));
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
          std::__shared_weak_count::__release_weak(v40);
        }
      }
      if (v39 == 65538)
      {
        sub_1D52917E4((uint64_t)a1, &__p);
        LODWORD(v62) = 0;
        (*(void (**)(void *, const void ***, uint64_t))(*(_QWORD *)__p + 40))(__p, &v62, 2);
        v43 = v65;
        if (v65)
        {
          v44 = (unint64_t *)&v65->__shared_owners_;
          do
            v45 = __ldaxr(v44);
          while (__stlxr(v45 - 1, v44));
          if (!v45)
          {
            ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
            std::__shared_weak_count::__release_weak(v43);
          }
        }
        sub_1D5285B08(&v59, &v60);
        sub_1D52917E4((uint64_t)a1, &__p);
        LODWORD(v62) = (*(uint64_t (**)(void *))(*(_QWORD *)__p + 48))(__p);
        v58 = *sub_1D5290020(&v62, &v59);
        v46 = sub_1D52ADF28(&v58);
        v47 = v65;
        if (v65)
        {
          v48 = (unint64_t *)&v65->__shared_owners_;
          do
            v49 = __ldaxr(v48);
          while (__stlxr(v49 - 1, v48));
          if (!v49)
          {
            ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
            std::__shared_weak_count::__release_weak(v47);
          }
        }
        sub_1D52917E4((uint64_t)a1, &__p);
        (*(void (**)(void *, int *, _QWORD))(*(_QWORD *)__p + 40))(__p, &v59, 0);
        v50 = v65;
        if (v65)
        {
          v51 = (unint64_t *)&v65->__shared_owners_;
          do
            v52 = __ldaxr(v51);
          while (__stlxr(v52 - 1, v51));
          if (!v52)
          {
            ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
            std::__shared_weak_count::__release_weak(v50);
          }
        }
        v53 = sub_1D52ADF28((unsigned int *)&v59);
        sub_1D52E4F0C((uint64_t)a1, v53, v46, 1u);
      }
    }
  }
}

void sub_1D52E4E68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  void *v19;

  if (a19 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_1D52E4F0C(uint64_t a1, unsigned int a2, int a3, unsigned int a4)
{
  unsigned int v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  int v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unsigned int v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unsigned int v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unsigned int v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  int v36;
  uint64_t v37;
  __int16 v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  unsigned int v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  int v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  uint64_t v50;
  unsigned int v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  unint64_t v55;
  unsigned int v56;
  uint64_t v57;
  std::__shared_weak_count *v58;
  uint64_t v59;
  std::__shared_weak_count *v60;
  unsigned int v61;

  v61 = a2;
  sub_1D52917E4(a1, &v59);
  v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v59 + 16))(v59);
  v9 = v60;
  if (v60)
  {
    p_shared_owners = (unint64_t *)&v60->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (v8 > a2)
  {
    sub_1D52917E4(a1, &v57);
    v55 = v61 + a3 - 4;
    sub_1D5282FE0(&v56, &v55);
    sub_1D5285164(&v59, &v57, (uint64_t)&v56, 0);
    v12 = v58;
    if (v58)
    {
      v13 = (unint64_t *)&v58->__shared_owners_;
      do
        v14 = __ldaxr(v13);
      while (__stlxr(v14 - 1, v13));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    sub_1D52917E4(a1, &v57);
    v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v57 + 48))(v57);
    v16 = v58;
    if (v58)
    {
      v17 = (unint64_t *)&v58->__shared_owners_;
      do
        v18 = __ldaxr(v17);
      while (__stlxr(v18 - 1, v17));
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    sub_1D52917E4(a1, &v57);
    v19 = sub_1D52847F8(v57);
    v20 = v58;
    if (v58)
    {
      v21 = (unint64_t *)&v58->__shared_owners_;
      do
        v22 = __ldaxr(v21);
      while (__stlxr(v22 - 1, v21));
      if (!v22)
      {
        ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
        std::__shared_weak_count::__release_weak(v20);
      }
    }
    sub_1D52917E4(a1, &v57);
    LODWORD(v55) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v57 + 16))(v57);
    v23 = *sub_1D52B4588(&v55, &v61);
    v24 = v58;
    if (v58)
    {
      v25 = (unint64_t *)&v58->__shared_owners_;
      do
        v26 = __ldaxr(v25);
      while (__stlxr(v26 - 1, v25));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
        std::__shared_weak_count::__release_weak(v24);
      }
    }
    if (v19 >= v23)
      goto LABEL_74;
    if (a4 > 0xC)
      goto LABEL_74;
    v27 = v15;
    if (v15 - 2 < v61 + v19)
      goto LABEL_74;
    sub_1D52917E4(a1, &v57);
    v28 = v57;
    v56 = v61 + v19;
    sub_1D5282F74((int *)&v55, (int *)&v56);
    (*(void (**)(uint64_t, unint64_t *, _QWORD))(*(_QWORD *)v28 + 40))(v28, &v55, 0);
    v29 = v58;
    if (v58)
    {
      v30 = (unint64_t *)&v58->__shared_owners_;
      do
        v31 = __ldaxr(v30);
      while (__stlxr(v31 - 1, v30));
      if (!v31)
      {
        ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
        std::__shared_weak_count::__release_weak(v29);
      }
    }
    sub_1D52917E4(a1, &v57);
    v32 = sub_1D528479C(v57);
    v33 = v58;
    if (v58)
    {
      v34 = (unint64_t *)&v58->__shared_owners_;
      do
        v35 = __ldaxr(v34);
      while (__stlxr(v35 - 1, v34));
      if (!v35)
      {
        ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
        std::__shared_weak_count::__release_weak(v33);
      }
    }
    if (v19 + 10 * v32 + v61 + 2 > v27)
      goto LABEL_74;
    if (a4 == 1)
    {
      if ((unsigned __int16)(v32 - 3) < 8u)
      {
LABEL_45:
        v36 = 0;
        v37 = a4 + 1;
        do
        {
          sub_1D52917E4(a1, &v57);
          v38 = sub_1D528479C(v57);
          v39 = v58;
          if (v58)
          {
            v40 = (unint64_t *)&v58->__shared_owners_;
            do
              v41 = __ldaxr(v40);
            while (__stlxr(v41 - 1, v40));
            if (!v41)
            {
              ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
              std::__shared_weak_count::__release_weak(v39);
            }
          }
          v56 = 0;
          sub_1D52917E4(a1, &v57);
          v42 = sub_1D52847F8(v57);
          v43 = v58;
          if (v58)
          {
            v44 = (unint64_t *)&v58->__shared_owners_;
            do
              v45 = __ldaxr(v44);
            while (__stlxr(v45 - 1, v44));
            if (!v45)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
            }
          }
          v56 = v42;
          sub_1D52917E4(a1, &v57);
          v46 = sub_1D52847F8(v57);
          v47 = v58;
          if (v58)
          {
            v48 = (unint64_t *)&v58->__shared_owners_;
            do
              v49 = __ldaxr(v48);
            while (__stlxr(v49 - 1, v48));
            if (!v49)
            {
              ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
              std::__shared_weak_count::__release_weak(v47);
            }
          }
          if ((v38 & 0x3800) == 0x2800 || (v38 & 0x3800) == 0x3000)
          {
            v50 = v61 + v46;
            if (!__CFADD__(v61, v46))
            {
              sub_1D52917E4(a1, &v57);
              LODWORD(v55) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v57 + 16))(v57);
              v51 = *sub_1D52B4588(&v55, &v56);
              v52 = v58;
              if (v58)
              {
                v53 = (unint64_t *)&v58->__shared_owners_;
                do
                  v54 = __ldaxr(v53);
                while (__stlxr(v54 - 1, v53));
                if (!v54)
                {
                  ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
                  std::__shared_weak_count::__release_weak(v52);
                }
              }
              if (v51 >= v50 && (_DWORD)v50 != v61)
                sub_1D52E4F0C(a1, v50, v56, v37);
            }
          }
          else
          {
            sub_1D52E54DC(a1, v61, v38, v56, v46);
          }
          ++v36;
        }
        while (v32 > (unsigned __int16)v36);
      }
    }
    else if (v32 - 1 <= 0x31)
    {
      goto LABEL_45;
    }
LABEL_74:
    sub_1D5285200(&v59);
  }
}

void sub_1D52E5450(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_1D5282EB4((uint64_t)va);
  sub_1D5285200((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52E54DC(uint64_t a1, int a2, __int16 a3, unsigned int a4, int a5)
{
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  void *v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unsigned __int16 *v21;
  char v22;
  char v23;
  void *v24;
  void *v25;
  void *v26;
  int v27;
  uint64_t v28;
  float v29;
  float v30;
  float v31;
  unsigned int v32;
  int v33;
  int v34;
  int v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  __int16 v43;
  int v44;
  __int16 v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  _QWORD *v49;
  _OWORD *v50;
  _QWORD *v51;
  _OWORD *v52;
  void *v53;
  _QWORD *v54;
  uint64_t v55;
  void *v56;
  void *v58;
  char *v59;
  void *exception;
  void *v61;
  __int16 v62;
  void *__src[2];
  char v64;
  void *v65[2];
  uint64_t v66;
  void *__p[2];
  char v68;
  unint64_t v69;
  unsigned int v70;
  uint64_t v71[3];
  void **v72;

  sub_1D52917E4(a1, __p);
  sub_1D52B1C58(v71, (uint64_t *)__p);
  v10 = (std::__shared_weak_count *)__p[1];
  if (__p[1])
  {
    v11 = (unint64_t *)((char *)__p[1] + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if ((a3 & 0xC000) == 0x4000)
  {
    if ((a3 & 0x3FFF) == 0x1834)
      *(_DWORD *)(a1 + 504) = a4;
  }
  else
  {
    if ((a3 & 0xC000) != 0)
      return sub_1D5285200(v71);
    v70 = a2 + a5;
    if (__CFADD__(a2, a5))
      return sub_1D5285200(v71);
    sub_1D52917E4(a1, __p);
    v13 = __p[0];
    sub_1D5282F74((int *)v65, (int *)&v70);
    (*(void (**)(void *, void **, _QWORD))(*(_QWORD *)v13 + 40))(v13, v65, 0);
    v14 = (std::__shared_weak_count *)__p[1];
    if (__p[1])
    {
      v15 = (unint64_t *)((char *)__p[1] + 8);
      do
        v16 = __ldaxr(v15);
      while (__stlxr(v16 - 1, v15));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
        std::__shared_weak_count::__release_weak(v14);
      }
    }
    v17 = a3 & 0x3FFF;
    if (v17 <= 0x102F)
    {
      switch(a3 & 0x3FFF)
      {
        case 0x80A:
          if (a4 - 256 <= 0xFFFFFF00)
            goto LABEL_110;
          sub_1D52917E4(a1, __p);
          LODWORD(v65[0]) = a4;
          sub_1D52849DC((uint64_t)__p[0], (unsigned int *)v65, a1 + 512);
          sub_1D5282EB4((uint64_t)__p);
          v18 = a4;
          v19 = *(char *)(a1 + 535) < 0 ? *(_QWORD *)(a1 + 520) : *(unsigned __int8 *)(a1 + 535);
          if (v19 + 1 >= (unint64_t)a4)
            goto LABEL_110;
          sub_1D52917E4(a1, __p);
          if (*(char *)(a1 + 535) < 0)
            v55 = *(_QWORD *)(a1 + 520);
          else
            v55 = *(unsigned __int8 *)(a1 + 535);
          v56 = __p[0];
          v65[0] = (void *)(~v55 + v18);
          sub_1D528304C(__src, (unint64_t *)v65);
          sub_1D52849DC((uint64_t)v56, (unsigned int *)__src, a1 + 536);
          goto LABEL_105;
        case 0x80B:
          if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) != 0)
            return sub_1D5285200(v71);
          sub_1D52917E4(a1, __p);
          LODWORD(v65[0]) = a4;
          sub_1D52849DC((uint64_t)__p[0], (unsigned int *)v65, a1 + 560);
          goto LABEL_105;
        case 0x80C:
          if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) != 0)
            return sub_1D5285200(v71);
          sub_1D52917E4(a1, __p);
          LODWORD(v65[0]) = a4;
          sub_1D52849DC((uint64_t)__p[0], (unsigned int *)v65, a1 + 584);
          goto LABEL_105;
        case 0x80D:
          if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) != 0)
            return sub_1D5285200(v71);
          sub_1D52917E4(a1, __p);
          LODWORD(v65[0]) = a4;
          sub_1D52849DC((uint64_t)__p[0], (unsigned int *)v65, a1 + 608);
          goto LABEL_105;
        case 0x80E:
        case 0x80F:
        case 0x811:
        case 0x812:
        case 0x813:
        case 0x814:
        case 0x815:
          return sub_1D5285200(v71);
        case 0x810:
          if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) != 0)
            return sub_1D5285200(v71);
          sub_1D52917E4(a1, __p);
          LODWORD(v65[0]) = a4;
          sub_1D52849DC((uint64_t)__p[0], (unsigned int *)v65, a1 + 632);
          goto LABEL_105;
        case 0x816:
          if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) != 0)
            return sub_1D5285200(v71);
          sub_1D52917E4(a1, __p);
          LODWORD(v65[0]) = a4;
          sub_1D52849DC((uint64_t)__p[0], (unsigned int *)v65, a1 + 656);
          goto LABEL_105;
        case 0x817:
          if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) != 0)
            return sub_1D5285200(v71);
          sub_1D52917E4(a1, __p);
          LODWORD(v65[0]) = a4;
          sub_1D52849DC((uint64_t)__p[0], (unsigned int *)v65, a1 + 680);
          goto LABEL_105;
        default:
          if (v17 == 50)
          {
            if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) != 0)
              return sub_1D5285200(v71);
            v69 = a4 >> 1;
            sub_1D52917E4(a1, v65);
            v51 = v65[0];
            sub_1D528304C(__src, &v69);
            sub_1D5284D2C(v51, (unsigned int *)__src, (uint64_t *)__p);
            sub_1D5282EB4((uint64_t)v65);
            v65[1] = 0;
            v66 = 0;
            v65[0] = 0;
            sub_1D52BA100((char *)v65, (unsigned __int16 *)__p[0], (unsigned __int16 *)__p[1], ((char *)__p[1] - (char *)__p[0]) >> 1);
            sub_1D52850A0(__src, "CIFF:CanonColorInfo1");
            v72 = __src;
            v50 = sub_1D52BA2C8((uint64_t **)(a1 + 120), __src, (uint64_t)&unk_1D544A5C4, (_OWORD **)&v72);
            goto LABEL_91;
          }
          if (v17 == 4138)
          {
            v22 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1);
            v23 = a4 < 6 ? 1 : v22;
            if ((v23 & 1) == 0)
            {
              sub_1D52917E4(a1, __p);
              v24 = __p[0];
              v65[0] = (void *)(v70 + 2);
              sub_1D5282FE0(__src, (unint64_t *)v65);
              (*(void (**)(void *, void **, _QWORD))(*(_QWORD *)v24 + 40))(v24, __src, 0);
              sub_1D5282EB4((uint64_t)__p);
              sub_1D52917E4(a1, __p);
              *(_WORD *)(a1 + 772) = sub_1D528479C((uint64_t)__p[0]);
              sub_1D5282EB4((uint64_t)__p);
              sub_1D52917E4(a1, __p);
              *(_WORD *)(a1 + 774) = sub_1D528479C((uint64_t)__p[0]);
              sub_1D5282EB4((uint64_t)__p);
              if (a4 < 0x32)
              {
                if (a4 < 0x10)
                  return sub_1D5285200(v71);
              }
              else
              {
                sub_1D52917E4(a1, __p);
                v25 = __p[0];
                v65[0] = (void *)(v70 + 44);
                sub_1D5282FE0(__src, (unint64_t *)v65);
                (*(void (**)(void *, void **, _QWORD))(*(_QWORD *)v25 + 40))(v25, __src, 0);
                sub_1D5282EB4((uint64_t)__p);
                sub_1D52917E4(a1, __p);
                LODWORD(v25) = sub_1D52848D4((uint64_t)__p[0]);
                sub_1D5282EB4((uint64_t)__p);
                sub_1D52917E4(a1, __p);
                v26 = __p[0];
                v65[0] = (void *)(v70 + 48);
                sub_1D5282FE0(__src, (unint64_t *)v65);
                (*(void (**)(void *, void **, _QWORD))(*(_QWORD *)v26 + 40))(v26, __src, 0);
                sub_1D5282EB4((uint64_t)__p);
                sub_1D52917E4(a1, __p);
                v27 = sub_1D52848D4((uint64_t)__p[0]);
                v28 = sub_1D5282EB4((uint64_t)__p);
                v29 = sub_1D52E6518(v28, (int)v25);
                v30 = log2f(v29);
                if (v27)
                {
                  v29 = (float)v27 / 10.0;
                  v30 = log2f(v29);
                }
                v31 = -v30;
                sub_1D52850A0(__p, "CIFF");
                v65[0] = __p;
                *((double *)sub_1D52D8024((uint64_t **)(a1 + 312), __p, (uint64_t)&unk_1D544A5C4, (_OWORD **)v65) + 7) = v31;
                if (v68 < 0)
                  operator delete(__p[0]);
                sub_1D52850A0(__p, "CIFF");
                v65[0] = __p;
                *((double *)sub_1D52D8024((uint64_t **)(a1 + 288), __p, (uint64_t)&unk_1D544A5C4, (_OWORD **)v65) + 7) = v29;
                if (v68 < 0)
                  operator delete(__p[0]);
              }
              sub_1D52917E4(a1, __p);
              v58 = __p[0];
              v65[0] = (void *)(v70 + 14);
              sub_1D5282FE0(__src, (unint64_t *)v65);
              (*(void (**)(void *, void **, _QWORD))(*(_QWORD *)v58 + 40))(v58, __src, 0);
              sub_1D5282EB4((uint64_t)__p);
              sub_1D52917E4(a1, __p);
              LODWORD(v58) = sub_1D528479C((uint64_t)__p[0]);
              sub_1D5282EB4((uint64_t)__p);
              LODWORD(__src[0]) = (_DWORD)v58;
              sub_1D52850A0(__p, "CIFF:CanonShotInfo");
              v65[0] = __p;
              v59 = (char *)sub_1D52BA2C8((uint64_t **)(a1 + 168), __p, (uint64_t)&unk_1D544A5C4, (_OWORD **)v65);
              sub_1D5282A44(v59 + 56, (char *)__src, (uint64_t)__src + 4, 1uLL);
              if (v68 < 0)
              {
                v21 = (unsigned __int16 *)__p[0];
                goto LABEL_98;
              }
            }
          }
          break;
      }
      return sub_1D5285200(v71);
    }
    if ((a3 & 0x3FFFu) > 0x180F)
    {
      if ((a3 & 0x3FFFu) > 0x2004)
      {
        switch(v17)
        {
          case 0x2005u:
            if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) == 0)
            {
              *(_DWORD *)(a1 + 704) = v70;
              *(_DWORD *)(a1 + 708) = a4;
            }
            break;
          case 0x2007u:
            *(_DWORD *)(a1 + 748) = v70;
            *(_DWORD *)(a1 + 752) = a4;
            break;
          case 0x2008u:
            *(_DWORD *)(a1 + 756) = v70;
            *(_DWORD *)(a1 + 760) = a4;
            break;
        }
        return sub_1D5285200(v71);
      }
      if (v17 == 6160)
      {
        sub_1D52917E4(a1, __p);
        *(_DWORD *)(a1 + 736) = sub_1D52847F8((uint64_t)__p[0]);
        sub_1D5282EB4((uint64_t)__p);
        sub_1D52917E4(a1, __p);
        *(_DWORD *)(a1 + 740) = sub_1D52847F8((uint64_t)__p[0]);
        sub_1D5282EB4((uint64_t)__p);
        sub_1D52917E4(a1, __p);
        sub_1D52847F8((uint64_t)__p[0]);
        sub_1D5282EB4((uint64_t)__p);
        sub_1D52917E4(a1, __p);
        *(_DWORD *)(a1 + 744) = sub_1D52847F8((uint64_t)__p[0]);
      }
      else
      {
        if (v17 != 6197 || ((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) != 0)
          return sub_1D5285200(v71);
        sub_1D52917E4(a1, __p);
        *(_DWORD *)(a1 + 776) = sub_1D52847F8((uint64_t)__p[0]);
      }
LABEL_105:
      sub_1D5282EB4((uint64_t)__p);
      return sub_1D5285200(v71);
    }
    if ((a3 & 0x3FFFu) > 0x10A8)
    {
      if (v17 != 4265)
      {
        if (v17 != 4277)
          return sub_1D5285200(v71);
        if (a4 < 0xA)
          return sub_1D5285200(v71);
        sub_1D52917E4(a1, __p);
        v32 = sub_1D528479C((uint64_t)__p[0]);
        sub_1D5282EB4((uint64_t)__p);
        if (v32 < 0xA)
          return sub_1D5285200(v71);
        sub_1D52917E4(a1, __p);
        *(_WORD *)(a1 + 764) = sub_1D528479C((uint64_t)__p[0]);
        sub_1D5282EB4((uint64_t)__p);
        sub_1D52917E4(a1, __p);
        *(_WORD *)(a1 + 766) = sub_1D528479C((uint64_t)__p[0]);
        sub_1D5282EB4((uint64_t)__p);
        sub_1D52917E4(a1, __p);
        *(_WORD *)(a1 + 768) = sub_1D528479C((uint64_t)__p[0]);
        sub_1D5282EB4((uint64_t)__p);
        sub_1D52917E4(a1, __p);
        *(_WORD *)(a1 + 770) = sub_1D528479C((uint64_t)__p[0]);
        goto LABEL_105;
      }
      if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) != 0)
        return sub_1D5285200(v71);
      sub_1D52917E4(a1, __p);
      LODWORD(v65[0]) = 2;
      (*(void (**)(void *, void **, uint64_t))(*(_QWORD *)__p[0] + 40))(__p[0], v65, 1);
      sub_1D5282EB4((uint64_t)__p);
      if (a4 > 2)
      {
        v69 = (a4 - 2) >> 1;
        sub_1D52917E4(a1, v65);
        v49 = v65[0];
        sub_1D528304C(__src, &v69);
        sub_1D5284D2C(v49, (unsigned int *)__src, (uint64_t *)__p);
        sub_1D5282EB4((uint64_t)v65);
        v65[1] = 0;
        v66 = 0;
        v65[0] = 0;
        sub_1D52BA100((char *)v65, (unsigned __int16 *)__p[0], (unsigned __int16 *)__p[1], ((char *)__p[1] - (char *)__p[0]) >> 1);
        sub_1D52850A0(__src, "CIFF:ColorBalance");
        v72 = __src;
        v50 = sub_1D52BA2C8((uint64_t **)(a1 + 120), __src, (uint64_t)&unk_1D544A5C4, (_OWORD **)&v72);
LABEL_91:
        v52 = v50;
        v54 = (_QWORD *)v50 + 7;
        v53 = (void *)*((_QWORD *)v50 + 7);
        if (v53)
        {
          *((_QWORD *)v52 + 8) = v53;
          operator delete(v53);
          *v54 = 0;
          v54[1] = 0;
          v54[2] = 0;
        }
        *(_OWORD *)((char *)v52 + 56) = *(_OWORD *)v65;
        *((_QWORD *)v52 + 9) = v66;
        v65[1] = 0;
        v66 = 0;
        v65[0] = 0;
        if (v64 < 0)
        {
          operator delete(__src[0]);
          if (v65[0])
          {
            v65[1] = v65[0];
            operator delete(v65[0]);
          }
        }
        v21 = (unsigned __int16 *)__p[0];
        if (!__p[0])
          return sub_1D5285200(v71);
LABEL_97:
        __p[1] = v21;
LABEL_98:
        operator delete(v21);
        return sub_1D5285200(v71);
      }
LABEL_110:
      exception = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1D8271938](exception, "RawCameraException");
      __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
    }
    if (v17 != 4144)
    {
      if (v17 != 4145 || ((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) != 0)
        return sub_1D5285200(v71);
      if (a4 - 256 > 0xFFFFFF11)
      {
        sub_1D52917E4(a1, v65);
        v20 = v65[0];
        __src[0] = (void *)(a4 >> 1);
        sub_1D528304C(&v72, (unint64_t *)__src);
        sub_1D5284D2C(v20, (unsigned int *)&v72, (uint64_t *)__p);
        sub_1D5282EB4((uint64_t)v65);
        v21 = (unsigned __int16 *)__p[0];
        *(_DWORD *)(a1 + 712) = *((unsigned __int16 *)__p[0] + 1);
        *(_DWORD *)(a1 + 716) = v21[2];
        *(uint32x4_t *)(a1 + 720) = vmovl_u16(*(uint16x4_t *)(v21 + 5));
        goto LABEL_97;
      }
      goto LABEL_110;
    }
    if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) == 0)
    {
      sub_1D52917E4(a1, __p);
      sub_1D528479C((uint64_t)__p[0]);
      sub_1D5282EB4((uint64_t)__p);
      sub_1D52917E4(a1, __p);
      v33 = sub_1D528479C((uint64_t)__p[0]);
      sub_1D5282EB4((uint64_t)__p);
      LOWORD(v72) = v33;
      sub_1D52917E4(a1, __p);
      v34 = sub_1D528479C((uint64_t)__p[0]);
      sub_1D5282EB4((uint64_t)__p);
      LOWORD(v69) = v34;
      sub_1D52917E4(a1, __p);
      sub_1D528479C((uint64_t)__p[0]);
      sub_1D5282EB4((uint64_t)__p);
      sub_1D52917E4(a1, __p);
      sub_1D528479C((uint64_t)__p[0]);
      sub_1D5282EB4((uint64_t)__p);
      sub_1D52917E4(a1, __p);
      v35 = sub_1D528479C((uint64_t)__p[0]);
      sub_1D5282EB4((uint64_t)__p);
      if (v33 == 8 && v34 == 8 && (v35 == 12 || v35 == 10))
      {
        sub_1D530AEB8(0x80uLL, v65);
        v61 = v65[0];
        *(_OWORD *)__p = *(_OWORD *)v65;
        v65[0] = 0;
        v65[1] = 0;
        sub_1D5282EB4((uint64_t)v65);
        v36 = sub_1D52E658C((uint64_t)v61);
        v37 = 0;
        v38 = 0;
        v39 = 0;
        v40 = 0;
        v41 = 8;
        v42 = 8;
        do
        {
          if (v39 < v35)
          {
            sub_1D52917E4(a1, v65);
            v43 = sub_1D528479C((uint64_t)v65[0]);
            v44 = v40;
            v45 = word_1D5449468[v40 & 1];
            v46 = (std::__shared_weak_count *)v65[1];
            if (v65[1])
            {
              v47 = (unint64_t *)((char *)v65[1] + 8);
              do
                v48 = __ldaxr(v47);
              while (__stlxr(v48 - 1, v47));
              if (!v48)
              {
                v62 = v45;
                ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
                std::__shared_weak_count::__release_weak(v46);
                v45 = v62;
              }
            }
            v40 = v44 + 1;
            v38 = (v38 << 16) | (unsigned __int16)(v45 ^ v43);
            v39 += 16;
            v42 = (unsigned __int16)v69;
            v41 = (unsigned __int16)v72;
          }
          *(_WORD *)(v36 + 2 * v37) = (unint64_t)(v38 << -(uint64_t)v39) >> (64 - v35);
          v39 -= v35;
          ++v37;
        }
        while (v37 < v41 * v42);
        LODWORD(__src[0]) = 0;
        sub_1D52E7284(__p, (unsigned int *)__src, (unsigned __int16 *)&v69, (unsigned __int16 *)&v72, (unsigned __int16 *)&v72, v65);
        sub_1D5292548(a1 + 784, (__int128 *)v65);
        sub_1D5282EB4((uint64_t)v65);
        sub_1D5282EB4((uint64_t)__p);
      }
    }
  }
  return sub_1D5285200(v71);
}

void sub_1D52E62E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  if (a27 < 0)
    operator delete(__p);
  sub_1D5285200(&a31);
  _Unwind_Resume(a1);
}

float sub_1D52E6518(uint64_t a1, int a2)
{
  float result;
  int v3;
  __int16 *v4;
  uint64_t v5;
  int v6;
  unsigned int v7;
  int v8;

  result = 30.0;
  if (a2 >= -160)
  {
    if (a2 <= 384)
    {
      v3 = 0;
      v4 = &word_1D5449220;
      v5 = -61;
      do
      {
        v6 = *v4;
        v4 += 4;
        v7 = a2 - v6;
        if (a2 - v6 < 0)
          v7 = -v7;
        v8 = a2 - *((__int16 *)&unk_1D5449218 + 4 * v3);
        if (v8 < 0)
          v8 = *((__int16 *)&unk_1D5449218 + 4 * v3) - a2;
        if (v7 < v8)
          v3 = v5 + 62;
      }
      while (!__CFADD__(v5++, 1));
      return *((float *)&unk_1D5449218 + 2 * v3 + 1);
    }
    else
    {
      return 0.00025;
    }
  }
  return result;
}

uint64_t sub_1D52E658C(uint64_t a1)
{
  uint64_t result;
  void *exception;

  result = *(_QWORD *)(a1 + 16);
  if (!result)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return result;
}

void sub_1D52E65DC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D52E65F0(_DWORD *a1@<X0>, uint64_t a2@<X8>)
{
  int v4;
  int v5;
  int v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unsigned int v13;
  __int128 v14;
  int v15;
  __int128 v16;

  v4 = a1[186];
  if (v4 == 90)
    v5 = 6;
  else
    v5 = 1;
  if (v4 == 180)
    v5 = 3;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  if (v4 == 270)
    v6 = 8;
  else
    v6 = v5;
  *(_QWORD *)a2 = 0;
  sub_1D5282F74((int *)&v14, a1 + 187);
  v15 = a1[188];
  sub_1D5291E58((uint64_t)a1, (int *)&v14, (unsigned int *)&v15, v6, &v16);
  sub_1D5282F74(&v15, a1 + 189);
  v13 = a1[190];
  sub_1D5291E58((uint64_t)a1, &v15, &v13, v6, &v14);
  if ((_QWORD)v16)
    sub_1D52B0A7C((char **)a2, &v16);
  if ((_QWORD)v14)
    sub_1D52B0A7C((char **)a2, &v14);
  v7 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (*((_QWORD *)&v14 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v16 + 1);
  if (*((_QWORD *)&v16 + 1))
  {
    v11 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_1D52E6740(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_1D5282EB4((uint64_t)va);
  sub_1D5282E44((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52E6780(uint64_t a1)
{
  return *(unsigned int *)(a1 + 776);
}

char *sub_1D52E6788@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  if (result[535] < 0)
    return (char *)sub_1D5290130((_BYTE *)a2, *((void **)result + 64), *((_QWORD *)result + 65));
  *(_OWORD *)a2 = *((_OWORD *)result + 32);
  *(_QWORD *)(a2 + 16) = *((_QWORD *)result + 66);
  return result;
}

char *sub_1D52E67B8@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  if (result[559] < 0)
    return (char *)sub_1D5290130((_BYTE *)a2, *((void **)result + 67), *((_QWORD *)result + 68));
  *(_OWORD *)a2 = *(_OWORD *)(result + 536);
  *(_QWORD *)(a2 + 16) = *((_QWORD *)result + 69);
  return result;
}

unint64_t sub_1D52E67E8(uint64_t a1, const void **a2)
{
  int v3;
  const void *v4;
  const void **v5;
  int v6;
  int v7;
  unsigned int v9;
  const void *v11;
  unsigned int v12;
  unint64_t v13;
  double v14;
  double v15;
  double v16;

  v3 = *((char *)a2 + 23);
  if (v3 >= 0)
    v4 = (const void *)*((unsigned __int8 *)a2 + 23);
  else
    v4 = a2[1];
  if (v4 == (const void *)4)
  {
    if (v3 >= 0)
      v11 = a2;
    else
      v11 = *a2;
    if (memcmp(v11, "CIFF", 4uLL))
      return sub_1D529119C((void **)a1);
    v12 = *(unsigned __int16 *)(a1 + 774);
    *(double *)&v13 = exp2((double)v12 * 0.03125) * 100.0;
    v14 = *(double *)&v13 * 0.03125;
    LOWORD(v13) = *(_WORD *)(a1 + 772);
    v15 = exp2((double)v13 * 0.03125) * 100.0;
    v16 = 1000.0;
    if (v12 != 268)
      v16 = v14;
    return llround(v15 * v16 / 100.0);
  }
  else
  {
    if (v4 != (const void *)6)
      return sub_1D529119C((void **)a1);
    v5 = v3 >= 0 ? a2 : (const void **)*a2;
    v6 = *(_DWORD *)v5;
    v7 = *((unsigned __int16 *)v5 + 2);
    if (v6 != 1179011395 || v7 != 12918)
      return sub_1D529119C((void **)a1);
    v9 = *(unsigned __int16 *)(a1 + 774);
    if (v9 == 268)
      return 1000;
    else
      return llround(exp2((double)v9 * 0.03125) * 100.0 * 0.03125);
  }
}

uint64_t sub_1D52E6938()
{
  return 2492765332;
}

uint64_t sub_1D52E6944(uint64_t a1)
{
  return *(unsigned int *)(a1 + 704);
}

uint64_t sub_1D52E694C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 708);
}

uint64_t sub_1D52E6954(uint64_t a1)
{
  uint64_t v2;

  sub_1D5282DF0(&v2, *(_DWORD *)(a1 + 712), *(_DWORD *)(a1 + 716));
  return v2;
}

uint64_t sub_1D52E6980(_DWORD *a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v6;
  uint64_t v7;

  v1 = a1[180];
  v2 = a1[181];
  v3 = a1[182] - v1 + 1;
  v4 = a1[183] - v2 + 1;
  sub_1D5282DF0(&v6, v1, v2);
  sub_1D5282DF0(&v7, v3, v4);
  return v6;
}

void sub_1D52E69E8(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  uint64_t v15;
  int v16;
  unint64_t v17;
  unint64_t v18;
  __int128 v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  int v28;
  unint64_t v29;
  unint64_t v30;
  __int128 v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  char *v37;
  __int128 v38;
  uint64_t v39;
  int v40;
  unint64_t v41;
  unint64_t v42;
  __int128 v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  char *v48;
  char *v49;
  __int128 v50;
  uint64_t v51;
  int v52;
  unint64_t v53;
  unint64_t v54;
  __int128 v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  char *v60;
  char *v61;
  __int128 v62;
  uint64_t v63;
  int v64;
  void *__p[2];
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t *v71;
  char v72[16];
  char __s[16];
  char __str[16];
  uint64_t v75;

  v75 = *MEMORY[0x1E0C80C00];
  v4 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a1 + 440))(a1);
  snprintf(__str, 0x10uLL, "%u", a1[126]);
  snprintf(__s, 0x10uLL, "%d", v4);
  snprintf(v72, 0x10uLL, "%d", HIDWORD(v4));
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  sub_1D52850A0(__p, "crw");
  v5 = a2[2];
  v6 = a2[1];
  if (v6 >= v5)
  {
    v8 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v6 - *a2) >> 3);
    v9 = v8 + 1;
    if (v8 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v10 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *a2) >> 3);
    if (2 * v10 > v9)
      v9 = 2 * v10;
    if (v10 >= 0x555555555555555)
      v11 = 0xAAAAAAAAAAAAAAALL;
    else
      v11 = v9;
    v71 = a2 + 2;
    if (v11)
      v12 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v11);
    else
      v12 = 0;
    v13 = &v12[24 * v8];
    v67 = v12;
    v68 = v13;
    v70 = &v12[24 * v11];
    v14 = *(_OWORD *)__p;
    *((_QWORD *)v13 + 2) = v66;
    *(_OWORD *)v13 = v14;
    __p[1] = 0;
    v66 = 0;
    __p[0] = 0;
    v69 = v13 + 24;
    sub_1D5293D58(a2, &v67);
    v15 = a2[1];
    sub_1D5293F24((uint64_t)&v67);
    v16 = SHIBYTE(v66);
    a2[1] = v15;
    if (v16 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v7 = *(_OWORD *)__p;
    *(_QWORD *)(v6 + 16) = v66;
    *(_OWORD *)v6 = v7;
    a2[1] = v6 + 24;
  }
  sub_1D52850A0(__p, "canon");
  v18 = a2[1];
  v17 = a2[2];
  if (v18 >= v17)
  {
    v20 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v18 - *a2) >> 3);
    v21 = v20 + 1;
    if (v20 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v22 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v17 - *a2) >> 3);
    if (2 * v22 > v21)
      v21 = 2 * v22;
    if (v22 >= 0x555555555555555)
      v23 = 0xAAAAAAAAAAAAAAALL;
    else
      v23 = v21;
    v71 = a2 + 2;
    if (v23)
      v24 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v23);
    else
      v24 = 0;
    v25 = &v24[24 * v20];
    v67 = v24;
    v68 = v25;
    v70 = &v24[24 * v23];
    v26 = *(_OWORD *)__p;
    *((_QWORD *)v25 + 2) = v66;
    *(_OWORD *)v25 = v26;
    __p[1] = 0;
    v66 = 0;
    __p[0] = 0;
    v69 = v25 + 24;
    sub_1D5293D58(a2, &v67);
    v27 = a2[1];
    sub_1D5293F24((uint64_t)&v67);
    v28 = SHIBYTE(v66);
    a2[1] = v27;
    if (v28 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v19 = *(_OWORD *)__p;
    *(_QWORD *)(v18 + 16) = v66;
    *(_OWORD *)v18 = v19;
    a2[1] = v18 + 24;
  }
  sub_1D52850A0(__p, __str);
  v30 = a2[1];
  v29 = a2[2];
  if (v30 >= v29)
  {
    v32 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v30 - *a2) >> 3);
    v33 = v32 + 1;
    if (v32 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v34 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v29 - *a2) >> 3);
    if (2 * v34 > v33)
      v33 = 2 * v34;
    if (v34 >= 0x555555555555555)
      v35 = 0xAAAAAAAAAAAAAAALL;
    else
      v35 = v33;
    v71 = a2 + 2;
    if (v35)
      v36 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v35);
    else
      v36 = 0;
    v37 = &v36[24 * v32];
    v67 = v36;
    v68 = v37;
    v70 = &v36[24 * v35];
    v38 = *(_OWORD *)__p;
    *((_QWORD *)v37 + 2) = v66;
    *(_OWORD *)v37 = v38;
    __p[1] = 0;
    v66 = 0;
    __p[0] = 0;
    v69 = v37 + 24;
    sub_1D5293D58(a2, &v67);
    v39 = a2[1];
    sub_1D5293F24((uint64_t)&v67);
    v40 = SHIBYTE(v66);
    a2[1] = v39;
    if (v40 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v31 = *(_OWORD *)__p;
    *(_QWORD *)(v30 + 16) = v66;
    *(_OWORD *)v30 = v31;
    a2[1] = v30 + 24;
  }
  sub_1D52850A0(__p, __s);
  v42 = a2[1];
  v41 = a2[2];
  if (v42 >= v41)
  {
    v44 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v42 - *a2) >> 3);
    v45 = v44 + 1;
    if (v44 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v46 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v41 - *a2) >> 3);
    if (2 * v46 > v45)
      v45 = 2 * v46;
    if (v46 >= 0x555555555555555)
      v47 = 0xAAAAAAAAAAAAAAALL;
    else
      v47 = v45;
    v71 = a2 + 2;
    if (v47)
      v48 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v47);
    else
      v48 = 0;
    v49 = &v48[24 * v44];
    v67 = v48;
    v68 = v49;
    v70 = &v48[24 * v47];
    v50 = *(_OWORD *)__p;
    *((_QWORD *)v49 + 2) = v66;
    *(_OWORD *)v49 = v50;
    __p[1] = 0;
    v66 = 0;
    __p[0] = 0;
    v69 = v49 + 24;
    sub_1D5293D58(a2, &v67);
    v51 = a2[1];
    sub_1D5293F24((uint64_t)&v67);
    v52 = SHIBYTE(v66);
    a2[1] = v51;
    if (v52 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v43 = *(_OWORD *)__p;
    *(_QWORD *)(v42 + 16) = v66;
    *(_OWORD *)v42 = v43;
    a2[1] = v42 + 24;
  }
  sub_1D52850A0(__p, v72);
  v54 = a2[1];
  v53 = a2[2];
  if (v54 >= v53)
  {
    v56 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v54 - *a2) >> 3);
    v57 = v56 + 1;
    if (v56 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v58 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v53 - *a2) >> 3);
    if (2 * v58 > v57)
      v57 = 2 * v58;
    if (v58 >= 0x555555555555555)
      v59 = 0xAAAAAAAAAAAAAAALL;
    else
      v59 = v57;
    v71 = a2 + 2;
    if (v59)
      v60 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v59);
    else
      v60 = 0;
    v61 = &v60[24 * v56];
    v67 = v60;
    v68 = v61;
    v70 = &v60[24 * v59];
    v62 = *(_OWORD *)__p;
    *((_QWORD *)v61 + 2) = v66;
    *(_OWORD *)v61 = v62;
    __p[1] = 0;
    v66 = 0;
    __p[0] = 0;
    v69 = v61 + 24;
    sub_1D5293D58(a2, &v67);
    v63 = a2[1];
    sub_1D5293F24((uint64_t)&v67);
    v64 = SHIBYTE(v66);
    a2[1] = v63;
    if (v64 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v55 = *(_OWORD *)__p;
    *(_QWORD *)(v54 + 16) = v66;
    *(_OWORD *)v54 = v55;
    a2[1] = v54 + 24;
  }
}

void sub_1D52E6FC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  sub_1D5293F24((uint64_t)&a16);
  if (a15 < 0)
    operator delete(__p);
  sub_1D5293CCC((void ***)&__p);
  _Unwind_Resume(a1);
}

void sub_1D52E7034(uint64_t a1)
{
  sub_1D52E7058(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52E7058(uint64_t a1)
{
  *(_QWORD *)a1 = off_1E9975688;
  sub_1D5282EB4(a1 + 784);
  if (*(char *)(a1 + 703) < 0)
    operator delete(*(void **)(a1 + 680));
  if (*(char *)(a1 + 679) < 0)
    operator delete(*(void **)(a1 + 656));
  if (*(char *)(a1 + 655) < 0)
    operator delete(*(void **)(a1 + 632));
  if (*(char *)(a1 + 631) < 0)
    operator delete(*(void **)(a1 + 608));
  if (*(char *)(a1 + 607) < 0)
    operator delete(*(void **)(a1 + 584));
  if (*(char *)(a1 + 583) < 0)
    operator delete(*(void **)(a1 + 560));
  if (*(char *)(a1 + 559) < 0)
    operator delete(*(void **)(a1 + 536));
  if (*(char *)(a1 + 535) < 0)
    operator delete(*(void **)(a1 + 512));
  return sub_1D52B2308(a1);
}

void sub_1D52E710C(uint64_t *a1@<X1>, char *a2@<X2>, void **a3@<X3>, void **a4@<X4>, _QWORD *a5@<X8>)
{
  _QWORD *v10;

  v10 = operator new(0x338uLL);
  sub_1D52E718C((uint64_t)v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;
  sub_1D5285658((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1D52E7178(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52E718C(uint64_t a1, uint64_t *a2, char *a3, void **a4, void **a5)
{
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = &unk_1E9975928;
  *(_QWORD *)(a1 + 8) = 0;
  sub_1D5290574(a1 + 24, a2, *a3, *a4, *a5);
  *(_QWORD *)(a1 + 24) = off_1E9975688;
  *(_DWORD *)(a1 + 528) = -1;
  *(_OWORD *)(a1 + 808) = 0u;
  *(_OWORD *)(a1 + 536) = 0u;
  *(_OWORD *)(a1 + 552) = 0u;
  *(_OWORD *)(a1 + 568) = 0u;
  *(_OWORD *)(a1 + 584) = 0u;
  *(_OWORD *)(a1 + 600) = 0u;
  *(_OWORD *)(a1 + 616) = 0u;
  *(_OWORD *)(a1 + 632) = 0u;
  *(_OWORD *)(a1 + 648) = 0u;
  *(_OWORD *)(a1 + 664) = 0u;
  *(_OWORD *)(a1 + 680) = 0u;
  *(_OWORD *)(a1 + 696) = 0u;
  *(_OWORD *)(a1 + 712) = 0u;
  *(_OWORD *)(a1 + 728) = 0u;
  *(_OWORD *)(a1 + 744) = 0u;
  *(_OWORD *)(a1 + 760) = 0u;
  *(_OWORD *)(a1 + 776) = 0u;
  *(_OWORD *)(a1 + 788) = 0u;
  return a1;
}

void sub_1D52E7218(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52E722C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9975928;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52E7240(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9975928;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52E7274(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a1 + 24) + 16))(a1 + 24);
}

void sub_1D52E7284(_QWORD *a1@<X1>, unsigned int *a2@<X2>, unsigned __int16 *a3@<X3>, unsigned __int16 *a4@<X4>, unsigned __int16 *a5@<X5>, _QWORD *a6@<X8>)
{
  _QWORD *v12;

  v12 = operator new(0x58uLL);
  sub_1D52E7314(v12, a1, a2, a3, a4, a5);
  *a6 = v12 + 3;
  a6[1] = v12;
  sub_1D5285658((uint64_t)a6, v12 + 4, (uint64_t)(v12 + 3));
}

void sub_1D52E7300(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52E7314(_QWORD *a1, _QWORD *a2, unsigned int *a3, unsigned __int16 *a4, unsigned __int16 *a5, unsigned __int16 *a6)
{
  a1[2] = 0;
  *a1 = &unk_1E9975978;
  a1[1] = 0;
  sub_1D52E73B8((uint64_t)(a1 + 3), a2, a3, a4, a5, a6);
  return a1;
}

void sub_1D52E734C(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52E7360(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9975978;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52E7374(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9975978;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52E73A8(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_1D52E73B8(uint64_t a1, _QWORD *a2, unsigned int *a3, unsigned __int16 *a4, unsigned __int16 *a5, unsigned __int16 *a6)
{
  int v11;
  int v13;
  int v14;
  int v15;
  unsigned int v16;

  sub_1D5285A24(&v16, a3);
  v11 = *a4;
  v14 = *a5;
  v15 = v11;
  v13 = *a6;
  return sub_1D530D3FC(a1, a2, &v16, &v15, &v14, &v13);
}

uint64_t sub_1D52E7438(os_signpost_id_t a1, unint64_t a2, unint64_t a3, void *a4)
{
  id v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  _BOOL4 v12;
  NSObject *v13;
  NSObject *v14;
  void (**v15)(_QWORD);
  int v16;
  uint64_t v17;
  __int128 v18;
  std::__shared_weak_count *v19;
  unint64_t *p_shared_owners;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  const char *v29;
  void *exception;
  unsigned int v31;
  __int128 v32;
  unsigned int v33;
  _QWORD v34[7];
  BOOL v35;
  unint64_t v36;
  unint64_t v37;
  _BYTE buf[22];
  __int16 v39;
  const char *v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v37 = a2;
  v36 = a3;
  v5 = a4;
  CGImagePluginGetOptions();
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = v6;
  if (v6)
  {
    objc_msgSend_objectForKeyedSubscript_(v6, v7, (uint64_t)off_1EFF323A8, v8, v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = v11 != 0;

  }
  else
  {
    v12 = 0;
  }
  sub_1D52EB0C4();
  v13 = objc_claimAutoreleasedReturnValue();
  v14 = v13;
  if (a1 + 1 >= 2 && os_signpost_enabled(v13))
  {
    v29 = "NO";
    *(_DWORD *)buf = 134218498;
    if (v12)
      v29 = "YES";
    *(_QWORD *)&buf[4] = v37;
    *(_WORD *)&buf[12] = 2048;
    *(_QWORD *)&buf[14] = v36;
    v39 = 2080;
    v40 = v29;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v14, OS_SIGNPOST_INTERVAL_BEGIN, a1, "CGImagePluginInitRaw", "Index:%lu, ThumbSize:%lu, UseRawData:%s", buf, 0x20u);
  }

  v34[0] = MEMORY[0x1E0C809B0];
  v34[1] = 3221225472;
  v34[2] = sub_1D52E7924;
  v34[3] = &unk_1E99759B8;
  v34[4] = a1;
  v34[5] = v37;
  v34[6] = v36;
  v35 = v12;
  v15 = (void (**)(_QWORD))MEMORY[0x1D82721B4](v34);
  sub_1D528304C(&v32, &v37);
  sub_1D528304C(&v33, &v36);
  sub_1D52DE968(a1, (unsigned int *)&v32, &v33, v5, buf);
  if (!*(_QWORD *)buf)
    goto LABEL_32;
  v16 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)buf + 40))(*(_QWORD *)buf);
  v17 = **(_QWORD **)buf;
  if (v16)
  {
    if (((*(uint64_t (**)(void))v17)() & 1) == 0)
    {
LABEL_32:
      exception = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1D8271938](exception, "RawCameraException");
      goto LABEL_33;
    }
  }
  else
  {
    (*(void (**)(void))(v17 + 32))();
    if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)buf + 8))(*(_QWORD *)buf) & 1) == 0)
    {
      sub_1D528304C(&v33, &v37);
      sub_1D528304C(&v31, &v36);
      sub_1D52DE968(a1, &v33, &v31, v5, &v32);
      v18 = v32;
      v32 = 0uLL;
      v19 = *(std::__shared_weak_count **)&buf[8];
      *(_OWORD *)buf = v18;
      if (v19)
      {
        p_shared_owners = (unint64_t *)&v19->__shared_owners_;
        do
          v21 = __ldaxr(p_shared_owners);
        while (__stlxr(v21 - 1, p_shared_owners));
        if (!v21)
        {
          ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
          std::__shared_weak_count::__release_weak(v19);
        }
      }
      v22 = (std::__shared_weak_count *)*((_QWORD *)&v32 + 1);
      if (*((_QWORD *)&v32 + 1))
      {
        v23 = (unint64_t *)(*((_QWORD *)&v32 + 1) + 8);
        do
          v24 = __ldaxr(v23);
        while (__stlxr(v24 - 1, v23));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      if (!*(_QWORD *)buf || ((***(uint64_t (****)(_QWORD))buf)(*(_QWORD *)buf) & 1) == 0)
      {
        exception = __cxa_allocate_exception(0x10uLL);
        MEMORY[0x1D8271938](exception, "RawCameraException");
LABEL_33:
        __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
      }
    }
  }
  v25 = *(std::__shared_weak_count **)&buf[8];
  if (*(_QWORD *)&buf[8])
  {
    v26 = (unint64_t *)(*(_QWORD *)&buf[8] + 8);
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  v15[2](v15);

  return 1;
}

void sub_1D52E7800(_Unwind_Exception *exception_object, int a2)
{
  uint64_t v2;
  void *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  if (a2)
  {
    sub_1D5282EB4(v2 - 96);
    __cxa_begin_catch(exception_object);
    CGImagePluginGetProperties();
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = v4;
    if (v4)
    {
      objc_msgSend_objectForKeyedSubscript_(v4, v5, *MEMORY[0x1E0CBD210], v6, v7);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = v9;
      if (v9)
        objc_msgSend_removeObjectForKey_(v9, v10, (uint64_t)CFSTR("kCGImageSourceRawReconstructionMethodVersions"), v11, v12);

    }
    __cxa_end_catch();
    JUMPOUT(0x1D52E76B8);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D52E7924(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  os_signpost_id_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  __int16 v12;
  const char *v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  sub_1D52EB0C4();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = v2;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    v5 = *(_QWORD *)(a1 + 40);
    v6 = *(_QWORD *)(a1 + 48);
    if (*(_BYTE *)(a1 + 56))
      v7 = "YES";
    else
      v7 = "NO";
    v8 = 134218498;
    v9 = v5;
    v10 = 2048;
    v11 = v6;
    v12 = 2080;
    v13 = v7;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v3, OS_SIGNPOST_INTERVAL_END, v4, "CGImagePluginInitRaw", "Index:%lu, ThumbSize:%lu, UseRawData:%s", (uint8_t *)&v8, 0x20u);
  }

}

void sub_1D52E7A20(const void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  NSObject *v5;
  NSObject *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const char *v27;
  const char *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  const char *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  const char *v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  std::__shared_weak_count *i;
  uint8_t *v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unsigned int *v49;
  const char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int *v54;
  unint64_t *v55;
  unint64_t v56;
  void *v57;
  void *v58;
  uint64_t v59;
  const char *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  const char *v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  const char *v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  const char *v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  const char *v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  const char *v80;
  uint64_t v81;
  void *v82;
  unint64_t v83;
  const char *v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  const char *v88;
  uint64_t v89;
  const char *v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  const char *v94;
  uint64_t v95;
  const char *v96;
  uint64_t v97;
  uint64_t v98;
  const char *v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t *v102;
  unint64_t v103;
  uint64_t *v104;
  unint64_t v105;
  const char *v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  const char *v110;
  uint64_t v111;
  const char *v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  const char *v116;
  uint64_t v117;
  const char *v118;
  uint64_t v119;
  const char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  const char *v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  const char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  const char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  const char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unsigned int *v143;
  std::__shared_weak_count *v144;
  unint64_t *v145;
  unint64_t v146;
  void *v147;
  unint64_t *v148;
  unint64_t v149;
  void *v150;
  uint64_t v151;
  uint64_t v152;
  const char *v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  uint64_t v157;
  const char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  const char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  CGImageSource *v168;
  CFDictionaryRef v169;
  const char *v170;
  uint64_t v171;
  uint64_t v172;
  const char *v173;
  uint64_t v174;
  const char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t j;
  void *v180;
  const char *v181;
  uint64_t v182;
  uint64_t v183;
  const char *v184;
  uint64_t v185;
  uint64_t v186;
  void *v187;
  const char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  id v192;
  const char *v193;
  const char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t k;
  void *v201;
  const char *v202;
  uint64_t v203;
  const char *v204;
  uint64_t v205;
  uint64_t v206;
  const char *v207;
  uint64_t v208;
  uint64_t v209;
  const char *v210;
  uint64_t v211;
  uint64_t v212;
  const char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  const char *v217;
  uint64_t v218;
  uint64_t v219;
  const char *v220;
  uint64_t v221;
  uint64_t v222;
  std::__shared_weak_count *v223;
  unint64_t *v224;
  unint64_t v225;
  std::__shared_weak_count *v226;
  unint64_t *v227;
  unint64_t v228;
  void *v229;
  uint64_t v230;
  const char *v231;
  uint64_t v232;
  uint64_t v233;
  void *v234;
  void *v235;
  unint64_t v236;
  const char *v237;
  uint64_t v238;
  uint64_t v239;
  void *v240;
  const char *v241;
  const char *v242;
  uint64_t v243;
  uint64_t v244;
  const char *v245;
  uint64_t v246;
  uint64_t v247;
  const char *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  const char *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  const char *v256;
  uint64_t v257;
  uint64_t v258;
  void *v259;
  const char *v260;
  uint64_t v261;
  void *v262;
  void *v263;
  const char *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  const char *v269;
  uint64_t v270;
  uint64_t v271;
  std::__shared_weak_count *v272;
  unint64_t *v273;
  unint64_t v274;
  std::__shared_weak_count *v275;
  unint64_t *v276;
  unint64_t v277;
  std::__shared_weak_count *v278;
  unint64_t *v279;
  unint64_t v280;
  uint64_t v281;
  void *v282;
  void *v283;
  CGImageSource *cf;
  void *v285;
  void *context;
  void (**v287)(_QWORD);
  uint64_t v288;
  void *v289;
  void *v290;
  void (**v291)(_QWORD *__return_ptr);
  void *v292;
  CFDataRef data;
  std::__shared_weak_count *v294;
  uint64_t v295;
  id obj;
  void *v297;
  uint64_t v298;
  uint64_t v299;
  int v300;
  void *v301;
  __int128 v302;
  __int128 v303;
  __int128 v304;
  __int128 v305;
  __int128 v306;
  __int128 v307;
  __int128 v308;
  __int128 v309;
  int v310;
  uint8_t *v311;
  std::__shared_weak_count *v312;
  uint64_t v313;
  void *v314;
  std::__shared_weak_count *v315;
  unsigned int *v316;
  std::__shared_weak_count *v317;
  uint8_t buf[8];
  std::__shared_weak_count *v319;
  uint64_t v320;
  std::__shared_weak_count *v321;
  uint64_t v322;
  std::__shared_weak_count *v323;
  uint64_t v324;
  std::__shared_weak_count *v325;
  __int128 v326;
  _QWORD v327[5];
  void *v328;
  _QWORD v329[2];
  _QWORD v330[2];
  _BYTE v331[128];
  _BYTE v332[128];
  _QWORD v333[2];
  _QWORD v334[2];
  _QWORD v335[2];
  _QWORD v336[4];

  v336[2] = *MEMORY[0x1E0C80C00];
  v291 = a4;
  sub_1D52EB0C4();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if ((unint64_t)a1 + 1 >= 2 && os_signpost_enabled(v5))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v6, OS_SIGNPOST_INTERVAL_BEGIN, (os_signpost_id_t)a1, "CGImagePluginAddSourceProps", (const char *)&unk_1D548AF1A, buf, 2u);
  }

  v327[0] = MEMORY[0x1E0C809B0];
  v327[1] = 3221225472;
  v327[2] = sub_1D52E8BBC;
  v327[3] = &unk_1E996F870;
  v327[4] = a1;
  v287 = (void (**)(_QWORD))MEMORY[0x1D82721B4](v327);
  context = (void *)MEMORY[0x1D8272058]();
  objc_msgSend_dictionary(MEMORY[0x1E0C99E08], v7, v8, v9, v10);
  v290 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = sub_1D52843FC(a1, &v326);
  v300 = (*(uint64_t (**)(_QWORD, double))(*(_QWORD *)v326 + 48))(v326, v11);
  v291[2](&v324);
  if (v324)
  {
    v320 = 0;
    v321 = 0;
    sub_1D52B471C(&v320, buf);
    sub_1D5295614(&v324, (uint64_t *)buf, &v322);
    v12 = v319;
    if (v319)
    {
      p_shared_owners = (unint64_t *)&v319->__shared_owners_;
      do
        v14 = __ldaxr(p_shared_owners);
      while (__stlxr(v14 - 1, p_shared_owners));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    v15 = v321;
    if (v321)
    {
      v16 = (unint64_t *)&v321->__shared_owners_;
      do
        v17 = __ldaxr(v16);
      while (__stlxr(v17 - 1, v16));
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
    if (v322)
    {
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v322 + 32))(v322))
        CGImageSourceAddProperty();
      v18 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v322 + 408))(v322);
      v335[0] = CFSTR("Width");
      objc_msgSend_numberWithInt_(MEMORY[0x1E0CB37E8], v19, v18, v20, v21);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      v335[1] = CFSTR("Height");
      v336[0] = v22;
      objc_msgSend_numberWithInt_(MEMORY[0x1E0CB37E8], v23, HIDWORD(v18), v24, v25);
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      v336[1] = v26;
      objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v27, (uint64_t)v336, (uint64_t)v335, 2);
      v283 = (void *)objc_claimAutoreleasedReturnValue();

      CGImageSourceAddProperty();
      (*(void (**)(uint64_t))(*(_QWORD *)v322 + 456))(v322);
      v29 = (unint64_t)v28;
      v333[0] = CFSTR("Width");
      objc_msgSend_numberWithInt_(MEMORY[0x1E0CB37E8], v28, (uint64_t)v28, v30, v31);
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      v333[1] = CFSTR("Height");
      v334[0] = v32;
      objc_msgSend_numberWithInt_(MEMORY[0x1E0CB37E8], v33, HIDWORD(v29), v34, v35);
      v36 = (void *)objc_claimAutoreleasedReturnValue();
      v334[1] = v36;
      objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v37, (uint64_t)v334, (uint64_t)v333, 2);
      v281 = objc_claimAutoreleasedReturnValue();

      CGImageSourceAddProperty();
      (*(void (**)(uint8_t *__return_ptr))(*(_QWORD *)v322 + 288))(buf);
      if (v319 != *(std::__shared_weak_count **)buf)
      {
        objc_msgSend_array(MEMORY[0x1E0C99DE8], v38, v39, v40, v41);
        v42 = (void *)objc_claimAutoreleasedReturnValue();
        v43 = *(_QWORD *)buf;
        for (i = v319; (std::__shared_weak_count *)v43 != i; v43 += 16)
        {
          v45 = *(uint8_t **)v43;
          v46 = *(std::__shared_weak_count **)(v43 + 8);
          v311 = *(uint8_t **)v43;
          v312 = v46;
          if (v46)
          {
            v47 = (unint64_t *)&v46->__shared_owners_;
            do
              v48 = __ldxr(v47);
            while (__stxr(v48 + 1, v47));
          }
          if (v45)
          {
            v49 = (unsigned int *)__dynamic_cast(v45, (const struct __class_type_info *)&unk_1E997EBF0, (const struct __class_type_info *)&unk_1E997EC58, 0);
            if (v49)
            {
              v54 = v49;
              if (v46)
              {
                v55 = (unint64_t *)&v46->__shared_owners_;
                do
                  v56 = __ldxr(v55);
                while (__stxr(v56 + 1, v55));
              }
              v316 = v49;
              v317 = v46;
              objc_msgSend_dictionary(MEMORY[0x1E0C99E08], v50, v51, v52, v53, v281);
              v57 = (void *)objc_claimAutoreleasedReturnValue();
              v58 = (void *)MEMORY[0x1E0CB37E8];
              v59 = (*(uint64_t (**)(unsigned int *))(*(_QWORD *)v54 + 16))(v54);
              objc_msgSend_numberWithLongLong_(v58, v60, v59, v61, v62);
              v63 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend_setObject_forKeyedSubscript_(v57, v64, (uint64_t)v63, (uint64_t)CFSTR("JPEGOffset"), v65);

              v66 = (void *)MEMORY[0x1E0CB37E8];
              v67 = (*(uint64_t (**)(unsigned int *))(*(_QWORD *)v54 + 24))(v54);
              objc_msgSend_numberWithUnsignedLong_(v66, v68, v67, v69, v70);
              v71 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend_setObject_forKeyedSubscript_(v57, v72, (uint64_t)v71, (uint64_t)CFSTR("JPEGLength"), v73);

              v74 = (void *)MEMORY[0x1E0CB37E8];
              v75 = sub_1D5337D88((uint64_t)v54);
              objc_msgSend_numberWithInt_(v74, v76, v75, v77, v78);
              v79 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend_setObject_forKeyedSubscript_(v57, v80, (uint64_t)v79, (uint64_t)CFSTR("Width"), v81);

              v82 = (void *)MEMORY[0x1E0CB37E8];
              v83 = sub_1D5337D88((uint64_t)v54);
              objc_msgSend_numberWithInt_(v82, v84, HIDWORD(v83), v85, v86);
              v87 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend_setObject_forKeyedSubscript_(v57, v88, (uint64_t)v87, (uint64_t)CFSTR("Height"), v89);

              objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v90, v54[4], v91, v92);
              v93 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend_setObject_forKeyedSubscript_(v57, v94, (uint64_t)v93, (uint64_t)CFSTR("Orientation"), v95);

              if ((objc_msgSend_containsObject_(v42, v96, (uint64_t)v57, v97, v98) & 1) == 0)
                objc_msgSend_addObject_(v42, v99, (uint64_t)v57, v100, v101);

              if (v46)
              {
                v102 = (unint64_t *)&v46->__shared_owners_;
                do
                  v103 = __ldaxr(v102);
                while (__stlxr(v103 - 1, v102));
                if (!v103)
                {
                  ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
                  std::__shared_weak_count::__release_weak(v46);
                }
              }
            }
          }
          if (v312)
          {
            v104 = &v312->__shared_owners_;
            do
              v105 = __ldaxr((unint64_t *)v104);
            while (__stlxr(v105 - 1, (unint64_t *)v104));
            if (!v105)
            {
              ((void (*)(std::__shared_weak_count *))v312->__on_zero_shared)(v312);
              std::__shared_weak_count::__release_weak(v312);
            }
          }
        }
        CGImageSourceAddProperty();

      }
      objc_msgSend_dictionary(MEMORY[0x1E0C99E08], v38, v39, v40, v41, v281);
      v289 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_numberWithInt_(MEMORY[0x1E0CB37E8], v106, v29, v107, v108);
      v109 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_setObject_forKeyedSubscript_(v289, v110, (uint64_t)v109, (uint64_t)CFSTR("Width"), v111);

      objc_msgSend_numberWithInt_(MEMORY[0x1E0CB37E8], v112, HIDWORD(v29), v113, v114);
      v115 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_setObject_forKeyedSubscript_(v289, v116, (uint64_t)v115, (uint64_t)CFSTR("Height"), v117);

      objc_msgSend_setObject_forKeyedSubscript_(v289, v118, (uint64_t)CFSTR("kCGColorSpaceDisplayP3"), (uint64_t)CFSTR("NamedColorSpace"), v119);
      objc_msgSend_array(MEMORY[0x1E0C99DE8], v120, v121, v122, v123);
      v285 = (void *)objc_claimAutoreleasedReturnValue();
      (*(void (**)(uint64_t))(*(_QWORD *)v322 + 24))(v322);
      v127 = (void *)objc_claimAutoreleasedReturnValue();
      if (v127)
        objc_msgSend_addObjectsFromArray_(v285, v124, (uint64_t)v127, v125, v126);

      objc_msgSend_array(MEMORY[0x1E0C99DE8], v128, v129, v130, v131);
      v132 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_array(MEMORY[0x1E0C99DE8], v133, v134, v135, v136);
      v297 = (void *)objc_claimAutoreleasedReturnValue();
      v141 = *(_QWORD *)buf;
      v294 = v319;
      if (*(std::__shared_weak_count **)buf != v319)
      {
        v288 = v300;
        v142 = MEMORY[0x1E0C9AAB0];
        do
        {
          v143 = *(unsigned int **)v141;
          v144 = *(std::__shared_weak_count **)(v141 + 8);
          v295 = v141;
          v316 = *(unsigned int **)v141;
          v317 = v144;
          if (v144)
          {
            v145 = (unint64_t *)&v144->__shared_owners_;
            do
              v146 = __ldxr(v145);
            while (__stxr(v146 + 1, v145));
          }
          if (v143
            && (v147 = __dynamic_cast(v143, (const struct __class_type_info *)&unk_1E997EBF0, (const struct __class_type_info *)&unk_1E997EC58, 0)) != 0)
          {
            v314 = v147;
            v315 = v144;
            if (v144)
            {
              v148 = (unint64_t *)&v144->__shared_owners_;
              do
                v149 = __ldxr(v148);
              while (__stxr(v149 + 1, v148));
            }
            v313 = 0;
            v313 = (*(uint64_t (**)(void *))(*(_QWORD *)v147 + 16))(v147);
            if (v313 != v288)
            {
              sub_1D528594C(&v310, &v313);
              sub_1D5285164((uint64_t *)&v311, (uint64_t *)&v326, (uint64_t)&v310, 0);
              v150 = (void *)MEMORY[0x1E0C99DF0];
              v151 = (uint64_t)v314;
              v152 = (*(uint64_t (**)(void *))(*(_QWORD *)v314 + 24))(v314);
              objc_msgSend_dataWithLength_(v150, v153, v152, v154, v155);
              v156 = (void *)objc_claimAutoreleasedReturnValue();
              v157 = v326;
              data = objc_retainAutorelease(v156);
              v162 = objc_msgSend_mutableBytes(data, v158, v159, v160, v161);
              v167 = objc_msgSend_length(data, v163, v164, v165, v166);
              sub_1D5284728(v157, v162, v167);
              v168 = CGImageSourceCreateWithData(data, 0);
              if (v168)
              {
                cf = v168;
                v169 = CGImageSourceCopyProperties(v168, 0);
                v308 = 0u;
                v309 = 0u;
                v306 = 0u;
                v307 = 0u;
                v292 = v169;
                objc_msgSend_valueForKeyPath_(v169, v170, (uint64_t)CFSTR("{FileContents}.Images"), v171, v172);
                obj = (id)objc_claimAutoreleasedReturnValue();
                v174 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v173, (uint64_t)&v306, (uint64_t)v332, 16);
                if (v174)
                {
                  v298 = *(_QWORD *)v307;
                  do
                  {
                    v299 = v174;
                    for (j = 0; j != v299; ++j)
                    {
                      if (*(_QWORD *)v307 != v298)
                        objc_enumerationMutation(obj);
                      v180 = (void *)objc_msgSend_mutableCopy(*(void **)(*((_QWORD *)&v306 + 1) + 8 * j), v175, v176, v177, v178);
                      objc_msgSend_removeObjectForKey_(v180, v181, (uint64_t)CFSTR("ThumbnailImages"), v182, v183);
                      objc_msgSend_objectForKeyedSubscript_(v180, v184, (uint64_t)CFSTR("AuxiliaryData"), v185, v186);
                      v187 = (void *)objc_claimAutoreleasedReturnValue();
                      v301 = (void *)objc_msgSend_mutableCopy(v187, v188, v189, v190, v191);

                      objc_opt_class();
                      if ((objc_opt_isKindOfClass() & 1) != 0)
                      {
                        v304 = 0u;
                        v305 = 0u;
                        v302 = 0u;
                        v303 = 0u;
                        v192 = v301;
                        v198 = objc_msgSend_countByEnumeratingWithState_objects_count_(v192, v193, (uint64_t)&v302, (uint64_t)v331, 16);
                        if (v198)
                        {
                          v199 = *(_QWORD *)v303;
                          do
                          {
                            for (k = 0; k != v198; ++k)
                            {
                              if (*(_QWORD *)v303 != v199)
                                objc_enumerationMutation(v192);
                              v201 = (void *)objc_msgSend_mutableCopy(*(void **)(*((_QWORD *)&v302 + 1) + 8 * k), v194, v195, v196, v197);
                              objc_msgSend_setObject_forKeyedSubscript_(v201, v202, v142, (uint64_t)CFSTR("embeddedInThumbnail"), v203);
                              if ((objc_msgSend_containsObject_(v132, v204, (uint64_t)v201, v205, v206) & 1) == 0)
                                objc_msgSend_addObject_(v132, v207, (uint64_t)v201, v208, v209);

                            }
                            v198 = objc_msgSend_countByEnumeratingWithState_objects_count_(v192, v194, (uint64_t)&v302, (uint64_t)v331, 16);
                          }
                          while (v198);
                        }

                        objc_msgSend_removeObjectForKey_(v180, v210, (uint64_t)CFSTR("AuxiliaryData"), v211, v212);
                      }

                      if (objc_msgSend_count(v180, v213, v214, v215, v216)
                        && (objc_msgSend_containsObject_(v297, v217, (uint64_t)v180, v218, v219) & 1) == 0)
                      {
                        objc_msgSend_addObject_(v297, v220, (uint64_t)v180, v221, v222);
                      }

                    }
                    v174 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v175, (uint64_t)&v306, (uint64_t)v332, 16);
                  }
                  while (v174);
                }

                CFRelease(cf);
              }
              else
              {
                v329[0] = CFSTR("Width");
                v229 = (void *)MEMORY[0x1E0CB37E8];
                v230 = sub_1D5337D88(v151);
                objc_msgSend_numberWithInt_(v229, v231, v230, v232, v233);
                v234 = (void *)objc_claimAutoreleasedReturnValue();
                v330[0] = v234;
                v329[1] = CFSTR("Height");
                v235 = (void *)MEMORY[0x1E0CB37E8];
                v236 = sub_1D5337D88(v151);
                objc_msgSend_numberWithInt_(v235, v237, HIDWORD(v236), v238, v239);
                v240 = (void *)objc_claimAutoreleasedReturnValue();
                v330[1] = v240;
                objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v241, (uint64_t)v330, (uint64_t)v329, 2);
                v292 = (void *)objc_claimAutoreleasedReturnValue();

                if ((objc_msgSend_containsObject_(v297, v242, (uint64_t)v292, v243, v244) & 1) == 0)
                  objc_msgSend_addObject_(v297, v245, (uint64_t)v292, v246, v247);
              }

              sub_1D5285200((uint64_t *)&v311);
            }
          }
          else
          {
            v314 = 0;
            v315 = 0;
          }
          v223 = v315;
          if (v315)
          {
            v224 = (unint64_t *)&v315->__shared_owners_;
            do
              v225 = __ldaxr(v224);
            while (__stlxr(v225 - 1, v224));
            if (!v225)
            {
              ((void (*)(std::__shared_weak_count *))v223->__on_zero_shared)(v223);
              std::__shared_weak_count::__release_weak(v223);
            }
          }
          v226 = v317;
          if (v317)
          {
            v227 = (unint64_t *)&v317->__shared_owners_;
            do
              v228 = __ldaxr(v227);
            while (__stlxr(v228 - 1, v227));
            if (!v228)
            {
              ((void (*)(std::__shared_weak_count *))v226->__on_zero_shared)(v226);
              std::__shared_weak_count::__release_weak(v226);
            }
          }
          v141 = v295 + 16;
        }
        while ((std::__shared_weak_count *)(v295 + 16) != v294);
      }
      if (objc_msgSend_count(v297, v137, v138, v139, v140))
        objc_msgSend_setObject_forKeyedSubscript_(v289, v248, (uint64_t)v297, (uint64_t)CFSTR("ThumbnailImages"), v251);
      if (objc_msgSend_count(v132, v248, v249, v250, v251))
        objc_msgSend_addObjectsFromArray_(v285, v252, (uint64_t)v132, v254, v255);
      if (objc_msgSend_count(v285, v252, v253, v254, v255))
      {
        objc_msgSend_arrayWithArray_(MEMORY[0x1E0C99D20], v256, (uint64_t)v285, v257, v258);
        v259 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_setObject_forKeyedSubscript_(v289, v260, (uint64_t)v259, (uint64_t)CFSTR("AuxiliaryData"), v261);

      }
      v328 = v289;
      objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v256, (uint64_t)&v328, 1, v258);
      v262 = (void *)objc_claimAutoreleasedReturnValue();
      v263 = (void *)MEMORY[0x1E0CB37E8];
      v268 = objc_msgSend_count(v262, v264, v265, v266, v267);
      objc_msgSend_numberWithUnsignedInteger_(v263, v269, v268, v270, v271);
      CGImageSourceAddProperty();
      CGImageSourceAddProperty();

      v311 = buf;
      sub_1D5282E44((void ***)&v311);

    }
    v272 = v323;
    if (v323)
    {
      v273 = (unint64_t *)&v323->__shared_owners_;
      do
        v274 = __ldaxr(v273);
      while (__stlxr(v274 - 1, v273));
      if (!v274)
      {
        ((void (*)(std::__shared_weak_count *))v272->__on_zero_shared)(v272);
        std::__shared_weak_count::__release_weak(v272);
      }
    }
  }
  v275 = v325;
  if (v325)
  {
    v276 = (unint64_t *)&v325->__shared_owners_;
    do
      v277 = __ldaxr(v276);
    while (__stlxr(v277 - 1, v276));
    if (!v277)
    {
      ((void (*)(std::__shared_weak_count *))v275->__on_zero_shared)(v275);
      std::__shared_weak_count::__release_weak(v275);
    }
  }
  v278 = (std::__shared_weak_count *)*((_QWORD *)&v326 + 1);
  if (*((_QWORD *)&v326 + 1))
  {
    v279 = (unint64_t *)(*((_QWORD *)&v326 + 1) + 8);
    do
      v280 = __ldaxr(v279);
    while (__stlxr(v280 - 1, v279));
    if (!v280)
    {
      ((void (*)(std::__shared_weak_count *))v278->__on_zero_shared)(v278);
      std::__shared_weak_count::__release_weak(v278);
    }
  }

  objc_autoreleasePoolPop(context);
  v287[2](v287);

}

void sub_1D52E88E4(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,void **a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61,uint64_t a62,char a63)
{
  char a65;
  void *v65;
  void *v66;

  if (a2)
  {

    a47 = (void **)&a55;
    sub_1D5282E44(&a47);

    sub_1D5282EB4((uint64_t)&a61);
    sub_1D5282EB4((uint64_t)&a63);
    sub_1D5282EB4((uint64_t)&a65);

    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x1D52E8848);
  }
  _Unwind_Resume(a1);
}

void sub_1D52E8B98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  (*(void (**)(void))(a14 + 16))();
  JUMPOUT(0x1D52E8A1CLL);
}

void sub_1D52E8BBC(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  os_signpost_id_t v4;
  uint8_t v5[16];

  sub_1D52EB0C4();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = v2;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v3, OS_SIGNPOST_INTERVAL_END, v4, "CGImagePluginAddSourceProps", (const char *)&unk_1D548AF1A, v5, 2u);
  }

}

uint64_t sub_1D52E8C40(os_signpost_id_t a1)
{
  NSObject *v2;
  NSObject *v3;
  void (**v4)(void);
  _QWORD v6[5];
  uint8_t buf[16];

  sub_1D52EB0C4();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (a1 + 1 >= 2 && os_signpost_enabled(v2))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v3, OS_SIGNPOST_INTERVAL_BEGIN, a1, "CGImagePluginImageCount", (const char *)&unk_1D548AF1A, buf, 2u);
  }

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = sub_1D52E8D20;
  v6[3] = &unk_1E996F870;
  v6[4] = a1;
  v4 = (void (**)(void))MEMORY[0x1D82721B4](v6);
  v4[2]();

  return 1;
}

void sub_1D52E8D10(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1D52E8D20(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  os_signpost_id_t v4;
  uint8_t v5[16];

  sub_1D52EB0C4();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = v2;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v3, OS_SIGNPOST_INTERVAL_END, v4, "CGImagePluginImageCount", (const char *)&unk_1D548AF1A, v5, 2u);
  }

}

BOOL sub_1D52E8DA4(void *a1, void *a2)
{
  NSObject *v4;
  NSObject *v5;
  void (**v6)(_QWORD);
  id v7;
  id v8;
  _BOOL4 v9;
  _BOOL4 v10;
  _BOOL4 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BOOL4 v15;
  int v16;
  int v17;
  int v18;
  int v19;
  _BOOL8 v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  int v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  const char *v41;
  unsigned int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  const char *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  std::__shared_weak_count *v60;
  unint64_t *p_shared_owners;
  unint64_t v62;
  void *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  std::__shared_weak_count *v69;
  unint64_t *v70;
  unint64_t v71;
  void *v72;
  int v73;
  std::__shared_weak_count *v74;
  unint64_t *v75;
  unint64_t v76;
  std::__shared_weak_count *v77;
  unint64_t *v78;
  unint64_t v79;
  void *v80;
  void *v81;
  const char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  const char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (**v92)(_QWORD);
  _QWORD v93[2];
  uint64_t v94;
  std::__shared_weak_count *v95;
  uint64_t v96;
  std::__shared_weak_count *v97;
  _QWORD v98[2];
  uint64_t v99;
  std::__shared_weak_count *v100;
  uint8_t buf[8];
  std::__shared_weak_count *v102;
  _QWORD v103[6];

  sub_1D52EB0C4();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if ((unint64_t)a1 + 1 >= 2 && os_signpost_enabled(v4))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v5, OS_SIGNPOST_INTERVAL_BEGIN, (os_signpost_id_t)a1, "CGImagePluginCompareOptionsRaw", (const char *)&unk_1D548AF1A, buf, 2u);
  }

  v103[0] = MEMORY[0x1E0C809B0];
  v103[1] = 3221225472;
  v103[2] = sub_1D52E9694;
  v103[3] = &unk_1E996F870;
  v103[4] = a1;
  v6 = (void (**)(_QWORD))MEMORY[0x1D82721B4](v103);
  v7 = a1;
  v8 = a2;
  if (v7 == v8)
  {
    v20 = 1;
    goto LABEL_83;
  }
  v92 = v6;
  v9 = sub_1D5297D80(v7, off_1EFF323A0);
  v10 = sub_1D5297D80(v7, off_1EFF323A8);
  v11 = sub_1D5297D80(v8, off_1EFF323A0);
  v15 = sub_1D5297D80(v8, off_1EFF323A8);
  v16 = 0;
  v17 = !v10;
  if (v9 && (v17 & 1) == 0)
    v16 = sub_1D5297B04(v7, (const char *)off_1EFF323A8, v12, v13, v14);
  if (v9 && !v10)
    v16 = sub_1D5297B04(v7, (const char *)off_1EFF323A0, v12, v13, v14);
  if (((v9 | v17) & 1) == 0)
    v16 = sub_1D5297B04(v7, (const char *)off_1EFF323A8, v12, v13, v14);
  v18 = 0;
  v19 = !v15;
  if (v11 && (v19 & 1) == 0)
    v18 = sub_1D5297B04(v8, (const char *)off_1EFF323A8, v12, v13, v14);
  if (v11 && !v15)
    v18 = sub_1D5297B04(v8, (const char *)off_1EFF323A0, v12, v13, v14);
  if (((v11 | v19) & 1) == 0)
    v18 = sub_1D5297B04(v8, (const char *)off_1EFF323A8, v12, v13, v14);
  if (v16 != v18)
  {
    v20 = 0;
    v6 = v92;
    goto LABEL_83;
  }
  if (!sub_1D52E9718(v7, v8, CFSTR("kCGImageSourceAltMode"), 1)
    || !sub_1D52E9718(v7, v8, (void *)*MEMORY[0x1E0CBD200], 1))
  {
    goto LABEL_82;
  }
  v24 = *MEMORY[0x1E0CBD258];
  objc_msgSend_objectForKeyedSubscript_(v7, v21, *MEMORY[0x1E0CBD258], v22, v23);
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  v26 = sub_1D536BF40(v25);
  objc_msgSend_objectForKeyedSubscript_(v8, v27, v24, v28, v29);
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v92;
  LODWORD(v24) = sub_1D536BF40(v30);

  if (v26 != (_DWORD)v24)
  {
LABEL_52:
    v20 = 0;
    goto LABEL_83;
  }
  v34 = sub_1D5297AC0(v7, CFSTR("kCGImageSourceDisableVendorLensDistortionCorrection"), v31, v32, v33);
  if (v34 != sub_1D5297AC0(v8, CFSTR("kCGImageSourceDisableVendorLensDistortionCorrection"), v35, v36, v37)|| (v41 = (const char *)*MEMORY[0x1E0CBD290], v42 = sub_1D5297AC0(v7, (const char *)*MEMORY[0x1E0CBD290], v38, v39, v40), v43 = sub_1D5299618(v42), v47 = sub_1D5297AC0(v8, v41, v44, v45, v46), v43 != sub_1D5299618(v47)))
  {
LABEL_82:
    v20 = 0;
    v6 = v92;
    goto LABEL_83;
  }
  v51 = (const char *)*MEMORY[0x1E0CBD270];
  v6 = v92;
  sub_1D5297D18(v7, (const char *)*MEMORY[0x1E0CBD270], v48, v49, v50);
  v52 = (void *)objc_claimAutoreleasedReturnValue();
  v56 = v52;
  if (v52)
  {
    v99 = 0;
    v100 = 0;
    sub_1D52B47A0(v52, &v99, buf);
    v60 = v100;
    if (v100)
    {
      p_shared_owners = (unint64_t *)&v100->__shared_owners_;
      do
        v62 = __ldaxr(p_shared_owners);
      while (__stlxr(v62 - 1, p_shared_owners));
      if (!v62)
      {
        ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
        std::__shared_weak_count::__release_weak(v60);
      }
    }
  }
  else
  {
    sub_1D529EA84(v7, v51, v53, v54, v55);
    v63 = (void *)objc_claimAutoreleasedReturnValue();
    v98[0] = 0;
    v98[1] = 0;
    sub_1D52B4800(v63, v98, buf);
    sub_1D5282EB4((uint64_t)v98);

  }
  sub_1D5297D18(v8, v51, v57, v58, v59);
  v64 = (void *)objc_claimAutoreleasedReturnValue();
  v68 = v64;
  if (v64)
  {
    v94 = 0;
    v95 = 0;
    sub_1D52B47A0(v64, &v94, &v96);
    v69 = v95;
    if (v95)
    {
      v70 = (unint64_t *)&v95->__shared_owners_;
      do
        v71 = __ldaxr(v70);
      while (__stlxr(v71 - 1, v70));
      if (!v71)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
      }
    }
  }
  else
  {
    sub_1D529EA84(v8, v51, v65, v66, v67);
    v72 = (void *)objc_claimAutoreleasedReturnValue();
    v93[0] = 0;
    v93[1] = 0;
    sub_1D52B4800(v72, v93, &v96);
    sub_1D5282EB4((uint64_t)v93);

  }
  v73 = sub_1D52B4FD8(*(uint64_t *)buf, &v96);
  v74 = v97;
  if (v97)
  {
    v75 = (unint64_t *)&v97->__shared_owners_;
    do
      v76 = __ldaxr(v75);
    while (__stlxr(v76 - 1, v75));
    if (!v76)
    {
      ((void (*)(std::__shared_weak_count *))v74->__on_zero_shared)(v74);
      std::__shared_weak_count::__release_weak(v74);
    }
  }

  v77 = v102;
  if (v102)
  {
    v78 = (unint64_t *)&v102->__shared_owners_;
    do
      v79 = __ldaxr(v78);
    while (__stlxr(v79 - 1, v78));
    if (!v79)
    {
      ((void (*)(std::__shared_weak_count *))v77->__on_zero_shared)(v77);
      std::__shared_weak_count::__release_weak(v77);
    }
  }

  if (v73)
    goto LABEL_52;
  v80 = (void *)*MEMORY[0x1E0CBD210];
  sub_1D5297C60(v7, (void *)*MEMORY[0x1E0CBD210], 0);
  v81 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D5297C60(v8, v80, 0);
  v86 = (void *)objc_claimAutoreleasedReturnValue();
  if (v81 != v86 && (objc_msgSend_count(v81, v82, v83, v84, v85) || objc_msgSend_count(v86, v87, v88, v89, v90)))
  {
    if (sub_1D52E9718(v81, v86, (void *)*MEMORY[0x1E0CBD228], 0)
      && sub_1D52E97E4(v81, v86, (void *)*MEMORY[0x1E0CBD230])
      && sub_1D52E97E4(v81, v86, (void *)*MEMORY[0x1E0CBD220])
      && sub_1D52E97E4(v81, v86, (void *)*MEMORY[0x1E0CBD218])
      && sub_1D52E9718(v81, v86, (void *)*MEMORY[0x1E0CBD150], 0)
      && sub_1D52E97E4(v81, v86, (void *)*MEMORY[0x1E0CBD168]))
    {
      if (sub_1D52E97E4(v81, v86, (void *)*MEMORY[0x1E0CBD158])
        && sub_1D52E97E4(v81, v86, (void *)*MEMORY[0x1E0CBD160])
        && sub_1D52E97E4(v81, v86, (void *)*MEMORY[0x1E0CBD148])
        && sub_1D52E9718(v81, v86, (void *)*MEMORY[0x1E0CBD1F0], 0)
        && sub_1D52E98D4(v81, v86, off_1EFF323B0)
        && sub_1D52E97E4(v81, v86, off_1EFF323B8)
        && sub_1D52E97E4(v81, v86, off_1EFF323D8)
        && sub_1D52E97E4(v81, v86, off_1EFF323E0)
        && sub_1D52E9718(v81, v86, off_1EFF323E8, 0)
        && sub_1D52E97E4(v81, v86, off_1EFF323F0)
        && sub_1D52E97E4(v81, v86, off_1EFF32400)
        && sub_1D52E97E4(v81, v86, off_1EFF32408)
        && sub_1D52E97E4(v81, v86, off_1EFF32410)
        && sub_1D52E97E4(v81, v86, off_1EFF32418)
        && sub_1D52E97E4(v81, v86, off_1EFF32420))
      {
        v6 = v92;
        v20 = sub_1D52E97E4(v81, v86, off_1EFF32428);
      }
      else
      {
        v20 = 0;
        v6 = v92;
      }
    }
    else
    {
      v20 = 0;
    }
  }
  else
  {
    v20 = 1;
  }

LABEL_83:
  v6[2](v6);

  return v20;
}

void sub_1D52E965C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (**a9)(void), void *a10)
{
  void *v10;

  a9[2]();
  _Unwind_Resume(a1);
}

void sub_1D52E9694(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  os_signpost_id_t v4;
  uint8_t v5[16];

  sub_1D52EB0C4();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = v2;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v3, OS_SIGNPOST_INTERVAL_END, v4, "CGImagePluginCompareOptionsRaw", (const char *)&unk_1D548AF1A, v5, 2u);
  }

}

uint64_t sub_1D52E9718(void *a1, void *a2, void *a3, char a4)
{
  id v7;
  id v8;
  id v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v7 = a1;
  v8 = a2;
  v9 = a3;
  v10 = sub_1D5297D80(v7, v9);
  if ((v10 ^ sub_1D5297D80(v8, v9)) != 1 || (a4 & 1) != 0)
  {
    v15 = sub_1D5297B04(v7, (const char *)v9, v11, v12, v13);
    v14 = v15 ^ sub_1D5297B04(v8, (const char *)v9, v16, v17, v18) ^ 1;
  }
  else
  {
    v14 = 0;
  }

  return v14;
}

void sub_1D52E97CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

BOOL sub_1D52E97E4(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  v8 = sub_1D5297D80(v5, v7);
  if (v8 == sub_1D5297D80(v6, v7))
  {
    v13 = sub_1D52EAE10(v5, (const char *)v7, v9, v10, v11);
    v17 = sub_1D52EAE10(v6, (const char *)v7, v14, v15, v16);
    v12 = vabdd_f64(v13, v17) / fmax(fabs(v13), fmax(fabs(v17), 0.001)) < 0.0000001;
  }
  else
  {
    v12 = 0;
  }

  return v12;
}

void sub_1D52E98B4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

BOOL sub_1D52E98D4(void *a1, void *a2, void *a3)
{
  id v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _BOOL8 v20;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  double v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  const char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  double v51;

  v5 = a2;
  v6 = a3;
  sub_1D52EAE5C(a1, v6, v7, v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D52EAE5C(v5, v6, v11, v12, v13);
  v14 = objc_claimAutoreleasedReturnValue();
  v19 = (void *)v14;
  if (v10 == (void *)v14)
  {
    v20 = 1;
  }
  else
  {
    v20 = 0;
    if (v10 && v14)
    {
      v21 = objc_msgSend_count(v10, v15, v16, v17, v18);
      if (v21 == objc_msgSend_count(v19, v22, v23, v24, v25))
      {
        v30 = 0;
        do
        {
          v31 = objc_msgSend_count(v10, v26, v27, v28, v29);
          v20 = v30 >= v31;
          if (v30 >= v31)
            break;
          objc_msgSend_objectAtIndexedSubscript_(v10, v32, v30, v33, v34);
          v35 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_doubleValue(v35, v36, v37, v38, v39);
          v41 = v40;

          objc_msgSend_objectAtIndexedSubscript_(v19, v42, v30, v43, v44);
          v45 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_doubleValue(v45, v46, v47, v48, v49);
          v51 = v50;

          ++v30;
        }
        while (vabdd_f64(v41, v51) / fmax(fabs(v41), fmax(fabs(v51), 0.001)) <= 0.0000001);
      }
      else
      {
        v20 = 0;
      }
    }
  }

  return v20;
}

void sub_1D52E9A34(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

uint64_t sub_1D52E9A7C(os_signpost_id_t a1, unint64_t a2, unint64_t a3, void *a4)
{
  id v5;
  NSObject *v6;
  NSObject *v7;
  void (**v8)(_QWORD);
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  unsigned int v14;
  unsigned int v15;
  uint8_t buf[8];
  std::__shared_weak_count *v17;
  _QWORD v18[5];
  unint64_t v19;
  unint64_t v20;

  v19 = a3;
  v20 = a2;
  v5 = a4;
  sub_1D52EB0C4();
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = v6;
  if (a1 + 1 >= 2 && os_signpost_enabled(v6))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v7, OS_SIGNPOST_INTERVAL_BEGIN, a1, "CGImagePluginInitThumbnail", (const char *)&unk_1D548AF1A, buf, 2u);
  }

  v18[0] = MEMORY[0x1E0C809B0];
  v18[1] = 3221225472;
  v18[2] = sub_1D52E9C50;
  v18[3] = &unk_1E996F870;
  v18[4] = a1;
  v8 = (void (**)(_QWORD))MEMORY[0x1D82721B4](v18);
  sub_1D528304C(&v15, &v20);
  sub_1D528304C(&v14, &v19);
  sub_1D52DE9E8(a1, &v15, &v14, v5, buf);
  if (*(_QWORD *)buf)
    v9 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)buf + 8))(*(_QWORD *)buf);
  else
    v9 = 0;
  v10 = v17;
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v8[2](v8);

  return v9;
}

void sub_1D52E9BF0(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_1D5282EB4((uint64_t)va);
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1D52E9B78);
}

void sub_1D52E9C38()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(v0 + 16))(v0);
  JUMPOUT(0x1D52E9C04);
}

void sub_1D52E9C50(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  os_signpost_id_t v4;
  uint8_t v5[16];

  sub_1D52EB0C4();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = v2;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v3, OS_SIGNPOST_INTERVAL_END, v4, "CGImagePluginInitThumbnail", (const char *)&unk_1D548AF1A, v5, 2u);
  }

}

id sub_1D52E9CD4(os_signpost_id_t a1, unint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  NSObject *v8;
  NSObject *v9;
  void (**v10)(_QWORD);
  void *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  uint8_t buf[8];
  std::__shared_weak_count *v20;
  _QWORD v21[5];
  unint64_t v22;

  v22 = a2;
  v6 = a3;
  v7 = a4;
  sub_1D52EB0C4();
  v8 = objc_claimAutoreleasedReturnValue();
  v9 = v8;
  if (a1 + 1 >= 2 && os_signpost_enabled(v8))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v9, OS_SIGNPOST_INTERVAL_BEGIN, a1, "CGImagePluginCopyAuxiliaryDataInfo", (const char *)&unk_1D548AF1A, buf, 2u);
  }

  v21[0] = MEMORY[0x1E0C809B0];
  v21[1] = 3221225472;
  v21[2] = sub_1D52E9ED0;
  v21[3] = &unk_1E996F870;
  v21[4] = a1;
  v10 = (void (**)(_QWORD))MEMORY[0x1D82721B4](v21);
  sub_1D528304C(&v18, &v22);
  v16 = 0;
  sub_1D5285A24(&v17, &v16);
  sub_1D52DE968(a1, &v18, &v17, v7, buf);
  if (*(_QWORD *)buf)
  {
    (*(void (**)(_QWORD, id))(**(_QWORD **)buf + 16))(*(_QWORD *)buf, v6);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v11 = 0;
  }
  v12 = v20;
  if (v20)
  {
    p_shared_owners = (unint64_t *)&v20->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v10[2](v10);

  return v11;
}

void sub_1D52E9E6C(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_1D5282EB4((uint64_t)va);
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1D52E9DECLL);
}

void sub_1D52E9EB8()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(v0 + 16))(v0);
  JUMPOUT(0x1D52E9E80);
}

void sub_1D52E9ED0(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  os_signpost_id_t v4;
  uint8_t v5[16];

  sub_1D52EB0C4();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = v2;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v3, OS_SIGNPOST_INTERVAL_END, v4, "CGImagePluginCopyAuxiliaryDataInfo", (const char *)&unk_1D548AF1A, v5, 2u);
  }

}

void *CopyRawPluginsInfoArray(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  const char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  const char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  const char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  const char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  const char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  const char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  const char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  const char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  const char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  const char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  const char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  const char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  const char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  const char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  const char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  const char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  const char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  const char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  const char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  const char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  const char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  const char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  const char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  void *v145;
  const char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  const char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void *v154;
  const char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  const char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  void *v163;
  const char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  const char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  void *v172;
  const char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  const char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  void *v181;
  const char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  const char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  void *v190;
  const char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  const char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  void *v199;
  const char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  const char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  void *v208;
  const char *v209;
  uint64_t v210;
  uint64_t v211;

  objc_msgSend_array(MEMORY[0x1E0C99DE8], a2, a3, a4, a5);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1D52DD728((uint64_t)v5, v6, v7, v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObjectsFromArray_(v5, v11, (uint64_t)v10, v12, v13);

  sub_1D52F6148(v14, v15, v16, v17, v18);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObjectsFromArray_(v5, v20, (uint64_t)v19, v21, v22);

  sub_1D52B6EA4(v23, v24, v25, v26, v27);
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObjectsFromArray_(v5, v29, (uint64_t)v28, v30, v31);

  sub_1D52C6C94(v32, v33, v34, v35, v36);
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObjectsFromArray_(v5, v38, (uint64_t)v37, v39, v40);

  sub_1D52F349C(v41, v42, v43, v44, v45);
  v46 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObjectsFromArray_(v5, v47, (uint64_t)v46, v48, v49);

  sub_1D5307B28(v50, v51, v52, v53, v54);
  v55 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObjectsFromArray_(v5, v56, (uint64_t)v55, v57, v58);

  sub_1D530945C(v59, v60, v61, v62, v63);
  v64 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObjectsFromArray_(v5, v65, (uint64_t)v64, v66, v67);

  sub_1D539521C(v68, v69, v70, v71, v72);
  v73 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObjectsFromArray_(v5, v74, (uint64_t)v73, v75, v76);

  sub_1D52F11D0(v77, v78, v79, v80, v81);
  v82 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObjectsFromArray_(v5, v83, (uint64_t)v82, v84, v85);

  sub_1D53B27E4(v86, v87, v88, v89, v90);
  v91 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObjectsFromArray_(v5, v92, (uint64_t)v91, v93, v94);

  sub_1D52F086C(v95, v96, v97, v98, v99);
  v100 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObjectsFromArray_(v5, v101, (uint64_t)v100, v102, v103);

  sub_1D533A568(v104, v105, v106, v107, v108);
  v109 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObjectsFromArray_(v5, v110, (uint64_t)v109, v111, v112);

  sub_1D52EB208(v113, v114, v115, v116, v117);
  v118 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObjectsFromArray_(v5, v119, (uint64_t)v118, v120, v121);

  sub_1D5372C7C(v122, v123, v124, v125, v126);
  v127 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObjectsFromArray_(v5, v128, (uint64_t)v127, v129, v130);

  sub_1D5313048(v131, v132, v133, v134, v135);
  v136 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObjectsFromArray_(v5, v137, (uint64_t)v136, v138, v139);

  sub_1D52E4398(v140, v141, v142, v143, v144);
  v145 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObjectsFromArray_(v5, v146, (uint64_t)v145, v147, v148);

  sub_1D52D8588(v149, v150, v151, v152, v153);
  v154 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObjectsFromArray_(v5, v155, (uint64_t)v154, v156, v157);

  sub_1D52C13B0(v158, v159, v160, v161, v162);
  v163 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObjectsFromArray_(v5, v164, (uint64_t)v163, v165, v166);

  sub_1D52BA38C(v167, v168, v169, v170, v171);
  v172 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObjectsFromArray_(v5, v173, (uint64_t)v172, v174, v175);

  sub_1D52C0C70(v176, v177, v178, v179, v180);
  v181 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObjectsFromArray_(v5, v182, (uint64_t)v181, v183, v184);

  sub_1D52BFFCC(v185, v186, v187, v188, v189);
  v190 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObjectsFromArray_(v5, v191, (uint64_t)v190, v192, v193);

  sub_1D52BBD80(v194, v195, v196, v197, v198);
  v199 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObjectsFromArray_(v5, v200, (uint64_t)v199, v201, v202);

  sub_1D5441C90(v203, v204, v205, v206, v207);
  v208 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObjectsFromArray_(v5, v209, (uint64_t)v208, v210, v211);

  return v5;
}

void sub_1D52EA208(void *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1D52EA1F8);
}

CFArrayRef RCCopyMethodsArrayForIdentifier(os_signpost_id_t a1)
{
  NSObject *v2;
  NSObject *v3;
  void (**v4)(_QWORD);
  CFArrayRef v5;
  _QWORD v7[5];
  uint8_t buf[16];

  sub_1D52EB0C4();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (a1 + 1 >= 2 && os_signpost_enabled(v2))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v3, OS_SIGNPOST_INTERVAL_BEGIN, a1, "RCCopyMethodsArrayForIdentifier", (const char *)&unk_1D548AF1A, buf, 2u);
  }

  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = sub_1D52EA3A8;
  v7[3] = &unk_1E996F870;
  v7[4] = a1;
  v4 = (void (**)(_QWORD))MEMORY[0x1D82721B4](v7);
  v5 = CFArrayCreate(0, 0, 0, 0);
  v4[2](v4);

  return v5;
}

void sub_1D52EA380(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1D52EA3A8(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  os_signpost_id_t v4;
  uint8_t v5[16];

  sub_1D52EB0C4();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = v2;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v3, OS_SIGNPOST_INTERVAL_END, v4, "RCCopyMethodsArrayForIdentifier", (const char *)&unk_1D548AF1A, v5, 2u);
  }

}

uint64_t RCCreateCIImageFromBufferAndProperties(__CVBuffer *a1, void *a2)
{
  NSObject *v4;
  NSObject *v5;
  void (**v6)(_QWORD);
  uint64_t v7;
  _QWORD v9[5];
  uint8_t buf[16];

  sub_1D52EB0C4();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if ((unint64_t)a1 + 1 >= 2 && os_signpost_enabled(v4))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v5, OS_SIGNPOST_INTERVAL_BEGIN, (os_signpost_id_t)a1, "RCCreateCIImageFromBufferAndProperties", (const char *)&unk_1D548AF1A, buf, 2u);
  }

  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = sub_1D52EA548;
  v9[3] = &unk_1E996F870;
  v9[4] = a1;
  v6 = (void (**)(_QWORD))MEMORY[0x1D82721B4](v9);
  v7 = RCCreateCIImageFromBufferAndPropertiesV2(a1, a2, 1u);
  v6[2](v6);

  return v7;
}

void sub_1D52EA520(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1D52EA548(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  os_signpost_id_t v4;
  uint8_t v5[16];

  sub_1D52EB0C4();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = v2;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v3, OS_SIGNPOST_INTERVAL_END, v4, "RCCreateCIImageFromBufferAndProperties", (const char *)&unk_1D548AF1A, v5, 2u);
  }

}

uint64_t RCCreateCIImageFromBufferAndPropertiesV2(__CVBuffer *a1, void *a2, unsigned __int8 a3)
{
  NSObject *v5;
  NSObject *v6;
  void (**v7)(_QWORD);
  void *v8;
  uint64_t PixelFormatType;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  id v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _BOOL4 v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  _BOOL4 v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t *p_shared_owners;
  unint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  _DWORD *v41;
  int v42;
  uint64_t v43;
  std::__shared_weak_count *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  double v49;
  _QWORD *v50;
  uint64_t v51;
  const char *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  const char *v56;
  uint64_t v57;
  const char *v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  const char *v62;
  uint64_t v63;
  void *v64;
  const char *v65;
  uint64_t v66;
  uint64_t v67;
  std::__shared_weak_count *v68;
  unint64_t *v69;
  unint64_t v70;
  std::__shared_weak_count *v71;
  unint64_t *v72;
  unint64_t v73;
  void *exception;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD v82[2];
  uint64_t v83;
  std::__shared_weak_count *v84;
  _QWORD *v85;
  std::__shared_weak_count *v86;
  _QWORD *v87;
  std::__shared_weak_count *v88;
  uint8_t buf[8];
  std::__shared_weak_count *v90;
  void *v91;
  _QWORD v92[5];
  unsigned __int8 v93;
  CVPixelBufferRef v94;
  _QWORD v95[3];

  v95[2] = *MEMORY[0x1E0C80C00];
  v94 = a1;
  v93 = a3;
  sub_1D52EB0C4();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if ((unint64_t)a1 + 1 >= 2 && os_signpost_enabled(v5))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v6, OS_SIGNPOST_INTERVAL_BEGIN, (os_signpost_id_t)a1, "RCCreateCIImageFromBufferAndProperties", (const char *)&unk_1D548AF1A, buf, 2u);
  }

  v92[0] = MEMORY[0x1E0C809B0];
  v92[1] = 3221225472;
  v92[2] = sub_1D52EAD8C;
  v92[3] = &unk_1E996F870;
  v92[4] = a1;
  v7 = (void (**)(_QWORD))MEMORY[0x1D82721B4](v92);
  v8 = (void *)MEMORY[0x1D8272058]();
  sub_1D533ECFC();
  if (!v94 || !a2)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  PixelFormatType = CVPixelBufferGetPixelFormatType(v94);
  objc_msgSend_numberWithUnsignedInt_(MEMORY[0x1E0CB37E8], v10, PixelFormatType, v11, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = objc_msgSend_containsObject_(&unk_1E99C86E8, v14, (uint64_t)v13, v15, v16);

  if ((v17 & 1) == 0)
  {
    v76 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](v76, "RawCameraException");
    __cxa_throw(v76, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v18 = a2;
  objc_msgSend_objectForKeyedSubscript_(v18, v19, (uint64_t)CFSTR("{Exif}"), v20, v21);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = v22 == 0;

  if (v23
    || (objc_msgSend_objectForKeyedSubscript_(v18, v24, (uint64_t)CFSTR("{DNG}"), v25, v26),
        v27 = (void *)objc_claimAutoreleasedReturnValue(),
        v28 = v27 == 0,
        v27,
        v28))
  {
    v77 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](v77, "RawCameraException");
    __cxa_throw(v77, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v91 = (void *)objc_msgSend_mutableCopy(v18, v29, v30, v31, v32);
  sub_1D52EAEC4(&v94, &v91, &v93, buf);
  (*(void (**)(_QWORD))(**(_QWORD **)buf + 168))(*(_QWORD *)buf);
  v85 = *(_QWORD **)buf;
  v86 = v90;
  if (v90)
  {
    p_shared_owners = (unint64_t *)&v90->__shared_owners_;
    do
      v34 = __ldxr(p_shared_owners);
    while (__stxr(v34 + 1, p_shared_owners));
  }
  sub_1D52B4BA8(0, &v83);
  sub_1D5295660(&v85, &v83, &v87);
  v35 = v84;
  if (v84)
  {
    v36 = (unint64_t *)&v84->__shared_owners_;
    do
      v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
      std::__shared_weak_count::__release_weak(v35);
    }
  }
  v38 = v86;
  if (v86)
  {
    v39 = (unint64_t *)&v86->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
  v41 = v87;
  if (!v87)
  {
    v78 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](v78, "RawCameraException");
    __cxa_throw(v78, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  if ((*(unsigned int (**)(_QWORD *))(*v87 + 2152))(v87))
    v42 = 1;
  else
    v42 = 3;
  sub_1D5297B48(v41, v42);
  sub_1D5297C58((uint64_t)v87, 1);
  v43 = (*(uint64_t (**)(_QWORD *))(*v87 + 408))(v87);
  v85 = 0;
  v86 = (std::__shared_weak_count *)v43;
  v83 = (*(uint64_t (**)(_QWORD *))(*v87 + 432))(v87);
  v84 = v44;
  v82[0] = 0;
  v82[1] = v44;
  v45 = (*(uint64_t (**)(_QWORD *))(*v87 + 456))(v87);
  v47 = v46;
  v48 = (*(double (**)(_QWORD *))(*v87 + 2640))(v87);
  v49 = (*(double (**)(_QWORD *))(*v87 + 2648))(v87);
  v80 = v45;
  LODWORD(v81) = (int)((double)(int)v47 / v48);
  HIDWORD(v81) = (int)((double)SHIDWORD(v47) / v49);
  if (!sub_1D53ADD44((int *)&v83, (int *)&v85))
  {
    v79 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](v79, "RawCameraException");
    goto LABEL_45;
  }
  if (!sub_1D53ADD44((int *)&v80, (int *)v82))
  {
    v79 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](v79, "RawCameraException");
LABEL_45:
    __cxa_throw(v79, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v50 = v87;
  v51 = sub_1D5297E34((uint64_t)v87);
  (*(void (**)(_QWORD *, uint64_t, void *))(*v50 + 2728))(v50, v51, v91);
  objc_msgSend_numberWithInt_(MEMORY[0x1E0CB37E8], v52, v84, v53, v54, v80, v81);
  v55 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(v91, v56, (uint64_t)v55, (uint64_t)CFSTR("PixelWidth"), v57);

  objc_msgSend_numberWithInt_(MEMORY[0x1E0CB37E8], v58, HIDWORD(v84), v59, v60);
  v61 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(v91, v62, (uint64_t)v61, (uint64_t)CFSTR("PixelHeight"), v63);

  sub_1D532D0B0(v87, 0);
  v64 = (void *)objc_claimAutoreleasedReturnValue();
  v95[0] = v64;
  v95[1] = v91;
  objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v65, (uint64_t)v95, 2, v66);
  v67 = objc_claimAutoreleasedReturnValue();

  v68 = v88;
  if (v88)
  {
    v69 = (unint64_t *)&v88->__shared_owners_;
    do
      v70 = __ldaxr(v69);
    while (__stlxr(v70 - 1, v69));
    if (!v70)
    {
      ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
      std::__shared_weak_count::__release_weak(v68);
    }
  }
  v71 = v90;
  if (v90)
  {
    v72 = (unint64_t *)&v90->__shared_owners_;
    do
      v73 = __ldaxr(v72);
    while (__stlxr(v73 - 1, v72));
    if (!v73)
    {
      ((void (*)(std::__shared_weak_count *))v71->__on_zero_shared)(v71);
      std::__shared_weak_count::__release_weak(v71);
    }
  }

  objc_autoreleasePoolPop(v8);
  v7[2](v7);

  return v67;
}

void sub_1D52EAC08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, char a15, uint64_t a16, char a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,void *a22)
{
  void *v22;
  void *v23;

  if (a2)
  {

    sub_1D5282EB4((uint64_t)&a17);
    sub_1D5282EB4((uint64_t)&a19);

    __cxa_begin_catch(exception_object);
    __cxa_end_catch();
    JUMPOUT(0x1D52EAA18);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D52EAD8C(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  os_signpost_id_t v4;
  uint8_t v5[16];

  sub_1D52EB0C4();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = v2;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1D527F000, v3, OS_SIGNPOST_INTERVAL_END, v4, "RCCreateCIImageFromBufferAndProperties", (const char *)&unk_1D548AF1A, v5, 2u);
  }

}

double sub_1D52EAE10(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;

  sub_1D529EA84(a1, a2, a3, a4, a5);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_doubleValue(v5, v6, v7, v8, v9);
  v11 = v10;

  return v11;
}

void sub_1D52EAE4C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_1D52EAE5C(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  void *v6;
  id v7;

  objc_msgSend_objectForKeyedSubscript_(a1, a2, (uint64_t)a2, a4, a5);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v6 = v5;
  else
    v6 = 0;
  v7 = v6;

  return v7;
}

void sub_1D52EAEB4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1D52EAEC4(_QWORD *a1@<X1>, _QWORD *a2@<X2>, unsigned __int8 *a3@<X3>, _QWORD *a4@<X8>)
{
  _QWORD *v8;

  v8 = operator new(0x9F0uLL);
  sub_1D52EAF3C(v8, a1, a2, a3);
  *a4 = v8 + 3;
  a4[1] = v8;
  sub_1D5285658((uint64_t)a4, v8 + 4, (uint64_t)(v8 + 3));
}

void sub_1D52EAF28(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52EAF3C(_QWORD *a1, _QWORD *a2, _QWORD *a3, unsigned __int8 *a4)
{
  a1[2] = 0;
  *a1 = &unk_1E99759E8;
  a1[1] = 0;
  sub_1D5345EB0(a1 + 3, *a2, *a3, *a4);
  return a1;
}

void sub_1D52EAF80(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52EAF94(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E99759E8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52EAFA8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E99759E8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52EAFDC(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a1 + 24) + 16))(a1 + 24);
}

__objc2_class *sub_1D52EAFEC()
{
  unsigned __int8 v0;
  __objc2_class *v1;
  int v3;

  v0 = atomic_load((unsigned __int8 *)&qword_1ED5899E0);
  v1 = RAWHueMagnet;
  if ((v0 & 1) == 0)
  {
    v3 = __cxa_guard_acquire(&qword_1ED5899E0);
    v1 = RAWHueMagnet;
    if (v3)
    {
      qword_1ED5899D8 = (uint64_t)os_log_create("com.apple.rawcamera", "parse");
      __cxa_guard_release(&qword_1ED5899E0);
      v1 = RAWHueMagnet;
    }
  }
  return v1[63].isa;
}

__CFString *sub_1D52EB058()
{
  unsigned __int8 v0;
  __CFString **v1;
  int v3;

  v0 = atomic_load((unsigned __int8 *)&qword_1EFF32690);
  v1 = off_1EFF32000;
  if ((v0 & 1) == 0)
  {
    v3 = __cxa_guard_acquire(&qword_1EFF32690);
    v1 = off_1EFF32000;
    if (v3)
    {
      qword_1EFF32688 = (uint64_t)os_log_create("com.apple.rawcamera", "unpack");
      __cxa_guard_release(&qword_1EFF32690);
      v1 = off_1EFF32000;
    }
  }
  return v1[209];
}

__CFString *sub_1D52EB0C4()
{
  unsigned __int8 v0;
  __CFString **v1;
  int v3;

  v0 = atomic_load((unsigned __int8 *)&qword_1EFF326A0);
  v1 = off_1EFF32000;
  if ((v0 & 1) == 0)
  {
    v3 = __cxa_guard_acquire(&qword_1EFF326A0);
    v1 = off_1EFF32000;
    if (v3)
    {
      qword_1EFF32698 = (uint64_t)os_log_create("com.apple.rawcamera", "plugin");
      __cxa_guard_release(&qword_1EFF326A0);
      v1 = off_1EFF32000;
    }
  }
  return v1[211];
}

__CFString *sub_1D52EB130()
{
  unsigned __int8 v0;
  __CFString **v1;
  int v3;

  v0 = atomic_load((unsigned __int8 *)&qword_1EFF326B0);
  v1 = off_1EFF32000;
  if ((v0 & 1) == 0)
  {
    v3 = __cxa_guard_acquire(&qword_1EFF326B0);
    v1 = off_1EFF32000;
    if (v3)
    {
      qword_1EFF326A8 = (uint64_t)os_log_create("com.apple.rawcamera", "render");
      __cxa_guard_release(&qword_1EFF326B0);
      v1 = off_1EFF32000;
    }
  }
  return v1[213];
}

__CFString *sub_1D52EB19C()
{
  unsigned __int8 v0;
  __CFString **v1;
  int v3;

  v0 = atomic_load((unsigned __int8 *)&qword_1EFF326C0);
  v1 = off_1EFF32000;
  if ((v0 & 1) == 0)
  {
    v3 = __cxa_guard_acquire(&qword_1EFF326C0);
    v1 = off_1EFF32000;
    if (v3)
    {
      qword_1EFF326B8 = (uint64_t)os_log_create("com.apple.rawcamera", "cifilter");
      __cxa_guard_release(&qword_1EFF326C0);
      v1 = off_1EFF32000;
    }
  }
  return v1[215];
}

id sub_1D52EB208(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  const char *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  const char *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  const char *v54;
  void *v55;
  const char *v56;
  uint64_t v57;
  void *v58;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[11];
  _QWORD v70[5];
  uint64_t v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  _QWORD v77[2];
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD v87[5];
  uint64_t v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  _QWORD v94[4];

  v94[2] = *MEMORY[0x1E0C80C00];
  v6 = *MEMORY[0x1E0CBD388];
  v77[0] = *MEMORY[0x1E0CBD368];
  v5 = v77[0];
  v77[1] = v6;
  v87[0] = MEMORY[0x1E0C9AAB0];
  v87[1] = CFSTR("com.sony.arw-raw-image");
  v8 = *MEMORY[0x1E0CBD380];
  v78 = *MEMORY[0x1E0CBD348];
  v7 = v78;
  v79 = v8;
  v87[2] = CFSTR(".arw.");
  v87[3] = &unk_1E99CAF50;
  v9 = *MEMORY[0x1E0CBD370];
  v87[4] = &unk_1E99CAF68;
  v10 = *MEMORY[0x1E0CBD378];
  v80 = v9;
  v81 = v10;
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], a2, (uint64_t)sub_1D5280CE0, a4, a5);
  v88 = objc_claimAutoreleasedReturnValue();
  v82 = *MEMORY[0x1E0CBD330];
  v65 = (void *)v88;
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v11, (uint64_t)sub_1D52EB69C, v12, v13);
  v64 = (void *)objc_claimAutoreleasedReturnValue();
  v89 = v64;
  v83 = *MEMORY[0x1E0CBD350];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v14, (uint64_t)sub_1D52EB6A8, v15, v16);
  v66 = (void *)objc_claimAutoreleasedReturnValue();
  v67 = v83;
  v90 = v66;
  v84 = *MEMORY[0x1E0CBD338];
  v17 = v84;
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v18, (uint64_t)sub_1D52E8DA4, v19, v20);
  v68 = v82;
  v63 = (void *)objc_claimAutoreleasedReturnValue();
  v91 = v63;
  v85 = *MEMORY[0x1E0CBD358];
  v21 = v85;
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v22, (uint64_t)sub_1D52EB6B4, v23, v24);
  v62 = (void *)objc_claimAutoreleasedReturnValue();
  v92 = v62;
  v86 = *MEMORY[0x1E0CBD360];
  v25 = v86;
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v26, (uint64_t)sub_1D52EB6C0, v27, v28);
  v61 = (void *)objc_claimAutoreleasedReturnValue();
  v93 = v61;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v29, (uint64_t)v87, (uint64_t)v77, 11);
  v60 = (void *)objc_claimAutoreleasedReturnValue();
  v94[0] = v60;
  v69[0] = v5;
  v69[1] = v6;
  v70[0] = MEMORY[0x1E0C9AAB0];
  v70[1] = CFSTR("com.sony.axr-raw-image");
  v69[2] = v7;
  v69[3] = v8;
  v70[2] = CFSTR(".axr.");
  v70[3] = &unk_1E99CAF50;
  v70[4] = &unk_1E99CAF68;
  v69[4] = v9;
  v69[5] = v10;
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v30, (uint64_t)sub_1D5280CE0, v31, v32);
  v71 = objc_claimAutoreleasedReturnValue();
  v69[6] = v68;
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v33, (uint64_t)sub_1D52EB69C, v34, v35);
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  v72 = v36;
  v69[7] = v67;
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v37, (uint64_t)sub_1D52EB6A8, v38, v39);
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  v73 = v40;
  v69[8] = v17;
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v41, (uint64_t)sub_1D52E8DA4, v42, v43);
  v44 = (void *)objc_claimAutoreleasedReturnValue();
  v74 = v44;
  v69[9] = v21;
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v45, (uint64_t)sub_1D52EB6B4, v46, v47);
  v48 = (void *)objc_claimAutoreleasedReturnValue();
  v75 = v48;
  v69[10] = v25;
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v49, (uint64_t)sub_1D52EB6C0, v50, v51);
  v52 = (void *)objc_claimAutoreleasedReturnValue();
  v76 = v52;
  v53 = (void *)v71;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v54, (uint64_t)v70, (uint64_t)v69, 11);
  v55 = (void *)objc_claimAutoreleasedReturnValue();
  v94[1] = v55;
  objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v56, (uint64_t)v94, 2, v57);
  v58 = (void *)objc_claimAutoreleasedReturnValue();

  return v58;
}

void sub_1D52EB5C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

void sub_1D52EB69C(const void *a1, uint64_t a2, uint64_t a3)
{
  sub_1D52E7A20(a1, a2, a3, &unk_1E9975A28);
}

uint64_t sub_1D52EB6A8(os_signpost_id_t a1)
{
  return sub_1D52E8C40(a1);
}

uint64_t sub_1D52EB6B4(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1D52E7438(a1, a2, a3, &unk_1E9975A28);
}

uint64_t sub_1D52EB6C0(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1D52E9A7C(a1, a2, a3, &unk_1E9975A28);
}

void sub_1D52EB6CC(uint64_t *a1@<X1>, char a2@<W2>, void *a3@<X3>, void *a4@<X4>, _OWORD *a5@<X8>)
{
  __int128 v8;
  id v9;
  id v10;
  char v11;

  v11 = a2;
  v10 = a3;
  v9 = a4;
  sub_1D52EFCCC(a1, &v11, &v10, &v9, &v8);
  *a5 = v8;

}

void sub_1D52EB748(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{

  _Unwind_Resume(a1);
}

uint64_t sub_1D52EB764(void *a1, void *a2)
{
  id v3;
  id v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t isEqualToString;

  v3 = a1;
  v4 = a2;
  v8 = v4;
  if (v4)
    isEqualToString = objc_msgSend_isEqualToString_(v4, v5, (uint64_t)v3, v6, v7);
  else
    isEqualToString = 0;

  return isEqualToString;
}

void sub_1D52EB7C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

double sub_1D52EB7D4(uint64_t a1, uint64_t *a2, char a3, void *a4, void *a5)
{
  uint64_t v5;
  double result;

  sub_1D52A7E98(a1, a2, a3, a4, a5);
  *(_QWORD *)v5 = off_1E9975A58;
  *(_QWORD *)(v5 + 1184) = 0;
  result = 0.0;
  *(_OWORD *)(v5 + 1200) = 0u;
  *(_QWORD *)(v5 + 1192) = v5 + 1200;
  *(_OWORD *)(v5 + 1224) = 0u;
  *(_QWORD *)(v5 + 1216) = v5 + 1224;
  *(_OWORD *)(v5 + 1248) = 0u;
  *(_QWORD *)(v5 + 1240) = v5 + 1248;
  *(_QWORD *)(v5 + 1264) = 0;
  *(_WORD *)(v5 + 1272) = 0;
  *(_BYTE *)(v5 + 1400) = 0;
  *(_BYTE *)(v5 + 1408) = 0;
  *(_BYTE *)(v5 + 1424) = 0;
  *(_BYTE *)(v5 + 1432) = 0;
  *(_BYTE *)(v5 + 1440) = 0;
  *(_BYTE *)(v5 + 1444) = 0;
  *(_BYTE *)(v5 + 1452) = 0;
  *(_OWORD *)(v5 + 1280) = 0u;
  *(_WORD *)(v5 + 1304) = 0;
  *(_QWORD *)(v5 + 1296) = 0;
  *(_WORD *)(v5 + 1336) = 0;
  *(_QWORD *)(v5 + 1328) = 0;
  *(_OWORD *)(v5 + 1312) = 0u;
  *(_OWORD *)(v5 + 1344) = 0u;
  *(_OWORD *)(v5 + 1360) = 0u;
  *(_BYTE *)(v5 + 1376) = 0;
  return result;
}

void sub_1D52EB86C(uint64_t a1, uint64_t a2, unsigned __int16 *a3)
{
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  BOOL v9;
  BOOL v10;
  uint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  double v17;
  double v18;
  double v19;
  size_t v20;
  void **v21;
  const void *v22;
  uint64_t *v23;
  int v24;
  unint64_t v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  void *v30;
  double v31;
  double v32;
  double v33;
  double v34;
  char *v35;
  BOOL v36;
  BOOL v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  int v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  size_t v46;
  void **v47;
  const void *v48;
  uint64_t *v49;
  void *v50;
  BOOL v51;
  BOOL v52;
  __int16 v53;
  void **v54;
  _BOOL4 v55;
  unsigned int v56;
  uint64_t v57;
  int v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  unsigned __int16 *v62;
  unsigned __int16 *v63;
  uint64_t v64;
  unsigned int v65;
  int v66;
  std::__shared_weak_count *v67;
  unint64_t *v68;
  unint64_t v69;
  size_t v70;
  _QWORD *v71;
  const void *v72;
  int v73;
  std::__shared_weak_count *v74;
  unint64_t *v75;
  unint64_t v76;
  _QWORD *v77;
  void *v78;
  unsigned int v79;
  void **v80;
  int v81;
  __int16 v82;
  __int16 v83;
  char *v84;
  unint64_t v85;
  _WORD *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  __int16 v95;
  std::__shared_weak_count *v96;
  unint64_t *v97;
  unint64_t v98;
  unsigned int v99;
  void **v100;
  int v101;
  __int16 v102;
  __int16 v103;
  char *v104;
  unint64_t v105;
  _WORD *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  __int16 v115;
  std::__shared_weak_count *v116;
  unint64_t *v117;
  unint64_t v118;
  unsigned int v119;
  void **v120;
  int v121;
  __int16 v122;
  __int16 v123;
  char *v124;
  unint64_t v125;
  _WORD *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  unint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  __int16 v135;
  std::__shared_weak_count *v136;
  unint64_t *v137;
  unint64_t v138;
  int v139;
  double v140;
  int v141;
  BOOL v142;
  BOOL v143;
  uint64_t v144[2];
  void *v145[2];
  uint64_t v146;
  unsigned int v147;
  unsigned int v148;
  void *__p[2];
  uint64_t v150;
  void *v151;
  char *v152;
  uint64_t v153;
  _QWORD v154[2];
  char v155;
  double __src;
  _BYTE v157[12];
  unsigned int v158[3];
  uint64_t v159;

  v159 = *MEMORY[0x1E0C80C00];
  v6 = *a3;
  if (v6 > 0x7200)
  {
    if (*a3 <= 0x730Fu)
    {
      if (*a3 <= 0x72FFu)
      {
        switch(v6)
        {
          case 0x7201u:
            if (a3[1] == 4 && *((_DWORD *)a3 + 1) == 1)
              *(_DWORD *)(a1 + 1372) = *((_DWORD *)a3 + 2);
            return;
          case 0x7221u:
            if (a3[1] == 7 && *((_DWORD *)a3 + 1) == 4)
            {
              sub_1D52917E4(a1, &v151);
              v64 = sub_1D52845E4((uint64_t)v151);
              v65 = bswap32(*((_DWORD *)a3 + 2));
              if (v64 == 2)
                v66 = v65;
              else
                v66 = *((_DWORD *)a3 + 2);
              v67 = (std::__shared_weak_count *)v152;
              if (v152)
              {
                v68 = (unint64_t *)(v152 + 8);
                do
                  v69 = __ldaxr(v68);
                while (__stlxr(v69 - 1, v68));
                if (!v69)
                {
                  ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
                  std::__shared_weak_count::__release_weak(v67);
                }
              }
              if (*(char *)(a2 + 23) >= 0)
                v70 = *(unsigned __int8 *)(a2 + 23);
              else
                v70 = *(_QWORD *)(a2 + 8);
              v71 = v154;
              sub_1D52B1FA0((uint64_t)v154, v70 + 10);
              if (v155 < 0)
                v71 = (_QWORD *)v154[0];
              if (v70)
              {
                if (*(char *)(a2 + 23) >= 0)
                  v72 = (const void *)a2;
                else
                  v72 = *(const void **)a2;
                memmove(v71, v72, v70);
              }
              strcpy((char *)v71 + v70, ":SR2SubIFD");
              sub_1D52ED138((_QWORD *)a1, (uint64_t)v154, *(_DWORD *)(a1 + 1368), *(_DWORD *)(a1 + 1372), v66);
              if (v155 < 0)
              {
                v30 = (void *)v154[0];
LABEL_313:
                operator delete(v30);
                return;
              }
            }
            return;
          case 0x7250u:
            if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) != 0)
              return;
            sub_1D52AFE84(":MRWInfo", (const void **)a2, &v151);
            sub_1D52ED674(a1, (const void **)&v151, *((unsigned int *)a3 + 2));
            goto LABEL_311;
        }
LABEL_135:
        sub_1D52ABE88((uint64_t **)a1, a2, a3);
        return;
      }
      if (v6 != 29440)
      {
        if (v6 != 29443)
        {
          if (v6 != 29446)
            goto LABEL_135;
          v24 = a3[1];
          if (v24 != 3 && v24 != 8 || *((_DWORD *)a3 + 1) != 4)
            return;
          sub_1D52917E4(a1, __p);
          sub_1D52A79AC((uint64_t)a3, (uint64_t *)__p, (uint64_t)&v151);
          v27 = (std::__shared_weak_count *)__p[1];
          if (__p[1])
          {
            v28 = (unint64_t *)((char *)__p[1] + 8);
            do
              v29 = __ldaxr(v28);
            while (__stlxr(v29 - 1, v28));
            if (!v29)
            {
              ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
              std::__shared_weak_count::__release_weak(v27);
            }
          }
          v30 = v151;
          if (v152 - (_BYTE *)v151 != 8)
            goto LABEL_111;
          LOWORD(v25) = *((_WORD *)v151 + 2);
          LOWORD(v26) = *((_WORD *)v151 + 3);
          v31 = (double)v26;
          v32 = fmax((double)v25, v31);
          LOWORD(v31) = *((_WORD *)v151 + 1);
          v33 = (double)*(unint64_t *)&v31;
          v34 = fmax(v33, v32);
          LOWORD(v33) = *(_WORD *)v151;
          __src = fmax((double)*(unint64_t *)&v33, v34);
          sub_1D52AFE84(":0x7306", (const void **)a2, __p);
          v145[0] = __p;
          v35 = (char *)sub_1D52BA2C8((uint64_t **)(a1 + 240), __p, (uint64_t)&unk_1D544A5C4, (_OWORD **)v145);
          sub_1D528FA34(v35 + 56, (char *)&__src, (uint64_t)v157, 1uLL);
          goto LABEL_108;
        }
        v73 = a3[1];
        if (v73 != 3 && v73 != 8 || *((_DWORD *)a3 + 1) != 4)
          return;
        sub_1D52917E4(a1, __p);
        sub_1D52A79AC((uint64_t)a3, (uint64_t *)__p, (uint64_t)&v151);
        v74 = (std::__shared_weak_count *)__p[1];
        if (__p[1])
        {
          v75 = (unint64_t *)((char *)__p[1] + 8);
          do
            v76 = __ldaxr(v75);
          while (__stlxr(v76 - 1, v75));
          if (!v76)
          {
            ((void (*)(std::__shared_weak_count *))v74->__on_zero_shared)(v74);
            std::__shared_weak_count::__release_weak(v74);
          }
        }
        v62 = (unsigned __int16 *)v151;
        v63 = (unsigned __int16 *)v152;
        if (v152 - (_BYTE *)v151 == 8)
          goto LABEL_185;
        goto LABEL_191;
      }
    }
    else
    {
      if (*a3 > 0x7980u)
      {
        if (*a3 <= 0xC61Fu)
        {
          if (v6 == 31105)
          {
LABEL_118:
            if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
              *(_WORD *)(a1 + 1336) = sub_1D52AD670((uint64_t)a3);
            return;
          }
          if (v6 == 50719)
          {
            if (a3[1] == 4 && *((_DWORD *)a3 + 1) == 2)
            {
              sub_1D52917E4(a1, __p);
              LODWORD(__src) = sub_1D52A5CC8((uint64_t)a3);
              sub_1D5285B08((int *)v145, (int *)&__src);
              sub_1D5285164((uint64_t *)&v151, (uint64_t *)__p, (uint64_t)v145, 0);
              sub_1D5282EB4((uint64_t)__p);
              sub_1D52917E4(a1, __p);
              v7 = sub_1D52847F8((uint64_t)__p[0]);
              sub_1D5282EB4((uint64_t)__p);
              sub_1D52917E4(a1, __p);
              v8 = sub_1D52847F8((uint64_t)__p[0]);
              sub_1D5282EB4((uint64_t)__p);
              if (!*(_BYTE *)(a1 + 1440))
                *(_BYTE *)(a1 + 1440) = 1;
              *(_QWORD *)(a1 + 1432) = v7 | (unint64_t)(v8 << 32);
              sub_1D5285200((uint64_t *)&v151);
            }
            return;
          }
          goto LABEL_135;
        }
        if (v6 == 50720)
        {
          if (a3[1] == 4 && *((_DWORD *)a3 + 1) == 2)
          {
            sub_1D52917E4(a1, __p);
            LODWORD(__src) = sub_1D52A5CC8((uint64_t)a3);
            sub_1D5285B08((int *)v145, (int *)&__src);
            sub_1D5285164((uint64_t *)&v151, (uint64_t *)__p, (uint64_t)v145, 0);
            sub_1D5282EB4((uint64_t)__p);
            sub_1D52917E4(a1, __p);
            v56 = sub_1D52847F8((uint64_t)__p[0]);
            sub_1D5282EB4((uint64_t)__p);
            sub_1D52917E4(a1, __p);
            v57 = sub_1D52847F8((uint64_t)__p[0]);
            sub_1D5282EB4((uint64_t)__p);
            if (!*(_BYTE *)(a1 + 1452))
              *(_BYTE *)(a1 + 1452) = 1;
            *(_QWORD *)(a1 + 1444) = v56 | (unint64_t)(v57 << 32);
            sub_1D5285200((uint64_t *)&v151);
          }
          return;
        }
        if (v6 == 50740)
        {
          if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1))
            v36 = 0;
          else
            v36 = a3[1] == 1;
          v37 = v36 && *((_DWORD *)a3 + 1) == 4;
          if (!v37 || !sub_1D52B18D0((const void **)a2, "IFD0"))
            return;
          LODWORD(__p[0]) = 0;
          sub_1D5285A24(&v151, (unsigned int *)__p);
          v38 = sub_1D52B19D0((uint64_t)a3, (unsigned int *)&v151);
          LODWORD(__src) = 1;
          sub_1D5285A24(v145, (unsigned int *)&__src);
          v39 = sub_1D52B19D0((uint64_t)a3, (unsigned int *)v145);
          v158[0] = 2;
          sub_1D5285A24(v144, v158);
          v40 = sub_1D52B19D0((uint64_t)a3, (unsigned int *)v144);
          v147 = 3;
          sub_1D5285A24(&v148, &v147);
          v41 = sub_1D52B19D0((uint64_t)a3, &v148);
          sub_1D52AFE84(":DNGPrivate", (const void **)a2, &v151);
          (*(void (**)(uint64_t, void **, unint64_t))(*(_QWORD *)a1 + 784))(a1, &v151, v38 | ((((unint64_t)v40 << 8) | ((unint64_t)v41 << 16) | v39) << 8));
LABEL_311:
          if ((SHIBYTE(v153) & 0x80000000) == 0)
            return;
          v30 = v151;
          goto LABEL_313;
        }
        goto LABEL_135;
      }
      if (v6 != 29456)
      {
        if (v6 != 29459)
        {
          if (v6 != 30847)
            goto LABEL_135;
          if (a3[1] != 3 || (*((_DWORD *)a3 + 1) - 3) > 1)
            return;
          sub_1D52917E4(a1, __p);
          sub_1D52A79AC((uint64_t)a3, (uint64_t *)__p, (uint64_t)&v151);
          v14 = (std::__shared_weak_count *)__p[1];
          if (__p[1])
          {
            v15 = (unint64_t *)((char *)__p[1] + 8);
            do
              v16 = __ldaxr(v15);
            while (__stlxr(v16 - 1, v15));
            if (!v16)
            {
              ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
              std::__shared_weak_count::__release_weak(v14);
            }
          }
          LOWORD(v12) = *((_WORD *)v151 + 1);
          LOWORD(v13) = *((_WORD *)v151 + 2);
          v17 = (double)v13;
          v18 = fmax((double)v12, v17);
          LOWORD(v17) = *(_WORD *)v151;
          v19 = fmax((double)*(unint64_t *)&v17, v18);
          if (v152 - (_BYTE *)v151 == 8)
          {
            LOWORD(v18) = *((_WORD *)v151 + 3);
            v19 = fmax(v19, (double)*(unint64_t *)&v18);
          }
          if (*(char *)(a2 + 23) >= 0)
            v20 = *(unsigned __int8 *)(a2 + 23);
          else
            v20 = *(_QWORD *)(a2 + 8);
          v21 = __p;
          sub_1D52B1FA0((uint64_t)__p, v20 + 11);
          if (v150 < 0)
            v21 = (void **)__p[0];
          if (v20)
          {
            if (*(char *)(a2 + 23) >= 0)
              v22 = (const void *)a2;
            else
              v22 = *(const void **)a2;
            memmove(v21, v22, v20);
          }
          strcpy((char *)v21 + v20, ":WhiteLevel");
          __src = v19;
          v145[0] = __p;
          v23 = sub_1D52B3E7C((uint64_t **)(a1 + 240), __p, (uint64_t)&unk_1D544A5C4, (__int128 **)v145);
          sub_1D528FA34((char *)v23 + 56, (char *)&__src, (uint64_t)v157, 1uLL);
LABEL_108:
          if (SHIBYTE(v150) < 0)
            operator delete(__p[0]);
          goto LABEL_110;
        }
        v58 = a3[1];
        if (v58 != 3 && v58 != 8 || *((_DWORD *)a3 + 1) != 4)
          return;
        sub_1D52917E4(a1, __p);
        sub_1D52A79AC((uint64_t)a3, (uint64_t *)__p, (uint64_t)&v151);
        v59 = (std::__shared_weak_count *)__p[1];
        if (__p[1])
        {
          v60 = (unint64_t *)((char *)__p[1] + 8);
          do
            v61 = __ldaxr(v60);
          while (__stlxr(v61 - 1, v60));
          if (!v61)
          {
            ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
            std::__shared_weak_count::__release_weak(v59);
          }
        }
        v62 = (unsigned __int16 *)v151;
        v63 = (unsigned __int16 *)v152;
        if (v152 - (_BYTE *)v151 == 8)
        {
LABEL_185:
          __p[0] = 0;
          __p[1] = 0;
          v150 = 0;
          sub_1D52BA100((char *)__p, v62, v63, 4uLL);
          sub_1D52AFE84(":WBLevels", (const void **)a2, v145);
          __src = COERCE_DOUBLE(v145);
          v77 = sub_1D52BA2C8((uint64_t **)(a1 + 120), v145, (uint64_t)&unk_1D544A5C4, (_OWORD **)&__src);
          v78 = (void *)v77[7];
          if (v78)
          {
            v77[8] = v78;
            operator delete(v78);
            v77[7] = 0;
            v77[8] = 0;
            v77[9] = 0;
          }
          *(_OWORD *)(v77 + 7) = *(_OWORD *)__p;
          v77[9] = v150;
          __p[1] = 0;
          v150 = 0;
          __p[0] = 0;
          if (SHIBYTE(v146) < 0)
          {
            operator delete(v145[0]);
            if (__p[0])
            {
              __p[1] = __p[0];
              operator delete(__p[0]);
            }
          }
          v62 = (unsigned __int16 *)v151;
        }
LABEL_191:
        if (!v62)
          return;
        v152 = (char *)v62;
        v30 = v62;
        goto LABEL_313;
      }
    }
    v42 = a3[1];
    if (v42 != 3 && v42 != 8 || *((_DWORD *)a3 + 1) != 4)
      return;
    sub_1D52917E4(a1, __p);
    sub_1D52A79AC((uint64_t)a3, (uint64_t *)__p, (uint64_t)&v151);
    v43 = (std::__shared_weak_count *)__p[1];
    if (__p[1])
    {
      v44 = (unint64_t *)((char *)__p[1] + 8);
      do
        v45 = __ldaxr(v44);
      while (__stlxr(v45 - 1, v44));
      if (!v45)
      {
        ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
        std::__shared_weak_count::__release_weak(v43);
      }
    }
    v30 = v151;
    if (v152 - (_BYTE *)v151 != 8)
      goto LABEL_111;
    if (*(char *)(a2 + 23) >= 0)
      v46 = *(unsigned __int8 *)(a2 + 23);
    else
      v46 = *(_QWORD *)(a2 + 8);
    v47 = __p;
    sub_1D52B1FA0((uint64_t)__p, v46 + 12);
    if (v150 < 0)
      v47 = (void **)__p[0];
    if (v46)
    {
      if (*(char *)(a2 + 23) >= 0)
        v48 = (const void *)a2;
      else
        v48 = *(const void **)a2;
      memmove(v47, v48, v46);
    }
    strcpy((char *)v47 + v46, ":BlackLevels");
    v145[1] = 0;
    v146 = 0;
    v145[0] = 0;
    sub_1D52EFBC0((char *)v145, (unsigned __int16 *)v151, (unsigned __int16 *)v152, (v152 - (_BYTE *)v151) >> 1);
    __src = COERCE_DOUBLE(__p);
    v49 = sub_1D52B3E7C((uint64_t **)(a1 + 264), __p, (uint64_t)&unk_1D544A5C4, (__int128 **)&__src);
    v50 = (void *)v49[7];
    if (v50)
    {
      v49[8] = (uint64_t)v50;
      operator delete(v50);
      v49[7] = 0;
      v49[8] = 0;
      v49[9] = 0;
    }
    *(_OWORD *)(v49 + 7) = *(_OWORD *)v145;
    v49[9] = v146;
    goto LABEL_108;
  }
  if (*a3 > 0x7010u)
  {
    switch(*a3)
    {
      case 0x7031u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
          *(_WORD *)(a1 + 1272) = sub_1D52AD670((uint64_t)a3);
        return;
      case 0x7032u:
        if (a3[1] != 8 || *((_DWORD *)a3 + 1) != 17)
          return;
        sub_1D52917E4(a1, __p);
        LODWORD(__src) = sub_1D52A5CC8((uint64_t)a3);
        sub_1D5285B08((int *)v145, (int *)&__src);
        sub_1D5285164((uint64_t *)&v151, (uint64_t *)__p, (uint64_t)v145, 0);
        sub_1D5282EB4((uint64_t)__p);
        sub_1D52917E4(a1, __p);
        v99 = sub_1D52848D4((uint64_t)__p[0]);
        sub_1D5282EB4((uint64_t)__p);
        if (v99 <= 0x10)
        {
          v100 = (void **)(a1 + 1280);
          sub_1D52A7D98((void **)(a1 + 1280), (unsigned __int16)v99);
          if (v99)
          {
            v101 = 0;
            do
            {
              sub_1D52917E4(a1, __p);
              v102 = sub_1D52848D4((uint64_t)__p[0]);
              v103 = v102;
              v104 = *(char **)(a1 + 1288);
              v105 = *(_QWORD *)(a1 + 1296);
              if ((unint64_t)v104 >= v105)
              {
                v107 = (char *)*v100;
                v108 = v104 - (_BYTE *)*v100;
                if (v108 <= -3)
                  sub_1D5282B8C();
                v109 = v108 >> 1;
                v110 = v105 - (_QWORD)v107;
                if (v110 <= (v108 >> 1) + 1)
                  v111 = v109 + 1;
                else
                  v111 = v110;
                if (v110 >= 0x7FFFFFFFFFFFFFFELL)
                  v112 = 0x7FFFFFFFFFFFFFFFLL;
                else
                  v112 = v111;
                if (v112)
                {
                  v113 = (char *)sub_1D52854A0(a1 + 1296, v112);
                  v104 = *(char **)(a1 + 1288);
                  v107 = *(char **)(a1 + 1280);
                }
                else
                {
                  v113 = 0;
                }
                v114 = &v113[2 * v109];
                *(_WORD *)v114 = v103;
                v106 = v114 + 2;
                while (v104 != v107)
                {
                  v115 = *((_WORD *)v104 - 1);
                  v104 -= 2;
                  *((_WORD *)v114 - 1) = v115;
                  v114 -= 2;
                }
                *(_QWORD *)(a1 + 1280) = v114;
                *(_QWORD *)(a1 + 1288) = v106;
                *(_QWORD *)(a1 + 1296) = &v113[2 * v112];
                if (v107)
                  operator delete(v107);
              }
              else
              {
                *(_WORD *)v104 = v102;
                v106 = v104 + 2;
              }
              *(_QWORD *)(a1 + 1288) = v106;
              v116 = (std::__shared_weak_count *)__p[1];
              if (__p[1])
              {
                v117 = (unint64_t *)((char *)__p[1] + 8);
                do
                  v118 = __ldaxr(v117);
                while (__stlxr(v118 - 1, v117));
                if (!v118)
                {
                  ((void (*)(std::__shared_weak_count *))v116->__on_zero_shared)(v116);
                  std::__shared_weak_count::__release_weak(v116);
                }
              }
              ++v101;
            }
            while (v101 != (unsigned __int16)v99);
          }
        }
        goto LABEL_292;
      case 0x7033u:
        goto LABEL_135;
      case 0x7034u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
          *(_WORD *)(a1 + 1304) = sub_1D52AD670((uint64_t)a3);
        return;
      case 0x7035u:
        if (a3[1] != 8 || *((_DWORD *)a3 + 1) != 33)
          return;
        sub_1D52917E4(a1, __p);
        LODWORD(__src) = sub_1D52A5CC8((uint64_t)a3);
        sub_1D5285B08((int *)v145, (int *)&__src);
        sub_1D5285164((uint64_t *)&v151, (uint64_t *)__p, (uint64_t)v145, 0);
        sub_1D5282EB4((uint64_t)__p);
        sub_1D52917E4(a1, __p);
        v119 = sub_1D52848D4((uint64_t)__p[0]);
        sub_1D5282EB4((uint64_t)__p);
        if (v119 <= 0x20)
        {
          v120 = (void **)(a1 + 1312);
          sub_1D52A7D98((void **)(a1 + 1312), (unsigned __int16)v119);
          if (v119)
          {
            v121 = 0;
            do
            {
              sub_1D52917E4(a1, __p);
              v122 = sub_1D52848D4((uint64_t)__p[0]);
              v123 = v122;
              v124 = *(char **)(a1 + 1320);
              v125 = *(_QWORD *)(a1 + 1328);
              if ((unint64_t)v124 >= v125)
              {
                v127 = (char *)*v120;
                v128 = v124 - (_BYTE *)*v120;
                if (v128 <= -3)
                  sub_1D5282B8C();
                v129 = v128 >> 1;
                v130 = v125 - (_QWORD)v127;
                if (v130 <= (v128 >> 1) + 1)
                  v131 = v129 + 1;
                else
                  v131 = v130;
                if (v130 >= 0x7FFFFFFFFFFFFFFELL)
                  v132 = 0x7FFFFFFFFFFFFFFFLL;
                else
                  v132 = v131;
                if (v132)
                {
                  v133 = (char *)sub_1D52854A0(a1 + 1328, v132);
                  v124 = *(char **)(a1 + 1320);
                  v127 = *(char **)(a1 + 1312);
                }
                else
                {
                  v133 = 0;
                }
                v134 = &v133[2 * v129];
                *(_WORD *)v134 = v123;
                v126 = v134 + 2;
                while (v124 != v127)
                {
                  v135 = *((_WORD *)v124 - 1);
                  v124 -= 2;
                  *((_WORD *)v134 - 1) = v135;
                  v134 -= 2;
                }
                *(_QWORD *)(a1 + 1312) = v134;
                *(_QWORD *)(a1 + 1320) = v126;
                *(_QWORD *)(a1 + 1328) = &v133[2 * v132];
                if (v127)
                  operator delete(v127);
              }
              else
              {
                *(_WORD *)v124 = v122;
                v126 = v124 + 2;
              }
              *(_QWORD *)(a1 + 1320) = v126;
              v136 = (std::__shared_weak_count *)__p[1];
              if (__p[1])
              {
                v137 = (unint64_t *)((char *)__p[1] + 8);
                do
                  v138 = __ldaxr(v137);
                while (__stlxr(v138 - 1, v137));
                if (!v138)
                {
                  ((void (*)(std::__shared_weak_count *))v136->__on_zero_shared)(v136);
                  std::__shared_weak_count::__release_weak(v136);
                }
              }
              ++v121;
            }
            while (v121 != (unsigned __int16)v119);
          }
        }
        goto LABEL_292;
      case 0x7036u:
        goto LABEL_118;
      case 0x7037u:
        if (a3[1] != 8 || *((_DWORD *)a3 + 1) != 17)
          return;
        sub_1D52917E4(a1, __p);
        LODWORD(__src) = sub_1D52A5CC8((uint64_t)a3);
        sub_1D5285B08((int *)v145, (int *)&__src);
        sub_1D5285164((uint64_t *)&v151, (uint64_t *)__p, (uint64_t)v145, 0);
        sub_1D5282EB4((uint64_t)__p);
        sub_1D52917E4(a1, __p);
        v79 = sub_1D52848D4((uint64_t)__p[0]);
        sub_1D5282EB4((uint64_t)__p);
        if (v79 <= 0x10)
        {
          v80 = (void **)(a1 + 1344);
          sub_1D52A7D98((void **)(a1 + 1344), (unsigned __int16)v79);
          if (v79)
          {
            v81 = 0;
            do
            {
              sub_1D52917E4(a1, __p);
              v82 = sub_1D52848D4((uint64_t)__p[0]);
              v83 = v82;
              v84 = *(char **)(a1 + 1352);
              v85 = *(_QWORD *)(a1 + 1360);
              if ((unint64_t)v84 >= v85)
              {
                v87 = (char *)*v80;
                v88 = v84 - (_BYTE *)*v80;
                if (v88 <= -3)
                  sub_1D5282B8C();
                v89 = v88 >> 1;
                v90 = v85 - (_QWORD)v87;
                if (v90 <= (v88 >> 1) + 1)
                  v91 = v89 + 1;
                else
                  v91 = v90;
                if (v90 >= 0x7FFFFFFFFFFFFFFELL)
                  v92 = 0x7FFFFFFFFFFFFFFFLL;
                else
                  v92 = v91;
                if (v92)
                {
                  v93 = (char *)sub_1D52854A0(a1 + 1360, v92);
                  v84 = *(char **)(a1 + 1352);
                  v87 = *(char **)(a1 + 1344);
                }
                else
                {
                  v93 = 0;
                }
                v94 = &v93[2 * v89];
                *(_WORD *)v94 = v83;
                v86 = v94 + 2;
                while (v84 != v87)
                {
                  v95 = *((_WORD *)v84 - 1);
                  v84 -= 2;
                  *((_WORD *)v94 - 1) = v95;
                  v94 -= 2;
                }
                *(_QWORD *)(a1 + 1344) = v94;
                *(_QWORD *)(a1 + 1352) = v86;
                *(_QWORD *)(a1 + 1360) = &v93[2 * v92];
                if (v87)
                  operator delete(v87);
              }
              else
              {
                *(_WORD *)v84 = v82;
                v86 = v84 + 2;
              }
              *(_QWORD *)(a1 + 1352) = v86;
              v96 = (std::__shared_weak_count *)__p[1];
              if (__p[1])
              {
                v97 = (unint64_t *)((char *)__p[1] + 8);
                do
                  v98 = __ldaxr(v97);
                while (__stlxr(v98 - 1, v97));
                if (!v98)
                {
                  ((void (*)(std::__shared_weak_count *))v96->__on_zero_shared)(v96);
                  std::__shared_weak_count::__release_weak(v96);
                }
              }
              ++v81;
            }
            while (v81 != (unsigned __int16)v79);
          }
        }
        goto LABEL_292;
      case 0x7038u:
        if (a3[1] != 3 || *((_DWORD *)a3 + 1) != 2)
          return;
        sub_1D52917E4(a1, __p);
        LODWORD(__src) = sub_1D52A5CC8((uint64_t)a3);
        sub_1D5285B08((int *)v145, (int *)&__src);
        sub_1D5285164((uint64_t *)&v151, (uint64_t *)__p, (uint64_t)v145, 0);
        sub_1D5282EB4((uint64_t)__p);
        sub_1D52917E4(a1, __p);
        v139 = sub_1D52848D4((uint64_t)__p[0]);
        sub_1D5282EB4((uint64_t)__p);
        sub_1D52917E4(a1, __p);
        v140 = (double)(int)sub_1D52848D4((uint64_t)__p[0]);
        sub_1D5282EB4((uint64_t)__p);
        v141 = *(unsigned __int8 *)(a1 + 1424);
        *(double *)(a1 + 1408) = (double)v139;
        *(double *)(a1 + 1416) = v140;
        if (!v141)
          *(_BYTE *)(a1 + 1424) = 1;
LABEL_292:
        sub_1D5285200((uint64_t *)&v151);
        return;
      case 0x7039u:
        if (a3[1] == 5 && *((_DWORD *)a3 + 1) == 3)
        {
          sub_1D52917E4(a1, __p);
          LODWORD(__src) = sub_1D52A5CC8((uint64_t)a3);
          sub_1D5285B08((int *)v145, (int *)&__src);
          sub_1D5285164((uint64_t *)&v151, (uint64_t *)__p, (uint64_t)v145, 0);
          sub_1D5282EB4((uint64_t)__p);
          sub_1D52917E4(a1, v145);
          v158[0] = sub_1D52849A0((uint64_t)v145[0]);
          sub_1D52917E4(a1, &__src);
          v158[1] = sub_1D52849A0(*(uint64_t *)&__src);
          sub_1D52917E4(a1, v144);
          v158[2] = sub_1D52849A0(v144[0]);
          sub_1D52EDC0C(__p, v158, 3uLL);
          sub_1D5282EB4((uint64_t)v144);
          sub_1D5282EB4((uint64_t)&__src);
          sub_1D5282EB4((uint64_t)v145);
          sub_1D52EDC8C(a1 + 1376, (uint64_t)__p);
          if (__p[0])
          {
            __p[1] = __p[0];
            operator delete(__p[0]);
          }
          sub_1D5285200((uint64_t *)&v151);
        }
        return;
      default:
        if (v6 != 28689)
        {
          if (v6 != 29184)
            goto LABEL_135;
          if (a3[1] == 4 && *((_DWORD *)a3 + 1) == 1)
            *(_DWORD *)(a1 + 1368) = *((_DWORD *)a3 + 2);
          return;
        }
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1))
          v142 = 0;
        else
          v142 = a3[1] == 3;
        v143 = v142 && *((_DWORD *)a3 + 1) == 4;
        if (!v143 || !sub_1D52B18D0((const void **)a2, "IFD0:SUBIFD0"))
          return;
        v151 = 0;
        v152 = 0;
        v153 = 0;
        if (!sub_1D52AE554(a1, (uint64_t)a3, (char **)&v151))
          goto LABEL_110;
        __p[0] = (void *)a2;
        v11 = sub_1D52B3E7C((uint64_t **)(a1 + 1240), (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)__p) + 7;
        if (v11 == (uint64_t *)&v151)
          goto LABEL_110;
        break;
    }
LABEL_37:
    sub_1D52B1D94((char *)v11, (char *)v151, (uint64_t)v152, (v152 - (_BYTE *)v151) >> 1);
LABEL_110:
    v30 = v151;
LABEL_111:
    if (!v30)
      return;
    v152 = (char *)v30;
    goto LABEL_313;
  }
  if (v6 == 330)
  {
    if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) != 0)
      return;
    (*(void (**)(void **__return_ptr, uint64_t))(*(_QWORD *)a1 + 224))(&v151, a1);
    if (!sub_1D52B18D0((const void **)&v151, "DSLR-A100"))
      goto LABEL_310;
    sub_1D52850A0(__p, "IFD0");
    v54 = sub_1D5294144(a1 + 536, __p);
    v55 = (void **)(a1 + 544) != v54 && *((_DWORD *)v54 + 14) == 3872;
    if (SHIBYTE(v150) < 0)
      operator delete(__p[0]);
    if (v55)
      *(_QWORD *)(a1 + 1184) = *((unsigned int *)a3 + 2);
    else
LABEL_310:
      sub_1D52ABE88((uint64_t **)a1, a2, a3);
    goto LABEL_311;
  }
  if (v6 == 28672)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1))
      v51 = 0;
    else
      v51 = a3[1] == 3;
    v52 = v51 && *((_DWORD *)a3 + 1) == 1;
    if (v52 && sub_1D52B18D0((const void **)a2, "IFD0:SUBIFD0"))
    {
      v53 = sub_1D52AD670((uint64_t)a3);
      v151 = (void *)a2;
      *((_WORD *)sub_1D52B417C((uint64_t **)(a1 + 1192), (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&v151) + 28) = v53;
    }
    return;
  }
  if (v6 != 28688)
    goto LABEL_135;
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1))
    v9 = 0;
  else
    v9 = a3[1] == 3;
  v10 = v9 && *((_DWORD *)a3 + 1) == 4;
  if (v10 && sub_1D52B18D0((const void **)a2, "IFD0:SUBIFD0"))
  {
    v151 = 0;
    v152 = 0;
    v153 = 0;
    if (!sub_1D52AE554(a1, (uint64_t)a3, (char **)&v151))
      goto LABEL_110;
    __p[0] = (void *)a2;
    v11 = sub_1D52B3E7C((uint64_t **)(a1 + 1216), (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)__p) + 7;
    if (v11 == (uint64_t *)&v151)
      goto LABEL_110;
    goto LABEL_37;
  }
}

void sub_1D52ECE80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,char a36)
{
  sub_1D5285200((uint64_t *)&a24);
  _Unwind_Resume(a1);
}

void sub_1D52ED138(_QWORD *a1, uint64_t a2, unsigned int a3, unsigned int a4, int a5)
{
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unint64_t v14;
  unsigned int v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *p_shared_owners;
  unint64_t v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  _DWORD *v33;
  int v34;
  unsigned int *v35;
  uint64_t v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  std::__shared_weak_count *v41;
  unint64_t *v42;
  unint64_t v43;
  int v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  __int128 v47;
  uint64_t v48[3];
  void *__p[3];
  unsigned int v50;
  _OWORD v51[32];
  uint64_t v52;

  v52 = *MEMORY[0x1E0C80C00];
  v50 = a3;
  if (a3 && a4 - 0x20000 >= 0xFFFE0801)
  {
    v8 = 0;
    memset(v51, 0, sizeof(v51));
    do
    {
      a5 = 48828125 * a5 + 1;
      *(_DWORD *)((char *)v51 + v8) = a5;
      v8 += 4;
    }
    while (v8 != 16);
    v9 = 0;
    v10 = DWORD2(v51[0]);
    v11 = v51[0];
    v12 = (*((_QWORD *)&v51[0] + 1) ^ (unint64_t)LODWORD(v51[0])) >> 31;
    HIDWORD(v51[0]) = v12;
    do
    {
      v13 = v10 ^ v11;
      v11 = *(_DWORD *)((char *)v51 + v9 + 4);
      v10 = v12;
      HIDWORD(v14) = v13;
      LODWORD(v14) = v12 ^ v11;
      v12 = v14 >> 31;
      *(_DWORD *)((char *)&v51[1] + v9) = v12;
      v9 += 4;
    }
    while (v9 != 492);
    v15 = a4 >> 2;
    sub_1D52854D0(__p, a4 >> 2);
    sub_1D52917E4((uint64_t)a1, &v47);
    sub_1D52B1C58(v48, (uint64_t *)&v47);
    v16 = (std::__shared_weak_count *)*((_QWORD *)&v47 + 1);
    if (*((_QWORD *)&v47 + 1))
    {
      v17 = (unint64_t *)(*((_QWORD *)&v47 + 1) + 8);
      do
        v18 = __ldaxr(v17);
      while (__stlxr(v18 - 1, v17));
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    sub_1D52917E4((uint64_t)a1, &v45);
    sub_1D5293C20((uint64_t *)&v47, &v45, 2);
    v19 = v46;
    if (v46)
    {
      p_shared_owners = (unint64_t *)&v46->__shared_owners_;
      do
        v21 = __ldaxr(p_shared_owners);
      while (__stlxr(v21 - 1, p_shared_owners));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    sub_1D52917E4((uint64_t)a1, &v45);
    v22 = v45;
    sub_1D5282F74(&v44, (int *)&v50);
    (*(void (**)(uint64_t, int *, _QWORD))(*(_QWORD *)v22 + 40))(v22, &v44, 0);
    v23 = v46;
    if (v46)
    {
      v24 = (unint64_t *)&v46->__shared_owners_;
      do
        v25 = __ldaxr(v24);
      while (__stlxr(v25 - 1, v24));
      if (!v25)
      {
        ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
        std::__shared_weak_count::__release_weak(v23);
      }
    }
    if (a4 >= 4)
    {
      v26 = 0;
      if (v15 <= 1)
        v27 = 1;
      else
        v27 = v15;
      do
      {
        sub_1D52917E4((uint64_t)a1, &v45);
        v28 = sub_1D52847F8(v45);
        *((_DWORD *)__p[0] + v26) = v28;
        v29 = v46;
        if (v46)
        {
          v30 = (unint64_t *)&v46->__shared_owners_;
          do
            v31 = __ldaxr(v30);
          while (__stlxr(v31 - 1, v30));
          if (!v31)
          {
            ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
            std::__shared_weak_count::__release_weak(v29);
          }
        }
        ++v26;
      }
      while (v26 != v27);
      v32 = 0;
      v33 = __p[0];
      do
      {
        v34 = *((_DWORD *)v51 + (((_BYTE)v32 - 64) & 0x7F)) ^ *((_DWORD *)v51 + (((_BYTE)v32 + 0x80) & 0x7F));
        *((_DWORD *)v51 + (((_BYTE)v32 - 1) & 0x7F)) = v34;
        v33[v32++] ^= v34;
      }
      while (v27 != v32);
      v35 = (unsigned int *)__p[0];
      do
      {
        *v35 = bswap32(*v35);
        ++v35;
        --v27;
      }
      while (v27);
    }
    sub_1D5293C98((uint64_t *)&v47);
    LODWORD(v45) = a4;
    sub_1D52843AC((uint64_t)__p[0], (uint64_t)&v45, 0, &v47);
    sub_1D52845EC(v47, 1);
    v36 = v47;
    v45 = -(uint64_t)v50;
    sub_1D528594C(&v44, &v45);
    sub_1D52845FC(v36, &v44);
    v37 = v47;
    sub_1D5282F74((int *)&v45, (int *)&v50);
    (*(void (**)(uint64_t, uint64_t *, _QWORD))(*(_QWORD *)v37 + 40))(v37, &v45, 0);
    sub_1D52917E4((uint64_t)a1, &v45);
    sub_1D52908C8(a1 + 10, (uint64_t *)&v47);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*a1 + 704))(a1, 0, a2);
    sub_1D52908C8(a1 + 10, &v45);
    v38 = v46;
    if (v46)
    {
      v39 = (unint64_t *)&v46->__shared_owners_;
      do
        v40 = __ldaxr(v39);
      while (__stlxr(v40 - 1, v39));
      if (!v40)
      {
        ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
        std::__shared_weak_count::__release_weak(v38);
      }
    }
    v41 = (std::__shared_weak_count *)*((_QWORD *)&v47 + 1);
    if (*((_QWORD *)&v47 + 1))
    {
      v42 = (unint64_t *)(*((_QWORD *)&v47 + 1) + 8);
      do
        v43 = __ldaxr(v42);
      while (__stlxr(v43 - 1, v42));
      if (!v43)
      {
        ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
        std::__shared_weak_count::__release_weak(v41);
      }
    }
    sub_1D5285200(v48);
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
  }
}

void sub_1D52ED5B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1D52ED674(uint64_t a1, const void **a2, uint64_t a3)
{
  void *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  int v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  int v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  unsigned int v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  size_t v32;
  void *v33;
  const void *v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  _QWORD *v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  uint64_t *v42;
  void *v43;
  void *v44;
  std::__shared_weak_count *v45;
  unint64_t *v46;
  unint64_t v47;
  __int128 v48;
  uint64_t v49;
  unsigned int v50;
  void *__p;
  std::__shared_weak_count *v52;
  void *v53;
  std::__shared_weak_count *v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  void **v58;

  v57 = a3;
  sub_1D52917E4(a1, &v53);
  v5 = v53;
  sub_1D528594C(&__p, &v57);
  (*(void (**)(void *, void **, _QWORD))(*(_QWORD *)v5 + 40))(v5, &__p, 0);
  v6 = v54;
  if (v54)
  {
    p_shared_owners = (unint64_t *)&v54->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  sub_1D52917E4(a1, &v53);
  v9 = sub_1D52847F8((uint64_t)v53);
  v10 = v54;
  if (v54)
  {
    v11 = (unint64_t *)&v54->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (v9 == 1230130432)
  {
    v56 = 0;
    sub_1D52917E4(a1, &v53);
    v13 = sub_1D52847F8((uint64_t)v53);
    v14 = v54;
    if (v54)
    {
      v15 = (unint64_t *)&v54->__shared_owners_;
      do
        v16 = __ldaxr(v15);
      while (__stlxr(v16 - 1, v15));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
        std::__shared_weak_count::__release_weak(v14);
      }
    }
    v56 = v13;
    sub_1D528304C(&v48, (unint64_t *)&v57);
    LODWORD(v53) = v48;
    v17 = *sub_1D52EFDFC(&v53, &v56);
    v53 = (void *)8;
    LODWORD(__p) = v17;
    v18 = *sub_1D52EFDFC(&__p, &v53);
    while (1)
    {
      sub_1D52917E4(a1, &v53);
      v19 = (*(uint64_t (**)(void *))(*(_QWORD *)v53 + 48))(v53);
      v20 = v54;
      if (v54)
      {
        v21 = (unint64_t *)&v54->__shared_owners_;
        do
          v22 = __ldaxr(v21);
        while (__stlxr(v22 - 1, v21));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
          std::__shared_weak_count::__release_weak(v20);
        }
      }
      v23 = v19;
      if (v19 >= v18)
        break;
      sub_1D52917E4(a1, &v53);
      v24 = sub_1D52847F8((uint64_t)v53);
      v25 = v54;
      if (v54)
      {
        v26 = (unint64_t *)&v54->__shared_owners_;
        do
          v27 = __ldaxr(v26);
        while (__stlxr(v27 - 1, v26));
        if (!v27)
        {
          ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
          std::__shared_weak_count::__release_weak(v25);
        }
      }
      sub_1D52917E4(a1, &v53);
      v28 = sub_1D52847F8((uint64_t)v53);
      v29 = v54;
      if (v54)
      {
        v30 = (unint64_t *)&v54->__shared_owners_;
        do
          v31 = __ldaxr(v30);
        while (__stlxr(v31 - 1, v30));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
          std::__shared_weak_count::__release_weak(v29);
        }
      }
      if (v24 == 1195529984)
      {
        if (*((char *)a2 + 23) >= 0)
          v32 = *((unsigned __int8 *)a2 + 23);
        else
          v32 = (size_t)a2[1];
        sub_1D52B1FA0((uint64_t)&v53, v32 + 4);
        if (v55 >= 0)
          v33 = &v53;
        else
          v33 = v53;
        if (v32)
        {
          if (*((char *)a2 + 23) >= 0)
            v34 = a2;
          else
            v34 = *a2;
          memmove(v33, v34, v32);
        }
        strcpy((char *)v33 + v32, ":WBG");
        sub_1D52917E4(a1, &__p);
        LODWORD(v48) = 4;
        (*(void (**)(void *, __int128 *, uint64_t))(*(_QWORD *)__p + 40))(__p, &v48, 1);
        v35 = v52;
        if (v52)
        {
          v36 = (unint64_t *)&v52->__shared_owners_;
          do
            v37 = __ldaxr(v36);
          while (__stlxr(v37 - 1, v36));
          if (!v37)
          {
            ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
            std::__shared_weak_count::__release_weak(v35);
          }
        }
        sub_1D52917E4(a1, &v48);
        v38 = (_QWORD *)v48;
        v50 = 4;
        sub_1D5285A24(&v58, &v50);
        sub_1D5284D2C(v38, (unsigned int *)&v58, (uint64_t *)&__p);
        v39 = (std::__shared_weak_count *)*((_QWORD *)&v48 + 1);
        if (*((_QWORD *)&v48 + 1))
        {
          v40 = (unint64_t *)(*((_QWORD *)&v48 + 1) + 8);
          do
            v41 = __ldaxr(v40);
          while (__stlxr(v41 - 1, v40));
          if (!v41)
          {
            ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
            std::__shared_weak_count::__release_weak(v39);
          }
        }
        v49 = 0;
        v48 = 0uLL;
        sub_1D52BA100((char *)&v48, (unsigned __int16 *)__p, (unsigned __int16 *)v52, ((char *)v52 - (_BYTE *)__p) >> 1);
        v58 = &v53;
        v42 = sub_1D52B3E7C((uint64_t **)(a1 + 120), &v53, (uint64_t)&unk_1D544A5C4, (__int128 **)&v58);
        v43 = (void *)v42[7];
        if (v43)
        {
          v42[8] = (uint64_t)v43;
          operator delete(v43);
          v42[7] = 0;
          v42[8] = 0;
          v42[9] = 0;
        }
        *(_OWORD *)(v42 + 7) = v48;
        v42[9] = v49;
        if (__p)
        {
          v52 = (std::__shared_weak_count *)__p;
          operator delete(__p);
        }
        if (v55 < 0)
          operator delete(v53);
      }
      sub_1D52917E4(a1, &v53);
      v44 = v53;
      __p = (void *)(v23 + v28 + 8);
      sub_1D528594C(&v48, (uint64_t *)&__p);
      (*(void (**)(void *, __int128 *, _QWORD))(*(_QWORD *)v44 + 40))(v44, &v48, 0);
      v45 = v54;
      if (v54)
      {
        v46 = (unint64_t *)&v54->__shared_owners_;
        do
          v47 = __ldaxr(v46);
        while (__stlxr(v47 - 1, v46));
        if (!v47)
        {
          ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
          std::__shared_weak_count::__release_weak(v45);
        }
      }
    }
  }
}

void sub_1D52EDB78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  sub_1D5282EB4((uint64_t)&a17);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52EDC0C(_QWORD *a1, const void *a2, unint64_t a3)
{
  char *v6;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a3)
  {
    sub_1D5282B4C(a1, a3);
    v6 = (char *)a1[1];
    memmove(v6, a2, 4 * a3);
    a1[1] = &v6[4 * a3];
  }
  return a1;
}

void sub_1D52EDC70(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D52EDC8C(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(a1 + 24))
  {
    if (a1 != a2)
      sub_1D5282A44((char *)a1, *(char **)a2, *(_QWORD *)(a2 + 8), (uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 2);
  }
  else
  {
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    sub_1D5287D44((_QWORD *)a1, *(const void **)a2, *(_QWORD *)(a2 + 8), (uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 2);
    *(_BYTE *)(a1 + 24) = 1;
  }
  return a1;
}

uint64_t sub_1D52EDD00(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 1336);
}

_QWORD *sub_1D52EDD08@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  return sub_1D5287CCC(a2, *(const void **)(a1 + 1344), *(_QWORD *)(a1 + 1352), (uint64_t)(*(_QWORD *)(a1 + 1352) - *(_QWORD *)(a1 + 1344)) >> 1);
}

char *sub_1D52EDD28(char *result, __int128 *a2, unsigned __int16 *a3)
{
  uint64_t *v3;
  int v4;
  int v5;
  __int128 *v6;

  if (*a3 != 34866)
    return (char *)sub_1D52AF16C((uint64_t)result, a2, a3);
  if (a3[1] == 4)
  {
    v4 = *((_DWORD *)a3 + 2);
    v6 = a2;
    v3 = sub_1D52B3E7C((uint64_t **)result + 24, (void **)a2, (uint64_t)&unk_1D544A5C4, &v6);
    return sub_1D5282A44((char *)v3 + 56, (char *)&v4, (uint64_t)&v5, 1uLL);
  }
  return result;
}

void sub_1D52EDDA4(void *a1@<X1>, void *a2@<X2>, uint64_t a3@<X3>, void *a4@<X4>, __int16 a5@<W5>, int a6@<W6>, void *a7@<X7>, uint64_t a8@<X8>)
{
  id v14;
  id v15;
  id v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  void *v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  id v37;
  id v39;

  v39 = a1;
  v14 = a2;
  v15 = a4;
  v16 = a7;
  v23 = objc_msgSend_isEqualToString_(v14, v17, (uint64_t)CFSTR("IFD[0]"), v18, v19) ^ 1;
  if (a3 != 330)
    LOBYTE(v23) = 1;
  if ((v23 & 1) != 0)
    goto LABEL_8;
  objc_msgSend_objectForKeyedSubscript_(v39, v20, (uint64_t)CFSTR("Model"), v21, v22);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend_isEqualToString_(v24, v25, (uint64_t)CFSTR("DSLR-A100"), v26, v27) & 1) == 0)
  {

    goto LABEL_8;
  }
  objc_msgSend_objectForKeyedSubscript_(v39, v28, (uint64_t)CFSTR("ImageWidth"), v29, v30);
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  v36 = objc_msgSend_intValue(v31, v32, v33, v34, v35);

  if (v36 != 3872)
  {
LABEL_8:
    sub_1D52A8B0C(v15, a5, a6, v16, a8);
    goto LABEL_9;
  }
  v37 = v16;
  *(_QWORD *)a8 = CFSTR("A100DataOffset");
  *(_WORD *)(a8 + 8) = 4;
  *(_DWORD *)(a8 + 12) = 1;
  *(_QWORD *)(a8 + 16) = v37;
LABEL_9:

}

void sub_1D52EDF00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

uint64_t sub_1D52EDF38(uint64_t a1, const void **a2, uint64_t a3)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  int v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  size_t v12;
  void *p_p;
  const void *v14;
  void *v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  size_t v19;
  void *v20;
  const void *v21;
  void *__p;
  std::__shared_weak_count *v24;
  char v25;
  int v26;
  uint64_t v27[3];
  uint64_t v28;

  v28 = a3;
  sub_1D52917E4(a1, &__p);
  sub_1D528594C(&v26, &v28);
  sub_1D5285164(v27, (uint64_t *)&__p, (uint64_t)&v26, 0);
  v5 = v24;
  if (v24)
  {
    p_shared_owners = (unint64_t *)&v24->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  sub_1D52917E4(a1, &__p);
  v8 = sub_1D52847F8((uint64_t)__p);
  v9 = v24;
  if (v24)
  {
    v10 = (unint64_t *)&v24->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (v8 == 1230130432)
  {
    if (*((char *)a2 + 23) >= 0)
      v12 = *((unsigned __int8 *)a2 + 23);
    else
      v12 = (size_t)a2[1];
    p_p = &__p;
    sub_1D52B1FA0((uint64_t)&__p, v12 + 8);
    if (v25 < 0)
      p_p = __p;
    if (v12)
    {
      if (*((char *)a2 + 23) >= 0)
        v14 = a2;
      else
        v14 = *a2;
      memmove(p_p, v14, v12);
    }
    strcpy((char *)p_p + v12, ":MRWInfo");
    sub_1D52ED674(a1, (const void **)&__p, v28);
  }
  else
  {
    sub_1D52917E4(a1, &__p);
    v15 = __p;
    sub_1D528594C(&v26, &v28);
    (*(void (**)(void *, int *, _QWORD))(*(_QWORD *)v15 + 40))(v15, &v26, 0);
    v16 = v24;
    if (v24)
    {
      v17 = (unint64_t *)&v24->__shared_owners_;
      do
        v18 = __ldaxr(v17);
      while (__stlxr(v18 - 1, v17));
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    if (*((char *)a2 + 23) >= 0)
      v19 = *((unsigned __int8 *)a2 + 23);
    else
      v19 = (size_t)a2[1];
    v20 = &__p;
    sub_1D52B1FA0((uint64_t)&__p, v19 + 11);
    if (v25 < 0)
      v20 = __p;
    if (v19)
    {
      if (*((char *)a2 + 23) >= 0)
        v21 = a2;
      else
        v21 = *a2;
      memmove(v20, v21, v19);
    }
    strcpy((char *)v20 + v19, ":SR2Private");
    (*(void (**)(uint64_t, _QWORD, void **))(*(_QWORD *)a1 + 704))(a1, 0, &__p);
  }
  if (v25 < 0)
    operator delete(__p);
  return sub_1D5285200(v27);
}

void sub_1D52EE1CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16)
{
  if (a14 < 0)
    operator delete(__p);
  sub_1D5285200(&a16);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52EE230(uint64_t a1)
{
  uint64_t v2;
  void **v3;
  uint64_t v4;
  void *__p[2];
  char v7;

  v2 = a1 + 1192;
  sub_1D52850A0(__p, "IFD0:SUBIFD0");
  v3 = sub_1D5294144(v2, __p);
  if ((void **)(a1 + 1200) == v3)
    v4 = 0;
  else
    v4 = *((unsigned __int16 *)v3 + 28);
  if (v7 < 0)
    operator delete(__p[0]);
  return v4;
}

void sub_1D52EE2A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D52EE2BC(uint64_t a1)
{
  int v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  _BOOL4 v8;
  _BOOL4 v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  unsigned __int8 *p_p;
  uint64_t v15;
  int v16;
  unsigned int v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  int v23;
  unsigned int v24;
  uint64_t v25;
  std::__shared_weak_count *v26;
  uint64_t v27;
  void *__p;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;

  v2 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1);
  if ((v2 & 1) != 0)
    return v2 ^ 1u;
  __p = 0;
  v29 = 0;
  v30 = 0;
  v27 = 0;
  sub_1D52917E4(a1, &v25);
  v3 = (*(int (**)(uint64_t))(*(_QWORD *)v25 + 48))(v25);
  v4 = v26;
  if (v26)
  {
    p_shared_owners = (unint64_t *)&v26->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v27 = v3;
  sub_1D52917E4(a1, &v25);
  v7 = v25;
  v24 = 9;
  sub_1D5285A24(&v31, &v24);
  v8 = sub_1D52849DC(v7, &v31, (uint64_t)&__p);
  v9 = v8;
  v10 = v26;
  if (!v26)
    goto LABEL_11;
  v11 = (unint64_t *)&v26->__shared_owners_;
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
    if (!v9)
      goto LABEL_28;
  }
  else
  {
LABEL_11:
    if (!v8)
      goto LABEL_28;
  }
  v13 = HIBYTE(v30);
  if (v30 < 0)
    v13 = v29;
  if (v13 == 9)
  {
    p_p = (unsigned __int8 *)&__p;
    if (v30 < 0)
      p_p = (unsigned __int8 *)__p;
    v15 = *(_QWORD *)p_p;
    v16 = p_p[8];
    if (v15 == 0x43534420594E4F53 && v16 == 32)
    {
      sub_1D52917E4(a1, &v25);
      v18 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v25 + 48))(v25);
      v23 = 3;
      v31 = v18;
      v24 = *sub_1D5284C34(&v31, &v23);
      (*(void (**)(uint64_t, unsigned int *))(*(_QWORD *)a1 + 160))(a1, &v24);
      v19 = v26;
      if (v26)
      {
        v20 = (unint64_t *)&v26->__shared_owners_;
        do
          v21 = __ldaxr(v20);
        while (__stlxr(v21 - 1, v20));
        if (!v21)
        {
          ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
          std::__shared_weak_count::__release_weak(v19);
        }
      }
      goto LABEL_29;
    }
  }
LABEL_28:
  sub_1D528594C(&v25, &v27);
  (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)a1 + 160))(a1, &v25);
LABEL_29:
  if (SHIBYTE(v30) < 0)
    operator delete(__p);
  return v2 ^ 1u;
}

void sub_1D52EE4F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_1D5282EB4((uint64_t)&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52EE534(uint64_t a1, uint64_t a2, unsigned __int16 *a3)
{
  uint64_t result;
  int v6;
  unsigned int v9;
  unsigned int v10;

  result = nullsub_6();
  v6 = *a3;
  if (v6 == 45057)
  {
    if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
    {
      v9 = 0;
      sub_1D5285A24(&v10, &v9);
      result = sub_1D52A7E28((uint64_t)a3, &v10);
      *(_DWORD *)(a1 + 1264) = result;
    }
  }
  else if (v6 == 8201 && a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
  {
    v9 = 0;
    sub_1D5285A24(&v10, &v9);
    result = sub_1D52A7E28((uint64_t)a3, &v10);
    *(_DWORD *)(a1 + 1268) = result;
  }
  return result;
}

uint64_t sub_1D52EE5E8(uint64_t a1)
{
  uint64_t v1;
  void *__p[2];
  char v5;

  v1 = *(_QWORD *)(a1 + 1184);
  if (!v1)
  {
    sub_1D52850A0(__p, "IFD0:SUBIFD0");
    v1 = sub_1D52B0BBC(a1, __p);
    if (v5 < 0)
      operator delete(__p[0]);
  }
  return v1;
}

void sub_1D52EE648(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D52EE664(uint64_t a1)
{
  uint64_t v1;
  void *__p[2];
  char v5;

  if (*(_QWORD *)(a1 + 1184))
    return 0;
  sub_1D52850A0(__p, "IFD0:SUBIFD0");
  v1 = sub_1D52B0C2C(a1, __p);
  if (v5 < 0)
    operator delete(__p[0]);
  return v1;
}

void sub_1D52EE6CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

unint64_t sub_1D52EE6E8(uint64_t a1)
{
  unint64_t v2;
  void *__p[2];
  char v5;

  if (*(_QWORD *)(a1 + 1184))
    sub_1D52850A0(__p, "IFD0");
  else
    sub_1D52850A0(__p, "IFD0:SUBIFD0");
  v2 = sub_1D52B0D58(a1, __p);
  if (v5 < 0)
    operator delete(__p[0]);
  return v2;
}

void sub_1D52EE768(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D52EE788(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 1440) && *(_BYTE *)(a1 + 1452))
    return *(_QWORD *)(a1 + 1432);
  else
    return sub_1D529192C(a1);
}

void sub_1D52EE7BC(uint64_t a1@<X0>, unsigned int *a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X8>)
{
  void **v8;
  void **v9;
  int v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  void **v20;
  void **v21;
  unsigned int v22;
  _BOOL4 v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  _DWORD *v36;
  int v37;
  _DWORD *v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void **v48;
  void **v49;
  uint64_t v50;
  unint64_t *v51;
  _BOOL4 v52;
  int v53;
  char v54;
  void **v55;
  std::__shared_weak_count *v56;
  unint64_t *v57;
  unint64_t v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  void *v62;
  void *exception;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  std::__shared_weak_count *v67;
  void *v68[2];
  char v69;
  void *v70;
  void *v71;
  uint64_t v72;
  void *v73;
  std::__shared_weak_count *v74;
  uint64_t v75;
  __int16 v76;
  void *v77[2];
  uint64_t v78;
  void *v79;
  std::__shared_weak_count *v80;
  _DWORD *v81;
  __int128 __p;
  _DWORD *v83;
  void *v84;
  void *v85;
  uint64_t v86;
  void *v87;
  void *v88;
  uint64_t v89;

  v87 = 0;
  v88 = 0;
  v89 = 0;
  v84 = 0;
  v85 = 0;
  v86 = 0;
  sub_1D52850A0(&__p, "IFD0:SUBIFD0");
  v8 = sub_1D5294144(a1 + 1192, (void **)&__p);
  v9 = v8;
  if ((void **)(a1 + 1200) == v8)
    v10 = 0;
  else
    v10 = *((unsigned __int16 *)v8 + 28);
  if (SHIBYTE(v83) < 0)
    operator delete((void *)__p);
  if ((void **)(a1 + 1200) != v9)
  {
    switch(v10)
    {
      case 0:
        (*(void (**)(void **__return_ptr, uint64_t))(*(_QWORD *)a1 + 384))(&v79, a1);
        v77[0] = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 424))(a1);
        sub_1D52C0774(&v79, (unint64_t *)v77, a2, a3, &__p);
        v11 = v80;
        if (v80)
        {
          p_shared_owners = (unint64_t *)&v80->__shared_owners_;
          do
            v13 = __ldaxr(p_shared_owners);
          while (__stlxr(v13 - 1, p_shared_owners));
          if (!v13)
          {
            ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
            std::__shared_weak_count::__release_weak(v11);
          }
        }
        v14 = __p;
        v79 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 432))(a1);
        sub_1D528304C(v77, (unint64_t *)&v79);
        (*(void (**)(uint64_t, void **))(*(_QWORD *)v14 + 32))(v14, v77);
        v15 = __p;
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 104))(a1);
        sub_1D530CBD8(v15, v16);
        goto LABEL_67;
      case 1:
        (*(void (**)(void **__return_ptr, uint64_t))(*(_QWORD *)a1 + 384))(&v79, a1);
        v77[0] = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 424))(a1);
        sub_1D52EFE74(&v79, (unint64_t *)v77, a2, a3, &__p);
        v24 = v80;
        if (v80)
        {
          v25 = (unint64_t *)&v80->__shared_owners_;
          do
            v26 = __ldaxr(v25);
          while (__stlxr(v26 - 1, v25));
          if (!v26)
          {
            ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
            std::__shared_weak_count::__release_weak(v24);
          }
        }
        v27 = __p;
        v79 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 432))(a1);
        sub_1D528304C(v77, (unint64_t *)&v79);
        (*(void (**)(uint64_t, void **))(*(_QWORD *)v27 + 32))(v27, v77);
        v28 = __p;
        v29 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 104))(a1);
        sub_1D530CBD8(v28, v29);
        sub_1D5319468(__p, 0);
        sub_1D5319470(__p, 1);
        goto LABEL_67;
      case 2:
        sub_1D52850A0(&__p, "IFD0:SUBIFD0");
        if (sub_1D52AE940(a1 + 1216, (void **)&__p, (char *)&v87))
        {
          sub_1D52850A0(&v79, "IFD0:SUBIFD0");
          v23 = sub_1D52AE940(a1 + 1240, &v79, (char *)&v84);
          if (SHIBYTE(v81) < 0)
            operator delete(v79);
        }
        else
        {
          v23 = 0;
        }
        if (SHIBYTE(v83) < 0)
        {
          operator delete((void *)__p);
          if (v23)
          {
LABEL_50:
            (*(void (**)(void **__return_ptr, uint64_t))(*(_QWORD *)a1 + 384))(&v79, a1);
            v77[0] = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 424))(a1);
            sub_1D52EFF64(&v79, (unint64_t *)v77, a2, a3, &__p);
            v42 = v80;
            if (v80)
            {
              v43 = (unint64_t *)&v80->__shared_owners_;
              do
                v44 = __ldaxr(v43);
              while (__stlxr(v44 - 1, v43));
              if (!v44)
              {
                ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
                std::__shared_weak_count::__release_weak(v42);
              }
            }
            v45 = __p;
            v79 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 432))(a1);
            sub_1D528304C(v77, (unint64_t *)&v79);
            (*(void (**)(uint64_t, void **))(*(_QWORD *)v45 + 32))(v45, v77);
            v46 = __p;
            v47 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 104))(a1);
            sub_1D530CBD8(v46, v47);
            sub_1D5365714(__p, (uint64_t)&v87);
            sub_1D5365738(__p, (uint64_t)&v84);
            goto LABEL_67;
          }
        }
        else if (v23)
        {
          goto LABEL_50;
        }
LABEL_62:
        (*(void (**)(void **__return_ptr, uint64_t))(*(_QWORD *)a1 + 384))(&v79, a1);
        v77[0] = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 424))(a1);
        sub_1D52F00AC(&v79, (unint64_t *)v77, a2, a3, &__p);
        v17 = v80;
        if (!v80)
          goto LABEL_67;
        v51 = (unint64_t *)&v80->__shared_owners_;
        do
          v19 = __ldaxr(v51);
        while (__stlxr(v19 - 1, v51));
        break;
      case 3:
        goto LABEL_62;
      case 4:
        __p = 0uLL;
        v83 = 0;
        v79 = 0;
        v80 = 0;
        v81 = 0;
        sub_1D52B0DE4(a1, 0, v77);
        v20 = sub_1D5294144(a1 + 872, v77);
        v21 = v20;
        if ((void **)(a1 + 880) == v20)
          v22 = 0;
        else
          v22 = *((_DWORD *)v20 + 14);
        if (SHIBYTE(v78) < 0)
          operator delete(v77[0]);
        sub_1D52B0DE4(a1, 0, v77);
        v48 = sub_1D5294144(a1 + 896, v77);
        v49 = v48;
        v64 = v22;
        if ((void **)(a1 + 904) == v48)
          v50 = 0;
        else
          v50 = *((unsigned int *)v48 + 14);
        if (SHIBYTE(v78) < 0)
          operator delete(v77[0]);
        sub_1D52B0DE4(a1, 0, v77);
        v52 = sub_1D52EF584(a1 + 920, v77, (char *)&__p);
        if (SHIBYTE(v78) < 0)
          operator delete(v77[0]);
        sub_1D52B0DE4(a1, 0, v77);
        v53 = v52 | sub_1D52EF584(a1 + 944, v77, (char *)&v79);
        if ((void **)(a1 + 904) != v49)
          LOBYTE(v53) = 1;
        if ((void **)(a1 + 880) == v21)
          v54 = v53;
        else
          v54 = 1;
        if (SHIBYTE(v78) < 0)
          operator delete(v77[0]);
        if ((v54 & 1) == 0)
        {
          exception = __cxa_allocate_exception(0x10uLL);
          MEMORY[0x1D8271938](exception, "RawCameraException");
          __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
        }
        if (sub_1D52EF5E8(a1))
        {
          v76 = 0;
          v77[0] = 0;
          v77[1] = 0;
          v78 = 0;
          v73 = 0;
          v74 = 0;
          v75 = 0;
          v70 = 0;
          v71 = 0;
          v72 = 0;
          sub_1D52850A0(v68, "IFD0:SUBIFD0");
          v55 = sub_1D5294144(a1 + 1128, v68);
          if ((void **)(a1 + 1136) != v55)
            v76 = *((_WORD *)v55 + 28);
          if (v69 < 0)
            operator delete(v68[0]);
          sub_1D52850A0(v68, "IFD0:SUBIFD0");
          sub_1D52AE940(a1 + 1104, v68, (char *)v77);
          if (v69 < 0)
            operator delete(v68[0]);
          sub_1D52850A0(v68, "IFD0:SUBIFD0");
          sub_1D52EF584(a1 + 1080, v68, (char *)&v73);
          if (v69 < 0)
            operator delete(v68[0]);
          sub_1D52850A0(v68, "IFD0:SUBIFD0");
          sub_1D52EF584(a1 + 1152, v68, (char *)&v70);
          if (v69 < 0)
            operator delete(v68[0]);
          (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)a1 + 384))(&v66, a1);
          v65 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 424))(a1);
          sub_1D52F032C(&v66, (unint64_t *)&v65, a2, a3, (uint64_t)&v73, (uint64_t)v77, &v76, v68, (uint64_t)&v70);
          v56 = v67;
          if (v67)
          {
            v57 = (unint64_t *)&v67->__shared_owners_;
            do
              v58 = __ldaxr(v57);
            while (__stlxr(v58 - 1, v57));
            if (!v58)
            {
              ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
              std::__shared_weak_count::__release_weak(v56);
            }
          }
          (*(void (**)(void *, _QWORD, uint64_t, __int128 *, void **))(*(_QWORD *)v68[0] + 200))(v68[0], v64, v50, &__p, &v79);
          *(_OWORD *)a4 = *(_OWORD *)v68;
          if (v70)
          {
            v71 = v70;
            operator delete(v70);
          }
          if (v73)
          {
            v74 = (std::__shared_weak_count *)v73;
            operator delete(v73);
          }
          if (v77[0])
          {
            v77[1] = v77[0];
            operator delete(v77[0]);
          }
        }
        else
        {
          (*(void (**)(void **__return_ptr, uint64_t))(*(_QWORD *)a1 + 384))(&v73, a1);
          v70 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 424))(a1);
          sub_1D52F01E4(&v73, (unint64_t *)&v70, a2, a3, v77);
          v59 = v74;
          if (v74)
          {
            v60 = (unint64_t *)&v74->__shared_owners_;
            do
              v61 = __ldaxr(v60);
            while (__stlxr(v61 - 1, v60));
            if (!v61)
            {
              ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
              std::__shared_weak_count::__release_weak(v59);
            }
          }
          (*(void (**)(void *, _QWORD, uint64_t, __int128 *, void **))(*(_QWORD *)v77[0] + 200))(v77[0], v64, v50, &__p, &v79);
          *(_OWORD *)a4 = *(_OWORD *)v77;
        }
        if (v79)
        {
          v80 = (std::__shared_weak_count *)v79;
          operator delete(v79);
        }
        if ((_QWORD)__p)
        {
          *((_QWORD *)&__p + 1) = __p;
          operator delete((void *)__p);
        }
        goto LABEL_68;
      case 5:
        LODWORD(v73) = 0;
        sub_1D52B0DE4(a1, 0, &__p);
        sub_1D52A8AA4(a1, (void **)&__p, 0, &v73);
        if (SHIBYTE(v83) < 0)
          operator delete((void *)__p);
        if ((_DWORD)v73 != 32)
        {
          v62 = __cxa_allocate_exception(0x10uLL);
          MEMORY[0x1D8271938](v62, "RawCameraException");
          __cxa_throw(v62, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
        }
        (*(void (**)(__int128 *__return_ptr, uint64_t))(*(_QWORD *)a1 + 384))(&__p, a1);
        v79 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 424))(a1);
        sub_1D52F0724(&__p, (unint64_t *)&v79, a2, a3, v77);
        v30 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
        if (*((_QWORD *)&__p + 1))
        {
          v31 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
          do
            v32 = __ldaxr(v31);
          while (__stlxr(v32 - 1, v31));
          if (!v32)
          {
            ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
            std::__shared_weak_count::__release_weak(v30);
          }
        }
        v33 = v77[0];
        *(_QWORD *)&__p = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 432))(a1);
        sub_1D528304C(&v79, (unint64_t *)&__p);
        (*(void (**)(void *, void **))(*(_QWORD *)v33 + 32))(v33, &v79);
        v34 = v77[0];
        v35 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 104))(a1);
        sub_1D530CBD8((uint64_t)v34, v35);
        LODWORD(v34) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 424))(a1);
        v36 = operator new(4uLL);
        *(_QWORD *)&__p = v36;
        *v36 = (_DWORD)v34;
        *((_QWORD *)&__p + 1) = v36 + 1;
        v83 = v36 + 1;
        v37 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 432))(a1);
        v38 = operator new(4uLL);
        v79 = v38;
        *v38 = v37;
        v80 = (std::__shared_weak_count *)(v38 + 1);
        v81 = v38 + 1;
        (*(void (**)(void *, _QWORD, _QWORD, __int128 *, void **))(*(_QWORD *)v77[0] + 200))(v77[0], *a2, a2[1], &__p, &v79);
        (*(void (**)(void *, uint64_t))(*(_QWORD *)v77[0] + 64))(v77[0], 3);
        (*(void (**)(void *, uint64_t))(*(_QWORD *)v77[0] + 48))(v77[0], 3);
        *(_OWORD *)a4 = *(_OWORD *)v77;
        v77[0] = 0;
        v77[1] = 0;
        if (v79)
        {
          v80 = (std::__shared_weak_count *)v79;
          operator delete(v79);
        }
        if ((_QWORD)__p)
        {
          *((_QWORD *)&__p + 1) = __p;
          operator delete((void *)__p);
        }
        v39 = (std::__shared_weak_count *)v77[1];
        if (v77[1])
        {
          v40 = (unint64_t *)((char *)v77[1] + 8);
          do
            v41 = __ldaxr(v40);
          while (__stlxr(v41 - 1, v40));
          if (!v41)
          {
            ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
            std::__shared_weak_count::__release_weak(v39);
          }
        }
        goto LABEL_68;
      default:
        *(_QWORD *)a4 = 0;
        *(_QWORD *)(a4 + 8) = 0;
        goto LABEL_68;
    }
    goto LABEL_65;
  }
  (*(void (**)(void **__return_ptr, uint64_t))(*(_QWORD *)a1 + 384))(&v79, a1);
  v77[0] = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 424))(a1);
  sub_1D52F00AC(&v79, (unint64_t *)v77, a2, a3, &__p);
  v17 = v80;
  if (v80)
  {
    v18 = (unint64_t *)&v80->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
LABEL_65:
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
LABEL_67:
  *(_OWORD *)a4 = __p;
LABEL_68:
  if (v84)
  {
    v85 = v84;
    operator delete(v84);
  }
  if (v87)
  {
    v88 = v87;
    operator delete(v87);
  }
}

void sub_1D52EF31C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *__p,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45)
{
  uint64_t v45;
  void *v47;
  void *v48;

  sub_1D5282EB4((uint64_t)&a15);
  if (__p)
  {
    a22 = (uint64_t)__p;
    operator delete(__p);
  }
  if (a24)
  {
    a25 = (uint64_t)a24;
    operator delete(a24);
  }
  if (a28)
  {
    a29 = (uint64_t)a28;
    operator delete(a28);
  }
  if (a34)
  {
    a35 = (uint64_t)a34;
    operator delete(a34);
  }
  if (a40)
  {
    a41 = (uint64_t)a40;
    operator delete(a40);
  }
  v47 = *(void **)(v45 - 152);
  if (v47)
  {
    *(_QWORD *)(v45 - 144) = v47;
    operator delete(v47);
  }
  v48 = *(void **)(v45 - 128);
  if (v48)
  {
    *(_QWORD *)(v45 - 120) = v48;
    operator delete(v48);
  }
  _Unwind_Resume(a1);
}

BOOL sub_1D52EF584(uint64_t a1, void **a2, char *a3)
{
  void **v5;
  void **v6;
  void **v7;

  v5 = sub_1D5294144(a1, a2);
  v6 = v5;
  v7 = (void **)(a1 + 8);
  if (v7 != v5 && v5 + 7 != (void **)a3)
    sub_1D5282A44(a3, (char *)v5[7], (uint64_t)v5[8], ((_BYTE *)v5[8] - (_BYTE *)v5[7]) >> 2);
  return v7 != v6;
}

BOOL sub_1D52EF5E8(uint64_t a1)
{
  uint64_t v2;
  void **v3;
  void **v4;
  void **v5;
  int v6;
  void *__p[2];
  char v10;

  v2 = a1 + 632;
  sub_1D52850A0(__p, "IFD0:SUBIFD0");
  v3 = sub_1D5294144(v2, __p);
  v4 = v3;
  v5 = (void **)(a1 + 640);
  if (v5 == v3)
    v6 = 0;
  else
    v6 = *((_DWORD *)v3 + 14);
  if (v10 < 0)
    operator delete(__p[0]);
  return v5 != v4 && v6 == 6;
}

void sub_1D52EF66C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1D52EF688(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  unint64_t v5;
  __int128 v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  int v27;
  unint64_t v28;
  unint64_t v29;
  __int128 v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  __int128 v37;
  uint64_t v38;
  int v39;
  unint64_t v40;
  unint64_t v41;
  __int128 v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  char *v48;
  __int128 v49;
  uint64_t v50;
  int v51;
  void *__p[2];
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t *v58;
  char __str[16];
  uint64_t v60;

  v60 = *MEMORY[0x1E0C80C00];
  snprintf(__str, 0x10uLL, "%d", *(_DWORD *)(a1 + 1264));
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  sub_1D52850A0(__p, "arw");
  v4 = a2[2];
  v5 = a2[1];
  if (v5 >= v4)
  {
    v7 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *a2) >> 3);
    v8 = v7 + 1;
    if (v7 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v9 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v4 - *a2) >> 3);
    if (2 * v9 > v8)
      v8 = 2 * v9;
    if (v9 >= 0x555555555555555)
      v10 = 0xAAAAAAAAAAAAAAALL;
    else
      v10 = v8;
    v58 = a2 + 2;
    if (v10)
      v11 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v10);
    else
      v11 = 0;
    v12 = &v11[24 * v7];
    v54 = v11;
    v55 = v12;
    v57 = &v11[24 * v10];
    v13 = *(_OWORD *)__p;
    *((_QWORD *)v12 + 2) = v53;
    *(_OWORD *)v12 = v13;
    __p[1] = 0;
    v53 = 0;
    __p[0] = 0;
    v56 = v12 + 24;
    sub_1D5293D58(a2, &v54);
    v14 = a2[1];
    sub_1D5293F24((uint64_t)&v54);
    v15 = SHIBYTE(v53);
    a2[1] = v14;
    if (v15 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v6 = *(_OWORD *)__p;
    *(_QWORD *)(v5 + 16) = v53;
    *(_OWORD *)v5 = v6;
    a2[1] = v5 + 24;
  }
  sub_1D52850A0(__p, "sony");
  v17 = a2[1];
  v16 = a2[2];
  if (v17 >= v16)
  {
    v19 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v17 - *a2) >> 3);
    v20 = v19 + 1;
    if (v19 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v21 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v16 - *a2) >> 3);
    if (2 * v21 > v20)
      v20 = 2 * v21;
    if (v21 >= 0x555555555555555)
      v22 = 0xAAAAAAAAAAAAAAALL;
    else
      v22 = v20;
    v58 = a2 + 2;
    if (v22)
      v23 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v22);
    else
      v23 = 0;
    v24 = &v23[24 * v19];
    v54 = v23;
    v55 = v24;
    v57 = &v23[24 * v22];
    v25 = *(_OWORD *)__p;
    *((_QWORD *)v24 + 2) = v53;
    *(_OWORD *)v24 = v25;
    __p[1] = 0;
    v53 = 0;
    __p[0] = 0;
    v56 = v24 + 24;
    sub_1D5293D58(a2, &v54);
    v26 = a2[1];
    sub_1D5293F24((uint64_t)&v54);
    v27 = SHIBYTE(v53);
    a2[1] = v26;
    if (v27 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v18 = *(_OWORD *)__p;
    *(_QWORD *)(v17 + 16) = v53;
    *(_OWORD *)v17 = v18;
    a2[1] = v17 + 24;
  }
  sub_1D52850A0(__p, __str);
  v29 = a2[1];
  v28 = a2[2];
  if (v29 >= v28)
  {
    v31 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v29 - *a2) >> 3);
    v32 = v31 + 1;
    if (v31 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v33 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v28 - *a2) >> 3);
    if (2 * v33 > v32)
      v32 = 2 * v33;
    if (v33 >= 0x555555555555555)
      v34 = 0xAAAAAAAAAAAAAAALL;
    else
      v34 = v32;
    v58 = a2 + 2;
    if (v34)
      v35 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v34);
    else
      v35 = 0;
    v36 = &v35[24 * v31];
    v54 = v35;
    v55 = v36;
    v57 = &v35[24 * v34];
    v37 = *(_OWORD *)__p;
    *((_QWORD *)v36 + 2) = v53;
    *(_OWORD *)v36 = v37;
    __p[1] = 0;
    v53 = 0;
    __p[0] = 0;
    v56 = v36 + 24;
    sub_1D5293D58(a2, &v54);
    v38 = a2[1];
    sub_1D5293F24((uint64_t)&v54);
    v39 = SHIBYTE(v53);
    a2[1] = v38;
    if (v39 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v30 = *(_OWORD *)__p;
    *(_QWORD *)(v29 + 16) = v53;
    *(_OWORD *)v29 = v30;
    a2[1] = v29 + 24;
  }
  if (sub_1D52EF5E8(a1))
  {
    sub_1D52850A0(__p, "sraw");
    v41 = a2[1];
    v40 = a2[2];
    if (v41 >= v40)
    {
      v43 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v41 - *a2) >> 3);
      v44 = v43 + 1;
      if (v43 + 1 > 0xAAAAAAAAAAAAAAALL)
        sub_1D5282B8C();
      v45 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v40 - *a2) >> 3);
      if (2 * v45 > v44)
        v44 = 2 * v45;
      if (v45 >= 0x555555555555555)
        v46 = 0xAAAAAAAAAAAAAAALL;
      else
        v46 = v44;
      v58 = a2 + 2;
      if (v46)
        v47 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v46);
      else
        v47 = 0;
      v48 = &v47[24 * v43];
      v54 = v47;
      v55 = v48;
      v57 = &v47[24 * v46];
      v49 = *(_OWORD *)__p;
      *((_QWORD *)v48 + 2) = v53;
      *(_OWORD *)v48 = v49;
      __p[1] = 0;
      v53 = 0;
      __p[0] = 0;
      v56 = v48 + 24;
      sub_1D5293D58(a2, &v54);
      v50 = a2[1];
      sub_1D5293F24((uint64_t)&v54);
      v51 = SHIBYTE(v53);
      a2[1] = v50;
      if (v51 < 0)
        operator delete(__p[0]);
    }
    else
    {
      v42 = *(_OWORD *)__p;
      *(_QWORD *)(v41 + 16) = v53;
      *(_OWORD *)v41 = v42;
      a2[1] = v41 + 24;
    }
  }
}

void sub_1D52EFB30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  sub_1D5293F24((uint64_t)&a16);
  if (a15 < 0)
    operator delete(__p);
  sub_1D5293CCC((void ***)&__p);
  _Unwind_Resume(a1);
}

void sub_1D52EFB9C(uint64_t a1)
{
  sub_1D52EFC34(a1);
  JUMPOUT(0x1D8271ADCLL);
}

char *sub_1D52EFBC0(char *result, unsigned __int16 *a2, unsigned __int16 *a3, unint64_t a4)
{
  char *v6;
  double *v7;
  unsigned int v8;

  if (a4)
  {
    v6 = result;
    result = sub_1D5282CE8(result, a4);
    v7 = (double *)*((_QWORD *)v6 + 1);
    while (a2 != a3)
    {
      v8 = *a2++;
      *v7++ = (double)v8;
    }
    *((_QWORD *)v6 + 1) = v7;
  }
  return result;
}

void sub_1D52EFC18(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D52EFC34(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  *(_QWORD *)a1 = off_1E9975A58;
  if (*(_BYTE *)(a1 + 1400))
  {
    v2 = *(void **)(a1 + 1376);
    if (v2)
    {
      *(_QWORD *)(a1 + 1384) = v2;
      operator delete(v2);
    }
  }
  v3 = *(void **)(a1 + 1344);
  if (v3)
  {
    *(_QWORD *)(a1 + 1352) = v3;
    operator delete(v3);
  }
  v4 = *(void **)(a1 + 1312);
  if (v4)
  {
    *(_QWORD *)(a1 + 1320) = v4;
    operator delete(v4);
  }
  v5 = *(void **)(a1 + 1280);
  if (v5)
  {
    *(_QWORD *)(a1 + 1288) = v5;
    operator delete(v5);
  }
  sub_1D5294068(a1 + 1240, *(_QWORD **)(a1 + 1248));
  sub_1D5294068(a1 + 1216, *(_QWORD **)(a1 + 1224));
  sub_1D52940F4(a1 + 1192, *(char **)(a1 + 1200));
  return sub_1D52B2190(a1);
}

void sub_1D52EFCCC(uint64_t *a1@<X1>, char *a2@<X2>, void **a3@<X3>, void **a4@<X4>, _QWORD *a5@<X8>)
{
  _QWORD *v10;

  v10 = operator new(0x5C8uLL);
  sub_1D52EFD4C(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;
  sub_1D5285658((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1D52EFD38(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52EFD4C(_QWORD *a1, uint64_t *a2, char *a3, void **a4, void **a5)
{
  a1[2] = 0;
  *a1 = &unk_1E9975D98;
  a1[1] = 0;
  sub_1D52EB7D4((uint64_t)(a1 + 3), a2, *a3, *a4, *a5);
  return a1;
}

void sub_1D52EFD90(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52EFDA4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9975D98;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52EFDB8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9975D98;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52EFDEC(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a1 + 24) + 16))(a1 + 24);
}

_DWORD *sub_1D52EFDFC(_DWORD *result, _QWORD *a2)
{
  uint64_t v2;
  BOOL v3;
  unint64_t v4;
  void *exception;

  v2 = *result;
  v3 = __CFADD__(v2, *a2);
  v4 = v2 + *a2;
  *result = v4;
  if (v3 || HIDWORD(v4))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  return result;
}

void sub_1D52EFE60(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D52EFE74(_QWORD *a1@<X1>, unint64_t *a2@<X2>, _QWORD *a3@<X3>, _OWORD *a4@<X4>, _QWORD *a5@<X8>)
{
  _QWORD *v10;

  v10 = operator new(0xE8uLL);
  sub_1D52EFEF4(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;
  sub_1D5285658((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1D52EFEE0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52EFEF4(_QWORD *a1, _QWORD *a2, unint64_t *a3, _QWORD *a4, _OWORD *a5)
{
  a1[2] = 0;
  *a1 = &unk_1E9974C00;
  a1[1] = 0;
  sub_1D530B330((uint64_t)(a1 + 3), a2, *a3, a4, a5);
  a1[3] = &unk_1E998D948;
  *(_QWORD *)((char *)a1 + 212) = 0x100000000;
  a1[28] = 0;
  return a1;
}

void sub_1D52EFF50(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52EFF64(_QWORD *a1@<X1>, unint64_t *a2@<X2>, _QWORD *a3@<X3>, _OWORD *a4@<X4>, _QWORD *a5@<X8>)
{
  _QWORD *v10;

  v10 = operator new(0x108uLL);
  sub_1D52EFFE4((uint64_t)v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;
  sub_1D5285658((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1D52EFFD0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52EFFE4(uint64_t a1, _QWORD *a2, unint64_t *a3, _QWORD *a4, _OWORD *a5)
{
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = &unk_1E9975DE8;
  *(_QWORD *)(a1 + 8) = 0;
  sub_1D530B330(a1 + 24, a2, *a3, a4, a5);
  *(_QWORD *)(a1 + 24) = &off_1E998BF38;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  return a1;
}

void sub_1D52F0040(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52F0054(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9975DE8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52F0068(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9975DE8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52F009C(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_1D52F00AC(_QWORD *a1@<X1>, unint64_t *a2@<X2>, _QWORD *a3@<X3>, _OWORD *a4@<X4>, _QWORD *a5@<X8>)
{
  _QWORD *v10;

  v10 = operator new(0xD8uLL);
  sub_1D52F012C(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;
  sub_1D5285658((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1D52F0118(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52F012C(_QWORD *a1, _QWORD *a2, unint64_t *a3, _QWORD *a4, _OWORD *a5)
{
  a1[2] = 0;
  *a1 = &unk_1E9975E38;
  a1[1] = 0;
  sub_1D530B330((uint64_t)(a1 + 3), a2, *a3, a4, a5);
  a1[3] = &unk_1E9978828;
  return a1;
}

void sub_1D52F0178(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52F018C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9975E38;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52F01A0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9975E38;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52F01D4(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_1D52F01E4(_QWORD *a1@<X1>, unint64_t *a2@<X2>, _QWORD *a3@<X3>, _OWORD *a4@<X4>, _QWORD *a5@<X8>)
{
  _QWORD *v10;

  v10 = operator new(0x110uLL);
  sub_1D52F0264((uint64_t)v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;
  sub_1D5285658((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1D52F0250(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52F0264(uint64_t a1, _QWORD *a2, unint64_t *a3, _QWORD *a4, _OWORD *a5)
{
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = &unk_1E9975E88;
  *(_QWORD *)(a1 + 8) = 0;
  sub_1D530B330(a1 + 24, a2, *a3, a4, a5);
  *(_QWORD *)(a1 + 24) = &off_1E99944D8;
  *(_DWORD *)(a1 + 212) = 0;
  *(_DWORD *)(a1 + 216) = 0;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  return a1;
}

void sub_1D52F02C0(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52F02D4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9975E88;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52F02E8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9975E88;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52F031C(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_1D52F032C(_QWORD *a1@<X1>, unint64_t *a2@<X2>, _QWORD *a3@<X3>, _OWORD *a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, _WORD *a7@<X7>, _QWORD *a8@<X8>, uint64_t a9)
{
  _QWORD *v17;

  v17 = operator new(0x160uLL);
  sub_1D52F03E4(v17, a1, a2, a3, a4, a5, a6, a7, a9);
  *a8 = v17 + 3;
  a8[1] = v17;
  sub_1D5285658((uint64_t)a8, v17 + 4, (uint64_t)(v17 + 3));
}

void sub_1D52F03D0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52F03E4(_QWORD *a1, _QWORD *a2, unint64_t *a3, _QWORD *a4, _OWORD *a5, uint64_t a6, uint64_t a7, _WORD *a8, uint64_t a9)
{
  a1[2] = 0;
  *a1 = &unk_1E9975ED8;
  a1[1] = 0;
  sub_1D52F0498((uint64_t)(a1 + 3), a2, a3, a4, a5, a6, a7, a8, a9);
  return a1;
}

void sub_1D52F042C(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52F0440(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9975ED8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52F0454(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9975ED8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52F0488(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_1D52F0498(uint64_t a1, _QWORD *a2, unint64_t *a3, _QWORD *a4, _OWORD *a5, uint64_t a6, uint64_t a7, _WORD *a8, uint64_t a9)
{
  unint64_t v15;
  void *__p;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;

  v15 = *a3;
  v24 = 0;
  v25 = 0;
  v23 = 0;
  sub_1D5287D44(&v23, *(const void **)a6, *(_QWORD *)(a6 + 8), (uint64_t)(*(_QWORD *)(a6 + 8) - *(_QWORD *)a6) >> 2);
  v20 = 0;
  v21 = 0;
  v22 = 0;
  sub_1D5287CCC(&v20, *(const void **)a7, *(_QWORD *)(a7 + 8), (uint64_t)(*(_QWORD *)(a7 + 8) - *(_QWORD *)a7) >> 1);
  LOWORD(a8) = *a8;
  v18 = 0;
  v19 = 0;
  __p = 0;
  sub_1D5287D44(&__p, *(const void **)a9, *(_QWORD *)(a9 + 8), (uint64_t)(*(_QWORD *)(a9 + 8) - *(_QWORD *)a9) >> 2);
  sub_1D52F05F4(a1, a2, v15, a4, a5, (uint64_t)&v23, (uint64_t)&v20, (__int16)a8, (uint64_t)&__p);
  if (__p)
  {
    v18 = __p;
    operator delete(__p);
  }
  if (v20)
  {
    v21 = v20;
    operator delete(v20);
  }
  if (v23)
  {
    v24 = v23;
    operator delete(v23);
  }
  return a1;
}

void sub_1D52F05A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17)
{
  if (__p)
    operator delete(__p);
  if (a13)
    operator delete(a13);
  if (a16)
    operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D52F05F4(uint64_t a1, _QWORD *a2, unint64_t a3, _QWORD *a4, _OWORD *a5, uint64_t a6, uint64_t a7, __int16 a8, uint64_t a9)
{
  uint64_t v13;

  v13 = sub_1D530B330(a1, a2, a3, a4, a5);
  *(_QWORD *)v13 = &off_1E9988910;
  *(_DWORD *)(v13 + 188) = 0;
  *(_DWORD *)(v13 + 192) = 0;
  *(_OWORD *)(v13 + 200) = 0u;
  *(_OWORD *)(v13 + 248) = 0u;
  *(_OWORD *)(v13 + 216) = 0u;
  *(_OWORD *)(v13 + 232) = 0u;
  *(_QWORD *)(v13 + 264) = 0;
  sub_1D5287D44((_QWORD *)(v13 + 248), *(const void **)a6, *(_QWORD *)(a6 + 8), (uint64_t)(*(_QWORD *)(a6 + 8) - *(_QWORD *)a6) >> 2);
  *(_QWORD *)(a1 + 272) = 0;
  *(_QWORD *)(a1 + 280) = 0;
  *(_QWORD *)(a1 + 288) = 0;
  sub_1D5287CCC((_QWORD *)(a1 + 272), *(const void **)a7, *(_QWORD *)(a7 + 8), (uint64_t)(*(_QWORD *)(a7 + 8) - *(_QWORD *)a7) >> 1);
  *(_WORD *)(a1 + 296) = a8;
  *(_QWORD *)(a1 + 312) = 0;
  *(_QWORD *)(a1 + 320) = 0;
  *(_QWORD *)(a1 + 304) = 0;
  sub_1D5287D44((_QWORD *)(a1 + 304), *(const void **)a9, *(_QWORD *)(a9 + 8), (uint64_t)(*(_QWORD *)(a9 + 8) - *(_QWORD *)a9) >> 2);
  return a1;
}

void sub_1D52F06C0(_Unwind_Exception *a1)
{
  _QWORD *v1;
  void **v2;
  void **v3;
  void **v4;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  v6 = *v3;
  if (*v3)
  {
    v1[35] = v6;
    operator delete(v6);
  }
  v7 = *v2;
  if (*v2)
  {
    v1[32] = v7;
    operator delete(v7);
  }
  v8 = (void *)v1[28];
  if (v8)
  {
    v1[29] = v8;
    operator delete(v8);
  }
  v9 = *v4;
  if (*v4)
  {
    v1[26] = v9;
    operator delete(v9);
  }
  sub_1D5282F0C(v1);
  _Unwind_Resume(a1);
}

void sub_1D52F0724(_QWORD *a1@<X1>, unint64_t *a2@<X2>, _QWORD *a3@<X3>, _OWORD *a4@<X4>, _QWORD *a5@<X8>)
{
  _QWORD *v10;

  v10 = operator new(0x110uLL);
  sub_1D52F07A4((uint64_t)v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;
  sub_1D5285658((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1D52F0790(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52F07A4(uint64_t a1, _QWORD *a2, unint64_t *a3, _QWORD *a4, _OWORD *a5)
{
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = &unk_1E9975F28;
  *(_QWORD *)(a1 + 8) = 0;
  sub_1D530B330(a1 + 24, a2, *a3, a4, a5);
  *(_QWORD *)(a1 + 24) = &off_1E99852D0;
  *(_DWORD *)(a1 + 212) = 0;
  *(_DWORD *)(a1 + 216) = 0;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  return a1;
}

void sub_1D52F0800(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52F0814(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9975F28;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52F0828(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9975F28;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52F085C(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

id sub_1D52F086C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const char *v28;
  void *v29;
  const char *v30;
  uint64_t v31;
  void *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[11];
  _QWORD v43[2];

  v43[1] = *MEMORY[0x1E0C80C00];
  v5 = *MEMORY[0x1E0CBD388];
  v34 = *MEMORY[0x1E0CBD368];
  v35 = v5;
  v42[0] = MEMORY[0x1E0C9AAB0];
  v42[1] = CFSTR("com.sony.raw-image");
  v6 = *MEMORY[0x1E0CBD380];
  v36 = *MEMORY[0x1E0CBD348];
  v42[2] = CFSTR(".srf.");
  v42[3] = &unk_1E99CAF80;
  v42[4] = &unk_1E99CAF98;
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], a2, (uint64_t)sub_1D52F0B20, a4, a5, v34, v35, v36, v6, *MEMORY[0x1E0CBD370], *MEMORY[0x1E0CBD378]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v42[5] = v7;
  v37 = *MEMORY[0x1E0CBD330];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v8, (uint64_t)sub_1D52F0B6C, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v42[6] = v11;
  v38 = *MEMORY[0x1E0CBD350];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v12, (uint64_t)sub_1D52F0B78, v13, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v42[7] = v15;
  v39 = *MEMORY[0x1E0CBD338];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v16, (uint64_t)sub_1D52E8DA4, v17, v18);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v42[8] = v19;
  v40 = *MEMORY[0x1E0CBD358];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v20, (uint64_t)sub_1D52F0B84, v21, v22);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v42[9] = v23;
  v41 = *MEMORY[0x1E0CBD360];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v24, (uint64_t)sub_1D52F0B90, v25, v26);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v42[10] = v27;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v28, (uint64_t)v42, (uint64_t)&v34, 11);
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v43[0] = v29;
  objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v30, (uint64_t)v43, 1, v31);
  v32 = (void *)objc_claimAutoreleasedReturnValue();

  return v32;
}

void sub_1D52F0AC0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

uint64_t sub_1D52F0B20(_BYTE *a1, unint64_t a2, void *a3)
{
  if (a2 >= 4 && *a1 == 73 && a1[1] == 73 && a1[2] == 42 && !a1[3])
    return sub_1D52EB764(CFSTR("com.sony.raw-image"), a3);
  else
    return 0;
}

void sub_1D52F0B6C(const void *a1, uint64_t a2, uint64_t a3)
{
  sub_1D52E7A20(a1, a2, a3, &unk_1E9975F68);
}

uint64_t sub_1D52F0B78(os_signpost_id_t a1)
{
  return sub_1D52E8C40(a1);
}

uint64_t sub_1D52F0B84(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1D52E7438(a1, a2, a3, &unk_1E9975F68);
}

uint64_t sub_1D52F0B90(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1D52E9A7C(a1, a2, a3, &unk_1E9975F68);
}

void sub_1D52F0B9C(uint64_t *a1@<X1>, char a2@<W2>, void *a3@<X3>, void *a4@<X4>, _OWORD *a5@<X8>)
{
  __int128 v8;
  id v9;
  id v10;
  char v11;

  v11 = a2;
  v10 = a3;
  v9 = a4;
  sub_1D52F1090(a1, &v11, &v10, &v9, &v8);
  *a5 = v8;

}

void sub_1D52F0C18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{

  _Unwind_Resume(a1);
}

uint64_t sub_1D52F0C34(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 1184) = (*(_DWORD *)(a2 + 4) + *(_DWORD *)(a2 + 8));
  return sub_1D52ABD50(a1);
}

uint64_t sub_1D52F0C44(uint64_t a1)
{
  return *(_QWORD *)(a1 + 1184);
}

unint64_t sub_1D52F0C4C(uint64_t a1)
{
  unint64_t v2;
  void *__p[2];
  char v5;

  sub_1D52850A0(__p, "IFD0");
  v2 = sub_1D52B0D58(a1, __p);
  if (v5 < 0)
    operator delete(__p[0]);
  return v2;
}

void sub_1D52F0CA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1D52F0CC0(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  unint64_t v5;
  __int128 v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  int v27;
  unint64_t v28;
  unint64_t v29;
  __int128 v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  __int128 v37;
  uint64_t v38;
  int v39;
  std::string __p;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t *v45;

  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  sub_1D52850A0(&__p, "srf");
  v4 = a2[2];
  v5 = a2[1];
  if (v5 >= v4)
  {
    v7 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *a2) >> 3);
    v8 = v7 + 1;
    if (v7 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v9 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v4 - *a2) >> 3);
    if (2 * v9 > v8)
      v8 = 2 * v9;
    if (v9 >= 0x555555555555555)
      v10 = 0xAAAAAAAAAAAAAAALL;
    else
      v10 = v8;
    v45 = a2 + 2;
    if (v10)
      v11 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v10);
    else
      v11 = 0;
    v12 = &v11[24 * v7];
    v41 = v11;
    v42 = v12;
    v44 = &v11[24 * v10];
    v13 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *((_QWORD *)v12 + 2) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)v12 = v13;
    memset(&__p, 0, sizeof(__p));
    v43 = v12 + 24;
    sub_1D5293D58(a2, &v41);
    v14 = a2[1];
    sub_1D5293F24((uint64_t)&v41);
    v15 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    a2[1] = v14;
    if (v15 < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    v6 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(_QWORD *)(v5 + 16) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)v5 = v6;
    a2[1] = v5 + 24;
  }
  sub_1D52850A0(&__p, "sony");
  v17 = a2[1];
  v16 = a2[2];
  if (v17 >= v16)
  {
    v19 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v17 - *a2) >> 3);
    v20 = v19 + 1;
    if (v19 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v21 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v16 - *a2) >> 3);
    if (2 * v21 > v20)
      v20 = 2 * v21;
    if (v21 >= 0x555555555555555)
      v22 = 0xAAAAAAAAAAAAAAALL;
    else
      v22 = v20;
    v45 = a2 + 2;
    if (v22)
      v23 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v22);
    else
      v23 = 0;
    v24 = &v23[24 * v19];
    v41 = v23;
    v42 = v24;
    v44 = &v23[24 * v22];
    v25 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *((_QWORD *)v24 + 2) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)v24 = v25;
    memset(&__p, 0, sizeof(__p));
    v43 = v24 + 24;
    sub_1D5293D58(a2, &v41);
    v26 = a2[1];
    sub_1D5293F24((uint64_t)&v41);
    v27 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    a2[1] = v26;
    if (v27 < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    v18 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(_QWORD *)(v17 + 16) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)v17 = v18;
    a2[1] = v17 + 24;
  }
  sub_1D5293780(a1, &__p);
  v29 = a2[1];
  v28 = a2[2];
  if (v29 >= v28)
  {
    v31 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v29 - *a2) >> 3);
    v32 = v31 + 1;
    if (v31 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v33 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v28 - *a2) >> 3);
    if (2 * v33 > v32)
      v32 = 2 * v33;
    if (v33 >= 0x555555555555555)
      v34 = 0xAAAAAAAAAAAAAAALL;
    else
      v34 = v32;
    v45 = a2 + 2;
    if (v34)
      v35 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v34);
    else
      v35 = 0;
    v36 = &v35[24 * v31];
    v41 = v35;
    v42 = v36;
    v44 = &v35[24 * v34];
    v37 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *((_QWORD *)v36 + 2) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)v36 = v37;
    memset(&__p, 0, sizeof(__p));
    v43 = v36 + 24;
    sub_1D5293D58(a2, &v41);
    v38 = a2[1];
    sub_1D5293F24((uint64_t)&v41);
    v39 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    a2[1] = v38;
    if (v39 < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    v30 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(_QWORD *)(v29 + 16) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)v29 = v30;
    a2[1] = v29 + 24;
  }
}

void sub_1D52F1014(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  sub_1D5293F24((uint64_t)&a15);
  if (a14 < 0)
    operator delete(__p);
  sub_1D5293CCC((void ***)&__p);
  _Unwind_Resume(a1);
}

void sub_1D52F106C(uint64_t a1)
{
  sub_1D52B2190(a1);
  JUMPOUT(0x1D8271ADCLL);
}

void sub_1D52F1090(uint64_t *a1@<X1>, char *a2@<X2>, void **a3@<X3>, void **a4@<X4>, _QWORD *a5@<X8>)
{
  _QWORD *v10;

  v10 = operator new(0x4C0uLL);
  sub_1D52F1110(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;
  sub_1D5285658((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1D52F10FC(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52F1110(_QWORD *a1, uint64_t *a2, char *a3, void **a4, void **a5)
{
  a1[2] = 0;
  *a1 = &unk_1E99762D0;
  a1[1] = 0;
  sub_1D52A7E98((uint64_t)(a1 + 3), a2, *a3, *a4, *a5);
  a1[3] = off_1E9975F98;
  a1[151] = 0;
  return a1;
}

void sub_1D52F1164(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52F1178(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E99762D0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52F118C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E99762D0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52F11C0(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a1 + 24) + 16))(a1 + 24);
}

id sub_1D52F11D0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const char *v28;
  void *v29;
  const char *v30;
  uint64_t v31;
  void *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[11];
  _QWORD v43[2];

  v43[1] = *MEMORY[0x1E0C80C00];
  v5 = *MEMORY[0x1E0CBD388];
  v34 = *MEMORY[0x1E0CBD368];
  v35 = v5;
  v42[0] = MEMORY[0x1E0C9AAB0];
  v42[1] = CFSTR("com.pentax.raw-image");
  v6 = *MEMORY[0x1E0CBD380];
  v36 = *MEMORY[0x1E0CBD348];
  v42[2] = CFSTR(".pef.");
  v42[3] = &unk_1E99CAFB0;
  v42[4] = &unk_1E99CAFC8;
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], a2, (uint64_t)sub_1D5280C4C, a4, a5, v34, v35, v36, v6, *MEMORY[0x1E0CBD370], *MEMORY[0x1E0CBD378]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v42[5] = v7;
  v37 = *MEMORY[0x1E0CBD330];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v8, (uint64_t)sub_1D52F1484, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v42[6] = v11;
  v38 = *MEMORY[0x1E0CBD350];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v12, (uint64_t)sub_1D52F1490, v13, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v42[7] = v15;
  v39 = *MEMORY[0x1E0CBD338];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v16, (uint64_t)sub_1D52E8DA4, v17, v18);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v42[8] = v19;
  v40 = *MEMORY[0x1E0CBD358];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v20, (uint64_t)sub_1D52F149C, v21, v22);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v42[9] = v23;
  v41 = *MEMORY[0x1E0CBD360];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v24, (uint64_t)sub_1D52F14A8, v25, v26);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v42[10] = v27;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v28, (uint64_t)v42, (uint64_t)&v34, 11);
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v43[0] = v29;
  objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v30, (uint64_t)v43, 1, v31);
  v32 = (void *)objc_claimAutoreleasedReturnValue();

  return v32;
}

void sub_1D52F1424(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

void sub_1D52F1484(const void *a1, uint64_t a2, uint64_t a3)
{
  sub_1D52E7A20(a1, a2, a3, &unk_1E9976310);
}

uint64_t sub_1D52F1490(os_signpost_id_t a1)
{
  return sub_1D52E8C40(a1);
}

uint64_t sub_1D52F149C(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1D52E7438(a1, a2, a3, &unk_1E9976310);
}

uint64_t sub_1D52F14A8(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1D52E9A7C(a1, a2, a3, &unk_1E9976310);
}

void sub_1D52F14B4(uint64_t *a1@<X1>, char a2@<W2>, void *a3@<X3>, void *a4@<X4>, _OWORD *a5@<X8>)
{
  __int128 v8;
  id v9;
  id v10;
  char v11;

  v11 = a2;
  v10 = a3;
  v9 = a4;
  sub_1D52F332C(a1, &v11, &v10, &v9, &v8);
  *a5 = v8;

}

void sub_1D52F1530(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{

  _Unwind_Resume(a1);
}

BOOL sub_1D52F154C(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  _BOOL8 v7;
  _BOOL8 v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::string::size_type size;
  std::string *v13;
  int data_low;
  int v15;
  std::string *p_str;
  int v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  std::string::size_type v23;
  std::string *v24;
  int data;
  int v26;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t *v31;
  int v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  uint64_t v36;
  std::string __str;
  int v38;

  memset(&__str, 0, sizeof(__str));
  v36 = 0;
  sub_1D52917E4(a1, &v34);
  v2 = (*(int (**)(uint64_t))(*(_QWORD *)v34 + 48))(v34);
  v3 = v35;
  if (v35)
  {
    p_shared_owners = (unint64_t *)&v35->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  v36 = v2;
  sub_1D52917E4(a1, &v34);
  v6 = v34;
  v33 = 8;
  sub_1D5285A24(&v38, (unsigned int *)&v33);
  v7 = sub_1D52849DC(v6, (unsigned int *)&v38, (uint64_t)&__str);
  v8 = v7;
  v9 = v35;
  if (!v35)
    goto LABEL_10;
  v10 = (unint64_t *)&v35->__shared_owners_;
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (!v8)
      goto LABEL_60;
  }
  else
  {
LABEL_10:
    if (!v7)
      goto LABEL_60;
  }
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  else
    size = __str.__r_.__value_.__l.__size_;
  if (size == 7)
  {
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_str = &__str;
    else
      p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
    if (memcmp(p_str, "PENTAX ", 7uLL))
    {
LABEL_22:
      v8 = 0;
      goto LABEL_60;
    }
  }
  else
  {
    if (size != 3)
      goto LABEL_22;
    v13 = &__str;
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v13 = (std::string *)__str.__r_.__value_.__r.__words[0];
    data_low = LOWORD(v13->__r_.__value_.__l.__data_);
    v15 = v13->__r_.__value_.__s.__data_[2];
    if (data_low != 20289 || v15 != 67)
      goto LABEL_22;
  }
  sub_1D52917E4(a1, &v34);
  v18 = sub_1D528479C(v34);
  v19 = v35;
  if (v35)
  {
    v20 = (unint64_t *)&v35->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
  }
  v8 = v18 == 19789 || v18 == 18761;
  if (v18 == 18761 || v18 == 19789)
  {
    std::string::operator=((std::string *)(a1 + 1184), &__str);
    if (v18 == 19789)
      v22 = 2;
    else
      v22 = 1;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, v22);
    v23 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v23 = __str.__r_.__value_.__l.__size_;
    if (v23 != 7)
      goto LABEL_51;
    v24 = &__str;
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v24 = (std::string *)__str.__r_.__value_.__r.__words[0];
    data = (int)v24->__r_.__value_.__l.__data_;
    v26 = *(_DWORD *)((char *)v24->__r_.__value_.__r.__words + 3);
    if (data == 1414415696 && v26 == 542654804)
    {
      sub_1D528594C(&v34, &v36);
      (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)a1 + 144))(a1, &v34);
      sub_1D52917E4(a1, &v34);
      v38 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v34 + 48))(v34);
      v33 = *sub_1D52BFF48(&v38, &v36);
      (*(void (**)(uint64_t, int *))(*(_QWORD *)a1 + 160))(a1, &v33);
      v28 = v35;
      if (!v35)
        goto LABEL_60;
      v31 = (unint64_t *)&v35->__shared_owners_;
      do
        v30 = __ldaxr(v31);
      while (__stlxr(v30 - 1, v31));
    }
    else
    {
LABEL_51:
      sub_1D52917E4(a1, &v34);
      v38 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v34 + 48))(v34);
      (*(void (**)(uint64_t, int *))(*(_QWORD *)a1 + 160))(a1, &v38);
      v28 = v35;
      if (!v35)
        goto LABEL_60;
      v29 = (unint64_t *)&v35->__shared_owners_;
      do
        v30 = __ldaxr(v29);
      while (__stlxr(v30 - 1, v29));
    }
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
LABEL_60:
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  return v8;
}

void sub_1D52F18D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1D52F1924(uint64_t a1, uint64_t a2, unsigned __int16 *a3)
{
  unsigned int v6;
  uint64_t *v7;
  void *v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  char v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  char v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  size_t v32;
  uint64_t i;
  __int16 v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  uint64_t j;
  char v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  char v43;
  unsigned int v44;
  std::__shared_weak_count *v45;
  unint64_t *v46;
  unint64_t v47;
  int v48;
  std::__shared_weak_count *v49;
  unint64_t *v50;
  unint64_t v51;
  uint64_t **v52;
  size_t v53;
  std::string *v54;
  const void *v55;
  std::__shared_weak_count *v56;
  unint64_t *v57;
  unint64_t v58;
  _QWORD *v59;
  std::__shared_weak_count *v60;
  unint64_t *v61;
  unint64_t v62;
  uint64_t *v63;
  void *v64;
  void *exception;
  void *__p;
  void *v67;
  uint64_t v68;
  void *v69;
  void *v70;
  uint64_t v71;
  std::string *p_dst;
  std::__shared_weak_count *v73;
  void *v74[2];
  uint64_t v75;
  unsigned int v76;
  void *v77;
  std::__shared_weak_count *v78;
  std::string *v79;
  std::__shared_weak_count *v80;
  std::string __dst;

  nullsub_6();
  v6 = *a3;
  if (v6 <= 0x68)
  {
    if (*a3 > 4u)
    {
      if (v6 == 5)
      {
        if (a3[1] == 4 && *((_DWORD *)a3 + 1) == 1)
          *(_DWORD *)(a1 + 1208) = *((_DWORD *)a3 + 2);
      }
      else if (v6 == 92 && a3[1] == 1 && *((_DWORD *)a3 + 1) >= 2u)
      {
        LOBYTE(p_dst) = 0;
        if (sub_1D52AA7F0((uint64_t)a3) < 5)
        {
          LODWORD(v79) = 1;
          sub_1D5285A24(&__dst, (unsigned int *)&v79);
          v21 = sub_1D52B19D0((uint64_t)a3, (unsigned int *)&__dst);
        }
        else
        {
          sub_1D52917E4(a1, &v79);
          LODWORD(v74[0]) = sub_1D52A5CC8((uint64_t)a3);
          sub_1D5285B08((int *)&v77, (int *)v74);
          sub_1D5285164((uint64_t *)&__dst, (uint64_t *)&v79, (uint64_t)&v77, 0);
          v12 = v80;
          if (v80)
          {
            p_shared_owners = (unint64_t *)&v80->__shared_owners_;
            do
              v14 = __ldaxr(p_shared_owners);
            while (__stlxr(v14 - 1, p_shared_owners));
            if (!v14)
            {
              ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
              std::__shared_weak_count::__release_weak(v12);
            }
          }
          sub_1D52917E4(a1, &v79);
          LODWORD(v77) = 1;
          (*(void (**)(std::string *, void **, uint64_t))(v79->__r_.__value_.__r.__words[0] + 40))(v79, &v77, 1);
          v15 = v80;
          if (v80)
          {
            v16 = (unint64_t *)&v80->__shared_owners_;
            do
              v17 = __ldaxr(v16);
            while (__stlxr(v17 - 1, v16));
            if (!v17)
            {
              ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
              std::__shared_weak_count::__release_weak(v15);
            }
          }
          sub_1D52917E4(a1, &v79);
          (*(void (**)(std::string *, std::string **, uint64_t))(v79->__r_.__value_.__r.__words[0] + 32))(v79, &p_dst, 1);
          v18 = v80;
          if (v80)
          {
            v19 = (unint64_t *)&v80->__shared_owners_;
            do
              v20 = __ldaxr(v19);
            while (__stlxr(v20 - 1, v19));
            if (!v20)
            {
              ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
              std::__shared_weak_count::__release_weak(v18);
            }
          }
          sub_1D5285200((uint64_t *)&__dst);
          v21 = (char)p_dst;
        }
        *(_BYTE *)(a1 + 1280) = v21;
      }
    }
    else if (v6 == 3)
    {
      if (a3[1] == 4 && *((_DWORD *)a3 + 1) == 1)
        *(_QWORD *)(a1 + 1224) = *((unsigned int *)a3 + 2);
    }
    else if (v6 == 4 && a3[1] == 4 && *((_DWORD *)a3 + 1) == 1)
    {
      *(_QWORD *)(a1 + 1216) = *((unsigned int *)a3 + 2);
    }
    return;
  }
  if (*a3 > 0x200u)
  {
    if (v6 == 513)
    {
      if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) != 0
        || a3[1] != 3
        || *((_DWORD *)a3 + 1) != 4)
      {
        return;
      }
      if (*(char *)(a2 + 23) < 0)
        sub_1D5290130(&__dst, *(void **)a2, *(_QWORD *)(a2 + 8));
      else
        __dst = *(std::string *)a2;
      std::string::append(&__dst, ":WhitePoint", 0xBuLL);
      sub_1D52917E4(a1, &v77);
      LODWORD(p_dst) = *((_DWORD *)a3 + 2);
      sub_1D5282F74((int *)v74, (int *)&p_dst);
      sub_1D5285164((uint64_t *)&v79, (uint64_t *)&v77, (uint64_t)v74, 0);
      v56 = v78;
      if (v78)
      {
        v57 = (unint64_t *)&v78->__shared_owners_;
        do
          v58 = __ldaxr(v57);
        while (__stlxr(v58 - 1, v57));
        if (!v58)
        {
          ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
          std::__shared_weak_count::__release_weak(v56);
        }
      }
      sub_1D52917E4(a1, v74);
      v59 = v74[0];
      v76 = 4;
      sub_1D5285A24(&p_dst, &v76);
      sub_1D5284D2C(v59, (unsigned int *)&p_dst, (uint64_t *)&v77);
      v60 = (std::__shared_weak_count *)v74[1];
      if (v74[1])
      {
        v61 = (unint64_t *)((char *)v74[1] + 8);
        do
          v62 = __ldaxr(v61);
        while (__stlxr(v62 - 1, v61));
        if (!v62)
        {
          ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
          std::__shared_weak_count::__release_weak(v60);
        }
      }
      v74[1] = 0;
      v75 = 0;
      v74[0] = 0;
      sub_1D52BA100((char *)v74, (unsigned __int16 *)v77, (unsigned __int16 *)v78, ((char *)v78 - (_BYTE *)v77) >> 1);
      p_dst = &__dst;
      v63 = sub_1D52B3E7C((uint64_t **)(a1 + 120), (void **)&__dst.__r_.__value_.__l.__data_, (uint64_t)&unk_1D544A5C4, (__int128 **)&p_dst);
      v64 = (void *)v63[7];
      if (v64)
      {
        v63[8] = (uint64_t)v64;
        operator delete(v64);
        v63[7] = 0;
        v63[8] = 0;
        v63[9] = 0;
      }
      *(_OWORD *)(v63 + 7) = *(_OWORD *)v74;
      v63[9] = v75;
      if (v77)
      {
        v78 = (std::__shared_weak_count *)v77;
        operator delete(v77);
      }
      sub_1D5285200((uint64_t *)&v79);
      goto LABEL_149;
    }
    if (v6 == 544 && ((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) == 0)
    {
      sub_1D52917E4(a1, &v79);
      LODWORD(v74[0]) = *((_DWORD *)a3 + 2);
      sub_1D5282F74((int *)&v77, (int *)v74);
      sub_1D5285164((uint64_t *)&__dst, (uint64_t *)&v79, (uint64_t)&v77, 0);
      v22 = v80;
      if (v80)
      {
        v23 = (unint64_t *)&v80->__shared_owners_;
        do
          v24 = __ldaxr(v23);
        while (__stlxr(v24 - 1, v23));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      sub_1D52917E4(a1, &v79);
      v25 = sub_1D528479C((uint64_t)v79);
      v26 = v80;
      if (v80)
      {
        v27 = (unint64_t *)&v80->__shared_owners_;
        do
          v28 = __ldaxr(v27);
        while (__stlxr(v28 - 1, v27));
        if (!v28)
        {
          ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
          std::__shared_weak_count::__release_weak(v26);
        }
      }
      sub_1D52917E4(a1, &v79);
      LODWORD(v77) = 12;
      (*(void (**)(std::string *, void **, uint64_t))(v79->__r_.__value_.__r.__words[0] + 40))(v79, &v77, 1);
      v29 = v80;
      if (v80)
      {
        v30 = (unint64_t *)&v80->__shared_owners_;
        do
          v31 = __ldaxr(v30);
        while (__stlxr(v31 - 1, v30));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
          std::__shared_weak_count::__release_weak(v29);
        }
      }
      if (a3[1] == 7)
      {
        v32 = (v25 + 12) & 0xF;
        if (*((_DWORD *)a3 + 1) >= (3 * v32 + 14))
        {
          LOWORD(v77) = 0;
          sub_1D528EA60(&v79, v32, &v77);
          LOBYTE(v74[0]) = 0;
          sub_1D52F31E0(&v77, v32, v74);
          LOBYTE(p_dst) = 0;
          sub_1D52F31E0(v74, (v32 + 17), &p_dst);
          if ((_DWORD)v32)
          {
            for (i = 0; i != v32; ++i)
            {
              sub_1D52917E4(a1, &p_dst);
              v34 = sub_1D528479C((uint64_t)p_dst);
              *((_WORD *)&v79->__r_.__value_.__l.__data_ + i) = v34;
              v35 = v73;
              if (v73)
              {
                v36 = (unint64_t *)&v73->__shared_owners_;
                do
                  v37 = __ldaxr(v36);
                while (__stlxr(v37 - 1, v36));
                if (!v37)
                {
                  ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
                  std::__shared_weak_count::__release_weak(v35);
                }
              }
            }
            for (j = 0; j != v32; ++j)
            {
              sub_1D52917E4(a1, &p_dst);
              v39 = sub_1D52846FC((uint64_t)p_dst);
              *((_BYTE *)v77 + j) = v39;
              v40 = v73;
              if (v73)
              {
                v41 = (unint64_t *)&v73->__shared_owners_;
                do
                  v42 = __ldaxr(v41);
                while (__stlxr(v42 - 1, v41));
                if (!v42)
                {
                  ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
                  std::__shared_weak_count::__release_weak(v40);
                }
              }
            }
          }
          v69 = 0;
          v70 = 0;
          v71 = 0;
          sub_1D5287CCC(&v69, v79, (uint64_t)v80, ((char *)v80 - (char *)v79) >> 1);
          __p = 0;
          v67 = 0;
          v68 = 0;
          sub_1D52F325C(&__p, v77, (uint64_t)v78, (char *)v78 - (_BYTE *)v77);
          v43 = sub_1D52F2570(&v69, &__p, v74);
          if (__p)
          {
            v67 = __p;
            operator delete(__p);
          }
          if (v69)
          {
            v70 = v69;
            operator delete(v69);
          }
          if ((v43 & 1) == 0)
          {
            exception = __cxa_allocate_exception(0x10uLL);
            MEMORY[0x1D8271938](exception, "RawCameraException");
            __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
          }
          if ((void **)(a1 + 1256) != v74)
            sub_1D52B1E94((_QWORD *)(a1 + 1256), (char *)v74[0], (char *)v74[1], (char *)v74[1] - (char *)v74[0]);
          if (v74[0])
          {
            v74[1] = v74[0];
            operator delete(v74[0]);
          }
          if (v77)
          {
            v78 = (std::__shared_weak_count *)v77;
            operator delete(v77);
          }
          if (v79)
          {
            v80 = (std::__shared_weak_count *)v79;
            operator delete(v79);
          }
        }
      }
      sub_1D5285200((uint64_t *)&__dst);
    }
  }
  else
  {
    if (v6 != 105)
    {
      if (v6 == 512
        && ((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) == 0
        && a3[1] == 3
        && *((_DWORD *)a3 + 1) == 4)
      {
        sub_1D52917E4(a1, &v79);
        sub_1D52A75D8((uint64_t)a3, (uint64_t *)&v79, (void **)&__dst.__r_.__value_.__l.__data_);
        v77 = (void *)a2;
        v7 = sub_1D52B3E7C((uint64_t **)(a1 + 264), (void **)a2, (uint64_t)&unk_1D544A5C4, (__int128 **)&v77);
        v8 = (void *)v7[7];
        if (v8)
        {
          v7[8] = (uint64_t)v8;
          operator delete(v8);
          v7[7] = 0;
          v7[8] = 0;
          v7[9] = 0;
        }
        *(std::string *)(v7 + 7) = __dst;
        memset(&__dst, 0, sizeof(__dst));
        v9 = v80;
        if (v80)
        {
          v10 = (unint64_t *)&v80->__shared_owners_;
          do
            v11 = __ldaxr(v10);
          while (__stlxr(v11 - 1, v10));
          if (!v11)
          {
            ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
            std::__shared_weak_count::__release_weak(v9);
          }
        }
      }
      return;
    }
    if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) != 0)
      return;
    if (a3[1] != 7)
      return;
    v44 = *((_DWORD *)a3 + 1);
    if (!v44)
      return;
    if (v44 <= 4)
    {
      LODWORD(v79) = 0;
      sub_1D5285A24(&__dst, (unsigned int *)&v79);
      if (!sub_1D52B19D0((uint64_t)a3, (unsigned int *)&__dst))
        return;
      goto LABEL_121;
    }
    sub_1D52917E4(a1, &v79);
    LODWORD(v74[0]) = *((_DWORD *)a3 + 2);
    sub_1D5282F74((int *)&v77, (int *)v74);
    sub_1D5285164((uint64_t *)&__dst, (uint64_t *)&v79, (uint64_t)&v77, 0);
    v45 = v80;
    if (v80)
    {
      v46 = (unint64_t *)&v80->__shared_owners_;
      do
        v47 = __ldaxr(v46);
      while (__stlxr(v47 - 1, v46));
      if (!v47)
      {
        ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
        std::__shared_weak_count::__release_weak(v45);
      }
    }
    sub_1D52917E4(a1, &v79);
    v48 = sub_1D52846FC((uint64_t)v79);
    v49 = v80;
    if (v80)
    {
      v50 = (unint64_t *)&v80->__shared_owners_;
      do
        v51 = __ldaxr(v50);
      while (__stlxr(v51 - 1, v50));
      if (!v51)
      {
        ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
        std::__shared_weak_count::__release_weak(v49);
      }
    }
    sub_1D5285200((uint64_t *)&__dst);
    if (v48)
    {
LABEL_121:
      v52 = (uint64_t **)(a1 + 1232);
      if (*(char *)(a2 + 23) >= 0)
        v53 = *(unsigned __int8 *)(a2 + 23);
      else
        v53 = *(_QWORD *)(a2 + 8);
      sub_1D52B1FA0((uint64_t)&__dst, v53 + 21);
      if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v54 = &__dst;
      else
        v54 = (std::string *)__dst.__r_.__value_.__r.__words[0];
      if (v53)
      {
        if (*(char *)(a2 + 23) >= 0)
          v55 = (const void *)a2;
        else
          v55 = *(const void **)a2;
        memmove(v54, v55, v53);
      }
      strcpy((char *)v54 + v53, ":ExpandedDynamicRange");
      v79 = &__dst;
      *((_QWORD *)sub_1D52D8024(v52, (void **)&__dst.__r_.__value_.__l.__data_, (uint64_t)&unk_1D544A5C4, (_OWORD **)&v79)+ 7) = 0x3FE0000000000000;
LABEL_149:
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__dst.__r_.__value_.__l.__data_);
    }
  }
}

void sub_1D52F2398(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22)
{
  uint64_t v22;

  sub_1D5282EB4(v22 - 104);
  sub_1D5285200((uint64_t *)(v22 - 80));
  _Unwind_Resume(a1);
}

uint64_t sub_1D52F2570(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  BOOL v17;
  void *exception;

  v3 = a1[1] - *a1;
  v4 = v3 >> 1;
  if (v3 >> 1 != a2[1] - *a2 || a3[1] - *a3 != (_DWORD)v4 + 17)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1D8271938](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
  }
  v5 = 0;
  v6 = v4 + 16;
  do
    *(_BYTE *)(*a3 + v5++) = 0;
  while (v5 != 16);
  v7 = ((unint64_t)v3 >> 1);
  if ((_DWORD)v4)
  {
    v8 = 0;
    do
    {
      v9 = *(unsigned __int8 *)(*a2 + v8);
      if ((v9 - 17) < 0xFFFFFFF0)
        return 1;
      ++*(_BYTE *)(*a3 + (v9 - 1));
    }
    while (v7 != ++v8);
  }
  v10 = 0;
  v11 = 0;
  v12 = 16;
  do
  {
    v13 = *(unsigned __int8 *)(*a3 + v10);
    if (*(_BYTE *)(*a3 + v10))
    {
      v14 = v13 << (11 - v10);
      v15 = v11;
      do
      {
        if ((_DWORD)v4)
        {
          v16 = 0;
          while (v15 != *(unsigned __int16 *)(*a1 + 2 * v16))
          {
            if (v7 == ++v16)
              goto LABEL_18;
          }
          *(_BYTE *)(*a3 + v12++) = v16;
        }
LABEL_18:
        v15 += 1 << (11 - v10);
        v17 = __OFSUB__(v13--, 1);
      }
      while (!((v13 < 0) ^ v17 | (v13 == 0)));
      v11 += v14;
    }
    ++v10;
  }
  while (v10 != 16);
  if (v12 == v6)
  {
    *(_BYTE *)(*a3 + v6) = -1;
    return 1;
  }
  return 0;
}

void sub_1D52F2700(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52F2718(uint64_t a1)
{
  _BOOL4 v2;
  void *__p[2];
  char v5;
  unsigned int v6;

  v6 = 1;
  sub_1D52850A0(__p, "IFD0");
  v2 = sub_1D52A89D8(a1, __p, &v6);
  if (v5 < 0)
    operator delete(__p[0]);
  if (v2)
    return v6;
  else
    return 1;
}

void sub_1D52F2784(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D52F27A0(uint64_t a1)
{
  uint64_t v2;
  void *__p[2];
  char v5;

  sub_1D52850A0(__p, "IFD0");
  v2 = sub_1D52B0BBC(a1, __p);
  if (v5 < 0)
    operator delete(__p[0]);
  return v2;
}

void sub_1D52F27F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D52F2814(uint64_t a1)
{
  uint64_t v2;
  void *__p[2];
  char v5;

  sub_1D52850A0(__p, "IFD0");
  v2 = sub_1D52B0C2C(a1, __p);
  if (v5 < 0)
    operator delete(__p[0]);
  return v2;
}

void sub_1D52F286C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

unint64_t sub_1D52F2888(uint64_t a1)
{
  unint64_t v2;
  void *__p[2];
  char v5;

  sub_1D52850A0(__p, "IFD0");
  v2 = sub_1D52B0D58(a1, __p);
  if (v5 < 0)
    operator delete(__p[0]);
  return v2;
}

void sub_1D52F28E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1D52F28FC(uint64_t a1@<X0>, char **a2@<X8>)
{
  uint64_t v4;
  void **v5;
  void **v6;
  int v7;
  int v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  void *__p[2];
  char v19;

  v4 = a1 + 704;
  sub_1D52850A0(__p, "IFD0");
  v5 = sub_1D5294144(v4, __p);
  v6 = v5;
  if ((void **)(a1 + 712) == v5)
    v7 = 0;
  else
    v7 = *((_DWORD *)v5 + 14);
  if (v19 < 0)
    operator delete(__p[0]);
  if ((v7 - 9) >= 0xFFFFFFF8 || a1 + 712 == (_QWORD)v6)
    v9 = v7;
  else
    v9 = 0;
  sub_1D52B08D0(a1, (uint64_t)a2);
  sub_1D528594C(__p, (uint64_t *)(a1 + 1216));
  sub_1D528304C(&v16, (unint64_t *)(a1 + 1224));
  sub_1D5291E58(a1, (int *)__p, (unsigned int *)&v16, v9, &v17);
  sub_1D52850A0(__p, "IFD2");
  sub_1D52AFFE8(a1, __p, &v16);
  if (v19 < 0)
    operator delete(__p[0]);
  if ((_QWORD)v17)
    sub_1D52B0A7C(a2, &v17);
  if ((_QWORD)v16)
    sub_1D52B0A7C(a2, &v16);
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v16 + 1);
  if (*((_QWORD *)&v16 + 1))
  {
    v11 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v13 = (std::__shared_weak_count *)*((_QWORD *)&v17 + 1);
  if (*((_QWORD *)&v17 + 1))
  {
    v14 = (unint64_t *)(*((_QWORD *)&v17 + 1) + 8);
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
}

void sub_1D52F2A94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  sub_1D5282EB4((uint64_t)&a12);
  sub_1D5282E44((void ***)&__p);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52F2B00(uint64_t a1)
{
  uint64_t v2;
  void **v3;
  int *v4;
  int v5;
  int v6;
  uint64_t result;
  void *__p[2];
  char v9;

  v2 = a1 + 656;
  sub_1D52850A0(__p, "IFD0");
  v3 = sub_1D5294144(v2, __p);
  if ((void **)(a1 + 664) == v3 || (v4 = (int *)v3[7], v3[8] == v4))
  {
    LOBYTE(v5) = 0;
    v6 = 0;
  }
  else
  {
    v5 = *v4;
    v6 = 1;
  }
  if (v9 < 0)
  {
    operator delete(__p[0]);
    if (v6)
      goto LABEL_7;
LABEL_9:
    LOWORD(result) = sub_1D52919BC();
    return (unsigned __int16)result;
  }
  if (!v6)
    goto LABEL_9;
LABEL_7:
  LODWORD(result) = ~(-1 << v5);
  return (unsigned __int16)result;
}

void sub_1D52F2BAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL sub_1D52F2BC8(uint64_t a1, void **a2, _QWORD *a3)
{
  void **v5;

  v5 = sub_1D5294144(a1 + 1232, a2);
  if ((void **)(a1 + 1240) != v5)
    *a3 = v5[7];
  return a1 + 1240 != (_QWORD)v5;
}

void sub_1D52F2C0C(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  unint64_t v5;
  __int128 v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  uint64_t v14;
  int v15;
  void **v16;
  uint64_t v17;
  int v18;
  void *v19;
  char *v20;
  void **v21;
  char *v22;
  _BOOL4 v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  __int128 v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  char *v37;
  __int128 v38;
  uint64_t v39;
  int v40;
  unint64_t v41;
  unint64_t v42;
  __int128 v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  char *v48;
  char *v49;
  __int128 v50;
  uint64_t v51;
  int v52;
  void *__p[2];
  uint64_t v54;
  void *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t *v59;
  char __str[16];
  uint64_t v61;

  v61 = *MEMORY[0x1E0C80C00];
  snprintf(__str, 0x10uLL, "%d", a1[302]);
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  sub_1D52850A0(__p, "pef");
  v4 = a2[2];
  v5 = a2[1];
  if (v5 >= v4)
  {
    v7 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *a2) >> 3);
    v8 = v7 + 1;
    if (v7 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v9 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v4 - *a2) >> 3);
    if (2 * v9 > v8)
      v8 = 2 * v9;
    if (v9 >= 0x555555555555555)
      v10 = 0xAAAAAAAAAAAAAAALL;
    else
      v10 = v8;
    v59 = a2 + 2;
    if (v10)
      v11 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v10);
    else
      v11 = 0;
    v12 = &v11[24 * v7];
    v55 = v11;
    v56 = (uint64_t)v12;
    v58 = &v11[24 * v10];
    v13 = *(_OWORD *)__p;
    *((_QWORD *)v12 + 2) = v54;
    *(_OWORD *)v12 = v13;
    __p[1] = 0;
    v54 = 0;
    __p[0] = 0;
    v57 = v12 + 24;
    sub_1D5293D58(a2, &v55);
    v14 = a2[1];
    sub_1D5293F24((uint64_t)&v55);
    v15 = SHIBYTE(v54);
    a2[1] = v14;
    if (v15 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v6 = *(_OWORD *)__p;
    *(_QWORD *)(v5 + 16) = v54;
    *(_OWORD *)v5 = v6;
    a2[1] = v5 + 24;
  }
  v16 = &v55;
  (*(void (**)(void **__return_ptr, _DWORD *))(*(_QWORD *)a1 + 216))(&v55, a1);
  v17 = HIBYTE(v57);
  v18 = SHIBYTE(v57);
  v19 = v55;
  if (SHIBYTE(v57) < 0)
  {
    v17 = v56;
    v16 = (void **)v55;
  }
  v20 = (char *)v16 + v17;
  if (v17 >= 7)
  {
    v21 = v16;
    do
    {
      v22 = (char *)memchr(v21, 83, v17 - 6);
      if (!v22)
        break;
      if (*(_DWORD *)v22 == 1397571923 && *(_DWORD *)(v22 + 3) == 1196315987)
        goto LABEL_25;
      v21 = (void **)(v22 + 1);
      v17 = v20 - (char *)v21;
    }
    while (v20 - (char *)v21 > 6);
  }
  v22 = v20;
LABEL_25:
  v25 = v22 == v20 || v22 - (char *)v16 == -1;
  if ((v18 & 0x80000000) == 0)
  {
    if (v25)
      goto LABEL_33;
LABEL_43:
    sub_1D52850A0(__p, "samsung");
    v27 = a2[1];
    v32 = a2[2];
    if (v27 >= v32)
    {
      v28 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v27 - *a2) >> 3);
      v34 = v28 + 1;
      if (v28 + 1 > 0xAAAAAAAAAAAAAAALL)
        sub_1D5282B8C();
      v35 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v32 - *a2) >> 3);
      if (2 * v35 > v34)
        v34 = 2 * v35;
      if (v35 >= 0x555555555555555)
        v31 = 0xAAAAAAAAAAAAAAALL;
      else
        v31 = v34;
      v59 = a2 + 2;
      if (v31)
        goto LABEL_52;
      v36 = 0;
      goto LABEL_55;
    }
LABEL_44:
    v33 = *(_OWORD *)__p;
    *(_QWORD *)(v27 + 16) = v54;
    *(_OWORD *)v27 = v33;
    a2[1] = v27 + 24;
    goto LABEL_57;
  }
  operator delete(v19);
  if (!v25)
    goto LABEL_43;
LABEL_33:
  sub_1D52850A0(__p, "pentax");
  v27 = a2[1];
  v26 = a2[2];
  if (v27 < v26)
    goto LABEL_44;
  v28 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v27 - *a2) >> 3);
  v29 = v28 + 1;
  if (v28 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_1D5282B8C();
  v30 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v26 - *a2) >> 3);
  if (2 * v30 > v29)
    v29 = 2 * v30;
  if (v30 >= 0x555555555555555)
    v31 = 0xAAAAAAAAAAAAAAALL;
  else
    v31 = v29;
  v59 = a2 + 2;
  if (v31)
  {
LABEL_52:
    v36 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v31);
    goto LABEL_55;
  }
  v36 = 0;
LABEL_55:
  v37 = &v36[24 * v28];
  v55 = v36;
  v56 = (uint64_t)v37;
  v58 = &v36[24 * v31];
  v38 = *(_OWORD *)__p;
  *((_QWORD *)v37 + 2) = v54;
  *(_OWORD *)v37 = v38;
  __p[1] = 0;
  v54 = 0;
  __p[0] = 0;
  v57 = v37 + 24;
  sub_1D5293D58(a2, &v55);
  v39 = a2[1];
  sub_1D5293F24((uint64_t)&v55);
  v40 = SHIBYTE(v54);
  a2[1] = v39;
  if (v40 < 0)
    operator delete(__p[0]);
LABEL_57:
  sub_1D52850A0(__p, __str);
  v42 = a2[1];
  v41 = a2[2];
  if (v42 >= v41)
  {
    v44 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v42 - *a2) >> 3);
    v45 = v44 + 1;
    if (v44 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v46 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v41 - *a2) >> 3);
    if (2 * v46 > v45)
      v45 = 2 * v46;
    if (v46 >= 0x555555555555555)
      v47 = 0xAAAAAAAAAAAAAAALL;
    else
      v47 = v45;
    v59 = a2 + 2;
    if (v47)
      v48 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v47);
    else
      v48 = 0;
    v49 = &v48[24 * v44];
    v55 = v48;
    v56 = (uint64_t)v49;
    v58 = &v48[24 * v47];
    v50 = *(_OWORD *)__p;
    *((_QWORD *)v49 + 2) = v54;
    *(_OWORD *)v49 = v50;
    __p[1] = 0;
    v54 = 0;
    __p[0] = 0;
    v57 = v49 + 24;
    sub_1D5293D58(a2, &v55);
    v51 = a2[1];
    sub_1D5293F24((uint64_t)&v55);
    v52 = SHIBYTE(v54);
    a2[1] = v51;
    if (v52 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v43 = *(_OWORD *)__p;
    *(_QWORD *)(v42 + 16) = v54;
    *(_OWORD *)v42 = v43;
    a2[1] = v42 + 24;
  }
}

void sub_1D52F312C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  sub_1D5293F24((uint64_t)&a16);
  if (a15 < 0)
    operator delete(__p);
  sub_1D5293CCC((void ***)&__p);
  _Unwind_Resume(a1);
}

void sub_1D52F3198(uint64_t a1)
{
  sub_1D52F32D4(a1);
  JUMPOUT(0x1D8271ADCLL);
}

_QWORD *sub_1D52F31BC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  return sub_1D52F325C(a2, *(const void **)(a1 + 1256), *(_QWORD *)(a1 + 1264), *(_QWORD *)(a1 + 1264) - *(_QWORD *)(a1 + 1256));
}

uint64_t sub_1D52F31D8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 1280);
}

_QWORD *sub_1D52F31E0(_QWORD *a1, size_t a2, _BYTE *a3)
{
  size_t v5;
  _BYTE *v6;
  _BYTE *v7;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    v5 = a2;
    sub_1D52853B0(a1, a2);
    v6 = (_BYTE *)a1[1];
    v7 = &v6[v5];
    do
    {
      *v6++ = *a3;
      --v5;
    }
    while (v5);
    a1[1] = v7;
  }
  return a1;
}

void sub_1D52F3240(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_1D52F325C(_QWORD *result, const void *a2, uint64_t a3, size_t __sz)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (__sz)
  {
    v6 = result;
    result = sub_1D52853B0(result, __sz);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1D52F32B8(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D52F32D4(uint64_t a1)
{
  void *v2;

  *(_QWORD *)a1 = off_1E9976340;
  v2 = *(void **)(a1 + 1256);
  if (v2)
  {
    *(_QWORD *)(a1 + 1264) = v2;
    operator delete(v2);
  }
  sub_1D52940F4(a1 + 1232, *(char **)(a1 + 1240));
  if (*(char *)(a1 + 1207) < 0)
    operator delete(*(void **)(a1 + 1184));
  return sub_1D52B2190(a1);
}

void sub_1D52F332C(uint64_t *a1@<X1>, char *a2@<X2>, void **a3@<X3>, void **a4@<X4>, _QWORD *a5@<X8>)
{
  _QWORD *v10;

  v10 = operator new(0x520uLL);
  sub_1D52F33AC((uint64_t)v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;
  sub_1D5285658((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1D52F3398(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52F33AC(uint64_t a1, uint64_t *a2, char *a3, void **a4, void **a5)
{
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = &unk_1E9976690;
  *(_QWORD *)(a1 + 8) = 0;
  sub_1D52A7E98(a1 + 24, a2, *a3, *a4, *a5);
  *(_QWORD *)(a1 + 24) = off_1E9976340;
  *(_QWORD *)(a1 + 1264) = 0;
  *(_OWORD *)(a1 + 1272) = 0u;
  *(_QWORD *)(a1 + 1208) = 0;
  *(_OWORD *)(a1 + 1216) = 0u;
  *(_DWORD *)(a1 + 1232) = 0;
  *(_OWORD *)(a1 + 1240) = 0u;
  *(_QWORD *)(a1 + 1256) = a1 + 1264;
  *(_QWORD *)(a1 + 1296) = 0;
  *(_QWORD *)(a1 + 1288) = 0;
  *(_BYTE *)(a1 + 1304) = 0;
  return a1;
}

void sub_1D52F3430(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1D52F3444(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9976690;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1D52F3458(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E9976690;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8271ADCLL);
}

uint64_t sub_1D52F348C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a1 + 24) + 16))(a1 + 24);
}

id sub_1D52F349C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const char *v28;
  void *v29;
  const char *v30;
  uint64_t v31;
  void *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[11];
  _QWORD v43[2];

  v43[1] = *MEMORY[0x1E0C80C00];
  v5 = *MEMORY[0x1E0CBD388];
  v34 = *MEMORY[0x1E0CBD368];
  v35 = v5;
  v42[0] = MEMORY[0x1E0C9AAB0];
  v42[1] = CFSTR("com.leafamerica.raw-image");
  v6 = *MEMORY[0x1E0CBD380];
  v36 = *MEMORY[0x1E0CBD348];
  v42[2] = CFSTR(".mos.");
  v42[3] = &unk_1E99CAFE0;
  v42[4] = &unk_1E99CAFF8;
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], a2, (uint64_t)sub_1D52806D4, a4, a5, v34, v35, v36, v6, *MEMORY[0x1E0CBD370], *MEMORY[0x1E0CBD378]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v42[5] = v7;
  v37 = *MEMORY[0x1E0CBD330];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v8, (uint64_t)sub_1D52F3750, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v42[6] = v11;
  v38 = *MEMORY[0x1E0CBD350];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v12, (uint64_t)sub_1D52F375C, v13, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v42[7] = v15;
  v39 = *MEMORY[0x1E0CBD338];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v16, (uint64_t)sub_1D52E8DA4, v17, v18);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v42[8] = v19;
  v40 = *MEMORY[0x1E0CBD358];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v20, (uint64_t)sub_1D52F3768, v21, v22);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v42[9] = v23;
  v41 = *MEMORY[0x1E0CBD360];
  objc_msgSend_numberWithUnsignedLong_(MEMORY[0x1E0CB37E8], v24, (uint64_t)sub_1D52F3774, v25, v26);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v42[10] = v27;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v28, (uint64_t)v42, (uint64_t)&v34, 11);
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v43[0] = v29;
  objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v30, (uint64_t)v43, 1, v31);
  v32 = (void *)objc_claimAutoreleasedReturnValue();

  return v32;
}

void sub_1D52F36F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

void sub_1D52F3750(const void *a1, uint64_t a2, uint64_t a3)
{
  sub_1D52E7A20(a1, a2, a3, &unk_1E99766D0);
}

uint64_t sub_1D52F375C(os_signpost_id_t a1)
{
  return sub_1D52E8C40(a1);
}

uint64_t sub_1D52F3768(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1D52E7438(a1, a2, a3, &unk_1E99766D0);
}

uint64_t sub_1D52F3774(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1D52E9A7C(a1, a2, a3, &unk_1E99766D0);
}

void sub_1D52F3780(uint64_t *a1@<X1>, char a2@<W2>, void *a3@<X3>, void *a4@<X4>, _OWORD *a5@<X8>)
{
  __int128 v8;
  id v9;
  id v10;
  char v11;

  v11 = a2;
  v10 = a3;
  v9 = a4;
  sub_1D52F5EB8(a1, &v11, &v10, &v9, &v8);
  *a5 = v8;

}

void sub_1D52F37FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{

  _Unwind_Resume(a1);
}

void sub_1D52F3818(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  const char *v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  unsigned int v9;
  void *v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  const char *v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const char *v32;
  uint64_t v33;
  void *__p[2];
  char v35;
  _QWORD v36[2];

  v36[1] = *MEMORY[0x1E0C80C00];
  sub_1D52A8080((void **)a1);
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) == 0)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a1 + 400))(a1);
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    sub_1D52E1FDC(v2, (void *)*MEMORY[0x1E0CBD090], 0);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    sub_1D52E1FDC(v2, (void *)*MEMORY[0x1E0CBCB50], 0);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(v3, v5, (uint64_t)CFSTR("Leaf"), *MEMORY[0x1E0CBD0B0], v6);
    v9 = *(unsigned __int16 *)(a1 + 1180) - 1;
    if (v9 < 0x14)
      objc_msgSend_setObject_forKeyedSubscript_(v3, v7, *((_QWORD *)&off_1E9976AD8 + (__int16)v9), *MEMORY[0x1E0CBD0B8], v8);
    v10 = (void *)MEMORY[0x1E0CB37E8];
    sub_1D52850A0(__p, "CameraObj_ISO_speed");
    v11 = (*(uint64_t (**)(uint64_t, void **))(*(_QWORD *)a1 + 264))(a1, __p);
    objc_msgSend_numberWithInt_(v10, v12, v11, v13, v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v36[0] = v15;
    objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v16, (uint64_t)v36, 1, v17);
    v18 = (void *)objc_claimAutoreleasedReturnValue();

    if (v35 < 0)
      operator delete(__p[0]);
    objc_msgSend_setObject_forKeyedSubscript_(v4, v19, (uint64_t)v18, *MEMORY[0x1E0CBCBC8], v20);
    if (*(_WORD *)(a1 + 1182))
    {
      objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v21, *(unsigned __int16 *)(a1 + 1182), v22, v23);
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      v25 = *MEMORY[0x1E0CBD0C0];
      objc_msgSend_setObject_forKeyedSubscript_(v2, v26, (uint64_t)v24, *MEMORY[0x1E0CBD0C0], v27);

      objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v28, *(unsigned __int16 *)(a1 + 1182), v29, v30);
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_setObject_forKeyedSubscript_(v3, v32, (uint64_t)v31, v25, v33);

    }
  }
}

void sub_1D52F3A38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

double sub_1D52F3ABC(void **a1, uint64_t a2, int a3)
{
  void **v6;
  void **v7;
  double v8;
  void **v9;
  double v10;
  _BOOL4 v12;
  void *v15[2];
  char v16;
  void *__p[2];
  char v18;

  sub_1D52850A0(v15, "XMP:exif");
  (*((void (**)(void **__return_ptr, void **, void **))*a1 + 49))(__p, a1, v15);
  v6 = sub_1D5294144((uint64_t)(a1 + 36), __p);
  v7 = v6;
  if (a1 + 37 == v6)
    v8 = -1.0;
  else
    v8 = *((double *)v6 + 7);
  if (v18 < 0)
    operator delete(__p[0]);
  if (v16 < 0)
    operator delete(v15[0]);
  if (a1 + 37 == v7)
  {
    if (a3)
    {
      sub_1D52850A0(v15, "XMP:exif");
      (*((void (**)(void **__return_ptr, void **, void **))*a1 + 49))(__p, a1, v15);
      v9 = sub_1D5294144((uint64_t)(a1 + 39), __p);
      if (a1 + 40 == v9)
        v10 = 0.0;
      else
        v10 = *((double *)v9 + 7);
      v12 = v10 > -100.0 && a1 + 40 != v9;
      if (v18 < 0)
        operator delete(__p[0]);
      if (v16 < 0)
      {
        operator delete(v15[0]);
        if (v12)
          return sub_1D52913EC(v10);
      }
      else if (v12)
      {
        return sub_1D52913EC(v10);
      }
    }
    return sub_1D52912CC(a1, a2, a3);
  }
  return v8;
}

void sub_1D52F3C2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0)
    operator delete(__p);
  if (a14 < 0)
    operator delete(a9);
  _Unwind_Resume(exception_object);
}

void sub_1D52F3C68(uint64_t a1, uint64_t a2, unsigned __int16 *a3)
{
  unsigned __int8 *v4;
  int v6;
  BOOL v7;
  void *exception;
  uint64_t v9;
  void *v10;
  void *v11;
  int v12;
  void *v13;
  void **v14;
  int v15;
  char *v16;
  int v17;
  int v18;
  _QWORD *v19;
  void *v20;
  _OWORD *v21;
  int v22;
  _QWORD *v23;
  void *v24;
  int v25;
  _QWORD *v26;
  void *v27;
  int v28;
  _QWORD *v29;
  void *v30;
  _OWORD *v31;
  void *v32;
  _QWORD *v33;
  int v34;
  int v35;
  int v36;
  int v37;
  unsigned int v38;
  int v39;
  int v40;
  signed int v41;
  __int16 v42;
  void *v43[2];
  char v44;
  int v45;
  int v46;
  int v47;
  int v48;
  void *__p[2];
  uint64_t v50;
  void **__src;

  v4 = (unsigned __int8 *)a2;
  sub_1D52ABE88((uint64_t **)a1, a2, a3);
  v6 = *a3;
  if (v6 != 34310)
  {
    if (v6 == 259)
    {
      v7 = a3[1] == 3 && *((_DWORD *)a3 + 1) == 1;
      if (v7)
      {
        LODWORD(v43[0]) = 0;
        sub_1D5285A24(__p, (unsigned int *)v43);
        if (sub_1D52A7E28((uint64_t)a3, (unsigned int *)__p) == 99)
        {
          exception = __cxa_allocate_exception(0x10uLL);
          MEMORY[0x1D8271938](exception, "RawCameraException");
          __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
        }
      }
    }
    return;
  }
  sub_1D52850A0(__p, "IFD0");
  v9 = v4[23];
  if ((v9 & 0x80u) == 0)
    v10 = (void *)v4[23];
  else
    v10 = (void *)*((_QWORD *)v4 + 1);
  v11 = (void *)HIBYTE(v50);
  v12 = SHIBYTE(v50);
  if (v50 < 0)
    v11 = __p[1];
  if (v10 != v11)
    goto LABEL_123;
  v13 = __p[0];
  if (v50 >= 0)
    v14 = __p;
  else
    v14 = (void **)__p[0];
  if ((v9 & 0x80) != 0)
  {
    if (memcmp(*(const void **)v4, v14, *((_QWORD *)v4 + 1)))
    {
LABEL_123:
      if (v12 < 0)
        operator delete(__p[0]);
      return;
    }
  }
  else if (v4[23])
  {
    while (*v4 == *(unsigned __int8 *)v14)
    {
      ++v4;
      v14 = (void **)((char *)v14 + 1);
      if (!--v9)
        goto LABEL_25;
    }
    goto LABEL_123;
  }
LABEL_25:
  v15 = a3[1];
  if (v15 == 2)
  {
    if (v12 < 0)
      operator delete(v13);
  }
  else
  {
    if (v12 < 0)
      operator delete(v13);
    if (v15 != 1)
      return;
  }
  sub_1D52F4610(a1, *((unsigned int *)a3 + 2), *((unsigned int *)a3 + 1), 0);
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) == 0 && *(_BYTE *)(a1 + 1200))
  {
    v48 = 33620224;
    v47 = 65794;
    v46 = 16908289;
    v45 = 16777729;
    LODWORD(__src) = 131074;
    sub_1D52850A0(__p, "IFD0:EXIF");
    v43[0] = __p;
    v16 = (char *)sub_1D52BA2C8((uint64_t **)(a1 + 968), __p, (uint64_t)&unk_1D544A5C4, (_OWORD **)v43);
    sub_1D52B1D94(v16 + 56, (char *)&__src, (uint64_t)&__src + 4, 2uLL);
    if (SHIBYTE(v50) < 0)
      operator delete(__p[0]);
    v17 = (*(_DWORD *)(a1 + 1208) + 360) % 360;
    switch(v17)
    {
      case 90:
        v22 = *(unsigned __int8 *)(a1 + 1201);
        if (v22 == 1)
        {
          if (*(_BYTE *)(a1 + 1202) != 3 || *(_BYTE *)(a1 + 1203) != 2 || *(_BYTE *)(a1 + 1204))
            break;
          __p[0] = 0;
          __p[1] = 0;
          v50 = 0;
          sub_1D52F325C(__p, &v46, (uint64_t)&v47, 4uLL);
          sub_1D52850A0(v43, "IFD0:EXIF");
          __src = v43;
          v23 = sub_1D52BA2C8((uint64_t **)(a1 + 992), v43, (uint64_t)&unk_1D544A5C4, (_OWORD **)&__src);
          v24 = (void *)v23[7];
          if (v24)
          {
            v23[8] = v24;
            operator delete(v24);
            v23[7] = 0;
            v23[8] = 0;
            v23[9] = 0;
          }
          *(_OWORD *)(v23 + 7) = *(_OWORD *)__p;
          v23[9] = v50;
          __p[1] = 0;
          v50 = 0;
          __p[0] = 0;
          if (v44 < 0)
          {
            operator delete(v43[0]);
            if (__p[0])
            {
              __p[1] = __p[0];
              operator delete(__p[0]);
            }
          }
          v22 = *(unsigned __int8 *)(a1 + 1201);
        }
        if (v22 == 2 && !*(_BYTE *)(a1 + 1202) && *(_BYTE *)(a1 + 1203) == 1 && *(_BYTE *)(a1 + 1204) == 3)
        {
          __p[0] = 0;
          __p[1] = 0;
          v50 = 0;
          sub_1D52F325C(__p, &v48, (uint64_t)__p, 4uLL);
          sub_1D52850A0(v43, "IFD0:EXIF");
          __src = v43;
          v21 = sub_1D52BA2C8((uint64_t **)(a1 + 992), v43, (uint64_t)&unk_1D544A5C4, (_OWORD **)&__src);
          goto LABEL_98;
        }
        break;
      case 180:
        v25 = *(unsigned __int8 *)(a1 + 1201);
        if (v25 == 1)
        {
          if (*(_BYTE *)(a1 + 1202) != 3 || *(_BYTE *)(a1 + 1203) != 2 || *(_BYTE *)(a1 + 1204))
            break;
          __p[0] = 0;
          __p[1] = 0;
          v50 = 0;
          sub_1D52F325C(__p, &v47, (uint64_t)&v48, 4uLL);
          sub_1D52850A0(v43, "IFD0:EXIF");
          __src = v43;
          v26 = sub_1D52BA2C8((uint64_t **)(a1 + 992), v43, (uint64_t)&unk_1D544A5C4, (_OWORD **)&__src);
          v27 = (void *)v26[7];
          if (v27)
          {
            v26[8] = v27;
            operator delete(v27);
            v26[7] = 0;
            v26[8] = 0;
            v26[9] = 0;
          }
          *(_OWORD *)(v26 + 7) = *(_OWORD *)__p;
          v26[9] = v50;
          __p[1] = 0;
          v50 = 0;
          __p[0] = 0;
          if (v44 < 0)
          {
            operator delete(v43[0]);
            if (__p[0])
            {
              __p[1] = __p[0];
              operator delete(__p[0]);
            }
          }
          v25 = *(unsigned __int8 *)(a1 + 1201);
        }
        if (v25 == 2 && !*(_BYTE *)(a1 + 1202) && *(_BYTE *)(a1 + 1203) == 1 && *(_BYTE *)(a1 + 1204) == 3)
        {
          __p[0] = 0;
          __p[1] = 0;
          v50 = 0;
          sub_1D52F325C(__p, &v46, (uint64_t)&v47, 4uLL);
          sub_1D52850A0(v43, "IFD0:EXIF");
          __src = v43;
          v21 = sub_1D52BA2C8((uint64_t **)(a1 + 992), v43, (uint64_t)&unk_1D544A5C4, (_OWORD **)&__src);
          goto LABEL_98;
        }
        break;
      case 270:
        v18 = *(unsigned __int8 *)(a1 + 1201);
        if (v18 == 1)
        {
          if (*(_BYTE *)(a1 + 1202) != 3 || *(_BYTE *)(a1 + 1203) != 2 || *(_BYTE *)(a1 + 1204))
            break;
          __p[0] = 0;
          __p[1] = 0;
          v50 = 0;
          sub_1D52F325C(__p, &v45, (uint64_t)&v46, 4uLL);
          sub_1D52850A0(v43, "IFD0:EXIF");
          __src = v43;
          v19 = sub_1D52BA2C8((uint64_t **)(a1 + 992), v43, (uint64_t)&unk_1D544A5C4, (_OWORD **)&__src);
          v20 = (void *)v19[7];
          if (v20)
          {
            v19[8] = v20;
            operator delete(v20);
            v19[7] = 0;
            v19[8] = 0;
            v19[9] = 0;
          }
          *(_OWORD *)(v19 + 7) = *(_OWORD *)__p;
          v19[9] = v50;
          __p[1] = 0;
          v50 = 0;
          __p[0] = 0;
          if (v44 < 0)
          {
            operator delete(v43[0]);
            if (__p[0])
            {
              __p[1] = __p[0];
              operator delete(__p[0]);
            }
          }
          v18 = *(unsigned __int8 *)(a1 + 1201);
        }
        if (v18 == 2 && !*(_BYTE *)(a1 + 1202) && *(_BYTE *)(a1 + 1203) == 1 && *(_BYTE *)(a1 + 1204) == 3)
        {
          __p[0] = 0;
          __p[1] = 0;
          v50 = 0;
          sub_1D52F325C(__p, &v47, (uint64_t)&v48, 4uLL);
          sub_1D52850A0(v43, "IFD0:EXIF");
          __src = v43;
          v21 = sub_1D52BA2C8((uint64_t **)(a1 + 992), v43, (uint64_t)&unk_1D544A5C4, (_OWORD **)&__src);
LABEL_98:
          v31 = v21;
          v33 = (_QWORD *)v21 + 7;
          v32 = (void *)*((_QWORD *)v21 + 7);
          if (v32)
          {
            *((_QWORD *)v31 + 8) = v32;
            operator delete(v32);
            *v33 = 0;
            v33[1] = 0;
            v33[2] = 0;
          }
          *(_OWORD *)((char *)v31 + 56) = *(_OWORD *)__p;
          *((_QWORD *)v31 + 9) = v50;
          __p[1] = 0;
          v50 = 0;
          __p[0] = 0;
          if (v44 < 0)
          {
            operator delete(v43[0]);
            if (__p[0])
            {
              __p[1] = __p[0];
              operator delete(__p[0]);
            }
          }
        }
        break;
      default:
        v28 = *(unsigned __int8 *)(a1 + 1201);
        if (v28 == 1)
        {
          if (*(_BYTE *)(a1 + 1202) != 3 || *(_BYTE *)(a1 + 1203) != 2 || *(_BYTE *)(a1 + 1204))
            break;
          __p[0] = 0;
          __p[1] = 0;
          v50 = 0;
          sub_1D52F325C(__p, &v48, (uint64_t)__p, 4uLL);
          sub_1D52850A0(v43, "IFD0:EXIF");
          __src = v43;
          v29 = sub_1D52BA2C8((uint64_t **)(a1 + 992), v43, (uint64_t)&unk_1D544A5C4, (_OWORD **)&__src);
          v30 = (void *)v29[7];
          if (v30)
          {
            v29[8] = v30;
            operator delete(v30);
            v29[7] = 0;
            v29[8] = 0;
            v29[9] = 0;
          }
          *(_OWORD *)(v29 + 7) = *(_OWORD *)__p;
          v29[9] = v50;
          __p[1] = 0;
          v50 = 0;
          __p[0] = 0;
          if (v44 < 0)
          {
            operator delete(v43[0]);
            if (__p[0])
            {
              __p[1] = __p[0];
              operator delete(__p[0]);
            }
          }
          v28 = *(unsigned __int8 *)(a1 + 1201);
        }
        if (v28 == 2 && !*(_BYTE *)(a1 + 1202) && *(_BYTE *)(a1 + 1203) == 1 && *(_BYTE *)(a1 + 1204) == 3)
        {
          __p[0] = 0;
          __p[1] = 0;
          v50 = 0;
          sub_1D52F325C(__p, &v45, (uint64_t)&v46, 4uLL);
          sub_1D52850A0(v43, "IFD0:EXIF");
          __src = v43;
          v21 = sub_1D52BA2C8((uint64_t **)(a1 + 992), v43, (uint64_t)&unk_1D544A5C4, (_OWORD **)&__src);
          goto LABEL_98;
        }
        break;
    }
  }
  v34 = *(_DWORD *)(a1 + 1212);
  v35 = *(_DWORD *)(a1 + 1208);
  if (!*(_QWORD *)(a1 + 1208))
    return;
  v36 = v35 + ((v34 - v35) & ~((v34 - v35) >> 31));
  if (v36 == v34)
    v37 = *(_DWORD *)(a1 + 1212);
  else
    v37 = v34 + 1;
  v7 = v36 == v34;
  v38 = (v36 - v37) / 0x168u;
  if (!v7)
    ++v38;
  v39 = v34 + 360 * v38;
  if ((v39 - v35) >= 0x167)
    v40 = 359;
  else
    v40 = v39 - v35;
  v41 = v39 - v35 - 360 * ((v39 - v35 - v40 + 359) / 0x168u);
  if (v41 > 179)
  {
    if (v41 == 180)
    {
      v42 = 3;
    }
    else
    {
      if (v41 != 270)
        return;
      v42 = 8;
    }
  }
  else if (v41)
  {
    if (v41 != 90)
      return;
    v42 = 6;
  }
  else
  {
    v42 = 1;
  }
  *(_WORD *)(a1 + 1182) = v42;
}

void sub_1D52F4580(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a15 < 0)
    operator delete(__p);
  if (a18)
    operator delete(a18);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D52F4610(uint64_t a1, uint64_t a2, unint64_t a3, int a4)
{
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  int v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unsigned int v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  int v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  BOOL v37;
  BOOL v38;
  BOOL v45;
  BOOL v49;
  BOOL v51;
  BOOL v53;
  BOOL v55;
  BOOL v57;
  BOOL v59;
  int v61;
  BOOL v62;
  uint64_t v63;
  std::__shared_weak_count *v64;
  unint64_t *v65;
  unint64_t v66;
  uint64_t v67;
  std::__shared_weak_count *v68;
  unint64_t *p_shared_owners;
  unint64_t v70;
  int v71;
  __int16 v72;
  uint64_t v73;
  std::__shared_weak_count *v74;
  unint64_t *v75;
  unint64_t v76;
  uint64_t v77;
  std::__shared_weak_count *v78;
  unint64_t *v79;
  unint64_t v80;
  uint64_t v81;
  std::__shared_weak_count *v82;
  unint64_t *v83;
  unint64_t v84;
  _DWORD *v85;
  char *v86;
  uint64_t v87;
  std::__shared_weak_count *v88;
  unint64_t *v89;
  unint64_t v90;
  uint64_t v91;
  std::__shared_weak_count *v92;
  unint64_t *v93;
  unint64_t v94;
  char *v95;
  void *v96;
  std::__shared_weak_count *v97;
  unint64_t *v98;
  unint64_t v99;
  char v100;
  unsigned int v102;
  void *__p[2];
  char v104;
  void *v105;
  std::__shared_weak_count *v106;
  char v107;
  uint64_t v108[3];
  uint64_t v109;
  void **__src;
  unsigned int v111;
  int v112;
  int v113;
  int v114;
  char v115[16];
  __int128 v116;
  uint64_t v117;
  unint64_t v118;
  _BYTE v119[19];
  char v120;
  uint64_t v121;

  v121 = *MEMORY[0x1E0C80C00];
  v109 = a2;
  sub_1D52917E4(a1, v115);
  sub_1D528594C(&v118, &v109);
  sub_1D5285164(v108, (uint64_t *)v115, (uint64_t)&v118, 0);
  v7 = *(std::__shared_weak_count **)&v115[8];
  if (*(_QWORD *)&v115[8])
  {
    v8 = (unint64_t *)(*(_QWORD *)&v115[8] + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (a3 >= 0x35)
  {
    v102 = a4 + 1;
    while (1)
    {
      sub_1D52917E4(a1, v115);
      v10 = sub_1D52847F8(*(uint64_t *)v115);
      v11 = *(std::__shared_weak_count **)&v115[8];
      if (*(_QWORD *)&v115[8])
      {
        v12 = (unint64_t *)(*(_QWORD *)&v115[8] + 8);
        do
          v13 = __ldaxr(v12);
        while (__stlxr(v13 - 1, v12));
        if (!v13)
        {
          ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
          std::__shared_weak_count::__release_weak(v11);
        }
      }
      if (v10 != 1347114067)
        return sub_1D5285200(v108);
      sub_1D52917E4(a1, v115);
      v14 = *(_QWORD *)v115;
      v118 = 4;
      sub_1D5282FE0(&v105, &v118);
      (*(void (**)(uint64_t, void **, uint64_t))(*(_QWORD *)v14 + 40))(v14, &v105, 1);
      v15 = *(std::__shared_weak_count **)&v115[8];
      if (*(_QWORD *)&v115[8])
      {
        v16 = (unint64_t *)(*(_QWORD *)&v115[8] + 8);
        do
          v17 = __ldaxr(v16);
        while (__stlxr(v17 - 1, v16));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      sub_1D52917E4(a1, v115);
      (*(void (**)(_QWORD, unint64_t *, uint64_t))(**(_QWORD **)v115 + 32))(*(_QWORD *)v115, &v118, 32);
      v18 = *(std::__shared_weak_count **)&v115[8];
      if (*(_QWORD *)&v115[8])
      {
        v19 = (unint64_t *)(*(_QWORD *)&v115[8] + 8);
        do
          v20 = __ldaxr(v19);
        while (__stlxr(v20 - 1, v19));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
          std::__shared_weak_count::__release_weak(v18);
        }
      }
      v120 = 0;
      sub_1D52917E4(a1, v115);
      v21 = *(_QWORD *)v115;
      v105 = (void *)8;
      sub_1D5282FE0(__p, (unint64_t *)&v105);
      (*(void (**)(uint64_t, void **, uint64_t))(*(_QWORD *)v21 + 40))(v21, __p, 1);
      v22 = *(std::__shared_weak_count **)&v115[8];
      if (*(_QWORD *)&v115[8])
      {
        v23 = (unint64_t *)(*(_QWORD *)&v115[8] + 8);
        do
          v24 = __ldaxr(v23);
        while (__stlxr(v24 - 1, v23));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      sub_1D52917E4(a1, v115);
      v25 = sub_1D52847F8(*(uint64_t *)v115);
      v26 = *(std::__shared_weak_count **)&v115[8];
      if (*(_QWORD *)&v115[8])
      {
        v27 = (unint64_t *)(*(_QWORD *)&v115[8] + 8);
        do
          v28 = __ldaxr(v27);
        while (__stlxr(v28 - 1, v27));
        if (!v28)
        {
          ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
          std::__shared_weak_count::__release_weak(v26);
        }
      }
      sub_1D52917E4(a1, v115);
      v29 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)v115 + 48))(*(_QWORD *)v115);
      v30 = *(std::__shared_weak_count **)&v115[8];
      if (*(_QWORD *)&v115[8])
      {
        v31 = (unint64_t *)(*(_QWORD *)&v115[8] + 8);
        do
          v32 = __ldaxr(v31);
        while (__stlxr(v32 - 1, v31));
        if (!v32)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      v117 = 0;
      *(_OWORD *)v115 = 0u;
      v116 = 0u;
      v33 = v29;
      v34 = v25;
      if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) == 0)
      {
        v35 = v118 == 0x6A624F746F6F6853 && *(_QWORD *)v119 == 0x79745F6B6361625FLL;
        if (v35 && *(_QWORD *)&v119[3] == 0x657079745F6B63)
        {
          LODWORD(__p[0]) = 0;
          sub_1D52917E4(a1, &v105);
          if (v25 >= 0x27uLL)
            v67 = 39;
          else
            v67 = v25;
          (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)v105 + 32))(v105, v115, v67);
          HIBYTE(v117) = 0;
          v68 = v106;
          if (v106)
          {
            p_shared_owners = (unint64_t *)&v106->__shared_owners_;
            do
              v70 = __ldaxr(p_shared_owners);
            while (__stlxr(v70 - 1, p_shared_owners));
            if (!v70)
            {
              ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
              std::__shared_weak_count::__release_weak(v68);
            }
          }
          v71 = sscanf(v115, "%u", __p);
          v62 = 0;
          v72 = (__int16)__p[0];
          if (v71 != 1)
            v72 = 0;
          *(_WORD *)(a1 + 1180) = v72;
          *(_BYTE *)(a1 + 1216) = 1;
          goto LABEL_233;
        }
      }
      if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) == 0)
      {
        v37 = v118 == 0x666F725074706143 && *(_QWORD *)v119 == 0x5F7265626D756E5FLL;
        v38 = v37 && *(_QWORD *)&v119[8] == 0x656E616C705F666FLL;
        if (v38 && *(unsigned __int16 *)&v119[16] == 115)
        {
          LODWORD(__p[0]) = 0;
          sub_1D52917E4(a1, &v105);
          if (v25 >= 0x27uLL)
            v73 = 39;
          else
            v73 = v25;
          (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)v105 + 32))(v105, v115, v73);
          HIBYTE(v117) = 0;
          v74 = v106;
          if (v106)
          {
            v75 = (unint64_t *)&v106->__shared_owners_;
            do
              v76 = __ldaxr(v75);
            while (__stlxr(v76 - 1, v75));
            if (!v76)
            {
              ((void (*)(std::__shared_weak_count *))v74->__on_zero_shared)(v74);
              std::__shared_weak_count::__release_weak(v74);
            }
          }
          if (sscanf(v115, "%u", __p) == 1 && LODWORD(__p[0]) >= 2)
            *(_WORD *)(a1 + 1180) = 2;
          v62 = 0;
          *(_BYTE *)(a1 + 1217) = 1;
          goto LABEL_233;
        }
      }
      if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) == 0
        && !(v118 ^ 0x5F6A624F7475654ELL | *(_QWORD *)v119 ^ 0x736C61727475656ELL | v119[8]))
      {
        sub_1D52917E4(a1, &v105);
        if (v25 >= 0x27uLL)
          v81 = 39;
        else
          v81 = v25;
        (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)v105 + 32))(v105, v115, v81);
        HIBYTE(v117) = 0;
        v82 = v106;
        if (v106)
        {
          v83 = (unint64_t *)&v106->__shared_owners_;
          do
            v84 = __ldaxr(v83);
          while (__stlxr(v84 - 1, v83));
          if (!v84)
          {
            ((void (*)(std::__shared_weak_count *))v82->__on_zero_shared)(v82);
            std::__shared_weak_count::__release_weak(v82);
          }
        }
        if (sscanf(v115, "%d%d%d%d", &v111, &v112, &v113, &v114) == 4)
        {
          LODWORD(__p[0]) = 0;
          sub_1D52F5E38(&v105, 4uLL, __p);
          v85 = v105;
          *(_DWORD *)v105 = v112;
          v85[1] = v113;
          v85[2] = v113;
          v85[3] = v114;
          sub_1D52850A0(__p, "NeutObj_neutrals");
          __src = __p;
          v86 = (char *)sub_1D52BA2C8((uint64_t **)(a1 + 120), __p, (uint64_t)&unk_1D544A5C4, (_OWORD **)&__src) + 56;
          if (v86 != (char *)&v105)
            sub_1D5282A44(v86, (char *)v105, (uint64_t)v106, ((char *)v106 - (_BYTE *)v105) >> 2);
          if (v104 < 0)
            operator delete(__p[0]);
          if (v105)
          {
            v106 = (std::__shared_weak_count *)v105;
            operator delete(v105);
          }
        }
        v62 = 0;
        *(_BYTE *)(a1 + 1218) = 1;
        goto LABEL_233;
      }
      if (v118 == 0x666F725074706143
        && *(_QWORD *)v119 == 0x7461645F7761725FLL
        && *(_QWORD *)&v119[8] == 0x697461746F725F61
        && *(_QWORD *)&v119[11] == 0x6E6F697461746FLL)
      {
        sub_1D52917E4(a1, &v105);
        if (v25 >= 0x27uLL)
          v63 = 39;
        else
          v63 = v25;
        (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)v105 + 32))(v105, v115, v63);
        HIBYTE(v117) = 0;
        v64 = v106;
        if (v106)
        {
          v65 = (unint64_t *)&v106->__shared_owners_;
          do
            v66 = __ldaxr(v65);
          while (__stlxr(v66 - 1, v65));
          if (!v66)
          {
            ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
            std::__shared_weak_count::__release_weak(v64);
          }
        }
        sscanf(v115, "%d", a1 + 1208);
        v62 = 0;
        *(_BYTE *)(a1 + 1219) = 1;
        goto LABEL_233;
      }
      if (v118 == 0x5F666F7250676D49
        && *(_QWORD *)v119 == 0x6E6F697461746F72
        && *(_QWORD *)&v119[7] == 0x656C676E615F6ELL)
      {
        sub_1D52917E4(a1, &v105);
        if (v25 >= 0x27uLL)
          v77 = 39;
        else
          v77 = v25;
        (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)v105 + 32))(v105, v115, v77);
        HIBYTE(v117) = 0;
        v78 = v106;
        if (v106)
        {
          v79 = (unint64_t *)&v106->__shared_owners_;
          do
            v80 = __ldaxr(v79);
          while (__stlxr(v80 - 1, v79));
          if (!v80)
          {
            ((void (*)(std::__shared_weak_count *))v78->__on_zero_shared)(v78);
            std::__shared_weak_count::__release_weak(v78);
          }
        }
        sscanf(v115, "%d", a1 + 1212);
        v62 = 0;
        *(_BYTE *)(a1 + 1220) = 1;
        goto LABEL_233;
      }
      if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) == 0)
      {
        v45 = v118 == 0x666F725074706143 && *(_QWORD *)v119 == 0x5F636961736F6D5FLL;
        if (v45 && *(_QWORD *)&v119[8] == 0x6E726574746170)
        {
          sub_1D52917E4(a1, &v105);
          if (v25 >= 0x27uLL)
            v87 = 39;
          else
            v87 = v25;
          (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)v105 + 32))(v105, v115, v87);
          HIBYTE(v117) = 0;
          v88 = v106;
          if (v106)
          {
            v89 = (unint64_t *)&v106->__shared_owners_;
            do
              v90 = __ldaxr(v89);
            while (__stlxr(v90 - 1, v89));
            if (!v90)
            {
              ((void (*)(std::__shared_weak_count *))v88->__on_zero_shared)(v88);
              std::__shared_weak_count::__release_weak(v88);
            }
          }
          v62 = 0;
          *(_BYTE *)(a1 + 1201) = v115[0] - 48;
          *(_BYTE *)(a1 + 1202) = v115[2] - 48;
          *(_BYTE *)(a1 + 1203) = v115[4] - 48;
          *(_BYTE *)(a1 + 1204) = v115[6] - 48;
          *(_BYTE *)(a1 + 1200) = 1;
          *(_BYTE *)(a1 + 1221) = 1;
          goto LABEL_233;
        }
      }
      if (v118 == 0x6572705F4745504ALL
        && *(_QWORD *)v119 == 0x7461645F77656976
        && *(unsigned __int16 *)&v119[8] == 97)
      {
        v62 = 0;
        *(_QWORD *)(a1 + 1184) = v33;
        *(_QWORD *)(a1 + 1192) = v25;
        *(_BYTE *)(a1 + 1222) = 1;
        goto LABEL_233;
      }
      if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1) & 1) == 0)
      {
        v49 = v118 == 0x624F6172656D6143 && *(_QWORD *)v119 == 0x70735F4F53495F6ALL;
        if (v49 && *(_DWORD *)&v119[8] == 6579557)
        {
          v111 = 0;
          sub_1D52917E4(a1, &v105);
          if (v25 >= 0x27uLL)
            v91 = 39;
          else
            v91 = v25;
          (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)v105 + 32))(v105, v115, v91);
          HIBYTE(v117) = 0;
          v92 = v106;
          if (v106)
          {
            v93 = (unint64_t *)&v106->__shared_owners_;
            do
              v94 = __ldaxr(v93);
            while (__stlxr(v94 - 1, v93));
            if (!v94)
            {
              ((void (*)(std::__shared_weak_count *))v92->__on_zero_shared)(v92);
              std::__shared_weak_count::__release_weak(v92);
            }
          }
          if (sscanf(v115, "%u", &v111) == 1 && v111 <= 6)
          {
            LODWORD(__src) = dword_1D5449788[v111];
            sub_1D52850A0(&v105, "CameraObj_ISO_speed");
            __p[0] = &v105;
            v95 = (char *)sub_1D52BA2C8((uint64_t **)(a1 + 192), &v105, (uint64_t)&unk_1D544A5C4, (_OWORD **)__p);
            sub_1D5282A44(v95 + 56, (char *)&__src, (uint64_t)&__src + 4, 1uLL);
            if (v107 < 0)
              operator delete(v105);
          }
          v62 = 0;
          *(_BYTE *)(a1 + 1223) = 1;
          goto LABEL_233;
        }
      }
      v51 = v118 == 0x4F65727574706143 && *(_QWORD *)v119 == 0x63656C65735F6A62;
      if (!v51 || *(_QWORD *)&v119[5] != 0x6E6F697463656CLL)
      {
        v53 = v118 == 0x4F65727574706143 && *(_QWORD *)v119 == 0x5F656E6F745F6A62;
        if (!v53 || *(_QWORD *)&v119[6] != 0x65767275635F65)
        {
          v55 = v118 == 0x4F65727574706143 && *(_QWORD *)v119 == 0x70726168735F6A62;
          if (!v55 || *(_QWORD *)&v119[5] != 0x7373656E707261)
          {
            v57 = v118 == 0x6A624F746F6F6853 && *(_QWORD *)v119 == 0x735F726F6C6F635FLL;
            if (!v57 || *(_QWORD *)&v119[5] != 0x70757465735F72)
            {
              v59 = v118 == 0x6A624F746F6F6853 && *(_QWORD *)v119 == 0x65735F657661735FLL;
              if (!v59 || *(_DWORD *)&v119[8] != 7370100)
                break;
            }
          }
        }
      }
LABEL_232:
      v62 = 0;
LABEL_233:
      sub_1D52917E4(a1, &v105);
      v96 = v105;
      __p[0] = (void *)(v33 + v34);
      sub_1D528594C(&v111, (uint64_t *)__p);
      (*(void (**)(void *, unsigned int *, _QWORD))(*(_QWORD *)v96 + 40))(v96, &v111, 0);
      v97 = v106;
      if (v106)
      {
        v98 = (unint64_t *)&v106->__shared_owners_;
        do
          v99 = __ldaxr(v98);
        while (__stlxr(v99 - 1, v98));
        if (!v99)
        {
          ((void (*)(std::__shared_weak_count *))v97->__on_zero_shared)(v97);
          std::__shared_weak_count::__release_weak(v97);
        }
      }
      a3 = a3 - 52 - v34;
      v100 = a3 < 0x35 || v62;
      if ((v100 & 1) != 0)
        return sub_1D5285200(v108);
    }
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1))
    {
      if (*(_BYTE *)(a1 + 1219) && *(_BYTE *)(a1 + 1220))
      {
        v61 = *(unsigned __int8 *)(a1 + 1222);
LABEL_139:
        v62 = v61 != 0;
        goto LABEL_229;
      }
    }
    else if (*(_BYTE *)(a1 + 1216)
           && *(_BYTE *)(a1 + 1217)
           && *(_BYTE *)(a1 + 1218)
           && *(_BYTE *)(a1 + 1219)
           && *(_BYTE *)(a1 + 1220)
           && *(_BYTE *)(a1 + 1221)
           && *(_BYTE *)(a1 + 1222))
    {
      v61 = *(unsigned __int8 *)(a1 + 1223);
      goto LABEL_139;
    }
    v62 = 0;
LABEL_229:
    if (v62 || v25 < 0x35)
      goto LABEL_233;
    sub_1D52F4610(a1, v33, v25, v102);
    goto LABEL_232;
  }
  return sub_1D5285200(v108);
}

void sub_1D52F5408(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35)
{
  sub_1D5285200(&a35);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D52F5518@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  int v2;
  char *v4;

  v2 = *(unsigned __int16 *)(a1 + 1180);
  if (v2 == 35 || v2 == 32)
    v4 = "Mamiya";
  else
    v4 = "Leaf";
  return sub_1D52850A0(a2, v4);
}

_QWORD *sub_1D52F5544@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unsigned int v4;
  char *v5;

  v4 = *(unsigned __int16 *)(a1 + 1180) - 1;
  if (v4 > 0x22)
    v5 = "";
  else
    v5 = off_1E9976B78[(__int16)v4];
  return sub_1D52850A0(a2, v5);
}

uint64_t sub_1D52F557C(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 1180);
}

uint64_t sub_1D52F5584(uint64_t a1)
{
  uint64_t v2;
  void *__p[2];
  char v5;

  sub_1D52850A0(__p, "IFD0");
  v2 = sub_1D52B0BBC(a1, __p);
  if (v5 < 0)
    operator delete(__p[0]);
  return v2;
}

void sub_1D52F55DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D52F55F8(uint64_t a1)
{
  uint64_t v2;
  void *__p[2];
  char v5;

  sub_1D52850A0(__p, "IFD0");
  v2 = sub_1D52B0C2C(a1, __p);
  if (v5 < 0)
    operator delete(__p[0]);
  return v2;
}

void sub_1D52F5650(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D52F566C(uint64_t a1)
{
  _BOOL4 v2;
  void *__p[2];
  char v5;
  unsigned int v6;

  v6 = 1;
  sub_1D52850A0(__p, "IFD0");
  v2 = sub_1D52A89D8(a1, __p, &v6);
  if (v5 < 0)
    operator delete(__p[0]);
  if (v2)
    return v6;
  else
    return 1;
}

void sub_1D52F56D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

unint64_t sub_1D52F56F4(uint64_t a1)
{
  unint64_t v2;
  void *__p[2];
  char v5;

  sub_1D52850A0(__p, "IFD0");
  v2 = sub_1D52B0D58(a1, __p);
  if (v5 < 0)
    operator delete(__p[0]);
  return v2;
}

void sub_1D52F574C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1D52F5768(uint64_t a1@<X0>, char **a2@<X8>)
{
  int v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  unsigned int v8;
  int v9;
  __int128 v10;

  sub_1D52B08D0(a1, (uint64_t)a2);
  sub_1D528594C(&v9, (uint64_t *)(a1 + 1184));
  sub_1D528304C(&v8, (unint64_t *)(a1 + 1192));
  sub_1D5291E58(a1, &v9, &v8, 1, &v10);
  if ((_QWORD)v10)
  {
    v4 = *(unsigned __int16 *)(a1 + 1182);
    if (*(_WORD *)(a1 + 1182))
    {
      if (v4 == 6)
      {
        v4 = 8;
      }
      else if (v4 == 8)
      {
        v4 = 6;
      }
    }
    *(_DWORD *)(v10 + 20) = v4;
    sub_1D52B0A7C(a2, &v10);
  }
  v5 = (std::__shared_weak_count *)*((_QWORD *)&v10 + 1);
  if (*((_QWORD *)&v10 + 1))
  {
    v6 = (unint64_t *)(*((_QWORD *)&v10 + 1) + 8);
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
}

void sub_1D52F5838(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_1D5282EB4((uint64_t)va);
  sub_1D5282E44((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1D52F5864(uint64_t a1)
{
  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 440))(a1);
  return 0x400000004;
}

uint64_t sub_1D52F5898@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  __int128 v17;

  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 536))(a1);
  if ((_DWORD)result == 7)
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)a1 + 384))(&v15, a1);
    v14 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 424))(a1);
    v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 440))(a1);
    *(_QWORD *)&v12 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 448))(a1);
    *((_QWORD *)&v12 + 1) = v5;
    sub_1D52F6008(&v15, (unint64_t *)&v14, &v13, &v12, &v17);
    v6 = v16;
    if (v16)
    {
      p_shared_owners = (unint64_t *)&v16->__shared_owners_;
      do
        v8 = __ldaxr(p_shared_owners);
      while (__stlxr(v8 - 1, p_shared_owners));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
    v9 = v17;
    v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 432))(a1);
    sub_1D528304C(&v12, (unint64_t *)&v15);
    (*(void (**)(uint64_t, __int128 *))(*(_QWORD *)v9 + 32))(v9, &v12);
    v10 = v17;
    v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 104))(a1);
    result = sub_1D530CBD8(v10, v11);
    *(_OWORD *)a2 = v17;
  }
  else
  {
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
  }
  return result;
}

void sub_1D52F59E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_1D5282EB4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1D52F5A18(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int v3;
  unint64_t v4;
  unint64_t v5;
  __int128 v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  int v27;
  unint64_t v28;
  unint64_t v29;
  __int128 v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  __int128 v37;
  uint64_t v38;
  int v39;
  void *__p[2];
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t *v46;
  char __str[16];
  uint64_t v48;

  v48 = *MEMORY[0x1E0C80C00];
  v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 784))(a1);
  snprintf(__str, 0x10uLL, "%u", v3);
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  sub_1D52850A0(__p, "mos");
  v4 = a2[2];
  v5 = a2[1];
  if (v5 >= v4)
  {
    v7 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *a2) >> 3);
    v8 = v7 + 1;
    if (v7 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v9 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v4 - *a2) >> 3);
    if (2 * v9 > v8)
      v8 = 2 * v9;
    if (v9 >= 0x555555555555555)
      v10 = 0xAAAAAAAAAAAAAAALL;
    else
      v10 = v8;
    v46 = a2 + 2;
    if (v10)
      v11 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v10);
    else
      v11 = 0;
    v12 = &v11[24 * v7];
    v42 = v11;
    v43 = v12;
    v45 = &v11[24 * v10];
    v13 = *(_OWORD *)__p;
    *((_QWORD *)v12 + 2) = v41;
    *(_OWORD *)v12 = v13;
    __p[1] = 0;
    v41 = 0;
    __p[0] = 0;
    v44 = v12 + 24;
    sub_1D5293D58(a2, &v42);
    v14 = a2[1];
    sub_1D5293F24((uint64_t)&v42);
    v15 = SHIBYTE(v41);
    a2[1] = v14;
    if (v15 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v6 = *(_OWORD *)__p;
    *(_QWORD *)(v5 + 16) = v41;
    *(_OWORD *)v5 = v6;
    a2[1] = v5 + 24;
  }
  sub_1D52850A0(__p, "leaf");
  v17 = a2[1];
  v16 = a2[2];
  if (v17 >= v16)
  {
    v19 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v17 - *a2) >> 3);
    v20 = v19 + 1;
    if (v19 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v21 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v16 - *a2) >> 3);
    if (2 * v21 > v20)
      v20 = 2 * v21;
    if (v21 >= 0x555555555555555)
      v22 = 0xAAAAAAAAAAAAAAALL;
    else
      v22 = v20;
    v46 = a2 + 2;
    if (v22)
      v23 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v22);
    else
      v23 = 0;
    v24 = &v23[24 * v19];
    v42 = v23;
    v43 = v24;
    v45 = &v23[24 * v22];
    v25 = *(_OWORD *)__p;
    *((_QWORD *)v24 + 2) = v41;
    *(_OWORD *)v24 = v25;
    __p[1] = 0;
    v41 = 0;
    __p[0] = 0;
    v44 = v24 + 24;
    sub_1D5293D58(a2, &v42);
    v26 = a2[1];
    sub_1D5293F24((uint64_t)&v42);
    v27 = SHIBYTE(v41);
    a2[1] = v26;
    if (v27 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v18 = *(_OWORD *)__p;
    *(_QWORD *)(v17 + 16) = v41;
    *(_OWORD *)v17 = v18;
    a2[1] = v17 + 24;
  }
  sub_1D52850A0(__p, __str);
  v29 = a2[1];
  v28 = a2[2];
  if (v29 >= v28)
  {
    v31 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v29 - *a2) >> 3);
    v32 = v31 + 1;
    if (v31 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_1D5282B8C();
    v33 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v28 - *a2) >> 3);
    if (2 * v33 > v32)
      v32 = 2 * v33;
    if (v33 >= 0x555555555555555)
      v34 = 0xAAAAAAAAAAAAAAALL;
    else
      v34 = v32;
    v46 = a2 + 2;
    if (v34)
      v35 = (char *)sub_1D5293DCC((uint64_t)(a2 + 2), v34);
    else
      v35 = 0;
    v36 = &v35[24 * v31];
    v42 = v35;
    v43 = v36;
    v45 = &v35[24 * v34];
    v37 = *(_OWORD *)__p;
    *((_QWORD *)v36 + 2) = v41;
    *(_OWORD *)v36 = v37;
    __p[1] = 0;
    v41 = 0;
    __p[0] = 0;
    v44 = v36 + 24;
    sub_1D5293D58(a2, &v42);
    v38 = a2[1];
    sub_1D5293F24((uint64_t)&v42);
    v39 = SHIBYTE(v41);
    a2[1] = v38;
    if (v39 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v30 = *(_OWORD *)__p;
    *(_QWORD *)(v29 + 16) = v41;
    *(_OWORD *)v29 = v30;
    a2[1] = v29 + 24;
  }
}

void sub_1D52F5DBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  sub_1D5293F24((uint64_t)&a16);
  if (a15 < 0)
    operator delete(__p);
  sub_1D5293CCC((void ***)&__p);
  _Unwind_Resume(a1);
}

void sub_1D52F5E14(uint64_t a1)
{
  sub_1D52B2190(a1);
  JUMPOUT(0x1D8271ADCLL);
}

_QWORD *sub_1D52F5E38(_QWORD *a1, unint64_t a2, _DWORD *a3)
{
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_1D5282B4C(a1, a2);
    v6 = (_DWORD *)a1[1];
    v7 = &v6[a2];
    v8 = 4 * a2;
    do
    {
      *v6++ = *a3;
      v8 -= 4;
    }
    while (v8);
    a1[1] = v7;
  }
  return a1;
}

